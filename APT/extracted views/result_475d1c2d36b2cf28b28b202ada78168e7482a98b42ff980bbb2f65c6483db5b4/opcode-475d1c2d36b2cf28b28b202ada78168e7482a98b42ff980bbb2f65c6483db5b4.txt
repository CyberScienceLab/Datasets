fsubl sbb xor ficom fadd jbe mov jg jg fst rex.WRX mov or rex.W add jl mov (bad) (bad) jl (bad) rex.WR rex.WRXB fwait lods cmp mov outsl add cmp sub cmp (bad) pop (bad) sti mov loop stos pop flds cltd out fs addr32 pop iret in cld mov rclb cmp (bad) imul xchg bsr (bad) and lods sbb rex.WB (bad) (bad) rorl pop add test retq or sub lods lods test jb mov sbb rex.RX out jmp imul rex.XB pop maskmovq idivl mov rex.RXB mov fmuls pop mov retq rex.WXB and cmp orb (bad) mov and lods pop add pop jmp jmpq xchg jmpq jmpq je cmc sub test bt bt cmp jmpq (bad) rex.WRXB rex.RXB retq nop rex.WR (bad) lock rol hlt clc jge jno fildl data16 sub add (bad) fisubl xchg mov rex.WRX pop (bad) rex.RX movsb xchg push (bad) scas enterq rex movabs mov adc mov cmpsl push push cs rex.RB cld stos add push push rex.RB mov pop movabs (bad) sti xchg pushq sub (bad) (bad) (bad) (bad) (bad) mov mov (bad) jmpq nop push xor (bad) pop or xchg rex.RB out mov sbb mov jmpq cli add shrb (bad) push std fidiv jmp (bad) lret scas loop (bad) xor adc mov xchg (bad) (bad) rex.WR bsf ror push setno dec mov neg movzbw sub lea bswap movsbw lea jmpq add not bsr mov stc cmp bt and bt cmc test add test jmpq bt add jmpq jrcxz fwait push insl mov icebp jne (bad) cmp test cmp rex.X cltd mov js (bad) (bad) mov jl lret icebp cli jrcxz add cmc mov cmc (bad) scas sub fcoms fisttp (bad) leaveq iret movabs and shlb add mov (bad) (bad) sti imulb sarl xchg or sub pop (bad) (bad) (bad) and xchg rex.R shl mulb divb xchg lahf jae xchg shll icebp out mov mov (bad) xor mov (bad) xor in add add (bad) imul add movabs cwtl mov lods add mov push (bad) (bad) mov sub lods movsb lret (bad) rcll lahf int sti out sar xor mov rex (bad) lock imul adc mov ja bt add jmpq ja shr sub shrd add mov cmc mov jmpq rex.XB xchg xchg push cltd mov jns out hlt (bad) or insl stc mov std lods or (bad) adc cmpl insb or test (bad) push xor lret pop mov jne orl lea popfq retq icebp (bad) icebp je jo and je fistpl xchg jnp (bad) std addb mov icebp pop rol out out (bad) (bad) (bad) sti lea pop mov (bad) (bad) (bad) (bad) sub jne push pop mov (bad) (bad) (bad) ljmp movsb (bad) rex.WX (bad) test mov std or imul and pop rex insb cmp mov mov add jge xchg ja jbe or fadds lea sti adc jae movabs sbb adc xor pop nop sbb add rorb sbbl nop jp jmpq xchg in out (bad) (bad) sbb pop cmp loope rex.WRB fldcw imul (bad) pop ds fdivrs icebp push (bad) imul movabs mov out (bad) (bad) (bad) decb adc xchg jno (bad) (bad) sbb rex.WXB sbb decl lret rorb xchg andl (bad) cmpl lock and and or int3 fsubrs rex.WRXB sub rex.WX enterq add insb add or (bad) pop lea mov jae (bad) (bad) ss outsb rex.WR xchg rex.WRB test cmp mov (bad) push xchg sbb fs (bad) sub add jl xchg add fmul sub jo jns addl push scas mov sub cmp cmpsl int (bad) adc rorl push or loop xor xor (bad) (bad) std js cmp (bad) iret mov mov fidiv pop lahf test movslq (bad) (bad) (bad) pushq sbb xchg rex.WRB rex.RXB mov mov lret cld rex.WR (bad) mov (bad) mov (bad) push je (bad) xlat add add or in jp push gs fdivr pushfq out fbld mov xchg adc pushq fidivrl or insb xor stos sti push out pop adc xor (bad) jmp outsb int js fwait pop testb sahf scas jle jno rex.B lock out mov lret sar bt add sets lea sub movsbw mov cmc bt stc clc cmpb jmpq je jmpq je movzbq xchg lea lea movsbw not movzwl jmpq jne xor bswap jmpq jmpq jmpq jmpq xchg popfq je pop cmp mov xor xchg pushfq rex.WX mov movsb xor rex.WX test pushq xor cwtl jnp mov (bad) test or or sti pop (bad) mov (bad) (bad) fyl2x mov sub (bad) std out rex.B add mov (bad) (bad) (bad) (bad) dec (bad) mov mov jns (bad) out pop rex.XB ss ss mov jp adc repnz xchg in push movsl (bad) jmp jne int (bad) cmp jnp cmpsb mov adc mov cmp xchg clc ss xchg fwait not movsl andl (bad) repnz adc jmpq jmpq mov pop mov mov andb movsl pushq mov fwait mov sub xchg xor (bad) (bad) mull rex movsb rex.WXB (bad) insl add push addr32 sub ja xchg repnz std fwait cmpsl sub lea subl push add jp (bad) leaveq mov jg jae push rex.RX sbb out cli rex.WRB loop fstps fimul rex.WX and pextrw push cmp (bad) (bad) cld (bad) ja add dec adc rex (bad) fwait rcll rex.WRXB mov add or std mov (bad) mov add mov (bad) movabs mov lock sbb pop (bad) loope xlat mov jg pop xor (bad) sbb mov (bad) add incl cmc test jmpq je cmc sub test stc test clc cmp jmpq jmpq add rex.RXB gs gs imul cmp shrb in lahf cmp lock (bad) (bad) (bad) clc cwtl sbb rex.WXB sbb movabs iret sbb mov sar (bad) (bad) (bad) (bad) sub (bad) (bad) cmp add decb stc jmpq pop leaveq cld movabs or lock cltd jmp shlb and mov (bad) (bad) (bad) std (bad) xchg xchg callq add jbe (bad) mov scas xchg adc mov (bad) sbb or int3 movsb mov out sub adc movsl out rex.RB imul (bad) test (bad) add sub test cmp repnz jmpq cli ficom orl retq andb gs xor loop add (bad) (bad) cmp shl fs (bad) in test jg adc sahf hlt out fimul sub div and cmp xor loop data16 movsb stos std test cs push jrcxz and (bad) (bad) (bad) sti pop callq (bad) (bad) std out xchg data16 sub or insl cmc mov rex.RX or rex.WB std es add mov dec nop xor add incl pop rex.WX rolb lods shlb loopne add sbb rex.WX cli and int enterq xor data16 (bad) pop rex.WR mov xchg mov push cli jae test cmp bt stc sub jl callq jmpq movabs adc jno add fwait and (bad) scas jp pop rex pop roll pop adc xchg mov fucomp callq popfq cld stos (bad) sbb hlt movabs mov (bad) xchg pop mov xchg add loopne rex.RX insl sub and pushq rex.RB vpcomud insl in idiv (bad) (bad) cld cltd or ss (bad) (bad) ljmp stos (bad) add add push lret rorb mov adc clc jae test add cwtl es xchg mov sti cld xor adc ja mov xchg push sbb pushfq sub std xchg mov rex.WRB pop sti sarb mov in imul lods pop add callq bswap neg movsbw add or movzbw jns dec mov test clc cmpb jmpq jrcxz in gs (bad) sbb (bad) in (bad) or cltd rex.RX sahf std (bad) or roll lret or (bad) xor sbb mov divb and (bad) mov (bad) cmpsb (bad) (bad) cli adc cmp loope movsb mov cwtl xor rex.RB rex.XB movsb add (bad) (bad) (bad) std (bad) xor mov (bad) (bad) loop (bad) std mov rex.R rex.WRX fldl rex.RB gs sub divb rex.W (bad) fmull shrl xchg sahf push (bad) pop movslq mov add stos rex.RX (bad) rol fildll cmpsl adc add mov jl rex.WRXB lock jae xchg ljmp xor fnstsw adc rex.RX push icebp rex.WRB xchg scas sbb xor and mov adc cmc or (bad) xchg test je sbb (bad) mov cs iret and mov mov popfq push js outsb rex.WRXB es rex.RB xor (bad) enterq in scas (bad) out add cli icebp mov (bad) pop jo mov nop jl xor adc xchg sti scas subl (bad) retq push sbb movsl rex.WB movabs cmp (bad) shrb mov test rex.R jg mov (bad) clc hlt callq xor fdiv pop mov push cmp mov sbb rex.WX xlat iret test insb mov (bad) iret (bad) (bad) (bad) (bad) (bad) sarl adc clc (bad) (bad) (bad) decb (bad) (bad) (bad) incl sbb hlt movabs push or pop in mov (bad) jne outsb mov repnz sarb (bad) fistpll pushq fcomi (bad) (bad) xchg adc loope icebp and (bad) leavew retq hlt xchg leaveq std stc (bad) leaveq dec int cld loope xchg icebp pop in leaveq out repz fnstenv int3 and cmpsl (bad) leaveq xor cmpsb icebp hlt rex.WRXB cld leaveq lea movabs add jnp adc out sub xchg leaveq jns sar hlt movabs loope leaveq jmpq (bad) in (bad) cmpsl lock mov cmpsl (bad) int3 rex.WB cmpsb xor ss mov and xchg movabs jmp add rex.WR cltd jl adc xor sub cmpsl jne loope sub je (bad) hlt (bad) xchg leaveq cmpsl test leaveq int add hlt movsl xchg leaveq test fistl leaveq clc cmc xchg (bad) cmpsl cld loope cmpsb mov and cltd xchg leaveq test jnp leaveq sbb leaveq xchg and imul xchg hlt rex.X or (bad) hlt add xor (bad) lods fwait add mov hlt ror xchg or movsl sahf cld in leaveq xchg jne std test leaveq movsb cmpsl movabs (bad) loope leaveq xchg (bad) int3 and cmp hlt lret (bad) loope repz fnstcw vcvttpd2dq addl leaveq (bad) sti adc cmp cli leaveq sbb leaveq xchg jno sbb int3 imul rex.B lock nop mov xchg mov hlt xor hlt jl xchg or cmpsl mov mov xchg leaveq push stc (bad) leaveq xor adc jmp mov in push adc xor in shll or icebp leaveq xchg (bad) int3 movabs stc (bad) leaveq gs int3 xchg stc mov cmp movabs stc out lret mov leaveq fucom (bad) clc hlt sbb in mov hlt jrcxz js cmp push mov adc int mov jae or or stc (bad) add mov xchg hlt or (bad) jmp cmpsl rex.XB int rex.WB fbld (bad) leaveq cmpsb callq cld cs xor leaveq movsl (bad) cld retq push int3 int cmp hlt icebp test cltd mov jl in int3 movabs rex.WB mov adc popfq stc (bad) leaveq mov int3 in cld push out push xchg mov jbe stc adc cltd push or sbb hlt test hlt fcmovbe je rex.B hlt adc lea add cmpsl hlt adc (bad) mov xor rex.X leaveq push xchg int3 jmpq int3 stc or rex.B in adc push (bad) cltd je hlt jmp pop adc hlt repz out adcl pop mov xchg or xor leaveq xchg mov in stc leaveq pop or rex.WR adc int3 (bad) bnd cmpsl ds and sbbl xchg int3 int jrcxz cmpsb (bad) int3 roll sub or xor pop popfq test sbb leaveq xchg or (bad) test leaveq and rex.WB pop jbe cld xchg hlt mov test mov jle int3 rex.RXB test rex.R divb int hlt sbb mov int leaveq (bad) add addr32 cmp out cld hlt outsl (bad) int3 jmpq jnp lods stc out rex.B rex.X leaveq mov int3 mov leaveq xchg data16 xchg test leaveq pushq int3 std stc (bad) leaveq sbb jrcxz rex.XB push test push hlt movabs cmp add rex.WX add (bad) mov hlt movabs rex.WRXB lods xchg jno hlt rex.WRB add (bad) hlt xor (bad) mov add or (bad) int3 sub jb lods xor leaveq xchg ss add retq xchg leaveq push jl jno leaveq leaveq cld rex.X icebp je rex.B mov leaveq sbb leaveq idivb test jmpq leaveq cmpsl xchg int3 mov rex.WB sahf jle imul or (bad) int and stc add (bad) mov push in (bad) jno cmpsb adc xor xor xor leaveq cld icebp (bad) leaveq imul jns rex.WR xchg jl rex.WB movabs int3 test test stc leaveq xchg pop int3 (bad) jrcxz rex.B jmpq xchg cmc jno leaveq mov (bad) rex.WR int xor movabs int3 test adc jns cld add es rcll movsb fdivrl push hlt xchg pushq (bad) leaveq and sub sub (bad) test leaveq in callq hlt jo int3 xor bswap add imul out int rex.WB repnz hlt imulb mov fsubr mov int in push rex.XB xchg jne rex.WB je mov mov shl leaveq cmpsl addr32 mov rex.WR sbb int3 test jns xchg outsl cmp stc out pop int3 test jno int stc leaveq cmpsl sbb (bad) leaveq and rcll adc push int3 lods jmpq fwait adc lahf xchg xor callq int3 or int3 adc int3 test xor jne cld xor stc (bad) icebp sub loopne pop jge cld cwtl out (bad) int3 pop mov xchg sbb mov sbb fisttp sbb pushfq (bad) (bad) (bad) and xchg hlt lret int hlt jo mov icebp (bad) add (bad) out xchg (bad) hlt cld add test (bad) jl rex.B addr32 leaveq rex.RB adc jl jl mov (bad) rex.WRX pushfq or adc hlt rex.WRXB mov in cltd hlt jnp int3 (bad) fucom leaveq cmpsl sub test int3 xchg cld (bad) hlt (bad) or adc test cld xchg (bad) mov imul cmc xchg jrcxz mov push mov cmp int in hlt mov je jrcxz rex.RB xor (bad) cmp leaveq cltd and in mov leaveq xchg jg in xchg leaveq sbb int3 icebp stc hlt leaveq int3 cmp ds sbb andl (bad) cmp addr32 (bad) int3 movsl xor (bad) lret test rorl jno hlt mov rex pushq in movabs icebp or mov movabs insb hlt iret (bad) js in jge hlt mov movabs hlt jle gs shlb cmp in std cmp hlt jl adc (bad) rex.WR data16 leaveq xchg adc hlt stos (bad) je repnz (bad) hlt lret ror lahf fsin mov rex.RXB cmp xchg int3 insl stc (bad) leaveq addr32 add leaveq in sub (bad) leaveq retq jge jrcxz mov mov hlt add (bad) jns add lods fsubrs jmp xlat rex.RB xchg hlt movslq xchg xchg js cli icebp fisubl fs int out adc lahf fstl int3 sub flds iret rex.R rex.WRB mov leaveq and test leaveq movsl lea hlt mov lea hlt sahf cmpsl lret pop cmpsb xor mov sbb leaveq in or leaveq int rex.WB popfq (bad) or fsincos or jl int3 sub leaveq cmpsl jge xor or cmp xchg leaveq imul jns stc leaveq cld cmc repnz rex.RB loope fwait icebp or sbb mov outsb jno xchg adc or jl push xchg xor rex.WRX sti or movslq leaveq cmpsl mov movabs divl or movabs hlt rex.WRB cmp xchg add hlt (bad) decb pop std int3 cld cmpsb rex.B jle mov mov hlt mul xchg leaveq xchg cld loope hlt sbb rex.WRB add in rex.R xor (bad) out xchg pop (bad) hlt (bad) in je add hlt js jmp xchg (bad) je jmp out jno (bad) push int3 xor cmpsl in leaveq add cmp movsl adc and (bad) hlt add cld movabs (bad) hlt sahf (bad) leaveq in stc test xlat cltd callq xchg icebp jo (bad) mov adc movslq leaveq pushfq popfq mov or cltd test leaveq adc int3 jmpq xchg int3 stc cld shl push movabs leaveq cmp cmpsl or cld cmpsl icebp hlt (bad) int3 lahf xchg mov leaveq std stc rex.WB leaveq test or scas mov (bad) insb (bad) hlt xchg xchg xchg or rex.W sub jno hlt (bad) mov popfq xchg (bad) hlt (bad) mov pop (bad) rex.WR (bad) icebp (bad) (bad) cmc hlt pop insl gs cmpsl adc retq or mov lea leaveq xchg and pop ror leaveq loop in xchg loope movsl loope jmpq mov leaveq xchg movsl int3 vpsubw lods or (bad) int xchg hlt cwtl and hlt push stos mov retq or jne int rorl mov mov sbb movb hlt fbstp rex.RB lret rex.WB icebp add fstps insl jge and (bad) ja jrcxz in mov leaveq mov leaveq mov sbb leaveq xchg scas int3 imul mov (bad) mov mov hlt rex.RB xchg or test leaveq or xor mov icebp jnp rex.B mov adc pushfq mov xor hlt icebp movsl rcl int hlt test mov hlt repz test hlt sbb add rex.XB xchg je (bad) hlt in xchg test (bad) movsb sbbl nop stos test adc insb hlt jbe mov cld movabs and hlt pop mov loope rex.B ficom leaveq mov hlt leaveq mov out hlt out push (bad) adc hlt cmpsl pop mov hlt pop pop in sub rex.WXB (bad) or mov rex.R jg int3 movsl callq int3 lea test movslq leaveq cmpsl jg jmpq rex.R or nop rex.XB in jnp and jrcxz rex.WRB rex.RX stc leaveq jne int3 sbb xchg int3 insl cld adc jg retq push fadds rex.RXB (bad) or rorb and int3 push rol in mov xchg xchg rex.WRXB rex.WR push or leaveq leaveq lret mov insl adc int3 push or jno mov lods fmul push or je icebp ror or nop js in leaveq (bad) hlt xchg mov hlt or xchg rex.WB rex.RB jl int3 in cld and pop jp and xchg jns shrl add sahf jl and int3 test adc icebp jno leaveq data16 (bad) jmp cmpsl adc sub jl cmp jnp or leaveq int3 add jo stc (bad) leaveq and leaveq int3 jge test (bad) leaveq xchg xchg int3 or mov leaveq jg in loope cmpsl jrcxz jno rex.WR pop jle rex.B mov pop jrcxz loope gs xchg loope pushq insl and icebp nop pushq int in mov fwait movabs (bad) int3 lea and push imul movabs out outsb rex.WRB xor rex.XB stc jno leaveq outsl jbe (bad) cmpsb xchg hlt xchg sbb leaveq lods cmp in jge loope hlt sbb xchg popfq retq movsb hlt xchg in sbb xchg test hlt cmp sbb jmpq hlt (bad) int3 mov callq leaveq xchg movsl int3 jmpq nop add pop rex.XB leaveq mov test movabs int3 and (bad) lods sbb (bad) leaveq fxch mov xor add cmp leaveq out xchg loope div pop or scas or addr32 pop (bad) jbe loope out (bad) lea jns repz insb add cltd icebp (bad) hlt retq mov pushfq icebp (bad) xor rex.WR rex.WRX pop ss mov hlt pop xor insl cmp cmc hlt jne lods jno xchg sub movslq cltd cmp cld retq sbb loope cld add xor jae (bad) leaveq out sub xchg xchg hlt xor xor out (bad) jle clc hlt (bad) and xchg xchg je in and repz or mov hlt nop sub sbb sbb leaveq gs cs hlt fstps int3 lahf xchg (bad) int xchg (bad) hlt and hlt repz int3 xor int3 sbb leaveq xchg and leaveq ficoml int3 jno (bad) pop mov leaveq rex.WR insl cmc cld (bad) or xor leaveq dec rcll int3 mov cld addl cmp test and hlt fst callq fcoms jbe loope mov (bad) leaveq cmpsl push int3 jmpq xlat outsb and sbb int3 pop and int jno testb leaveq cmpsl (bad) int3 cmp jle or rex.XB lahf mov fsubrp jno or cld xchg rex.WR sub movslq movsl cmp fistpll xor xorb leaveq xchg or or retq orl int cld (bad) xor jp leaveq jne movsb (bad) hlt (bad) enterq or int3 or or rcrl xchg lods jns hlt rex.W repnz gs js rex.WB decb (bad) jne add pop lods in (bad) rex.B rex cld callq leaveq lods addr32 sti (bad) (bad) leaveq (bad) out leaveq test int3 mov jno cmp leaveq pushq int leaveq mov jmpq leaveq mov or int3 add out cmp out leaveq mov leaveq mov xchg stc mov rex.WRB movsl jno test leaveq and int3 xchg stc hlt leaveq sub xchg leaveq or stc leaveq xchg sti int3 (bad) or jl int3 xor adcl test (bad) icebp (bad) xchg leaveq cmpsl add or fs jns out mov xchg leaveq rex.RB (bad) leaveq lods int3 push xor leaveq clc sahf xchg or sub mov cld (bad) cmc sahf pushfq movabs lods hlt cmpsb adc mov mov cmpsl jg std cld test mov jnp sbbl pop mov lods hlt pushq int3 icebp movabs leaveq xchg (bad) mov cmp int3 or hlt leaveq leaveq mov cld icebp jnp and mov adc mov repz int3 (bad) xchg rex.WR xor rex.WB jrcxz pop nop adc jno leaveq rex.RX movsl stc (bad) leaveq jnp int3 mov (bad) jrcxz pop orl hlt cmpsl mov and and leaveq stc rex.WR cmp (bad) cmpsl mov and jnp add jrcxz int3 mov imul int3 jmpq icebp (bad) jl jns xor jp jge cld (bad) lahf hlt sub xchg mov xor pop loope test int3 movabs je hlt loope sahf leaveq repz push mov hlt mov movsl popfq loop jl leaveq or mov int3 sub js repz rex.R cmp int3 sbb and pushq movsb or push movabs test cwtl movsl lock test mov leaveq leaveq cld scas int3 test sti push cmpsl and mov cmp loope hlt rex.W push cmp js and (bad) stos lods xchg xchg or jl int3 popfq movslq cmpsl add jmpq jl stc cld and sbb hlt pop scas push cltd xchg rex.B xchg lods mov sub pop xor je (bad) icebp pushq adc rex pop out jno leaveq xchg test movabs sbb pop push hlt mov lods jns movabs hlt or cmpsb jno lahf hlt sub cmpsl push mov test and test leaveq (bad) leaveq xchg jne icebp test leaveq cwtl mov jno cltd hlt clc push push leaveq insl sub sub stc rex.X loope rex.WB (bad) pop jbe cld leaveq hlt outsb jl adcl xor rex.WRB jno in insl int leaveq pop shll movabs sbbl pop test mov (bad) (bad) int3 pop xchg cltd rex.WXB repnz xchg hlt mov int orl jno hlt sub hlt callq hlt mov rex.WRB (bad) xor popfq stc xor in jmpq (bad) stos in hlt adc jge cmp in icebp rex.RXB stc hlt outsb rex.WXB fst imul jge jns (bad) rex.WB gs leaveq hlt (bad) rex.WXB (bad) xchg xchg std hlt add hlt fmul cmp adc jmpq jb and mov mov or cmc sub or sub stc pop or mov popfq movabs rex.WR stos jne cmc cld lods (bad) hlt rex.WX cmpsl in cld rex.WB pop or movabs cmc hlt fs loope cld gs pushfq jl mov cmc popfq rex.WR sub and in sahf pushq lahf hlt mov jno push hlt and int3 fldcw stc and fucomip sub icebp addr32 or mov pop rex.XB leaveq sahf adc sub fmull sahf adc mov stc rex.WRB pushfq adc cmc lods sub hlt add int3 xchg stc hlt leaveq mov cmpsl jge movabs hlt rex.WRB push sbb (bad) je jge hlt retq icebp (bad) fwait xchg mov jrcxz loope sbb cmpsl outsb int3 rex.B test sbbl hlt (bad) push leaveq (bad) xchg cld xor (bad) xchg int3 or adc xchg int3 xor loope in xor test xchg movq lahf hlt pop mov pop hlt sub int3 (bad) int3 stc shll lods add or xchg leaveq std xchg xchg lahf hlt stos mov xchg test fstl (bad) or hlt lea popfq (bad) ja mov jl pop cld fxtract rex.WB mov loope loope (bad) cmpsl sbb leaveq or retq adc adc adc rex.RB int cmpsl rex.R sub sbb xchg (bad) jns push xor or push (bad) hlt fldz or xor loope jmp xor mov movabs hlt rex.X hlt adc clc cmp xchg stc (bad) hlt mov stc loope pop (bad) (bad) and (bad) hlt (bad) stc stos int (bad) (bad) (bad) mov hlt ss sbb mov jbe adc cmp test rolb sub leaveq in mov sarb hlt mov int jno ss loope rex or test cld test (bad) (bad) int rex.WB and mov xor jle cmc hlt cwtl and rex.WRB flds int3 leaveq xor movslq (bad) and rex.RB hlt scas int push push mov insb jl mov (bad) jl stc cld (bad) hlt mov mov test and jbe (bad) loop pop sub movsl push cmpsb pop hlt sbb (bad) stc leaveq rex.WR (bad) hlt cs leaveq mov out out xchg in and movsl (bad) xor leaveq xchg adc test movsb in cmp leaveq loope loope hlt jg xlat jns cld (bad) hlt jmp fidivl cld cltd hlt paddusb fsubrs out fxch hlt lods leaveq (bad) rex.WRB leaveq cmpsl rex.WRB fxtract lahf sahf (bad) mov popfq adc xor negb ror rex.WRB leaveq adc xchg leaveq or test in cmpsl (bad) xchg cli mov scas cld xchg out (bad) fcmovne jmpq cmp jmpq leaveq movabs pop test int3 mov movsb loope push js cmpsb jns pop loop leaveq mov xor sbb cmp xchg loope or leaveq jl jl hlt add cmc adc leaveq rex.WB leaveq xor out or xchg stc hlt lods xchg int3 jns lods loop sahf out callq hlt js test hlt rclb hlt pop xchg int3 sub rex.B xchg (bad) or int or mov imul xchg jmpq (bad) sbb movabs (bad) rex.WRB mov mov sti cmpsl (bad) leaveq add stos std hlt (bad) or (bad) mov xchg xchg test and (bad) orl test cmpsl (bad) leaveq hlt test int3 in jno hlt fimull hlt xchg (bad) mov pop xchg cld sub rex.R adc int3 in flds rex.B rex.R movabs imul sub popfq mov leaveq in movabs cmpsb movsl popfq xchg hlt movabs int3 sub hlt pushq cld hlt lret movsl leaveq leaveq movsl popfq cmc or shrb jb mov mov imul sti scas jle adc stos jl test leaveq movabs adc scas rex.R rex.B std hlt insl jnp jge jrcxz pop push (bad) stc xchg cld pop hlt imul or push jae enterq int jrcxz push (bad) and stos pop (bad) xchg xchg cld test xor cld (bad) shrl lret int jne rex.RXB rex.WB rex.WR adc jne hlt jge cld (bad) leaveq in out in hlt (bad) int icebp pop add hlt pop jrcxz rex.RB hlt xor imul or add lahf pop rex.RXB rex.WRXB mov jno hlt add rex.RB rex.XB cmp jne rex.WRB test mov leaveq outsl int3 (bad) std jns hlt add jle cld add add rex.WX and stc rex.XB and rcll mov or (bad) or je or cltd addr32 cmpsl or push mov cmp pushfq (bad) hlt jg popfq rex.WRB hlt (bad) fmull push rex.WRX lret leaveq (bad) int and in xchg hlt push int3 and xchg jno (bad) jl add in xor movabs cmpsb jge mov leaveq rex.RB mov movsb jne rex.WRB hlt cmp out xchg cmp pop mov or mov stos insl hlt fimull xchg xchg hlt in xchg je loope pop movsl lods rex.R rex.WR je rex.WRB (bad) stc or sub sub int leaveq loop jbe add test (bad) or jne fldenv movabs (bad) hlt pop xor movabs (bad) (bad) jne rex.WRB hlt pop fsubrl jns mov rex.WRX leaveq jl roll in movabs hlt xor mov jg fldl (bad) pop or mov cmc hlt andl int3 jns test cs rex.WB rex.X mov lea or add xor int3 pushq xor push test rex.B cmp jge hlt lret in hlt out (bad) (bad) gs hlt (bad) int push push subl addr32 int3 or int3 sbb adc fldl add in imul (bad) leaveq rex.WRX leaveq xor leaveq xchg movslq fsts mov xchg rex.WR jnp int3 test out adc mov mov movsb insl mov jns hlt jo int loope (bad) int3 test sub in jno leaveq ficom int3 rex.WB movsb fdiv jns mov mov pop adc xchg xchg movabs int3 sub cmp cmc add in leaveq xchg loopne in stc leaveq popfq cmpsl (bad) leaveq cmc cld cmpsl xor stc leaveq push mov in stc leaveq cmpsl rex.RXB cltd cld test rex.WXB jge hlt mov jne cld pop hlt jle (bad) xor adc xor (bad) mov int icebp hlt scas xchg int3 adc leaveq test clc int3 rex.RB loope pop loope fiaddl jnp (bad) xchg jrcxz jrcxz mov and int3 xor int3 add hlt jbe rolb push sbb int3 mov stc leaveq jmp (bad) or mov jmpq xchg sbb retq (bad) and mov outsl cmp sub int3 imul cmp (bad) lods int3 pop xor leaveq jmpq leaveq xchg pushq add mov pop movsl add sbb add je push imul pop rex.WB pop (bad) adc xor leaveq xchg rex.WRX adc xchg add (bad) int3 lahf in mov rex.RXB icebp stc (bad) leaveq rex.WRX int3 and xchg ja rcll add loope cmpsb rex.B fs je adc cmpsl fcmove (bad) stc rex.WB movsl or leaveq xchg pop int3 lods rex.WRB hlt mov hlt jbe int3 fstl sub leaveq repz movabs stc out add movsl adc xor fmul loope movabs leaveq cld mov rex.X xor xor rorl push cmp faddl jmpq rex.RB test icebp mov jrcxz cmpsb movabs hlt (bad) and (bad) stc mov push cmp imul int3 adc imul loop xchg fucomi leaveq out rex (bad) test leaveq rex.RB int3 leaveq cld jno sub jmp mov mov in mov xchg stos hlt lock lods jle cmp retq movabs loope test cmp sbb jnp ror fbstp jrcxz out and jno or cld push rex.WB lods rex.R xchg rex.W in enterq int3 (bad) leaveq clc mov jl int3 cmp leaveq cmpsl jg or test rex.WB rex.WB leaveq (bad) sub repz mov pop int3 test jnp in je (bad) repz push icebp (bad) clc hlt fldcw add xchg (bad) or cmp cs test insl je mov subl fsts mov hlt rex.WR sub mov (bad) callq cld cmpsl int3 in cld push jrcxz mov leaveq (bad) jnp pop stc out cmp movsl test (bad) leaveq and fisubr movsl int3 mov cltd hlt mov int jno imul loopne leaveq rcrb int3 lret or jl int3 rcll pop sti icebp cmpsl out int3 movabs (bad) or jmpq add hlt jns leaveq xor jns fadd int ds lods or and (bad) hlt xor leaveq sbb rex.WR mov movabs cltd (bad) leaveq (bad) xor leaveq xchg xchg and movsb test push xchg int3 mov (bad) leaveq sbb cltd xor leaveq xchg add jmpq or rex.WR jns leaveq loop (bad) leaveq test leaveq mov movabs (bad) leaveq sbb cli int3 insl jrcxz loope and lret out hlt movsb rex.XB std retq leaveq (bad) int3 fiadd leaveq or rex.WB mov out jg xchg leaveq popfq stc (bad) leaveq outsb int3 in or adc (bad) hlt rex.WRB pop stc rex.WR xchg jl test in mov xchg sbb leaveq sub rex.WRX cmpsl ror adc rex.WR jrcxz int3 (bad) cld xchg repz fldl xchg int3 xchg repnz cld in leaveq cmc movslq leaveq push xchg int3 cmp xchg repz in mov xchg adc mov stc leaveq and int3 test rorl hlt cmp jrcxz mov jo stc (bad) leaveq pop xchg int3 pop cld rex.B test (bad) icebp hlt imul add xor xchg xchg hlt lahf loop mov jmp cmpsl sub cltd stc rex.WB mov jae xor leaveq xchg push int3 int stc leaveq sbb int3 fldcw leaveq xchg std callq pop push gs cmpsb rex.B jo and sbb lcall out loop adc int3 push xor leaveq xchg movslq movabs rex.B adc je add xchg stc xchg mov (bad) out sbbl cmp popfq cmpl add leaveq outsl mov hlt scas or (bad) sub movsl and (bad) cli xorl hlt (bad) int3 cmc pop add xchg hlt xor lods cmp test popfq cld and hlt mov xchg not addr32 pop (bad) mov int (bad) xchg cmp mov out mov adc int3 imul mov xchg hlt lahf xchg hlt js adc cmpsl mov or cmpsl int3 xchg leaveq (bad) stc rex.WRB mov xchg imul je pop rex.WR rex.WRXB insl (bad) mov hlt jae mov hlt test enterq cmpsl stc leaveq hlt xchg xorl test xchg insl or mov sub gs jno ficom div rex.RXB mov xchg add popfq mov mov jl jno movabs out in hlt add je icebp jmpq div lods movabs leaveq rex.RB cld movsl hlt test out rex adc lock ss sub leaveq (bad) scas fsubr out xchg hlt gs insl xchg test addr32 cwtl lea adc movslq add hlt add and push push hlt out rex.WRB cmp leaveq lahf mov mov in mov hlt int3 push ja mov scas andl cmp leaveq mov pop pop xchg gs leaveq mov mov in testb cmc hlt pop rex.WRXB or mov in icebp jnp pop out stc popfq hlt (bad) (bad) leaveq rcll adc xor movsl or push hlt test int3 sub hlt (bad) jnp enterq int leaveq (bad) test int leaveq cmc xchg int leaveq in xchg (bad) leaveq mov int leaveq rex.WXB addr32 leaveq xchg int leaveq sbb cmp int leaveq lret icebp (bad) int leaveq cmc out int leaveq in xchg (bad) leaveq mov int cmpsl mov pushq add std sub fmul mov cmc dec xor in xchg int sahf out je out (bad) leaveq test int3 insl rex.RB push int3 lea enterq fmull nop int leaveq xor or int hlt cmpsb leavew jmpq pop sub stc adc xchg and fldt in loope (bad) sahf repz in mov fadd cli scas add in xchg addr32 test int push test test add (bad) loope int3 adc xor push jne rex.WRB hlt rex.WXB cmp (bad) cmp jmp jmp or ljmp cld stos mov push or jrcxz sbb (bad) int int3 mov hlt sub test jne fldl or cmp (bad) insl iret cltd xchg xchg loope adcl pop pushfq insb leaveq pop (bad) je rex.B jge or je or sbb xchg mov cmp (bad) and push int3 gs xchg rex.WRB notb adc outsb or jne mov hlt pop es (bad) loope mov (bad) (bad) int mov lret adc adc or or rex.WB (bad) (bad) loope mov int (bad) mov stc adc leaveq mov push rex.WRXB rex.R (bad) test mov mov cmp leaveq and leaveq xchg sub in cld shr jmp popfq cld xchg hlt cmpsb shrl jbe stc (bad) callq in push and icebp (bad) xchg enterq int leaveq or xchg pop int3 fisttpll int3 test rex.WR cmp lea (bad) cltd test in mov (bad) mov retq sar (bad) jmpq bt jmpq jmpq add rex.R gs gs push gs imul xchg add not sub bsf shrd rol jmpq jmpq push test stc mov stc jmpq jmpq callq jmpq imul clc add jmpq xchg (bad) sti out xor in sub and movabs fldl test xchg mov pop xchg (bad) rex.B cmp pop jp jb (bad) jl in (bad) jo lods cmpsb callq or cmc jle in in mov retq push test gs fstpl ss xchg xchg jb rex.W jns cmp push (bad) sub adc (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) jp adc (bad) jae fimul repz add fbld in rex.WRX in (bad) lret outsb icebp cmp retq pushq sub push xchg (bad) ss (bad) out cmp test mov imul callq add test out cmc add stc cmp jmpq (bad) cs cmc cmc (bad) test jno test imul cmpl adc lea fucom out shlb pushq add mov js stos movabs adc cwtl rex.B mov (bad) xor sub xor (bad) mov mov fwait cmc rex.WRXB mov mov xor (bad) decl (bad) (bad) adc pop or cltd insb rex.RXB rex.XB (bad) fwait add insb repnz (bad) loopne push rex.WRXB jb and (bad) rex.WRB lock xor or cmpsl mov sub lret mov stos (bad) adc or and mov push clc in mov xchg imul (bad) xchg jne lret pop in rex.WR lods sarl test imul add rex.WR rex.RB pushq adc out jg sti ja ror add dec and setle add test add add xchg lea rcl bt stc mov cmc mov clc push stc shld adc mov jp sub jmpq callq bsf xor cmc bt add rol mov bt test test jmpq jmpq add jmpq clc cmp sub cmp test cmc stc repnz jmpq rex.RXB rex.R xor cs insb add or add clc cmp add jmpq add rex.XB insl insl (bad) outsb imul addr32 add (bad) jl add repnz add (bad) rorl add movabs add mov bt stc clc bt test jmpq ja in enterq rex.WB jle (bad) (bad) xchg mov jle stos adc stos rorl idiv sbb mov and rex.X rex.X (bad) imul (bad) sbb lock sti lahf sti rex.WRB movsl outsb mov xor sbb js adc cld fdivrl mov (bad) (bad) ljmp xchg xchg jrcxz (bad) mov pop pushq ss stos (bad) (bad) (bad) lret lods (bad) mov leaveq movsb movl sahf lret data16 rex.R test rex.RXB rex.RXB rex.WXB xchg cmp movabs movabs rex.RXB nop add nop (bad) ss rex.RXB cmp clc jrcxz cmp mov cmc shl fldt (bad) out rex cmp and jp and (bad) cs loopne mov sub cmc cmp xchg (bad) callq (bad) (bad) pop loop add movabs (bad) clc jbe (bad) pop xor add out pushq test (bad) mov mov mov add loop mov sbb (bad) (bad) (bad) jg test (bad) mov shrl xchg cmpsl (bad) add add add mov movabs pop lock stc sub mov and mov push (bad) mov jmpq rex.X rorb fwait xchg in or (bad) xchg mov loop cwtl mov add (bad) jne mov loopne rex.XB cmpsw mov or or mov sbb mov mov mov (bad) rorl (bad) and retq mov clc stc clc clc cmpb ja jne sub rcr bts sub add rcr bswap neg mov sub add xor shr mov bt clc test jmpq mov fsubrl test push out pop rex.RXB out or (bad) movsb rex.WRXB push fistpll movabs fwait stos mov movabs movsb clc rex.WX pop or pop adc push or stos and nop movabs add xchg (bad) xchg add xor fnsave push nop rex.W add mov mov out (bad) fstpl xor stos sbb test rclb mov mov (bad) (bad) std ja (bad) or out insb adc pop jle (bad) lock rex.B add sbb push or rex.WX fwait sbb (bad) adc mov sbb bswap mov jmpq mul faddp add add popq mov push jbe pop cmp int3 test (bad) xor nop mov push adc movabs sbbl nop cs xor rex repz cmp sbb addb pushfq mov mov cmp (bad) loope subl mov movabs shrl out insb test in es fcmovbe or xlat mov xlat xchg in sub xlat cmp and loope push mov (bad) (bad) sti mov (bad) (bad) (bad) decb sbb test (bad) rex.R (bad) jle sub (bad) (bad) dec xor scas (bad) and sub movabs sar pop cmp fdivs pop (bad) scas rex xchg imul jle xlat or lret jno fld1 rex.WR (bad) mov sbb rex.WRXB xor and mov bt add sbb sbb sar stc mov cmc test jmpq cmp jmpq mov test cmc cmp test jmpq sub bt cmc clc xor cmc clc clc cmc rol cmp clc jmpq js stos lock (bad) or sbb or push or mov cmp fninit loop adc (bad) sub xlat jp rex.X rex.X cld (bad) pop xor jo test popq rex.RB (bad) adc rolb rex.XB pop or scas pushq lret (bad) pop insl xchg or cmp insl xchg test incb js out movslq jae cld pop rex.X mov pushfq xchg pushfq rex loope adcl add jl fidivr (bad) es in ds mov vmovlpd adc cmp outsb xchg add or and mov sti rex.WRXB push (bad) je sar cmp bts push sbb not mov jmpq jmpq jmpq jae cmc bt cmp cmp cmp jmpq jmpq jmpq add negl mov (bad) movabs add in data16 test pushq xchg fwait (bad) incl (bad) rex.RX rex.R popfq out and or vpaddd xchg and callq mov (bad) (bad) movabs mov (bad) rex.WRX (bad) push push mov in mov test sub add and add adc cmp adc (bad) (bad) (bad) sti fwait mov push retq (bad) (bad) (bad) (bad) sub out pushq rex.XB lret and rex.WX mov (bad) (bad) ljmp rol negl movslq nop mov ss imul rex.WXB cs push (bad) jo std popfq and rex.B out ja xor sub mov (bad) and subl add btc add or movzbl mov movzbq mov bsf bts shl mov clc bt sub jmpq test bt sub cmc bt cmc cmc cmp jmpq jmpq jbe (bad) imul or out cmpsb mov mov cmp mov jne xlat insb (bad) retq jrcxz sbb shl or (bad) or movabs push mov loopne xchg movabs fimul sbb jns,pn lret pushq (bad) scas fdivl (bad) insl lock (bad) (bad) (bad) sti jge pop and (bad) (bad) (bad) decb out pop int3 shrl (bad) mov enterq movabs lret repnz mov mov push or (bad) (bad) callq or rex.WXB lea (bad) jp adc xorl out imul mov jle (bad) (bad) jne sub sahf or jb (bad) rex.RXB sahf sarb adcl sbb rex.RB xor cs insb add rex.RB rex.WR xor cs insb add xchg or add movzbl mov mov retq clc cmp cmpb jmpq rclb out pop js rex.XB nop (bad) test sub (bad) scas mov sbb mov add loopne int3 lock push (bad) jp (bad) rex.WRXB outsb lret (bad) in mov (bad) (bad) cltd mov (bad) nopl iret insl or mov sub sbb sub jge sbb (bad) rex.WR push or cmp pop mov pop xchg or stos mov addr32 lea cmp (bad) pop adc movslq in xor xor (bad) jo sbb cmp jl loopne loope sbb or pop mov xchg jl loopne jle (bad) xor (bad) mov cmp jl (bad) rex.WXB retq test lock jmpq rex.WRB or mov ficom int (bad) mov and (bad) rex.RX pushq mov add rex.RX movslq fimul enterq push or scas jns clc outsl xchg sbb (bad) (bad) pop divl mov addr32 pushq mov rex.R roll adc and mov (bad) (bad) (bad) stc (bad) mov stos push test notb psubsb out hlt test cltd xchg enterq (bad) (bad) (bad) cli mov fs (bad) xor enterq (bad) lahf js insl repnz test and (bad) (bad) (bad) cld or and (bad) std mov (bad) mov push pop int adc (bad) (bad) (bad) decl jnp repz retq in mov movabs mov jg pop in xor movsl rcr jb (bad) mull (bad) rex.WXB sti add ror mov (bad) negb fdivl negb nop lret mov mov xorb and mov mov add test adc clc cmp jmpq test jmpq (bad) lock imul pop (bad) ja xchg mov stos mov es cwtl scas rex.B (bad) pop adc push xadd cmp push cmp (bad) or out movabs cld repnz insl movsl lea sub imul xor jae (bad) jns (bad) (bad) mov (bad) cld cltd and (bad) ljmp mov cmpsb cli in push sbb rex.W and movslq adc (bad) add (bad) rorb jp pop (bad) add add cmp leaveq cwtl mov scas (bad) rex.WR fwait xchg add jmpq fild movsl or (bad) popfq fdivs outsb addr32 scas (bad) sarl notb jbe fisttp mov and mov mov ja (bad) push jne sub iret push push insl (bad) xchg and xor mov lea je jnp mov addr32 rex.WX loop add insl (bad) orl xchg nop (bad) rex.B jg (bad) rex.W (bad) (bad) (bad) (bad) mov imul icebp (bad) movabs sbb js push stc mov sbb xor xchg loope insl sti rol es loop (bad) test adc rclb and cld add std clc mov out fsubrl (bad) adc andb mov sub jbe mov (bad) test sbb int3 iret cli retq divb mov subb (bad) (bad) enterq push cmp scas movabs (bad) movabs add adc (bad) mov mov (bad) (bad) (bad) decl shrb addb or (bad) cmp rex.WR test xchg leaveq clc add add (bad) adc sbb xlat jle add or jmp rex.WRXB es lods fwait xchg cld push repnz cmp and pushq outsb cld xchg cmc or mov rep sti cwtl loopne adc rex.R lods adcb and (bad) movabs mov mov stos imul mov rex.R and movsb leaveq add pop cmpb repz rex.XB (bad) xchg sbb js (bad) cmp stc pop (bad) mov rex.WRX int rex.XB rex.WRB in add (bad) hlt jno pop xchg mov popq repnz jbe jmpq or je cmp adc loope (bad) (bad) decb (bad) (bad) (bad) (bad) stos cmc fwait pop (bad) cwtl mov (bad) mov sbb cmc sti push outsb adc xchg add jae int stc rex.WXB mov ss mov jge movb adc fdivrs in sarb add shll push and ds mov adc int out callq sub shld add sbb jmpq shr bsf (bad) repz sub movzbw jmpq jmpq jmpq pop xchg pop movsbw movzbw movsbl pop jmpq lea bswap lea pop jmpq push not jmpq jmpq jne jo callq jmpq jmpq jo jae not mov inc add setbe mov jmpq jne clc cmc bt test movb bt test test jmpq jmpq xchg out pushq mov (bad) movabs cmp popfq std popfq jge sbb sub in cmp xchg rex.XB lret jl imul xchg mov scas mov add ja adc sub stos xorl or pop clc or mov (bad) xchg jmpq add (bad) (bad) sti fcmovnbe jmpq (bad) (bad) insb jne xor jp imul retq stos fcmovbe jae adc test (bad) and cwtl jmp lahf std or sub repnz push cmp rex.RB xor (bad) jns and iret xchg (bad) cmpsb fwait test (bad) (bad) callq movsb (bad) sub (bad) ljmp mov rcrl movsb sbb (bad) mov pop cwtl sti out xor xchg notl fcmovnb and or callq insb add in mov (bad) pop rex.WX pop adc xor stos movabs ds (bad) (bad) (bad) fldcw idivb xchg cmp mov repnz (bad) sarb push xor add jle fistl out rcll test jae sarl adcl fstpl cli test retq adc (bad) cs rex.WRX data16 pop (bad) or sub or (bad) rex.WR cmp (bad) scas std (bad) sti stos fisubr (bad) rex.WRX pop jne rex.WRB cmp or loop std enterq rex.B hlt out int rex.R mov pop cmp (bad) and fbld cmpsb mov notl push xor jge out hlt movabs rex mov bswap sub add clc shr xor movsbw lea mov mov mov mov lea setne not setl lea lea movzbl mov mov movzbq lea lea jmpq scas cmp xor adc callq movsb pop (bad) and mov (bad) loopne rex.WRX fwait rex.XB (bad) fildl adc jb retq adc mov callq (bad) test add cmp mov jo cmc pop rex.WRX jge (bad) (bad) (bad) (bad) (bad) movslq xchg mov (bad) xor (bad) movabs jo cltd sub cmp pop push ds rex.WR hlt outsb mov (bad) (bad) stc mov fnstenv movslq sub xor repnz adc callq shl jmpq (bad) pop pop jbe sahf mov mov xchg mov sub cmpsb rcrb mov iret or outsl add fs ss push jnp (bad) xor sbb clc in (bad) cltd jmp lret insl push xchg sbb movsl (bad) mov jp cmp pushfq outsl pop std stos add lret es jmp xor fild stc movslq cld sbb pop mov test movsl mov mov pushq sbb mov movsb pop popq add add or rex.W lock add mov out xchg push add sbb lea iret scas int movabs (bad) sbbb lret jno sbb adc or or add add (bad) rex.RX je jmpq jne not mov lea rol data16 imulb fld (bad) or cli (bad) shld mov test stc sub stc cmp test test pushq cmc cmc bt cmp cmp jp ja sbb rcl or bt sub clc add mov rol bsf mov cmp rcl mov cmc repnz jmpq movb test test je je bsr sub bts push not mov ror rcl mov sub mov lea lea jmpq movb jmpq rcr mov stc and stc cmp add jmpq cmc stc rol js cmp jmpq jne bsf sub movzbw or sub clc mov shl clc setne setne add sar test xor mov test test jmpq test (bad) icebp std mov mov leaveq xchg mov mov cs jrcxz ja punpckhwd sbb xchg mov incl ds (bad) or (bad) and jl xchg in movsb or jae mov movabs fs jl (bad) adc xchg (bad) (bad) lahf push mov cmp pop (bad) (bad) out leaveq pushq adc (bad) xor xchg (bad) movl mov add fs rcrb cmc (bad) (bad) (bad) std hlt cld (bad) mov rex.RXB rex.WRB jae mov movsl testb mov jae mov (bad) (bad) (bad) callq fwait xchg push (bad) (bad) (bad) movabs sti (bad) rcll (bad) or jge jo pop test (bad) insb sbb movsb (bad) add jmpq cld push int3 movabs add movabs sbb loope add jne dec bswap xor ror add and neg mov xor mov jmpq cmp mov stc stc jmpq and add nop mov retq test rorb (bad) (bad) cmp rex.WRX xchg jmp sti jmp (bad) cmp ficomp cwtl insl jbe mov (bad) rex.WRXB test lock clc sbb outsl and cmpsl jb in or std hlt add rex.WXB ss int out (bad) cbtw add (bad) (bad) sbb sub out (bad) (bad) rex.WX mov sub movsb push imul (bad) (bad) (bad) sti cwtl mov sub (bad) (bad) (bad) cwtl mov push sub std and setp add jl sbb or adc (bad) push cmp adc push fisttpll fnstcw jrcxz rex.RX mov mov mov xchg (bad) idiv outsb lret hlt mov (bad) cmp mov sub (bad) popfq rcll jne rex.RXB mov fild fsub repnz cmp jb fsts repz rex.WRB rex.WXB jb (bad) mul nop clc (bad) sahf lock scas xchg fildll and xchg lock push xchg mov out cwtl movabs lock jno mov rcr xchg (bad) (bad) and mov jle (bad) int3 jns (bad) (bad) sti mov (bad) (bad) decb test mov or callq xchg mov xchg rex.WB fsubrs xchg subl sti outsb lret in cmc sub rex.WB or shrb or xor xor mov sti add rex.B mov add (bad) insb rex.B insb outsl movslq (bad) (bad) iret or sub (bad) cmpsl stc pop push cwtl (bad) outsb pmuludq (bad) rex.RX rex.XB (bad) ficom out in (bad) xchg rex xchg mov adc (bad) int3 out fildl (bad) retq test mov gs adc (bad) sbb pop addr32 rex.WRB lret sbb xchg (bad) xor rex.WX out cld push jmp rex.WB cwtl mov (bad) imul (bad) sbb jae push sahf mov (bad) (bad) (bad) std or rclb (bad) (bad) std cmp in lods mov mov adc (bad) lods add add or rex.WRXB rex.W fldenv loop push and (bad) push rex.WB adc pushq and loope scas lea (bad) movabs push xor adc mov push rex.X hlt es mov add xchg jnp rex.WRB cs retq fdiv (bad) jmpq (bad) sub movsbl xor mov shld dec data16 (bad) or (bad) (bad) xlat rex.WX es data16 (bad) or out bt test stc sub bt cmc test pushq clc test jmpq jne xadd or and bt mov add shrd inc stc sub rcl bsr mov jmpq test cmp jmpq test jmpq cmp jnp jae stc shr mov btr lea xchg neg mov sete lea rcl adc mov cmc bt xor test test bt cmp repnz jmpq add hlt callq adc cs or cltd rex.WXB (bad) cmp xor ror clc mov jmpq jne fcmovnbe and jle (bad) rex.R repnz sbb add cs push pop rex ds and in mov fldz movabs clc (bad) jo (bad) mov (bad) iret xchg rex.XB push adc jp jmpq pop push mov jns (bad) xchg out xchg xor outsl ss push push jnp jp insl imul jbe insl outsl add mov (bad) (bad) decb rex.RB sahf jno add add jl xchg enterq cmp xor adc rex.B rex.WRXB cmp pop (bad) movabs xor int3 (bad) lea xchg (bad) in in mov xor rex.X sbb add test nop add cmc test bt cmc or jmpq js callq shr (bad) (bad) add adc bts cmc mov jmpq jmpq jae (bad) repz mov or add seta jmpq jmpq jmpq ja add cmp sub btr shr setno bt add lea mov not mov setge mov jmpq jne jmpq jmpq xor cmc jmpq jmpq jae xadd xor bsf clc mov movzbw neg adc jmpq jb cmp cmp cmc cmp jmpq jmpq jp movabs jp rex.WB out mov retq ss movabs sbb callq push mov loop fcoms sbb out (bad) jl leaveq popq sub or lods cwtl rclb (bad) sahf in mov jrcxz vbroadcastf32x2 xchg cmp movslq (bad) (bad) (bad) xor movsb mov pop int3 pop fmuls add or mov xor sbb enterq push cli int movsb lahf xchg callq (bad) (bad) (bad) (bad) (bad) xlat std cmp movsb and rex.RX (bad) (bad) stos xchg jmpq push movsb mov (bad) xchg mov mov int3 or movabs fmull jg lcall imul xor push (bad) jne jmpq (bad) mov imul sbb sub (bad) leaveq (bad) xlat fisttp adc (bad) fwait push lods push xchg (bad) and loopne loopne cmp push mov jo jp rex.R retq mov sbb (bad) xor data16 adcl fstpt mov leaveq jp fistpll lret rorb rex data16 cmp mov loope sarl cmp (bad) clc xchg xchg xchg add xor add jmpq cmp add rex.WXB retq mov mov mov (bad) (bad) (bad) std mov rex rex.R testb (bad) fs std jb adc jrcxz imul cmp xlat je out jge (bad) (bad) mov (bad) add or mov mov fs xchg or xor rclb mov and es xchg movsb mov hlt jbe mov xlat (bad) xchg jmp (bad) pop int3 scas (bad) mov jrcxz xchg test mov (bad) (bad) pushq cmpsl rex.WRXB lret sub cmp (bad) sbb mov fwait xor (bad) rex.RX jns xchg push cmp jp xor scas and hlt movabs loop jns loopne decl mov xor mov and callq (bad) mov jmpq or jrcxz icebp mov imul jae xor mov or rex.RB (bad) retq add lret rex.WX addr32 mov lret (bad) sarb sbb add lret and and or (bad) imul pop (bad) mov retq push mov adc fwait cli mov rorb pop mov outsl sbb add xor sbb cmp (bad) (bad) (bad) sti mov pop adcl popq and sbb out (bad) push (bad) retq (bad) lcall jne add cmc (bad) (bad) (bad) jno push std loope je (bad) and add cmp (bad) loopne rex push add xor cwtl mov adc lret stos cmc pop (bad) mov mov xor (bad) and out stos add jg adc in cmc icebp or add pop xchg (bad) mov dec test add fdivrs (bad) movabs (bad) callq (bad) rex.X lret rex.WRB sbb (bad) fdivl pop ficomp rex.RXB push lock test (bad) (bad) (bad) cld mov rex.R (bad) (bad) lcall (bad) es push (bad) mov outsl in fmull ficoml movabs add sbb (bad) pop push xor add add rex.RX adc and (bad) pop xchg adc (bad) (bad) xchg lret mov sbb shlb sbb add add xorl jle roll (bad) (bad) mov ss lods (bad) jmpq mov mov setl lea jmpq jne cmp movb clc test bt test jmpq jmpq int in (bad) sbb enterq (bad) cmp rex.W (bad) mov adc adc xchg cli rex.X sti xchg xor adc xorb rex.WXB mov sbbl in (bad) rex.B push lods stos shlb mov xchg rex.B (bad) (bad) (bad) mov mov stos mov scas (bad) mov iret cmpsb or mov jo sti std push int out jl (bad) (bad) pop cli pop sub adc cmc xor in es (bad) (bad) mov cmp xchg mov add clc cmpb jmpq ja bt cmc cmc imul bt stc cmp add jmpq jae jmpq jmpq jmpq jmpq add adc (bad) hlt movabs sbb movabs jbe (bad) (bad) sbb ds (bad) retq movl mov (bad) mov (bad) movabs jg cwtl rex.RB imul or or fimull fstps (bad) outsl rex.WX rex.XB mov fisttpll repnz sbb push test rex.WXB (bad) (bad) sub mov movslq push jp stc addr32 push rex (bad) jmpq nop sub lret je lret cmpsl stc rex.B rex.RX rex.WX (bad) (bad) std sbb (bad) (bad) (bad) ljmp cmc rorb fs jns sbb sub rex.WRX test mov sub sub cmp (bad) sub fldenv xor and loop addb cmpl mov mov adc repnz (bad) xor (bad) (bad) jmpq pop jmpq jmpq nop rolb clc mov (bad) sbb (bad) push lock in int3 movabs outsb (bad) insb rex.WRB jge stos push xchg mov (bad) enterq add sahf add mov js cmp rex.WRX cmp retq out rex.WX stc pushfq rex.R adc (bad) (bad) cld imul (bad) (bad) stc retq (bad) sbb jae fxch xor and adc rex.W pushq xchg rex.WRB pushfq int3 (bad) out (bad) rdmsr movabs cltd sbb ss jae jmp add add fidivl movabs (bad) loope int3 sbb mov enterq mov (bad) jns fwait clc jrcxz xor add icebp movabs test (bad) or push push repz mov cmp pop addr32 jae movzbw xchg mov shld cmc neg btc mov dec sar or mov clc sub stc bt repnz jmpq rex.RX je lret outsb pop (bad) xchg ljmp cmp sbb retq or (bad) sub or cmp xor (bad) nop sub shll rex (bad) negl (bad) (bad) mov lods xor and pushfq lret pop cmc mov sub retq (bad) (bad) std lahf imul add add adc nop retq adc (bad) sub add or and movabs jl in mov outsb ss (bad) jmp mov (bad) movsl xchg and callq add (bad) push adc test jmpq jmpq or jmpq je not bswap xchg movzbw lea xchg bswap movzbw movzwl not movsbl lea bswap lea movsbq not mov jmpq bswap out mov rex.WRB (bad) retq xchg cmp fnstsw mov jle (bad) mov loope sbb sarl in rex.RXB ds mov push sbb mov clc es (bad) mov xchg adc shrb (bad) and loopne loope sub insl or rex.WXB lods cmpsl rex.XB (bad) (bad) cmp add movabs cltd (bad) sahf (bad) es scas rex.WR stos jb (bad) mov xchg push or cld sub (bad) (bad) (bad) mov sbb add add and test push jge push outsb in lahf and js xor add sarb cmpsb rex.WRB add fld sub jge jbe icebp pushfq (bad) add lahf mov leaveq sarl xor jrcxz (bad) (bad) lods mov pop std xchg mov cmp jmpq jmpq jmpq jne xadd not cmc mov movsbw cmc btc sub sub jmpq jmpq movzbw mov movsbl sub mov setl mov lea jmpq jmpq push or (bad) icebp pop xchg push test add jl xchg adc cmc xor movsb in loop je or sbb rex.WXB gs fnstcw mov xlat (bad) jrcxz add jl enterq stc xchg movsl lods pushq shrd push cmp xchg in fcoml xchg fs (bad) (bad) sti lret sti rcr cmp (bad) (bad) (bad) pop xchg jp mov jae mov scas std sub push loopne (bad) rex jb lods xchg fsub xor repz mov mov fimul mov jnp mov rex.WRX pop je (bad) (bad) (bad) (bad) fisubr (bad) mov jo or scas (bad) (bad) rex.R mull or push sahf scas adc jmpq out mov sub in or mov adc adc sub xchg add movabs jmpq cmp jmpq lods cwtl rex.WR rex.W es xchg mov mov in xlat scas sbb (bad) xchg and enterq scas loop (bad) (bad) jbe pushfq or cmc sub rex.WXB (bad) rcrl rex.WX (bad) xor (bad) test rex.RXB xor sub pop and rorl xchg rex.RX test sarl sar jnp (bad) (bad) sti enterq (bad) (bad) (bad) (bad) (bad) addr32 leaveq jmp rex.WB cli cmp pop (bad) movabs (bad) callq pop (bad) cltd cld retq (bad) movsb repnz lock jno cld mov fwait and (bad) sub movabs popfq rex.W jrcxz push jmp adc movabs adc out sti jl imul iret nop (bad) enterq mov movslq int sahf rex.WXB rex (bad) pop xchg rex.WRX rex.WRB scas (bad) xlat mov out pushq ja (bad) push or add (bad) lret adc xlat lods (bad) ds or mov mov sbb lea xor (bad) xchg rex.RX test cmp nop movabs (bad) rex.WXB lock (bad) (bad) (bad) xchg adc jne,pt callq lods out rcl jge add add adc push stos cmp sarl add xor jrcxz jb xchg xchg push testl rex.WXB notb and xchg mov in sub es rex ds sbb (bad) decl movsb jmp mov shld movsbw mov shrd sub mov clc bt cmp sub test bt test jmpq je ror ror mov shl clc neg add data16 repnz fisubl mov mov clc test jmpq mov cmc test cmc cmpb jmpq jmpq cmp cmp jmpq je lea bswap not mov movsbw mov bswap lea not setl mov mov movsbw setl mov lea jmpq je cmc cmp sub bt cmc jmpq jne stc dec movsbw mov jmpq sub bt cmc pushq cmc cmp jmpq pop (bad) mov or cltd add jns jle stos jnp mov (bad) repnz rex.WRX movsb mov cmc adc test pushq mov (bad) jns xchg cmp std out adc popfq rex.RX or movsl push mov je rex.WXB stos mov pop fild test rex.WXB out rex (bad) rex.WRXB out jno (bad) (bad) cld leaveq in (bad) (bad) cmc (bad) (bad) (bad) lcall hlt add and fnstsw and rex.XB rex.RB loope rex.B repz and mov pop push (bad) pop mov outsb rex.X mov int sub sbb add add mov cmp (bad) iret xchg xchg pmaxub push (bad) xchg not pop fist pop cld mov sub rol (bad) lods andb mov rex.X retq clc jmpq je stc add test cmc cmp cmp jmpq push enterq outsb (bad) movabs sub loop mov ficomp rex.WRX sbb cmc (bad) rex.RXB fs fs cld fiaddl sbb rol (bad) pop sub and leaveq test insl fmull rex.B or push mov cmp clc sahf nop (bad) movsb pop in and sub pushq mul or xchg pushq add and clc mov add rex.WRX (bad) (bad) xor movabs imul movsb adc test (bad) (bad) cld sbb (bad) mov (bad) stos mov test (bad) callq rex.WR add add mov xor sbb push test insl (bad) xor sbb adc rex.X or rex.WB adc cmp rex.WRB (bad) cmp (bad) stc pop rex.WRXB sub mov rex.XB ror rex.WXB (bad) loopne (bad) insb pushfq negl add lahf mov lods in jrcxz xchg rex.WRXB push iret mov (bad) jae sub cmp xor test std xchg idivb imul ds jmpq test (bad) sbb jno cmp rex.RX test mov add outsb clc in jmp sbb mov rolb callq rex.XB movsl div jg xchg cmp (bad) (bad) (bad) sti lea cmp (bad) sub sub sub xor cwtl rex.RXB shll (bad) (bad) ljmp cmpsb xor mov fistpl nop (bad) lock test imul rex.RB movabs or es xor rex.RX mov rex.XB out jmpq test repnz jmpq pushq jmpq (bad) test retq jmp movsl mov jae rex.X out loop fwait mov (bad) nop cwtl push es fs adc loopne (bad) sub mov push mov (bad) adc insb (bad) jge jecxz mov (bad) cmp (bad) (bad) (bad) lods cld shlb pcmpgtd jno xor cli (bad) add stos adcl xor lret push mov cmp sub pushfq movsl test pop jbe rex.X cmpsb (bad) (bad) (bad) cli pushq xchg (bad) xchg (bad) (bad) sti iret adc adc mov xor push (bad) (bad) (bad) (bad) std ljmp pop divl movslq int3 cli jle xchg jns adc sub es sub mov rex.WB cmp rex.X xor clc hlt cmpsb test xchg pushq mov mull (bad) rolb (bad) ds fbstp loopne pop sub stos cwtl icebp lret sub mov xor add fidivl cmp insl cmp addr32 cmpb add (bad) (bad) (bad) (bad) cmp cmp xchg insb rex.WRB (bad) movabs sahf mov sbb xor movsl push jnp insb mov movsl je int3 rex.WB push retq retq out xor (bad) or jl test and push int3 callq xchg (bad) rcll or mov psrlw (bad) sbb out rex cltd rex.B or sbb rex.WXB xchg (bad) add add subq stos cmpsb iret and negb mov xor sub push xchg retq push rex.W push test sahf pushfq mov imul (bad) jae repnz xorb rex.WB jge jg sarb out test (bad) xchg hlt mov mov int3 mov xchg adc repz mov (bad) pop fdivrl (bad) (bad) (bad) movsb in rex.W repnz jno jns out imul pushq (bad) xor movabs jmp adc jne jmpq sbb (bad) rex.WRB movsb ja shr rclb int3 stos and in mov xchg rex.XB out or hlt push in cli scas movabs jp mov push jnp mov add (bad) mov push in adc ss (bad) rcll push xor lret sub (bad) addr32 scas (bad) (bad) sub (bad) add xchg push ror push sub rex.WRB rex.X add rex.W rex.WX (bad) (bad) (bad) sti fs sub (bad) (bad) std cmc (bad) je gs cmpb movabs insb stc movsb (bad) (bad) (bad) (bad) fnsave and (bad) jrcxz enterq mov (bad) lahf add cmp out rclb mov sahf test add mov rex.WRXB xchg (bad) enterq sub retq adc ja mov add mov add jne sar xor cmc mov mov ror sbb add and mov jmpq jmpq sti fs push rex.B mov rex.WRB loopne sbb cld cmp sub movabs rex xor push cmpb or mov xor in cltd test lret pushq pop rex.RB sbb shrl mov xchg xor (bad) (bad) int xor xor data16 fstpt in rex.X or (bad) (bad) (bad) std or sub (bad) (bad) (bad) std cmp (bad) mov nop movabs add or sahf sub callq loope xor xor mov mov ja jnp stc fbld (bad) jo or (bad) push sarb rex.R mov mov xlat mov (bad) rex.RX sub fstl test adc scas int jne mov fldcw add ficom (bad) ja jmpq callq adc add (bad) repz rol mov cmp test test cmpb jmpq ja jmpq je bsr shrd push inc mov bts bsf sub movzbq lea mov lea jmpq je jmpq push movl (bad) fisttpll retq jmpq xor movabs cmp imul cmp sbb (bad) std in mov hlt loopne sub sbb pop out (bad) mov add test and push pmaddwd xchg sahf repnz cmp or jbe rcrl movabs clc add (bad) sbb lods sub xchg data16 xchg test (bad) (bad) sti int leaveq cmp (bad) (bad) (bad) (bad) pop sub mov pop or cltd mov jg (bad) (bad) (bad) (bad) (bad) fisub jmpq mov (bad) push add subl test (bad) (bad) retq pushq jp rex.B lret mov jo movabs rex.WXB sahf rex.WXB pushfq outsl mov xchg mov (bad) incl pop add add clc mov cmp cmc test jmpq rex.RXB addr32 add fiadd rex.WR mov (bad) (bad) out roll lods mov pop jbe mov rex.WRB lret and insb sarb mov test insl xchg cmc fdivs (bad) (bad) (bad) sti int3 rex.RXB addr32 mov pop in repnz (bad) adc jnp js (bad) cs test (bad) cs or rex.XB lea scas add outsb mov rorb sbb rex.RX mov sar pop pop js pop add adc mov mov pop jle sub (bad) adc outsb pop or movsl (bad) (bad) (bad) pushq xor stos mov jle icebp (bad) cmp jbe rex.WRXB xchg mov mov (bad) jns xor popfq out stos leaveq shrl jbe (bad) stos mov rex.WX movabs lods (bad) add jmpq jmpq push jmpq rex.R out (bad) in sbb xlat (bad) cmp (bad) loope sti and mov xor add cmpl mov xchg push sub pop or ror add cld cmp mov pop (bad) int outsl (bad) rex.WB enterq in sti pop rclb (bad) jge xor shl xlat jo test mov fstpt push rex.RXB sub movabs pushq sahf and xchg je (bad) (bad) (bad) sti mov (bad) (bad) decb scas repnz cmpsl outsb add mov add add jl jmp (bad) xor jne callq (bad) pop (bad) setg or sahf add mov pushq imul (bad) rex.RX cltd mov rex.WXB fidiv ss sub add jo add pop insl add retq rorl ror pop sbb mov sahf cmc rolb xchg int xchg (bad) pushq xlat or adc comiss int icebp mov nop leaveq stos cmp js mov (bad) fmull (bad) rex.W rex.W jl in stos cmpsl outsb fdivr insb (bad) packssdw rex.RX movsl jg cmc (bad) (bad) (bad) cld fsub iret rex.WXB (bad) ljmp push pushfq (bad) repz addr32 loop xor ror sti rex.WXB (bad) cltd fcmovb mov rex.WRXB std movslq push push (bad) fisttp sbb (bad) xor cmp jne rex.WRX mov js sti (bad) sbb shrb retq sub or (bad) jp rex.WRB rex.B rex.X sub mov stos add mov (bad) (bad) test rex.WR mov rex.WRB enterq (bad) add add mov or add clc bt add jmpq jmpq jmpq (bad) (bad) mov (bad) imul push rex.RB (bad) jnp mov rex.WRX sub rorl loop (bad) fmul mov cwtl cwtl clc std repz (bad) addr32 fstpt (bad) (bad) (bad) std jbe movsb shrl (bad) cmc jrcxz add mov test retq test rex.B (bad) (bad) pushq mov gs mov pop movabs rcll addr32 (bad) (bad) incl iret imul xchg jne rex.R iret xor lock add and addr32 jnp (bad) (bad) cmpsb (bad) sbb cmp fbstp cs rex.XB and (bad) icebp stos jmpq pushq jmpq mov divb mov adc lahf mov outsb mov push (bad) fisttpl stc loop sahf mov test sub outsb pop adc add movabs jp mov pushq test sub fmuls fadd (bad) cmpsb pop adc cld sbb out or popfq in out rex.RXB (bad) (bad) (bad) (bad) (bad) adc sub or rex fwait mov (bad) adc scas add mov rex.X rex.X pop mov rex.WRXB loop and jae xlat rex.RXB mov mov mov std cmp outsl sbb (bad) idiv push fadds fisttp (bad) (bad) (bad) decl cmp xor (bad) and cmp pop pushfq xchg xchg loop rex.RB sbbb leaveq mov xor stos rcrl push or movabs push ja and je sub jg pop mov rex.WRX rex.X je test clc cmp retq jmpq std (bad) cmc (bad) notl cltd mov xor (bad) out pop fisub shrb loope jbe sbb cmp movabs shrb jbe stc (bad) in rex.WR sub (bad) gs test mov repnz pop sti pop int nop test rex.WR or push test rex.R and xor (bad) (bad) (bad) cld xor (bad) (bad) (bad) sar sub retq fsubrl add push stc mov hlt mov ds movsb scas xor jmpq (bad) cmp mov pop cmp insl cmp mov mov repnz rex.W and in and out fisttp mov push (bad) mov pop add jmpq jne bt movzbl test mov clc jmpq jmpq (bad) xor xchg (bad) mul enterq sbb rex rex or pushq (bad) hlt movabs (bad) cli or mov in adc stos mov scas mov and out es (bad) jg sub rex.WXB mov pushq sbb shlb and jne and in fisubl adc movslq movabs and and (bad) (bad) cld rex.RXB lock (bad) fmuls out and add add fsubs movsl cwtl mov pushfq push mov rex.X cwtl add pop jmp xor lods xchg subb roll out shrb roll rex.X push (bad) rex.RX ja jmpq jmpq jmpq mov jmpq jmpq cmc test add jmpq rep mov movzbw movsbl bswap pop jmpq pop or fimull (bad) sbb rex.W int nop cmp rex.WRXB repnz xor rolq (bad) cmc (bad) (bad) xor (bad) shrb gs imul rex.X rex.B movabs add mov sbb hlt (bad) lock stos ds xchg (bad) rex.W rex.W leavew cmp cmp int3 stos std cmp cmp (bad) (bad) sti stos sti jrcxz adc (bad) (bad) (bad) cmp adc lods rolb sub (bad) add (bad) (bad) mov cmp cmp cmp (bad) jmpq or test lods rorb jle hlt (bad) (bad) fnsave pop jmp add sbb rex.RB shll movabs sbb add add add add stc mov bt cmp jmpq callq jmpq mov lods cmp clc jmpq xchg imul out fdiv ror in (bad) add mov sarl (bad) adc rex.RXB push and lahf (bad) xchg push xor out fwait outsl retq xlat rolb ror rex.WR movabs cmp (bad) mov mov rex.R mov push movsl in (bad) (bad) cltd push cmp insl (bad) fs add (bad) mov (bad) (bad) (bad) cld pop test (bad) (bad) (bad) out rex.WB xchg std ja xorl add add outsl push jrcxz mov adc (bad) cli fildl sub (bad) jge adc (bad) sahf mov add and or repz rclb std movsb sub and scas (bad) adc cli xor adc jne bt setp mov inc bsr cmc neg sub rcr shl neg movzbl mov test test cmp clc sub clc test cmp cmp pushq test clc clc cmp jmpq bt imul stc stc jmpq test test test jle jne shl mov bt shld or shld mov cmp cmc sub jmpq jmpq jne sub shr xor mov bt cmp or jmpq adc jmpq jmpq jne not movzbq sete mov jmpq lea movzbl mov jmpq je cmp clc stc sub stc stc cmp jmpq or jmpq callq jo mov jmpq jae test stc cmp jmpq ja jmpq jmpq rex.R rex.WRX push rex.WB cs insb add mov or data16 or xor data16 sahf rex.RB xor pushq (bad) (bad) add (bad) imul lods iret (bad) push jrcxz jmp outsl fsubl pop (bad) insb xchg sbb rex.WRXB gs rcll sub mov mov adc (bad) cmp jns cwtl mov (bad) xchg mov rex.RXB mov jl jge (bad) rex.RX lods pop leaveq mov in pop jge (bad) (bad) mov retq (bad) callq rex.RB (bad) (bad) callq add cmp (bad) jmp xchg sbb cld (bad) pop out xor rex.WRB (bad) jno push (bad) (bad) (bad) in xchg ja stos mov fs pop addl movslq popfq bnd out (bad) (bad) (bad) out (bad) fldenv and lcall (bad) (bad) (bad) out xchg xor adc rex.WRXB add movabs (bad) (bad) push (bad) lret mov (bad) (bad) push xchg imul cmc leaveq movsl adc fisttpl test (bad) push (bad) out cmp (bad) push mov add mov and fxch mov outsl lahf (bad) (bad) push or enterq xchg pop push (bad) (bad) (bad) clc mov (bad) std fwait and hlt cld and mov cld insb loope add pop jae out (bad) (bad) cli or jo (bad) (bad) sti mov iret cwtl (bad) (bad) sub jrcxz rep pushq fsubr retq jrcxz (bad) (bad) std or rclb pushq mov mov xchg mov lock (bad) (bad) decb (bad) adc add add mov mov movabs push movsl push rorb rex.RXB movslq (bad) enterq mov jge lret mov nop cmpsl mov adc pushq fcmovnb sahf mov xchg lods add (bad) (bad) and movsb enterq insl mov sub outsb pop (bad) mov (bad) or mov (bad) nop sub pop (bad) movabs xchg adc (bad) or adc mov fidivrl or sbb (bad) jl (bad) jne callq movabs sub jmpq cwtl (bad) pushq sub or mov insb mov push test (bad) or add jmpq mov sub mov jmpq xor test repnz jmpq jmpq jmpq jne jmpq jmpq callq jmpq repnz jmpq je cmc xor adc movsbq push dec rol ror mov lea adc not sub lea lea lea jmpq jne rcl mov cmc sub add ror mov cmp cmp stc cmp sub cmp cmc pushq cmc cmp jmpq jb cmc clc test jmpq cmp cmp sub stc cmc pushq cmc clc cmp jmpq xchg test rex.WR lahf xor adc or (bad) int3 not or jle push mov sub adc rex.XB (bad) mov (bad) repnz cltd mov fldcw fdivl and out xchg fwait ds xchg (bad) shl in rex.WRX fwait (bad) rex.WR sahf stos out push stc insl (bad) stc rex.WXB rex.WXB jnp repz sahf lock lods adc sbb addr32 fnstsw (bad) (bad) cld jns (bad) push mov or rex.WX (bad) mov and in sbb movabs xchg mov loopne scas rex.RX hlt xor lret pop sub jb repnz (bad) (bad) xor (bad) (bad) or and dec (bad) (bad) out jne in (bad) rex.WR movabs ror outsb mov pop pop mov outsl jmpq je jmpq rep jmpq jmpq ja stc imul stc cmp cmp jmpq jmpq pushq jmpq add push push rex.B rex.R insb imul movslq je add test jmpq je cmc bt sub stc cmp jmpq sub jbe imul jo add xchg rex.B roll mov rex.WRB movsb outsl or mov rol icebp int insl pop (bad) in test out mov (bad) add loope mov negl out and je mov mov in (bad) div sbb and add cmp push jge pop sub pop (bad) rex.RB (bad) in push cmp test (bad) (bad) (bad) cld or (bad) (bad) fsubrs stos add ja (bad) xchg xchg add add pop test xchg rex.WR add pop out and or and fld1 xchg fcmovnb sub scas sub test sarl mov rex.RB hlt push sub sub (bad) imul cmp sbb ja and rcl sub sar shr shl movsbw add setg shl dec lea mov neg sbb mov stc clc cmp repnz jmpq jmpq jmpq jb clc clc jmpq callq jmpq adc jmpq test cmp jmpq lea rex.WXB (bad) (bad) cmp push (bad) movsl pcmpeqb jge mov and cli fdivrp in add lahf clc (bad) jg mov (bad) rex.XB (bad) out mov jo cmpsb (bad) rex.WXB lods rex.RXB cmp ja loope shlb (bad) repnz and and (bad) jmp outsl rex.XB sub or rcrb xor xor int3 (bad) (bad) (bad) decb (bad) (bad) (bad) decl jne jmp addr32 (bad) clc rex.WRXB xchg sbb (bad) pop pop (bad) or lahf sbb xlat callq mov outsl or xor js mov fldenv test sub mov sbb test in fldl js cmpsb and pop (bad) pushfq xchg mov rex.X cmpsl cli in mov mov adc movslq rex.X imul push mov jae or scas sub movsb mov stos (bad) mov rex.RX ror retq (bad) nop xchg (bad) test sti mov (bad) xchg xor sub mull adc callq push test cmp (bad) std or sahf add (bad) retq int rex.RXB (bad) fwait mov jb popfq xor cmp int3 cmc pop movsb retq sub cli rex.WRXB mov xchg mov decl mulb pushfq cltd (bad) (bad) (bad) incl rex.WRXB movabs sub mov (bad) or mov lods iret cwtl mov lock and jle jmpq je test test jmpq sbb lods rol xor cltd xor lahf test cld sti out adc in xchg out mov add (bad) repnz in iret mov (bad) sbb rex mov outsb callq int3 jns xchg rex.RXB rex.WRX xlat ljmp jae loopne jge or fcmovnb pushfq (bad) imul adc movabs cmp xor (bad) lea test lahf stos sub jg sbb jmpq in in ds test push insb movsb mov (bad) and gs (bad) (bad) cld or or and popfq mov pop mov scas shll fs (bad) outsl lahf add add sbb movabs cmp stc imul (bad) push cmp and xor and add repnz xor xchg test mull add out rex.B fs jno adc sbb sahf mov adc jmpq jmpq mov stc bts mov mov jmpq jmpq mov jmpq jb stc stc cmp jmpq jmpq jmpq jmpq cmc mov jmpq rcrl mov fs in mov imul in or movsb sbb (bad) mov fistp xchg movabs cmp mov jg add rex.WB xor scas int xchg gs clc cld mov shrl clc cmp sbb mov rolb mov (bad) jp (bad) (bad) (bad) (bad) cld and (bad) (bad) (bad) (bad) mov rex.WRB mov lahf scas subl add xor pop jle (bad) xor adc mov sub mov rex.R xor xor leaveq stos cmp sub sub jle xor lret mov push mov pop std mov (bad) je rol or push rcr jmpq mov adc xlat lret test jno mov sub pushq rex.WR (bad) leaveq and test sbb adc imul pcmpeqd (bad) jae push pushq (bad) sub (bad) lods out or xchg movabs jnp stos jge pop test (bad) pop hlt mov movslq test mull adc or (bad) sti stc outsb mov (bad) (bad) (bad) decb rex.RX (bad) rex.WB add or add nop rex.WR sbb xchg sub jno push movabs push notb rex.WRB retq cs mov (bad) or sahf rex.WXB adc (bad) movabs push cmc enterq loopne lret repnz jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq je bswap lea setns lea not xchg movzwl bswap bswap lea lea movzbl jmpq pushq test cmp jmpq jb bt test cmc cmp jmpq sbb sarl mov (bad) cmpsb xor mov adc push (bad) cmp xor scas scas fldcw push (bad) jae callq mov or movabs lahf (bad) (bad) push stos pop sar adc xor je and add movabs xchg pop out mov ds add movslq (bad) leaveq push hlt cmp loop mov lret jns leaveq test (bad) (bad) sti lret mov (bad) (bad) pop rex.RXB pop pop lret (bad) cs in (bad) rex.WRX or cmp (bad) sbb enterq iret subl jb rex.RX cmp jmpq sbb xchg push pushfq fs xchg rex.WRX andb cmp jmp adc shrb (bad) (bad) ja pop pop (bad) push idivb sub jl xor mov (bad) movabs xchg btr or add dec shld ror (bad) repz retq cmc cmpb jmpq jae je test bt add cmp cmp jmpq ja sub dec sub test inc add lea movsbw mov mov mov mov mov mov jmpq stc bt test test jmpq shr sub sete movsbw lea jmpq jmpq jo and mov in mov (bad) sub xchg fcoms scas loope cmp es (bad) fcomi repz movsl adc stos (bad) mov mov push push xchg xchg (bad) push imul add add out fcomip add movslq xchg (bad) leaveq rex.XB jrcxz pop jmp (bad) (bad) (bad) std test (bad) mov add add or je insb and out (bad) addr32 mov nop sti mov push mov push (bad) (bad) fidivl rex.X and es mov (bad) imul (bad) out push cmp or or outsb wbinvd rex.RB loopne shll push pop lret sarb xchg (bad) fdivrl hlt cs gs movsl xchg (bad) jne (bad) jo jg sub div lods mov sbb mov (bad) mov xor jmpq jp add icebp je jns movsl cli repnz test stos (bad) rex.WR xchg adc mov mov mov rcl mov sub lea roll shrl add xchg shlb test push xor xorl cli out rex (bad) (bad) sti (bad) mov (bad) (bad) std rcrb lret jne sub movabs xchg push loop mov jae rex.B cmp xchg (bad) mov rex.WRXB loop xchg ficoml incl (bad) rex.WRXB and int3 sbb shlb lret (bad) mov (bad) (bad) (bad) push jo stc xchg out sub flds xacquire iret jno sbb lea out js repz jl mov push retq fnstcw add jb movabs adc (bad) xchg sub je imul (bad) (bad) add bt stc test movb clc je cmc test jmpq (bad) out (bad) jmpq sbb mov out and lock mov rex.WB push fiadd and and adc repz or mov sub rex.WX mov sbb push cmc mov (bad) rex.WXB stos mov jmpq jns xor icebp (bad) sub (bad) or adc je adc (bad) (bad) sti push callq (bad) (bad) (bad) push retq xchg nop cs adc lret movabs callq (bad) (bad) (bad) xchg or rex.B out (bad) loopne sbb xchg push xorl scas mov push movabs movsl or in loop cmp rex.WRXB mov gs mov bnd stc movb cmp cmp jmpq je cmc bt cmc clc sub bt jmpq pushq jmpq jmpq jmpq bt test clc cmp sub bt cmp jmpq jmpq callq movzbw sar btc shl add bts ror inc mov stc cmc cmpb jmpq jmpq cmc add neg bt mov jmpq mov push retq (bad) mov (bad) (bad) xchg pop push ja jrcxz cltd ja stos rex.RXB xchg leaveq ds (bad) rex.WRB rex.WR (bad) test and scas lret mov jns cmc jae pop callq add (bad) (bad) (bad) pushq outsl adc cmp sbb jge cld pop movabs add and (bad) jmpq sti addr32 and (bad) (bad) incb rex.B jmp add add ja paddusb movslq in (bad) jb movabs jbe out sbb jrcxz mov cmp mov (bad) (bad) adc fs (bad) mov xchg adc jb sbb mov jmpq in jbe lahf (bad) (bad) js push pop lock cmp (bad) xchg xor (bad) (bad) fisttpl sbb popfq xor outsb add jge outsl push mov test jb or loope xor je int cmpsl out jb imul lods (bad) pushq jmpq jbe imul sahf (bad) (bad) (bad) cld push pop or (bad) jrcxz movabs test movsb (bad) rex.X jns test push lret cli sbb jno pop adc mov push lock xor imul mov mov cmp adc rex.RXB add (bad) xchg (bad) or cwtl pushq negb (bad) scas orl rex.RX rex.RXB int3 icebp rex.WRXB sub jne fstp js sti cmp xor xchg mov fucom mov addr32 pop sbb lea sub add scas jmpq jmpq push push push push xor cs insb add jmpq mov mov pop xchg (bad) roll mov push adcl outsl (bad) addr32 mov (bad) idiv fidivl rcrl icebp xor mov mov xchg add sub mov jmp or stos xchg rex (bad) retq out xchg out rex.WX add and sbbl rex.WRX pop movabs sbb pushq callq sub rex.WRB cmpsb rex.W (bad) (bad) movslq xor lock (bad) (bad) (bad) std add xchg cmp adc rex.WXB in fisttp xchg retq sbb (bad) xchg rex.WXB (bad) icebp rex.WX fcoml sbb movabs mov sbb jmpq mov int3 rex.WRXB mov fwait xchg cmpsb xchg sbbl rex.RB (bad) ss (bad) pop xor (bad) outsb and je (bad) repnz xor divb in mov test rolb sub add xchg add rcl mov sub or shr movzbl ror add data16 testl or mov (bad) lock stc dec mov test clc cmp repnz jmpq jb test test cmp ja jae adc neg movzbw adc mov sbb lea bswap mov bsf adc mov clc xor bt cmp jmpq sub sbb sahf mov rex.WRX lock movabs andl callq lock loopne adc in rolb (bad) clc and (bad) (bad) and pop xor (bad) and in rex.WB and lcall jmp jo pop fs fnstenv andb (bad) movabs mov cld mov jnp ja (bad) (bad) (bad) cld pop mov es (bad) (bad) (bad) (bad) jmp and (bad) enterq cltd (bad) mov xor retq lods add add imul rex.X jns loope jae rex.WX add lock sbb movabs mov mov xchg iret insb adc cmp add cmp xchg and jne jmpq mov jmpq ja jmpq pushq jmpq xor clc rol cmc bt cmp lea setbe mov movzbw lea setb movzbw pop jmpq jne shl rol btr mov test ror bsr sbb sub bt dec mov cmp cmc cmp sub stc pushq clc cmc test cmp jmpq xlat lods int rex.W lret jl rex.RXB mov rex.XB cs add (bad) adc loopne movsl rex.X xchg and jno je xchg stc ja leaveq rex.W rcrl sub adc adc rex.WRXB rex.R cld xchg rex.XB or test fadds movsl int adc mov mov or xor out xchg rex.XB (bad) mov retq icebp add nop mov sub (bad) mov gs (bad) (bad) (bad) cld (bad) or ja (bad) (bad) (bad) (bad) cmpsl test (bad) stc fs mov xchg retq sbb add movabs mov add jno movsb xchg rex.W or sub movabs addr32 faddp shrl mov data16 mov jae push mov imul cmpsl jne (bad) cmc (bad) ror bts bsr mov and sub rcl mov cmp sub bt jmpq bt test jmpq jmpq jrcxz jrcxz mov sub out rex sub (bad) retq rex.RXB sbb cmp jb mov fsub xchg rex.WR or (bad) (bad) and (bad) icebp (bad) clc and fisub adc (bad) (bad) (bad) (bad) cld and and (bad) (bad) (bad) (bad) mov (bad) mov in (bad) or mov xor pushq sub stos test add nop mov out or pop (bad) or mov pop mov (bad) jns test lea cwtl adc push fimul push xor movabs adc xor imul xor mov fild mov std js adc gs (bad) (bad) cmp add add hlt (bad) ss push cmp pop mov jg pushq mov clc push add xlat rex.R faddp mov mov sbb mov outsb nopl shrl retq mov insl fldt stos jmpq lahf add movsl or jmp (bad) add out sbb pushq push lods rex.RX rex.WXB mov cmp icebp or mov cmp sbb xor push rex.WR sub fsubl adc repz (bad) (bad) sbb pop (bad) rex.WB mov cmp movsb enterq push movabs mov (bad) (bad) cld xor retq (bad) (bad) pushq push (bad) outsl xchg test (bad) ja lahf jnp adc push lret or pushfq rex.WB repnz jb movabs rex.W (bad) rolb add add jl cltd fs pop adc scas pop repnz jmp sbb cmp int loopne jrcxz xchg notb test mov hlt cltd and ss sarl test sbb pop rex.B add clc stc imul jle bt test add jmpq cmp jmpq cmc sub jp cmc bt cmc ror cmp jmpq jmpq sub jmpq test jb je jmpq jmpq pushfq rex.RXB cli mov mov jp and scas (bad) add imul js hlt jmpq xor lock lret (bad) add repnz mov movabs es cmp rex.R movslq xor retq cmpsl cmc in cmp mov fstps pushfq rex adc fimull jle push adc and sub sbb cmpsb mov (bad) fdivrs (bad) (bad) cld cmp (bad) (bad) dec loope rol sub (bad) adc scas (bad) scas mov add add rex.WXB pushq jo outsl rex.X xchg xchg sub jge mov shll cmp rex.WRXB loop insl test cmp add mov pushq (bad) mov outsl jno or jmpq jmpq ja jmpq jmpq callq cmc or jmpq jmpq pushq jmpq jmpq cmp jmpq add adc pushq insl mov mov mov xchg push mov (bad) (bad) cmp repnz retq mov (bad) or xor stc or sbb insl or jo rex.RX rex mov mov out jb rex (bad) mov je imul (bad) stos jp (bad) movabs sub mov or (bad) cmpsl xchg jns movabs mov es (bad) cld movabs and (bad) pop lahf popfq addr32 xchg xor je loop xor (bad) movabs rex.WB pop rex (bad) (bad) decl movabs mov (bad) or mov fbld rex xchg adc rex.R shlb fdivrs in leaveq cmpsl out out stc pop cmp repnz jo xchg mov push (bad) jg enterq rex.R repz lock adc cltd mov sar bt jmpq push shl mov shr sbb clc sub seta not movsbw lea jmpq cmp stc stc add jmpq and sti cmp rex.WRXB (bad) in or out fistl (bad) out vmovaps sub pop imulb mov (bad) (bad) std sahf cmp test add rex.RX sub mov pop movabs jbe (bad) mov mov pop mov (bad) callq rex.R jnp (bad) (bad) sti sub mov (bad) std mov callq pop out push or ja mov mov xchg (bad) stos push push adc rex.WRXB mov jo cmp movabs (bad) (bad) fldcw push movabs rex.RX mov push or test sbb movabs ffree std xchg loope test sbb (bad) xchg sub sub adc retq pushq mov mov add bt sar mov bt jmpq jmpq jne bsf movzbl ror cmc mov stc cmp test cmp add cmc test movzwl sar shl mov test cmp jmpq (bad) lods rex.RXB ds icebp callq sub xorb mov (bad) ss rex.RXB callq cmp (bad) sar cld (bad) lret pop cmp fwait in mov cld jmp sbb movabs jle pop xchg jo xchg jmp (bad) mov retq mov (bad) (bad) (bad) (bad) std repz push mov and sar (bad) (bad) std mov repnz in (bad) (bad) (bad) dec (bad) mov rex.WRXB xchg mov xchg stc data16 fisttp out rex.WXB jmpq mov movabs fldcw adc and add test test stc cmp jmpq cmp jmpq sar mov rex.RB sub rex.WXB (bad) xor test rol icebp jmpq (bad) pushq xor nop sti jl sbb cld rex.RB ds rolb lock rex.WRB push cli sub rex.B (bad) movl movslq out (bad) xlat js (bad) pop lods rex.R rex.WXB (bad) (bad) cld test (bad) (bad) callq push (bad) sbb jrcxz add cmpsl adc mov xor sub add mov callq jo loope rex.XB lea pop mov jno xor push mov jb xor cmp out sarb in sahf out rex.RX icebp cmp add pop rex.X fnstsw rex.X adc jmp jo jmpq callq jmpq jl (bad) add movslq lea out cmp rex.WX movabs (bad) (bad) jae push sbb movsb (bad) (bad) (bad) and mov jg jrcxz sahf enterq cmp jae (bad) imul adc (bad) sbb and je cmp jl psraw outsb pop xchg (bad) test test jg sub (bad) xlat (bad) jo mov loopne mov push cmc (bad) adc (bad) (bad) (bad) sti imulb pop mov xchg push enterq and movsl testl or adc xor cmp ja (bad) adc retq pop test imul rex.R cld add std mov adc imul mov fisttpll and and rex.WX adcl or (bad) je bt or push shr movzbw bswap ror mov cmc test sub jmpq jne rcr sub btr sub bsf sar mov clc adc dec add bt cmp mov clc test cmc bt test jmpq not lea movsbw lea jmpq out cli xlat mov (bad) out sbb movsl (bad) in xchg rex.WR (bad) mov lret rex.R xchg add popfq scas (bad) (bad) rex.WX ss xor (bad) and pop push xor add stos data16 rex.WRXB rex.WB mov icebp and fnstenv and xor (bad) ja fdivs (bad) jmpq xor out (bad) pop push mov rep rex.B mov rex.WR rex rex.WRX shrl test lock rex.WXB (bad) (bad) (bad) sti mov movsb ja (bad) (bad) (bad) sbb movabs xchg cld sub (bad) int outsb pop (bad) (bad) (bad) lcall outsl jno rex.W mov ficomp jp retq mov sub imul rex.X sub movabs pop xor mov cmp mov cltd pop cld cmc cmp jmpq ja clc clc imul jmpq jge pop (bad) (bad) and (bad) pushq jp stos lret jl xor mov cmpsb xchg (bad) mov pop xchg int std cmc leaveq movsl (bad) test and add movabs xchg xchg pop int stos (bad) (bad) push rex mov cmpsl jg (bad) cmp out int (bad) mov xchg cmpsl cmp pop test (bad) push cli int (bad) sub jb rex or pop mov int mov mov rex.WRX pushq (bad) std adcl ja sarb or insb cltd cli cmp cmp add cmpsb cld push loopne adc pop subl lret fsubrs adc and rex.WR jne bts neg xor and ror mov xor setge add test mov mov jmpq test mov (bad) out retq rex.WRB (bad) mov cmp movabs xchg adc lods sar (bad) out fsts cmp movsb adc sbb sbb sbb (bad) loop (bad) mov add mov rex.WR mov pop mov (bad) and jnp cld imulb push mov cld jo (bad) sbbl and cmpsb rcrl xchg mov (bad) rcrb (bad) cld (bad) mov push (bad) (bad) (bad) (bad) (bad) cmpsl push and sub pop cld iret sti in add add gs adc add pop rex.WR ds pop rex.WX sub mov push cmp and rex.WX xchg sti imul cli push xor scas sub and sti push sbb and (bad) (bad) pushq mov iret test xchg add or add sub movzbl shrd btr add and cmp bswap mov mov or mov test clc repnz jmpq jne btc mov test add test test movzwl and shld test mov bt add cmc stc cmp clc mov clc clc clc test test jns je bt stc stc add cmp stc cmp jmpq jmpq jmpq ja cmp inc sub setg add bswap bt mov cmc mov bt clc repnz jmpq and (bad) pushq xchg xchg pop movabs out adc push rex.WRX push or (bad) mov add mov lahf (bad) gs jbe jo js (bad) rex.XB lock js xor in cmp jnp sbb int leaveq rex.W pop in pop jge bnd jb push cmpsb jrcxz mov stc retq push (bad) fucomp jge and sbb (bad) (bad) sti (bad) add js (bad) (bad) (bad) incb movslq mov (bad) xchg lret rcr rex.XB cli sahf adc adcl (bad) xor rex.X callq (bad) rclb gs jns scas (bad) jno in cmpsb xchg iret insl pop clc sbb je (bad) (bad) xor mov jp (bad) cmp or jmpq mov cmc cmc sub jmpq cmp sti rex.WRXB movsb xor cmp push (bad) xchg mul roll and xchg ds (bad) xchg cli push push gs mov xor mov cmc lock mov cwtl rorl rex.W fucomi xor (bad) fs pushq mov mov (bad) (bad) std jnp orl add sbb (bad) (bad) std adc sub xchg (bad) (bad) (bad) incl rex.WR cltd adc lahf mull movabs pop std test (bad) or fdivl (bad) sbb pop (bad) int3 mov nop mov std imul mov add mov incl fldt fsubs rol pop cld cmp mov cmp bsr mov shr sbb bsr shrd mov test or jmpq je xor (bad) icebp add btr push lea or mov inc sub mov bswap setp lea jmpq jmpq cmc jmpq sub sbb loopne mull (bad) fcmovnu or fistpll rex.RX fnstenv (bad) movsl (bad) sub (bad) xchg rex.WRX out callq push add (bad) adc xlat (bad) rex.WRXB rex.R (bad) sub repnz push es (bad) and (bad) (bad) (bad) mov adc es (bad) ds mov (bad) (bad) std imul add or movslq xor pop in jno rex.WX (bad) sub ds mov and adc es fimul lods jge add (bad) cmp (bad) jrcxz jmpq insb (bad) mov jl callq (bad) sub add hlt and (bad) jmpq xor and and pop pop add scas or repnz in fiaddl push jmpq shrb retq cmpsl mov (bad) fimul (bad) ss stc mov add cwtl mov and cld pushq mov or rex.WRB sbb jle je rolb je fisttpl push mov push cmp mov (bad) (bad) (bad) (bad) (bad) std rex.B (bad) (bad) pushq sbb rex.WRB pop mov push std cli push sbb or cmpsl enterq jmp rex.R rex.X adc (bad) (bad) iret push shrl sbb mulb push popfq sahf mov add out add callq add callq rol mov test cmp test jmpq jne sbb lea mov test stc clc bt add bt clc bt movzwl cmp jmpq jmpq jmpq jmpq imul lea pop and rex.X adc pushfq rex.RXB loopne add in xor and or shrb popq test xchg add or jp add movabs (bad) push or adc jl (bad) (bad) (bad) (bad) std mov cmp xchg (bad) (bad) (bad) std rex.WB clc sub (bad) (bad) (bad) mov stos mov or nop cld in rex (bad) cmp rex.X add cld (bad) or mov repz xchg ss rex.R sub adc (bad) push jo jmpq ja jmpq push push rex.RB rex.RB rex.WRX cs insb add pop cmp xor rorl xor retq int in sbb (bad) loopne sbb xchg (bad) or sahf out xor mov repnz pushq or lods mov (bad) mov (bad) sub push fisubrl (bad) sub push xchg lods (bad) ja (bad) (bad) sub jae pop addr32 cmp pop xor add icebp mov pop leaveq or in jle (bad) (bad) cld (bad) in pushfq ja (bad) (bad) (bad) lahf (bad) rcl add adc std mov add add (bad) rex.WXB lock xor xchg or mov add and jmp in adc (bad) push push cmp cld repnz (bad) mov std cwtl sahf (bad) and mov roll cmpsb not pop add xlat mov jg cltd out xchg clc cmc clc cmc add jmpq or jmpq jmpq rolb rolb movabs retq mov data16 hlt cmpsb cwtl mov mov outsl (bad) test lea xor rex.WXB ja (bad) rex.WRXB cs fbstp jp (bad) and mov cmp cld loopne mov mov (bad) (bad) (bad) sti (bad) push in in (bad) (bad) (bad) std cwtl rsm xchg stc hlt scas lea (bad) lret popfq fnstcw (bad) or sub xor jae mov and sahf rorl (bad) mov scas mov (bad) (bad) (bad) decl sub add movsb add pop jg xchg movslq rex.WB in rex shr sub add add jrcxz push or stos add jb loop mov cmpl repz lock (bad) xor int mov repz add rex.WXB repnz xchg xchg rex.RX rex.RXB enterq cmc (bad) stos rex.WB rex.X (bad) mov rex.WRX mov mov pop lods fdivl mov mov sbb movslq mov scas push adc insb xchg rex.XB gs (bad) icebp and jb cmc and adc and movabs cld movabs xor (bad) sbb cmc rex.WRB lock in insl adc xor mov outsl push pop add add pop mov lods cmp out (bad) fsts lahf xor imul stc in mov rex.X rex.XB add jae cmp pushq outsl sarl cmp (bad) xor sti cltd (bad) sub mov test test bt or inc shld mov rcl add cmc sub sub dec bts rcl mov stc jmpq jg jne jmpq cmp test movb jmpq jmpq cmp jmpq jmpq pop (bad) movsl sbb stos mov scas sbb add lahf imul out rcrb xor insl ja (bad) xor lea push cmp push and xchg mov test jge pop (bad) lods incl iret rcrb push int add xchg (bad) (bad) (bad) sti cld xor cmp sbb out mov (bad) callq pop or jbe movsl mov jnp and (bad) (bad) (bad) movslq cmpsl cs outsb scas orl sub (bad) (bad) jmpq (bad) xor mov sbb pop imul cltd sub pop (bad) mov cmpl cs mov mov orl fisubl movabs jmpq adc adc mov or sub test and mov add and cmp jnp add adc mov clc jg clc test jge je bt sub jle cmp je ja cmc bt jmpq callq clc xor add movsbw sar sar mov jmpq scas (bad) out (bad) lods lahf xchg adc jmpq movabs and adcl xor addr32 pop or repnz cwtl leaveq jae mov (bad) fxch (bad) retq fsts jno cmp cwtl jmp jp mov or movabs stos lret insb push (bad) and mov cmpsb rex.XB rex.X addr32 push clc test out xor mov (bad) (bad) sti nop pop jg (bad) and xor in out out (bad) (bad) jmpq pop rex.B scas jno mov (bad) rex.WRXB (bad) adc sbb cmpps xor stc mov out (bad) (bad) out (bad) cmp mulb shlb int leaveq pop fimul adc add outsl fiaddl add cmpl callq decl mov mov sub stc xor dec mov sar mov jmpq movb jmpq jmpq ja jmpq jne rol mov cmp rcl sub dec sbb cmc mov cmp cmp clc sub jmpq jmpq cs cld iret sti retq mov rex.WXB xlat and sar icebp imul mov (bad) out sbb imul pop xlat jo xor (bad) rex.WR scas (bad) in rex.WR test add (bad) jmpq je in in (bad) push (bad) or (bad) int3 fs push cmp sbb sar fiaddl or cmpsl rex.WRX push movsb (bad) (bad) (bad) sti out jne jmp (bad) (bad) (bad) incb xchg stos (bad) push mov in imul cmp rcll jg stc mov adc icebp sahf pop xor mov (bad) (bad) (bad) mov xchg sti test es xchg pop (bad) lahf mov lret (bad) shrl retq int3 mov jnp mov ds (bad) mov mov stos push mov test xchg add rcl neg ror adc add cmp rcl add cmp jmpq ja stc jmpq pushq jmpq movabs jp jmpq bnd xchg rex.B (bad) mov test pop cmp retq or fdiv callq fcmovnb mov xchg retq rex.RX stos shll sahf sub or mov add push (bad) cmp xchg (bad) (bad) (bad) (bad) cld mov cltd (bad) sub xchg not mov add (bad) icebp cmp pop adc rex.RXB retq (bad) jbe cmp sarl mov push (bad) mov (bad) out rex.WRX iret lock (bad) push mov xor push lock nop leaveq jmpq ja cmc stc jmpq jmpq jmpq not setp mov jmpq sub jmpq sar clc adc bswap mov cmp cmc cmc cmpb jmpq cmp jmpq callq bt or jmpq jmpq callq bt or add shl inc rcr mov cmp bt clc bt cmpb jmpq jmpq jne test cmp movb test test jmpq je shrd btc inc or push sar rol xor rol mov (bad) lock in and add fldcw and xchg (bad) lea jmpq sub ss in cmc pop sub xchg cli or callq (bad) popfq imul mov fs and xor rex fisubrl ds mov sub movabs sbb xor cmpsl retq std enterq lret ss stc rex.WX (bad) xchg mov xor (bad) (bad) cld push mov jno (bad) (bad) (bad) callq jl mov test sbb sahf rex.WB sbb ja mov mov rex.WRXB movslq ss mov fcmovu or add add pop (bad) jmpq pushq rex retq loopne sbbl pop rex.RB out and add rex.WRXB rex.R sub fimul es loop adc adc (bad) stc sbb je bt test sub cmp cmp stc cmp cmp jmpq lock movslq in sbb xor xchg lret xchg adc (bad) scas sbb mov sub or add (bad) movsb xor and rex.WX bnd and std retq sbb loop shlb rex.WXB rex or movsq pop cmp and enterq adc (bad) push adc rex.WX cmp jne push out add mov outsl or (bad) (bad) std ja jle sub add add popfq rex.RX (bad) ss sub xor xor (bad) jle es pop jne (bad) add cmpsl mov lret sti mov mov movsb std cwtl jnp sti jnp lea add insb mov clc sbb (bad) push jle or rex.RB orb jge mov (bad) mov lods (bad) callq push cmc in test (bad) cmp idivb cmpsl jmpq (bad) (bad) (bad) std pop pop rex.WX rex.RXB add (bad) stc or and (bad) fwait lret pop add retq add cmp movabs adc (bad) (bad) add jrcxz loope add (bad) xlat jbe retq leaveq jns,pt mov imul int icebp lahf scas movsb stc pushq (bad) pop mov mov ja (bad) sub retq sbb andl rol loope vfmsub213ss adc stos jns (bad) (bad) iret adc mov sbb pop cmp (bad) pushfq movabs sbb mov or movabs fwait jp (bad) or xchg jg (bad) (bad) jmpq jrcxz callq int3 cli jns mov (bad) mov test jp (bad) leaveq jbe out iret add jl (bad) mov xchg rex.WXB testl rolb fidivl enterq rex.B mov callq mov leaveq mov and (bad) mov insl add cli xchg mov or mov cs pop adcb jl xchg lret jne lret mov rex.WRXB push int3 mov (bad) xor (bad) jbe lret insl (bad) (bad) pop cmpsb jno (bad) ja lret mov mulb rex.WXB test mov jo jno,pt push sub xor adc (bad) lods mov scas push rex.XB rex.WR adc pop repnz rorb rex.X rex.WR je push subl sub adc mov decb (bad) mov scas js cmp test test cmp cmp je and imul cltd cmp test adc sub sbb test sub jrcxz fnstenv rex.WB cmp or push (bad) push (bad) fnsave imul lret (bad) (bad) icebp imul je ds lret jle (bad) jno shll add leaveq pop lret (bad) movabs and cmc rex.B xchg jae movslq pop int outsl rex.X mov push push jrcxz (bad) callq or (bad) js in clc imul adc retq push callq add jmpq lods cmp rcrb in push jbe sub rorl (bad) push xchg imul stc (bad) xchg addr32 jmp (bad) and kortestb rex.RX add mov cmp and movabs sbb hlt movabs push or mov rol or lods and sbb adc pop add imul jp xlat cmp adc stc insl push add movsl and adcb scas movsb hlt jl add jmp (bad) sbb xchg sbb stos (bad) cmp adc jrcxz sbb xor jl adc jle xchg (bad) outsb and jmpq rex.RB lahf bnd (bad) (bad) imul add (bad) loopne test (bad) push and adc sub pushq and rex.R mov in (bad) imul (bad) xchg cli outsl mov add cltd ja cmp mov pushfq mov movsl and rol (bad) mov sbb mov retq (bad) iret (bad) and jne stc cld (bad) rex.WRX add jmpq lock imul scas mov mov cli fldt test add jmpq jmpq ja jmpq jmpq jmpq flds mov (bad) mov cmp fldl clc cli xlat retq jmp stos (bad) rex.WRB push lods out (bad) lahf (bad) sar (bad) scas (bad) add cltd mov (bad) in push rex.WX fs mov mov rcr imul je (bad) (bad) (bad) cld or (bad) (bad) (bad) (bad) sahf jl cmp sahf jne rex.WRB rex.WRXB xor (bad) scas adc imul or mov push std push cli lods fstl fdivs insl adc add add mov push or pushq (bad) or or cmp push (bad) jnp movabs push (bad) mov jne cmc jmpq test jbe pop int mov (bad) mov add rol rcl cmp mov sar or and ror mov test cmc repnz jmpq jae sar sub bt mov sbb sar mov bswap cmp cmp mov jmpq jmpq (bad) in (bad) mov xchg xchg push jl and cmp movb and rex.WB rclb (bad) out out push std retq jge scas (bad) nop jno (bad) push mov mov fadd xchg adc lret push test lods rex.RX repnz sbb rex.W data16 (bad) cli (bad) hlt jge roll push rex.WRXB xchg sub xchg outsb adc fs jrcxz cwtl sbb fldt (bad) (bad) sti mov (bad) (bad) sbb sbb xor cmc movabs clc (bad) (bad) (bad) lcall mov rex.B or je mov mov rex.B imul rex.W lock push fisttpll adc cmp sub jb (bad) cmp bnd xchg add adc rex.RX lahf mov stc test jmpq test cmp cmp repnz jmpq jb cmc test cmp bt cmp jmpq jmpq setl bsf shrd xor or btc btr btc mov xor stc neg or add and ror and mov bt test jmpq clc loope sub pop (bad) icebp sub insb mov test xchg rex jo xor pushfq push and sti or in (bad) lret (bad) (bad) cld adc (bad) rex.XB cmp pop push and popfq in xor lret cmc gs jno mov in (bad) mov int and (bad) cmpsb xchg rex.WRXB xor xchg or rex.W (bad) (bad) sti mov loopne (bad) (bad) (bad) (bad) incb or mulb mov insb jne mov movabs rex.RX adc int ror (bad) (bad) (bad) dec bnd cmpsb cmp add cmp mov lret out add ss push loopne cltd int movsl sahf (bad) mov stos test adc rex.WB rex.B rex.RXB xchg adc mov sarl es cmp movabs or notl pushq pop or push push xchg lock rcl mulb push xor fstpt js loop sbb movabs add cmp (bad) (bad) std movabs sbb out (bad) rcll pop (bad) (bad) (bad) std cmp (bad) (bad) ljmp (bad) mov cmc enterq popfq std adc rex.X jmp cmp rex.WR rex.RX sarb rex.W (bad) rex.WXB xor xchg cmpl repz mov xchg insb std jno rex.WB rex.WRB lea rex.XB xor or adc rex.W xor (bad) mov pop mov add mov fcompl mov cmp pop int mov jo (bad) out mov push mov mov push mov imul std (bad) (bad) push jg pop fldcw mov sahf mov (bad) cmp push mull mov add mov (bad) mov lods push adc test cmp xchg (bad) (bad) (bad) sti xchg cmp stos imul (bad) (bad) es mov jge lock nop clc (bad) pop sub sti cli callq jmpq pop pop mov (bad) std or push or xchg (bad) mov jmpq cs callq pop (bad) hlt (bad) or mov cmp enterq xchg mov xchg rex.X adc pushq jmpq cmc bt sub bt test pushq clc jmpq repnz jmpq stc jmpq jmpq (bad) sbb movabs (bad) (bad) repz (bad) or rcl add and stos adc push jg (bad) outsl fwait and jo iret pushq sbb (bad) mov pop std lahf mov sub mov cld xchg nop and mov cltd xchg sarl cs mov jo andl jmpq movabs jg lea jmpq xchg rex.X xchg mov (bad) (bad) pop (bad) rex.RXB ficomp rex.WRX in (bad) lahf sahf pop cmp (bad) xor movslq pop pop xchg push mov push add mov mov sti test cmp pop lods xchg ja scas movsb xchg xor in pop mov jno (bad) jo negb mov and xor test (bad) pop in cltd cli rex.WR or movabs jb jle (bad) (bad) (bad) decl fildll lret adc outsb (bad) mov mov (bad) repnz rex.WRXB and rex.X jl cmp cltd or or imul addr32 cmp mov add jle (bad) int3 scas sbb and adc rex.RX stc insl not bswap mov jmpq callq jmpq test mov je mov or (bad) jo,pt xchg lea (bad) add movabs mov cld cmc (bad) (bad) xor bnd xlat rex.WRX and scas out xchg mull add jrcxz (bad) popfq (bad) xor (bad) lods cmpsb and test xor (bad) rex.WR rex.RX loope pop cld xchg lcall xchg in jnp and pop jno int pop mov jl (bad) (bad) sti (bad) (bad) sbb add (bad) (bad) (bad) push (bad) rex.RXB xchg add sbb (bad) test xor callq iret (bad) (bad) in nop rex.RX fdivrs xor callq (bad) fs rex.WX repz cmpsb xchg xor mov (bad) ficoml mov rorb mov xlat pop lret adc pop (bad) jae in repnz lret mov pop pop imul movslq es lret ss xchg adc mov (bad) div repz mov rex.X rex.WRX je lret pop or or movsl lea and or sub jae (bad) add xor (bad) imul lahf repz ficoml rex.WRXB rex.WXB rex.WR rex.WRXB sbb rex.X sbb adc rex.WXB jno push enterq stos sbb adc repz jmp cmpsl pop adc push rex.RX or orl repz sub xchg (bad) (bad) cld sbb cmc or (bad) (bad) (bad) (bad) test in hlt and xlat add adcl sbb jp xchg (bad) (bad) (bad) loop xor popfq rol fdivs mov mov cmp xchg (bad) mov xor (bad) push sub sbb sbb xor fidiv sub and xor sub or sarl and adc movabs or add jmpq jmpq jmpq jg rex.WRXB addr32 pushq (bad) leaveq cld rex.WR outsb xchg sub cmp shll in rex.WRX cmc (bad) rex.RXB ds cwtl rorb cmp pushq rex.WRXB and lock (bad) cwtl (bad) push or add (bad) (bad) (bad) std push add xor movsl rol add add adc mov repz out rcll xchg (bad) cmp mov insb sbb (bad) mov sti scas add (bad) ja mov lock xor xchg (bad) xchg hlt jns mov (bad) jl jns stos int jns mov hlt jns mov pop mov hlt (bad) jns mov pop jl lods and jb mov add sub (bad) addr32 (bad) sbb stos (bad) in or je nop popfq cltd push xchg loope insl xchg cmpsb (bad) stc loop rex.R or push jae mov repnz push std jl mov (bad) or sub or adc jge mov rex.WXB xchg imul je mov add push rex.RX pop push decb mov stc imul mov lret rex.R rex.RXB mov stos sbb imul out jle mov cmp xor mov push sbb clc rex.RXB mov mov rex.WRXB (bad) fs fcmovne xor push (bad) cmp xorl xchg mov adc jrcxz pushfq lea frstor rex.WRB pop add sahf adc fsubrs rex.RX stos push xor mov (bad) pop mov nop imul (bad) mov test jg rex.RB movsb sbb jg addb (bad) cmp rex.WR test mov cmp mov mov xchg fildl push mov movabs (bad) rex.B and add sub mov rcl in fistp mov sub (bad) in cmp xchg in callq js rolb push cmp mov sbb jbe xchg test (bad) (bad) adc in pop rex.X movsl mov (bad) mov testb out mov adc or sbb and (bad) push (bad) movabs pop mov mov rex.WB stc rex.B std mov mov fild mov jmpq movabs iret scas (bad) (bad) (bad) ja mov popfq adc clc pushq fwait or movabs xor or rclb mov (bad) (bad) (bad) decb rolb hlt add xor (bad) (bad) dec leaveq sar mov rex.WB js cmp in push hlt xchg cmc add jae mov or adc (bad) pushq sub adc addl mov fwait (bad) push mov js clc mov push rex.WRXB lods movslq rex.WX add (bad) (bad) mov lods sbb xchg or rex.RB xchg in (bad) pop rex.RXB or rex.WRXB lret sbb (bad) (bad) and (bad) or cwtl leaveq cli insl in rex.WX cmp and test notb push fisub es jle xchg lea mov cli icebp or mull (bad) (bad) cld xor (bad) (bad) inc roll iret lods shrb jb popfq xor sub mov out add add imul cld scas adc and rex.XB fnsave repnz sub (bad) fistpll sub movabs xchg mov movsl iret add mov fwait jge or repnz mov loop out or imull jnp add mov jle (bad) cwtl sbb mov pushq rex.WR es push rex.WRX and or mov mov add (bad) out fdivrl push rex.WX and jbe enterq pop (bad) rex.RXB rex.XB pop movabs imul jge xchg fnstcw insb pop xor (bad) (bad) (bad) (bad) cld in pop (bad) stos movsl adcl (bad) xchg out xchg mov xchg (bad) (bad) push std cld fwait add add or imul scas lret (bad) movabs fldt (bad) push cmp stos mov jno and out notl xor push (bad) jnp push callq xor (bad) mov push or movsb (bad) iret xchg mov and rex.WXB (bad) and (bad) jge (bad) mov lods rex.WXB rex.WRX pop pop mov test (bad) adc (bad) popq push xorb pushfq mov push mov (bad) mov mov fnstsw movslq faddl (bad) jge cmpsb add xor (bad) (bad) cld (bad) repz (bad) (bad) (bad) incl (bad) imul loope data16 stos xor leaveq sub rex.WR (bad) sahf movabs mov test add (bad) or movabs std fucom rex.WB lods in scas pop ss cmp fdivl pop adc addr32 repnz xchg mov (bad) retq cltd movabs or jae xchg lock jmp rex.WX popfq (bad) jns cld jmpq jmpq je jmpq jne shr sub xor movzbw mov shr add rcl clc mov jmpq jp pushq jae pushq jmpq rep bswap lea pop jmpq callq setns sar bswap not add sbb btc jmpq jmpq push test jno mov rex.WRXB (bad) stos movslq repz (bad) movabs (bad) pop sub movsl xor jmp (bad) mov rex.RX xor cld xchg jb (bad) jl movsl loop leaveq pop jge pop mov or (bad) icebp and cwtl xor (bad) rex.WRX cli add in push (bad) out jne (bad) jl jl lahf pushfq int cmp push pop jbe insb std (bad) jns pushq sub rex.WRX pop decb and jo and sbb pushq cmpsl sbb ja push mov add popfq rex.RX rex.WRX callq (bad) (bad) xlat rex.WR pop (bad) (bad) or (bad) sarb cmp lock rex.WXB lret (bad) (bad) sbb lret mov lahf (bad) mov clc jmpq movb clc bt test test jmpq jmpq adc shll pushfq fimul (bad) hlt imul mov mov rex.WR (bad) or in jge sbb (bad) jge sarb lock sbb mov pop xor mov jne mov hlt xchg (bad) (bad) outsb sahf adc ja mov rex.WRXB je nop mov idivl (bad) (bad) (bad) cld cltd xor xchg cmp (bad) ljmp enterq scas test psrad outsb jmpq sub xchg rex.XB out subl sub sub js xchg add add rex sbb push rex lahf jge,pn pushq movslq or sbb mov andb (bad) out mov cmpsb mov (bad) adc (bad) xchg int or (bad) cmc jmpq bt ror test stc clc sub cmp bt xor clc jmpq and ds (bad) jae mov pop fwait jmpq rex.WRXB rex.WRB sbb fwait rex.RX mov pop nop xchg add movabs lret (bad) push mov xchg in ja outsl std loop cmpsl lret testl rex.R pop int3 lahf or pushq xchg (bad) scas gs push push mov rex.WRX (bad) (bad) std or addr32 jnp mov flds pop cltd lret xor rex scas add hlt (bad) imul jo xlat (bad) fdivl (bad) (bad) (bad) incl fisub sbb (bad) (bad) decl sahf fildll leaveq add testb mov andl mov xlat pop scas fnop lods adc mov jae rex.WX gs es add mov leaveq movsb lods mov (bad) mov movabs add test lea shld shld setp xor bsr mov dec add shl sar shr xor mov bt bt jmpq pop sub hlt jns sti cmpsb lock movslq sbb jrcxz leaveq jmpq xor rex.X pop xor sti lock fist xchg xchg push or movslq push imull (bad) in leaveq pop push xchg fmull (bad) mov pop data16 (bad) xor fimul int3 pushq cmp (bad) xchg pushq movsl fild shrb out decl lods rex.WB out loop ss mov (bad) (bad) push cmc mov (bad) (bad) sti sahf movabs cmp ja movabs (bad) xchg (bad) (bad) (bad) (bad) ljmp imul or fnstcw insl jle pop leaveq pushq cwtl cs mov mov addl (bad) pop rex.R jp repnz or mov movabs (bad) (bad) jmpq test mov cmc clc cmp jmpq jmpq jne shl mov test cmc add clc jmpq clc add stc test cmp jmpq jb clc jmpq jmpq jae jne not test rol sub bsf mov inc add clc mov clc test jmpq jmpq (bad) or test fwait (bad) jge sti (bad) hlt xchg movabs cmp (bad) repz sbb and xchg movabs movabs gs and adc (bad) adc notb xor pop mov rcrl and test jno push xor jae outsl sti out rex.RX movabs mov lahf test pop adcl rex.RB xchg rex.XB rex.WRB or pop xchg or lahf sarl pop push xchg psubsw loope rex.WXB es (bad) test add out ficoml movabs test retq lret nop hlt cmp loop clc ss lods outsl (bad) adc rex.WRXB (bad) fisttp fdivrl lsl and movabs (bad) or or mov cmp lret rex.RB (bad) (bad) (bad) sti fist mov (bad) (bad) (bad) (bad) (bad) outsl lods adc lods subb push adc (bad) cmp sarl (bad) (bad) rcll rex.RB sti sub (bad) cmp cmc (bad) mov mov icebp sub cmp (bad) add sahf mov (bad) jrcxz and rcl sar (bad) in insl int rex.W mov movsb xchg sub mov jmpq jne xor sub clc xor lea shrd test mov inc (bad) lock ror mov jmpq add rex.RXB gs outsl fs gs outsb fs gs (bad) jp add callq rolb add test jg (bad) stc sub xor (bad) cmc mov shr rol sub cmp shrd mov jmpq jmpq cmp jmpq mov (bad) insl rex rex.WRB shll rcl out shl faddl push fild pop xchg jmp pop add scas add (bad) mov rex.B shrb div and jbe (bad) stos mov pop xchg rex.R iret test rex.B pop mov rex.RXB shrb nop jae mov (bad) popfq addl mov xchg (bad) mov movabs xor shrb rex.WX cs test rex.X and cmp (bad) cld adc (bad) (bad) (bad) (bad) movsl (bad) mov xor sbb add add enterq out jrcxz cmp mov scas cmpsl mul test out movsb iret (bad) rex.RB std mov test movslq imul retq pop rex.XB stos jb rex.B mov pushq out in repz add xlat lea bswap not jmpq movzwl sbb mov cmc test add cmc bt bt cmp mov clc test jmpq lods cmc sub cmc stc ror bt jmpq jmpq add jmpq jne lea mov movzbw movsbw mov jmpq jne clc cmc test stc movb jmpq ja jmpq sbb jp stc (bad) mov cmp sbb xchg or (bad) sti (bad) rex.WRB retq scas mov test jmpq leaveq je (bad) xchg pop sbb add mov sub sub push sub test (bad) fsub fistpll sub (bad) movabs and xor retq jo (bad) out sub jno (bad) (bad) (bad) cld push adc push and (bad) (bad) callq rex.W xlat addl (bad) pushq add jnp pop sti (bad) and fdivrs jb stos xor jmp sub in mov jge clc lea pop (bad) jae shlb gs scas lods mov mov (bad) pushq cmpsb mov mov cmpsl loope sub jg je adc xchg clc out rex.WXB adc movslq lret out jmpq and and ja cli and xchg jne pop cmc movabs jbe mov (bad) movsb movsl and mov lods cmpl mov rex.WXB or insb fadd adc lock imul stos xor mov (bad) mov jmp adc outsb imul (bad) (bad) (bad) cld ss fnstcw (bad) (bad) inc mov push ds and (bad) (bad) add add rex.RX (bad) out jp lods pop rex.WX xchg sbb sti mov pop fnstsw iret pop xor sub adc (bad) rex.RB cmp insb xor cmpsl (bad) push mov test (bad) imul test mov jmpq mov (bad) or add jmpq jne bswap mov jmpq cmp jmpq jmpq jnp sbb sub jne outsb add adcl rex.WX rex.XB xchg (bad) cli sarl pushq mov add or fnstsw xchg or insb movabs (bad) ffreep mov jb iret jmpq add rex.XB cmp sti (bad) mov mov std mov outsb xchg mov leaveq mov mov rex.WB fbld mov (bad) (bad) cmpsb in (bad) cltd add (bad) and lea (bad) (bad) pushq je (bad) push and icebp jg fnop and lock (bad) jge add iret mov fs lahf lea (bad) ja fdivrs adc rorl mov loop rex.WRB stos (bad) rex.B test (bad) add shlb push and lock clc mov jo stc test jmpq clc test add clc cmp jmpq retq outsb add mov sub fcmovnbe (bad) pop mov xchg leaveq pushfq push cmp pop mov rex (bad) or fsubr and (bad) movabs push xchg fld1 rex.RXB xor imul out xchg add push xchg cmpsl sbb jrcxz sbb (bad) add adc adc clc fsubrs sbb rex.WRXB push mov xor cld fnsave (bad) ljmp stos sbb movslq cmpsb xchg xchg xchg (bad) leaveq js add add rex.X in fcompl mov jge jae stos push fwait xchg pop mov sub mov or in xchg (bad) clc shll mov imul pop push cmp fdivl adc sahf mov stos rex.WB or test add adc xchg cli (bad) decl clc sub rol add shr bt and (bad) lock mov setl adc mov cmp repnz jmpq fdivrl lods lret pushq insl scas and je (bad) int callq leaveq out rcr or pop adc iret (bad) cltd mov jbe (bad) mov stos sub movsb mov rex.W cs movslq pop adc jne in mov rex.RXB cmpsl shll stos mov (bad) cmp (bad) cld ss (bad) (bad) (bad) sti cmp (bad) push sar (bad) std int nop cs retq xchg (bad) or sub and mov sahf lret xchg int3 imul fwait movabs or movabs or push (bad) rex.WRX and in jge (bad) and sbb xor (bad) xchg (bad) (bad) imul jns pop cmp pop cmpsl lea pop rex.RXB stc xchg cli adc sub in bswap lea lea pop movsbq lea mov jmpq jae jmpq jmpq cmc clc add jmpq jmpq retq addr32 cmpsl rex.WXB (bad) rex.WB adc sub fst mov rex.WR adc sub std clc pushq mov xorb mov out hlt (bad) lret or sbb jns xorb add pushq (bad) (bad) (bad) jmpq sahf scas sti mov sub adc cs (bad) pop (bad) rex.RX push rex.RXB lock rex.XB jmpq jle cmpsb (bad) (bad) (bad) (bad) sti clc rex.RXB add mov mov or add mov out cld out ja add add or clc rex.X cmpsl (bad) outsl int3 mov pushq mov je (bad) mov pop cmp add adc movabs push or adc xor js (bad) cs scas rex.RX push or rex.WRB sbb mov jmpq mov pushq imul pop jge (bad) push orl rex.WR jge lods cltd hlt negl fcmovbe pop cmp or xchg jp (bad) xchg js addr32 sbb (bad) (bad) (bad) sti insl push outsl jne adc pop xor jb (bad) push adc loopne push lahf stos fsubrs lret (bad) (bad) std mov push test pop rex.X cmp enterq cmpl cmp sbb pop mov mov xor cs cwtl pushq pop fnstcw jbe mov (bad) (bad) push (bad) (bad) (bad) jmpq rex.WRB and movabs push mov cmpsb mov repnz pushq loop test jb jae mov sbbb out (bad) cmpsb xchg sbb jae xchg shll adc mov adc or andl (bad) fidivr and cmp fs sbb xchg rex.WXB cmp popfq sbb rex.WR sub rex.WRX sub retq mov clc rex.WB sbb lods fidivl cwtl sti (bad) cmp mov cmc jg pop push rex.R or mov jns movabs mov or int in add (bad) and loope retq (bad) (bad) decb (bad) (bad) (bad) decl fidivl mov int3 pop stc mov xor push fbld orb andl sub pop jrcxz notl sbb sub pushq (bad) and jo sub negl xchg cs scas fldcw (bad) callq jmpq jmpq je clc cmc sub jmpq jmpq mov rcrb cmp push add mov out add fild movabs test (bad) cwtl imul adc mov (bad) and ss xchg lahf mov push rex.WRX movabs mov xchg jrcxz (bad) (bad) (bad) cld pop stos rex.XB (bad) (bad) (bad) (bad) (bad) rex.WB fnop cmp mov (bad) pop idivl ss sahf (bad) shll jnp movabs test add add add loopne loope adc (bad) leaveq pushq movabs js iret (bad) xchg cli xlat mov test decb sarb movabs icebp jp rex.WRXB mov (bad) fidiv mov cld clc cmpb jmpq jne jmpq iret and or test mov mov push fwait push cmpsl idivb or int mov push mov rcr add fs push rex.WRB xchg (bad) jbe (bad) or (bad) (bad) fistpll pushq (bad) adc add and or pop xlat cmc rex.WRXB xchg decb lods loop or jne add movslq adc outsl and mov or cld mov mov sub mov lods mov int rex.X lret xor lods rex.RX or push (bad) test outsl fwait iret adc rcll imul push and rex.WR repz xchg (bad) popfq mov (bad) lahf rex.RXB (bad) sbb sub cmp hlt movsb jno (bad) xor data16 int mul rex.R insl pextrw xor loopne xlat push addl (bad) decb (bad) (bad) (bad) (bad) fnop add jmp rex.RXB movslq jne pop lahf sbb rex.RX outsb ja jp push (bad) pop xor sti push rex.WXB push xchg jbe cltd negl sub xor rex.WXB (bad) rex.B popfq std rolb jg,pn out fnstcw loope (bad) rex.R rex.WRB mov jl (bad) jmpq jne sub shrd btc btc mov clc clc cmc cmp or jmpq lea mov movsbl mov mov not mov mov lea mov jmpq std out int sub mov nop mov pop mov in rex.X stc sti out xchg fsub (bad) mov rex.WRB adc adc shl out (bad) cli xlat xchg mov mov (bad) adc test test rex.X fmull cmp xor mov lods mov jae out or movabs (bad) mov jno (bad) xor addr32 push sub xor (bad) mull nop mov adc xchg pushfq jmpq sbb add cmp add (bad) (bad) sbb (bad) (bad) loope rex.WXB (bad) (bad) (bad) cmp cmpsb es mov (bad) or imul in cmp mov (bad) (bad) retq mov fs rex.X (bad) or movntps (bad) mov rex.WRXB pop pushq cmp (bad) (bad) (bad) decb (bad) (bad) (bad) incl sub icebp mov (bad) repnz test retq xor imul sub mov add out (bad) or (bad) mov scas mov xor cmc sbb (bad) jnp cli movsb xchg rex.RXB jb pop adc sbb movslq pop pop rex.B int pop loope mov add sahf sahf mov test (bad) (bad) (bad) std movabs and lret or fistpll xchg mov mov fsub mov rex.W rex.X (bad) loop icebp cmc in rex.RXB pop mov lahf rex.WB shr xchg adc mov loopne adc xor movabs xor stos rex.RXB mov xchg incl sbb fnstcw mov or mov test (bad) push movsb imulb imul test mov (bad) test iret xchg (bad) stc push pop xor stos (bad) sub sti data16 cld push rex.WRX mov sbb rex.WR mov mov cmpsl adcb (bad) hlt je (bad) adc js mov mov hlt or xchg std mov adc lea fucom test lret div not or mov fadds mov fadds out cmp (bad) cmpsb add out rex.WX and in negb addl xadd (bad) lock js (bad) jne sub loope mov rex.RXB sbb cmp rex.RX rex (bad) loope (bad) ss sub lea ds rolb stos jmpq movslq mov jmp and (bad) (bad) cld cmp (bad) (bad) (bad) dec out mov mov callq lret (bad) hlt add add rex.WRB pop (bad) rcrb outsl jl mov adc sbb add rex.W xor (bad) lea mov jle in (bad) ffreep (bad) jns (bad) imul adc shll ja mov mov push xchg mov and movslq jae sub or sub xlat or mov (bad) jo and (bad) and xchg (bad) jrcxz sbb mov js lcall pushq cmp je (bad) leaveq (bad) rex.WXB rex.WRB xchg hlt lods adc xchg (bad) rex.RX fiadd rex.B mov vcvttpd2dqy and rex.B outsb fnstsw mov sub (bad) (bad) (bad) cld (bad) rex.R (bad) callq (bad) leaveq fs push jle lods adc adc add or enterq in mov movabs mov (bad) outsb ss mov fisttp jo xor xchg (bad) stos loopne push cmp mov test rex.X push cmp mov mov adc stos add clc xor jmpq ss out enterq (bad) imul and cltd rex.WXB fstp (bad) jmpq rclb (bad) imul and and ror jle (bad) enterq test xchg callq (bad) (bad) (bad) (bad) cmp stos test and mov sbb cmp imul repz xchg fcomps (bad) (bad) (bad) std or (bad) (bad) std pop pop movslq lods xchg mov mov or jrcxz (bad) adc cltd stc add add add mov push cld jle repnz lahf sarl sbb pop loop and and (bad) addr32 adc jnp imul roll retq test (bad) sbb (bad) stc pop lret (bad) and out jle ja push loop movsb mov cli sub sub test add cmp clc stc cmp jmpq callq jmpq movabs mov (bad) mov jge add loop (bad) pop and loope fwait rex.RX jl mov out fcoml pop or sti lret pop movabs (bad) clc rolb (bad) rex.X (bad) leaveq pop lahf rex.XB jrcxz addl add mov cmp insb or (bad) rex.WRX fnstcw and stos (bad) jp test sub and mov loopne test rex.WB mov (bad) jge sbb cmp (bad) cmp jb movsb rex.XB rex.B jae outsl rex.RXB sbb cmc movabs (bad) add insb lret (bad) sub pushq loop mov push add push cmp (bad) add jbe (bad) and adc iret (bad) jne sub sub sub (bad) mov sbb movabs mov (bad) (bad) decb (bad) (bad) (bad) decl shr int3 outsl adc xchg lret stc in xchg push subb hlt in movabs fbld mov fisubrl push shrb sub add lahf mov repz lret lods mov out (bad) negl ss pop cmc or fidiv pop lock mov rex.WR in lret mov icebp (bad) sub sub (bad) push loope or mov sbb and std xlat loop lret and cmpsb (bad) cmc xchg add movabs lret add out (bad) (bad) mov pop stos movabs retq mov mov mov (bad) (bad) mov leaveq movabs rex.WRX add push movabs mov push (bad) popfq mov divl xchg sbb lret xorl jp test rex.WRB rex.WRB pop mov loopne sub outsb lret add movabs mov (bad) addl mov and xorl xor rex.WRB add lods pop sub movabs cmp or mov lret iret (bad) (bad) cmc mov add mov jbe add xchg xchg or jmpq cmc (bad) cmp xchg mov leaveq or sub push pop in callq (bad) ss clc outsl pop in cmp adc sbb mov stos mov test lahf mov mov xchg loope and icebp sbb cld xor fdiv (bad) mov rex.R mov mov sub test xor xchg xchg (bad) (bad) jbe rex.WXB sub sub xchg rex.WR scas enterq fsubl mov in jbe movabs cmc rex.R (bad) loope sub xchg clc icebp jg rex.RB movsl mov cwtl andl xor or mov add mov sub pop mov int clc mov jno add (bad) callq sub fdivrl rex.R rex.WB sub int add out adc mov xchg insl incb fisttpl mov mov mov xor jno or mov xchg push mov rex.WB xchg pop rex.W or xlat test out fwait movsb iret xor scas rex.WB movsl test rorb sub nop movabs ss cs pop or movabs lahf rex.WRX in jnp adc lret pop out rolb (bad) popfq mov icebp fcmovbe loopne sbb ror rex.WRX hlt stc mov loope xchg hlt (bad) or imul jge add jmpq movabs rcrb out je (bad) (bad) xchg xor int xchg add lret push sbb rex.RB popfq sub scas out mov mov mov int add movsl insl psllq adc (bad) sbb pop or jmpq xor in add or repz je pop (bad) mov adc test cmp lock (bad) jp jl jg lahf out push stc cld or xor outsb leaveq rex.WRB jns push add (bad) mov xor (bad) xchg and movsb cmpsb pop cmpsl rex.WX repnz leaveq addl rex.B xchg mov (bad) pop sub add xchg or (bad) imul movslq and fsubp retq mov cmp and rex.WRB add (bad) (bad) jrcxz repz icebp ss (bad) (bad) and repz es in sbb sub (bad) and push insl int3 shrl scas icebp movsb xchg mov fsub cmp xorl sub and jno stc nop and xlat test jrcxz in test fs cmc or rex.RX adc and imul rex.RB orl push (bad) idiv addr32 in nop and out scas or movsb xchg (bad) sub idiv callq adc pop loope pop mov mov testb clc push jmpq lret push fcomps add jmpq ds jnp rex.WR or mov mov stc mov pop icebp sbb divb cltd or or loope (bad) in test and xchg add gs mov pop icebp jl jmpq addr32 (bad) in rex.B adc movabs leaveq jno shlb (bad) add (bad) jl (bad) and (bad) xor cmpsb in repz leaveq (bad) shll retq sub mov stc cwtl pop gs mov jmpq jns ja subl je pop (bad) ss in cmpsb xchg rex.XB jp movabs or orl (bad) xchg sar pushfq mov xchg jmp iret clc xchg pop sub lods data16 cmp pop loopne mov rorl lods push rcl cmp imul in lods jrcxz jns lea (bad) out jle shrl (bad) leaveq push (bad) mov sti or mov mov cmova jmpq (bad) (bad) sbb rol adc test rex.R icebp and (bad) cmpsl (bad) jrcxz icebp or (bad) (bad) mov int3 test rex.WR xchg (bad) mov cmc sub scas jns cli jmpq movb sub cmpsl push pushq clc out (bad) lahf sbb mov (bad) cld stc (bad) xor (bad) xor adc (bad) insb mov std mov jnp in rex.WB (bad) sbb jae in (bad) hlt jmpq add cwtl cmpsl sti jae jns sub cld sub pop rex.RB and out loopne lret test loopne mov rex.XB repz mov and rorb shll in (bad) fwait jrcxz mov mov fildl jle cs pushfq data16 sub xor jmpq loope sti cmp (bad) rex.WX mov (bad) icebp cmp setns adc std ror loop test rex.WXB xchg popfq xchg xchg loope icebp (bad) mov icebp and lea cltd mov mov icebp in xchg cmp (bad) (bad) sbb rex.XB rex.B stc rex.WB mov (bad) cmc loopne and fs mov movabs outsb cmp scas stc ss in cmp cld (bad) sbb mov out icebp cmpsl fldenv xchg add mov sbb cld add (bad) (bad) jne (bad) std stos jns adc movabs (bad) movabs movslq in retq and (bad) mov out add pop leaveq or movsl (bad) jnp in (bad) and hlt enterq and add add mov fs std xchg push leaveq sub test mov pop in or mov jrcxz rex.WX rex.WXB (bad) add rex.WRXB rex.WXB rex.WRX sub hlt sub pushq mov and loopne in iret movabs mov xor mov icebp add lods push test sub pop mov sbb jbe jmp test jno cmpsb fdivrl (bad) test in or scas sub mov sbb pushq push mov hlt lea sub rorl loopne fdivp mov nop (bad) rex.WXB int and mov test fld sbb sub clc fiaddl icebp mov in (bad) rex.WB mov sbb lods enterq ss push repz xchg fmul sub xchg movabs xor sahf sub xchg jno push jmpq sub xchg hlt out cli out subl addr32 (bad) gs (bad) movabs (bad) icebp jge pop leaveq rex.R jo movabs xchg mov (bad) xchg retq xchg sbb pop mov xchg je in xchg cmpsl std mov mov test mov orl rex.R ds mov loope (bad) (bad) push sbb and fmulp and fs leaveq fmull shl outsb (bad) addr32 jrcxz repz rex.RX sub sub add mull gs mov jae stos (bad) add repnz sub add xlat (bad) clc jo int3 push mov sub (bad) scas rex.B rex.B xlat lea jno stc mov (bad) cli push fnstenv loope psubsw mov rex.B (bad) mov cmp mov (bad) rex.RB cld popfq test cld test rolb mov int3 (bad) movabs (bad) cmpsb or jge cmpw jge xchg rex.B loope cld rex.B cmc mov rex.WB std leaveq pop frstor cmp ror fnsave sub rex.RXB fist movsl xchg leaveq lock in lods (bad) fs int3 sbb mov jmpq js out xchg rex.WX sub mov clc sahf mov jge rex.WR stc rex.WX sbb fadds out hlt xlat (bad) out icebp xor sete jrcxz xor mov sahf loope lret sub in sub div scas rex.WRX (bad) test jb mov hlt (bad) (bad) xchg cmp leaveq callq nop movabs je add loope mov add loop (bad) cmp retq sub mov rex.WX sub scas test sub (bad) movabs and and cli leaveq sbb je rex.WB mov (bad) lock adc or retq jae xor add xchg (bad) xorps jmpq rorb sbb cmc xor idiv popfq jno fwait mov mov movabs (bad) pop jae jno xchg sbb xor and int icebp adc movabs (bad) movsb insl and repz out cmp mov rcr (bad) fadd in rex.RXB leaveq (bad) loopne rex.R rex.W (bad) (bad) mov xor in out (bad) stc jmp and (bad) gs mov movabs cli cs rcrb imul repnz gs rex.WRX icebp xchg movl mov mov loopne int xchg icebp (bad) mov push cmp retq scas (bad) stos mov xor sub rex.RX lock mov (bad) pop outsl out fidivl rex.RB repnz retq out mov (bad) jg (bad) xlat (bad) mulb jno or insb (bad) adc jge mov rex.WX rex.WRX movsl scas vpmaskmovd loope xchg (bad) rex.RXB or pushq and pop cmp xchg jle mov cltd cld callq test add sti pop rex.RB retq sub push (bad) rex.WXB insb cmpsl addl lods add rex.RXB rex.RB (bad) movabs shr or jbe xor test sbbb icebp icebp vmaxps sub pause cld add (bad) (bad) mov and jmp or jae adc test or rex.RX push (bad) icebp icebp (bad) rex.RXB rex.WXB adc push hlt mov loope sub movabs (bad) nop movabs (bad) (bad) hlt popfq jmpq popfq add jo or mov (bad) (bad) cs mov rex.B in and int3 (bad) or sub adc cmp je adcl hlt js stc shl sub shrl rex.WB sub and or mov jmp rex.B mov mov (bad) mov sahf add jmpq lea (bad) mov mov rex rex.WB push imul nop and mov testb mov test cmpsl hlt imul std test (bad) movsl mov loope jns or cmp in in add (bad) sahf (bad) bnd (bad) sub mov adc or pop lret fstp or (bad) jrcxz rex.RB icebp rex.RX sub (bad) outsl sub repz sbb sub icebp pop rex.WRX sub jmpq test push cs rex.WR cmp (bad) gs cs sub sub rex.WRX callq mov and js jmp sbb xchg mov xor movabs push xchg push xchg icebp fild or roll mov mov or jge enterq adc push (bad) mov test mov (bad) add and icebp insl hlt loope lock or add pop in mov test icebp rex.XB repz clc hlt mov or lea nop (bad) clc out mov pop mov xor or xchg fwait sub lock mov int (bad) mov rex.WXB cli rex.W notl (bad) int add mov (bad) in and adc movsl jge jnp repz jbe scas rex.RB jg in addr32 movabs (bad) movsl testl sub xlat jle fidiv jle lret rex.R (bad) (bad) mov xor shlb mov (bad) sbb adc ftst cmp jmp or add retq int3 repz fwait rex mov xlat (bad) add jnp xchg mov (bad) add (bad) icebp jo jne cmpsb cmp jno xlat hlt movabs rex.WB clc rex.WRX rex.W lock fbstp mov cwtl mov jne mov stc xchg sub int3 sub retq jno nop lret and insb movslq scas sti repnz xor (bad) sbb mov sti (bad) enterq pop rex.WXB rex.WRB pop and (bad) clc rex.WXB cmp (bad) xor add jrcxz cltd jrcxz (bad) cld mov jne mov (bad) rex.WB adc (bad) lret xchg or lret mov jmp (bad) xchg (bad) test out mov movsb stos jno mov push retq mov movabs enterq jg ja rex.R sub test rex.WRX loop cld (bad) or enterq rex.RB idiv xchg in shlb rex.RX fwait sub lods xchg pop mov jne enterq xchg rex.WB test sbb movsl rex.WXB sbb scas pop mov mov jbe jmp (bad) es (bad) sbb out stc js sub addr32 repnz push (bad) add (bad) ja xor int3 jo retq (bad) adc stc movabs flds (bad) or jbe lock out rex.RB rex.RB rex.WRB sub rex.WB mov int xchg ds xchg outsl int3 jmpq fs xchg leaveq out mov adc mov sub xor (bad) jo cs sti mov add iret out testl testl in decl hlt pop mov rex.WRX add mov movabs rcll and imul add jnp rex.WB mov out jg push (bad) or cs pop mov (bad) jrcxz rol pop lret subl xchg (bad) (bad) or (bad) mov lods or xor imull (bad) rex.XB or mov in rex.WR sbb push rcll rex.RXB sub xchg cmp stc jrcxz sbb (bad) jp adc rex.WR retq movsl mov rex.WXB rex.W gs cmpsl lods cld mov push mov or (bad) hlt jno add cmp repz and shrb (bad) sbb add (bad) xor xlat push decl push adc xchg jns jnp rex.RB addb and rex divl or clc mov (bad) movabs outsl movabs movabs xchg (bad) push stc pop (bad) insb jno and outsb jmpq xchg je rex.WXB je outsb rex.WRXB and add pushfq in rex.XB (bad) callq (bad) cmp push outsb sub xchg retq (bad) lret popfq xor hlt add xchg scas stc leaveq pop or (bad) ja or jae pop test rex.RX sub mov loope (bad) xchg rex.WB rex.RXB xchg orl callq (bad) icebp add enterq and (bad) lret nop rex.WRX (bad) repnz cmp xchg cmc sbb sub insl xchg int3 sub callq add cltd jge movsl movabs ja rex.WRB movabs mov loopne add fs rex.WR pop imul (bad) rex.RB lea rex.WX mov jne test (bad) adc imul adc lock or test add int3 mov pop out test jne movslq mov test fucomip pop stos test xlat nop movslq cmp outsl adc outsl sub ljmp rex.WXB push sar (bad) (bad) retq sub mov movsl loope mov fiadd test (bad) imul je (bad) in adc jge movabs int (bad) js xor rex outsl rex.WX sbb insl jge leaveq xchg jl jle outsl mov mov or push rex.RXB out xchg cwtl js (bad) jbe and push mov in adc (bad) ja xchg xchg (bad) loope push rex.R xchg loope rex.WRB mov (bad) cmp mov mov stc (bad) data16 pushq xchg sbb cmpsl or cmp add (bad) pop mov in jge out adc cltd lods rolb xchg mov mov mov rex.WR rcll rex.RB in lret test sub xor mov mov rex.WB pop jo insb movslq mov rex.WX xchg cmc cmpsb out (bad) leaveq cmpsl cwtl add (bad) cld loope jmpq mov stc insl sbbl pushfq cmp js sbb mov mov or (bad) (bad) sub mov adc rex.RB push push repz addr32 mov (bad) jge subl xchg jmp mov leaveq pop (bad) test movb pushq and jno (bad) xor (bad) int andl test icebp and out jmp (bad) adc mov int push sbb scas cs jl adc cmp (bad) rex.RX cs mov add (bad) mov mov scas jmp mov (bad) (bad) je sbb xchg test std sub (bad) fwait lahf mov cmp fidiv decb negb jae fstpl sub sub movabs shrl out (bad) in (bad) insl (bad) test (bad) push sub adc cld int3 adc (bad) sar (bad) jrcxz ja add add int sbb retq pushq fnstenv je mov jmpq mov or nop sbb fdivrs mov hlt cli sub cwtl pop cmpsl in and add lods mov movslq movabs sub pop adc mov sbb jbe rex.WRB or xchg rex.B mov hlt cmp leaveq mov movb js icebp mov pushfq xor add jno rex.WRX ss jae mull adc movsb jae (bad) sahf lock (bad) enterq (bad) scas xchg je loop (bad) (bad) rex.WRB in sti icebp mov andl stc loope rex.RXB (bad) (bad) loop hlt movsl (bad) cmc js movabs nop shr movsb in shrb clc ds xlat add cmc (bad) lock vcvtsd2si or adc jae mov rex.WRB (bad) mov int3 (bad) mov int3 sbb (bad) movsl pop stc rex.RXB and pop movabs (bad) jmpq jns enterq pop movabs (bad) orl xchg and imul jbe mov scas mov test mov (bad) mov leaveq mov and sbb in cmp adc pushq pop push and lock sti enterq sub mov mov adc mov lock (bad) sub icebp je pop pop (bad) jbe callq push add mov lea or or test push icebp pop (bad) repz hlt rol add or enterq out rex.WB je (bad) insb loope icebp and (bad) hlt or (bad) hlt sahf out (bad) icebp (bad) or leaveq sub lods out mov gs (bad) lret movslq popfq (bad) lock push stos shrl sahf sbb rex.R fwait (bad) retq mov or (bad) mov out cld addr32 adc sub sbb adc movabs mov rex.RB jbe or in xchg clc (bad) adc sub test cmp in xchg gs cmc test mov mov adc adc nop retq mov sbb iret (bad) rex.RB pop mov fstl xchg mov stc (bad) fisttp or xchg and jne enterq xor jmpq es (bad) (bad) jrcxz cmpsl jmp xor scas (bad) hlt test movsl push movsl pushfq test cmp enterq (bad) sti mov adc jle movslq (bad) sbb loope xchg insl jmpq jge rex pushq jge in mov loope push je rex.WRX cmp fistl gs ja mov iret es movsb insb divl hlt push mov xchg xchg jp cmp mov js rex.WRB cltd out in mov mov (bad) jrcxz xchg int3 int3 lahf sarl rex.R push mov xchg fild jo enterq insl rex.X xchg addl add lea xchg pop xlat popfq adcb je (bad) pop add shr sbb popfq pop mov and cmc (bad) insb jnp jns pop cltd sbb adc (bad) push vmovaps (bad) pop xchg rex.WR gs (bad) cmpsl stos movsl and movsb cwtl test jb add jge sub pop fwait sbb ror repz jle or jb int jmp test mov jnp xor jns int test subl pop (bad) rex.WRXB jrcxz andl lret and sub rex.WB mov pop clc sbb rex.XB sub jmpq (bad) mov lret sbb xor add jmp pop in (bad) (bad) (bad) popfq fsubrl pop adc adc sub push (bad) in push stc (bad) xchg xchg (bad) and leaveq push (bad) rex.WB rcll mov add je mov sbb xor mov and cmp loope (bad) (bad) lock (bad) mov callq (bad) mov sub rex.WXB ss cmp add (bad) xchg loope (bad) pop sub xchg retq std xor std in (bad) push leaveq movabs jmp (bad) xchg (bad) xchg popfq test movabs jns and mov data16 mov int std mov add jns in rex.RX cmpsb cs loope rex.WRX jrcxz jmpq cmp repz insb cld out cmp sub flds scas or (bad) icebp callq sub jmpq jmpq rex.WRB in (bad) addr32 (bad) shl leaveq callq enterq (bad) popq out xor sub in repz (bad) divl (bad) loopne add mov xchg xchg xchg test stos mov movabs (bad) xchg xchg gs mov jg je or rex.RX icebp mov out add pop movsl pop cli (bad) mov xchg (bad) xor mov movsb repz mov xor rex.RB rex.WRX xchg retq (bad) (bad) mov in (bad) sti jns out jmpq and insb rex.X je in (bad) sar (bad) stos out adc (bad) xchg jp pushq mov mov cmp sbb (bad) pop lods (bad) xor lret leaveq (bad) adc retq lahf callq cs cltd sub pushfq mov clc lret mov sbb xchg (bad) scas or popfq mov imul pushfq movabs retq xchg pop in cmc rex.WRX sub insl sbb and mov and mov mov (bad) pop rex.WB rex.W addr32 cmpsb fsub or jg (bad) (bad) lret (bad) (bad) or leaveq loope (bad) scas cwtl jp cmpsl int3 data16 idivb rex jrcxz xchg leaveq repz sub mov lret mov jle xchg subl ja andl movabs lahf ds sti lret and rex.WRXB mov xchg jl test in lahf imul out jb xchg sbb movabs (bad) (bad) (bad) push mov jrcxz scas cmp cmp cmp sub movsl in sub (bad) xor movabs rex.WRX ud1 (bad) add push movsb add mov mov cmp xchg xor iret push adc nop xchg mov out enterq repnz stc cmc test rex.XB (bad) std or cli push adc (bad) pushfq fildl test cmc cltd rex imul cli xchg in hlt and mov outsl mov lret out scas cld rex.WXB gs mov rol sbb shrb popfq mov in lret icebp jno pop adc xor orl ror or movsb enterq push mov rex.R rex.WRXB rex.W rex.WB rex.WX push xchg pushfq rex.RB hlt mov int3 mov xchg rex.WB add repnz adc sub mov cmc or test retq loop icebp sub in retq xchg lahf stc test and sub rex.RB movabs enterq in rex.WR lods (bad) cltd lahf rex.RXB rex.WRX mov loope (bad) mov mov rolb int pop mov xchg jb callq loope mov retq out repz adc jae rex.W mov cmpsb sti cld sub mov pushfq (bad) iret test push retq stc lock push gs callq rolb xor jne and xchg fcoml pop (bad) fnop xchg cmpsb adc xor pop cmp jrcxz cmp xor cli jmp lret jno mov gs mov or bnd movabs mov adc adc lods mov (bad) (bad) (bad) enterq and (bad) lock add adc cld jo shll mov sub (bad) jge divb mov sbb mov mov mov (bad) ds sbb lock cltd (bad) hlt out sub cwtl rex.WRX cs (bad) rex.X roll outsl int in sub rex.RB cmp lret lods (bad) (bad) sub and cli cwtl sub xchg rex.WRB cs mov mov or (bad) xor xchg xor (bad) fiadd sbb and movabs or sahf notl adcl (bad) or jmpq sbb cli cmp icebp sbb sbb xchg mov loope ja cmp fild mov xchg cltd mov cltd scas xor rex.WRXB push adc icebp push vpor in movabs cwtl scas es (bad) lret (bad) callq rex.WX callq iret (bad) rex.WRX rex.WRB leaveq or push rex.RXB notl jo cmc add (bad) clc xchg xchg out je sub faddl push fdiv mov rex.WRX (bad) (bad) (bad) jns rex.WRXB repz cwtl addr32 lock in push stos push popfq or mov rex.RB cwtl push mov movabs sub not add div (bad) mov xchg movabs (bad) fwait addr32 repz mov sbb cmp jae orb repz sbb and xlat or xchg stos pop stos add jl (bad) or jle icebp (bad) dec or pop jae mov test test sbb enterq pop sbb movsb add jb movsl lret xchg push jmpq movsb sub fildll cmp outsb sbb jo (bad) push rex.WB mov rex.WRB add iret rex.R xor lods adc icebp push rex.WB mov mov frstor mov jo rex.RXB xchg adc (bad) test callq mov mov jno mov in jno sub xchg or and (bad) mov movsb rex.RX repz sbb (bad) icebp rex.RB cmp add rex.WXB mov jb sbb out lret xlat adc mov xchg (bad) jae int3 testl mov rex.WRXB adc test lret stc outsb sbb sbbl add stc mov (bad) mov test jrcxz andl test (bad) cmpl (bad) (bad) push decl int cltd cmc (bad) xchg push repz mov (bad) mov (bad) pushq mov jge (bad) enterq add repz mov (bad) leaveq mov mov (bad) icebp xorb rex.WRXB movslq addl (bad) fcomps adc mov (bad) jmpq or mov xor repz jae mov jl callq jae retq jnp repz add test movsl mov xchg imul repz leaveq (bad) loopne jae or (bad) (bad) idivb and jbe hlt in push mov cltd sar (bad) mov out je callq cltd (bad) mov lods mov outsb jp movabs (bad) (bad) or hlt (bad) loope rex.W mov fistl rex.WR leaveq lret cmc rex.WRX rex.RB (bad) (bad) mov ficompl test adcb loopne lret cli mov (bad) (bad) lea scas test movl sahf lret sbb rolb (bad) mulb icebp pop nop xchg push icebp sub mov cmp clc rex.WRB fs rex.R stc retq mov pop repnz mov rex.RB (bad) jg enterq (bad) in scas rex.WXB test movabs adc std out sbb shlb shll (bad) outsl push mov outsb stos rex xchg andb (bad) imul jo lret mov je or sub mov movsl sbb or lock mov rex in pop int (bad) rex.R movsl xchg add (bad) ja imulb jrcxz,pn (bad) rex.XB xor adc add rex.WB retq test jg out and rex.RXB (bad) or fpatan (bad) (bad) jrcxz (bad) adc jo xor out movabs sub xor sub in sbb sub pop add notl mov add (bad) adc add test insl mov retq (bad) mov (bad) or push clc insb cmp pushq mov (bad) orl lret jl mov push xchg in jg (bad) add jns or retq imul and rex.XB push pop iret cmp lahf (bad) ficompl rorb in (bad) fmuls cltd repz callq push in rex.R pop (bad) insl cld (bad) sub jp mov rex.W (bad) (bad) xchg jmp lret mov (bad) rex.RX es mov jg mov jge mov sarb jmp hlt mov mov jmpq pop jno sub stos incl (bad) (bad) adc rolb insb and test (bad) push test ss ficompl in xchg xor pop rex.WRX pop std sub in mov std or (bad) fdivp ja (bad) (bad) pushq mov jge adc lock retq mov rex.RB rex.R xchg xchg push xchg out add or gs pop (bad) callq cmc cmpsb or gs in repnz sbb (bad) push xchg rex (bad) push mov test es mov jmpq rex.XB push mov push enterq pop mov mov loope add lock xchg push (bad) rex.RXB callq out je jmpq movabs (bad) (bad) not (bad) mov (bad) lock cmc add callq xchg jmp xor (bad) bnd hlt (bad) (bad) push movsl (bad) (bad) adcb mov jmpq cmc rex.WRB movabs lods xchg xor rex.RXB rex.B rex.X cmp leaveq (bad) stos (bad) mov jp fs mov sub xor movabs mov or xchg xchg rex.XB (bad) (bad) adcl cmc cmpsl add lea and sar and cmc add mov leaveq cltd rex.WR movabs (bad) xchg movsb enterq mov movslq (bad) cmp add fdivrl mov adc mov iret int je in rex.WRX xlat xchg out fnop xchg (bad) adc retq retq (bad) retq pop imulb add rex.RX int (bad) (bad) (bad) enterq loope divb pop xchg in sbb callq adc and int addr32 callq sbb popfq clc push loope popfq sub or mov pop rex.WB sar loop (bad) rex.WRX cltd or sbb mov (bad) lods sarl jne sti jmpq add (bad) test outsl jo iret push push lods enterq xlat std imul add cmp (bad) mov push mov and cs movabs rex.WRX (bad) iret popfq xchg push (bad) pop (bad) cmpps (bad) es repz and rex.WRXB push int orl (bad) out rcpps xor fisttpll (bad) (bad) retq imul sub rex.XB sahf (bad) pop mov cmpsb jno movabs fsubs rex.XB xor cmp push (bad) (bad) stc sbb jb,pn rex.RX or sub jne nop cmp in rex.WRX sub fiadd hlt rex.WRX rex.XB add xchg jno rex.RXB adc mov movsb push js loop sub push rex.W (bad) loope cwtl mov addr32 jrcxz mov mov leaveq mov xchg mov mov xor xchg loopne (bad) jae orb loopne (bad) jae (bad) mov stc jrcxz cli jnp fadd es (bad) sub (bad) mov movsb leaveq int3 icebp hlt stc test in insb (bad) and mov movabs add js mov mov (bad) rex.WR out out rex.B cs rex.B rex.RB popfq pop movabs add pushq fs hlt pop and (bad) and retq mov and cmpl int or faddl cmc or lock lock adcl icebp and (bad) (bad) (bad) pop (bad) (bad) insb add (bad) rex.WRX adc rex.WRB and (bad) sbb mov mov xchg mov nop leaveq add add or callq faddp add mov pop int3 adc subl scas mov (bad) rex.R addr32 adc cmp jno and rex.RX rex.WXB rex.WR callq retq mov fdiv (bad) repnz add (bad) (bad) jno cmp test incl out sub out add (bad) mov int3 pop ljmp add (bad) test lret retq sahf and ja mov adc push callq or cmp xor rex.XB fs jb loop fucomp mov jrcxz xor lods (bad) stos or mov in pushq adc sub retq sub mov push stos xchg rex.B sub mov adc and test rex.WRXB xchg icebp loope sarl retq in mov in mov (bad) sbb adc sub loopne cwtl mov xor (bad) ja mov sti add repnz (bad) (bad) (bad) cmpsl mov movabs xchg or orl (bad) fcomip jbe add or movl rex.WB add push and std shrl xchg or mov and callq cmpb (bad) jbe clc xchg rex.R rex.WRB push mov add sbb or adc rex.WR mov push nop jmpq rex.RX mov mov rex.WR lahf jns repz or push orl and xor sbb (bad) scas rex.WR leaveq sbb mov (bad) mov cmc jae add cmpsl (bad) ja in movabs (bad) pop insl add int push jae mov in loope cmp rex.W (bad) cmp sti jne xchg add cli cmpsl jns pushq cmpsl (bad) (bad) cmp (bad) leaveq cltd (bad) jo rex.W (bad) jl jrcxz adc and or pop rex.R rex.R loope js rcll (bad) mov stc nop xchg repnz pushq pushq mov out mov and in pop or ds cli jl (bad) jmp and (bad) jnp pop mov jbe lea insb rex.RX cwtl iret pop add hlt retq movabs roll or repz retq sahf rol pop rex.WX leaveq sub cmp in (bad) (bad) sub rorl js xor cld mov pop movaps mov out stos mov (bad) int sub (bad) jno jbe decl int3 and mov add fldcw sbb mull lret (bad) je cmp push (bad) xchg jae subl jge std (bad) adc add mov adc fisttp cltd sub rex.R mov mov cmp or xchg add fcomi jmp jp test pop idiv (bad) retq lahf jmpq (bad) leaveq hlt rex.R rex.RX and loope rex.R xor sbb rex.WR pushq mov pushq mov cs rex.WR sub and sahf (bad) out int3 add jrcxz xor sbb sbbl sub retq xlat sub and push (bad) fmul retq cmp rex jns lods in xor rex.B rex.WB add loop mov (bad) and rex.WB cmc (bad) movsb mov leaveq lock xor mov jl repnz cli jl xor cmp and mov jp in movabs rex.R xchg mulb repz out loope (bad) repnz (bad) pop jrcxz add rex.RXB test jrcxz mov (bad) lock or test and rex jae (bad) or hlt pop (bad) xchg (bad) (bad) imulb pushq add cmp pop cmc rex.XB movb and fwait icebp movb mov sub sbb ds (bad) (bad) pop frstor loope movsl jns,pn enterq loope mov mov mov (bad) cwtl (bad) test out roll cmp sbb subb sub adc mov mov push pop (bad) std rolb mov movabs xor movabs mov jno mov rol (bad) rcrb sbb mov xchg (bad) and (bad) and (bad) and jae rex.WRX out jne cmc jle mov insl jns or loope stc xor lret nop and fsubr fisubl (bad) hlt lret fisubrl add mov popfq outsb rorl sub stc cmc lret icebp (bad) testl (bad) xor icebp push int pushq sahf add not cs push stc push (bad) icebp sub sbb lret lods rex.WR (bad) jge sub or sub xor hlt (bad) in rex.RX (bad) icebp mov (bad) xchg fs decl jns nop loop movabs mov insb movslq cmp and and gs subl jmp rex.X mov mov (bad) xor pop dec cmp (bad) (bad) sub push lods or (bad) mov xor cmc mov push rol sub (bad) lahf jno (bad) loope popfq (bad) xorl movb repnz hlt (bad) mov xor imul outsl xor (bad) sub mov movabs jnp repz pop int loop jb loope mov add iret jge sbb pop xchg pop xchg callq (bad) mov xchg and movb or pop fsubs rex.R jb mov jmpq (bad) cmp (bad) add mov std fidivl or add xor xchg mov sbb (bad) mov in jno cld (bad) add add xor lock jo negl (bad) (bad) add rex.RB push cld (bad) in ja mov push in xor ficoml rex.WX imul add adc xchg stc rex.WB (bad) add repnz repz (bad) fdivl xor mov sbb out rex.RB rex.WB (bad) mov rex.WRX jae (bad) in or add mov add rex.WX fwait (bad) int cmp cld sbb retq sub lock out (bad) sub or pop lock int cmc movabs rex.WX xor movabs pop xchg cltd or lea (bad) test pop mov mov jle add xlat xor fdivrp repnz rex.WR (bad) mov es callq xchg cmp jmpq (bad) test callq jl mov xlat in cmp repz rcrl xlat (bad) rex.WRXB lret retq push (bad) std add (bad) int3 nop out repz rex.WRX fcompl pushfq sub (bad) (bad) mov out int3 or out or loopne mov loope mov retq gs fldcw and jbe rcrl pushq xlat cld pushq xor jo shr test cmc jns loope push in and (bad) adc in mov (bad) (bad) mov adc add (bad) fadd jmpq nop (bad) jmp (bad) rcrb sbb shl sub add mov enterq lods rex.WR int sub test cmp fsubs test (bad) rex.B sub mull andb rex.WR movsl (bad) (bad) movabs xor repnz lret retq xchg retq (bad) mov pushq rex.WRXB rex.WRXB imul or (bad) fmulp xor xchg pushfq sub shrl cmp push push lahf adc add pop sub (bad) push jp or ja and callq mov pop (bad) lea (bad) int3 rex.RX rex.RX rex.B stos pop int3 push clc mov scas out (bad) rex.WRX (bad) xlat popfq pop loop (bad) mov sahf and sub adc rex.WR (bad) in cs addr32 or cmp (bad) rex.WRB pop add rex.W mov loop (bad) test movabs (bad) icebp jno mov popfq movabs mov mov xchg std loopne (bad) stc pop loope sbb pop ja (bad) mov adc out imulb adc int3 pop mov mov out (bad) mov es nop callq adcb sbb rex.B rex.WXB push lods sti lret (bad) xor sub sahf xor js lea or clc stos sbb cmc sub push mov fisttp xorb jno and sub out cmpl jnp leaveq sbb mov in mov push rex.WRXB ss rcl mov sub rex.WB (bad) movabs jmp sbb (bad) xchg (bad) sti mov mov jae lods (bad) jno xor fnop cmp scas jrcxz sti sub fisttpll xlat lods add xor add rex.X subb lret ds rex.WB mov pop rex.XB (bad) scas in pop insb mov callq pop retq leaveq popfq (bad) xor callq xor rex.XB mov sbb (bad) sub out xchg push cmp scas out je imulb (bad) xor rorl or push (bad) xchg addr32 sahf rex.WXB movsb jmpq (bad) xchg xor mov leaveq jbe icebp sub rolb or cmp mov leaveq (bad) (bad) rex.WR cmp fwait lea in (bad) (bad) stc and or icebp int3 cli mov push (bad) xchg cmp sbb (bad) xchg ss sahf cltd add xchg push clc cmp sahf xor repnz push lret (bad) xor mov rolb in add mov mov push xor (bad) jnp ja xor or cmp rex.R rex.B sahf in enterq xor mov mov mov (bad) xor mov enterq or or add mov loope clc mov enterq mov xchg jp mov cwtl retq add jbe repnz xchg repz and sbb lea jl pushq int icebp mov rex.WXB movsb (bad) (bad) movsb mov out sub insl shr (bad) cmpb or xchg repnz xchg insb stos rcll in push mov movabs rex.XB movsl xorl iret stc leaveq loope jmpq xorl and (bad) rex.RXB add insb adc jrcxz leaveq (bad) std (bad) mov (bad) cwtl rex.R cs xchg push (bad) xchg xchg fsubp repz cmp xchg repz loop movabs callq (bad) icebp (bad) sub xor jmpq xchg movabs insl or sahf rex.WB frstor mov rex.RB (bad) add cmp push mov movsl add sub or rex.WRX push lret or (bad) movabs sub rex.WXB xchg nop rex.WRX shrl (bad) gs rex.W push retq rex.RXB rex.WB jmpq add sti cli fcoml sbb rcll mov stos rex.WRX rex.RB mov add push fsubrp retq xchg test jns fidivl xchg lods lea sub int3 rex xchg cmp callq and (bad) imul bswap rex.WB (bad) idivb jo rex.WRX pushq cli sbb mov sub repnz hlt retq stos rex.WB rex.WRX test fistpl nop sbb mov mov mov int (bad) retq (bad) sub jae sahf out pop in (bad) (bad) mov loop xlat cs out xchg cltd jno xchg loope rex.X sub (bad) and cld sar fnstsw in adc pushfq and xchg rex.W test adc enterq rex.RB js xchg mov jnp lock rex.WRB jo (bad) rex.WXB add pop (bad) movabs (bad) or repnz (bad) mov out hlt (bad) loopne repz (bad) and lock movabs mov mov (bad) notl xchg mov rex.X fs test rex.X xchg push rex.WRB rex.X gs mov rex.RB scas push addr32 repnz sbb movsl mov fwait test sub jno cmpsl rex.W jg out push ss fnstsw xor (bad) cmp icebp mov movabs adc sbb cmp (bad) nop sahf add jmpq rex.WRX icebp sbb (bad) sahf and es jae cltd repz enterq in jo push sub ds add mov rex.W sti not movabs cld mov (bad) pop icebp shll mov sub stos out enterq (bad) pop mov cmpsl in hlt mov add (bad) test rex.WB (bad) pop jl sub cmp mov lods fs adc rcrl mov lock (bad) xor sub fldcw mov rex.WR jnp movabs jmpq (bad) pop rex.XB scas mov push hlt pop test xchg sbb mov (bad) (bad) int3 in rex.B test adc sub (bad) out lret xor xchg mov (bad) mov fsubl add push sbb sub data16 (bad) rex.WX mov (bad) sub adc xchg nop notb add sbb cltd rex.WB rex.X fwait rex.W pushq test insl nop xor callq sbb (bad) ja cmp (bad) lret clc push bnd sbb or sbb or mov (bad) int3 insb (bad) and rex.WB push push cmc (bad) divl rex.WRX adc gs movabs xor cwtl (bad) push insl lock jne test xchg (bad) cmp cli mul add rex.RB fdivl mov rex.WXB sub retq jae prefetch jne adc rex.B leaveq mov icebp sub in nop (bad) sbb (bad) xchg jrcxz adc rex.WX rcl mov sub push imul pop insl rex.WRB (bad) mov lods movsl rex.WRB xor fisttpll add mov sub or pop sahf lret cltd xchg fwait xor add es (bad) add (bad) (bad) adc nop and add add data16 test stc (bad) mov mov loope rex.WRB int3 leaveq (bad) cmpsl cmc bnd (bad) sub leaveq and and pop cmp and cmp movabs mov jmp addb pushfq rex.RB xor in xchg xor jmpq xor rex.WRXB jl sahf pushq rex.XB outsl hlt loop xchg callq loope adc movabs xchg retq int jb xchg adc add (bad) iret decl rcr cltd rcrl cmp rex.WR popfq mov or cmp and icebp (bad) (bad) jo xor mov mov mov retq mov (bad) (bad) pushq icebp test mov adc movsb push lods in mov loop test loope out lret jbe int enterq xchg adc ja add jg out (bad) (bad) or jbe imul pop mov rex.WRXB (bad) (bad) fldl mov add cmp cmp push fdecstp xchg xchg (bad) stos jge (bad) or callq add jmp lret fs and rex.WRXB fs rcll jae (bad) imul jno mov mov int3 rex.W jl nop sbb mov cmp cld ds je movsl in mov out jbe je sbb addl test add adc movabs rex.RB and xchg xor leaveq ljmp push popfq test (bad) rclb jno and lret sub (bad) mov or test orl (bad) (bad) (bad) sbb (bad) pop (bad) in xchg (bad) (bad) push leaveq (bad) mov mov jns je callq fs (bad) leaveq cs cmp jrcxz std shl jrcxz lea xchg test loope nop (bad) pop in mov and xlat cli test fcmove imulb imul enterq retq mov add xor sub gs imul fnop leaveq pop fincstp mulb sbb pop roll rex.WRX cmp jo sahf adc adc int sbb xchg pop jno sub mov add xchg xor xlat scas adc movabs adc mov insl cmc xchg rex.W retq lret mov xor lret movsl int retq (bad) (bad) icebp vpaddusb imul pop cltd mov std (bad) adc sbb add cli jl rex.XB mov popfq int (bad) pop cli (bad) fsub sbb retq adcl xor and mov or sbbl add jbe out (bad) mov (bad) test rex.XB push (bad) imul out lret jb (bad) xchg mov rex.WR in insb mov out in imul shrl or loopne movabs pop rex.B gs cli out hlt rex.WB (bad) (bad) fistpll movsl addl pop mov rcrl pushq out mov add cmp pop add rex.WXB sbb lods mov test pop test cmpsb mov xchg jmp fwait neg mov sub xorl fildll mov jmp mov rex.RXB rex.WRX enterq shlb rex.WRX xorb sub lods (bad) or icebp rex.R out sub pop (bad) push retq jp cmp rex.WRX rorl mov out xor cmp mov jge clc (bad) xor movsb loopne lahf (bad) mov loope sub push fldcw insl mov notb sbb retq lock and xchg ja hlt pushq pushq mov loope loope out xchg (bad) xlat cwtl jrcxz jno add (bad) repnz repnz (bad) lret stc mov sub mov (bad) (bad) test (bad) (bad) mov lret leaveq (bad) sub (bad) cli adcl lret mov sahf (bad) bnd (bad) out movabs test (bad) lahf rex.WX xor retq test (bad) mov fs jge mov out mov ds iret cs rex.RX testb mov mulb movl (bad) sub test xchg cmpsb rcrb fs (bad) cmp (bad) push mov (bad) mov test cld int (bad) rex.WR rex.RXB (bad) or mov adc int3 vpsubq lret (bad) ja mov mov xchg (bad) (bad) clc mov sub insl (bad) and mov leaveq in (bad) xor jmpq sub pop lret push out fs cs (bad) adc out (bad) mov cld mov int3 (bad) jge sub test sbb ss andb sub sbb rex.RB push retq jge stos add xchg (bad) jmp callq test stc loopne sub jrcxz mov xchg out movsb rex.W (bad) mov mov (bad) (bad) mov movabs leaveq gs push mov xchg (bad) leaveq xorl adc leaveq je rex.RX rex.WRX add mov pop rex.WXB shrb rex.RB xchg xor (bad) rex.RB rex.WR repz adc fisttpl (bad) test sahf rex.RXB rex.RB int in je (bad) out test int3 jrcxz in (bad) sub leaveq jle xchg jrcxz jns xorl out in je movslq lahf callq rex jg jl or rex.RXB rex.WXB (bad) out leaveq xlat (bad) rex.WX push int imul (bad) cmpsb std sub xlat jmp rex.RX xchg jmpq es out icebp vpsrlw in sub hlt mov scas mov mov rex.WB (bad) adc rex.W hlt movabs (bad) int int3 mov rex.RB (bad) rex.WRB in xchg rex.WRB rolb test movabs mov clc movabs (bad) rex.WX cmp movsl add and repz (bad) rex.XB cmp test and lret mov imull cvtps2pd loopne pop loopne push sub mov rex.WRXB rex.WXB sahf test icebp push rex.RB repnz fstpl xor in rex.R add jno jg movsl and jns lret sub add cmpl nop sbb sahf or addl imul in rex.X jb int sbb notb repnz mov stc pop xchg (bad) retq xchg je lods rex.WB test leaveq test pop mov xchg sti sbb in jmpq (bad) fcomps jae and fwait rex.XB movabs fiadd loope (bad) adc xchg xlat jne mov mov hlt (bad) jge mov std movabs lea xor lods mov jae cmp or rex.WRB mov sti retq sub add push rorl cs mov jno fwait mov mov mov xchg leaveq nop pop mov pushfq retq xchg retq hlt bnd mov jmpq mov mov movb test test hlt jno add push lock xchg rex.XB jrcxz or hlt loopne mov je callq hlt (bad) andl cmp lahf rorl loope rex xor pslld jb (bad) add pop xchg and cwtl (bad) jmp stos addl imul (bad) cli repnz (bad) jb (bad) cmpsl clc xor (bad) jmpq leaveq and stc fs xchg mov cmp mov mov fidivrl (bad) stos leaveq add sub push loope (bad) (bad) push in or rex.WB sbb out in or or cmpsb rex.RX mov outsl jmpq rex.RB leaveq push loope rex.WRB rex.RB test cmp jmpq cs sbb test rex.W rex.XB and out (bad) pop adc xchg pop cltd sti (bad) movabs repnz cmp iret mov (bad) int stc roll mov add sub cmpsb mov lods imul rex.WX xchg int mov sbb cld mov add xchg add test jbe retq loope leaveq xchg lahf adc sbb pushq repz sub rex rex.WB loope push rex.WB movabs push lahf rex.WX mov (bad) stos mov jg and ja pop lret rex.RXB add sbb and jns sti (bad) mov add test shrl or mov icebp (bad) pop stc cli retq jns mov (bad) repnz and pop (bad) adc (bad) jb (bad) shl pushfq lock adc loope retq mov retq rex.RB rex.R test sub or (bad) cli imul sarb (bad) cmp retq cmc (bad) rex.RX jbe mov (bad) mov xor and movb xor mov nop icebp (bad) fistp repnz rex.W es lea jp (bad) fwait sub jp pop sbb lahf test xchg psllq icebp (bad) mov (bad) rex.RX pop stc leaveq push js rex.WRX (bad) xchg mov sub fcoms lahf movabs cltd sub sub jae (bad) mov and rex.X enterq mov mov xchg xchg repz cld jmp sub decl sarl sub rex.WR gs int3 jle hlt cmc xor xchg jle rclb frstor add outsl imul add leaveq or movsb cmp out cli scas (bad) sarb sub xor mov icebp xchg mov shrb (bad) xor rex.WXB (bad) retq sub xor or test shlb mov mov (bad) test ds mov add pop int3 fwait roll insb movabs adc xchg pop xchg pushq movabs loop movabs cmp icebp push pop rex.WX mov cltd and mov pop (bad) fdivrs fcoms loope rorb nop add push mov rex.WX ss lret cld retq movslq rex.WX cmp mov and (bad) sbb cmp mov sbb adc in fsubs icebp retq (bad) pop fbstp movsb (bad) add adc pop movabs test sbb int mov bsf xchg (bad) (bad) cmpsb rex.WRX outsl pop cld hlt pop icebp repz or mov (bad) or rex.B rex.RX rex.WRX cltd testb cwtl or mov jmpq lock pushfq rol out lret repnz gs rcll jl add rex.WB push cmc mov xlat (bad) icebp sbb addr32 imulb out test cmp (bad) jl rex.WRB jae pop insb andb or pop rex.RX add xor test mov and add sbb mov adcl jp int add jp or mov cli fcoml sub mov cmc rex.WR jrcxz cmp rex.WX xchg rex.XB rex.X mov mov xchg rcrl mov (bad) xchg movabs scas in (bad) xor movabs mov sub (bad) mov cld sti add (bad) push lea mov sub js mov data16 pop xor or rex.WB out (bad) movsb test add pushfq lret and (bad) rex.RXB push repnz movabs (bad) jmpq pushfq jb sahf callq cs mov ja cli icebp sub xchg push pop int3 add lock iret lret repz mov (bad) or sub decb cmp mov test in mov (bad) icebp adc in int loope jmp imul add sub (bad) hlt jno lret lock cmpsl (bad) cltd rex lea (bad) cli out movsl pop cmp jne push in in add sbb rex.R sarb lahf adc cmp test cmc (bad) cmc loop rex.WX leaveq and fisttpl sbbb cld rex.WXB icebp movslq xor jnp sub jno rex.RB lret sub (bad) and (bad) sub rex.WB (bad) out rex.W fs sahf enterq out (bad) in (bad) jo pushq loope movabs adc (bad) loope repz (bad) mov (bad) xchg rex.WRXB (bad) cmc test xchg rcl sbb sbb rex.WX mov fsubs callq or xchg fstpt mov mul cld mov push adc rex.WRX jno (bad) pushfq or (bad) sub fisubl stc jrcxz (bad) adc (bad) sti mov rex.WRXB rex.RXB rex.W test rex.R test sub movsl imul (bad) outsb mov cs nop rcrb (bad) nop xchg movabs rcrb jb push fdivl push lret adc xchg add adc int3 mov in ds lods (bad) pop cld xchg sbb cmp jno rcr push adc sahf or fldl rex.RXB (bad) lret (bad) loope (bad) sahf mov sbb gs sti cmpsb cltd loope (bad) sbb loope xchg mov int3 sbb mov retq sbb (bad) add add enterq in rex.RB rex.R out test test nop xor sub adc (bad) lods push pop loope test xchg add rex.RX (bad) or adc int3 xorb in xchg and fistpl xchg (bad) out jne pushq mov out (bad) cmp in (bad) cmpsb add push repz js je sbb movslq lods pushq lods rex out rex.RX sbb or cmp (bad) xchg mov rex.WX mov (bad) (bad) jmpq pushfq movsl cli push mov adc loope xchg cs push sub mov jmp mov xchg (bad) mov (bad) (bad) icebp (bad) pop cmpl sub cmp mov pop rex.RXB (bad) in push adc loope (bad) mov rex.WX jmpq xchg adc fldl es pushq popfq and scas mov test adc cltd sub cmp rex.WRXB movabs out jrcxz (bad) enterq rorb enterq (bad) int push sbb xchg imulb faddl icebp rex.WRX pop insb (bad) cs xchg rex.WRXB (bad) in rex.WB jne xor (bad) (bad) rex.WX in subl lods mov mov icebp rex.RB cltd (bad) or (bad) movabs adc fimul gs lock mov clc adcl fstps int3 rex.WR rex.WRXB test lret fnstenv add retq scas movabs push shll push roll addb or or (bad) icebp xor rex.RXB lret fnstenv mov pop mov cmp stos decl or test out push insl xor mov movslq (bad) or lahf rcll movabs xchg xchg in mov (bad) (bad) mov sbb jns retq loopne insl leaveq pop xor xchg pop or and mov jo movabs lret (bad) lea lods fnstcw ficom addl mov mov rclb lahf rex.X (bad) jp pushq movabs or sbb rex.W in pop cs (bad) rcrl movsl add stc or cmp push cmpl or fucomip jge out jmp fcmove (bad) je jp movslq mov mov xor (bad) mov icebp movslq rex.X clc xlat stos push jno movabs cmp (bad) pop lret lret cs rex.RB cltd xchg push (bad) clc movabs xchg jne int retq fcmovnb jno sti fwait cs (bad) jne and mov sahf or movslq mov rex.WR test mov mov or or lods ds mov (bad) rex.WX imul imul (bad) (bad) andl (bad) xor lret (bad) pop imull (bad) jae rex.R out or mov orb sub sbb mov mov callq or xchg xchg callq mov (bad) test in out loope mov in repz icebp xchg jmp rex.W in or nop jb cmpl (bad) cmp movabs rex.RB mov ja notb lods in rex.WX xor (bad) and xchg sbb rorl movabs in adcl add mov sahf rex.WB rcrl xchg mov (bad) mov xor test (bad) (bad) mov (bad) mov in setle (bad) repz repnz mov push mov cli mov mov in jmpq pop xchg std rex.WX cs vpunpcklwd cltd cmpsl test adc subb push movabs out (bad) rex.RB rex.WRB and pop push xor lea xor (bad) (bad) (bad) ja icebp jae or movsl sub sub pushq adc jae hlt and popfq rex.R and retq int3 in enterq (bad) (bad) (bad) leaveq mov (bad) jmpq loope retq cmp (bad) loop add push lea and repnz retq (bad) mov movsl or push rcl hlt mov mov xchg leaveq (bad) jae mov loope add rex.RX negb rex.WXB icebp int3 (bad) ja (bad) mov repz mov jo (bad) and rex.WB test xor mov ss loop lret in or in add out fsts mov (bad) subb push mov mov cmp testb xchg or insl lock sub in icebp mov int callq add idivl mov cmp mov movsl mov mov mov rex.RXB rex.RXB xlat test push int pushq movsl or loop (bad) xor and jmpq xchg push rex.RX pop (bad) (bad) (bad) lock mov sub (bad) jmpq jl and push xchg loope mov add retq paddq or push sti scas mov rorl mov sub pop xor fisttpl int3 rex.WB callq pop repz stc jne or jmpq nop mov xchg lret gs xchg rex.RX rex.X stos rex.RB rex.WX or out jle jge sahf int3 cmp and add xchg push hlt je add (bad) sbb mov mov cli in shlb repnz mov or f2xm1 retq fabs push lret cmp mov jno (bad) out xchg popq sahf xor enterq pop xchg mov test sbbl (bad) (bad) sarb (bad) fwait or mov loope in (bad) retq test push cmc xchg (bad) cmp rex.WXB and in pop mov push push sbb xchg int icebp xchg xchg xor outsb cmc outsl movslq rex.WR mov andl mov rex.X leaveq sti mov rex.WR movsl jmpq orl xchg jmp jmp mov and (bad) test out and icebp je push (bad) shld in push cld out xchg loopne sub pushfq lret cld adc push mov mov nop sub sbb (bad) pop sbbl or or mov imul hlt movsl pop (bad) mov subl mov fsubr iret rex.WXB int3 push lods decb loopne fiaddl mov sbb test callq xchg jns fbstp adc (bad) jns out hlt (bad) rcrl cmp (bad) xchg leaveq adc or loope divb pop lret rex.WR rex.WRB lods icebp std (bad) fwait (bad) data16 (bad) adc movsb mov (bad) (bad) in mov (bad) scas sub stc or pop mov push in and rex.WRXB (bad) int xchg mov ficoml sub adc jne imul add repnz scas cmp pushq xchg pushfq test fnstcw (bad) xchg add repnz rex.RB add or test mov rex.RX jrcxz (bad) stos loope jno mov xor (bad) (bad) int callq cli pop popfq cs xor popfq jmp xor sti pop push mov or repz xor loop xchg fidiv (bad) movsl (bad) mov or leaveq xor rcl adc mov (bad) rex.WRX or xlat xchg xor nop or xor mov mov (bad) xor xchg lret enterq scas (bad) in jne cld test or stc lret (bad) repnz xor pop add or adc in faddp test xor mov xor rolb cmp clc pop rex.R sbb movabs test (bad) cs icebp leaveq add rex.RB push or gs (bad) xor push retq jbe sub data16 xor jrcxz in (bad) xor push out sbb repz rex.WB bnd sti mov adc push pop (bad) in callq mov rex.WX rex.R rex.WX rex.WX cs cwtl test pushfq fcomps pushq xor sarl sub sub lret (bad) fs testb xchg jnp lret jp scas jrcxz test rex.XB movabs cltd xor fildl pop rex.WRXB add test (bad) int mov mov (bad) or push rex.RB add rex.WRB outsb outsl rex.WR mov xor movabs test repz std test rex.R rex.X loopne or test retq sub mov imul (bad) test push (bad) and (bad) hlt int3 pop loope or xchg sub jg test subl clc or jbe lock add repnz in xchg mov xchg or add mov hlt sub retq movabs movabs mov (bad) mov andl xor or in mov loop fistp test icebp nop and push jno rex.WXB rex.WRX rex.WX stos cmp (bad) add std mov push cmc (bad) (bad) rex.XB and add mov in insb out cmc xchg (bad) sub js cmp repz sbb in rex.W jb movabs rex.WX add and leaveq push cmp test imul (bad) sbb xor push adc cmp adc (bad) in test cmp push and out adc decb jne addl or (bad) or ficom mov and pop mov add ss xchg xchg xorl add icebp gs lret jne (bad) mov movq addl (bad) push and shlb cmp (bad) ficompl lret retq repnz pushq fildl or adcl cmc adc push sbb (bad) ja add pop (bad) cmpsl int3 cli xchg (bad) sbb push imul sub sub movabs out shrb push je or in leaveq mov callq jle sub mov rex.RXB cs sti pushq (bad) rex.WRB retq repnz rex.X rex.X xchg sub imulb andl xor orl addr32 mov incb loope and rex.WR neg movabs pushq jno movslq icebp (bad) xor lret sahf add test sub (bad) rex.W test insl rex.WRXB insb mov in cli sbbb fidivl sbb imul rex.WRXB cs movsl adc jno clc pop jae retq fdivl jnp sti lods lret fsubrs fwait sub popfq movsl xchg xchg (bad) cmpsb fsts repz pop xor sub lods mov leaveq int3 (bad) icebp mov (bad) imul (bad) (bad) in mov icebp (bad) mov cmp hlt push pushq in sub adc sub fs fstps mov nop rcl fdiv imul mov test rex.WRXB int movabs mov push rex.W mov mov cmp cmpsl ss subl pushq adc sbb lock lock mov lock rex.RB (bad) jmp jmp pop stc rex.W ds rex.WRX (bad) xchg xlat (bad) cmc std or add adc cmp cmovno add xor std mov jmpq adc loope stos out or (bad) adc rcrl jmpq push push jp pop movabs push rcl (bad) cs imul loopne mov testl ja sub lret retq out pop sub sbb ficompl (bad) icebp pop retq shlb lea test movabs fsubr (bad) pop jrcxz fldl cmp retq pop adcl test cmp push test ja push cli enterq rex.WR pop rex.RXB jmp or jrcxz movsl idivb rex.WB mov enterq out gs xchg and (bad) hlt fwait adc outsl push jno movslq jnp mov rex.RX rex.RB mov stos rex.WR adc cmc xor pop cmp xor rex.WR xchg mov (bad) rex.WXB xchg xor mov movabs fucompp int3 xchg or pop adc sarb (bad) test (bad) movslq hlt sub pop jp lock icebp out lock add enterq or rex.RB or jge sbb (bad) rex.X neg mov jae mov and lret (bad) sub hlt mov leaveq push xchg vcmpss xor lods and (bad) rex.RXB lock xlat sbbb push cs callq loop ror and xlat xor fdivp int test int fnstcw std test (bad) rcr (bad) orl repnz (bad) push outsl xor ja movabs jne rcll rex.WRX sti xchg cld sbb add mov pop sub cmp rcrl cwtl fstpl cld sbb rex.WX lret xor pop (bad) mov xlat add (bad) inc cltd test (bad) rex.WRX or xchg xor retq xchg (bad) leaveq rex.WB cli pushq rex.R (bad) add xor cmp or lret movslq lods movabs add stc lret add shl (bad) add sub (bad) rex.WB jp rex hlt flds sbb and fstpt and sbb (bad) rex.X repnz ss enterq xchg sub rex.WRB mov test (bad) (bad) repnz mov test movabs callq (bad) cltd repnz out nop cmpsl and add mov sub out add pop movabs movabs jae or enterq ds loope push cli (bad) (bad) fisttp notb iret out mov lret cli fsubrl rorb push mov pop jmp leaveq fdiv stc jno add movsl (bad) movsl retq mov jmp mov jmp mov rex.XB rex.WXB fisttpll test add icebp mov jmpq (bad) out jmp (bad) rex movsl in xchg xchg movsb add sbb jl iret sbb mov cs sbb xchg int3 int sbb xor stc mov adc stos fcomp mov fcomip mov jp push pop adc and sarl sub rex.XB rex.RB or in je mov shlb gs mov cld sbb stos xchg and idiv fwait (bad) std (bad) jge mov (bad) xchg repz cmp rol loop vmovups retq leaveq insl cmp jo cmp (bad) rex.WRB (bad) movsl jno jnp fmull jmpq (bad) stos sbb incb negb sub je or lahf leaveq (bad) sub test jrcxz pushfq out mov mov rex.X mov movabs add xchg mov fnstcw sbbl cmp mov (bad) mov std or mov (bad) rex.WB rex.RB mov mov int3 retq adc sbb rex.RB sub adc rex.W mov adc (bad) jrcxz,pn out iret or movb gs orb cmpsb in xchg int3 add imul mov testb sbb rex.WRX jb push roll outsl clc mov adc mov data16 mov in rex.WX add (bad) movabs add push rex.WRB rclb jae movsl out (bad) mov mov push xchg xlat movsb jp mov clc adc (bad) xlat icebp jp jp,pn push idivb idivb stos in in (bad) gs xchg callq stos lock xlat out lahf add stos sbb or rex.WXB movabs (bad) rex.WB callq rex.WRB imul (bad) pop jns (bad) jbe stos push movsb push cmc in jb int jp stos adc fbld cld jns int3 or ja xor out jmp cld mov push mov xor and rex.WB fsubrl callq sbb (bad) xlat rex.B stc retq push (bad) sub sub push (bad) xor outsl xchg or cmpsl shr jno sub jno mov clc add (bad) push int3 fsts pushfq fisttpll stos retq nop lret or hlt adc adc movabs cmp insb sub sub rex.XB mov xchg jmpq hlt mov mov (bad) in out or (bad) loope rolb sahf (bad) mov movabs xor je and movsl jrcxz (bad) in cmp (bad) jmp mov decb adc divl retq jae push (bad) in mov movabs (bad) cmpsl rex.WRB rex.WRX (bad) (bad) sbb orl loope (bad) pop (bad) outsl cmp (bad) pop (bad) movsl movabs or rex.RX mov pop cmp push jp fcomi and add outsb imul pop movabs mov adc push imul mov adc and mov xor in mov imul jne leaveq fiadd enterq outsl or repnz loope (bad) add add push lea or js mov nop and std push jmpq ss cmp movabs jrcxz pop or (bad) scas icebp sub cmpsl xchg in (bad) test jge (bad) lock mov jle jl fistl notb mov pushq fldenv enterq cmp (bad) in xor jmpq je hlt cltd (bad) mov cmp in (bad) repnz jns shrl stc mov nop jno (bad) icebp movabs mulb jae cmpsl cmp mov mov (bad) test rex.WRB rex.WB rex.W int rex.B in add iret pushq imul adc jns (bad) jmpq jl divl mov movslq pop (bad) lcall movabs sub enterq sub (bad) insb in push rex.WR rex.RX cmp js imul outsl fmuls rex.WR add retq popfq (bad) push pop (bad) mov fdivr test retq cmc rcll test out xchg push leaveq (bad) lock out fisttpll lea hlt rex.WRX (bad) adcl mov movsl lea sbb cmpsl gs (bad) sub testb mov nop mov or adc mov or mov rex.B pushfq rex.X out je in mov clc rex.RXB sub js rolb movslq push add iret jrcxz rex.RXB fsubrl mov cwtl mov addr32 adc fldl cmpsl cmp test retq out shl sub mov in mov (bad) xchg mov movabs jbe (bad) (bad) movsl push rex.XB rex.B fs xor mov cmc mov std and sub (bad) xchg pushq mov sub test cmp cmp (bad) xor xchg roll leaveq data16 shl movslq shr cmpsl sbb repnz stos push sbb (bad) (bad) rex.WX add mov in clc lret jno rex.WXB cmp mov push mov in rex.WB rex.XB xchg test or push nop mov callq icebp xor mov or sub and add cmc test (bad) jmpq nop cmc jge stc in sub mov and fcomi rex.W mov shrb movabs in or pop movabs rorl (bad) movabs insb leaveq mov nop or jmpq int int3 (bad) hlt (bad) or scas xchg (bad) movslq insb (bad) movabs (bad) pop (bad) jns push movabs mov mov (bad) or cmp rex.WB jns sbb loope xchg xchg test sub adc (bad) push adc push push out sbb push sbb imul jne xor test mov xor iret jmpq pop in pop lret and rex.RB hlt xchg (bad) push out rex.B in xchg pop (bad) js lahf xchg fs jmpq xor (bad) mov (bad) repz retq lea cmpl jns cmpsl mov out mov movabs pop sub xor mov mov retq test add cmc test add and movsl in stc test icebp addl sbb test rorb insl xchg rolb mov out xchg rex.B rex.WRX (bad) mov sbb ss cmp and push (bad) in add push push rex.W xor cmp lret or jne test or sub repz pop pushq mov pushq jge mov hlt test add (bad) cmpsb rclb in movabs imul hlt int mov loope adc loope xchg xor add stc (bad) mov xlat xchg stc vaddsubpd jp push enterq cmp iret cld icebp (bad) rex.RX and or mov add cwtl test sub mov add jno pop mov fwait es movsl rex.WRB in (bad) orl hlt mov rex.RX lods push andl rex.RB sub cli std adc rex.XB pop xchg in pop jmpq mov pop cmp cltd shl pop mov adc iret sarb out icebp rex.RXB or sbb adc pop add jg mov rex.RB jp sub gs ja cs add and or (bad) fcmovbe jmpq test fsubs or (bad) push pop leaveq int3 rex.X imul rex.WR cltd cltd (bad) pushq fidiv subl ds stos callq rex.RXB cmp adc xor shl jp popq loope lock and mov cs cs cs jrcxz retq callq nop cmpsb push sub in int3 mov (bad) test rex.B rex.X pop mov hlt xor xchg (bad) (bad) and xor popfq add mov mov test or retq fsubl retq push std (bad) fwait leaveq lea mov sti adc sub in movabs pop adc xor (bad) in add fs fs in lock rex.X and push push push imul jl xchg rex.R stos int (bad) mov jge rex.WX xor jae sub adc jmp callq adc (bad) sub lret out in xorl xchg rex.WXB adcl clc movabs clc lret cs scas mov sahf (bad) push push jp jno fcompl (bad) gs sarb push vhsubps (bad) sbb adc adc sub xor sbb cmc (bad) sbb (bad) or in add or iret loope jmpq stc cmp mov test (bad) fbld fidivr cmp pop cmp in fisttpl jae mov sub rex.WR repz rex.WB (bad) outsl mov rcll in mov sub xor and add retq push enterq out fcoml sbb in sbbl int3 jb jmpq jo (bad) cmp (bad) cmp sbb rex.X (bad) sub mov (bad) mov cmpsl xor ds lahf sbbl pop adc fldcw insl rclb (bad) sub adc in mov sub sti pop and shlb sbb scas pop (bad) sub rex.WR xchg insb and push (bad) (bad) xor pushq stos sbb loope or int3 ror sub mul sub add add pop xor (bad) xchg icebp (bad) jmpq outsl shlb shr sub cmpsb xor mov lret leaveq xchg lods fiaddl sbb sti divb popfq cld rex.WB (bad) xchg sbb (bad) pushq movabs sar lock movabs int3 out jle sbb cmp xor (bad) (bad) mov loop rex.RXB vmovhps mov rex.WRXB sub cli lretw rex.WXB repz fs orl xchg notb lahf cwtl rex.WB and sarl add pushq or pushq fiaddl mov jno mov (bad) shlb jle enterq callq and sub sbb movsl mov in rex.WRX mov (bad) vpshld jge mov mov jp rex.WXB movabs xchg add rcrb (bad) (bad) xchg xor or jg addl or repz test stc int3 int retq mov sbb out or outsb jae (bad) (bad) xchg test out rex.X repz mov (bad) out mov rex.W mov lret fdivs xchg movabs adc adc (bad) (bad) cmp jae imul sbb outsb and (bad) jno jae retq adc add int adc xor int in mov rex.WRX rex.RX icebp jmp sbb mov loopne xor test push xchg testl stc int xchg jno sub cltd (bad) retq mov mov loope mov sbbb (bad) movabs ja (bad) mov (bad) fisttpl adc (bad) sub rex.R ds (bad) push or rex.WR stos movabs cld mov add movsb jns pop out rorl cli or jmpq (bad) pop fimul mov jmp mov es rex.WB mov mov rex.WB mov callq xor out cwtl mov cmc rex.R fs lods callq sbbl xchg movsl add (bad) (bad) pop lahf xchg mov out or mov movslq out ror rex.WX mov sbb mov in (bad) rorb xor cmc jnp cld push popfq test and leaveq xlat jg pop sub (bad) pop subl sti xor rex.WB gs repz in divb and (bad) addr32 rex.WRB xchg movabs gs jg sbb (bad) rex.RXB idivl or (bad) jl std jp mov jg outsb sub leaveq popfq xchg sbb jno test test xor mov xchg (bad) int3 cmp xchg sti movabs movabs xlat xchg pop cli rex.WRX rex.WX retq xor lods fnstsw (bad) mov jl adc sahf pop stc movabs (bad) push mov sbb (bad) pop in rex.RX outsb or cmpsb sahf pop (bad) callq pop pop xchg mov push lret mov mov clc pop out int3 sbb rex.WRXB rex.WRX rex.WXB pushfq (bad) or add mov int3 xchg sub jb (bad) rex.RXB nop imul out mov or (bad) pushq loopne jmpq mov fadd and lods lea test out jl rex.WR (bad) lret movabs subl or (bad) mov lock jmpq (bad) rex.X std rex.WRX callq pushq (bad) cmpsl rex.WB (bad) movslq mov mov repz (bad) pop (bad) pushq ljmp jnp,pn mov xchg xchg movslq xchg (bad) jno (bad) gs mov adc hlt jo mov sub adc jmpq or adcl mov jno push jo rex.WB sbb and (bad) je mov leaveq or mov paddsw (bad) movslq mov movsb push lock loop xchg out jmp stc movabs hlt add insl rex.RXB cwtl xchg movl cltd (bad) push rex.W rex.WB mov jl in test rex.WR jmpq jge add outsb add outsb xor sarl xchg out or imul out (bad) hlt (bad) (bad) out fcomip (bad) jmpq lock sub addr32 sbb jns rex.WRX jmpq mov cltd cmc xchg in imul subl imul (bad) es push push jo icebp jno add test (bad) pushfq iret xor cli and jo xchg mov adc rex.WRX xor out hlt scas and orl add lret movabs jo sbb jne and popfq in leaveq std movsl or xorl test jno lods rex.X loope in xlat subl lock in jrcxz push mov jnp xchg jnp rex.RB lods subl xchg jp mov pop (bad) jmp xchg callq (bad) sub jge insb ss xchg rex.WR icebp jrcxz loope adc movabs (bad) (bad) rex.WXB add xor rex.WB mov js (bad) rex.WRXB cltd xor mov and or sub mov jmpq out loope mov callq movabs stos jmp xchg xor movabs loopne push loope mov mov or pop xchg cmpsl xor loope jg or lods mov pop mov lret jmpq (bad) pushq add push jge lods jmpq xchg movsl movslq (bad) movsl jae xchg sti repz rcll push fs loopne mov ds rex.RXB add rex.WRX mov push pop int3 movsl repz movabs mov out cmpsb clc cmc rex.RX clc sbb xor lret pop sub loop divb adc lods and and xchg jge sub push sub jmpq mov rex.WRX repz testb push lea je cwtl cmpsl adc mov sbb rex.WRX sbb mov jb (bad) cli out lret sub stos jp in mov (bad) lock scas pop (bad) sbb lea rex.WX loop adc (bad) (bad) flds jo mov pop test lahf sub mov cmp or test jbe or imul (bad) (bad) add icebp data16 or add fidivr xchg in std rcrl sub in mul sbb pop in push iret testl rex.WRX xor push cmp repz (bad) xor mov adc pop ds (bad) flds (bad) rex.R mov test jl leaveq fwait or cld movabs std mov movsl popfq (bad) cmc (bad) xor test xor retq fbld lods iret loop add xchg rex.WRXB (bad) (bad) mull (bad) movslq mov jge pushq cmpsl sbb stc jmpq jns push jne mov or (bad) ja vfixupimmpd je test mov lret jl out retq lret rex.RB pop (bad) jo lret (bad) cs or pop adc xchg rex.R iret icebp jmpq andl fcmovnu sbb fucomip or icebp loope push in jmpq adc mov xchg jrcxz fmulp (bad) test addr32 retq outsl add rex.WR xor add icebp repnz fwait mov fs cld or movsl (bad) or xor or ss cmp xchg add adc and and pop enterq insl (bad) movabs lret rclb mov xor (bad) adc mov sbb push pop jmp rex.RXB rex.WRB cwtl mov jne and push add frstpm(287 pop rolb loope std adc lods insl movb push sti out xchg fsts or xchg test or (bad) int3 fdivs mov mov movslq adc lock icebp pushq test push or jle clc lret adc (bad) mov (bad) jmpq loopne ficomp mov (bad) sahf int (bad) (bad) cld mov cmc xchg je or test fisubr mov test ss mov jno movslq rex.XB leaveq mov leaveq jns lock sbb (bad) cwtl repnz shrb (bad) fbld movabs adc in rex.WRX rex.R xchg xor cmc add testl or cmp cmp cmp shrb ja rex.WX retq xor std cli or (bad) out icebp out ss shrb jns or mov or and and gs testb cs fs leaveq int rex.RXB stc sub jmpq (bad) hlt mov (bad) hlt mov rorb cmp (bad) fs push fisttp adc ffree jno jg js cmpb sbb mov lret (bad) add rex.RXB xchg callq outsb add in int3 or imul xchg cmp adc add jmp add insb cmp mov out out and add loope or test (bad) movabs xchg and (bad) (bad) and mov add sbb (bad) rex.RXB pushfq mov mov mov iret movslq mov cltd add adc mov mov in pop int loop or (bad) retq jbe movsb pop mov stos retq mov rex.RXB std pushfq (bad) mov adc nop add test addr32 fistpll (bad) mov mov sbb stos lret movabs xchg movslq jae jrcxz and lods pop (bad) (bad) adc bndstx lret xchg shrb sti mov sub or outsl rex.WB sub fimull xchg jnp imul out retq lret (bad) decb jne sub rcll cltd (bad) gs adc sahf xor jno lea lret test cmp out rex.RX movabs jmpq icebp and (bad) mov fcoml rex.RB xchg add or sub xchg popfq jl mov retq mov mov mov loope push and rex.WRX and xchg mov push push out (bad) mov hlt insl loope add cs movaps insl retq in retq lea (bad) fist popq (bad) or (bad) xchg (bad) and mov lods mov orb (bad) rex.WRB and (bad) cs (bad) (bad) mov xor outsl fisttpl jp sub push (bad) sti mov pop push cmpl callq or xor test pop rep movsb int3 add loopne sub (bad) xchg loope mov and (bad) repz jnp jp rex.XB cmp mov cmc in jg ror sbb push sub adc sbb clc retq mov mov lea in test (bad) or mov lret xchg (bad) jmpq cmp nop jno mulb pop mov mov and sub clc pcmpeqb test test jno rex.W repz lar js (bad) fisttp jnp rex.WB mov pop lea retq stos loopne enterq in int3 sbb xchg clc (bad) psraw pop outsl or movabs adc or mov addr32 rex.X push sub (bad) sbb jrcxz mov je cmpb leaveq add rex.WXB or enterq (bad) jl pop in iret jb leaveq retq lods pop add retq mov pop js cmp or movabs rex.WXB sbb xchg cld (bad) pushfq or xor movabs lods jmp cs imul rex.WRXB notb rex.WXB xor (bad) (bad) and pop jmpq jbe rex.WRB rex.RX fistp icebp cltd xor jg subl pop rex.XB or sub adc shrl sbb in test jb (bad) mov jno or cltd xor (bad) push and jae and (bad) fistpl insb fs icebp and (bad) movabs addl jrcxz test je mov pop (bad) ficom (bad) push adc sbb stos mul xchg cmpsb push stos mov sahf hlt push int xchg stc (bad) sbb mov cmpsb sarl ffree mov adc cmp mov mov xor xchg sbb mov adc push (bad) sub retq roll rex.WR (bad) sub xchg rex.WB hlt test clc (bad) jrcxz (bad) fmuls out fdivl cmp cwtl add cmp pop push adc sub sbb mov int rex.WRX sar lods clc movl mov cmp shlb and add hlt (bad) pop pushq pushfq movabs in rex.RXB gs sub push (bad) or (bad) sub movslq loope movabs jnp (bad) movsl out fst sar retq (bad) jo in cmp push (bad) shlb xor iret sub pop fcompl pop add idivb test out orl mov pop cld pop repnz mov icebp mov cmpsl rcll sub and cmpsl mov xchg fstpl cmpsl je xor cld popfq js repnz lock mov in push xchg out sbb adc mov jno sbb jo (bad) jo rex.XB (bad) xchg adc push adc cmp push (bad) repz pop paddd and rex.B movsb leaveq popfq pop addl in movabs cld (bad) flds (bad) mov mov ss add nop loope enterq push je rex.WB js (bad) icebp sahf add pop (bad) out (bad) (bad) xchg repnz ss jno movsl mov cs jmpq adcb jrcxz rex.RB clc sub cmpsb shrb (bad) movb rex.WR add and (bad) adc lret mov fwait sub gs icebp (bad) xchg outsl xor lock jg xchg jo xchg adc or and or pushfq (bad) adc cli cmp mov fndisi(8087 pop and mov push pop test pop sbb pop retq out add mov xor and icebp addb cmp movabs mov icebp xchg add (bad) repz stos orl jrcxz rex.XB xchg rex.WX mov rex.RB loopne outsb movabs jns in jrcxz mov in addr32 cli std xor sub mov adc int3 imul and fstps (bad) (bad) rex.R pop icebp lods xor cltd sbb nop push sbb mov mov mov int repz ja and pop jno,pt (bad) rex.B cld or cmp mov adc clc xor mov out pop and mov rex.WX sub insb (bad) mov rex.WRX movabs or mov icebp movabs (bad) imul jno lret rex.WB leaveq cmc test xchg icebp jrcxz test jno cmp mov mov gs lahf (bad) lods (bad) (bad) icebp and cs hlt je (bad) pushq rex.WRX rorl mov (bad) rex.WR add lahf leaveq (bad) addb rex.WRX (bad) rex.RX sbb xchg mov out or xchg movabs (bad) sub push cli out sub add retq test iret mov fmul rcrl in divl (bad) xchg pop add cmp add js std in insl repnz rex.WB cmpsl sbb repnz rex.RXB pop or (bad) (bad) in pop fstpt sbb rex.RX (bad) jno int3 shr (bad) icebp rex.X cmp jp rex.RXB jns loope movsl cmc (bad) enterq std std push int3 cmc rex.WRB scas clc mov rex.WB mov pop mull push and lea mov lock fwait es js neg in cmp movabs push and in cmc loop hlt xor cmp (bad) or retq pushq movabs callq sub (bad) sbb or rex.WRX (bad) cli popfq leaveq lods push orl mov out pop movsb fcmovnbe push sub xrelease int loope clc (bad) sbb adc mov jno repz mov sub out sub leaveq sbb cld sti and retq sahf imul (bad) iret es cs leaveq cwtl popfq repnz test sub xchg sbb stos rex.RX (bad) std jae icebp (bad) pushfq (bad) push movabs and lret (bad) iret sar rex repnz jae retq (bad) and cwtl xchg rolb sub push test rex.WRX (bad) in leaveq rex.WX in rex.WB pushfq lea in rex.RXB stc stc and pop xchg and fwait mov (bad) push shr cmp out out xor rcll lret vrcpps (bad) pop fmulp out jl out push lret out jne adc push cli cs jl lods js jmpq or test int rex.W cld or pop lea rex.WRX nop sub xor sbb (bad) out jbe loope mov rex.RB fbld add rex.WR lea cmp adc adc rex.X rex.WB pop stc jnp cltd stos movl lahf test cwtl lods mov pop (bad) jo cmpsb mov cmp fisttpl mov sub (bad) sub mov xchg jle mov movabs repz retq retq test (bad) add xchg out (bad) out (bad) stos sbb add adc lretw jrcxz addr32 jl std (bad) out retq pushq test (bad) sbb xchg xchg jo mov cmp mov js jnp (bad) movslq cmp push mov and mov lods jbe mov mov (bad) std pop (bad) loopne push clc lods xchg pushfq je mov add loope (bad) setns sahf mov rex.X fidivr rex.RB mov jmpq (bad) push (bad) fdivs rex.WRX rex.RXB cmp mov (bad) lods xchg movabs (bad) (bad) add xchg fadds (bad) cmpsb adc or bnd or mov rex.WRX movabs int rex.R icebp push sub or mov icebp cs jns cmp sbb movslq mov clc sahf xchg mov rex.RX int3 cltd sub out or mov cwtl rol je fldt push (bad) jnp lret lret fs fist (bad) add or mov mov cmc xchg callq movabs add (bad) mov rcrb push rex.WRX push addr32 fmuls xchg xor (bad) (bad) cmc jmpq sub (bad) cmc lret push cmp mov xchg rex.XB sub sub adc xchg sbbl fdivr cmp rcr lret rex.WRX leaveq rex.RXB (bad) imul int jae fwait loop mov repnz jl ja int movsb hlt push jno movsb movsl lret lock fsub jbe (bad) xor in in (bad) je addl jns repnz pop lea (bad) rex.RX adc and fcom mov movabs out jno andb jmpq jrcxz in jmpq xchg movabs jge stc or rex.WRXB sahf mov rex.XB (bad) cmc clc sub ss (bad) movabs rolb clc sbb jl movabs loop pop cld sbb int3 pavgw test sub (bad) cmc (bad) adc jae (bad) mov rex.RB movslq fstpl fmuls or insb sub sbb es pop mov jne iret cmp pushfq pop or in pop push int3 stos (bad) ss (bad) sbb ds and (bad) or adc retq cli adc insb xchg sbb loope out movabs mov stc js lea (bad) shll lock stos callq std mov rex std (bad) div out add pop stos movsl xchg sub add lret mov mov callq cwtl xchg rex.WX cmc rex.RB sbb mov lret leaveq fstl in shll movabs and xchg adc in lock adc mov pop vxorps jrcxz jmpq (bad) int3 pop loope xchg push cs (bad) jno rex.WB jno jno jrcxz jno or subl test (bad) mov (bad) add (bad) rex.WX cli or loope sub cld pop mov mov test xor and or mov xor jns jnp icebp jnp iret or movabs test cltd test (bad) pushq nop cmc in xchg mov in movabs (bad) jno lahf psrlq (bad) (bad) sub mov (bad) sbb cmpsb push xchg imul int3 scas mov mov rex.WXB pop mov movabs hlt subb (bad) and ror pop popfq test add jmpq (bad) ss or xchg sbb movsl fnstcw (bad) cli (bad) cmp cltd xlat xor rex.WR xor (bad) (bad) (bad) cmc (bad) mov jmpq sbb jg insb incb (bad) scas mov imul adc sub jle js pop sahf adc lret in (bad) cmp cwtl xchg cmp xchg rex.WRB add jbe cmpsb (bad) push cmp mov insl rex.RXB add sbb mov mov mov cs mov retq lock sub lock vpavgw mov int3 sahf pushq sbb test add mov and and movabs xchg jo (bad) repz rex.WX rex.W sbb out xchg jns ja add (bad) mov movabs movabs rex.WX mov xchg movabs jbe add mov insb loope cltd out mov push retq xor es and loope leaveq and cmpsl add out insb mov cmp rex add hlt lods movabs retq mov pmullw mov rex.RB push sbb in imul jb push retq xchg push rex.XB bnd add retq repz cltd mov mov mov rex.XB rex.RX gs repz imul movabs jrcxz in fwait cmc cmovs out lods clc sti rex.WRX pushq jbe and rex.WRX rex.B mov push or (bad) rex.WRX loopne cltd jbe push (bad) loope rex.WB push sbb fsub jbe cltd (bad) rolb pushfq cmc xor or std sub orl sbb push pushq addl mov int rex.WRB mov mov or rex.B push (bad) out je pop std mov fs mov sub cltd pop fild (bad) pushfq int xchg je in fild jne cmp retq mov loopne mov (bad) je stc jrcxz cltd mov (bad) sub xchg outsl outsl jnp retq out xlat lock jbe rex.W pop xor xor movabs add cmp add cmpsb (bad) and xchg movabs mov add callq fcomps movslq jns nop rex.WRX xor rex.WRX repz movabs movabs mov add and retq add mov out mov int testb mov std sub rex.W xchg (bad) (bad) (bad) rex.WRXB jb jne sbb sub fldcw and rex insl and scas or xchg sub xchg adc fwait movsb stc cltd and push (bad) movsl mov orl xchg lock xchg test or mov movsl int3 (bad) cwtl pushfq and in add add cmp adc jmp sbb and or hlt in mov cmp add jl lea pop mov fdivp clc fcoms int3 out icebp mov (bad) sarb loope cmp hlt decl push cmp xchg in jrcxz xorl jbe retq jmpq cld or xor xchg xchg adc adc sbb add divb icebp (bad) shr mov xchg xor jrcxz in (bad) xchg adc out pushfq jno xchg (bad) mov (bad) cmp mov roll shll out mul and out rex.WXB movabs test or lret test mov movabs (bad) loope outsl imul push sub adc mov sbb sbb icebp (bad) rol subl cli mov push xchg std xchg push rorl push adc movabs or hlt sub or cmp in pushq push stc rcr rex.RXB rex.WR rex.WB jg jae out and loope jbe xchg rex.WRXB rex.WB (bad) xor rex.WB stc push insl rex cmp pop icebp (bad) push xor retq add cmpsl lock adc xchg jns sub lahf (bad) icebp divb test xchg imul callq fdivr cwtl mov fistpl rex.X test je cltd lret push std lea incb in xchg imul cmp int js sbb popq cltd test jl mov out jns nop xchg add mov out lock mov and callq lock jae outsl jbe mov push repnz loopne test gs popfq push cs mov (bad) cltd in test fwait xor gs mov mov jrcxz xchg xor rex.WX in sbb rex.RXB retq je cs rex.B stc jge sub stc lret cmc (bad) repnz data16 cmp enterw test (bad) add out pop xlat rex.XB fcmovnb push sub and out pop out insb mov jno test or stos imul adc add add rex.WRB cs mov cmc andb nop repz or lock pop je jmpq mov push lea cmp outsb movabs sarl rorl lret fisttpl enterq mov xchg add test sub test lods nop jno rex.WRX (bad) xor adc (bad) callq out xor mov cld pushq (bad) popfq enterq mov pop xlat test retq mov jmp out andb fsubrp int3 (bad) sti retq (bad) xchg lea rex.WX fsts js (bad) jae in rex.RX repz rex.R out int3 xchg fstpt in movabs (bad) stc int3 (bad) retq rex.B rex.RX mov jge jnp jbe cli cs jge pop (bad) movsb fld (bad) add pushfq mov add gs or repz (bad) lahf loope jnp retq (bad) loope (bad) lock in push (bad) sbb (bad) lcall in (bad) (bad) cmp mov rex callq sub cmp cmp rex.RX adc jmpq xchg int out loopne jle cltd int3 out in clc imul (bad) sti sub (bad) lret rex.W ds (bad) leaveq (bad) rex.RX repnz leaveq or pushq loope js popfq icebp cltd adc (bad) repnz rex.WB fs leaveq jp test loope cmc jne callq cmpsb cs in (bad) mulb xchg (bad) mov jae imul and cmpsb rex.RXB xchg cmc or cwtl add add (bad) mov pop (bad) rorb stos nop cmpl fild mov es pop mov push (bad) imul add add test mov in cwtl adc callq test test out cmp xor mov mov negb (bad) sar fcoml mov loope test pop mov mov (bad) jg cmp js (bad) (bad) (bad) out retq sbb pushq add lret (bad) mov (bad) mov sbb sbb (bad) and cmp (bad) repz clc adc mov cmpsb test callq leaveq sub movabs rcr sahf lock (bad) fnstenv xchg add xchg outsl faddl mov cld xchg stc std insl lea xchg (bad) xchg (bad) addr32 pop rex.RB ficom cmc mov add jmpq out jl (bad) test movabs push mov mov movabs mov stc int loope fdivr xchg rep cmc xchg movsl testb test rex (bad) or in xor and mov (bad) loope jae js xchg pushq add cmp lret cmp in addl lods jno callq rex mov (bad) shr mov push mov es xchg xlat callq jne int3 mov rcrb in iret (bad) lret test (bad) (bad) rex movabs and xor (bad) xchg rex.WRX and (bad) (bad) cmp pop loopne icebp addr32 out movsl rex.W rex.WR out int jmp jno (bad) and rorl scas adc pop gs (bad) add xchg in (bad) xchg fwait or xchg (bad) jae gs popfq (bad) rex or (bad) mov insl imull outsl lock (bad) callq fcmove and rex push cmpsl lret mov cmp int3 cs mulb adc (bad) xchg or rex movslq add ja sti xor mov and mov (bad) mov (bad) icebp lock mov test push loop data16 xor xchg std (bad) jrcxz sub movsb ss sbb repz movsl cli jp add mov in mov leaveq mov int3 sub pushfq subb rex.WRXB push leaveq sub sub iret fstl (bad) mov pop movsl mov repnz (bad) movabs rex.RXB rex.W (bad) sub movl clc xchg mov ss cmp std push movabs out adc out fsubl and jae sbb jno xchg out push or fsubp out mov rex push add add lock ja jmpq (bad) mov (bad) cltd test push scas cwtl (bad) lea (bad) callq sbb loope sbb xchg xlat (bad) jrcxz mov jl adc sub rex.RB xchg popfq icebp in mov push loope jmp imul pop pop movabs fistpll movabs repz mov sbb notl test lret sahf mov push cmc mov cmp cli push leaveq rex.B movabs movsb sub out (bad) (bad) sub pop (bad) jl mov sti leaveq jg test cltd enterq xor jrcxz cmpl (bad) adc xor sbb add int3 movslq loopne rex.WR mov sbb (bad) (bad) cli leaveq (bad) jp data16 mov xchg mov add rex.WRXB subl clc movsb loope pop xor xlat sub pop stos push mov (bad) rex.XB repnz in (bad) rclb stos lock xor add retq (bad) (bad) test jrcxz (bad) idivb xchg fcoml lret xchg or and fnstsw push insl movabs fbstp lea movabs fimul movabs sbb xchg callq and test fiadd jne jrcxz mov mov or jno add add test jl (bad) xlat imul sub (bad) rex.WXB adcl test mov idiv (bad) jrcxz mov rex.B test (bad) mov movabs test rol adc retq shr jrcxz xchg mov test fldenv xor fs fcos lret bnd insb pop hlt rex push (bad) (bad) cmp test sbb mov subl std movabs xor (bad) mov (bad) adc sub mov (bad) (bad) (bad) push ss pushfw icebp test xor rex.RX push in sub add fdivrs in (bad) or xor retq insl clc shl mov (bad) jno (bad) (bad) hlt (bad) shrl cs (bad) test pause pushq std (bad) movsb clc mov jl cmpsl cld mov cld movsl idivq fucomi and pop (bad) (bad) xchg stos add rex.R pop sub je movsl movabs rex.WRX xchg or mov xchg adc push push pushfq rcrl fs xchg ja cmpsb loopne xor pushq (bad) test xchg mov xchg addb jno (bad) xchg test cmp (bad) (bad) cmp jle rex.WRX js mov cmpsl (bad) lret xchg retq sbb movslq repz or or loop iret push sti add jae hlt (bad) push enterq xchg cmpsb movsl (bad) test (bad) (bad) and (bad) in jno and and or rex.RX scas push mov or pushfq leaveq loop pop mov bnd (bad) retq notb retq popfq push cwtl push cld icebp rex.RX xchg or movabs movsl mov iret sbb addr32 adc adc jnp xor in cmc xchg int push (bad) rex.RB cmpsl jrcxz xchg mov icebp adc xchg ja jrcxz push loope sub shrl decb adc sub or fimul xchg sub decb xchg icebp movslq movb cld in iret in movsl add je clc mov retq movsl adc fstpt fcmovne fsubr and movabs mov rcrl pushq mov or xchg in sahf cld rex.WX rex.W mov xor sbb pop test lea cmp sbb and imul pop rcrl movsl insl imul sti (bad) push or out in ficoml jno in pop adc (bad) xchg je adc out sahf sbb lock (bad) push mov pop (bad) mov jb jge rex.XB xchg test je jne test icebp ljmp scas jbe lret mov sti cs mov subl xchg sub adc popfq and rex.WRX and test xchg add push add cld int xchg rex.XB (bad) jmpq adc insl mov sbb xor jae ja fsts rex.B (bad) rex.RX push movsl (bad) sub loope (bad) jp and insb fmuls jo (bad) mov xchg (bad) xchg rex.WXB sub movabs rex.WRB jrcxz xchg push rex.W rex.XB add or or and int3 (bad) out xor sahf cmp repnz cmp lods rex.R mov sub orl (bad) retq (bad) (bad) push sub loopne mov and rex.WRX xchg nop (bad) movabs mov rex.R subb sub loop add out xor leaveq es stos ds adc subl sahf cwtl fwait (bad) sbb movsb lock pop imul cli movabs scas in in xchg and fsubl loopne addr32 mov cmpsw fs jmp (bad) adc (bad) repz cmc insl jg mov scas je rex.RB out mov sub pushq mov out movabs cmovle insl lret (bad) (bad) int jno (bad) mov andl jge rcl jrcxz rex.WB rex.WRX out sahf (bad) sbb mov movsl rex.WX jp sub imul iret xrelease fistp je or sahf lea mov (bad) (bad) (bad) hlt xor notl jae movabs rex.WB and cmp movsl pop cli (bad) rcrl shlb stc xor jns or xor sub xor (bad) jae jne (bad) push xchg jnp movsl icebp and mov out mov (bad) cli or ja callq rex.W rex.WR cmp (bad) adc int mov sbb mov pop imulb lret ror fbld lret rex.X retq jno pop mov xlat sub mov enterq mov sbb mov or clc sbb rex.WR or (bad) sub mov mov rcr je cltd push rex.WR or stc je xchg loope movabs (bad) hlt in push insl adc pushq mov push (bad) (bad) push out (bad) out outsl movsl (bad) adc mov (bad) movslq cld (bad) push (bad) fisub (bad) rex.WB and mov sub push xchg int3 or jg xchg rex.R jrcxz (bad) ja rex.WRX (bad) icebp imul sbb lock lods (bad) retq jne (bad) hlt xchg and mov rex.B fs loop pop jno push cltd lret (bad) je nop test std hlt pop push out movslq pop test callq jae jp xchg push (bad) fstp sub mov pop mov (bad) imul in in mov (bad) lret gs es pop iret scas pop add (bad) (bad) jmp scas movabs xor mov stc (bad) rcr push cltd rex.WRB enterq rex sbbl rclb (bad) add add add jno xor mov pop icebp test cmpsl (bad) (bad) fisttpl rex.X or mov xor xchg (bad) sbb lahf xor jl cmc xor xor xlat xchg rex.WRX push lock pop jge cmpsb gs fistp push int mov out cld cmp sti or or imulb pop nop (bad) xchg movslq mov mov rex.WR movslq jbe (bad) adc std cli push movabs scas int cli cmp movslq sti sub push loopne (bad) lods (bad) lods rex.WR or mov xchg pushq (bad) mov add xchg sbb add push xchg rex.XB jrcxz (bad) out repz lods sub jno (bad) retq rex.W pop adc or (bad) xchg mov movabs lods (bad) mov jno xchg in movsl (bad) mov (bad) je (bad) (bad) (bad) sub lahf test callq js loopne js imulb int3 push leaveq cmp test pop sub shl add push negb mov mov jno xorl icebp movabs movslq (bad) rex.WR stc rex.XB in (bad) clc rex.WXB (bad) or pushfq rex.RB sbb sub rex.WXB lods (bad) out push pushq stc icebp rorl addl clc in popq or movslq and pop imul int3 jno cmp enterq iret add cmc jmpq sahf xlat (bad) fs push (bad) and sti push (bad) rolb rex.WX ljmp (bad) js jg or test pop rex.WRXB rex.RB or rex.WRXB (bad) (bad) (bad) sbb or adc add insb jle sub xor lock int rex.RXB movsl xchg testl adc stc ss jrcxz or or jmp (bad) repz push stc or repnz test outsb add shlb (bad) lret add fwait rol cmpsb (bad) jrcxz addr32 xchg mul sub movl mov rcrb (bad) lea sub mov (bad) cld test rex.WRXB outsl (bad) jno mov or cli xchg pop ja rex.WR repz addb (bad) rex.WRB rex.RX adc test rex.WRB int and and and es cmp movabs scas (bad) xor jmpq (bad) rex.WB ja (bad) or jp and orl push jrcxz fsubrs lret out mov push pop retq pushfq cmp cwtl mov xor test xlat sar retq retq (bad) nop rex.X jae (bad) xchg mov adc push callq or loope sbb fwait lret add lock lret out fincstp div or mov or leaveq (bad) (bad) loop xchg scas (bad) repz sar (bad) out insl (bad) (bad) loopne jl (bad) jp shll lods fnstenv cmp js repz (bad) stos mov es mov loope (bad) icebp sub imul imul and fcompl mov insb icebp or (bad) (bad) rex.XB mov cld (bad) sbb or push retq ss sub loope (bad) movabs in sbb test xchg callq je enterq mov outsb sbb movabs jp cltd jb xchg hlt cmp xchg jrcxz movabs add pop (bad) rcll push (bad) insl (bad) out pushq test rex.RX int3 cltd cmc mov icebp lret push sbbl pop cld mov movabs and or test callq (bad) mov (bad) stc mov xchg clc xor in or and jae jb rex.X mov jns sub mov rex.WRXB jp or jg (bad) and callq add (bad) adc retq (bad) (bad) icebp rex.RB push lret lods cli mov (bad) (bad) sarl cmp mov add test int3 scas retq push adc cmc leaveq and mov movabs jg xor test mov lods sbb hlt cli repnz mov jbe push mov rex.RB cmp pop cli (bad) or rol sti xor jp movslq or mov jle add mov jg je rex.WB cs cmp sti rex.WXB sarb sub rex.WRXB rcrb jns sbb stos jnp mov stc popfq jmp rol enterq callq adc icebp mov add (bad) fidivrl enterq fldenv rex.RXB (bad) leaveq and mov jnp out adc repnz ficom in cmp cltd pop jmp xor rex.WXB retq ja mov notb jle lods (bad) icebp (bad) out (bad) pushfq add add (bad) (bad) pushfq push jl mov (bad) sub mov and gs push xchg pop mov loope sub xchg and cmp rex.WRB mov rex.WX rex.WR lret in push int es stos jbe (bad) sbb (bad) jno xor fucomi push lea push out rex.WXB (bad) sbb insb and xorl decl stc sbb (bad) xorl adc xor lret jl jae test jmpq rolb jae std repnz pop jle test int3 rex.WXB mov (bad) in jmpq hlt icebp (bad) pop rex.WB jmp xor xor mov (bad) xchg addr32 cld scas int3 mov in in enterq callq jmpq icebp rcrb mov push mov sub (bad) jne mov add jmpq rex.WB xchg retq add xchg test jle sub (bad) pushq rex.XB rex.WRX adc adcb add out retq xchg stos mov insb in rex.RXB movsl int and (bad) add xchg insl movabs xchg rex.RX cmp rex.WRB out rex.WXB (bad) leaveq test mov je jno std scas mov movslq sbb mov test jno mul (bad) cmc in rex.WX fldl adc callq adc or xor loopne xor cwtl add sub (bad) data16 push (bad) (bad) rcrb xchg and (bad) mov (bad) fs add push rex.WXB sub loope (bad) jrcxz (bad) test (bad) lea or mov (bad) and mov cmpsb (bad) xchg cmpsl sub retq lret (bad) sahf movabs and jnp (bad) fldcw and imul loopne movsb test (bad) callq pop lahf sbb out out imul sarl sub (bad) xchg xchg sti mov xchg hlt sbb (bad) mov (bad) inc mov data16 sbb scas movslq sar cmp rex.R ds or pop push rcr movsl stos or gs jns adc jle add push push mov sbb repz mov rex.WB pop add mov lods enterq (bad) adc stos push int3 rex.WX jle mov movabs pop mov imul (bad) shll retq or sub pop xchg pop leaveq je add mov (bad) movsb jrcxz add sbb cld sub rolb lret xchg in in jne xchg jns test sbb inc rorb test sbb mov rex.WR pop rex.WR sub jl mov (bad) movabs rex.WXB lea cwtl or fwait fs sbb or adc pop mulb icebp fimul rex.RB in (bad) push (bad) scas andl (bad) pop imul (bad) mov in (bad) and fcoml sbb hlt and (bad) (bad) mov xchg es movabs jge cmp push ss jmpq sbb xor sub imul xorb xchg mov loope retq popfq pop cmc rex test repz rex.W gs add imul xchg fsts pop lcall (bad) xor (bad) or xchg or insl mov (bad) (bad) loopne leaveq xor or rex.RB mov push movsb repnz (bad) mov loope lret mov xor retq in pop xor sub rex.WR cmp sub insb fcomip adc (bad) fs cmp mov pop (bad) lea leaveq stos (bad) (bad) jno int3 or xchg pop leaveq scas or (bad) insb lods pop (bad) and (bad) mov xor mov mov cli js int std int3 int3 xor leaveq movabs pop pushq hlt mov shlb outsb (bad) pushfq or pop cmpsl cmp push sub pushq flds rex.WRXB int in enterq rex.RXB int3 cltd (bad) mov lods in ja (bad) sub rex.R xorl mov leaveq in rex.WRX rex.W sub (bad) rex.X out (bad) lock jo subl or movsl test rex.RB faddl lea sbb xchg ds cli sub or (bad) mov jp sbb sub (bad) (bad) jns sbb rex.X rex.RB mov outsb (bad) (bad) scas mov insl rex.WRXB mov int3 icebp repz in mov je jmpq mov mov or gs movabs insl (bad) ja lea repz and sahf jg iret movabs mov mov add test movabs pshufw fstpl (bad) cmc add rex.RB ds cmp (bad) adc add (bad) adc push or push or (bad) mov mov push or icebp lock stc stos insb fistpll or rex.WR rex.WRB sub jne xchg and jrcxz sbb idivb repz cld mov leaveq xlat ds xor rex.RX xor adcl sub icebp cmpsl fsubrs (bad) stc data16 out icebp cltd icebp scas subl (bad) (bad) add movsb add testl in jle repz rex.WR pushq sub mov or sbb add xor (bad) stos sub rex.WR rex.WX lock jo nop mov scas add lock testl jl stc lret std rex.RX loope add jmpq in sub (bad) icebp jnp fldt rex.WX cli jle adc out (bad) (bad) xor mov (bad) (bad) subl repnz rex.W cmp xchg (bad) rex.RB add sbb mov jae movb (bad) insb jbe mov retq es scas retq (bad) push or add lock jne rex.XB jno std mov sub mov mov mov jae cltd outsl rex.WR mov loope mov xor ds jmpq sub (bad) mov fadd rex.WXB sbb sahf xor sub sbb retq rex.RXB adc xorb cmp (bad) out movabs pushfq int jp pop mov or loopne pushfq xor jno movsl repnz mov cmp stos clc fisubl cmp leaveq int3 icebp sbb mov mov callq hlt icebp xor stos xchg shr jae outsb mov add or mov jg repz movabs adc xchg push iret rex.RX insb sbb sbb push sahf adc movabs loop (bad) in lock pop sbb sbb vandps in xchg (bad) (bad) rex.B jae xchg pop jne icebp popq ss cmpb and and or rex.WR lods outsb rex.RB push (bad) rex.WB rex.WRB ds mov rex.XB and xlat jge lahf rcrb in callq (bad) out rex.WR divb add push flds repz xchg (bad) cmp jne (bad) mov sbb or mov (bad) (bad) rex.WRX mov (bad) xor sti push cltd addr32 insl pop pop cmp scas retq (bad) xchg in xor movabs rex.WR cmc sbb movsl add xor fsubr fcomps and scas sub push loope sub ror push loope sub fxch push pushq stos hlt icebp leaveq adc (bad) cmc pop movabs jae pop jmpq (bad) (bad) addl fsts push pop (bad) xor lret rex.WX mov adc jle stc int leaveq std pushfq add rex.RX in add rex.XB gs mov and cmp mov (bad) cs test (bad) (bad) (bad) pop xor int3 repnz or adc add shll mov int3 (bad) mov in xchg mov and xor or cltd in cmp add and xor mov mov and xor (bad) andl int3 jne push sbbl sbb (bad) cmpsb jns adc iret adc (bad) test callq movsl jne jnp rex.WRX movabs pushq rex.WR rex.WRB sub pushfq hlt rex.XB push pushq jne mov (bad) out fldln2 jae xchg not rex.WR hlt xlat pop mov retq pop enterq cltd mov mov icebp repz xor xchg mov adc pop rex.WRXB cmp sbb sub (bad) pop sub testb pushfq rex.WR iret sub or int cwtl (bad) rex.RB (bad) in (bad) mov xor cmpsl xchg and sbb loope (bad) (bad) repz push repnz fnop lock roll test (bad) es mov retq in icebp or add rex.RB push pushfq cmpsl pop data16 mov mov (bad) adc retq (bad) xchg in push adc jne stc cmp icebp stc (bad) xlat (bad) sub loop jmpq enterq rorb sbb and rex.W mov (bad) in (bad) rex.X xor retq pushq (bad) (bad) cmc insb (bad) or clc rex.WXB sub hlt movabs loope or add cli mov fstps hlt addr32 jl (bad) (bad) movslq or in in (bad) test rex.WX sub scas push and mov cmpsl pushq loopne xor or out callq push mov pop rex lahf and sbb push shrb leaveq lea sub mov repnz (bad) out gs (bad) (bad) xchg pop pop (bad) lret cltd sbb mov rex.RB mov cld jnp (bad) sbb jno insl pop rex.RXB movslq jl cltd xor je in mov icebp sti fmuls sub rex.WR mov sbb mov and xor mov lahf mov or pop enterq adc push mov rex.WRX ja xchg jo test insl jmpq mov xchg roll pop add and nop xor leaveq shlb stos movabs icebp mov jo test mov sbb mov cltd add ja cmpsl repz repz jns cmc or fs imul xor adc or (bad) je gs orl movsb rex.R jg (bad) rex.WRB es cmp in (bad) je rex.WX (bad) test cmc clc cli mov mov (bad) jbe out pop std (bad) (bad) int jmp shrl (bad) mov rex.RXB out sub gs andl cmp xor xor sub push int3 jp rcll or mov and retq int repnz movslq adc sahf (bad) mov stos cld repz mov xchg icebp cs in sbb lea cmc (bad) rex.WXB in jl and xorl xlat jbe pmulhuw (bad) jno rex.WB repnz (bad) leaveq gs lock push mov test and sbb pop and loope mov cmpsb mov (bad) test or rolb (bad) sub in outsb (bad) (bad) fmull mov mov retq callq fnstcw xor lods retq sbb movabs sbb lods int3 (bad) xchg xchg mov pop out jg cmc mov mov negl outsl pop jns test push stos test jno jno lea mov loope sbb scas sarb imul retq mov sub imul lret (bad) (bad) (bad) fidivl rex.XB sub jp fs in cmc (bad) pushq adc (bad) xchg movabs in rex.WRXB insl mov stos addl pop and imul rex stos or divb rex.WB pushq in adc in xchg (bad) movsb sub movabs cmp lods test ss cmc rex.RB mov adc rex.XB in jrcxz fisttpll mov xor subl (bad) jg or fst leaveq jns rex.R cs jne mov subl cmp sub (bad) mov sahf hlt xchg cmp rex.R sbb xchg rex.WB pop adc jg or mov sub lock jg stos leaveq jp xlat xor js (bad) adc and scas (bad) jbe jne icebp or pushfq mov push mov sarb icebp mov mulb xchg and lock rex.XB (bad) jl rex.WB fist push mov xor test jrcxz or hlt pop leaveq movabs enterq (bad) mov vpaddusb lret sub xchg (bad) (bad) (bad) retq pop sub movabs mov movabs mov rex.WR mov test rex.WRX mov adc hlt insb addl imul out and pop out jb or sbbl cmpsl add movsb mov or ror mov (bad) mov nop (bad) int3 jbe push (bad) jae callq (bad) jrcxz (bad) mov mov mov cmpsb callq in mov (bad) rex.RB cwtl (bad) mov (bad) mov repz mov sbb xor push jrcxz mov and addr32 jmpq xchg lea rex.WRXB clc adc (bad) fcmovne jne cmc jo cmp (bad) add jne repnz int3 rcrb ss addr32 mov xor scas gs icebp lods sbb rex.RB pushq je mov cmpsb cmc in xor jne in int3 cmp rex.WRX mov cmp adc je int3 cmc (bad) push mov add push or (bad) xchg stc in fnop xlat xchg loope ja (bad) xchg nop cltd rex.WR movabs and jmpq fmul add decl test (bad) mov movslq lock sbb je sbb retq (bad) adc sub cmpsl notb mov retq movabs out (bad) (bad) repz lock gs sub mov or push sbb lock icebp sub fldt movslq (bad) fildl (bad) and enterq xor xor push out (bad) mov cwtl iret rex cmpsb std and (bad) movabs adc mov sub and xchg xorl xchg pop push rex.RX shrl push pop cmc callq jns xchg mov fsqrt cmp sahf rex.WRX rex.WB pop cmp mov sbb icebp xlat xor cmp mov mov mov sti (bad) mov psrlq mov stc jnp sub xor scas jns rex.WRB rex.RB cs repz (bad) movslq outsb rex.WRX cmpsl test (bad) mov and adc sub cltd sbb fiaddl xor (bad) cmp loop xchg jrcxz mov out mov push (bad) imul test jg scas add sbb movabs test fdivrl and (bad) rex.WR pop cmpsb std jp mov retq movabs fisubrl cmp xor out je (bad) rex.WRB lahf (bad) cmpsl test rex.WXB enterq test test adc xchg out adc cmpsb cmp iret out je test jmp pop jbe in test iret pop rex.WRB lea movsb adc sub jns fdivr cs rex.WXB jrcxz callq in adc and xchg or pop repz test mov rex.WRXB sub out retq (bad) push add push mov add (bad) (bad) pop jl loopne xor pushfq xchg (bad) rex.W mov rex.WXB adc add outsl mov or mov xor movabs add hlt out (bad) xor pop in (bad) movsl iret rex.WRXB retq cld int3 cmp mov xchg in fsubrs mov jg shlb lods mov pop pushq and rex.RXB movslq fdivr sbb hlt sbb lods int xlat sbb (bad) mov xchg pushq movsl repnz cli outsb ja cld jrcxz,pn outsl loop (bad) pop mov sub pop mov rex.WB pop fwait xchg mov rex.RB pause add mov pop flds jo jrcxz push (bad) ds (bad) jg (bad) jl shr (bad) push add push rex.WRXB (bad) adc movabs (bad) lock test movabs jo add (bad) fld1 mov lods cmp sub int3 lods movabs sub rex.RXB repz enterq (bad) sub adc data16 lods sbb lret xchg sbb cmp xchg andb rex.WRX shr (bad) in movsb fdivs xchg mov jae push and push jae cmpsb pushq cmp rorl retq add test hlt push loope test rex.W (bad) iret in push mov pop lock repz stos add add xor xor and xor push mov push jge rex.B fimul cmp stc lret test add mov mov rcl or test sbb mov outsl (bad) rcrl imul xchg or ja (bad) rcl rex.WR rcrb push enterq and repz rex.RX and sub (bad) mov sub nop (bad) in mov stc cmpsb in enterq jne popfq push xor sub or mov callq mov sbb idivb mov leaveq retq mov add cmc mov pop ffreep faddl mov in jae pop (bad) jnp cmp (bad) std jp in adc jnp (bad) divl rex.RB cmp (bad) mov addl pop callq sub repnz (bad) (bad) cmc shll (bad) adc jns icebp (bad) rex.RB adc icebp cmp or leaveq cmp pop (bad) rex.XB cmpsb mov pop pop xchg xchg movslq loope icebp clc jrcxz sbb rex.XB test mov xchg out cltd sub (bad) add addb out cmp movsb push and je loop ja (bad) jg xchg es (bad) enterq shrl sbb xchg fisubl std add push adc pop mov scas stc loop sub (bad) ss movabs or movabs mov test (bad) mov mov sub std or lods push or mov iret fucomi scas cmp cmp test or (bad) sbb rol (bad) xor mov and es movabs mov (bad) stc rcrb loop jns mov out xchg mov mov lret push in jae sub mov test hlt lock clc rex.WRB gs loope clc cmp hlt (bad) movabs rex.X je sti loope push mov cwtl outsl rex.WRXB clc je cmpsl jno (bad) xchg es xchg xchg (bad) (bad) movabs mov cmc mov (bad) rex.RX pop test (bad) and lahf je out loope and mov mov outsb push stc (bad) iret cwtl adcl int mov jp nop or mov mov mov rex.WR mov (bad) fxch (bad) fdiv sub (bad) add (bad) cmp repz (bad) (bad) jrcxz push int3 (bad) pop sub (bad) xchg rorb movabs fwait add jno rex.WRB int3 adcb add rex.WXB (bad) pop or cli in (bad) cmp xchg (bad) repz (bad) retq add and repz gs clc (bad) adc mov (bad) xchg scas fbstp imul cmpsb adc loope and pop int3 xor or cld (bad) cmp fistpl fldcw (bad) (bad) sbb icebp (bad) cs hlt jae rex.RXB stc enterq rex.WR fcomps roll repnz rex.WB lock or or divb jrcxz pushq pop sub loop clc (bad) gs sbb loope enterq outsb (bad) rclb jo stos in enterq jrcxz scas jns nop sub hlt rex.RB mov xchg out sbb rex.WXB cmpsl or retq movabs stos in sub rcrl out jnp jo fcompl cmc sbb int3 insl fcmovb cmp push adc (bad) (bad) (bad) int3 movsl enterq pop mov mull (bad) mov (bad) or or repz mov and decl cmpsl sbb mov addr32 pop rex.RB mov fwait and (bad) sub xchg outsl xor iret jo xabort rex.R sub enterq sbb sbb jno mov lret xchg cltd addr32 jno mov cli or sub fcompl (bad) or (bad) jb mov mov (bad) xor mov xchg and addl mov mov callq imulb enterq (bad) push leaveq retq cmp test rex.WR std pop mov ja (bad) flds imul sub int3 sub stos cmpb xchg jno add sbb movabs fadds icebp movsb pop rex.WRXB movabs xchg lock (bad) (bad) xchg ds int3 stc movsb adc xchg xchg (bad) popfq movabs mov xor mov jns mov in mov (bad) test retq sbb rex.WR rolb cmpsb rclb std imull pop sbb add movsl pop add xchg (bad) xor lods jae pop (bad) retq test rex.W rex.WRXB rex.WRX add lret fisttpl adc push mov test add (bad) pop pop hlt mov jge (bad) and popfq sub nop fidiv nop (bad) mov ja xchg cmp cmp fsubl cltd rex.WB sub jl add mov sbb sub jrcxz std jne test add and mov xchg movabs ss pop cmp rex.WX rex.RX repz xchg (bad) fwait add xchg rex.B rex.WB add and repz testl loopne xlat int3 add sub sahf sub (bad) out rex.WXB cmpsb (bad) mov mov mov (bad) test xchg adc and fnstcw cld movabs mov in hlt or push lock jae icebp sbb icebp xor or mov repnz push mov mov enterq es movabs sbb (bad) xor fwait or rex.RB data16 stc fidivrl (bad) mov jmpq (bad) xchg and pushq mov rex.X movsl rol push cmp push outsl callq iret rex.RB rex.WR (bad) rex.WB rex.W sbb movabs jge xor mov xchg loope sbb jne add int3 cmp sub mov cli jmpq cmp xor fcompl mov test fmull sti repz xor (bad) test (bad) xor shrl clc or and mov test fcmovne push xor pushq pop rex.RXB flds adc mov cli cs sahf roll movslq sarl pop roll cmp outsl iret repz cmpsl push leaveq jmpq (bad) std xorb scas or popfq fisubr lret lods mov (bad) xor rex.RX sub sub insl es mov (bad) nop enterq shl retq (bad) rex.WRXB rex.WRB add sbb fs rex.B pop out jg fsts cmc stos and jrcxz out pushq je clc jno jle movabs std add callq sahf (bad) in adc mov add movabs push test in sub xchg xor test retq jnp mov (bad) loope cmc mov (bad) rex.W sbb test (bad) jo (bad) rcr cld int3 sub rex.WB lock jns sbb (bad) (bad) int js insl adc retq movsl ss and enterq (bad) cs cmp rolb add cld (bad) movsb xchg pop pop (bad) sbb imul in sub mov shr repz cmp stos test pop repnz (bad) int3 xor lods insb mov and rex.WRX and push xor or cmp mov sub (bad) rex pop lock retq push fcmovne sbb callq (bad) mov xor fstpl (bad) or (bad) repnz (bad) sbb lods pop rorb xchg and sub pushq sqrtps rex.WX imul mov pop xchg jae xchg test pop mov rex.WXB sub (bad) (bad) mov movsl sti lea sub (bad) leaveq and movabs xor jle mov sub xacquire mov je in and rex.WRXB jle jrcxz popfq sub xchg mov push rex.WB rex.R sbb out enterq add jl scas jnp mov fsts imul sub fisttpll jg xor rex.WRXB (bad) or push (bad) fisttp (bad) jae push cli rcr incb rex.RX in iret movsb rcll mov std ja loop mov shr xchg popfq (bad) fcmovnb sub rex insl mov (bad) push (bad) adc pushfq negb lret test icebp jno mov (bad) xor (bad) ss add mov insb outsl cmp (bad) push jrcxz rex.R add test testl xchg (bad) andl add rex.WRX rdmsr jne test (bad) jno mov rex.WRX rex.RB adc (bad) jae (bad) xchg or or pop (bad) fs mov sub mov (bad) imul xchg js retq int3 pop faddp mov cli and xchg jbe cmc rex.WB sahf mov cmp sar test xchg push adc js retq (bad) sub rex.W rex.RX retq jg cmpsb push fdivp cmp (bad) sub scas jns movabs imull or icebp cmp (bad) rex.WRB lret xor mov mov loopne and mov js js callq fmuls push (bad) mov movabs gs fldt insl mov test cmpw sub xchg rep lock sub (bad) (bad) cmpsb rex.WR (bad) (bad) sub cmp imul (bad) test xchg (bad) (bad) xchg or cmpsb rex.W bnd movsl rex.WB rex.R mov iret cmc rex.RB mov es (bad) mov (bad) out (bad) fsubl xchg in out lea sub stos orl sub stc mov (bad) test rex.WRB cmp adc out fstp cmc retq mov rclb mov sbb add add and jp (bad) push jb (bad) in icebp (bad) xchg pop icebp cmp leaveq cli jne test xchg pop imul rex.RB mov fcoml xchg movsl add xlat lea add es insb mov fnsetpm(287 xor lock xor imul loope sbb repz mov jl lods xchg xor mulb sarb rex.WX cmpsl xchg xchg hlt (bad) int3 retq (bad) icebp mov or callq or in sbb lock mov pop out fdivr mov ja enterq mov sub and enterq fadd rcrl out lods rex.RX add cs (bad) mov cltd or cld (bad) nop cmp push adc pop rex.RXB jle mov xor sub test cmp in add or (bad) mov clc (bad) (bad) (bad) fidivrl add lahf xchg rex.W rex.WR rorl repz fmull add movsb fadds xchg or addb adc jne loope xchg imul and (bad) cmp or ja cmp or ss in mov leaveq (bad) cmpsl roll leaveq movabs (bad) xor pushq (bad) mov fmulp loopne iret (bad) orb imulb xor enterq cmc jg sbb xchg mov notb cs lods (bad) movsb test jp rex.WR push mov jnp std mov add sub mov outsb jp bnd mul cmp or xchg test jno mov rex.B (bad) mov xchg jae std int leaveq lock xchg and rclb mov (bad) mov (bad) mov rex.WRB repz sub ss hlt test out retq retq add mov shlb andl (bad) rex.X sub (bad) adc mov mov sti xor movsb and addl loop jmp adcb outsb mov mov or jrcxz int3 jmp (bad) out je xlat (bad) mov add mov (bad) push pop in iret loop movslq pushq fwait cs xor (bad) movsl rex.XB rex.R rex.WRX (bad) xchg jmp sahf fbld cwtl stos imul mov xor push rol rex.WRB rex.RB cmp imul jge retq sbb and ror int3 (bad) retq mov negb mov mov jge and repz test insb mov (bad) test in (bad) pop sbb rex.RB mov and icebp leaveq (bad) (bad) imulb in xchg cmp cs (bad) adc adc clc repz fstp cmove imul in stos cltd fistpl xchg scas (bad) imul xchg stc (bad) pop leaveq out icebp pushq or adcl cmpsl rex.RX rex.WRB push rex.WR (bad) (bad) leaveq rorb rex.X lods (bad) push xchg mov cmp jp rex.B push mov add mov test mov sbb mov xchg mov mov loop xlat (bad) mov cs loopne jl cmc jrcxz (bad) push scas mov in rex.RX (bad) popq (bad) rex repnz (bad) (bad) (bad) xor repz fdivr fdivr rex.WX (bad) enterq xchg (bad) outsl mov jbe movslq rex.WXB icebp mov mov sarb iret or je js add int mov rex.RB repnz imul orl add adc rcll stc mov jb stc xchg rex.WB rex.WRB or cltd and xchg xchg (bad) sub jmp (bad) loope cmp or mov mov mov rex ds pop ds sti cmp adc rex.WR mov push imul imul vpavgw test push xor or rex.WRB mulb mov ja (bad) icebp xor mov pushq movabs (bad) (bad) addr32 or clc xchg mov cmp in outsl or loopne sahf rex.WRB fidivl sbb (bad) mov add xchg sub loope (bad) cltd mov lock retq (bad) hlt cs mov (bad) repnz adc jg pop mov mov cmp iret movslq xchg (bad) (bad) test pop xchg adc push in mov rol rex.XB or sub loop rex.WRX and cli repz fisttp pop movabs sarb std rex.RB mov pop xchg mov je or loop mov or fabs pop movabs cltd sahf cmp imul movabs jg adc mov sbb xor movabs (bad) pop rex.WXB icebp test lock push std hlt jns xor rex.RX rex.WR pop cld imulb (bad) jrcxz leaveq movabs mov adc pop in mov and pushq mov cltd lahf outsb (bad) rex.WXB xor mov push rex.WB leaveq sbb xchg adc jmpq xchg fstp (bad) sub or (bad) jmpq push xchg push adc pop stc vcvttss2si test outsb cmp cld (bad) movabs callq in jmpq (bad) jrcxz pop push jle mov xor push (bad) jbe sub mov addl mov mov push (bad) sbb repz rex.WB xchg (bad) (bad) cmpsl loope js sbb (bad) cmp xchg xchg loop sbb add cmp popfq rex.X outsl pop jrcxz fwait add sti (bad) sub rex.RX add (bad) insl scas (bad) movabs test push negl xchg and and push movsb and pop (bad) pop mov cmp push retq adc (bad) jl fxch push stc (bad) test in jge in add mov mov addr32 lret out cli sub adc int scas xor lret add (bad) retq or mov mov mov mov loope (bad) (bad) pushq push xor sbb rex.WXB rex.WRB (bad) retq stos retq int3 (bad) mov repz mov stc mov adc int3 adc testl fs jne and jo,pt retq movabs sub and fidiv xor adc cmpsl pushfq push mov faddl (bad) or stc out xchg push addl adc sub roll sti cs (bad) xor lret callq icebp imul stc sub push cmc rex.XB jnp rorl cmp sbb (bad) int3 int sti pop iret leaveq xchg xlat pushfq movsl pop lock mov add xor cmp mov mov test add xor sahf xchg pop cmp sbbb rex.RX fbstp xchg loopne adc imul vmovaps and jb pop (bad) retq xor jnp div (bad) add mov pop movsl imull jg in rex.WXB fild (bad) rex.WRXB mov addr32 mov (bad) cmp cmp jb sbb rex.XB int enterw imul jrcxz in int3 xchg cld pop out fwait mov (bad) jb sub rex.RB fwait mov repz int3 pop pop pop and sahf cmpsb or mov sbb icebp nop lods cmp mov insl callq (bad) push jnp (bad) jmpq sub movabs sub push stc je loope jbe cmp rex.RX repnz push or (bad) xchg stc xchg cmpsb sub rex.WRX fadd pop xchg pop sti and sbb cltd retq and int3 (bad) xor (bad) or rex.R xor mov fiadd cmp fstpt cwtd jo mov std int3 rex.B (bad) icebp test rex.WB ss adc rex.XB xchg rex.WR loopne (bad) fucomi fstl cmpsb sbb xchg sbb jmp stos fnstsw (bad) pop imul pop hlt push rcrl sbb rcl push scas fwait leaveq test cmpsb enterq fildll (bad) or test in rex.X retq mov pop xlat std xor jmp cld add pop mov (bad) cmp int3 movabs rex.RX rex.XB rex.XB movabs rex.WB add leaveq sbb jmpq or or adc add lret rex.WRX (bad) pop movabs mov cs loope jae cmpl loop nop (bad) movabs cmp push and hlt jp xchg out rex.WB mov (bad) int3 mov fidiv xchg loop stc adc out int xor mov sub and add adcl outsl xchg and mov mov gs leaveq adc lods xor icebp rex.WRB mov pop int3 cmpl lret pop mov enterq cmpsl rex.WRX rex.WX movabs jp imul test (bad) callq cmpsl lahf sub movabs icebp leaveq sbb mov mov mov rex.WB push fs (bad) repz icebp xchg xchg or adc js sti out jle int3 (bad) jno mov adc jae mov out (bad) data16 loope repnz sbb or (bad) mov pushfq xchg leaveq xchg mov or rex.WRB rex.WB clc rex.B movsl xchg pop mov add (bad) xchg mov mov jno add cmpsb repz sti out jns movsb lahf rex.RB sub out repnz jne add pop sub stos mov mov test movsb mov loop mov rex (bad) rex.WRX shll out sub and sti xor or fimull xchg rex.WRXB adc sbb ja in (bad) (bad) sbb test movslq mov andl negb lret rex.XB rex.RB (bad) sbb rex.R divb mov mov mov mov fdivrs out stos sub (bad) and popq jl callq mov (bad) mov movabs (bad) imul sub (bad) (bad) rorb jbe enterq rex.WRB out (bad) mov scas lret xchg mov callq cmp es jnp xor (bad) mov xchg rex.B (bad) (bad) mov flds sbb sahf xor mov out fdivrl rex.W pop (bad) in test jne imul add test ja xchg mov rex.RB sahf and rex.RXB jmp addr32 mov (bad) cmpsl sub jb imul movsb cmc pop repz stos iret (bad) xor sbbl push rex.WRXB jrcxz rex movabs stos adc xchg rex.X movabs rex.WB out mov mov xchg jb stc (bad) rex.WRX or mov sbb or loope rex.RX add adc (bad) pushq jbe push nop adc out cld rex.WB mov mov test xchg out add loop (bad) retq sbb pop andb sub add sub ja cmpsl fstl movsl imul xor sub sub insb adc stc pop jrcxz (bad) jrcxz pop (bad) (bad) mov hlt pop jno test shll xchg nop leaveq cmp (bad) mov scas add mov callq ja rorb ds xor jb in rex.WB rex.WR cmpsb sub jno sub js js cltd jno jns and and imul rex.RX jne std movslq (bad) imul xchg fnstenv (bad) icebp sub icebp fstpt cltd enterq movslq (bad) (bad) mov (bad) mov ja (bad) push xchg add outsl fld mov jns,pn (bad) xchg (bad) pop xchg cmp cld (bad) xor jno int3 adc fnstsw stc lahf (bad) shll mov xchg outsb out mov in mov pop (bad) in mov sub jrcxz retq or int3 retq movabs test rex.WX rol gs xor test in jo xchg out xchg add adc cs (bad) retq jp (bad) cmp jno (bad) test (bad) cmpsb cmc (bad) lock sbb adc (bad) rorl lods or scas rex.WR and jno pop jmpq (bad) frstor rex.B xor (bad) jle nop rex.WX (bad) fdivl sbb int3 mov mov push push (bad) mov out sub movabs sub in or or lods lea mov (bad) xor xchg xchg sub test out and lods xor cmpsb push (bad) xor add pop leaveq stos and sbb pop mov pop rex.WXB add in repz imul jne outsl xchg or mov rol jl loop retq mov lret add callq and movabs int (bad) sub add mov rex.RB xor and icebp movslq and (bad) xor sub mov jbe icebp int lret (bad) pop lret repz loopne sub adc (bad) insl (bad) rex.RXB adc (bad) enterq (bad) cmp nop adcl je (bad) add xchg jno popfq or or add mov add retq jae rex.X insl int3 xchg (bad) int cmpsl test (bad) pushq jb cmc rex.WX loop (bad) or mov mov fistp push outsl retq (bad) movabs or cs or mov push popfq ja je loope add rex.RXB sub cmc or test (bad) mov ja (bad) sub (bad) adc sub callq vpavgw cld add retq clc test rex.WRX roll add pushq fnsave pushq or rex.RB rex.RXB rex.R (bad) test mov and and add mov and or testb mov rolb add lret movabs xor cli callq jl add xor push mov mov pop lods (bad) mov subl (bad) fxch mov stc (bad) cmc xor sbb or or or cmp rex.WRXB xchg movsl (bad) clc enterq lret or (bad) (bad) (bad) out cwtl clc int3 imul (bad) xchg enterq adc movabs rex.XB mov and (bad) imul movabs cmp jo leaveq repz pushq push pop pushq jae pop (bad) retq sti rex.B rex.WR loopne enterq mov xchg movabs xor movabs (bad) callq mov cmpsl xor xchg vpminsd int lret xlat out (bad) in addr32 int3 (bad) rex.R rex.W xchg (bad) shl repz out mov jae roll (bad) repnz rorb cmc sahf and cs rex.WRB jp adc in (bad) push cmc enterq int enterq xor add cmc and lods (bad) sub adc adc loope push sbb xchg int mov negl rex.WR scas data16 movsl std loope retq xchg cmp (bad) movsb (bad) (bad) int xchg in loop jle cli sub movabs repnz fdiv pop mov rex.RX rex.RB int icebp jno adcl and jl ja (bad) lahf rex.WXB (bad) pushq vucomisd mov (bad) test pop popq or xchg movsl (bad) xchg xchg cld rex.XB rex.WRX rex.WXB pushfq cld xchg retq lahf cld clc retq cmp enterq test (bad) leaveq pop (bad) rex.RXB xchg loope xchg loope xchg loope xchg std xchg pop rex.R cmc mov pop enterq int3 cld mov (bad) insb (bad) enterq ds sub (bad) movabs movsl loope jmpq or (bad) std mov mov xchg gs fxch repz jae push rex.WB (bad) sub xchg movabs jmpq or mov leaveq (bad) fldenv imulb (bad) jae (bad) adc stc or jnp movsb sahf lret movsl sbb orl cmc mov subl xchg rex.XB (bad) add push int3 in icebp sub out (bad) es add rex.WR imull insb hlt adc int (bad) pop rex.W rex.R (bad) cmp rex.WR or sub sbb jmpq retq in int out callq test (bad) movsl test pop xor test mov out popfq fwait sub jno mov add and mov scas test rex.B jmpq rex.B mov fisttpl jbe insb xor (bad) sbb jl (bad) rex.WR nop xor icebp xlat in sbb cmc xchg mov insl (bad) repz fpatan mov ja (bad) (bad) repz cli loopne sbb outsb out mov sbb and push (bad) test movsb sbb (bad) stc xchg stc rex.WRXB out rex.XB sbb movsb (bad) rex.XB add icebp retq retq gs stc add rorl test lea mov push test sbb sub mov and mov int3 rex.XB rex.WRX (bad) callq sti add mull clc mov and and (bad) rclb add iret retq mov rex.WR cmc je and retq pop out leaveq retq sub cs lret jg pushq cmc lods ss rex.RX repnz rex.XB icebp pop gs and rdtsc movabs mov cli test outsb pop pop movabs test insb jmp movabs ficoml fistl (bad) sub (bad) mov jrcxz stos jmpq cld (bad) divl (bad) jns test outsb rex.R int mov (bad) (bad) sbb add movb (bad) outsb rex.R hlt (bad) cmc rex.WRXB rex.R mov retq icebp sbb movsl sbb sbb mov jg xorl nop and sub and rex.RX sub int3 stc out (bad) iret in int3 sub add hlt cld clc jnp cmpl rex.RB mov scas sub (bad) pop roll pushfq out xor xchg (bad) jmp jmp (bad) sbb mov out push xorl in retq jnp rex.WRX leaveq (bad) (bad) xor rex.WXB orl test cld imul mov repz clc test std pop ds or loope jmp xchg pop xor jno cmpsl jrcxz lods pushq test callq test mov jns stos in mul xchg mov or shlb iretw (bad) sub pop std enterq sbb sahf cld xor iret lret cmp int3 push insl loop lahf mov mov sbb pop sti std adc fild cli rclb test test xor cmp (bad) (bad) cmpsb (bad) cmc push xlat scas callq es jrcxz pop icebp loopne and mov fisttp in push fmul mov sub rcrb faddl and push mov or add rcrb and mov sbb sbb cmc or sbb cmc cmp rex.WRXB out adc ss fwait callq in adc sub rex.XB cmp out xor (bad) xchg retq xchg xor xchg (bad) mov loope mov fbstp (bad) notl in fcomi test out icebp jno jbe out mov lea xor mov out adc iret xchg add (bad) outsb mov lock (bad) imul leaveq rol lret insb add pop iret movabs or rex.RX xchg sub jg (bad) cli int3 clc (bad) sub or (bad) fcoms cmc movabs (bad) rex.WX fmulp (bad) xlat xchg mov mov int idiv rex.RX incl movabs loopne sub rex.R cmp (bad) loopne add (bad) jnp movabs js icebp jno mov rex.WRX jns mov cs pop or test repnz add pop incl adc mov jrcxz js fdiv ja jne imul mov test mov sahf xchg add or scas or cld testl xchg mov int3 fisubl sub sub mov (bad) mov test sub xchg int test stc pop xchg xchg nop lea mov jl jg add (bad) fisttp jbe (bad) (bad) fwait xchg icebp adc pop clc lea movabs in cld mov sub shrb jrcxz sub mov (bad) ss mov repz out and out test and sub and test push movslq and push int sahf cltd mov mov cmpsb push in pop mov mov fs sar in sub jmp rex.R mov cmc fcomi mov notl sub leaveq jl add (bad) clc adc (bad) insl lret rex.WRX mov lock fucomip retq rex.RB xorl mov faddl out cmp ss cltd int notb mov out rolb fwait in adc cli testb xchg sahf or or cli es mov movabs (bad) xchg and xor cld rex.WR mov lcall enterq (bad) or adc clc push add fisubr adcb lock rex.RX rex.RXB add retq sub pop and outsl sub mov data16 jno lret mov (bad) add or (bad) (bad) repz or stos mov cmpsl mov xchg mov fdivrl mov sahf rex.WXB xlat fmull scas or gs ja movslq rex.WR rex.B mov and ss rex.WX jnp pushq jae fsubs fwait imul adc movabs rex.RB test jmpq movabs insb hlt rex.WRX rex.RX add insb (bad) (bad) pop ja div flds fstp test fnclex lods mov cmc retq mov pop jp jae retq rex.R cmpsl retq enterq sahf rcl sub lea xchg mov add orl cli mov out mov or loope sarb rex.RX (bad) push jrcxz movnti rex.RX cwtl int3 repnz test loopne and testl rcll cli movabs jbe in cmp push lods iret (bad) mov retq xchg push shl pushfq (bad) je enterq fstpt out sub mov rex.WXB notl fimul adc rex.XB adc pop pushq mov rex.XB rex (bad) callq pop (bad) shrb cs pop mov mov (bad) (bad) iret rex.WRB rex.RB fs adc scas sub or test lret stos sbb mov xchg in lods pop lock scas mov repz jnp mov movsl leaveq lods jmp mov (bad) loope xchg imul fstps (bad) rex.WR subl cwtl and (bad) rorb fistl cmp stc jns sti jle iret nop or adc mov xchg xchg xor fs pushq sub loope repnz rex.XB mov sub rex.WXB sub pop sti sub (bad) jmpq rex.WX lods frstor nop and movabs fisttp rex.WR fisttp pushq xor cmp mov int fcom iret pop pushfq (bad) (bad) pop (bad) jge rex.WRXB or pushq movsl cmc adc mov divl mov add push callq fidiv or sbb xchg (bad) lods cld std add or (bad) adc lret fisttp (bad) xchg movsb xor or jne add mov gs rex.XB jmp andl out (bad) mov pop iret rex.R lret iret mov rex.WX int3 callq iret rex.WRX rex.WRB in rex.RXB add add in cli xchg rex.WRB mov adc rcr xchg mov adc andl add test fcmovbe rex.WRX fadd movabs jl test (bad) fcompl xchg clc cmp out mov jae (bad) sti cmc cltd rex.WRX (bad) (bad) (bad) or sub hlt pop ja rex.WXB (bad) jmpq xchg cld loopne test rex.X rex.RB rex.WXB fadd jrcxz loop (bad) jmp or ss jl add cmp mov (bad) rex.RX ror xchg pop retq leaveq (bad) sub adc (bad) push mov out rex.WRX (bad) test scas jrcxz mov lods fnstcw icebp xchg addr32 (bad) jnp sbb xor data16 (bad) cmpsb push fcmovnu (bad) (bad) (bad) mov lahf callq xchg cmpsb cmpsl out (bad) (bad) sbb sub adc xor and fnstenv jp (bad) lret shlb (bad) lret fdivr adc (bad) jbe mov and psubsb jg fdivs imul jae xchg mov jmpq (bad) jns (bad) rex.WRX mov lods imul cltd sti jnp subps cld fwait add jle std movsl imul mov jo (bad) xor push pop (bad) pop fiadd rex.R and sbb and jmpq ffree pushfq iret pop mov movabs loope sub sbb jo xor addr32 (bad) insb (bad) test jae sysexit push (bad) rex.X imulb (bad) and cmpsl rex.RXB callq pop (bad) (bad) mov out rex.RB fldl rex.B rex.R mov sub and mov sahf fstps rex.WRX vmovq retq (bad) (bad) add (bad) jl loope (bad) xor jno jae mov leaveq rex.WRX jne jno add mov movabs pop loopne xlat mov enterq mov adc loop fadd lods xlat adc sub mov lods retq loopne jl cmc and add addr32 lret or retq (bad) (bad) lret rex.W or ja fs (bad) or in mov rex.B cmp lods mov or xorl repz retq loope cmc rclb mov movsl (bad) lock enterq (bad) out negb retq test int and xor xchg or movabs mov movsl xchg stc neg rex mov icebp cmp mov and pop fsubrl callq sub pop (bad) test jmpq negl cmp movabs xchg xlat (bad) rex.WRX mov sbb mul mov rex.WRX rex.WB mov (bad) rex.WRB scas rex.XB retq test icebp jmpq fsubp in icebp enterq lahf int3 xor out rex.WB mov ficomp icebp xchg mov fistpll enterq (bad) (bad) adc mov sbb pop cmp out lods xchg std mov jno xchg mov xchg mov mov (bad) xchg jl jrcxz out (bad) in stos rcrb and mov fldt xchg and add imul cmpsb mov rex.RX xchg sbb pop out sbb or mov loope enterq test pushq mov in mov adc cwtl add (bad) jno fcoml fmull jbe sub (bad) or sbb xchg sbb (bad) imulb ds (bad) or mov movabs rex.W or pop sub cmpsb stc in test in push mov push clc test xor (bad) rex.WRX rex.WR mov jle (bad) (bad) movabs xor xchg rex.WB outsl iret rex.RXB adc rolb cli loopne retq rex.W pop sti test add (bad) (bad) mov and mov sahf (bad) pop mov loopne cmp scas icebp rex.B imul in sbb (bad) gs adcl mov xchg cmc xchg add mov sahf cmp xor imul out xor xchg rex.WRX (bad) rex.WR insl in mov xchg retq fnstenv xchg rol faddl sti stc (bad) (bad) fcmovu mov (bad) xchg adc test scas (bad) int vaddss jmpq (bad) pushq fwait rex.WRX and pop cmpsb setnp pop rex.XB pushq xchg mull fwait pushfq wbinvd scas cmp mov or (bad) int (bad) cmc (bad) lock lret sbb push loope movsl in sti retq in jmpq rex.X sub cmc test hlt or add cmpsb imul (bad) test movabs orq sbb sbb add (bad) cmc (bad) and rex.X (bad) mov mov cwtl jg loope push fs sbbl loop nop and (bad) (bad) rex.B (bad) rex.WR jp test (bad) sub jno rex.XB (bad) and adc sbb or push or leaveq (bad) fstpl ss mov repz lret lret rex.RB rex.WR mov (bad) cmp cmp xchg mov lahf sub callq mov push rex.WRXB (bad) sbb in jmp rex.WXB fcmovnb cmp fwait lock lods stc sar popfq xchg retq push cltd (bad) leaveq rex.X rex.WR mov fsubrl in mov mov lea adc std cli rex.RB xchg loope add (bad) jge lods sti (bad) test mov addr32 lock xor pop cld or rex.B rep movsb (bad) or js jp loopne in xchg rex.WB cmc int3 mulb lahf popfq pushq jno lret in mov push js icebp add fcmovnb repz jns cmp rex.R (bad) jne rex.WR sub (bad) add imul test ror movsl pop stc rex.RX jmpq int3 jo mov mov stos mov cmp sub in rolb fadd rex.WR (bad) movsb cmc pop lret lock movsl add (bad) hlt jno push (bad) out add (bad) (bad) icebp or int xor movsl xor xchg pop xor cli vpcomud pop shrb jne repnz je int3 lahf mov (bad) xchg adc xor sub sbb sbb loope rex.B rex.WR xchg push jmpq (bad) cmp push paddsw and addl adc xchg jo std insb data16 retq in std notb mov cmp add in cli movslq out in rex.R rex.WXB test sbb test nop (bad) sbbl rex.WRX pop orl movslq (bad) jb xor cld jp jle sub pop push rex.WRX retq cmp add pop xchg in mov insl sub icebp mov loopne cmp andb mov stos fild fistp xchg es or or mov or jno rex.RB mov mov in (bad) rex.WRB (bad) decl gs lahf jrcxz xchg (bad) outsb cltd (bad) push loope js jg rex.XB jb leaveq js and sub cmp je push sub push rex.WRX xchg test mov add cmpsl rex.X pushq (bad) (bad) nop stos rex.W int3 sub es orb cmp xor iret adc cmpsl mov sub (bad) push or xor loope lret sub int3 rex and (bad) mov and mov repz mov fstl mov cmp ja stc mov je (bad) lock callq cmpsl cmp hlt test fldcw lahf xchg ss push and in test enterq mov lock loopne hlt sub (bad) xchg iret mov loop outsb std jno jne (bad) cmp rcll rex.RXB rex.WRX adcl retq retq push mov test xchg sbb cmp sub (bad) std retq fdiv cli rex.RX fstpt cwtl sub mov ror movabs xchg ss imul movabs (bad) callq (bad) movsl (bad) cs push lods pushq and gs cs imul (bad) xchg outsl rex.R adc xchg add es and sub cmp test adc mov xor pop mov adc repnz jno rex.WR (bad) (bad) callq rex.WRX sub insb out jl rex.WB jno sbb (bad) mov sub mov icebp push sub int test hlt sub lock (bad) rcl add in xchg retq test mov (bad) add retq icebp or frndint rex.WB loop cmp std or (bad) test int3 (bad) adc rex.WXB cs push mov mulb leaveq in and retq xlat (bad) js sti clc cmp mov lods rex.X rex.B jmp xchg cmp fisttp addl (bad) callq cltd stc xor or rex.WX data16 rex.X gs xchg pushq mov adc (bad) jmp and mov imulb and (bad) stc xor mov mov (bad) mov movlps adc sub xchg jne mov test add push jnp mov and mov (bad) cs in test xchg jrcxz subl xchg movslq (bad) xchg pop in data16 (bad) hlt xchg (bad) cs (bad) icebp rex.WX int sbb (bad) sub shlb (bad) rex.WR fs add jmpq (bad) cs (bad) mov cmp repnz xchg lods movabs imul out xchg movabs (bad) sbb movsb test (bad) pushq cmpsb jno sbb xchg mov sub mov sub xor xor (bad) mov in loope xchg cmc int3 jrcxz xor rex.WRXB rex.RX in push popfq sub cld mov push int3 fistl sub test or rex.XB out pop in rex.WX cli rex.X mov int3 out leaveq enterq std es rex.WXB xchg sub int3 enterq jmpq xlat (bad) rex.WRB (bad) rorl enterq sbb stc out sbb enterq rex.WB rex.RXB (bad) retq sahf subl fmul leaveq xchg (bad) rex.RB out and in cmp add out or jrcxz pop cmp (bad) clc xor cmp add fistpll (bad) (bad) (bad) sub popfq (bad) ss cmc xchg lret sahf rex.B lods adc movabs xor xor test mov lret cmc fcmovu fnsave rorb jp push or mov rex.WX jno xor int3 xor repz in mov xor mov outsb (bad) pop test imull xchg sti (bad) callq and (bad) repnz (bad) movsl rex.WX (bad) stc (bad) jmp sarl xchg leaveq cmp push rex.RX xchg (bad) idivl rex.WB rex.RX enterq (bad) add jns xchg popfq sbb repz xchg xchg (bad) sub sbb hlt sub callq int (bad) xchg sub cli mov scas idivb iret mov push (bad) jns mov sub mov enterq mov sub and pop jp jl stc (bad) rex.WX gs xchg cmp sahf xchg cmp retq addr32 xchg test lahf rolb fwait (bad) (bad) mov std icebp rex.WXB loopne pop pushq jrcxz in mov or rex.WXB decb callq or push (bad) (bad) sub fmuls rex.WR rex.RXB xchg test rex.WRXB fdecstp rex.WX (bad) sti or cltd sub xchg out (bad) and mov je jno sti xor cld rex.WB rex.WXB xor xor popfq rex.WXB lret rex.RB fisubl sub and rex.WRX jb movabs (bad) je movabs jmpq fstpt (bad) push in movsl push int3 sub jno movabs (bad) out rex.WRX xchg js sub mov pushq (bad) jo xor fisubrl rex.WR rex.WR ljmp cmpsb std xchg lock adc pushfq pop xchg cmp sbb movabs gs fmul xor mov sbb mov mov (bad) mov or (bad) cs (bad) jae sti adc xor rex.RXB ds pop fwait mov ljmp cmp or addr32 out imul adc fiaddl pop and std xchg pop xlat mov jno jp pop (bad) hlt (bad) xchg rolb in jae cwtl mov (bad) rex.WX rex.WB je data16 (bad) in (bad) rex.WRX jbe pushfq stos mov or add mov adc fadd mov out vaddsubps movabs (bad) mull mov (bad) xchg sub cmp mov (bad) or (bad) sub in xchg (bad) xor outsl faddl (bad) (bad) cmp mov test push scas and idivl fist (bad) pushq pop jns push (bad) jnp jrcxz movabs rex.RB (bad) xchg and xchg xor in xchg mov and or mov lods and fstpl in std mov mov lods fldz repz add pop add movabs (bad) movsl icebp hlt jne fstps and rex.XB (bad) ja jnp rex.WR imul cmp mov adc (bad) movabs iret rex.WXB xor fadds add and icebp push cli (bad) add rex.XB jg roll fnstsw sti (bad) in pop and push mov lea cmpsl insl sub movabs retq (bad) repnz jnp (bad) clc adc pushfq out retq outsb (bad) sbb jns jno jns std rex.RX rex.X mov test or movabs pop fs mov rex.RX subl push push mov movabs (bad) push rex.WR cltd sbb cltd (bad) orl int3 rex.RX lea xchg rex.WRXB (bad) lock (bad) adc incb adc xorl rex.R sub fs (bad) pop or insb xchg mov add jb push out imul sub xchg rcl sahf push jrcxz xchg lahf (bad) icebp or jle and loope jrcxz adc repz (bad) (bad) in in (bad) jns xor (bad) clc in (bad) lods push outsb movslq loope fistpll push in stc cmp rol mov fstl add icebp (bad) test mov movabs repz push loop (bad) rcll lods insb or sahf (bad) mov test rol pushfq mov push (bad) sahf pop in jns mov push (bad) jns jle (bad) pop push jne loope xchg xchg rex.WRXB repz cmp mov xor xchg cmpsl or insb jmp xchg xor add xorl leaveq fidiv int3 sar sub push xchg xchg fmull std out (bad) or rex.WRXB ds or test adc loop mov xor xchg (bad) xor or rex.WXB rex.WXB (bad) (bad) or (bad) imul insl in rex.WRX mov xchg adc (bad) sub sub sbb rex fs out pop shll std rex.WRX in out mov int3 je addr32 sbb (bad) cmc rex.B and test fld (bad) push (bad) int3 mov rex.RXB mov or (bad) (bad) xor rolb retq sahf jl cwtl jns mov (bad) repnz lea popfq sub rex.XB rex.WRX rex.RXB fs stos sub mov adc rex.RX cs movsl repnz mov xchg enterq nop add mov mov out in (bad) lret ja divb (bad) (bad) rex.WRXB decl movsl callq (bad) xchg (bad) sbb sub sub (bad) mov (bad) stos jrcxz mov rex.R (bad) imul jge in incb add xchg mov repz out retq adc cmpsb repz adc repz xor pop or sub sbb add movsl shl (bad) (bad) adc add and cmp fsubp movabs sahf sbb fsub lahf mov sahf xchg lods rex.WR jmpq movsl movabs movb (bad) lea rex.XB adc pop sub movsl or push lea or or cmp gs ja hlt adc rex.RXB jne sarb idivb jrcxz mov lods cmp imulb imul push jo xlat mov cwtl or rex.RB imul out sub sbb lret xchg adc rex.X lock (bad) xor stos (bad) std (bad) and stos out cmpsb adcl or pop push (bad) loope (bad) cmp mov sub rol push mov mov jrcxz adc int in rex.WXB rex.XB rex.WRX jb sub loope mov sbb lock adc xchg retq subb (bad) rex.WB mov xchg cli or retq fsubrs shll (bad) rex movsl stc xchg mov sbb sub fiaddl idiv repz and rex.RB mov add pushq sub cmpsl mov and jp shll jrcxz mov sbb push cmp (bad) mov sub retq shr outsb fwait xchg retq (bad) stos jl mov rex.RX sub lock rex.XB rex.WRB je (bad) ffreep imul out hlt mov (bad) icebp sub andl out stos (bad) in (bad) sub and insl pop xchg (bad) std movabs (bad) xor push js mov ss mov test (bad) (bad) rex.W rex.WB es jmpq andb shlb or movabs lret and fldcw mov adc mov (bad) mov rex.RX sub in pop retq (bad) push add in pop jl jne (bad) jo imul xchg (bad) ja jno mulb int3 jge or in lods popfq cmp outsb jp (bad) incb add cmp mov rex.XB insl repz icebp and clc clc lods push stc movsl rex.WRX pop movabs cltd retq (bad) push rex.WX ss mov mov and insw mov adc rex.XB rex.W (bad) nop out (bad) and mov retq roll (bad) rex.XB mov leaveq movabs or (bad) adc pushq cld (bad) sar callq cqto mov int (bad) faddl rex.WX jno pop adc fsubrs xor fistp rex.W rex.WRB in rex.WRB sub jb adc mov cwtl add insb sti addb lret (bad) sbb sbb cmp mov test movsb xor (bad) fstps rex.WB rex.W mov sbb movsb loopne stc test mov xchg pop mov (bad) or repnz jo jmpq push pop out jae xchg imull jae pop fmul pop insb or pushq (bad) and jg retq fstps rex.RB leaveq in (bad) sub fcoms pop lret and sub fs fiaddl mov pushq xchg xor mov xchg mov add pop rex.RB mov out mov mov test fcmovnbe mov int movabs flds add icebp rex.WR jno test sbbl xchg loope,pn lret cld add mov add (bad) mov (bad) (bad) movslq xor cli mov outsl repnz movabs es adc xlat movabs mov xchg rex.R orl (bad) mov in cmp lret pop testb jmp (bad) jmpq rex.WRXB out in cmc iret jnp and jl mov leaveq xor imul pop (bad) mov (bad) sarl mul repz sub mov (bad) xor rorl vmovmskps xlat and (bad) push xchg hlt adc fcomp (bad) rex.RB rex.WB xchg xchg lea cltd clc stos mov adc out push rex.WXB repnz sub rex.WXB (bad) or rex.WRX cmc shlb retq (bad) subl movabs xchg rex.WR ds and mov loope push in movabs imul sbbl cmp stc jp jno pop rex jb mov mov rolb push pushfq adcl cs in (bad) repz jne and xor adc in icebp in test addl sub or mov test pop push xchg and jl rex.WRB mov loopne and xchg xor (bad) push mov or mov movabs subl rex.WXB (bad) shr (bad) sti mov or in adcb and mov sub xorl pop cmp in push or cli pop lret or ror jmpq rex.WR test rex.WRX rex.R lods fld ror adc sbb rex.W rex.RXB hlt sbb xchg add sbb (bad) (bad) mov lret jae (bad) mov es rex.B rex.W push xor (bad) mov jmpq or mov fucomp sbbl sub (bad) (bad) inc mov cmp imul add rex.XB fadds cwtl push clc cwtl repnz callq fwait shr (bad) adc mov xchg jns iret add fcomip in rex.WRXB jns mov pop sbb pop sbb rclb fstl scas adc cmp (bad) mov lret cwtl mov lock (bad) mov (bad) sub ficom mov scas mov scas hlt cs jne rex fwait in enterq (bad) hlt or out (bad) orl mov sub int3 (bad) sub test mov movsb xchg (bad) rex.W mov lahf retq rex cmp mov loop rex.XB jae jge pop int push pop rex.RX movslq jge rex.WB jbe (bad) (bad) int3 pop mov rex.X add in cltd mov xchg sbb cmc and sub leaveq hlt stc rex.WX sub mov movsl (bad) (bad) push push mov pop rex.RB imul rex.WB sub stos insb stc jno xlat rex.XB lea xchg notl xchg movabs sbb mov enterq cmp (bad) jne rcrl sub adc xor xor (bad) (bad) ss jmpq mov pushq test mov xor ja mov (bad) and rex.WX pop retq sahf pop cmc push negb and cld and sub (bad) cmc or mov cmp mov sbb ror jp mov pop test jno jmpq mov (bad) (bad) movabs scas lea jbe rex cwtl jmpq add (bad) hlt shll icebp callq (bad) enterq outsl jnp pop callq sub xor pop adc testl repz xchg outsb loopne jg xchg std (bad) movabs sti cmpsb lods pop or mov rex.WXB (bad) cwtl sbb fisub scas xchg add imull sbb popfq lock cmp cmp (bad) imul add or data16 data16 test rex.WXB cmp sbb pop test (bad) cmp test lret xor jg rex.XB jmp int3 cmpsb cmp sti or or rclb pop pushq xor pop pushq lock add (bad) lods xchg mov or jno adc (bad) out pop sbb rex.XB scas jno movsl scas pop push sbbl movabs (bad) cmc adc test cmc out rex.W neg push pop (bad) cmp mov mov cmc (bad) pop adc xchg loopne es push cmp roll pop lock mov sub leaveq jge rex.WR rex.WRX mov and rex.WRB pop movabs sbb sub lods pop mov jmpq movsl adcl loop movsb iret rex.RXB push mov movslq push retq icebp mov adc mov jle cmc and outsl rex.WRB fmul rex.WRX and (bad) rex (bad) cmpsl in retq mov int3 rex.W rex.WRXB (bad) popfq (bad) data16 out (bad) iret rex.B mov addr32 rex.RB out and xchg sbb adc shrl (bad) lret js rex.W sub mov rex.WR rorb rex jl adcl (bad) (bad) fdivs xchg callq stc mov sarb sub jae push movsb rex.RB add add es fstl jae es (bad) mov in cmp mov lret jne,pt xchg cmp jno and mov (bad) and cmpsl movabs imul int (bad) int3 (bad) out mov lret jnp sub jne xor jbe leaveq movabs mov mov pop sbb icebp mov cmp lods nop retq mov hlt test xchg adc mov int rex.WRXB outsl jl lret xchg lods jge stc imull sub int3 test scas pushfq stc lret adc lea pop cmc test in (bad) jle add sub cs pop rex.W cld stc (bad) repz cmpsb in leaveq movsl outsl cmc lret jns (bad) divb leaveq xchg mov sti roll xchg adc adc in mov mov mov xchg mov rcll adc mov js (bad) incb push xchg mov adc or rex.WR leaveq adc mov jrcxz rex out xchg xchg rex.XB cs vpmuldq lods sahf jrcxz push lods out pop out adc rcrb repz imul add js lahf xorb or callq callq (bad) xchg (bad) loopne mov mov sbb rorl test xor pop pop jb out rex.WRB cmp lret cmp rex.XB xor (bad) test popfq sbbl or (bad) xchg rex.WB push (bad) iret in add icebp fldenv fdivr xchg rex.WB in add xor (bad) xlat (bad) pop test in xor nop add add rcrb push rex.B fisubl rex.WX or push iret sti gs (bad) xor (bad) add icebp test or (bad) rex.X mov mov mov fisttpl (bad) or pop iret push test rex.WXB rex.WXB loope (bad) jns xchg xor iret lods (bad) rex movabs xchg sbb cltd jnp stc mov (bad) out or fwait stc rex.WR xchg enterq cs (bad) (bad) bnd rex.WB repnz jmpq pushq callq enterq outsl push cmp in jmpq test lods repnz rex.RB mov lret clc xchg add retq loop (bad) rex.WRX repz lods (bad) mov imul ficompl (bad) insl jrcxz cmp mov jnp cmp push sahf in icebp mov push (bad) int lock rex.X rex.WXB clc std push or sub mov jnp rorb sbb mov imul push nop clc rex.WX idiv movabs rex.WRB jne pushq enterq sbb xchg sub sbb out mov jmp sbb cs movabs jmpq (bad) rolb xchg rex.RXB rex.RXB fsubp cld std sbb or in sub int (bad) jo repnz pop jmpq in sub lret (bad) sbb mov std leaveq rex.XB in add (bad) mov sti sub not mov push movabs lods retq jle (bad) cmpsb (bad) xor int3 hlt (bad) fldcw movsb outsb andl scas out movabs rex.WR rex.RX (bad) lock (bad) imull out sub (bad) cmp in (bad) jne (bad) (bad) (bad) lock test jge or push (bad) fs repnz int jnp ja (bad) (bad) lock fwait (bad) mov mov popfq movabs sahf outsl jo in enterq stos and jo cmp rex.RB mov mov pop std in (bad) stc imul fstps hlt (bad) es enterq test rex.WR add jo jno mov iret retq je je jmp (bad) cmpsl pushfq jns loope leaveq rex.W cmc stc loope nop iret enterq cmc movabs (bad) jmp xchg (bad) or stos movsl loopne pop popfq adc scas cld sbb (bad) test sub xor or sbb pop mov jrcxz movl test (bad) cmpsb mov sbb icebp or jnp out (bad) or push rex.X int (bad) lret mov xor rex.RXB rex.WB retq (bad) jmpq mov mov mov (bad) jmpq lea push (bad) repz rex.XB imul cwtl push pop in (bad) sub je loop leaveq mov xchg icebp jl adc lret push cmpsl mov xchg mov fisubrl rex.WRX in (bad) fld push enterq mov mov sbb rex.RB pop jrcxz addr32 mov addl add enterq (bad) jle mov imul cmpsb or (bad) lods pushfq jmpq test cmc adc ja (bad) pushfq out rex.WRB and adc cmp (bad) xor movabs stos add push mov rex.R mov pop scas mov sarl jns mov addr32 xchg callq out (bad) (bad) sahf xchg rolb sbb cmp add push js jp lock sbb add gs push sub jbe cmpsb callq adc repnz fstpt vpslld (bad) faddl (bad) test pop lret repnz movsl add pop jno cwtl test push movb push or pushfq sahf (bad) cmp (bad) jnp mov cmpsb add adc or rex.RB movsl adc or and (bad) and (bad) je adc addl jp or pop ss mov rex.RX out retq je out je out je out je out je out je (bad) leaveq sbb icebp movabs adcl mov int3 rex.XB jrcxz jns xchg pop sti test jns incl (bad) jmp xchg and xor (bad) out stc mov adc sbb mov int jle int3 sbb jmpq rex.XB rex.RB repz xchg (bad) add gs and cmp add (bad) xchg fs sbb mov xchg adc jrcxz std out cmp pop (bad) xor sti jnp repz rex.WRX je rex.RX sbb (bad) fistp lock out and jge loope cmc pushfq sub retq xrelease or jno rex.WRB rex.RX pop mov addl retq lret push (bad) in add (bad) cmpsl pop rex.WR pop (bad) scas mov pop mov cli adc (bad) sub and subl in rex.WRB test sub sub leaveq (bad) int mov sbb mov xor out movabs pop in (bad) and mov callq ficoml repnz idivb (bad) pushfq incl pushq int3 sahf adc in push jmp xchg movsl mov out (bad) (bad) rex.WR cs outsb movabs xor rex.R pop icebp rex.W and enterq push add cmp lods and fnop push pop mov outsl add rex.RB es cltd jmpq mov (bad) rex.B repnz xor jne mov pop divl cmc callq mov sahf mov popfq rex.WX retq movl lods int3 imul out or popfq or (bad) cltq xor cmpsl rex.W scas cmp movabs (bad) rex.WXB rex.WR in or sahf testb sbbl stos cmpl in add imul cmp in (bad) jbe (bad) icebp movabs lret mov and (bad) movabs out and insl pop pushfq insb xchg (bad) shr (bad) and (bad) jae je mov data16 (bad) movsl or (bad) jbe (bad) movabs pop jge (bad) xorl rex xorl emms and retq sub jno push lahf xor add repnz sub mov test add xchg cltd jns vucomiss (bad) rorl xor (bad) lods retq xor jne jne jae (bad) movsl pop adc leaveq movabs sub and sbb xchg cs out pushfq xor xchg clc and imul test fcomi add mov push sub cmc (bad) in test pop movabs push fisttpll (bad) rex.WR rex.RXB or out mov out loope retq mov movslq (bad) test mov out cmc movabs lods retq insl jmp rex.WRX repz (bad) rex.B rex.RXB cmpsb mov lret test jl out fbld out fist je and sub jmp (bad) movabs leaveq movl pop retq (bad) cld test rex.RX (bad) rex.WRB icebp cmpsb (bad) sub add xchg imul (bad) or rex.WB mov fistpl jb xor push mov movq rolb mov xchg out xchg mov fmul rex.W mov clc jnp mov lret stc adc out icebp add repz jle mov jbe mov jg mov cmp std jp in jae iret jl (bad) adc mov pop mov rex.W (bad) or lea out push iret ficompl xchg sahf sub (bad) adc mov jne xor out (bad) (bad) and out test int test (bad) or rex.WR scas (bad) mov fwait adc ror mov repz sub kxorw out pushq enterq rex.WR and loope xlat pop test movabs cmpsl mov movsq retq and (bad) fstl mov mov jb mov gs in sahf jb adcl out adc incl gs rcll mov out movabs movabs xchg jns xchg mov (bad) lods rex.X test mov (bad) (bad) mov out add test mov push movsb (bad) in pop and out or push je outsb (bad) mov sahf add rex.X lret push scas xchg sbb jno je mov movslq (bad) (bad) pop add add addr32 cwtl (bad) sub outsb in add cmp ss cmc retq pop jg movabs rex.R cmpsb shll or mov clc lock jle loopne sahf sbb movabs cmc std (bad) out retq push xchg xor rex.B addl rex.WXB xchg out rex.WB push push push stos retq leaveq mov rex.XB es push (bad) (bad) rex.W adc insl rex.WXB adc (bad) icebp cmc clc (bad) rex.WR in imulb or push cwtl push mov xchg imul or loope rex.WB mov cwtl xor jmpq andl (bad) mov xchg cld mov rol (bad) sub xor jmp lret jmp in test (bad) repz (bad) (bad) jae mov (bad) ss rex.RX mov icebp mov leaveq mov mov mov shlb (bad) hlt mov movabs retq jmp pop (bad) repz adc fcomp rex.WXB or cmp addl xchg cmp movslq jno test jp scas callq cltd neg xchg or jns movabs icebp movslq loope out mov (bad) movslq xchg or cli or cld and mov and xlat xor mov pop adc cmp (bad) mov jmpq xchg (bad) in sub mov cmp cmc sbb or test xor retq (bad) xchg mov outsl cmpsb test add repnz shrl xchg mov jbe jns rex.WRXB rex.WRB pop sti xchg cli mov or push out test rex.B cmovbe jg iret adc loopne rex.RXB test add and xor rex.R or xor or xchg out idivb (bad) pop lret mov int3 (bad) roll mov loopne test in imul in mov std loope mull sbb (bad) mov shrb movabs cmpsb jbe cmp je cltd (bad) callq pushq rex.R icebp sub (bad) imul and sub (bad) (bad) (bad) lret push callq (bad) lret loope rex.B fisubl enterq enterq rex.R rex.WRX pushq push int (bad) mov mov (bad) out sub je andl mov test pop xchg cld xrelease (bad) or out iret je mov out sahf add int3 retq lret cmp mov pushfq push mov push adc bswap nop (bad) rex.R in pop pushfq (bad) in dec (bad) sti add cs mov cld ss or push leaveq or mov push sti imull stos adc rex.WR rex.RB mov (bad) leaveq add sahf loopne mov cmp sbb cmp (bad) in mov sub (bad) (bad) xchg out cmp fstpt fwait rex.RX cmpsl repz repnz popfq or and nop jmp mov loopne xchg out cli rex.RXB pop in imul mov movsl (bad) xchg mov imul mov xchg test (bad) addr32 (bad) sbb jae xor add enterq (bad) iret cmpsb fnstsw (bad) scas in retq (bad) callq or xor fs or loope (bad) jno adc movsl and (bad) jne retq imul sarb addr32 rex.WRB int sarl (bad) cmc cmpsb sub lret (bad) fsts (bad) pushfq (bad) int push movabs (bad) movabs test xorb cmc rex.WR rex.WB rex.WX jmpq fisubr rex.R rex.W push (bad) jnp std sub popfq (bad) loope out and icebp loop mov loope retq (bad) xor mov insb mov (bad) (bad) rex.RB cs adc adc push rex.RB fs loop xor mov rex.B rex.XB jno fld push lea jno add out imul fs in add (bad) cs push jmpq add lea std in (bad) fsts fmulp test xor and (bad) cmp repz (bad) mov fs xchg cmc sti (bad) cltd icebp xorb add stos xlat fldenv jns cmp (bad) adc sub fldl insl fs rex.XB leaveq mov xchg or sti out mov leaveq movslq mov in ja rex.WRX pop lret fisub mov push mov rex.WB add cs int (bad) add add sti shrl rex.WB and (bad) (bad) fstpl cs rex.WRB hlt hlt sub scas sbb pop lea (bad) loope or fnstenv sub sbb movabs sbb int3 gs test (bad) jp or jbe out mov movabs mov out mov pop loope lea out loopne sti mov cmp (bad) fsubrp xchg out fist xchg xchg enterq inc push add callq adc jmpq (bad) mov test rex.R rex.XB jge jns mov push test push mov movabs rex.WR lock lcall imul rex.R xor movabs (bad) loopne cltd xchg adc movsl cmp xchg or jmpq rex.WR addl movabs pop xor mov leaveq cmc retq out (bad) (bad) jge mov xchg out cmpsb xchg rex.RB sahf or lret pop cld cwtl mov xchg rex.WRB (bad) loope xchg jmpq fwait mov mov add movsl int pushq adc jrcxz lock push add out loope jne cmpsb mov movsl (bad) retq leaveq in (bad) sub or mov xchg cmp jbe jmpq movslq sub fcoml jb (bad) test icebp jnp gs int3 jle shr psubq movabs adc cld sub movabs repz in sub mov (bad) in jmpq jmpq out or out (bad) rex.WB fs adc movslq rex.XB sub fldenv pop lods xor jrcxz pop mov in rex.WR rex.RB (bad) mov jrcxz sbb add mov sub sbb pop rex.WXB stc sub add jno icebp movabs div xor cmc icebp test jrcxz loope cld and (bad) pop rex.XB sbb mov xlat (bad) pop mov out es (bad) (bad) mov ds jne (bad) es mov iret cmp mov push push notl push cld out xor push xchg mov rex.X jbe (bad) lock pop xchg or jmp push xchg lods xchg sti movabs fdivrl movabs int insb (bad) jae (bad) jmp push xor push xor push add movabs (bad) (bad) cmp mov rex.XB rex.RX repz scas pop xchg mov mov rex.WR mov rex.WRXB rex.XB or pushfq (bad) fldlg2 push leaveq sbb js (bad) xchg add sub xor jmp sbb xor (bad) ja iret xor xchg mov clc sbb rex.WR xor (bad) outsl jrcxz add pop lret rex.WRX cld (bad) rex.B or fistl and popq rex.RX add lret jne jnp test jbe and pop sub lea lret retq sbb jbe out fadd cmp rex.WRX xor add sub rex.WRX imul repnz in hlt retq jg sub mov (bad) or add js lods fiadd mov mov sub in imul out loop rex.RB sub jmp or rex lret out fisttpl callq mov fnop (bad) sbb cmp xor (bad) fmul lret pop xchg repnz (bad) in retq (bad) xchg rex.WXB jp in mov lea push sahf in push imull sbb flds (bad) and fstps movsl pushq cmp or jmp int jae movl out sti enterq add add sub add out xchg and (bad) sbb mov shlb repz xor jne shlb test (bad) mov rex.WB jp cmpsb mov andl and pushfq mov mov out addr32 sub pushq icebp (bad) jge in callq xor cli outsb pop and (bad) (bad) (bad) (bad) xchg sti mov out (bad) callq insl xchg adc jnp retq pushq stos mov test icebp rex.W xchg fisttp add cs pop rex.WB addr32 int jns (bad) sub rex.RX lret scas fsts add xor xor pushfq outsb mov push jmp jns mov out iret fs xchg and cmp xchg pushfq rolb (bad) icebp int3 jnp jrcxz loope incl vpmulhuw add (bad) add fstpl xor adc cmp es (bad) mov scas pop test loop iret rclb xlat nop sahf add loope (bad) jmpq shll adc int rex.WX jp xor mov (bad) cmc push out movslq (bad) (bad) sub add add (bad) roll lods cmp out (bad) (bad) test (bad) add pop (bad) int mov cmc lea cwtl callq (bad) or or addl icebp xchg pop pushfq lret (bad) rorb push xor rex.WB sbb xor sbb push adc (bad) and movsb in test cltd xor (bad) jns rex.WB push mov sbb adc lods mov sub pop mov in cmp int3 push push rex.RB int3 addr32 test (bad) (bad) test sbb (bad) lods adc rex imul sahf (bad) push cmovbe repnz cmp (bad) push (bad) sub sbb (bad) (bad) cmp or cmp rex.WXB jnp rex.WRXB rex.RB jmpq idivl sbb push fwait mov jb adc sub test imul (bad) pop (bad) cs adc (bad) cwtl test jno xchg or rex.X lock or retq and push (bad) test add xlat repz mov pushfq test sahf (bad) push movslq mov add fdiv callq xchg in test (bad) out or lock adc loop mov jrcxz rex.WXB mov cs test lret xchg add mov test stc (bad) movabs (bad) je (bad) xor roll xchg xchg xlat fidivrl and (bad) loop loope clc mov add mov (bad) cwtl lock rex.WR cli pop push in outsl cwtl (bad) sbb (bad) std jp fmull add cltd loop sbb add out (bad) or stc mov callq subb ss sub and pop pop int3 add movabs push pushfq sbb lahf (bad) rex.RB jnp es repz or pop loop jbe mov rex.RB mov gs (bad) repz stc ja int fdivp repnz cltd adc mov pop (bad) mov mov mov add cmp pop pop clc mov test sbb shrb fcomip (bad) xor (bad) xchg or lock jmpq and fist loope (bad) je cli subl fisttpl sti loope fidivr ds repnz rex.WXB pushfq push cwtl out cmp lea rex.RX xchg cwtl jo movabs out retq rex.X rex.XB int3 shrd pop or mov insb cmp xchg mov sahf jo jmpq int leaveq push int3 sub adc push mov and movsb stc (bad) mov scas rex.R int3 xchg (bad) (bad) mov mov jae leaveq mov test pop rex.WXB (bad) rex.X icebp fiaddl xor test mov adc sahf mov push push rex.R xlat mov push movabs mov adc (bad) lret sbb repz lea rex.RB sahf retq xchg cmpsb sahf (bad) mov sbb (bad) lret rex.WRX cltd vsubss or (bad) (bad) hlt sub pushq fcmovu mov xor add stc iret xchg mov loopne cmp mov cmc cmp icebp test je sbb in rcll jne pushfq (bad) movsl mov pop loope out iret ja enterq sub movsl mov rex.RXB sub jl or out rex.WRXB icebp ss jle stos xor sbb pop pop push movslq cwtl sbb sub out movsl rex.WX push rex.W (bad) push mov xchg sub in test adc mov and adc (bad) js addps pop movabs lods cs int fisub rex.WXB cs in mov mov mov pushq add cmpsb (bad) sub jrcxz test rex.WB rex.R xchg int cld (bad) int3 push repz adcl mov push loopne jmp rex.WRX fistl (bad) rex.RB sub and (bad) lahf pushq push push cmp xchg pop xorl (bad) lret and movsl mov movabs cmc pop movsl and sub rex.WR repz in (bad) icebp (bad) (bad) popq nop sarl rclb add (bad) rex.WRX pop jl jne add sarl push pop pop lret (bad) rex.RX push rcrl sbb pop (bad) pop addl adc sub lea rex.WXB or xchg pop (bad) mov and pop idivl pushfq jg sbbl add push (bad) rex.WRX test and jno loope (bad) lret xchg (bad) iret mov cmp in rex.WRX stos cld mov rex.WRX out push jrcxz int3 (bad) cmpsl mov (bad) enterq lea cmc in pop shlb repz or cmp loope cmc rex.WX es test ss and (bad) cmp iret fs (bad) movabs mov nop and (bad) jb retq shll rex.X or jrcxz sbb xchg pop cltd fdivr hlt cli pop sbb in cmp xchg iret mov and std sub rex.WRXB lock (bad) fidivrl addl in mov pushfq gs cld or cmp fstl mov stos cwtl xor mov out (bad) ss xor (bad) movl popfq or pop mov lret popfq (bad) repz xor out push sub movabs adcl mov and xor xchg mov jo add rex.WR scas and mov popfq cwtl xchg rex.X (bad) (bad) repz shll and lret jbe jae rex.WX adc mov ds int mov xorl push jmp jae (bad) jp xchg (bad) jns (bad) jmp rex.WB mov sbb jno add lret jbe stc adc xor movabs and addl xchg callq rex.WB mov add jrcxz in rex.R cltd mov jb fsubrs mov rex.WB in mov push sbb push mov (bad) stc xor mov mov test insl clc nop retq mov push lret sbb rclb xchg mov sti retq ss sahf test sbbl add adc pop xor je out lock or test add callq lret sub stos (bad) movsl (bad) adc mov sti lods (bad) ss cmpsl insb xchg jle sbb sti add add cmp and rex.WRB cmpsl (bad) add rcrl push testb rex.WRB and cli fsubrl sub in enterq cs cmpsl mov adc lods fidivl rcrb add xchg cmpl pop int sub (bad) ja test lahf and rex.WRX (bad) int mov data16 pop xchg sub cmp cmp sbb jo jns in lahf callq imul and push rcl push (bad) movl mov imul (bad) (bad) mov rex.WR xchg test test (bad) add mov mov sub popq (bad) add (bad) (bad) lea cs pop ror add pushfq mov (bad) jge stc and hlt fisttpll mov out je insl test shlb pushq (bad) (bad) scas test cwtl cmp or xchg mov orb rex.R or (bad) leaveq adc or (bad) mov enterq dec fs js int3 std out hlt clc rex.WB test xchg add int mov mov rex.B inc pop jrcxz jno iret xchg repz mov fwait and xor and loope xchg rex.WXB outsl in jmp rex.WB (bad) sub pop rorl rex.R sub fisttpl insb or xor mov fwait push sbb icebp rex.RB clc (bad) lea cmc lock cmpsl ror cli clc pop testl mov leaveq pop mov fwait lods cmpsb (bad) rex.W lea in cltd gs or mov clc cmc rex.WR je jno rex.W rex.WRXB je orl xlat pop addl (bad) mov mov pop add vpsrld movabs or (bad) (bad) cmc cmpsb mov xchg ds fs out lret push sbb and xchg or jg popfq (bad) repz xor adc rex in retq mov outsb xor insl jle rex.WRB test rex.WRX retq (bad) jns clc retq cmpsb jns sahf or repnz sbb mov rex.WB nop frstor out test mov callq rex.WXB loope mov rex.XB push jo lea lea ja rex.RXB adc sub cmpsl fs xchg subb pushq and retq je sahf xchg enterq hlt xor mov fdiv xor mov rex.XB fisubrl xchg rex.B (bad) cmp testb je (bad) mov add cli adc test mov pop movsb rex.RB (bad) imul pushq push (bad) mov pushfq (bad) mov (bad) rex.WRB rex.RX repz retq (bad) xchg push (bad) jo shl add (bad) rex.R mul addl ds push adc or fbstp jno push nop int3 mov jns test (bad) xor (bad) rorl sahf (bad) rex.X or test lock pop int3 push sti in out or and (bad) rex.WR jg (bad) jnp pop (bad) test stc roll fisttpl (bad) sahf fsubrp jae js hlt (bad) retq jge cmp int (bad) ss pushq add fstp repnz movabs fistpll and xchg xor pop popfq mov cs jnp (bad) add sbbl data16 xor pop (bad) lea xor jno cld rex.WR jo in add xor (bad) cwtl clc adc (bad) or sub xchg adc (bad) rex.WR neg (bad) sbb repz jns rorb lea jbe add pop fwait adcl push jrcxz rex.WX pop out rex.WR rex.RB jne pushfq gs cs xor hlt nop add (bad) rex.RX test movslq repz mov pop (bad) mov (bad) add mov loope jno rex.RXB data16 retq mov retq out rex.WX mov stos jmp rex.WRX movabs (bad) (bad) rex.WRB jrcxz cltd jns popfq (bad) (bad) mov add mov pushfq (bad) cmc rex.WRB ja ds rex.WR or movabs xchg (bad) jno test movabs test cmp (bad) in jg sbb jae sahf div icebp rex.WRB rex.RXB fwait add callq (bad) fbld or clc test sti mov movsl jmpq jg lret pushq or and sub movabs jmpq (bad) jge sub push adc callq push lods mov sub jg callq (bad) pop retq xchg rex.RX mov (bad) cmp xchg repz sub int3 int3 sbb mov cmpsb xor callq test rex.WB repnz sbb add pop movabs sahf roll xor and scas sbb and movslq cs or clc sahf push ss (bad) hlt div icebp jmpq (bad) rex.WX (bad) rex.X in and lret cmc mov jno rex.WR rex.RXB (bad) cs outsl in loop jns mov (bad) data16 lret adc or xchg js movslq mov lea xchg pop imul shl rex cmp pop xlat adc (bad) (bad) xchg fsubp (bad) lods and repnz (bad) rex fistp fwait leaveq movabs sbb out xchg clc jge jg (bad) iret (bad) movslq sbb xchg rex.B (bad) sahf or stos pushfq rex.RB neg lock fdivrl xchg pop icebp fxch jg (bad) out imul packssdw out out rex.WXB (bad) cli sahf imul add sti shr or sub rex.WXB data16 (bad) mov cld lods adc stos xchg hlt mov pop (bad) sahf xchg iret (bad) mov xor xchg add cld (bad) cmc or gs xchg cmpsb lahf data16 rorl fxch pop cmpsb addr32 mov rex.WX test rcrl sub sahf retq icebp movabs (bad) iret xchg mov (bad) xor jl or loope and and xchg outsb out and (bad) imull fadd (bad) lret in push and movsb int3 pop movabs cmc rex.WB lret and int3 je xchg (bad) int3 test test lret lret cli cs (bad) add int3 push scas leaveq rex.RXB int3 or enterq sbb pop mov cli jmpq stos gs lock je mov mov je rex.R (bad) sub cld test (bad) test repz add loope movabs sbb pop (bad) and (bad) sub (bad) rcr (bad) sub hlt mov (bad) jge mov (bad) and push cmp mov clc mov roll (bad) retq pop rolb rex.WRX mov (bad) add mov mov int3 rex.RX and sub int3 test (bad) out jmpq lods movslq cld sub or xor cmpsl out test rex.WR (bad) rex.R rex.XB adc pop and in xchg hlt cmp pop sbb mov fstl pop (bad) (bad) jnp std pop xchg mov jae jo stc cld sub rex.R in pop mov rex.WRX rex.WXB sub xchg movabs clc addr32 movslq mov or mov popfq or (bad) xchg (bad) sub fisubl imul sub ja ficom adc push or cmp mov sbb cmp orl jno rex.WB rex.XB cmpl rex.WXB (bad) jns rex.WRX rex.X xor add adc js adc fsubrl adc nop (bad) mov cli pushfq fs pop mov pop xchg retq retq pop enterq add (bad) movsb lret movabs hlt lret (bad) fdivrp rex.RX rex.WRX rex.X or add sbb cmp (bad) cmp pop leaveq cs mov jle mov (bad) fisubl sub or lahf add rex.WB rex.WB jp jbe jmp (bad) retq iret sub icebp outsb out rex.WB (bad) mov repnz js int loope iret sub (bad) or pop test mov stc insb mov rclb add add add xchg sub neg and rex.WXB rex.RX push scas xor hlt rex.R insb lock leaveq pop inc jbe std rex.XB cmc gs cs pop fprem clc (bad) jnp cmc jrcxz fs (bad) repnz mov (bad) js sub test and rex.WRX cld push (bad) icebp pushfq movabs sbb jnp (bad) xchg cmp (bad) sbb retq (bad) rolb test adc xchg (bad) and mov int3 std (bad) rex.W cmp push add push xchg cmpsb ss movsl test add sub js movslq ss rex.WX lret push in sub retq out out jp sbb sub xchg mov jns sahf fbstp in clc rex.WRX xor movslq (bad) mov movabs repz ja xchg add mov pushq xchg mov cmpsl mov out jge jno (bad) jrcxz mov add sarb xchg mov retq jrcxz nop jnp jl es (bad) sbb repz ja outsb (bad) push xlat rex.RB (bad) xchg movabs sub jne rex.WB rex.WRXB mov mov jg adc xchg (bad) insb xlat mov add insb jmpq sbb rex.WXB negl sbb xchg sub cwtl pop in (bad) js (bad) sbb mov cltd mov nop mov jnp out mov add loopne addr32 leaveq (bad) sbb sahf xchg xchg sti rorl imull movslq or sahf (bad) gs std rex.WXB xor jns or (bad) (bad) and (bad) cmp out add je orl scas and leaveq rcrb rex.RB push mov iret rex.WB add mul mov or leaveq (bad) xor xchg or cmp and repnz sbb (bad) sbb mov pop incb cmp rex.B mov iret jg loopne xor sahf cmp bnd rex.WB push mov js retq add in xchg out icebp xchg rex.WRX sub repnz loop cmc add fs xchg repnz rex.RX nop jrcxz and mov popfq movsl in clc icebp and movabs jmp mov xor sbb jrcxz add jbe or je loop push pop add or pop (bad) rex.WXB mov add out mov and mov (bad) lods xor callq mov xchg fucom bndldx xchg (bad) (bad) rex.WX data16 outsl sahf es fidivl xchg fsubl pop xchg (bad) sub or insl lock fidiv shrl (bad) xchg lret sub stc rol cmc decb lods (bad) (bad) scas adc leaveq and xchg popfq fild sub cmpsl mov lret mov int3 (bad) mov movabs mov (bad) jno mov sub fcmovne (bad) shlb rex.WRXB mov (bad) fldl rex.RXB (bad) sub push enterq cmpsb fistpll retq cmp cmp (bad) fstpt cmc je sahf xchg xchg rex.WB rex.R cltd mov fild movabs and push int mov jnp or sahf insl sbb rex.WRB and out sub push addl rex.WXB sub sbb mov (bad) mov movabs adc mov sbb and loope cmpsb lods repz fidivrl rex.XB popfq decb and sbb mov sub int outsl callq callq retq int cmpsl pop rorl out je push rex.WRXB out js insl mov movabs adc (bad) out cmc lods pop xor xlat xchg in lea cwtl push fsts xchg xchg imul stc cmp cltd jno mov nop jbe xor lea idivl sub cmpb and insl (bad) pop hlt flds mov adc adc pop mov mov vpsubsb sbb mov xchg testl pushfq xchg int rex.RXB je push loope loop (bad) ss mov pushq push (bad) sbb insb cltd imul retq (bad) scas es rex.W ds jmpq xchg xchg js xchg jp je orl rcr lret mov (bad) jg mov rex.WRX (bad) and add in xor repnz push mov repz jns (bad) adc jae fbld push xor in mov and (bad) sbb jb pushfq push enterq rex.RXB xchg and (bad) imul divl rex.WRX sbb ja and xorb sub sahf mov lcall callq ja add xlat jbe fstpl (bad) stos lahf xchg (bad) cmp scas sub mov scas jno (bad) sahf (bad) lock jne ss sub cmpsb lods mov cmp repz or cmpsl out mov hlt xor mov lock js rex.RB rex.RX in sahf test callq mov mov (bad) dec xchg cmpsl cqto (bad) sub repz mov xor add xchg xchg hlt ja popfq xchg (bad) cmpsl (bad) mov adc cmp or mov sub cltd (bad) cmpsl loopne lea cmp std cmp jl mul mov (bad) or in rex.WR retq mov rex.X movabs (bad) sbb mov sub std sbb and push adc xchg callq subb mov mov retq and leaveq rex.R cs negb lret sub pop xchg out jno stc or or adc test icebp js (bad) jrcxz mov ror lods rex.X hlt add mov and rex.WR (bad) xor cmp movabs loop mov cwtl and or push leaveq int3 push xor movsl outsl rex.WRX test add xchg push movabs (bad) push rolb (bad) pop int3 or in retq fstps (bad) or loope mov decb retq sub jnp movabs push push cmp rex.W rex.XB cmp rex.WX sub xchg cmp and ja jne fcmovnbe jno xchg out jno mov or cmc jne mov je adc mov rex.W mov sub (bad) rex.RB jmpq test jno rex.W pop mov test xchg cmc rex.B insl rex.RB adc mov xchg mov xlat (bad) add push cltd (bad) (bad) (bad) mov xchg and (bad) in outsl sbb rex.WR pop fsubp stc mov rolq repz sbb and in es (bad) add mov or fwait sar lret rex.X (bad) xor (bad) mov fsts rex.WX rex.X fstl cmpsl xorb adc stos cmovl add rex.RXB rclb rex.RB mov xchg mov add loopne (bad) fcmovbe cmp and mov xchg jge sub retq jp sbb fsubs rex mov enterq jl cmpsl (bad) loope in rex.WRXB pop xchg sbb hlt and je repz (bad) and mov rex.WXB xor add pushq push (bad) shr (bad) sbb (bad) scas out adc (bad) push movabs callq xchg ror enterq clc push cli sub mov test sti stos sbb js test and sahf mov loopne gs mov xchg fisttp shlb in (bad) je pop (bad) nop xchg icebp enterq movsl outsb fwait hlt ss cmc rex.R gs lret pushq sbb sbbl (bad) sbb sub jmp andl (bad) cmp movabs push retq mov or mov movabs adc popfq and movsl (bad) (bad) mov mov fbld jno andl rcrl (bad) rol out pop rex.WRX rex.WRXB mov enterq jmp callq (bad) xor jle enterq mov xchg mov incl xchg cltd adc rex.WR rex.B lret mov cmp cld jb retq pop ds ss retq xchg lret repnz jle (bad) jge callq (bad) test sub (bad) test adc xchg sub sbb sti callq (bad) and outsl rsm (bad) cmp or xlat int3 loopne mov (bad) callq addr32 shrb in (bad) movabs pop vpunpcklwd std adcl xlat cmp rex.R cmp xchg ds rex.XB rex.WRX cmp sarl rex.RX sarl and lock adcl rolb iret (bad) outsb sbb lahf (bad) int push mull repz mov and (bad) int (bad) js (bad) int xchg adc andl out (bad) insl adc (bad) rex.R mov stos popfq sbb xchg fwait jmpq retq lock (bad) (bad) xchg rex.B fwait sti iret mov (bad) or pop (bad) jno mov jbe iret sbb imul xlat fadds sub mov rex.RXB sbb (bad) test cmpsb (bad) hlt sub (bad) adcb fidivrl leaveq jrcxz vprotd test mov xor xchg rex.W or (bad) mov sbb test (bad) xor cmp gs xchg and cmp xlat pop scas xchg out (bad) ss and xchg mov cmp fwait fwait or andl push movabs (bad) rex.WRB test jmp js jl jmpq cmp cmp pop pop loop test (bad) xchg or (bad) retq push mov testl sbb adc (bad) (bad) xchg movabs sbb (bad) test xor (bad) fnstcw cmp lods sbb mov xor cmc cmp adc xorl stc push (bad) lahf mov jmpq loop sbb xchg or neg cmp inc imul mov ss sub mov push sub pop ja sbb rex.RB rorl mov mov sti lea (bad) ja out rex.WX sahf (bad) cmc mov addl (bad) in imul mov test callq sbb add negl scas icebp ficomp icebp xor rorb xchg lahf iret (bad) enterq test mov xchg pop rex.R sahf and pop lret insb imul rex.X (bad) insb mov clc push mov popfq mov pop rex.RXB outsl movabs adc cli or cmp pop enterq clc xacquire add jle rex.WRX (bad) add rex leaveq je jrcxz test jmpq (bad) xchg rclq rex.WRXB movabs sahf fist jae out movslq (bad) lock imul jrcxz je mov hlt jno xchg (bad) xchg xchg cltd test pop rex.B rcr adc sbbl add sarb in (bad) cmp push rex.WR out ds xchg mov rex.RB fimull xchg lahf adc lods mov adc (bad) (bad) xchg (bad) rex.WRB insb mov hlt sbb popfq (bad) (bad) sub mov rex.B cmp xchg adc sahf retq iret sub sub cmpsl movsl clc ficoml subl sub cmp (bad) (bad) or (bad) add popfq jmp in add cmc leaveq fwait xor rex.RB (bad) movabs addps (bad) jmp pop movabs mov popfq (bad) adcl loope xchg rex.WB hlt or hlt fdivrl insb cmpb mov jo retq rex.WRB fiadd sar add retq outsl in out (bad) mov test mov xchg (bad) or es fmul adc mov rex.WRXB push stc rex.WXB enterq loopne (bad) cs jmpq cmpl add rex.B adc (bad) mov (bad) movsl pushq cmpsl and cmp andl rex.WR pop clc mov hlt xchg je (bad) (bad) repz add (bad) (bad) shrb rex.WRX adc fist mov lea cmpsl es (bad) jp adc (bad) sub rcll shrb cmp mov out pop std mov imul rex.WX leaveq xor movslq (bad) or or fdiv xchg sub jne andb sbb loop (bad) or nop mov in pop vpsrlw adc mov (bad) leaveq lea fmuls repnz test cs and roll fs lahf movabs div mov (bad) cmp mov fisttpl pop mov andl cmp mov jge vmaxsd (bad) sub (bad) (bad) jb jb xlat xor jne pop sti mov or xchg or sbb test test or and mov pop sub mov mov xchg (bad) jne rex.R ds pop out jno scas xchg xchg jl stos jno pop pop sahf in pop test gs repz rorb and rex.WRB xor repz sub (bad) rex.WX xor mov rex.WB rex.WB rex.WRB jnp cwtl and add push rex.WR (bad) divb or movslq add sub (bad) (bad) xor loopne (bad) (bad) sub cmc jl scas insb and (bad) or stc divl and xchg jmpq loop push mov addr32 cld (bad) rex.RB jb test in adc fnstsw cmp (bad) rex.WR rex.X rex.WRB test pop (bad) stc (bad) cmc add and pop in push and movslq pop int3 add jno (bad) adc (bad) rex fnstcw movslq xchg xor mov cwtl retq retq negb (bad) sbb (bad) fsubr cmp xor (bad) (bad) (bad) int mov mov sbb rolb jle sub popfq repz icebp jnp pop in sub push lret mov out xorb (bad) pop vcvtpd2dq cmp sub cmp enterq jne push adcb xchg or mov sub fldt fadd sbb (bad) fldl rex.WRX insb fwait rex.WXB lods sbb lret cltd pop add add enterq mov lods (bad) repnz pop repz js mov mov flds (bad) xor push (bad) iret add mov out ds (bad) push jle sub add xchg mov pop (bad) (bad) add (bad) or mov sbbl mov (bad) rex.WR push popfq lret rcll fstpt je in scas add or cltd mov rex.WXB icebp rex.W add (bad) lea xor popq flds enterq jmpq test cmp test (bad) pop sub stc retq leaveq movabs (bad) rex.WB xchg loope jrcxz rex.XB (bad) repz leaveq in xor (bad) (bad) rolb add pushfq sbb repz loopne (bad) add cmc and jp sbb test rex.RXB adc and rex.WR add pop fwait and mov (bad) mov and callq xlat xchg jp addr32 mov outsb jg pushq rex.WRX retq callq adc push enterq (bad) imul (bad) xlat push add (bad) sub push test jl pop int3 jbe (bad) rorb rex.WRX sub (bad) pushfq pop int (bad) push (bad) sbb add pop leaveq adc jg (bad) push xchg (bad) cmpsl jle mov sub test add or movabs xchg xchg cmc and sub rex.WR xchg adc (bad) sahf pop int jae mov (bad) xchg je rex.RX cmpsb xor or stc (bad) rex.WR stc cmc add xor cs sub mov (bad) add (bad) push fldcw sub adc in sbb outsb repnz (bad) scas in addr32 (bad) repz lret hlt rex.WX rex.XB xchg adc stc loope pushfq enterq outsb jbe js jns icebp int jmpq lea sbb int mov clc in and pushfq mov insb loope and mov mov xchg (bad) lahf retq cli mov mov cmc fild xor mov cmc rex.R retq pushfq orl addr32 rex.WR mov callq rex.B rex.X jbe lock (bad) sbbl rex.WRB notl (bad) jrcxz ja mov sub pop add push mov rex.RB sub out mov movsb sub (bad) (bad) (bad) cmp mov int3 and (bad) lea xchg (bad) enterq add sbbl in scas xor fistpl (bad) iret rex.WRB enterq mov jg rclb enterq mov adc cltd pushfq (bad) repz jmpq mov sbb rex.WB testl pop (bad) pop and cltd mov rex.WB jge subb sbb jno adc sbbb cmpsl ficompl ljmp retq (bad) pop fmuls js clc and or or cmpl (bad) xor cltd insb rex.W clc ja (bad) decb (bad) fmuls pushq sbb movsb mov ds (bad) jmp (bad) jbe ja pop (bad) cmp div cltd addl or mov lret (bad) xchg (bad) rex.R cs loope xchg or (bad) rex.RXB mov jp (bad) push jmpq in movabs imul pop (bad) (bad) leaveq callq (bad) pushfq out pop icebp mov mov hlt pop mov sbb (bad) cmpsl add xchg int3 stc add pop or loopne cmp lret fsub out rex.RB sbb repz fcomps js (bad) (bad) xor cmp int3 sub hlt cmc stos mov test (bad) loope gs xor rex.X jae cmp (bad) xlat rex.WXB rex.X stos ss mov xor in cmc xchg insb jmpq (bad) push pop sub out jno lret xor shl sahf add sbb push lods (bad) in cmpsb es rex.WB mov and cmc loop cmp xchg mov push test negb int xchg test pop repz sub push out pop retq (bad) sbb mov (bad) icebp sub add sarb (bad) clc jp test and mov xchg mov (bad) (bad) pop jo mov (bad) mov cmp ja insb movabs lret push nop add in hlt xchg add (bad) hlt lods cmc ja (bad) shrb movslq (bad) repz xchg cs rex.RX loope mov (bad) bnd (bad) jo rex.WXB adc stos add jno (bad) fnsave xlat cmpsl (bad) or sbb xchg imul in mov mov repz jrcxz out mov sbbl mov (bad) (bad) xor cs rclb jbe jne rex.WR movabs mov bswap cmc sub cltd jmpq xor push and cltd retq gs iret cmp rex.WR adc cmp or movabs jrcxz mov mov pop mull loopel mov (bad) loop mov (bad) xchg cmovno fucomp sub sbb rex.WR fstpl rex.WX xor gs pushq sub and lret cmp and jae rolb popfq (bad) cmp sub imul sbb cwtl scas movabs rex.WR mov (bad) enterq cmp (bad) cmp (bad) cmc or cs or mov mov jns lret cltd rex.X callq clc (bad) or lods xchg ja cmp or int adc int3 cltd push (bad) leaveq fldcw jp rex.WXB rex.WXB lea or clc in mov jmp test jno jrcxz xchg (bad) xor xor xor sbb loope lea icebp paddusb js add outsb cmp test loope add pop xchg (bad) nop rex.XB mov int3 in xor mov sub int3 test movslq (bad) mov imul xchg pop enterq xchg adc sub cmpsb fcmove leaveq stc and cmpb cmp leaveq rex.W rex.WB test adc jge shrl (bad) (bad) (bad) out cwtl retq addl push callq mov mov pushq xchg pop in int3 nop cmp xchg push and xchg out add rex.RX xchg in xor cmpsb cmp sbb mov jns shlb int3 xor jbe retq cmp (bad) mov popfq mov jrcxz gs pop rolb movabs sub sub add data16 cltd cmp mov sarl jmpq rex.WX es pop rex.WB test clc mov (bad) rex.WRX rex.B pop leaveq sub mov (bad) movl (bad) adc (bad) rcl leaveq in rex.XB adc orl roll (bad) outsb (bad) cs sub rex.X subl pop mov xor sbb (bad) pushq cld idivl sbbl (bad) movsl out loopne jno lods loope vmulps pop mov outsl rex.WB mov in out movabs repnz (bad) rcll xlat test add rex.WXB pop repz leaveq rex (bad) xor mov in (bad) mov (bad) (bad) sbb pop js jno add mov rex.X sbb mov stc lahf and lret jl movabs cmpsb rex.WR movsl mov gs rex.R loope sub addr32 stos test mov mov adc xchg xchg stos in (bad) enterq movsl sbb xor (bad) sbb out stos icebp and jrcxz add (bad) repnz sbb mov pop rex.RX (bad) rex.RB jns xchg loope mov shrl jmp xchg lahf fstps adc jmpq nop icebp mov callq lret cmp repnz add mov (bad) repnz (bad) lret mov sub cs movsb int (bad) je xor test stos or (bad) jrcxz xchg and lret (bad) or and (bad) or rex.B pop fwait mov rex.RX xchg in mov test adc xchg sub enterq movsb fstps ja dec (bad) in movb rorl repnz (bad) sub movabs rex.WXB out int3 adc (bad) dec int3 out pop jrcxz (bad) cs xlat shrb pop xor rex.WXB nop retq maxps add rex.WXB rex.WRB movsb repnz pop vmovaps (bad) pushq mov and in (bad) (bad) ficoml nop xchg push in out movsl jno push scas push movabs adc xchg push mov retq (bad) jno or mov and jnp pushq (bad) cmc in mov ror jl repz in mov mov jrcxz rorb jno in addr32 jae mov jrcxz rex.WXB mov xchg movabs stc int3 jbe jno repz (bad) sub xchg sbb mov rex.WR movabs pushfq leaveq out fisttp mov (bad) (bad) fidivrl fwait movsb nop (bad) ds sub jo push out or retq enterq jne mov mov out cmp test (bad) sub xlat pop notb sbb jrcxz repnz and add (bad) xor loopne rex.WRX jo add mov retq ss (bad) je sub cs outsl xchg sub push rex.WX scas xor mov sub in popfq rex.RX add idiv clc lahf out mov pop in enterq xor xchg fcompl sahf roll rorl add add rex.WXB cli mov movabs or lret (bad) cs adc fwait outsl add loopne sub push out sbb fbld pop (bad) (bad) or sbb hlt rex.WRX in fistp add jp repz movabs hlt xor pop add xchg out movabs iret out je xchg sub push in pushfq idiv icebp rex.WRB cmp xor or push div push mov xlat add (bad) cmp stc hlt mov (bad) imul (bad) lret mov leaveq icebp repz mov clc push sub or out out test (bad) (bad) push lret je (bad) movabs sahf movabs lret push out retq (bad) xor push test icebp hlt pop (bad) (bad) sbb rex.RB rex.R movabs xchg repnz sub (bad) pop add or int3 sub mov (bad) movabs or fdiv (bad) loope and sti (bad) ss lret sub in or nop xchg movslq (bad) rolb icebp mov test sub orl mov sbb (bad) add push jp repnz rex.RB popfq pushq jae out vpsubw sbb (bad) sub movabs imul adc movsl loope movabs mov (bad) sub (bad) lea jbe loopne jmpq pop mov std roll mov push mov popq movabs push hlt in clc sbb test fldz (bad) mov cltd icebp (bad) push mov mov push xchg retq std fldcw fs ds jne (bad) loopne xor rex.WRB test test jno push or mov sub jo cmp pushq mov (bad) cli mov movsl cs sub push cmp rorb (bad) test pop add insl pop pop sbb cmc (bad) in repnz mov (bad) or in cmp test lods int rex.X gs lea sbb or icebp fcmovu (bad) rex.RX rex.RX pop icebp repz cs jne (bad) xor (bad) xchg sarb pop (bad) mov jg jg hlt sbb pushq jbe sub (bad) test icebp ja xchg in rex.WRXB nop rex.B rex.X mov sbb sbb clc rex.XB sub xchg sub stos loope mov repz clc rex.WR push je jrcxz rex.WB in xor adc (bad) mov sbb sbb addl decl addb sub jle mov out rex.RX rex.RB cmp clc jmpq lods xchg lret cmp cli rex.WXB insb xor repnz rex.WRX out rex.X jrcxz fcoml mov (bad) adc (bad) and ficoml sub pop mov int3 cli (bad) push (bad) stc test add (bad) int3 jns mov popfq fistp xchg (bad) rorl xchg xor (bad) shll mov jne mov mov adc pushq (bad) test int3 and subl (bad) and jrcxz pop movabs push movabs sbb repnz (bad) leaveq jl sub rex.WX callq int mov repnz int3 (bad) int3 mov rolb icebp mul stc pop mov xor mov addl xchg jl adc (bad) repz xor movabs roll int (bad) fucomip sub adc test (bad) or fs jne cmp sub mov fs lods imull fs mov lahf push leaveq movslq je (bad) out andb add stos rcrl fs mov test lret cmc stos xchg cmp push test (bad) rorl pop xchg (bad) gs rex.B mov in (bad) mov xor mov sub and fmul cmp xor movslq rex.RB jnp fs rex.WR (bad) (bad) movslq in push vpmadcswd callq xor outsb rex.B mov test cli out (bad) out sbb xchg mov rex.WB ss (bad) nop add test jo sahf outsb sub cld out lahf shll sahf xor int mov loop rex.WB and sub nop/reserved testl cmpsb xchg (bad) lock repz (bad) (bad) (bad) pop repz jbe sub jno cli cmc pop fwait shr repnz lahf (bad) cmpsl rex.RX pop (bad) loope lret fdecstp (bad) xchg add jbe repz sahf xchg fistpl cs xchg scas loope sub add icebp cmp (bad) retq sub in xchg in cld xor or (bad) out leaveq mov callq or mov mov test movabs ja loope loope cmp xor or add notb add mov loope faddp xlat add fisttpll lret or cltd hlt xor pop and (bad) (bad) out lods hlt cli mov rex.R repnz rex.WB fwait test (bad) fcmovb iret add leaveq mov rex.WRX es cs stos rex.W (bad) mov xchg add mov (bad) cmp cmp xchg insb pop cmpsl jmpq mov mov add and faddp sub rex.WXB and or (bad) push sub jae add ds cs test hlt adc add cmc or cmpsl rex.RB push and fistpl or jmp movabs lods add int3 ja vpaddb movsb callq (bad) insl repz push iret int3 enterq xor xor pop fsubrl mov nop and rex.RX js (bad) fmuls icebp sbb testl rex.WRX mov int3 cs je ss and cmc test mov sahf xchg mov fs cs jl int int push (bad) sub outsb movabs (bad) (bad) or out pushq pushq adcl (bad) xchg pop out icebp js adc add xor mov int xlat stos (bad) pop (bad) cmp (bad) movabs movsb sub retq mov lods movslq test push sub pop rex.WB rex.W add pushfq movabs cld mov movabs imul or test push and pop mov cs (bad) rex.WRXB rex.WR int jne retq mov mov imul mov test (bad) xchg cs cs jle int mov in (bad) cmp outsb sub std (bad) icebp add xchg lahf jge icebp jb iret addl out or (bad) cltd nop rex.R cli (bad) (bad) cli rex.W rex.WRX out icebp (bad) rex.WB rex.WRB out add xchg in push mov leaveq js mov lods (bad) mov hlt (bad) imull lock rex scas fldcw (bad) sbb sahf test sub sarl (bad) add adc or (bad) (bad) jno rex.WR icebp (bad) cmp jge callq xorb outsb fsubs lahf (bad) enterq xlat (bad) test jns xchg fs repz add rex.R cmp scas movabs xor movslq icebp out push mov sbb (bad) push jp cmp and outsl xchg sbb sub rorb pop and or sbb (bad) rex.W (bad) mov movsl xchg in imul test leaveq jp jmp in pushfq enterq (bad) (bad) sub shrb pop outsb in shl test jrcxz (bad) (bad) mov (bad) sub clc sub clc or test xor mov mov (bad) fistp lods mov mov sub retq push and jne lret std shr (bad) sti div (bad) cli cmp jle (bad) lods stos leaveq rex.R loopne jbe and mov test pushq mov rex.X (bad) leaveq cs or js retq fnstcw stos (bad) and and (bad) cmp mov int3 movsl loop insl and cld sub rorb xchg (bad) mov (bad) ljmp sub adc (bad) rcrl pushfq pop cmc sub in retq rex.WRX fwait rex.WXB test and out int3 adc add subl and cmpl out push sub in xor callq rex.W cmpb mov lcall shll frstpm(287 and cltd mov lock mov enterq sub jb scas int cwtl sahf out fist (bad) pop sbb callq std mov fisubr cli in repnz jns (bad) push push lods rex.WXB fsubrs pop enterq rex.XB adc adc sti xor xchg movabs cmpsl repnz add andl in out push lea lods movsl rex.W fs movsb in mov callq roll addr32 addb xchg stos pop cmp xchg jnp rex.X mov imul (bad) jle add movsb (bad) hlt movabs rex.WX mov jrcxz retq or mov stc rex.WXB in xchg imul test out (bad) xor sub lea test imul and hlt gs (bad) jb movsb movslq in test pushfq pop xchg cmp rex.WR mov sub (bad) push loopne sbb xchg test pop sub movsb imul repz (bad) loopne vpunpckhbw icebp icebp fs xor mov pop outsb xchg (bad) cmp (bad) add mov rex.RXB rex.RX xchg pop adc xchg sub int3 (bad) mov lahf test gs cmpsl mov repnz nop mov mov (bad) retq pop (bad) sub pushfq add and or xchg sub sub rex.RB adc xchg or add sbbl cmc sub and cmp (bad) (bad) adc cs mov or callq jl xor repnz cs rex.WXB jbe shr jb mov cmc rcll jnp in rex.B lods or pop xchg rex.R jg xchg repz add pop add fstpl sub in (bad) pushfq in push mov in (bad) mov adc rorl rex.XB cs and (bad) jo scas mov push mov and sub and xchg cld mov movsb xchg jge rex.W (bad) mov callq movslq cld enterq push scas or and mov and repz negb scas sub movsl push sub std shrb adc xor cmp cltd mov and sahf push testb jbe (bad) shll pop orb enterq sbb xor push cmpl mov xchg mov movabs cmpsl and lret fistpl xchg pop xor (bad) mov xchg movsb sahf mov mov sub sbb shrl xor pop popq mov rex.RX and sub icebp or (bad) je or jne (bad) rex.WB push (bad) pop xchg and jbe jno (bad) pop (bad) sub sbb test and jae (bad) xor add rex.WX rex.WX xor ror push imul std rex.RXB cld jmpq pop decl xor icebp pop loop pop rex.XB clc (bad) mov mov out cmpsb out mov loopne (bad) nop rex.WRX or pop retq or xchg rex.WB clc cwtl sbbb mov xchg stos fstpl sahf or scas (bad) jne clc retq pop rex.RX sub cs (bad) ss pop pop mov rex.WRXB sbb cmp jl fldl div (bad) or xor lods repz adc push insl iret jle push cmc pop (bad) repnz leaveq xchg fs xchg (bad) sub insl ss (bad) jae paddq and movabs jmp xor xor xchg rex.WXB xor pop add lods xchg rex.WX (bad) xchg rex.WR lret retq mov jl out (bad) or scas out faddl rex.WR jmpq jnp jae xchg or retq std rex.WR add add cwtl rex.RB ds test fidivr cmp and int3 sbb std test imul mov movsb (bad) retq pop out or fcomi xchg adc sbb xlat out mov pop rex.XB jle,pt je or imul (bad) sbb ds push sarb xchg test icebp mov jae (bad) xchg add rex.XB rex.X pushq (bad) imul cli jmpq testl and xchg mov sti and mov gs jrcxz std rex.RB mov lea push repnz cmp retq rex.WRXB (bad) (bad) xchg or xchg stos gs or movl (bad) mov jl in shrb push add lea loope xchg jbe leaveq jmp loope lea fcom out in retq retq rex.WRXB iret int3 or jno mov jmpq mulb and icebp fldt (bad) lahf iret movabs (bad) loope (bad) sub or cmp (bad) stc mov rex.WRX cmpsb roll rex.XB out callq (bad) xchg xor adcl jrcxz and cld rex.WR leaveq icebp icebp movsb movabs ffreep loopne push stc movabs or retq pop xchg sub std xchg iret jne iret rex.WB xchg jo cmpsb mov cmp mov movslq movsl (bad) push test fcmovnb xlat mov or add (bad) rex.W test or mov cs rex.XB jp sbb mov out lret sub jl jns pop clc jns movabs (bad) add lret movabs mov mov lret retq sub pushq (bad) mov rex.WXB out rex.WB callq mov clc pop callq mov fdivs mov rex.WRX adc loope xlat adc xor fsubrl jp sub lods push pop int rex.RX icebp rex.B test hlt xchg cs add xor nop fnsave movabs rex.XB (bad) pop rep sahf jmp hlt mov adc (bad) sub xor or test out and movabs xchg std xor in (bad) cmp push or cltd test push pop (bad) shrl push xor add mov repnz (bad) repz cmp mov and pop (bad) lea in sub and xchg loope int cltd test test rex.WB sbb movabs (bad) fs pushq sahf jmp and mov iret (bad) out lea rex.XB nop scas add or cmc (bad) cs add rex.RX xchg mov lahf incl cld rcrl add out sub push jg imul and rex.WB (bad) pop mov std cli xor or loope xchg shll jne enterq loope mov mov xor rcrb (bad) push test jns cmp addl repz mov (bad) add leaveq icebp (bad) jbe fcoms rex.WR adc add sub or mov rex.WR out leaveq hlt jrcxz and movabs rex.W test repnz movsl pushq scas and (bad) jmp cltd fcmovne xrelease and movsl repz out jno jmp int3 cltd mov (bad) lret mov mov fisubrl rorb add out (bad) rex.WRX movsb sub jmp (bad) xchg cs mov out add retq sbb (bad) push repz xor mov sbb fsubr sub add sub mov add test in lret test or xor jae (bad) cli cmp repz add icebp cmc (bad) (bad) (bad) mov movsb mov in sub add mov lret push (bad) (bad) (bad) (bad) fld1 add mov rex.RXB movslq movsl cld fs adc in mov cltd gs pop icebp test rex.WR rex.RX js jns inc mov sub rex.WRB std repnz movsb (bad) stos pop xor mov sbb je jg pop imul adcl cmpsb lret push jae lret (bad) pop repz cli pop jno movabs mov xor (bad) pop cli or rol loope xor loope,pn rex.WXB (bad) repz (bad) test lret jnp rorl pop rex.WB icebp insb negb (bad) movsl jmpq (bad) xor mov mul mov callq rcl rex.WB repz cs cltd leaveq sub sahf (bad) rex.WB out insl xor lods cs int3 rex.XB or (bad) xchg (bad) rex.WR cs mov addl rex.WR in mov in pushq lea cmp pop (bad) lret int int3 nop xchg (bad) repz xchg fs cmc rolb test js icebp cmc int nop cmpsb cld (bad) rex.WRX icebp shl ja leaveq (bad) push in popfq mov lret rex.RXB push movb mov or (bad) rex.RX sub rex.RXB cltd push mov xor adc pushfq or sbb rex.X loop scas and sbb xchg roll retq (bad) callq rex.RXB rex.W rcrl mov int3 rex.RB pop mov push int3 rex.B xchg xchg xchg test (bad) (bad) xchg sub (bad) mov or out out (bad) test push jle mov (bad) (bad) pop out or fwait (bad) cmpsb xor adc mov rex.WB sahf (bad) pop in rcrb movabs sub xor adc movsl cli jmpq jp jns sbb lea (bad) (bad) loopne sub (bad) push callq pop notl retq sub lods lret in fbld loope mov sbb sti stos loope cmp fwait loope (bad) lock leaveq out (bad) jne fisttp in insb loope sbb retq idivb cmc add leaveq push lret lock jmpq repz cwtl sbb hlt lea hlt clc lock push out loope sub enterq cmc or repnz mov mov pop repz xor add movabs or rex.WR fwait xchg fnstcw leaveq push test rol test rex.W mov (bad) mov mov (bad) pop andl or xchg es cwtl mov rex.R add rex.WRX mov cltd jrcxz adc or cs jmpq adc insb (bad) loopne add out mov in jg (bad) mov rex.R cmp lock sti adc in (bad) ja out addr32 loopne orl (bad) rex.W mov lods add cltd int3 xchg icebp fs xlat push out (bad) retq icebp loope add loope xchg push cltd shrb rex.RXB fs repz pop (bad) rex.WB rex.R movabs rex.B int rorb icebp xchg rex.XB rolb (bad) popfq xchg pop clc iret mov (bad) xchg sub mov sub cmc xchg mov movsl movabs push retq (bad) hlt pop retq loop pop test retq leaveq mov rex.XB sub insb (bad) callq pop rex.WRX rex.RXB fs rex.B (bad) xor add mov out rex.WB outsb rex.RB rex.W fbstp xor jae mov mov cld jmp and xchg sub (bad) push int jge (bad) rex.WXB mov cmc js in (bad) sti movabs mov cld fs (bad) movsb push (bad) (bad) movsl rex.WRB rex.B sbb sub mov out xchg (bad) out hlt jrcxz lock adc lretq leaveq sub loopne mov fmul mov jne callq and mov jne mov rex.WXB enterq mov sub callq mov jns movslq fucom (bad) jg loopne lret jmpq sub pushq roll fs enterq xor fwait adc or jrcxz hlt notb jl push fsubr (bad) jne stos or (bad) jl jnp mov test lahf mov and (bad) jp jb pushq rex.WX fldl in (bad) push cwtd rex.W and insb rex.WRXB push flds sub jp,pn stos rex.W jae leaveq addr32 leaveq fs jrcxz mov push add mov (bad) sbb test mov (bad) add mov rex.WR rex.WRB rex.X (bad) icebp iret callq lret and rex.WR push jo rex.XB rex.X (bad) (bad) es jmpq jns sbb movabs mov fstpl mov scas sbb pop cltd (bad) hlt xchg pop xor cmp (bad) sub (bad) rcl out test cmp stc xchg sub movabs gs pop in test cmp cli loope xor jnp (bad) fs xor adc gs (bad) jo cmp xchg pop andl (bad) mov (bad) rcrl (bad) (bad) pop fstl movabs iret shll (bad) (bad) out add syscall repz or sub rex.RX pop pushfq jrcxz lret push hlt xchg jp cld xlat mov (bad) jno lret rex.WB js outsl (bad) xlat movslq (bad) and jbe sub xor rex.R repnz int3 rorl pop vpcmpeqw cmp out (bad) mov cmp imulb hlt sub in xchg push xor movslq push test sbb repz push pop stc (bad) movabs fld imull in pop mov rex.W sub cwtl cmp in rex (bad) or pop sub pop push xchg add push test (bad) imul popfq fnstsw and sub scas retq xor repnz sbb xorb jge fisttpll int3 push shl fidivl imul test in (bad) jne cli insb jge pop iret imul movabs movabs in (bad) movsl cwtl sbbb ror jmp (bad) lret pushfq mov leaveq push repnz sub add (bad) rex.RB (bad) mov sub je push int add xchg (bad) jae movsl mov (bad) sbb fsubrl (bad) rex.WXB loope rex.B fmul jno test movsl cmc retq rex.RX cli push scas cmc loope popfq test lea rex.WR fadds movabs outsl jno mov psubw or rex fcmovnu (bad) rex fcomps in (bad) (bad) mov test add fiaddl and pop push lods sub rex.WXB in je jl jge xchg cld rex.WRX mov cmpsl (bad) mov xchg (bad) jo std jmpq mov fs (bad) int3 and icebp pop and lock icebp pop scas movabs mov (bad) cs mov or cwtl jrcxz ffree test loopne adc enterq (bad) lea push mov jns jl fs sub int3 xor cltd (bad) mov mov cli adc (bad) pop jl in movabs jge (bad) push lret mov sub (bad) retq sbb push lea enterq pushq cwtl icebp sti rex.RB cmpsl sahf movabs in xchg sbb xchg rex.RX icebp xchg rex.RX sub sti (bad) cmp or add out mov int3 jp fbld sti xor (bad) lea jp retq mov (bad) adc retq fistl movabs cs or imulb jrcxz in (bad) or push sub xchg add rcll mov sbb movabs (bad) xchg push out xor (bad) not rex.WR test fadd mov rex.WX rex.WX add mov xorl outsb adc je jbe rex.WB (bad) loopne lea movsb test (bad) xchg sub lret or test mov cmpsb pushq imul sbb int repnz xchg rex.RB cmp cmc test cmp cmp retq test pop jno rex.XB popfq jmp (bad) (bad) repnz and insb test push iret xorl fistp jmp (bad) sub or lock cltd jle (bad) cmc xchg xor and out (bad) (bad) clc add in cmpsl repnz rex.R in push (bad) xor movsl paddsw rex.WRB jl stc mov sbb loopne out or mov adc addb cld enterq mov jle xchg data16 cmpsb cmpsb pmaddwd xor or rex.WB rex.WB or mov stc or leaveq roll add rex.X repz pop jmp sahf rcr sbb leaveq sub es xor and test jne int3 sub vshufps pop mov fiadd mov adc sbb mov rex.WR sub (bad) out test and jae jg or ja (bad) pop (bad) sbb or or leaveq adc sti (bad) fnstsw cs add rex.W rex.R (bad) rex.WR sti mov adc shlb jmp pop cmp test sub xchg out cwtl icebp pushfq jb push loope xchg xchg jb jns rex.WB xchg jb rep cmp push loope xor mov fcoml mov movabs ror or push sahf movabs movsl rorb cwtl jns add es ds bnd (bad) (bad) stc leaveq rex.RX sbb retq push rex.WRX not ss out testb or rcrl cmpsl rex.RX and movsb (bad) (bad) sub and mov hlt sbb mov (bad) retq pop (bad) and (bad) jrcxz cmc sub cs mov jrcxz ja mov sub fwait repnz test (bad) stos (bad) fisubl callq mov rex.RXB rex.XB (bad) rex.WRB (bad) (bad) or hlt rcll mov and mov fisubr in cmpsl rex.RB int and imulb nop sar rcr je movsl mov xchg roll pop mov stc leaveq push loope mov (bad) mov rex.WRX leaveq leaveq xchg ds jb mov (bad) out (bad) mov imul rex.WR mov xor (bad) sahf (bad) repnz rex.RX rex.R (bad) sub int xchg (bad) in sahf shr lock cmp fldl rex.RX pop jp sbb sahf rex.RB sub cmp or xor xor rex.R cmpsb notb and sar movabs rex.WR imulb adc adcb add clc push xchg and lea jmpq rex rex.XB lea jmpq cmp or adc out iret (bad) adc movabs sbb pushfq retq std (bad) cld fbld mov rex.RX or push sahf push rex.WR cmc cli push cwtl je mov xchg in add and rex.WR repnz int out add (bad) cli push stc sub stc (bad) xor test cmc jp (bad) repz cltd int (bad) or fs (bad) and hlt (bad) repz pushfq movsb xchg push xchg sahf sbb mov lret sub lret sub and callq push std xchg adc test sti mov nop jno fsub pushfq lret (bad) notl sarb loopne cmp adc adc callq and cmpsl movabs add (bad) sbb repnz xor rex.W enterq lcall shll sub rex.WB iret (bad) jae out or imull retq fucom pop or push mov xor fldl repz mov rex ds cli andl rex.B out add sti clc jae repnz and rex.XB mov jge in ficompl xor (bad) mov shrb mov rex.R fmuls jp jne sbb mov iret data16 loop and in mov (bad) and in push xchg or sub lods mov (bad) (bad) mov jmpq (bad) rex.R lock (bad) mov jp lods pop sbb jmpq adc mov jg sub adc mov cmp (bad) in pop lock int3 sub (bad) push push lods push cli cwtl addr32 scas sub rolb mov sub (bad) (bad) sarb fisubr (bad) (bad) and adc rex.RX rex.WRXB rcrb lret rex (bad) (bad) out stc jrcxz and hlt sub leaveq mov gs xchg int pop testl jne rolb xchg mov push std std (bad) cmc callq hlt retq mov int3 (bad) repnz or out rex.WR rorb rex.WB (bad) movsb in (bad) (bad) mov mov rex.WR add push rex.WB repz rex.X clc (bad) je int3 rex.WR and add retq (bad) stc enterq (bad) sbb nop xchg fadds and fimul movabs cmc callq lea retq rcr cmp or xor (bad) or mov int3 mov insl fldenv xchg sbb cld lock lods sahf in shr mov xor mov (bad) (bad) rex.WB (bad) push mov int cmp sub outsb mov (bad) jmp (bad) test fisubrl test (bad) out and (bad) sub push (bad) hlt icebp stos rex.WB push mov mov hlt (bad) movsl cmp retq (bad) cmc (bad) imulb pop sub add (bad) sbb add movabs push cwtl icebp sub rex.RX jrcxz push in out or fisubrl je ss imul retq shl push push and jnp sahf jmpq nop iret cli retq xchg pushq movabs lods insl cs fadds fimull (bad) cmpsl jmp (bad) fwait sub in sub icebp movabs mov and cmpsb sbb (bad) in nop flds fisttpll out sbb icebp js (bad) jrcxz (bad) rex.WR xchg mov sbb (bad) mov (bad) mul add leaveq cs xor fisttpll stc cld xchg iret leaveq int3 jns mov cltd retq hlt push (bad) cmp or xchg mov cmp xchg pop fiaddl pop push fwait rex.XB out rex.R rex.R stc cmp or fcomps jl sub stc callq mov add (bad) sub rex.B fwait loope adc rex.WR add (bad) and pop bswap movsb imul imulb xor insb (bad) add cs retq (bad) shlb leaveq adc sub test push rex.WXB xchg (bad) negb addl mov rex.X xchg push stos mov cmpb cmc mov sub (bad) (bad) (bad) lret lret xchg cld xchg pop rex.WXB mov cmp lret fsubs lret lret (bad) pushq jmpq pop sub out movabs fistpll fstl cs pop movabs push nop lret iret cmp xchg idivl or fisubl xchg xor xchg cs lods (bad) rex.WRX lods xor iret fsubr or in xchg sub and mov int (bad) push jns pop xor in retq rex.W lret mov mov es cmc mov repz (bad) (bad) and orl jp jl lret (bad) (bad) out mov lret movabs enterq sub rex.RXB lret push movsb enterq nop rex.WB hlt test push pop std test hlt jrcxz jmp (bad) out jno cmp clc mov icebp rex.RXB ss fcomi callq jo push mov neg (bad) test fild lahf sub (bad) movabs (bad) roll icebp fs xchg (bad) mov testl movabs rex.XB sub (bad) mov std enterq jrcxz cmpsb push adc enterq leaveq popfq roll push cmpsl (bad) std fimul fs pop mov add movabs pop mov xor movsb clc xor shrl xor callq sbb xor cld cs pop xchg retq (bad) sbb rex.RB sub ljmp lret cmpsb mov movslq rex.WR int3 mov mov or hlt and inc rolb scas int sub rex.RB add xchg rex.RX je (bad) mov add std fidivr out out add (bad) fcomip rex.WX mov mov rex.X (bad) pop (bad) rex.WX (bad) insl shrl enterq (bad) (bad) rex.RB movsl add mov rex.RB in add addl icebp (bad) mov add enterq xlat int jno lock callq neg or jno or loope pop push iret add sbb ja or add fwait outsl push (bad) scas retq cltd jns popfq mov sti (bad) fst mov iret sahf divb push mov int3 jmpq cmpsl or xchg push xabort lret xchg iret iret mov rex.WR movsl loopne lock (bad) mov pop or (bad) jle xchg js outsl rex.W lock out or loope stc leaveq hlt push test sub (bad) cmp rex.WX movabs add es test clc push rex.WB lret (bad) cmp add push test mov adc movabs sub out jo or loop rex.RX vminss movl test loop pop pop movabs jbe test insb (bad) or rex.WXB in mov fmuls test sub insb adc or jp rex.RXB xor (bad) in cmp in sub (bad) nop icebp rex.WB leaveq pop sub and je imulb repnz (bad) cli cmp pop rex.RB cld (bad) test jp rex.WRB fs test (bad) rex.WR lea leaveq fs add sub incl sbb rex.WR rex.WRX (bad) repnz sub fmull mov jns push nop je lahf or cltd mov (bad) sahf fimull jae in rcrl mov cs lret stc movb or or retq in add adc cmp fbld or rol (bad) pop int3 (bad) mov fiadd cmp sub sub mov cmp sbb cmpsl out js (bad) fimul test add enterq sub jae rex.WX add rex.X movb leaveq and icebp (bad) repz push xchg pop cli sub leaveq negl sbb xor cmp iret xor mov leaveq xchg sbb xor test outsl in rcr xchg (bad) pushfq (bad) pop repnz mov jo jno out xor or add add mov (bad) in cmpsl (bad) retq pushq (bad) pop xchg (bad) or (bad) xor rex.X rex.W rex.WRXB in push mov mov loopne and (bad) mov fisttpll jno fiaddl mov add cs adcb movsb and mov jne rex.WRX mov (bad) push rclb rolb rex.RX sbbl pushq xlat movabs (bad) mov jnp (bad) cmp int jle stos add int3 pushq leaveq lea (bad) push jb add (bad) enterq rex.XB mov rex.XB or vpaddb fcompl rex.X int3 mov cmp ja adc (bad) rex.WXB (bad) or retq stc sub (bad) push pop movabs (bad) add mov sar (bad) (bad) sahf movsb int mov sub retq rex.RXB (bad) (bad) (bad) (bad) or xchg iret mov jnp xlat mov jae sbb mov es cs xchg cmpb jrcxz leaveq cmp xchg and test cmc xlat (bad) adc leaveq pop add pop xchg insb (bad) mov xchg stos sub jmpq pop movsl mov rex.WRB sbbl jle cs movabs adc pop mov (bad) (bad) and push sbb cmp pop test hlt pop push retq cmp cmp hlt retq pushfq xchg cmp pop in sub mov rex.WB cs cmpb in (bad) ror sarb movabs fbstp mov mov xchg or mov fisttpl jmpq mov rex.WB in pop movb lods sub xor (bad) sub lods frstor (bad) (bad) cmp mov (bad) adc (bad) (bad) test cld sub push mov xlat (bad) icebp test loopne add test (bad) outsb shr movabs (bad) loop scas (bad) sbb (bad) (bad) out rex.WRX xchg pushfq pop rex.WB jle cmp movabs pop (bad) je xor push rex.WRX (bad) cltd popfq mov sub movabs (bad) lock cmc mov (bad) fadd (bad) mov and cmc cs repnz mov add pop pop testl js (bad) test enterq add rex.WRX lock and rex.WR xchg callq sbb xor cmp sub test int cmpsl cmp je,pt cmpsl rex.B movabs pushw (bad) test mov int (bad) cmc andb jmp add add test (bad) movabs es xor retq retq (bad) pushfq leaveq es rex.R enterq mov mov encls (bad) pop or (bad) jno rex.XB (bad) rex.R cs jb,pt cmp int fs iret adc and test test vpshuflw or stc mov negb rcr (bad) outsl in sbb movabs int notb cmc xchg repnz pop imulb lods mov cmp (bad) sbb cmc loope (bad) xchg cmpsb (bad) stos adc int3 (bad) rol (bad) cmp enterq add lahf or enterq and (bad) mov in cmp lods stos (bad) xchg movabs cs addb or lock rex.RX sbb or rex.XB (bad) (bad) enterq add (bad) mov xchg rex.WRB mov jge icebp (bad) sub mov movsb xor movabs add (bad) mov jp fnsave imul std jp (bad) mov lods rcl loope sub ffree sub pop jno lock lods sbb loope or pop jae pushfq cltd cmpsl js,pn rex.WRXB (bad) enterq retq (bad) jae (bad) lock (bad) fisubrl repnz xor jle int3 add movabs rcl (bad) mov addr32 mov cmp sub and pop push (bad) int bswap loope rex.RXB rex.WRB sahf add cltd rex.WRXB mov iret rex.WB mov sahf fcompl out movabs (bad) xor fdivs adc xchg xchg sbb rex.WRXB rex.RX rex.B pushfq cltd add rex.R jp mov lahf andb repnz (bad) rex outsb (bad) (bad) imulb lret std leaveq mov or ja imull lret leaveq sub idivl test push sub (bad) sbb sub jno pushfq add sbb ja cmp fnstcw mov mov mov (bad) (bad) lret mov imul imul xchg rex.WXB pop cld adc xchg rex rex.WXB and notl push sub cld pop xor mov sub rex.R imul push sub and lret retq and (bad) movabs (bad) cmpl jo icebp mov pop jmp sbb xchg push (bad) iret add xor xchg push fistl lods mov movslq imul mov and push nop out loope movsb xchg rex.WRX xor add fisttpll jg push popfq iret xchg (bad) add (bad) int xchg in pop xchg pushq lods xchg sub fcompl cmp movabs test xor ss sahf xchg loope rolb loopne xchg mov int3 cltd and (bad) outsl idiv retq xor pop hlt jns mov and (bad) xlat rex.RXB enterq (bad) (bad) mov enterq pushq data16 repz retq iret cld int int3 hlt cmp mov mov pop (bad) fstl test rex.RB callq and (bad) rex.RXB (bad) mov rex.WXB std orl and in xchg mov std mov loop divl (bad) rex.WXB rex.RB jne (bad) pop mov cs repnz ss rcrb mov repz sbb sbb in leaveq rex.WXB in idivl scas sbb int3 mov in movabs mov push mov repz sbb lahf sub jp (bad) jl rex cltd (bad) fisttp pop rex.R mov rex.WR loopne mov xchg test cmp xor pushfq mov (bad) stos adc (bad) mov or or (bad) loope lret or out movabs (bad) sub roll or jle icebp hlt stc rcll fist and lret (bad) add stc (bad) or jmpq cli add flds imul pop rex.RB xchg sub rex.RB rex.RX cltd rolb jrcxz adc or (bad) pushfw xor loope (bad) xor sbbl rex.WR stc jo leaveq sub push adc rex.RX mov int pushq jrcxz ror mov shrb (bad) xchg fnstcw xchg iret out add push mov mov vmaxss int mov adc movabs rex.WRX pushq in mov push pop and lea mov repz repnz fadds jmpq xor rex.WRX pushq or adc cli mov es imul and cmp sti xchg sahf cmp loopne nop sahf loop je jo mov fwait adc or xor fisttp (bad) mov in and movsl cmp or stc movsb iret sub loope rex.WR repnz sbb int3 repnz and addl (bad) clc or mov andl jg push xchg icebp sbb mov std cltd or int add mov rex.WRX xchg lret rex.RX and out pop out lret sbb shll int (bad) (bad) rex.WR rex.R stc sub movsb (bad) test pop int3 xor sub jno xchg ficoml mov popfq fwait or jnp cld clc jmpq or cmc loop rex.WR sub or mov rex.RX vandnps fidiv rex fimul sbb xchg sub sub jle lret add xor sub retq xchg jns (bad) (bad) xchg push xchg mov in std xor mov retq (bad) jae push mov add fcomp adc retq ss frstor cmp push or retq icebp sub jle rex.WB rex cmp xchg mov adc mov mov xchg mov rex.WB push movabs rex.WRXB loopne (bad) (bad) xchg xchg push retq sbb (bad) rclb pop sbb pop std pushfq xchg xchg cli lods sub pushfq and sub push jno mov (bad) jae jne loope out (bad) lahf stc fcmovnbe sahf movabs outsl rex.WB fnstcw cltd rex.RX cmc pop int3 jrcxz lret imul and xor adc adc in fdiv repnz mov rolb lock imul cmc (bad) test jne pushq jge sub movabs rex.XB push xchg idivb hlt (bad) mov mov insl sbb lret push xchg or mov (bad) (bad) fisttpl fsubrp ja icebp in cs gs (bad) rex.WRX pop sub jg mov xchg cmp jrcxz xor mov (bad) cmp std lea xchg rex.WR icebp add cld sub mov adc movabs jbe rex.RX pop movabs (bad) jg and rex.B push movabs mov outsb cmp repz (bad) jne mov mul cli cs (bad) or loope jmp leaveq (bad) sub rcl rex.WRX lock mov stos sub retq jl cli out rcrb out (bad) (bad) repnz pop in jb js pop jmpq rex.WRB es cltd out sahf pop pop xchg lret mov out icebp rex.RB and pop mov out cmp and xchg mov xor (bad) movslq mov sbb insl rex.X stc rex.RX push int3 jmpq (bad) or (bad) (bad) and rex.W out sbb (bad) int3 cli popfq cmp add jl or sahf adc push testl push jrcxz (bad) push scas std std shll subl movabs cs mov lret or cmp (bad) mov pop lcall rex.WRX mov pushq int3 out in adc sub in notl out iret ds retq fnstsw (bad) xlat fcmove and rex.WR mov xor retq (bad) fild je sarb mov (bad) cmp iret enterq cli adc loopne movabs shll loopne or movsl stc mov xor mov (bad) (bad) jg loope (bad) (bad) jmp out addr32 and rex.WXB mov push sub js jnp gs (bad) imul shrb or rex.WXB cld lea add loope movd retq (bad) jrcxz xor mov int3 movabs sub mov rex.WB je jg cmp out js sbb xchg in icebp icebp rex.WXB mov mov push jbe sbb enterq fcmovbe jp movabs add sti jmpq (bad) clc mov sub add xor leaveq mov callq repz loope or push and xchg gs jg rex insb (bad) sti rex.X rex.WRX rex.XB repnz (bad) incl or in add fist sub lea and retq (bad) mov imulb jge fistpll or fsubr lock xlat (bad) jae cmp (bad) (bad) hlt (bad) insb or pushq movslq sub jge cmpsl pop js sub test movb (bad) rex.WXB movabs mov out (bad) (bad) pop in enterq add outsl jg cmpsl stc add repz (bad) icebp scas retq cld clc (bad) callq (bad) icebp add movabs rex.WR rex.WXB movabs adc (bad) movsl testb mov mov lods rex mov movabs mov sub addr32 mov rol leaveq (bad) (bad) (bad) or push add fdiv fnstenv (bad) xlat lret (bad) cli cmpl int fsts add fisubr push cmp lea loopne add leaveq repz or leaveq pop loope mov pop insl fistpl lock rex.WRX int3 cwtl or fsts cmc (bad) test loopne fst (bad) or roll orb pushq cs repnz or xor jo (bad) (bad) rex.B xchg cmp pop push cmp (bad) push shlb and mov scas pop repz add rex.WR (bad) leaveq xchg add mov pushfq je add incb imul or sub jrcxz or repz fcom sti rex.R mov add addl rex rex.RB cs iret movsl pop (bad) mov jrcxz sub jg jae (bad) xchg rex.B or pop push test std sub in mov fadds pop (bad) fwait sub loope,pt ss insl and sub rex.W rex.WB mov nop imul (bad) rclb rex.WXB adc cmpsl out sbb adc rex.WR pop negl je cld xchg and rex.XB adc mul out fidivr movabs add cwtl enterq mov test cmp int sbb mov fstpt or jns fwait or mov jrcxz rex.B and rex.WB sub xor or imul jg gs (bad) leaveq xchg push xor ja cmc xchg jno (bad) fmull adcl rex.RXB cli (bad) ja push xorl sub sub lahf cmp cmp (bad) (bad) (bad) mov imulb mov (bad) icebp retq hlt mov sub rex.WRX rex.WRX icebp movabs imul add mov out mov jns ds add xor clc sub mov repnz movsb test (bad) mov sub (bad) (bad) scas fsubl cwtl mov rex.RB test jno or rex.RB or mov rolb test loop cli jge mov cmp (bad) rcl xchg (bad) fmul in push sti out rcll fstps cmp jmpq jns mov (bad) push leaveq push sub roll retq cs xchg movabs jo divl lret sbb or cwtl in adc retq addr32 lea lret ss sbb pop jmpq push mov jnp,pn jbe xor jmpq (bad) out test cwtl rex.WB gs jae repnz ljmp xor clc out shl cld leaveq (bad) repz (bad) mov rex.RB lret jnp jp xchg addr32 ja movslq lock pop or mov pushq (bad) (bad) mov sub adc mov (bad) test and cmp cwtl sub (bad) push insb rex.WR or jmpq mov (bad) iret mov mov (bad) or jae fiaddl popfq insb lret jmpq icebp loopne (bad) rex.W in push mov movabs (bad) (bad) or roll (bad) out ss hlt mov push mov cli test cli gs or pop (bad) (bad) (bad) loopne xchg in jno or stos (bad) xchg or shl xchg retq (bad) adc int jp out (bad) (bad) adc (bad) and nop mov (bad) xchg jnp mov int3 rolb cmp add sbb mov jns repnz xchg callq (bad) in cmpsl outsl loopne mov (bad) (bad) in sahf or cmp sub jae cs mov sub sbb cmpsl fsubp (bad) int add js xchg test cs add out jns sbb callq push and mov jmpq lods rex.RX (bad) cmp (bad) cs stc mov and mov addr32 retq movabs ror pop ja push cmp in lods jge (bad) test jp lods mov (bad) js iret (bad) xchg nop or movl xchg sahf xor out (bad) or cli loopne xchg repz jg repz sub jns adc rcl callq jo fwait callq jne xor and (bad) mov test mov or cs (bad) push leaveq (bad) (bad) lea vmovaps jo (bad) out movabs cltd retq fnstsw (bad) or repnz in jno cmpsb (bad) (bad) sub movabs int out flds jo fstps lahf rex.WRXB cs retq (bad) xchg int rex.WB rex.RXB cs adc (bad) pop movsb rex.WXB xchg movslq rex.WR sub mov pop flds in retq imul lea js mov xchg cmp lods sbb and mov orl gs jns lret sub mov movsb rex.WB push mov push in out pop mov fs sub rex.RXB loopne rex.WRB or (bad) cmp repz mov lret (bad) or mov pop or mov xchg push es fs adc int3 xchg adc (bad) cli je pop (bad) adc outsb callq mov stc in adc fwait retq pop pop int3 sahf (bad) adc pushq lods pop fsubl sbb enterq push pop sbb repz (bad) rex.WRB (bad) imul test xor test xchg sub rex lock and push jge and lods iret mov pop cmp add mov leaveq imul adc (bad) cmc test iret jbe mov jl lods fcom out cmpl movabs mov rex.RX mov scas mov push add sahf imulb pop je mov cli test (bad) rex.WR repnz push (bad) jmpq sub (bad) and sahf leaveq movb (bad) incl int3 mov sbb cwtl (bad) loope cmp xor mov cmc pop std js (bad) std (bad) rex.WX outsl adc (bad) add popfq mov insb rex.WXB movslq pushq adc cmp nop add jne rex.RXB rex.WB xchg (bad) in test scas (bad) int3 xor fcmovbe rex.WRXB negb xlat std xchg repz add rex.WRXB rex.B xchg pop popq mov xor sub mov add add ja xchg loope movabs repz movabs (bad) sbb (bad) (bad) (bad) jrcxz movabs sti sub rex.X gs jl in push clc movsl jb cmpsb xorl (bad) fistl mov mov imul movsb mov rorl movabs in repnz (bad) push rex.WR (bad) (bad) and (bad) push bnd mov or repnz jmpq nop fnstenv sbbl sbb (bad) jne fisttpll fsubl (bad) sub mov mov mov or xchg jae or xlat int add or out or movabs sbb rex.RXB rex.RX ds rex.R pushq xor pop rcr (bad) in sub rex.WB and (bad) outsb repz imul out push out mov rex.RXB sbb in jmpq mov jbe push rex.WRB rex.WRB jnp pop nop jne stos cmpl xor mov enterq (bad) cmp lret or adc lods loope loopne rorl jmp jae (bad) je (bad) fs test orl xchg rex.RB add rex.XB (bad) and add (bad) js mov (bad) (bad) mov xchg cmc nop xlat cwtl jno out (bad) addl or mov push mov pop mov jmp mov or mov push cwtl retq test or rex.B rex.WRXB jge (bad) rex.RB pop adc pushfq jrcxz fs jne rex.WRB ja add fcmovnb enterq loop (bad) xor mov rex.RXB (bad) xor (bad) rex.W rex.WXB add mov push movabs jno sti sub mov mov (bad) or mov stc sbb push cmpsl in leaveq and loope (bad) lock mov push sbb push insb sub ss rex.WR rex.WRXB rex.B rex.RX addr32 pop (bad) xchg jge stos negb out fdiv pop lret int3 ror pop (bad) jge int3 and callq ljmp xlat leaveq stos sub test mov pop mov mov xchg jrcxz sub push cld enterq xchg lea sbb retq addr32 cmc sub (bad) push mov out int sub ja (bad) rex.WX mov rex.X lods mov loopne sbb sbb lea hlt movabs fdivl rex.XB sub pop out xchg (bad) xorb out and test lahf sub out xchg xlat callq cwtl nop rex.RX mov pop sub add movabs mov rex.WXB outsl pop leaveq add cs pop (bad) rex.WRB jrcxz push in test (bad) adc lods int (bad) xor gs iret data16 shrl negb rex.RX stc mov pop sbb rex.WB es sahf jmpq (bad) mov fcomip enterq test movsb rex (bad) int (bad) or (bad) std fdivs ficom (bad) rex.W insb pop pop lods (bad) hlt jge (bad) mov (bad) in adc test decb add push lret xor jb mov adc hlt in cwtl or (bad) mov xchg sub fnstcw addr32 jrcxz xchg lock mov mov add nop sbb (bad) enterq cs (bad) sub (bad) and enterq mov repz imul cmc cmp rorl fiaddl pop out out mov std xor sub cs cmp xchg (bad) mov and sub (bad) hlt lret mov loope jne mov loop retq repz xchg loopel (bad) sub icebp callq xchg sub hlt fcmovnbe mov hlt mov jno rex.RX out icebp mov movabs mov and mov rex.WXB data16 sbb negb xor cmpsb (bad) rex.WXB rex.RB (bad) sub sub mov sbb mov and lock retq push cli sub rex.WRB mov push jne outsl rex.RB jl push insb icebp jl lahf rex.RX mov mov mov add sub loopne and insb (bad) imul lods mov sti and jb repz ds rex.RB add rex.RXB stos (bad) push push add fsubs in je (bad) rex.WRB test cmp std test or out (bad) in clc divl cmp add push xchg movl test ja sbb mov ficom jno insl cwtl mov jne sti rex.RX cmc rex.B je rex.RB jae test int sti hlt mov rex.RB add cs lods cmc and push rex.WB rex.W data16 push (bad) sub (bad) (bad) add cmp pop rex.WB rex.WRX xlat (bad) mov insb es add (bad) sbb cmpsb mov mov mov push in sub xorl mov (bad) (bad) test (bad) xchg cwtl xlat pop test (bad) iret and xchg or push pop or sub test adc xchg jp imulb rex.X rex.WR sbb cmpsb (bad) icebp repz (bad) sahf mov and (bad) mov jl movslq movslq test rex.XB jp (bad) pop push adc jns rex.XB xor cltd sub lock push lea fstl and push rex.XB test sub lock (bad) xor test icebp andl repz stc sub push lods (bad) icebp rex.R (bad) fs sbb jo rex.WRB rex.RB lock imul loope mov xchg xchg (bad) pop in rex.WRX (bad) (bad) out mov (bad) movsl stos (bad) xchg stc mov in add leaveq (bad) jbe cmpsl pushq mov movsb lock mov imul iret fst sub mov jno cmpl jge ror pop rex.R xchg jmpq in or mov shlb jp and jmp test (bad) add retq cltd (bad) mov test or (bad) jns sahf or pop retq (bad) xor jae gs rex.R jbe movabs gs (bad) out and or rex.RX (bad) sub pop cmpsb xorb sbb retq bnd mov and retq push mov mov (bad) lock mov icebp vcvtsd2ss xchg adc mov (bad) js rex.RX lahf sub push pop mov or rex.WR sub ja mov push lret iret (bad) rex fwait mov add in test outsl or pop mov jg and je decb mov jo mov mov lret movabs (bad) cmpsb mov fdivrl xor (bad) fxam push (bad) sbb push and sahf (bad) rex.RX add jmpq fcmove repz hlt enterq sub clc pop stos faddl mov mov mov jne pop lret je test pushfq mov icebp mov (bad) je test sbb push iret jmpq sbb scas jo cmc rex.WR ja jae scas (bad) lret (bad) rex.X (bad) push mov insb pushfq (bad) (bad) in int3 (bad) xchg callq retq shl sarb jrcxz rex.RXB mov mov mov rex.W rex.R vaddpd rex.WX ds mov hlt jrcxz adc notb and movabs fcomps pop jns push rex.WRX cmp xchg (bad) (bad) addb push movsl jge loopne xor push test adc mov mov cmpsl stos mov imul insb cltd or out mov cmpl and icebp jae push imul (bad) (bad) xor cmp imul movsl nop pushfq pop leaveq test sti (bad) or and xchg cmp (bad) or repnz (bad) nop (bad) ds rex.WR jrcxz,pn jrcxz repnz sahf stos sub add movsb pop negl (bad) (bad) xchg pop mov leaveq pop jmpq (bad) (bad) mov div mov jmpq sbb rex.RB jmpq mov or nop sbb mov (bad) in xor jbe (bad) in rex.B or orb mov test imulb movb imull (bad) repnz lea sbb pop sub xor lret mov retq jrcxz (bad) ja add stc sbb cs icebp sti rex.WB mov rex.B in rex.RX rex.WRX adc in cmp out (bad) rex.WB rex.XB movsb sti (bad) in xchg or jae,pn adc or scas jrcxz or imul pop pop setnp cli sub mov cmp mul in rex.WR in (bad) and clc jmpq ja lock (bad) rolb loope sub jmpq cltd popfq repnz (bad) lods mov mov cli (bad) cmp push mov fwait cltd cld rolb js movabs xchg adc shrb cmpb (bad) (bad) sub stc fdivp pop and mov (bad) xchg (bad) cmp loop (bad) xor fadd scas jmp sbb jns xchg mov mov push (bad) rex.RB (bad) rorl int3 (bad) push cli or mov rex.W lods loopne (bad) lret pop (bad) (bad) sub loop roll xchg rcrl xrelease hlt cmpsb movslq test and sbb sub mov rex.WXB movsl outsb or pushfq adc popfq mov jrcxz pop xchg rex.RB mov add sub xchg (bad) cld stc rex.WRX (bad) mov movabs repz (bad) retq incl xchg mov sbb mov sbb mov pop clc iret movsl push rex rex.WRXB jb repnz repnz jb jb rex.WXB movl cli retq or test mov add cmp sub cld mov leaveq lret xchg rex.WXB (bad) add out add xchg movabs icebp fildll cmpsb test sub test xchg or (bad) cli shrl (bad) mov movsl in xchg hlt rex.RB push (bad) mov cmp mov or cmc or adc mov cwtl adc js test and push (bad) adc fcmovne mov jb cmp icebp (bad) cmpsb imul cmc movsl (bad) cmp vpsllw std in out jmpq insb xchg jae sub rex.RB (bad) push addr32 jb sub or test (bad) imulb jbe mov mov in subl (bad) sti movsl pop cs pop movslq movabs in callq gs shlb adc sub lret cs out adc sbb xor sub add lea adc popfq push cltd jmpq xchg insl xor xor mov mov rex.RB hlt mov push or rex.RB pop data16 adc mov addr32 in fidivl mov pop and mov or test pop insl fildll jnp jae xchg xor jae (bad) nop lea sbb jae (bad) cmp cmp xchg (bad) fcoml sti (bad) emms data16 xlat jp rex.WB rex.WX test int3 lret mov (bad) and pop xor (bad) jne cmp xor fcomp leaveq push lods mov push jge pop outsl push push rex.RX mov test adc (bad) mov jrcxz adc rex.WRXB mov sbb pushfq xor test jrcxz int3 rex.W int3 jl push rex.WRX rex.WXB imul stc push cmp xchg jae and out rex.XB test sti and ds cs cltd adc fldcw in pop jne out (bad) push mov (bad) insb mov test out fiaddl (bad) fadd push leaveq push (bad) pop rex.RB xchg (bad) sbb movslq sub es pop shrb sbb ds xchg pop movsb rex.XB out cmp fisttpll notl in xor (bad) push (bad) sub cmp cmc callq (bad) mov or jl rex.WRX pop callq int (bad) mov retq (bad) in out faddp (bad) loope (bad) sub (bad) push (bad) jmpq rorb cmc pcmpgtw sbbl fldenv xor (bad) test mov fs push cmp jl imul retq cmp push (bad) or fmul nop sub popfq sub (bad) dec xor or stos (bad) (bad) fadd mov (bad) (bad) and and pop (bad) loope and lods notb loope test pushq (bad) insl pop sbb sbb nop rol (bad) mov loope je loop popfq xchg pop mov sbb push test fcompl movabs rex.WXB (bad) mov movabs mov rorb sub xor and enterq push mov mov fisubr loope,pn test adc fs sub mov mov cmp loopne sub adc gs divl (bad) in (bad) cwtl (bad) sbb add xchg je sti test loope sub mov (bad) xlat mov and jo cltd sub (bad) cmp (bad) out out nop (bad) test rex.WB test cmp sbb (bad) movb and (bad) faddl rex.WR mov (bad) (bad) cmc data16 cmp sub in (bad) (bad) movabs mov test test (bad) xor add sub callq ss movabs rex.RXB (bad) popfq add lret jle (bad) (bad) mov lret lods stc (bad) repnz rex.RX retq (bad) jns xlat (bad) pop (bad) xlat (bad) or loope je or lea mov cs jnp (bad) lea rex.W adc rex.WXB pop rex.B mov vpsubsb iret and rex.RB jrcxz,pn mov (bad) mov (bad) xor rex.RB (bad) jo rorl rex.RB testb jmpq divb rex.WB loope pop out xchg pop test pushq scas pop mov (bad) (bad) mov ss (bad) or xor and es retq xchg sarb rex.XB jp pushq (bad) jg hlt xchg rex.WB in and (bad) rex.WB mov pop adc jns imul rex.B sbbl jmp (bad) add cmc sbb rex.WB (bad) add (bad) mov rex.WRX repnz movb jge gs ds shrb mov xchg in mov int3 pop sbb mov int pop xchg (bad) imul cmp push (bad) int3 push repz (bad) mov movabs (bad) rex.WB cmp xor push and push cltd cs cli jbe rex.WRB repz subl fistpl or rex.RX pop (bad) fnstsw addr32 int sub (bad) je movabs test xchg (bad) xor xlat in fwait stos jp and cmpl imul sub xchg mov loopne test ror mov rex.XB mov xor (bad) rex.RB (bad) fsts jge lahf mov out sub sbb sub in in rcl mov lods rex.R jl (bad) repz jno cltd test rex.RB rex.X sub cld mov add xchg xor push push mov push in js stc pop mov loop xor movabs fsubp mov stos and mov and push sub imul (bad) repz (bad) xor outsb repnz push lahf xor nop adc fucom sub in mov lret or or (bad) fiaddl jmpq cmp sub push jo fist nop (bad) sbb out (bad) adc and stc mov test (bad) rex.RXB addl pushfq js adc mov fld jge inc rex.WRB (bad) (bad) js clc xchg test cmc adc callq lea cmpsl cld scas fstps mov lret or loopne pushq out callq xchg insl xchg (bad) lret or sbb sbb sub (bad) data16 pop lods imul push loope push jmpq rcll jo rorb sub repz rex.R (bad) cs iret pop or rex.WB rex.WRX movabs push jmp incb movsl out hlt rex.B adc jo mov rorl adc std icebp add notl (bad) lret (bad) (bad) cwtl fs (bad) pop push sbb sub callq rex.RXB (bad) lods jmp (bad) (bad) push movsl mov (bad) je push pop sub cmpsb (bad) mov xor addl lret (bad) lahf or mov movabs (bad) xchg test out sub push mov sub cmc (bad) std lret lock in negb sub loope cwtl lock or mov sub scas hlt in lahf int sub or pushq push cld and pop lock int sub adc in mov adc (bad) popfq push mov (bad) rex.WX cmpsl cmp gs lret fldcw ds lret (bad) sub mov int3 cmp movl xor movsl jp sti sti adc xor loope mov push fsubr fdivrl imul clc icebp sarl jrcxz rex repz insb adc (bad) hlt adc roll cmpsl (bad) pushfq xchg push hlt retq mov (bad) int3 retq rex.R jrcxz push sub test and adc mov test xchg jns rex.W add test push js std xor fldenv sub jbe jmpq push cmpsl in push cli repnz xchg nop pop add add sbb cmp ja add rex.WRX movabs ja loopne es xorb mov loopne xchg rex.RX rex.RXB rex.R jns mov int3 jl repnz fisttpl pop (bad) clc cmc and sub lret leaveq (bad) pop and (bad) js (bad) frstor pop push mul sub imulb imul cmpl xchg loope xchg sub lea (bad) cmp (bad) movabs jmp jrcxz (bad) xlat rex.WXB rex.WB cmp icebp mov (bad) (bad) js out rex.X cmp xlat mov rex.XB (bad) rex.WXB push popfq (bad) icebp sbb fildll test hlt (bad) (bad) cwtl out repz add sub pop jp push jp test (bad) rex.R mov (bad) movslq pop (bad) rex.WXB in popfq (bad) adc stc rolb enterq incb adc rex.WR jo stos sbbb sbb retq fsts jp (bad) loop (bad) cs retq adc adc sbb callq mov or mov mov loope xchg or rex.WR out push test lcall retq lock push sbb mov test loope lret mov movsl xor xor (bad) repz rcr sub push jno mulb loop (bad) xor shrl xchg leaveq imul callq popfq (bad) scas xor sub (bad) and and stos lahf cli (bad) callq jl push xor rex.WXB xchg mov retq xor xor fcmovnb push adc mov movabs mov fisttp shrl movabs cmpb cmp add callq or sub enterq (bad) add mov sbb jne cmp in pushq sbb and xlat test rex.XB sbb js rex.XB iret adc (bad) cmp (bad) fimull push int3 js (bad) pushfq push scas mov rex.XB rex.WB (bad) cltd out test fdecstp (bad) test add out xchg or push notb jrcxz ja test int movsl cmpl movslq rex.WB mov (bad) pop cld mov push cli int3 stos enterq (bad) test and fpatan hlt fadds cwtl test rex.WRB adc add ja lahf test iret fimul (bad) nop push (bad) callq mov or cmp fwait sarl xor xchg add (bad) int3 jbe cmp decl test rex.B (bad) sbb retq add pop sub in mov mov icebp scas rex.WXB sbb mov loope push pop leaveq stc mov (bad) cmp adc out orl loop xchg out or mov (bad) std or loop (bad) add (bad) mov out imul add repnz xor xor repnz lret pushq repz rex.WX data16 (bad) in jnp movabs xchg lods cltd (bad) not movb je adc xor mov (bad) cli jg stos repz in in mov cltd sbb xchg push movabs fcmovne imulb jmp mov mov sub mov mov sarb sahf cmp cmp (bad) retq pop hlt rex.WXB mov cwtl lock cmc pushfq in movb out int3 mul loope cmp sub orl out (bad) xor fnsave pop scas and (bad) andl int3 sbb mov jo (bad) mov (bad) mov data16 or jle (bad) rex.WRX int3 enterq mov bnd or (bad) xchg mov mov (bad) mov test int rex.WX sbb push sbb lods out out rex.B jns sbb (bad) pushfq (bad) mov sub imul (bad) jl in add (bad) fucom mov rex.RB rex jge cmp or (bad) rex.W test (bad) rex.WR rex.WRX xchg hlt lods jrcxz int test mov xor pushfq (bad) mov (bad) cmp pushfq insl popfq fnstenv lea mov push addl (bad) mov or lock (bad) mov xchg rex.WRXB cs icebp pop jnp jae mov movabs test movsl xchg add lret sahf fcoms rex.X (bad) in push mov (bad) movabs mov sahf rex.W add pop test jno jrcxz stc sub loopne fnstenv lods negb (bad) loope (bad) sub in out (bad) jo sti lods stos add insb je push rex.XB fmuls mov sub sub jbe int3 xchg ds (bad) and rex.WRXB hlt in std and movabs (bad) fimull int3 xchg test es sbb retq fimull je loope cmp cmc lods ror test (bad) bnd push mov outsb and (bad) rex.RB (bad) mov pop jrcxz mov mov movslq in cmpsb clc or stos (bad) pop imul add mov mov jne sbb mov std in or add (bad) (bad) rcrl sub mov insl (bad) in (bad) (bad) rex.W fs rex.X and rex.WRX rcrb movabs sub jle orl add in sub (bad) push xor adc (bad) mov cs (bad) (bad) rcrb jge mov jmp adc sbb mov callq test sub adc rex.WRX shrb (bad) or mov loopne sbb popfq mov leaveq xchg imul out rex.WRB rex.WR rex.WR enterq mov adc mov or (bad) adc (bad) sbb sub adc push push lea movslq or ds cmpsb (bad) rex.RXB outsb jmpq lods push rex.RX pop shl enterq (bad) (bad) mov xchg pushq outsb and rex.WRXB js (bad) (bad) mov mov (bad) test cwtl movabs sbb test xchg and push cwtl pushq rex.WB push loopne cmc leaveq xchg xor int pop hlt and (bad) and sbb adc mov mov lea ffree movabs add lods mov pop in movabs enterq rex.WB int3 fldenv sbb mov test movb xchg xlat jne add cli lods repz ds xchg jmp (bad) stc mov sahf fmuls popfq in xchg or mov (bad) faddl mov add and jae jg sti jrcxz lods cwtl (bad) jrcxz test repnz and retq movl rex.RB sbb loop mov (bad) cmc leaveq popfq rex.RX fwait mov ja cmc add repz (bad) jmp and iret rex.WXB data16 and xchg cmc in (bad) sub callq fwait xor enterq pushfq mov sub sbb pop fimul add adc rex.WB (bad) rex.WRX enterq test adc xor xchg xor rol rex.B rex.WR (bad) pop add rex.WRX in mov test test (bad) mov sahf cmp push mov and push cmc movslq xor gs rex.XB movabs mov rex.W loopne xchg pop andl je add cld test (bad) adc sbb (bad) lock add scas add insb (bad) jae cmp mov cmc ja adc out xlat rex.W adc loope adc xchg add mov loopne add jmpq sub sub loopne adc insb mov retq adc test pushq add sub xor repz jbe and xchg movabs xchg cs loopne (bad) insl or rex in (bad) addw xor retq xor repnz jmp in popfq cltd pushq xchg jmp jmp popq adc push (bad) rex.WRB stc jno (bad) stos or pushfq notl cli push rex.XB add imull jmpq push lods (bad) enterq push push mov adcl push (bad) mov lea or push sbb scas mov test mov lret pop vpslld jne sbb (bad) pop add rex.XB rex.R pop sub pushfq mov out int adc pop cmc repnz pop and cmpsl callq cli fcomi rex.WRXB xchg jrcxz xchg cs jmpq loope xchg rex.XB leaveq lahf rex.R in icebp jmp sbb and test hlt rex.WRXB rex.WR rex.WRX mov xor in lret in mov rorb hlt outsb icebp sub adc and retq rcll push rex.WRX rex.X (bad) (bad) scas sbb loope cs pop fimull add out je (bad) or xchg fiaddl xor mov movsb clc (bad) testb cmpsl and mov add movabs add rex.RXB fld lods in xchg std mov push orl movabs rex in (bad) cmc idivb sub repz lods cmp xchg cltd mov add jecxz movb rex.WRX xchg int3 test xlat (bad) rex.WRXB rex.XB (bad) or mov xlat (bad) iret fisttpl (bad) mov cs popfq add add push (bad) loope movb add test adc idivl movabs pop (bad) mov and cs js jae repz rex.R jge retq retq cmp (bad) rex.X (bad) sbb shr rex.RX push stos int idiv vcvttps2dq out ficoml and pushq dec shrb rex.WRXB sahf rcrb (bad) callq clc pop add cmp shll subl (bad) adc rex.W (bad) movabs es pop rex.RB (bad) sub (bad) rex.WRXB or leaveq scas mov test cmp mov sub sti hlt and cld jo rex.B rex.W adc sbb pop jbe mov adc stos insl fbstp sbb div nop cmp imul xchg faddp add rex.RX retq test jmpq add movsl rex.WRX rex.XB xchg mov lock mov outsl xchg adc pop lods lods xchg push mov mov mov shlb sbb xchg (bad) rex.WRX insb imul rex.WRX out js xchg pop stc in sub push movabs jbe repnz adc in (bad) sub pushfq movsl (bad) clc cwtl outsb jmpq in test add decb movabs fistl pop scas (bad) mov es stos jo mov (bad) jmpq (bad) in rex.WX sub repnz jp lea xchg cli fisttpll rex.RX rex.WR mov add mov rex.RB fistp xchg out (bad) or imul movabs callq pop and cs rex.RX cmpsb js insl jb pop (bad) retw (bad) cmc mov xchg (bad) pop (bad) lea sbb sub idivb repz (bad) sub in mov or sub loop callq outsl (bad) cli test pop hlt and rex.X fdivr rex.WB movsl psubsw (bad) (bad) mov movslq jmpq adc je xchg rex.WB movabs loop (bad) sub cmpsl in gs test mov xor js mov (bad) js xchg mov (bad) add sti mov add xchg sarb add fxch add or jae cmpsb mov leaveq push lret xchg leaveq test xchg stc (bad) jl jge sub int mov fisubr or icebp lea (bad) test movabs mov xchg (bad) xor xor mov add or scas mov jle or (bad) mov rex.WB rcr or adc decb rex.WB test lods or (bad) add sub leaveq int3 movabs or cmp movabs jg xor outsl repz (bad) jb add test data16 iret adc mov loope xchg xorl movabs (bad) (bad) sbb (bad) movabs cltq fadd jae lret add cs insl adc mov xor out repnz loop (bad) fwait lods movabs pop lock mov scas int3 jmpq mov repz (bad) cmp (bad) xchg xor rex.XB rex.RX imulb scas push add xchg testl rex.WRB rex.WRXB out je pandn cs lahf add sub jns rex.R rex.WX orl rex.R repz cli je movslq or rex.WB loopne xor and xor mov movsl movhps (bad) mov mov pop (bad) mov pop jns pop xlat retq or mov mov mov pop int push mov (bad) cmc shlb lret and callq cmc pop mov mov push cmp rorl sbbl jns retq fnstcw testb pushq lock (bad) (bad) mov lock lahf push orb xchg (bad) outsl (bad) sub or mov cmp pop out int test mov mov sub adc fstps pop rex.X add rex.WR (bad) in add rex.XB (bad) pop out push mov add addr32 (bad) or sbb sti jo adc mov pushfq test cs mov out shrl imul js sbb lea jo (bad) retq adc add rex.RB mulb out out (bad) adc and lods mov and outsb (bad) jle int3 lods cs or pop mov mov cli cmc pop or loop xchg ds imul xorl (bad) (bad) std callq push mull pop rcll jno (bad) repnz xchg rex.WXB add loope jrcxz and lock leaveq (bad) rex.RX fsubrs popfq lret push sahf mulb out (bad) insl in xchg leaveq (bad) repnz (bad) pop xchg int fmuls enterq mov jmpq add rex.RX cs sub pop cli rex.RX (bad) retq jp add xor loope jrcxz subl retq out rex.RB sbb in js (bad) sar cli pushq xor rex.WX int mov adc (bad) mov or jbe jbe sub out and (bad) xchg (bad) gs in (bad) loop in jg xor (bad) jrcxz push (bad) cli notb and (bad) or push fdivrs jl pop test fldenv mov and (bad) xchg (bad) jno rex.RX cltd xchg int pop rex.XB mov sub mov cmc jno rex.WR (bad) retq adc mov idiv iret rex.W xlat xor out add sub fmuls (bad) mov in shl jb or imul sti or rcrl and lea (bad) (bad) sub cltd retq (bad) xor mov add sub in (bad) testq sub xor callq (bad) jge mov rex.RX repnz cmpsb fimull addb mov adc (bad) xchg test repnz rex.RX xlat xchg pop xchg subb xor rcrb jmp movsl in mov sub (bad) in test (bad) mov out in callq add xor xchg pop in jne (bad) cmc mov icebp (bad) cmc cltd mov add callw sbbl sbb out imul decb stos clc rex.RX lock retq test cs mov mov mov test mov or cwtl sub sbb mov sub and cmp cltd out push push jno movsl cmp jmpq xor rorb cmp sahf rex.RB sti (bad) and int3 lret rex.RX movabs (bad) add enterq mull mov add rex and lock sbb (bad) pop movslq in imul adc sbb mov push movb cmpsb in sbb pushfq mov add pop int (bad) retq (bad) pushq imul rex.XB add (bad) and mov movabs scas adc push mov add xor cs movslq jmpq and pop nop jno jnp xor loope or mov stos sbb xor jrcxz xchg out add xor rex.WB xchg and fimull adc (bad) loopne jno retq (bad) sub mov cmpsl popfq or shr (bad) test movsb (bad) fnop jl rol or test insb rex.XB movabs add cmc jl mov add lock mov test push add push (bad) fldl lock add sbb movabs imul sub rex.WRXB rex.X in pop and stc rex.WXB int3 mov pop (bad) rorl (bad) icebp flds addr32 test jg cmp and jmp (bad) xor pop icebp ficoml push and cmp es loopne rex.WRX sbb add int3 push mov int3 cltd sub rex.RX fisubr sub iret mov movabs imull cld (bad) mov jge sub int test mov or add rex.RB rex.RX push lock adc int3 faddl mov jns mov rex.WX rex.WX int mov and lret xor rex.WR insb rex.WXB mov jns push xchg sahf jns xchg pushfq movabs retq vpaddsw enterq (bad) mov add sub testb (bad) jg and adc xor rex.WXB xlat (bad) jrcxz retq test rex.R or cmp (bad) cltd (bad) sbb movabs test int3 (bad) rex.B int movl cs cld (bad) cmp xchg cld std xchg sub jae mov and xchg movsl push (bad) clc scas insl or cmp cli rex.WRX movsb jns jns addl lods sti xor sahf xor imul xor test ja xor xor mov xchg rex.WB (bad) pop xchg ja rex.RB pushfq rex.WR mov mov adc enterq sahf rex.RX (bad) xchg and (bad) mov rex.RXB repnz add or sub mov fistl rex.RB in mov sub rol mov xor movsb repz ds insb sub (bad) js icebp adc jge fsubp or (bad) xor adc cmpsb cld (bad) rex.WRX stos rex.RB cmp sahf jl addr32 fwait mov enterq ja xchg rex.RX rex.WXB sbb rex.WB pop xchg rex.RB jo pop cltd fcoms pextrw xchg or test or jp add fcmovne imul mov loop (bad) sub callq and rex.RB or sub push mov sti adc rex.RX test movsb push or pop movabs pop rex.XB rex.WB sbb xor mov pop rol xor out add sub rex.RX (bad) incb movsl in iret orl in add pop add enterq cli push (bad) movb movsl lret out (bad) (bad) lods or rex.WR add repz mov xor stos pushq rex mov fninit (bad) rex.B sahf sub sbb ds (bad) ror popfq mov cmp nop test sub (bad) clc (bad) cwtl xchg rex.RX or iret mov lods movabs cmc repz mov movabs (bad) (bad) repz pop in jrcxz push (bad) movsl out movsb rex.R rcrb add retq rolb fisubrl and or pop sti jae mov adcl xor pop mov sub xor movabs jle (bad) incl push pop fs rex.RXB repz in (bad) fbstp sub lret cmp (bad) and rex.WRXB data16 lahf lret pushfq and add sub nop loopne in mov rex.W (bad) mov sub pop mov popfq enterq or rex.WB loopne (bad) and sub in imul mov mov and test (bad) notb sbb int sub hlt cltd rex.X icebp movl mull rex.R xor rex.WRX loop (bad) (bad) (bad) mov sbb or xchg lea xchg (bad) rcl push or xor and jg adc scas jrcxz (bad) and or repz loop sbb xor rex.XB sub cmpsb test and add adcl and retq sub cmp or fdivl fs sub cmp pop (bad) xlat pop (bad) sbb sbb test retq shll (bad) repz test stos pop int3 pop cmp fiaddl mov mov sti add (bad) lock loope lret cmp repz xchg roll pop retq jmpq repnz (bad) mov clc cmp jge lret (bad) addl rex.W fdivl cmp sub mov jb mov test jp in cmp insb lret jbe rex.WRB (bad) pop pushq fbld mov (bad) cmp sub cwtl fimul jno,pt (bad) pop (bad) mov sub (bad) xchg (bad) sub pop (bad) lea imul xchg (bad) in loopne rex.WX popfq movsl iret jne fist rex.WX mov cmp (bad) xor rex.RB lret add mov cmp fisttp lea rex.RXB lods scas sub xchg loope (bad) pop enterq xchg add and push push (bad) xor sahf mov xchg push int repz (bad) ffreep fprem1 xchg cs notl or stc pop in callq jge xlat movsb lock imul (bad) (bad) rex.B rex.XB push mov pop and (bad) (bad) mov mov xchg ds (bad) repz add (bad) xchg pop outsb push sub cld xchg (bad) callq callq hlt push lret retq rex.RB movabs xor pushq cmpsb xchg (bad) imulb (bad) pop (bad) jbe fimul fidivr push mov jbe cmp xchg mov icebp outsb rcrl imul lock cltd rex.B xchg rex.RXB clc lods and jrcxz rex.RB fwait in xchg xchg adc movabs repz rex.WRX mov cs jns or rex.WR (bad) cmp mov sti imul pop mov fwait fs fs test cmpsl add and xor pop in mov rex.B (bad) repz in sub (bad) mov (bad) sub test xchg pushq sbb (bad) mov or (bad) mov sub retq sub pop hlt fisttpl or pop stos fwait movslq push pop mov movslq xchg cmp jbe and notb imul je mov repnz (bad) imul jmpq add sub pop (bad) adc jbe ficompl sub repz shl sub retq jno std xchg repz fisttp (bad) (bad) jmp mov mov adc and (bad) andl rex.WB pop test xorb fdivrl pop mov lahf adc xchg loope fistpll and movabs loope addl add push or jrcxz sbb test xchg sbb jo xor pop cwtl mov icebp mov rex.RB lock rex.RXB sbbl rex.W repnz (bad) cmc (bad) (bad) mov lods dec mov incl hlt sbb mov clc xchg outsl movslq sub rex.WRB xchg subl jmp mov lods (bad) xchg out mov out idivl (bad) enterq jrcxz mov or mov incl outsb stc xchg push pushq xor pop xchg xchg callq in (bad) in movsl rex.WB lock xlat (bad) mov cs jns rex.WX (bad) insb jmp jrcxz fs int lretq rex.WX rorl (bad) (bad) out and add out icebp (bad) adc lahf xchg in movsl xor rex.WRB cld pushfq (bad) out and mov or mov mov mov and movsl fstps gs movabs leaveq jb add mov sti or ds test loope xchg in movsl jmpq (bad) or rex.W sarl jo cmp dec and or loop (bad) negl add (bad) in icebp lea out sar lret in test jrcxz rex.WRX xchg pop shrl insl (bad) lret rex.WR (bad) mov gs rex.WXB imul mov in xchg sub movabs xchg (bad) out (bad) mov xchg mov stc sub test mov (bad) stc jnp imul in adc lahf xchg jmp sbb rex.WRB add mov or pushfq xchg lock out and mov (bad) and push jb (bad) cli nop cmp out movsl sbb push je add jne in sub jne (bad) fnstcw mov vmulsd and mov add rex.WXB in psubw jo (bad) (bad) out and xchg loop scas cli xchg movabs divl adc xchg sub sbb add rex.WR mov clc mov sahf in movabs out icebp movabs pop pop orl or in xorl nop jge sub clc jg out jno movabs adc xchg (bad) (bad) out and mov push adc pop adc out sbb or xor lea or adc xchg (bad) cmp int3 mov jne cmpsl movslq mov mov xor lret nop hlt mov jg sahf int3 jb jmpq rex.B movabs ror rex.WRB push xchg popfq pop jae xchg outsb xor rorl and rex.WB or stc imul imul hlt jno or rex.RB hlt pop cmp movabs stc flds popfq push test xchg rex.WRB in icebp rex.WB psrlw add jmpq (bad) cmp test leaveq xor leaveq add sbb push rex.WB add rex.B jne orl xorl icebp jns push add imul out icebp sbb add or jmpq std icebp (bad) rex.WB add and flds sub rex.WB mov add icebp leaveq adc stc out icebp loope jns jmpq jrcxz xchg cltd leaveq push rex.WRB mov icebp mov jrcxz xchg test push out icebp pop rex.WB add rex.WB fldl rorl test stc imul add test jae sbb jno push lock mov add mov lahf rex.RXB pop loopne (bad) lea test add mov test outsb (bad) shll test (bad) loope mov mov std xlat (bad) (bad) out pop cwtl out or sub int3 push ror mov sarl callq and icebp out hlt cmovns sbb repz shrb (bad) (bad) jnp (bad) jb notb (bad) or std pop cli fwait lret stc (bad) adc cs (bad) out push es rex add sbb (bad) outsb test mov hlt xchg leaveq rex.WR sub (bad) clc loope jmpq icebp movsb or scas (bad) xor mov lret add int jg or pushfq mov mov mov sbb lahf scas loope test sbb ss lods mov xchg nop mov cmp repz lock add in rex.XB std add insl jne leaveq xchg mov mov (bad) movsl sbb xor jrcxz movabs push std xor loopne cmpsb icebp stc in lock jnp sub imul cs rex.WXB popfq xchg pop xor pushfq rex.X rorl and mov jp add rex.WXB enterq pop pop xchg add (bad) adc (bad) in cli leaveq rex.WR cs icebp rex.WB callq out mov cmpsl (bad) push mov lock rex.WRXB repnz stc add int3 pop mov hlt int3 sub notb and cld lret in cltd xchg iret (bad) jo std (bad) (bad) cmp scas pop mov scas movabs sti xchg cld movsw mov out fwait hlt lret je rex.RB (bad) sub es xor and jge leaveq add mull int rex.WR pop rex.WR stc pop rex.RXB (bad) out fadds rex.WB es nop rex.WB movabs mov sbb adc rcr pop div jrcxz repnz cmpsl callq retq test pop fwait addr32 sub sub sub adcl or mov pushw sbb out (bad) push hlt movabs callq cs scas adc fdivs fbstp in icebp sub sti (bad) push mov xchg rex.WRB adc sbb loope xchg or and fwait cli repz loope,pn jl icebp sub push gs mov push rex.RXB rex.X mov jrcxz pop mov in adc jno or (bad) mov test (bad) mov js sub int3 insl loope cld or movsl mov outsb rex.WXB divl mul (bad) int3 jbe xchg scas movabs or out movsl mov mov sub xorl sub jrcxz jg test rex.W (bad) out movsl pop ds repz sub mov adc mov out icebp adc mov (bad) pop mov or xchg in scas fmulp rex.WB movslq mov rex.RB adc mov lahf jae adc push jae in mov clc push movabs sbb repz out and pop (bad) loop out icebp rex.WB (bad) adc mov sub imul (bad) (bad) callq icebp jmpq icebp hlt adc cld loope movsl iret movslq movslq pop lods cvtps2pd cmp jrcxz push in ficoml jb loope (bad) insb rex.R sbb shrl lods loopne movabs and addr32 (bad) cli rex.X fidivr (bad) pop cmc mov nop or pop loopne jno fidivl leaveq fisttpl sti enterq (bad) cmp movabs (bad) pushfq (bad) mov (bad) cs add or rex.WB mov test and sahf imul mul movsb add (bad) xchg rex.WB lock mov (bad) test fildl lea add in rex.X (bad) and movabs xchg xlat (bad) out pushq test and sub jns xchg add rex.WXB cmp ror xchg cs mov xchg pop clc callq movabs data16 add push leaveq and push testb and cmp (bad) mov callq retq adc pushq movsl repz clc rex.WXB lock rex push jmp or xor out ror in mov test js (bad) pushq xchg add bnd jmpq (bad) jl pop mov sbb sahf cs rex.R iret scas or adc imul (bad) push and push movabs std in jmp rex.WR mov repz xchg pop in or mov mov out xchg sbb outsl pop jl pop movabs or incl pushq ja movsl sub test ja cs rex.XB mov add rex.RB rex.XB icebp (bad) fldz loope fld pop mov mov test (bad) (bad) mov jae std jo es cmpsb pop (bad) xor fld imul jrcxz leaveq (bad) mov pop movabs xor fsincos ss movabs out hlt sub and int jnp sub stos pushq and push push in xor rex.WRX add fwait jrcxz int outsb rex.WB and movslq cmc mov (bad) and or jmpq in mov stc cmpsl (bad) repz rex.WR stos loope or rex.R repnz iret rex.XB rex.RX rex.RB rex.WXB loope push rex.WRX icebp pop xor ja sarb or movabs lods pushq repz movabs mov vpxor jbe int3 insl sti mov rex.B adcl sub pop (bad) xor xlat div sar cs in stc cmp lods sub scas cmc stos add out (bad) (bad) rex.RX in mov (bad) sahf loopne lahf and callq jne repnz push enterq xchg or or in loope movabs nop cmp jmp mov (bad) (bad) outsl jrcxz fnstsw lock (bad) sub loop sbb cltd mov mov fiadd hlt lret (bad) cmp movl jmpq (bad) imul rex.R (bad) sahf mov (bad) jbe nop mov pushfq rex.XB rex.WRB rex.WXB rex.WR (bad) adc rex.RXB (bad) or cmpsb or (bad) out addr32 rex.RX or enterq or shlb movsb push scas enterq repz jrcxz mov add idivb jmpq incb movabs shlb test jo cmp (bad) test rex.WRX cld sbb out icebp mov add (bad) iret push pushq cmp xchg (bad) mov and push pop jmp cwtl push sarb xchg xor sub and (bad) lods sarl sbb pop sub add jbe adc mov cmpsb cli push mov add xchg and (bad) cmp sbb and outsb test sbb push loop cmpsb fcomps test jns fwait jp sub (bad) fmull cmp add push jno callq test scas (bad) push rex.RB pop icebp mov mov mov mov and (bad) and pop mov out add rex.WRXB xchg gs mov jmp cwtl mov movabs icebp jmp pop mov xlat pop (bad) sub lods jrcxz add jp adcl pop xchg fwait hlt in (bad) xchg stos rex.XB push lret cmp cs rex.WXB rex.WB out sub push stos and mov shll movups mov jmpq loop mov lea int (bad) sbb xor imul xchg or (bad) adc cmpsl callq and cmp rorl or icebp in mov cmp out mov add (bad) hlt enterq jbe (bad) fbstp lret add (bad) (bad) out scas mov icebp in jmp mov jno mov mov fdiv mov imul xchg movl rex.R xchg rex.WX push lods vorpd pushfq shlb xchg out and cmpsl data16 (bad) popfq (bad) pop callq mov jae (bad) push test ss mov or cs mov xor rex.WR iret (bad) xor nop (bad) rex.R rex.RB sub mov jp loopne retq (bad) adc sub int3 and kmovd (bad) rex.WR and test (bad) lahf fs int3 pop rcrl imul movslq adc cmc lahf mov rex.WX cli int3 cmp (bad) pop xchg cltd test push pop sub (bad) rex.WRXB ds or repnz int3 mov cs imul (bad) vpmulhuw sahf xor shrb xor mov movsl (bad) xchg push repz int3 pushq jmp clc (bad) icebp cmp (bad) sub (bad) xchg cmpsl sbb cmp rex fwait jg add (bad) (bad) jb rex data16 pop jmpq nop rex.W jo,pn hlt jo (bad) je pop sti rex.WB rex.WRXB sahf pop cmp jrcxz mov jrcxz add cmc (bad) cmp test rex.X test fstpt lret or adcl outsb movslq mov cmpsl lea movabs pop retq rex.WB jmp icebp (bad) rex.WB rex.X enterq clc ja movsb lea imul adc test (bad) xor fisttp add and rex.WB sub test add lret adc rex.WR cld rex.WX test cld push add icebp adc rex.RXB rex.WRB cmc int cs je movabs mov leaveq (bad) and pushq (bad) cs mov enterq loope xor sbb sbb int cltd rex.WRB loope rex.RX adc gs mov callq hlt pop add or pop test sub gs rex.WB cli xor repz fmull mov sub movsl subb leaveq add hlt jle adc leaveq adc rex.WX out movsl cmpsb movabs (bad) scas int3 sbb xor jmpq lock hlt icebp leaveq (bad) cld cs andl mov movl stc nop out sarl rex.WXB xchg negb movabs (bad) out xor rex.WXB cmpsl (bad) jrcxz xchg mov cmp adc (bad) sub (bad) xchg scas (bad) xor fildl xor test push (bad) cmp cmc leaveq jrcxz (bad) rex.RX out sub pop lahf xorb (bad) rex.XB test sbb push (bad) fcoms xchg pop sub subl (bad) and (bad) callq mov fs mov fs enterq add pop adc pop add pop push sub bnd (bad) iretw jp xor hlt imul push andl cmp add or mov repnz or or xchg xor push cmp push rclb mov rex.WRB (bad) xor cmp jns or rex rex.R (bad) jb or pushq xchg pop hlt (bad) xor and (bad) lahf movsb add icebp shrl repnz int3 mov cld andl rolb cs movabs vpor rex.WB jae pushfq add rex.WX push rorl iret (bad) sbb rex.WRX rex.W retq shl int mov and rex.WRB scas fsubr es push leaveq adc mov sub jb movabs fsts mov mov fnstsw cmc add xor (bad) sahf in retq jg rex.X rex.RB fidivr popfq test (bad) pop (bad) in movsb data16 pop cmp sbb adc (bad) mov cs cmp insb (bad) (bad) imul sub pop add pop (bad) (bad) mov icebp loope adc (bad) in and cmp xor (bad) sub sub imul pop fldl adc push xlat jnp movabs (bad) sbb adc je enterq adc imul or out mov out rex.XB xlat outsl movabs push mov andl idivb cmc in clc cmp rex.WRB rex.WRB rex.WXB sbb pop fwait mov vpunpckhwd rex.RXB rex.WXB enterq imul loope fildl or (bad) fimull rex.W sub fsts (bad) sub add and (bad) (bad) cmc nop cli (bad) rex.WXB movsl test in leaveq sub cmp sahf fnsave (bad) add push ja (bad) cli lea (bad) sub pop pushfq leaveq je movabs pop mov jae (bad) (bad) or push mov xchg jge and xor mov cld data16 cld test mov je cmc test adc out fdivp add scas std cmpb test movabs push mov (bad) test in xchg or jge pop test mov fdiv (bad) pushfq (bad) xor mov cmpsl mov ffree mov add jl mov mov orl add jmp repz (bad) or jbe movabs (bad) sbb loop xchg (bad) sbb sub jmp (bad) xchg movabs mov sub je add cmpsb loope sub add mov push popfq pop je xchg xchg fistpl mov std mov lret fiaddl push repnz test movl xchg shufps faddl sbb (bad) (bad) sub movsb icebp enterq lahf sub xchg add leaveq fild sbb (bad) add (bad) mov stc mov xchg nop add rex.WB sub jmpq jns fs fmul rex.R cld sub push in xchg adc movslq clc xor jne rex.WB lea fwait in (bad) fldenv rex.RX rex.RXB nop lods test repnz test loope push test leaveq fs (bad) (bad) lret movsl xchg mov test in (bad) fucomip cmp and in push xorl lret mov push out xchg rex.B rex.XB or or adc and (bad) mov mov mov repnz or add mov leaveq add xchg in (bad) in rex.RB rex.RB callq cmc jmpq fsts xor clc cld rex.W fmull (bad) retq and xorl ds (bad) xor sub adc mov sbb movabs ss mov sbb sub fldenv sbb pushfq icebp movl sarl (bad) cltd orl std in pop in rex.W (bad) iret test repz xchg testl (bad) (bad) and cmc mov xor (bad) mov xchg (bad) sbb movabs movslq (bad) js cwtl movslq retq sub es fsubrp rex.WX sbb mov mov mov nop rex.WR mov lret add hlt callq fs sub imul movabs mov scas sbb enterq lret cmpsl jno (bad) fwait (bad) vaddsd pop and (bad) rclb scas sub sub (bad) repnz int callq xchg xor and cmp or push (bad) and sahf (bad) mov test (bad) adc adc adc jmpq (bad) adc pop mov test push jle or sbb (bad) xchg (bad) (bad) lret rex.WB repnz int (bad) repnz (bad) or (bad) loopne mov adc retq lods ds std in (bad) mov cs jnp loopne mov fiaddl (bad) mov scas jmpq xchg and mov (bad) (bad) in hlt pushfq es xchg pushq cmp fisttp ffreep add sub rex.WXB rex.WRB repz mov rex.RB vpmullw addr32 movabs lods add sub retq cs cmp or adc adcb pop test rex.B sub push callq mov loop rex.B rex.RB rex.R rex.R es test jrcxz in leaveq (bad) cltd mov movsb retq (bad) (bad) (bad) cmp sbb fdiv rex.W rex.WXB add jbe mov iret clc adc retq (bad) mov int3 jle ja cmpsb cmp cld retq rcr cmp mov movl (bad) int lea test jmp in xchg loope xorl adc ljmp mov sbb xor ficoml cwtl xlat jrcxz push xor stc test mov rex.XB lods pop ja sub mov xchg mov leaveq (bad) and mov cmc cmp adc mov cs jg rex.WB xchg leaveq rex.RX stc rolb xor cs out imul incl sub add xor (bad) rex.XB cmp sub push movsb bnd lret rex.RXB addr32 orb int cld pop div callq mov cmovge ljmp addr32 stos loope cli jp hlt push in movsl xchg xorl leaveq adc add xchg lret cli je rolb fwait sub cmc enterq lea movabs test (bad) rex.WB jmp int3 hlt iret jrcxz (bad) rex.XB repnz enterq xchg jmp pop add jmpq (bad) mov cld test pop xor popfq rex.R (bad) retq lret xchg loopne cmc rex.WB cltd jp jae fcoms retq xchg lret rex.XB add clc pop or xor sub mov enterq shlb xchg rex.XB cld (bad) and leaveq cli leaveq cmc (bad) in lahf enterq adc icebp test and cmp out outsb stos cmpb xchg (bad) ja mov pop mov rex.RB add insl retq jmpq jbe jrcxz int3 repz adc stc int3 xor adc hlt adc fwait add cmpsl (bad) sub sub (bad) or icebp (bad) callq xchg (bad) imul loope rex.RB cmpsl rex.WR stc std (bad) clc mov data16 push jmpq std loope rex.R rex.WRB xchg xchg mov jmpq sti in cmpsl test xchg cltd (bad) sti mov (bad) (bad) jb scas xchg xlat idivb in jno loop out ss pop add icebp lods sti ror lret fisub jo imul mov imul fs lret jrcxz mov rex.WR rex.WXB pop loope mov (bad) pop test cs test iret jno scas (bad) push cmc jp in (bad) (bad) stos std pop cmpsl (bad) movabs (bad) jmpq (bad) loope pop js jns addl jmp mov mov hlt test fild jns (bad) (bad) push int or mov xchg outsb sub cli mov rex.R rex.WX jg adc adc retq xchg (bad) shl jbe repz jno ds testl mov or mov (bad) (bad) mov xchg (bad) add fild lods sbb rex.WRX lock ss scas pushq (bad) push and mov mov nop or (bad) pop sti jmpq rex.WXB (bad) sub movsb (bad) sbb enterq mov push shr imul xor mov repnz cmp std cs rex.RX cmp movsl jg movabs add sahf and mov sbb sub mov mov in leaveq int3 rex.WB callq mov mov fcmovu cld in sub lret (bad) (bad) fnstsw add jbe add mov mov int orl cltd (bad) and sub adc test (bad) xor xor fldt out (bad) lea hlt rex.B mov (bad) jmpq mov (bad) pop mov jle and cltd rex.R int cs lods stc rex.XB rex.RXB cs add loope int rex.W jp (bad) (bad) loopne (bad) fidivrl incb mov enterq (bad) push sbbb cli sub fildl outsb imul (bad) fs xor fxam sahf cmp (bad) lret lods notl retq icebp add movabs sahf fwait lret or cmp jno adc lods mov js or roll or xchg pushq rex.WXB xlat xchg push callq and rex.R popfq or ss retq mov popfq pushq fbstp icebp imul mov xor sub (bad) (bad) cli or test rex.WX cvtps2pd cmp rex.X icebp (bad) jno xchg retq mov pushq xchg loopne lea ss cmp enterq (bad) push xor int out cmc mov mov sub lahf sub (bad) cmp (bad) cmpsl callq sub icebp sbbl add lret sbb or clc movsb ja push cmc pop insl pop cmp xchg sub loope pop es sti and cs in add or add xchg enterq rcrb jmp retq xor sub rex.WR movabs fldenv (bad) pushq add mov out imul imul mov test jbe sub and movabs fistp (bad) retq in rex.WR pop test (bad) int3 xlat in in xchg mov fcomi and rolb (bad) movslq fistp pushq out insl imul test adc (bad) jp pop sbb xor je or xor and jbe sub (bad) movabs (bad) (bad) xlat jne or (bad) (bad) sbb cmp mov imul pop xlat cltd add loop sub imul test (bad) mov sbb or cmp add outsl rex.XB adc sbb movabs rex.WRB xchg pop lock (bad) and sub mov mov rex.RX push and mov int3 xchg test push jns add enterq and enterq rex.RX testb mov rex.WXB (bad) leaveq push movsl xor int3 (bad) cwtl repz retq callq fmul pop iret movabs cs subl std jo mov leaveq mov rex.RXB sbb push xchg in test popfq mov adc loope xor in rex.WX add je (bad) mov mov in movabs icebp adc fild push (bad) clc (bad) jae shr jae mov enterq lret xor movabs or retq xchg pop out hlt mov fucomi rex.WXB mov add mov jmp jmpq mov loope stc cmpsl callq mov sub pop leaveq out fisub jle lahf cmp scas cld test (bad) hlt sbb pop mov neg (bad) jae (bad) push test js movabs mov mov scas lea xor (bad) push mov push rex.RX push in (bad) sbb stos mov fdivrl rex.WRB jp or push stos sbb sbb jns mov in (bad) push enterq sahf fstpl insl callq sbb push mov cli fwait and jns pushfq addr32 lret (bad) int sbb rcll mov (bad) (bad) rex.WXB imul std or or icebp mov es xor incl fildl sbb fstp pushq movsb std (bad) push (bad) out sbb fbld sub test pop mov addr32 or movsb (bad) idivb (bad) lret pop mov or fnop xchg rex.X hlt jbe sub cmp orl loop in movabs jle pop cmc jmpq or cs rex.XB rolb in mov fmull rex.WRXB cltd xorl test xchg mov (bad) jnp movsl sub ss sub and retq cmp out ficoml outsl jmpq (bad) and cmp pop leaveq xchg loop push cmc imul (bad) ss (bad) sub pop mov retq hlt (bad) (bad) fucomp icebp jb add rex.WRXB push jne sub sbb je push lret lea in adcl jmp rolb jns (bad) lock (bad) jp cmp xor xor adc icebp clc movsb mov enterq jns mov movsb (bad) jne xchg lret pop loope sub lret insb lahf adc mov (bad) cmp test callq int3 sub (bad) mov enterq cmc sar rex.B outsb push cld (bad) enterq push rex.WR jl rex.RB ja movslq pop xor loope jne imul repnz or mov (bad) callq popfq cmp pushq in (bad) callq gs mov or pop cmc fsubr rex.WB rex.W notb xor adc repz sub je in mov mov out xchg pushq adc or pushq sub jne or (bad) fst (bad) ficompl roll cmpsl loop xchg rex.B sbb stos xor pop fsts out sbb scas mov (bad) adc pop jp lods jnp movabs mov fsubl xchg jl pop int jbe add movslq in xor (bad) sbb (bad) or adc jns (bad) xchg mov cltd movsb in (bad) cmpsb push rex.X pop mov sbb (bad) rclb xlat xchg sbb cmpsb push add movb add rex pop (bad) mov movsl (bad) rex.WRX jp lret cmpsb fdivs and mov add push mov mov lahf rex.WRB leaveq sub (bad) rex.XB stc and in movabs fdivl fcoms in loopne or jbe hlt xchg and (bad) mov testb mov (bad) faddl add sti jrcxz ds sarl push jno fsubrl (bad) outsl xchg (bad) add sub rol int3 enterq rex.RXB movabs int add rex.RX jno (bad) addps cmpsl clc jno push rcll rcll sbb movslq xchg cmpl push popfq lods retq hlt repnz (bad) cli or add mov (bad) out (bad) sti lock cmp mov mov in (bad) and (bad) int ffree cmpb add sub pushq mov (bad) movsb sub cmp test sbb (bad) out (bad) popfq adc cmpb jp push rex.RX mov int cmc loop div push test or rex.B out cs loop add or enterq adc pushq mull (bad) push movsl sti push rex.WB pop cld fsubrs outsl or movsl pushfq leaveq sub xchg sub stos retq cmc sub xchg sub lock add or in movabs lock push push callq and jrcxz sbb stc mov pop retq sbb or pop sub and sub lock fucomp iret add add enterq add in rex.WX sub repz pushfq (bad) push leaveq xchg mov pop (bad) in mov push nop xchg es (bad) mov (bad) xor xchg mov shll jne adc adc fistpl hlt mov (bad) in int3 adc jno mov pop cs movslq fstpl add (bad) cltd lret movabs (bad) js mov es cld imul cs imul movsl xor adc mov sub scas rex.WR xor pushq cwtl cmp and rex xchg rex.XB fwait pop jmpq sub outsl es mov xchg sub (bad) xchg (bad) cltd mov (bad) (bad) test iret test rex.WB sbb imul rcrl test and shl pop movabs js and (bad) lret mov rex.X rex.WX int rorb (bad) addr32 pop shl shl addr32 lock lock mov sub sahf mov mov xchg (bad) loop xchg or and mov flds vpmulhw adc jbe clc xchg jo jmp xor jl and (bad) sub lock jnp insl cmp push xchg push or sub (bad) iret and repnz rex.X cmc xchg pop scas rex.W mov mov mov sub mov fild adc (bad) xor rex.WR xor sub jae (bad) (bad) gs sub callq xchg push es adc lock subl movslq lods mov test fnstcw js rex.XB in out and repnz std cmpl (bad) jge adc cmp sbb cmc rex.WXB cvtps2pi push add rex.B mov pushfq rex.RB roll nop (bad) retq out ficom xchg (bad) jno enterq mov out rex.W or push clc and mov test movabs jno mov (bad) leaveq hlt (bad) pop xchg (bad) hlt jb jae icebp rcl loope (bad) pop and and cld lret (bad) or roll rex.WR lods pop enterq vpsubw ss (bad) jrcxz loop decb xor (bad) cli pop fisub sub repnz mov mov loope (bad) movsl cmp rex.WRX sbb fiadd adc rex.RX add fisubrl shl (bad) xor mov negl push in mov xchg cld ss es mov mov rex.XB pop jo std lcall rex.B cltd mov and mov mov gs pop enterq fdiv mov (bad) (bad) out in test lock xor xor (bad) imul int3 rex.WB (bad) faddl xchg movsl negb (bad) jno rol (bad) rex.RX pushq xchg jno rex.WR rex.R clc xor sub movabs lahf or loopne (bad) shl rex.R xchg (bad) mul mov mov retq (bad) (bad) leaveq (bad) ss test lock add retq fisub jae test jo add cmp fldl add fildll mov rex.R rex rex add sbbl (bad) pop leaveq fstl pop repz (bad) xor xchg (bad) (bad) xor lea (bad) hlt sub jmpq test add (bad) rex.RX imul outsl out mov pop add nop rex.WX xor sub in repnz cmp mov add rex.WB adc (bad) imul xchg push loopne je mov pop stos out loope adc rcrl mov cmc or std mov push cld repz movslq clc and sbb jg push pop or jbe pop jge lea or cmp jo mov icebp int rex.WR setno (bad) movsl lods mov test rex.WXB mov je or incl add cmp (bad) rex.WR rex.WB imul fdivrp retq rex.WRXB lret rex.WB push incb iret push hlt push rex.WRX xchg mov jno (bad) xor cmc xorl xor out (bad) fstl adc mov sub pop in rex.W sub mov mov xor movabs in pop enterq pop callq sti mov (bad) (bad) rex.WR sbb cli fwait and add mov xchg sbb mov cld retq (bad) or imul xchg lea adc sahf add mov movsl (bad) push movabs leaveq movsl in test (bad) cli callq (bad) sbb pop (bad) adc notb jne std test cltd mov loopne and cltd sub sub fist (bad) test jrcxz out cmp add int3 rex.XB (bad) retq enterq fsubrl (bad) jrcxz adc push (bad) lods sbb (bad) sti hlt sahf rex.WB mov int3 pop clc cmp cmp loopne pop mov mov movslq cli sub rex.WRB outsl adcb jle rcrl icebp rex.B cmpsl jno (bad) xchg and mov div enterq add imul rex.WB rex.RX cmpsl or pop repnz repnz mov jl xchg jbe (bad) int shll mov (bad) cmp xchg jmp sti mov jno stc jnp (bad) movabs xchg mov (bad) in rex.X int3 fistpl int mov xchg rex.WR xchg add fcompp cld xor jrcxz (bad) jl btc xlat lock lret rex.WR test sub cmp rex.WB add imul or mov test rex.R pop adc (bad) mov rex.WB xchg jno adc add pop scas cmc test (bad) shl (bad) or mov scas enterq scas sbb push enterq cltd add rex.WR leaveq jbe sub test es lret (bad) rex.WB push jne iret and cmp (bad) push jno (bad) test rex.B test (bad) or cmpsl int lret stos (bad) test cmc int3 jns mov mov xchg pushfq fsub mov xchg mov rex.RX rclb lret cld int3 (bad) pop pop pushq jmpq xor rex.XB vandnps repz movslq mov jo divb and cmpsl (bad) mov mov rex.WXB rex.WB jbe sub mov sahf imul sti rex.R cld loop add mov int3 mov sub xchg mov ds lea loope imul jns sub in mov movsl test subl add js data16 imul jo in jle (bad) (bad) rex.WR mov pushfq rex.RX (bad) mov sub js test outsl cmp (bad) jns mov push idivl fwait out jae xchg push rex.WB loopne (bad) clc pop rex.WB (bad) rex.W mov xchg mov out xor xor (bad) mov mov xor mov mov pop icebp push mov xor cmp out (bad) sahf mov (bad) (bad) or xor sub repnz sbb pushfq xchg movabs or rex.WRX test add xor jae int3 cmp mov rex.B ds mov mov cs mov xor jbe cld insb sahf rex.WB shr rex.X jae rex.B iret movabs mov jb rex.W rex.B adc stc cmpsb rex.RB or mov jae fdivrl mov rex.WX push (bad) mov rex.RXB in leaveq lcall movabs or roll hlt add xchg xchg jae pop pop lods xchg mov fneni(8087 (bad) adc sbb pop (bad) mov test sub cwtl pop jrcxz (bad) movsb xor pop rex.XB repz test mov or out cld rex.WR in div (bad) mov lea std test icebp rex.WR mov je out test callq (bad) hlt loope roll cmpsl outsl pushfq mov scas outsb (bad) and sbb (bad) pop loope add or rex.RX rclb mov cmc ja cmp test pop cmc xchg mov mov jnp lods (bad) mov js rex.WRX xchg loope repz push in jl xchg jrcxz rex.WR (bad) mov cmp cmp setp push leaveq mov (bad) push inc sub sahf push lret and scas jrcxz xor retq cmp shr jg pop pop callq rex.RB add pushq mov (bad) movabs add pushfq popfq pop icebp js sbb xchg sub repz in stos retq (bad) mov pushq and pop enterq lret hlt movabs out add rcrb out rex.WR movslq out jno xor sarl rcrb retq js rex.XB sub loope rex.R mov test std (bad) jle or rex.RXB (bad) add (bad) retq out rorb divl mov orl cld movabs xor sbb insl add hlt adc in cmp (bad) sub cmp movsb out loope xchg movb in pushq rex.WR push jns push scas mov adc sahf cmp (bad) cmc push mov div movabs mov sbb (bad) (bad) and (bad) mov pop xchg in nop sub mov adc rex.B repz (bad) repz fisttpl movabs sbb cmp fcmovbe movabs xor cmc int3 test or xchg cld hlt retq loopne sahf rex nop lret repnz fiadd cmp (bad) out add sub mov lock mov xchg cmp sub lret mov push xchg push jae nop (bad) adc add retq mov sub (bad) (bad) sub pop sbb sahf xor push and mov or jae rex push rex.RB rex.X mov test add lret jg fildl andl lea (bad) hlt adc repz hlt (bad) mov mov jno loop (bad) rcll sarl cmp punpckhbw add movabs in jmp mov lret (bad) rolb sahf fcoms rex.RB rex.WRB jb rex.WRXB sbbb (bad) test and rex.W mov mov sbb in leaveq mov adc sahf sbb stos leaveq out push test pushq rex.WB mov in bnd adc fistpl mov imul xchg (bad) (bad) sbb cmpsb out jno (bad) pushfq jrcxz (bad) rex.WX data16 add retq cmp icebp leaveq mov (bad) mov (bad) mov scas mov movabs mov rex.WRX lock rex.WB push sbb mov jl clc sub cmc rex.W and lret test (bad) jl xchg xor movabs push and pop movsb sbb add push test fcmovbe xchg add enterq cmc loope,pn (bad) jno callq xchg (bad) (bad) xchg add sub testb scas out mov push int3 cli pop push xchg lahf rex.WR and adcl (bad) (bad) callq (bad) pop je fisubl jae or leaveq rex.B movsl in in (bad) (bad) mov mov sub mov int3 jae stos xchg jmp jl or jno adc xchg int int std sub rex.WR sbbb gs adc xor sbbl movabs int out add rex.RX (bad) mov rex.WX rex (bad) jmpq rex (bad) mov push (bad) enterq cs fwait lret xchg add fldl movabs push movabs loope rex.XB test xchg sub hlt cmp rolb xchg ja cmpl leaveq sub xchg (bad) sahf push (bad) pop xchg enterq sub pop jo divq in sub jmp and (bad) push mov xchg adc (bad) push repz out or lret (bad) xchg jmpq (bad) pop lret push jno,pn sbb add xchg push jbe add test pop fldl loope loopne or (bad) push scas xor xor fwait sub divl (bad) xlat xchg and mov callq int or (bad) adc fmull jb sub cs loopne rex.B rex.WRX push imul mov test (bad) (bad) out jge in add (bad) or adc pop cmp (bad) loopne sahf rex.W nop mov mov out jae popfq movabs in out rex.B cmpsb fistpl jnp (bad) xor (bad) retq pop sbb rex.WB or push pop adc addl mov iret mov mov out retq sub repz jne jo sbb loopne fwait imul xor jae xchg pop xlat adc loope leaveq movsb fwait rex.RB popq sub rex.R rex.WXB xorb cmp sub sbb rex.WRX adc mov mov push mov (bad) xor fsubl add leaveq jne pushfq (bad) (bad) pop rex.XB mov leaveq (bad) in fistpll rex.WX rex.W and (bad) pop xor cmp push leaveq sub jbe ffree sbb mov mov lea jbe in in sub rcrl test xchg xor imul repz int3 push enterq mov in cmpsb out lret rex.WXB (bad) and rex.WB movabs jrcxz xlat cld loope (bad) xchg jmpq xchg sub rex.RXB and cmp sbb test mov sbb (bad) test mov (bad) jle pop fld1 jle fnsave rex.X xchg pop adc sub test movabs xchg insl xor out xchg loop mov push lret push nop mov lods fadds add pop test loopne and rex.R rex.WB outsb retq (bad) mov test cmp add neg sub int cli popfq (bad) jbe in xchg movslq (bad) and xor push xchg sbb (bad) rorb jae rex.XB (bad) out fnop rex.WR movabs add jge shrl pushfq mov xor mov icebp or and adc insl push sbb adc add sub mov push sbb shrb xor xchg sub and (bad) (bad) (bad) pushq cwtl or (bad) out and and movsl mov vaddps fadds jno loopne mov or insl pop retq mov mov loope (bad) rex.W gs (bad) sbb sbb ss jb icebp lods adc rex.RB mov pop adc rorb rorl hlt or jl push sbb rex.X addr32 rex.RX rex.WRX es (bad) mov adc shrl (bad) in movabs cld (bad) xor or iret add push rex.R xchg leaveq (bad) and xchg callq repnz mov rex.WRX fisttp loope mov divl (bad) fcomip pop int3 mov cld rex.W fnop add out cwtl (bad) jmp (bad) pop cs or jne imull sbb jns lock movabs add mov test sub push (bad) ror mov leaveq leaveq xchg rex.RB rex.R xchg (bad) xchg xchg negl in mov sbb movabs mov xchg or cld xchg leaveq (bad) rex.RXB mov push lea push shrl retq je popfq rex.WXB clc hlt jne jno cli jno or xor cli adc sbb cli jp gs (bad) sub repz shrl rex.W (bad) imul callq mov callq mov jno repnz push add rex.WRB repnz push (bad) xchg add lcall fcomip pushq mov mov or sahf sbb add jno out je movsl std jno cmc cld jne (bad) js cli jns callq (bad) fildl and icebp add rex.WR std andl xchg (bad) out jne sti and push (bad) jnp clc subl in rex.RX repnz (bad) or cli push test sbb stc std (bad) rex.WRB pop outsl mov (bad) jmpq nop fisttpl mov jno rex.WB and or add stc lret pop scas iret clc (bad) (bad) mov rex push in enterq fwait adc fsubrl movsl movsb jrcxz push hlt (bad) (bad) jrcxz and pop jg rex.R mov (bad) or pop stc stos pop push mov movslq (bad) fcompl sub ficom fistp jl sbb jle jns pop or leaveq (bad) cmc mov movabs rex.WR stos mov int3 pop mov neg pushfq lods (bad) or in icebp sub (bad) mov sub sub rex.B (bad) xchg in mov mov movsb rex.X lea cmp (bad) and sti (bad) movabs enterq (bad) movb popq or movabs mov cs stos movabs xchg scas in add jb pop enterq lods jb test jp jg jp insb rex.B ror fs add repnz rex.X rex.X scas retq in adc rex.WRXB rex.RB out push sti rex.RX jne in mov cs cmp cld std stc pop fild pop xor (bad) or lods or mov push cmc insb sbb hlt mov and mov int3 sbb jae xor mov movsb xorl movabs sbb adc (bad) outsb mov (bad) sub (bad) rex.WR insl lret push shrb sub test mov (bad) rex.WB (bad) incb jno lret packsswb lock pop adc pop adc push pop testl cmp cmp out loopne faddl adc cmpl es (bad) stc cli xchg jrcxz in fnsave push cli xchg addr32 xor jae movslq add icebp pop sti je (bad) (bad) adc xlat mov pop add test cwtl fwait xor push hlt (bad) xchg add push add clc xchg or sub out out pop rex.RXB lods shr rex.RXB rcrb xor mov jns (bad) (bad) insl movsl out retq clc and mov leaveq rex.WRB retq roll sub add lock iret movabs xchg push and pop add fnstcw hlt adc jb and fsubs jae (bad) xchg callq popfq add cmp xchg repz rex.B movsb iret sbb movabs lea (bad) popfq rex.X pushfq (bad) xchg sbb (bad) sbb (bad) mov (bad) out test jae xchg scas mov mov test xchg movabs pop cmc rex.RX leaveq push jae in adc push xchg outsl leaveq add and addr32 jmpq (bad) mov mov test or sbb js sbb push stc xor sbb mov fisttpll lea cs loop rex.R sahf outsb repz push push in mov (bad) cmpl repz or xor pop rex.WR rex.RXB adcl nop (bad) out in lods jrcxz sub stc leaveq (bad) xorb xor pop fucomi fstpt xor xor imul pop rcrb adc movsl data16 (bad) (bad) rex.WRX test ja cmc mov stos ds std adc (bad) sahf mov callq int add (bad) leaveq and or rex.WR lods movsl or cltd loope xchg xor (bad) (bad) sbb (bad) movsl mov pop iret rex.B repnz and (bad) jbe lret pushfq or cli jae (bad) push shlb xor mov (bad) jne jbe xchg test (bad) mov adc mov cmpsb rex.W mov xchg xor rex.R lea cmp fsubrl lods xchg jne sbb or xchg repnz retq std icebp out cmc cltd adc or xor movsl or test pop retq cltd fmulp scas insb rclb (bad) rclb (bad) mov lods xchg push in movabs cltd or rex.W rex.WRX pushfq lea iret add (bad) sahf xchg xor rex.WRXB (bad) xor rex.RX mov cmp jae xchg (bad) mov enterq cmp sub add cmpsl rex.WR stc adc (bad) lea loopne sub xchg test add mov retq mov add mov rex.WRX (bad) repz (bad) imul mov (bad) xor xor (bad) out ss cmc sbb sbb mov sub pop stc xor or test sub mov rex.WRB mov in lods pop and insb mov pop rex.WRB stos rex and mov insb or push or cltd or xor mov xchg in mov rex.WRB pushfq xchg lock (bad) pop xor (bad) (bad) gs movabs cs pushfq rcll sti insb xor and (bad) (bad) push test mov rex.RXB lcall leaveq sub or lock (bad) cmp pop add or adcl lret in jno jno mov (bad) jno adc (bad) sub or (bad) mov cmp movabs pop cmc fxch adc rex.RX fdiv pop mull xor xor movsl cmp sbb pop (bad) callq repz lret adc add xchg idivl mov add mov xorl push add test (bad) ss sbb sub sbb mov (bad) cmp rclb (bad) loope sti retq (bad) jbe cmc leaveq sub add xor rex.W mov mov xor (bad) rex.WR es insl rex.WRX rex.WRB mov and gs scas mov xchg test scas rcll iret jae rex.WRX in int add or pushq adc rex.WRB imulb xchg fsubp decl push mov jae xchg je (bad) mov mov test or mov mov or mov test outsl or shrl rex.WRXB mov movabs int mov mov int scas movabs nop shll xor scas or push add and lret test push test mov push movsl mov (bad) jmp imul pushfq lahf rex.WB (bad) cs test (bad) leaveq mov lods or outsl repnz outsb sti cmpsb push std jmp rex.WXB loope xor xchg fcmovbe mov (bad) pop (bad) pop (bad) pop out and adcl adc out (bad) rcrl jg sbb adc lods (bad) mov mov je adc mov xor adc pushq sub and jge adc mov cmp add mov mov test sub test sub rex.B jae (bad) (bad) cmp test mov testb (bad) (bad) mov lock repnz fs lea jne in (bad) jbe enterq rex.XB pop jl fcoms cli add lret cmpsb leaveq pop fldenv xlat repz mov rex.R rex.WRX xchg leaveq and out (bad) test sbb xchg sbbl movabs xor cmpsl rex.WR (bad) std mov cmp sbb sbb push pop push pop jge outsl mov (bad) (bad) test adc int3 rex.WRX cmp loop js out cmpsl rex.WRXB lret (bad) insl mov sbb (bad) and roll idivl mov and movslq (bad) rex.WB rex.WX sub fabs fnsave push pop mov mov rex.WRX (bad) jnp pop ss xorb (bad) push jns pop (bad) push cmp (bad) cli enterq outsb sub xor sbb fistl push loop sbb xor scas xchg test rcll sub mov (bad) adc or lret leaveq pop jg int3 out fcomi jnp push test test jne in insb cld movabs movabs test xor rcl shl adcl rex.RX movabs pop (bad) retq and (bad) loope or outsl stc xor sahf (bad) pop adc (bad) imul (bad) xchg push pop adc callq movabs rex.WB push lods rex.WR (bad) mov cmp xor jrcxz and rex.RXB (bad) mov rex.B mov push rex.RX rex.B cld cmpsl add push push jbe sar ja and mov lods jne movsb pop push add fs xor (bad) pop jo rex.WRB rex.WXB mov jnp pop ja mov ss lock out callq rex.WR es and mov jl (bad) fstl cmp sbb (bad) pop (bad) fadd sbb cld lods leaveq cld adc push cli mov push lea imul (bad) fildll rex.RX xlat or fstp sarl (bad) repnz cmp or data16 adcl callq mov (bad) xchg rex.WR cmp lods jg push mov pop rex.WX jno jno pop xor cltd mul pop (bad) fdivrs scas ja cmc cli (bad) rex.XB pushq jns (bad) and pop jmpq mov callq imul (bad) mov test mov (bad) repz rex rex.X mov sbb push ja xorl (bad) ja flds mov rex.RB xchg mov mov sahf (bad) cwtl pop addr32 sbb negl jle (bad) jbe (bad) mov (bad) adc xchg (bad) mov lret retq sbb (bad) xor lretw rex.RB (bad) and cmp (bad) sub jp (bad) jbe mov (bad) mov leaveq sbb pop rex.RXB rex.XB mov fbld cmp sbb in retq or fadds (bad) push icebp rcr pop mov repnz add pop out lahf lea jne mov pop mov mov xchg adc mov int decb xchg (bad) jmpq (bad) xor pushq or mov push jge imull (bad) icebp movslq or int3 mov in sub xor in or int3 repnz fcmovnu (bad) out fxch pop and or cmp xor jmp addl fistpl repz pop (bad) (bad) mov out (bad) mov in or in cld orl movabs iret notb jo jbe scas xchg mov and lea movabs ja movsl or push callq rorb retq and std mov pop pop lret sub imul xchg jmpq rex.W xor js mov int3 mov rex.RXB cmp cs (bad) mov adc xchg rex.XB rcll (bad) pop cld out (bad) icebp test sub adc pop lahf jmp xchg sub and loopne or cmp push hlt (bad) xchg mov or xor mov in and test xchg repz retq jne outsb cwtl sub cmp (bad) adc clc sub (bad) sti pop rclb (bad) (bad) jno xchg add (bad) rclb mov loop sbb xchg loope xor (bad) mov cltd shll rex.WR rex.WRB (bad) rex.WXB cs enterq outsl movabs and add in jp xchg std cmpl stc repnz rcrb adc repnz in xorl ss sbb sub adc jmp movabs xchg xlat mulb insl xchg pushfq in sbb push sub nop xchg cmpsb in cmp mov (bad) xchg cmc insl rolb lea mov jne lods in fwait mov cltd (bad) scas push jno popq int3 ds leaveq (bad) fildl sahf stos sbb callq stos xchg int rex.WR xor sub (bad) repnz push loope test mov in fmull mov jle out (bad) (bad) add hlt mov mov in repnz cmpl mov sbb in mov jmpq jb rcr clc (bad) or retq push mov addb and add (bad) sbb in repz retq (bad) push (bad) gs lods sbb insl int (bad) push rex.RX rex.RB xchg iret std sbb pop iret je sbb xchg xchg jo (bad) jmp (bad) mov retq icebp fsub sub (bad) sub mov sti jge and ja insb es xchg (bad) rex.XB add add and (bad) xor mov jno (bad) test push mov (bad) (bad) or stc and test sub xor rex.RXB (bad) or rex.WXB (bad) rex.RXB loopne imul divl std pushfq mov push fiadd lods insl movabs sbb icebp jp rex.WXB xor insb pop out cltd add adc test loope icebp add ja (bad) jb rorl adcl stc add mov cmpsl movabs cmpsb std in rex.WRX stos rex.WRB push (bad) rex.WRX mov rex.RB (bad) lea pop movsb push cld ffreep nop mov jmp mov push rex.WR and js sahf push cli pop outsb rex.WXB mov lock sarl fstl jmpq std push leaveq retq jmp (bad) in cli callq rclb mov lods jnp (bad) (bad) adc jbe mov sub loope add adc mov xor retq iret leaveq and movsl icebp cwtl callq loop cli jne leaveq or and pop sbb fisttp (bad) sbb (bad) jo xor xchg pop jbe cld callq pop add rex.X pop mov cmp add and stos or repnz mov or div or mov rex.XB push enterq leaveq (bad) rex.WB orl retq sahf mov outsl (bad) (bad) callq movabs rex.WRB js shll cld andl xchg jrcxz test xchg jne push movabs jmpq add (bad) jle (bad) cmpsb (bad) push ds mov repz fnstenv (bad) xor cs cmpsb loop jne add in (bad) pop rex.RXB repz adc addps sbb (bad) repz xchg std push test or vaddss mov mov push (bad) push test loop lahf repnz jo xchg hlt test ja or rex.WXB jnp cmp in in jo and or xor jns (bad) mov xchg push (bad) mov (bad) xchg (bad) int3 xchg orl test stos xchg imul (bad) mov (bad) (bad) add lock xlat xlat rex.WB leaveq (bad) repz rex.RXB jae xor mov or rolb (bad) callq (bad) pushfq rex.R cmpsl addl mov mov adc ja rcrl sub movabs sbb cmp and rex.RB add test pop or jne (bad) add lods fstl xchg and int pushfq mov xchg fisttpll mov idivb stc mov (bad) rex.WRXB xorl sub scas test rex.WB loopne jmpq mov bnd ficom mov (bad) sarl cs jmpq fnop xchg or out and and pushfq jbe add xchg fcomps rcr (bad) xchg push in (bad) xchg mov movabs stc (bad) mov fisttpl push rex.WRB rex.WX and xor loopne test ficompl mov sbb (bad) or xchg movabs rex.WR sarb lea mov xchg gs cltd pushfq lahf rex.WB cs xor add sub sbb (bad) xchg mov movsb cmp callq jne int3 nop fnsave retq repz (bad) mov nop pushq movabs mov lret mov icebp movslq mov es xlat pop movabs mov rex.WB cs negl int3 movabs mov xchg (bad) mov push rex.WR adc pushq or (bad) loop or js (bad) (bad) lret insb adc mov (bad) fildl movsb xchg movabs mov repnz rex.WRXB rex.B test sub add adc sbb roll std (bad) pop xchg sbb mov add (bad) loope (bad) cmp sub mov movslq outsb insb fs scas (bad) rex.B repnz in (bad) rex.RB (bad) sbb add pop (bad) fistp cmp (bad) cmpsb and mov js xor fmull cld mov lahf jmp pop testl js rex.X repz rex.WB je (bad) (bad) fist stc add rex.R mov shll movabs stc or cli rex.X ds movaps jg pop sub xorl jnp add and cmp push icebp js mov iret pop cli out out adc mov rex.WRX cmp movsl iret in mov sub repnz mov xorl addr32 (bad) or xchg sarb mov mul pop lahf (bad) test sbb out cwtl loopne cld mov mov add int3 pushfq rex.WB adc movabs adcl test (bad) in (bad) pop sub or mov (bad) (bad) callq add rcrb xchg mov imul in movabs (bad) xchg or rex.WX rcll add rex.RB jmpq insb sub movabs cmp (bad) in movslq xchg sbbl insb (bad) mov mov vandnps out pushq mov (bad) cmp (bad) add sbbl icebp xchg and add (bad) (bad) out pop rex.W int3 mov mov jnp pop outsl (bad) in test fidivrl out adc rex.WRB jp jnp and lock retq and add sti sbb cmpsl shrl mov mov mov jle (bad) hlt mov adc ficomp mov movsl push mov (bad) in mov (bad) (bad) lahf pushq loope mov jne adc xorb loopne vpunpckhqdq fistl (bad) lea (bad) bnd (bad) adc and (bad) test or (bad) lods stos (bad) pop int ds (bad) cs in lock push mov sahf retq (bad) push mov mov jmpq sbb stos pop (bad) js mov mov adc (bad) ficom vaddsd xor xchg adc enterq or jl jb sub sub (bad) (bad) int3 xchg xchg fcmovnbe xor mov push xchg insb cmp pop add retq (bad) jmpq adc mov (bad) fwait gs pop addr32 lods imul (bad) or adc jp (bad) rex.WB or lods sub mov xor test jmp (bad) imul add mov fsubl imul (bad) xor pop cld mov rex.R push fisub (bad) pushfq sbb (bad) mov or icebp cmpsl rex.RXB (bad) addr32 sti pop ss (bad) or xchg adc movsl test (bad) loope fwait movslq rex.R in fldt fimul rex.R movabs fimull sar enterq fldcw adc (bad) lahf xor sub test (bad) hlt nop rex.WRX ss mov popfq cmp movabs rorl fdiv xchg xchg xchg cmp rex.WB rex.RB repnz mov leaveq push or int3 sbb and adc cmpsb (bad) out (bad) xor or add rex.RX mov in sbb xchg movsl adc (bad) push imul rex.X and fdiv or pop int3 retq test (bad) push sub xor jl rex.X (bad) cli (bad) pop lret and lock jmpq popfq xor jle (bad) xor (bad) test jno mov mov test vhsubpd pop cmpsl rcrl sub popfq scas sbb rex.WXB xchg mov (bad) add xor rex.R push movsb loopne (bad) repz insb (bad) callq jbe mov sahf jne cmpsl adc in testb sub scas mov gs push in xlat pushq (bad) inc mov loop sub jp jl sub (bad) jno adc ja je movslq fdivl or (bad) mov rex.WXB mov xchg movabs scas adc rex.WRX rex.RX (bad) push jp cmpl rep pushq mov emms (bad) mov mov cs mov fsubl xchg lahf mov mov nop mov leaveq adc jmpq fimull sbb xor imul repz (bad) loopnel (bad) xchg mov movabs mov fiaddl rorl mov mov cltd rex.WB movsb lretq (bad) xchg (bad) mull neg and adcl cs cld (bad) push rolb movabs fdivp (bad) pop clc sub fstpt (bad) mov fs jne lret faddl pushfq adc repnz or or repz (bad) mov rex.RX mov mov callq xchg pop out hlt xchg jae in push rex.RX xlat rex.RB rex.RB jno cmp mov jno cmpsl sbb cli callq (bad) je push rex.WRX movabs adc rex.WRB xchg adc xchg xchg mov sti xchg xchg or fs and xchg or mov pop or add sbb movabs fwait cltd cmpl mov cmp callq pushq test mov xchg mov int3 cs (bad) repnz rex.WRXB shll fbstp in adc repnz repz pop leaveq (bad) mov callq cs xchg fsts (bad) fadd nop scas mov ja pop fwait or and lret repz subl jnp (bad) mov (bad) push mov jbe (bad) test jmp rex.B sbb gs jbe add clc pushq subl rex.RXB mov bswap mov lret jmp cmpl hlt push test (bad) pop jmp test cmp rcll (bad) cli jno rex.WB xor (bad) cli jno rex.RB add rex.WXB mov pop mov sub adc js jno rex.WB pop (bad) mov sahf xor pushq jl addl and vmovntps xlat int (bad) leaveq mov retq test fwait (bad) add xchg (bad) (bad) hlt test in add sub sub xor repnz sub jo je jmp popfq xor test test cltd sti mov pop rex.WRX mov mov adc int mov retq add adc (bad) lea movabs sbbl lock cmpsb (bad) (bad) outsl test cmp sahf in (bad) or mov sub xlat lock cltd test pushfq (bad) movabs jbe (bad) ja cmp icebp rex.WRB sub (bad) pop add sub cld movabs (bad) adc adc pushq rorb xchg mov (bad) bt or adc adc jmpq push rolb retq repz add clc fs in je in je in je in je in jl adc (bad) clc and or mov movsl xchg in xchg rex.W adc xor mov movsl mov mov rex.WRXB rex.RX loope and and sub (bad) adc fwait test mov add (bad) xor roll (bad) (bad) jge or xor movb out or sub clc xchg add repnz pop mov clc scas fsubs ss sub out pop negb and popq (bad) sbb sub loopne out (bad) stos adc loope data16 and xor jno mov pop push pop (bad) xchg add repnz (bad) mov movsl push (bad) popfq lret jge mov icebp mov sbb leaveq data16 icebp sbb cmp xchg push retq push in xchg mov (bad) rex.XB out mov leaveq cmc js in adc imul repz (bad) sub rex.X rex.WR jl out xchg mov jne cli mov rex.WRX nop int pop sub jne (bad) sbb fdiv jbe cmc in mov cmc je mov push mov cmc or (bad) rex.WX in mov cmc je mov loope cmc test leaveq (bad) xor or mov fs mov or mov je (bad) icebp xchg cmpl sbb xchg in pop push (bad) or stc sti in mov sarl rex.WXB mov mov mov movabs mov mov and jge adc icebp sbb add push adc jmpq sub or rex.WB xor xchg incl icebp and sub (bad) (bad) rex.WB cltd repnz mov push leaveq (bad) rex.WB xor cmc cli icebp stc jae pop sti stc repz test and push jne sbb (bad) (bad) push andl icebp stos (bad) fld stos rex rex cs mov movabs cmpsl (bad) add rex.WR cmp pushfq (bad) int3 xlat xchg or roll pushfq int shl sub test xchg and test jrcxz cmc rex.XB mov fisttpll divb retq jl jae jno (bad) pop rex.XB rex retq push xchg pushq sbb lea or (bad) xchg jbe mov lock rex.WB movabs (bad) (bad) mov repz callq movabs cld xchg int3 cmc out in mov andl negl xchg cs rex.WRX jmp xchg pop pushq in jbe sub stc int3 orl mov xchg mov xor sbb cmp mov lods addr32 and mov (bad) lret movsl add (bad) (bad) in xchg movb lods jg (bad) add test cmp sub (bad) cmp push push and jae mov rcrb sub (bad) sub sahf rex mov rorl (bad) jno mov loope loopne lods mov cs adc add mov js popq je push sub and fnstsw xor scas cmp push xor icebp pop or xchg xor xor sbb cltd repz stc hlt in addl movsl movabs cmc or mov add or (bad) adc leaveq push (bad) xchg (bad) lret in movsl in or pop mov (bad) ja test rex.RB icebp rclb std cs mov mov imul pop (bad) out pop and push test pushfq insb cmpsb (bad) jns in cmp xor xchg jg fistp rex.X movsl sub pop (bad) gs lock loop mov js cltd leaveq push mov xor or movabs mov pop rorb sub (bad) mov dec movaps fbld jrcxz loope movabs js ss movsb movabs pop xchg je mov sub cmp pop sub mov in movups cmp test jrcxz leaveq push xchg subl (bad) (bad) xchg adc sbb in push rorl andl xchg je adcl lret pop repz pop add (bad) cmpsb adc lods xor add mov (bad) mov rolb (bad) in mov or jns or xchg rex.RX int in xchg jg rex.X xor xor xchg mov (bad) setle pop (bad) xor rex.WRX xor rex.RXB movslq push fs in xor (bad) rex.XB adc rex.WRB (bad) or xchg (bad) (bad) push icebp insb or jbe xchg mov imul mov rex.WR movsl in pop mov xchg popfq or (bad) mov add push xchg pop (bad) scas sub add nop or insl push add repz je rex.WRB jb int3 rex.WB rex.XB jp imul mov rorb jae orb xchg mov pop adc test lea sbb (bad) pushq xor rex.XB pushfq cmp sub mov clc rex.WX rex jmp (bad) xchg (bad) jne pop (bad) xor push jrcxz push enterq and callq rex.XB mov loopne or cmp movabs jo lret stos (bad) cli icebp jo fwait pop jne loopne (bad) xor (bad) rex cmp mov test xchg fisttpl xor push leaveq and jrcxz add mov (bad) cmp xor cmc rex imul xchg rcrl rorl (bad) shufps (bad) and sbb (bad) rex.WRB (bad) (bad) sbb in mov mov imul shrl (bad) fimull mov mov repz mov pushq mov outsb fdivl cs mov stc push xor addr32 cwtl fisttpl rex.RB xchg orl cmc rex.WX mov test mov adcl push add fiaddl jo test lret lods sbb xchg jge out in (bad) lock lahf jae sub jno jbe mov xchg cltd cmp roll jno insl push xchg cmp pop (bad) mov int rex.R movslq xchg (bad) push int3 and mov mov lahf adc cmp xchg jae (bad) mov (bad) jl (bad) xor scas push mov (bad) (bad) in sbb mov add add and mov (bad) gs or cmp mov (bad) rex.WRXB rex.WRX jno retq add repnz sub movabs jp pop rorl movslq rex.WRB mov lods sub std fimul cmc je jg cmpsl jl sub cmpsb shl test rex.WR sbb (bad) jne retq jl mov (bad) int mov mov (bad) (bad) div or jl add test xor push and sub out mov not cld sbb clc rex.WXB mulb mov fsts mov mov test sbb mov sbb adc sub (bad) or and xor pop (bad) (bad) out mov xor or cmpsb sbb std rex.RB (bad) mov cmp or and sub adc cwtl add xor (bad) mov adc popfq rex.RXB jnp fisttp test fcmovnu test rex.WB rex.W stos xor ds movsl rclb mov cmp fdivs xorl (bad) (bad) out fs negb rolb cmp mov xorb ja out push mov and xor jmpq mov jo mov xor mov or jg mov or fistp mov fildl cmp push sub add sub cmp movabs decl insl mov rex.WB (bad) out insb in lea (bad) xlat xor xor mov pop and pushq repz add rex.X mov pop es jl movabs and in lret fisubr push mov (bad) or pop sbb scas cli or mov leaveq (bad) pop jp outsb rex.WX lahf int3 add enterq xor lret add ja,pn leaveq jno fcom (bad) xlat fdivr xor (bad) leaveq or mov mov jbe pop cli rorb nop adc lods outsb int3 cmp rex.XB rex.WX push test enterq cmp imul sub rex.X (bad) add add fisttpll (bad) jge (bad) jp ds retq (bad) int rex.WXB (bad) cld retq addr32 in push adc movsl jbe callq (bad) ja stc mov (bad) test test (bad) frstor (bad) xor xchg add push rex.WR mov pop jae sub scas es mov callq movabs (bad) out rclb (bad) insl mov lret sbbl (bad) adc xchg mov stos rex.RXB (bad) add (bad) rex loopne push push add rex.WRXB ffreep and xchg cs test leaveq rex.X mov jl lret stc xchg jg rex.WRXB loopne cmc mov loope (bad) nop retq repz lret in cmc fisttp (bad) movabs movsb in sarb jmp rex.WXB xchg cld rex.WRXB repnz jge out mov test (bad) xchg scas stc (bad) outsb test xchg loope cmp (bad) or (bad) rex.WR addr32 (bad) stc sahf rolb cltd hlt cmp (bad) cs nop stos jg fucomi push (bad) imulb jmpq mov (bad) mov rex.WXB out fild xchg add adc stos stc xor subb mov and or add jns (bad) ss inc jl idivl cli (bad) lea mov retq ja or nop imul out add jae mov nop mov add xor cmpsl (bad) adc add jmpq xor mov retq or rex.WR (bad) and repz gs add lret jmpq xchg xchg rex.RB rex.R mov (bad) rex.R rex.WXB (bad) lods mov pop adc cmp rex.R fwait cmp adc insb jo sub mov xor repz xor shrl rex.WR xor xchg sarl fidivl xor mov bnd jp cmp (bad) cmp cld mov push cmp push out je test sub jmpq (bad) xor imul lcall icebp shrb rex.XB in icebp add or add add (bad) (bad) jge pushfq (bad) jg mov (bad) int mov ja outsb jg hlt rex.WRXB cmc jns clc xor pushfq xchg add mov cs lock out imul cli insl mov pop fwait loop nop xchg sbb cs in repnz xlat xchg jle cmp cmc movabs mov xchg pop imul (bad) jp (bad) sub shr imul xchg out rex.WRX pop mov and or callq add leaveq jl retq mov leaveq xchg jne insb rex.X rex.B in and enterq test add or xor cmp fbld rex.WR test test repnz jno (bad) rex.WB sbb int shlb cmc rex.B rex.R xchg add (bad) rex.WRX sub xchg icebp sub mov (bad) or push sub xor fcoms je pop (bad) jno (bad) mov add rex.R rex.RB xchg retq test sub and push add xor cmp (bad) mov cmp mov repz sub xor jge movabs ftst xchg jrcxz nop jnp mov mov test out (bad) movsb xlat fdivrl ficom stos retq movsl fbstp add rex.RB iretq mov mov outsb rex.RB (bad) and js adc lret retq jrcxz cmp jmpq mov add stc sarb (bad) loop sti xchg (bad) cmc (bad) int3 (bad) repnz rex cltd int3 xor negb loope rex.WR xchg js sbb jmp push mov and movsb jae xor pushfq mov cwtl pop mov out xchg or (bad) jmp (bad) or stos push sub (bad) pop rcrl (bad) (bad) enterq push push fildl out orl pop icebp xchg fcomi leaveq xchg and mov and mov in jae lods lods (bad) sbb scas add js (bad) or (bad) (bad) sub in addr32 mov cmp cmc (bad) loope addl add (bad) in (bad) cmp es (bad) test rcll or cmp lahf js mov (bad) mov inc in push pushq lods rex.RXB stc mov jl rolb mov mov int rex.RX pop (bad) jno,pn rex.RX cmpsb movabs sbb jne popfq xor xchg (bad) lea std retq or gs jae xchg lahf imul in (bad) xor xchg in loope xchg in rex.XB push std rex.WB sub cwtl movsl (bad) sub mov or movabs fstl icebp icebp in je push in mov and mov (bad) mov movslq cmpsb lods movsl cltd imul iret mov repz cmp mov push rex.WB notb sub or or imul push pop mov sbb xor jno xchg sub vmulss rex.RB mov jno rex.WRX movabs or pushq add cmp add xor jno lock fsts or jno jns pop adc movq std popfq or retq (bad) movsb (bad) retq xchg rex.WRX loope testl int pop cltd (bad) rclb fdiv (bad) (bad) sti ffree fs push jmp jmpq rex.WRXB or and std cmp jns (bad) push cwtl sahf mov pop leaveq rex.WRXB mov mov jbe sub lret lock (bad) vaddps mov fmul lret xchg fucomp addl movabs leaveq fneni(8087 push mov jp retq cld and fcompl imul andb callq (bad) jbe in xchg jmp test fs (bad) rex.WB pop fnsave mov retq adc or cmp repz repz push scas int mov stos (bad) int (bad) retq rex.WB rex.X cmp cmp push mov clc jmpq and in (bad) rclb cmp or ss adc in fwait (bad) and scas retq movabs mov or rex.WRX rex.WRXB pop rex.W rex.WRXB fmuls scas or mov rclb pop nop jne rex.RX push rex.WR or (bad) mov rex.WR and lret int (bad) (bad) repnz mov imul mov pushq fsts fwait rex.RXB (bad) icebp rex.WX (bad) mov fcoml xor in mov icebp xor (bad) mov (bad) ficomp mov add negl outsl or loope test and mov imulb loopne xlat data16 xchg je test hlt adc out rex.RX stc (bad) (bad) incl and sbb test sbb jo jb icebp enterq rex.RX add pushq fldt or sbb (bad) (bad) adc mov rex.WRB pushfq (bad) mov repz retq fistl adc rex.WRX mov mov loopne jrcxz sti loopne add xchg rex.WXB movabs (bad) fnstenv rex.WXB test cmc (bad) push rex.W (bad) test in adc fbld xlat sahf mov decb lret frstor hlt rex.RB rex.RX pop pop (bad) int3 retq hlt (bad) mov lret fcmovne xor fldl loope test mov rex.W sbb mov xchg loop ss jrcxz rorb jne (bad) add mov mov movabs cmpsb test push (bad) (bad) mov (bad) in scas test roll cmp xchg rex.XB enterq fiadd sahf rcrl int3 test retq and mov rex.WR repz xchg lea add fwait mov movslq xor jp jnp icebp (bad) repnz in jl lods test (bad) jge adc rex.XB rex.WRXB rex or (bad) mov movabs loop pop movabs rex.X jl loopne loope repz in stos test pop (bad) mov fwait or callq mov fmull fsub loope jbe pop xchg and cmp and cmpsb (bad) rex.B jle (bad) cmc jmp rex.RXB test sub mov (bad) lret pop out and (bad) mov leaveq (bad) and pop cli loope rex.R sbb rex.WB (bad) rex.WR mov in int rex.RB (bad) rex.WB rex.WR retq pushfq cmc fwait pop cmpsb in je sahf (bad) mov mov pop xchg fildl outsb mov icebp (bad) (bad) enterq pop mov xchg jae sbb ds loope mov std mov loope jns xchg and (bad) jmpq int3 pop (bad) mov mov xchg out jb icebp ja rex.B add test mov mov jns mov jne (bad) cmpsb fs or sbb sub test sbb rex.XB xorl loope mov iret fcmovbe sub xchg (bad) in hlt cltd rex.RB xor popfq jle or in test cli xor mov fucomi cmp scas (bad) mov repnz mov ja cmpsl or push data16 push rex.RB xchg push xchg xchg xchg xlat sti mov repz sbb cmp jg callq cmp ficoml test (bad) mov mov (bad) xchg std mov cltd repnz loope pop popfq movslq imulb (bad) mov pop in rol adc xor adc imul std and or cmpsl or je (bad) loop rex.WR repnz (bad) rclb mov xor retq cltd rex.X in andb jmp or lea lret sbb jp push je jg mov lods test pop pop or mov mov (bad) rex.WXB adc pop pop sub jge lods iret retq or mov jne xchg in lea and add sbb fisttpl retq rex.RX rex.X in callq jge leaveq rolb (bad) outsl rex.RB loopne xchg in jp (bad) or rex.WXB repz in (bad) adc loop mov gs push adc pop (bad) mov (bad) gs cmc repnz mov pop sbb bnd add add retq sub (bad) icebp hlt and rex.W imul rex.R or repnz rex.WR (bad) rex.XB icebp or and jl mov jae fnstenv push movabs cltd jp jns xchg xor loope mov insb in adc add movabs (bad) retq rcrl mov xor xchg jmpq fild xor int3 movabs sub testb rex.B lock jnp cmp push rorl pop pop lea adc (bad) jmpq xor decb rex.W rex.WR rex.XB cs mov jmp rex.WRX or adc xlat xor and lea push push fdivrs scas shrb mov mov (bad) lret std cmp cmc (bad) out shll icebp mov or (bad) pop fcmovnu rex.RXB repnz cmp sub (bad) (bad) cmpsl cmpl std leaveq pop cltd xor sbb loop (bad) mov pop stc xor iret or or add and std mov cmp retq rex.RB cs lods xchg add mov mov xchg es and sbb rex.WRXB cmp mov movabs (bad) xchg (bad) retq (bad) xchg add add lahf in pop int test xor mov sub (bad) cmp rcl pop int (bad) mov scas (bad) sub mov or or in jmpq cmp fldl rex.WRX jno rex.WRX cs cmp shll and loope mov (bad) rex.WRX popfq mov movabs add or rcr mov mov fucom xchg repnz rex.WR pop (bad) movsb repz mov test xor imul test xchg repz xchg test iret sub or pushq (bad) repz sub cli rex.X xlat xchg imul xchg rex.WB jno jrcxz cmp jae (bad) out mov loope or rorb sbb movsb xchg leaveq push (bad) popfq rex.R scas mov sbbl leaveq rex.RX (bad) imul movabs addr32 clc shrb xlat rex.WRX fidivr (bad) loopne int in and retq (bad) (bad) stc movabs std mov (bad) rex.WRX leaveq (bad) and sub sbb mov movabs or pop std leaveq mov test and mov icebp lea mov (bad) jnp imul (bad) test or mov movabs sub rex.WX rex.WB test repz xchg insl mov or jmp mov jne rex.WX stos outsb pop sub (bad) (bad) mov (bad) repnz fnsave sub nop test xchg in mov jne and (bad) in add push adc addl mov jg add and add pop out jne sub gs pop jns (bad) add rex.W rex.RB rex.XB (bad) ja xchg movabs shrb mov or movsl idivl (bad) stc xor or test (bad) (bad) (bad) mov imul rex.WB fwait je gs cvtps2pi in (bad) adc mov movsl jns stc enterq retq sbb test movsl (bad) xchg cmpl cmpsl popfq xlat mov pop pop pushfq jae int (bad) jmpq loope leaveq sbb addr32 icebp cmp (bad) xlat in mov add imul jg push int repz cmp cmpsb cmc orl movabs sysret fwait mov sub and cwtl mov icebp movsb and xchg mov cs out (bad) (bad) jns jrcxz rex.WB rex.R rex.WX rorb rcrb stc xchg add in movabs callq (bad) int add clc rex.WB or mov push sub int3 mov jrcxz or ja mov or fiaddl mov outsl push xor leaveq xchg (bad) in pop mov (bad) hlt ja add sub mov and cmpsl cli ror or hlt retq (bad) imulb or in test add bndldx ja cmp int sahf xchg loope xchg mov out stos (bad) mov jmpq lods imul cli pop xchg out mov enterq insl iret pushq stos hlt jmpq enterq int3 push je mov or clc and leaveq or add mov xor mov rex.R cltd (bad) mov test mov sbb xchg fwait callq pushq in or rex.WXB leaveq movslq addr32 insb repnz (bad) lods mov hlt nop mov test xchg sti jmpq xchg repz in fcmovne cmp fnstenv mov jbe xor loopne shlb mov in (bad) adcl xchg jo jno movabs (bad) jmpq mov andl push fisttp jnp jb repz (bad) (bad) sarl push nop insb shll jmpq xor gs test test fidivr sub cmp or rex.RB (bad) rex.WRXB mull retq scas repnz jrcxz and mulb icebp out rex.R lods sub (bad) rex.WXB icebp jns cmc and jmpq pop test out cmp icebp jno jns mov in adc out jae int cmp mov xchg scas sub movabs nop mov je lea add icebp gs sub leaveq sbb movabs fcompl insb cmp mov rex.WRB xchg in scas and out in (bad) or sbb xchg xchg adc jrcxz cmp adc movsl and xlat (bad) lods mov leaveq callq clc dec mov adc mov movslq orl xor pushfq jbe jmpq or jae rex.WXB enterq mov sbb cmpl adc xchg and cmp stos mov cmp rex.WB (bad) rex.WX callq cmp test sbb (bad) sub or jle hlt mov rex.WRXB js negl movabs xor movslq cmp xor mov (bad) out test int rex.W xor pop or (bad) (bad) mov jmpq fstps fnstsw xchg jrcxz js xchg sbb xor lods push xchg clc (bad) adc or mov or and clc out int adc leaveq cmc pop test test or adc icebp sbb or mov and add (bad) outsl rex.WR int3 push adc and rex.WX (bad) (bad) mov out (bad) sbb (bad) mov cmc or or jmpq fucom icebp cmp (bad) mov mov push rex.WR xchg jnp lods mov sub mov movslq xchg (bad) int andl rex.R insb add add mov push jns outsl xchg je fwait mov rex.X rex.XB je (bad) test enterq movsb fstps shr insl or sub add or rex.WRXB and fdivrl or cwtl sub xchg push jbe test (bad) callq je mov xor imul push or movabs cmp lock jae jge push or mov sub test rex.WXB test rex.WXB (bad) (bad) leaveq jp (bad) rex.WRX outsl fwait mov pop cltd imul jne or add out in or pop jg shll je mov jrcxz push adc adc or test lea in pop mov test sub or rex.WRB sub es jbe int mov adc xorl jbe cvtps2pd insb in fisubl je (bad) test rex.WX xchg jbe icebp mov or test callq mov sbb push push xor and push popfq gs mov xchg (bad) movslq in cmp or adc jno rex.R mov xor jbe pushq xor xchg mov mov mov push jae test xor adc push jne ss insb lret rcrl in xchg test mov mov (bad) lock rex.RB push jle in mov out movsl jne out (bad) cli cmc lahf insl out add test mov mov (bad) stc cli rex.R (bad) in mov (bad) jle ja xor adc pop imul sub xor stc or unpcklps add rex.WRX mov adc std jne sbb push mov movslq or pop (bad) cwtl and icebp pop or mov fnstenv jno imul es mov sar (bad) je xchg (bad) insl (bad) cmp mov lea pop js (bad) test and nop sub xchg xor jmpq fs (bad) mov (bad) or ss pushfq xchg xchg push sub rex.R lock and (bad) lret loop icebp lret fistp repnz icebp stc and rex.RX int3 rex.W and xchg mov roll mov retq out rex.WR (bad) mov sub stc or mov rex.WRX movsl popfq or sbb jbe push rex.RX fcompl (bad) sub decb fs out adc mov std sbb bswap xchg (bad) sub xchg test mov or retq and pop (bad) (bad) rclb rex.X pushq jno enterq int icebp rex.RB add rex xchg sub push sbb iret jne sub cmp cmc outsl add push xor (bad) (bad) imull jge jnp sub lea lahf pop mov (bad) mov shlb (bad) xchg test callq fdivs (bad) jb movabs sub stc test movslq rex.WR cwtl (bad) cmp rex.WRXB in (bad) mov outsb lock and mov mov and movsl rex.X mov (bad) pop repz (bad) int and in nop add mov pop imul sahf push test movsl divb pop cmp scas and (bad) fwait mov (bad) (bad) imull (bad) xchg mov sub data16 andl sbb sub sub icebp rex.WB jno rclq loope and sub mov cmp (bad) (bad) jmp in imul std sub clc in push rex.X rex.RXB fmul push in (bad) repz stos jno (bad) loop pop pop cmp mov push pop cmp xchg ds mov xor fist mov shlb pop mov orl push gs push xchg je mov retq retq mov lret add mov mov lods imul xor xor pop pushq sub (bad) xor cmpsb int3 rex.WX frstor cs jne in mov push (bad) jrcxz xor (bad) xor icebp cld rex.RXB adc xlat rex std retq pop test movabs lahf push jmp rex.XB out adc in rex.R mov (bad) (bad) add bswap xchg fs mov movsb mov sub xorl mov loope (bad) leaveq mov je xor (bad) (bad) lret cmp sbb mov pushfq (bad) pop stos callq movslq add pop cmpsl stc lret lods testl (bad) repnz jp int (bad) or retq (bad) mov add sahf ss sbb mov jae movabs (bad) loope movslq stos xchg (bad) pop (bad) (bad) hlt sub add sahf jns or iret fsubrl cs mov sub loope (bad) clc sbb xchg in jg mov leaveq repz sbb jp mov rex.WXB sbb push rex.W mov (bad) rex.WRX mov sahf fidiv hlt xchg mov (bad) (bad) out sbb mov mov mov mov cmp fmulp sbb rex.RB cmp retq or enterq xchg and cltd insb lret (bad) fcoml cmp test xor sub jmpq in (bad) bnd cmp lods addq test pop rex.WR xchg rex.WRB and loopne xor cmp mov adc or cld sub push pushq rex.X rex.R mov in mov out stos ficoml rex.WRX jne jne scas add lods sbb (bad) sub jae movsb fdivrp cmpsb push xor (bad) fstps sub cmp lret jg rex.WRX adc xor cmc xchg sti repz mul jns loope in jge scas rorb and (bad) sub (bad) mov fnstsw clc push rex.WRXB rex.WB sub mov rex.W (bad) mov mov rex.WRX vpunpckldq pop pop add fwait cmpsb jp rcr rex.R (bad) movb mov xchg push rex.XB pop (bad) jge (bad) test fsub mov jrcxz pop rcll mov vshufps stc (bad) sub (bad) jo (bad) sbb pushfq movabs lret push (bad) icebp xchg test (bad) sbb and std pop je loop insl movl rcl fwait lret (bad) test in cld int decb repnz stc mov fldenv stos pop addb mov push (bad) jo (bad) rex.R mov and add sti callq out cmc sub rex.RB rex.RX jmpq cli pushq repz xor fcoml add pop test imul (bad) xor jmpq (bad) fistpll (bad) cmp pop (bad) add fxch mov mov sub xor cmp loopne rex.WRXB pop or pop rex.XB pop (bad) mov fldl mov enterq (bad) outsl divb rex.WX rex.RX (bad) mov (bad) repnz icebp mov repz scas sbb movabs jmp mov sarl jno insl out out popfq in divl rep mov in xchg xchg mov (bad) jp insl add add loope add sub retq incb cmpsb (bad) rolb lret mov retq shrb movabs (bad) xor retq cli popfq retq sub rex.R push (bad) mov test (bad) xor xchg sbbl stc (bad) xor mov (bad) (bad) sub push xor stos retq xchg add pop mov decb push (bad) int stc sub fsubl mov sub or insl callq adc out xor sarl xchg rex.WRB add add pop pop ja fcoms adc xchg mov push out (bad) clc mov xor cli popfq rex.B flds or rex.X xchg adc nop imul out (bad) cmpb mov (bad) adc in mov mov adc lahf pop rex.WB fild test adc rex.R mov mov sub sub mov (bad) je sti mov subl and decb sub js mov sub int mov mov addl stos mov xchg rex.RX pop adcl mov int sbb and rex.WRX (bad) jbe jmpq test rex.WXB push mov nop (bad) xchg (bad) jmp xchg mov mov (bad) jno xor sub icebp jmpq mov outsb imulb (bad) imul stos (bad) rex.WR retq cmp sbb loope mov enterq fist mov sbb in stc (bad) int (bad) in rclb adc (bad) adc mov (bad) mov jne mov xchg fsubr and pop addl pop stc (bad) fisubl movsl repz jrcxz in mov imul jnp cmp fwait ja rex.XB sbb mov jge pop add movsl cld std cmp movslq cmp idivb fisttpl imul jrcxz (bad) pop jae jmpq test nop cmpsb mov (bad) repz adc (bad) (bad) hlt sub (bad) xchg mov std pop movabs (bad) jbe rex.B stos pop rex.WRX fs mov add add push mov xchg cmpsb pop pop rex.RX mov sub cmp push mov sub mov rex.RB push mov test rex.WB ss cmc jmpq and leaveq fs rex.RX mov adc jmp stc and and js mov sub adc mov cmc gs rex.WRB or jno movabs fwait cmpsb sub mov pop je test xchg push cmc rex.WRXB xchg jmpq ja rex.W sub (bad) lock mov lret (bad) xor sub and fdiv rex.WXB rex.WX outsb jb (bad) fisub mov test adc int3 push and fldt mov rex.RXB adc repz cltd leaveq pop movsb sbb (bad) repnz roll rex.WRX iret push mov jns pop (bad) sbb enterq xchg int sbb pop cmpsb pushq je jno xor in xchg mov fistpl stc (bad) (bad) sbb (bad) (bad) insl movsl sub sbb and (bad) icebp insb push ds jg xchg jle imul leaveq fsts hlt ja (bad) (bad) (bad) xchg vpacksswb mov movabs lea pushq jmpq (bad) repnz mov ficomp mov push mov andl js jge js std xor pop (bad) xor fldt jne rex.R rex.XB shrl pop movslq mov jmp outsb movabs pop in bnd loope hlt jmpq xchg movabs mov (bad) cvtpi2ps add cmp jp adc xlat test (bad) (bad) xchg pop pushq adcl mov jno out xchg or ss or roll je ss sahf lea (bad) lahf (bad) push (bad) mov retq xor test adc repz (bad) push cmp iret mov enterq pop icebp add push out (bad) (bad) jl mov (bad) rolb sub imul icebp retq shll rcl icebp sub sub cmp repnz movsl and movsb pop sbbl or mov (bad) insb movabs jns fwait mov callq mov cmp and fcomps xor sub fnsave mov add jge shlb xchg xlat rex.RB rex.B (bad) nop mov addl sbb jrcxz adc jmp in orb rclb mov int pop loop mov fmul imulb jmpq cs ror out pushq fcomip jns sub (bad) rex.R lock int stc vpcmpeqb sub negl (bad) movsl lahf push mov pop jno or stos sub pop xor out push (bad) rex.WR rex.WRX rex.RXB rex.WB cltd fs xchg test sub sub jmpq mov (bad) rex.WRXB lock adc jne xor int3 sub rex.XB rex.RX (bad) cld xor pop xchg lock idiv frndint cmp lcall (bad) fsubrs icebp rex.W push lret in mov xlat sub cs pushq lea cmpl movabs (bad) insb vmovapd fild movsl cld mov pop outsl and lret retq or or add mov test shl jg jmpq (bad) clc imul test xchg or pushq xchg retq rex.W (bad) data16 sub es xor xchg imul jbe mov jae,pn adc (bad) nop or xor lods retq ja icebp mov fbld rex.WXB or (bad) je cmp sub jmp rex.WX rex.W repnz test int stc icebp (bad) cmp sub fldl rex.WR (bad) fcmovb and cli cmp int mov jb adc lods sub js shl mov rex.WRX xchg rex.WB movabs icebp cmc rex.WXB retq mov mov rcll test (bad) mov xchg adc stc jmpq sbb repz mov leaveq test rex.XB jmpq xchg adc movb addl (bad) rex.WRX callq test push loope xor mov rex.X js rex.WXB cmpsb add callq xchg pushfq xor pop sbbl cmp (bad) std sub lea cs (bad) (bad) mov es retq lods fwait or mov imul pop insl (bad) rex.WRB add rex.R jb leaveq adcl xchg in cli rex.WB rex.X callq stc mov fldt leaveq rex.WR cmp test rex.WB jl xchg (bad) adc push xchg andl insl cltd scas add lods rex.WRB cld sub jns jle sbb repz lods cmp mov (bad) in xor rex.WXB (bad) cmc (bad) (bad) rex.R cltd rex.R xchg (bad) (bad) push xchg test stc repnz rex.WRXB (bad) jbe (bad) rcl repnz rex.R (bad) push lret test mov insb hlt rex.B lret imul jle out xor sbb rex.WRX loope movsb (bad) rex.WX fwait nop in in cwtl jb or cmp jne jno rex.RB and sbb rex.XB cld cmp out (bad) repz rex.WRB rex.RB in mov mov or sub sub push and adc rex.WRX add clc imul cwtl mov (bad) mov shlb jae loop push stos (bad) mov adc leaveq push repz sub mov idivl xor push fwait repnz fisttpl retq rex.WXB mov (bad) std xor (bad) fwait out (bad) cli scas pop ds jmpq stc out (bad) xchg rex.WXB gs xchg sbb rex.X addl mov icebp (bad) mov fnop xor fcomi cmp jle xchg and iret rex.RB repnz or decl mov or or movslq (bad) cli rex.WRB rex.XB jmpq push mov (bad) push mov (bad) sar fs add add vmovaps adc mov (bad) stos mov jns mov flds (bad) ss gs jmpq sahf or callq movabs xchg leaveq movabs mov lea sbb fs cmc xchg mov sbb rex.WX mov pop (bad) mov jnp sbb sub movabs sbb (bad) mov (bad) insl mov cmp mov callq sub loopne pop movabs movabs nop (bad) adc xchg pushfq mov (bad) or (bad) jno rex.B movabs cs push (bad) movabs (bad) pop (bad) mov sub outsb mov (bad) rex.RXB fwait pop (bad) (bad) outsb sahf sahf (bad) (bad) (bad) (bad) addl repz rex.WR scas sub fsubrl mov jrcxz and leaveq insb (bad) std xchg in sahf pop rol pop sub mov xor mov mov cwtl mov test mov mov cmp scas add cltd (bad) and (bad) push ja add jae orb rex add or sbb pop xor cmp out in rex.WR icebp fidivrl cmpsl cmc mov loop cmp sti fdivs rex.X fcompl loope cld and cmp pop xor ss negb ss movabs (bad) xor or adc and xor mov sub (bad) icebp test and lret (bad) rex.WB mov test cmp mov (bad) popfq iret outsb (bad) jb mov pop adc (bad) mov (bad) (bad) (bad) rex.B xchg push fnstcw cld cltd (bad) pop scas (bad) (bad) jns (bad) jmpq shrl out lahf mov retq cmp (bad) enterq push sbb xchg scas adc out nop cld add xor out add (bad) mov jmpq subl (bad) in sbb jo ja mov cmp and or adc test jne es (bad) fcompl xor mov xor sub cmc imul xchg roll (bad) rex.WR mov fimul addr32 je loope mov or fmul add nop sbb imul add movsl rex.WR add jmpq adc mov rex.RX pop jns mov push (bad) fcom repz pop repz sbb push xchg xchg xor lahf lock xchg (bad) xor push (bad) stc fwait int sti mov sti sub rex.X repnz jno push add loop movabs icebp push mov decb (bad) sub or rex.B mov and loope rex.WRB test fdivp mov out pop (bad) pushfq popfq adc test fisttp movslq rorl std movb rorl rex.B jns mov rex.XB and fidivrl (bad) xchg lock (bad) sbb imul sub xor pop mov scas xor test je lret sti stos cmpsl retq in retq lock xlat mov enterq rex.XB movabs mov sbb (bad) fcomps cmp sub xor xor rex.WB rex.RXB enterq jge push or int3 mov in add (bad) and (bad) (bad) (bad) jae (bad) (bad) and test cltd testb push callq or sub or in cmp (bad) addr32 test mov adc xor lret mov rex.RX (bad) test push or xor movsl imul xor ficom and popfq test mov xor cmc jmpq (bad) fstpl roll int3 rex.WXB rex.R xchg mov fidiv idivl (bad) nop and rex.WXB repz retq test pop sub mov xchg adc enterq (bad) stc cmc movabs ds vcvttss2si (bad) in rex.WX rex.X test movslq xor (bad) mov cmp int mov stos decl sbb lret loop test adc test rex.W (bad) mov (bad) xchg sub or (bad) jge (bad) xor pop test fstp sbb (bad) adc fild sbb sub rex.WRXB rex.X pop movl (bad) xchg (bad) mov add or sti or and jns pop rex.WB mov or sbb lret test fidivrl (bad) (bad) push xchg rex.WB sbb cmpl rclb (bad) rex.W push push test and movabs cmpsl add loop xor cmpsl jnp xchg lahf roll (bad) xor and (bad) sub (bad) mov add (bad) jno pop (bad) add incb callq imul leaveq (bad) mov xchg mov (bad) or push imul jp je rex.WB idivb mov gs rex.RXB xor push test xchg rex.WX test movabs (bad) and gs push and rex.B rex.WRB rex.WB pop jnp lods or or pop (bad) rex rex.WRB pop mov push sbb push mov sbbb mov xchg stc lods or (bad) (bad) mov fdivrl add addr32 test (bad) adc loop rex.WRX and (bad) in in fwait out clc fidiv xchg (bad) cltd cli pushq cmp add in vpcmpeqw rex.B sub rex.R loop out nop xchg pop lret loope (bad) (bad) icebp retq cs or lock scas movabs test es cltd sub xchg fcmovne (bad) add jae retq xchg lods xor or (bad) or fstps pop fcoml out add cmp movabs (bad) jb cmp (bad) jae sub push clc retq xchg rcl cmc testb rex.RB adc adc rex.WXB ss mov enterq adc cld int3 cmp (bad) xchg sub cli rclb in or cmc mov lahf sbbl rex.WB (bad) test mov out icebp mov mov sub addr32 jle push retq sti sahf rex (bad) rex.WR xchg popfq sub rex.WRX (bad) mov adc mov (bad) mov in pop (bad) sti mov out mov lahf push mov push push pop mov mov (bad) js jno xchg mov fldenv pop sbb xchg pop adc out mov pop xor (bad) pop mov cmc pop int3 xor rex mov pushq unpckhps sbb test divl push mov in cli jl sub mov movabs pushq fs push movslq xchg leaveq pushfq leaveq or movslq rex.RB xor cld xchg iret jmp jnp xchg mov (bad) mov adc mov mov cmp mov jmpq (bad) loopne mov movabs (bad) (bad) (bad) test fstl jge (bad) fld rol sub clc retq (bad) sub mul scas repz loope sahf jae push add (bad) push cmpsb sub (bad) rex.RB adc jmp add rcr push (bad) je loope js jl or clc pushq (bad) repz mov int3 callq bnd push rex.WRXB or (bad) (bad) rex.RB adc rex.WB bsr rex.WRB (bad) (bad) rex.RX xor xchg subl pop xlat (bad) rex.RXB addr32 test stos (bad) mov movsl ja repz mov push test (bad) (bad) std lea jmpq jmpw test mov jmpq fpatan std cwtl int3 (bad) xlat pop ficom xchg pop and mov xchg push mov mov out add insl roll jno ds (bad) cli cltd rcr add retq xor icebp sbb (bad) (bad) adc xchg cmc mov imul movabs jno xor (bad) (bad) (bad) jbe (bad) sub cmp sub lods (bad) mov mov fisubr cmp cltd movsb mov cmc sub int3 sub rex.RX and fldt movabs xchg or fimul (bad) mov imul cmp (bad) mov (bad) in movabs adc add mov jnp rex.XB jl jnp rol or je cwtl xchg outsb rcll fwait mov cmp mov mov lahf sahf sub (bad) mov (bad) cmp je mov sub movabs rex.XB rex.WR retq add mov psrld add (bad) lret ss add and movabs xchg sti retq movabs (bad) mov (bad) cmpsb testb push mov lock push mov jns adc pop sub (bad) addr32 sub cltd std loope loop mov pop hlt adc xchg imul (bad) mov (bad) int3 cmp cmp clc rex.XB xchg xor sub faddl retq pop cwtl jmpq lods vshufps (bad) xchg scas es retq push imulb repnz add fldenv stos sbb fmull pause pop cld cmp insl (bad) push test sahf divq sti hlt jb fdivr jae fisttpll fs movabs xlat mov orl rex.WB and mov jns mov push (bad) (bad) (bad) (bad) jne add sti push int3 jp (bad) sub mov jb rex.WB rex.RXB rex.X stc pop (bad) clc roll pop repnz sbb push fcoms (bad) sahf sti xchg pop (bad) popq imull cld add (bad) sub jg je in rex.WB jrcxz andb in enterq mov mov loopne out lock pushq cmpsl pop (bad) (bad) imul add or (bad) sbb sahf or (bad) sbb popfq mov in (bad) pop stc sbb rclb retq or push push leaveq retq cmp push push int add (bad) (bad) sub sub insl and cmp mov push repz add loop jle xor mov add mov movslq pop (bad) push lret (bad) cmp xchg repz rex.WR add xor xor pushq jnp (bad) int3 neg insl adc cmp jmpq cwtl mov mov sbb rcll hlt (bad) nop sub or jns rex.WXB int3 xchg xor rex.WR jle lahf popfq movsl ss (bad) repz int3 add rex.B pop icebp xor int3 nop (bad) jno sub rex.XB mov int3 (bad) mov fwait int3 sbb xor movslq rex.RXB jmpq cwtl push pushq out test sub mov ror mov xchg xchg cmp xor (bad) or mov jmp add fxch sbb jmpq gs leaveq xor mov mov xchg cs fsubl adc rex.WB sub test out push movabs xchg push leaveq push sbb fistp (bad) mov sub rolb je int3 imul or retq insb pop icebp rex.RX movaps rcll mov in rex.RX (bad) icebp retq push ds (bad) testl mov test and loop mov loopne xchg retq adc and lock leaveq jbe int rex.WR hlt repnz mov xchg ss sbb (bad) add scas mov mov sub pushq icebp repz mov psubw mov mov (bad) pop and rex.R xor (bad) (bad) mov test (bad) (bad) mov and and sub es jp addr32 movsbl mov or xchg xchg mov mov js rex.RX leaveq rex.XB rex.WX repnz rex.WRXB std xchg cmp rol (bad) fcoms rcl imul xchg cmc (bad) lret pop or add jne add fsubrp cmc mov gs add and hlt movabs jno add cli cmc loope mov lret and fptan test mov and jge iret (bad) mov xor mov cmc and xchg adc leaveq loope enterq outsb out stc mov (bad) mov rex.WRB loope retq mov rex.WRX faddl int ss cmp in xor int3 mov (bad) xor push jp mov xor pushq mov pop jmp sub xchg cmc lea adc sbb test ja rex lods xchg shrl mov enterq mov rex.WRXB cmpb cmp xor (bad) loopne rex xchg lret clc sub out notl cld std cmp movabs pushq mov xchg (bad) add test cmp mov loopne and jne rex.WB cmpsb xor pop push xchg out (bad) cmp (bad) jno cs lret pushfq out pop rex lahf adc add jl push ror sub vpsadbw or push incb rol (bad) rex.RX fdivr xchg rex cs (bad) in sub insl mov (bad) movabs cmp xor lock xor outsb adc stos and xchg test fcomps mov test sbb pushq add (bad) mov jl (bad) jl jmpq pop cld jrcxz pop movabs jmpq jae iret test out add (bad) cs or lret movabs jns jns mov cltd scas mov xchg fisubl push xchg pop or stos icebp out (bad) add retq and cmp (bad) repnz rex.WRB jp jno rex.XB rex.W fidivl fadds (bad) lret leaveq xor ljmp add (bad) fnstcw retq rex.X jne cmp fisub (bad) imul xchg lods cmp sub fbld (bad) rex.WRX mov sub jns pop cs rex.WXB rex cld (bad) jae xor cs fstpt pop retq addr32 push mov or rex.WRB rex.RXB fidivr push lock hlt jnp shll lock rex.WRB addr32 leaveq lods sub cmp test scas sub es int3 pop cmpsl fistp (bad) loopne cld push movabs loopne lods xor mov ss xchg mov jne xor out enterq sbb pop repnz hlt cld add xor (bad) movsb and (bad) mov jae cmpsl sbb xchg retq cmc outsb xor xor jne or sub mov jo fmuls enterq (bad) addr32 (bad) (bad) repnz loop or mov add movl bnd jb rex.WB xchg push or icebp (bad) (bad) stos and retq cmp cmpb xor mov sub (bad) (bad) xor cmp movsb out rclb fcmovnbe fidivr add movabs mov movsl cs gs mov xor popfq or (bad) and stos orb mov sub mov callq ror (bad) nop out ss and xor stc sub pushq mov cs rex.WRXB (bad) lods test mov jmpq add fxch (bad) (bad) decb rex.RXB add and icebp sahf adcb or push movabs (bad) jl (bad) pop lea lea mov mov mov push jp (bad) gs rex.WR (bad) cmp js jae xchg or pushq and xor lea (bad) add int (bad) or movabs push (bad) and add cmpsb pop (bad) fldenv sbbb mov fcomi xchg jb add mov lods xor cmp fidiv rex.WR rex.X rex.RXB (bad) lret iret xor sub rex.WXB (bad) faddp or cmp pop outsb push adc addr32 xor xorb sub fs cmp jns nop divl and jo pop add pop retq xchg (bad) imul cmp sahf incl pop clc (bad) lods (bad) fimull mov jns outsb fwait fwait clc sahf or (bad) pop cmp roll jl rex pushfq cmp jrcxz test mov xchg addl cmp test imul or mov cmc leaveq cmc stos adc push retq movabs repz cmp mov cmp cmp (bad) icebp jmpq notl movabs je in mov ss movslq loopne (bad) je je rex.WB popq mov (bad) pop cmp jmp pushq mov shrl xchg rex.WR movabs imul mov loop (bad) pushq shrb (bad) rex.RB xor cmp or push in in enterq push fnop and cmp xor jae stc fistp enterq (bad) (bad) (bad) (bad) (bad) mov imulb (bad) sbb js cmp sub xchg cmp jo jnp nop mov rex.WXB jge (bad) movsl xor hlt rex.R mov jns or cmp (bad) cli adc mov add jae rex.WXB rex.WR jo add (bad) test (bad) xchg lods xchg repz push add sbbl xchg sbbl leaveq (bad) loope pop (bad) pop sti (bad) roll fs (bad) sub add cmp loop cmp (bad) outsl (bad) std in hlt (bad) enterq outsl fs loop icebp test rex.RB xchg sbb jno adc jg iret lahf subl int (bad) rex.X imul int3 lret (bad) stos or xor retq mov rex.X enterq ja and mov and scas ficomp stc rex.WX int mov pop rcrl cli sub fsub sbb add stos or (bad) mov popfq loope push int int3 popfq leaveq popfq lret lahf (bad) pop enterq sub fsubrl rex.RB mov rex.WR rex.WX or nop fisttpl xchg js mulb rex.WRX imul xor mov notl movabs cmpsb loop pushfq rex.X (bad) sub rex.WB repz xor xchg rex.B nop (bad) cmp (bad) lock xchg rex.WRXB outsb xrelease int movsl test pushfq out movl add (bad) (bad) hlt fwait xchg adc lods add jmp sbb mov fwait xor add rex.B fwait icebp pop rex.XB movslq hlt xor sbb in lea test je enterq test cmc rex.X imul sub callq sbb int3 (bad) mov insb pop mov mov out xor mov lock mov xor sub repnz movsb pushq rex.RXB fs leaveq cli gs rex.RB (bad) cltd (bad) test rex.XB sub (bad) in hlt idivb jg or cmp in in ffreep je test (bad) jae jge ficom or cmpsl iret adcl movabs nop push mov out sub rex.RX rex.RXB xchg sub or mov (bad) fsubrl (bad) jl movabs andl int3 hlt sub jrcxz or hlt test insb icebp leaveq rex.WXB in fisubr cmc mov cmp sbb cs push (bad) gs sti movabs (bad) pushq out cltd sbbl push mov rex.R rclb js rex.XB ss (bad) (bad) negl mov (bad) repnz movsb jmpq jl in (bad) cmpl loop test retq push rex.X rex.WXB sti retq add cmc rex.R add mov in xchg xchg cmc cld repnz movl sub pop push retq ja test add jne cli add (bad) int3 sub repnz (bad) cmp sbb stos in xor out stos push adc rex.W lock adc cmpsl (bad) push cld rex.XB lock fwait loopne rex.XB xor (bad) pop shr fcomp (bad) jae cli int3 rex.RB (bad) add loope sbb sub xor or xor jmpq mov mov retq rorl push sub mov pushfq fwait push (bad) lret stc or mov leaveq (bad) rex.X pop (bad) movl leaveq (bad) or xchg rclb jl shlb es push xchg or or rex.WX mov jo rorl add jae loopne (bad) (bad) sahf lea in movabs int mov or mov loope (bad) fwait add pushfq sub rex.WX mov lret pop add fildll add callq (bad) movsl pop cmc adc jo in adc xchg stos frstor cmp xor mov neg pop in rolb rex.R test jns sbb and ds adc jp adcl sahf sarl rex.W push (bad) (bad) cltd rex.WR xchg scas ds loopne cmp lods adc test outsb adc out rex cmp sahf rex.X or cmp movabs (bad) mov sbb add in jl (bad) fsts (bad) test cmp rex.RXB rex.WRXB int add loop or stc (bad) shll ds (bad) add out rex.WR rex.WRB (bad) mov sbb rex.X stos enterq movabs xor adc push jns mov mov sub cld and repz ds jg repz int mov sbb (bad) mov rex.XB push repz add (bad) (bad) or mov add cs cmc int3 ds xchg xor pop icebp rcr push movabs add adc repz test (bad) xor loope sbb adc cmpsl jrcxz sbb loopne push (bad) mov mov (bad) xor sbb icebp (bad) jrcxz or pop (bad) adc icebp sbb int gs (bad) adc repnz rex.WRX rorl jmpq (bad) jmpq add or mov (bad) sti cs or insb pushfq in add or cltd or cmc sub (bad) push mov lods nop add jp subl movabs cwtl (bad) rolb nop mov rcrl mov mov rex.RXB (bad) rex.WR (bad) mov rex.WR pop (bad) and retq xchg in enterq sub adcb and mov mov es (bad) cli xlat movabs movsl jle xor sbb jg pop cmpsl jns jns mov test cwtl ja jbe xor fimull sub rex.WB (bad) xchg (bad) nop jl push xchg push push movl movabs sbb xor repz mov add (bad) and movsb mov sub xchg cli mov xor in (bad) (bad) lea addps (bad) push pushfq add sbb push lahf rex.R rex.WRB stos rex.WX sub or adc in jo fs sahf out retq jns scas xchg jl scas mov retq mov sub movslq xorl (bad) addr32 addl mov fucom jrcxz rex.B cs mov rex.WXB cltd xchg (bad) out cmpsl (bad) sti rex.W leaveq out (bad) hlt (bad) cmc mov mov xor stc loope add jns movsl leaveq jge add (bad) (bad) out cmp loope nop notb mov sarl movabs push in push out scas out xor int sbb sbb pop retq cmpsb icebp sbb xor adc cmp popfq test rex.WRB pop movabs (bad) (bad) cltd movabs adc out add pop mov cmpsl rex.RB test mov fmul rex.WR pop xor pushq xchg fwait sub test xor jrcxz sbb mov lea icebp cmp push mov and (bad) (bad) xchg cmp (bad) cwtl lods and int (bad) leaveq jne cli jp xor movsl xor mov add (bad) (bad) movsl stc (bad) and pop movsl testb int3 sub (bad) fisttpl pop rcrb or cmc rcl or (bad) (bad) movsl xchg (bad) xchg clc popfq (bad) test leaveq icebp pop xor scas (bad) rex.W push insl (bad) fadds js (bad) add rex.WR loope add (bad) (bad) rex.XB scas movslq out jno mov (bad) (bad) (bad) fninit mov cld cld movabs stc mov retq rol mov imul jg add cld mul mov cli lahf cmp out jb (bad) and mov push cli or leaveq (bad) ja add pop popfq (bad) (bad) pop xchg sbb cmp sbb (bad) add rex.WB outsb cld (bad) movsb (bad) lock mov retq xchg rex.X mov loope stos movslq push hlt or scas and rex.R rex.RB pop (bad) jmp (bad) jne stc sub and (bad) (bad) ja int3 (bad) fldenv movsb pop test (bad) adc testl jae mov movabs and flds mov sub pushq cli in stos and rex movsl (bad) (bad) pop xchg rex.X jg lret test retq rex lea jle movabs js mov lock jrcxz test test outsb notl out sub sub mov js out test rex.XB out mov add in sub test adc (bad) sarb cs lods movabs adc rex.XB jle xchg sbb push in mov (bad) imul in add cld test cli popfq mov fsubrl jrcxz cmpsl mul or add xchg test lods out or (bad) mov sub pushfq (bad) in hlt iret in rex.WR adc rex.B test rcr push sbb fbstp jp pushfq pop sub pop mov and out pop (bad) retq jns (bad) (bad) (bad) mov retq and pop jle (bad) add jno jbe repz rex.RXB jmpq movsl ficomp or sbb pmaddwd enterq (bad) stos and (bad) mov or movl rex.RXB (bad) test or mov test pop movabs rex.WRXB ds mov rorl orl rex.W outsb (bad) test (bad) add icebp fisttpl mov and pop rex.W fisttp push movabs sbbl sbb cs jle or xor je fist (bad) push popfq lods jrcxz gs add (bad) push (bad) mov or add mov insb rex.B cmpsl pushfq nop jl sbb mov mov outsb test xchg (bad) mov jnp xchg cld mov push out pop mov test (bad) loope (bad) vshufps sbb sub jo popfq (bad) rorl mov ja mov xchg rex.WX xor jbe out mov jne movabs pushfq enterq movabs lahf (bad) sarb js pop hlt or rex.X (bad) cmp xor rex.RXB cs (bad) or rolb cmp icebp or mov popfq icebp test or or notb test pop xchg push or add mov lahf xor push fwait rorl mov lahf lret jmpq xchg paddsb decb add fwait callq or pop movabs xorl rex.WB test (bad) ss pop leaveq in sub xchg rex.WB stc test rcrb sarb mov pushfq add (bad) enterq push (bad) ror lret pop (bad) push mov cmpsb jmp sub mov (bad) leaveq int3 lods stc (bad) cmp cli rex.RB movsb leaveq (bad) icebp rex.R lret add shl adc movabs fadds imul mov xor xor (bad) ds (bad) xchg xlat mov push rex.RB es roll pushq add pushfq push leaveq pop add cmp fnop je xor (bad) cltd lret movabs add add out add retq mov cld jns (bad) movsb incb cli or (bad) xchg cs adc sbb enterq mov (bad) sarl xorl repz sub add mov cmp push and icebp pop movabs xor negb popq sahf and sub stc rex.RX fldl xchg rclb subl mov in in sbb add in adc sbb notb pop int3 push in lret mov xor mov sahf sub rex.RXB jmp ja push and mov xor xchg add xchg mov (bad) loope js or sarl cmp mov (bad) xor movabs jl jmpq rex.RX xchg mov cld jmpq lret jns fs std sti pushq mov sub xor test cmpl xchg mov rex.R repz (bad) or loopne ffree push (bad) pop and leaveq cmp rex.XB rex.WXB (bad) lock (bad) cmp lock or test fild jns rex.RB movsb or jne xchg push retq sbb pushq (bad) push or sub mov icebp fmull (bad) scas loope (bad) mov repz loopne xchg xchg jp flds punpcklwd sub mov shll retq jp jne gs (bad) and rex.RB rex.RB cmp rex.X rex.X cli leaveq adc mull jnp mov sahf adc jno js mov cmp mov jb (bad) stos jae push mov shrl mov jnp mov mov (bad) clc out jp notb cmp fwait ja mov sub xor cmpl add idiv pushfq pop insb stc (bad) cmc or sar jmpq int xchg mov sub pushq shl sub sub pop add rex.WRB rex.WX out sti leaveq mov int cmc sub (bad) (bad) rex.R repnz movabs in xchg xchg mov (bad) jg xor leaveq sub js (bad) push in (bad) jne pop retq test rex.RXB std mov int ljmp faddl mov iret incb callq lret stos xchg repz mulb (bad) sahf icebp xor and ficompl push (bad) cmp (bad) pop js movabs movabs cwtl push pop callq in int3 fcomi jp in sub stos rex.R gs and repz enterq xchg mov rex.WRB repz in jrcxz adc xchg and push retq fldt rex.WXB adc jae xchg ss movabs push rex.WXB rex.WXB xchg pop fsubrs jmpq jmpq rex.RB (bad) xor movabs pop (bad) rex.W jo cld rex.WB fwait cmp cld out pop mov cmc and retq adcl (bad) mov mov cmc pushq cltd mov lahf adc xchg stc adc ss rex.RX xchg int3 leaveq cli jmpq cmp movabs rex.RXB lods sti (bad) shl mov jrcxz loope std mov xor or mov pop lret (bad) add (bad) jmp shl (bad) addr32 loop icebp out repz icebp cltd retq cmp xchg leaveq cs rex mov movabs jbe add data16 rex.RB ficompl incl movsl pushfq mov (bad) xchg push xorb stc stc movabs rex.WRX mov (bad) orb mov rex.WXB rex.XB rex.RB jmpq in leaveq xor xor movabs mov cltd pop sub mov or popq cltd retq and in add loopne adc callq adc sti and or popfq out out retq loope ffree jge jl test xor loop xor stc sub mov lea and mov dec xchg sub vsqrtpd jrcxz leaveq adc xchg in outsb rex.WRB out sub movb push (bad) jl hlt loope adc or (bad) rex.W sahf xchg js rex.B lock mov sti iret (bad) mov in mov (bad) out pop xchg mov fidivl test or mov scas sarb mov shrl sub sbb fistl out je or and pop lret in in (bad) mov mov pushq rex.W cmpsb icebp cltd mov icebp add mov push and clc imul (bad) repnz push loope retq jl int3 mov (bad) sbb xchg sub fidivrl (bad) adc loopne jp js in (bad) pop push mov jp out push mov sub mov add rex.RXB push (bad) mov mov jno mov movslq sbb push in xchg movsb xchg adc mov adc test mov loope cmp cwtl in loope mov push mov loope mov movabs movabs icebp rex pop nop xchg lret pop or clc mov mov adc test stc and rex.RXB andl movabs or jae pop icebp leaveq pushq icebp jb mov (bad) jle jrcxz int3 retq (bad) mov sti cs fisttpll loop fs je mov mov stc icebp push leaveq add (bad) sub (bad) xchg stos or push fstps (bad) (bad) int3 cld (bad) (bad) (bad) (bad) jno movabs movslq icebp (bad) fnsave sub cmp pushq xorl add sub jmpq (bad) icebp jno rex.WXB mov mov jmpq mov gs outsl mov vmovaps enterq retq std ficompl je rex.RB add add stos jl xor xor jno xchg cmc fadds rex.WB push jl adc (bad) cmc imul rcl mov icebp test repnz mov push out and and lret mov lock xchg jne movabs test xchg mov mov add sahf and out faddp mov movsl shrb and test xchg (bad) (bad) movabs rcll xor rex.RXB rex.B cmp jno (bad) sub cltd adc xchg mov movabs and lock loope mov (bad) pushq add sub sti stos jno jne mov push insl jmpq cmpsl (bad) hlt sub cmpsl shrl adcb jle in rcl add vpaddusw nop idiv mov ficom xor cmc icebp (bad) vpsraw in fldl cld jmpq (bad) rcrb (bad) pushq and callq hlt xor out (bad) push mov sbb cld xor xor scas or jb jge pop adc rex.WR rex.W cmc mov cld in callq jns or js jp movabs in (bad) roll mov and jbe popfq (bad) in cwtl rex.WRXB (bad) mov cli jbe or (bad) loope push rex.WX xchg sbb imul sub add in icebp sarb repz mov data16 xor xchg xchg cs add lods (bad) mov xor push ss mov or cmpsl push push lret hlt sub rex.WB rex.WXB movabs mov in insl mov mov icebp push fwait nop and xchg sub (bad) (bad) leaveq add adc rex.WB gs rex.WB jne negb leaveq push (bad) mov outsb adc icebp jno or mov xchg and jne or jno rex.XB (bad) loopne icebp xchg rex.WR scas and movabs fisttpll pop sub fdivrp and movabs cltd sub repz xchg outsb jno int3 je (bad) (bad) mov add mov (bad) push ja test rex addr32 out xchg clc mov add (bad) loop (bad) mov sub icebp cltd lahf leaveq mov sub ss add mov lahf lods hlt sub (bad) decb enterq rex.RX rex.WR sahf loope add and push pushfq outsb cmp push push mov loope add stos insl (bad) int outsl cmpsl or outsb cmc test imul scas mov jno addr32 iret sub ror cmc mov (bad) xor pop stos retq add sub lret xchg out hlt xor sub or icebp in leaveq imul mov mov mov sbb test jrcxz xchg rex mov andl icebp (bad) rex.WXB xchg mov xor cmp (bad) pop or loope shr movsl stc int3 lretq sub (bad) (bad) cltd movabs fldcw add (bad) mov rex.WRB retq pop fcmovnb js test (bad) mov rex rcr sbb or rex.XB (bad) sahf movabs and jge loope or std callq adc test int rex.RXB cwtl sub mov add rex.WX sbb loope fs test rex.X xchg add add lea vmovaps or pop (bad) adc jp loope (bad) pushfq mov xchg pop sub (bad) push (bad) mov shl xchg rex.RX cmp mov rex.RXB rex.WRX (bad) movabs xchg rex.R rex.B fisttpl xlat fs sahf add xchg movabs (bad) and (bad) jbe (bad) mov sub test xor mov (bad) (bad) rex.WB xchg fisubl subl add jae sbb retq movslq mov rex.WB negb rex.WRX icebp (bad) xchg rcrb xlat or insl (bad) mov (bad) icebp test mov in out stc sbb mov lea in std jno (bad) int (bad) mov scas loope movabs sbb mov cmp cli shrl gs mov lahf (bad) out movsl add in cmp icebp cld test cld jne mov jrcxz,pn callq int (bad) fiadd mov js pushfq rclb mov mov adc rex.XB and xor clc sbb jne clc stc test movb test cmc jmpq jl out add js ficom fbld pop lahf int (bad) cmc in retq outsb fs push xchg out sub mov or (bad) mov out rorb add (bad) out test adc adc movsb (bad) out sbbl xchg (bad) leaveq jge pop hlt push mov callq shrl mov popfq frstor (bad) rorb (bad) nop lret sbb xor leaveq jl mov (bad) (bad) cld rex.X addr32 fdivr (bad) (bad) (bad) shrl outsl data16 xadd fmul mov xchg add add push jl xor ds ds xchg retq rex.RX cmp retq fldl sub divb and cmpsb jg push xchg (bad) (bad) je add jb (bad) jg rex.RXB in xchg popfq stc sub cmp hlt ss push jge mov imul jp push lea (bad) rcrl jns sbb xchg rex.RX lods (bad) cmc enterq shr xchg adcb fimul xor jbe lret pushq stos stos rex.W rex.WRB cli and push jle pushq sbb (bad) add sub scas add mov add (bad) out sahf repz (bad) (bad) cld pop add lret (bad) (bad) (bad) in movabs rorb stc sub add in imul cli cwtl andl cmp ljmp add (bad) or cltd (bad) imul (bad) stos nop stc jmpq mov int (bad) xor out or clc pushq bt cmp cmc bt cmp jmpq (bad) jrcxz (bad) mul rex.WXB push cli mov std retq add (bad) lock push mov (bad) pop xchg negb pop imul (bad) rex.RB rex.X mov repnz xor scas test retq (bad) (bad) jl (bad) test push mov mov add mov lret clc jae jge cltd xchg sahf rex.WXB jne cmp pop jo xor mov mov cltd in pushq (bad) adc xor (bad) data16 (bad) (bad) sti (bad) and mov (bad) and imul (bad) out test (bad) (bad) (bad) lcall (bad) (bad) shll ds sbb icebp pop cld insb enterq sbb add nop negl psrlq (bad) stc xchg cli or jmp xor mov cld repnz cmpsb lret sti mov xor movsb (bad) jae add mov adc dec btr mov ror or bswap mov cmp clc cmc cmp xor bt cmc jmpq jmpq lret mov movslq (bad) jle,pt ja jbe int (bad) and fimull jns lea rorb scas in in rex.W rcl stos (bad) out or callq sub and leaveq repnz mov fisttpll imul (bad) mov mov movsl or cltd cmc sub push (bad) ss sbb xchg rex.WRB cmpsl outsb (bad) adc add xchg xchg mov icebp out (bad) rex.RXB xchg rex.WR fwait sti rex.WRX std cmp jmp and cmp jp sbb outsl (bad) (bad) lret movslq mov mov decl mov jg,pn fnstcw cmp jge push fmull mov faddp (bad) push cmpsb mov (bad) and jns gs movslq (bad) imul popfq movslq movsb pop sahf cld lods incl jle sahf mov repnz (bad) mov xor jb out lods mov and (bad) insb sbb rex.RB insl sub repnz add (bad) xchg sbb lods sar mov xchg or es mov (bad) sub mov (bad) (bad) jge cmpsb shll test mov rex.RX es (bad) (bad) decl push or jnp mov stos (bad) xor pop out movsb mov clc push addr32 pop cmp adc jae int3 insb rex.XB cwtl add mov xchg fdivs xlat (bad) fldenv out fidivl mov or movslq mov test (bad) ror (bad) xor test mov movabs and cmp mov cmpsb adc fmuls rex.XB xor mov xchg mov add push cmpsl pop int rcrb push jbe (bad) cmc pop sub pushq rex cmc jge (bad) (bad) (bad) sti repnz rex.RXB sub jl (bad) enterq lret mov (bad) movabs sbb callq rex.WR rex.X addr32 and cmp enterq retq cmp addr32 fs hlt (bad) (bad) (bad) (bad) mov cli out clc sub add add and and xchg push (bad) pop adc jg lahf jne sub (bad) loope jae pop cmp (bad) jbe out rorl (bad) xor cmp xchg shr jb incl rex.RX add data16 (bad) xor pop in adc and callq rex.WRXB (bad) ds rex.WX (bad) scas xor (bad) rex.WX rex.WRXB pop adc or sub mov (bad) (bad) rex.R fwait mov (bad) xor adc mov mov add pop rex.WX retq fdivl (bad) mov jae (bad) xlat pop (bad) (bad) (bad) sti mov (bad) (bad) (bad) sbb lods mov push cmp jmpq sub (bad) pop mov lcall (bad) cmpsb addl and data16 and movsl cltd imull out mov rex.WX (bad) jo test jns retq push rex.B es int3 adc fisubl cmp rex.RX ja mov xor jne jmpq jl jb bt cmp jmpq ror stc shl sub movzbw mov lea jmpq jb test bt bt jmpq clc or jmpq mov in cmpsl (bad) jns pushq rex.B rex.WXB rex (bad) shl rcrl adc mov insb imul mov push movabs rex.WRXB pop lretw jno fstpt pushq jg lock clc xchg loope movabs mov jl sbb add rol (bad) loop outsl jne push (bad) or (bad) (bad) (bad) decb (bad) (bad) (bad) decl add push rex.RX pop mull cmpxchg (bad) scas test xchg (bad) jrcxz repz xchg mov test out or sahf mov and clc mov std push (bad) mov xchg in lock and leaveq mov mov rolb (bad) mov leaveq (bad) push loopne xchg maxps push loop sti lret movabs jmpq andl rex.WXB rex mov sub popfq outsl push adc xlat and ds pop push mov sbb (bad) xor sbb pop or cmp mov (bad) sarl (bad) jae sbb or callq jae add pop mov idiv rex.WRB sbb in (bad) jb (bad) (bad) (bad) pushq jb (bad) adc jge retq rex.X (bad) test (bad) stos or jne xlat jo rex.WXB xchg (bad) sub xchg mov insl cmp mov add add add xchg jp push jge imul cmp pop clc outsl push xor lods pushfq xchg jg add imul callq pop loop rex.R xor callq mov (bad) (bad) (bad) ja and sahf mov in rcrb lods adc retq add jne ud1 movabs add scas jno (bad) fwait movsl adc xchg xabort fwait js (bad) sub xor (bad) xchg movabs pop mov test icebp mov cli xchg rex.WRB mov adc rex.WR rex.RXB movslq (bad) fisttpll lods push mov in scas pop rex.XB rcll xchg (bad) mov mov ds push xchg ss sbb (bad) cli rcl mov (bad) (bad) (bad) std sarb insb rcrl mov ss (bad) (bad) callq sub rex.X incl push and mov frstor xor imul sti push pop rex.B rex.X push cmp or and adc cltd (bad) (bad) psubsb leaveq mov cmp adc xchg jmpq jmpq mov shr xor pop (bad) and loop fidivrl sub pop mov jne sbb adc jno mov mov cmpsb jo,pt rclb mov (bad) (bad) in fstpl in loopne (bad) movabs jl jnp rex.WRB (bad) pop enterq mov mov push rex.WB pop cld frstor movsb mov (bad) es (bad) (bad) (bad) cld or xlat std (bad) (bad) (bad) (bad) (bad) fwait (bad) mov scas (bad) idiv (bad) pushq loope xchg adc mov add (bad) cld jmp mov movsb rex.WX (bad) rex.B xchg push cli mov (bad) (bad) add sub lock pop cmp jl mov jp add movabs pop es adc mov mov cmp add add imul lret rex.XB lods lret (bad) pop add mov div callq faddl fmuls push ss test mov and (bad) mov adc movabs imul (bad) jno and (bad) mov mov mov sub mov xchg nop (bad) sub in (bad) cmpsb (bad) (bad) (bad) sti sahf out (bad) (bad) jnp (bad) (bad) (bad) (bad) stos (bad) rex.WXB and stc cli jae and loopne (bad) (bad) (bad) ljmp rex.WRB ds or add sbb (bad) (bad) mulb fistpl outsl shrl shlb jbe movb sti mov rex.B pop and or pop pop leaveq pop mov cmp lods paddw imul test stc add jmpq jne lea xor xor not mov sbb not add (bad) lock mov cmc clc test jmpq jne cmc jmpq jmpq popfq lods push mov jae or movabs jp enterq (bad) rex.WR lcall rex.WRX (bad) jns pop sub in adc cld (bad) nop clc rex.RX xchg fimul cltd loopne nop rex.RXB repz cs xchg stos out in adc es lods cltd rex.WRXB es sarl cmpl mov pop cmp xor rex rex.WX movabs (bad) (bad) stc mov (bad) (bad) (bad) cld rex.WRX out and icebp sti nop hlt xchg repnz int3 loopne or out jg cmp mov (bad) pop clc mov jno xchg fnstcw (bad) (bad) (bad) std lahf (bad) (bad) lret xorb icebp rex.WRXB lock rex.WRXB mov fisttpl sbb rex.B or imul int3 fcomip cmpsl sub mov getsec mov (bad) (bad) cmp push (bad) mov subl in push xchg (bad) (bad) std (bad) gs pop and hlt sub xor (bad) cmp cli (bad) and push add (bad) rorl sbb and or (bad) (bad) (bad) (bad) in fmul jmp je rex.RXB cmpsl (bad) mov jnp out mov jp xor in stos fcomps mov ficomp sub (bad) mov adc push sti add lods mov (bad) and lods pop cmpsw clc es or xlat pushq jb cmp cmp sub cmp or mov adc movabs or jp cmc push fisttp lods mov cmp hlt (bad) rorb movslq add cmc pushq cmc cmp cmc cmp jmpq xor (bad) push mov cwtl push movabs int (bad) repz (bad) (bad) or or std lods (bad) (bad) cmp in (bad) xchg out rex.WB rex.XB orb cli js es mov jne rex.WRB rex.WB retq std pop xlat rex.B (bad) stc sub cmp data16 (bad) xchg sbb xor (bad) std or (bad) mov (bad) (bad) std (bad) mov pushq lods mov cli fstl sub xchg push cmp pop mov out add add mov sub clc (bad) pop std mov incl (bad) cmp lahf mov fdivrl lods icebp add pop in sti (bad) loope xchg popfq mov lods sti jp xchg stc rex.WXB or in jmpq sub mov cmc xor (bad) jg xchg mov adc add add test insl movsl cld (bad) stc jmpq jmpq cmp sub stc stc cmc bt ror cmp test clc jmpq rep not not bswap pop jmpq ja or jmp loopne mov movabs (bad) addr32 sbb xchg clc out lea lods pushq xchg jl adc (bad) (bad) adc jg faddp (bad) rolb cltd mov pop insl mov pushq (bad) jnp leaveq sbb subl add mov adc or nop outsb (bad) jl lea loope xor rex.WB pop add rex.WRX std movabs std or cwtl mov (bad) (bad) std cmp cld es mov test andl add ja sub xchg xchg movslq subl push cmp (bad) mov xchg test push fimul insb mov jnp jmpq mov mov loopne adc mov (bad) push and mulb cmpl jle addr32 mov (bad) scas rex adc test add bt bt cmp jmpq lods or mov fiaddl cmp add sahf rex.WB stos rex.WXB cmp imul fdivl lahf int jmpq rex.WRX xchg xor adc (bad) sub movabs jp pop rex.WRB or callq rex.WRXB cmpl sub jbe imul movabs pop fadds rolb rex (bad) (bad) (bad) sti xchg (bad) cmpsl je (bad) (bad) (bad) (bad) cmpsl stos imul ss (bad) (bad) callq xor shlb and lret std negl loope jp mov adc rex.WX push addr32 (bad) jno out rex.WX ds subl js rex.RX mov sbb (bad) rex.B je jmpq jbe shld stc bsf shrd sub rcl xchg movsbw mov movzbl add not and mov or add sub shr neg adc mov bsf jmpq test je and bt jmpq jmpq ja clc jge stc bt imul jbe stc stc test add jmpq adc jmpq jb cmp clc stc cmc cmp jmpq cmp add stc clc jmpq jne bt jmpq jmpq jmpq add jmpq lea jmpq jmpq xor je or cmp sbb movabs mov (bad) popfq rex.WRB addr32 (bad) rorl and add insb rex.X lock jae lahf icebp cmc xchg cld out jno cmp jb add lret (bad) rex.XB (bad) retq leaveq rex.RX shll mov insb (bad) pop retq rex.WXB xor rex.RX fisttp (bad) pushfq in cltd and jmp addr32 cmpsl movslq (bad) (bad) sti cld mov (bad) (bad) decb pushfq movabs in in repnz add or pop jle mov or lods outsb leaveq out rex.WRX fisttpl (bad) loopne nop mov rex.WX xor xor (bad) rex.WX callq push or (bad) and (bad) orl jmp sub (bad) ror lea mov sbb btc add rcr mov stc shl mov clc cmc bt sub cmp repnz jmpq sbb push clc (bad) retq movslq adc xchg hlt push pop jbe test pop test lret xchg rex.WB jmpq (bad) pop mov mov (bad) xchg sub (bad) xor loop rex.RB xchg (bad) iret add add or loop mov test sbb add or or jp nop adc scas or adc (bad) (bad) addr32 movabs loope adc and jl xlat mov (bad) and adc incl jmpq jne sar bts xor mov bt jae add jmpq mov mov fistl mov icebp (bad) stos sbb xchg or mov repz pop movsl (bad) push xor fwait cmp jrcxz mov shrb repnz jno adc (bad) scas retq add lods push add in fstpt xor stos cltd rex.WXB rolb rclb (bad) sti xchg pushq test stos sbb jbe jns mov scas (bad) (bad) (bad) (bad) sti xor lret mov std rol and jl (bad) scas loopne xor lods (bad) (bad) movsl sbb push add (bad) (bad) (bad) lcall and rex.WRXB addl and stc movabs negl xor fcompl subb jbe mov std (bad) jle mov xor sbb movb bt stc test jmpq jmpq jmpq jne seta pushfw bt rcr inc inc mov cmc bt neg bt bt stc jmpq jmpq je not mov xchg mov lea movzbl xchg lea lea mov bswap mov mov lea mov xchg xchg jmpq cmp sub jmpq jmpq add (bad) or sti (bad) pop sbb pop pop test xor jp (bad) mov (bad) (bad) leaveq callq fmull in (bad) jno insb test push (bad) jp mov fcmovnu adc mov je xorb callq mov test rex.R mov push (bad) testb loope mov fimul fisttpl add xor pushq push rex.XB out scas pushq scas xchg loope,pn (bad) es sbb sbb add (bad) pop jge jmp fsubl pop push icebp hlt add add cmp fstps cmp xor push rex.WRB rex.RX hlt cwtl enterq and roll movabs rex.WRXB pushq adc mov movslq (bad) lahf add (bad) adc sub mov rex.RB cmp push push xor xor fs insb add lret movabs xor sub rcr bts add and mov setns jmpq roll pop mov xchg stc (bad) (bad) (bad) repz mov push (bad) mul cltd rex.WX pop repnz and mov mov jl pop (bad) roll pop repnz adc jns pushq (bad) (bad) cwtl (bad) leaveq movabs pop (bad) repz mov mov imul adc (bad) mov (bad) (bad) (bad) cld and sub jmpq mov adc and mov in cltd mov cmc and jle jns adc adc (bad) test rex.XB rcrb xchg (bad) loopne add add je and rex.B or adc push cld iret pop cmp xchg mov in retq (bad) mov callq rex.XB fs mov movsb mull outsb ds je movsb es cmp fnsave fs rex cld (bad) jmpq test jmpq jmpq jae shl mov or and xadd inc mov cmp mov bt cmc xor clc cmp jmpq je clc test clc add clc cmp jmpq jmpq rex.WB or rex.B cmc (bad) test mov pop push test lods scas std cmpsl push sbbl (bad) (bad) leaveq test stc rex.WR (bad) mov je jrcxz mov out jne std or pop notl jl icebp (bad) cmc hlt rex.WR pause (bad) in cwtl (bad) icebp test xchg mov jne stc or movabs loope push in mov sub xchg xchg rex.B rex.R leaveq rex.XB loopel rex.RX mov in mov icebp out fs gs or sbb (bad) loope std stc jae mov xchg shr jns (bad) push mov jns jno movabs addr32 fdivr (bad) xchg (bad) movslq lock icebp (bad) adc loope cmpsl xor jle (bad) stc out shr int (bad) and loope xchg fild fdiv andl in mov pushq movsl loopne (bad) je adc out rex.WRXB rex.B icebp fcmovnbe icebp cwtl sbb stos sub movsl test stos test lods mov push push push rcll pop push pop pop pop push pop rex.RXB mov mov mov (bad) mov mov mov mov jmp imul add retq (bad) icebp and rex.XB pop mov loope addr32 rex.RB fs sbb sbbl add cmp xor or je or rex.WX (bad) sti lret sub scas xorl or cmp stos rcll (bad) and fwait pop jne cmc xchg adc xor or mov mov lea mov xorl icebp sahf (bad) push (bad) stc (bad) rex.WRXB out je or pushfq cmp xor or and jge movabs push push pushfq movabs cltd or and (bad) mov cmc leaveq stc cmp adc and cmp or sbb jno pop push test rex.WRXB or and icebp std leaveq rex.WRXB flds and or xchg movabs out je or pushfq int flds sbb cmp cltd and xor push subl or rex.XB je add (bad) leaveq xchg mov (bad) sti adc cmp (bad) or fadd add cltd sbb (bad) leaveq jo (bad) notb sub shr je sub (bad) movabs push stos lods cmpsb movabs push movsl pop pushq add test push add movabs jmpq cmpsb movsb push (bad) stos out icebp pop pop imul outsb sti pushfq xor xchg movsb mov pushfq test pop mov xchg sub ficom mov mov loope rcl js sub mov subl or (bad) add push push pop loope stos (bad) test in fs pushfq add and std mov mov lret lods movsb pop jno (bad) push in pop jno fs push sub xchg test (bad) scas pop mov mov jge mov mov mov out (bad) push movabs push lods out push scas (bad) push pop jns cs callq cld leaveq leaveq std flds add (bad) and mov stc push rex.WRXB add cmp or jns rex.WB rex.WRXB test and mov in je or jno cmp mov sub xchg leaveq sub stc xor sbb mov mov leaveq stc cwtl je jrcxz ffree rex.XB xchg stc je jrcxz mov (bad) retq mov enterq (bad) pop in int mov repnz leaveq in repz ja jns and retq (bad) decb icebp xor popq sarl push (bad) out imul shl callq cld rex.RX cmp iret enterq adc faddl (bad) test rex.R repz jb rex.XB rcrl loop and push (bad) and rorl jbe test (bad) pushfq push ficoml lahf pop add rex.WRXB faddl imul or rex.R (bad) jmpq outsl imul lret xor mov (bad) xor iret addr32 outsl (bad) cld es (bad) cli int pop rex.R rex.RXB mov pushq pushfq sahf cwtl sbb lahf xor movabs sub shll pushq xor rex.WRX stos imul (bad) add rex.B lea jp loope retq mov add xchg fiadd push fs movsl rcrl repz fadd (bad) ss test and (bad) (bad) xor out mov and (bad) roll lret (bad) rex.RXB add pop sub jne (bad) sub add and (bad) movsb rex.RB pop or (bad) sarl js pop or jae mov pop test cmc (bad) jnp sarl stos rcrl pushfq mov adc rcl in loop and rex.WRX (bad) (bad) mov adc pop repz movabs jae clc ficom mov pushq sub imul and xchg rex rorl je push movabs xchg roll popfq in xor rex.XB mov shl sahf cmp (bad) adc es addr32 flds roll lret pop (bad) sarl fwait xchg push std xor rcll mov lret cmp movslq xchg and test (bad) test mov mov outsl clflush jb vpcmpgtw (bad) add sub sar sub mov mov jrcxz (bad) mov jb (bad) jne hlt mov or (bad) rex addr32 sbb rex.WRB (bad) callq insb mov xchg xchg cwtl xchg (bad) cltd pushfq in out xchg push mov jno and stc stc addr32 mov leaveq hlt (bad) and xchg cltd jno rex.WRB mov int3 mov cmp add js bnd add mov addr32 rex.R loop (bad) (bad) icebp mov xor push xchg pop and (bad) mov out mov addr32 leaveq mov mov icebp rex.WR push out test leaveq jno jl add test std movabs leaveq out jne loope and pushfq stc std jno mov test push xor mov hlt and adc rex.WB mov mov je or jl hlt es push out je or and imul mov loope sub leaveq or jns mov mov pop push popfq pushfq cmp (bad) out je or sub xchg icebp int leaveq rex.WRB lea mov je or pushfq shll rex.WRXB xchg je or and gs retq rex.WRXB xorl je or and pop std fwait rex.WRXB or and rex.WXB mov (bad) out je or jbe push sbb push or (bad) repnz or and sub std decl jge cmpsb je or pushfq scas std out rex.WRXB or out jbe push roll je or mov out je or push and je rcrl std xor lods or and rex.WR mov clc jrcxz out (bad) add or out je or enterq mov sub rorb and mov push lock sbb rorb push out je (bad) movabs push pushfq xchg std (bad) jb cmpsb or and rex.RX xchg and ja out je or fsubrl (bad) out je or rex.WRXB rcrl (bad) std (bad) je or and rex.WX mov (bad) or lahf mov (bad) je rcll xchg std (bad) rex.WRXB out je or rol (bad) add or and je je fstl and fisttp je fnstsw and fisttp je fnstsw and fnop loop adc jb addb fsubl loop loopne je frstor and fdivl loop (bad) fisttp and fdivrl or fisttp and fsubrl loop jp mov rcrl (bad) je retq fcoml loop rcr mov and rex.WB (bad) (bad) (bad) mov mov mov mov mov in jrcxz (bad) test rex.WXB je in icebp loope mov int3 mov cli movabs sbb rex.R cld rex.W stc rex.WB stc movsb rex.W jne movslq xchg xchg lret out icebp shlb xchg add cltd loop stc rex.W rex.B jo rex.WRXB clc (bad) fnop jmp imul and (bad) icebp cmp fsub cmp or push push sub cmp and (bad) push movsb movabs movsl or and in test rex.WXB push in test in mov and rex sub icebp cmc sub sub mov in nop push (bad) (bad) add sbb rex.WX scas pop push out mov loope mov add and test cltd mov rex.WB cmp in rex.WXB xchg and xchg callq (bad) mov (bad) and jne movabs cltd subl (bad) cmc lods lods mov sbb and (bad) pop test scas stos rex.RB (bad) mov jrcxz (bad) test xchg jo pushfq test mov rex.WRXB repnz stos push cwtl pop in pop mov xchg mov in clc orl pop stos test retq enterq ja xchg adc xchg testl cmpsb test mov callq jns jae adc push int fmull test pushq push xchg cmp lret test add lret in lea sbb hlt stos in and pushq cs jge fildll hlt mov rex.WR fwait lods imul test pop rex.RXB (bad) mov iret rex.WX leaveq in mov mov rex.WXB int mov js lret int3 icebp in xchg in movsl loopne int3 cmc pushq pop mov (bad) lods in int3 stc in enterq loope in decl iret test xor loope in mov out in lods rex.RB in xorl push in jrcxz adc callq rex.WRXB cmpsl and mov in mov push sbb mov (bad) sbb or ja cmc nop test (bad) mov in push movsl or sbb repnz (bad) retq fbld lret cmc ja mov (bad) js lret lret stc in mov xor in lret std in test jns push pop xchg movabs mov movb jo jno in lods jne movabs fistpl rex.RB rex.WXB in in test mov mov sub jno rex jrcxz (bad) mov cld stos jne movabs mov lret and repz or lret test push js lret lret mov mov (bad) (bad) lods add cmpsb insl jae loope mov or insl (bad) xor (bad) (bad) (bad) mov in (bad) out scas add mov in movabs loop adc fxch cmc pushq mov adc lea mov pop scas jge (bad) test mov (bad) in icebp rex.RB rep ds rex.W leaveq pushfq in cmp hlt je es sub in and lock mov gs shrl testb pop push jg jl leaveq (bad) mov pushq cmc je (bad) cmp stos nop cmp xlat scas sbb (bad) rex.WXB leaveq in ds outsl sti out push scas callq mov mov jmp in (bad) jnp jge test lock leaveq mov stc out je jl xchg scas ficoml cld in push push jo scas int mov push callq int pop movabs int in xchg cmp movsb (bad) cmp lods push push in pushfq in sbb add je mov test pop lods clc add in jno add je movabs jnp sbb jge push xor mov cmp out mov mov mov mov sub rex.WXB gs push (bad) std rex.WB lea (bad) in jmpq push mov jmp mov sbb mulb imul push in cltd jnp test cmp pop rolb in enterq or pop push test rex.WRXB jge out jrcxz hlt lods sarb adc retq xor xor mov cmp lret pushq (bad) rex.WX sar fildll shll mov sarl loopne sbb sub lret sbb jno movabs xchg out rcll (bad) push and jg pop shrl or imulb jb rorl (bad) mov (bad) in stos outsl pop (bad) jo and rcrb (bad) mov retq mov test in and (bad) mov push (bad) (bad) test movabs pop pop shll cmp out xchg test or movslq movabs repnz (bad) in cli lock (bad) (bad) adc cmp ds iret std in jne rex.XB pop scas mov (bad) sbb rex.WR cmpsb (bad) rex.R rex.WRX callq (bad) cltd add leaveq jg sub jne sarl xor rex.WB (bad) (bad) pop mov (bad) xchg shrl scas mov or int mov adc ss jmpq add shl test movabs rcl mov cs xor jb out ud2 rex.B jne sarl sub xor lock int3 outsb jmpq mov jnp icebp int ror test sbb mov (bad) xchg rex.RXB mov cltd (bad) rorl nop test retq out stos shl lea imul mov callq and lret fs sarl movsb xor test out sbb stc mov ss fwait adc xchg cltd popfq push rex.WRXB rex.WR pop add fwait pop (bad) rex.RX (bad) cli fnstenv sbb adc mov xchg vshufps (bad) sbb (bad) or cmc js rex.WXB cmpsb rex.WR rex.XB testb (bad) jae sti jb (bad) and (bad) mov cmp jle jmp xor (bad) rcr outsw xchg and scas sarl xchg shlb in (bad) jbe xor xor hlt pushq retq xlat lret out notl push rex.R mov lret out in push or in (bad) lret adc adc mov jl callq movabs rex.RX mov rex.RXB stc mov sbb stos xor sarl gs (bad) (bad) rcrl xor rorl sbb repnz rex.WXB lahf mov mov sahf sub popfq pop enterq (bad) pop (bad) xor xlat divl (bad) sbb rex.B mov mov rol idiv in jb shl (bad) out mov (bad) rex.XB adc shll in loop or or decl cmc out cltd pop int3 popfq jmpq add ss rex.XB xor cli (bad) lahf mov jbe movslq pushq mov (bad) xchg insb rcll test iret movabs (bad) push rex.WRXB or mov lahf xchg sarl (bad) jno decb cmp iret mov out rex.WXB rex.WXB xchg rex.RXB rcll sub insb fld iret loopne fwait mov xor rorl rex.WRXB ror sti sar xor rol xor pushq in adc (bad) fs movsl mov xor (bad) mov push (bad) add popfq and mov mov (bad) (bad) out in jmp pop fadd rex.WRB cs stos xor add adc int cs cmp rex.WRB movsb rcrl (bad) rex.RXB sub rex.RB rex.RX (bad) fist rcrb mov test jmpq (bad) adc pop popfq mov add rex.WXB sbb sub xor push mov (bad) int3 rex.X mov cmp imul (bad) nop pop (bad) ja js leaveq cmpsl jbe lgs mov fistp or mov add mov (bad) loop mov xchg cmp xchg xor push adcl jp or stc (bad) (bad) jo loopne push data16 and rex.WB fxch cmpsl and in fisubl lret out and mov adc rex.W mov imul rex.XB rolb jnp add or and (bad) xor (bad) mov mov sbb fwait insl xchg std (bad) jno outsb mov xchg repz (bad) fidiv ffreep and or pushq lret js push test movabs pop pop lods (bad) xor icebp (bad) lea jnp mov iret fisttpll mov or callq jnp rex.WRX out adc push adc rcll (bad) loope fsubrs movabs int3 rex.WXB rex.R or cld rcll stos out fwait inc rex.WR leaveq sbb jnp pushq xor rex.RXB xchg rorl mov rex.RB cld subl (bad) in add rex.RX (bad) (bad) sbb sahf adc (bad) or xchg lock sbb movsb movabs cld (bad) (bad) in out pop sarl pop mov js pushq rcrl shrl cltd cmpsb push mov and mov sbb rorb pushfq js and mov test addr32 sbb and test ror add shrl push adc (bad) roll (bad) sarl rex.W rex.WRXB xor sti std lock rcr sahf xchg (bad) movsl (bad) movsb repnz pushq jns jrcxz adc fisubr (bad) add movabs es mov rex.WXB fscale iret mov outsb sub mov mov cmp lahf jle xchg hlt imul jno cmp (bad) sar faddl out callq clc rex.WR cmp movabs rex.RXB xchg pop jns and lret lock and and (bad) fldt jl (bad) xchg or xchg jbe rex.WR fcomip mov add xor cs xor pop jnp rex.WRXB fnstenv and rex.R or push retq rex.WRXB xor (bad) jo sar cmp mov pop sbb fnstenv enterq rex.RXB jnp pushfq fptan rol cmp cmc jmpq sbb (bad) add outsb fcomp fnsave lea shr sub (bad) sub fnop pop pop xor (bad) mov cmp (bad) js sti lret lahf (bad) mov movabs mov imul and scas add sar fsubrl imul movabs push jle sub in incl sub roll cmp shll fcom (bad) jno (bad) repnz (bad) cmp rcll popfq jle pop (bad) mov (bad) rex.WB repz rex.WRB shrl add out jns ror stos ds jl add jae pop add (bad) mov and test mov leaveq (bad) cmp jns xlat out sub rex.WB mov rex.WRXB lods sub mov sti (bad) (bad) or (bad) mov lock rex.R fs fwait mov hlt or (bad) (bad) (bad) jae (bad) xor rcll xlat (bad) (bad) fisubrl xor mov test retq add push and mov iret loop fnop movabs push cmp movabs in (bad) (bad) mov xchg push cmp xchg scas sbb (bad) fwait and movabs loopne add mov (bad) adc push pop sub jg cmp push rcll cmp xchg shr pop jno pop retq test imul repnz int3 xor stos push es (bad) xor addr32 roll mov repnz std out out xchg pop adc pushq xor rex.WX jmpq and sub sub sti retq (bad) jno (bad) data16 mov cmp movabs pop mov in rol xchg or shll add push jrcxz in xchg pop push adc and shll sar jmp rex or xchg jp enterq es adc rex.B sahf jrcxz cld shrl (bad) lret sub (bad) loope repz test rex (bad) xorl (bad) mov and mov add out int3 rol adc jmpq inc pop fisubrl mov sub xchg out and or sarb (bad) fildl (bad) insl mov stos (bad) rex.WR movsw add cwtl sti sbb (bad) (bad) int (bad) (bad) out add icebp cmpsb loop rex.WR es pop jg fisubrl push scas rcll fild lret mov (bad) mov in adc rcrl pop rex.W mov mov rcl (bad) lods push addr32 rol repz cmp pop pushfq in cltd roll jmp lret sub sub pop (bad) jge (bad) pop rorl (bad) or mov outsb adc rex.WXB test mov ss jp (bad) shrl in sbb cmc mov and addr32 roll idivl sub vpmulhuw cmpsl rex.WR shll mov or fldcw shrl rex.W rex.RX rcrb adc roll stc movsb cmp movabs xchg iret xor mulb xchg sarl (bad) paddq xchg rex.WX xchg callq and mov repnz retq (bad) xacquire in or (bad) xor fsubr sbb sar test mov pop ror fcomip push xchg sub or jno jae mov adc lret (bad) sbb cmp (bad) callq sarl jge pop sarl (bad) mov lret lahf (bad) cld movabs xlat cmpsb shld test insl lret loopne sbb mov shrl stos sbb shl movabs loopne xchg lock (bad) repz mov test mov (bad) add jp or cs rex.RXB imul (bad) add lods mov (bad) fisubrl and rex.R bnd callq movsl mov adc (bad) ss cmpsb cmc sbb lret rex.WX movabs std sub jae fwait iret cmp rex.R rex.WRX pop movabs mov retq xchg out rcll test (bad) mov jne jno add idivl cltd xor cmp cmp (bad) callq adc jb cld test mov add push jo mov jl js (bad) lock jg enterq shrl rex.WRXB movsb jno shrl movabs imul push outsl jno adc callq xlat (bad) jge sub movsl (bad) addr32 int3 (bad) stos and (bad) ja pop mov pop rorl repz fnsave cmpsl rolb push mov cmpsb jge jae sarl adc jrcxz rolb imul bnd imul (bad) pushq add jg ficomp mov mov xor lret rex.X sti rex.RX xor jl movabs jbe mov (bad) shll adc rcrl test lock rex.XB sub pop iret repz jmp mov roll rex.WRB ds add (bad) pop cmp rcll (bad) jns cmp push rex.X rex.RX leaveq xor adc add mov fistpll repz sbb push test (bad) sarl xchg callq push je jmpq (bad) xor sub gs mov xor out cwtl (bad) enterq shll in repnz rex.WRX sub push xchg (bad) mov pmaddwd and jg outsb (bad) in (bad) rex.WRXB cmp xchg rcrl enterq mov rex.XB stos add rex.B (bad) je (bad) data16 jmp shll sar mov (bad) roll xchg mov jl (bad) (bad) (bad) (bad) idivb mov (bad) jbe outsl insl sbb (bad) sbb xchg rex.X (bad) xor sub (bad) test push pop sub (bad) mov jns xor (bad) iret shl xlat es ljmp test (bad) int3 ss rex or rcll mov movabs (bad) jge movabs cmp pop or nop jb xor (bad) rex.RX jns (bad) pop mov jae fstp ss shrl rex.X shrb mov mov rex.WRX mov lret scas jg xchg icebp cltd fldl or and and rcll pushfq push cmp sarl fs pop (bad) js rcl adc rex.WXB icebp (bad) adc test xchg (bad) jae shr (bad) mov pushq rex.WX rex.RX je add mov incb std loope sub jp mov loopne (bad) roll jne lret and fisttp and rorl cld fadds push mov and (bad) stc add rorl (bad) cs fidivr imul data16 popfq cmpl (bad) jno jne rex.RX rol movsl mov repz (bad) rcl nop or (bad) je iret adc mov pop pinsrw pushq or mov retq sbb (bad) mov adc cmp or adc sar sub clc sub divl stos rcl sbb sub sbb sarl xlat retq push movsb adc ds xchg int3 shrl rex.WRB (bad) data16 xchg xchg mov outsl (bad) sub (bad) in add out rex.WXB rex.WX mov rex.RXB (bad) imul (bad) (bad) es rex.WB and rol jl lret jrcxz in int retq (bad) fdivrs rcll mov xchg rex.WRXB push (bad) mulb out push push scas add ds lahf in rorl xchg push out rex.B jns rol in mov cmp insb shll push add xor ror loope sub mov outsl rorl fwait xor (bad) movabs sub rex.B mov sub jo (bad) (bad) lods mov xchg out (bad) push adc adc xor mov pop rol mov lods stc fildll cmp add enterq rex.WXB sarl roll fwait movslq adc lock (bad) pop xor or callq movsl adc loopne (bad) retq ds mov loope mov rex.WRXB in movb mov mov xchg nop cmp cli xchg in mov out retq xchg rorl rcr push mov fcmovnb xchg std (bad) sub mov jo and and (bad) (bad) sahf int imul test (bad) repz movsl (bad) xchg xchg xchg movb mov icebp je add cwtl cltd xchg jge xchg pop roll xchg std in cltd xchg cmp (bad) clc cmp fwait loop xor mov jl hlt (bad) js lahf mov adc (bad) fidivr mov icebp jmpq pop mov sub movabs (bad) lods (bad) mov rex.X js push and xor xchg mov fiaddl push mov (bad) or rex.XB rex.XB cmpsb mov lods jmpq movabs movsb cmpsb test mov leaveq and mov in callq push adc xchg (bad) mov movabs sbb nop mov icebp sub sub mov scas mov movslq xorl orl notb (bad) push lods mov out addr32 lahf mov lods lods pop push jg mov xchg jae push (bad) push rex.W push rep push cmp push movslq stc or jg mov (bad) insb rorl mov adc bts jmpq mov rex.W sbb adc mov (bad) shr (bad) jrcxz (bad) test sbb cmp cld jrcxz popfq scas bswap cmc mov push lods push mov outsl (bad) out lea pop and fnstenv jae sti in (bad) movabs pop mov (bad) (bad) (bad) sti in pop jbe or sbb rex.XB not (bad) jne jle std (bad) pop rex.RX nop rclb popfq rex.WB (bad) (bad) (bad) cmp jno sbb (bad) pushq sbb movsl cld sub (bad) (bad) (bad) mov callq (bad) loopne jg repnz adc xor (bad) mov xchg add adc pop rex or cmpsl clc fmull cltd stos iret mov ds (bad) cmp push add mov std jmpq mov incl stc clc cmc test test jmpq je movzbw sar cmc push bsf movzbl jmpq jb test stc test bt cmpb jmpq jae stc cmp jmpq enterq rex.B (bad) (bad) sub (bad) rex.WRX movslq pop lods callq fs mov xchg rex.WR add in xchg int3 mov iret mov rex.X (bad) out movsl popfq cmp outsb scas rex.WRXB rex.WRXB mov xor loop (bad) rex.RB test cmp idiv int3 popfq push movabs cmpsb jl sbb jge mov movslq and (bad) (bad) (bad) (bad) std or sbb (bad) (bad) (bad) std cmp (bad) out mulb sbb rex.WRX add add ja sbb (bad) fwait (bad) mov mov xor repnz movslq es rex.WRX push retq (bad) xor xchg int3 outsb xor hlt jle (bad) insb (bad) out (bad) (bad) and hlt pop callq cmp sub lahf add (bad) mov (bad) pushq (bad) insl mov cmp jmpq cmpsl lahf and lock xor (bad) cli (bad) repnz pop maxps rex.X xchg fxch movsl loopne icebp (bad) rex.WRB sbb cmp xchg mov lock jae test jo xor mov rex.RXB (bad) jb xchg cmp hlt lods xchg cli rex.WRX callq add push rex.RX (bad) (bad) (bad) sti leaveq mov (bad) (bad) (bad) imul rex.X and sub in sti stc cli outsl outsl (bad) (bad) (bad) (bad) jmpq in in xchg pushq vcvttpd2dq pop hlt xor xchg clc sbb sub adc std jo (bad) jo jns orl cmp cmc movabs (bad) cmc push lea xor (bad) xor rex.WRB jg push add in lret jb (bad) (bad) imul (bad) sbb mov mov (bad) out mov add (bad) stos ja repnz int mulb negl (bad) (bad) sti sbb jle imul loop (bad) (bad) sbb fwait (bad) (bad) std stos adc test lods adc callq test (bad) scas test rex.X mov pop jp add enterq adc (bad) (bad) (bad) incl cmpl push add and sbb rex.W cmp lods and sti mov xchg out (bad) movabs sub (bad) add mulb xchg negb (bad) jo cmpsl jrcxz jmpq (bad) rolb cmp rex.X or sbb test enterq sub (bad) in rex.RXB rex.RXB rex.WB mov mov jmpq mov fcompp mov rex.WXB retq pushq sub fistpll scas enterq pop rex.WRX notl movabs rcll fstps jl (bad) test (bad) vpcmpeqb (bad) scas xor (bad) jmp retq (bad) movabs rex.RX (bad) mov adc and in cwtl mov notb stos sbb test sbb mov xor mov adc rex.WX rex.WX rex.XB rex.RX mov (bad) ss rex.RXB or js adc (bad) fild outsl cmp notl movabs xor out (bad) outsl in fdivl add adc mov (bad) gs pop retq mov repnz pop (bad) pop callq scas addr32 (bad) (bad) cld (bad) pop stos push (bad) (bad) (bad) lock (bad) push loop sbb fidivrl mov sahf lret in add add jno int3 movsl lidt pushq mov lods movabs lock fdivs xor jp mov rex.R mov pushq cld mov xchg rex.B (bad) shrb jae (bad) jno sbb sbb xchg push or (bad) ffreep clc adc iret cmpsb pushq sahf rex.X data16 in add movsl sbb (bad) mov sub cwtl cmp stos push xchg rex.XB or adc xor fisub jrcxz (bad) pushq (bad) pop pop movabs test jmp (bad) xor adc mov xor pop cltd out (bad) (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb pop sbb ror sub add (bad) (bad) dec lret hlt or sub mov gs out (bad) je (bad) (bad) sbb insl leaveq mov rex.XB ffreep in je sarb push rex.RX xor xchg jg sub (bad) jb and adc (bad) jmpq int jne mov shl rex.WRB not rclb push (bad) xchg pushq (bad) (bad) repz xchg push pop lea rex.WRX mov test rex.RX outsl pushq and lret scas fbstp scas mov fsts (bad) test xchg fsts jae sub xorb (bad) (bad) mov pop pop mov adc (bad) sbb mov or pop loop pushq (bad) je sbb jge test add (bad) (bad) (bad) xchg enterq rorb mov jmpq push out (bad) rex.RXB xor add add rex.WRXB mov int scas pushfq mov addr32 mov lret (bad) test mov stos (bad) rex.WB pushq sbb mov ficom movabs mov lea mov bswap bswap pop retq pop retq movabs jg jge cmp fidivr mov lret fsubrl cmp xor push outsb sbb add repnz mov imul jns (bad) rex.X (bad) pushq sub movsl push pop or callq fnsave sbb sub fdivrs (bad) xor decb (bad) (bad) (bad) sti sti jae ss (bad) (bad) decb sub pop mov fucom jno xchg add add or ficom movabs gs insl insb xchg pop sbbl adc mov pop rex.W jbe int3 sbb fcoms ss subb sti push or mov mov jne rex.X repnz lods out movabs pushq jae jo lods pop (bad) stos cmp rclb (bad) or xchg sbb in fldcw lret or sbb (bad) jle jae lea data16 out pop push xchg xchg mov adc sbb cmpsb or (bad) xchg sti add mov sbb push rex.RXB js rolb xchg xchg (bad) mov push mov (bad) (bad) (bad) in lahf cmp pop sti mov rorb add gs stc rex.WB gs pushq mov add add callq mov xchg or (bad) jmpq mov mov pop (bad) sub adc pop adc jp xchg movabs fwait mov (bad) decl test movups jmpq jmpq jne clc stc stc clc add bt cmp add jmpq jmpq (bad) (bad) mov pop mov (bad) test (bad) (bad) in mov (bad) add in or mov cmp xchg retq std sbb xorl (bad) lods data16 rex.B xchg fidivr push mov xchg fimull rorl movabs outsl int3 cmp jb out in movslq lret cmp jns xor pop pop jbe adc mov int popfq out pushq jae cmpb lret stos rex.WRX mov (bad) sti jns add rex.RX (bad) (bad) decb jge sbb loopne rex.RB mov (bad) (bad) (bad) decl fs int3 test (bad) in rcl rol test pop idivb sub rcrb pushfq mov rex.W lret fcmovb mov xchg mov jne jbe xor mov jbe rcr jo adcl mov not mov btr bsr neg test mov clc test sub test cmp jmpq pushq jmpq and xchg mov (bad) (bad) mov je mov (bad) fimull jl sbb adc enterq sub mov fisttp sub jns rcl out rex.X es add sub adc add outsl add leaveq mov mov stos frstor sarb pushfq jns (bad) (bad) callq rex.WRXB (bad) pop rolb add (bad) adc in mov mov addl in rex.WRX add add adc ds xchg lret (bad) mov cmpsb (bad) mov lods add movabs movabs lea rex.RX sti xchg cli xchg pop adc movslq scas sbbl rex.WXB push out (bad) jg (bad) mov ja pop mov cmp jmpq jne jmpq jae ror neg rol mov (bad) lock inc neg add mov mov jmpq jmpq xchg shl movabs (bad) ffreep (bad) scas mov (bad) movabs rcll (bad) (bad) (bad) lods xor lock rex.R fs test (bad) push lods mov pop lret mov add retq adc stc xchg sbb fcmovnu hlt jne repz insb rex.R ja or movabs (bad) (bad) (bad) sub pop jg rex.WXB mov out repnz xchg ds (bad) imul and and or lea ja movabs out and jg popfq ss test (bad) jb push jle retq mov out or pop cmp sahf sbb (bad) leaveq sarl int3 cmpsl out (bad) negl (bad) je (bad) loope out hlt (bad) shl sub sub addr32 mov fidivr ss cmc add sub mov xchg icebp mov (bad) cmp pop or xor stc roll xchg mov (bad) xlat push (bad) callq sub and mov cs sub mov (bad) cld iret out rclb jae rclb sbb pushfq shrl lret pushq (bad) (bad) adc push xchg fistpll mov rex.RXB fldl outsl xor (bad) sbb xlat gs outsb sti (bad) adc xchg adc stos xchg (bad) int3 add leaveq out cmp jns test sub frstor callq pop out test test loope movb jmp ds rol jb (bad) hlt jbe jne insl rcrl rol (bad) (bad) sub mov test movabs je jno loope pushfq (bad) pop pushq (bad) and sarb shll or (bad) and sbb pushq pop cmc cmpsb add stos mov shll outsl mov sbb (bad) xchg cmp add jl mov addr32 mov mov sub ja and (bad) push test rex.WR lret xor sahf jg xor add std lods mov in push movabs frstor mov or cmp mov add rex.X sarl std xchg xor scas rorl rex.WR jnp rex.WRB movslq pushq mov roll (bad) rex.WRX (bad) cmpsb roll jmpq mov and mov orb test mov cmp mov and jno sarl (bad) imul lret callq lret rex.WXB add (bad) push movsl lock cs sub out fs jae jns add cmp faddp enterq pop and stc movabs leaveq js jno rcl loop loope retq rex.WB rcrl pop and je rex.B or lret cli pushq and sub mov adc mov in rcll cwtl rolb pop (bad) mov (bad) out (bad) enterq or and (bad) xchg (bad) (bad) cmpsb (bad) std retq rex.R rex.WRXB push outsb or cmp add xor pop (bad) test adc (bad) fbld sub popfq (bad) fs fs mov adc incl and lret test add insl cmp rex.RXB adc add mov rex.XB rcll (bad) out (bad) int3 (bad) mov or movslq out rcll add (bad) hlt sbb xchg push mov add lods rolb push (bad) (bad) add xor fnstcw lock jmp (bad) add sbb (bad) cmp rcrl mov adc movsb (bad) mov xor movslq cmp adc sbb hlt (bad) iret add cmp or (bad) test rex.WX in repnz rex.W and ja callq or loope push movabs mov jnp rol insb out jo iret cmpsb movabs (bad) jp xor stos or js pop rex.RXB retq (bad) xor out adc push int3 movabs stos jno loope cwtl sar (bad) push scas (bad) lret outsb roll pushq (bad) ja rex.WX gs add (bad) rcrl retq xchg in mov (bad) sub (bad) adc jno roll enterq pop or outsl jnp retq rorl out mov xchg mov decl and outsl xor adc sahf iret rcl out sub (bad) and rcll rol not sarl (bad) sar (bad) js pop mov (bad) hlt (bad) es (bad) rex.WX sub test (bad) (bad) rex.RX rex.W jns jg mov imul mov in loop stos (bad) cmp imul rcr pop ss (bad) (bad) je ja add rex.WRX (bad) xchg lods (bad) jrcxz pushq (bad) stos shl movabs push cmpsb sbb adc sarl (bad) (bad) (bad) rex.WRB (bad) pop rex.RB sbb jb or cmc rex.R mov repz jmp rex.WB rex.B rex.R xchg xor mov test sti pop callq popq or shrl sub (bad) mov jl jno lahf (bad) neg mov outsl jns (bad) sbb icebp sub lret mov (bad) outsb (bad) rex.WX add (bad) adc add in mov jmpq rex.WRX test shll xlat je or (bad) insl cmp jrcxz rorl xor sbb addl add fsqrt (bad) out gs sarb jge jp mov jmpq rcrl cmpsb (bad) xlat rex.WX cmp gs sub pop (bad) repnz fadds xchg rex.W clc (bad) test ja insl or rolb mov sub rex.RX fwait rex.WB insl fs movabs sahf sbb mov (bad) (bad) (bad) lock test and (bad) push (bad) and mov and mov rorl cwtl xchg rex.WRXB mov and mov mov loope xchg or xchg imul adc rex.RX rex.WRB adc mov (bad) (bad) test rex.WRXB cmp sub shl lret adc cli fs rex.WXB rex.RXB fwait mov enterq cmp sarl rol (bad) int mov rex.WB testl (bad) lret (bad) push (bad) mov fwait push mov rex.XB (bad) (bad) jno xchg loop or rex.X retq mov fstpt sarl xchg out push add in add movsl rex.WR cmpsl and shrl test retq in (bad) jbe mov xor roll roll rcll rex.R paddw xor and jmpq push sahf (bad) movabs pop clc roll imul out je rex.B rex.RXB jp subl xchg lock imull retq and (bad) mov loop pushq add sbb shll ja cmp mov push mov movsb sahf cmc jbe cs sbb push cmpsl movabs mov test mov bnd xchg rex.WXB pop fisttpl fs add and (bad) sbb es shll out jb pop out movabs sub in jle xchg and (bad) sub and pop int3 mov cmp enterq in or mov std outsl or mov (bad) test ds cmp (bad) pmuludq test add pop jno xor js mov (bad) xor push test (bad) cmpsl (bad) jg sbb pop stos (bad) shl imul in cmp mov rex.RX leaveq mov lahf pushq int3 rex.RX lret movabs in jrcxz lret add rex.WXB pop adc je movabs roll (bad) out loope stc ror xlat jl add in in sbb leaveq and pushq stc adc hlt cltd push mov cltd cmp out rex.WB add jno (bad) pushfq adc xor loope in mov je or xor (bad) (bad) jmp retq stc in jne leaveq leaveq and add jne mov stc push sbb rex.WX (bad) xor xchg jns ja (bad) insl lret fcompl enterq in jmpq push mov stc (bad) movabs and std outsb scas in loope cltd rex.WB mov pop sub jns push cmpsb mov out mov in cmp or jmpq lods js in loope jmpq movl retq (bad) (bad) or cwtl xchg hlt movsl in jmpq cltd lret leaveq (bad) (bad) xchg rex.WRX movabs loopne (bad) pop popfq (bad) (bad) repnz (bad) std rex.WB and add cltd icebp (bad) int xchg xchg lea int xchg enterq (bad) int sub jle roll jle cmp pop jle mov xchg scas xor jmpq movslq mov jne int3 xor jge std push icebp push sbb leaveq push mov in jmp or sbb mov pop outsl mov add (bad) xchg test push lods adc mov movsb in cmp movabs scas mov xchg addl adc imul rex.WB gs pop ja rex.W rex.B out loope (bad) jl pop pushfq movsl (bad) cmp rex.W cmc mov test push jo jl movsl nop (bad) sti test pop movabs out rcrl test push out out out out xchg retq mov or test jns (bad) in loope nop (bad) rex.RXB pop retq rex.RB xchg jbe push xchg test movabs enterq push (bad) repnz jg add pop stos or mov mov cmpsb in mov scas subl lods out movsb add movabs scas repnz lods test mov lea pop lea mov pop fsubl cmova insb stc test cmp (bad) hlt cmc mov iret rex.WRX movabs mov adcl xchg and xchg (bad) jbe addr32 roll pop lods push mov repz test cmc mov add out (bad) movsl jle rol xchg (bad) leaveq (bad) mov out in mov (bad) mov cmc sub cmp pop mov test mov int testw mov mov jne stc (bad) (bad) (bad) (bad) or rex.RB add cmpsl (bad) rex.WB xor movsl mov (bad) mov cmp popfq retq rol (bad) lret lret ror ror repnz hlt repz div clc idiv stc cld sti sar add loop in shl callq jmp out in lock xchg xchg xchg xchg rcll pushfq fwait rcrl test xchg mov mov (bad) mov mov mov mov shll lods stos (bad) scas lods mov push push push xchg jmpq pushfq push rcrl pop pop pop (bad) pop push rex.X movabs movabs push or mov jns sbb sbb imul enterq lea rex.RB mov mov xchg lea mov mov pop nop add mov out in mov xchg cltd xchg xchg xchg (bad) lock push jl push jns jne (bad) xor test xchg mov jne xchg mov movsl cmc mov mov insb in test cmc movsb rex.RB push (bad) mov pop (bad) lods rex.R stos adc int jl push ror lea push or pop jmpq (bad) mov movabs test push cmp (bad) loope jae push imul lods xchg sub psubsw mov mov (bad) mov shr scas adc sbb push outsb stos rex.WB adc mov mov cmp in jmpq cwtl fsubrl jmpq sub lahf xchg pop test ja jo rep sahf jmp scas gs jmpq mov nop jne rex.RXB out (bad) mov xchg cmp push lea test lret je test in cmpsb and mov (bad) jne rex.RB mov icebp test movabs je mov or sub out jl rex cltd mov lock jne xorl fisttpl cltd push mov and test iret mov insb mov (bad) jle rcrl sub sub xor (bad) rex.WB movsl jo cmp (bad) movsl adc (bad) movsb jo (bad) lea xchg jge pushq add in sbb push mov (bad) mov mov (bad) xor movabs in rex.WXB lea cltd mov ja mov mov jmpq out fdivl cld rex.WXB mov movsl sub jne test subl (bad) mov in lods movslq push adc scas mov out adc (bad) adc mov push clc mov icebp push pushq lods vpshufd out jae xchg xor cmpsl push gs scas jmpq push int outsb test xchg xchg xchg rex.WR clc in retq leaveq or cmp mov movabs in adc icebp hlt icebp or cmp repz divb stc and (bad) xchg cld add pushfq sti std icebp rex.WRXB hlt (bad) cmp and leaveq std loop out xor movabs add (bad) and fstl pushfq retq rex.WRXB rex.XB in adc rex.RX test icebp mov mov (bad) clc jmp shll rex.WR lcall mov popfq clc push mov mov push rex.W jbe xchg retq pop out lahf mov cmpsl xor movabs fwait mov dec mov jrcxz xchg or push repz decl jno out and rex.WB out xor int3 (bad) push push rex.RXB rex.R push (bad) icebp mov or enterq test xchg rex.X in rex.WB rex.WX mov lea loope jmpq sub push (bad) leaveq out pop push rex.WRX mov or rex.B push mov std lods test sbb shlb xor outsl loope lods push push sub push and (bad) retq or (bad) loope in lahf test rex.WRB pop xor stc and (bad) jnp loope loope push push nop fs scas cmpsb (bad) loope push xor test mov xchg stos test jmpq cmp jle scas movabs add movabs movsb mov movabs retq (bad) cmpsl int3 xor jmpq and cmp test pop movabs push pushq mov jp in cmp push mov mov (bad) insl push pop jno xor sbb ljmp jmpq adc pushfq fldcw lods rcll (bad) xchg movabs jmpq mov stc mov movsl rex.WXB mov or movabs int3 mov mov mov addb movsl repz pushfq sahf cmp or sbb (bad) pushq test mov shrl adc cmpsl movsb add xchg test jl cmp jmpq cltd cmp rcr stc cmpsl outsl icebp loope movabs lahf or jrcxz lock jmp pop or movsb lods pop rex.WB jmpq mov xor rex.WX lock jmp movabs jo leaveq in mov or jge cmpsl popfq rex.WRX rex.XB rex.RB (bad) test pop outsl idivl movsl add jrcxz loope and icebp push (bad) std xchg xchg hlt mov and rex.WR loope (bad) lret hlt push loope test in popfq movsl xchg and lock (bad) movabs adc es int push rex.WRXB or pushfq icebp add cltd jmp xchg cmc fldenv icebp rex.WXB movabs leaveq mov out je or pushfq add sbb std out rex.WB jl imul out je or jno rex.WRB rex.WB rex.RB rex.WRXB push (bad) rex.WRXB pop je or lods push test rex.WRXB or xchg pushfq loope leaveq rex.WRXB and and add movabs out je or test std mov cltd out add sub sub add cltd and rex.WRB out je or rex.B cmc cmp or and (bad) mov or mov leaveq icebp xlat addl jrcxz pushq xchg retq (bad) (bad) movabs movslq jne rex.W rcll rex.WB movabs retq fdiv cmc pushfq iret sar mov (bad) and xchg in retq retq xlat xor repz nop repnz rex.RX rex.RB rolq rex.WR rex.WXB rex.WRX rex.WRB rorl je jbe js ja jns jnp jge sarl movslq pushq insb imul shrl adc (bad) adc sbb (bad) sbb add (bad) add or (bad) or xor ss cmp ds and es sub cs rcl rcl (bad) fadd xlat fcmovu (bad) (bad) loopne ffreep or sbb (bad) mov mov loope pushq and test movsl lock sbb and xchg xchg scas rex.WRXB jp xor out or mov push test (bad) icebp pop stos cmpsl mov loope loope rex.WX rex.WX push push (bad) scas icebp int pop test adc xor movabs loope sub pop lock imul test test lods insb std stos rex.RXB push loope adc push pop xchg cmp js int mov mov jle pop push (bad) xchg jge pop lods sbb or stc divl std and cmp (bad) icebp push adc jmpq pop push sub mov in test pushq (bad) sbb push mov bnd icebp (bad) lret cmpsb gs jmpq fmuls mov jmpq sbb test cmp (bad) mov outsb loope push jo lret cmpsb pop cmc data16 in (bad) fsubl mov movabs loope (bad) stc (bad) lods push pop movabs icebp (bad) movabs rep (bad) push out rex.WXB rex.WRB mov add xchg pop pop mov xchg rex.RXB jae push mov adc pop stc (bad) icebp callq test lahf in push fbld (bad) hlt in rex.RXB mov loop icebp lret pop (bad) (bad) adc rex.WRB (bad) (bad) test leaveq sub pushfq stc cpuid repnz push (bad) in popfq xchg mov icebp mov mov (bad) cltd in adc and movslq in adc popfq mov jb loope or jo imulb icebp jb mov (bad) jp pop movabs icebp xor mov push in icebp mov movabs mov adc jrcxz loope pop movsl subb sbb xchg stc xorb movsb movabs push loop clc movsl stc pushq xor jno push int3 adc rex.WXB sti sbb mov stc xchg fsubrs add add mov jmpq loope in cmpl or mov cld leaveq mov std xchg mov xor (bad) jo icebp sbb loope int rex.WRXB rex.W pop (bad) add test icebp or add and rex.B rex.WXB icebp and mov je rex.WXB sub or push icebp mov imul icebp movsl rex.WB xchg stc adc mov out test icebp hlt xor add icebp icebp adc and loope cltd (bad) mov mov sbb movsl (bad) lock rex.WB mov mov out push movabs test outsl icebp xchg psubb or xchg cmp xchg add mov in test icebp mov movabs cltd (bad) in jno adc mov mov sub pushq rex.RB cmp pop movabs add sbb add xor (bad) cmc push rex.WRB mov icebp icebp mov cmp mov push out jno ss clc mov rex.WXB and lods lods icebp movabs mov xchg int rex.WRXB mov and jo rex.WB (bad) and jbe test jo hlt add mov rex.B rex.WRXB sti movsb lret (bad) lock (bad) int fstps std mov mov test in (bad) shrl (bad) mov lods scas movsl or mov cmp jl xchg mov adc mov cld mov add test lods push movsb mov push pop or stc repz divb (bad) stc cmpl jae cmp mov and pop rex.WX cmpsl rex.RXB (bad) int3 (bad) or sbb rex.XB stc cmp xor repnz push leaveq cmp cmp pop rex.WXB lret mov (bad) stc andl (bad) (bad) (bad) jne leaveq or sbbl divb (bad) (bad) push pop test push (bad) lods cmpl cs repz push cltd push xchg jrcxz add (bad) jl movsl xor pushq test in mov jb leaveq cltd retq jno rol in (bad) stc movabs out and int3 (bad) jne int stc je jrcxz test iret (bad) rex.WR repz in mov popfq pushfq rex.WR cltd jl hlt repz add mov callq mov stos in nop mov out or test xchg (bad) stc (bad) addr32 pop in mov movabs repz pushfq (bad) clc sbb orl cltd xchg pop addr32 cmp jmp sbb (bad) enterq cmp push (bad) lahf xor retq (bad) (bad) movabs (bad) in xor lret negl (bad) mov (bad) hlt enterq test (bad) divb xchg roll out adc sar xor in movabs cmp movswl pop jg scas xchg sbbb mov mov pop je pop rex.WXB pop (bad) lods pop pop stos stc mov adc repz mov movsb push mul (bad) leaveq cmc addl xchg mov cmp xchg cmc and (bad) (bad) jno xor out rex.XB adc adc test repnz mov jp or push cmpsl sbb cltd stc push (bad) test lcall fwait xor movabs mov xor push movabs pop ja sbb mov pop push mov sbb cwtl fwait mov push scas and xchg pop callq add rex.X repnz cmpsl push and xchg rex.RX mov xor movsb jp test jge (bad) cmp mov cmc push lods push (bad) jge pop mov and jae add (bad) rex.WB movabs xacquire adc cli test stos mov callq divb cmp rclb mov loopne push mov xchg push insb sub sahf loop insb or loop cmpsb lods mov loope cmp jnp hlt cmp adc cmp cmp mov sub sub mov mov (bad) cmpl mov stos sti lods pop lahf decl mov jb imul sub mov xchg faddl mov pushq xchg popfq out stos mov pop cmp push cltd mov push mov jmp sub pop xor mov mov mov jrcxz jmpq rex.WXB adc lahf push lock rex.RB scas loope adc fldenv test out test movsl retq xchg test cmpsb imul xchg mov addr32 rex.WB gs (bad) xor std loope rex.R test push fs xchg rex.XB pop rex.XB ss gs add (bad) scas lahf mov jl movabs xor repz sbb rex.XB xchg nop out mov mov shll cmp in test (bad) mov pop imul rex.WRXB rex.RB fs lods adc (bad) push lods (bad) cmc (bad) jge movslq push lock stc cld movabs rol xchg pop jo or leaveq enterq jae or out add test sbb lahf es xor xchg (bad) rex.WB sarb fcoml mov ds pop pop lret rex.WX (bad) cwtl sbb xor test and clc xchg pop scas mov pop rorb sti rex.R mov adcl mov outsl insl rex.WB mov rex.WB movabs movabs mov loope (bad) mov (bad) subl in fs push fwait xchg mov fs in ss movabs pushq js out cmp pop test rex.WR in push mov pushq insb rex.R in out movabs cmpsl repnz stos adc lret mov out mov cmc rex.WRX fwait xchg xorl xor jge mov cmc fstpt retq ss movabs xchg and (bad) and in pushq (bad) pushfq (bad) scas movabs test shlb cmpsl jp sub xlat cmpsl push movabs jle or test mov jne fidiv (bad) rex.WR xchg sub nop mov and rex push lea idivl xor adc mov retq in pop jmpq scas or push (bad) mov (bad) (bad) xor (bad) loopne icebp xchg movslq cmpsb fmul pop ja pop jg sub (bad) movabs and or mov pop push jae mov push mov adc retq rolb cwtl mov push jne xchg jns movsl out jno xchg test scas test jrcxz jae stos mov and test (bad) jmpq in rcrl mov jae mov or pop stos movabs in sahf out out loopne je ja scas lods enterq mov (bad) xchg lahf pop or jno cmp pop mov lret mov mov rex.WXB mov andl fsubrl sub jp add cmp (bad) mov bnd stos in stos sbb shll popfq mov stc stos mov sbb jo cmpsb mov and retq js mov insb mov addr32 in insb and jnp lods shrb lods ds fcoml retq scas or enterq push (bad) pop jmpq adc xchg (bad) nop movsb pop and xor or pop (bad) and (bad) repz pop out lods xchg jbe pop (bad) es cmp mov mov add out cmpsl rex.WRXB or lods adc push or adc add adc movslq xchg cmp (bad) push cmp (bad) pushq jnp stos jmpq sbb xor or out mov cld insl movabs lea icebp in jb scas stos andl ja mov stc mov or (bad) fucomi stc xor jne (bad) scas pop push cmp loopne jmpq jmp (bad) fwait idivb xchg mov xchg mov xchg xchg mov or push (bad) xchg test callq push test cwtl icebp test mov add push out or (bad) sub movsl adc mov push fldenv push out cmp imul outsl add mov outsb jl jmp fwait movabs xor cmpsl (bad) or sub cmpsb imul mov mov std mov push adc xor or lahf mov xor cltd mov xchg rex.X cs movabs fstpl sbb scas (bad) adc mov test or (bad) rex add loop mov mov sub retq rex.WXB or mov stos jbe or rex.WRXB fwait out jnp jp mulb ja shl xor mov stc cmpsl sub jle mov (bad) out xchg mov test cltd and loope jne (bad) mov or xchg jne pop mov xor xchg iret pop (bad) out xchg sbb mov xchg rex.WB pop je jmpq jp rcll mov sub out mov cmp push repz xchg xchg stos or xchg jae movsb fsub stos (bad) (bad) mov mov pop (bad) (bad) (bad) mov (bad) mov scas xchg cmp jns sub rex.WRB out (bad) or movabs repz out and add push std orl or pop push mov jmpq repnz out je or movabs cmp hlt adc rex.WB stc std flds jno test sahf rex.RB cmp stc adc std mov mov (bad) hlt adc cmpsb je or and lret xchg add jns mov mov int3 movabs mov mov out cmp add xchg add cltd sub rex.WRB out (bad) or test and (bad) xchg sbb rex.WB rex.WRXB xor (bad) or movabs sbb test jmpq (bad) xor mov stc and sbb push je xor adc xor mov pushfq sub xchg xchg (bad) callq adcl xchg pop in rex.WB rex.WRXB movsl lods cmpsb or pop jmpq xchg int3 repz fnstsw lret xor stc je xchg cld lods rex.B rex.WB fcoml xchg je jrcxz test cmc add rex.RB (bad) cli jmp cltd xchg cltd or rex.WR movabs (bad) jge in or rex.WR repz mov je jrcxz movabs rcrl (bad) push or mov mov add in fstl movabs stc cltd std int mov movabs mov rex.WRB pop mov sbb (bad) cmc pop adcl cltd icebp rex.XB rcrb (bad) rex.WRB mov icebp std add xchg rex.WRXB test rex.WRB lods icebp cltd std and (bad) rcl shlb xlat rorl nop je sub (bad) imul shlb loope add pushq lods in rex.B loope pop lcall and shrb mov loope ror xchg pushq (bad) xor rolb lahf (bad) jmp cwtl std imul add div sbb xor mov lods push push xchg rex.WRXB pushq shrl test adc and mov jrcxz mov xchg test and pop pop or orl (bad) popfq mov adc push sub rex.WB rex.RX rex.XB push jno or (bad) (bad) mov gs pushq xchg mov out mov sbb lock lahf icebp jl notl jne mulb rcrl (bad) loope mov (bad) ja rex.WRB lods scas jmp movabs pushfq scas xchg test (bad) sbbl jo mov and cmpsl push sub rex.WRX lods xchg add push rcll fldt mov mov out rex.WB xchg cmp push stc sarl (bad) rex.W rex add cltd mov mov lret hlt addl pop insb test insb leaveq out rex.WB gs adc je (bad) push mov (bad) loopne push (bad) mov xchg mov es scas movsl jg imul sbb lods callq pushq (bad) movsl psubw pushfq jmp adc rcll in cmpsb hlt stc mov (bad) loope jnp mov xchg movb test test sbb xchg (bad) rex.WR sbb pop cmovns icebp xchg xlat loope rex.WRX testl (bad) test test mov test hlt mov add xchg sar push out (bad) xchg xchg bswap or out enterq mov (bad) scas hlt or or icebp out jno rex.WB fwait mov sub xor (bad) movabs jmp xchg sub movabs mov leaveq mov movabs (bad) rex.R pop (bad) mov mov fisttpll push or mov (bad) frstor or mov mov in mov ss xchg cmp jns imul rex.R (bad) sub mov in jge pop (bad) movabs xchg nop mov test mov lods or mov test mov std or icebp movabs repnz pop push in xor xor in rex.W loope nop (bad) scas hlt xchg (bad) (bad) mov mov fisttp mov cwtl in jp leaveq (bad) callq fadds leaveq xlat leaveq pushfq mov nop in mov mov cmp fstl or and in mov leaveq xchg mov mov mov cmpl mov mov cmpsl cmp fwait (bad) (bad) int3 loope xchg jbe in out cld lahf stc cmp pop push lret jo pop in fwait jmpq movsl out jle cmp mov mov sbb (bad) (bad) and movsl rex.WRX xrelease jl fisubl ja cli or loope mov pop movslq pop callq (bad) pop push push (bad) sti imul sahf rex.R pushq scas cmp mov mov push icebp movsl lock jb out repz mov sub cld add or xor shrl addl mov shlb rex push xlat adc mov movabs rex.RB mov adcb xchg cwtl (bad) pushfq xchg cld out sti jmpq (bad) loope mov push jb stos out (bad) (bad) loope jnp mov repz (bad) leaveq in insb (bad) mov add leaveq movabs popfq int3 xor (bad) (bad) repz (bad) pop pushq xchg sarl mov xor sbb sub clc jge and cmpsl (bad) mov jmpq sub jrcxz ja (bad) test rcrb add pushq rex.WB or push gs xchg (bad) sub fwait std add mov in lock insl jns in vsubpd repnz movabs test sbb ss mov mov sahf jno jo add loope rex.RX fnop lea mov shrl lock out sbb cli callq xor adc cmp test sub adc or (bad) (bad) pop fiaddl nop mov clc stos in and mov push jmpq mov push lods sahf cmp pop rex.RB xchg xchg (bad) (bad) (bad) enterq out (bad) lret mov rolb ds cmp and cmc pop xlat repz (bad) out fwait rex.WRXB sbb gs stc fild (bad) negb fdivrl cmpsl (bad) out addl mov push pop lahf mov jg (bad) leaveq rex.R mov jg and stc adc jb lret add (bad) in xchg xlat xchg std mov mov rex.WB test jge imulb rex.WRB xchg orl (bad) rex.WRB push addl stos adc in (bad) (bad) jg movabs sub pop push lods (bad) mov sbb movsb bswap push lret push idivl mov pop and cmpsb rex.WRX sbb jge negb jge jmp jge outsl gs mov stc xchg mov iret mov (bad) icebp rex.WRXB (bad) push mov (bad) cmp icebp lods mov andl push or (bad) and mov (bad) mov mov sub mov lods fiaddl mov ja cltd (bad) (bad) mov or or xchg push jne (bad) and jle in leaveq stc rex.WB add std mov rex.WXB icebp xor nop leaveq fistp movslq or (bad) es std and mov jno push gs xchg mov hlt pushq xchg xchg shrl xchg add push rex.WB rex.WX jo xorb loope xchg mov icebp adc out pop hlt loope jno adc xchg pop movabs movabs jg test icebp add (bad) rex.WRXB out je or add (bad) xchg flds enterq push movabs std loope jmpq movabs mov rex.X lahf div sti mov mov test mov test mov in mov in sub addr32 hlt scas mov repnz adc retq rex.XB cmpsb xchg rex.B rex.WRXB cs loop enterq test (bad) push cld (bad) in pop repz popfq hlt mov in (bad) std rex.RB leaveq adc rex.WX rex.RB fs adc addl cmpsl jge rex.RXB shlb pop jge mov jno jnp xchg jno mov (bad) mov (bad) stc ds sub icebp icebp lock cld cmp xchg cmc jge xchg lods movsl cmc icebp (bad) stc sub rex.WRX push gs loopne stc es leaveq fs jmpq mov lret jno andb gs cli xchg sub rex.WX push pushq mov mov adc in icebp stc cmc pop outsb (bad) lea cmc xchg xchg stc rex.RB xor xchg jnp notb in scas test mov in cmpsl in rex.B rex.RB rex.WRB (bad) mov test test clc add addl cmc rol jbe sbb jmp fdivrl push xchg (bad) cmc xor leaveq in es cltd (bad) mov cmc shrl mov or and movabs lea rex.RB stc lock adc testb je jae cmp xchg imul loope cli sbb sub (bad) mov or xchg in jg or jmpq sub mov in or xchg xchg movsq pop (bad) push sub and rex.WX add (bad) mov xor mov jge jae push loope push ja fldenv (bad) lret or popfq mov cmpsl retq pop movslq in in cltd sub fcomps lea (bad) and cmc cmc je cmp std rex.RB rex.RB fcoml test xchg jge in jge jno loope xor in rex.WB mov xchg ss movsb out rex.R (bad) hlt cmc adc mov jrcxz rex.XB lods rex.RXB xor nop test lea jmp fdiv lods rex.RXB fmull fcoml rex.W std jmpq adc jle rex.W or test rex.WRB (bad) addr32 add mov cmp leaveq ja xor outsb stc pop xchg in int3 pushq in mov mov mov popfq xchg test rex.XB xor jno jne xor push subl push push pushq stc (bad) cmc int3 xchg jo cmc es sbb popfq std (bad) popfq mov int in insl je (bad) push rex.WRX xchg jle and mov mov pop cmp in cli mov adc in (bad) (bad) leaveq jl or (bad) fild out xor and in out je rex.WRX leaveq sub rex.WB mov xchg (bad) rex.X rex.WRX fidivr sub in cmp loop (bad) jle push hlt test and mov rex jrcxz sbb gs sbb pop rex.WRX in (bad) fs pop (bad) in (bad) mov pop jne xor fsubl rex.WRX push enterq adc jle gs sbb pop rex.WRX leaveq out pop rex.RB xchg and (bad) (bad) in cli rex.WB (bad) cwtl lret int3 (bad) mov fcompl mov (bad) (bad) movslq push add pop rex.R rex.WRX in (bad) stos (bad) icebp pop lret js sbb retq int3 leaveq mov sbb je rex.WRX sbb rex.WRX or mov xchg je rex.WRX orb pop js (bad) out sub pop rex jrcxz xor jrcxz lods push insl lret rex.WXB pop rex jrcxz clc mov and movabs addr32 add push hlt rex.WRX rex.X (bad) scas hlt je rex jrcxz sbb mov push (bad) rex.WRX hlt sub adc xor (bad) (bad) mov scas hlt je rex jrcxz sbb mov sub out out (bad) jae mov pop rex.WRX (bad) push hlt je loope mov out adc push hlt je and push hlt and (bad) hlt mov pop adc (bad) mov sbb mov and jrcxz loope pop and jmp fdivr flds or xchg xor rex.WRX add rcll xorb rex.WR add add hlt xor jrcxz (bad) hlt je (bad) enterq sbb leaveq push shll int3 (bad) pop xchg int3 sub pop int3 (bad) pop (bad) int3 push pop es ds subl (bad) mov icebp (bad) enterq rex.WRXB xchg adc rex.WRX or mov xchg je rex.WRX cmp or xchg adc add rcll callq retq int3 push cld es es int3 ds loope (bad) add (bad) rex.R xchg xor or mov xchg je rex.WRX retq sbb hlt mov jmpq add retq int3 (bad) cld xor (bad) mov int3 or mov xchg je rex.WRX or rex.RX scas callq jno in add lret in sbb mov xchg je add push popfq rex.R or mov xchg je add cld xchg in in cli rex.WB mov rex (bad) jrcxz gs (bad) (bad) js,pt hlt jmpq pop rex.WXB shl jrcxz sub rex.WB mov retq or in mov push push (bad) lods (bad) mov (bad) movslq mov xchg lahf movabs sub scas jp mov xchg std mov rex.W nop sbb sub xor sbb jp sub test insb xor sub pop js mov cwtl mov (bad) (bad) stos xchg loopne stos xor popq test xor push jge xor imul fidivrl mov sub in and push mov push xchg pushq jno xchg xchg xor push cmp jrcxz pop mov xchg mov and mov sub rex.XB mov (bad) (bad) mov outsl mov xchg out xchg xor (bad) mov icebp add pop lret lods push rcl mov test retq int in mov scas (bad) int cmc sbb xchg cmpsb repnz in popfq pop (bad) xchg in push insl jnp cmpsl jp jl retq jbe pop rex.X retq mov xchg (bad) cmpsb in jmp xchg popfq int imul hlt sub pushfq adc cwtl xchg in orl jrcxz pop (bad) decl xchg in mov xor (bad) xchg or (bad) push add mov push popfq pop sarl xchg (bad) mov in movabs fdivrs push sub mov cmp sbb mov sbbl in jmpq pop xchg callq jmpq lock jl movabs stos in movabs rex.WRXB pushq in stos rex.WXB (bad) mov mov (bad) pushq repnz movsb mov (bad) mov out xor movsb out fwait in movabs jnp (bad) enterq adc mov xor (bad) mov (bad) fisttp or cmc outsb cmc jne rex int3 data16 test sbb jmpq or rex.R cltd push int3 (bad) int fnsave cmc lock (bad) jnp fwait lods jne movslq sub lods fildll jmpq (bad) mov or (bad) icebp or sbb sti cmp lea jg repnz callq jp (bad) or push cmpsb lock xlat xlat fs movslq js fildl xor cltd mov mov mov jne fdivs rex.WB repnz mov test nop shrl loope pop sub clc rex.RB pop add jge jno js cmp cmp fs jae and jae cmc in xchg jno mov movabs cmpsl mov push imul push rex.W repz mov mov adc cwtl xchg fsts and icebp (bad) (bad) push loope jmp out or jnp cmc fwait rex.RB rex.WRB jl mov cmp jno adc shll (bad) adc movabs callq lock cltd mov in test mov je (bad) xchg rex.X movabs in sub xor (bad) lods sbb xor outsl int repz jl jae jg flds out in mov movsl pop (bad) rorl fwait div sbb xchg xchg (bad) movabs lea mov (bad) mov ds (bad) pop and xchg movsl cmpsl out mov (bad) xchg movslq retq xchg push cmpsb (bad) (bad) jne add scas clc push push je pop jne (bad) xchg (bad) cmp xlat rex.WRXB callq mov movabs retq je fsubs insb stos adc outsb mov rex.RX mov sbb sbb andl xchg or movsl jne rex.WRXB movabs (bad) xchg add mov (bad) jp ds clc popfq push cltd clc xchg lahf lret jb mov sub lock scas movabs xchg mov xlat xchg ficompl (bad) mov std pop and xchg lahf mov (bad) cli or movabs pushq scas lea scas pop sbb push jnp or (bad) (bad) (bad) or lea mov and and ss cmp popfq and adc xchg fs jne leaveq cmp jp lods push hlt mov movsb mov mov lret (bad) rcrb push repz out lahf roll lock rex.WR mov (bad) (bad) mov push (bad) fbstp xor push mov mov xlat callq (bad) fs rcl mov hlt jmpq pop jbe and mov jmpq (bad) cmp lock push (bad) in lret rex.B add adc (bad) mov pop cs pop cltd sarb popfq mov push fcmove push test retq fdiv jge adc mov jbe xchg outsb out xchg mov xchg jno (bad) insb fdivrs (bad) jbe sbbl pop pushq push fbstp loopne scas pop mov jrcxz jae sub push (bad) adc (bad) ja outsl addl nop mov sahf adcl cmp in (bad) jmp add je,pn and jno cltd nop and (bad) scas xor xchg jae xchg lods mov cwtl (bad) jbe cltd jbe sarl jl sub xchg movabs or leaveq xchg mov jb jrcxz jne xor int3 add (bad) stc jmpq add pop pop add or push std jne adc pop test in xchg push mov mov mov div paddsb push pushq out cltd pop mov jrcxz rex.RXB rclb add jrcxz callq repnz jmp test lock adcb and scas (bad) rorl jp ss scas or imul leaveq ja (bad) callq int3 (bad) (bad) (bad) retq push (bad) pop lods (bad) js (bad) stos xchg cmp rex.WX mov jae sti (bad) mov (bad) test gs (bad) or stos or cli movsl fsubl pop pop adc mov sbb movsl pushq (bad) rex.WRX addl sub jbe sbbl scas sbb in (bad) mov test pop jmpq jmpq scas xchg pop mov xchg rex.RB sub int3 mov pause jnp mov mov test fs lods mov out pop stos jbe rex.RB sar cmp mov scas fcompl movabs rex.WB (bad) (bad) cmpsb or push cmpsb movabs mov repz (bad) in (bad) cmpsb sbb (bad) fsubrp jrcxz mov icebp mov (bad) insl jle lahf mov cmpsl (bad) adc mov pushq mov push orl lods sbb mov pushq addr32 pop xor (bad) mov mov movslq movsb pushq sbb (bad) pop rex.WXB sub cmp in (bad) jo test movabs lods fistl pop jg int shrb mov (bad) fidivrl test in xchg or rex.WB jb out lret sbb sahf movsl jmp jrcxz clc or mov movabs callq xor pop jns sbbl callq or jrcxz pushq scas xor rex rex.WRX in out mov and rcrl (bad) shlb (bad) jo scas mov cmp lret rex.XB fidivl (bad) cmc push mov movsl rex.W rex.WR (bad) xchg movb xchg test lret cld (bad) rex.RB sti in pop and sub fidivrl fnstenv adc (bad) jns nop scas mov mov cmpsb loope push test in mov (bad) mov popfq (bad) sbb adc sub push jns icebp xchg sub sub inc sbb je sub jrcxz xor and movsl pop cmp mov (bad) jp lock lret xchg shll stos fucompp data16 js,pn push insl (bad) pop js jbe hlt rex.WXB xchg hlt (bad) mov lock sbb insb or (bad) xchg add xchg xchg xchg test xchg shlb rcr cmp (bad) mov xchg (bad) pushfq xchg xor rcrl rex.R rex.WRX movabs xchg mov lea add (bad) fiaddl xchg jp test mov add cmp iret add (bad) iret gs imul fwait xor mov test in sbb gs movsl jge or jnp out cmc idivb fcoml fdivs (bad) xor in (bad) mov (bad) xchg xchg mov jmp jae addr32 sub (bad) mov repnz jnp movsl adc mov sbb mov jp test mov icebp lock mov mov int iret (bad) stc rex.RB mov mov (bad) (bad) push sbbl test jns rcl loop repz rex.WRX (bad) xor pop add (bad) mov adc mov retq test sbb enterq movsl add leaveq in loope pop jbe rex.RX scas mov in sbb rex.W mov (bad) rclb pop cmp scas (bad) icebp (bad) sbb add in jae pop mov jno lock mov sub icebp (bad) loope rex.WR mov (bad) fcos (bad) pushfq jmp callq clc jp in jmpq (bad) hlt (bad) callq (bad) out pop push addr32 cmp xchg int scas cmc (bad) repnz callq pop cmp jae in adc shr (bad) (bad) xor jmp jrcxz addr32 cmp (bad) fstps jns icebp xor fiaddl movsl in (bad) cmc in leaveq add mov jne xor (bad) test add rex.X mov rex.WX (bad) push iret stc cli xchg and js mov jne fwait in xchg mov repnz xchg rex.WRXB rex addr32 push xchg mov mov stc data16 mov nop movslq popfq xchg jno fisub xor push icebp pop cli lret imul add cmpsl (bad) (bad) js cmpsb or outsb sbb and jp in cmp sub lods (bad) je rol lahf mov xor rex.WRXB std cmp leaveq lret lret enterq int rol iret (bad) mov push jmpq mov test push int3 pushfq lret std (bad) rex.WRXB out fs mov sub lea int3 lea in in mov test rex.WR mov (bad) cmp repz jrcxz movslq and repz xchg mov je jrcxz test rex.WXB mov or jmp imul test jnp mov mov je jrcxz test rex.RXB xchg (bad) in mov cmpsl jrcxz test ja mov (bad) in mov je jrcxz test rex.WRXB rex.WR repz out mov scas jrcxz test jg mov mov je jrcxz test rex.R rex.WR add in fs jrcxz test je mov xor xchg mov push jrcxz test rex.WR rex.WR or in mov jrcxz test jl mov mov pop jrcxz test rex.W rex.WR or callq jrcxz test js mov mov je jrcxz test push rex.WR repz lock mov xor repz mov je jrcxz mov jge jbe or mov test rex.WRX mov mov test rex.WRX gs sbb mov test rex.WRX gs sbb scas sbb (bad) sbb mov mov mov test rex.WRX gs sbb mov test rex.WRX gs sbb stos sbb cli sbb mov mov mov test rex.WRX gs sbb mov test rex.WRX mov mov test rex.WRX gs sbb movabs test rex.WRX mov test rex.WRX gs lret and icebp rex.WR xchg in mov je jrcxz test cltd in mov je jrcxz test xchg in (bad) (bad) rex.W rex.RX xchg out data16 rex.WR es fistpl mov (bad) ja cmc int3 int std mov je jrcxz test (bad) rex.WR iret in mov je jrcxz mov mov jrcxz rolb repz in mov jae rex.WRXB enterq lret pushfq int3 std lret jb (bad) ror (bad) je (bad) jb repnz fisttpl in cmc xabort idiv cli rex.WRXB or fdivr loop (bad) fisttp fstpt sub (bad) xchg in adc (bad) je or and mov or fdivr loop stc fdivr loop rex.B mov add jg push (bad) popfq imul iret and rex.WRB int3 stc rex.WRX movslq or sub movabs add adc cmc (bad) pop or push test imul add movabs jne cs xchg (bad) imul fstpt out minps push scas mov (bad) insl push sbb (bad) int3 rex.WRXB rolb repz in mov je jrcxz test mov cmpsb mov rex.RX test sbb mov pop cmp cmp (bad) in in shrl push (bad) cld in mov pop test (bad) nop rex.WRX int3 leaveq mov pop pop push rex.WRX mov or rex.B outsl and lret insb rorl vshufpd test (bad) movsl test imul mov and and outsb push xchg (bad) icebp enterq cmp pushfq icebp (bad) pop rex.WR icebp push sbb mov int3 icebp test mov loope jmpq iret in jne icebp addr32 and and (bad) lret movsb ror sbb mov jb stos push cwtl pushq js jg rex.WB ds lret cmp and cmp jp out lea int3 and pop ror sbb je add movsl icebp sbb loope stos mov (bad) (bad) test rex.RB xor and rcl rorl ss lods test imul test mov (bad) cmc iret cmp (bad) cmpsb loope repnz rol leaveq push or scas sahf mov and push ljmp popfq mov rex.W xor fldt cwtl lods jns xorl (bad) (bad) ds cmp mov (bad) (bad) cmp outsb insl xchg cmp push fwait std (bad) mov cmp mull adc mov jl sbb repnz rol leaveq rex.WB ror in (bad) adc pop rcll lea movsb add lock (bad) jno sarl sbb jmp cmp rex.WR rex.W adc loop (bad) (bad) pushq xchg xor lret xchg fdiv rorl ja jns iret and shrb mov jp movsl je mov mov mulb xchg std test (bad) movabs (bad) inc add leaveq rex.XB (bad) cmp test sub repz (bad) rex.WRX rex.WB shll rex rex.WRB xor adc push rcrl xor cmp cmp rcl ss sub xchg sarl xchg jo rcrl cmp vmovapd add xchg movabs popfq push enterq retq mov xor (bad) (bad) rex.RXB or (bad) sbb xor xor and (bad) (bad) mov jrcxz xor adc cli movabs mov sbb add rex.RX (bad) (bad) add jnp and push pushfq mov ljmp adc cmp ds idivl rex.RB shrb mov iret and (bad) mov jg (bad) test repnz xor leavew rex.WX roll lods sarb test push xchg lods cld sub scas shrl out rorl icebp or push and icebp rcrb rex.WRXB sbb movabs fs shll repnz stos (bad) sbb rex sbb (bad) mov rol cmp mov frstor (bad) shlb imul rex.WRB movsb rorl rex.RX sbb callq js int or sbb retq shl out mov or and jae adc (bad) mov xchg (bad) xor sbb cmp add outsl (bad) mov out cmpsb shrl jbe bnd insb (bad) int3 movabs push idivb add js pop sbb outsl out adc pop cltd (bad) (bad) int rex.WRXB jae (bad) cmp sbb cmp ds xor push and (bad) fsts rex loop negl rex.R and adc mov stc (bad) lea bnd (bad) lret (bad) (bad) hlt jno test lods repnz movabs negl and (bad) (bad) xor cmp add (bad) pushfq movsb shl pushq mull lods mov pop scas lahf mov stos xor cmp ror adc fstpl (bad) (bad) rex.X rorl shll and add or adc enterq add cmp in mov stos cmp out pop cmpsl rcll mov (bad) jne push jmp (bad) (bad) lret rex.WRXB shll enterq rol lock jmpq rex.RX scas and ror icebp (bad) jmpq cltd ss xor repnz xor or add rex.RX jns movabs (bad) stc jbe rex.X add sarl (bad) mov movabs jbe (bad) adc jae js shrl ja jb or (bad) pop retq mov pop cli pop add mov out (bad) cmp jno jns rex.B ror pop lea pop gs sub loop stos clc repnz (bad) jb push mov fdivrl shrl callq (bad) fisttpl (bad) push (bad) push add cmp xor sbb int nop rorb pushq jnp shll xor xor rex.WXB rex.WRB hlt adc lods jnp roll xchg leaveq incb add (bad) pop xor cmp (bad) movabs cmp stos xchg cltd stc sahf rol es loop sbb loope sti rex.WXB rex.RX mov movsb (bad) mov test imul adc cltd leaveq imul je jb retq rcl sub cltd movb scas add mov sbb sub and ss xor sahf loop rcll repnz adc jmpq or add cltd rcrl adc imul xor stc scas mov imul test gs loop shll mov bnd rex.RX push stc adc sub pop rcrl lret jns mov mov mov push shrb (bad) roll pop scas xorl jno mov mov insb and lret adcl rcrb leaveq rex.X hlt mov and rorl insb rex.B sbb cmp stos in test rorl adc (bad) imul decl sbb fstp leaveq out sbbl mov fiadd fld orl sbb shrq xlat jnp xor cltd rex.WR repz popfq adcl jno test mov jrcxz sbbl and rorl rex.X mov out mov lret or roll xchg and shrl retq ror mov out (bad) mov fwait xor shrl rex.WRXB cmpsl loope int mov jp (bad) in rex.R push rex.WR rex.WRXB loopne jmpq fiaddl outsl lock leaveq mov retq outsb pop and mov jno pushfq (bad) (bad) cmp rcr rex.WRXB jp in pop push rcrl subl adc jmp (bad) sbb sarb (bad) xor sti push mov ja adc (bad) sbb pushq sub mov cwtl outsl nop subl push out lock es xchg roll out (bad) sbb sbb (bad) adc loope cltd fistpl shl lret push jb frstor sub decl add (bad) int popfq jmp mov (bad) fdiv ror mov rclq pushq (bad) hlt push cli in roll jp (bad) or je jns rex.RB add jo (bad) shll rex.XB adc rex.XB and fbstp lret add and xchg lea (bad) rex.X rex.R (bad) (bad) fldln2 (bad) in mov lea fwait popfq (bad) loope data16 xor rcrl movabs mov jne pop rol (bad) imul xchg rcl mov mov lret rex.WRX xor and (bad) sahf rex.WX push jge xor sub rcll push sbb insb rex.WR mov xor push rex.WR sub xor rcrl stos lods cmp insl xchg mov xchg inc repnz sbb jno jbe rcrl adc adc retq stc sub lock rcr stos movabs mov (bad) movabs (bad) jge add (bad) or pop sub jns retq add test cld retq (bad) jg adc push movsb lahf mov rorl sbb rcll cmp mov pop mov (bad) cmc jno xchg cli loope (bad) (bad) xor shr cmpsb rex.XB sbb shll ss rex.B cmp and (bad) sbb stos lea (bad) xor movsl (bad) outsb (bad) mov mov (bad) popfq push orl test mov rorl and xor or rex.RB xorl (bad) rex.WRX rex.B (bad) lods mov subl xor (bad) out rex.RB rorl stc pop xchg xchg fisub pop sub addr32 rol nop (bad) es rex.WXB mov xor and sbb add notl add add enterq (bad) icebp cmp cmp add xchg mov rex.X rcll and adc cmpsb fstpl rex.X sub rex rex.W retq pop rex.XB loope adc repnz cwtl (bad) jne mov jbe scas test sub xchg mov fdivs add sarb scas adc icebp xchg mov sub rex.WXB repnz and xor jmpq and outsb mov scas addb retq adc and rol in shll mov leaveq (bad) xlat cld xor test xor sbb out std mov (bad) push cli loope rex.X sbb ficoml pop cs (bad) (bad) test fimul push mov sarl enterq (bad) stc ds xchg orl lods faddp cmp mov cli (bad) (bad) adc cmp sbb gs ficoml (bad) cs rorl in add fnsave rcll fstps mov pop (bad) rex.B mov rol (bad) pushq rex.WRX rex.X (bad) jg cmpl xor test pop (bad) rex.WX data16 (bad) cmp fcoml add pop test int3 cwtl adc cmpl test mov add adc xchg leaveq mov or sarl sub cli mov and or push mov andl push and xchg (bad) xchg icebp pop pushq shrl ror test sub test or pushq test sub (bad) sub add (bad) rex.WRB or (bad) rolb mov fiadd popfq add mov (bad) (bad) cli (bad) rcr fnstenv (bad) leaveq movb adc rex.WB (bad) mov cmp adc (bad) fadd stos (bad) mov rex.WRB cmc sbb rex.X (bad) or add rex.W adc pop hlt xchg imul sub and nop lea (bad) je jns shl mov stos loop (bad) pop rex.B pop (bad) (bad) (bad) (bad) fimul lret sub ror mov jle out rex.B mov jns sahf out leaveq rex.B rex.WRXB rex.RX ss or out cmp or cmc add jl icebp rcr es jle sti movabs movslq out and mov rol push (bad) fucomp es sbb rclb ror ds out retq loope pop xchg mov movabs nop (bad) cltd rol jae (bad) jno out push pop addr32 add cmpsb or push roll sbb fimul pop cmp jo sbb (bad) jne sub xchg shll xor add imul shrl lea cmp leaveq sbbl retq out orb fistl sbb and xor outsb mov mov (bad) (bad) xor test or cltd shl cmp or push rex.WRB rex.RB mov repnz (bad) lea mov sarl pop push cs out (bad) rex enterq pop rcr test shll andl ficomp shll or icebp sub rcrl sbb iret rex.RX adc outsb lods (bad) cmp xor sub xor iret xor rorl jno sarl clflush es int mov shll (bad) fwait rex.WR xchg pushq scas rex sbbl rex.WR imul neg mov add scas pop xor jmpq jmp xor int cmpsb cmp movabs (bad) std cmc xchg jl (bad) enterq addr32 and mov rex.X jmpq out je sub (bad) (bad) or (bad) cmp movabs rex.B (bad) rorl (bad) mov vcvtdq2ps (bad) rolb mov sbb test (bad) hlt sbb xchg movabs movabs mov mov xchg cmp out (bad) jg (bad) and (bad) repnz (bad) rol pop and or jne jrcxz test pop and jle loope sbb fisubrl lea jmp jne add shld cmp retq icebp callq xchg or adc jne mov (bad) pop out movabs notb imul gs fimul mov pushfq xor xor push (bad) fstl mov movabs insb adc (bad) stos (bad) adc movslq fdivrs push shrl xchg fnsave mov jbe mov imul pop cmp sub rex.WRB rol mov xor rex.B rex.RX jbe movabs and cs rcl or cli xor sub addr32 jno (bad) rex.WX rex.WB rex.WRB rol pop imull pop mov fimull loop or mov mov rex.WR in out mov push or jp lods rex.WB mov je or jmpq sahf fwait enterq out mov jge sahf test rorl (bad) rex.WB loope jns xchg xor add jle jno rol pop xor cli and add int fsubl add jns mov test or xor cmp (bad) sahf insl push cmp std mov in addr32 movabs rex.WRB adc xchg sbb faddp pop (bad) insl (bad) cmp or iret (bad) sbb repnz (bad) repz movabs rcrl ds loope divb (bad) mov stc scas jle in clc rex.WRX movabs mov movabs mov (bad) jge rex.WRX movabs rex.X out xchg outsb movsl test rex.B (bad) rex leaveq shlb (bad) (bad) (bad) xor (bad) mov jl cmc retq and outsb jle xor (bad) fldl jmp (bad) rex.WRX xor (bad) (bad) push repz loopne mov add pop enterq rex.RXB outsl adc enterq xor roll retq adc cmp mov xchg gs pop cmp fsubrl cltd sahf mov mov pop sarl xlat jbe (bad) xor cmpsb cmp (bad) (bad) (bad) add negb sub movslq add insl (bad) jne sbb movsl mov popfq (bad) sub adc gs xchg (bad) mov mov and jmp rol adc mov rcl rex.W stos test retq vmovshdup or rcll mov xlat pushfq (bad) loope js push (bad) adc ss (bad) jge add imull mov mov mov cli mov shll pop xchg sub (bad) iret cmp repnz rorb stc mov (bad) (bad) in sbb fwait xchg jno xchg add xchg xor fistp shr int or out add ror jns std mov rex.B es lret (bad) cwtl stos ror xchg in mov rex.B mov mov sbbb rex.WRB jmp jne jrcxz (bad) xor test adc insl mov pushq adc (bad) testl (bad) icebp (bad) fs insb fxch adc loope jg mov rcll cmp in (bad) rol mov rex.WRXB (bad) ds std pushq pop jl xorl mov shr xor out mov cmc stos add rcrl cs pop (bad) mov outsb and cmp sarl rex.WRX rex.WX add sbb gs mov std xor es xchg popfq rcll rex.B sti adc test rclq cmp push rex.WRXB pop rex.WX fwait mov loop idiv cli xchg int pop (bad) mov pop icebp lret out xchg rex.R rex.B mov jno xor test mov enterq rex.R (bad) (bad) movabs mov sarl mov sub popfq test std in adc rol lahf xchg add sbb push shlb jns rcrl (bad) add ljmp test (bad) mov mov rcrl icebp and adc fisub add in jns (bad) rorl cmpsb jmp test jno xor loope in out (bad) rcrl or (bad) mov fisttp (bad) push retq mov rcr shrl cmp mov in sbb std imul in test add and mov fidivl (bad) (bad) adc (bad) pop cmp mov rcll movabs rorl outsb mov jmpq stos add imul cmp (bad) ss rex.WXB adc shrl in (bad) movslq rex.XB adc mov out sbb std jl adc incl lahf (bad) and rorl retq pop (bad) fcomps (bad) jbe (bad) icebp xchg std imul iret xchg rex.WRB xchg sbb rex.RB rex.X retq adcl (bad) loope mov not rcrl mov enterq adc mov rorl ss rex.XB rex.WRX xchg rex.X and movb and shrl xor mov rex.RB xchg xchg enterq sarl mov add rex.R rex.WB es rex and sar ficomp rex.WB out decb (bad) lock mov callq cmpsb mov or rcl (bad) jbe adc and or (bad) (bad) push (bad) add mov rex rol jle rex.R (bad) roll xor faddp pop lods movabs adcl (bad) cld movabs andl stos pop outsb enterq xchg add rcrl (bad) js rol fcoms (bad) cmp adc fiadd icebp ss rcll shlb rex.RX cli lret xor out xor cltd ss test lods and xor (bad) enterq je adc loopne adc (bad) mov (bad) stos (bad) sbb ror mov and mov repz cmpsb (bad) mov (bad) int3 adc imul sub in rex.B cmp mov (bad) (bad) movabs rcll push jbe iret pushq mov push jl or shll adc sbb flds add ds (bad) lock adc (bad) rex.RX mov (bad) mov rol xchg jns lods sar mov iret hlt scas pop (bad) scas leaveq add lods rol pop test pushq sti rex.WRX (bad) xor or sarl mov shll es stos sub repz (bad) cld rol ss mov sarl jl xchg (bad) lret and jbe ror push mov push mov loop or repnz jns int jle loope outsb pop xchg (bad) (bad) jno fisubr (bad) rcrl mov adc test adc (bad) cli xchg sbb repnz xor in adc and movabs loopne pop push retq out add add test xor rcrl andl (bad) xchg (bad) and sbb movabs push leaveq lea faddp movabs jne rex.WRB add rex.W jae movabs movabs rol rex.WR (bad) pop add jno add mov jns adc and pop (bad) (bad) lret ss roll loope lods (bad) jb sarl (bad) out rex.WXB rex.WB (bad) icebp mov xchg (bad) xor and movabs retq rex.X rex.WXB (bad) sbb jns retq sti jne cmp mov test imulb shrl jp pop xchg mov gs pop (bad) cmp (bad) callq (bad) adc xor (bad) sbb lret (bad) or mov int3 (bad) imul sahf rex.WRXB rex.WRX rex.RXB rolb in sbb or rex.RX cmp out (bad) in mov (bad) or test rorl mov jns outsb (bad) xor jnp int sbb pop rex.WB xor adc (bad) leaveq (bad) (bad) mov sar sbb cmp loope cmp ror (bad) jmp movabs pushq test es xchg ja pushq int3 pop adc xadd xor sub and xchg lods add stc and (bad) in xchg mov sub retq xor (bad) loope (bad) (bad) cmp push shrl xor mov add xor xchg mov add adc (bad) cmp sbb (bad) mov rex.B fisubl int3 mov (bad) jb (bad) cmp sahf and adc and (bad) icebp or roll (bad) or cmp push (bad) jge loope xchg jbe lret and mov or pop shr rcl sbb sbb outsl cmpsl sarl test mov mov rcll mov sub imull rcl es mov jbe rcll shrl or std iret (bad) (bad) mov xchg mov add shl cmp test and (bad) rcr (bad) movslq jp repz adc cmp stc mov movslq mulb mov push jl (bad) rcr cmc xor hlt cmpsl ds xor pushq sar rex.WRB (bad) sbb xchg sar (bad) mov scas js adc xchg int rol sbb shll or retq (bad) mov (bad) jb rcrl ffreep icebp jl rorl bswap sub movsb in rex.RX sar lret jnp push out imul (bad) push rolb repz mov roll (bad) repz push in pop ffreep pop sub popq (bad) rex.RB sarl movabs (bad) (bad) lahf test sar rol xor cmp xor test lret cmpsl or pop rol push (bad) sti loope pop movabs movabs leaveq imul jmp rex.WX (bad) push push movsl (bad) push inc rex.X jrcxz lods retq jmpq lods adc repz xchg or cs xchg (bad) lret lret jge (bad) (bad) fimull push movsl (bad) hlt stc (bad) icebp mov or rex.WRB (bad) movsb (bad) fld (bad) (bad) xor stc (bad) and jno loope stos rex.X rex.WX xor sbb or mov pop add (bad) shl (bad) or sbb (bad) sub (bad) movabs shrl testb faddl loope int3 push rex.WRXB callq sbb test pop iret jl xchg ror movabs rcll out rex.WX push rcrl fdivp mov jnp adc pop mov pop cs stos lret lret xchg rex.B cmp pop mov out sbb cs stc rex.X rorl mov jmp and xor mov rex.XB push and subl mov rex adc or iret iret test add fcmovb pop mov ds mov (bad) mov xor data16 or sub (bad) sbb adc fidivr (bad) add int3 sar push mov (bad) icebp lods (bad) ljmp adc sbb adc or (bad) and addr32 jmpq lret xchg rolb jp rex.WR frstor pop pop in sub sbb jrcxz jb (bad) out mov jnp shl mov insl rex.B and (bad) retq (bad) sub xor fcmove mov (bad) (bad) pop (bad) pushq sub repnz mov test ds enterq stos push rex.WX (bad) and cmc enterq jge (bad) movabs rex.XB and sbb retq xchg rex.B sub push sub and fcom or imul jp (bad) loope push add vmovapd repz xor xchg iret mov mov movabs xchg popfq out (bad) roll test cld test xchg loope icebp data16 rcr jrcxz test (bad) je rex.WR (bad) insb mov ss rol and (bad) (bad) (bad) xor cmp rex.WB cmpsb rorl pop addr32 pop shll stos (bad) lret rex.R (bad) rex.WX push cltd and rorl out jns shl stc in rex.WR push rcl and shlq rex.X sub rex and orb fs mov push lret imul lea rcll (bad) add rcll (bad) in mov adc (bad) or rol loope pushq mov rol jmpq mov fstpl xor rex.XB rex.RXB or adc rcrl xchg add repnz movabs retq sub push mov mov jmp (bad) movslq rex.R sub shrl pushq rex.WRXB pop (bad) push pop rex.WRX mov jns (bad) fldt out cmp movabs (bad) and cmp xchg (bad) mov stc loop rex.WRX movabs (bad) mov xchg mov fidivrl lahf or sbb pop rol or mov push (bad) pushq (bad) pop shrl push and cmp pop out enterq test loop (bad) adc mov icebp test (bad) xchg xor (bad) cmc sub adc cmp or rex.WXB rex.WR mov (bad) pushq (bad) int3 icebp adc rex.WX pop rex.B cs rex.RB (bad) ss add sub stc xlat xor cmp add jno rex.RXB ror xchg fpatan add in in notb pop fcmovb push sub shrl loope movsb jmpq movsl add movabs rex.WB adc cmp fmull add (bad) rol rex.WB jno imul adcb decl loop jmpq roll stc mov pop (bad) mov rol mov movabs xor (bad) test (bad) push push movslq pop rolb rex.X scas cmp mov (bad) mov rorl icebp test leaveq jno cli ja sub mov shll jle cltd xchg fwait jns xchg es xor or add ficomp (bad) jno jns movabs (bad) (bad) stc or or shrl or rorl repz and sar movb rorl xor and rol cmpsb add jno xorl loope mov movabs push jno jns (bad) rcll add jge (bad) (bad) lea jae sar incb rex.WB mov roll mov xor cltd sub ss sub roll rolq xlat mov pop mov add and ffree leaveq pop int pop mov je or adc xor std xchg pop shrl loope (bad) cmc movabs movabs jmpq popfq adc nop cltd rol leaveq add mov jmpq roll (bad) or fadds sbb shll (bad) pop leaveq and and add pop and fxch add or cmp xor roll xlat (bad) sub sub ror sbb pop cmp test mov xor xor loope or add mov xchg loope (bad) mov popfq push retq repnz add and imul rex.B retq rex.WB jno imul add subl pop cwtl rorl xorb rex.WRB mov mov sbb and jp retq mov mov xchg or (bad) and mov data16 in rcll rcr popfq xor int iret rex.B rcrl sarb sub rcl jbe (bad) rex.WX lret mov rex.XB xor (bad) incb out sarl or and (bad) lret loopne sub sub in mov (bad) xchg xor shrl test scas shl rcrl loope xor movabs mov mov mov rorl pop stc (bad) add retq rex.WR (bad) repz mov push icebp mov add xchg (bad) xor and in rcrl sbb fld jne rex.R (bad) vpaddusw fnstcw rex.RX adc ja sub repz shll xor loop and lret and (bad) jno rex.WB repz rex.B sbb mov movsl xchg mov mov rex.B adc shrl fcompp (bad) (bad) repz rex.B rex.WB jno repnz xor xor andl shrl int rex.WB frstor mov adc test cmpsl int3 repz sarl mov mov cmp lret (bad) mov mov (bad) icebp mov retq push xor mov loope add xchg insl in or (bad) sbb cs in shr pop sbb (bad) mov jno rex.WB rex.X push js sarl mov (bad) hlt insb adc (bad) loop (bad) or add mov push mov lret or ror fxtract iret icebp (bad) leaveq rex.X cmpsb jrcxz (bad) cmp loop loope in stc add cmp std divb add and push insl pop mov jno rex.WB mov callq (bad) xor (bad) jrcxz pop (bad) sahf push mov es rol loop xor add imul mov sahf (bad) icebp repz pop mov (bad) xor (bad) mov mov sbb xor fidivrl (bad) (bad) mov sub callq sbb (bad) lea cmp out (bad) (bad) sbb rex.WX rex.WRB mov outsb hlt rex.WX rex.RB (bad) xchg shrl stc test mov scas mov push sti stc xchg mov movsb negb stc adc rex.WXB sbb je movsb (bad) mov hlt add rex.RB sub (bad) hlt js rex.RB cmpsb xor repnz mov rorl lret (bad) (bad) pop cmp std popfq add loope fcomip movabs test cltd ffreep lret and in rex.WR push mov xlat std rcrl pushfq jle (bad) sub adc shl retq jb rorl push pushfq addr32 push pushfq rex.RXB loope cltd imul leaveq iret (bad) rex.B es testl pop lods (bad) xor (bad) sarl repnz or callq roll (bad) (bad) shl (bad) in out fwait std add sub push sub fisubl xor rcll cmp xchg (bad) jno jge (bad) (bad) rex.WXB int3 add sbb shrl roll or jno (bad) adc sbb movsb std xchg rex.WRX xorb popfq add orl jne cltd movsb (bad) rcrb test je xor or repnz (bad) rex.WRX subb rex.B mov (bad) (bad) sbb out popfq fistpll pushfq (bad) movabs rex.R rex jl and outsl (bad) xlat add rex.B je ss scas add sahf (bad) loope (bad) fwait rol (bad) rclb fdiv out (bad) sub (bad) sar pop rcpps xchg (bad) cltd pushq jle ja shrl in loop (bad) rex.WB pop jno imul cli imul mov jge (bad) jle rcrl (bad) xchg mov (bad) sarl pushfq rex.RX adc fisubrl pop jmp sub insl retq (bad) cmp (bad) pop retq int retq cmp (bad) retq stos insb retq rex.X rex.R (bad) (bad) loope and mov rex.B pushfq rex.B addl xchg rex.WR rex.B rex.WRX or movsl sbb imul rex.X icebp rex.RXB rex.WB lret loope sarl (bad) (bad) int3 (bad) es (bad) (bad) fwait (bad) lret cli imul sbb movabs rex.RB (bad) (bad) (bad) (bad) iret nop jno fidivl rex.WXB rex.RXB xor fwait je repz rcll (bad) (bad) movabs nop loope mov jmpq xacquire mov (bad) lods push (bad) test rorl imul xlat loopne loope (bad) faddp (bad) push (bad) jrcxz push stc in int3 repnz fcmovbe roll and je sbb cmp movabs jrcxz pop rex.XB shl fiadd stc xacquire mov movsb jle stc cwtl xchg hlt movabs movabs movsb rorl stc test mov movsb mov stc test stos pushfq faddl (bad) (bad) mov rex.RB movsb jl stc rolb pop cmp rol loopne sub adc or or or cmp rcll mov mov or xor cmp cmp (bad) or xchg (bad) xor or add rclq or or add in jnp cwtl jp pop clc pop xchg lods (bad) (bad) out icebp cld callq lods and add cmc mov push movsb divb mov push sbb xor lods xchg xchg push (bad) xchg pop push xchg rcll rorl mov ror shrl nop mov xchg rex.RXB mov sbb jo insb sub jns stc or (bad) clc ror stos add sbb sbb roll or (bad) imul (bad) hlt sti sbb sub outsb or xor sbb ror fstps addl push sub pushq cmpsl mov push jge push and push sub lret or sahf xchg retq xlat jmp rcrl adc data16 add and (bad) xchg loopne xor rex.RX rex.WRX (bad) (bad) cs xor rex.WRB out int roll add callq cmp or rcrl pushq (bad) xchg mov pushq push scas jle je mov (bad) stos flds xchg rol clc mov add add and push rcrl mov stos lea mov rex.X cs xor xor sbb jbe shrl add cmp pop rcl sub insl jnp roll sub sbbl test outsb repz sahf jo (bad) rex.XB jae fisttp mov jno xor cwtl mov rolb push adc sbb shrl xor ds jno (bad) mov cmp shrl hlt (bad) and rex.WRXB rex.WR and or mov push jrcxz cli iret nop mov mov rex.XB (bad) mov lea jns pop rex.B insl movslq vhsubps mov xchg jno pop adc adc movslq add rex.WX and (bad) mov sarl lods movabs and test int3 sbb jrcxz (bad) stos (bad) out leaveq out (bad) xor xchg xor (bad) cmp (bad) (bad) imul (bad) icebp iret movabs fnclex rcrl add mov iret shrl repnz rex.WRX loopne ror jno jns and iret push xor cmp (bad) sub (bad) cmp (bad) insb sub and (bad) mov neg (bad) lret or xor xchg jrcxz fs mov int3 orl mov mov xchg push cmp sub ja js rex.WXB sbb mov repnz mov rex.RXB and sub jnp addr32 mov mov mov push (bad) mov jb rcrl and je iret adc jb repnz test movsl xor imul adcl bnd xor sti cltd int rex.B movabs imul and xor jne (bad) or jns roll leaveq (bad) lahf cmc shrl pushq flds (bad) or shll shl notl stc roll or xor sub and sbb hlt add jrcxz (bad) pop xchg mov sarl xchg (bad) jne shll jmpq rex.WXB shll or rex.R lock (bad) shll (bad) sub (bad) sarl (bad) mov rorl icebp xor sub rorl sbb mov mov rex.WRB push rex.WRX pop add mov cld (bad) jae sbb pop rex.X icebp or out xor xchg rol (bad) cmp adc (bad) push rex.RX and mov cld repz lret sbb rorl or xlat and pushq pop int3 roll sub or rex.RXB hlt in shr and rex.WRXB repnz xor rcl movslq mov clc jno cld rex.WB xchg (bad) shrl mov xchg mov cmp pop jno jns rex.B rex.WB adc imul push jg shrl pop adc xchg repnz (bad) jg (bad) (bad) std (bad) and cmc rex.WB adc sarl pop xchg test rorl lahf xchg in rcrb add (bad) movabs lahf (bad) je jle shll iret fs cld jp rcl sbb add test int (bad) enterq pop fsubrl nop (bad) or and imul push rcl fxch xor sub pop jl iret mov stos pop lret lret in stos rorl push cmpsl xchg fadd jrcxz fstpl mov test enterq push xlat (bad) pop (bad) fadd sub jmpq insb lret rex.WB push stc sbb int3 imul es (bad) fist rorl mov (bad) jb jo sbb ds (bad) pop mov es subl pop mov mov repz add cmp push lods enterq shll adcb mov sub int (bad) pushfq push cmpsl rcll bswap movabs movsl cli mov pushfq out loope rex.RX sbb mov jbe sbb insb sub xor (bad) pushfq roll sbb (bad) ffreep jge rex.RB sub or jl push lret scas sbb hlt (bad) mov iret fnstenv adc xor or xor sub jmp popfq mov cld mov (bad) lret push cli ja jnp orps outsb sub shll jp (bad) cmp shrl xor pop xor or add xchg stc push (bad) mov add jge xor lods xor sub (bad) gs sub rex.B sub xchg cmp and rex.RXB jl (bad) pop enterq movabs lret cmpsl (bad) mov cltd mov shll sti push repnz xor cmp shrl rex.WRB pop test sti cmp or push rex.WXB and add sahf (bad) mov adc jmp jge rex.WRB xor mov add shl mov sbb mov (bad) fisttpl retq lea and nop jno jbe xor add xor push rcl jae fisttp mov rex.WRX in xor cmc lods (bad) repnz pop xor fdivrl xchg mov roll repz fwait add test movslq jmpq loop fisttp test scas cmp push sarl (bad) mov cmpsl test push lea (bad) add rex.B jmpq hlt jae xchg sub stc (bad) rex.WR (bad) adc (bad) pushq mov test stos pop xor bnd popfq sub fdivp adcl pushq fstpl movabs pop mov cmp lahf mov es movslq je jmpq rcr shll rex.XB mov push cmp push cmpsb jbe sbb xor lret and jne out movslq imul add repz adc gs adc (bad) bnd cld iret fisub loope rex.R xor pushq rex.RX (bad) push rex.WB rcll js jle jo sarl ss sbb (bad) lret retq (bad) add jrcxz loop sbb rex.RX pop test (bad) jno (bad) scas insl cmpsb imul mov jp rex.WRXB (bad) or mov (bad) and std fnsave clc sarl addr32 cmp roll xchg mov cwtl (bad) cmc jle rex.WR xlat (bad) push outsl rex.WX sub rcl mov jb lods stc movabs movabs add cmp cwtl sahf out scas xchg fnop (bad) (bad) sarl std cld jno incl lock cwtl (bad) mov (bad) (bad) fcmovnbe es scas insb jle rex.RB rex.RX jno xchg xchg sub sarl movsl pop (bad) mov jae and sbb mov (bad) push loopne add mov push (bad) and shll movabs mov repnz cmpsl add cmp rcll icebp pop scas (bad) rex.WRB retq pushq stos and xchg sbb sbb cmp push rcrl movsl repnz mov (bad) lret xor adc (bad) lock shlb rex.B shl lea xchg jae sbb clc rcll jb cmp shll ja fidivrl xor (bad) fdivrs outsl jbe mov sub callq std mov pop lea (bad) rorb ja notl mov pushfq shrl xchg mov and decb iret pop pop cltd and mov stc add xchg jmp popfq movabs (bad) icebp sub pushq outsl mov rorl (bad) (bad) (bad) xor fildll (bad) cmc sub add or scas xlat roll sub sbb (bad) ss xor (bad) and rex.RB jl adc movslq or cmp (bad) rex.WRB pop add out adc movabs rcr add xchg (bad) mul data16 rorl sbb and rex.WX sbb add outsb rex.WRXB cmp and xor add sbb fs negl (bad) sub jns retq add (bad) xchg sub in xor rex.WXB mov (bad) nop shrl test xor jmpq subps jrcxz cli cltd enterq or and jge add jae pop adc or jmpq (bad) ror (bad) cmc je jno int test mov (bad) or cmp imul pop (bad) hlt xchg rorl rex.WXB xchg and retq lahf lea (bad) and sbb lock (bad) jle jne test and ss cmp cmp cmpsb enterq (bad) xchg jmp and push scas (bad) insb sbb and rex.WRXB enterq callq mov sarl xchg repz mov (bad) (bad) sbb sbb (bad) fsubl xor (bad) sbb fcoms mov sbb add stos cwtl add cmpsb cs (bad) jmpq loopne (bad) jg mov stos (bad) add (bad) sub rorl int3 jmpq fistl (bad) and cmpsl pop lret movabs (bad) cmp (bad) jmpq cmp mov popfq adc xor mov mov push imul iret fsubr xor (bad) mulb mov (bad) loope lcall xchg icebp in jbe rex.WR cld rex.XB lock pop iret push imul (bad) xchg rcl mulb cld push jns ror (bad) (bad) gs sub rcr sub (bad) sarl push rol pushq and rex.RX (bad) pop rex.XB cmp ror inc pop fdivl add sbb jl (bad) cli sarl or popfq and shrl rex.RXB (bad) mov shr iret outsl adc fistl sub (bad) jp sub rex.WXB rex.RXB shll jg pop xor pop mov movb shll (bad) sbb jne movslq xchg hlt rex.W enterq jo jbe sbb rex.WRX rolb xchg sub (bad) mov shrl xchg movabs add cmpsl (bad) lods (bad) mov mov movaps icebp rex.XB sbb gs adc mov xchg pop gs shr in and (bad) rex.WXB jl sub lock andl mov sbb sub lret push and (bad) movabs mov push loop (bad) (bad) ds shrl xor add pushfq imul in sarb iret mov outsl pop add (bad) out sub rcl retq pop out pop xchg rex.WRXB mull and gs stos mov movabs popfq lret add scas in jnp rorl fisub out movabs stos imul jnp (bad) jae hlt and mov insl (bad) mov rex.XB fsub ffreep int3 sub push and or mov rex.WR pop rcl fnop loope in xchg roll fs lock shll rex.RX data16 rex.WRX adc pushfq push jmpq add movsl add ds pop (bad) test jge and retq jmpq pushfq insb sbb rcrl and clc xchg nop int3 pop jb cmp mov rcrl rcrb sub rorl push and pushq mov add fcomps out (bad) int3 xor push rcrl (bad) cmp add fadds or xlat or in sub (bad) js out jle pop mov cwtl mov mov and and movabs and loope (bad) lods (bad) cltd and shlb rex.WRB jno or or fist fstpl or push sbb (bad) jp insb add (bad) andl test test shrl or xor or stos sbb dec fidiv (bad) (bad) rorl (bad) mov mov fwait rex.B mov (bad) insb out nop rex.WX shrl shlb (bad) mov sarl xor fist fdivl fmuls sub (bad) retq (bad) callq jmpq (bad) (bad) rcl test lods loop and iret cmp rcrl stos xor mov xchg xor sub and (bad) rcll rex.X jmpq rex.WB loop pop rorb or push retq fadds data16 cld and xorl (bad) (bad) xor imul or sar repnz retq cmp jp rex.WXB rex.W or mov add repz mov scas cmp sub out movabs push push rex.W jne rorl pop movsl push rex.WR roll mov pop fnsave pushq add rex.RXB imul jae loopne imul sarl mov (bad) (bad) jge jg sub (bad) (bad) jl rex.WRXB (bad) pushq cmc xchg and xor es rcr (bad) callq lret sarb rex.RX cmp in mov cs std sbb rex or rcll (bad) pop (bad) movabs rex.RX pop cwtl xor cmovno push (bad) jo mov (bad) pop and (bad) in in xchg add ror loope add sub sub rex.WXB test lea (bad) lahf out insb xor sbb roll imul and rcrl sbb sbb adc fsubrp (bad) pop xor lret rex.X pop push callq shl cwtl cmp adc movabs xchg test sub fisubl mov scas lods iret in push movsb pushq cmpsb xor mov and stc lret mov cmpsb jmp (bad) in pushfq out pop (bad) movabs jno rex.WB rex.WRXB (bad) rclb add cs loopne (bad) or sub gs (bad) js jno and jle movb movsl add and or movabs rex.RX test rcrl mov loop xchg sub push int3 jle adc rcr fisubr rorb mov mov sarl jp pushfq rex.WB rex.RX jbe xchg mov mov cmp lahf mov jge movsl mov data16 (bad) sbb cmc (bad) (bad) lahf rex.B repnz lret fidivr mov sarl (bad) mov ss movabs imul jg decl (bad) pop cmp sarl add shl mov or clc test stc xchg jge shll or shrl cmp stc (bad) mov shrl gs pop or xchg add ss sbbl jrcxz (bad) jno test xor (bad) clc add pushq (bad) mov and fnstcw pop rex.WR (bad) jl movabs cmc add push js pushfq sub sub movsl sbb xchg hlt rcl test and lods movsb in fucomip xlat in (bad) rorl mov cltd push rex.R xor iret rex.XB repz fdivrs subb jbe rex.B push rex.RX jmp cmpsb (bad) fsincos jmpq rex.WRB movabs rex.B rex.WRX cli rex.WR rex.B sarb rex.RX dec cmpsb rex xor and sahf or sbb rex.WX movabs movl test inc div (bad) mov (bad) (bad) xor sub push nop pop xor stos leaveq pop (bad) (bad) rcrb mov mov mov (bad) cmp sub addb sbb jge xorl sbb cmp pushq rex.WRX add mov cmc loopne adc rex.RX jle xor (bad) add cmpsb rex.WX cmp iret pushq (bad) fcompl movsb xchg pop test (bad) xchg in or out mov rex.RB sub clc cltd insb rex.WRB push (bad) shrl ds (bad) xchg (bad) and fwait insl lret (bad) outsl jmpq fsub ja (bad) mov imul sbb or rol lods ja and cmp faddl fisubr and rcrl pop xor (bad) push std (bad) lods cmp roll pushq fwait and (bad) jmpq (bad) rex.B rex.WR jb loopne rex.XB push cmp (bad) (bad) adc es pushq (bad) pushfq gs (bad) notb shr (bad) mov add rorl jmpq (bad) pop test adc outsb movb sarl mov shll rcrb pop (bad) jne (bad) rex.W callq shll int (bad) pop pushq pmulhuw sarl imul shr (bad) mov shll rol xchg ss sbb movabs inc push out rex.X cmpsl mov add sbb cld push (bad) ss (bad) clc int3 rex lock rorl rex.WX rex.B rex.WXB rex.X loop mov (bad) push incb and and es adc push imul pop jno (bad) mov rolb jnp rcrl rex.WRX jb js sti rex.R cmc (bad) ror pop xlat test rorl sub popfq shll js,pn adc push (bad) loopne pop cltd jne mov (bad) shll (bad) cmp fwait add insl rolb outsb cltd lods add mov or jns add in movnti jrcxz int3 stc and repnz push pop mov mov fnstsw or xor in popfq and lahf (bad) out jno ja lods cmp sarl adc cmp repnz rorl (bad) add rex.WRX jo insl push sub mov jmpq test (bad) jns lahf add in jmp int3 jno sbb lods jno add shl loop lock jge or pushq (bad) ficoml (bad) and and rex.WRXB pop mov orl cmpsb or loop (bad) sti rcll ror (bad) cmp pop outsl xchg sub test (bad) out int3 idivb or imul icebp push jmpq (bad) mov xchg (bad) rex.WRB mov mov test lret jno xor (bad) fiaddl mov stc (bad) jno sub (bad) ja cmp cmp jle scas jbe rcr rex.WX jb adc cmp or adc sarl mov mov sub mov ror in lret icebp (bad) stc adcl pushq jl rex.RX jb sbb rex.WRX rex.WR sbb stos rex.RB rep out rorl shl add in push adc jo (bad) pop or rex.RB fs rex.WB rex.WXB stc in loope scas mov out cmpsl xor leaveq (bad) (bad) fs lods movabs repz iret fst sub (bad) sahf jno outsl fwait jnp add pushfq repz cltd rex.XB addr32 adc adc rex.WRB rorb out data16 loop cmp shrq cmp rex.RX (bad) rorl push (bad) xor (bad) pop fs rcl or and jns lret rex.W in movabs rclb (bad) test xchg rex.WB (bad) (bad) lret push jne or (bad) or movabs jg mov pop jle xchg fstl rcrl and shll push add fistp retq sarl clts cli sbb xorl (bad) (bad) mov mov cs or sarl push xchg scas jle rcrl in (bad) and xchg iret or and (bad) mov lret pop incb in (bad) idivb cmp test pop rex.WRB jo rex.WB fadd fldl add sbb xchg int3 push sbb sub rex.B xor fwait (bad) (bad) (bad) rolb and rclb jns iret fwait stos retq nop test loope lock and js cs or jnp rex.WXB rex.RX add rex.RXB rcll (bad) iret sbb or or subl (bad) pop jbe adc jp or (bad) lret and sbb retq js mov mov xchg (bad) stc cmp push icebp mov mov mov sub pop and sbb or outsl jns rex.WRX jno xchg xor shl fidivr test (bad) shrl (bad) (bad) (bad) add loope,pn movabs xor cmp rex.RX roll insb stos sarl (bad) push mulps roll mov mov jmp fadd add sbb cmpsl or mov (bad) push or callq stos jl (bad) xor (bad) sub (bad) (bad) add pop std std ficomp rcll mov mov (bad) in (bad) repnz push out and loop xorl ror icebp rex.WR (bad) shrq shrb imul push imul or paddsw mov (bad) add ja rcrl xor push shlq mov cli popfq jo enterq rex.R subps shll fistpll push sub or or pop mov rex.R rex.WR iret outsb xchg stc pushq rex.RX loopne movsl rex.B lret xchg mov roll cmc push add out lret xchg sub xchg rex.RXB xchg or sub sarl rcrl cmpsb jbe mov nop xchg add test (bad) rex.WRXB lock adc mov jle jo (bad) negb mov ffreep movslq rex.R imul (bad) icebp roll (bad) cmc jb leaveq movslq sahf roll pushq insl repnz rex.B ds mov lods imul (bad) adc push push stos cmp rclb rex.WRX rex.B xor movsb out cmp cmp adc mov insb add callq mov int sbb loope jmpq enterq lods and rol jge mov repz roll mov xchg pop cs xor enterq mov fstpt (bad) outsl movsb adc pop adc or xchg (bad) ds xor test pop out pop cli nop push xchg out sbbl adc sbb cmp push jns rex.B mov cli data16 sbb rex.WR pushq jno jg enterq test lea subl test movsl test mov (bad) lret push test xor pop rorl or and mov mov rex.B shrl cmpsb and int3 mov fadds sar out mov xchg (bad) rcll jb (bad) jns (bad) rex.WRXB xor and (bad) cmp (bad) shrl gs (bad) xor jl rex.WRX rex.WRB push (bad) (bad) push leaveq adc sbb jnp jbe jg pushq (bad) jge (bad) mov (bad) sub in push popfq (bad) repnz pop (bad) rorl jmp sti rex push jnp xor repz pop iret rcrb xchg sub fldt cmpsl es mov rex.RX cmp hlt mov shrl xchg retq pop rcll subl push loop adc (bad) pmulhuw mov retq add pop nop mov adc lods repz hlt fadd clc mov rcll out mov sbb test (bad) or sub rcrl push dec jns (bad) fisubl roll cmpsl mov xor roll jmpq std negl out repnz sarl es rclb rep pop nop divl (bad) xor mov movsb scas sub mov rex.RXB rex.XB rex.R mov (bad) mov adc sbb adc sbb mov (bad) mov (bad) adc (bad) xor and (bad) outsl xchg push rex.B mov (bad) callq int3 (bad) fiaddl and cwtl icebp out test shr xchg movsb pop fwait and lret mov or pop sub xchg push rolb out outsb xadd enterq incb loop (bad) mov xchg js jmpq movabs or jbe or cmpl repz add mov (bad) push scas mov jne rex.WXB mov mov pushfq jae (bad) add (bad) (bad) rex.X rex.RX repnz rex.RXB xchg (bad) jb sbb or callq mull mov rcll andb test mov shrl rcll cli rex.R (bad) movabs jo xchg hlt mov (bad) lahf lret xlat (bad) jmpq fnsave mov sahf roll in xlat (bad) rex.WRX faddp (bad) (bad) mov rorl rorl sub jmp adc push jl rex.B jno test rcrl or fbstp (bad) sbb retq xlat mov mov (bad) movsl lret rex.WRX and or sbb (bad) jge jp sub (bad) rorl push (bad) pop mov stc test (bad) hlt (bad) mov (bad) xor lret xor push retq rcrl pop and xchg (bad) jrcxz rex.WR cmp shll (bad) leaveq movabs insl shl cmc adc cld mov or outsl rex.B (bad) xchg xor (bad) (bad) lahf adc sbb pushq (bad) retq add rex.WB ja (bad) jo movsb cs xchg mov int3 (bad) imul rex.B or or shrl loope lret cmp pop adc (bad) orl rex.WRXB lret xchg cmc sub mov fistpl rex.XB mov mov cwtl rcrl rex.WRXB pop xchg cmp jl callq (bad) leaveq and jo jns fldl rex.WRX jnp fmul mov shl (bad) sbb repz mov rcll shrl (bad) pushfq rorw xor xor mov in movsl stos insl pop sti pop sarl rorb jmpq (bad) idivb out out lcall sub mov (bad) rcll shlb pop stos add jns sbb mov scas jle jb (bad) test rcrl int clc (bad) push sbb xchg fdivrs callq shll movabs adc sarl push rcrl mov rex.WXB xchg fwait mov xorl pushfq rorl ficoml repnz (bad) test scas imul movabs outsb (bad) jns cmpsb sti sub mov iret rol loope xchg push or jmp rex.X xor rex.R cs nop roll or pop sti scas insb adc rcrl and (bad) shlb and mov loopne movabs jo sub fsub or outsl sbb (bad) shl in (bad) xor adc rex.XB movslq shrl cmpsb ficomp xchg pop clc std mov cltd cmp repnz mov andl push push movsb add loop adcl rex.WB xchg xchg sub jno insl add rclb movabs add xlat lret retq xchg movabs ss jg xchg shrl rex.WB rex.R or (bad) test (bad) imul rol or (bad) and add (bad) mov stos rorl sarl cs or xor rex.RXB in rex.R rol (bad) rcrb in (bad) (bad) mov sbb pop rcrl add xorl jg jnp (bad) xor rex.WR lret je imul rol (bad) cmpsb mov rex.RXB andl or stc insb gs data16 popfq cmpsl insl rex.B rcl and push shll (bad) mov (bad) ss rex.R leaveq test idivb scas rex.RB mov repnz jne subl push pushq lahf (bad) int fs imul mov scas xchg ficoml xchg cmp cld mov add push rcrl sbb (bad) je imul jo xlat data16 cmp out lret cmp adc setnp push xor ds jnp add or cmc insl push (bad) rcl add imul jge push xor popfq stos popq jp rex.B cmp shl or insl lret mov repz out insb fcmovbe (bad) and icebp (bad) (bad) cltd movslq mov sub scas sar mov movsl (bad) push sub rex.WRX (bad) int xor out cs rex rex.WRXB rex.WRX (bad) hlt rex.X in push add push repnz movsl push (bad) add ficomp cmp jmpq mov lock mov xchg loope mov jbe rex.WXB test (bad) test xchg lret mov xor sbb xor or (bad) adc add jo (bad) cs add sbb mov fildll mov insl jrcxz rex.WRB js or (bad) test or jrcxz sub or sub sub pop iret loop adc jno (bad) (bad) fist lea xchg jb cmp jmp jmpq pushfq cmp jmp (bad) int data16 test mov lahf xchg mov pushfq data16 rex.X (bad) pop (bad) int int in test push mov fidiv pop repnz out in xchg cli fistpl (bad) mov xchg iret mov jbe lods loopne xor int3 mov popfq xchg mov xrelease jns mov (bad) rex.WRXB fdivs cmp sub movabs fwait sbb push (bad) jmpq push cmpb xchg lods pop pop js movb (bad) push repz (bad) mov xchg jg test mov rex.W pushq pop insb repz xchg adc jo fwait cs (bad) rex.WRB mov rex.WB or (bad) pop adc mov mov adc rex.B jno,pn xor (bad) mov sbb xchg test sub (bad) test add mov nop loope (bad) cltd rex.WRB rex.WRB rex.WRB test mov rex.WRX in shll jmpq xchg cmpb popfq mov idivb sub sub xor push xlat test cltd fstpt loopne mov hlt callq sub mov icebp mov adc (bad) mov (bad) lock icebp or sbb push scas cmp add test lods or jbe mov retq ficom lea pushq loop sub adc int3 cmc sahf insl (bad) jae or test jns mov movabs cmp push data16 cmc xchg in movabs cmp jp rclb test fwait loopne xchg (bad) shr rex.RXB shld in rex.RX movsb pop jne ja sti scas xchg in fisttp cmp add rex.R retq push pushfq clc cli pop movabs xchg rex.WRX lock pushq rex.X fwait (bad) loop fs (bad) lret rex.WX in clc jns xchg mov std rex.XB pop rcll push (bad) xchg mov cmc mov nop or mov (bad) rclb lods rex.X mov orl (bad) cmp lock mov mov mov mov test mov hlt sub cmpsl enterq sbb pop pop rex.W lock (bad) icebp cltd sbb xchg push and iret xchg sbb push repnz stc xchg mov (bad) mov mov movabs (bad) xor clc (bad) rex.W imull cltd xchg mov push mov data16 mov jns pushq imul (bad) push in cld jno out xchg (bad) jns xchg popfq (bad) jae pushq rex.XB xchg rex.RB mov decl (bad) out movabs enterq subl in (bad) rcl sbb (bad) out jrcxz movsl (bad) popfq test out add xor add xchg sbb (bad) (bad) popfq test rex.WX and or rex.WRX popfq movabs in jne cmpl cmc sbb (bad) rex.R hlt test je leaveq jrcxz push movabs xor in jo movabs mov (bad) jle xor mov retq rorl xchg mov push sbb rex.WRB pop ja cmp (bad) fucom mov adc popfq jns push mov sbb js (bad) out movabs movsb adc mov int3 and xchg popfq rex.B xchg mov mov xchg or (bad) rex.B cwtl (bad) roll cwtl mov add in scas xchg div (bad) pop jno or test (bad) xchg pop add rex.RB add (bad) stc gs sub xchg rex.WB pushfq or or out pushfq push rcr pushfq adc add movabs icebp fxch mov add jns movsl (bad) mov adc shll loop sbb in clc and movabs rex.RB repz lahf movabs xor (bad) lahf cmpsb add std (bad) jno in xor mov (bad) fnstcw cltd movabs cmc test jns stos add xchg repz scas rex.B repz adcl jge xchg je jrcxz xchg sbb icebp jmpq mov mov jb xor in push icebp int3 in test adc in mov mov orl xchg retq hlt mov decq out xchg cltd (bad) cmp (bad) and out or adc in retq jrcxz xor mov movsb (bad) jno rex.WRB xor push and (bad) std xchg cmp jrcxz mov loope push cld mov xchg gs (bad) (bad) imul test incl repnz test addl loope pop xchg rex.RB leaveq test icebp loope xchg or fcmovb cmp loope (bad) push and jmpq test in cmp adc mov (bad) cld pop lods or fnsave cld pop pushq leaveq and sbb adc mov fwait loope and pushq add sbb or (bad) (bad) je in (bad) leaveq cmp mov shrl stos mov jmpq test cld andl (bad) mov push bswap rex.RXB xor pop rex.XB or sub rex.B pop (bad) add jl in fisttp jne fnsave rex.WXB fcoml mov jb loope pushq and lods loope cwtl jmpq (bad) cltd mov out and (bad) rex.WB cmp pop xor loop rcr (bad) push and or loope (bad) jrcxz in and movabs (bad) cltd (bad) mov and stc (bad) (bad) adc or imul (bad) mov (bad) cltd and icebp gs in mov cmpsl push cld push or xchg mov rex.WB xor fldlg2 adc test (bad) fstps jns push (bad) jns stc jl and xlat mov push xor (bad) rex.WB (bad) xchg pop add retq jno test imul jns pop mov rorl xor incb enterq push mov leaveq sbb test movsl (bad) cmp sbb leaveq xchg add xor loope or mov jns pop mov ror pushfq jno jmpq leaveq rex.WXB push jp lret lods mov mov rex.WR xor jmpq je hlt rex.B rex.B jmpq lods xchg je sub stc and nop xchg stc (bad) adc mov cld adc cltd mov mov shl push imul movabs lods test (bad) sbb pop ja test and (bad) jns shll push flds test cmpl stc (bad) iret lahf jmpq lahf lods adc pop test jno (bad) pop jno sub test jle (bad) mov cld push lret (bad) push movabs mov (bad) divb hlt add cmpsb (bad) scas stc int push leaveq push sbbb cld pushq cltd hlt repnz leaveq xchg xchg (bad) push lods lea int3 (bad) in (bad) mov xor push cmc fs cld in mov cmp idiv std lahf xor movsl sub mov push fmuls cli push leaveq frstor test cld xchg in icebp hlt xchg std enterq add notl movabs divl push (bad) sbb cltd (bad) pop cld rex.B lret xchg icebp mov repnz movabs push shlb and lret leaveq xchg jae lret xor add int insb xchg mov and je int3 mov in and loope mov pop or jge mov cmp rex rex.R xchg icebp push (bad) lret sbb (bad) xchg je cmpsl cli rex.WB imul push (bad) int movsl movsl testl icebp and iret add push rex.WB cmc leaveq jl (bad) mov loope int jae cmp cld jmpq add (bad) icebp ror and leaveq push lret mov test retq outsl jb out hlt rex.B adc int3 mov adc (bad) sub cmpl (bad) int xor (bad) add hlt rex.WB notb out int add (bad) (bad) push (bad) insl add rex.WB and cltd cld mov fld1 add cmpsl mov loope cmp sub repnz add (bad) lret movabs rex.WXB (bad) lock leaveq mov jmpq cld data16 xchg int sbb icebp leaveq xchg iret rcll sti retq and xor add xorl jne pop pushfq add mov adc icebp adcl (bad) test xor enterq mov mov shr sbb xor movabs cmp sbb jg clc cmp imul push test rex.WX xchg push stc icebp leaveq mov icebp xchg idiv (bad) repz or sbb jno int int3 fdivs (bad) pushfq icebp mov add jno (bad) push mov enterq jae xor add sbb xchg push sbb movsl adc (bad) adc enterq rex.B je in movabs mov jp sub push pop sbb (bad) xor or or rex.WRB jne mov xchg shr mov out loope jno (bad) lock divl (bad) loope mov in cwtl cld mov icebp notb add xchg sbb iret xchg fdivrp xchg xor std and movsl test mov (bad) (bad) mov xchg jne loope jrcxz hlt fdiv iret leaveq std mov pop xchg test lret rex.R enterq jge pop push xchg (bad) cmp mov xchg sub push lret je test jmpq xchg andl (bad) xchg jl (bad) hlt iret cltd (bad) xchg in lret xchg xor mov cld or xor cwtl movabs xchg movsb xchg push (bad) (bad) movsl in mov mov rex.WR idiv mov jge cld out fsub add rcl ror int3 xor add push int3 vshufpd or stos (bad) xchg icebp nop std (bad) push and mov jae xor test int int3 pushq (bad) stc sbb cmpsl pop pushfq sbb movsl icebp add xor stc cld repz adc cli test iret jae ror and xor (bad) rex.WB sbb mov retq xor sbb push (bad) sbb loope mov xchg mov (bad) mov imul and mov xchg cli shll rex.WXB (bad) jmp jae int xchg xchg lret in mov add (bad) xchg and cli add xor mov mov test (bad) lods lods push mov test rclb fisubrl loop rex.WRB (bad) clc (bad) jno icebp (bad) adc push test movsl int3 mov (bad) rcll movsl mov xchg rex.WRB (bad) movsl rol movsq rex.WR (bad) (bad) repz test (bad) jge mov jnp (bad) (bad) int3 jno rex.WXB xor movslq in (bad) sbb jl and decb (bad) cwtl leaveq mov icebp jmpq in (bad) sbb xor leaveq mov xchg cltd rex.XB sbb test std rex.WB (bad) sti sar and cmc add test push jmpq jns or (bad) push add rex.B (bad) rex.RX movsb out cmc or sbb out xchg movslq or in leaveq adc (bad) sbb or sub rex.WB (bad) int repz callq (bad) adc (bad) lret mov in add fsubl xor clc test mov mov rex.WB je xor div cli movabs rorl adc xchg (bad) int3 (bad) (bad) mov cld in lret sti (bad) sbb hlt cld xchg mov movsl inc mov mov pop fist jmpq (bad) xchg mov (bad) int (bad) adc movsl int3 mov in xchg mov mov jno adc in loop movsb mov rex.WX xlat leaveq jrcxz int (bad) mov mov loope (bad) (bad) int3 icebp jmpq jae pop sbb cmpsb std and repz pop or fldenv push int3 hlt test mov int movabs (bad) repz push jge (bad) pushq add rex.WXB rex.WRXB test jge hlt scas stc mov or popfq jns fdivrs enterq mov xchg push and lea mov icebp leaveq addl adc cmp mov in fsts int cmc sbb popfq rex.WXB xchg int3 push sub movslq cmc rex.XB out in xchg xor movslq rex.WRB loope enterq cmc cmc (bad) (bad) and movslq xchg push pushq enterq (bad) cmp gs std lret pushfq cmp pop pop mov in mov and xor (bad) insb (bad) vpsubusb lret pushq and sbb shl fwait repnz mov std cmc jb fnstenv int3 (bad) movsl leaveq je lret cmc add (bad) int3 insl adc or xchg adc add mov add (bad) mov outsl xor movabs (bad) mov xor cltd movabs sbb (bad) (bad) jmpq xchg or xor std rex.WR leaveq rex.WRXB lods xchg (bad) and loope loope sbb mov pushfq or lret repz add int push rorb xchg adc lea int3 leaveq fcmove adc (bad) int in int3 (bad) sbb mov repnz xorl or mov lea mov callq mov mov rorl rex.R imul leaveq jne test mov stc (bad) scas (bad) mov xchg lret adc sub cmp lods mov stc (bad) (bad) (bad) rex.WB pop pop rex.WRX xor cmp xchg add loope movabs cmc mov imul add add (bad) (bad) repnz xor add push leaveq repz adc loope rex.RX mul adc xor add fldlg2 xchg sbb xchg fcmove (bad) rex.RXB jge cli xor loope movsl mov in (bad) idivl rex.RB rex.XB mov movabs movslq in fxch mov (bad) movsl adc popfq sub outsl std mov rex.WRXB mov xor (bad) xor adc out imul (bad) repz pop rex.RB movabs sbb xor cmp jno xor and rcrl cmp leaveq pop (bad) sti test sbb mov xchg jbe cmc adc subl jae xor int3 repz (bad) jno cmp rex cmp roll in or adc mov sub movsl clc leaveq loope cmc (bad) iret fcompl jno (bad) (bad) sti int3 xchg fistl push or scas int3 xchg push mov xor xor sub push repz ss xor pop sbb (bad) sub (bad) ffreep jbe (bad) (bad) and int3 xlat repz lock repnz push mov and ror (bad) and cmc pop icebp mov es xchg int3 in xchg stc or icebp xchg (bad) or outsb adc out lret in std adc test int (bad) jg adcb jmpq xchg movsl (bad) int sub callq or rcl out decl int3 or iret lea adc in fsubrl sub jg cmp movsl int (bad) std (bad) (bad) int leaveq pushq adc cltd icebp cs subl popfq int gs or popfq xchg int3 repz and int int3 mov mov adc mov rex.B rol rex.RB mov push (bad) int int3 jne test sbb ja jmp cmc in callq in sbb or mov rex.RXB popfq and (bad) and adc (bad) push xchg and loope out rex.B push in sbb xchg xchg pushq push (bad) repz xor rex.XB test icebp fstl cmp (bad) sti cmp (bad) mov xchg rex.RX rex.R jg movabs (bad) callq shrl iret popfq jmpq movabs leaveq add int3 jns (bad) jne rex.R fnsave rex.RB sub rex.RB and leaveq xor popfq hlt icebp adc vsqrtsd jg fs jne (bad) cltd jno fildll xchg in push leaveq test push rex.RX sub mov loope movsb int3 test int js mov rex.WB mov test mov xchg (bad) pushfq subl int3 jns xchg sar (bad) (bad) (bad) test icebp cmp or jle mov lret (bad) add jns int3 pop rex.WRXB sbb lret int3 std retq jrcxz mov stc xor rex.WB int3 xchg lret mov divb leaveq add icebp jne cld rex.WB mov cltd (bad) or (bad) (bad) imul cwtl rex.XB add or adc retq (bad) mov mov adc pop cld insl int mov int3 fld movsl rex.WB sbb vpmullw (bad) jae (bad) std test adc iret mov (bad) pop rex.WX rex.R or xchg movsb or xor repz mov lea movabs xchg int3 test pushq fs mov xor xchg movsl roll cltd add out (bad) mov movsl (bad) add jne (bad) and mov js loope (bad) (bad) je jmp rex.WRB int (bad) mov repz rex.B mov fsts int3 fcmovu (bad) lods add xchg xchg cmc and int jmpq add and rex.R repnz loope sub or cmc pushfq mov add enterq (bad) movsl add mov rex.WRB mov int3 pushq jno xor (bad) xlat push xchg lock popfq sbb and add pop sbb fyl2x push sub lods cmp pop cmpsl or cmc movsb sbb in jns fs cli pop add xor jge rcrb (bad) retq xchg lcall xchg mov repz repz push int (bad) xchg rex.WR mov (bad) mov test ror stc fsts adc (bad) movsl mov test jge int3 lock (bad) mov lock (bad) fisttpll frstor notb mov pop test leaveq rex.WXB add sbb mov sar and xor fwait sti push imul adc push fs and adcb lret mov sbb (bad) lret xor or or cmp nop int int3 xor icebp fild movslq (bad) in loope mov lods mov int (bad) hlt int3 rorb jmpq mov jmpq rex.WB jno (bad) jae cltd and retq adc add test jge iret rex.WR repz push cmc and scas pop addl cmpsb xor gs mov repz leaveq jae inc fucomp mov push jae in test (bad) cltd ss jne cs hlt int3 and push sbb mov cmp fdivr lret hlt (bad) cmp std xor adc xchg cmc (bad) ror xchg pop jmpq hlt imul loope sar lret cwtl notl xor rex.X movabs gs movabs jmp pop rex.WB jmp stc je lock mov mov in in sahf (bad) adc leaveq test movl jge mov and sbb movsl mov ja lods cmc cmpsl in rolb int3 lods cmc cld mov imul mov leaveq xchg mov (bad) lea scas imul idiv rex.R lahf out rex.WB mov divb insb sub repz nop shlb in cld cli adc jne xchg std lret leaveq icebp (bad) push mov rex.X and (bad) xor imul loope (bad) std cmp imul (bad) (bad) sbb int3 (bad) lret (bad) int out int3 rex.WB out out mov or jae and add mov mov pushq icebp leaveq movsl rex.R rex.WR fxch or iret xor int3 (bad) (bad) out adc loope mov (bad) ja mov jrcxz jge fwait xchg cmpsb xchg int3 mov imul popfq std (bad) sub jmpq test jnp pop mov int int3 adc fs jns push pop mov cmc (bad) shll hlt rcrb movsl shl in test cmc std cmp leaveq xor xchg cltd stc jno addl (bad) int jmpq cmc sub xchg pop leaveq push lods stc test xor sbb test cld xchg jmpq and lods mov mov test add shl and xor (bad) push or test mov outsb push rex.RXB es xchg sbb movabs test insl cltd adc rex.RB (bad) outsl mov and (bad) fmuls gs rex.W or imul (bad) ss add stc (bad) cld (bad) pop jns out in add in rclb rex.WRXB icebp mov jns stc sahf pushfq popfq iret stc mov movabs (bad) gs mov xor xor int push test rex.X addb xorl enterq rex.WRB jno jno (bad) hlt fnstenv mov outsb (bad) hlt nop stc (bad) icebp idiv cmp loope cld in sub kandw mov popfq retq mov lahf (bad) sar movabs int int3 (bad) (bad) xchg test out and add movsq (bad) popfq cltd cld mov add pushfq popfq mov mov rorb (bad) adc or jp data16 jne lods mov pop mov test test and out cmp addl rorl cld in (bad) int3 leaveq in leaveq mov rclb insl icebp push rex.WRXB pushfq and mov rex.RB repz roll rex.W ror push mov and mov sbb (bad) int (bad) int3 jmpq cmc cmc push vpsrlq (bad) or (bad) adc jno sbbl icebp je add push lock in subl rex.WXB xchg fmul popfq push (bad) icebp (bad) jmp (bad) out repz push xchg xchg mov mov mov xchg rex.B hlt or int push rex.X imul cmpsl in int push mov rex.WR repnz (bad) cld popfq rex.B out push pushfq and mov xchg (bad) mov (bad) cmp mov cmpl scas mov push movabs jbe callq add (bad) xchg leaveq out movsl sbb jrcxz sbb add adc test flds movsb int stc out (bad) stc mov mov push mov in stos test mov rex.WRX jbe stc (bad) (bad) pop rex.RB or fmull idivb adc loope vunpckhps leaveq cmc add int cmp fsub icebp mov icebp push (bad) (bad) movsl xor mov rex.B in sbb cmp or cld leaveq icebp repnz fwait in cltd jno pop leaveq pushq in xor and movabs mov stc lret rex.RX or mov stos pop in mov movsb andl or retq je jrcxz test mov fstpl xchg push icebp nop std rex.W imul jp jns insb (bad) out in (bad) xchg xor pop xchg mov xchg stc int stos int3 loope icebp rex.R jne int andl sbb stc jl js popfq gs popfq movabs lret sub mov iret cld lahf rol lock (bad) jmpq leaveq xchg adc (bad) imul movsl sub and sub mov lea cli stc lock push sti cmp jge retq xor leaveq lret addl int3 (bad) int addl fwait rex.WRXB jbe mov xchg cmc push vmovq push mov movsl jne movsl rex.RXB jmp sub pop jb xor sub rex.WR mov iret (bad) jmpq xchg adc add pop in rex.RB sub test pop mov xchg adc jo icebp shr (bad) xchg (bad) hlt (bad) callq mov iret add add lods cmc scas loope push enterq cmpsl cmp sbb sub iret xchg int3 pop in mov imul or (bad) sti cld xchg movslq cmpsb jb fucompp popfq loope adc cmpsb ja cwtl add rex.RXB loope sub int3 cmc push mov mov in add (bad) mov out or out cli push xor xchg (bad) rex.RXB lret pop add addl (bad) std add icebp xchg pop sbb ljmp (bad) (bad) repz or (bad) out adc xchg add push lea pop outsl in pushq mov icebp nop xor xor push (bad) rex.RB repz or xor jns pushfq rex.B pop mov (bad) in xchg ja push push fnstcw push add and mov bswap (bad) lahf lock sub test or clc (bad) popfq add test jge enterq sbb (bad) in pushfq lock jg orl xchg in sti cmc sub lods mov and xor (bad) (bad) in or mov xorl jno (bad) and out (bad) or movabs (bad) (bad) (bad) cld cmc (bad) and sub callq out out test push lods and adc add cltd mov icebp out je or and xchg int3 leaveq and out xor cmpl mul mov xor mov std out test add push mov and xchg pop mov test loopne fidivl and or insl cmp lods xor (bad) in int pop int3 icebp cli xor test adc xchg int3 xchg jmpq sub loope jne stos test pop in and shlb jns pop (bad) movsl pop (bad) jrcxz pop leaveq sbb xlat lods and out push mov mov rex.B rex.WB cltd js insl scas add stos leaveq std lods loope movabs out (bad) leaveq lods rcrl sub cmc imul lahf lock stos int stos out xor and rex.XB leaveq and leaveq loopne leaveq rex.B imul mov scas jl mov popfq cmpl xchg movabs (bad) cltd movsl add (bad) loop (bad) sbb and xchg xchg insb lods xchg xchg test leaveq xchg cmpsb std or icebp in pushfq cmp jb icebp ja loope (bad) stc (bad) xchg (bad) icebp je add and movsl mov jns xchg hlt lock mov rex.WXB icebp movsl sbb cltd gs sbb std xchg lods or imull sahf (bad) sbb mov ljmp cltd cmc (bad) icebp or and rex.B sti stc scas (bad) stc rex.XB addr32 mov mov in push cld xchg add fs xchg (bad) (bad) or repz loope jg rex.RB fmul js es xchg rex.WR (bad) pop rex.RXB xchg and sti mov push (bad) out xchg out leaveq clc sbb ficomp jno mov mov int int3 (bad) push lret lret movsl movabs xor (bad) movsb rex.B cld (bad) pushfq movsl push mov test mov (bad) cmp icebp mov repz push addb jle (bad) ja in rex.WB (bad) (bad) xor fsubp xchg addr32 or mov jns add and sbb sbb add iret push jrcxz mov add lea rex.WRXB pop movsl out mov push jbe xor (bad) movb movabs jge sub std scas (bad) cmc rex.WB std (bad) push mov mov rcrl gs in mov icebp repz push int add push rex.WRB jno leaveq jo xor jmpq adc fdiv pop jmp mov hlt pop sbb pop leaveq outsl xchg (bad) add in (bad) cmc adc incb mov fcmove lods add mov int mov mov test jrcxz repnz xchg pop (bad) movabs mov icebp stc sub cld (bad) movabs loopne ja jno jb (bad) sbb xchg lock lea outsb mov iret std pop movabs push mov or movabs or hlt adc add jb repz xchg and pop and popfq xor pop (bad) js int jmp sub mov addl cmp rex.WB rex.B sar (bad) rex.XB cltd test movabs lea mov vpsrad int cli int3 movabs movsl stc popfq cltd cld mov adc mov adc xchg jns loop xchg in xchg (bad) leaveq (bad) movabs mov mov movsb rex.R shr (bad) pushfq movslq leaveq loope mov mov jmp in push jne mov mov int3 mov insl xor rex.WRX xchg loope cmp clc rorl adc cld in vpcmpeqd (bad) rex.WRXB add int3 rex.RB push repz lock (bad) pop sub test hlt add (bad) mov and rex.B lahf jbe callq cmc rex.RXB or pop sub sahf cmpl (bad) int int3 (bad) std jp in and or (bad) mov popfq xor lret add add pop xor sbb stc pop in in add in mov adc sbb out and cltd sub and vsqrtpd sub popfq int3 cld jmpq (bad) stc sub xchg mov or sbb rex.WRX pop mov mov icebp out rex.WRB cwtl jae xchg xchg mov rex.RB adc xchg adc out or or icebp or in rex.WR jmpq and rex.B cmc and out cmp imul lret icebp movabs adc movsl clc fdiv int3 xor sub xor cltd push pushq push cmp movsl (bad) test rex.RX push mov xor cmc repz mov jb fsubp loope add xor add xchg xchg xor mov (bad) repz push push xchg in push and int3 pop or orl movabs (bad) adc div leaveq xchg repz sar and xor cli add (bad) (bad) xchg jge adc imulb int int3 mov jmpq subl rex.B xor in cmp xchg int3 or stos xor mov rex.RX leaveq sub xor stos movabs add jmpq sbb jb (bad) push add loope std loope (bad) sbb (bad) fisubrl rex.X jg int3 movsl callq ss (bad) callq cmc mov mov push cld stos xchg or cmc mov xchg mov (bad) pop imul jmp jno mov fucomip int3 (bad) jno int int sub mov or jmpq callq ss xor or icebp adc out push (bad) int popfq in out (bad) loope int mov stc jne or popfq pop cld idivl mov mov repz sti ds push lahf jmpq pop jmpq jne movsl scas icebp test adc movabs cld in out cmp andl movabs in cli stc mov stc movabs jrcxz cmc xchg cmp icebp icebp xchg popfq decl adc repz stos xchg rex.R je xor and bnd jg cmc cmp or and icebp xchg mov cmpsl je in mov movabs add sti cmpsl (bad) roll stc adc stc and icebp push std int rorl jrcxz int imul repz lret rex.WXB sub or rex.WR loope cs cmpsl in iret sub cli icebp cmp (bad) imull rex.WR and mov sahf icebp out mov rex.WR cmpsb and xor rex.B subl add and mov shlb mov (bad) pop (bad) sub cli (bad) mov pop (bad) rex.WRB leaveq push and movslq (bad) je xchg and add xchg rex.WXB and insl retq add jno (bad) sub cmp mov lods lods and stc rex.XB rex jmpq loope rex.B sbb pop (bad) mov pop in in movabs and pop (bad) gs in cltd and xchg test std or rex.WB and jmp xchg xchg (bad) and in adc lea mov add std (bad) cmpsb lret pushfq or movslq jrcxz callq movabs add rex.RB (bad) cmpsb and movsb rex.WR (bad) push sbb lods push mov test push push gs iret xchg pushq jrcxz test (bad) rex.RX xchg or jge push sbb adc (bad) rex.B fs sub popfq rex.WRX fnstsw or xchg ja movsl or hlt xchg jno cltd (bad) add int3 pop popfq (bad) xor popfq in xorl adc callq (bad) int int3 callq jb rex.WXB leaveq cltd pop push or and fwait stos add in sub (bad) loop add pop cmc and int mov jno jge jnp leaveq test insl cli mov xor xchg xchg insb xor callq cmc pop icebp add in xorl and and fidiv sbb jmpq (bad) xor cld int3 in lock (bad) jae add jno insl push pop in xchg cli loope cld std (bad) out divl rex.B sub scas pushq pop mov (bad) in gs je es push xchg sbb or (bad) (bad) (bad) jmpq movsl rex.RX xchg imul jl (bad) in xor sahf jmpq jg popfq xchg idivb xchg (bad) sbb (bad) xor rex.WR mov push sarl rex.WR mov int (bad) in leaveq popfq icebp (bad) int movsl int3 jmpq hlt jmp clc mov cltd pushq out (bad) (bad) xor mulb leaveq ja test hlt (bad) int3 jne mov sbb (bad) callq (bad) leaveq push out movsl sub sti mov mov scas or xor icebp mov xor in ja or lret xchg repnz jno (bad) rex.WXB add fs je mov icebp orb hlt (bad) (bad) rex.RB out fstpl cs xor jge mov mov adc (bad) gs pop cmp mov icebp out rex.WB idivb (bad) cmp and leaveq lret pop movsl xlat leaveq movslq (bad) int fidivrl loope and int cmc imul ror lret push add xchg test (bad) sar jno out ror add roll rex.WR pushq rex.W insb loopel hlt mov jbe and mov (bad) icebp sti (bad) ss lea cmp in sub in test adc sti (bad) xchg add xor jno hlt loope mov adc addr32 in jmpq (bad) or not xor add jno (bad) sbb mov mov je mov sub movslq and xchg rcll insb xchg rcrb mov loopne and or icebp incb and mov xchg push cmc add cld add mov repz xchg notl (bad) push in adc movabs xchg rex.WRX lret scas mov sbb enterq iret cmc mov (bad) cmc in mov xchg shrb rorl pushq gs rex.RB data16 xor and negb mov imul sub add loope movslq movabs mov callq in mov je hlt push rex.XB xchg pop int int3 in cwtl loope bnd jp gs sub loop xchg mov push or repz mov (bad) xchg or xchg hlt add sbb and fsub jns hlt adc fisttpll pop cmpsb jne add in pop xchg xchg xchg pushq stc callq (bad) cltd iret test jno push movsb adc out sbb icebp hlt in xchg mov xchg lea rex.WB and cmp jl mov roll in cmpsl addl out callq and lcall xchg test cwtl in popfq adc cld test imul (bad) movsl mov ds (bad) imul out and rol xchg push sahf rex.B movsl fwait and mov repz mul rex.WRX xchg rex.RB jae xchg (bad) or stc rex.XB cmp ficom jbe rex.RXB xor or cld int vpmullw xor rorl sub (bad) insl jrcxz mov stc mov jmpq mulb push sub mov cmp rcll movabs icebp sbb cltd popfq andl add (bad) stc cld rex.WRXB out jno lods rex.W xor in insl push xorl std pushfq push loope xor cld pushq test lock (bad) pop cmp decb (bad) mov xchg mov enterq jl nop add in movabs rex.B icebp mov jbe fs je pop rex.WB repnz in cld sahf rex.B mov out test sbb je ss xor stc (bad) outsl rex.WB leaveq jrcxz in push lea mov xchg icebp (bad) (bad) xchg or icebp rex.XB rex.WXB add rex.WB push mov movsl mov (bad) mov shr push mov xchg test and xchg or movabs pop mov ss xorl test push loope xchg (bad) lret callq addl add (bad) add push or xchg xchg jrcxz add add icebp out push hlt rex.WR pop pop jbe cmc add or icebp test xchg loope jl fdivr (bad) mov icebp popfq testb jp outsb push add add push imul (bad) (bad) stc add test imul adc andl rex.RB push mov mov jbe stos push push xchg jo pushfq je mov (bad) icebp xrelease std sahf jb hlt jbe (bad) loope xor xchg icebp test sub lahf xchg lea mov fs jae pop sbb xor popfq push mov movsl jno loope out movslq fcompl adc mov icebp je jrcxz out sbb or sbb pop add xchg (bad) rex.WB adc (bad) rex.WB or xchg xor (bad) repz test rex.WXB add adc add jne adc rex.W adc in xchg sub adc xchg addl adc pushq stc xchg (bad) js pop cwtl xchg and and int icebp fmul loope and outsl in xchg add jg jb cmc in test test or jns outsl xchg (bad) jrcxz cmpsl jl push std pop rex.WRXB mov roll out xchg clc loope xor and xor (bad) stos mov push out sbb mov pushfq adc vmovd stc pop (bad) stc rex.RX addr32 test (bad) rex.WB fwait orb (bad) movsl rex.RX add pop adc and adc int fwait in adc jp mov and std std adc (bad) cmc push jmpq jmp hlt cmp lahf xchg xchg callq adc je and (bad) pop xor rex.RB jns sbb (bad) out in rex.RXB je or roll cmp loope xchg and shll and loope addr32 test add pop out (bad) mov rex.WXB add gs jg xchg xchg out rex.XB in rex.RB jns mov mov lea (bad) movslq mov adc mov movabs mov (bad) cld loope callq rex.R mulb cmp pop jns rex.RX push out cmp and rex.WRX jno xor adc mov rex.RB rex.R gs jmpq in push add xchg sar jrcxz sarb mov rex.R lods push mov rex.WR adc test jno pop hlt mov in popfq (bad) push rex.RXB xchg sbb leaveq stos es add mov gs fs pop add pop sbb repz (bad) adc data16 leaveq xchg adc xor out jmpq hlt adc rex.WR cld addb xchg (bad) xchg xchg jmp jne movslq mov mov mov je jne cld (bad) push in movsl or jrcxz jge (bad) mov and movabs test leaveq mov rex.WRXB (bad) (bad) (bad) cmp jb or xchg in and repz cmpsb lea jmpq cmp (bad) loope hlt je xchg jb hlt js rex.WB mov hlt movabs xor jbe push int jmpq sub (bad) sub and int3 je xlat movslq in popfq lret (bad) mov callq mov xchg (bad) (bad) jl and jg test stc rex.WRB leaveq (bad) rex.WB cmp (bad) es movsl rex.WB imulb xchg or lea jns retq lods xchg sarl notb and sub out jl adc jne cltd cmc int sbb pop movabs (bad) and (bad) sub movabs and jge add idivl mov callq movabs cmc cld cld jrcxz fs add pushq (bad) jge orl mov (bad) rorb mov enterq push rex.B mov insl (bad) push fnop add xchg addl imul test xor movabs pushq movsl movabs push retq or pushq rex.WB mul lret xlat lods rex.RXB (bad) or mov int int3 (bad) icebp mov int cmc sub cltd fsts rex.R xor rex.R jne mov fs sub (bad) cmp rex.WRB add cmc sti sbb std rex.R cmp push int3 or test loope loop orl mov cld rex.WB or je andl icebp mov rex.WXB retq mov mov jp icebp rcr xchg (bad) lods push in mov pop in or push pushq loop movabs mov jmp icebp stc (bad) sbb jb (bad) mov cmp jno and mov addl rex.B out icebp mov jne movabs sub roll mov sbb fs fistpll ss xchg adc or js insb mov test (bad) retq mov imul test lods cmp (bad) shll inc (bad) mov xor xchg xchg (bad) xchg pushfq cli jns gs lret push insl lret pushq pop adc (bad) mov retq add and callq rex.WX sub rorl mov stc jmp jp xchg (bad) rcrl mov pop (bad) rol sub jge mov sarb cmc rol popfq xchg int add rolb (bad) je icebp sub rcrl pop (bad) and shll (bad) adc movabs cmp ja sbb test rcll (bad) jne outsb mov rex.WRXB loopne es sbbq outsl (bad) test add cli rcll incb sbb sbb xchg rex.X int cmp out cmpl rex.WRXB rex.RB jmp lahf je add pushfq rex.RXB stos rex.WRXB or and stc and or or lods push mov lahf std jmp mov out js cmp (bad) leaveq movsl sbb std scas rex.WRXB or and stc and xor sbb jne push push movsl cltd (bad) mov test mov add mov leaveq je add lret jne stos xor sbb rex.WRB je or pushfq sti add cltd rol rex.WRB out je or jmpq clc retq (bad) and mov (bad) rex.WRXB add pushfq sbb movslq jno pop je or pushfq std std retq rex.WRXB test xchg out je or push push cmpsl pushfq mov xchg out je add pushfq (bad) std xor (bad) out je or (bad) and mov xor add imul and mov lahf rex.WRXB sbb icebp (bad) (bad) mov or movslq movsl std mov xchg je or and mov rex.WRXB out mov jge leaveq rex.RXB push rex.WRXB or and rex.RB (bad) mov (bad) sbb jnp rex.WRB push pushfq stos std mov mov or sub push xor jl add jge stos out je or pushfq in icebp rex.WRXB cmpsl hlt (bad) or and (bad) std rex.WRB rex.WRXB or cltd (bad) insl add lods pushfq mov sub clc stos repz out movsl cmc xor insl push out add out mov cmc fcmovne add and callq jns leaveq rex.RXB lea in repnz mov mov addr32 mov xorl mov rex.XB leaveq std roll xor mov or pushfq movslq rorb leaveq out je or pushfq jns imul out jne leaveq or stc movabs pushq (bad) leaveq cltd pop (bad) retq out icebp xchg cwtl mov jl adc jmpq jns fdiv (bad) cltd in xchg leaveq je add push jg mov lret jp or pop add leaveq or and (bad) rex.WRXB out je or and enterq mov or and lret std scas jle jne icebp cmp cmc mov pop and stc hlt leaveq movabs rolb shr scas shrb cmp mov cltd in std leaveq push cmp sarl jg mov movabs es (bad) mov (bad) shrl mov (bad) test add rorl mov int add rex.WRX repz (bad) idivb retq xchg adc leaveq or sub rclq scas or test sub (bad) std or or enterq test add shrl lods jg rex.WXB (bad) xor adc test je sarl mov xor mov (bad) repnz (bad) (bad) lret add mov mov (bad) (bad) and (bad) cmc jno gs insb std sbb mov add hlt mov (bad) rex.WX adc shll lods jrcxz rex.WXB (bad) (bad) push rex.XB imul and hlt lods and lea ror lods mov rcl (bad) scas bts (bad) xor mov mov (bad) std lret cld leaveq rcr rex.RX rex.XB rex.WXB out movabs pushfq enterq lret cld mov stos rorl (bad) mov shl pop pushfq out outsl cs pop stc push adc or pop (bad) in xlat lea add stos or (bad) pop clc add (bad) sbb in xor (bad) xor cli rcl jne (bad) hlt (bad) shl add rcrl cwtl stos (bad) mov (bad) fs rex.RXB (bad) ss ja (bad) xchg std rcrb add adc fnstenv (bad) (bad) scas stos cli push mov (bad) je outsl sbb cmpsl xchg xor xchg xor (bad) enterq leaveq movsb sub cmp rex.WRB cs movl leaveq scas (bad) rex.WR addr32 outsb out pop xor and jb push movabs int nop shrl rex.R rex.WRXB movabs mov icebp rex.R repz cmpsb outsl xor (bad) lret movsl or cltd in rex.WRXB xor push mov icebp jno (bad) pop std loop or (bad) add fisttpl cmpsb fild lahf (bad) (bad) mov xor add rex.RX xchg js rex.X loop imul push pop (bad) add or sbb sub (bad) stos mov jnp add sub xor or rcrl test fldcw pushq jge rex.RX jae ds hlt sub xor cmp xlat mov pop and lret xor mov add outsl cmpsl rex.WRB (bad) rex.XB ss shlb retq rex.WX std jmp (bad) (bad) insb and mov sbb loope push sarl movabs mov shrl hlt decl sub jbe xor sbb (bad) or jno out pop add rex.B and lea out nop adc and lea shr cmp pop mov repz shl pop xchg shrl fsub jge push pop xlat iret (bad) orl repnz rex.B jrcxz imul adc roll fldcw mov movabs or push imul jo mov std shrl out test shll rcr (bad) mov iret rex.W add xchg divl scas adc jmp (bad) cld mov xchg mov (bad) jns sbb (bad) cmp add out (bad) (bad) in int3 addr32 sarb jb (bad) (bad) jns xor mov xor xchg in adc sub xchg xlat (bad) lock shrl js rcrb (bad) push mov push jl roll rex.B jle pop (bad) shl sbb lahf mov pop cmp stc callq scas iret pop cmp gs (bad) jns and test cltd mov jg or iret test movsl (bad) lods xchg fcmovnu shll (bad) jbe (bad) in jns cmpl out je mov sub or add xchg and (bad) stos in rex.WRX cltd imul rol insl xor (bad) or std fnclex mov sub in (bad) std roll push mov mov imul (bad) rex.WRB rex.B mov jns out roll rcr sbb adc sub ss xor (bad) cmp rex.WB rol pop lods (bad) idivl or lret xor rorl jle pushfq sub rex.B mov pop rcll std mov cmpsb mov scas jg imul jne push and (bad) (bad) rex (bad) out leaveq cmp sub rex.XB add ror mov add xlat mov in add rcl movsl enterq rex.WRB cltd ror decb and push test sub xor (bad) lret or or fstpt rex.XB mov out shrl (bad) hlt mov xor repz and fidivr stos cmpsb movabs in (bad) sarq rcrl int scas mov fstpl stos rex.RX lock (bad) push clc add loopne or mov sub cltd rex.RX stos iret pop mov fsts adc leaveq mov fnstsw lods jmpq add pop mull rex.WRXB out mov test (bad) adc (bad) out retq stos rex.WRB push rcll (bad) imul pop mov cmp ds lea xchg push lret or (bad) add pushfq rcll xor gs iret lret jle jbe in (bad) sbb addl pop xchg rex.RB imul push cmpsb xor rorl and (bad) sbb jae cmc lods or lret add fiaddl movabs jb xchg adc sub clc pop rex.WRB xchg in (bad) sti cwtl mov ds pop sub jno iret cld (bad) shll js push rex.WR jge xor out movabs (bad) ds rcr test ror sbb js shlb test (bad) out (bad) fstpt cld (bad) (bad) jne xor repz mov retq mov stos stc (bad) adc cmp sub push int3 rex rex.WX roll pop sti xchg rex.WRB pop mov jnp (bad) jo roll rex.WRXB icebp sub cmp push (bad) cli xor icebp or add xor cwtl pushfq imul adcl adc rex.WRXB shrl xchg hlt (bad) mov jl icebp (bad) cltd stos pushfq or (bad) rex.WRB cmp addr32 js leaveq and rex.W pop enterq int3 rorl xor add (bad) jge rex.RB repnz pushq (bad) setnp decb int3 and (bad) add (bad) icebp fnsave movabs (bad) adc push push scas roll cmc pop sub (bad) iret jae and outsb in (bad) rex.RXB cmp adc pop inc es rex.WB and lret test enterq (bad) ss shrl (bad) roll pushq sarl sbb lea adc iret test jmp (bad) icebp jbe lahf pop (bad) iret rex.W sub nop repnz ss sysenter and stos cmp rex.RX sbb push rex.X (bad) mov xor sub pop xchg callq and shrl sub mov shr lret rex.RXB xchg test (bad) and add in movabs sbb mov movabs pushq test rex.B stc int3 mov cmp pushfq cs sbb cmp dec out retq mov adc stc adc mov adc mov lods mov pop std and mov and scas add int3 or mul cmp (bad) mov cmc and (bad) mov lret fldenv lods je repnz adc jle push or andl movabs in fildll jl shll (bad) xor jrcxz cmp (bad) fs fcmovu lods scas rex.WX loopne popfq mov sub (bad) jne shrb leaveq repz adc (bad) and fnstenv imul (bad) cmp cltd retq push rcll mov rorb push mov shll lea je (bad) sbb (bad) rex.WRX rorl fistpll xchg loop (bad) xor test jmp jp (bad) or push xor push jno (bad) (bad) rorl xor test movb in leaveq jg add xchg mov jrcxz in ja shl jmp (bad) xor test push sub movabs int xchg cli shrl mov jb (bad) push adcl jnp (bad) (bad) rex.X sarl test cltd push rex.WB rex.R rex.B xor fcmovb cld notb xor jo (bad) cmp js cld mov (bad) push enterq addr32 rex.WX mov rex.RXB push sub and cmp lahf addr32 rcr xchg test lea (bad) rex.WRX shll mov fcoml lret rex.WR rex.RXB movabs mov add push add fiadd xor (bad) xor lret fcmovnu mov pushq in rolb popfq and ss retq fcomps (bad) (bad) cmp lock rex.RX (bad) push mov or fs mov mov rcrl jb rcl fmuls or and jo loop sahf sub stos mov adc in (bad) rex.R and xlat icebp (bad) jae rex.B lods test sub (bad) sarl lock xlat lret mov or rolb loop fildl movl push and shrl pop sub or mov pop (bad) push jb cmp in (bad) movabs (bad) in rorl fbstp enterq mov mov jge xlat sub cmp (bad) and xor mov scas mov notl popfq pop cmp mov sub pop out imul cwtl jb (bad) out rcll cli sbb test stos mov (bad) repnz movabs retq jge enterq xchg jnp out xchg adc (bad) rcll (bad) add sub jrcxz xor sub rex.RXB push jg cmpl jg int3 fildl mov popfq cmpsl movabs sti pop test add test add xchg retq insb adc psrld repz adc add roll cli and in (bad) idivl std lods std mov lods addr32 shll (bad) sahf or (bad) rex.X mov fiadd roll (bad) shl subl pop (bad) out int3 retq pop (bad) sbb fwait test test rex.WRX adc retq out jrcxz pop andb xor lock and mov and jle (bad) rex.WXB ja pop and (bad) std (bad) rex.WR rex.R mov stos ja (bad) (bad) imul and (bad) mov out rorl and jle jl cmp (bad) pop mov rex.WXB (bad) jno stos push rcl (bad) adc or pmuludq (bad) sub dec lret rex.WRX jp js cltd rex.RX mov and cmp (bad) out fwait jge test shll fdivrs in pop int add loope lcall roll rorl add jmpq test pop lret xchg jle adc subl jmpq (bad) and outsl or loope mov adc pop (bad) iret add lahf popfq mov (bad) (bad) loopne fldl (bad) rex.WRX nop repnz stc lret add in (bad) (bad) cmp sar jrcxz lahf sbb (bad) mov push rcll test adc cmpsb xchg std rcll or std push jle shll roll mull and in orl pushq jne (bad) fildl out lahf jno sbb rex.WX sbb add jp push (bad) and push hlt cmp loopne insl rex.WRXB cmp rcll pop mov or cmp mov cmp scas addl pushq rex.R data16 rex.WX retq and add movabs (bad) jns jne addr32 enterq rex.WR movsl cmp or shr (bad) (bad) in cmp ds popfq sub push fnstsw rol sub sarl sub retq (bad) (bad) (bad) or test mov sarl or rcll (bad) xor gs rex.R out (bad) ds xchg jp ficompl shll (bad) stc xor in loop int sbb fistpl incb jg mov rcrl and rex.WRXB rex.WRB xchg adc rex.WXB jns adc jae sub shr movsl pushq sub lahf and in hlt sbb (bad) push (bad) movslq sbb adc adc lahf cwtl and pushfq jnp jmpq (bad) xor lea cmp popfq sbb (bad) (bad) data16 jno lret mov mov pushq mov xchg clc add mov pushfq neg (bad) movslq pushq mov icebp mov cmpsb lahf xor cmc jnp mov adc sbb scas sbb loop addl mov rex.RX cmp in sbb std jle pushfq rex.B nop loop je movb addr32 std clc rex.B cltd pop sarl jbe scas ja pop (bad) xor subl rex.WRXB rcrl and test cld rcrl xchg and rex.WRB stos mov cmpsl out imul rex.WRXB data16 insb jg mov sub (bad) or mov xor rorl sbb add (bad) int mov cmp mov xor jmp jb sarl or insl retq faddl rex.WR rex.B pop rex.RB repz add cmp (bad) xchg (bad) iret std mov mov rex.WR or adc sahf jno loopne out iret (bad) rex (bad) repz and cld rol fldt add jb (bad) hlt mov mov jnp sub jmpq cs stos sbb pop test insl add stc push lret cmp je fidivr fldpi push jns pop (bad) rcl (bad) movabs push cmp pushq and xor fdivr pop (bad) and xor scas mov ror sbb rex.WB rex.WX movabs (bad) cmpsb lret jno mov shr (bad) (bad) pop loopne or repz mov movabs lahf jp add rcll (bad) stos (bad) adc idivl fcmove add mov lret out sub imul cmp (bad) cmp scas mov stos (bad) imul adc orb mov mov (bad) cmp movabs mov imul cmp rex.WB sar or add rex.X rex.XB je cs jb mov movabs and outsl rcll mov icebp movabs in ffreep jle xor decl lahf std add (bad) pushq or int fdecstp and outsl rol repnz hlt stos sbb or add rex.WXB xor rex.WRX add std imul xchg negl rex.X jbe xor shll scas rex.W jae sbb lea (bad) notl jp enterq out test push (bad) xchg callq mov out (bad) rorl push in lret stos mov xor enterq lahf add xor addr32 and xorl rex.W and (bad) cs sbb retq test cmc movabs jbe gs shr add es (bad) push lret in or iret lods int ja and (bad) nop (bad) shll mov popfq pop mov rex rex.XB (bad) jne cmp xchg mov fildl pushfq lods lret nop xchg and (bad) icebp pop xchg fsts rex.WXB rex.WRX rex.WRB pushq jmpq lret mov (bad) jle or xor lock int3 (bad) loop movabs pop icebp int3 rex.WRB xchg (bad) jp rex.WX sbb sarl rex.WXB sahf and mov icebp (bad) fnstenv adc fcom rex.WRXB in adc rex.XB xchg repz retq lods pop mov xchg shll cmpsl fcmove push (bad) cmp rorl jrcxz shrl (bad) mov repz movabs or or xlat pushfq test (bad) cmc and mov rex.WRB rex.B (bad) fs mov jge out test push rol rex.WRXB mov in rex.WXB (bad) (bad) or (bad) mov rex.RX nop and or pop jmp retq jo lods fsubs fsts jne mov std rex.WR sbb sbb rex.WXB push add (bad) mov js movabs mov outsl roll iret cmpsl (bad) jb rex.WR rex.RX (bad) out mov (bad) jo cmp mov mov pop lods pushq movabs (bad) je pop test mov (bad) push mov rclb push roll (bad) repnz xor sysexit lret lret jnp (bad) mov test roll (bad) sbb mov rcll lea sbb mov mov (bad) xor mov xlat xchg in xchg shrl add pop lahf adc (bad) (bad) cmp xchg cld cmp adc ficom loop scas (bad) sub (bad) mov rclb iret sbbl jnp outsb or xlat add mov lahf pushq sarl int or pop out rex.R stos add lret jnp sbb pop icebp fs push sub adc (bad) sarl (bad) xor outsl rcrl test rcr rcl mov rex.WR shl add mov (bad) cmp lock lea lret xchg (bad) mov scas jmpq stc cmp jmpq movsbw movzwl jmpq sete add test ror mov clc test jmpq xchg mov int sub (bad) out mov pushq hlt jmpq loopne cwtl pop (bad) sub imul (bad) rex.WRB (bad) pop mov add loope scas (bad) (bad) orb imul or loop rex.RXB mov movabs xchg fcompl sub mov sbb std pushq rcrb (bad) and test rex.RB (bad) (bad) (bad) sti mov (bad) (bad) decb rex.XB ds add add or (bad) loop cmpsl rex.XB cvtps2pi and gs fwait cmp shlb cmc movsb and xchg rex.RB rex.WRX addr32 (bad) xchg mov enterq mov pop pushq (bad) mov rex.RXB jmpq ja jmpq jmpq jmpq jmpq jmpq bt rol cmc stc cmp not mov lea not pop jmpq (bad) sti lods pop (bad) jp (bad) (bad) jo pop add xchg push or in rorl std fcmovb cld (bad) jl movslq mov xor pop sbb xchg mov xlat adc adcb rex.RX (bad) ds or (bad) lahf je mov rex.WX scas ljmp add jnp mov or mov (bad) jbe movsl fadds imul adc jge mov (bad) xchg cltd test rex.WB mov scas (bad) gs test cmp sbb popfq int jle or (bad) (bad) (bad) std ja pop push mov or sub adc popfq or ja or pop cmp rex.W hlt mov movslq rcrb in mov (bad) stc cmp jmpq not bswap not lea pop mov not pop mov bswap pop lea movsbw bswap lea pop retq je movzbw mov jmpq jmpq cmp test jmpq (bad) xor scas std sbb in xchg rex.RX (bad) xchg rex.WRX rex.WXB (bad) sub mov rex.WRXB (bad) fsts jo mov and rex.WX stc mov (bad) mov cld rex.WRX pushfq sbb icebp push push or or popfq mov lret jnp stos adc movabs jo jmp sub jns lahf iret hlt xchg xchg js rex.R pushq (bad) or mov scas rex.RX (bad) (bad) (bad) sti movabs xor xlat or out xlat hlt pop pop (bad) stos push mov mov xchg rolb orl (bad) jp jnp mov (bad) jmpq (bad) mov insl mov sub (bad) mov xor rex.WB lea in lods xchg sbb xchg pop sti (bad) add div fdivr (bad) rex.WRXB loopne mov jge int3 pushfq push movsl hlt mov movslq test (bad) push push out push out xchg rcrb cs lcall (bad) in mov pop (bad) (bad) ljmp jae icebp add and adc mov fldl2e rex.WX (bad) rolb mov cltd movabs sahf sub rcll xor jno push (bad) (bad) and fsubrs idivb jns rex.X cld movslq (bad) stos xchg sti outsb mov shrl gs or mov scas adc pop (bad) movabs out sbb scas es and mov movabs in rex.B je,pt (bad) pop jmp add sti movabs hlt pop push cmp adc adc xor mov jl movabs push popfq mov jo add ja mov sub jl lods mov (bad) jg push sub (bad) jg test (bad) sub movzbw mov (bad) lock retq fmuls movl cmp cmc cmc test jmpq ja shr neg cmp shr sub neg adc stc add not or mov sub mov test repnz jmpq jmpq jmpq stos in mov mov pop or sub leaveq test rcl shll pop (bad) cmpl cltd sub pop fwait lods lret movabs and jg or stos adc or (bad) movabs (bad) and cmpl insl xchg add fdivp movabs lods or pop lods clc push rex.WXB int (bad) rep leaveq callw scas rex (bad) (bad) (bad) cld sbb (bad) (bad) (bad) stos sbb mov rex.X mov cmc (bad) adc test pop add add sub cmpsl add out imul jno rex.XB (bad) jno xor data16 rcrb jmp mov (bad) push xchg mov xor (bad) test mov mov (bad) testb sti mov rex.WRXB mov rex.XB rex.WB (bad) mov insl push test decb movslq rclb mov rex.WRB pop lods rex.RB movq mov stos (bad) cmp sub jl add xchg cmpsb int3 xchg fs add fidivl push fs push mov cmp nop sbb in movabs jg (bad) (bad) sti clc stc jbe add mov xor fsubp or lock rex.WRX cltd pop movslq (bad) (bad) sub xchg mov push std adc cmp and loopne xchg pushq (bad) xlat loope mov cld movsb xor scas xchg lret sbb test adc int out mov (bad) cmp jb cmp lret (bad) xor sub test rex.RXB push cmp lret (bad) add xchg cli outsb lret ljmp rex.WXB pop leaveq jbe sbb push adc pop xchg cltd rex.X xchg es enterq (bad) or jo movabs in (bad) (bad) repnz (bad) adc in jno mov cmp mov int jg jrcxz imul sbb jge sahf adc fsts add (bad) fdivl stos (bad) (bad) add rex.WXB sbb sub sub (bad) loope sub loop (bad) (bad) (bad) sti movabs xor jrcxz sbb xchg out fistl gs mov (bad) (bad) (bad) pushq mov sbb xchg xchg cmp outsb icebp cmpsl and (bad) movabs rex.W scas (bad) (bad) data16 pushq push or js addr32 icebp xchg xchg add (bad) test cmp sub clc clc bt stc cmp jmpq jne jmpq rex.RXB shr (bad) lock add pop cmp repz adc cmpsl adc lea or sub mov jb cmp mov sub rex.R (bad) xchg rex.WX nop add xchg fdivrs push lret add rex.R repnz jp adc mov (bad) leaveq mov (bad) rcrl retq dec (bad) retq sti add add xadd (bad) adc es cmp sub je mov (bad) (bad) cld pop xor (bad) out jmp adc (bad) pop addr32 cwtl cltd rclb add out cmp lods and pop cmp lods cs (bad) cmp repnz jmp shrl xchg movabs (bad) test adc jb fidivr xchg sbb loop (bad) and xchg and sbb mov xor std and and and jl cmp (bad) pop sub rex.WRB lahf add (bad) cmc mov mov fnop or adc mov push mov adc data16 out mov nop sbb lock mov push (bad) js shrb sbb (bad) jo and test or xchg (bad) (bad) (bad) sti mov (bad) (bad) decb (bad) movabs or cwtl rex.RXB pop icebp pushfq cli push cmp in fistl adcl loopne insl adc (bad) pop add mov punpckhbw mov data16 fcmovb bt imul stc bt cmc jmpq stc add jmpq jmpq cmp rex.RX rex.XB gs and mov leaveq movabs rex.WX stos std rex.B pop mov outsb push (bad) adc mov movabs mov (bad) repnz mov test lea test push cmp lret clc repz (bad) xchg sub retq (bad) sti sbb adcl (bad) (bad) std lods cmc divb lahf sub pop movabs movabs clc mov and rex.WR andl out mov rol jmpq sub pop cmp imul (bad) (bad) (bad) inc pushq fidivr jae (bad) fs out test rex.RX jb and (bad) adc and cmp mov shll movsb lea rex.WXB or rol mov pushq rex.WXB es in mov (bad) mov pushfq shrb sbb cmp (bad) icebp (bad) and stc je jge ds xor adc cs push rex.WXB sub fs out adc movslq repnz and and sub pop out out in int jp sub (bad) addr32 stos cs (bad) (bad) sti fwait (bad) test (bad) (bad) sub retq hlt xor addr32 fstps cmpsb rex.WB ja (bad) (bad) (bad) ljmp jno sub cmp roll xchg mov sbb retq (bad) sarl sbb xchg movabs stos mov icebp push and (bad) jmp jmpq jmpq je jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add lock fadds or pop cmp ds out mov (bad) int3 cltd (bad) fxtract cwtl enterq xchg int3 (bad) xchg rex.RX mov mov add (bad) (bad) pop (bad) fs (bad) shrb rorl adc rorl rex.WB test mov mov ja xchg cmp xchg (bad) (bad) int3 (bad) xchg int3 and clc insb (bad) cltd rex.RXB cmpsb (bad) (bad) (bad) cld xor xor (bad) (bad) (bad) inc negb fwait nop add insl sahf ficom jg add mov lahf xchg imul add jp sbb icebp movabs sbb (bad) ja movsl ds sub xchg mov (bad) jb mov roll stos add pop (bad) jae test movabs and mov rex.WRXB lea mov clc clc clc add stc bt cmp cmc mov test cmc bt test jmpq jmpq jne mov xor sub test mov and add clc sbb mov bt bt test jmpq jmpq rol stc cmp movzbw movzbl movzbw lea lea mov bswap pop jmpq fidiv (bad) (bad) int3 icebp cmp sub jp mov stos rex.RX (bad) mov xor rex.WRB jb,pn sub in rex.WRX fistp pop jrcxz adc add mov jb,pt cmp gs addl cmp fdivs or fisttpl xor insl mov shrb xor shl fcomps (bad) (bad) sti cltd (bad) (bad) repz (bad) (bad) (bad) sub (bad) adc push ss icebp push retq mov (bad) (bad) ljmp jns or mov imul (bad) push adc outsb rcrb hlt gs pop rex.R sub out rex.RB scas mov pop lret jno pop divb addr32 adc sbb mov shll push (bad) rex.WRX rex.WRB rcl sub pop pop xchg loopne add and rex.RXB mov (bad) xor sub add lea (bad) (bad) rex.RX jns movsl test rex.RXB mov jb lret clc add test out cmp pushq (bad) loop movabs (bad) (bad) out jg rol push rex.WX cs sahf repz (bad) (bad) cld and jnp (bad) (bad) (bad) (bad) mov lods jae clc (bad) jns xchg xor ss mov add mov mov mov adc cmp (bad) (bad) (bad) pop (bad) cmc sbb fdivrs adc hlt pop rex.B pop sbb out mov and xchg mov in (bad) mov insl cmp rex.WRB cs pop movsbw jmpq clc lret cmp movsb (bad) or (bad) (bad) adc iret (bad) rex.WRXB movsl imul mov mov cmp (bad) sbb add out fcmovnbe adc xchg (bad) (bad) lea movabs mov sarb scas test rex.RX sub jo rex.WRX cmpsb sbb icebp sahf add cmp cmp rex.WX pop fwait (bad) add lahf test cmp or or sahf xor mov add (bad) (bad) lcall rex.RX pop movabs (bad) loopne cmc pop (bad) jp xor data16 or sbb rex.WRX adc xchg cli movabs (bad) sbb (bad) mov outsb rex.RXB jmpq jne xchg shr mov dec bt lea sub not (bad) (bad) or mov mov clc bt cmc sub clc jmpq shlb pop adc and jmpq rex.WXB jle (bad) hlt xor (bad) insl jg scas and or (bad) jnp imul fsubl jl sbb or in test (bad) mov rcl adc mov (bad) loope xchg movabs rex.WR callq popfq or lahf jbe (bad) rex.WX (bad) (bad) cld js cmovne (bad) (bad) (bad) decl add add shl sbb shll rex.WRX rex.RX not cmpsl pop (bad) movabs rex.B jns inc xchg adc xchg (bad) xchg imul rex.RX mov (bad) push xchg mov add add pushq in rcrl hlt callq negb xchg xor jp movabs test outsb (bad) jbe mov (bad) stos mov or rcrb shr xchg fwait mov outsl rex.RX jbe callq jmpq cmc add test jno bt cmc or jmpq ja cmc imul clc cmp bt jmpq mov (bad) (bad) rolb cwtl cmpsl rex.WR in pop add jmp jrcxz add movabs loopne rex.B cmp outsb test loope xor rex.RX pop lods stos shlb pushq and or movslq pop rex.XB push stos imul add (bad) pop adc push cmp mov fdivs outsl or (bad) jg sub jge push xchg (bad) (bad) decb (bad) (bad) (bad) decl adc cmp outsb gs adc (bad) (bad) or jle (bad) push iret fnop movabs (bad) push mov adc or xchg movsb sarl cmp add ficoml cmc xor loopne (bad) rex.W jmp rex.B jp mov mov mov xor fbld (bad) fsubl jmpq adc and jg cmpsb lea test es push pop cmp (bad) and rclb rex.W adc sbb jo leaveq movzbw mov jmpq jne not bswap mov cmp cmp bt bt cmp jmpq bt pushq clc stc jmpq clc push ss rex.RB (bad) outsl (bad) push add rex.WRX sbb add and lret and sbb in mov or loop pop insl cmovge ss repz add or cmp pop sbb cld push sbb movabs xor (bad) leaveq icebp fwait mov (bad) (bad) mov (bad) rex.WRX gs sub es fldcw iret movslq sbb (bad) sti retq movabs lods mov (bad) add jae fisttp lods (bad) (bad) (bad) callq rclb add lahf test sbb xorl pushw and outsb or ja test and or (bad) insl fisttp mov (bad) gs sbb sub add movsl lret (bad) mov jb mov repnz jmpq jmpq pop jmpq jbe jb clc cmc stc cmp jmpq movb orb outsb and ja mov (bad) repz mov ja xor not or or (bad) scas fimull jg rex.RXB add movslq mov xor mov shr jb test jns and cmpsl scas rex.WR mov iret push insb rex.B push (bad) in jle int or rex.WRX push movabs mov mov fisubr xlat or je cmp push mov sub movsl incb xor data16 sarb adc sbb (bad) (bad) decb (bad) (bad) (bad) lcall fstpl lock cmp (bad) fimull loopne stos imul or fidivrl clc xorl lock repz fist xor mov cwtl cmp lret (bad) and test pushfq mov cs jb pushq (bad) jmpq cmc imul cmp cmp add jmpq bt jmpq jmpq jmpq mov cmp clc push clc neg stc and mov test cmc sub jmpq pushq jmpq or fdivs mov rex.WX (bad) std (bad) xchg jno sub in int jrcxz iret and adc xor out sub cltd lods add sbb xor adc add jbe adc xchg ljmp pop cmp rex.XB rex.XB rex.WR mov hlt rex.X push mov rorl and mov and rex.W (bad) (bad) test sti jl (bad) stos imul (bad) decb mov mov (bad) sub lea add mov hlt mov (bad) (bad) jb rex.RXB jno or jb adc (bad) push mov push cmc mov sbb es sbb or push pushfq mov jae add rorb rorl add callq clc shr mov cmc test jmpq push stos sbb jp jnp xlat or test test and stos sbb outsb (bad) push lock (bad) pop xor mov out rex.WRB ds jmpq lahf mov and imul adc mov jle mov rex.RX (bad) jg repnz (bad) ljmp (bad) pushq cmp (bad) add (bad) ja repnz push (bad) cmp pcmpeqw mov cmp mov pop stos nop (bad) (bad) (bad) cld jae mov (bad) incl (bad) mov rex.WX test stos sbb sub ja movabs in mov jno in (bad) scas or mov (bad) (bad) pushq push cmc mov mov movsl or js (bad) comiss ss adc cmc rex.R mov lret (bad) (bad) gs (bad) (bad) in mov jne mov add jmpq jne rcl movsbq mov shl inc sub sub inc shld jmpq add add add add mov add add jo add add add add add add add sbb push sbb rex sbb shrb add nop movabs add mov add nop movabs add add add add add add add add sbb js sbb xchg sbb movabs sbb (bad) sbb fbld rex.WB jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add xchg cwtl mov cwtl roll stos push xor loope xchg in cwtl movslq fmulp retq jne pushfq out retq xor pcmpeqd pop pop rclb mov std mov rex.B int3 rex.WB ja outsb movabs add rex.WRXB rex.WRXB jge rex.WRXB rex.RX lods push insl (bad) pop ffreep lret push adcl stos (bad) divb loope addl rorb cwtl or sub pop cwtl or in pop sbb sub mov shrl cmpsb rex.WX callq cmp xorl (bad) (bad) fistpll jne mov (bad) add (bad) sahf xor (bad) sub movabs testl and cmp mov xorl cld jns movslq addl shll js (bad) mov rex.XB add pop mov enterq movabs retq (bad) movabs movsl sti pop ja (bad) and sub fmul decq (bad) rdpmc ds cld rex.WXB in jbe addr32 xor loopne cmc out or sbb pop (bad) ja or ss rex.XB push loopne mov in test (bad) cltd cmp lods sub (bad) scas rex.WR jne popfq rcrl rex.RX rex outsl rclb adc cmpsb bnd mov fsts cmp xorl lods stos movabs xlat (bad) jle add cwtl rex.R out xor pop fbld mov rex.WB outsl movsl mov sbb xchg xor add cli (bad) push pop movabs notl mov int jmpq push wbinvd mov loop leaveq in lock insb imul popfq sub rex.WX rex.R rex.RXB repnz (bad) xchg push mov sub (bad) lea pop cli mov movsl lea ss sbb repnz jne sbb xchg jnp out (bad) mov jb mov (bad) or rex.X insl rex.RX ja outsl (bad) icebp lret repnz rorb jge lods (bad) lea addr32 incb addr32 repz (bad) rex.W sbb or cmp push sub adc jno or es adc push sub movabs (bad) cmpb movslq fnop sbb rex.W repz repz std (bad) data16 or sti fnstsw pop (bad) sub stos jmp mov ss mov mov leaveq and mov cmp (bad) sbb xor (bad) nop adc sahf mov (bad) pop icebp rex.WRX cmp xchg sub jl popfq std rcrl (bad) mov (bad) iret jmpq lret adc rex.W pop movabs lods std (bad) sbb ss adc mov gs movsb (bad) movslq mov (bad) push js and (bad) scas jb mov fildl jae sub xchg (bad) movabs (bad) cmpb add mov mov mov movabs or (bad) (bad) sbb push mov mov pop cmp mov nop or cmc xchg xchg rex.WXB imul mov insl rex.XB mov rex fidivrl movsb jg stc lock (bad) outsb fs mov rorb (bad) imul jns in mov fstpl adc movabs xchg push movabs callq movsl (bad) jle adc xor fwait sub movabs jno mov in es mov xchg push sub (bad) adc or cwtl loop mov mov shrb (bad) stc callq mov jbe mov insl out jnp retq cltd adc push lret and scas lret (bad) (bad) and cld ja adc cmp sub cmpsb in or jg xchg mov push out xchg add jg mov fsubl xchg mov jmpq (bad) mov jle imul gs and loope xchg movsb sbb in jnp push iret andl (bad) div jbe sub test adc je mov rex.WX (bad) sarb leaveq sti jle xor mov (bad) int3 in xorb mov pushq add jle seta movabs (bad) test lock repz ss mov hlt push mov (bad) sub jmp insl sub push and add sbb xchg (bad) add outsl rex.WRB rex.W xor jmpq cmp mov sub callq scas mov or (bad) mov jg (bad) jl out scas and (bad) cld (bad) rex.RX (bad) (bad) rorb sbb rex.XB (bad) or mov or jnp mov add push loopne out rex.RXB fildl lret sahf xchg or movsl (bad) sub mov lods mov and jge mov cmpl and sbb out fdivrl pop sti sbb pushfq xlat test retq movsb adc and mov lods add mov push rolb in in pop xchg (bad) fidivr rolb (bad) pop rex.RB rex.WB int3 cli ds pop out xlat (bad) rex cmp jle mov movabs pushq jp xchg mov scas pop xchg xor js,pt fs and movslq sbb fadd adc cmp add out test sbb mov and rex.RXB mov (bad) jb fwait lret mov and mov stos mov sbb mov rex.WB add rex.WR jns pop and (bad) xchg (bad) fstpt fild movsl rex.WR mov cmp mov sbb push rex.WRX add lock jb pushq cwtl pushq int3 movsq jo in xor pop in cmpsb out leaveq sbb and imul data16 shlb rex.WX ficomp (bad) je hlt ja xchg fcmovnbe rex.WRXB (bad) pop xor pop xchg rex.WR in add push xor and sbb add mov std lret mov (bad) shr pushfq callq frstor add retq loopne and sbb xor leaveq (bad) (bad) cmp jge repnz (bad) rex.WRX sbb and push xor xor rex push shll jbe cmp sub mov loopne jae sub cmp (bad) or mov jno je (bad) movsl jle idivl adc enterq adc or rex.WX rex.RB sub (bad) and mov pop xor push scas rex.WR mov (bad) cmp rex.WR sbb mov mov add lret pop jmp add jle out push rex.R mov out (bad) cwtl pop mov in jns stc pop imul mov rex.WRX mov rex.R pop rex.RXB add xor jrcxz sbb movabs lods push (bad) movsl es pop xchg adc repz in sbb cmc cmp cs fcoms mov adc cqto cmp rolb mov push test mov or int3 adc hlt jp cmp mov mov repnz fmul cmp lret sub cmp (bad) mov sbb mov (bad) xchg xchg jno xor mov outsl add (bad) rex.X jmpq and xor movslq mov jg or xor lods pushq push sub lret (bad) in sub mov test lock addb jl movabs sub (bad) stos adc adc add rcll (bad) (bad) sbb xchg stos pushq js cmp and retq (bad) jl (bad) rex.WB hlt icebp (bad) std pop fwait cwtl (bad) xchg pop mov in mov roll (bad) xchg (bad) (bad) cmc mov test mov add push (bad) (bad) jmp sbb popfq (bad) xor sarl outsl adc loop lods xor add in cld or imul sbb (bad) mov xlat movsb fwait lret (bad) xor sbb leaveq mov loopne lods xor add xchg rex.WX xchg cs cltd rex.B repz mov jne btc (bad) leaveq test movabs in cmp gs fs sub rclb lea sarb pop xchg sahf imul in (bad) pop cmp cmp mov in jl repnz fmul pushfq shll test xor sbb push xchg imul jp (bad) gs nop iret xor addr32 (bad) out pop out or imul sbb pop pop (bad) rex.WRB mov icebp adc push imul (bad) (bad) adc rorb jp movabs out (bad) cmpsl pop and popq out es rex.RX and test test outsl int3 mov xchg loope mov sub add xor mov rorl idiv or rex cmp scas (bad) rex.RXB cli xlat movl fstl (bad) jno sbb rex.R rex.X rex.WRB rex rex.WR mov and fs gs fimull xor sub clc mov bswap xor adc gs shrb test cwtl add or lods in (bad) cmp (bad) xor and mov cmp adc cmpsb cmpsb mov pop rex.XB jg sti shll xchg rex.WXB jmpq sub (bad) outsb test es adc sbb sub mov sbb rex leaveq retq sbb rex.WX sub fnstenv (bad) rex.WRX (bad) sbb push or jb (bad) rolb jo retq (bad) pop fiadd outsb imul cs insb add add add mov (bad) (bad) adc cwtl jnp or (bad) (bad) jle mov xor imul adc test (bad) iret mov pop sti rex fisttpl sbb frstor pop xor mov cmp rclb shlb add sub fmuls jo lahf hlt enterq mov clc pop or add pushq cmpl cs adc es loope mov pop add popfq cld push add fwait retq (bad) rex.WRB jo decb test in (bad) xlat mov (bad) (bad) std ja js jnp add add mov cltd rex sub ds mov adcl cmpsl clc xchg (bad) jmp adc adc push (bad) (bad) cmpsl icebp push addr32 sbb packuswb test pop cld or insb rex.WRX imul jbe xchg andl mov and rex.WB (bad) in cli pop repnz xchg jg rex.WRB ficom insb pop (bad) test mov xchg push jle mov adc nop rex.WRXB jns (bad) sub out rex.X (bad) xchg movslq fidivrl add lret or fcmovb (bad) rex.WRX cmp (bad) pushq icebp cmp idivb (bad) (bad) sti mov (bad) (bad) decb add add add ja mov fiaddl mov sub sahf std push xor jo cs (bad) add ds sti pop rex.W repnz (bad) jg in adc sbb add rex.RB je jb movslq jae add add add add (bad) addb add sub (bad) addb add xor (bad) addb add sub addb add retq addb add add push or jb fs pop rex.WRX in cld loop loop xor and nop jae sti loopne out movsl int3 mov and sti mov hlt push or rex.WB xchg icebp cld lods and loop jge retq mov jge or cmp cmpsl movabs idivb (bad) (bad) (bad) cld rex.RXB insb rex.WB (bad) (bad) (bad) (bad) fadds xor scas movabs add mov adc xchg sarl jne rex.WR cmc jp insb imul mov (bad) mov gs and rex.R rol lret and sbb add stos movslq fist rex.WRXB (bad) xchg pop cli jo (bad) pop fwait mov out fmul pop (bad) movslq insb nop add subb hlt sti mov stos (bad) cmp fistpll rex.WX ds (bad) movabs outsl mov mov mov sub xor push rex.WRB iret scas mov push rex.WRB pop xor ds mov shlb pop int3 jge jo scas repz rex.XB and lret adc ds mov (bad) push mov rex.WRX clc (bad) adc leaveq cld in ds ss cltd mov mov mov iret out test sti rol pop mov (bad) (bad) (bad) push or mov and rorb sub (bad) callq pop in rex.RX imul or rex.WRB movsl mov (bad) popfq xchg (bad) mov iret (bad) inc mov (bad) rex.WR push push (bad) ss add rex.WRXB xchg and dec hlt sahf mov rex.X and sbb outsl xchg xlat mov jns insl or add push mov or mov mov rex.R movabs mov push xor div push (bad) jns outsb jle test jmp xor sbb sbb xchg mov sar xchg mov pushq mov mov xchg test sahf sti (bad) jmpq stc stc bt add cmc clc cmp js jb stc stc cmc clc cmp jmpq pushq push (bad) outsl js rex.WR nop mov fdivp callq fnstsw (bad) lods and xor push rex.RB rex.X (bad) rex.R jl jbe mov or cld je (bad) retq (bad) (bad) cs and jb movabs movabs jno sbb mov (bad) shrb movsl and fwait (bad) (bad) (bad) (bad) std or cmp (bad) (bad) std rex.WRB cmpsb xchg movabs add or (bad) push cmp loope stos or mov testb (bad) movsb addr32 push (bad) (bad) (bad) cmp and jmpq imul movslq (bad) mov movsl xor xchg leaveq rex.WXB cltd xor (bad) loope repz imul pop sbb fidiv pushq clc or jmpq stc stc repnz jmpq cmpb mov (bad) rex.X subb rex.WRX jle or scas push cs mov insb pop mov movsb enterq pushq ja lods ja push cmp (bad) imul (bad) mov cmp out (bad) (bad) (bad) std loope (bad) push retq pushq (bad) cmpsl test adc lret loopne out lea mov scas xor rex.WX xchg jo movslq fisub (bad) xchg loopne retq cmpsb mov add add mov jnp or lea push (bad) (bad) or mov rex.X pop icebp stc pop and rex.RB out iret mov (bad) sbb adc movslq addr32 mov mov add xchg subl clc jmpq callq jmpq add lahf pop lret sahf rex.WR rex.WB int lea out jp pushq jns cwtl xor add es leaveq add fwait mov outsl xchg rex.WX std push out movabs jl rex.X jmpq adc add push movslq sbb (bad) xorl jge rex.WRX (bad) (bad) (bad) std (bad) xor (bad) decl int3 mov xorb loope xchg shrb xchg push loop (bad) add rex movabs (bad) jo push std mov adc in mov mov mov or incl imul jg rex.W and rex.WB cmp roll pushq fucomp fdiv out cwtl cwtl mov xchg out repz popfq jne stc jno or mov mov (bad) fildl pushq lock jrcxz callq pop out in sbb or xor (bad) (bad) sti repnz xchg add orl fisttpl clc clc xchg (bad) cmp xchg (bad) loope add add add lock out test cmpsb fs lods xchg mov add (bad) cmp rex.RXB (bad) push cmp clc mov or (bad) test rex.RXB sbb icebp fs (bad) xor (bad) shlb pop test decl test add clc movb test stc bt test test jmpq cmc bt test add test movzwl inc not btc mov test test add clc stc mov jmpq fstl in rex mov outsl sarb jns (bad) cmp fisttp pop pushfq int3 (bad) iret mov and mov or xor push rex.WR (bad) movsb and (bad) pop cltd cmp pop (bad) addr32 rex.WX mov shlb movabs (bad) cld and lock (bad) (bad) (bad) mov (bad) or outsl rex.WRB movabs xor add pop cmpl xchg cwtl rex.R movsl (bad) pop mov fmuls add sbb icebp fstps fwait shl rex.WRX jmpq pushfq sahf (bad) pushfq add add add rex.W xchg jp xchg rex.WXB cmp xchg (bad) jno clc loope movslq xor (bad) or insb retq or rex.WRB pop mov sub mov add sbb mov mov mov es scas movb jmpq jmpq cmc xor bt cmc rol cmc stc cmc cmp bswap movsbl not lea mov movzbw lea mov pop jmpq jmpq jmpq lea lea bswap movzbw movzbq not pop jmpq nop jo ss mov movslq callq insb movabs (bad) xchg stos (bad) sahf rex.RXB sbbl pop xchg imul insb int3 imul rclb push cmpsl mov xchg jmp cmp xchg decl repz shrb int xchg xchg jl (bad) (bad) (bad) pop shrb pop movabs push or adc test mov loopne xchg (bad) (bad) (bad) jmpq repnz int (bad) cli gs lret cld rol sbb mov imul jrcxz cmp or cmp lea xlat js fcmovnu jle fistp (bad) mov jbe (bad) mov retq mov sbb jbe bts rol mov bsf (bad) repz sub mov btc cmc dec bsr add or add xor rex.W icebp xor rex.RB add add btr sub mov test cmc clc jmpq xchg int3 mov sbb add cmpsl rolb sub hlt (bad) xchg (bad) (bad) rclb out mov (bad) mov add movsb notb ds add sub mulb (bad) sti xchg mov test rex.WXB insl push fwait sti (bad) pop rex.WRX (bad) test movslq xor jmpq hlt rex.RX sub lahf xchg pushfq out enterq stos std cmp adc cmp in movslq jo rex.R (bad) (bad) nop mov mov jne xchg jmpq pop lods push test cmp and sub (bad) movabs xor rolb sti (bad) je and cmp loop loopne pushfq rex.WRX xor outsl or (bad) (bad) (bad) es gs xor test sub cmpb adc int3 sub jle or retq jb jno std nop pop and dec clc adc and cmc rcl add jmp movabs in insl movsl (bad) (bad) (bad) (bad) mov xor ds movabs add cmp xor fs clc lods add cmp sbb lock (bad) (bad) andb repz cmp mov or mulb rex.WRX (bad) data16 lret pop ja stc jmpq jb bt cmpb jmpq je cmp cmc clc sub clc test jmpq cmp test cmp jmpq clc rol stc cmp bswap movsbl jmpq jmpq cmc clc imul bt stc add jmpq jmpq mov xadd rol stc mov movsbw shl sbb shl mov sbb rcr and jb push shld xadd and jmpq jne jmpq repnz scas movsb rolb adc test xor cmc out mov shl cli (bad) rex.R imul test imul sbb fidivr rex.WRB (bad) mov outsl xchg imul repz rex.RB (bad) (bad) rex.RB jge push xchg out retq cli adc pop cmp (bad) jg (bad) mov rex.WX (bad) rex sbb fs (bad) in pop sub lret (bad) (bad) (bad) sti (bad) adc jne (bad) (bad) (bad) decb sbb jno and (bad) push sbb retq jge movabs int jb mov ja push pushq fdivrl lret cld (bad) iret or push pop int3 pushq mov jl push jg mov jns imul div lods or (bad) clc push sub cmpsb rorb test xchg sti (bad) jmpq je clc bt cmp jmpq ja cmc clc imul cmc stc cmp add jmpq jne jmpq jmpq jmpq je cmp cmp clc stc sub stc jmpq callq xor cmc shr add cmc bsf cmc mov clc cmpb jmpq jmpq jne bsr cmp shrd data16 lock sbb ror bswap btr mov sbb neg add rcr neg ror mov cmp stc test test jmpq mov (bad) (bad) leaveq scas sbb fstpl mov mov sbb mov pushq sarb insb jmp pop ss (bad) js faddl ja loope (bad) xchg clc mov xorb (bad) jb jb mov or cmp jp sbb rex.WRX (bad) mov sbb pushq (bad) push mov cmp je or push sbb pop cmp rol movslq cltd mov xchg mov rex.WX cmp xor (bad) mov pop pop xchg icebp in retq add xorb mov xlat fiaddl (bad) add lret push adc int3 lods cmpsl fsubl add outsl or ds ficoml cmp sbb mov fmuls (bad) rex.RXB (bad) callq and or (bad) sti sub (bad) (bad) (bad) (bad) sti out jle add jg pop push rcl (bad) xchg lahf cmp (bad) sti jl jp (bad) (bad) (bad) pushq (bad) (bad) test sbb int rex.WR sbb mov jbe mov (bad) sahf mov mov mov mov pop div movabs sbb mov xchg rclb jne xadd mov inc sub movsbw shl mov cmp clc clc bt sub test bt clc pushq stc bt stc cmp jmpq jmpq clc stc cmp cmc cmp jmpq (bad) jns test insl rex.XB je xchg iret (bad) rex.RX (bad) adc sub xor mov mov sub leaveq hlt cld (bad) or adc sub (bad) (bad) pop movabs hlt mov movsb mov fwait out fwait mov std mov clc adc (bad) imul js jmp mov int cmp xchg (bad) (bad) (bad) std repnz add add cwtl and cmp mov loope jno pop hlt cld (bad) (bad) rex.B push cmp sbb mov sbb lods in rex.RB jno cmp iret mov push rex.W xchg callq lret pop test sub xchg add clc stc sbb mov sub adc neg mov bt stc cmp jmpq jmpq jmpq adc add repz mov jo rex.XB cmovge test rorb mov mov fdiv fild movabs sub imul ja test push xchg retq pushfq add adc not xor fnop movsb rex.X pop xor addr32 jmp fwait sbb out movabs jbe rex.WXB icebp xchg clc cmp movslq cmp (bad) xor stc jne pop pop fst mov in push popfq mov rol pushq sbbl (bad) decb (bad) (bad) (bad) (bad) mov mov out stos mov or mov xor mov mov jo sub pop shrl add sub fucom and scas jg movslq movabs xchg ja imul scas mov jbe jae sbb data16 testl (bad) adc mov test cmp test cmp test jmpq pop rex.WXB pop (bad) outsl vxorps int sbb xchg imul insl pop (bad) pop movslq sbb ss rex.RB cmp rex.RXB (bad) (bad) js xchg xlat xchg shlb pop lods gs xchg (bad) rex.WRB popfq fwait retq and (bad) repnz retq cmp rex.WXB (bad) xchg xor retq rorb (bad) or xchg rex.RX leaveq sbb push jrcxz ficom jns (bad) insb or movabs rcl mov (bad) (bad) (bad) (bad) (bad) xchg hlt fsubrs cmpsb subb rex.WX sti jb fsubrs ds (bad) (bad) (bad) (bad) fdivrs sub sbb pop add push xchg rex.RXB rex.WX jg xor negl (bad) push divl pushq pop leaveq rex.WR outsl fisttpll xchg stos adcl pop (bad) (bad) mov pop clc cmp sbb mov mov (bad) xor loop rex.W pop push (bad) rex.RX rex.WX adc insl mov insb movslq insl out add (bad) cltd mov fs (bad) retq popfq jp rex.WX shrb jle jae div loope movabs fbstp jbe rex.WRXB jns xchg hlt cmc pop or jb rex.WB mov sub mov pop adc or loopne faddp mov push xchg xchg jg push rcl (bad) rex.WRB jg rex.XB lods mov (bad) mov jge or (bad) (bad) decb (bad) (bad) (bad) decl negl adc rex.WXB lods lret stos cld (bad) cmpb addr32 notb je sbb (bad) leaveq cmpsb clc fidivrl leaveq pop icebp movsl mov mov sahf mov sar movabs xchg stc mov jns mov xchg rcll sti fstl xor pop imul cltd (bad) mov jns pushq scas adc jbe cmp cmp insb xchg out loope sub ds shrl xchg je jae pop (bad) (bad) xchg mov jns jmpq jne lahf shll (bad) pushq mov (bad) pop xor sub cmp (bad) (bad) (bad) cld pop mov (bad) cmpsb (bad) (bad) (bad) lcall (bad) (bad) leaveq cmp mov (bad) test out pushq and mov (bad) xor mov sarb sub mov sbb pshufw add add or mov or scas and hlt pop rex.WB out jrcxz sbb (bad) enterq jo rex.X jns fwait mov int clc in notl test (bad) (bad) packuswb or add jmpq add rex.RXB gs imul outsl outsb rex.WB outsw add add jmpq jmpq test jmpq jbe dec add btr add sub mov inc shld shl mov bts sub mov rcr add test bsr shr ror jmpq jmpq jmpq add xchg sbb subb rex.WX mov (bad) mov int3 add test sbb add ds (bad) (bad) or cmpsb cmp gs xor cmp gs jmpq lret mov mulb (bad) sub push mov sti int sub jge or retq sbb sbb rex.RXB jbe (bad) (bad) (bad) stos (bad) adc mov (bad) cmp xchg mov sub (bad) push retq imul jb stos (bad) jge (bad) xchg mov add add (bad) (bad) loopne jne jb cmp movslq je adc shll sbb retq out rex.W rex.XB rex.X mov fisttpll and rex.X (bad) xor mov pop imulb xor and fimul test add cmc bt bt cmp jmpq adc imul sbb sub pop loopne push test (bad) add (bad) mov sub in jmpq mov movsb stos stc push jp jbe fwait divb insb (bad) mov pop pop cmp mov (bad) loop imul xchg mov sbb and mov (bad) (bad) (bad) cld ds (bad) (bad) (bad) dec pop jne (bad) movabs lock test add add stc add fwait xchg mulb icebp fwait bndstx (bad) fdivrl imul xor xor js xchg adc (bad) mov ss (bad) jle movabs pop (bad) rcrl xlat jg mov adc sbb adc popfq sub insl rex.WRX shr cmp adc push and fs mov fs (bad) and cmp nop (bad) rex.R rex.X add (bad) jle jbe mov mov xchg lret mov mov cld cmp mov (bad) movabs or or (bad) imul xchg (bad) cs fcos (bad) (bad) cld rex.WB mov (bad) (bad) decl (bad) cmp or ja cmp fnsave add add ja (bad) out or cmpsb xchg (bad) fsubrs repnz xchg mov rex.X cs cmp test out adc xor cwtl mov pop cmp sbb js add clc clc cmpb jmpq callq cmp clc cmc sub jmpq rex.RB sbb mov hlt ss or xlat out sbb div in xchg sub out repz faddl je mov add negb push sbb mov or fstl outsl rex.B add int3 cli ja lea gs (bad) rex.B test movslq (bad) repnz jns and repnz (bad) fsubrl jg ss test rex.B mov mov rex.W pushq cltd rex.WRB movabs mov std ja (bad) repnz add add mov movslq jge mov adc test in lods rol imul int3 insb loope insl adc (bad) or mov push cli cmpsb test pushfq mov test test push bsf sar shr mov bt clc stc bt sub jmpq cmc cmp jmpq (bad) out cmp and iret (bad) fisubrl (bad) rorb mov (bad) or jp outsl push cmp jmp rex.WRX and (bad) pop (bad) in fsts pop rex.RB rex.X xchg cmp sub sti pushq mov repnz rex.WXB je or pop jge movabs rex.WXB fsubr (bad) xor (bad) decb (bad) (bad) (bad) dec cli cmp pushq stc push add xchg rex.W int cmpsl rorb cmp mov lock cli in movsl sub notb fistpll (bad) adc xchg (bad) movabs xor xchg mov mov movsl xor xchg xchg pushq ds rex.WRXB rex.WR xor push out jl add sbb mov roll out cmp in cmc (bad) adc adc outsl stos fistl xor (bad) xchg callq xchg rex.X sbb jge clc cmp xchg movabs cltd insb mov sahf test pop adc lods cmp mov fstpt adc pop test rex.WX (bad) xor repz rex.WR fistl mov xor pop push or rclb pushq (bad) (bad) leaveq std xchg jnp adc mov (bad) (bad) (bad) decb (bad) jb jno xchg (bad) cld pushq rex.WRB sarb rex.RX movabs (bad) sub pop push jle mov mov cmp rclb lss push jg sarb icebp fnstsw jno lock lods mov (bad) icebp mov movabs std out loope lods cmp adc push clc out es cmpsl loope cwtl rex.WB rcl js lea rorb popfq cmp rorb mov (bad) imul (bad) ja (bad) in adc xchg (bad) (bad) xor repnz rex.R lahf sbb sahf (bad) (bad) (bad) decb adc add repnz mov movabs add jrcxz outsb jmpq fucomip rex.RB gs rex.X clc mov fidivl ss jbe jmp movabs or jne lret (bad) stos jb cld pop lret mov lahf test (bad) mov not movzbw lea jmpq jmpq stos fmuls xor int mov lret rex.B push mov loop (bad) rex.RB xor rex.W (bad) adc xorb xchg mov adc mov mov rex.XB (bad) insb push xchg movabs jo and jmpq or sbb negb jae xorl (bad) ss addr32 xor (bad) repnz (bad) enterq mov cli push rex.WX vminss repz std loopne (bad) (bad) (bad) sti fild (bad) movsb jno (bad) (bad) (bad) outsl movabs mov loop rex.B (bad) (bad) (bad) (bad) out lahf int3 addr32 jb or loopne out (bad) lret test or rex rex.W xchg movsb mov pop cli cltd add rex.WXB in cmp (bad) jno rex.XB (bad) jp or jnp (bad) jnp sbb sub bt pushq clc cmp jnp ja neg sub shld add dec add mov and and mov bt cmc bt stc repnz jmpq bt add test jmpq lea jmpq bt test repnz jmpq jae clc cmp jmpq jae sub rol test cmp mov rcr cmp cmp mov mov sar shl mov cmp cmc xor cmc cmp cmp test repnz jmpq callq sbb add rcl rcr mov cmc jmpq callq and shld bsf movzbl add bsf jmpq stc cmc mov cmp test jmpq jne cmp movb cmp cmc stc bt test jmpq jmpq insl fiadd fimul rex.WX fsubs mov mov (bad) cmp jbe and adc fimul sub movsb (bad) jo pop adc sub and mov add fadd data16 xor mov sbb jbe pop popfq lret lret mov (bad) (bad) cld pop or (bad) (bad) (bad) out test sub mov and iret notl push or jrcxz add (bad) add repnz pop cmp rex mov repnz stc rex.WRXB mov adc movsb adcb imul add add (bad) jle mov test adc cs mov mov js sub mov in out push or (bad) mov sbb int3 fdivrl lea sub or sbb mov fidiv mov out push adc cmp js mov add mov repz mov pushq rex.WR adcl icebp imul (bad) lcall jmpq movsl sub xchg add (bad) (bad) (bad) std pop int3 lret cwtl push (bad) xor roll mov mov add leaveq mov hlt sbb movabs (bad) callq cmp stc mov lahf push jmp out xor push jb std add add add adc xor or rex.WRB (bad) sti pop sub pop in fnstcw sbb out sub es addr32 ss jnp in mov stos mov jle and rex.WR rex.RXB in outsb adc ja sbb cmp cmp jmpq jns xlat div repz jae repz mov jb add jg nop lret movsl (bad) lret ss insb cmp lret clc icebp (bad) mov jnp shll rex.W sub pushq jne repnz loope cwtl je enterq roll rex.WR mov jge sbb pop or cmpsb fisubr sbb or or xor (bad) lock rex.WRB pushq movabs pop rex.X xchg fiaddl popfq insb clc pop adc (bad) (bad) (bad) decb (bad) (bad) (bad) decl rorb sahf mov sbb cltd iret add repz add pop (bad) cld push push (bad) cwtl test (bad) retq mov or lahf fwait lock push imull (bad) push callq cmc (bad) stc push or sub movsl cwtl lret cwtl imul ds callq leaveq jmpq ss cld mov jp scas mull mov (bad) cmp cltd mov rex.W jns rex ja rex.B es lods (bad) icebp test adc pushq pop jo (bad) sub (bad) add xchg sub movsl leaveq sbb imul leaveq retq xor mov test mov jne mov (bad) (bad) incl xor outsb add xchg mov (bad) out push scas xor pop sub jne mov fiaddl pop je rex.W fwait (bad) in add add fmul movabs jge outsb adc or mov pop icebp jmp rorl pop int es mov stos scas rcrl and repnz pop add (bad) cmpsl mov cmpsb movabs jmpq and sub callq jbe cmp cmpsb mov rex.RX lods rex.R mov xor lcall rex.WRB (bad) retq sbb and nop sub (bad) vmulps add add retq lea or in cmp (bad) cli je sub adc hlt xchg insb (bad) pop in mov stc mov mov lret (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq xchg adc jle push xor out (bad) (bad) pushq and in rex.WRX cs callq movabs jne (bad) mov rex.WR (bad) nop xchg mov or and add popfq fdivrs jo mov callq shld add setno lea mov cmc test cmpb jmpq rex.WRXB movabs (bad) rol or rex.WRX movabs loope and int3 xchg iret cmc adc rex mov jb fistl movslq mov cmp push shrl cmp fld lock jg mov shlw scas notl leaveq or imul xchg (bad) cmpsb cmpsl sar (bad) (bad) (bad) xchg add mov movabs adc jbe rex.WR (bad) movabs out mov rex.X cmp (bad) sar xchg add mov or sub jrcxz cmp loopne rorb jmpq test lock bt test jmpq cmc clc cmpb jmpq ds mov xor movabs (bad) out adc sub (bad) movabs push sub mov (bad) and rex.XB mov rex sub iret mov std push cmp movsl lock out (bad) js es fwait add icebp popfq loop add adc (bad) xchg rex.XB fwait iret cmpsb test sbb (bad) (bad) cld push loopne callq (bad) (bad) (bad) callq and rex.XB mov rdpmc (bad) lret add add fldcw cmp stos mov movsb rex.XB push (bad) sub adc in (bad) fmuls (bad) cld xchg or movabs rex.XB fs hlt mov fbstp adc orl (bad) jmpq mov movsbw movzbw mov mov not mov lea jmpq jmpq jmpq cmc add jmpq jmpq jne movzbw jmpq jne test movb jmpq jmpq (bad) and cmp xchg (bad) sub lret enterq insb adc sbb mov sbb mul fsubrs (bad) sub decl mov jb (bad) cmpsl pop (bad) sbb rcrl adc xor loopne out cmp (bad) adc mov cwtl (bad) (bad) mov push test (bad) xor and sub insb stos rcrb rex rex.WRB (bad) jne mov adc repz rex fistl shrl (bad) pushq xor mov sub rex.X (bad) and (bad) (bad) sti mov (bad) (bad) decb sbb xor add or sahf pop shr add ss int3 addr32 mov out fwait mov loopne ds rex.WRX pop out jns xor sub adc rex.W xchg mov sbb jne btr mov neg xor not xor and dec mov jmpq jmpq stc repnz jmpq lea lea lea lea not mov jmpq je cmc test stc sub stc jmpq jne cmp clc bt cmp add stc add jmpq jmpq mov cmp jle sub xchg push jg cmpsl mov push add rcrb (bad) retq xor cwtl xchg rex.WX pushfq (bad) pushfq outsb push xchg retq nop adc push sar cmc stc movabs in (bad) scas stos fdivrs mov xor mov loop or cmp movsb int sub (bad) (bad) std movabs (bad) std cmp jb mov (bad) (bad) ljmp rex.WB stos jle add sub int loope fabs mov repz jne rex.RX cmp xor js enterq scas xchg xor mov stos movabs rex.WX cmpsl and or jb test mov add jns je jrcxz xchg push test xchg mov movsb mov pushq sub sbb popfq xchg addb sub scas add lods mov loop cmp mov (bad) (bad) (bad) lea jb and rex.W and sbb addr32 jae (bad) std (bad) mov outsl sbb add mov repz pop add (bad) xchg rolb xor fidivr or fcos imul out rex.WXB lods cmp (bad) rol enterq sqrtps sbb xchg out (bad) jmpq jmpq callq jmpq bt xor stc cmc cmp repnz jmpq stc cmp jmpq rex.RX fs add xchg mov (bad) callq adc or sbb fildl outsb pop pushfq and cwtl (bad) sbb (bad) fdivrl cmp pushq rex.WX fildll jge jbe fdiv sahf (bad) (bad) int int3 stos mov xor scas jo shrb addr32 mov jns iret jbe lret jns fist mov (bad) mov (bad) movslq pop mov push (bad) addr32 push and movabs scas sbb hlt rex.WR rex.WRXB jns jg mov jp xor (bad) mov (bad) cli cmp add data16 pop jp notl and (bad) lret sub push cld movabs (bad) lock mov lods cmpsl mov (bad) cmp leaveq in mov xlat (bad) fbstp sbb xchg rex.B rex.WB ja and mov cmp data16 rex.R xor xchg mov test mov jg or mov sub test rex.WXB outsl add lret (bad) movabs js add loopne gs mov cmp sbb mov cmp (bad) (bad) jl push (bad) (bad) (bad) sti fsts jbe (bad) (bad) (bad) (bad) imul xor sbb outsl adc (bad) xchg (bad) (bad) (bad) jmpq movabs movabs hlt pop rex.W sbb jns pop sbb adc rex.R xchg mov xchg nop in fwait shrl sbb pushq jmpq jmpq jle add jmpq mov cmp jmpq bswap movsbw pop jmpq mov data16 retq frstor sarl in iret fadds pop rex.WB jns test outsl mov xchg push mov jb pop mov lahf and in (bad) rex.W mov xor loop or sti sub and mov (bad) stos fmul jrcxz nop retq movsl cmp sub imul rcr in mov rex (bad) (bad) (bad) sti sub cwtl (bad) std mov fisttp add (bad) and xchg rex.WB rex.W pop cmc insb push (bad) cmp jns (bad) (bad) (bad) callq movabs movsb sbb rex.R rex.WR rex.B (bad) sub mov push xor out (bad) out movsl rcr jo rex.B iret (bad) rex.WRB (bad) xor cmpsl xor scas rex sbb jmpq jmpq jmpq rcr or pop xchg test fs pop js and mov sub xchg rex.WXB (bad) iret (bad) and lahf rex.RX (bad) rex.WRB popfq rex.RX (bad) stos lock mov (bad) (bad) in iret movabs callq mov jmp push or cmp (bad) (bad) sti jo hlt jns (bad) (bad) (bad) decb xlat adc adc or out cmpsb movabs or cli add jo add and rex.WB pushq push (bad) leaveq lock (bad) (bad) ljmp sub mov std imul (bad) fwait mov push cmpsb mov pop movsl hlt movabs xchg (bad) (bad) data16 movabs test add (bad) mov mov xchg icebp xchg sar cwtl jno xor lahf or sub test push rex.WB test sbbb (bad) (bad) cmc in xor test and mov sbbl xor rex.RB mov sbb xchg movabs imul stos pushq adc mov je xor rex.WRX sahf repz test sbb insl lahf rex.RX mov mov jl shrl js loop xchg push std stos (bad) retq (bad) (bad) (bad) decb (bad) (bad) (bad) decl sahf rorb sub rex.WXB fwait mov lods iret and (bad) (bad) add (bad) (bad) sbb push (bad) movsb jl out rex.RXB (bad) (bad) popfq sbb mov cmp jb mov sahf mov pushfq mov cmp scas (bad) mov mov sub rcrl std sub pushq (bad) cmpsl stc rorl jl pushq adc xorl or pop sahf sbb fcmovbe or adc push callq mov stos jmp xor cld fimul fisttpl mov test cwtl rex.WX xchg mov out mov iret add movabs mov (bad) (bad) (bad) cld rex.X in sar (bad) (bad) sarl pop or (bad) ds (bad) xor (bad) xor pushq mov and lret adc xor test add add add (bad) (bad) push movabs sbb jge fisttpl int3 jrcxz gs sbb jl xchg subl pop hlt test rep xor xchg cli mov pop sub pop rex.WRXB movsl and push xchg stc add out xchg (bad) stc std rcl (bad) in out push add sbb xlat adc (bad) cmp nop test mov (bad) (bad) movslq rex.RB jb ror gs add stc stos or push movabs (bad) and mov repnz test jp adc jg jbe mov je leaveq jno (bad) xor cs (bad) (bad) sti mov (bad) (bad) decb cmp jmp gs popfq xor (bad) add add or push nop stos adc cli fwait mov sbb rex.WRX idivb outsl stos vcvtps2dq subl add jl mov mov clc xor ss (bad) stc stc jmpq je adc bswap shr rcr push neg shl adc xadd mov setl sbb sub lea movsbw not lea jmpq bt add cmc cmc cmc clc mov cmp test jmpq ja rol rol test sub and sub clc add and sbb mov not neg sbb bt mov cmc bt stc cmc repnz jmpq jmpq clc cmp cmp bt add cmp bt movzwl dec movabs mov cmc jmpq movb jmpq cmp jmpq jmpq jmpq je jmpq stc cmp jmpq or icebp fidivr mov bnd addr32 or lock xlat or or cmpsb rorb hlt shrb mov mov (bad) mov mov sbb repz callq (bad) cmp repnz rex.WRXB sar (bad) (bad) std rex.WRX (bad) insb cmp jb add add or insb pop mov insl iret jle add rex.WRXB (bad) lea cs insb cmp sbb (bad) stos cwtl mov mov test cmpsb fcmovne jb mov in sarb fs jmpq jne insb jb adc mov (bad) mov jns cmpsl (bad) fs mov vpunpcklwd (bad) jp xlat stos and (bad) incb xchg xchg xchg jmpq callq add jg stos lods movabs pushq cs test (bad) pop (bad) sub ss pushq xchg pop xchg jb xchg xorl retq gs cli push out pop push movabs rex.WXB stc out or add and (bad) rex.WX jl (bad) pushq jge rex.WXB rex.B ds jrcxz out rex.W mov sub mov (bad) in mov or mov clc sub jo loope out rorl mov lea insl pop xor popfq rex.R (bad) mov (bad) and add (bad) cmp and or repnz cli ss sbb (bad) xor (bad) ds mov fidivl rex.X enterq jne jnp jge and pshufw rex.WRB jo leaveq iret mov insl mov callq std ja lods add add add or jne sarl (bad) fisttp adc movsl (bad) add push sub andb movslq jle shrl add movsb mov mov and retq and jmpq (bad) mov xchg and xor lea lock retq retq rcr repz cmp loop xchg mov (bad) lret out loope add in imul pushq lahf icebp hlt jg xchg mov sti sub callq test (bad) test movsb xchg rex.WR jle paddsb jo pop test mov jrcxz sbb sbb fimul mov sub (bad) decb (bad) (bad) (bad) jmpq add pop or jb pop add rcl or jae rex.WRXB (bad) (bad) data16 xlat jge rex.WRB xchg (bad) mov or (bad) leaveq pop rex.RX cmp xchg rex.WRB rex.X adc lods xchg (bad) (bad) je fimul std test cmp jae hlt je retq or rex.R scas (bad) ficompl xor adc outsl (bad) mov (bad) mov rcr rex.X push cmpsl rex.WRXB stos (bad) sbb mov pop in sarl ds je pushfq rex.WB fisttpll rcr popfq rex.RX and movabs lret lcall push xchg rex (bad) (bad) (bad) decb out clc lock mov cmp mov in sarl lea nop enterq pop fimul cmp clc in ds sti sarl (bad) test je xor enterq jns jmpq sbb jno fidivrl mov mov jmpq and jmpq rex.RB movslq jne (bad) repz mov scas rex.WX movslq movsl pushq adc adc movabs rex.X fwait (bad) rex.W or sahf movslq mov test sbb nop mov mov sub adc jg data16 movabs jnp movabs psllq (bad) (bad) (bad) (bad) (bad) rex.XB jmpq (bad) (bad) jno loope rclb (bad) (bad) and xor (bad) out scas sub xchg fwait enterq jae int3 xchg retq (bad) lods (bad) mov pop xchg xor mov add (bad) mov in cltd mov rex.WB sbb xor mov xlat jmp pop xchg jmpq scas int push clc scas mulb in loopne retq std pop rex.WX push cmp pop stc lahf movabs rcll mov ljmp and lldt push andb (bad) xchg mov and mov sub jnp sub cmp sbb scas (bad) pop (bad) roll (bad) rex.WRB mov gs in mov callq mov mov or (bad) mov sub push cmp (bad) (bad) sti stos rex.RX or (bad) (bad) (bad) (bad) cmp (bad) (bad) mov fstl mov and sbbl or and push jge mov loope (bad) (bad) (bad) push (bad) out pop (bad) mov int xchg fisttpll (bad) callq mov scas add jo lods mov ficoml (bad) pop test mov jg callq sbb out xchg rex.W rex.W pushfq outsl adc push and jmpq (bad) push mov (bad) roll repnz sub test (bad) lock mov xchg rol sub movslq imul lods pop stos pop jg or xchg xor cmp or loope in push hlt sub loope (bad) xchg mov negl movsb (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb mov and adc or (bad) dec lock fs notb rex.WX rex.WB leaveq rex.RB jno jg and (bad) and adc xchg insb rex.XB mull adc test (bad) jb adc and data16 fidiv xor repz mov (bad) mov xor (bad) and (bad) (bad) in hlt xchg add data16 jmp and test test icebp stc movabs sahf in rolb sbb xor fnstsw pop repz pop mov mov (bad) (bad) pop xchg int3 movslq (bad) xchg pop jnp (bad) (bad) (bad) sti push (bad) (bad) movabs shll subl (bad) (bad) (bad) callq mov and lods test xchg mov (bad) fdivrl xor jo cwtl mov adc in out jns mov jrcxz mov in mov adc cmp mov mov loopne mov mov (bad) xchg (bad) adc out rolb cwtl (bad) push rex.WRB cmc mov out or insb adc jrcxz mov (bad) rex.RX xchg movabs pop mov stc int3 cmpsl jne lods add retq rex (bad) outsl xor cmpl retq outsb (bad) loop out repz rex.WRB rex.WX test (bad) cmp jne movsl (bad) sbb retq pop (bad) (bad) movabs (bad) (bad) (bad) cld (bad) lret addr32 (bad) (bad) (bad) mov cs (bad) data16 (bad) fsts or add add jno jo xor repnz adc roll ficoml sbb rex.RB rex.RX rex.B push divl and (bad) adc jrcxz adc pushfq mov imul sbb ja sar sete sub setno not shld mov add bsr mov cmc sub adc mov cmp clc clc repnz jmpq je bts push bswap mov stc and shl shr sub setp movzbw mov jmpq jae clc clc sub jmpq (bad) iret (bad) (bad) mov xor mov sbb rex.R vpaddw and lods (bad) (bad) pop jno lahf sti outsb mov hlt out (bad) jmpq std rex.W cmpsb (bad) mov int adc sub xor fildl movabs jmpq int3 (bad) lahf scas movabs cltd rex.WRXB jmpq mov (bad) (bad) (bad) decl subl and jb mov lret hlt and pop (bad) int3 mov sub and push repz cmpl sub (bad) (bad) xor xor add add pop retq mov push rex.X xchg shll outsl mov movslq xchg rex.WXB cltd mov mov insl add pushfq mov rex.B mov xor scas fs callq mov bt test clc clc or jmpq cmc stc xor clc jmpq pop and pushq sub movabs or jns cmpb or xorl movsb jo test xchg or test (bad) sub lahf clc jbe cmp gs movabs sub pop out cmpxchg and (bad) cmc clc add xorl pushq insb sbb (bad) negb in scas lock out sti insl or jns out enterq mov rex.RXB rex.WR jo enterq mov (bad) (bad) cld lods adc (bad) (bad) (bad) cmp test movl and (bad) fisttpll add add sbb movabs (bad) enterq mov addr32 mov addr32 and enterq (bad) mov add (bad) sbb or (bad) mov test cmpsb mov mov mov jmpq mov jge imul (bad) (bad) sahf push push cmp mov (bad) adc adc and adc (bad) xor js adc rex.X xchg (bad) outsl rex.WRX (bad) adc in and movsb and es and (bad) mov rex.WXB fwait ja cs leaveq rex.W sbb stos rex.RX (bad) mov adc jmp rex.RXB and (bad) sub (bad) (bad) (bad) sti (bad) mov (bad) (bad) (bad) push pop xchg xchg movsl sub sub test cmp cs callq pop xchg rex.R gs lock xor mov outsb pop rex.WB ds (bad) adc scas adc cmpsb out rex.RX mov jbe in xlat rex.R imul (bad) int3 mov rex.WRX mov roll sub test repnz jmpq jmpq je jmpq ja movsbw jmpq cmp jmpq je cmp cmc cmp sub jmpq jb callq bt cmp or jmpq jne bsr neg mov stc jmpq mov cmc cmpb jmpq jmpq je jmpq add rex.R jae insb jne pushq insb jbe jb (bad) movslq add (bad) movabs xorb (bad) (bad) movb callq insl pop cmpl repnz rex.XB jno lods add or mov (bad) jbe xor add movabs movabs pop cmp add movabs xchg adc int fcomp xchg jp or xor ficoml jb pushq fldcw (bad) xlat (bad) jb mov nop lods fisub add lock or (bad) (bad) sti cmpsb sar insb (bad) (bad) (bad) (bad) (bad) jge or jg adc sbb in cltd cmc and or (bad) (bad) (bad) callq out mov mov xchg (bad) incl or cmp (bad) sarl xor (bad) fdivs adc nop mov (bad) rex.WXB lods (bad) cmpsb (bad) sbb or and fnstenv jne enterq and je decl lret adc out (bad) lahf (bad) movslq fstpl or movabs rex.WR mov push stc ds sub mov (bad) rex.RX sub and mov (bad) (bad) (bad) mov and or movabs shl xchg mov cmp movsl xor mov jle mov jbe (bad) mov rex.RX cmp (bad) or mov retq (bad) out bswap movzbw movzwl mov lea mov movzbl mov jmpq int push je lods add rex.RX lret in and in (bad) rex.WRXB callq sbb jnp test ficomp scas pop pop gs sar popfq (bad) sub mov hlt pop stc xchg mov (bad) rex.RX test fadds loopne imull sti movslq xchg std hlt pushq add xlat lods mov vunpcklpd cmpsl pop mov (bad) stos rex.R shrl fimull sbb xor rcl jge (bad) (bad) inc mov mov test xchg addl mov add pushfq (bad) (bad) mov mov and add xchg mov (bad) addr32 rex.B test mov int3 mov ss pop bt mov mov stc cmp stc jmpq xor xchg (bad) xchg mov pushq stos retq xor in movsl mov mov cmp mov lea (bad) cli sbb pushq ja stc lahf loopne xchg xchg fmuls sub cmp out clc hlt movabs xor out fidivl (bad) gs xchg mov (bad) cli (bad) xchg sahf cmp (bad) sbb test or add (bad) jbe int cmp iret sbb lock lods pop xchg idivw (bad) (bad) sti mul cmp decb std push lock add ja (bad) jrcxz xchg rclb xchg ds (bad) hlt outsl int3 movabs (bad) loopne icebp cltd add sub int loopne hlt jno (bad) (bad) (bad) in stc insl push ss divb test mov cmc sahf (bad) int3 (bad) push add leaveq xchg adc out es jmp in sarl sub out fadd (bad) insb adc sahf cli mov out mov xor (bad) sub test sar and enterq mov adc xchg sub mov rex.WX test movslq (bad) sti sub lret js (bad) xor mov mov out jo jmp cmc es add std ja mov xor add add mov jns movabs or std rclb jg test (bad) repnz leaveq movabs jg jno push retq jo sbb sbb sti (bad) jmpq and stos (bad) stos sbb sarb cmp (bad) (bad) mov outsb (bad) and int3 test mov xor jrcxz sub pop adc clc (bad) shrb lahf adc lods mov and jmpq xchg sbb xchg (bad) or imul sbb cmpsl jp rex.RXB mov (bad) rex lret clc jge cmc outsl (bad) outsl repz rex.RXB jmpq pop (bad) outsb sbb jp xchg add sbb outsb out xchg shrb sti or add stc ficom cmc xchg push (bad) (bad) (bad) sti jno jne and add clc retq and cmp sbb and retq (bad) (bad) (bad) incl fdivr (bad) sub movabs scas enterq pushfq lcall icebp and rex.WRB mov insb pop cmp pop rex.B rex.RXB stos mov mov test add jmpq jb je neg ror push shld mov bt shld and sub lea setae jmpq jmpq xor adc jo rex.WRX rex.WRXB je std cwtl imul insb add js movb jp lahf mov xchg (bad) sarb lret jge push test mov data16 (bad) outsl rex.WRB rex.RXB sub fbstp xchg mov icebp outsl xchg cmp xchg lea (bad) int notb movabs mov movsl (bad) (bad) (bad) (bad) mov fistp adc add in xor cmpsb insb mov (bad) mov (bad) pop cmp fnop rex.B rex.RXB test jle add add rex.WXB ss xchg ss hlt push fisttp pop cs int3 (bad) insb (bad) push and sub (bad) jg pop fldt and sub mov enterq add adc adc retq xchg mov int3 (bad) mov enterq (bad) int3 sub pushfq rex.RX clc sub cmpsl cmpsl pop mov rex js mov loop mov out out lea push mov (bad) icebp callq and in mov rex.B callq lea loope (bad) add xchg movabs or lahf cltd movabs pop retq mov (bad) mov lods mov (bad) (bad) cld and fisubl cmc (bad) (bad) (bad) (bad) mov rex.R xor jb lea (bad) cmp hlt rex fbstp add test add add xchg sarl sahf (bad) adc jl add cmp movabs (bad) pushfq lcall scas sar xchg sbb xor andl pop negb pop mov lret scas mov repnz callq add adc mov mov rex.X (bad) and roll (bad) sub punpckldq pop cwtl jae rorl sbb test stos or loope (bad) incl pushfq jmpq pop pop cmp (bad) xor (bad) (bad) jle out adc (bad) rex.WXB mov out sub out jl (bad) (bad) (bad) sti jne mov (bad) incb rex.RXB adc pop xchg lret (bad) (bad) (bad) (bad) incl push bnd out roll xor std xor and rol mov iret fistpll add push push stc (bad) (bad) jg js cmc push out out callq or fmull push cli (bad) mov lret rex.RX movslq jmpq ficoml xchg movslq mov rex mov rex.RX out mov fs cmpsb and lock rex.WRB xchg cmp (bad) (bad) (bad) leaveq sahf cmpsl cmp sub clc rex.WX pushq (bad) sbb jbe lods cmc flds sbb rex.X pop es fistl (bad) push (bad) sbb (bad) (bad) (bad) (bad) sti jrcxz cltd cmc and (bad) (bad) (bad) je push retq jmp repz add cmp (bad) xor pushq push rex.WRX (bad) pop cmpsb sahf push nop and mov (bad) sbb gs pop jno (bad) (bad) (bad) push retq cmp (bad) sub or out rcl fstpt pop (bad) jmp cld and loop movsl xor and jne rex.WRX sub stc mov mov lret stc adc imul mov fdivrp decl add jmpq mov loop movsb or (bad) pop xchg lahf sbb rex.WRB (bad) mov (bad) rex.WR (bad) div sbb clc in out div sar (bad) mov (bad) out shrb sarb (bad) movq fcompl xor test pushfq sub test (bad) (bad) std jne adc scas push mov test (bad) std (bad) pop bnd (bad) (bad) (bad) incl sbb stc lahf fwait pushfq scas sbb sahf cmp xchg mov popfq gs push divb rex.RXB jle outsb rex.W (bad) gs cmp sub cmpsl insl retq adc mov movsbw mov seto bswap bswap movsbw lea jmpq add rex.WR (bad) imul add jmpq jnp loopne or (bad) pop adc (bad) clc adc repz push lea xor test (bad) retq (bad) mov push andb cmp mov jge neg in mov xchg jge jmp in enterq jno subl (bad) xor (bad) rcl sub mov sub (bad) (bad) std insb lret imul (bad) (bad) (bad) jmpq scas cmp orl rex.WRX sbb jg adc jbe sub or test sti (bad) push rex.RXB or jnp movslq outsb fmull and mov int3 mov add sti (bad) stc clc test cmp jmpq je movzbw cmp btc mov push not mov inc shrd btr sub movzbw lea jmpq cmp repnz jmpq push jns pop xor jmpq sub add (bad) pushq xchg sahf rex mov stos and xlat scas and or lea and pop out fisttp mov sarl mov int (bad) jbe adc add addr32 or add mov jnp jno test movb push sub xchg (bad) cld cwtl in iret jmp cmp sti jge xor decb test mov push fidiv insb rcll test decl or cmp lret fs loopne cmp cld jae rex.RX rex.X (bad) jo sti cwtl add or std pushq xchg retq mov rex.RX fwait lret mov (bad) jrcxz vpsubsw popfq push outsl pushq cmp adc xchg lock or cmpsb fisttpl jle sarb mov mov (bad) leaveq (bad) mov jae shrl cmp jo sti lods insl push xor mov rex.WR rex.WX xor cltd and jle rex.WRXB jno or hlt rorb loop (bad) (bad) cs data16 repz loopne mov (bad) pop (bad) rex.WRXB xor (bad) (bad) (bad) sti mov adc incb (bad) add sub (bad) (bad) cmpsb lea mov (bad) inc cmp test jmpq xor pop rex.WX mov (bad) mov jrcxz loop and mov push lock rex.RB (bad) jl xchg rex.B sbb add shll in (bad) sti decl test cmp pushq jmpq adc xchg stos (bad) jo jb add fwait outsb push jmp mov (bad) adc adc (bad) loopne (bad) jno (bad) pop nop callq or xchg callq movslq xor fsubp xor mov loope leaveq out add rex.X push mov in mov stos mov add imul or out pop lret adc jnp xor mov in jno (bad) or sbb pop cmp cltd loope (bad) (bad) cld sbb (bad) mov (bad) (bad) (bad) stos (bad) repnz fdivp cmpsl cltd pop out mov sub add add adc xlat adc (bad) add scas out scas sti movabs jmp cmp repnz addb push cmp (bad) (bad) insb (bad) sbb add rolb xchg rorl rcr mov add cmc shr rcr ror add jo or or xchg not or mov or shr rol mov clc cmp push not shld mov cmc cmp stc sub jmpq (bad) jns test jnp xlat or test rex.WR pop mov (bad) jb cmp rex.WRX sti pop or xorb jbe cwtl mov rex.WRX push mov add mov adc xlat or (bad) popfq movabs mov cmp repnz jb cmp in movsb neg cs sub gs sbb (bad) (bad) (bad) sti pop (bad) cmpb (bad) (bad) (bad) std (bad) movsl popfq sub sbbb (bad) (bad) rex.RXB ss icebp pop in xchg jmpq rex ss jrcxz rcrl mov (bad) fnstenv (bad) imulb jmpq iret movabs push ja cmpsb test jmpq add and (bad) jg addr32 push clc fwait add jns xor xchg mov lods (bad) add (bad) cld shrb stc add jmpq cmp jmpq jmpq sbb fdivl pop (bad) in xlat xchg mov sar fiadd std clc in fsin push sbbb sbb mov movabs out sub add jmpq pop sti xchg out (bad) mul cld jle leaveq stos cs (bad) rex.WXB (bad) (bad) (bad) sti vmovq lock sub jl xchg out or (bad) callq out orl mov test fdivrl (bad) (bad) (bad) (bad) mov or ror add sbb or popfq rex.XB add add cmpsl lock rex cmp or outsl (bad) adc or mov mov (bad) push adc jg,pn adc jo cs mov ja pop adc sbb xor ja (bad) lock rcl sub btr add lea add sbb inc stc cmc mov seto shl mov test repnz jmpq cmp sub jmpq (bad) int3 icebp int3 repz (bad) adc cmpsb and add mov (bad) std repnz mov jne sahf (bad) repz (bad) xchg cli popfq je xchg (bad) cmp leaveq stos std (bad) mov loopne mov push cwtl rex.XB xlat jmpq fistl jne lahf cmp or fs addr32 std rex.WRXB rex.WR (bad) stos popfq negl clc pop mov rex.RB (bad) (bad) cld adc pop pop and (bad) (bad) callq (bad) out rex.XB cmp mul (bad) ds adc (bad) pop add out (bad) jl add add or lea rex.WRXB push stc movsl lret jge mov cmp iret rex.X popfq push rex.RXB fs addr32 mov add or (bad) (bad) (bad) (bad) cmp mov sar (bad) push stc jmpq callq xor bswap cmp not add inc clc xor mov bt clc bt clc cmpb jmpq bt bt rol jmpq jne rol neg mov cmp jl bt add cmp stc cmp movzwl rol btc dec cmc mov clc bt add stc test bt jmpq mov and mov gs test in jp test sub movsb jmpq mov (bad) lret addb scas adc int insl lods pushq adc adcl shrd (bad) xchg sub xor sbb (bad) add stos pushq rex.WB rex (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) pop adc retq mov jmpq jle jl stos stos mov movabs pop push jg out (bad) mov rex.RXB (bad) js and add add ja pop bt cmp (bad) stos xchg xchg ja cmp (bad) rex.WRX ja cmpsl rorb mov (bad) xor sti push and mov pop hlt (bad) mov (bad) fbstp adc or adc or (bad) add xchg int jmpq jnp,pn rex.WRXB (bad) test mov and jae mov pop sbb mov (bad) sbb mov (bad) and ss push or xlat nop lret mov fadd lods (bad) loope fcmovnu mov cmpsb andl cmp pushfq (bad) ss rcl xor incl rolb (bad) (bad) (bad) decb (bad) (bad) (bad) decl jp repz mov cmpsb cwtl gs mov xor xchg mov add jge ja (bad) movsb pop (bad) jp mov enterq rcrl std sbb add hlt jae rex.RX rex.WR add mov movsl ds (bad) xchg test ds xchg mov mov movabs xor (bad) and jno in sbb adc fs lods fnsave rex shl jmpq mov mov not lods cmc test cmp test neg stc xor clc cmp test neg stc test bt cmc add stc shr jmpq stc loop fmull jne xor (bad) rex.RB sahf push pop (bad) push mul mov xor out sub in rol cld icebp test mov or (bad) fs sbb repnz or mov jb (bad) (bad) (bad) (bad) std fcmove fisubrl rcll scas add movabs add (bad) or loopne xor pop and (bad) (bad) std jae retq (bad) (bad) (bad) jmpq rex.RB sahf sbb xor sbb jrcxz pop or or jns cmpsl (bad) pop pop rex ss add retq fs (bad) lock xor loopne mov mov data16 lahf cli movabs lret pop mov (bad) repnz and (bad) add pop xor mov test cmp in rex.R rex.WB cs rex.WRXB jmpq jge adc add mov (bad) test xor cmc jrcxz mov ljmp pop sub adc jrcxz rex.B movabs mov mov (bad) (bad) (bad) sti loop xor (bad) (bad) jb stos sbb or hlt push sub rex.RB (bad) (bad) (bad) push popfq push (bad) push pop mov insl data16 adc pushfq sbb pop cmp and and rex.RX cmp or (bad) insl repnz fdivs rex.WRXB cmp movabs test xchg and adc test movzbl movsbw mov xchg setg movzbw jb mov not lea xchg mov movsbw movzbw jmpq ja clc cmc stc imul bt stc add jmpq bswap lea jmpq jne clc bsr movsbw add xor shl shld cmp mov bt rol sub mov add ror not setp not mov stc cmp test jmpq xchg jns (bad) punpcklbw retq adcl mov mov pushq ja je push ds add mov test xor (bad) xor imul callq callq adc add add rex.WRX in decb xor loopne (bad) (bad) mov (bad) jge rex.WRB rex.WRXB (bad) (bad) (bad) sti xchg (bad) (bad) (bad) sbb adc (bad) fcompp jb stos fldt nop xchg lret (bad) lcall out in fistl (bad) pop movabs cmpsl stos xchg (bad) in insl rex.R xchg rex.B and xor sub xor out rex.XB (bad) pushq scas mov mov fiaddl xchg int je stc jmpq fadd mov rex.WRB ds xchg (bad) sbb (bad) fucom in push cmp (bad) pushfq push rex.R loop,pn cmp fildll jg cmp mov cmp sbb mov icebp fnop jp pop lods mov sarl punpcklwd cmp mov mov nop or rex.WXB (bad) (bad) cmp (bad) hlt lock enterq in mov in adc or and stos (bad) rex.XB stc stc or (bad) (bad) (bad) sti (bad) mov cs (bad) (bad) (bad) fs rex.WR (bad) sub movsl lods adc roll lods (bad) (bad) (bad) jmpq rex.WRXB push repnz sbbb mov rex.WB push loopne push cmp mov lahf sbb (bad) jno or in vmovhpd data16 (bad) mov fisttpl mov sbb sbb movslq (bad) movabs cmp repnz jmpq pushq jmpq jmpq popfq rex.WR push jno stos jns adc mov rex.WRXB (bad) cwtl lret cli xchg cli sahf rex.WRB mov rex.XB sahf sbb (bad) faddl jl mov fstl fwait outsb (bad) rex.WB xchg scas xor lret (bad) ds rex.R cwtl mov jno rex.WRB mov jb mov rolb loope xor mov in pop imul test (bad) stc xchg lret insl mov pop cli mov pop (bad) cltd (bad) (bad) (bad) sti mul in negb mov (bad) (bad) (bad) rex.X add add or nop gs loop (bad) ss (bad) stos std in mov (bad) xlat mov gs movabs add rex.WB gs mov movabs cmp out mov cmp cld retq push in rorb andl (bad) pop adc out (bad) push (bad) mov (bad) (bad) mov test sub roll (bad) adc rex.WR (bad) rex.WB (bad) int jrcxz fidivr scas int3 mov jrcxz fistpl int3 xlat lock jno (bad) mov mov test (bad) lcall jbe cmp imul fdivrs sahf clc test jne and mov rclb or movabs add (bad) rex.W rex.WX rex.WXB pop xchg test (bad) mov rex.WR jge add (bad) add cmp sub test add sahf test rex.WXB jrcxz xlat rex.RB pop lock pop (bad) retq hlt cmp mov lahf (bad) (bad) rcrb clc (bad) cld or xchg mov adc xchg sbb adc sub (bad) (bad) and push std cmp mov (bad) sub (bad) adc scas (bad) sbb rol negb stc retq stos xor add cwtl push (bad) (bad) (bad) cli repnz sub (bad) (bad) std (bad) iret mov adc fimull cmp rex.RXB fildl (bad) mov (bad) fmuls sarb loop (bad) (bad) iret popfq (bad) jmpq (bad) (bad) pushq sub retq movabs (bad) (bad) adc in mov pop lock cs in insl adc push stc shrb cwtl test add shrl (bad) adc jns movsbw mov jmpq jmpq movsl or cmp cmc cmpsl sbb roll addr32 (bad) add nop cmp jmp lods sub setb imul leaveq (bad) (bad) rex.RXB mov icebp (bad) lret (bad) stos pop (bad) cmc (bad) pop lea mov (bad) leaveq div (bad) int3 decl stos imul movabs jrcxz rex.B (bad) (bad) (bad) pushq nop test movsb (bad) (bad) (bad) sti loopne adc (bad) (bad) jno (bad) fwait jp lahf iret pushq fs cli sub (bad) nop mov (bad) push and subb jmp rex.WX ljmp ds int3 add lea push (bad) mov sbb movsb rcl shrl ja rex.RX fistpll shl mov jl or btr inc and mov test and bt cmp stc add jmpq sub clc test cmp xor bt jmpq jae bsf mov adc mov sar bswap btc mov stc jmpq jmpq jmpq jmpq rex.RX out or (bad) rex.X rex.RX pop xchg fmuls loopne imul rex.RB jnp sahf rex.RXB add callq (bad) hlt cld ficom fnstcw (bad) loope (bad) (bad) sbb mov cld or bswap (bad) xorb xor jns (bad) sbb mov sbb pushfq xchg pop mull movabs mov retq mov roll (bad) (bad) (bad) std cld rex.WXB (bad) rol movslq pop (bad) (bad) and sub sub (bad) callq addr32 lahf sub pop xchg xchg rex.WB es pushfq stc sub movabs movslq (bad) (bad) ljmp mov rex.WRXB (bad) mov (bad) test and sub insb (bad) je imul jle adc fs lahf lea and test sub callq retq test (bad) mov loopne xchg cmc push ja cmc test shr clc sub sub rol mov bts add test adc sbb mov adc bt adc sub mov stc clc cmp repnz jmpq jne dec bsf (bad) hlt xor bsr clc or bt mov add add ror sar mov bt clc cmc test jmpq jmpq adc cmpsb retq stos jge mov mov push jnp jmpq pop mov add sbb (bad) (bad) imul insb push xchg popfq hlt ficoml or or mov push push add imul pushq cltd (bad) or rex.RXB (bad) (bad) cld retq mov push (bad) movabs (bad) push or movabs incb flds add push or sar jmp popfq push rcl or movsl jb (bad) xchg xchg pop adc je jb stos lret icebp movabs rex.WR xchg rex.W cmp repnz je xchg mov loop push cmp (bad) fcomp (bad) sub cmp pushfq (bad) xchg imul cmp rex.R ds mov cwtl pop jg loope mov sub mov xchg vcomisd callq scas movabs mov roll (bad) sahf lea and mov in rex.WX retq (bad) (bad) in jp add in popfq out rex.R rex.B xor (bad) test retq mov cmp xchg cmpb icebp int mov loopne imul sti testb (bad) incb adc (bad) cmpsl fldl sub xorl nop sahf mov add add cs and jno stos push rex.WRB in ja push xchg push xchg pushfq (bad) in retq xor mov push jo push (bad) ds mov sbb (bad) lea test cld lods (bad) push sub loop outsl outsb retq retq xchg loope add test cmp jmpq cmp test or jmpq jne jmpq jmpq not mov jmpq jmpq notb fdivrl fsubrp lods xchg xchg stos retq cltd es (bad) out (bad) mov loopne mov xchg xchg jbe cmp or je xor hlt imul xor rex.XB fs xchg lret out test cmp mov rex.WX push add callq or xchg cltd (bad) push cmp sub or sbb mov (bad) (bad) (bad) cld mov (bad) (bad) (bad) decl fwait (bad) stc loop shlb out push xor test loop shrl add add jae push jo xchg rex.RB push and sbb xor int sbb sti retq je (bad) (bad) pushq push stc cmp movabs retq mov rex.RX add pushq movabs rex.RB adc fmuls add pushq popfq (bad) and add jrcxz (bad) in movabs add (bad) (bad) and clc jmpq xchg fldt mov lods (bad) (bad) lret movabs rolb fwait mov loop movsl retq jb outsb ss pushq cmp movsl mov cmp (bad) cld mov mov std (bad) (bad) (bad) incl (bad) pop cld testl js (bad) fs (bad) cmc (bad) pop adc lods mov sti sub fstps popfq clc in (bad) pop push jae test (bad) xchg (bad) sub (bad) mov add or mov imull movabs rex.WRX add test (bad) xor rex.WR or mull push cmp jb clc rex.B es mov in (bad) fcoms sti callq iret or adc rol mov bsf shl setns mov not mov stc clc jmpq ffree add int adc movabs add jge pop push rex.WRB sub (bad) add repz push xor sub enterq leaveq jo (bad) jbe loop movabs movabs adc and pushq add add (bad) pop in (bad) scas test jno in insb xchg (bad) out jge (bad) or xor mov and fnstenv pcmpgtb andl repnz sarl outsb and rex.WXB xchg subl sbb mov xor and sbb sub jnp sbb xor pop stc jmpq jmpq je jmpq movabs pop pushq (bad) jae cli callq mov (bad) mov pop data16 js xchg sti out stc (bad) xlat mov push jge (bad) fimul repnz lock fstps in cmp sbb repnz and movabs icebp out (bad) (bad) pop pushq sti xchg adcl hlt hlt outsl mov stos (bad) ficom (bad) add data16 popfq jl in addr32 stc rex.W out rcrb mov jg cmp mov scas sbb (bad) sub mov mov (bad) loopne (bad) loope (bad) pushq jmp (bad) rex.WR and insb loope jg mov rex.R cmp fidivrl push clc movsb leaveq fwait lcall movsb mov mov mov mov and mov out (bad) and lea jmpq in xor xor xchg rex.X mov (bad) in or mov add movsb iret (bad) mov rex.RXB je jnp xchg retq popfq rex.RX movabs mov sbb lahf cmp (bad) pop lock mov sub outsl shll cmpsl lock push xchg xchg (bad) rex.WRX mov and and (bad) sti push mov (bad) (bad) std out mov (bad) stos push rex.X out (bad) rex.RB clc pushfq rex.RXB movslq cltd movl and rorl (bad) jle nop (bad) divb jrcxz fstps js mov nop jne data16 jno (bad) (bad) (bad) incl pop movslq ja lea rex.R or cmc out rex.WXB (bad) pop lea xor jnp xchg adc xor or rex.B jrcxz sub retq fwait and mov in and ja rex.WRXB mov sbb outsb jmpq mov cld jmp test imul pop rex.WB jae test (bad) rex.WXB cmp adc pop push (bad) or jae pushq pop sbb xchg in mov sahf ja cltd or adc cmp in lahf (bad) icebp adc mov mov data16 rex (bad) clc sbb scas add and xchg (bad) loop sub (bad) (bad) sti int addr32 and (bad) (bad) (bad) pop int test lock (bad) mov mov or movabs sbb (bad) or rex mov pop jnp (bad) add rex.RX imul (bad) cmpsb xchg addl test imul fimull mov jmpq jb jmpq jmpq xchg mov (bad) (bad) je ja sbb std rex.RXB mov xor xchg or or sub rex.WX rex.RB xor jne in iret mov jo push mov out or ja xor addl xor scas cld push repnz (bad) and fcmovbe rex.RB cmp mov rex.WRX sub (bad) (bad) (bad) sti movabs xor enterq push cmp mov (bad) (bad) pushq (bad) push sbb popfq mov (bad) notl out fcmovb faddp pushq sbbl (bad) mov test js and (bad) mov jno jp rex.RXB mov jg adc punpckhwd sbb (bad) in callq sti rex.R and movabs iret (bad) fdivrl out out repz fsts cltd popfq cmp xchg (bad) fsubrs (bad) (bad) jo add jno jb sub sarl pop (bad) movabs (bad) or in mov jne push pushq movsb fs cwtl sbb xor sbb nopl sub sub (bad) pop adc nop jle rex.X xchg sti jnp (bad) rex.XB fwait iret and out in (bad) rex.R jne push pushq out retq mov sbb rex.WRXB mov stos or pop subl (bad) adc (bad) decb std (bad) sbb lods loop in sbb mov (bad) pop lret mov sbb xor fnstenv and or lods fidivl shrb rcll mov jae rex.RX adc lret pop icebp push clc insl or mov cmp pushq jns gs rex.X cmpsl mov sbb or xchg xchg callq push hlt (bad) fcomi movslq (bad) test jmp rex.RX clc xchg (bad) (bad) fild xchg test mov retq cld and fiaddl sbb cmp (bad) mov jmpq jns mov rex.WRB push rex.WRXB pop movabs mov mov loop cmp (bad) cld in (bad) jle and mov pop xchg rex.WR mov adc test rex.WRB (bad) (bad) (bad) (bad) ss fmulp fwait cmp jrcxz or (bad) xchg stos mov mov cmp mov sub (bad) lock rex.WRB rex.WRB ss (bad) (bad) (bad) push (bad) adc outsl cmp mov or fisttp jo (bad) (bad) (bad) (bad) callq sub xor xor jno pop sub adc rex.WRXB lock test (bad) (bad) xor mov mov cmp cmp ja mov cmp (bad) xor rcl jnp fsub mov in xchg (bad) xor decl add jmpq mov mov jmpq sysenter pop cli mov xorl (bad) (bad) cli sbb xchg cli callq mov (bad) rorb pushfq js fwait push cmpsb and leaveq (bad) (bad) add loop cmp cwtl pop (bad) jle cmp mov cmpsl rex.R pop lret imul (bad) scas and and pushfq add xchg leaveq int push nop out rex.X (bad) out mov movsb cltd int pushq xchg (bad) (bad) (bad) decb (bad) (bad) (bad) decl xchg (bad) rex mov or jns mov mov rex.WB adc xchg in sub xchg sub xchg jnp fdivrl adc jne and imul mov lea sub icebp and mov jmpq jne jmpq clc add cmp cmp bt clc movzwl and cmp mov clc add clc stc mov bt cmc clc test test jmpq (bad) xchg cmpsb rex.WX sub add lods xorl jle mov fcoms ss mov adc xchg rex.R jne adc in jno or movabs sbbl jno mov callq cmpsl (bad) pop popfq mov test data16 (bad) xchg test ficompl xchg mulb decb (bad) (bad) (bad) (bad) jge subl sub (bad) xchg adcb xor pop mov push mov cmc jno test stc or imul cmp stc imul clc jp mov jg xor jge jno jnp adc jl push fdivrs jrcxz mov lock pop sbb fwait mov adcl popfq (bad) fidiv mov or (bad) icebp mov out or xlat mov mov not jmpq jmpq sbb rorb rex.WB lret rcl adc jmp (bad) (bad) xor rex.WR addr32 xchg mov cmp lock cmp clc (bad) jo (bad) cmp mov ja nop test add jne xchg and mov (bad) xchg rex.RXB (bad) vmaxps mov (bad) add jge test adc lods xchg mov (bad) (bad) cld or jmpq (bad) (bad) fwait jb mov mov sbb insb cs lret mov pop rdmsr movsl nop dec push sub add (bad) xchg ja movabs out and xor mov lock sbb (bad) or jmpq sbb jmpq push (bad) fldt vpandn xchg movsb xchg (bad) out negl insl or mov rex.RB sbb (bad) jmpq add movabs out sbb notl mov sbb (bad) (bad) sti mov (bad) fimul rex.X (bad) (bad) std or mov sti pop repnz rex.WRXB (bad) jo mov icebp movslq mov (bad) (bad) decb jrcxz (bad) pushfq cmpsb and add outsb (bad) insl pop (bad) in sbb movsl xchg mov (bad) roll scas mov mov lock test iret mov shll ja xor xchg mov sbb pushfq mov rex.WRX bswap bswap movzbl jmpq imul test add jmpq repnz iret nop stc sub test (bad) or mov and pop or movsl adc pop (bad) scas lea icebp sbb mov (bad) fistpll movabs and lret imul rex.WX rex.WRXB jl (bad) scas (bad) movabs push movabs mov cmp (bad) jl jo jl jrcxz lods inc sarw jg test pushq jrcxz (bad) (bad) (bad) cld pushq (bad) (bad) (bad) (bad) stc rex.WXB xrelease callq icebp and mov (bad) add add stos sub sub ljmp (bad) es or mov sbbl in fimull outsb divl rex.W rex.RX jg mov cmp adc push or jbe add movsbw pop jmpq stc cmp and test bt add jmpq je jmpq pop (bad) xlat fiaddl pushq mov icebp stos lahf and cmpsb retq nop (bad) (bad) (bad) lods mov adc and mov add je pop mov rex.WRXB jne jb (bad) (bad) (bad) sub leaveq imul fnstcw lret loopne jmp (bad) (bad) stc out mov movsb ja (bad) imul xchg retq mov adc xor gs (bad) adc mov jmpq addr32 mov (bad) rcll icebp movabs or sbb rorb loop stos xor subl movsb sbb int3 xchg enterq mov int3 clc movabs fbld clc add std repz movabs loop rex.WRB add (bad) rex.XB lea js popfq xchg scas push xor (bad) (bad) (bad) (bad) std mov movabs insb or negl divl out insl lahf mov out cmpsb (bad) lret (bad) mov (bad) (bad) jmpq wbinvd (bad) xchg sub and or push callq sbb hlt movsl enterq hlt in movabs adc sbb cmp rex.WRX imul (bad) (bad) mov icebp popfq cmpsl mov repnz jrcxz add xchg bt clc jmpq in out or outsl lahf mov rex out lods sub or repnz fnstcw in iret out xchg ficom mov sbb mov or (bad) pop or push jl (bad) or mov (bad) sbb (bad) (bad) jge (bad) clc mov fwait sub (bad) (bad) (bad) sti cmc (bad) jmpq (bad) incb loop shlb (bad) fistp cmp outsb in mov mov (bad) mov testl add rex.WRB outsb jge rex.XB std rclb (bad) movsb jbe int std push or in xorb test pop xor cwtl cld rex.WR out rcrb adc xor in sbb sbb xor push repz cmc repnz jmpq jmpq sub es (bad) mov rex.W cmp movabs fisttpll (bad) (bad) (bad) cmpsb psubsw sub mov (bad) mov sub repnz mov loop mov cmp mov (bad) lret add out (bad) push mov shr xchg popfq mov (bad) callq (bad) mov push loope or jge int3 lea push xor lea imul (bad) (bad) sti loop callq (bad) (bad) jae pop outsl out mov or push (bad) imul xchg (bad) movslq rex.WX in fbstp lahf mov mov cmpsb stc jmp sarb mov cld push (bad) xchg jbe ror es or (bad) rorl (bad) popfq or adc or pushq sbb sbb (bad) ror rolb insb rclb test sbb shrl movsl out xlat cmp sarl sub iret mov insb push or mov jmp jle sbb jrcxz imul jmpq cmp movslq (bad) leaveq (bad) xor addr32 popfq sub push rex.WXB rex.WXB rex.RXB (bad) jnp sbb (bad) (bad) (bad) sti popfq or rex.B (bad) (bad) (bad) (bad) sub jle (bad) jo movabs (bad) (bad) (bad) ljmp outsb xchg push or mov and mov movslq std adc push or add (bad) sub ds out xchg mov insl leaveq mov (bad) sbb add movabs fsts add add add add add and add push (bad) add add add add add jl sub fildl add sbbb add add add pop sub movabs add add add add add add mov add add add sbb fcoms add sub add ficomp add add add add add sub add add in jb add gs movsl sub and xor rex.WRB lret cltd adc (bad) xor rex.RXB xlat pop scas test or (bad) pop in and (bad) js mov add xchg xchg mov js mov jns sub xchg and (bad) out xor fistpl or jmpq (bad) and stos or jmpq mov pop jg xchg and out cmp mov xchg sbb sbb or imul insl movslq pop xchg rex.RX mov xor cs mov out movabs test pop rex.RB rex.R cmp repnz jle out add adc mov out movslq mov xchg rex.X hlt movsb jrcxz adc jns jns ja jl (bad) movsb (bad) (bad) sbb orl jne jno mov mov fs (bad) mov movabs xor in (bad) (bad) loopne in cvttps2pi push scas push callq rex.R fchs adc lods lea (bad) xchg rex.RX rex.WRXB mov ficoml xor pop xor cmp push movsb rex loop loopne mov leaveq cmp stos cmp imul jge mov sub pushq jle insb sbb iret mov add (bad) movsl push rex.X xchg jmp addr32 callq (bad) (bad) (bad) mov push lea fwait mov (bad) jnp in xchg in scas (bad) rorb add push xor sbb pushq xor (bad) jae leaveq popfq adc stos cmp push repnz (bad) (bad) shlb sbb movabs (bad) roll fcompl (bad) xor (bad) xchg fs rex.R rex.WX sbb je insb sbb movabs and pop cs jne (bad) rex.WR xchg adc xchg pop cmp sbb adc (bad) and je test mov and (bad) movsb add rex.WRX pop jmp pushq sarl (bad) (bad) movabs (bad) mov xchg (bad) rex.R jno (bad) rex.RX cmp push xchg fs scas sub (bad) lret (bad) rex.X test xchg test fwait mov sarl stos rex.WR in fldcw jb loopne nop out mov pushq outsb retq xchg cmpsb mov rcll jne (bad) clc mov mov int rcll cmp jo adc movabs mov fsts (bad) mov enterq (bad) out xor and sub test adc (bad) cmc and xchg mov cmpsl (bad) stos callq (bad) (bad) xor rep adc jbe cmp shll sub sbb fiaddl or es hlt stos adc ficom in mov cltd retq lret sub movsl sti rex.WX movabs (bad) rcl fildl callq gs (bad) adc adc mov clc mov sub fwait adcb sub lret fwait cs push add rex.R cmp test lahf lods pop sbb rex.WR or rex.WX (bad) xchg sbb cmp fadds push mov mull ds lock jle fistl (bad) clflush lret or imul lods cwtl cli pop rex (bad) pushfq mov (bad) mov icebp or (bad) push rex.R shll mov mov cmp cltd test sub (bad) shrb es imul and add stos and rex.RXB pop rorb adc cmp mov in movabs mov fs xchg (bad) mov pop ror pushq cltd (bad) mov cltd rex.RXB jbe add jl pop enterq addr32 sti mov and push je jmpq jmpq in adc shrb mov (bad) sub es add jbe adc enterq push cmp rex.WRX es jrcxz out cmc roll jae movsl jae jns (bad) mov test lret movabs out movabs xchg jrcxz rex.RXB out push fsubr rex.WR int3 add rex.WB jmpq gs cmpsb jae mov rol adc mov rex.W pop cmpsb js (bad) (bad) or xchg mov rex.RX xor (bad) cltd (bad) fbstp test cmp rex.RX sbbl pop vmread mov mov jns lret rex.RXB pop jno,pt mov rex.XB orb sarl sub jmp push push test add mov retq xchg imul or adc std mov scas (bad) pushq lock idivb movabs pop mov xor in fimull xor sbb imul xchg std xchg callq adc (bad) outsl mov cmp (bad) mov (bad) cmp sub fstpl xor jrcxz add fcompl jb xchg out sub movabs push (bad) sti cmp (bad) mov in jge lret add (bad) iret fstl fimul xchg mov rex.WRX pushfq out lret jo (bad) in clc leaveq (bad) or gs in test sahf rex.R jle xor (bad) pop (bad) (bad) test cmp in (bad) push (bad) (bad) hlt xchg outsl sbb data16 leaveq cltd pop imul repz pushfq add outsb push mov cmp sahf mov cli movabs xchg (bad) and addr32 xchg cmp pushq lods jp faddp and data16 insb rex.X mov shll (bad) cld fs rex (bad) xchg (bad) xor (bad) mov outsl jl pop or add lret jmpq int3 fcoms movsb add pop jne sahf jle scas pop in popfq scas xchg (bad) (bad) xchg lret or adc xor adc mov jnp (bad) imul (bad) hlt stos xchg sub (bad) stos imul jae cmpsl xor test (bad) xchg sub mov test (bad) mov and jae scas gs jo xchg faddl fcoms outsl add rex.W rex.WB xor (bad) sub fs test rex.R enterq fist (bad) fsubrs lret imul add add xchg and retq (bad) pop push xchg xor movsl outsb fs (bad) loopne clc mov es rex.WXB mov xchg cmpsl jns sbb mov icebp rolb sub add add (bad) in push add mov rex.WR pop mov jno fstpl pushq xchg setbe jnp repz and std sub and data16 movabs rex.R sahf loope addr32 loop mov in xchg (bad) and and hlt mov int xor (bad) je sub sahf sub sbb add sti movslq mov (bad) xchg pop (bad) or in push cmc bsf adc and jl ja sbb push rex.WRB cs rolb xchg fwait movabs (bad) cmp (bad) mov movabs pop (bad) (bad) sbb enterq scas (bad) sub cli lock (bad) xlat cmp rex.X (bad) (bad) stc mov lock stc movabs rex.X adc jmp and icebp int movl or mov pop pop out out jne movabs lret jl (bad) mov scas jg fldl add fldt add (bad) (bad) leaveq movabs mov mov outsb (bad) sahf sub retq test push cld and or jbe imul pop xchg repz jne loopne (bad) decl jno mov sbb rex.R ja fs (bad) (bad) movabs (bad) adc (bad) jnp scas jnp cs sti xor sbb push loop mov stc (bad) and cmp sbb lods scas jbe callq push rex.RB (bad) stc cmpsb negb jnp int xor rex.WXB outsb rex.WX mov rex.WR loop lock pop push sti jle test movabs xchg and add rex.R movsb int3 (bad) adc out sbb out clc sahf jmpq pop data16 mov loope rex.WRB decb pop or xchg sahf or pushq sub fbld sahf or mov out rorb mov (bad) mov sub in or ffreep fsqrt or mov push add callq (bad) (bad) rex sub xor or ss rex.RB fisttpll and ljmp (bad) rex out (bad) fidivl cwtl lahf (bad) sbb adcb sti mov rcrl jnp (bad) rcrb rex.WRB data16 (bad) cmp movslq pop and rex.WXB loop pop mov push shlb sub mov cltd iret (bad) fs loope movslq (bad) add mov adc push xchg outsb (bad) xchg mov mov cmp leaveq rex.X xor mov pushfq mov mov xchg jae xor clc mov rex.WXB lods mov (bad) jo out sti mov adc pop and pushfq cmc jo cli test sub movabs sub movsb lock mov cwtl jae rex.RX xchg rex push out imul loop xchg add (bad) flds out push mov (bad) adc (bad) (bad) fisttp movabs cmp sar adc ss test xlat (bad) (bad) in rex.X movsl rex.RX (bad) in cld (bad) movabs repz int fcmovu popq xchg and mov pop (bad) (bad) out iret scas insb imul jg (bad) pop rex.B fmuls (bad) add pop mov and mov int movabs sbb je sub fwait rex.RXB sub cmp hlt pop jge pushfq (bad) mov sbb in mov mov push (bad) pushfq (bad) lea jge sahf (bad) add push addr32 mov fldl cmpsl cs sbb sub rex.RXB (bad) out mov cmpsb jae xchg out xor mov test (bad) push enterq xchg (bad) rex.R xchg pop cmpsb and jae sub retq fbld gs (bad) xchg std rex.WB std pop mov int3 sub (bad) xlat (bad) mov mov xor pop scas sbb rex addr32 jns rex.WRB and (bad) retq (bad) out (bad) cmp and cld cli (bad) movslq jno ss (bad) repnz (bad) retq rex.WX mov (bad) rex.XB ja stos (bad) mov in clc or rex.R rex.WR stos (bad) and (bad) mov ds movabs rex.W add mov xchg (bad) test jnp (bad) mov pop mov rex.WXB mul sbb xchg movabs push mov sbb rex.RXB stos mov sahf sarl pushq (bad) xchg in stc sbb rolb js cmp (bad) andnps adc push jb setae push add cs adc sub mov fldenv (bad) mov jo pop sbb cmpsl sbb mov and xchg mov and lret mov lods in pop jmp (bad) (bad) stc cmp jg fdiv xchg (bad) test pop test movabs imul or pop (bad) sbb (bad) hlt sub lods pop mov rex.RXB pop push out xor je outsb sbb or rex.XB fwait pop (bad) test jb cmpsb (bad) or (bad) cld jl cld fwait lods mov or xor rex.R pushfq shr mov outsl clc rex.X adc mov shl jb pop insb or sub addr32 adc xor xchg subl sbb sbb sub xchg adc lret and in xor mov jg in insb rcrb add add sub pop add (bad) sbb sbb xchg add add add jmpq je lea mov not mov movzbw lea jmpq add rex.WB imul rex.XB je movslq push movslq outsb rex.B fs jo outsb rex.XB jne je pop jrcxz jg rex.XB cmp mov xor addps in movsb adc mov flds insb pop mov pushq pop mov shl (bad) add (bad) lret frstor add gs (bad) cs add imul add pushfq (bad) icebp movabs adc fcmovnu xchg xlat xor mov xchg sub sbb out mov leaveq xchg cld rex.WRX jle mov xchg movabs cld movslq fild (bad) (bad) (bad) (bad) hlt movsb (bad) jo or add add je pushq (bad) js stos std leaveq movabs insl subl xor fs and sahf mov rex ss (bad) movabs cmpsb (bad) (bad) incl cmp mov sbb mov adc retq and jle in movsb adcl mov (bad) rorl adc fdivrs cld (bad) lods xchg (bad) mov add test in fisubrl mov callq mov fdivp push rex.RXB cmp jmp mov rex.WRX sub jo sahf xchg cmp sbb or (bad) (bad) (bad) (bad) iret roll (bad) (bad) (bad) cld rex.WR rex.X (bad) (bad) (bad) fsub jno cmp mov mov add jmpq cmp xchg ja sbb sub or insb sub pop cmp rex.WRXB rex.WRXB sub (bad) test xchg (bad) and add add ds mov packssdw imul mov xor sub test xor rex.B mov (bad) outsb pushq (bad) imul movslq (bad) in cli mov (bad) outsl or mov sbb mov sub add or (bad) in sub bt push btr mov sbb sub lea setns lea jmpq rcl mov add sbb shld mov cmp sub jmpq fbstp mov repz hlt cmpl outsb rex.WXB lods shll repnz rex.RB rex.RXB pushq pushfq rex.WB jo (bad) sbb movabs xchg out (bad) roll mov (bad) sub fisub xor push push xchg enterq jne mov mov mov fisttpl sbb retq test xchg rolb jo mov jo rex.WXB data16 jge and xor sub (bad) (bad) sti popfq (bad) xchg (bad) cld (bad) (bad) (bad) (bad) sub lahf orb or (bad) (bad) ljmp jne sub movabs pop rex.R pop lret mov xor lods (bad) (bad) jl gs rex.WB rol or sahf mov xchg insl fmull rex.WXB mov pop cli rex.RB movslq jno iret hlt jmp mov pop xchg (bad) pushq mov rex.X push cmp cwtl add xchg jae rolb push mov pminub out jnp lods sbb fisttpll push cmp cmp lods lea jg outsb rex.WB (bad) enterq (bad) loop mov (bad) and imul rex.WR rex.WX andl jns mov sti popfq jle imul adc (bad) cmpsl cmc incl jo (bad) fdivrp (bad) (bad) ljmp outsl adc jb cmc movabs loope xchg rex.B (bad) sti movabs and test mov (bad) mov mov push (bad) rex.W sbb nop and adc fdivl jg fimul pop jp test rex.WRX mov xchg idiv pushfq rex.WB adc mov or test stos fidivr movabs mov (bad) (bad) mov loope pop fist mov cld rex.WRB rex.WXB (bad) mov add loop xchg cs cmc (bad) xchg mov leaveq (bad) (bad) (bad) (bad) decl mov ror pushq rex.RB frstor or sbb push mov in jle cmp jns rex.XB xor out xchg scas push test pop adc add insl cmpsb cs xchg fst adc rex.RB rex.XB in mov push (bad) jo out mov repz xchg negl mov outsb icebp cmpsl (bad) cmpsl or (bad) sbb test scas int fwait and (bad) jb insb mov sbb mov xchg data16 cld mov sti popfq cmpsl or cli test outsl pop xchg adc in cwtl rex.RX (bad) mov sahf nop rex.W xor (bad) mov mov mov (bad) (bad) test int3 stos cld and (bad) sub rex.X (bad) rex.WB rex.RX roll xchg out (bad) adc push (bad) ss loope xor rex.RB cmp enterq and xor (bad) stos sub adcl adc adc (bad) (bad) cld and test mov sti (bad) xchg test push (bad) out rex.WB fcompl cmp shr or mov (bad) adc cli ss movabs add or hlt jno sti (bad) sarl xorl (bad) mov repnz jp and sub pop adc js mov jge movabs test (bad) sbb (bad) imul mov sbb and mov insb xchg fistpll cmp jnp movsl (bad) out mov fst jb rex.WRX pop sub test (bad) mov and rex.WRB lock cs lods or rex.WRB jno jno and loope adc or (bad) push mov cmp jl sub hlt out (bad) add (bad) (bad) sti insl (bad) cmp rex.RXB (bad) (bad) std (bad) outsl push rex.WX cmpsb or cli rex.WXB ucomiss xlat xchg pop fsubrl (bad) mov rex.WRB mov ds movabs rex.X pop xchg adcl adc push (bad) cmp xor insb jl jne mov or js mov lret (bad) sbb (bad) sub (bad) push out (bad) jb pop repnz sbb rex.X test (bad) movslq outsb adc jg xchg leaveq pop movsb sbb mov out jrcxz leaveq push jmp sarl mov xchg or mov jmp fisub (bad) lods mov sub imul and stc sub out pushq outsl int3 pop adc retq rcrl popfq sub and (bad) lock (bad) (bad) cld xchg fstpl (bad) jmpq jge pushq gs add mov (bad) loop movabs jnp test ja shrl push xchg mov pop push (bad) cmc jb enterq add stos icebp xor add push mov jbe jmp push xchg jae hlt lods (bad) or lods mov fisttpll outsb fmull in sbb (bad) mov (bad) push gs sub pop rex movabs sub jmpq cmc sub stc cmp jmpq repnz rex.WR mov std incb ds movabs mov pop mov pushfq mov adc movsl (bad) cmp (bad) or lods sbb test and (bad) rex.WB addr32 subps imul nop xor rex.WXB (bad) sbb pop hlt fisubr loop rex cmp mov test jl icebp and (bad) (bad) (bad) cld (bad) xchg rex.WX (bad) (bad) (bad) dec sub pop push idiv (bad) (bad) jmpq (bad) incl add add mov pop xor (bad) (bad) in rex.X (bad) push retq (bad) or clc sahf xor (bad) js cmpsb cltd mov (bad) cmp pop psubd add xlat out rex.WX xor (bad) (bad) sub bt bt test bt mov cmp jmpq jae adc xadd mov btr sbb bsf xadd mov movzbw mov clc jmpq jmpq je not mov jmpq pushq jmpq jmpq test jmpq or ja adc rex.W stc fnstenv cmpsl (bad) sbb rorb push (bad) int3 add or repz add jp cmp lahf rex.WXB rex.WR packuswb adc mov (bad) xor sbb cld pop bnd std ja int3 sub sbbl movabs mov jno in cmp (bad) (bad) (bad) decb insl loope mov cmp rorl jbe or (bad) mov int3 add sbb sbb mov (bad) lret jmpq cmp fadds lods xor movabs (bad) outsb sbb cmpsl js push and xor es (bad) (bad) decl fsubrs xchg mov jo loop mov movabs (bad) movsl cli addr32 (bad) xor sub pushq iret jge loopne rex.RXB cmp sarl stos cmpsl (bad) repnz (bad) fcmovb add jmp sbb loope rex.X insl mov out lea mov fmull sub decl mov add jne repz pop rex.WB fwait cltd clc jrcxz out je movabs xor push (bad) xchg add iret jmpq mov xor scas hlt adc (bad) xchg lods psubusb mov push movsb add mov cmp cmp and (bad) jnp in sbb sbb xor or (bad) fcoms lods mov jmpq rex.WXB xchg rorb es rex.WRB (bad) xchg insl clc xchg sub sti outsb or xchg mov (bad) mov jae test rex.B rex.WXB repnz (bad) (bad) decb add ja iret adc pop add rolq xchg lret cmpl xor add adc xchg add lea cld push cmp sub (bad) xchg hlt (bad) enterq retq and rol stos mov mov pop idivb cmpsl movabs (bad) int out rex.W test cmp mov and (bad) (bad) and retq xchg rex.W (bad) xor es sub rex.WB or or xchg xchg rex.RB or lods int3 sub (bad) iret mov cld push and int xor rex.WB pop mov rex.WRXB rex.XB pop lock rex.XB cli or jp (bad) std mov test rex.WXB lahf lea mov adc fisttp test pop int3 jrcxz cmp rex.XB add xor (bad) (bad) (bad) decb mov xor repz (bad) xor test or push fisttp rex.WRB sbb sbb push mov (bad) (bad) (bad) decl addr32 mov fcomip movsl add mov mov mov (bad) mov xchg rex.WRXB hlt sbb mov (bad) callq xchg movabs std lea (bad) add (bad) in mov add xchg imul std mov rex.XB xor (bad) subl repz adc out hlt add mov push ror bnd nop (bad) adc out mov mov fadd lods lret push cmp icebp push ds mov fnstcw (bad) or fcompl mov incl lret (bad) xor callq (bad) jbe test sbb loopne mov mov and lea add jmpq jmpq jmpq jmpq mov stc add sub movsb jp rex.B (bad) shrl push cmp movsb scas sbb cwtl jnp rex.WR lea jb (bad) cmp mov mov cmp lahf imul jns cs (bad) test or js mov pop jnp fistpll rex.X (bad) icebp cltd pop jne test fcomps cmp adc add mov (bad) (bad) (bad) (bad) xchg (bad) jne (bad) push jp mov fst adc add add adc insl stos std jle in (bad) cltd push mov and rex.WR push jle rex.WRB es mov cmp flds rex.WRX out jle adc nop scas subb rex.WB ja dec dec add cmc add rol adc cmp not add rcr not xchg xor mov jmpq ja xor pop outsl sub fstp or lods cmpsl xor xchg jo (bad) lea (bad) (bad) nop jp shrl jbe cmp rcl rclb outsb pushq cmp (bad) cltd mov enterq mov (bad) mov and and jp fildl vmovdqa sbb ss pop (bad) test add jbe rex.RX fstpl cmc (bad) pushq cmpsl (bad) sub in add sti jg cltd push (bad) (bad) (bad) (bad) decb (bad) (bad) leaveq sub jns int3 std flds imul (bad) (bad) in movabs pop or mov xlat and mov jge or (bad) popfq rex.RXB ja xchg add push es lods and cmp add callq pushq xor pushq push (bad) mov movabs es mov movslq movabs jno jo sbb test fcoml fldenv pop xlat (bad) xor loop movabs movabs xchg (bad) mov callq pop xor mov mov jp (bad) fmull test adc adc xor cwtl mov mov fisubr adc (bad) (bad) (bad) (bad) jge popfq icebp (bad) push rcl int3 xchg ja mov adc pop lock pop xor mov (bad) (bad) lcall rolb pop xor rorb mov (bad) or sub pushfq iret xchg scas jle rex.WRB rex.XB jne rex.B jrcxz jae je mov add xchg rex.WRB xchg mov (bad) or callq adc dec add bswap sete btc rol mov stc cmpb jmpq and test mov retq (bad) imulb cli movabs outsb or rex je xor int3 iret out adc sub mov rcl sub adc mov loopne (bad) mov push fsubs or repnz cmp rex.WRB push repz mov push cmp adc and iret enterq xlat xor fwait xor add test pop (bad) movslq xchg fwait (bad) cmp mov int3 lahf rcll std push (bad) add jmp je sbb (bad) jns rex.WXB outsl movsl jae repz (bad) cltd (bad) (bad) test fidiv sahf add lock shrl or jg rex.WRXB shrb xchg adc (bad) mov (bad) (bad) (bad) cld (bad) (bad) mov xchg (bad) (bad) (bad) (bad) test in xchg add jno data16 js in sub repz xlat or mov fmuls rex cmpsl jno movsl xlat xchg stos retq push rex.X add add sub (bad) add fdivr lahf jmpq xchg (bad) fwait mov push sub (bad) jp and pushq add (bad) xor in adc rex.W (bad) movabs mov incl (bad) push cmp pushfq mov jae movabs pop addr32 popfq rex.W cmp scas (bad) add add stc fscale rex.RX lea cs rex.WXB int cli pushq rol outsb add sub int and pushq rex.WX fidivrl insb (bad) test loopne mov movslq (bad) (bad) std (bad) lock lret add add imul cmp roll cli cltd or (bad) fwait add (bad) rex.WB out callq rcrl or rex.RXB xchg (bad) imul rex.R jge jmpq jmpq add add add add sbb imul add sbb sub sbb out (bad) add lock cmp sbb rolb add add lock pop sbb repnz sbb insb sbb or sbb jl sbb cli xor add sbb mov sbb rcll sbb pushfq sbb fiadd add sbb (bad) jns add sbb lret rex.RXB mov sbb int3 sbb lea add lock fcompl sbb shrl (bad) lock in sbb add add lock cld sbb imul lock or sbb imul add sbb movabs fsts add add add add add and add push (bad) add add add add add jl sub fildl add sbbb add add add pop sub movabs add add add add add add mov add add add sbb fcoms add sub add ficomp add add add add add sub add add in jb add sbb add and xchg jns adc mov imul and adc lahf rex.WRXB rex.WRXB pop or int3 stc or icebp fwait pop (bad) rex.WR rex.X (bad) fsts lods fadd jns movabs insb cmpsl flds jno rex.WR and ss lahf out in xor sti (bad) (bad) (bad) cld push lahf movabs push and rex.RXB mov or jnp (bad) xorl (bad) sbb mov movabs pop adc add jns fwait sbb add add or stos pop ficom rep jmpq imul mov cmp repz (bad) insb nop add mov sbb movsl adc popfq mov xor pop or enterq or add decl out or pushq sti decl xchg ja decl callq mov bswap add cmp mov jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add fidivrl ljmp cmp imul cmp cld fs sbb (bad) stos mov add xchg xor (bad) mov or adc (bad) js (bad) leaveq cmp (bad) fdivp mov jne push test fdivp callq (bad) (bad) mov movslq pop rex.B cwtl std (bad) add in sub cmp mov (bad) jnp movabs jmp or retq rex.W mov rex.WRX jae movabs in sub add add adc fsts mov fs rex.WR nop mov scas (bad) or pop xor rex.B cmpsl rex.RX pushq push (bad) imul cmpsl clc jle jge sub rol sbb cli fwait in mov pushfq rex.WB insl test sti inc rex.RXB clc cmp cmc cmp test jmpq jmpq jmpq add add rex.RB push push mov out mov mov jb mov sub pushfq not or rex.XB rex.WX (bad) or xor mov cmp lret iret adc push and out cmpsb shlb movabs (bad) (bad) (bad) dec pop imul jb rex.WX mov rex.WXB (bad) sbb (bad) rex.WXB or jmpq ds pop jae movsl xchg and add rex.WX mov rex.WRB in or adc or movabs sbb fldcw (bad) push (bad) (bad) pushq insb push jns xchg data16 rex.WRB mov and mov negb sbb or rex.XB popfq int3 xchg int jg and in jrcxz fs (bad) out (bad) sbb sbb (bad) loopne cmp rex.WXB insb rex.WRXB rex.W test add rex.WRX adc (bad) mov xchg lcall rex.WB fnstenv xor (bad) (bad) sti mov (bad) decb xchg mov (bad) sbb frstor add or (bad) push movabs sub sub jl xchg insb add mov pop push cmp cmpsl push rex clc movsl mov xor fs lods mov (bad) add jo jns insl pop and lods imul (bad) out or cmpsb sbb or jno popfq stc cmpsb sbb test sub retq (bad) cmp mul adc push push adc rex.WRXB rcrl pushfq mov (bad) (bad) mov pushfq or mov (bad) and lods (bad) rcll pop adc xchg mov adc sbb (bad) add (bad) lods jp sbb mov pop (bad) jae rex.RB jge and fisubrl cmp (bad) or popfq mov scas in (bad) (bad) (bad) (bad) (bad) jmpq push (bad) sarl rex.WX vsqrtps rex.WRB cld rex.RB (bad) movabs fsubr mov jb,pt and rex.WX mov xor mov cmc clc jmpq mov hlt ficoml and cmpb (bad) fcoms (bad) in fsts cmc and callq (bad) mov mov callq xor jrcxz mov shr pop rex.XB imul adc jae xor movabs sbb xor rex.X enterq gs add pop (bad) callq xchg jns sarl int3 rex.WR loope xchg (bad) ja std sub out mov pop hlt jle cmp (bad) (bad) sti retq push rex.WXB push repz mov pushq int3 imul int (bad) (bad) callq clc mov adc movabs lods int3 ds decl sbb xchg mov xor (bad) and cmp in sub sub loop lret movsb sarl sbb addr32 jae hlt (bad) mov jmpq fs cwtl (bad) mov rex.WRB or movabs and push (bad) sti pop test mov fcoml push xor test cltd xchg jae rolb (bad) add test add pushq mov xor imul (bad) (bad) fstpt mov (bad) (bad) std std jno (bad) add add or xchg (bad) (bad) imul fidivr rex.WRX int3 movabs jle lods add push sub xor (bad) jge outsb fwait cld rex.WR hlt (bad) mov xor xchg std jrcxz mov and cld or pushq (bad) mov fstp callq js (bad) (bad) enterq and (bad) scas rex.X (bad) repz adc (bad) (bad) mov adc pop movabs rex.WB sti adc xor int3 scas ss mov xor ds mov es sti sub retq or scas (bad) (bad) (bad) (bad) sti rcr stc sbb (bad) (bad) (bad) push outsb (bad) rclb jl sahf mov or cmp (bad) (bad) callq jno mov rex.R lahf (bad) (bad) clc mov movslq jbe ja xchg fildl push (bad) mov scas callq rex.WB rex.X rex or xchg xor (bad) ja mov xor xor outsb xchg rex.WX fiaddl stc stos sbb retq movslq ror in cltd rex.RXB xor add in cli mov loop imul iret push retq and lock loope (bad) jns shl (bad) adc lgdt (bad) (bad) (bad) (bad) incb ja rorb sbb lock lahf lock cmp (bad) (bad) (bad) std stos push xchg (bad) cmpsb add add (bad) xor je out mov and or xchg lods notl sub lods xorl (bad) pop jbe loopne (bad) (bad) sbb lahf mov (bad) out mov pushq sarl sbb callq pop sub add (bad) (bad) stc cmc or jmpq xor add mov mov sbb callq jnp sub pushfq add jmp mov xor movabs mov pop pushq rex.XB lea jmp mov push xchg push test cwtl xchg rex.WX ficomp adc (bad) imul sar push movslq test (bad) (bad) (bad) std mov ja rex.WRB add sub (bad) pop repz in mov or test or (bad) and notl push jno,pt popq repz movsb fidivrl (bad) stc adc movsl xor mov add jge rex.WRB rex.B rex.WXB xor je jmpq idivl lahf sub lea jmp jns test push xor xor lock (bad) (bad) fucom in fildll jb push (bad) rcr pop fbstp (bad) popfq insl int fldcw lret sbb (bad) movabs (bad) (bad) (bad) sti sbb (bad) (bad) (bad) std lods (bad) mov jle js cmp jmpq out (bad) callq cmpsl cmpsl mov and lods cli (bad) pop in cmpsl sub sub int3 outsl nop fucom and or js icebp movabs (bad) xor jle (bad) (bad) push (bad) fisttpll add ficoml mov sbb loop in in mov std xchg mov jmpq in lret scas (bad) mov cmpsb lea adc movabs pushq pop add jae xchg (bad) cmpsl leaveq retq (bad) out addr32 mov xor cmp sub jbe (bad) cmc fstp pushq jl,pn jrcxz leaveq sti xchg faddp adc mov sbb pop scas (bad) cmove cmp rex.XB enterq hlt stos sbb in mov outsl sbb cmp (bad) push jp jmp std (bad) cmpl cs mov stc jnp rex.WRX mov xchg (bad) (bad) std ja lock (bad) add or sub rex.WXB cmp mov outsb (bad) xlat mov jg rclb rex.RX cld out rex.WR pop and cmp mov mov (bad) (bad) (bad) mul mov test mov cmp rex sbb fistp or sahf rex.R roll mov cmp shrl outsb cmp push movsl outsl cmpsl imul pushfq lea jnp pop cltd jmp xchg retq mov sahf cmpsb pop push andl or test rex.WB sbb std fiaddl loope jmpq movabs imul pop mov xlat xchg int (bad) insb mov in es (bad) (bad) cmpsl sbb insl (bad) (bad) cmp loopne rex.WRXB add jg rorb xor loope (bad) (bad) dec sbb lock (bad) fdivrs jmpq movabs enterq fimul rex.RXB sbbb (bad) scas iret and xor jg ja mov xorl pop cmp test rex.WXB add jmpq je stc ror sub push bts bt mov cmp or cmp movsbw sub jmpq cmp pop in mov sbb movabs jg stc loopne mov retq repnz xchg (bad) scas mov or test lods int3 (bad) rex.WXB ja mov cmp jno or hlt rex.WRX cwtl jae mov rex.R cmp sbb push int loopne pop xor (bad) out imul push mov mov jl scas insl (bad) repz push xor rex.RXB jge retw (bad) sti (bad) js (bad) retq sahf xor (bad) icebp and xchg rex.XB (bad) (bad) decb movabs loop and clc cmp or sub rex.B push mov in fmull scas xchg cwtl pop out jrcxz (bad) sub xchg xorb xor movabs pushfq xchg cli sub pop vpmuludq (bad) ss imul rex.RX stc (bad) adc scas movabs mov push mov cmp and jae cmp clc cmp jg ja dec add not add dec xor mov test xchg mov sub rcr mov sbb sub mov cmp jmpq jmpq mov lea movzbq bswap mov not mov mov movzbl lea jno callq cmp bt cmp cmc or jmpq pushq jmpq mov stc cmp jmpq jmpq jmpq jmpq int3 outsb add mov (bad) movsl pop jnp jg jns mov adc fcmovnb sahf int je int3 rex.WR cmp addr32 jge or (bad) rex.WRXB mov cmp sbb test sub (bad) or (bad) ja sbb xchg jnp mov movsl mov (bad) (bad) (bad) std push cmp (bad) push ja cs or lret cld out push or (bad) mov je (bad) (bad) mov xchg rcll test xor adc fsubr (bad) xor push outsl or mov cmp std adc cld (bad) jle iret mov add sub xchg add rex.X mov xor imul (bad) rex.X mov push (bad) jnp fmuls mov ficom (bad) rex.XB and scas add (bad) fistp test (bad) jg outsb push xchg data16 add xor (bad) (bad) adc push and retq rex.WRX rcll pop (bad) iret out stc rol pop movsb (bad) retq (bad) xchg xor outsb mov (bad) adc mov jae sarb jbe and sbb cltd negl out je icebp and btc push rex.RB sub lods lret xchg imul and jnp (bad) rcrb push fldcw rex.XB (bad) lods mov or cmp pushq enterq (bad) mov add xchg mov mov (bad) push (bad) mov out retq cmpsb rex.W rex.WR addr32 (bad) movsl lahf mov cmp stos xlat roll test pop cld movsb and mov (bad) (bad) outsl stc xchg mov (bad) fbstp callq xor (bad) mov cmp not lods stc clc clc sub clc bt cmc ror bt clc sub stc jmpq ja jmpq callq cmpsl int3 mov mov jo push add add rex.RXB es (bad) rex.RB movabs xchg sbb out loope in lock std repnz (bad) jle cs jg (bad) mov add fidiv sub sbb clc es imul repz adc (bad) incb pushfq cmc and add je insb (bad) ss and jae jne retq test add pop in mov and mov cmp and rex.W retw (bad) jbe xor je sbb or addr32 callq and movabs lret mov test sbb mov bsr movsbw test sub bswap bswap lea lea jmpq pushq jmpq test lahf xor negb sbb sub (bad) sahf js ss iret cmpsb cmp cmp push (bad) and out adc mov push rex.R lock jb push insb or and add test rolb subb mov rex.WRX (bad) (bad) (bad) cld rex.B (bad) (bad) (bad) (bad) (bad) rclb stc mov movabs (bad) movsl pop rclb xor int3 cli xchg decb in pop mov mov and jmp xor pushq rex xchg add add or (bad) jns vpavgw out (bad) rex.W (bad) mov cs cmpsl jg jnp (bad) jae (bad) rex.R mov fs (bad) callq sbb clc insb or nop clc (bad) js jns (bad) mov jg je insb std xchg mov ds mov (bad) xlat xor stc jmpq imul bt stc add jmpq lret (bad) jno sahf (bad) jne (bad) scas xor xchg mov fs (bad) (bad) enterq xor xchg jmp (bad) pop loopne rex.XB sub ficompl nop retq (bad) mov mov fbstp (bad) jne ds cmp out rex.RB or pop push rex.WRXB push stos cld xchg test nop push jne mov rcrb jb (bad) jo (bad) (bad) sti jne and cld (bad) (bad) (bad) incb push sub rex.RB push (bad) fdivrs or add movabs int and testl add jge sbb fmuls xchg xchg scas sbb js sbb pushfq adc leaveq je fiaddl rex rex.XB jno jp enterq out and jp es (bad) (bad) (bad) (bad) stc cltd sbb shl (bad) (bad) mov out rex.RX rex.W jl xchg repz sub push jle pop int jo mov xchg (bad) (bad) lods std push sub add cmp jns adc push sahf cmp xchg jne mov (bad) (bad) or sbb sbb movabs pushq (bad) (bad) scas sbb jmp loopne mov jg ficom pushq rex.WRB fwait std ds fildl mov jp mov test sub push (bad) (bad) (bad) decl rex.X (bad) add jg loope cmp (bad) sbb movabs hlt (bad) pop std push data16 lret rex.RX (bad) xorl mov sub (bad) jbe iret cwtl std leaveq movabs xchg (bad) rorl (bad) movabs (bad) retq shr (bad) (bad) movabs popfq rex.RXB rex (bad) rex.RXB xlat fwait push or mov and and mov stc out mov sbb (bad) (bad) (bad) (bad) std mov xchg repz out lock ss xchg jg insl rex.XB cmp mov pop rex.WX movsl rex.RXB xor jl jae mov (bad) jmp (bad) (bad) (bad) std and or push (bad) (bad) (bad) callq iret insb jl stos and mov clc pop (bad) (bad) lock xchg mov (bad) or jp (bad) xor add xor jne nop xor mov in sbb mov xchg (bad) jne jne rex.WRB (bad) mov jno push mov decb notl movsb rex.WX retq stc (bad) rex.WXB (bad) xchg test movsb sbb sarb outsl insb outsl add rex.XB loop cli out rex.X push lods fildl jle sub jp loope callq movslq (bad) (bad) (bad) sti jmp movsl (bad) (bad) (bad) (bad) jnp movabs mov out cmp rclb lods std hlt xchg mov subl movabs cltd xchg mov jnp jp jb jae xlat rex.WXB jl jae lods (bad) rorb (bad) callq cmpsb es (bad) lret mov sub cli rex.WRXB and mov movabs (bad) fistpll out or test pushq jle pushfq mov add mov rex.X mov sbb decl test add add fld loope (bad) cmc neg push cmp shld mov rcr sub movzbw lea jg callq movsbq rcr bt inc add btc clc mov jmpq je jmpq rex.XB in jne adc rcl scas (bad) mov enterq xor (bad) or jo movabs stos xchg adc rex.R and sbb (bad) cmp in cltd add and jg test mov cmp rex.WRXB mul nop in icebp mov clc sbb mov or pop pop jl fsts (bad) (bad) sti stos repz (bad) rex.WRX (bad) (bad) (bad) cmp lods cmp (bad) sub (bad) retq retq sar (bad) (bad) (bad) mov add movabs add or rex.WR jb jrcxz sub punpckldq shlb js callq repz rex.XB rex.R cwtl and loopne (bad) add in mov jmpq movsb jo mov push add rex.XB movsl sar movslq mov adc xor iret add xor fwait rex (bad) cmp pop adc fadds cmpsb mov cmp mov xchg clc (bad) adc rclb and callq loopne leaveq mov cmpsb lret adc scas fdivrs fstpl (bad) stos add sub xor fdivp and cmp (bad) (bad) (bad) (bad) sti (bad) (bad) sti rex.WX (bad) (bad) (bad) (bad) inc fdivr (bad) xor addb add jle xorl outsl enterq jg lahf hlt subb mov jmpq add (bad) (bad) nop in adc adc data16 jg lods add xchg sahf cld out or mov sub cmpsb cli xchg add rex.WRX gs cwtl (bad) (bad) fadd add pop test or icebp in mov sbb out push adc (bad) push add mov sbb std jl scas rex.W rex.XB movabs fistpl mov adc push callq jbe (bad) mov insl test (bad) (bad) (bad) std adc (bad) (bad) (bad) decl push rex.R cmp loop or or es rex pop xor std mov sub rex.RXB rex.WR and xchg pushq subl fadds pop cmp mov test (bad) ds add mov xor btc adc sar mov ror jmpq jmpq stos jmpq bt bt cmp sub stc cmp jmpq test test jmpq je mov jg mov rex.WXB (bad) int clc xchg xor test pushq (bad) cmp fwait cmp cmp sub xor or mov movabs rex.B (bad) rcr sub test mov (bad) jge (bad) mov (bad) (bad) (bad) cld sub (bad) (bad) (bad) mov (bad) pushfq stos movabs rex.WB (bad) adc (bad) jge pop (bad) xlat fdivr and add add or adc (bad) or fisubl fnstenv test mov int3 test or fdivl jle adc rex.X (bad) cmp imul mov (bad) (bad) sahf (bad) mov rex.RX xchg mov xor mov test inc mov jmpq jne xchg dec bswap sub mov clc cmc shld sar sub btc bsf xor dec mov cmc sub cmp cmp pushq stc cmp jmpq (bad) ficoml fcmovnbe sub in loope imul fnstcw mov pop cmpsb mov out cmc movabs retq negb xchg jno adc fmuls pop sbb jb mov rex.WX data16 movabs or int3 mov (bad) movslq mov mov pushq test sbb outsb ffree icebp shr rcl ja jo js cld cmp jb sbb out movabs mov out (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) callq jno mov je mov push outsb jbe xchg (bad) and scas leaveq shrl out rex.X jnp pushq movsb (bad) jbe xchg sarl clc fstpl add std test fs xchg clc jle mov int add add xor sbb or insl sbb jrcxz (bad) pushfq rclb mov int3 lods sbb and fcomps (bad) lods and in rclb sbb (bad) callq imul xchg rex.WXB (bad) mov (bad) sub mov loopne (bad) (bad) decb retq (bad) in test gs jo cmp fistp subb sbbl sub rex.WR gs and jge ror mov ja rex.RXB retq scas add rex.RXB int mov (bad) jle add lods mov add xor mov rex.W movabs xchg insl sarb add stos movabs or mull lret movsbw add shld add dec and bt sar mov jmpq stc neg stc stc add cmc popfw jmpq popfq nop rex.RB (bad) xor leaveq mov (bad) andb xchg jne mov and rex.WX (bad) push mov (bad) sub add mov repz xchg insl (bad) mov in xchg mov jrcxz add jrcxz and and rex.RB movabs fidivl xor mov hlt out or outsb and sub and mov mov fldcw xchg mov (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) and jno sbb movslq jrcxz (bad) (bad) lcall sub out and fiadd pushfq iret fscale jmpq out (bad) sbb (bad) jbe (bad) out xchg mov adc (bad) sub jne jne xor rex.WB (bad) mov repnz and rex.WXB sub stos fildl pop rex.X (bad) fildll cmpl xchg lret (bad) movd leaveq (bad) mov or adc fidivrl mov mov std cs (bad) imul (bad) jle xor mov sub shll lret out rol in lea jno pop adc pushq rorb fwait (bad) (bad) (bad) decb stos int jge rex.WXB (bad) std jnp sub jnp mov mov mov (bad) fdivrl loopne lock cwtl (bad) movabs (bad) (bad) (bad) xlat fs test out mov jae jge xchg rex.RB lret or mov in mov hlt (bad) pushq cmpsl lret decl cli rex.RB pop jbe mov and scas sub mov test push div pop rorb mov cmpsb clc (bad) mov test xchg sti in mov rex.WXB mov jbe ljmp in mov jmpq setl lods jmpq jl adc retq lea lea movzbw movzwl lea mov bswap not lea not mov movzbl lea mov jmpq jmpq jae shld dec mov cmc stc bsf mov bsr clc add shrd mov cmp cmc xor cmp bt jmpq pushq jmpq (bad) lods rex.WRB movabs mov xchg mov jae rex.RB add scas mov lahf mov (bad) and xor adc testb jle adc stos jge mov or cmc sub in pop fdivrl mov rex.WR repnz pop mov out mov add ja (bad) sbb mov pushfq stos sbb mov addr32 mov adc cmp outsl sbb cltd in mov rex.WRB rex.WX sub outsb (bad) pop and repnz pop mov jnp hlt fisttp lock out mov rex.WR fldenv jl es lea (bad) rex.X fwait rex.XB movsl push push incl push jb xchg rex.WX rex.XB (bad) cmc cld movsb adc sahf mov nop xchg rex.WR leaveq cmp and adc jae xchg lret pop fs push sub (bad) test sub mov out and lret outsb pop (bad) xor jp or xor cmp (bad) (bad) (bad) (bad) sti std add (bad) (bad) (bad) cld jmpq or scas sub add (bad) jl xchg movabs adc sub pop (bad) (bad) add add or (bad) stos lret mov pop (bad) iret mov subb loope icebp (bad) mov loop add mov lods mov rex.WRB fs pop rex.W xor rep sahf scas lahf rex.WXB push mov cmpsb (bad) (bad) push mov pop pop fs xor je mov clc scas movabs imul movabs subl fdivrl (bad) int3 xlat pop cmp rolb adc or rex.WRB gs adc sub xchg repz xchg rex.X jae xor movabs loope (bad) movabs (bad) (bad) (bad) sti sub (bad) (bad) (bad) std mov pop retq jl sub rcrl jo cmpb movabs jmpq rex.WRX jmp (bad) pop mov and in rex.RB mov or adc add and jbe fisttp scas (bad) mov cli sbb add ficomp xor movsb int adc (bad) jge je add xchg and mov outsb (bad) add out (bad) vunpckhps mov mov xchg insl and push (bad) sub (bad) retq ror pop rex.WRXB mov sbb pop (bad) (bad) (bad) cld cwtl (bad) iret xor (bad) (bad) (bad) ljmp sub and mov insl push mov xchg (bad) pop cltd (bad) movabs out or cmc (bad) cmp (bad) xor add add clc out int3 cld jp je jae push jp sub (bad) lods rcrb adc cmp xchg int3 insl je pop adc movsl mov out add adc jge fimul mov push es xchg stc neg stc bt xor bt cmp bt neg test test cmp add jmpq stc stos adc movsl rex.WR adc sub retq out push movsb xchg or mov sub sbb pop push cmp xor movslq jae rex.XB imul and (bad) (bad) mov out jnp movsb incb and (bad) test es jbe jae movsb xchg push rex.X rex.RX rex.WRXB es fnop or (bad) imul icebp jrcxz cmpsl (bad) (bad) (bad) pushq mov in mov lret jp fidivl test rol add loopne movabs stos pop (bad) stos sti fcom rex.WRX and mov movabs rex.XB mov cwtl add test sbb xchg out (bad) sbb mov andl (bad) rex.WB or pushq mov adc test and rex.X in sub rex.WRB rex.X mov and fwait mov inc sub stos (bad) jbe in (bad) (bad) out rex.WRB sbb es jmp xchg fstps rex.X in es xchg in xchg in sub movl retq cmp mov inc mov icebp (bad) decl (bad) sbb (bad) lock scas pop pop adc cmpsl adc rcrl (bad) rclb mov imul decb sbb negb add push (bad) cs mov (bad) xchg stos leaveq xchg mov pushq loopne xchg lret fidivl out es adc xor or and adc inc callq xlat pop (bad) cmpsb (bad) movabs sbb xor xchg jle (bad) dec add inc add inc shr bt cmc xchg xchg mov sbb not shl rol mov stc push stc or mov cmc clc cmc sub jmpq jmpq je clc cmc cmc sub cmc cmp bt jmpq add stos roll fdecstp mov repnz mov movsb rex.WX jb movabs jno xor negl scas vpcmpgtb (bad) rex.XB pushfq sub clc or (bad) fcom clc sub push (bad) rex.RXB adc test loop xor rex.RX mov (bad) (bad) sti movabs xor retq jae sti pop icebp mov pushq cmc xchg sti pop xor (bad) clc jrcxz and lret stos mov retq cmp rex.B rex.WB or addl repnz sbb (bad) push (bad) (bad) (bad) or xor push mov gs rex.WRB jp add je gs imul rex.WRXB in mov jno push add (bad) lret fsts cltd imul (bad) jnp leaveq stc fild lret cltd mov rex.XB xchg scas sbb stc jmpq or loope (bad) mov mov jnp xchg loop (bad) (bad) (bad) std pushq (bad) cmp insl push stc jle (bad) sti (bad) jrcxz in pop cltd mov mov divps sub (bad) (bad) incl xchg mov or cmp rex.RX mov movb fnstsw fsubrs xchg jl jge rex.RX jb xor out (bad) pop cmp push pop mov push or in std dec jns jmpq movabs sub std fldl pop mov mov (bad) (bad) (bad) mov cwtl js mov cld in (bad) movabs xor test sti jmpq add negb jg repnz xchg push rex.WRXB push retq popq and (bad) push outsl (bad) in (bad) mov loope (bad) (bad) sti (bad) cmc and (bad) (bad) (bad) push sub pushq (bad) fs cwtl (bad) iret outsb adc (bad) mov roll sub (bad) rex.WRB (bad) (bad) rex.WR cld add mov in nop movslq push jbe cmp ja fdivrl sar (bad) pushq xchg rex.RX rex rex.WRX es rex.WRXB outsl and sub mov jne gs jno sahf mov pop fnstsw in (bad) repz add lret movslq push mov push insb adcl retq push add add sub rol neg add (bad) repz xchg shld mov clc neg cmp dec mov stc test stc push dec dec mov cmp cmc test stc sub jmpq jne jmpq jmpq clc dec rcr not xchg clc mov jmpq js push insl (bad) stos mov enterq mov rex.B rex.WR adc stc jmp in add jmpq out jrcxz scas (bad) icebp cmp rex.X rex.WXB push adc adc mov mov mov (bad) and adc cmc lods cmp mov push (bad) (bad) lods data16 push (bad) fwait movabs adc in xchg icebp out outsl (bad) or sti (bad) cltd loope or std sti or xchg mov jmpq jnp jnp mov or jl js cwtl add rex.RX mov pop mov (bad) (bad) decl retq rex.RXB xor movabs outsb gs jge push sub add or int cmp or cmp shrb jmpq pop add ja or (bad) stc (bad) cli (bad) clc clc clc cmp jmpq retq sub mov (bad) mov insb (bad) and or mov mov rex.RB movabs adc sahf cld movabs rex.WRX mov rcr andl mov sub fdivs adc (bad) in fmuls adc (bad) xor push neg movslq imul (bad) mov sub sub sbb jne scas ds or fildll (bad) (bad) lods rex.WRB cs fidivrl loopne pushq out jp and nop push pop mov jl insl mull mov (bad) pop mov pushq leaveq xchg (bad) jge jb stc lods jne or stos sarb sub (bad) (bad) (bad) std (bad) rex.XB in cmp (bad) mov rorb rex.WRB (bad) (bad) decb (bad) (bad) (bad) ljmp sbb lret stos adc adc (bad) scas rorb mov xchg xchg movabs jne jmpq fdiv mov (bad) push (bad) shlb pop fs mov flds pushq rex.W stos sti push add mov push mov std jrcxz (bad) adc xchg es (bad) rex.RB enterq add movabs enterq sbb jge (bad) add or fidivl sub (bad) mov xchg (bad) or lea movabs cltd (bad) xchg movslq rex.B mov cmp sbb test rclb adc in pushfq (bad) (bad) fdivr (bad) (bad) decb (bad) (bad) (bad) decl sbb mov push xchg (bad) mov in xchg rex.WX mov rex.WX movsl mov in xchg (bad) stc je retq vunpcklps xchg mov cmp (bad) mov mov xchg lock and rex.WRX in rex.B sbb mov (bad) (bad) callq movslq mov shrl jns movsl rex.XB pop xor insl or rex.X cmpsb mov ficompl (bad) jo addr32 scas rex.RXB fs jle flds rex.XB shrl cmp or movabs in (bad) (bad) rex.WR mov repz (bad) (bad) sti and (bad) std mov add mov mov or loopne cmc mov push mov push sbb adc mov mov incb pop jg es and or addr32 (bad) leaveq js rex.X xor pushq outsl rex.WB mov (bad) lcall (bad) rex.WX adc fstps (bad) mov cmp (bad) jae loop fimull lret enterq rcll mov xorl xor pop jnp sub int test cmp jmpq stc cmc stc repnz jmpq btr rol sub lea mov adc bswap shr shl mov sar clc add stc shr inc bsr lea add mov sar stc shl stc add jmpq adc mov cmp sub bt pushq stc cmp jmpq push fwait out icebp fucom rex.WB push rolb jb sub jo pop sub mov xchg push rex.WRX mov add sarb retq out loopne adc jb pushq sub adc xchg pop xchg fadd icebp (bad) mov mov lret int xrelease out sbb push xchg cli mov or adc jg sub sahf retq (bad) (bad) (bad) sti ja imul push test scas mov incl push xor (bad) pushfq cmc cwtl fwait (bad) (bad) rex.RXB retq in lret mov retq data16 scas movabs (bad) xchg mov sub (bad) push rex callq add mov pop mov or jne cmc cmc cmp clc movb stc test jmpq add stc jmpq loope subl invlpga std imul loopne,pn (bad) push callq cmp movsl rex.WRX (bad) enterq out pop xor stos (bad) (bad) (bad) xchg (bad) push loope movabs xor out pop sbb cmp cmp mov cmp mov (bad) xor sub (bad) movabs int pop test popfq sahf sbb mov rex.W sbb cltd add stc xchg rex.WRXB and xchg test outsl sarl fnstcw rex lahf (bad) ds (bad) (bad) cld (bad) sti repz (bad) (bad) (bad) (bad) repz cmp rex.R cmp fcmovnu jge data16 sub insb xchg add add jae adc cli loope push icebp (bad) sahf rex.WB sti outsb xchg xchg sub mov ja lret iret movabs xor or mov sbb test mov pop sub sti cli decl xchg int decl mov or add stc cmc cmc jmpq je cmc bt cmp test sub stc clc stc cmp jmpq movabs jle cmp xchg cmp adc rex movups flds cld stos xor rex.WRX adc out adc sbb movabs cmpsl movslq xchg in sbbl mov rex.WR test out retq pop jno or jg (bad) rex.RXB pop movslq mov (bad) (bad) (bad) (bad) mov sbb pop repz add adc sub adc xchg push (bad) je or retq (bad) rex.WRXB test movabs xchg jmp pushq (bad) jnp leaveq mov lahf xor sbb sbb (bad) jmpq je sbb push bswap (bad) icebp xadd mov shl or bswap movzbw sub setb mov lea jmpq scas cs enterq pushfq or mov lret push ss (bad) std xor jnp pushq (bad) push xchg out fldcw adc popfq std out and mov sub cwtl (bad) and gs or in int3 in sbbl pop adc in sbb sub push adc cli (bad) in rex.WX sbb xchg movabs (bad) jb (bad) repnz mov sub cmc imul (bad) (bad) (bad) (bad) cld rex.W rclb (bad) (bad) fnstenv imul callq adc xchg add add pop (bad) ds sub mov clc and std sub insl rex.XB (bad) (bad) add mov pop mov cwtl mov out nop out iret mov sbb ja or jle (bad) lret scas pushfq std out mov pop cmpsb mov in or repnz jmpq add movabs xor movsl out div cmc repnz rex.RX push or rex.WB pop mov (bad) or mov rex.R jbe int pop mov cmc js adc cmc rex.WRX ja lea jle (bad) in movabs movabs add xor or fnsave (bad) insb and jns rex.WB (bad) mov rex.RX rex.WB xchg xor jb (bad) leaveq jl (bad) (bad) cld pop insl (bad) (bad) push (bad) (bad) (bad) (bad) (bad) add fwait (bad) jmp or (bad) data16 pop lret mov sbb add add jrcxz test fucomp xchg (bad) cmpb sbb test (bad) jg (bad) or rex.WRX xchg callq outsb mov test jo out rex.W rex.WB cmp gs mov pop mov test and lret rex.RX int3 sahf rex.WRB stc sbb (bad) or or div (bad) sar fnstsw (bad) repz icebp sbb rex.WRXB add cwtl mov jo rex.WB jnp jl (bad) pop jmp jae sbb js scas jns pushq lahf movabs leaveq cmpsl fisttpll mulb jle pushq rex.WXB std or outsb rex.WR jp,pn sbb and (bad) (bad) sti jp divb or leaveq lods mov (bad) (bad) decl int fbstp insb pushfq mov insl and shrl push mov xor test ljmp pop xchg add fisttpll xchg lods (bad) push and and push cmp fs (bad) cmovb rex.RXB xchg and sub sub callq (bad) icebp hlt sbb (bad) repnz cwtl push or (bad) and mov rex.WX xor pop lods push add addr32 pop cs pop jno mov movabs jae pop cltd or jg rex.RX pop cltd mov (bad) (bad) (bad) sti add mov (bad) (bad) (bad) (bad) std xchg movabs add cmc loopne xchg test rex.WRB add out or int fcompl (bad) (bad) (bad) dec push pop jnp retq sbb cmc and insl pop rex.WRB lods std (bad) fdivl sbb jge or test mov (bad) jl sbb cmpsb rex.W mov outsb addr32 (bad) mov insl popfq mov (bad) mov mov pushq add mov mov jrcxz iret lret (bad) sub rex.X (bad) in movslq int adc fildll addl loop jb (bad) xchg negb cwtl mov push cmp fcmovu cwtl or test pop jbe push (bad) (bad) (bad) (bad) cld or (bad) (bad) (bad) (bad) sahf or (bad) rex.WRXB rex.WX repnz leaveq sbb mov cltd jge insb add (bad) and (bad) fsts adc adc jnp jmp scas rex.RB out rex.WX (bad) int3 (bad) stos sbb add mov add add sbb mov jbe or pushfq (bad) pop rex.WR lock enterq addr32 adc rex.XB mov (bad) lods shrl std cltd stos iret (bad) ja sub mov fcompl lods enterq (bad) xor rex.W rep jle pop jmpq jne jmpq fcmove mov pop sbb shlb mov (bad) or cmpsb lret test mov cmp (bad) mov andl mov xchg add pop icebp (bad) sarl hlt sub sbb repnz sahf cmpb add add xor xlat add movabs rex.WRXB lock or retq lods add mov (bad) imul adc push mov iret fildll and jnp (bad) sbb (bad) cld rex (bad) shll rex.WRX rex.WB add add lods (bad) rex.R mov sbb xchg sar lea fstpl push loope divl and insl cmp cltd mov (bad) add sub iret push retq sbb lahf mov mov (bad) xorl mov movslq movslq (bad) add rex.RXB clc clc test jmpq ja neg cmc rcr shr sub sbb btr inc add btr clc data16 (bad) mov adc not mov rcr mov bt cmc bt repnz jmpq jmpq out (bad) test je rex.WX rorl ja out movsb add (bad) testl xor rex.WRXB stos std mov jmp jrcxz (bad) je (bad) mov cmp retq addr32 out shll repnz jge rclb xchg (bad) int3 in sub adc pop rex.R addl nop callq pushq push mov cld xchg jne mull (bad) (bad) jmpq adc (bad) jno xchg sub sub mov nop xor gs or loop repnz sub jle rex.WXB adcl js cmc movsl ds cmpl add add add repnz (bad) out sti nop rorb rex shrl rcrb (bad) pop rex.WRXB insb addr32 adc es push fist sub leaveq movslq mov rex.WRX xchg pop xor add push cmpsl loope ds cltd lods rex.W stos pcmpeqb retq jmpq push pop test adc addr32 fistl mov (bad) add mov lea loope adc cmpsb sub mov push rcrl movabs in mov retq pop push push lahf icebp rdpmc lret lahf cltd jl push pop cwtl mov rex.RXB rex.WRB xor cld insb cmp sub (bad) (bad) (bad) (bad) cld fcoms mov (bad) fdivrl add faddl outsl add add jl js test rex.R imul clc (bad) or jnp jmp lods hlt movabs (bad) icebp pop int3 xchg mov rex.WX mov cld cmp (bad) (bad) repnz sti pop sbb mov gs cs add repnz out xor mov xchg mov rex.WB in or (bad) fmull std out (bad) sbb js (bad) mov out xchg rex imul movsb je (bad) adc fs pushq and add pop rex.RXB fwait mov out (bad) pop cmc mov rex.W rex.WRX rex.XB in mov lods mov and callq (bad) (bad) (bad) decb (bad) (bad) (bad) decl (bad) cwtl (bad) pop cmc and adc mov (bad) and fildll (bad) pushq sti rex.WRB (bad) or mov xor loope loope notl sbb (bad) or cltd xor in rex.R mov jle jle sbb mov mov test sbb mov (bad) (bad) xchg retq rex.WXB movabs insl pop sbb fildl (bad) adc (bad) mov pop pushq (bad) jle mov fdivl fwait int jbe (bad) rex.WRX push and pop scas rex.WXB cmp sbb (bad) (bad) sti xchg add (bad) (bad) (bad) (bad) and lods rex.WRB div and jg retq repz pushq movabs in and loope xor stos pushfq xchg adc rex (bad) inc (bad) retq or andl sahf (bad) lods adc jo rex.WB jae test pushfq (bad) or cmpsb (bad) cs stc pop (bad) or lret sub sbb (bad) pushfq mov addr32 in jp xchg cmp rcr shr inc sub neg btr not ror add cmc sbb cmp mov rcl adc mov clc cmc jmpq in mov movsl add pop (bad) movsb or xor (bad) ja (bad) subb mov out add push mov rex.WXB gs in lea pushfq js rex.W adc stos xchg xchg in xlat and rex.X out pop sarl or sbb (bad) repz rcll lret js cmpb and rex.WRB adc (bad) jne sbb (bad) mov lret (bad) rex.RX sbb (bad) (bad) je (bad) (bad) cld and outsl (bad) (bad) (bad) (bad) mov rex.X jb pushq mov push sbb xchg jmpq rex.WRB cs sti in cltd jnp mov fdivrs outsb cmpsl mov xchg mov icebp and incb add add test push repz sbb rex.RX cmp clc push cmp mov pushq fidivl sub rex.B push idiv cwtl test (bad) rex.RX cmp decb add lea pushq clc add lods dec clc stc neg clc cmp bt xor not neg neg add jmpq jmpq bt cmp stc clc add bt test stc mov stc clc test jmpq jne jmpq jmpq stc cmpb jmpq jnp sub (bad) adc sub rex.WRXB xchg repz rex.WX movabs lret or mov test js sbb and callq movsl lods test cmc rex.RXB jge mov nop loop sub (bad) callq adc add cmpsl (bad) or push test sbb in push loop cld (bad) (bad) (bad) std or or leaveq add insb adc jno and (bad) (bad) (bad) (bad) std cmp (bad) mov scas add imul rex.WRXB add or adc mov sbb cmpsb pop int3 clc popfq out rex.RB (bad) js fildll cmp stos maxps (bad) (bad) cmp out (bad) imulb in mov push add std in retq (bad) jnp mov jp pushq mov mov imul or add xchg cmp pushq lock (bad) lock fmuls sti sar sar not add sub bt rcr bsr mov shr mov xor mov bt bt repnz jmpq jne clc setp shr mov xor sub lea bsf not mov bt stc sub test pushq test cmp jmpq jae shrd mov mov shr shr neg mov movzbw dec lea clc mov test xor bt repnz je jne btc stc not xor mov shr sub ror shrd xor mov mov jmpq jmpq clc clc xor stc clc cmc cmp repnz jmpq jmpq and ffreep push lahf jo fwait xchg cmc rex.RX in mov (bad) mov push test pushq (bad) out adc and sar mov notb xor loope adc in mov xchg movabs xor rex.RX andl push lods jb (bad) stc sbb add xor int and (bad) (bad) (bad) sti mov imul fmulp and pushfq jmpq (bad) lcall jrcxz xlat jnp or mov lea es sub out mov data16 addr32 cmc (bad) rex.RB mov cmp out push cmp int3 pushq movslq sbb or enterq sbb test adc mov adc cmpsb mov cmp mov std xchg or adc out jb mov xor mov xor retq cwtl rex.RX xor (bad) cwtl xor (bad) repnz out clc sub repnz and pop repnz mov xor push or and (bad) (bad) (bad) adc movabs js jbe mov test sbb test (bad) (bad) sub sbb (bad) jae pushfq pop pop adc (bad) (bad) (bad) (bad) cld sbb cmp (bad) (bad) stos loope mov xor (bad) lods mov cli (bad) push sbb (bad) add add sub test fdivrs test stos mov xor popfq (bad) stos mov in rcr fidivl adc (bad) sarb out retq (bad) int3 test (bad) lret fnsave cltd shr (bad) add cmp mov (bad) cmp sbb lods sbb retq repnz cltd rex.RB cltd sbb cmp mov and xor jp scas ficoml fmul lock cwtl rex.WX fild mov mov rcrb fisubrl mov rclb jl shrl shll add out (bad) (bad) (bad) std xor lea pop (bad) (bad) (bad) jmpq out (bad) rex.RX rex.B fdivrl sbb add cmpsl mov jo cmp pop sub rex.RXB loop sub cmp sub fstl or sbb (bad) add clc movzwl xor mov stc je cmp cmp add cmp bt bt cmc mov jae test jmpq jmpq push lock std std (bad) xlat xchg outsb pop mov retq je sub leaveq pop lods sub pushfq mov (bad) ss xlat movabs push mov rcl push pop int3 add in shlb adc test outsb popfq xchg movabs data16 shr xchg (bad) (bad) stos in notl xchg mov or fstl jmp adc and decl adcl incl retq (bad) cmc add shld cmc mov sar cmc btc mov clc test sub jmpq imulb add jns test adc and std (bad) or jmp (bad) mov jle insl add or repnz push mov loop (bad) (bad) xor xor mov mov sbb sbb jae rex.RX (bad) icebp rex.RB mov ss cmc add fistpll mov enterq xchg leaveq mov maxps adc xchg mov imul mov iret (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lock sti popfq adc fmuls (bad) mov cmp xor outsb cmp test jnp and faddl sahf in push xchg std sub cmp (bad) mov jae pop out (bad) clc (bad) push test (bad) jbe addr32 add sbb orb (bad) jrcxz (bad) jge sbb rcrb imul or int3 pop sub incl push push (bad) leaveq mov outsl loope out mov xor outsb andl ss data16 fisub ficom in add adc fmull pop jl (bad) lret push mov add retq (bad) cmpl sbbb cwtl in jae hlt ficom out mov cli movabs fnstcw loop mov mov subb cs enterq jno stos (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lock lods or (bad) (bad) jl cmpsb ror stc push hlt rex.WR fdivl jne mov (bad) out rex.WRX loope (bad) ficomp (bad) (bad) mov jno sub pop sub sub cmp (bad) adc jo (bad) (bad) imul jno sarb hlt adc rex.X or mov jne scas add pop add or loopne callq retq adc adc rex.WX mov stc pop rex.RB jae fwait jne repnz (bad) loop cld sub mov (bad) (bad) (bad) decb icebp push int3 imul lea fimull stos mov (bad) rex.WB int3 std cwtl cmp in sub test (bad) jbe xchg addl jl cmpsl mov or adc leaveq mov jno adc (bad) (bad) stos and ror fs xchg sbb std adc adc mov dec jmpq xchg cltd fdivrl shl mov jg mov pop mov sub mov clc popfq add mov ror andl cmp xchg xor mov (bad) (bad) cld scas mov (bad) (bad) incl ds hlt fnstsw rex.WRB rex.W or loop scas retq (bad) push jbe mov adc retq out mov sbb xchg testb pushq add ja in adc nop mov (bad) pop jno (bad) in test (bad) add sarl pushfq clc adc jbe negb cwtl cmpsb mov mov xchg xchg lret jo in mov outsb adc xor fisubr adc loop (bad) decl (bad) rex.WRB add (bad) jno cmp clc cmpb jmpq jae stc add dec mov jmpq clc repnz jmpq jnp jae cmp cmp jmpq rep movzbq pop jmpq stc clc xor bt test clc add jmpq cmp cmc xchg clc stc cmp sub stc stc clc shl seta lods cmc clc jbe cmc neg clc xor test neg cmc test add jg callq jmpq jb jmpq jne jmpq jne and sub btr mov bt sbb and or add adc test mov bt test jmpq shr movsbw mov jmpq and (bad) fwait rex.WX imulb fdivrl test (bad) and mov movabs (bad) jbe (bad) (bad) xchg out cmp sahf adc stos adc push or loope and rex.RXB (bad) jrcxz fcoms fdivrl sbb jrcxz outsl push xchg stos out and mov iret negb rex.RX ss cmc sbb mov cmpsb and cltd rcll rex.WB clc mov in xchg (bad) xor orps movabs cmp fdivr push rex.WXB (bad) (bad) imul rex.W rex.WXB jb (bad) sub or (bad) (bad) (bad) jmpq out (bad) iret pop jbe rex.RX popfq jo,pt jg xchg (bad) sub xchg mov (bad) mov fnstsw mov rcll xor loope insb fimul (bad) or sub add test (bad) (bad) push rorb xchg retq and test mov bt cmp stc cmc neg bt stc stc jmpq jmpq addl cmp lret add jne and mov loopne (bad) pushq jmp movsl pop push outsl pop lgs push mov push test jae xor or cmp (bad) jb std repnz mov out in repz jmpq cmp rex.R (bad) (bad) sti mov (bad) (bad) (bad) decb test (bad) pop sbb mov and xchg (bad) fldt callq loope lods push std sbb or sbb jbe mov ss adc (bad) (bad) (bad) movabs repnz loop (bad) mov cli (bad) rex.W rcrb fild (bad) in jge sub imul sbb out cmp sbb test xor mov rex.WRB sub (bad) shlb js lahf repnz mov (bad) sar out add or imul in in (bad) (bad) lock imul in cmp shrb push pop (bad) jns cmpsl stc adc es lock js cwtl cmp addr32 (bad) (bad) cld pushfq (bad) (bad) mov push (bad) push std insb or rex.WR (bad) (bad) ljmp (bad) movsl js cmp xchg sub roll mov cmp leaveq movabs cld out jo xchg nop/reserved xlat jle iret jmpq cmp add rex.RX int3 add nop lret pushq ss cwtl mov rex.WB (bad) gs xchg (bad) movslq int sbb or clc packssdw mov push or rex (bad) movslq mov movsb adc push movabs (bad) test sbb movl jp xchg or stc push rex.WX rex.WB rcll push movabs mov xchg rex pushfq sbb (bad) retq push (bad) jmp sub (bad) rex.R sbb iret cmpsl sbbl jp mov rex.WRX xchg pushq js xor (bad) push adc push sti lock popq add and lret (bad) (bad) (bad) decb (bad) (bad) (bad) pushq sub rex.R fildll hlt stos fdivrs popfq xchg shrb icebp iret insb repz retw xor sub imul or pop add push test fwait add movabs sbb (bad) insb adc es icebp movsl (bad) xchg add or callq cld cld retq xchg rcl sub ss push rex lods cli lahf pushq shl (bad) (bad) xor pushq rex.W xchg sub cld push rex.WRX rex.RX jae jae montmul cmpsb retq scas sbb rex.W mov movabs sbb clc addr32 stc cmp mov or loopne (bad) cmp mov xor (bad) (bad) cld addr32 fstps push mov (bad) (bad) (bad) decb and xorl (bad) shll pop ss imul add add mov stos mov lahf mov add rex.WX and movabs fisttp mov jns mov enterq test sar mov jmpq lock mov rex.WX jg and (bad) cmp repz (bad) mov adc (bad) mov (bad) mov rorl jb cs fwait add cwtl cmp mov cmpsb fs push cmpsl movabs ljmp mov and mov xlat xchg add mov or rex sbb pop cs cmp sarb rex.W movabs std ja xchg callq add add or cmp jle icebp loop shll push jrcxz (bad) jmpq (bad) sti movabs callq movsb test sbb sub (bad) callq not rcr bts add not rcr and jmpq jmpq add rex.RXB gs outsl fs imul add test pushq sbb or scas lret rex.RX mov (bad) fmuls xor mov test pushfq rex.WX rex.XB out insb test xchg pop adc loope (bad) fisub shrb mov (bad) ffree gs shlb mov mov xor shlb or movabs xor rex.RXB rex.RXB mul add xchg adc scas test or jge fcmovb mov movslq lock pop mov add and rex.WXB fldl cmp xchg rex.X std mov pop (bad) lock fistl lods rorb sbb push (bad) push (bad) xchg mov and mov (bad) setbe shlb mov fsts jno sbb fldl sti jmpq (bad) or out stc sub bt cmc jmpq (bad) pop xorb adc ja and xor push push jno mov adc xchg rex.X pop (bad) push (bad) (bad) jg retq sub lods or mov int3 scas rex.WXB push outsl rex.RX ss outsb mov cmp insl rex.XB sarb fcoms cmpl push (bad) mov jl sbb (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb vmovq (bad) add fs (bad) xchg movslq lea (bad) (bad) (bad) dec (bad) mov jl mov cmpsb xor pop pop pop cmc test xor popq rex.WXB outsb push (bad) movntps es cmp sub rex.W cs pop pop rex.R mov jnp rex.RX cmp movzwl adc bt shld mov test add bt mov cmc stc test jmpq clc cmpb jmpq ja stc stc jmpq movsb sti in lret cli xor repz int3 out add test xor lods sbb mov rex.WR (bad) fisttpl int mov jns sbb stos int pop lret scas rex.WRXB xchg js mov push sbb in xor mov sub movabs div and test jle (bad) (bad) (bad) (bad) add imul xchg (bad) rolb (bad) adc add (bad) (bad) cld fs xlat (bad) (bad) (bad) (bad) cmc jae (bad) leaveq or sub xor movsb add add jne cmc pop pushq jrcxz in movabs (bad) push sub mov xor add (bad) jp lret test imul sub (bad) std cwtl mov movslq cmpsb mov outsb and stos rol xor cwtl mov and pop xchg sub andl mov stos retq iret retq scas xchg sbb (bad) xchg rex.WR xor mov adc sbb loope rex.B (bad) or pop rex.WRX mov (bad) sbb sub sbb fnstsw mov (bad) (bad) sti ja out rex (bad) (bad) incb rol mov cs add (bad) rex.RB insb add xchg xor (bad) rex.XB loopne xchg sub (bad) xchg pop cmpl mov pop xor pop cld iret sahf rex.WR sbb jge (bad) (bad) (bad) jmpq (bad) rex.WR jrcxz rex.RXB jb retq sbb or (bad) jg lea mov cmpsl (bad) ja (bad) jno stos mov cmp retq adc (bad) and jae jmpq jmpq callq jmpq bt add cmp jmpq sub cld rex.RB stos rex.W mov rex.RXB movabs jl (bad) mov and mov (bad) cmp pop ss out movabs cmp in add add or loopne and scas (bad) (bad) fwait sarl sub pop repnz push cmc cmp adc push cltd sbb callq jns push push outsl cli (bad) movabs mul (bad) out (bad) sti movabs subl (bad) callq cli (bad) jmpq push out movslq int test cli rex.WRXB mov (bad) lret add je sahf icebp push (bad) xchg rex.RB jg cmove jo xchg rcrb jae jp xor callq addr32 xchg fdivrp jle and add fcoml mov cltd mov xchg in sub add and lret lods (bad) sbb psubd cmp push movslq sti iret mov adc (bad) (bad) (bad) (bad) and ja retq int3 repnz jo std sbb int (bad) and xchg xchg jle (bad) (bad) (bad) decl mov int3 hlt sbb sarl xor (bad) fwait xor lods fwait mov int pop rex.X mov fs leaveq mov es vcvtss2si xor or lods out cmp mov orb mov mov cmc mov adc sub mov jmpq jmpq stos jmpq bswap movsbw lea jmpq jmpq jmpq (bad) movabs (bad) icebp clc ficompl sbb outsl jp icebp out sub outsb rex.WR rex.WRXB loop in adc push sti lret lods add stos xor jno add (bad) int mov mov rex.W rex.X rex.WR sub (bad) (bad) (bad) cld sbb fildl (bad) (bad) (bad) stos (bad) sbb cld rex.WRB (bad) sub (bad) xor es pop lock mov mov jne out js xchg sub or cmp push sbb cmp xor or mov rex.WRB enterq scas rex.W mov loopne add add rex.X adc sbb test in push fs pop cmp (bad) notb (bad) mov jne movsl je sahf mov movabs callq adc test or and cmp sub outsb imul add popfq movabs lahf rex.WXB lods mov and fcoms xchg rex.XB movabs mov (bad) iret ljmp push (bad) cmp rex.B fidivr shll mull (bad) (bad) push icebp adc lods in jrcxz (bad) test je movsb ss int3 movslq movabs iret lods rex mov (bad) rex.WB rex.WRXB adc (bad) (bad) jmpq rex.WR cmpsl mov (bad) lock mov (bad) mov mov cmpsb mov lahf mov rex.XB insb (bad) lock test insb fildl jnp icebp push (bad) pop sbb gs pushfq mov xorl adc (bad) callq rex.RX lret scas fistpll mov clc scas fbstp add jno insb push and sub pushq (bad) (bad) sub pop sbb int push add add mov pop pop stos rex.RX mov push test fstl leaveq xor adc lret (bad) pushfq or xchg jrcxz fstpl and and imul rex.XB pop jbe (bad) sub xchg pop (bad) lahf and (bad) (bad) sti movsb insb push insl cmpsb (bad) (bad) (bad) (bad) xor fistp jo test (bad) (bad) pushq sbb (bad) mov outsb (bad) fscale rex.RX pop loope adc or push es xchg pop imul int stos mov outsb rex.R jp lock adc (bad) (bad) (bad) imul rex.R loopne ja jmpq jmpq stos imul and test ss movsb ja push rex.WX adc pop jrcxz add push push fwait xchg cmpsl (bad) jge movabs movslq sahf mov sub adc xchg nop adc insb adc in mov lock sub or (bad) or sbb stos adc (bad) sbb xlat pop lods adc fdivrl mov rex jp fist (bad) sti or (bad) (bad) std pushfq imul test jbe ja in shrb cs movsl rex.R mov and repz jne rex rex.WRB (bad) mov mov push ss rex.WX pop push xchg jne ja xlat (bad) (bad) (bad) lcall (bad) out jp mov cs shll pushfq ds ds (bad) mov movslq and (bad) int mov cmp (bad) (bad) push mov in (bad) test jp adc mov jae cmp bt cmp jmpq (bad) xor cmp cmp movabs loop (bad) rex.WXB rex.WXB nop pushfq (bad) mov lret xchg jbe movabs lock rex.WRX xor (bad) insl cmp and rex.WRB mov (bad) jp mov vmaxpd adc lock fsubr rex.X add enterq rex.WRX adc repz scas mov xor lods pushq cltd test (bad) (bad) ljmp xchg test test sbb xor add add adc jno add repnz rorb xchg test (bad) xchg push addr32 rex.B rex.WB mov loope repz pop (bad) lock cld mov movabs (bad) (bad) add mov test mov movabs (bad) xlat std in sti xchg sub in adc nop cmpsb es testl notb pushfq push test rex.RB cmp add sub out fldt (bad) jo fdiv stc ss (bad) (bad) push enterq loop pop sub rex.WR (bad) (bad) (bad) cld adc sub sub (bad) (bad) (bad) movsl (bad) nop add stc ss movsb ficom fsubr mov pushq mov mov clc push add rcl xchg add add pop cmpsb test rex.WR sarb (bad) sbb mov xchg jle lea push cmp (bad) pop or (bad) mov (bad) ficoml addr32 stos mov push lock rex.WXB loopne mov (bad) mov test xor js (bad) add leaveq mov and jmpq mov add movsbl jmpq jmpq lcall in xor int3 sti lock out ss push ds in (bad) stos (bad) jg fbld test mov and sub sbb movabs mov fwait (bad) mov int push (bad) (bad) rex.WRX cmpsl test add in fldenv pop and jne popfq mov add cmc in cwtl (bad) sbb (bad) or rorb adc in sub hlt rex.WR rex.WRXB rex.XB (bad) (bad) incb rex js in rex.RXB add add rex.RX xor mov (bad) adc retq iret push xchg sub xor repnz cmp jmpq cltd or vandnpd popfq (bad) movabs pop jg pop mov xchg sahf mov rex.RB ficoml (bad) in rex.RB ss xor xchg mov (bad) push rex.WRB nop int3 jmp jmp sub cmpsl jl out (bad) sbb xchg imull mov iret add jnp (bad) rex.WB repz mov hlt cltd rex.RX (bad) xchg (bad) rex.B jno (bad) and (bad) jb jnp (bad) sub cmp (bad) rex.WR lret imul ror rex.W (bad) (bad) std in mov insl (bad) or cmp rex.WRB xor (bad) (bad) (bad) (bad) (bad) test cmpsb (bad) ficom xchg (bad) lea pop sahf and sub out test adc jno cmp test lret pop (bad) or movabs push popfq rol scas negb mov xchg push pop (bad) int3 jrcxz rcl sbb or sub pop push or iret and cmpl vpcmpeqb adc movsb movabs test add (bad) fs (bad) xchg imul (bad) xor pushfq rex.RXB xchg pop (bad) mov rex.WX mov movabs in mov rex.RB fstpl loope adc add mov stos lock outsb rex.RX (bad) (bad) (bad) sti out adc (bad) (bad) js sub add in rex.WRXB sub and (bad) (bad) (bad) (bad) (bad) clc cltd xchg in (bad) rex.WXB adc mov lahf (bad) (bad) (bad) test and jmp scas mov fistpll outsb int3 pushq mov (bad) (bad) scas (bad) push mov mov jo jmpq mov jmpq push not jmpq clc cmp jmpq bt test cmp jmpq jae,pn jl and insl ds mov scas rcrb fimul ror lahf std rex.W pop xor mov int3 ss rex.WX pop outsl pop (bad) shlb std pushfq lods mov imul xchg mov loope pop lret cmpsb mov nop jno out fdivp sahf rex.WRXB ja sbb (bad) push jrcxz xchg sar push xor retq mov (bad) xor mov rex.RX (bad) (bad) (bad) cld jne (bad) test add lea push rex.WR (bad) loope adc sarl push sub add add mov or cmp out repnz pushq stos cmpsb andl icebp (bad) stos sbb and stos rex.R push (bad) cmp (bad) lock pushfq add cmpsl mov cwtl imul xor rol je clc add test bt cmp jmpq cmp bt stc repnz jmpq movb push (bad) fnstenv or ficom andb mov mov jo and pop lret insl jbe (bad) ss lret insl rex.WRX rex.B rex.RXB rex.RXB rex.WR mov rolb rex.WR rex.RB mov xchg rex.WRX sti (bad) push cli in fisub int3 cmp andb insl pop movl sub cmp jns sahf decb sti cmpsl and jge (bad) (bad) (bad) (bad) (bad) ficom (bad) add sti shll sub (bad) (bad) (bad) (bad) pushq jno mov sbb outsl mov jno mov cmp cld push push cmp shrb cld or out rex.X add test scas mov sbb jmpq ja jmpq push movslq xor cs insb add add jo mov xor or lea adc cmp (bad) jno rex.RXB ficomp and (bad) fstp mov mov jnp mov ficoml add out mov rex.XB jl cmp sub mov jb sbb sbb test sbb add cltd push (bad) nop lahf imul fidivr loopl fwait cwtl jmp cld sbb pop mov or stos cs (bad) (bad) sti in xor (bad) (bad) (bad) jl xor movabs cld (bad) stos and adc retq cmpsb cwtl pop or imul rex.WR push xor cmpsl stc je (bad) hlt add add es idivb cli scas rcr jae jle rex.WRXB (bad) mov cmp mov mov or jmpq je clc add stc test stc cmp jmpq lock adc hlt and and lea jmp fisttpll xchg sahf (bad) outsl pop (bad) adc jb jb adc cld jrcxz mov fcoml iret rex.WRX xor sbb callq rex.R rex.XB xchg rex.WRB enterq rex.WRXB mov (bad) (bad) mov fnsave xor xor sub out rex.XB int3 js jmp punpcklwd int ficompl (bad) (bad) (bad) cld test cld mov (bad) cmp jp (bad) or (bad) xlat or add add gs outsl subb fnsave and test mov js jo push stc lret adc mov add movsb (bad) out test mov loop push mov movabs and rex.WR xchg retq mov mov repnz cld cmc (bad) push and leaveq or iret pop (bad) cmp xor ficoml (bad) cmc cmp fsubr test jmp stc std jmpq js mov lock mov sub jle enterq sub rex.WRX (bad) (bad) sub (bad) sarl mov insl nopl xor roll sbb pushq cld fdivl (bad) (bad) ljmp or jg xchg rex.XB icebp fs (bad) sti cwtl enterq and sub add add jrcxz mov scas jg rex.WRB push push cwtl cmp lock and rex.B ss rex.WR cmpsb and (bad) outsl xchg mov shlb sbb cltd add movslq adc mov sbb rex.XB pushfq outsl cmp cmpsb pushq movslq retq sub retq or mov adc (bad) pop push test pop mov jne mov xchg fmuls cmp or xchg sub xor cmp (bad) pop jge movsl add xchg xor mov jg in jb sbb xchg sahf mov scas mov iret pop add rex.R mov mov repz and movabs mov mov mov in inc jmpq jae adc mov data16 fwait rex.R mov xor xchg std (bad) xor jb sbb or pushq movsb xchg rex.RX rex.WRX and (bad) mov (bad) test mov fwait push sbb int3 shll mov mov (bad) mov ja sarb push shll adc hlt rex.WX mov callq (bad) scas (bad) int lock rex.WRB out rolb loope rex.WXB (bad) (bad) std or adc (bad) (bad) (bad) std fisubl jae lahf add sub out add add mov add cmpsl and repnz and sbb pshufw pop int3 clc push jl and mulb rol (bad) mov xorl mov pop scas leaveq ja and clc not sub jmpq jmpq sbb mov cmc rex.WRX sarl fildl pcmpgtd cmpsl movabs mov pop pop popfq sbb adc xchg cmp in callq (bad) sub std scas jo mov fisttpll fcoml (bad) adc (bad) mov mov fiaddl lods mov mov retq test (bad) stos data16 (bad) (bad) sti cmp (bad) fidivrl (bad) (bad) (bad) std int3 push or repnz (bad) jge jmpq and scas test push divl xchg enterq addr32 (bad) shrl mov scas (bad) (bad) (bad) lcall rex.B sahf mov sarl test (bad) sbb (bad) (bad) xor lods es mov cmc stos mov or add rex.WRB sub test int3 or mov not lea setnp lea setno not jmpq jmpq clc stc cmp jmpq callq clc clc test stc or jmpq lea jmpq lea adc rol icebp outsb fucom sub (bad) rex (bad) xchg cmp stc lahf cmp fcmovnu in (bad) push adc jg js xlat (bad) imul iret pop jrcxz pop (bad) mov rex.WRXB ficompl rex.RXB sbb mov xchg and stos rex sub (bad) and jrcxz xor rolb rolb (bad) cld sbb rolb (bad) (bad) (bad) lods or push rex.WB xchg divl add add sub jrcxz push jp cmp xor stos xchg mov adc (bad) xchg movsl ror test jo pop (bad) xor (bad) add mov push std movabs mov cmpsb mov sbb cmpb jmpq add push (bad) je push je imul add clc bt imul cmc test stc test add jmpq jae movsbw mov inc shr xchg mov mov movsbw add lea mov jmpq je test jmpq add shld mov movzbw shl sar and mov stc clc bt cmc sub clc repnz jmpq add jle add pushq div sub sub sub jo xor xchg mov loope xor (bad) jb sbb (bad) leaveq adc (bad) popfq xchg movabs sub (bad) mov rex.WR rdmsr test (bad) cmp jmpq rex.X adc leaveq add mov mov (bad) int3 cmpsb js rex.WRB cmp cld jrcxz rex.WB data16 fwait in xor (bad) mov (bad) pop (bad) sbb (bad) (bad) (bad) cld pop (bad) test xor (bad) (bad) (bad) out sar xchg mov mov push (bad) lods sbb add outsl rcr es (bad) out xchg rex.WRB rex.X hlt mov sub jbe hlt adc imul xor or movabs mov subl mov xchg adc xchg xchg mov rex.WRX (bad) add jns popfq (bad) pop mov movl es jrcxz iret std rex.X jmp sti pop incb callq (bad) rex.WRB sarl rex.RXB (bad) andb rex cwtl fwait rex.R lods hlt loopne (bad) (bad) jrcxz loope cmp (bad) ja xor sbb rex.XB es sbb mov sub rex.WXB adc sti sarl (bad) (bad) push jns (bad) and cmp mov add rex.RX and (bad) rex.WB fwait popfq shrl or movabs or callq mov (bad) jae (bad) xor (bad) outsl and mov (bad) (bad) hlt push out pop rex.WB (bad) cmp pop sbb punpcklbw in rex.RX and rex.WRXB test or cmp jmpq callq stos push xchg (bad) mov rex.WR (bad) mov mov movabs jrcxz sub jb pop and push test out movabs hlt stos std (bad) stc adc and and and (bad) (bad) (bad) sti and (bad) (bad) std mov roll clc repz pop fldt jae cmpsl iret flds mov xchg pop fisttpl pop xchg xchg mov popfq mov rex.R fs movabs mov repz jns (bad) or (bad) mov pushq in (bad) retq test in movslq jmpq rex.WRB cli movabs stos mov sub fidivrl retq in (bad) out rex.RX xchg lahf xor mov jle mov jmpq pushq jmpq ja jmpq jbe sub mov jnp sub sbb rol bsf mov sbb mov xor add rcl cmc shr xor bsr mov xor btc test add not mov jmpq cmc cmpb jmpq cmpb jmpq add add pop add add jo js subb test mov mov test loopne callq test and rex.W push stos subb stos movabs stos lock clc stos or add add pop add add movabs (bad) movabs mov movabs stos cmp pushq stos cwtl stos test mov stos callq stos sbb stos pop stos pushq add loopne add add add movabs fsubs lock sbb movsb cmp movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs add add movsb mov shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test loopne callq stos add sbb xor stos push stos pop stos (bad) stos jo js subb stos movabs stos fsubrs clc stos add lods and lods mov add add (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor mov mov add and add test callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add lods and add add pop test mov mov test add add movsl add add add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add add add sbb xor rex.W jo js andb movabs sub mov add sbb xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add add movabs xor movsl jo cwtl movsl shlb cmpsb pushq add addb or add pop stos jae add add (bad) scas add add add movsb add and add add add movabs add movsb and stos add add or int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb inc push xor push shl xor movsbw sar push (bad) negb lods (bad) or btr mov add or or mov jmpq jmpq jmpq lods (bad) xchg jmp (bad) push rex.W (bad) (bad) popfq rex.RXB adc jno push and movabs rol es jp movabs fs retq (bad) (bad) mov mov mov (bad) cmpl in and movsl sub adc movabs pushfq mov stos mov mov retq push rex.WX xchg mov fisubr or je mov rex.WRXB scas loope or addr32 xchg retq (bad) (bad) (bad) or (bad) cmpl (bad) or test (bad) cmp (bad) (bad) (bad) (bad) in (bad) ja clc faddp mov mov push (bad) jge vunpckhps (bad) (bad) mov adc ficomp jl mov fistl rex.WXB sti rex.WRXB rex.WRB cmp cltd mov movabs enterq adc btr movzbq mov stc test stc cmp shl jmpq setg mov jmpq jae test stc clc test add jmpq or loope push enterq (bad) xlat rex.WRX cmp rex.WR icebp stc (bad) popfq add or in or mov mov and mov lea leaveq (bad) rex.RXB in sbb pop rex.RX xchg add pop stos popfq rex.WRB xchg add xchg shrl jmp rex.RB rex.RX fidivl test or lea stos jge mov stc (bad) test rex.W movabs mov rex.RX hlt sub (bad) int3 loope movabs (bad) and mov jne nop jmpq (bad) cmp push add test movabs xchg cmpl jge xchg cmpsl andl sub jp movabs leaveq cmc xchg cwtl push pop mov and xor (bad) xor sub sti cs gs test cmc clc cmp sbbl xor imull (bad) icebp cmc fcmovnbe jno enterq outsl xchg jae,pt cmc cltd lret add add std mov jo movabs ffree mov in test mov rex.WXB fldz fwait push xchg sbb mov int3 test rex.WB cs test icebp callq xchg (bad) retq shrl mov icebp in (bad) iret lods xorl add scas add cld pop (bad) insb je bnd sti jne loop sbb sahf add jae xchg test movabs mov cmc icebp rex.WXB jns rex.RB leaveq rex.WB sahf (bad) rex.RB cli or xchg mov icebp sub (bad) int rex.B sub rex.X loopne es mov (bad) xchg mov xchg shll mov addr32 in sbb mov adc hlt lea mov iret cmp je int or fdivrl jno scas sub pushq test (bad) cmp cmp (bad) jl add popfq mov loope incl retq out std stos add (bad) sbb mov add (bad) rex.RXB cli incl mov (bad) xorl popfq adc cmp mov or test (bad) xchg xchg fcomip cmp add xchg nop fild add xchg movsl icebp fwait (bad) int xchg sar and (bad) lock sbb jrcxz or or (bad) cltd test bswap gs push mov (bad) cmpl lret iret iret xchg or orl (bad) retq rex.WXB lods leaveq rex.RB in (bad) ficompl test and fildl in retq out xchg or jmpq in shlb (bad) cmpsl loop push sub enterq fxtract cs loope add pop repz icebp sbb xor int3 ss cmp mov push xor xchg cmp mov sub (bad) or rex.RB repnz sub pop rex.WRB rex.RB gs movsl jbe rex.WR jno (bad) pop jns fwait retq fdivp mov movsl sti retq test (bad) sub loope sti enterq fmuls mov add xor hlt icebp (bad) add orl xlat push sti mov push ror lahf (bad) or loope scas (bad) (bad) cs (bad) adc rex.XB loope (bad) out cmc and and jmp vandnps push addl std icebp movslq jns mov mov movabs mov test xchg sbb out xchg test adcl je mov jno mov xchg repz iret mov in (bad) rex.W (bad) in cmc gs sub add rex.XB jmp or enterq jge push mov mov lea orl sbb int add rex.W retq jo lock leaveq xchg hlt sub movabs mov add xchg ss jrcxz leaveq cltd (bad) in int (bad) (bad) stc xchg pop fsubr pop rex.R rex.RXB clc loopne and fldz push int3 mov sub rex.WX rex.WRX shlb or fldcw retq rex.RXB movsl xchg movabs sahf rcll or jge int3 std sbb sub andl (bad) push (bad) repnz insl addl jl movabs je jp mov notl mov adc (bad) mov callq rex.WB (bad) cli (bad) fisubr mov xor clc movabs test (bad) repz movsl lea js mov int (bad) mov nop rex.W or (bad) rex.WRX xchg (bad) outsb int3 shr sub (bad) cmpsl iret test xchg xlat adc out mov repz or pop xor (bad) jg push xlat rex.WX leaveq jge in fmull adc jnp int3 ficom (bad) add (bad) add and or adc insb rex.WRB xchg rex.WRX add int3 (bad) (bad) jno vpsubb (bad) sbb lods jno mull xlat loope leaveq sbb cmp cmpsb mov test lea push movabs mov sub hlt sub stc test xor mov adc out (bad) in leaveq sti imul push rex.B rex.WR notl (bad) mov movabs andl mov leaveq rcll leaveq adc lret cli sub rex.WXB sahf fsubrl (bad) mov adc xor movsl sub cmpsb adc loop outsb in mov enterq lfs pop mov cmp adc cltd rex.WR std std iret sub rol sbb push movabs sub repnz sbb (bad) mov out sti xor cltd sub rex.X fucomp addb pop mov sub rex.XB cmp jnp pop rex.WX mov sub sub fmull (bad) enterq rex.RB push rex.XB fs lods rex.XB je hlt (bad) push xchg adc sub rex.RB xchg (bad) xchg xor sar and icebp cltd or movsl xlat lret xor movsl adcl add sub icebp push int movabs sbb loope jne imul xchg negl rex.WX iret lods pop lock retq jns and mov clc out sbb imul adc push mov (bad) (bad) rex.WR add mov adc negl rex.XB gs xlat rex.RX mov jno repnz mov (bad) or cltd rex.X xchg in out (bad) test jne sbb packsswb outsb in out retq movabs test xchg imul (bad) sub add jrcxz jmpq out shl (bad) cltd mov sbb in insb add mov movabs or add (bad) jne xorl lods sbb movslq repnz rex.W test (bad) rex.W mov cmpsl xchg mov mov es mov sub mov loopne (bad) test loope iret cmp rex.W (bad) (bad) (bad) pop mov sbb rex.WB sub leaveq repnz sbb clc rex.WRX ss mov test (bad) mov cmp inc pop cli outsb jbe sub cmp enterq repz push lret sbb xor iret cmc (bad) testl cs (bad) rolb in push (bad) int3 adc mov jo stc jns xchg push iret pop lea mov icebp or rex.WRB (bad) out push rex.WRXB cmp jg rex.WX sbb rorb xor xchg movabs (bad) addr32 pop clc lock fwait (bad) jrcxz (bad) jne or out test enterq adc lret out enterq (bad) imul je push xchg (bad) cmp testl (bad) fwait mov cwtl jb (bad) mov adc test faddl mov lret mov rex.RX std shll mov movabs fbld mov xor fcompl mov pop rex.WRX test push adc (bad) scas cmpsb (bad) pop sbbb adc sub mov add leaveq jle (bad) negl retq out (bad) jge adc jmpq fdivp callq movslq (bad) jb xchg out mov (bad) cmc (bad) hlt (bad) cwtl movsb in je (bad) repnz (bad) fist in in rex.RB (bad) fs int3 bnd fisub pushfq movabs addl cmp jmp mov mov add repnz add leaveq lret mov rex.WRXB rex.WRB cmp add movabs add sbb (bad) fdivs (bad) incb test sub jrcxz (bad) lock cmc repnz stc mov jae add adc idivl or rex.XB clc lret rex.R mov in add jno jo notb psrad in jae cli rex.RX je cmc test loop (bad) (bad) rex.XB xor jrcxz mov adc in outsl hlt flds sub in (bad) jmpq mov pushfq (bad) rex.B add fsubl (bad) test fnop mov (bad) fwait std add (bad) cmp add (bad) (bad) jbe (bad) or pop (bad) loopne scas gs xor mov subb outsb in movslq cltd lea in out iret mov movb lret outsl cmp or and jae xor data16 test xor rex.WXB and add (bad) (bad) xchg retq repnz cld je vmovaps jp mov xchg enterq or loope sti nop push orl movsl sub movl xchg pushfq or (bad) xor xlat or imul xchg cltd (bad) mov or and hlt fnop rex.WB and add adc retq add cmc cli mov sub jl rex.WB retq lret retq jbe mov leaveq xchg lret jns xchg rex.RX (bad) int in mov mov std sub adc (bad) cmp movl enterq repz (bad) pop movabs in rex.R (bad) xchg cmp addr32 cwtl fildl repnz andl mov rex.WRXB cmc xor subb icebp cmp movabs rex.WXB adc int3 imul (bad) cmc (bad) or rex.R add xchg xor jns mov cmc add callq fisttpll loop mov mov adc in mov adc iret rex.RX test hlt out repz xchg jl (bad) mov callq (bad) (bad) mov faddl movabs hlt sub cmpsb xchg add out (bad) mov sub add scas mov or (bad) int3 andl fiadd mov (bad) stc mov lods stc repnz movabs (bad) pushq and jle jl cmc sub loop cmp cwtl (bad) mov xchg (bad) in (bad) rex.WRB rex.RB mov mov add mov rex.WXB add xor ss nop out add rex.WR sub enterq or lret andl sbb (bad) test xlat (bad) add cltd fisubr (bad) stc repnz xor cmc je xchg push jbe (bad) rex.WB int3 fisttp je (bad) mov retq xchg (bad) rex.RB lods leaveq retq sub (bad) enterq or rex.WX rex.WRX stos rex.WB cmpsl jl jne push xor (bad) vpmaxsw insl sbb clc jmp (bad) (bad) repnz lock jmpq icebp rolb rex.WRX xchg icebp pop gs (bad) (bad) or rex.B xlat rex (bad) out jb imul shl movabs fcmovne adcl in data16 add loop enterq retq lea (bad) mov enterq in stc add data16 movslq movsb mov enterq clc mov or (bad) mov es callq callq xchg jl leaveq mov in out lret (bad) outsl xor insl mov fimull (bad) popfq in retq scas (bad) fadds (bad) mov iret insb jp rex.RX rex.R add int3 repnz cltd (bad) mov int3 add add cli mov mov (bad) int jl rex.WR jne rex.WB xchg jns pushfq fidivrl ja (bad) jns sti loop fdivl mov in cmp or fmuls jno test push (bad) mov enterq (bad) ds rex.RXB jmpq rex.RXB push callq test sub shll mov (bad) (bad) int add int3 orb mov (bad) repnz shrb (bad) out xchg popfq movabs rex.RB mov cmp mov icebp out jae (bad) data16 (bad) and add (bad) xchg in lret jbe cmp push incb lret rex.RXB int3 leavew repz pcmpgtd ss and and sbb (bad) add in xchg or (bad) rex.XB repnz rex.RXB cmp or pop int ror mov je mov cs test in (bad) in sub adc rex.RB loope rex.B rex.WX in clc fadd mov (bad) mov xchg retq xor rex.XB repnz (bad) (bad) movabs rex.WX xlat scas jbe mov jno sub negl and shrl adc xlat (bad) (bad) imul in cmp stos lock fidivl (bad) loopne adc scas movabs cltd int xlat or xchg xchg jns in mov je push out icebp rex.WR std jle int3 mov sub je xchg data16 adc rex.RB adc pop leaveq iret fiaddl mov rex.RB rex.RX (bad) cltd sub cmc cmp xor (bad) cmpsb rex.WB fstpl adc and cld (bad) outsb mulb jmpq mov in (bad) (bad) and xchg push mov jrcxz lret mov mov mov xlat icebp jp (bad) ljmp (bad) (bad) gs leaveq (bad) in gs jns movabs rex.WRXB mov js jmpq sub in (bad) jmpq jbe jp es out jns pushq jne int3 rol mov addr32 jae cmpsb adc rex.WR adc or push jo shrb or jno out (bad) xchg in or adc add out add insb out imul test frstor int3 in jno jae jg movabs retq xchg jns movabs movabs loop lods rolb add jb int3 icebp (bad) xlat cmp jns (bad) mov movabs add rex.B repnz xchg rex.X push loop rex.WR mov out rex.WB rex.XB sbb movsb fisub and mov pop (bad) lcall pop mov xchg sahf rex.WR rex.XB ds (bad) jns loop hlt outsb cmc mov nop fisubl hlt loopne add jrcxz (bad) out mov cmp (bad) or js and out ror test out stos callq jl jb jns (bad) cld rex.R ds push add (bad) jbe in cld jnp and jns cmp pushq fldl2e retq jmpq rex.WB jrcxz js rex.WB mov je (bad) and popfq mov rol rex.W fcmovb or xor add sbb and pop (bad) (bad) jmpq pushfq xor jge (bad) clc pop rex.WX adc bswap cltd jge (bad) sub sub xor or test callq or mov sbb dec xlat xor jl roll jrcxz addb in cmp xchg retq or push rex.XB cmp cs and mov (bad) lock loopne rex.W push rex.R mov xchg in jno mov adc int3 push add mov mov or not rex mov xchg rex.W lret mov cmc (bad) push sub (bad) add pop ds and lret jnp (bad) jnp movb popfq or and and adc adc clc fs jo test fbld xchg cmp rex.B jbe cwtl cmpsb shl adc in subl sub (bad) fnstenv rex.WX test cld adc xchg xor rorl idivl movabs movsb rex.RB rex.WR sub rex.B mov nop retq mov rex.WRX jns cwtl fcmovbe mov adc in and imul mov (bad) (bad) jae jae lods and (bad) rex.WR (bad) fdivr push imul pushq (bad) and sbb push int3 lea ja jl cmc adc hlt (bad) (bad) pop jl int lret mov push sub cmp (bad) mov or mov xchg retq imul pushq cli jmpq sub (bad) rcl push rorb add insl movsl leaveq in repnz xor leaveq adc (bad) out jmpq callq enterq lret mov mov (bad) rex.WRX mov mov add in rex.WXB rex.WRX in (bad) scas or cltd push retq movabs or shrb rex.WRX xlat xor mov loopne mov jge test jno (bad) xor rex.XB add int in (bad) pushfq (bad) (bad) test fidiv cltd roll xlat mov iret cltd and fimul (bad) mov scas int rcr mov fs mov mov (bad) jnp adc int3 (bad) sub out (bad) (bad) add cmp scas stc insl and or xlat adc add mov mov or sbb jne mov (bad) sub stc fdivrp retq (bad) test cltd or mov rex.WB rex.R loopne and xlat add cmp jns sbb rex movsb out rcr in vorps psubd retq xchg jae loope frstor jno and jo sbb movslq adc (bad) mov rex movabs (bad) fisttp cli stc mov mul out in popfq push rex.XB (bad) int (bad) mov (bad) cmp rex.WR jmpq mov (bad) jae add xor add int (bad) mov movabs out movb je (bad) jmp (bad) jbe xlat xor out xchg mov shrl ds xlat and insl iret enterq shll xorl retq movabs add fstps imulb icebp fcom (bad) (bad) or and int3 (bad) pop rex.WR mov mov fnstsw mov pop rex.RB leaveq loope loopne stc hlt cmp (bad) push neg int jno add repz gs cmp sbb xor and retq cmp sub movsb mov loope std sub movabs mov (bad) pushfq mov fdivs fldt add xchg cmpsb mov adc rex.XB loope (bad) int3 add lret jae cmp jo rex.R divb in mov sub movsb std add int3 mov and pop callq loop jne jmp jp mov rex.W jb (bad) or (bad) loopne sahf pop notb add sbb (bad) out mov stc (bad) (bad) nop add mov mov stos rorl (bad) lea (bad) int (bad) (bad) stc (bad) (bad) gs (bad) (bad) cmpsl rex.WX movabs in lret lret and loope (bad) rex.R cmc movabs xlat or add ror testl rex.WXB je (bad) xor scas outsl jne jbe test jrcxz xchg cmp mov (bad) test (bad) std cmp rcrl add lret (bad) xlat or movsl hlt (bad) or (bad) testb (bad) (bad) rex.WRX idivb push sbb mov push add adc xchg mov divb pop sub jnp je xor mov leaveq (bad) fldcw rex.WRXB cltd stc rex.RB rex.WX mov adc xchg push ss jrcxz movabs sub (bad) repz xchg (bad) in xchg loope retq sub jmp pushq or mov hlt (bad) sub jmpq ja rex.WRB repz jle mov int std adc xchg ficomp xlat cmp or lahf (bad) icebp mov icebp rex rex.XB xor outsl retq in lahf rex.WR mov cmp in and cmp (bad) mov sar and jrcxz repz icebp jns in and xor mov jne bnd cmc jmp (bad) iret xor test (bad) sub cltd fildll jno callq add xchg lods (bad) cmp (bad) rex.WB and push sbb lods sarl xor (bad) cld xchg fstp mov sub je popfq add rex.W (bad) mov and gs mov (bad) add (bad) ss sub (bad) xlat (bad) rex.RB cs rex.RB incl (bad) iret cmpsb xor (bad) fwait (bad) retq adc pop incb shr jrcxz icebp imul js mov fimull movabs cltd rex.WR rex.RB repz sub mov lock adc cmp rex.WB gs clc retq js xchg mov js ss cmp or shrb sub out int3 (bad) (bad) repz int3 vmovhps (bad) fcoml jno stos add sub sarl pushfq pushq int3 or rex.WR (bad) movabs (bad) adc negb jrcxz cli sub movabs stc mov pop sti out js xchg or rex.WRX jp movabs iret int test (bad) ficoml cmpsb xor mov je movabs pmullw leaveq jp mov cs stc mov js insl xchg fdiv stc xor scas out mov test jrcxz loop repz loopne mov rex.WB or (bad) stc cwtl push (bad) rex.WXB lret jmp out mov sub movabs vmovsldup mov insb (bad) notb fmulp jne data16 hlt jl lock xchg negl repz outsb and (bad) or (bad) leaveq xchg divb adc (bad) outsb xor cltd rex.X add jo mov sbb lret retq mov ficompl int imul and sub rex.WXB fs (bad) shl mov or rex.WB adc sbb rex.RXB rex.XB mov in mov push rex.WXB rex.WRB and leaveq stos clc repz mov jl gs fisubr pop rolb xlat lea and (bad) pushfq in leaveq pushq callq adc ftst out cli repz xchg fsubrs fdiv insl (bad) xchg fstps iret fsubs jmp and (bad) nop repnz in sub ss lock jrcxz movsb test add loop (bad) out pushfq mov cmp mov test fmul mov or lea jb jne rex.WR fdivr rex.WRX push add jb cld mov repz rcrl push pushq jb (bad) jb sub movslq movabs retq rex.WXB lea js mov jrcxz jmp (bad) and (bad) rex.WRX int3 (bad) retq add (bad) xor mov rol xor or out push cmp add pop or repz mov pop int3 sbb hlt imul negb push xchg js or xor (bad) enterq in (bad) sub jmp sbb pop xchg test cmpsl loope fiaddl add rex.WXB xchg add adc pop xor fildl rex.WRX rex.RB int3 jrcxz scas rex.R frstor ja mov xchg ds xlat (bad) callq sub movabs xor (bad) xchg jrcxz xchg cmp hlt stos callq xor imul pop cmp (bad) xchg rcrb adcl push (bad) pop pushfq add sbb mov or and fild add xor pop mov ss rcll mov fdivrs mov xor fs or mov je lret test fnstenv lret mov adc rex.WRX add fcomp add cmp retq rex.WXB (bad) std jo add nop jrcxz (bad) lock jrcxz mov outsl out popfq int3 cmp and ss and xor in loope sarl add movl or mov test mov or clc jle jnp (bad) mov (bad) icebp out sub out stc (bad) loope (bad) repz je lods adc (bad) xor and hlt cmpsb (bad) sub je leaveq in gs sub mov mov cltd xor repnz cmp jbe sub rex.B (bad) mov rcr (bad) callq and clc movabs jmp jbe or movslq hlt sub hlt sbb imulb jae rex.X rex.WRX rcrl fmull in pop rex.WRX (bad) insb jg (bad) mov movabs jbe jno sbb (bad) cmpsl test rex.WXB (bad) sub cmp bts imul (bad) xor out sub and add movsb xchg jg ss out sub int3 hlt ffreep mov jmpq mov loopne retq add int3 jo outsl add sahf in int3 (bad) or cld (bad) rex.RX sbb rclb loopne (bad) fdivrl test rex.XB lock pop mov lea cmp (bad) pushfq fcom scas add mov sahf (bad) (bad) mov fdivl lods (bad) fwait (bad) fsubl mov (bad) mov (bad) add movsl sbb fldenv push fidivrl rex.WB rex.RB mov addl xchg push mov retq movabs pop (bad) cmp pop push test lahf cmp sbb shufps jp (bad) mov out jl or mov loope sub scas (bad) sub rex.RB mov repnz rex.RB rex.R out callq or push andl cmpsl mov movabs mov mov stos rex.WX rex.RB repz fsubrs (bad) (bad) int3 rex.WRB sub cmp rex.RXB rex.RX rex.R jrcxz imul or out ja (bad) mov jb or adc test in and pushq xor (bad) (bad) stc notb (bad) xor add movabs out and and push or icebp and (bad) or in lods cmc int3 (bad) cltd and stos negl subl xor mov xchg iret ja jae xor jp pushq rex.XB push test (bad) sbb out (bad) fsts (bad) insl sub xor nop repz sub and test jle (bad) mov roll in xorl stc lret (bad) mov add roll push data16 mov jmpq popfq fsubp fs or stos (bad) (bad) in lret je sub cltd lock pop add adcb testb adc mov repnz in rex.X (bad) rex.WRB iret mov rex.RB rex.RB add jnp fist fcmovu cld mov test callq sti jle rex.WRXB repz mov jns (bad) iret in sub xlat retq sti leaveq rex.XB fsubrp jge out and icebp (bad) cltd push (bad) fimul addl push repnz xor jne mov (bad) rex.WR jbe pop test xchg rex.WB and clc scas out or push cmp jl fidivl icebp rex.WX iret cmp and sub incb test lea (bad) push ja or repz in not add push (bad) fistpll (bad) xor rex.RB fsts sub fsubrp (bad) callq jo mov cmp outsb sub rex.WX sbb xchg callq jbe xor xor fiaddl cmp test xchg in shll xchg rex.WXB ja jrcxz insb test mov test cmp xlat and or cli rol mov out (bad) (bad) out sbb (bad) (bad) gs sub (bad) sbb mov adc sbb sub fadd jge fwait lock sahf sbb pop sbbl jno cmp mov mov data16 rex.WRB ss add (bad) rcr mov add out mov fild hlt enterq (bad) leaveq out and or xor out mov xchg sub or xor movsl (bad) add push (bad) (bad) test adc sub cli gs mov fcom pushq leaveq rex.WR (bad) loope div movabs fstps (bad) add (bad) (bad) mov jno mov mov fild (bad) rex.RB add shll int3 mov insb out idiv mov (bad) in (bad) fisttp add rex.WB loop mov in add mov retq fcom insl test (bad) jmpq sub cmp mov and (bad) (bad) mov pop je (bad) (bad) xlat xchg jmp and callq mov (bad) fnstcw (bad) hlt rex.RX jno xor mov (bad) cld test mov and scas mov test rex.WRX push lock movsb mov add movsb repnz xorl clc rex.RXB (bad) (bad) mov or jns mov mov fcoms sub sbb nop (bad) fcmovnb jrcxz or jae fs int jb in rex.X mov xorl rex cwtl (bad) jbe jne stos repz rorl jae loope xchg in shrb idivb (bad) or test adcl (bad) add (bad) enterq testb mov (bad) int3 mov cmp fmuls add jo fs rex.WRXB mov in xchg iret out and add (bad) loop add mov (bad) std pop (bad) pop or mov (bad) mov pop sbb sub pop jl (bad) or push repnz fsubs (bad) mov (bad) push sub (bad) adc (bad) (bad) rex.W and sub cmp mov gs (bad) xchg rex.RB addl rorl outsb loope int3 sbb sbb repz pop clc pop sub stc notb mov (bad) int3 rex.RX xchg push and mov (bad) retq repnz (bad) (bad) mov and lock in punpcklwd jno sub cmp movsb jge in rex.WRX gs xchg (bad) mov rex.B movabs mov and sub icebp test xchg jg sbb push xchg or enterq (bad) sbb (bad) fdivrl rex.WB data16 (bad) jl (bad) mov (bad) mov retq lret icebp lret lret (bad) (bad) int cmp and in rcrb (bad) fnstsw rex.WXB repnz lods rex.B (bad) hlt out repz sahf (bad) test mov xchg std cmc mov clc or int mov icebp fildll out (bad) xor (bad) pushq shlb mov mov loope sub cli rclb pop cs fbstp cmc sub movabs sub in cltd (bad) (bad) (bad) add and mov (bad) int3 (bad) fild addl jne fs sbb lock rex.B fnstsw cmp jmp (bad) (bad) mov adc int mov lock jrcxz leaveq fdivl movabs jne ja je pop shlb or (bad) hlt jns test fnstenv and cmp mov (bad) xchg fadds and subb (bad) sbb pushfq xchg rex.R rex.RXB cmp jp and add rex.WB and fdivrl rex.RXB sub sbb (bad) sbb xlat int xchg in cmp retq add repz cmp xchg std fidivrl movabs cmpsb sub adc pop movsb jl movsb repz jmpq sub jae movabs shlb retq xchg gs or (bad) jrcxz enterq xchg or int (bad) repnz add and xchg (bad) xchg cmc sbb sbb cmp push orl (bad) xchg push push cmp fstp mov mov int mov test clc sub movsl mov jbe and adc (bad) movabs cmp mov xor pop (bad) mov outsb fs fprem mov icebp sub xor cmc (bad) sbb (bad) insl (bad) sbb push and xor and shll xchg test lahf jne sub adc pop mov add rex.WR (bad) retq mov xor int xchg xor test (bad) fbstp sub xchg fs adc mov movsb retq jg add test jrcxz xchg push rcrb rex.WR rex.WX imulb adc sti (bad) pop stos imul in mov jns add mov mov (bad) repnz (bad) (bad) xchg rex.WX ds sub pop (bad) rex.XB rex int cmp test (bad) test leaveq scas xor repnz and add jno sbb je lret xchg orl enterq fcomp xchg add xlat (bad) pop stc repz cmp notl fisttpl (bad) (bad) adc rex.WB cwtl add or mov sub cmpsb or test movsl rorl ss cs (bad) int mov sbb fmuls xchg rex.RB xor and rex (bad) (bad) sbb mov (bad) and cli mov (bad) mov lea rex.WXB rex.B test xor cli xor movsb lea (bad) in cmp lahf test mov mov jl,pt (bad) cmp bnd sub mov xor jmp stos (bad) fistpl (bad) rex.WB xor pop adc retq and icebp cmp xor xor rex.RB sbb icebp (bad) adc pushq movabs lock (bad) xor fcmovnb add fnsave add lock xor (bad) or add (bad) (bad) sub mov and add mov mov pushq movsl and rex.WRB mov loope xchg fs (bad) (bad) xchg movsb (bad) sub repnz rex.B rex.WR cmc rex.WB movslq (bad) shlb out add jnp add jno insl rex.RB jmpq fldl repz movabs xchg rex.RB rex.RB loop (bad) jge jb fild push (bad) lock mov in movabs push (bad) rex.WX sub and movabs leaveq pop (bad) ss repnz lods pmulhuw (bad) rex.R repnz and jp (bad) movabs pushfq jp add hlt (bad) and test (bad) sbb addr32 in cld jno mov sub in and jns negl and ror rex.WXB and pushfq or out (bad) cld xor mull cmp jl (bad) scas pushfq rex.B scas imull sub add movslq mov and cltd push in push mov subl ja and rex or fcoml iret insl (bad) enterq out jbe leaveq jno test rex.WB mov sbb or (bad) stos loop test data16 (bad) in mov lods rex and mov lock pop mov lret repnz cli mov or mov cmpsl xor adc leaveq mov (bad) test sub (bad) data16 sub movabs leaveq mov pushq negb add xchg and (bad) jne jg jb lock rex.WXB rex.WRX int3 cmp sbb (bad) out idivb repnz rex.WX sub sbb (bad) movsl fwait sbb sub fdivr (bad) rex.R mov add pop in xor jo lret gs test hlt test lods mov rclb mull lea fldenv mov mov in add rex.WRB jmp test cli insl xchg sti mov test xor jae sarl (bad) imul movabs (bad) fstps movslq cmp mov (bad) and xchg jmp xchg mov add rclb movslq jno mov sbb lods (bad) ss movabs and and or cmc xchg mov (bad) (bad) stos jae (bad) xchg pushfq rex.WR int3 je jrcxz int3 (bad) scas rcrl rex.B gs and js rex.B rorb rex.RB fwait mov lahf lea std scas lret enterq add xor sub mov decl (bad) or sub (bad) or scas mov in sub int xor (bad) xorb cmpsb xlat or cmp stc jae (bad) rex.WB movslq fs out (bad) cwtl in pop loope fwait js xchg cmp nopq and add fstp cltd rcrl mov (bad) rorb mov (bad) int3 or in leaveq jns sbb mov cmp fisttp fsub and in stos test (bad) xor clc push mov sbb out clc (bad) fldcw adc pushq adc test lret (bad) movslq add ror rex.B callq je (bad) mov rex.RXB cmp ss fucom mov retq sbb roll nop and lret scas lret xor xor jge mov (bad) jne push rex.WRB mov push mov in mov rex.RX gs outsl rorl callq loop fwait mov fisttpl sub push roll sub mov cmp jae xor outsb and loopne leaveq sub mov (bad) hlt in (bad) mov (bad) (bad) cld or callq (bad) (bad) fistl sbb stos rex.RX pop (bad) jrcxz lahf ss rex.RB jp or and pop cld iret std (bad) rex.WB rex.WX js in xchg sbb lret mov adc mov (bad) jae xor orl pop rex.X movsl sti mov retq (bad) and rolb adc sti enterq and retq shll fnstenv leaveq and pushq jl mov fbld (bad) or popfq mov in fidiv hlt rex.X push cmp fsubl lock jne test iret (bad) cmpsb gs adc (bad) rex.XB fsub rex.WRX ss rex.WRX data16 cltd (bad) xor rex.RB rex.WB rex.XB mov or (bad) mov test xchg (bad) (bad) lret xchg lods stos jb push testb cmp xlat mov mov xchg and jno mov xlat repz add insl adc (bad) xor fcoml hlt or or imul jnp jnp div jae shll scas sub rcr (bad) test adc rex.WR (bad) adc movabs (bad) int3 sub pop (bad) sub in add add movabs sub add addr32 xchg mov sbb gs fcomip add or xlat (bad) cmp retq cmp imul ss add je repnz in add adc cmp xchg roll lods rorl jno hlt movabs (bad) adc pop push adc std push outsl rex.XB rex.WR mov (bad) (bad) (bad) rex.R xchg sub adc jp pop lea rex.RXB mov and cmc mov jmp movabs xor and sbb jns cmpsl mov addl mov enterq (bad) in xor (bad) out movabs cmpsl xor jo clc rex.RX gs adc lods (bad) (bad) cmc repz imul (bad) mov mulb and mov rex.B repz (bad) and (bad) icebp xchg or (bad) xchg (bad) ja sub in rex.RB ss and jge (bad) cmp (bad) xor lods and or loopne push out sub xor faddl out xchg rex.W adc (bad) in retq add cltd and xchg xor (bad) stc test rex.W jp loope jo (bad) addr32 mov cwtl rex.RB xor sub or callq sbb xchg insb or jbe rex.WB ja and repz in (bad) (bad) testl mov insl stos repnz notb rex.RX vandnps je gs iret loope xlat xor jne retq loop add (bad) pushq rex.XB (bad) jmpq pushq fsub or xchg scas enterq mov (bad) or mov leaveq (bad) xor adc insb repnz mov out mov (bad) push (bad) hlt (bad) (bad) rex.B or (bad) test and mov mov rex.R addl sub fdivrs mov adc add (bad) loope (bad) adc (bad) rcrl imul pushfq shrl cltd and cmovne rex.B xor xlat cmpsl in sub pushq mov cmp (bad) push jrcxz mov or cli (bad) rex.R rorl cmp rclb int3 sub (bad) fisubr cmp jno jne jb int3 xchg (bad) adc xchg and xchg mov pop mov addl (bad) gs icebp mov or jmpq cmc (bad) cs orl repz xchg loopne xchg adc fs mov jl punpcklwd xchg leaveq and mov repz xor or xchg fldenv and test add mov jbe (bad) andb (bad) gs lea jp and retq callq (bad) cmc rex.WX mov pop retq add (bad) je cmp cmpsl pop loope sub imul mov xchg (bad) (bad) iret fs rex.X pop or mov adc addb mov (bad) add mov sti out jo addl enterq cld jnp mov rex.WX rcrb jo jl mov pushq ja (bad) rex.WR adc xchg (bad) (bad) jbe ds mov cmpsb sub movabs mov (bad) mov or xor (bad) (bad) (bad) movsl xor jp,pt lods fistp (bad) mov xchg rex.W loopne lret js add adc xchg fwait push mov ss int rcl fmul movabs xchg mov (bad) clc test rex.W and push icebp movsb insl push jns mov rex.WXB and (bad) adc addl adc jrcxz push ficompl cmp fmull roll add enterq rex mov sub and loopne (bad) sbb test (bad) pushq sub jbe mov (bad) cmp sbb lods stc in jnp iret adc xor loope rex.RXB test rclb insb retq (bad) addr32 adc push nop adc (bad) cld mov (bad) shlb outsb xor ds cmpsl cmp cltd (bad) adc add cmc outsb jns test or jne hlt hlt stc (bad) icebp (bad) fprem clc xchg xor push int3 rex.XB push sbb mov stos imul sub push adc lods test movslq (bad) and test cmp fcomip mov or test movsb sub rex.WXB lock add rcr retq jrcxz int xor out leaveq int3 retq pushq (bad) xchg and push mov (bad) rex ja jae xor iret sub lret (bad) jno mov hlt rex.WXB outsl mov xchg sub or out stc pop xor movabs cmp stc pushfq cmp cmpsl std xor insl adc cmp rolb (bad) xor cmp movslq push or (bad) idivb xchg rcll pop fcoms push movabs imul lea fcomi out in fdivl lea push jmp sub xor xor fmull es xor rex.WB mov callq mov repz (bad) lahf gs callq (bad) rex.WXB test jl mov (bad) cld (bad) imul insb xor cwtl callq loope rex.WRXB out test int3 rex.RB sar adc es movabs rex.RB repnz repz (bad) mov iret je mov xchg hlt shrl je adc push in mov jle lods (bad) mov jl je popfq or mov (bad) pop fadds and sub rex.WRXB cs and nop or lret callq push in mov rex.RXB mov in sbb insb fsts mov retq cmp retq hlt or test callq iret cqto adc test rex.RX (bad) scas movabs jno roll cli mov xor xchg add push repz fcoms int3 (bad) out rex.WR push shlb (bad) add pop rex.WX push (bad) subl jle lahf lret popfq or in (bad) test add loop fldl sub and lret popfq mov push (bad) (bad) test cmc rex.XB rex.XB rex.B incb push stc sti cltd push mov add xchg and push rex.RXB jne hlt (bad) rex.WRX xchg (bad) in adc (bad) clc (bad) pop gs adc pushq sahf data16 cs cmpl and or xchg sub or jo cld shlb rex.WRX xor mov cmp out rex.RX cmpsb rex.WXB rex.WR scas pop jnp jne and (bad) imul jmpq int push xchg rex.XB or rex.XB adc jle cli int3 sbb test (bad) loope enterq (bad) rex.WB (bad) jb xchg test repnz repz rex.WB rex.XB rex.WRXB int3 int rex.RX cmc rclb (bad) mov lret mov cmp retq rex.WRX movsb fidiv stos rclb in rex.RB and vaddps cmpsl mov rex.WR add sbbb enterq outsl (bad) rex.RB out push jo jrcxz push jrcxz psllw loopne lods fcoml rex.WRB fnstenv or mov imul lock rex.WX (bad) jnp in icebp pop sub xchg rcrb mov (bad) add (bad) rex.RX sti cmp xor jmpq rex.RX rex.RX sbbl hlt rex.RB fidivl leaveq rex.WRXB (bad) sbb movsb (bad) jno popfq in add mov movl push add rex.B pop rex.WRX rex.B sub int3 in in (bad) int je sub xchg mov xchg lret mov (bad) jmpq flds mov retq xchg int3 mov (bad) scas cmp pop rex.WR (bad) rex.R adc insl xlat loop (bad) mov sbb idivl push pop xchg mov xchg (bad) jmpq adc pop iret jp rex.WX cmpsb xchg (bad) vandnpd test mov cmc and pop int3 outsl (bad) enterq mov not or mov or pop (bad) jmpq adc mov jno and and (bad) rex.WB sub cwtl movslq cmc add rolb mull add lea rclb xchg neg adc (bad) or cmpsl lock jae in scas sti test rex.WR mov pop pop (bad) rex.WB add mov rex.RXB xorl (bad) enterq rex.X ds rex.WB add nop jrcxz cld cs rex.RX ss out (bad) stc (bad) divl cld jae jno hlt mov (bad) insl rex.WR add retq movsb scas andl js icebp (bad) jle sub sbb lret rex.WXB sbb sub and (bad) rex.WXB mov rcll icebp pop pmaxub jne in rolb rex.WB popfq jno (bad) (bad) (bad) xchg rcll flds sub rex.WXB iret (bad) (bad) xor pushq (bad) mov lret (bad) scas jle scas imul jrcxz sbb lahf pop jp (bad) in test push fs sbb (bad) jno add cmp (bad) lahf mov int3 (bad) rex.WR in (bad) adc repz add (bad) rex.WXB mov (bad) xor jp jbe fs (bad) repnz sub movabs negb mov in (bad) jle rex.WRX cmp jns movsb (bad) test lret out rex.X rex sub sahf imulb mov fs (bad) (bad) int3 data16 imul lret rex.WX rex.WB mov je xchg iret rex.WB cmp xchg mov ds jmp jle jmp leaveq sbb mov (bad) pop mov lock gs loope icebp in mov (bad) enterq in (bad) ud1 add mov scas mov xchg fadds mov imul rcll mov nop pushfq mov subl pushq lret xchg (bad) xchg mov (bad) mov mov (bad) (bad) (bad) clc sub jl clc (bad) and repz xor rex jns cmpsl in pushfq (bad) enterq pushfq mov sub in jmpq sarb jrcxz enterq je fcmovne (bad) mov rex.XB fs (bad) rex.B (bad) rex.WRX push in int3 fadds loopne and rex.W (bad) or repnz or adc rex.WRX rex.WR mov movabs rex (bad) lods (bad) rex.WRX movabs sub jrcxz (bad) data16 cs (bad) cltq rex.WRB lock clc movsb loope rclb movabs lahf rex.XB repnz rolb sub sbb out push callq retq mov cmp fnop fnstcw rex.XB adc js movsl xor mov pop (bad) loope enterq push test loope add fmuls mov andb (bad) sbb push notb xchg rex.WB and add or push cltd sbb rorq imul sub (bad) rex.WRB test or ss adcb (bad) add fldlg2 or test (bad) (bad) push repnz jl cli jmpq int3 rex.WRX vunpcklpd in (bad) rex.WRX push or and test rex.WR mov (bad) jns mov ja stc (bad) rex.WR iret jp icebp (bad) repz int3 clc mov jrcxz mov adc pushfq mov lods rex.WB sub stc out (bad) mov add cmpsl sbb (bad) mov mov rex.RXB movslq pushfq shll lret jno (bad) mov jmpq mov retq test rex.XB movabs sbb lret enterq (bad) lret xchg ss cmpsb gs rex.RB jrcxz movsl mov rex.RB push fnop mov movslq pop rorl sti rex.R xchg mov out div in (bad) movabs rex.R (bad) pushq out je adc mov or cmpsl mov (bad) xor rcrl add lret cmpsl enterq ja rex.R rex.RX ss sahf pushq lret in (bad) cmp je rex.RX mov and movabs movabs and rex.WXB shrb (bad) scas cmc xor pushq (bad) movsl loopne adc int3 in in clc add (bad) xor and rex.WRXB rex.WB (bad) cli test outsb jrcxz push mov xchg mov outsl loopne rex.WR ja icebp (bad) xchg (bad) (bad) pop mov (bad) movabs mov mov cmp jne cmp (bad) in or jmpq leaveq or retq mov loop mov cmpl movabs (bad) mov cmp out sbb in out int andb outsl je stos imul (bad) rcrb and (bad) push sub adc nop xor and cld sub mov cmc mov (bad) lret (bad) out fmulp test gs add ffree add fidivl xlat cmp out sbb jne cmpsb xor js mov mov (bad) jo (bad) or int (bad) xchg rex.RB mov and adc mov jns push movabs rex.B iret retq pop in (bad) repz lahf add xchg and lods xor sub (bad) (bad) iret cwtl adc fmulp iret sub (bad) xlat rex.WXB cmpsl repnz stos lret (bad) sti (bad) out addr32 jp jno hlt xchg mov std adc repz xchg rex.WR rex.W repz xchg insb jnp xlat fldenv mov mov pop sbb imulb out (bad) out mov mov cld out movabs mov fsubrs (bad) xor outsb and rex.WRX (bad) stos mov jg rex.W loope jmpq (bad) pushfq movabs adc (bad) xchg stos in xchg xor jnp icebp xor stc movsb scas fildl or stc jno mov test mov (bad) xchg jae out mov xor pop movslq jo loope repz rex.XB (bad) jl push movabs enterq addl push mov jne mov movabs clc movabs movslq push sarl fistpl cmp mov test icebp (bad) (bad) (bad) rcl (bad) mov adc (bad) jrcxz (bad) repz (bad) (bad) mov rex.B movslq push roll movsl test retq stos mov mov (bad) and (bad) div (bad) out pushq push icebp (bad) jle hlt out pop (bad) insb pcmpgtd (bad) pop sub (bad) (bad) orl xor hlt insb xor ja adc outsb cmp test (bad) mov or mov cmp xor sub add (bad) or lods enterq repz cmpsb (bad) fyl2x cmp rcll xchg cmp addl push (bad) nop callq movabs fnsave retq int stos pop add shll or (bad) adc (bad) (bad) cmc pushq cmp test vmovupd sub add push jbe rex.WX xchg rex.WRXB es (bad) repz int cmp in push test shll callq mov cltd and (bad) xor and mov lea (bad) (bad) roll (bad) mov mov sub mov add (bad) cmp (bad) adc push test jl (bad) jno pushq cmp movabs repz mov leaveq (bad) clc (bad) movabs jne repnz pushfq cmp xchg (bad) pushfq icebp rex.RB cmpsl (bad) test (bad) jno push icebp mov bnd (bad) xchg sub rex.B gs (bad) enterq (bad) (bad) repnz rex.WRX add mov (bad) cmpsl xor or loopne divb xor pop and in mov mov adc cmpl sbb movabs rex.WXB (bad) and clc add hlt or sarb in push mov rex.RX xor lock (bad) in divl repz rex.R (bad) fidivrl lahf (bad) ffreep mov mov jae rex fadd loopne mov pop rex.RB test adc add in (bad) rex.WR xchg push (bad) fbstp sub leaveq mov sti rex.RXB xor loopne retq xor int neg iret (bad) jbe mov rex.WRB fucomp (bad) (bad) (bad) pushq sub sub and xorl movabs neg int3 push mul cmp mov or (bad) cmpsb in push (bad) test clc mov xorl retq xor fiadd shl pop rex.RXB mov rex.RX pop xchg fist xchg movabs sub mov (bad) repz (bad) xchg mov (bad) jae retq fildll cmp mov lods fldenv (bad) and (bad) pop es fiadd rex xchg fcmovnb sbb repz sbb cli add js add std es mov rex.RB add push enterq jne icebp popfq sub in cmc (bad) repz rex.W (bad) add test adc loope movsb add or add test add mov push movslq cltd lock mov callq lret js sti repz mov xor movsl add sbb movabs mov jae insb (bad) sub cli iret insb lods jg imulb cmc imul mov (bad) icebp retq jbe (bad) lret ficompl negl sti xor jmpq cmp test jae rex rex.WR or int3 or add xor int3 pushfq jne fild rex.WXB rex.WR test sbb mov (bad) loope (bad) mul rex.RX int3 lahf cmp (bad) mov movabs add (bad) pop fwait (bad) rex.XB or pop (bad) enterq rex.XB jmpq lods jg test int3 (bad) ja pushfq loop sbb mov jrcxz (bad) callq in outsl out mov insb rex.RB (bad) rex.WRX lods ror rex gs lock (bad) cmp xchg jl (bad) jno rex.WR ds cs jne adc jb mov (bad) mov loope (bad) std mov jg roll lret repnz rex.XB lea rcl int jb (bad) push mov rex.XB jl scas lret add lods mov (bad) jne movslq mov rex.XB rex.WX leaveq pop (bad) idivb addb rex.R out (bad) mov cwtl (bad) imul (bad) scas xchg lock push repz jns (bad) rex.WRXB movsb cmpsb cmpw jl or rorl sub fisub xor push sarb jge (bad) (bad) pop (bad) rex.WR movabs (bad) (bad) pop jbe rex.WR jns (bad) (bad) rorl sti cli (bad) add cmp movabs rcrb cmpsl (bad) nop imul add addr32 jbe faddl lret movabs pop jg movabs jmpq cmp loopne cmc in (bad) rorb xchg (bad) fwait mov movsl xchg loope fcomi adc negb rcll jns xchg mov in jbe scas xor fdivl enterq repnz rex.WB std xchg jmpq xchg fdivp (bad) rex.WR (bad) leaveq out rex.WRX xor test (bad) iret (bad) clc jbe movabs and xchg addr32 mov clc rex.XB imul imul (bad) int movabs rex.B fnstenv add movslq rcr add jrcxz xor decl sbb loop sub insb (bad) int or int3 icebp rol stc jrcxz rex.RXB xchg (bad) fisubl or pop rex.WRXB leaveq movabs add (bad) rorl push xchg rex outsl mov jns rex.WX fwait imul sbb or mov (bad) rex.WXB sub and rex.WB es (bad) push add addb subl sahf mov clc xlat rex.WR jl jp adc out rex.WRXB sbb es callq rex.B sti pop sbb in test ror lods es in insl fdiv jne mov xchg push adc rex.RXB cmpb mov stos test (bad) mov sbb mov mov mov lock rex.B jle sub mov mov jo (bad) (bad) (bad) push mov out add rex.WR stos sub lods (bad) addr32 rex.WXB rex.XB rex.WRXB rex.WXB jge repz xchg test movsl cmpsb (bad) in or (bad) sbb test push rex.B rex.R xchg xchg (bad) xchg xor mov add fildll repnz movabs out (bad) in rex.WXB andl xchg cmc add icebp rex.XB movsl lret and icebp pop rex.R (bad) mov push out test icebp mov orl loope (bad) (bad) or jge (bad) sbb fiadd (bad) jl popfq (bad) loope addr32 nop rorl mov (bad) icebp adc sub pushq movabs pop (bad) mov cmc rex.B cltd rex.XB jrcxz sbb lret loope xlat icebp pop add mov mov mov (bad) repz xchg (bad) mov (bad) (bad) movabs enterq int3 movabs rex.WXB sbb and jle or (bad) imul and or (bad) movabs rex.XB fdivrs je test sbb cmpl and rex.WXB add movsb xchg icebp jge sbb (bad) sbb leaveq (bad) sbb mov test sub roll movabs fmul (bad) (bad) rolb nop rex.B mov and repz pop jno jbe add rex.WRB rex.XB nop jno xor fs adcl nop lea in sub movabs mov pop cmc loope xor roll sbb jg mov hlt leaveq adc sub loope jmp cltd sub data16 in xchg cmpl imul mov mov sbb xlat (bad) fstps push jmpq sbb test cmp mov jmpq scas in movabs rorl jns add out out in (bad) mov (bad) jns adc (bad) lods in loope xchg imul jnp rex.WX callq rex.WB cmp pop (bad) or popfq shrl rex.WXB (bad) stc xor mov vmovd mov cmc jno loope test jbe jns sbb stc in push adc xlat xchg xorl mov rex.WX (bad) rex.B cmp mov add in jge repnz lret mov push repz add std (bad) mov mov in mov rex.RX (bad) in sahf shr lock shl rorl std xor lods mov shll pop rorl lods jl (bad) roll and fs sarl clc movabs adc mov jnp rcl and mov cmpsb shll movabs divb stc lret mov cmp cmp (bad) mov push mov (bad) rol mov cltd rcll lahf cmp (bad) mov repz movsl (bad) in roll push and fsubl iret (bad) jae xchg add mov rcll out sbb rex.WX or mov add and sub cmp repnz sub fstps pop rex.WX jmp (bad) or std rex.WRB sarl repz sti xchg and in movabs jne jp cmp jb test popfq (bad) cmp movsl test rorl (bad) sbb cltd negl rex.WRX rcrl js iret rex.WR xchg cmp rcrb insl stc (bad) cmpsl movabs push (bad) mov cmc cwtl mov incb mov (bad) bnd cmp jg int pop (bad) scas in push sarl push addr32 (bad) rex.WRXB rex.RXB rex.WB rex.XB int rex.R (bad) mov xchg loopne mov xor jno adc (bad) shrl fadds lret (bad) adc lods test rorl stc fisub in (bad) rorl (bad) jbe sti jns rcrl insl (bad) (bad) pop xor rcll jno mov fbld (bad) icebp xchg (bad) add rex.WR jg (bad) push xor rex.WRX mov adc outsb add xor sub push lahf mov rex.WR sbb mov rex.WRB rex.XB adc and decb xchg add sbb lret retq (bad) rorl (bad) cmpsl ucomiss ffree add insb xchg add int sarl (bad) mov mov add rol repz movb pop rex.RXB add pushq xor rex.WR leaveq shll movsl fldt int3 test pushq pop imul pop and sub movabs lods rex.RX lret push mov scas stc movabs xchg add add (bad) cmpsl ja (bad) rcr (bad) loop jbe pop sub cmp (bad) xlat jo (bad) rex.RXB jmpq jrcxz rex.WX pop int3 clc lret adc mov (bad) push js stc xor rex.B ss mov rex.RX rex.X (bad) or pop jae add roll push gs pop cmp cltd out xchg (bad) movabs outsl movabs repz (bad) sbb sub add and movb or fs mov xchg sub or lret lock movslq fs lahf rex.WR xor movabs push xor shll rex.RX jmp iret mov enterq (bad) xchg rcl add push or mov rex (bad) adc xor (bad) cmp rol outsb mov (bad) pop sub (bad) rex.WRX xor imul cmc sub (bad) mov mov mov nop pop fwait rex.WRB rex.B xchg callq imul ss mov clc sub imul repz (bad) movsb (bad) xchg fxch xor int std pop sbb rcrb (bad) rcrl shr rex.X (bad) rex.WXB pushq mov (bad) add (bad) (bad) push (bad) (bad) xchg or (bad) xor push movslq cs scas (bad) push lahf rcr (bad) xor ja mov lahf stos repnz mov movabs rex.WRB lret rcrb or (bad) repz rorl sub xchg cld sub scas lret movslq inc mov adc paddsw movabs cli sub mov test jmpq rex.WX or (bad) rex.X movslq rex.WR rex.WRXB (bad) (bad) in movabs rex.WRXB sarl subb mov outsl retq jg fsubs (bad) int sbb xor std jl mov (bad) (bad) (bad) adc fwait retq xor jns sahf mov mov roll push (bad) jp rex.X (bad) xor (bad) sarl jb shrl cmpl adc std retq xchg outsl mov (bad) mov lret loope addr32 sub sub (bad) jl insl push in (bad) pushq rex.RX adc xchg int3 sahf js add sub cmp popfq pop xchg in es rex.WB mov insb (bad) stos fidiv ds shl pop (bad) addr32 or rcl nop (bad) stc leaveq ds repnz push roll rol lods sahf mov jrcxz or sarl loope cmc (bad) sahf push movabs roll movslq push mov retq pop xor xor (bad) int3 xor (bad) idivb (bad) xlat rex.WB roll rex.RX callq add scas (bad) sbb movabs imull xor sbb xchg movsl or or movabs std out cmp movslq outsb ds mov int sub rcll in mov xor mov push imul shll shr sub movabs and pushq loop lahf mov rex.X adc (bad) fisubrl xchg sbb shlb rex.B movabs callq pop out rex.WX rcl jae movslq rex.WXB pop pop rex.RX (bad) adc or (bad) cmp pushfq repz stos sbb outsb mov add mov shll mov rex.WXB jne in xchg mov rex.R movsb test or jmp mov jb loop xchg jns loop lods repnz or xor rex.X jge outsl xor cld (bad) adc mov loopne fisubrl rorb shll (bad) sbb sti imul push (bad) sarl push xchg repz imul xlat scas xchg (bad) jrcxz movabs push xlat (bad) pop (bad) clc imul repz out lods fwait jae idivb (bad) fstps in loop test repnz (bad) (bad) (bad) rcrl adc adc rex.XB in loop retq shr lret sbb lret or xor jle (bad) stos jne leaveq push fwait push sub lret sti std and lock add subl mov scas mov shl rex.WRB rex.B loop or mov repz push shl xor hlt sub cmp xor rex.WRXB adc sbb roll addr32 enterq mov mov cmpsl xchg (bad) faddp jno mov push shrl mov pushq cmp fcmovb movabs lea and cmpsb enterq cmp lret mov (bad) rorl test rorl popfq xlat out ja xchg roll jmpq (bad) ror adc lock jno (bad) cmp sbb jno rcr add (bad) sub insl movabs (bad) or rex.RX movabs iret (bad) addr32 mov rex.WB jne sbb fwait add fcoms sti out adc (bad) ficomp jno sub out or jge rex.RB mov mov rex.RB rex.XB jge cmpsl adc adc (bad) out test add lea rex.R pop out (bad) invd ficoml lret fadd fidivrl repnz iret jmp ss add out xchg leaveq vcvttss2si pop pushq and fistpll xor hlt fs repnz lahf movsl and fidivrl cmp imul adc add rex.WR xchg jns rex.RXB sbb (bad) movabs fsubs jmpq mov add sahf retq (bad) outsl (bad) int3 pop enterq (bad) jno add fcmovb test sub pop lcall cmpsb xor sub sahf jo (bad) pop adc or (bad) icebp rex.X std xchg xchg cmpsl movsl repnz mov sbb mov add test rex.R fs pop fs fldcw clc jne cwtl (bad) mov jno cmpsb retq (bad) jno (bad) lret rol (bad) adc fcmovnb and fwait push scas or rex.XB fadds std sbb cmpsl vmread rex.WR ja in or movsl or (bad) je push enterq and adc (bad) cltd retq xchg mov lret mov push fxch shr pop mov mov rex.WX push mov movabs cmp movabs scas xchg mov xchg lret mov add callq (bad) jl xchg mov (bad) add add leaveq adc sub push jmpq jno mov (bad) xlat (bad) icebp rcrl iret mov push xor mov rex.WR rorl (bad) imul mov push jmpq add hlt rcrb outsl cmp or vmovups retq sub fucomip sub gs (bad) mov xchg rorl data16 add push sbbl movabs xchg int insb retq xchg xchg lahf (bad) lret adcl in push rex.WRX fild or (bad) jae shlb stc mov mov incl xor push shll cmp rorb cmp popfq (bad) push shl stos cmp imulb test stos ja fwait (bad) movl jp add add push movabs xlat jno sbb int3 or rcr pop (bad) in movl adc movsb repnz (bad) cmpsl xchg pop vsqrtpd movslq in sub push (bad) adc enterq push mov sarl pop add mov xchg testl push xchg or add lret xorb data16 jge xor sub lret sti (bad) adc out jg xchg (bad) adcl movabs test cmp add jo mov in adc out or rex.RX sub jp out mov push push retq pop pushq stos (bad) cmpsb cmp xor ja divb mov or pop test sbb and rex mov xchg out xchg mov shrl mov rex.XB movabs or shr rex.WB rex.WB es rex.XB (bad) adc mov stos pop enterq jnp lea pushfq in rorl addb and xor push cmp sub xchg cld pushfq stc popq rex.WXB or mov repnz (bad) shll add shrl or jmpq (bad) movsb je stos mov in mov in jne cmpsb (bad) cli int3 out add xchg ror roll (bad) jl pop retq and js mov (bad) add or in add or iret stc push test cmpb (bad) jne jae mov mov sti add cmpb out lret mov lret cmpl pop (bad) rcll fs scas rex.WRX xchg shr (bad) jl movslq cld (bad) fstpl lock lods fldcw fidivrl adc lret (bad) push outsl or andl (bad) mov loope xor add fnstcw movsb or pop lahf std xchg rex.RXB fmulp inc (bad) mov push (bad) jnp js sbb pop rex.WXB fs sbb enterq xchg cmpsl add jno fstl or xor jnp rcll loope cmp jne out sbb movabs (bad) out cmc roll cmp es rex.WB ds rex int3 vhsubpd fcomip cld add pop xor cmpsb push enterq sub stc xor sub jne movabs (bad) mov sub cmp mov xor adc in imul pop test stos js rolb mov (bad) and add and push jo test (bad) hlt mov jae rex.XB cmc (bad) mov jg lret hlt mov xchg lea (bad) repz push xchg rex.WRB scas shr fidivr int leaveq jrcxz lea std (bad) cwtl pop add adc and cs insb std sbb (bad) rex.WRB rex.WRXB lods hlt rcrl iret and test (bad) cmc adc lods fild xchg (bad) ja jns and mov add xchg movslq jno imul adc mov int3 cld (bad) mov or xor pushq fnstcw scas mov (bad) sub test (bad) (bad) sub push (bad) rex.XB lahf movsb (bad) adc xlat stos rorl push xchg addl pop (bad) (bad) mov xchg int3 movabs movabs fadd (bad) int3 in testb pop sahf (bad) retq (bad) sarl imul ror add add nop pop push loopne movabs or rex.WRX adc (bad) scas fst mov and cmp loop mov fstcw fistpll jmpq sub (bad) loope (bad) loopne cmp adc xchg sbb rol mov out lret mov mov jp jle cmc jne fimul (bad) jbe rex.WX mov or xchg or lret lahf (bad) add int mov rorl sbb stos out shll rex.WRXB fwait (bad) lods fiaddl add rcrl rex.WRXB sbb sti lods adcl mov xlat addr32 xchg fiadd rex.B or roll and cmp rcr (bad) cmp in icebp out sub pop xchg rcr rex.W int3 xchg adc ror rex.R adc add (bad) xchg test rex.RXB rex.WRB movl fstl or outsb sarl je xchg sub pushfq fnsave push mov mov sub outsl sbb jo xlat jno cmp movsl add movsb je rcr jle jo jne (bad) jp sub fidivrl pop imulb mov scas (bad) and lret sbb sbb mov int adc in cmp cmpsb hlt rcl rcrl adc sarl jo sbb movsb xchg sarl rex.RB in rex.RX data16 in add jo lea fisubr out (bad) (bad) mov (bad) fs rcll test std or ja (bad) and and fldcw add sbbq insl (bad) stos (bad) rex.B (bad) (bad) movabs movabs or ds pop nop loop loopne (bad) outsb (bad) adc test vpacksswb push mov xchg stos jp push adc or (bad) sub insl or cltd rex.B mov sbb rex.B (bad) mov sbb pop test cmc rex.RXB (bad) jnp sub fwait movb lret mov movabs gs rex.WR icebp rex.XB (bad) mov (bad) (bad) icebp hlt (bad) cld and bnd in cmp cmpsl rex.WR stos xor lea fwait jl repz pushfq xlat movsb lcall stc fbld xor pop cmp cmp and (bad) xor add repnz lret loope rex.WRX rex in in rex.B in pushq (bad) repnz test sbb and (bad) gs in shrb fisttp stos pushfq bnd (bad) movslq jge popfq test js repz (bad) divl (bad) lods pop rex.XB fwait cs ds (bad) jae pop fsubl test jb rex.RX xor rex.RX fwait cmp icebp cmp sarb mov enterq cmpsl rex.WR rex.RB lret retq sub mov es add movabs (bad) pushq fdivrp rex.RB lret (bad) xchg sti clc xchg loop xchg sub shrb sbb movabs mov rcrl repnz data16 (bad) ror jg pop sbb mov outsb int3 rolb push rex.WR jg push test mov (bad) nop cltd sub out repnz jg (bad) rex.W movslq loope sub int3 rex.B mov ja or (bad) jl test jge add rex.RX jle (bad) mov push mov (bad) and (bad) cld adc mov (bad) pushq (bad) leaveq push cmp (bad) mov fsubr xchg mov jae (bad) loope out movslq loop pop cmp hlt (bad) outsl cmp mov mov stc fs rex.WRX cmpsb loopne add lret mov sub mov mov xchg int cmc pushq out (bad) movabs jae mov (bad) sbb test (bad) outsl mov fistl adc out iret cmp mov (bad) mov jecxz push lock (bad) rex.WB (bad) clc rcl sbb rex.WRB xor (bad) sbb movslq popfq sub and mov shl and sub push mov rex.WB clc and rex.WRXB jne adc rcrl (bad) divb sbb sbb fmuls rcrl jg push (bad) sbb rcll adc or (bad) or (bad) xor or enterq out rex.WRXB (bad) jbe and pop roll fnclex shlb and mov lret (bad) cmp rcrb rex.W movsb adc (bad) iret mov rex.WX je jl or hlt lret rex.RB loope cld rex.RX sbb sar pushq rcl (bad) pop iret js (bad) lret adc movabs xchg mov fildll sarl mov sbb cld sti (bad) or cmp roll fidivr lret hlt mov rex.B xchg sub (bad) mov jle addb lahf (bad) xchg int push add stos push rex.WX bnd insb mov fistpll sbb or sbb incb and rex.B cli lret shrl ja cltd jbe retq icebp jo pop mov shrl xor push stos hlt mov (bad) (bad) rex.WRXB sbb mov movabs sub cmc outsl sbb fdivrl andl pop roll rex.RXB fcomps loop push mov pop add icebp cmpsl fwait (bad) or and in (bad) repz repnz mov add mov push test (bad) movabs rol (bad) cld lock xor jne jnp (bad) leaveq (bad) out sbb rex.W cmp stc imul loopne fwait mov cmp (bad) adc (bad) (bad) out add pushq cmp sarl sbb and rorl xor jg (bad) jbe jns and (bad) out sbb xchg (bad) cmp add sub repz loopne sarl movsb xor push in negl cwtl movsl test pop pushq in rex.WR rcrl adc movslq cltd add xor jb and shrl or mov cli lret enterq sbb loope lahf add leaveq jrcxz scas push repnz outsb xchg or (bad) pop loop xchg sar (bad) enterq lock xlat repz pop pop mov pop xor rex.R ss insl repz sub movabs out rex.W jmp adc sub fsubs xor sub (bad) rex.RB repnz out mov test rex.W mov cmpsb xor or or sub or cmovno sub je (bad) (bad) cmp rex.W rex.WRX mov (bad) (bad) fcmovu push add (bad) in sbb imul iret (bad) rex.RX movabs shrb sub movabs out test popfq (bad) adc (bad) (bad) add pop xchg in (bad) sub int3 xor fstpl je (bad) sub push jle sub (bad) stos rex.WB fmul test xor and jg or add loope jnp (bad) in int3 loopne cmp shlb enterq scas add xchg rex.XB rex.WX test (bad) sub sbb nop jo push jle rex.B (bad) pop icebp sbb xchg (bad) (bad) rex.RB add stc cli mov retq xchg cld shll dec jge and adc mov jne leaveq lret (bad) int movabs sub je lock scas sbb push jl popfq mov ss jno movsl or iret (bad) fmuls (bad) cmp sbb rol leaveq xchg xor hlt rex.XB cltd xchg cmp jmpq (bad) repnz and push in roll and pop mov icebp sub rolb cmp shr adc adc sti rex.WR ja repnz std rorb jl (bad) rex.RXB sbb add add xchg or retq fstpt rcrl fisubl pushq (bad) adcl (bad) (bad) sbb rorl fld cld loope sbb nop imul sub xor (bad) and fildll or iret mov (bad) pushfq loope mov movsl pop mov imul mov callq mov mov (bad) (bad) or sbb (bad) mov rex.WRB cmp (bad) push sti mov sbb and (bad) je cmp rex.RXB xchg xor ja rorl scas mov movabs sub jnp int3 add icebp lods js pop test lods cs rex.WRB xor js out mov (bad) mov cli xchg xchg cltd mov rex.W imul pop rex.WXB addl shll int3 (bad) and (bad) movabs xchg sbbl and jo int mov xchg test cmp cwtl (bad) pushq add pop add lahf cmp sub pop xor addr32 and and fstl sahf adc cmp (bad) (bad) out (bad) mov add mov stos xchg in adc movsb mov clc pop gs in or repz scas rex.R (bad) leaveq xchg jl or fildll (bad) notb lods stc jns push (bad) (bad) icebp lahf movsb fimul jne movabs lods (bad) jo rex.RX (bad) jae rex.XB shr cmp mov xchg xor sbb icebp lea test cs add nopl mov out mov jno rcrl cmc or pop jle adc ror (bad) leaveq or clc rcrl repnz sub insb fbld xchg out (bad) mov movsl mov (bad) subl add rol xchg rex.WX mov out or stos jae lret xor pushq and xor (bad) imul testb jo xorl insl mov jnp jmp mov rcr mov or add jg (bad) lods popfq mov movabs lock paddusw rex.WRXB or lret push or (bad) repz (bad) (bad) movabs ror hlt or subl push xor add push rex.WB addr32 in rcrl shll mov rcrl adc (bad) (bad) adc rex.RB xchg mov mov (bad) callq or push cmpsb xchg sub callq cmpl loope xor (bad) cmp pop test movabs out or andb pop in xchg mov rex.RXB lret popfq gs push jno (bad) (bad) jg mov jp test and (bad) rorb sub mov rex.WRX xor rex.XB (bad) pushq repnz pop (bad) mov rex.WB or rex.X iret test je jmpq lret rclb out mov xlat (bad) fdiv (bad) (bad) rcl ss add rex.WB xchg test (bad) adcl (bad) cmp stc lret lods sub mov scas rol subl xchg (bad) add xor (bad) lret sub stc (bad) pop (bad) repnz pop (bad) rex.WRX rex.B lods xchg (bad) add sub rex.XB mov sbb movsb lret or jb (bad) int or mov repnz cltd cmpsl (bad) rex.WR rex.WX mov loope fwait (bad) icebp (bad) fld sub or add lock add push cwtl divl clc jl data16 mov rex.B (bad) clc ds and rex.WRX fnsave test rex.RB cmpsl cwtl jp rolb int lods mov mov paddusb imul xchg xchg lret cmc add fistl (bad) lods (bad) lahf xlat gs retq sti fmulp (bad) fwait std mov insl (bad) jae (bad) mov rex.XB sbb (bad) (bad) fs mov sub mov xchg pop rex.WB cmpsb (bad) cs mov jl insl sub movslq mov rex.X rex.WXB rex.B mov cmpsl test cmp rex.WXB cmc rolb (bad) pop jno int insl repnz test mov cld rex.WR in rex.WXB repz loopne lret jge jb imulb jns fs mov sar lahf cmpsl (bad) loop cld shll cmc mov cmp add out movsl add clc (bad) cld test rex.W mov imul xor lret scas (bad) (bad) xlat lahf xor cmp (bad) pushfq xorl enterq int ror (bad) test (bad) jns mov cmpsl sbb cli mov in xchg cwtl mov or mov rex.WXB lock stos js pop in in iret repnz popfq out mov fild rex clc (bad) adc fldl xchg iret cwtl push (bad) and outsl (bad) xor out add (bad) hlt xchg cmp nop outsb retq repz enterq iret (bad) in popfq jle mov test jl (bad) (bad) (bad) mov xlat sbb (bad) shl rex.WRB mov xor jnp (bad) (bad) mov and or (bad) loope int icebp mov or scas jbe mov ljmp fsub pop out retq outsl jne (bad) pop ss out in ss fcmovnb loopne (bad) js (bad) jmpq rex.WB mov rex.WXB jmp cvtpi2ps mov ror jo mov rex.WRB rex.RB repnz and rex.XB jo int3 retq rex.RX data16 test test adc push fnsave enterq movabs negb xchg in add (bad) jle jrcxz (bad) jp outsl pop (bad) js (bad) fisubrl jmp loop jnp retq rcrl rex.WR sub adc jb xor rex.WR (bad) clc mov xchg jae repnz push shrl pop or (bad) (bad) movabs mov sub pop (bad) (bad) leaveq pushq out sub rex.WRX jns pop rex.RX mov jo pop xor pop (bad) rex.RX (bad) xchg push xor int mov retq jb lods pushq jae mov (bad) rex.WRX movslq cmp shll push lret mov rex.R insb (bad) rorl push cli jg xchg xchg adc mov (bad) enterq loop addr32 xchg mov fs negb lock and sub in mov (bad) ror push jae movabs push test clc sub cmp pop adc idivl sbb pop loope rcrl (bad) cmc push pop rex.WRB xlat std je (bad) push movslq jne or enterq cmp nop lods rex.R lock sub jo lret jae rex.WRB lods xchg (bad) orl or test xchg cmc fcos rolb nop push rex.W mov rex.RXB rex.X repnz sub stc mov sbb cs stos (bad) xchg add (bad) push cmc cmp mov (bad) fsubrl iret add rex.WXB jp sbb xchg leaveq (bad) mov xchg insl iret rex.WR add xchg out mov icebp (bad) insb xor (bad) std adc rex.R jb cmp jno pop mov cwtl pop xor loopne xor jno lods (bad) sbb mov add fsubr xchg leaveq jno out rex.RX adc lea rorl rex.R rex.R js fbstp lock in repz and jle mov cmc notb cltd jmp je push and sub jo cwtl sub and pop (bad) ds add xorl mov test pop iret cltd out adcl rex.X rolb mulb cli add and icebp add add out faddl enterq insb retq stc repnz (bad) jle (bad) rex.WRB test pushq or jmp or cmp (bad) int mov (bad) and xchg rex.WB rex.WRB rex (bad) insl shlb roll sbb sbb icebp adc loope div cmpsb movsl ror clc (bad) callq (bad) jl fadd cmpl enterq sbb lret in push out mov ds or (bad) stos sbb xchg (bad) rex.WX cmp add mov (bad) sar loope and rex.WRXB jbe xor pop movsb (bad) imul repnz rex.RB or rex.WRX lahf push retq lods jmp jmpq ss je add rolb cmp pushfq jns rorl imul (bad) xchg sbb sbb fwait (bad) cmp mov (bad) cmp rex.B (bad) adc mov rex.B ds out fisttpll xchg mov retq imul mov cmp je and add cmp rex.RB lret cld scas (bad) test int mov je push mov xchg pushfq rex.WB add rex.R or fcmovnb clc xor in mov callq (bad) and pushq and pop int3 fcmovne lods data16 jbe (bad) (bad) xchg jmp (bad) cmp rex.WR push in and cmp loope retq mov adc std or callq hlt outsl js (bad) mov mov and sub (bad) repz out callq push xchg cmpsb push in (bad) iret gs (bad) hlt retq data16 retq push push xchg or cmc or sti repz push fs push xchg cmovbe xchg rex.RXB int or fptan add sub pop cmove (bad) je push mov mov push jmp pop and rex.WRX lea and int out sbb loope push or movabs xor iret sahf loope rclb cmc lret add pop jnp callq xchg (bad) jbe iret pushq callq shll sub iret add sete loope lret pushq in sbb in (bad) rex.WRB movsl mov fstpt add int xchg int3 insl push mov fistpl add imul adc sub in sbb jmp test enterq rex.WRX loopne jmpq movslq rex.B in lret push out mov rex.WB push mov sbb (bad) add rolb pop xchg (bad) mov fcmovu movabs pushq cld xor fcoml lahf jle pop and (bad) fxch or (bad) lret add (bad) xor mov (bad) mov jae data16 movsb xchg gs scas (bad) fadd push stos punpcklwd lods xor sub pop repz mov pushfq addb (bad) in ljmp cmp lret rcrb mov cmp jge int3 loope sbb hlt rex.B rex.WR je pushfq rex.B jl pushq out or adcl jne sub adc (bad) std out repnz lret jnp fmulp frstor cmpsl in and (bad) test (bad) (bad) pop stos adc push fcomip rex.WXB (bad) mov (bad) bnd nop test jnp (bad) (bad) enterq jl sub cmpb mov lret (bad) (bad) repnz push mov (bad) mov (bad) (bad) or mov js mov fmuls (bad) jae jbe jle xor in clc retq fdivrl rex.RX push stc mov pop or pop movsl push mov jne xor movabs test jg fldln2 mov xchg jge cltd ss movabs cmc mov out and sbb rex.WRB adc sub flds decl add loope adc xchg cmp outsl xchg (bad) flds je add fdivs xor test scas imul adc push push loop (bad) imul (bad) and add iret jl (bad) add cmp xchg in adc adc cli (bad) int3 (bad) jno outsl insl movabs iret lahf mov (bad) jge retq test (bad) loopne (bad) cld push jo xchg xchg jmpq lret add out add outsl retq (bad) in cmp (bad) loopne stos rex.X (bad) mov hlt adc movabs xor fs lret (bad) mov push cmp and (bad) sub or rex.WB rex.R (bad) mov sbb movabs xlat insb (bad) sarl (bad) or and sbbb cld sub jo mov rex.W xchg xor (bad) cltd xchg in pushq mov sbb mov addl jb push sbb stc sub or (bad) stc pushfq fstpt cmpsb mov leaveq mov callq rex.WR in (bad) (bad) out mov lret mov retq (bad) rex.WX rex.WXB (bad) (bad) outsl rorb test loopne cmp add movslq (bad) sub add roll lret pop out push fistp rex.W rex.RB loope add (bad) nop fsts rex.WRX movabs in int movabs test movabs cmpsl rex.RX push in movabs or repnz (bad) clc (bad) mov adc stc push mov out (bad) xor je (bad) and jae jrcxz or scas pop (bad) orl xchg vcomisd testb sub sbb rex.WB sub sbb jl rex.X fs sub frstor or mov rcr (bad) sahf pop movabs mov mov je movabs lods idivl pop in add xor xor lret fwait es (bad) cltd divl jmpq mov iret retq repnz mov push (bad) add fildl rex.B movabs fstpl (bad) scas ss movabs in addb iret ss jrcxz int3 (bad) (bad) lret movl popfq (bad) mov fcoml jmpq mov mov cmp xchg rex.B lods mov fnstcw (bad) out rex.WRB lock lock popfq cmc rex.XB (bad) test cs push adc (bad) fcoms add (bad) insb mov jrcxz incl mov mov mov out in outsl or xlat rex.WRB int3 add mov mov sub pop and insl pop pop (bad) hlt retq pop lock mov mov stc movabs and sbb adc int3 test loopne or add rex.WRX rex.B pop and outsb rex.WB (bad) xor mov data16 rex.WRX icebp rex.WRX adc rex.WR (bad) js adc in movslq or sahf (bad) mov sub rex.B jns mov (bad) jns movabs (bad) cmc iret jmp jmpq cwtl mov (bad) rcll stos movb cs sub add xchg rclb (bad) scas push ja test xor lret xor movsl xor jle mov repnz sbb jns cmp (bad) in icebp loope mov sbb jp (bad) rex.WB repnz in (bad) cmpsl out xchg repnz sbb pushfq loopne cmp jrcxz add icebp jmpq or jae jp or jl add rclb pop add in js rex.RB jno rex.RXB add ds sub jg xchg rex.RX cmpsb cs imul mov (bad) pop sub repnz jnp add mov mov lret rex.B mov fisttp lea leaveq cmp push and xor movslq repnz es (bad) pop push popfq mov es jb sti mov jmpq leaveq int (bad) nop retq add je insl leaveq insl xor imul cmc outsb cmc push fxch (bad) (bad) (bad) pop (bad) sub adc sub mov (bad) xor (bad) fstpt (bad) mov (bad) jne rex.WRB (bad) cs (bad) out adc cmp (bad) std push sbb xor push (bad) and (bad) lret xchg movabs jbe outsl loope in or rex.WX fisubrl pop fsubl xchg or and or imul (bad) rex (bad) repz fldcw (bad) (bad) and sahf xor xchg xchg icebp mov (bad) ja in movabs xchg jo jbe lret stc test lret test push and cs addr32 test mov nop cmp mov fbld repnz (bad) movslq mov rex.RB clc enterq sub jne leaveq es int3 mov push and rorl mov (bad) xchg push popfq js sti sub je (bad) cmpsl sub cmc add jns jp,pn add enterq (bad) cmp (bad) mov repz add cmp callq cmpsb and jg pop loope (bad) jmpq (bad) mov xlat xor mov mov sub add push lret jge (bad) sub es js xor xor es rex.WX xor js fstp int3 insl (bad) (bad) pop fisttpl add fldcw addr32 xor orl sbb (bad) sub rex.R out sub add (bad) pop sub adc test data16 xchg fcomip xchg rex.WXB xor out mov (bad) enterq xchg xor retq test or (bad) push jae rex.WRX and cmpsl rex.W rclb mov outsb (bad) jno sbb std (bad) adc xchg retq jg mov or xchg mov ds vpandn push (bad) loop jne xor mov repnz mov fcomps cmp nop xor ss outsb push int3 pop push rex.X add int3 mov jno stc xchg rex.B fcmovnb cmp sahf hlt retq nopl mov xchg movabs mov addb push jmpq jnp or fist out (bad) sub in (bad) loop enterq push adcl or rex.B rex.RX rex.B cld cltd lods jmpq sub pop shrb mov lea rorb (bad) lods sub xor (bad) pop mov icebp mov sub adcl int3 sub rex.R or insb rex.B mov shl (bad) outsb (bad) jge test mov cltd enterq mov rex.WRX xchg lock adc jno rex.RB rex.WR lock int rex.WX in jle adc popfq data16 sub lahf lea pushq xor (bad) in sub jg iret adc push jmpq (bad) pushq repnz movslq (bad) (bad) jno (bad) int and loop and (bad) (bad) lods (bad) push mov jl jmp ss adc movabs jge js movabs add in movabs cld leaveq rex.WXB (bad) (bad) and (bad) jo jbe fcmovnb rex.RXB xor test fisttp icebp in xlat sarb and fist jge,pn push movabs fisttpl data16 movabs xchg out cmpsb imul out xlat retq mov (bad) adc hlt ss iret cwtl cmp add rorl pushq retq (bad) add mov fcmovnbe and (bad) sbb sub clc popfq xchg (bad) or rex.WX (bad) jne retq (bad) cmpsl adc pushq or int3 (bad) mov cld or xchg rex.XB je mov fldl2e (bad) and faddl (bad) lret push jns (bad) rex.XB (bad) cli jg mov xor sbbb (bad) and cmc push scas movabs add lock imull (bad) sbb retq vpsubq retq leaveq lretq (bad) shr sbb repz cmp iret xchg jle sub mov rcrl mov jb mov sub rex.R imul sbb add rex.RXB sub (bad) ja repz loope jnp faddl cmp sbb jge xchg negl xchg push imul (bad) cmp sti jbe imul movabs mov add cmpsl (bad) in pop fnsetpm(287 div jbe pushq popfq test xchg (bad) mov add xor enterq lret and push and push in mov punpcklwd (bad) jrcxz xorl cmpsl shrl ds pop (bad) sub mov loope add cmp divb test imul imul (bad) jno adc jae scas jrcxz pop data16 (bad) idivl (bad) and mov mov pop add xchg cmp (bad) rex.WRX xchg movabs and std rex.RB adcl (bad) cmpsb mov in (bad) (bad) xor loopne shrl data16 (bad) push enterq add out add xchg rcr xchg in add and (bad) jnp rex.WRX mov sbb pushq sbb and push xor (bad) mov cmp or (bad) rol and cli (bad) cmc (bad) in fist fwait jg (bad) shll and push sarl pop js (bad) jne lods rex.WRX jno loope (bad) retq insb leaveq loopne,pn fiadd movsl and fdivrp xchg xchg xor (bad) add (bad) roll faddl push rcrl imul sub cmpsl (bad) pop or mov rex.W rex.WRX in (bad) lret pop (bad) pop xor and shll movl imull and andps mov mulb cltd mov shrl cmp (bad) lret push stc (bad) out pop xchg mov sarl cli mov out xchg shll xchg sbb (bad) hlt (bad) jrcxz lret sub xchg rex.W pop loopne or sub rorl incb ss xor xchg mov in (bad) adc (bad) pop fdivr cli add test movabs mov (bad) fdivrs rclb xor js or and cli fnclex roll adc rcrl jrcxz lret pop xchg mov loop cmp rcrb sbb cmp (bad) sarl lahf movsl stc jne repnz sbb rcll fildll (bad) out leaveq mov mov (bad) (bad) rol imul xlat (bad) test std or sarl (bad) (bad) imul lods rex.WR cmp pop fcmovne mov sar (bad) and add sub (bad) xor mov mov shll push (bad) jae movabs rex.RB (bad) outsl data16 sbb enterq sub cmp jrcxz xor test in xlat add hlt mov frndint test mov iret rex.X jae jp sbb sarl test jle pop int out rex.RX pushq test je mov jb xchg add nop fbstp sbb mov (bad) fwait jg rex.W rex.RXB jno (bad) mov xorl adc divl insb sub cmp fsubrs add adc adc icebp fldcw (bad) movabs lahf fsubp mov rex.WXB jrcxz cltd cmp (bad) mov (bad) (bad) cli mov add je decl cmc rex.XB (bad) fldcw (bad) pop pop (bad) mov xorl jns clc (bad) lods adc (bad) (bad) adc loop add xchg mov add cmp mov (bad) outsb jmpq (bad) xor enterq mov jno (bad) sbb shrl lret sub scas gs stos (bad) retq adc stc jae movslq iret mull rex.WR rex.WR lock jge int3 and xchg stos push mov xchg outsb (bad) callq push enterq rex cmpsb cld push loopne lea mov mov ss fdivr test mov jp sarl cwtl rex.RX cmp sbb xchg (bad) int push cmp pop repz rex.WB loop cld mov (bad) or sbb mov retq fimul and xor (bad) sbb clc (bad) leaveq (bad) sbb cltd rex.R callq insb movabs (bad) lret add add jrcxz mov (bad) scas mov fadds (bad) xchg int3 rcr or pushfq pop jmpq mov add cmc xor rex.WRX test rorb repnz (bad) xor sbb pushq adc pushfq add loop rex.R mov sarl outsl rex.WX xorl xchg cmpsl jp cmp and sbbl movabs mov cmp rex.WRB rex.R ror scas in xor and int3 shlb cmpsb movabs adc enterq pop mov adc (bad) rex.WB (bad) (bad) out xchg and jae fbstp sub enterq jp cmpsl (bad) lsl cli std (bad) sbb (bad) or cld clc movsb adc lret lahf loopne sub (bad) rex.WR (bad) rex.RB fadd jae test push imulb sti mov pop (bad) rex.W rex.RB (bad) cmp loope jno jae push movsl int sub rex.XB cs bnd (bad) stc movsl clc mov mov mov add repz jmpq mov jmp cmp int push lock mov rorl leaveq (bad) retq fisttpl mov (bad) sbb movabs decl int3 push repnz movabs (bad) icebp icebp mov movabs nop (bad) mull jo mov mov (bad) lea (bad) mov xor mov fmul rex.XB cmp rex.R (bad) mov rex.WR rex.XB jo idiv rorl rex.WRB sbb push nop (bad) mov pop push xor rex.WXB or sub sarb movslq loopne xchg subl mov retq mov jo (bad) out imul stc lods mov xor fs repz leaveq rol jle movslq pop and adc std negl xchg cli push es (bad) out hlt mov (bad) mov jp mov subl cmp mov pushq test shlb rex.WB mov rex.RX and or (bad) mov test mov or int3 jbe in sbb (bad) jp outsl fwait sarl sbb repnz cltd jns js mov jbe in (bad) adc (bad) jae cmp (bad) xchg mov rex.WRX (bad) xor sub or test stc mov add (bad) mov pop mov lret mov mov scas fs add pushq mov mov (bad) xor push (bad) rex.RB cmpsb push and or fsubl cmp (bad) xchg cltd test (bad) or (bad) gs push fisub xor (bad) stc ds or (bad) icebp jns shlb adc cmc pop (bad) rcl icebp push mov cmpsb rex.X jge scas leaveq sbb rex rex.RB int pop adc (bad) jmpq (bad) movsl rcrl mov push pushq (bad) cmp lret mov rex jne xchg (bad) je adcb icebp or mov add outsl rex.RB rex.WR (bad) (bad) mov retq icebp jae and push (bad) ja (bad) test rex.WRXB mov or rex.X mov pop pushfq outsl rcr sub jo cmpsl (bad) (bad) and xchg (bad) xchg pop (bad) (bad) mov sub sbb add (bad) (bad) movabs or test (bad) (bad) andl rcr in test movsb xlat movabs pushq test (bad) out cmp (bad) jbe leaveq rex.B cwtl iretw mov xchg movb jae movabs sarl stos icebp mov (bad) and xchg int (bad) mov sbb sub push (bad) sub cmp shll and mov sbb int3 add mov pop jmpq mov movsl (bad) rex.RX pop cmp addr32 (bad) mov pushfq popfq out roll xchg adc (bad) mov pop xor (bad) and xchg shll je,pt subl rorl (bad) scas rcrl sbb (bad) sti lret xchg icebp rex.WRXB (bad) sbb push cmp (bad) sbbl mov sarl jg xchg test (bad) stos jp or rex.WRXB (bad) mov movabs add pushq stc lcall shll rex.WRXB ss int sarl adc sbb lock or nopl pop rex.W mov adc loope (bad) cmpsl or cs movabs xor add sbb (bad) and (bad) sub loop sahf jmpq jg xor and movabs xlat out xchg jg xor jmp shrl pop nop and int push loope xchg rol movsb xchg (bad) mov outsb jns jne rorl stc shll jnp add (bad) sub rex.WX rcl fwait insb fnstsw push lret cmc rcrb scas loope cld fsts fwait retq (bad) rex.B lahf fs rex.WRXB sarb cmp mov mov scas shrl movslq subl (bad) mov enterq jno out pop jbe jmpq add sub lock loop test (bad) shll stos adc stos jae rorl adc add xchg cltd mov gs shl cmc loope js pop (bad) sbb pop cmp cmp pop push (bad) retq (bad) xchg mov xchg sbb mov jae cmp (bad) adc add loop mov roll scas test hlt (bad) rex.WRXB callq shl mov and loope rex sbb jae rorl and cmc rex.WXB rex.WXB in rex.B xor test xor shrl and mov jg push adc out or popfq rcll pushq cli xchg (bad) stc movslq xor sub or fldt xor cmp fistp outsl jrcxz jg out loope pushfq sarl mov movabs lcall jo test stc fcmovb outsl imul cmc cmpsb (bad) sbb sbb cmp (bad) jae andl (bad) xor push jrcxz test rcrl data16 mov out xchg mov out and (bad) xor jne rolb rex.WXB pop enterq retq out cmpsb fldl and rex.B sub mov pop (bad) jo xchg lods add mov (bad) push (bad) add shl enterq stc int mov jbe in test cmp shll push sbb fldt roll rex.RXB orl and and rex.X (bad) and xchg or sbb pop lods movabs (bad) rex.WXB repnz movabs hlt (bad) loope or and cwtl test xor or jno leaveq cmpsb xchg rex.XB jne,pt cmpl cmp rex.B addl sub ds lock (bad) loop pop lahf xorl rcrl mov or sub lret cld pop cli (bad) rex.WB fs in rorl outsb cmp jae sbb xlat pushq js movsb add lock repnz insb sub loopne or pop add sub sub (bad) add lods movb enterq (bad) rex.XB mov rex.RB outsb push (bad) testb jle mov lret mov or or mov rex.WXB enterq push (bad) xchg imul and (bad) push adc (bad) rex.XB lret (bad) sbb out addb pop in lret or retq rcrl push (bad) repnz pop shl xor retq je rclb subl ds test roll mov rex.WXB jb (bad) jo (bad) sbb shll adc (bad) or rex.XB (bad) cmp mov (bad) (bad) ja cmp xchg stc (bad) rex.WRXB cltd retq (bad) sbb xchg sbb icebp (bad) shrl rcrl sbb rorl pop cmp and sarl out pop pushq movabs sahf adc mov mov or movsl rorl (bad) retq (bad) ficomp out lret xchg loop mov divl rex.WRB cmpsb enterq cltd and add mov or sub cmp rex.XB jp out movslq xor cmp mov cli push div mov rex movslq loop outsb addb ss rex.WRB lret sub idivb sbb push rex.RXB leaveq mov (bad) jb imul (bad) jl adcl adc iret stc test iret lret out subb add nop add (bad) fcoml mov test data16 loope lret cwtl push or (bad) int movabs jnp (bad) pushq and jrcxz sbb add enterq cmp rex.B insb bnd cmp cmp add movabs leaveq (bad) out sbb or xchg rex.B (bad) rex.R leaveq ds out jmpq rex.WB lcall enterq rcrb cmp (bad) (bad) icebp repz out mov and mov fmul mov add jg (bad) movslq xchg (bad) leaveq (bad) mov push fdivl retq rex.W int3 mov int3 rex mov in mov and (bad) rex.WR rex.RX rex.RB mulb jl sarl add hlt leaveq (bad) mov (bad) sub outsl ror cmp shlb push mov push (bad) cmp clc rex.WX clc out enterq mov mov jge mov loope retq lock lods (bad) sbb movabs or fs je fwait movaps (bad) (bad) mov jo movabs pop mov movsb fildll iret lret sbb (bad) pop sti mov rex.XB ja mov add rex.WRB ja (bad) rex.WRXB mov cmp rex.WR leaveq mov int3 (bad) (bad) sti loope test rex.WR add stos out jno (bad) jbe je (bad) int sub rex.RXB lods adc loopne and pop in outsl mov rex.WX and sub cltd (bad) sbb jmp movsb sbb mov andl lret mov rex data16 in fstpl cmc pushfq divb mov int3 pop xchg jge push pop test (bad) sti mov jle callq mov and mov jb sbb mov rex.W movabs rex.XB push (bad) mov cmp xlat pop movabs and or (bad) ja scas leaveq icebp jo sub mov in enterq jge retq mov mov add (bad) mov sarl ror add test or rex.WR (bad) rex.WR xchg xchg rex.WRXB orb push cmp fld or cmp (bad) lods iret jl jrcxz jne lret push lret in (bad) rex.B push or xchg sub addr32 loopne callq cmp mov stos and mov frstor mov int sub push push mov movslq adc ljmp movslq mov or adc int3 jb rex.R push jbe (bad) fadds callq xchg or cltd retq sbb incb iret movsb loop or retq (bad) fcomp mov roll fnstsw (bad) lret (bad) (bad) rex.WXB (bad) sub xchg sbb fdivrl and adc std loopne pop adc rex.WB mov movslq xchg sub adc mov xor rex.RB repz sub scas adc movabs xchg (bad) jns in (bad) adc (bad) leaveq (bad) pop fisttpll retq rex.X fcomps lea leaveq jmpq xchg jl hlt push movl mov and cmp cltd in int3 pop fldenv rex.WX cmp leaveq mov (bad) sbb lret jp add in jl rorl shl jmp jno in pop or mov sarl xlat adc jmpq (bad) mov rex.WX rex.WR xchg (bad) jne adc negl iret adc cmc mov cmp mov repz mov rex.XB stos hlt retq mov adc ror rex.WXB callq test jge jmp andb mov leaveq push lock popfq add out rex.WR lret or cmp lret mov int3 mov sahf xchg mov mov movslq js rex.WRX jrcxz,pn iret adc xor sub (bad) mov (bad) fnstcw outsb sbb xrelease jo add js enterq (bad) (bad) out sbb callq mov (bad) (bad) mov out jge cltd mov pushq pop pop out mov and int xor xchg sbb sarl rol rex.B es (bad) shr loop jp sub (bad) int3 lret int jae mov push movsl test jge movslq outsl rex.RXB (bad) or (bad) cs (bad) sub (bad) xchg ja loop or lret rex.R mov cmpsb push rex.WX (bad) repz or (bad) repnz or sbb in xchg test jrcxz orl int pushq (bad) adc or xchg movabs leaveq leaveq retq enterq add and cltd (bad) (bad) sub or mov xchg ss leaveq (bad) push jno outsl adc xor (bad) (bad) (bad) mov in (bad) icebp movl repz pop rorl jae jno and pop adc std out lret (bad) leaveq add push (bad) add mov movabs sub sarb in (bad) jle fildll xor add mov jrcxz test fwait (bad) rex.WRB pop pop negb (bad) test push (bad) test push jne xchg (bad) imull leaveq loope lea xchg repz jae or repz pop mov mov loope xor in push (bad) mov jrcxz rex.RX lods popfq (bad) sar push decb add add or and callq enterq rex.WRX mov out mov (bad) retq rex.B pushfq (bad) xchg int3 int sbb mov or rorl shlb mov and callq (bad) mov sbb test gs test (bad) (bad) xor cmc add mov jnp xchg add out mov adc xchg xor callq roll imul pushq int cs movabs rex.W mov sarb fdivrl (bad) hlt imul add movabs cltd (bad) out mov xor fsubl lahf movabs (bad) rex.WRX xlat clc ror mov add pushq rex.RXB or and loope (bad) (bad) cmc fcom adc xchg (bad) int clc adc leaveq mov scas rex.WRB (bad) rex.RX lock pop fstps jmpq movsb sub iret xchg cmpsl xor (bad) pop sarl neg jns add movabs (bad) nop cmp lret adc rex.RX lods mov mov adc fidiv (bad) (bad) rorl (bad) sahf (bad) mov mov xor rcl sub jle add mov lods xor repnz mov cmp test (bad) mov iret out scas mov (bad) mov adc psadbw imul rex.WB cmpsb scas fmull mov adc jb xor pop pushfq fdivrs and sub rex.R fwait movslq rex.RX nop (bad) movabs xchg add adc (bad) rorl cmp retq rex sarl xor rcr (bad) jnp rex.WB rcrl cmpsl movaps (bad) sub mov loope sub and ss ds (bad) fistp lret sbb subl pushq xlat or roll (bad) xor retq insl (bad) or (bad) xchg pushq cmp sub lret cmpsb repnz xor adc pop sbb push out cwtl add roll (bad) (bad) (bad) out (bad) jg (bad) ss jne add outsl shll xchg in jnp rol loopne shrb (bad) rex.X (bad) push movsb rcll lahf jmp and fstl cmp add fwait icebp sbb xchg (bad) xchg sub mov add rex.RXB shlq retq loopne cmp rex.RB adc or and rcll sub (bad) pop imul movsl lret (bad) lahf mov cli rex.WX rex.WRX (bad) push je sbb callq add (bad) or jbe (bad) pop imul xor lret or push (bad) icebp sti (bad) (bad) fmull add test retq movabs shr mov (bad) rex.RX out (bad) (bad) cmp rex.WRXB lock (bad) rex.B rex.X cmp (bad) shrl rex.XB repnz jbe (bad) movsl (bad) movslq xorl jns iret push and addr32 test lahf xlat fcmovnbe int xchg movslq mov jnp repnz sbb mov enterq mov pop rorq cmp movabs imul push jns shll callq sub (bad) test (bad) adc out (bad) sub movabs add es sub rex.RXB and jg adc xchg lods (bad) rex.WR iret shlb add fistp out fstps xor mov fcoml icebp std movabs push rcl je mov cmp mov (bad) lods movabs (bad) negb std sub push mov lret pop cmpsl (bad) (bad) mov ja cmp ss add pop and rex.RX stos (bad) test testl int xchg (bad) xchg rcll add outsl adc rorl sahf pop (bad) and (bad) sbb (bad) or repnz cs fcom jno push add (bad) outsb and sti out int3 lret rex.RX test ja and (bad) or or rcr (bad) mov push (bad) adc rex.B rex.XB movsl out sarl jge scas (bad) pushq xor cmp xchg js rcll loop and (bad) stos mov lahf callq lods (bad) repz add (bad) mov outsb jl iret addr32 faddp cmpsb sar (bad) (bad) je test and cltd (bad) push and repnz (bad) fbld rcrb popfq rex.RX jmpq data16 (bad) pop xor jno jb push out rex.XB rex.B js mov xchg shl jmp adc (bad) rcrl callq cmp sarl pushq mov fidivl insb (bad) xchg movsl movslq add out movabs hlt mov xchg in rorl fdivp sub repnz test retq adc rcrl mov sti jb sarl int3 pop cmpsl rorl mov fs fs rex.WB pop rol cmp (bad) mul callq (bad) sarl (bad) movabs (bad) pop (bad) jmp rcll jg shll mov movabs (bad) (bad) mov mov shll test jp (bad) (bad) mov cmp movslq xlat (bad) stc mov subl mov shl rex.WRB rex.RXB mov (bad) repz cwtl in rex.WRXB cltd movabs add (bad) (bad) movslq mov lret push cmp rex.X (bad) and fisttpl cli cmc xchg faddp jne in (bad) jo (bad) mov pop xchg jnp imul faddp out jae hlt (bad) mov rorb (bad) loop lods lret mov (bad) rex.WX scas out xor rex.WX xchg rex.X or sub (bad) xor (bad) pop cmp (bad) sarl sar jne roll (bad) and loope sahf (bad) lock outsb fbstp rorl out (bad) jnp cld cmp mov and cmp (bad) push cmp roll jns (bad) mov (bad) xor jnp jae cs rex.WRXB push stc shrl rex.R push (bad) (bad) (bad) cmpl out xlat xor jbe fs pminub mov xchg and movabs cmp mov rex.WXB shrl adc mov cltd cmp enterq fisttpl lret ffreep (bad) mov pushq fstl (bad) jle cli and cltd leaveq jmp repz retq rex.B std pop cmpsb (bad) sbb pop (bad) xchg mov or repz rex.XB mov cmp movsb int rex.B rex.R push ror rex.RXB int3 add and pop (bad) mov adc sub xor (bad) lret popfq push cmpsl rol rex.WRX sub fsub push and iret popfq jae fmul xor fadds xor add rcl add mov (bad) (bad) sub jmp mov add xchg push jae lock rex.WXB (bad) imul mov xchg fstpl xlat rorb test fnstsw mov mov push jns cmc xchg and es lods rex.B rex.WB fldt push std nop incl out mov outsl jp add out cmp lods je loop imull jg out leaveq mov insb mov movabs rolb repnz adc mov test mov mov cmp or (bad) mov and int3 pushq (bad) fsub xor pop sbb (bad) xchg rex.WRXB push jge repz rex.WB shlb (bad) fs add leaveq or je xlat in add adcb test mov (bad) or sti movsb loope rex.RX fwait push rex.WRXB rex.RXB movslq mov int3 fsubrl icebp rex insl mov insl sbb retq mov pop rex.RXB jmp test stc add leaveq add (bad) sub out jg xor shll sbb sarl std pop iret cmpsl xchg insl outsl add addl stc jrcxz mov (bad) cmpsb leaveq sar in imul xorl xor js sub callq (bad) cmp jl adc rex.B (bad) mov in rcll lret push int3 gs xchg icebp fsts mov mov rex.B rex test roll int3 js and adc test (bad) mov mov pop and repnz (bad) incb outsb ror rex.RXB jae (bad) iret cmpsl sti add lea fs xchg xchg in push jl sbb loop cs cmp decl mov (bad) iret enterq jnp or push sarl callq sti (bad) (bad) sbb xchg push cmp push retq mov mov and cld outsb and mov jb sti pop cli mov fsts sarl test rex.WB push std mov and fisub int3 mov enterq jg lret pop or rex.W sub mov lods pushfq adc jb (bad) js shr rex.WRXB pop testl or jrcxz (bad) cs xor rex.B and cs shrl sbb rex.XB fcom (bad) cltd (bad) mov push addr32 jo in add clc roll pop mov (bad) jrcxz (bad) (bad) mov (bad) movsb jmp and (bad) mov fsubs xchg out mov sahf rex.R rex.X movabs xchg pop add or retq jp movabs rex.RXB add cwtl movabs repnz lret leaveq xchg sub (bad) fwait mov (bad) and mov sub (bad) sti imul mov iret jae scas jbe (bad) fldl pop (bad) (bad) mov rex.B jo jge cmpsl and addl xor and gs repnz jo (bad) xor (bad) xor sbb add jp sub fidivr bnd lods jno jbe rex.XB (bad) lret out pushq cwtl sbb stc mov rex.RB rex.RX (bad) pop rex.RXB sub jae jno rex.WRXB (bad) sarb cld divb test sbb mov add mov cli mov xchg add and pop enterq mov add movsl mov jbe rex rex.WRX xor (bad) (bad) in lods mov std imulb stc (bad) cld in sub (bad) callq fidivl and sub cmp add fs imul sub (bad) mov xor shl rcl xchg sub in pop movabs int (bad) cmc shrl sub scas sbb jbe out out (bad) and rex.WB loopne shr cmc retq lret adc enterq sti js movabs cmpsb shr (bad) enterq xlat movabs jbe negl xchg xchg out add cmpsb pop (bad) lret stc sbb xor nop cmp mov rex.RXB push notl or repz and repnz pushq xor js or retq xchg xchg mov movslq or (bad) jno jge (bad) test adc (bad) cli sub ss rex.WRX subl rex.WX (bad) js pop (bad) fistp ja lock adc xor jnp mov mov mov pop or pop rex.X (bad) loop xor xchg mov rex.B rex.WR mov sarl push push (bad) repz sbb (bad) lahf cmp xor xor sar add rorl cmp cmpsb (bad) (bad) mov (bad) adc mov (bad) cmpsl (bad) repnz insb loop (bad) pushq mov mov rorl jge sub jnp movabs test rex.W mov or cmp jnp retq xchg movabs (bad) (bad) gs and pop adc or lret popfq (bad) rorb in or rex.WRXB xchg clc test (bad) xchg movabs rex.B cs movsb es test push fdivrs mov sub es cmp mov sarl mov jl faddp enterq and xchg rol rex.B xchg out sti fs mov ljmp (bad) mov mov in movabs (bad) or imul shrl jg push movsl mov xchg movl add rol mov fidivl retq xchg xorb add jnp (bad) sub imul xor (bad) jo lcall jle shll rex.RXB mov retq cwtl adc repz jge xor repnz adc cmp fldt mov (bad) add rcrl cmpsb mov xor in shrl loop movabs sbb adc or callq (bad) (bad) stc lahf cwtl adc fs movabs cmp imul pop stos mov mov cmpsb xlat es xor data16 (bad) add sbb mov (bad) add rcrl out sub fwait movabs fiaddl sarl and rex.WRX cli rex.RX rex.W xchg cwtl sbb repnz add data16 (bad) rcrl push stc mov xor test rex.R roll test movsl push (bad) (bad) cld lea sub scas and rex xchg movabs roll or pushq cmp idivb (bad) jbe push and lret mov xchg (bad) fisttpl lret add or push in xchg mov out push sar test notl cld (bad) jae (bad) insl sahf mov mov (bad) mov xchg mov movslq (bad) fxch jge mov cmp jo rclb rex.W in (bad) rex.RX xchg movabs test mov sbb rex.WB cmp mov fcmovne mov pop rex.W lock shrl sahf xor (bad) pushq in add movabs mov xchg (bad) jp jge mov rcll cmp mov movabs fadds and add repnz cltd pop andl jg mov cltd shrl movsl sbb rcll ja sahf mov rorl adc stc jge and outsb xchg sti (bad) sahf and (bad) xchg rex.WRXB ror fidiv push and shll (bad) pushq fldenv sar testl sbb movabs sub (bad) (bad) movabs repnz or ja jo fild push rex or sub shrl add mov sarl ss and mov mov or jrcxz xor (bad) retq push pushq pslld xor es lock (bad) mov lea callq cmc xchg pushq (bad) rex.W rex.RB add repnz pop push rex.B cmp (bad) push (bad) ror in insl adc icebp mov cmp testl sarw adc (bad) stos cmp (bad) movabs sti add rex.WR insl jb (bad) stos pop movabs push sarl mov rcll or test stos movsl shrb xor xor repz xchg sbb bnd pop rex.XB out test and xchg cmp add repz xchg stos sbb lret fwait ds rex.B jmp (bad) iret mov (bad) cmc add cmpsb sub cltd (bad) xlat outsb (bad) add rex.RX cmp mov fldl sub (bad) cmp rex.WRX (bad) (bad) in jp rex.WRXB rex.R mov sbbb enterq in loopne and test jo xchg (bad) (bad) icebp rex.R (bad) imul or loope,pn jae fildl mov imul icebp rex.WXB jmp lret add xchg loop enterq mov mov xor jmpq and out in (bad) (bad) add or fsubp test or rex.B or rex.WB lock loope pop rex.WRB lock retq mov sbb mov pop icebp js,pn (bad) repz fsubrp rol mov xor (bad) xor mov (bad) fadd (bad) xor retq jae mov int pushq (bad) rex.RB rex.W out (bad) gs lret test jmpq mov xchg test adc pop test cld loopne lret rcl pop data16 mov (bad) rex.WB jrcxz subl jrcxz mov pop (bad) rex.B add cli adc rex.RXB sbbl xor repnz fwait sbb cmc xlat mov push fidivrl and add add retq fisttp rex.XB icebp outsb movabs sbb in (bad) rex.B (bad) and int3 retq (bad) std fcmovne (bad) fwait mov (bad) rex.WXB in cli (bad) movsb (bad) add leaveq imul movsb or jmpq sbb cmp rex.XB in leaveq fidivl xchg fdivl outsb (bad) enterq movabs jno mov mov rorl popfq mov rex.WRXB rex.WRXB (bad) movabs (bad) jmpq movabs add mov movabs mov rex.WR roll repnz scas sub rcr iret clc mov test mov xlat rcrl out xchg mov add vmwrite movsb add cmp idivl movabs ja scas sarl fisttpl js test roll roll mov nopl fcmovnb retq mov or push add es mov rcrb pop out movb push stos xchg xor (bad) movabs fs jl jp scas push (bad) mov add jle push add out (bad) ss mov rcll clc lods sbb jrcxz scas ja pushfq in fmull or (bad) (bad) pushq test repz (bad) rex.WXB mov and sarl xchg rex.B addr32 xchg (bad) pushq xchg sarb xchg and rex.WRXB (bad) (bad) decl insb rcrl pop sub sarl xchg movabs pop shll enterq mov push test rex.RX adc js roll (bad) lock or and retq xchg rex.RX ja popfq jns push mov cmpsl shr mov shl cs (bad) adc rcll (bad) fwait sub sbb jbe jle imul xchg notl pop or sbb icebp test mov (bad) stc adc pushfq pushq mov jo sbb ds jne test addr32 stos test je (bad) mov std mov test mov adc lret cmp int3 pop rol jo (bad) mov ror rex.WRB repz bsr rcll (bad) or loope sub jae adc (bad) sbb (bad) rex.XB fldenv rcll test out lahf repnz shll cmp addr32 shrl jo (bad) shll pop inc pop insb cmpl retq movabs rex.WRXB loop adc icebp (bad) rex.WR sub sbb or retq (bad) repnz jno cmp hlt mov cmp mov (bad) hlt js (bad) fldcw (bad) xor and retq movabs shrl push (bad) jl ror pushq jrcxz scas (bad) sbb cmp jg jle pushq rcrl (bad) shr jbe cmpsb add and add rcl pop xor (bad) sub mov (bad) sbb std sub out or rol (bad) (bad) mov add mov movsl rex.WRB (bad) andl mov in stos cmp rorl jmpq mov lahf add scas add in (bad) int rex xchg and sarb fldenv outsb (bad) mov (bad) stc mov mov and xchg xorb (bad) rex.RXB sar (bad) (bad) (bad) ror xchg push popfq adc mov push pop jrcxz sub xor (bad) or and (bad) test cmpsb xchg rex.WXB and rex.WB rex.RXB movslq xchg in rex.RX rex.WX sbb (bad) mov rcll adcb rex.XB stos sarl mov shll in sub (bad) add jmpq (bad) xor mov (bad) rex.RX popfq xchg jrcxz sub in add cli lock cmp rcrl jb (bad) xor int movslq adc sbb cmp add popfq or shrl es sahf loop rcrl push fistp cmp jb movabs (bad) movabs mov (bad) or roll mov sarl stos xchg test push loope enterq or js (bad) in subl or pop mov cmp pop pop sbb pushfq rex.WRXB decl data16 ss xchg mov pop xchg addl loope lahf rex.WRB fmul cs clc shll adc (bad) push (bad) (bad) out jp xlat std and push cmp lahf rex.WRXB pop ss shr outsl (bad) (bad) cmc stos (bad) jns (bad) iret popfq cld (bad) and xor loopne,pn in rolb movabs pushfq clc popfq mov rex.RXB xor jrcxz,pn icebp pop rex.W jae movabs or retq (bad) jns or movabs iret rorl insl or leaveq rcrl imul callq fsubr cmp mov outsb and js shlb fs xchg rcll fcmovnu std imulb add lret (bad) push jl rex.WRXB fwait int loopne push cli std xchg int3 mov cmpsl (bad) nop and loopne (bad) or cmp es (bad) adc (bad) leaveq divb (bad) cmp test add fwait sub rex.RXB ss lret rex.WB xorl adc jmp add cmp jl (bad) sti jle sbb rex.XB mov (bad) and out cmpsl pop adc leaveq ja push (bad) sub (bad) push adc lret rex.RXB cmp mov (bad) push rclb enterq mov test rcrl insb rex.W xchg (bad) add xlat sbb movslq lock imul (bad) movabs nop (bad) clc fisubr roll and mov ds ja rcll rex.XB test stos (bad) jns rex.WX rex.WXB sti or pushfq jg add out adc outsb rcl (bad) pop ds jge lret add fnstsw or roll adc jle adc add mov sbb (bad) mov (bad) rcl retq repnz (bad) repz rex.WX retq xchg add mov mov (bad) (bad) jb push mov int out rex.RB (bad) rol (bad) xor pop cltd mov (bad) or xchg xor fsubp and xchg pop scas rex.WRB sub gs pop fmull and out mov repz mov xor (bad) sbb (bad) xor (bad) fucomp sbb mov xor sub retq insb xchg rol faddl sarb rex.RX orl (bad) xor pop callq (bad) in fiadd ds (bad) (bad) (bad) jrcxz xor scas xchg clc xchg xor (bad) test push and rex.B jg rex.W rex.WR jle xchg rex.RB (bad) test in sbb (bad) test sub mov push sub rex.WX or cld (bad) sub sub orb movslq std sbb callq std fiaddl xchg xor pop sti fwait jae push sub out xor xorl mov in jp pop sbb rex.WRXB ficomp rcrl (bad) jg (bad) cmc hlt movabs lret mov addr32 stos rex.WRB cltd (bad) sbb scas (bad) rex.RXB pop rex.X (bad) adc lret mov lea out sbb mov rex xchg outsl (bad) int3 retq or xchg rex.XB cmpsb jb rex.RXB xor hlt sbb rol sbb repnz (bad) rex.WXB sbb frstor push rcr (bad) pop mov leaveq addr32 shlb pushq (bad) (bad) lods (bad) add rex.XB lret scas mov retq je (bad) (bad) mov iret xor cld icebp cltd fnsave xor fnstcw and sub sbb (bad) cmpsl mov jae rex.XB and (bad) add add jl jp lods jrcxz pop loope clc rex.WR adc cwtl xchg ffree xlat lret je jrcxz (bad) jle (bad) add and int (bad) stos (bad) xchg loopne cmc mov cmpsb adc lods rex.RB adc sub mov je insl cmc push movabs data16 js js add sbb kandw and add jns jno (bad) repz jmpq rex.WR jbe jmp outsb retq leaveq js or (bad) (bad) jno mov (bad) clc jle jle adc (bad) rclb movabs mov jne mov xchg (bad) cmp mov ffreep (bad) (bad) sbb and (bad) gs rex.WRXB icebp mov jns jp jg sub addl clc rex.WXB orb leaveq xlat add add cmp fwait rex.WX (bad) jbe ja xchg clc pushfq (bad) lea leaveq movsl test enterq (bad) hlt fs jae add xor mov pushfq (bad) (bad) rex.WRX fwait xchg jb push je rex.B retq test movsb pop fstps xor (bad) hlt rorb mov (bad) and and mov sub addr32 (bad) imul fsubl pop jmp callq cmpl (bad) xchg (bad) and (bad) test out iret adc fisttp cmp (bad) push push xchg rorl xor loop loopne jb (bad) xorl (bad) adc enterq (bad) jno (bad) (bad) sahf (bad) shll stc cld repnz (bad) (bad) add fsts stos mov mov cwtl sub jnp add (bad) pushq test leaveq loope or rorl push mov imul (bad) repnz cmpsl xor sbbl fwait and lods cmp push cmp rcr adc movsb sarl xchg jg movsl rex.WXB retq rcrl clc rex.RXB (bad) or (bad) rcr out (bad) rex.WRXB sbb add jnp jne movabs mov adc (bad) mov (bad) pslld add and sar adc jnp cmp sarl outsl sub std (bad) mov int js test lret pop rex.X push outsb mov or rex pop fwait mov divl xchg jrcxz cltd retq gs rex.RXB fwait jmpq push sub xchg lahf mov rex.B mov jp xchg rcll jl (bad) (bad) push stc (bad) mov sbb callq cmp in jg xchg xchg ss iret and sarl loopne mov icebp rorl stos leaveq mov in subl mov sbb xor iret repz cltd (bad) icebp movabs mov add fidivl and xor rcll lods rcll cmp shl loop add cld jl jno xchg rcll (bad) push mov sbb rcll jne sahf rclb ror fidiv repnz xor xchg pop rex in sbb (bad) xchg repnz movsb je cmp or (bad) mov lea xor in in retq (bad) xor sbb shl pop jne xchg mov rcr (bad) xchg pushq (bad) jge (bad) sarl out js ffreep xchg or iret cli retq add cmpsb stc movabs (bad) cwtl std sbb (bad) scas rorl mov (bad) (bad) (bad) sub lret mov jbe mov (bad) nop push in or pushq (bad) (bad) outsb adc xorb adc sarl mov cmovno out xor retq pop xchg in clc ja fmuls sbb retq push scas retq mov jae mov cmp cs rex.W in rex.WB push loope lret test sbb jo shrl rex.XB adc mov cltd pushq sbb xor loopne cld rex.XB jl xor cld shll jmpq shll jb je mov fisttp add jl add cmp mov rex.WRB lock in jg rol xchg (bad) (bad) mov push sub jrcxz add and mov sub and in mov jno jge test mov cmp rorl xchg mov (bad) (bad) rcrl nop clc rcr int mov adc lret cmp subl cmc movabs cmpsb sahf cmp movabs rex.WB mov pop sbb cmp rol cmp movabs loopne (bad) sub add mov or add fdivrl sub lret mov sbb rex.WX sti and pushfq lret loope or test cmc (bad) mov or cwtl or sahf adc mov (bad) imul (bad) pop rex.XB mov (bad) jl iret shrl (bad) push sub lock cli repnz xor (bad) outsl stos fistpl or and rex.WX rex.X add adcl mov jmpq (bad) push or sub rex.RX rex.RB rex.W (bad) rex.WRX nop in pop fstpt jmpq in (bad) jne jnp (bad) scas adc sub in lret rex pop rolb cmc add rex.RXB std cmp fild (bad) or xchg rex.B fs data16 rcll mov test push gs mov js or in movabs incb fimull fs mov push fsts cmp shr andl push sbbl icebp loop test rex.RX movsb retq rcll adc sub int lods lret cmc lock (bad) add sar mov clc pop xchg std lea (bad) sarl scas push callq xchg add (bad) rcr stos mov jge or mov insl addr32 cwtl pop rcll or sarl (bad) (bad) ds (bad) jne rex.X add (bad) scas (bad) data16 pop mov sbb sarb adc jge cltd (bad) or add jl (bad) lods repz add rol jrcxz cmp mov or pop sbb (bad) imul movabs test lret xor mov imull fld mov cmp mov in pushq rex.WB addr32 rex.WXB sub or jns retq fmul out lods mov (bad) (bad) jae (bad) xor mov out (bad) movabs (bad) mov adc loopne jmpq cltd (bad) or and (bad) pushq (bad) rex.WRX mov mov movabs jns cmpsb iret push std (bad) rex.WRXB (bad) sbb (bad) (bad) lock repnz mov mov xchg fcoml stc (bad) test and testl xchg (bad) rolb cmc scas lods xor rex.B xchg enterq xorl jbe mov sub cs ficompl in rcl repz jae movsl cmpsb sbb shl rex.XB xor decl rex.WRB scas sub rex.WX add pop (bad) mov or mov nop lret jge or rorb (bad) loopne iret movb in bnd imul ss xchg (bad) cltd fimull adc sub xchg movslq in retq xor mov (bad) (bad) sub movabs mov fmul cli (bad) movabs rex.XB jle mov sub and in js insb clc (bad) mov or jl addr32 sub xchg shrb mov mov test decl es mov (bad) sub or int pop mov jne lock lods add lahf fldenv movabs rex.RXB cmp (bad) jne sub sti je movsl rex.RB sarl cmpsl shlb pop xchg sub and retq (bad) insb add enterq scas (bad) cs sub add shl leaveq (bad) fmull push adc (bad) (bad) in retq (bad) ficompl rex.WXB callq push xorb (bad) enterq (bad) rex jnp rex.WR and add repnz lods rex.R test fstps movabs adc rcr xchg loop in or loope adc mov fldenv rex.R (bad) xor movsb int xor xchg in pop sbb rex.XB repz (bad) (bad) xor jg mov stos (bad) sbb cmpl mov loop and jno jae xor lods (bad) callq sub ror (bad) (bad) jrcxz fbld or xlat movsb add sbb cmp xor push rex.WRX (bad) fisttp out pushq xor (bad) insl jmp repnz and (bad) rex.WRB rex.WRX loope mov je fiaddl in push (bad) ja mov fmull es repnz push popfq cmp in xor jne mov cmpsl xchg mov movabs xor out cmp out loope (bad) (bad) rex.X data16 lock push sbb psrlq xor cmp sub addr32 push mov mov callq (bad) cmp mov out and (bad) ss movsl jno push gs or fdiv (bad) stos vpunpcklqdq movabs (bad) repnz outsb lock jae sbb rcrb add rex.RB enterq jo push cmp xor xor fstps ss xchg xor sub jb (bad) sbb cmp xchg in test (bad) xor gs lods (bad) jl lock sbb and fwait data16 or pop add fstps sti (bad) cmp jb (bad) je jmp rex.WR add shld xor gs pushq outsb int3 (bad) add (bad) adc xchg (bad) rex.RB cs pop mov insl (bad) fs cwtl push cmp retq fwait sub fs (bad) cld repnz mov mov out fldl enterq jle rex.WB (bad) movabs movslq (bad) (bad) rex.R pop lahf adc (bad) fmul (bad) fnstsw out mov movabs mov xor adcl loope (bad) (bad) cli lcall xchg xchg sub rex.WB lods rex.WXB outsb jp adc leaveq sbb rol (bad) xchg mov test jo je jle rex.WXB sbb cmp stos scas enterq mov xor outsb enterq (bad) movabs mov mov (bad) jbe (bad) movabs xchg mov pop test cld js mov mov rex.WR jnp mov mov lret pushq shrb (bad) scas cmpl adc xchg imul ss lret add lock std cltd cs out add pop fidivl sub stc mov xor xor mov rex.XB stos fadd or leaveq movl test jno cwtl retq mov jp fistpl leaveq roll mov je es cs pop callq repnz rex.X (bad) xor shl insb test decl faddl xchg xchg xchg (bad) stos sbb sub mov add movabs or jl pushq (bad) jp movl mov mov rcll rex.WXB loope (bad) add fcomps add repz xor es out adc rex.RX outsb pop xchg fisubl rex.WR (bad) out rex.B (bad) push paddsw or sub mov (bad) push js rex.RX stos xor lods rex.WRXB fcomi (bad) adcl push mov mov nop push sub popfq cmpsb pop std cs addr32 (bad) movslq mov rex retq fs jo rcrl repz or fmulp out sarl test js (bad) inc pop push sub adc or shl sbb pop mov and xor rex.R add lock leaveq adc rol sub enterq idiv loop sbb add mov mov sub jp cmc iret xchg jrcxz sub cmp retq rex.R sbb out rex.RB rex.W xchg (bad) mov pop jl jbe test int3 (bad) jno cmp repz (bad) imul xchg (bad) or rclb (bad) (bad) and (bad) enterq push rcrl pop rex xor (bad) (bad) gs xchg mov fistpl add addl push stc jbe fisttpl fsub cmp int (bad) sbb mov add test fsub and xor mov movabs icebp rex.WRX retq outsb mov cmp test cs rolb jp adc xor nop jmp (bad) rex.WRX push cmp sbb rex.RXB (bad) mov xor imul xor (bad) lock and jno pop rex.WX jb mov movsb fs mov adc (bad) or ja repnz scas (bad) mov leaveq pushfq int3 push rex.WXB neg sub push push cmp callq sbb (bad) lock jrcxz movslq sbb repnz sub test (bad) imul hlt fisubl (bad) (bad) pop mov rex.WB loope repz pushq rex.WR pop (bad) (bad) (bad) rol pushq int3 test retq rex.B insb icebp (bad) xchg add (bad) insl add mov rol test sub cmp sbb mov loope stc push fninit out (bad) pushfq in shrl rex.WXB fwait push sti jrcxz add insb lods mov (bad) ja xor cmp (bad) jle lock (bad) (bad) (bad) mov push (bad) adc cmp or xchg leaveq ss xchg (bad) jmpq negl cmpsb shrl cwtl mov std rex.RXB pop ja rex.WX xor movabs jmp xor or pop rex.B (bad) data16 xchg ror mov push rcll cmp shrl sub cmp pushfq cwtl cmp pop lahf (bad) jae sub adc scas (bad) movabs (bad) stc cmp sahf (bad) test (bad) je cmp cmp enterq movabs int3 or sbb mov pushfq insb rex.RX xor rex pushfq rex.B data16 incl insb (bad) je mov cmp hlt rex.X cld rex.R insl loope rex.RX sahf roll rex.WB fld (bad) cmp repnz cmpsb (bad) (bad) rol int3 rex.R mov sahf movabs sbb fiadd mov roll mov (bad) jg outsb ds roll out rex.RB movabs and rcrl mov (bad) ss or out lea sbb movabs roll sub rcll jle roll push push or stc data16 jnp mov xlat rex.RB pushfq int callq xchg or (bad) rex.X mov sar int3 pop stos or (bad) push pop movb rorl pop adc and add or outsb int3 and sbb scas add (bad) push orl rcrl jb (bad) jnp sub outsl addr32 icebp in mov rex.WX sbb cmp imul mov cmp sbb push or jg and lock outsl sbb shrl fdiv cmc movsb cli rorl rorb xchg (bad) test jmpq xor xchg fwait jae (bad) adc test rclb xchg fwait (bad) or clc repnz (bad) icebp cmp hlt mov punpckhwd xor mov pop cmp pop sbb retq jbe rcrl rorl xor rex mov (bad) in lret scas loope jrcxz sbb mov cwtl mov movabs fisttpl xor (bad) (bad) repnz adc pop (bad) hlt lret mov sbb dec ja sti jle adc rex.WXB (bad) sub pop sahf iret lods (bad) cmc xor lock ljmp shrb (bad) in lods mov pop adc out rcrb mov mov rex.RXB rex.WR outsb cs movabs cli fnstsw jb fcmovbe (bad) jne (bad) pop xor xchg rex.WXB jae and movsb callq mov add mov fadds rcrl adc mov retq mov jae outsb rcr xchg movsb (bad) (bad) addr32 fisttpl pop rex.RB data16 in out callq cmp pushq add add ss movabs pushq add sbb sub push xchg and movabs (bad) lock je (bad) repz rex.R adc (bad) (bad) jg lret and mov rcr push mov movsl (bad) mov mov rorb (bad) rex.WRXB scas in pushfq data16 lret lock (bad) rcll add (bad) push (bad) adc add mov test xlat repnz adcl (bad) retq push (bad) rex.WB jne int std jp not or cmp sarb mov cmp pop (bad) jae stc out (bad) test sub repz pushq pop je mov mov std gs movabs fistpll jns cmpsl xor adcb rex.RXB movslq callq (bad) and pop jmpq mov je jmp lret (bad) sbb js andl fcmovnb adcl out stc leaveq add ror rex.XB pop sub rex.WB (bad) (bad) (bad) out lock int3 mov movsb (bad) (bad) roll mov rex.WRXB movl movabs sub (bad) test rex.B lea (bad) sarb in and cmpsl stc roll sub xchg jo rex.R mov (bad) movabs sarb xor movslq stc add jge int push rex.RX lods sbb pop fcompl (bad) movslq lahf (bad) cmpsb xchg rorl sahf jp and sbb ss adc adc jge int add sub fisttp xor sbb in or xchg (bad) retq out xchg lock (bad) fcmovu mov rex.RXB notb jno in xchg shrb pop enterq movabs add icebp out in icebp sti pushfq lods fidivl jmp rex.RB shll enterq (bad) or fnstcw movsl rex.WR stos outsb fcoml xchg pop lret retq xchg cmp movsb testb int rex.WRX pop nop or mov int rex.WRXB mov rex.WB jmp (bad) loopne in xor in insl (bad) rex.WX cmp adcb mov sbb jb jbe test rex.R movsl mov sub addr32 push (bad) sub clc fdivr jp xchg mov and cmp mov fwait adc popfq add fidivr cmpsb out nop (bad) or (bad) adc sbb pop out retq out rex.R pop (bad) sbb lret retq xchg popfq xchg (bad) push lahf sbb adc sbb pop mov xor enterq (bad) int out mov or adc lods pop adcb rex.WR ss jae (bad) xor stc movsb sub (bad) sub push sbb shrl xor xor mov push sub xor ror and jrcxz lret rex.WR shr rex.X (bad) leaveq js shr (bad) jmpq mov in mov enterq xchg pop rex.R rcl xor (bad) rex.WXB jmpq test enterq cs out int mov mov add jne lock rex.WR (bad) out repnz rex.R movabs (bad) (bad) enterq (bad) mov xchg scas xchg adc int3 rex.WB cmp movabs cmp stos mov adc cmp push (bad) jrcxz sub xchg jae (bad) fstl pushq rex.RB outsl rex hlt loopne fdivs stos roll mov in cmpsl cs (bad) out pushq xchg (bad) mov int movabs (bad) jbe sbb rex.RX rex.WR (bad) vminsd mov rcll retq rcll fnstcw push cmp stos roll in (bad) repz (bad) repnz out test rex.W rex.B (bad) lods push cmp fsubrs (bad) flds and pop shll add xchg mov test cli lods (bad) cmp outsl (bad) addb adc movsb data16 push xchg cmp loop push sbb and rorb adc push stos (bad) movslq movabs iret orl xchg fs addl sub rcr test rcrw imul add push out test mov fisubrl roll sub (bad) jbe add roll fcmovb (bad) in stc rex.RXB mov iret rex.R cmp movsl stos ss sub imul rex.W (bad) mov es lret rex.X out fidiv (bad) sahf sub cmp leaveq mov es callq test movsl (bad) cmp xchg insl out push xorl rex.XB sub shrl jg jbe fsts callq mov rex.WR hlt fwait scas sbb rex.WRXB xchg cltd shrl movabs jle imul mov int imul xor (bad) (bad) loop nop (bad) adc mov rex.WXB push and rex rex.XB or rex.W mov iret rex.WX cltd jo shrl pushq hlt je sbb cmp push imul sub movabs cld (bad) xor mov rorl adc sahf add shl sarl (bad) push rcll xor sub (bad) imul pushfq ds xchg shrl ja callq (bad) retq push (bad) (bad) out cmp insb (bad) add leaveq notl movabs cli (bad) (bad) rex.WRB cmp rclb jo pop rcll ffree jge sub movabs int mov roll jrcxz (bad) (bad) and or retq rex repz xchg xor jne and sbb (bad) mov fwait (bad) rex.W shrl and (bad) and add lahf sbb lock cmp mov pop jrcxz mov movslq (bad) mov repnz jno rex.WR lock pop push xchg hlt jne and adc add mov mov (bad) sub (bad) or ja cmpsb leaveq cld sub loopne add xchg (bad) (bad) sub fs imul test push and mov (bad) xchg or or (bad) hlt rcrl subl (bad) (bad) cmp sub rex cmp retq (bad) mov sbb mov mov fadd xchg xor rcrb pop adc sub mov (bad) jmpq mov insl icebp fcomip pop sahf andl (bad) loopne mov add (bad) stc stos xchg js callq sub lret out sbb rex.WRX cli (bad) test cld pushq jmp or or sahf fiadd cmp retq iret enterq sarl jrcxz rex.WR shlb jno add rex.RX repz popfq movsb int3 jne rex.XB pop (bad) stc jle fmuls outsl mulb negl sti (bad) (bad) mov jp jo sub mov scas loope pop add jl pop xchg cmp and outsl (bad) lret pushq mov (bad) push js popfq and cmp fcmovnb jo or mov sbb flds (bad) or mov xor mov add sub and movl xchg lret and mov mov popq xchg sub loopne or testl idivb (bad) mov sub pop jp in mov (bad) and adc icebp (bad) mov push mov movsl (bad) adc scas in test hlt mov pushq jns gs pushfq mov sbb sub push adc cmp lret add sbb rex.WB movabs repnz cs repnz movslq cmp add jge mov cmp fsqrt lods std (bad) movslq or cmp out rex rex.RXB (bad) in (bad) push (bad) hlt add xchg mov (bad) sbb and repnz or imul or xor divl (bad) shl out ss push retq mov or mov sbb rex.R enterq jns in int rex.WRXB cld (bad) packuswb cltd cmp fcmovnb xchg lret push rex.WRX (bad) out (bad) (bad) cwtl movabs lahf (bad) cmovne mov es fmulp xchg rex.WRX adc movsb imulb ja,pt (bad) mov mov lods sub fadds mov lods fidivr mov cmp (bad) iret fcomps (bad) sbbl movabs (bad) pushq retq fsubl (bad) sbb jo bnd or mov test xchg (bad) callq (bad) xor and mov sub mov add leaveq sub (bad) jno data16 movabs je lods xchg (bad) jle cmc xchg mov insl mov mov and imull sbb fsubs rex.WRXB js xchg lahf cli sbb lret mov lret mov int3 (bad) xchg rex.WRX fdivrs jmpq enterq (bad) pop int3 mov nop leaveq mov jb xor mov test sub pushq xchg rex.WB mov (bad) scas enterq xchg sbb push faddl and rclb movabs lahf cli (bad) ja (bad) outsl lods or fsub cmp (bad) rex.WR mov adc cmpsl leaveq movabs mov mov in and (bad) lods adc jae mov push hlt mov pushq and xor movq sahf jne leaveq in (bad) loope xor retq or push (bad) adc jmpq sub (bad) (bad) or cmp out lret xchg (bad) (bad) (bad) pushfq fcmovnu xor or icebp push (bad) mov lahf int3 repnz test jp mov or cs rex.RX rol mov movabs mov xchg retq movslq mov pop and sbb insb (bad) fisubrl std clc sub loope jae flds jne (bad) and out in cs push sarb and (bad) rolb pop (bad) sti xor (bad) mov fstpl js jne int (bad) test rex.XB adc (bad) rex.XB roll add (bad) xchg div sbb mov mov push mull stc or rex.W pop lret leaveq sub out movb xchg xchg push (bad) sti jno pop (bad) icebp sarb int3 sub mov leaveq rex.W xlat test mov stc (bad) (bad) cs (bad) repnz leaveq rex.X sub jmp adc (bad) cmpsb fdivrl imull outsl (bad) lahf rex.R out push movabs decb pop stc (bad) idivb (bad) xor mov cs rex.WRB rex.XB pop rex.RX loopne (bad) and (bad) (bad) lea leaveq push int rex.XB mov loopne (bad) add mov rex.RB rex.RX loopne add jmp (bad) fmuls and popfq icebp sbb mov movsb retq (bad) loope,pn and fs jns or jmp or rex.R cmp xor mov imul movsb push rex.WR rex.WR cltd sub mov jmpq mov jbe loop sub (bad) xchg jno rex.RX movslq xchg xchg movsl cmc (bad) je add leaveq (bad) xor test xchg push repz movabs ja pop (bad) sub (bad) mov mov xor std mov retq jmpq jl sbb stc (bad) mov xchg mov pop jmpq pop in test sub mov (bad) divl mov rex.WR sub xchg pop (bad) cli or rex.WXB add (bad) sbb xchg pop sub rex test rex.WB sub mov out sbb mov pop mov decb pop and rep (bad) hlt enterq add or rex.WRX cs repnz mov repz (bad) xor test jae mov mov sub fsts jmpq movabs jae (bad) pushq out push mov mov imul fnsave jae mov test (bad) mov lret lea sti icebp out (bad) cmp (bad) (bad) in cmc sub pop xchg xchg (bad) pop rex.R rex.WR out in stc cs (bad) sub rclb je cmpsb (bad) sub mov (bad) hlt mov jns jg xor rex.WX imul out cmc clc (bad) fcomi stc shrb pop (bad) mov out repz divb rex.W in subl and clc jrcxz (bad) rex.XB imulb jmp int js callq nop rex.WRX pop gs loope xchg lahf add hlt push repz pushfq cs or cli jae out xchg je or test mov cwtl mov xorl movl cli pop add mov fnstsw push or add sub lock jmp add int cld mov sub xchg rex.WR rex.WRB imul test mov fild andb push scas sub data16 xor cmp in xor jmpq lea testl jne lcall sbb xchg callq and or hlt jne imul loope,pt xor mov adc lret (bad) add sbb and adc rex.RX mov cmp mov xorl jmp enterq rex.R lret (bad) cltd clc retq rex.X cs xchg mov xchg or (bad) repz enterq movabs jg push (bad) retq (bad) pop mov rex.B jne xchg rex.WB mov int3 (bad) add in sub adc rex.R rex.RX rex.WXB loope xchg stc vucomisd insl in loop (bad) cli cmc pushfq or cltd out fwait jg fild (bad) push xchg rex.RXB cmpsb movabs sub add in mov xor in rex.RB and out sbbl xor rex.WB int3 sub rex.RX movsl (bad) (bad) xor rcr movsb mov rex.WB mov mov shrl rex.WXB mov js movsl movsb mov cmp lock retq fwait rex.WXB (bad) stc xlat icebp or push sahf (bad) and leaveq (bad) repnz xchg out scas movsl rex.W enterq scas (bad) rex.WB sbb add enterq (bad) scas jne out jrcxz es stos rex.W test lea cmpsb rex.WB callq in rex.WRB out cs lods adc (bad) sti mov (bad) movsb movabs movabs add rex.WXB xchg rex.RXB out cmp sub cld mov or xchg and (bad) jg mov (bad) rcl and pop and fucom mov mov xor sub mov mov add mov mov pop xlat pop xor sarb xchg repz nop jbe out lea test addl (bad) lods xchg sahf sub retq pop sbb (bad) sbb (bad) push mov cs out xchg mov pushq xchg (bad) cmp movabs adc rex.RX xchg retq cs (bad) cli out sbb (bad) xchg push or sbb (bad) fstpl iret or mov lock icebp mov pop jmpq popfq (bad) mov lock retq sbb neg (bad) test ja roll (bad) pop out sbb pop push (bad) mov (bad) fistpl mov int3 lods mov mov (bad) add bnd retq push add stos push callq xor out lea xchg lret cmp xlat or pop sti add mov mov loope mov (bad) fstps roll and pop add rex.WRX retq (bad) ds pop nop (bad) shr fist sub imul (bad) rex.RX rcrb (bad) in jg incb fisubl (bad) fbstp rex.WR rex.RB rex.WRXB adc lahf mov mov jo jns movabs sub ja mov fcmovnb divb test rex.WXB cmpsl mov rex.WXB cmp mov ss rex.WR (bad) in fisub hlt repnz or add out mov (bad) jle mov or insb jmpq imul decl divb (bad) or sub test out and or (bad) out lea jbe out (bad) fsubrs adc sti shrl xchg cs (bad) rex.B stc icebp mov leaveq sub (bad) out ficoml lea (bad) mov rex.X rex.B test mov out retq rex.WB jle sbb mov sub insl jge pop jmpq (bad) cltd cmpsl fiadd out and cmpsb in jmpq fs cli imul (bad) jae rex.W jno pminsw adc xlat pop add loopne sub psubq push in push mov clc popfq rcll mov cmc or jmpq fsubrl repnz (bad) push std (bad) std add sti or (bad) (bad) (bad) (bad) vpaddb lret and (bad) rex.RXB (bad) cli hlt loopne cmp and std fcmove in and (bad) in testb test xchg (bad) pop cltd in leaveq movabs (bad) pop pushq (bad) enterq xchg pushfq jae rex.WRXB or lock rex.RXB div mov sub (bad) in (bad) pushfq hlt (bad) rorl (bad) jmp loope rex.B (bad) out xor rex.XB movabs lret imul (bad) retq pop jnp rex.WR adc jg xor adc jbe adc and mov int3 mov sub add int or sarl pop std cmpsb sub rex.RB (bad) clc cmpsl (bad) mov xchg cli jno mov out enterq icebp mov fwait mov leaveq pushq pop test sub loope mov (bad) out rcll shl sub retq mov jno fs nop (bad) rclb sbb repnz ds leaveq xchg pop sub rex.WX imull loope gs (bad) mov int3 adc mov fisub sub leaveq idiv jg imul mov jp fs and sub jl adc pop rex.RB rex.R xorl push movabs roll in mov fs sarl mov mov (bad) jne fs insb fs lods imull fs mov lahf push leaveq movslq je (bad) out andb add stos rcrl fs mov test lret cmc stos xchg je je js (bad) shl jmp (bad) or rex.B pushq (bad) add sbb push mov pop rex.RB int3 sub xor mov hlt icebp int3 sarb fs in jg sbb (bad) sarb cmp loope rex.X or sub xchg pop test sub mov icebp pop in out adc mov xchg test xchg xchg testl iret rex.WR cmp pop loop movabs mov retq ds cmpsl sub ja rex.WRB (bad) pushfq rex.WRX add cmpsl or sbb (bad) pushfq clc (bad) (bad) adc ds ds pop push add rex.WRB cs addl or sbb imul cmp fs sub repz mov imulb js add or ljmp roll retq cs mull mov rex.X jno (bad) or jge adc xor stc test push rorl jmpq callq and stos adc test callq scas jb movabs mov push hlt out (bad) and sub out std add cld rex.WB negb rex.RX repz nop lea fpatan hlt rolb cmp movsb movsl cld cld jnp ss rex.RXB cmp rcr decb out adc movslq push std pop pop int3 fs rex.B (bad) rex.W pop (bad) mov add xchg (bad) retq mov stc test lods rorb movabs jp pmaxub rex.WR loope fistp jmpq xchg jns mov lahf iret shlb data16 enterq xor test clc push (bad) test fistp adc cmp adc mov (bad) sbbl mov lods cltd (bad) fwait icebp test mov rex.B test (bad) loope cmpsl (bad) outsb (bad) xchg movabs loop (bad) mov int3 cmp cmp push stos add ror jb pushfq rex.WB xor (bad) hlt jbe int3 mov jnp std rex.B movabs repz (bad) (bad) mov movslq enterq fmul ds movabs sti push rex.WB out std lea add jno xchg mov leaveq push addr32 cmc (bad) cs repnz mov add sahf add test xor (bad) (bad) push (bad) (bad) adc sub es or retq rex.WXB retq ss cmp push cltd adc jge jrcxz data16 lock jmpq (bad) cmc mov rex.WRX sbb mov mov int movabs lea (bad) or test icebp retq insb (bad) sti jno cld xchg (bad) imul mov rex.XB mov int3 icebp rex.WXB rex.RB fs cs callq loope pop rex.WB rex.R stc lret leaveq int3 notb add adc (bad) jne add (bad) rex.WXB mov jae adc (bad) (bad) jle fs callq out (bad) add test std and sahf ss (bad) mov rex.WRB jae pop xchg jp rex.B (bad) sub mov outsb sub rex.RX mov icebp jns cs sbb rex.RXB repnz mov movsl jno (bad) (bad) pop stc (bad) sahf add sub movabs fwait enterq cmpsl xor add xor rex.W cs xchg rex.WX add (bad) fsubr pushfq or rex.WB leaveq or je pushq rex.RB rex.WRX (bad) jnp out xchg sub rex.RXB (bad) movabs clc mov sub (bad) (bad) sbbl mov loope repz retq mov pop (bad) movl pop cmc ss loope cltd (bad) xor int (bad) jo pushq lret xchg rcrb movsb enterq out mov and test (bad) pop shrb nop sub jae repz retq loope lock jno cmc or leaveq mov add (bad) or add and rex.R sub xchg (bad) fldenv (bad) rex.WRX rex.RXB sbb (bad) mov xlat jmp test mov leaveq clc (bad) movabs sub (bad) int mov imul outsl out rex.WRXB mov (bad) iret rex.WB mov sahf fcompl out movabs (bad) xor fdivs (bad) ss xchg sbb rex.WRXB rex.RX rex.B pushfq cltd add (bad) gs rex.WRXB in xchg lret (bad) xor (bad) rex.B cs sbb (bad) lods mov rex repz int std leaveq pop enterq adc adc (bad) cmpsl leaveq jmpq adc data16 mov and pushfq add push (bad) callq shl mov cmp test lods mov mov loop repnz xor nop (bad) (bad) pushq or rex.RX push xchg movslq (bad) add in pop cld jne,pt (bad) cmc rex.WXB and xor jmpq push sub cld pop xor lret leaveq movntq (bad) je rex.R in mov stc xor and int movabs loopne test fwait loop xor rex rex.WR add add pop fucomi in (bad) in movabs rex.B ja test adc jns xchg rex.WRX fsubrl leaveq lret sarl sbb cmc adc add xchg (bad) (bad) (bad) xor sub mov pop idiv mov pop insb out out (bad) jo sahf loope ss rex.XB mov rex.W rex.WRXB or fcomip sti (bad) xor imul iret leaveq rcr insl xchg (bad) mov outsl cmc jg rex.R rex.RXB out rex.WRB (bad) enterq sub (bad) jne mov rex.WRX rex.WR enterq repz jmpq int rex.RB cmp retq (bad) adc fbld fstpl (bad) cld mov cmpsb or jle mov and retq out mov out testb (bad) cli mov test std orl out (bad) jrcxz jbe pushq (bad) or cld mov out adc xchg or cmc (bad) (bad) add in hlt add sub sub andb and or addl mov fs sub rorb xchg mov or adc mov movsb (bad) movsb cld leaveq cmc mov cmpsl rex.RB rclb adc mov (bad) xor movabs jmpq out pop rex.X rex.WRX repnz addr32 add mov jmpq lahf jg jl insl mov rex.R testl gs in sbbl xchg leaveq (bad) xlat push sar enterq in stc adc rex.RX addr32 mov adc movsb xchg movabs add (bad) enterq jrcxz mov repnz rex.RXB pop mov int mov xor push sti imul in pop fs jmpq pop mov sub pushfq int rcll test gs callq fstps sti mov loope mov cld and fdiv stos lret mov mov (bad) rex.WXB rex.R cmp loop xchg movsb push test clc in sub mov int icebp xor lret mov hlt mov cmc testl or mov int lock jnp movsb and int3 mov out (bad) int3 pushq pushq data16 mov (bad) pushq jne lret pushq push imul rex.WB xchg test pushfq hlt adc lods push or (bad) sahf loop (bad) callq fwait mov rex.RXB mov jrcxz fcmovnu in adcl push or stos cmp (bad) hlt xlat es scas enterq loope repnz int int sub lret test rex.WRX cmp sahf movabs in (bad) popfq (bad) and jmpq add and (bad) addl movabs add shll outsb sbb in sub fisubl jmpq (bad) and adc add add rex.WR rex.R (bad) or idivb rex.WRB (bad) fsubr (bad) cld xchg fiaddl mov mov adcl je cmp (bad) rex.WXB rex.WXB rex.WR fisubrl sub (bad) and lret mov cli sub mov xchg rex.RB sub gs adc rex.WB sub incl fnstenv lret pop sbb (bad) sbb jne callq push xchg mov es adc push sbb adc repz rex.RXB xor or movslq es jmpq fnstcw leaveq vmovapd std or out in test insb movabs roll mov xchg out leaveq (bad) (bad) movsl test stc cmp pop in add sbb (bad) cmp rolb xchg fs movsb rex.WRXB out push sbb push add add pop scas and sub mov mov cmc lea out enterq (bad) leaveq sahf movabs and mov (bad) lret pop int3 jrcxz sbb idivl in movabs jb mov loope jle mul jrcxz repnz xchg and rolb (bad) xchg rex.WXB add xchg mov adc out or mov and and xchg icebp pushq or and jmpq out (bad) pushq cmp js (bad) int3 mov sbb mov rex.WRX add in cmp loopne mov rex.WRB mov pop cmpl or std mov test retq enterq callq lea test mov push lahf scas retq out pop jnp js lods mov imul lret lret int3 mov lret pop lock jns (bad) in std jle (bad) je ss fnstenv and rex.WRX nop push add xor test or add rex.RX adc sub pop (bad) fs add mov rex.R lret test cs jne or pop (bad) add repz mov jae rex.B subl (bad) loope xchg sub pop lret (bad) jrcxz (bad) (bad) (bad) jle xor or rex.B rex.RX test cmp sub lea jnp in (bad) shrl adc and and retq pop mov and retq push lahf lea (bad) sahf adc out (bad) test jb out (bad) stc rex.RX cld sub scas push out (bad) mov rex.W (bad) push or xchg repnz xlat stos movabs adc (bad) mov mov mov adc (bad) mov in pop xchg xor mov cs stos mov (bad) xchg xor and rclb hlt cmpsb mov sahf push or shll push sahf fsub callq and xchg out jp rex.W rcrl xchg (bad) xor cmp rcrl movabs icebp xchg or mov out jno movabs vmovaps (bad) xchg jne in (bad) icebp pushq cld clc mov rex.WR rex.WR xchg movslq rep fs push (bad) or jb retq pop pxor pop mov cli adc rorb test rex.B (bad) insl stc add rex.WX test hlt (bad) xor mov icebp fsubrs (bad) (bad) movsl fisubrl or mov out cmc push cmc imul lea movabs (bad) test (bad) xchg pop pop sbb jno pop push (bad) pop jrcxz mov xchg ds test cmp and nop push mov or (bad) (bad) adc iret lods jae int3 mov loopne rex.RXB rex.WXB (bad) leaveq rex.WRX adc in movabs (bad) adc outsb (bad) mov rex.W mov cmp lret jge adc sub xor out jae jl cs jl retq jns int rex.WR ja roll rex.X xlat cmpsb rolb cli xchg in rol (bad) mov lea xchg sbb int3 mov push repz test movabs sub jl jae rex.W lock and repz sbb (bad) fprem1 jge jmpq insb in in (bad) lahf imul popfq mov (bad) (bad) (bad) sahf movabs (bad) es rclb cmpsb xchg out imul adc rex mov push icebp xor loope adc push (bad) or lods push js xor rcr sub (bad) (bad) rex.RB sbb jge add jae mov (bad) out data16 cli test decl sub add mov cltd or (bad) adc push mov jnp rex.WRX jp cld push jp scas mov mov add js repz pop test or retq (bad) xor push shll hlt pop (bad) sbb test or rex.WB mov add std jns enterq data16 repz fprem1 leaveq enterq (bad) icebp mov test sbb xchg mov rcl jmpq mov outsl enterq (bad) shlb sahf mov (bad) rex.WR jnp (bad) jge sub jo (bad) mov callq mov callq (bad) gs adc mov mov mov movabs mov sbb outsb pop (bad) rex.R loopne pop clc movabs ja mov adc addl jmp (bad) sbb callq adc out rex.WR rex.WRB mov mulb jge rex.WR rex.WRX (bad) orl rex.RB test (bad) xchg (bad) sub jp mov sbb pushq movsb xchg test sti mov add rex.XB rex.WRB data16 mov fistpll shll (bad) callq (bad) rex.R notb sub (bad) jge jrcxz cmc out je jo mov rex.WRB or mov xor lret mov retq retq pop or fldt cmpsl jle add in (bad) test movabs rex.W pop mov rex.RXB repz pop cs movabs icebp imul lea adc leaveq xchg mov mov hlt mov jg (bad) jg (bad) mov pop xor rex.WRXB jrcxz mov jmp rorl mov fistpl xchg insl or adc push mov or sub (bad) not (bad) sub cmp rex.WRXB sub xor push sti (bad) (bad) lock (bad) loope enterq callq in or and push jp mov leaveq push jp (bad) outsl imul lret sbb nop jmpq sahf push or jnp (bad) and rex.B push mov lret rex.WB and or cmp rex.WB lock lea ja movsl push xchg xchg or clc stos xor xor mov (bad) in enterq (bad) add sbb cmpsl xchg mov (bad) cmp xor cmp out add (bad) cmp xor push outsl rex.WR enterq sub adc lea mov and cwtl rcrl ds (bad) sahf leaveq push (bad) xlat icebp insl outsl pushfq rex.RXB push (bad) (bad) pop repnz xor out (bad) mov mov pop outsl (bad) mov mov rolb (bad) fsubrl or movsb sub rex.R jl jnp sbb cmc movsb subb out xor cmp sub cmp cmp or sub out mov lret es cltd lock cltd xchg jmpq sub test xchg mov (bad) jl stc int3 (bad) adc rex.WRXB fidivr data16 rex.WB sarb mov mov icebp push or popfq push xchg (bad) rex.RB adc movabs xchg sub repz imul je mov rex.RXB icebp lea nop movb mov leaveq sub fiadd div fs rclb sbb or pop (bad) jns mov or (bad) frstor or lea adc jbe mov mov test cltd (bad) leaveq pop jle pushq cwtl mov (bad) js rex.RB fwait movabs xor mov mov out pushq clc pop cltd and push shrb jbe outsl cmp iret (bad) in xchg js movabs mov retq cs incl pushfq sbb jo or imulb lret or push callq insl and test jrcxz js xchg (bad) xchg mov (bad) and or data16 cmpl add mov sti sbb mov pop (bad) jno mov movabs ds cmp lret fcmovnu cmp lret mov scas add pop (bad) (bad) test fst mov sub add loop jbe mov mov rex.RXB push (bad) mov and icebp cld decb (bad) (bad) test (bad) pop rex.WRX movabs (bad) retq sti rex.RX icebp clc adc scas add lea mov rcrl mov (bad) jle in xchg xchg es movabs mov jno cmpsb mov push mov adc sub xchg sub (bad) add mov mov rcll pop addr32 (bad) mov and lret (bad) lods mov in xor outsl in rex.RB push stos orl (bad) cmc (bad) adc push mov sub notb scas (bad) pop cmp leaveq stc retq xchg repnz push int stc cs test sbb rex.WXB lods rex.WB (bad) sub clc cmpsl ja rclb or mov mov repnz jae cmpsb push and frstor fwait rex.RX jmpq cmp or sbb shll pushfq rex.WRX repnz jb cs hlt test (bad) mulb movabs push stc loope (bad) push mov std rex.RX rex.WRX retq in (bad) (bad) jns,pn jp rex.RX mov imul movabs rex.R mov mov add loope (bad) mov (bad) rex.WB rex.WR push cmpsb leaveq sub (bad) cmp push stos xor (bad) sahf xchg rex.B repnz mov mov lock roll movabs ror mov in or mov xchg push mov setl enterq cwtl pop and nop stc sbb cs outsb rorb cltd or int mov (bad) repz imul cmp shl es rex.B out sub sub rcr pop and xor sbb jb in movsb rex.WB andl mov mov pop hlt rorb in (bad) lret sbb cmpl mov gs adc and es push adc xor in jo clc pop jbe movabs pop loope stos push or (bad) cmp (bad) pop notl rcrl add rex.XB cli leaveq insl (bad) jmpq (bad) in loope sub xchg (bad) (bad) cltd cmpl pop xchg subb leaveq icebp icebp es add rex.RX fbstp xor xchg and rex.RXB (bad) cwtl insb int outsl repnz push pop mov add xchg cmp in test hlt movabs (bad) xchg push ficoml push jrcxz push mov add mov cmp insb (bad) out in (bad) sahf shlb pop cld test or incl rex.RX mov (bad) cs (bad) jns out xor callq rex.WRB fldl movabs retq (bad) int sub xlat sbb cld stos mov sub fwait repz and jmpq outsl (bad) mull xor add sub pop sahf loopne rex.W mov xchg imul loopne (bad) adc fldcw loop mov xor lea test sbb rex.B gs add jmpq rorb and pop lea adc test adc repz enterq fild rex.X mov test pop subl sub cmp pop data16 hlt cs addr32 add gs or adc or insl cmp (bad) stc mov xor or callq rex.RXB fsubr jb mov movl jb repz fs cmpsl jo cmp adc rcrb pop xor nop insl jnp pop test jnp addl sub or (bad) xor mov jo cmp sub and mov jge in (bad) idivl ja (bad) stc lretq es fcomi push sbb sub cmpsl rol add mov out jno cmpsl mov or cltd or rex.B rex.RX jns (bad) mov outsl test sahf fld callq repnz test add jne imul jae mov xor (bad) cmp cmpsb add int add cmc enterq rcll cs sub fxtract mov or leaveq retq rex.RX xchg mov movslq adc insb mov nop lret lret rex.W add jrcxz faddl fsts int3 xchg lea mov (bad) movsl mov sbb movabs lret movsb std fidiv mov in rolb lock (bad) not push (bad) sbb movabs callq mov lea jnp jno (bad) lret or (bad) push ss popfq idivb adc push mull imul xor out add jns,pn jo cmp movsl and mov jns push add mov jne jbe (bad) lock adc fimull xchg mov pop movb lret test sbb pop (bad) rex.RB cs rorb js and (bad) (bad) rex.WRXB mov rex.RB mov fs xchg or (bad) xchg jae test andb (bad) (bad) pop xor icebp stos pop fdivs (bad) or stos sti decb fcoms rex.WB mov pushq mov test cmpsb (bad) int fisttpll mov jmp add sub mov andl test rex.RB sahf xchg cld retq add test adc jns rep sub xchg and out stos repnz rex.WRXB (bad) lock (bad) repz in sbb divl (bad) push push movabs stos cmp leaveq jmpq mov test jno imul rex.XB (bad) fisttp cmpsl movsb loope lods hlt testl rclb rex.WX or xor add icebp xchg xor cli ficompl (bad) cmp push pop loope xor scas movsl cmpsl push mov xchg mov cs lea int3 pop int3 cs (bad) rex.WB sub xchg xchg pushq mov enterq retq jp or rex.WB addl scas rex.RXB int3 nop jle int cltd loop out (bad) xchg and xor sub lret rex.WRXB lock xor rex.RXB nop cmpsb cld mov jno int mov nop jae or cmp push int3 mov movabs jbe add test mov lret sbb (bad) add out mov sub (bad) sahf (bad) rex.X (bad) jno mov movsl or (bad) js cmp adcl sarl (bad) mov (bad) cs xor jrcxz mov retq in rex.WB addr32 adc jrcxz pop sahf sbbl fisttp sub clc add lret lret xchg popfq testl or iret jno sahf sahf and mov js xor or lret and andl cwtl int3 sub cmp je mov scas fisubrl (bad) xor xchg (bad) mov jge in rex.WRB rex.RXB repnz fstl xlat xchg adc and addr32 xor fwait loopne in ss repz retq jo sub jmpq decb sbb xchg jle or mov rolb push add movsl cld mov in sbb (bad) rex.WR lret insl (bad) lock (bad) in scas hlt and outsl xchg jb test fs out pop loop mov retq push negb and push pop and xchg sti cs rex.WRX lock rex.XB add mov (bad) sbb pop mov mov repz mov test clc repz sub insb mov vaddsd loope sbb jno or and (bad) xlat rcrl jl fsubrp xlat push pushq pushfq jle notl cmp movaps cmpsb and test (bad) pushq (bad) out in sub xlat cltd or roll sbb imul movabs icebp cwtl (bad) fisubrl (bad) jbe test adc test xchg push data16 test loope (bad) rex.XB (bad) fisttpll mov rex.X (bad) xor rclb and sub retq lea sbb add lret test (bad) (bad) jp retq mov fucomip mov sub mulb pop sarb adc movsb in and pushq add xor xchg rolb gs (bad) sub adc loope test jge adc pop or cmc adcl test mov mov mov rex.W mov mov repz test xor callq rex.XB fadds cmp and out in xchg pop mov lods insb (bad) jns repnz (bad) fnstenv xchg mov mov pop test callq (bad) sub sti add mov movabs pushq (bad) testl jl (bad) movsb rex.W int icebp mov lret cs xchg test rex.WX out out sbb jnp add lock mov (bad) mov jnp cs lret (bad) jae mov lret xlat adc je lods enterq mov movabs mov jmp (bad) in movabs lods (bad) rex.RB rex.W movabs cltd jne rex.WRX stc rex.RXB (bad) hlt add sbb jl loope mov pop xor test sub (bad) (bad) (bad) jne mov xchg jns xchg rex.WB sahf int3 or rex.XB rex.RX fcompl roll (bad) sbb mov sti hlt rex.RX jmpq add stc or sbb adc mov add sbb xchg push imul push insb cmc dec in test pushfq (bad) cmc push (bad) cltq stc outsl fs je movsl cmp sti mov xchg or mov in and iret movslq rcr insl out out push stos cmc icebp (bad) or in xor hlt adc testl rex.WXB rex.X jbe rex.RX sbb mov sbb (bad) fs rex.WR iret rex es jge mov push rorl out pushfq (bad) out cs fucom mov jo (bad) (bad) sub cmc scas or pop push adc or sbb pop stc add int3 cmp pushq add mov pop in cli (bad) add (bad) (bad) out mov mov rex.WXB and rex.XB sub int3 jmpq in stos add test lret rex.WR rex.RXB add rex.B fdivp lahf mov push callq (bad) adc xchg push shll sub out or adc sub jmp xlat out jrcxz push inc incl fnsave sub hlt cwtl rex.XB gs xchg adc fldt (bad) mov (bad) xchg xchg cmp rex.WB rex.RXB (bad) stc and push xor (bad) rex.WR lret (bad) (bad) pushq leaveq push or movabs add push adcl je movabs xchg in clc jp hlt (bad) imul jg pushq lods sbb repz es add adc fwait stc lret stc int cmp mov int3 push lock movsb mov (bad) jp or and imul mov sahf mov lock scas and xor sub (bad) sbb movabs xchg jb sub leaveq mov clc pop test (bad) cwtl pop in mov xchg hlt sub mov in (bad) jbe fadds roll fidivl leaveq cs add (bad) adcl sub rex gs gs mov clc repz sub mov stc sar iret orl mov loope mull mov cmc or imul rex.WB lods (bad) cli roll test jno rex.WR sarb je rol xchg sbb add test xchg fpatan xor jae xchg lock rex.WRX rex.RX loopne adcl jle (bad) pushfq lret cs xchg mov jbe jg cmc rex.X loop lret adc leaveq pop rex.RXB cmp (bad) loope sahf (bad) pop lods enterq sub (bad) je xchg rclb mov icebp sub cli sbb sub icebp cmp jae outsl mov xchg cld or js add vmovdqa movabs rex.WRX mov mov pop push movabs mov (bad) sub cmp cmp pop jb (bad) mov loope je addl mov outsl sub movslq movabs mov stc cmc rex.WRXB imul out (bad) lea jb callq rex.WR xorb movabs test sbb sbb or cmc repz cmp retq lods push cmp movslq lahf enterq popfq or rex.W rex.WRB cmp mov push loop gs incl xor lret adc out xor pushfq sbb fwait xor out xchg (bad) mov movabs sbb in jne jle fcoml lea (bad) cmpsb xchg mov fcomps fcmove pushfq stc repnz and sahf (bad) jge push jno cwtl cmp and rex.WXB add cld rex.WR jo (bad) test add mov push rex.WRX enterq out sbb std rex.B cltd sub (bad) test or int3 mov or insb pop and add jo xor lods rex.WRX lea rcr sub mov add mov insb or cmpsb jmp test mov sbb push and loop scas sub add rolb mov icebp negb (bad) repnz cwtl adc cs rex.RXB stos cmp loope pop mov sahf fsubrp pop rex.XB jl ds enterq sub (bad) rex.RX retq jns sub leaveq or rex.X testb fndisi(8087 adc sbb mov test xchg sub xchg mov test rex.WB jne rex.WR jge int3 mov rex.X notq retq pop (bad) popq (bad) adc (bad) sbb xchg rex.WRB enterq jrcxz sub (bad) in mov xchg (bad) fistpll int3 add lock rcl sub icebp fbld popfq leaveq and (bad) movsb test (bad) mov sbb callq jnp rclb (bad) push add rex.WX rex.R sahf pushfq loope data16 jrcxz (bad) add int rex.RXB pushq or mov or (bad) push (bad) in sub add loopne hlt rex.W mov adc lods push rclb movabs mov sti xchg repz repz jrcxz or popfq movabs loope mov rex.WXB add or in pop add mov repnz movslq add rex.B add test jrcxz add movabs rex.WR std jmpq lret push (bad) in cmp retq mov sub (bad) stc gs int cmp pop movabs (bad) (bad) callq (bad) in callq pop rolb xchg not xchg mov sub pushfq out hlt sub callq pushq xchg rex.WRXB test push jl movabs xchg and lret add (bad) jrcxz hlt fstpl adcl out retq adc pushfq rolb lea rex.WB gs xchg sti int3 movaps cmp rcrl loopne (bad) jno jo rex.B (bad) lret xchg ror and sub mov stos (bad) je xchg xlat callq outsb rex.RXB repz lret rex (bad) mov (bad) in adc xchg ja in popfq in xchg or cs and rex.WR rex.B xchg rex.RB or rex jb repz out in rex.WXB hlt in retq retq movl (bad) mov rorl mov (bad) leaveq mov rex.RX int3 jno imul (bad) jmpq mov and cmp test out xchg rex.XB jle repz mov test cmc in leaveq (bad) enterq or mov out repz jno jrcxz loope push es rex.RX lods (bad) flds stc enterq sub mov rex.WB rex.WR out (bad) pushq out rex.RXB movslq fisttpl movsl and jg lods (bad) mul (bad) jbe push mov cwtl rex.X mov push cmc (bad) jmpq test movabs (bad) gs mov stos sbb scas orl add (bad) pop (bad) cmp orb sbb (bad) and test imul sub (bad) int3 mov add cs xchg (bad) (bad) int lods mov mov test rex.WR sbb cmpl add notb (bad) ficom mov movsb fcomip (bad) pop fcmove imull lea leaveq cltd movslq add fisub xor retq test (bad) (bad) rex.XB jmpq sub int lods (bad) rex.RX sub or rorl loope (bad) (bad) add lods callq (bad) insl test rex.WB (bad) pop (bad) sbb lret outsl loope push sahf movups (bad) (bad) jns test cmp movsl add xchg fwait (bad) sub popfq adc hlt pop fscale rcll jae mov (bad) push jrcxz ja insl rex.RXB mov sub pop (bad) jnp add hlt cld mov cwtl insb (bad) pop add stos (bad) or in stc and push cmc rex.RX in and pop (bad) imul rex.WRB out mov (bad) out or push test xchg push (bad) enterq xor test sbb mov or retq (bad) repz jne xchg repnz push mov lock sub leaveq rex.RX loop callq jno stc repz mov (bad) flds or in gs cltd cmp sub cld test cmpsl std (bad) jae sub mov (bad) cmp (bad) or xorl rex.RXB (bad) shll int xchg sbb stc (bad) rex.RX pop (bad) mov out rex.W lret cmpsb (bad) cmp repnz rex.RB rex.R pop push test cmpsb cmp rex.XB cli mov icebp hlt in or test rex.B retq lret mov test (bad) mov add (bad) mov rex.RB ds leaveq (bad) cmp cmp adc rex.RX mov lret push stos sub ja shrb cmpsl movabs out push mov cmp or (bad) (bad) enterq movsb and loope (bad) int lret (bad) lock (bad) xchg rex.RX movabs cli (bad) adc imul in test jnp stc add xor mov out push adc mov rex.WRX movabs mov roll vmaxsd (bad) negb rex.WRB mov mov adc retq xor fwait push not jle rex.RX in and rcrb xor repnz (bad) nop fadd ss rex.WRXB xchg int3 and hlt xchg mov in enterq sub fucomp sub negb movslq imul (bad) out mov rex.WXB leaveq in sub clc adc xchg rorb test or (bad) test sahf xor jmp add (bad) fldlg2 rex.RX repz movabs mov rex.WRX sub mov fwait rex.WRXB add cmp or leaveq sbb cs or and xchg test leaveq fwait rex.R repnz icebp out jb rex.RXB (bad) lret xchg rex.WXB rex.WRX lret sbb lea xor lret cmp pop sti int3 mov callq jns sbb jbe mov sbb mov jp stos jno (bad) (bad) enterq xchg xchg xchg ror xchg movslq lock (bad) in mov enterq lret or fwait jl clc push pop mov nop test mov cmpsb movsb popfq loope xchg addr32 add out cltd loope mov (bad) (bad) rex.WX fdivrl jbe push loope sbb cmp xchg push xor shr fst cmc cmp int3 add outsl out fidivl jrcxz xor mov xor mov rex.WRX je mov outsb enterq (bad) (bad) adc adc in adcl and push (bad) lea pushq mov rex.RX pop pushfq jrcxz lret push hlt sahf cmp callq callq nop movslq hlt movabs cltd cmp xchg mov xchg int3 icebp push adcl int3 test fxch pop cmp jne jno pop jp adc int3 test lret xchg mov test hlt sub shl push mov sub add (bad) lret mov fdiv cmp movabs divl mov cmpsb mov xchg ffreep retq mov mov (bad) (bad) (bad) jle rex.X mov and callq jmp iret fcoms (bad) xchg or sub paddusb mov rex.WR fstpt push mov adc pop fsubs xchg mov jrcxz jo or in (bad) icebp mov push pop (bad) push xor xor xchg pushq lret add cmp leaveq rex.WR cmpl cmp jb fcoms out (bad) (bad) or add movsl rex.WRX pop test int notl notl scas xchg (bad) xor sarl insl rex.WRB (bad) cli jmpq jp es or movabs pop mov (bad) mov (bad) out cs jle std pop add xchg push rex.WRX sbb and rex.W (bad) mov add rex.WRX testl lret (bad) (bad) jl fldenv testb lea test andb mov pushq movabs pop in test movslq in leaveq cld (bad) loope mov jmpq xor rclb mov mov (bad) cmc mov mov jo mov cmp loope mov rex.WR std and (bad) sub or push mov add rex.RXB icebp xor rex.RB cmpl and xor cltd scas or rex.RB xchg scas push and (bad) cltd addr32 out movabs rex.WB sahf sar imul outsb iret addl (bad) xlat retq xchg (bad) (bad) sti or sub callq roll callq xlat sahf rorl rex.RX leaveq repz pop callq jne cli nop adc jb enterq jg or sub lret in jle xchg fisubr rex.XB or push loope test (bad) movsb sbbl xchg xchg pushfq (bad) and fstl insb lods cmc lock js hlt incb test jl (bad) orl retq (bad) sub retq rex.RB loopne xor xchg add mov popfq in icebp mov movsb fwait rex es jb rex.W or or imul mov mov int3 rex.WRX hlt pop cli test xor (bad) or rex.XB sbb movb sar pop loopne (bad) xor sbb test mov pop jmpq mov and xchg adc cltd pop xchg out mov outsl jrcxz cli rex.RX (bad) pop lods mov sahf rex.WRX enterq (bad) movabs xchg (bad) retq fs sbb sar rex.XB rex shrl cmp jrcxz,pt popfq and sbb (bad) movabs add test jrcxz (bad) test jo test imul sub data16 sub jb jb jmpq (bad) xchg rex.XB sub cmpsb int3 jmpq popfq mov rex.X cltd mov jb jmpq in imul stc mov rex.WB xchg in cltd xchg jns (bad) adc cmc or xlat je imul out icebp sbb add or insl rex.WRB (bad) icebp cmp add add leaveq push rex.WRB movsl cltd jrcxz xchg rex.WB test stc loope xchg pop xchg in hlt icebp rex.WB test movabs jb jae in insb (bad) and mov test push rex.WB rex.WR callq xchg cld mov callq test pop rex.WRB (bad) stc mov mov mov hlt loope mov mov orl add in movabs pmulhw movabs (bad) rex.WRXB (bad) insb lret flds callq rex leaveq movabs movsb sbb xor add leaveq (bad) (bad) or xor xchg push sub mov (bad) mov int in gs or rex.WR (bad) (bad) loopne xchg in jno or stos (bad) pop mov adc mov fwait vaddsd (bad) test xlat (bad) pop mov loope int rex.WX rex.WRX cs (bad) xor sub jno retq insl out rex.WRX cld fwait mov test adc (bad) cli xor xlat movabs movsb xor (bad) adc imul (bad) cmpsb (bad) (bad) lret hlt repnz test jne (bad) (bad) or sub nop rorl cwtl cwtl pushfq rex.RB sub rex.WXB enterq adc fucom lock test loopne and mov jge push sub sub jo mov or out (bad) (bad) (bad) pop popfq pop jnp push cmp sub rex.WB insl movabs (bad) sbb test (bad) ja out (bad) clc sbb rex.RX lret sbb or pop jne sbb adc (bad) cmp mov fmull retq lea (bad) or or sub in rolb (bad) cwtl fimull mov test leaveq sahf or test lahf mov fldenv cli data16 or or rex.RX stc rcrl js std addb mov mov loop rex.WRXB pop pop adc inc push movabs xchg cmpsb xor or rex.WX in int3 test hlt lods imul sbb and sbb imul adc popfq loope in js (bad) rex.WRX and (bad) sub or or rex es (bad) (bad) sub (bad) lock or out xchg (bad) mov data16 pushfq (bad) (bad) test mov and push js mov sbb repz (bad) sub outsb rclq fisttpl jge cltd je mov xlat xchg sub hlt test sahf sbbl popfq rex.WX (bad) enterq (bad) fadds cmpsb cmp xchg gs addl cs or neg cmc cmp (bad) fs repz and rex.R callq mov mov int fsub push rex.X mov cmpb callq (bad) test rclb add (bad) cmp sub sbb push fdivrl rex.WRX movsb (bad) sbb xor sub test movslq or jno movb xchg push nop lret (bad) imul or movabs in not sub (bad) cs add xchg jae (bad) mov jmpq mov out std lods rex.WRXB rex.WRB adc fldenv cs sub mov popq int3 movsb add enterq jo gs sub or mov cmc push enterq xchg or movsb pop sbb in in loop rcrb push (bad) sub pop rex.RX sbb cld xlat jmpq lret test cmp (bad) test popfq or lods and (bad) fdiv or mov movsl add cltd test out xchg idiv (bad) imul rex.WRXB movabs rex.RXB fs rex.WRB rex.WXB cs mov jno or adc fidivr pop clc gs or rex.RXB addr32 movsl or cmp sbb enterq jl and cmp hlt (bad) leaveq rex.WR (bad) xor cmp in in push lret sbb pushq outsl add fisubr rex.B mov mov pop rex.WRB jrcxz (bad) out imull lea imul jge (bad) pushfq add xor (bad) rolb retq iret mov ficoml (bad) jp and push xchg xchg (bad) mov push div callq (bad) (bad) in sub in sub sbb jno enterq jl roll lret sub add lahf je subb sbb sub loop mov enterq test mov jl fwait or mov cs pop (bad) cmp (bad) rex.WRXB add es lahf cmpsb mov mov adc mov test (bad) repnz fwait (bad) (bad) jae imul rex.WRB adc (bad) test push cwtl mov jb imul cltd imul cs jo outsl mov (bad) cs sub adc stc jmpq (bad) incl jb xor popfq pushq test or insl fistpl (bad) ss jno callq jo mov sahf pop loope fadd pop ror cmc (bad) pop test movsl icebp sbb (bad) out or retq stos or xchg rex scas jg mov vrcpps callq sub mov and stc (bad) mov enterq enterq cs in jno mov movabs lcall insb lret mov test fisttp rex.RB fwait (bad) mov xor jge (bad) cmp mov xchg and pop xor lea and jrcxz (bad) fs cwtl mov cltd rex.WX not jno (bad) add callq add mov (bad) (bad) cmp mov pushq movabs xchg (bad) sub mov callq pop and jno add lahf xor callq imul rex.WRB (bad) adc in jl rex.WRX rex.XB enterq add scas xlat mov enterq xchg leaveq repz shrl sub fs pop ja xor sbb mov sub int3 addr32 (bad) jnp add rex.WRXB rex.WR mov mov (bad) test cs push je mov or lock rex.WR (bad) jbe jge rex.WRXB sbb jrcxz mov jp or hlt loope in out mov (bad) and xlat cmp mov xor sub scas lret cwtl in cld sbb mov insb rex.WRXB cmpsl rex.WR (bad) (bad) test adc mov test test rex.RX mov shll scas retq rex.WXB repnz cltd add adc mov scas (bad) int3 pop lret xor (bad) jno (bad) xor in rex.WR mov enterw adc shll out cmp adc push mov cs enterq pushfq mov cltd leaveq bnd sub leaveq nop gs fmul adc sar jp mov cwtl mov test lea mov icebp movsl xor es subl jg rex.WXB or retq addr32 add cmc cmp test mov fcompl cli mov cmp and (bad) sbb push pop or rex.WXB mov out or (bad) sub pop iret (bad) (bad) rex.WX rex.RX repnz nop or imull (bad) shlb xorl scas std loopne or jmp sub sbb push callq (bad) push ss (bad) gs or mov loope rex.W add mov or add dec add cmp add mov lret sub adc xchg subl (bad) sub (bad) movsb rex.X clc cwtl pushfq leaveq (bad) xlat std adc mov orl jmpq mov movsl rex.WRXB (bad) pop rex.RX retq retq out rex.XB test movabs outsl mov fild lret cmc rex.WR es movabs in xor or jbe clc or jnp (bad) adc xchg push lods (bad) cwtl cmc xchg pop pop (bad) imulb enterq (bad) jne ss lea mov jl iret (bad) movsl sbb fsubp repz insl hlt jbe enterq sub adc stos jge rex.W sub rcll mov jb pushq mov cmc movabs cs rex cmp ja icebp fs or lea (bad) rex.WB repnz in pop in sub mov fldl mov test mov adc mov xchg int3 push out push sub (bad) popfq lret pop (bad) negq cwtl stos movslq push ffree (bad) (bad) rex.R mov push xor es (bad) vmwrite test add test outsl mov mov (bad) xor mov sbb (bad) movsb repnz test sbb jne fs (bad) sub addr32 rex.X rex.RXB (bad) (bad) xor in test mov xchg out rex and imul (bad) mov sub fcomip or jo and pushq jl clc mov xchg adc loopne or xor sbb push movabs bswap xor clc add in cmpsl repnz rex.R pushq lea rex.R out or mov sbb test add (bad) (bad) jne adc shl fwait retq (bad) jne xor andb fdivl cmpsb (bad) roll rex.W bswap rex.X mov repz sti iret jl (bad) shr sahf xlat rex.X and leaveq sub andl loop jb cmp sbb test jne loop in icebp (bad) push adc test xor mov jb sub mov mov xchg sti imul (bad) rex.WRB (bad) (bad) (bad) cmc push subl out movabs shrb mov out imul rex.WRB (bad) cmc sbb mov icebp rex.R (bad) jge pop rex.XB sub pushfq (bad) (bad) cmc ja jbe or fs (bad) test icebp jmpq sub imul mov test xor clc jae adc pop (bad) rex.RB movabs hlt jbe (bad) cwtl cli roll imul enterq sub cmp in sub xchg mov shlb and rex.RX cs mov fst pop stos loope retq (bad) loopne ss insb ficomp mov nop pushq pop shrb mov jnp cs cmp (bad) sahf sarb sbb or callq pop (bad) mov leaveq and mov int3 int3 stc (bad) fcoms cltd gs cltd pushq rex.WRX nop movabs mov lea insl rex.WR or insb mov retq pop in mov or rex.WR add (bad) hlt (bad) sti add pop xchg jno jp rex.WB rex.WR adc lock sbb rex.RX mov imul rex.WRXB out add (bad) sub (bad) movabs fcmovnb rex.RXB rclb lock (bad) or sub rex.WRXB rex.WXB sbb insb jno outsb movabs xchg cwtl mov or loopne add pop (bad) push popfq scas jrcxz sub movslq mov lods js int pop mov xorl imul imul add (bad) out or iret sub sub icebp sub sbb sub clc and xor int cmc movabs pushq icebp mov out out int cmp sbb clc jne rex.WRX push (bad) jrcxz jne or out lods push icebp rex.RX or fisubrl push std movabs movl rex.WXB icebp rex.WB mov rex.RX and (bad) xor fidiv callq rex.WRX adc test mov stc (bad) rex.WB sbb rex.RXB mov xchg out (bad) cs fcomi sbb jnp xor loope stc sub or pop adc (bad) xor jae jo push cmp leaveq shrb cmp fiadd mov out or outsb leaveq mov rex.RB cmp roll retq js pop rex.XB mov sub cmc sub fldl ds in loop cmpsb icebp in add (bad) adc sub (bad) xor cmp push pop mov push sbb repnz mov outsl icebp xor js vdivss (bad) pushfq jge (bad) pop (bad) push enterq mov retq jrcxz and rex.WB xor lret leaveq fimul (bad) js sbb fisttpl and sahf rex.RB rex.X (bad) cmpsl imul out rex.X pop add rex.WR xchg mov rex.WRX outsl jae retq out (bad) rex.W sub sub mov mov gs (bad) xlat lods add lret rex.WRB (bad) repz ficom cli rol imulb mov xchg pop pushfq mov or movabs (bad) mov and rex.WRX in or sbbl callq imul (bad) movabs movsl retq xor jg fidivrl sub movsb scas rex (bad) in neg (bad) xchg rex.WRXB push xor shlb scas outsl xorl and icebp rex.W sti decb rex.XB gs (bad) pop out and jo js (bad) callq pushq (bad) lret mov jns mov movabs clc push jrcxz hlt xchg xchg cmp jb stc sub out iret sbb cmpsl pushq adc rex.XB rex.R rex.WRB rex.RXB rex.WX add mov sti cltd test xor sbb cs xor rex.RB rex.RX jle in movsl loope mov xor out ss mov mov mov mov fbstp ja (bad) callq xchg xor fnsave (bad) or sub insb push stos movslq icebp mov mov jmp adc (bad) callq add and stc mov push mov rex.XB lock lock cltd adc and std adc movb xchg loopne pop callq mov outsl hlt cli lret in outsl test stos and jae mov jrcxz mov cmp (bad) sub adcl rex.XB push clc pushfq enterq push mov xchg fs jle rex.WRB rex.RXB and repz sub mov jns sub pop mov int3 mov and cmp pop cmp rex.R rex.RB adc js shll imul jbe sbb movabs sbb mov pushq leaveq retq lea leaveq add repnz loop cmc sub imul sahf (bad) decl int jns push lret jmp mov add xor push mov sbb jmpq and or (bad) push icebp add (bad) mov out adc sub addr32 nop out add xor cmc (bad) mov fild loop xor (bad) lahf jnp movsb sub jg sub mov (bad) cs sbb xchg mov mov jp leaveq sbbb jl lods rolb sub rex.W xchg mov int3 add icebp mov movabs add int3 jbe ds mov or jbe ror xor and mov test pop movb sbb cmp cmc loope (bad) cmp and mov mov movslq repz outsb rex.WRB lea cltd mov adc cmp leaveq sbb icebp jge (bad) (bad) ds add sub repnz cmp rex rex.W add test retq enterq test (bad) or in add mov jrcxz (bad) (bad) shrl jmpq repnz rex.RXB mov (bad) rex.WRX iret mov in mov jo jl sbbb lahf sub sub pushq xchg fcmovbe mov or (bad) and sub rex.WRX add cltd rex.WRX and ja hlt lock rclb mov sub rex.W cmp (bad) in hlt out in cmc (bad) iret sbb movabs jo nop jns shrl outsl repz movabs popfq in (bad) sbb pop jmpq xor pop jge mov xor (bad) pop in pushq cmp in popfq pop mov imul jrcxz sbb (bad) movabs int rolb (bad) xor add std lret cmpb adc cmp in (bad) or mov jno hlt jne loope test jns icebp add and xor (bad) sbb sub or (bad) sbbb rex.WRX (bad) add insl lret leaveq lock add add sub sub mov sub cmp (bad) xor cld mov mov xor fcmovnbe test cltd imul jno rex.RX xor or pop in (bad) fstpl loopne cmp or ja sub push icebp (bad) int3 sub rex.X (bad) in push rex.R sbb adcl outsl mov adcl rex.WXB int xchg clc lret (bad) mov lahf iret (bad) sbb jbe xchg stc test and jmpq fwait and xchg movabs sub leaveq ffreep jne (bad) mov movabs (bad) mov add fldt (bad) (bad) js and pop rex.WXB rex.W xchg (bad) rex.WR and (bad) (bad) jp mov (bad) cmpsl movslq or rex.WRB (bad) (bad) (bad) cld (bad) mov (bad) hlt lods (bad) mov test and xchg xlat retq push pop sub mov sahf loope add (bad) jp (bad) lods lea cmpl imulb fs xlat test (bad) (bad) adc (bad) mov mov jp cmp cmc pop movsl xchg mov adc xchg mov (bad) (bad) clc test add xor rex.RX (bad) roll rex.XB jb,pn xor fidivl (bad) lret sbb mov (bad) idivb gs ffreep (bad) popfq retq pop (bad) (bad) movabs pop icebp (bad) mov sub pop or pushfq rex.R (bad) (bad) pushq repnz pop and and rex.WR rex.WR cs int3 nopl stos add mov mov callq jno push retq sbb push (bad) sbb jns sub add pushfq mov add adc (bad) stc rex.WRX adc (bad) rex.WXB movabs orl scas jl sub stos lret xlat sub (bad) repz lods (bad) push test out cwtl cwtl sbb test pushfq mov and callq fsubrp cs insl mov retq in sti gs repnz pop and cmc sub mov scas clc insl pushq mov frstor in (bad) cltd xchg push push lods je movabs cmp stc js mov sbb pop sub adc pop outsl test (bad) cld sub jg mov (bad) sub jl popfq (bad) rclb jg and rex.WXB and imulb adc cwtl (bad) retq lahf cmp (bad) rex.W rol xchg retq pop adc mov retq or mov popfq fnstcw xchg push pop lret or push cmp xor add and sbbb outsb fidivrl out mul (bad) icebp int (bad) fcompl jrcxz jp int mov (bad) (bad) and cmpsl sbb add loop or push mov jae retq mov rex.WRX and rex.RX retq (bad) rex.XB rex.X in in add addr32 pop (bad) rex.WRX cs (bad) pop jne stos cmp push (bad) orb or data16 jb repz out push lea xor push repz sub pop jle fisttpll sbb (bad) lock cmc cmp jl repz add rex.WB rex.WXB (bad) jrcxz push loope (bad) rex.WXB rex.WX mov mov sub add push rex.WR in sub push sub out jmpq lret (bad) out setb or shrl retq je iret rex.RB cli in negl leaveq cmpsb push cli jae repnz (bad) lods mov int pop xchg fiaddl int hlt pushq mov in stos pushq and jmpq imul mov jnp incb push xorl rex.RB xchg shrb xchg scas sbb lock add rex.W sbb adc mov movabs jnp jno divl pushfq fistpl mov movabs mov add and xchg retq rex.WR fwait enterq sub (bad) (bad) mov movabs add (bad) cs xor jrcxz rex.RB leaveq stc mov sbb mov (bad) (bad) fstpl adc mov sub jnp xor and jmp jl rex.WRX add movl sub ja add jrcxz rex.WRX (bad) in enterq jp sahf (bad) sahf cmpsb fdiv retq cmp (bad) jl or cmp rex.WRB rex.WB hlt sahf movabs add jo or callq mov rex.WRXB cmp callq clc and fsub jae add cmp retq jno sahf cmpsl out out (bad) xchg (bad) lock enterq loope loope retq add add test clc loopne gs sahf insb (bad) adc (bad) insl push xchg mov cmc xor fucom imul shr sbb add in push mov xlat xchg movslq int3 cmp mov sbb xchg sahf (bad) add mov adc (bad) cmp ja cmp (bad) popfq popq jo in pop in (bad) retq xchg add movsb (bad) outsl (bad) or (bad) insb stc retq mov lret push clc repnz lret test leaveq lret fadds xor (bad) (bad) leaveq (bad) mov adc sbb addr32 cmp icebp or ja rex.WR rex.RB jge mov test xchg mov pushq stos pop xor movsb jmp sub imul or iret shll jle mov mov cmpsb xchg adc push mov (bad) (bad) test push jrcxz leaveq cmp rex.R mov sub rex.B rex.R sbb sub test leaveq addr32 (bad) movslq mov sbb xchg pop test loop int test lret clts rex.WRX es cld stc rex.R addr32 es jae mov jb jle jnp pop jnp cmc in mov (bad) pop ficomp repnz add mov sahf push mull pop rcll movabs pop mov mov xchg lods sub sub sbb or (bad) pop std cs cld movslq (bad) rex.WXB adcb xor adc cli jno rex.WXB mov sub and addl (bad) xchg addr32 push shlb test lahf mov jrcxz frstor push (bad) test mov cltd in xchg std scas (bad) jne sub mov cltd mov movb jne (bad) enterq (bad) fs test sub imul test mov pop mov repnz rex.WRXB cmc or jle jbe xor decb and cmc sub (bad) fldenv loope mov pushq popfq movabs adc cmp add rex.WRB xor movsb rex.R je mov mov callq hlt fs popfq test (bad) jp and add icebp pop notb add out add lods add (bad) mov gs retq (bad) mov or ror hlt xchg test adc rcll sbbl pop icebp retq mov jne leaveq rex.WB (bad) mov fdivrs leaveq sub test jle icebp shrl mov adc imul xlat ds fisttp leaveq out rex.B sbb addr32 mov xor push rex.WRB sarl jnp mov xor mov std cmp enterq js xchg loope jl add xor (bad) sbb sbb pushq rex.W shr add xor retq lret xchg repz (bad) mov fisubrl xchg (bad) mov leaveq pop rex.WRXB fdivrs (bad) add retq movabs (bad) leaveq (bad) rex.WRXB rex.WRB out je or pushfq gs rol sub fldl mov jae and rex.WB jmp push sbb or (bad) jl fisttp out rex.WRXB add push sbb popfq mov adc test cmpsb sarl and rol mov jl add xchg jo push out and imul (bad) jrcxz push add add shll jrcxz pop (bad) mov clc rex.R pop in cmpsl out pop pop sub rcrl cmc andl push in lods push out (bad) (bad) hlt mov rex.R push (bad) (bad) jg sbb clc cmp rcll cmpsl xlat rex.WRB jge loope add rcl sub (bad) roll pop outsl rorl fisttp sub (bad) movabs out imul lahf pop lcall add pop (bad) mov (bad) jo adc and and push iret notb xorl es jle rex.RX fisub jmpq or sbbl mov faddp fldenv pop pushq iret pop bnd imul (bad) rex.WRB movsb (bad) shrl mov sub or (bad) adc xor rcrl (bad) int push rol lock fbstp es enterq int3 incl icebp or xor insl fwait push imul (bad) movabs movaps cmp pushfq (bad) scas (bad) (bad) rclw pop fwait sar lock pop mov js cmp pop fs in sub incb cmp xor lea rcrl leaveq and adc mov pop cltd retq clc pushq mov test cli int3 fwait loopne sti mov hlt test and jg mov xchg sbb mov or loopne (bad) rcrl gs sbb or rcll xchg pop int3 lret mov xchg iret repnz hlt repz sar cli stc cld sti (bad) std roll loop in out shr (bad) jmpq (bad) lock xchg xchg xchg xchg xchg xchg rcrl sahf popfq (bad) (bad) addl mov mov mov mov (bad) cld sarl sarl movsl test cmpsl stos test mov scas push push push push push movabs pop (bad) pop rex.X pop scas push lods mov loope sub push sub stc mov lea neg mov (bad) imul xchg xchg test lods lods cmpsb ds insl push stc test rex xchg push (bad) push rcrb push (bad) lods jg or loopne rex.B cmpsl movabs movslq test push lods shr lret pop mov (bad) rex.XB in mov (bad) (bad) push sbb cwtl mov sub (bad) rex.WR cli imul out xor jge cmc lock rex.WX es jmpq lea data16 or insl sub and pop push cmpb and test out loope sti movsb rex.RX pop or mov xchg jmpq and movabs insl xor fmuls (bad) xor sbb (bad) retq push cmpsl sbb and jne leaveq rep cmc shr jmpq in (bad) mov and movsb js pop gs mov add jns out jns xchg jae xchg xchg pushq lret int3 (bad) test (bad) sbb xchg push rex.WR xchg fcomi fisttpll jl movslq sbb imul test xor xchg cltd rex.RB rex.XB leaveq outsb rex.WX imul (bad) stos pop sub sti xor mov pop retq notb decl test jmpq movabs lret repz movabs (bad) shll in rex.WRX rex.WXB xchg xchg cltd cmp iret rex.RXB sti pushq (bad) (bad) mov rex.RX movsb jl cmc scas xchg and rcrb (bad) xor (bad) adc ja shlb (bad) sub sub out rex.R xor movsl lret cmc fs (bad) (bad) mov imul xor sub (bad) fcomps lock test out cmpsl sub in (bad) ja adc (bad) (bad) mov xchg nop push add xchg cmpsl movabs stc mov jmpq push retq xchg popfq push mov scas jle xchg mov movslq lahf xchg xchg in (bad) xchg mov fwait loope add hlt (bad) mov pop int3 ss repz sti xchg pop stos pop mov pop vmaxps (bad) icebp roll ss cltd loope push lret mov retq or test pop xorl (bad) jb push in and je (bad) je mov jbe (bad) (bad) fnstsw mov leaveq icebp xlat addl jrcxz pushq xchg retq (bad) (bad) movabs movslq jne rex.W rcll rex.WB movabs retq fdiv cmc pushfq iret sar mov (bad) and xchg in retq retq xlat xor repz mov roll rex.RX rex.RB rolq rex.WR rex.WXB rex.WRX rex.WRB rorl je jbe js ja jns jnp jge sarl movslq pushq insb imul shrl adc (bad) adc sbb (bad) sbb add (bad) add or (bad) or xor ss cmp ds and es sub cs rcl rcl (bad) fadd xlat fcmovu (bad) (bad) scas rex.W roll out test imul jo rex.X loope jmp sub mov push movabs cs pop mov stc jno xchg push shlb or test repz push mov push icebp and repnz ja cld lret stos (bad) push sub outsb mov icebp scas test test lods lods xchg movsb shll xchg popfq xchg mov (bad) scas mov (bad) rex.XB leaveq movabs pop movslq xchg and movsl xor lret cmp mov or push iret sub movslq hlt in mov iret enterq mov mov xchg leaveq (bad) rex.XB adcl mov sbb or mov (bad) and stc in push (bad) enterq rcll test rex.W cltd lea add mov adc sbb repz divb stos (bad) cmpl jno mov xchg xchg out test xchg pop lods cmp pop mov (bad) and loope cmp lods rex.WRB movabs out loope (bad) pushq callq pop push jb in mov (bad) shr jno mov test nop movsl (bad) movabs mov and jrcxz movabs sbb subb callq add movabs movsb cli mov jae data16 xor outsb jmp jo fs jmpq jrcxz movabs pushw pop fimull iret mov (bad) callq scas cs xchg push jp iret jno loope callq test movslq mov stos in rex.WRXB pushfq in mov pop pause rorl std out test (bad) jmpq mov mov rex.WXB mov movabs int3 xor mov mov mov mov xchg nopl sbb out sbb and imul mov retq jmp rex.W loope movsb lahf clc (bad) sahf insb iret xchg test jl cmp jmpq cltd cmp rcr stc cmpsl outsl icebp loope movabs lahf or jrcxz lock jmp pop or hlt xchg movsl int3 pop test in shr hlt (bad) stos leaveq hlt mov test mov rex.WB (bad) (bad) (bad) mov cmpsl out mov (bad) in movabs loope rorl invd faddl stos cltd jmpq xchg test std xchg xchg ss (bad) decl in lret jnp pop ss or jno scas in adc hlt (bad) imul sahf fwait xchg orl imul pop or movabs xchg hlt loope leaveq and cwtl xchg or mov mov leaveq in adc xchg leaveq movsl xchg push in pushfq jmpq stc out je or and rex.RB fstpl (bad) out je or and cmp xor or and sbb adc or gs (bad) pushfq jge jno fdivrp pop rex.WRXB or and stc or imul andl adc (bad) je or adc mov pushfq xchg std icebp rex.WRXB (bad) hlt or (bad) and jmpq xchg rex.WRB pop je xor imul int retq xor std (bad) (bad) data16 cltd mov (bad) (bad) icebp cmp push (bad) retq enterq lret mov jb cltd (bad) mov xchg sbb rorl pushq test push sbb loopne (bad) pop popfq (bad) (bad) repnz (bad) stc movabs (bad) icebp ss cmc cmpsl adc callq jbe cld shr or pop (bad) rex.WB push loope xchg sub mov xor xor pop (bad) jb rex.WR sbb leaveq xor jp (bad) jg pushq lock sbb rex.WRX in xchg int int (bad) lods sbb movabs fimull xchg fnstenv addr32 cmp mov mov mov stos gs idiv out push test loop mov lods pop imul jle sbbl xchg addl (bad) mov add addr32 hlt adc rcrl lret sarl std popfq xchg mov (bad) (bad) std rolb lret rep mov rex.X rex.R imul pop (bad) movsl hlt rex.B push cmp fnstcw gs adc outsb enterq test insb pop mov test rex.RX jne movsb cmc movabs (bad) jo (bad) or fimull push push sar fwait rex.WRX cmp jle push rex.RXB shr pushfq adc mov rex.WB int3 add je mov std sbb cmp (bad) mov xchg xchg insl mov jnp push and xchg rcrl jrcxz cwtl xorl (bad) pushfq callq in (bad) fisttpl rex.RX xchg imull mov xor test fimull mov push mov xor cld mov mov cltd add rex.RB pushq adc leaveq leaveq add mov xchg movsb (bad) push scas test and and (bad) xchg sti mov lahf fcompl and out mov (bad) push pop (bad) ja loopne cs xchg push xchg adc mov and cmpsl adc cld mov cmp push movabs repnz (bad) enterq jns rex.WRX sub clc cmpsl in sarb push xchg loope shlb mov xchg test loope movabs mov imul mov shr icebp mov shl cmc or add jo rex.B sub rcrl xchg or jns mov popfq (bad) movabs movabs rex.WX xchg (bad) jne outsl xchg shrl (bad) enterq addr32 shrl xchg mov in cwtl xor callq rcrl int3 int std jmp (bad) mov pop shl jle popfq rex.RX rcrl jno (bad) push outsl movsl (bad) repnz (bad) fadd leaveq loope (bad) push (bad) xor sub pop sub sbb (bad) mov mov movabs callq xchg sbbl test xchg (bad) mov mov and push test movabs rex.WB insb sub push mov pop or and lock xchg std xchg sti mov loope rorl rorl leaveq or xchg cmp rex.WXB sub leaveq push nop stc add stc pop insl xchg xchg hlt push sbb xchg leaveq (bad) cltd (bad) hlt (bad) icebp (bad) pop rex.WXB xor rcll out (bad) fild lock (bad) jae and jo fs popfq add (bad) xchg xlat outsl fxch fstps xor rex.RX fisttpll repnz xorl scas mov mov sub retq mov lret idivl or clc pushq add (bad) lea mov fstps mov out adc out and xorl mov rex lods shll (bad) xchg repz lret movabs fs and rdtsc cmc loope add movsl push xchg fdivl movabs (bad) sti jno or xchg fstpt xchg lret movsb and and xchg xchg in xchg adcl cmp int rcrl imul mov (bad) imul movslq or jnp xor std imul xchg (bad) (bad) ss pop mov jp push lods sti lods mul mov in cmp and int3 adc mov cmpsl xchg lods and mov loope icebp sub stc cltd jne insb retq (bad) (bad) jp je sarl imul add rex.WB rex.WX popfq mov fwait adc loope leaveq sub rex.B fstps cmp add gs rex.WXB loope popfq pop xor adc sub xor imul cld sub mov js cmc sub loopne add push orl hlt jmpq lods (bad) test movabs subl rex.B leaveq (bad) in cs mov push or mov (bad) rex.B loope sbb rex.WR negb and popfq pop mov pop frstor pop scas leaveq xchg leaveq stc sub xchg pushq cmp (bad) hlt xchg jrcxz push test mov xchg add icebp xor rcll add mov xor sub and lret (bad) mov (bad) leaveq xor push sub xchg and fimul xchg repz clc (bad) mulb hlt xor repnz push int (bad) mov (bad) add push xor xor retq cld and xor add xchg repnz scas leaveq loop push rex.B movsl (bad) leaveq movabs (bad) xor xchg int cwtl leaveq add cld in rex.B rep adc loop adc (bad) push in (bad) add enterq leaveq xchg lret xchg mov loop add xchg add push int lret add push lret (bad) mov cltd cltd mov add sbb or mov xorl shlb hlt outsl add loope test loope jno testl (bad) out (bad) icebp cld enterq icebp push hlt imulb xchg repnz xchg movabs cmp lock mov push cmc retq (bad) movsl (bad) rex.WXB rex.RB roll and (bad) xor add mov loope mov pushfq jnp hlt leaveq adc movsl xor jns push rex.WXB lock in mov cltd int3 (bad) push sub lret fistp xor gs and mov mov int3 mov and mov clc and divb and mov push movabs movabs xchg imul test adc jmp fist in (bad) test cmp std (bad) insl rcr rex.WB retq movslq rex.WRB rex.WRX rex.X rex.WR rex.WXB jne jno mov (bad) cld fnsave pushq push hlt std movabs push stc (bad) mull (bad) repz (bad) movsl icebp imulb push add loope iret cmpsl add stc loope cli loope idivl and cmc scas (bad) loope in sbb jno scas movsl cmp mov movabs (bad) je jrcxz or or rex.WXB cmp repz (bad) mov leaveq sbb mov loope insb jno (bad) mov (bad) add sar and repz add out or lret repz movabs jmpq scas adc iret in or sbb (bad) loope sub rex.WRX sub jne iret icebp (bad) loop stc cld notb test cld add (bad) mov xchg adc and xor add vpextrw vshufpd (bad) retq hlt cli lret lods in icebp (bad) adc not xchg movslq xor in (bad) imul (bad) mull or and xor int (bad) nop movabs dec push mov int3 leaveq mov rcll repnz (bad) (bad) int3 pmaddwd xchg adc xchg push (bad) (bad) rex out push loope (bad) jb xor jnp hlt jle in mov outsb insl gs lea jrcxz test int jae int3 test lea (bad) cmp int3 rcll leaveq je and in mov pop insl loope movabs sbb mov push in rex.WX lahf imul mov mov jl lods div loope imul xchg jrcxz (bad) hlt icebp movabs int xchg rex in int3 lea jrcxz or mov rex.WB test insl cld pop int3 test xchg fistl js or movabs (bad) in (bad) adc (bad) rcl int xchg test leaveq retq mov hlt adc cltd test or outsl jge rex.WRXB callq rex.WRXB lret movabs insl jmpq push mov loope adc lock std adc pushq in mov xchg movsl (bad) jg fcomps push mov mov int (bad) leaveq push gs movabs rex.WRB mov push jne (bad) xchg std shrl movsl je jrcxz (bad) leaveq movabs xchg or or sub repnz mov mov leaveq int test leaveq or (bad) cmc push int pmulhw mov (bad) cmp movabs fcmovnbe movslq cmc xor sbb adc enterq adc or xchg scas in popq rex.RB mov fld cmpsb sbb (bad) push mov movsl movabs jns addr32 test (bad) pushq sbb adcl int3 andl cmc jns xchg mov fdivrl stc rex.WB mov rex.WX adc and (bad) push mov fstl mov mov stc jrcxz rex.WB nop cld cmp test repnz mov cmp rex adc mov jno mov lea adc icebp sar movsl mov nop leaveq jmpq jnp sbb and mov movsb int3 cwtl in je std test (bad) nop rex.WRB adc retq xchg popfq icebp movabs movabs std loope sub clc mov add rolb gs mulb xor xor jbe fs or in jae pop stc loope lret cmp enterq fs and loope adc and fmuls retq rex.WXB movsl jle rex.W (bad) (bad) in int3 nop push stc xor xchg push int3 mov rolb lods cmc xchg std repz adcl mov addl rex.WRB (bad) jne fs rex.B push pop pushq mov sbb xchg (bad) cld push out (bad) sub jmpq outsl icebp push mov test rcrb push xchg jge rex.X bnd pop shl and movabs (bad) (bad) fsubl mov in repz rex.WB rex.WX rex.WR rex.RB rex.WRXB adc fwait and icebp xchg repnz mov fadds (bad) int in int3 shll xorl pop rex.WR repz enterq jae (bad) rorl (bad) pop (bad) incb jmpq cmp cmc (bad) stc cmp leaveq movsl (bad) (bad) xchg cli enterq sub adc (bad) out lods jae mov (bad) sti rex.WX sub xchg (bad) movabs enterq xchg int stos (bad) insl sar and (bad) repz movabs xchg mov add out icebp rex.WB (bad) jne ficoml pop mov (bad) in int3 in loope in rex.WXB cmc pop jae rex.WRXB gs jae mov jge movabs fnsave (bad) int int3 mov lods clc xor cltd enterq rolb (bad) movabs bt mov loopne movabs cmc (bad) loop adc or (bad) sbbl or lret and add callq in lret rex.RB ror int3 lea jg jl sub ror push pop mov pop callq push mov cmc adc cmpl add jg rex.RB (bad) (bad) mov lret pop xchg rex.RB xor jmpq (bad) rex.WRB or rex.B int3 mov vunpckhps xchg push jmp push (bad) loope mov leaveq cmc gs mov cmc push sbb movabs mov adc movsb mov leaveq mov mov popfq insl jno mov xchg repz (bad) mov mov popfq mov ss test mov sbb adc movsb popfq int3 (bad) mov rex.WB xchg in sbb mov add rex.B xor push add push hlt movabs ror push mov sbb int3 movsl retq xchg or rex.WB jae (bad) or lcall mov insl jmpq (bad) mov hlt shr int test sub lock and int3 cmp rex.WRXB movabs int3 popfq mov lahf int3 cmc rex.XB ds cmc mov gs leaveq adcb mov stc jg add xchg enterq (bad) rex.WB gs callq sub int cmpsb (bad) leaveq movabs rorb roll jmpq fstp (bad) jnp int3 xor test ficoml movabs xchg int js mov movsl stc fmul jrcxz rex.XB rex.RB rex.RX rex.WRX xchg jae imul mov cltd int3 roll repz adc add mov in mov xor (bad) cwtl int3 xor mov sub add (bad) adc jmpq test fwait movabs push (bad) mov adc leaveq mov movabs jns leaveq pop or fnstcw cmc cmp jne leaveq fwait push sti cwtl sbb mov leaveq add cmc in mov cmc (bad) (bad) popfq rex.B movsl rex.B mov xchg in hlt mov test pushfq or test lret add and xor or rex.WB cmp jge icebp adc (bad) push mov int rol push imul mov testb shrl fldl icebp jg pop (bad) push ja lods out rex.WR push or (bad) push xor lods push je push mov mov or (bad) jmpq int repnz mov or and int3 mov loope shr mov (bad) pop loope adc mov pop movabs jae rex.WRXB out test negl out int lods push enterq or cld mov (bad) outsl cmp lahf cmc movslq lcall movsl movsl in cld leaveq mov or (bad) (bad) jmpq sub rex.WRX mov icebp jae mov movb mov in xor mov mov icebp je loope test leaveq cmc int (bad) repz enterq movsl (bad) int int3 add addr32 in mov stc sub insl fwait outsl ja jmpq cli xor sar rex.R int3 ffree jne mov cmc (bad) pushq rclb sub int3 add shll popfq notb repz jbe lods mov movsl jno xchg jle mov repnz loope (bad) xchg mov cltd xor cmp pop jbe hlt int3 (bad) leaveq (bad) (bad) jne mov pop rex.WR repz (bad) sub rcrb movsl clc in cmc xor jae iret mov jge js sub jge jno push jmpq clc mov je xchg cmp xchg add (bad) lock popfq subl add stc xor (bad) icebp push int3 mov or or and (bad) cmpsb xor add sbb mov add push mov push ror jne addl (bad) ror in jmpq (bad) movabs jo lock movsl jge (bad) fnstsw sub cmp push mov fldl rex.RB int3 push xchg in push jno xor stc or jo loope in movsl testl sbb ja and (bad) jne xor cld or in adc jmp ljmp mov stc test sbb push std (bad) push pop push ds mov mov rex.WR and clc int3 cmpsb (bad) test rex.WR stc bnd add jmpq ss cmc mov test (bad) jmpq jns int3 rex.WR repz leaveq xchg mov shll test and rex.B jle jge roll cli rex.RX divb leaveq mov (bad) leaveq add (bad) hlt (bad) repnz xor and pushq rex.B int3 mov or out or (bad) std rex.WB add mov (bad) add fpatan (bad) icebp cli and xor jns cmpl mov add movsl xchg mov xchg gs repz (bad) mov je out sub sbb sarl movabs std sub mov shl std cmc (bad) decl push jae sbb movabs retq movabs (bad) lret jne mov cmc pushq (bad) rex.RB lock xchg xchg lret mov rol xchg (bad) in (bad) rex.XB fst or and jae (bad) xchg callq ss stc ror cmp rolb push rorl jl (bad) fnsave rex.WB pop (bad) (bad) hlt xchg push sub and in sub jge pop int3 pop nop test lods es loop (bad) stc jno mov fldenv jg (bad) (bad) (bad) or vpsubsb adc loope leaveq stos notb (bad) jbe rex.WXB cmc pop (bad) lea jrcxz mov adc mov rex.WB rex.WRX nop leaveq fsts popq rex.WRX pop jno cltd leaveq pop (bad) stos (bad) je icebp add jmpq shrl (bad) add lea orl movabs xlat out (bad) rorl sar (bad) mov mov (bad) insl cltd mov push in mov je or mov leaveq out je or sub loop jne leaveq xor pop adc out pushq cmp out rex.WB add cmp adc jg leaveq adc and leaveq or and movabs mov scas out je or insl push sbb and rorl clc add mov lods rex.WRXB rex.WRB or and and (bad) movslq std fwait rex.WRXB or imul (bad) std rorl cli rex.WRB out je or pushfq rex.WXB jnp mov add (bad) and and rorb rex.X adc leaveq fild es popq leaveq sub sbb clc jno jbe mov (bad) enterq push add ss rorl js stos push or iretw jae adc icebp xor rex.WRXB sbb and jge or add (bad) or pushq xchg in or sarl push faddp fs jl add jno add mov jo popfq mov cli insb (bad) pop shrl mov subl cld retq rex.RX shlb movsb jmpq mov (bad) jbe and adc mov sub rex.RX (bad) movabs sahf outsb rorl mov sbb iret shr mov rorl push icebp (bad) lods mov mov lods xchg (bad) (bad) lret or adc adc and (bad) imul add fadds roll xchg int cmpsb push (bad) (bad) rex.R push jns lret imul (bad) movsl cs add sbb xchg pop rcll push sub pop mov pop sub rex.WX outsb sarl negq jp mov push pop adc repz data16 push cmp hlt sbb cltd in cmpsb pushq (bad) add mov shl lock fsts pushfq data16 roll push pushq jp and out sbb lret int3 adc cli rcll (bad) rex.RX repnz es addl lret push xchg repnz callq fisttp mov mov sub jmpq cs jnp fldcw adc sarl retq mov sarl rcrl rolb push (bad) test jle (bad) sarl mov shl frstor (bad) jno add or rex.X (bad) jo (bad) sahf rcll cli mov stos jp cmp (bad) (bad) lret (bad) sbb cmp lret hlt or push (bad) lods rex.WXB loopne mov pushfq rcrl nop mov (bad) cmp and pushq shrl stos loop notl (bad) rex.RB rex.B pop imul xchg mov xchg sbb out roll adc (bad) sub xor rol rex.WRX (bad) sbb jrcxz sub cmp cli xor stos ja mov rex.RXB jae adcb push hlt rex.B loope loop test rorl xor test and (bad) jno xchg addr32 fildll push mov (bad) lahf (bad) xor fnsave test mov jnp cmpb xlat (bad) xchg (bad) add inc rex rex.WB mov cmpsl rorl insb lret jg je sbb add lahf adc (bad) mov xlat js xchg pop retq loopne pop sbb (bad) movabs push fucom rex.RXB movabs push jb pop sahf jae jb test sub shrl shll mov sbb fsubr out (bad) sarl add (bad) mov scas in adc (bad) mov rex.B xor push cmpsl (bad) push iret rex.B (bad) in shrb (bad) sbb fucomp mov lcall lock ja xor rex.WR roll rex.WRX xor mov push mov pop (bad) add shl rcrl mov (bad) push xor lret sahf popfq or lret push mov sarl (bad) cli lods test (bad) mov mov sub loopne lods cmp mov in jl (bad) jg (bad) rcrl or and (bad) mov test mov rex.WRXB mov add (bad) fstpt in roll fcom stos je vpunpcklbw jns or addr32 vucomiss and mov loopne insb mov push ja adc jae mov push pop cmp rorl mov xchg (bad) rex.WRX lock sub mov mov outsb (bad) pushq jle xchg cmpsl mov (bad) xchg fwait add jmpq (bad) (bad) out movsb (bad) stos loope cmp jb (bad) leaveq nop xchg cld enterq andb xchg ss mov scas push jge add adc (bad) mov callq cmp mulb std lods ja addl pop mov and lret and rex.RXB (bad) outsl adc retq lahf and int3 mov mov add (bad) (bad) sbb mov and (bad) loope push rol xor add imul pop int adc insl and clc pushq rex.WXB insb (bad) add push out xlat cmp push nop lret cmc (bad) test movabs add roll (bad) mov fwait jb sbb (bad) repz jmp pop rex.WRB cmpsb gs enterq (bad) push rex.WX mov (bad) push out (bad) mov (bad) out adc jp fneni(8087 lret test adc rcr push jp push fs sbb rex.R cmpsb xchg sub (bad) testl or cltd roll rcll outsb jbe cmp pop rex.B xor xlat sub push pop std lea pop mov (bad) sub push jae add (bad) xor gs sti shlw mov xchg mov roll nop lock and xor cmp jge stos nop adc in push add out xchg rol push cmc add leaveq sub sub movsl fmull jg rex.R push insl and mov je mov cld shll adc retq test (bad) addl (bad) movabs add rex.WR lret mov jmp cli mov push rcrb rex.WRXB jbe sbb jae (bad) cmp lret rex.R mov xlat (bad) std cwtl mov push (bad) ficomp jnp adc int fisttpll and (bad) and addl rex.X add xchg faddl (bad) rex.RXB js sbb shll test clc in cmp ss rex.B rex.WX rex.R adc (bad) sbb sub int3 movsb rex.W fistp lock (bad) sbb xor shrl std mov cmp pop (bad) insb rcrl (bad) xchg int3 and and lahf icebp movb movslq mov cltd outsb nop decl int3 xchg mov js or sbb sbb rcll cwtl mov pop andl sbb rex.RB shrl rex.XB cld mov mov xchg pushfq (bad) jp sbb incb fs loop sbb (bad) mov jb adc jmpq (bad) (bad) cmp (bad) pop jne out or pop out mov (bad) mov fidivrl lods (bad) pop push rcrl (bad) jge test ror and jno mov xchg mov lock hlt lret jno xor push (bad) jo rcrl rex.XB and jnp callq nop or add push test jne add je rcr movsb rex.X fld add (bad) xchg test fisubl insl (bad) ss and mov xor rex.WR rcr mov pop rex.RX stos js fcompl mov loop pop jrcxz in nop xor add add (bad) adc xor jg or xchg sub gs or xchg cli movabs jp mov sub sbb cmpsl xchg rex.RX flds mov outsl jae xor add retq adc xchg clc fcmovb xchg sti icebp rorw rex.W rcl (bad) xchg cmp mov xchg xchg pop add mov sarl repnz and (bad) jne gs loop (bad) pop cmpl test sub (bad) stos rcrl mov roll in sub fstpl (bad) and enterq sub iret stc mov ffree or pop rex.R mov out in shr rex.X movsb mov movabs lret push jns sar rex.WX (bad) imul ds js (bad) outsb cmp xchg rex.RX push cmpsb out and jg notl adc jrcxz cld mov rcll (bad) fstps (bad) leaveq out and add sub mov and retq mov lock jmpq out shll jae (bad) out (bad) roll in mov loop int3 cmp mov jb (bad) rcrl jmp sub movb rex.WRX lods or (bad) jne xor jbe cmpsb loop neg rex.RX icebp clc add and push jmpq fildl fstp xor rex.W (bad) mov or adc pop stos or pop in xor lahf (bad) movsl cmp (bad) push sti fistpl sahf popfq cmpsl shrl fistpl adc sarl stc mov (bad) rex.WR rex.WRX mov (bad) jno rex.RXB cwtl rcrl jns push in rorl cltd scas flds xor pop push rex.WRX ss (bad) shlb retq adc ds (bad) rol sti loopne (bad) add icebp shll fadd (bad) or mov jne and rex.WR xchg pop add add (bad) (bad) adc xchg sbb movabs sub push or shl icebp add roll leaveq add mov add je rorl mov rex.X sbb out shrl iret mov nop fs hlt js test mov scas add std ss xor xchg rcl pushq (bad) rcll ja test (bad) pop cmp and movabs xchg shrb (bad) mov rex.WRX mov (bad) (bad) mov pop xchg lea adc mov cltd jrcxz ffree fs add mov movabs movsl retq (bad) mov push enterq push stos rex.XB stc and pop sarl and add in xchg (bad) mov fst mov xor xchg jl sarl (bad) stc es push pop mov (bad) lret (bad) xor (bad) movabs push (bad) (bad) (bad) fldl stc cs rex.WRB rex or repz (bad) pushq stc test add (bad) test (bad) lods rex.WXB in xchg (bad) mov fsubrl jmpq icebp sti cmp add test (bad) jbe rorb mov rex.B sub (bad) pop (bad) xor (bad) loope mov leaveq hlt fs (bad) and movsb add push cmp mov fisttp or mov and jg hlt mov lretw mov std int3 cmp stos add (bad) and (bad) xchg pop mov vfmsubadd231pd rex.WB imul (bad) mov int add in mov push mov leaveq hlt rcll xor cld popfq cld icebp jrcxz jp int rex.WB divq vshufps vpsubw rolb repz leaveq push int3 pushfq lret (bad) std (bad) rex.WX popfq xor in repnz hlt jne vpsubw in cwtl icebp or xchg mov stc mov leaveq mov movabs je jrcxz test push outsl insl mov xchg out rex.B rex.XB rex.RX rex.RB je in callq sbb lea rex.WRXB stc in int xchg in xor fnstsw and jmp add icebp cmp sysenter or lret push icebp sahf add hlt rex.WRXB repz or divb stc (bad) hlt or and (bad) xchg sti std sbb (bad) (bad) rex.WRXB out je or out loope mov in (bad) callq and stc pop rex.WRXB out je or and sbb test rex.XB adc or (bad) (bad) fcmovne and sub lret or mov loope cmpsl xor out (bad) xchg shl orl sbb jae loope xchg hlt sbbl xchg std in rex.WRXB out je or (bad) hlt add pushfq cmp xor or and sbb adc insl je or jno rex.RB pop mov lods or pushfq cmp out je cmp xor and adc xchg jg leaveq movslq vhsubps mov (bad) pushq push cs push xor sub jge test rex.RB mov leaveq sbb sahf sub cmp rcl jns mov mov mov mov cmp (bad) test decl mov xchg sbb xor jbe or (bad) (bad) mov test repz je jrcxz test icebp rex.WR pause in push fistpll icebp out (bad) or rorb int mov callq xchg mov lods sbbl movsl test rclb cmpsb push pop sbb (bad) movsl xchg pop xchg mov pushq xor mov (bad) jmpq (bad) rorl lods in (bad) add nop mov adcl cli lods rex test stos pop and push rex.WXB (bad) test stc jno jo jmpq mov int cmpl orl jo sub pop fsubs int3 retq xchg hlt cmpsb adc push fldt xchg lret testb leaveq int clc leaveq insl xor leaveq cld and leaveq jge cld and add (bad) leaveq cmp movabs leaveq xchg mov hlt jbe popfq rorl cmpsl dec lea sbb (bad) int3 xchg movslq leaveq std test leaveq lahf addr32 leaveq jl int leaveq outsl jnp pop sub (bad) leaveq jmp jrcxz fadd int outsb int3 or adc out add in leaveq rex.RB stc xchg callq shl jl enterq (bad) hlt loop (bad) adc sub stc and hlt or leaveq push jns xor stos in gs movabs hlt add adc hlt in or leaveq sub mov or int cmc pop adc jb fstp js cld notb push or retq leaveq rclb repz int3 insl cld loope mov adc leaveq cmp pop xchg adc rex.B rex.WXB test jge leaveq xchg (bad) jae xor leaveq xchg mov cltd jrcxz mov data16 outsl xor leaveq mov leaveq cmpsl movabs leaveq fldl (bad) xor xchg ror add movabs sub imul (bad) stc shrb int3 rex.WRB xchg lret scas pop jno adc sub cld imul movslq leaveq cmpsl or xchg stc rex.WR sarl loope out sti sbbl rorb int3 fstp or jl int3 sub pop (bad) pop (bad) leaveq (bad) int3 test loopne test xorl hlt (bad) xchg sub cld and sbb fmul insl stc rex.WB jmpq cld xchg adc mov push (bad) jmpq int3 pop test leaveq push mov leaveq mov (bad) test leaveq lcall cmp lea stc leaveq cmpsb int and popfq or ror leaveq cld movsb int3 jno stc leaveq cmpsl lods int3 insl stc rex.WR jge stc push es (bad) stc leaveq cmpsl or test test faddl stos (bad) adc pushfq jns leaveq jno int3 and (bad) leaveq (bad) int3 xor leaveq xchg sbb add rex.WB mov cltd cld rex.B addr32 int rex.WR add gs xchg or test leaveq mov rex.WB mov gs xchg hlt (bad) jne sub mov (bad) push hlt out mov rex.XB xor lret int3 adc leaveq clc leaveq mov sub (bad) leaveq cmpsl mov jno rex.WR movabs leaveq cmpsl rex rex.WRB rex.WR es pop stc fcoms jp cmc add rcl (bad) pop adc mov int3 leaveq jl mov shr (bad) (bad) movabs (bad) leaveq (bad) jmpq fwait xchg mov jp movabs test jmpq loope rorl and leaveq sti movabs (bad) frstor loope leaveq cld mov lea leaveq cmpsl addr32 popfq stc rex.WB nop movabs cwtl mov rex.B hlt (bad) test lret mov lock pop retq leaveq mov stc leaveq pop adc (bad) stc (bad) leaveq jae int3 jno imul mov leaveq adc (bad) jnp test out and lods xchg stc retq (bad) fadd sub cld jle cltd movslq leaveq cmpsl insb int3 jmpq jnp stc stc cmp mov retq leaveq (bad) mov test shll fcmove test (bad) scas lock stc stos (bad) sub stos (bad) cltd xor clc mov pop rex.XB leaveq ror push stc leaveq jl int3 movabs rex.WR xor cltd stc cmp imul leaveq pop push mov icebp leaveq xchg jno in test leaveq insb adc cmc stc (bad) leaveq outsb xchg int3 vmovups out pop mov jns (bad) add mov (bad) adc xchg push movabs adc movsl add and and retq test loopne xchg std lret rex.XB leaveq js test repz jns stc leaveq xchg push int3 sbb mov stc mov leaveq (bad) jno in rex.WR (bad) jnp add out out jae leaveq jne outsl cmp or stc scas (bad) test jp test js xchg rex.B xor jns imul jl cmc sbb andb icebp leaveq rep jg mov rex.R add sbb cwtl stc outsb jb or rex.WB rex.WR ss movabs mov movsb addr32 loope (bad) leaveq rex.RB int3 (bad) leaveq jl (bad) pop leaveq sbb movabs test enterq stc rex.WR out jl rex.WRB xchg repz in mov stos movl test lret jno jns hlt rex.RX stc movabs (bad) int3 rex.B mov popfq hlt xchg xor xchg xor popfq hlt sbb add adc (bad) in leaveq cmc xor xor cmc pop adc jmp sbb stos hlt (bad) xchg xor scas (bad) (bad) shll (bad) pop or (bad) in sbb cmp nop int3 gs mov xchg sbb jp movabs mov out ja cld cmpsl xchg hlt and mov mov cmp cmp jl xor mov sbb add xchg jb mov leaveq lahf (bad) cmp mov xchg stc rex.WR jb int3 in cmp add sub xor leaveq xchg xor cltd jrcxz xor mov lods movabs hlt movabs or (bad) leaveq rex.XB int3 stc stc (bad) leaveq jle (bad) leaveq xchg data16 (bad) movabs leaveq jbe int3 sbb (bad) leaveq cmp leaveq and rex.WRB leaveq xchg cs pop mov enterq movabs stc and xchg or (bad) test leaveq scas xchg int3 xor or not cpuid shl and cmp movsl rex.R (bad) jnp cmp out or test and sbb stc mov shll fcmove pop stc rex.WB (bad) xor leaveq test xchg int3 mov jbe rex.WB xor leaveq jp xor fldl jnp xchg stc and movsl loope in in int test leaveq (bad) xchg int3 movabs xor lea hlt adc jne stc stc hlt mov jnp (bad) fadds pop sub adc jno leaveq mov and test adc (bad) int3 and xchg push jne retq leaveq mov mov test leaveq push adc xor pop sub clc pushfq (bad) (bad) test int3 movslq leaveq cwtl test cmp adc xchg stos fdivrl sub jnp or push rex.XB leaveq sahf int3 movsl sub addl iret leaveq cmc cld jmpq leaveq ficompl (bad) cld (bad) icebp xchg clc vsqrtpd and icebp hlt rex.WRXB addr32 (bad) leaveq cs int3 push stc xchg cmpsb lret movsl xchg leaveq jl int3 mov cld rex.B iret leaveq mov leaveq outsb lods movabs leaveq js rex.B stc cmp movslq pushq add outsl movabs test cmpb rex.WRB pop test adc outsl movabs movsb lret andl (bad) hlt xchg stc cld add hlt sahf idiv fcoms hlt test enterq add cltd push (bad) jge leaveq cld rex.WRX leaveq sub leaveq cmpsl jle cmp test cmp adc rex.WR xchg in add xchg dec xchg mov leaveq scas int3 in fmull fild xchg xor sub addl jb movabs fmull or int3 insl or push rex.WB loop cmp adc mov xchg rex.WRX rex.RB adc mov add mov nop jge (bad) pop jl movsl xchg pop add in in cld (bad) (bad) je popfq rcll in hlt add je jrcxz rex.R fcoml scas out not push cmc hlt (bad) (bad) int int xchg test out (bad) fsts stc (bad) leaveq jnp clc hlt adc rex.RB rex.WRB rex.RB leaveq hlt mov rex.WXB lods xor mov xchg xchg in enterq leaveq hlt rex.WXB cmp mov hlt sbb mov int movsl xchg clc (bad) xchg adc cwtl lahf imul xchg in (bad) rex.R (bad) hlt or push (bad) or cmpsl xor lods pushfq pop rorl (bad) rex.B push popfq rex.B (bad) rex.R hlt lods lahf (bad) xchg and or in mov (bad) pushq cmpsb jno icebp hlt add lahf hlt test xchg xchg test add (bad) rorl (bad) jae retq leaveq faddl (bad) fwait mov jne and or rex.WB (bad) sub mov adc lea int leaveq pop cmpsl gs stos test (bad) adc mov int (bad) popq int hlt xchg mov cltd cld xchg xchg hlt sbb (bad) rcrl test int cld gs sub rex.WRB hlt movsb mov lea rex.R (bad) shrl sub fstl jge pop hlt (bad) xorl xchg jns hlt (bad) mov hlt rex.WXB xchg rex.WRB add loope jo retq add sub mov popfq hlt add lods (bad) hlt mov loope stos loope test or std lods in int (bad) int3 stc or mov int jmpq movabs imul movsl xchg movsb (bad) hlt mov int and mov hlt (bad) jne rex.WRB hlt and push pop in hlt mov xchg rex.WRB rex.X rex.WRB rex.B mov push xor xchg hlt xchg and lret fisttpll hlt xchg pop xchg pop hlt mov int leaveq sbb int3 leaveq (bad) out (bad) and hlt pop xchg mov hlt (bad) pop xchg leaveq mov hlt mov in push hlt out fcoml je jb adc sub in (bad) hlt sti test xchg int3 mov and stos rex.R lods hlt rcr mov or pop (bad) in xchg rex.RX insl xchg loope hlt test cmc loopne and xchg (bad) int3 adc test add push fs test rex.WR leaveq popfq jno test int3 cltd xchg adc je cltd je rex.RB jne (bad) jae xchg mov xchg pop cld in icebp hlt sarb cld movabs out jge xchg in hlt iret sbbb loope cltd hlt jp stc jns or jg adc movsl mov rex.B stos (bad) cmpsl xchg (bad) test imul cld sub mov mov mov (bad) mov (bad) hlt cmpsl and frstor (bad) std movsb stos leaveq hlt in pop xchg popfq xchg test (bad) xchg xchg cld cmpsl mov (bad) int3 pop push gs out pop imul cmp in mov xchg int rex.R adc rex.WB hlt xor leaveq or leaveq loope (bad) sub movabs adc xorl hlt (bad) or rex.WB lods or fnsave hlt lret adc movsl cld int hlt loop int cld loope hlt cmp leaveq (bad) adc out sbb (bad) int3 sub out fnstenv mov leaveq in fmul (bad) leaveq in iret (bad) int leaveq mov int out mov int leaveq push nop int leaveq ja int leaveq adc int3 xorl hlt sbb jno in xchg int leaveq mov int leaveq test int leaveq rex.WRX int rex.WR add leaveq (bad) sub mov leaveq rex (bad) mov pop jno retq and (bad) jrcxz add add (bad) lret movslq flds mov jrcxz out add rex.WR jnp and sbb pop jrcxz retq push cwtl cmp rex.WXB (bad) insl lock in in mov orl sar add mov (bad) decl xchg callq andl xchg roll sbb rorb sub cmpsb pop stos cli add pop sar rex.W rcrl rex.WB pop out xchg rcrl lahf jp nop xchg shrl (bad) and shrl xor cmp jb rex (bad) rex.RXB in mov (bad) sbb gs (bad) jmpq rex.WRX (bad) rcrl or sub sar (bad) mov mov movsl (bad) jns xor (bad) rex.WRXB xchg mov push (bad) jno (bad) xchg adc scas add rolb sub mov (bad) mov rex.WRB mov movslq rex.WR repz xorl adc pop faddp mov add cmp lret (bad) (bad) add sub icebp (bad) stos or (bad) sbb movslq cld jns pop nop (bad) xor jnp stc (bad) pop xor shrl movabs imul mov cmp lods or movslq loop rex.WRB (bad) pop sbb rex.B (bad) cli pop rex.RX rcll jns adc cmpsb (bad) and (bad) and lret clc sahf retq repnz rcll xlat (bad) sarl mov sbb cmc rex.R jmpq cmpsb (bad) jb stc mov leaveq jno (bad) add lods test (bad) mov rcrl rex.WB cmc shrl rex.WRXB (bad) rex.RXB rex.WRB rcrb push (bad) adc cmp roll push (bad) jae adc add (bad) adc push jae mov cmp sub xchg jp outsl and (bad) xor xlat and (bad) push mov ss imul jno xor cmc sarb push iret mov orl jl int sar add sbbb xchg gs rex.WB sarl lods stos (bad) mov rex.RX lahf cmp xlat cmp pop scas (bad) std xchg sub lods iret push (bad) adc sub mov jge cmp rcll jne sub int3 std imul mov mov push movabs cwtl (bad) fistp push test lret push (bad) xor movsb lock (bad) ffreep (bad) xchg pop sarl fcoml adc pushq jns roll movabs mov mov cmpl cmp (bad) retq adc loope mov adc roll cmp (bad) mov cli jae jg jb push movabs sahf fcoms movsl jmpq insb (bad) xor mov pushq loopne rex.WRX roll movsl std push movabs (bad) cmp (bad) xchg mov jge push imul jg fcmovb xchg xlat rex.R clc wbinvd ffree movsb out or loop xchg cld rcrl xor cmp (bad) repnz leaveq (bad) mov pop cmc xchg (bad) push cmpsb retq cltd add (bad) or cld sub flds out pop shll pop loope loopne shr in rex.XB (bad) mov cmpsb pcmpgtb in movabs cmp push rcrl pushq fidivrl rex.RXB data16 adc (bad) negl mov (bad) xor icebp mov pop fs int3 mov and negl imul jbe cmc or add rcrl test popfq and and cmc (bad) sub jne adc (bad) sar jbe xorl fcmovnb jns pop xor iret push cmpsl pop and roll add (bad) mov rex.WX mov rorl xchg imul std (bad) cmp or push (bad) mov fild repnz lret jmpq mov mov outsb add pop roll loopne or sbb gs retq rex.B pushfq or (bad) in (bad) repnz (bad) jb popfq mov lahf sub imul (bad) mov test sbb lods fistpll rcrl mov lahf sbb rorl pushfq and pop leaveq (bad) jae mov cmpsb (bad) icebp jnp mov fnstsw (bad) mov mov jb in xchg sbb mov add sub fisubl xchg xor fnstcw cltd pop (bad) xor ss nop lret rol out pop shrl imul jl rex.RXB sbb retq xor cs stc pop shrl in lea shrl movsl rex.RB rex.WR (bad) je xchg (bad) xor fidivrl rex.R subb xor add loop sarl xchg addb movabs cmpsl (bad) xor rex.WX iret mov mov test ror pop shl mov jmp rex jns rex.RXB fld sub cmp add (bad) bnd (bad) mov negl push xchg scas adcl lods rex.RX sub movsl shrl (bad) pop (bad) xor loope movabs push mov lret pop (bad) insb cmp xchg jrcxz push adc stos xchg rex.WB cmp mov (bad) rex.XB movabs or ja adc lret rol (bad) cmp rex.RX sbb shrl int nop jmp xchg (bad) gs mov add (bad) cmp (bad) in test (bad) lret lea pop movabs mov movabs and callq enterq rex.B jmp sarl cwtl mov (bad) pop mov xor mov and fnstenv push movsl (bad) in jmpq jae ja (bad) sbb roll jmp fsubs in retq push (bad) rex.WR jg movabs lret push shll stos shll scas rex.WR ds cs mov and rorl xor cmpsb mov rex.WXB rcrl mov fisttpl fnstcw retq xchg sub push mov int3 lods and rex.WR rex.X xor sbb mov and jle (bad) sub (bad) pushq icebp rcrl (bad) fidivl insl jno movsb pop pushfq sub cmp movabs mov (bad) mov out add cmpsl jo (bad) xchg and out lods gs rex.WRXB rex.WXB pop (bad) movabs clc retq (bad) mov mov out fs int3 cltd cmp movabs xchg out mov (bad) cmp roll mov and mov rex.WRB mov rex.WX ja xchg (bad) outsl xchg jg mov push and (bad) lcall rex.RXB (bad) (bad) rex.WX xadd jae ficoml (bad) jo xchg (bad) pop callq xchg or xchg mov in (bad) loop sti (bad) mov pop callq mov jnp stc stos mov es rex.WRX jrcxz enterq rex.RX rex.WX (bad) es (bad) sbb xlat lahf rex.WRB rcll (bad) mov xchg shr (bad) rex.WRXB jrcxz and mov xchg xor (bad) imul or xchg mov (bad) sbb mov xchg rorl (bad) fs and (bad) mov (bad) mov icebp sub (bad) out (bad) outsl xchg or lahf mov (bad) data16 adcb xchg cmp sarl out rex.RXB (bad) lahf fisttpll rex.B or add xchg or xor add add sub nop (bad) retq fsubl mov mov (bad) movabs loopne repz and enterq jg,pn rex.B xchg xor roll add xchg mov mov xchg stos sub (bad) clc lea retw pushq (bad) cmpsb add test cmp retq lret out sbb mov xor jo rcll adc ja out mov cli push fisubr roll lret add rol fstpl mov jae cmc adc (bad) pop stc sbb push rex.B rex.WRX (bad) leaveq movabs push and (bad) add cli rcrb xor mov fstl lods mov cmp nop cltd icebp push rex.B push lcall cmc add sbb jno cmp mov jg jmpq mov out sbb rex.RXB rcll add (bad) mov push retq in and mov (bad) jb ss loopne in rex.WB in jno mov sub mov cld retq movabs push rex (bad) or or cmp int and mov repnz jle add cmp pushq sti add sbb jnp and pop test pop sahf ror (bad) pushq insl mov xchg xchg mov sbb rcll (bad) adc rorl add pop rcll rep add mov (bad) es rex.B sbb cmpsl add (bad) neg pop (bad) adc fdivrs int rorl out push int3 xchg insl rex.X adc movsl lods adc (bad) xchg jle fsubl xchg (bad) pushq (bad) mov wbinvd retq jmp test repz pushq rolb punpckhwd rex.RB (bad) xchg sbb movsb (bad) add jne (bad) and clc mov or outsl rex.WRXB or lret sbb sbb cmp testl (bad) cld (bad) xchg pop fldl rex.RXB cmp (bad) scas sbb mov repz push add retq (bad) sub adc sub mov add icebp ss cmp rex.WXB rex.WRXB rcrl test sub cmc xor cmp outsl xor rcll mov shrl je rcrl cltd mov rex.WRX jl shrl and outsb movabs adc lods rex jrcxz (bad) shrl xor adcb sbb mov xchg sahf shlb (bad) nop rcrl or repnz mov out sbb leaveq push xor (bad) xchg divb lret add shl jno jo (bad) repz mov jae stos iret (bad) or shrl xchg movabs and mov mov jns movabs add and idiv pop rex.B in fstpt mov rex.X xstore-rng cmpsl (bad) ss and pushfq or in mov jae or rex.W (bad) (bad) pop fnsave push jmpq rorl (bad) and push sarb push sarl stos cmp insl add shrl pop fisubl pop out jp notl loop lret out rex.B lods loop jle add test add cltd mov mov pushfq int sbb lea icebp movslq shrl (bad) retq (bad) mov push cmp hlt push movslq (bad) (bad) xor sbb sbb mov rcr (bad) fcomi pop xor scas xor (bad) sub insb (bad) pushq sbb rex.WXB movabs mov and mov (bad) (bad) int3 add lock mov and lret int fcmovnb xchg popfq movabs mov sub sbb shll or rex.RXB rex.WRB add xor mov push rex icebp sbb cmp (bad) lock (bad) movsl lret kandnb lret mov xchg add xchg add (bad) jns cmp cmp and mov divl mov sarl rex.W sti (bad) stos add loopne cmp jnp xchg push jb sub rex.WX scas fsubl repnz rex.WR jnp mov in push stos (bad) jb and enterq setnp pushq (bad) test mov cmp jle in outsl (bad) scas add retq movabs pop addr32 es xchg or adc movabs (bad) xor (bad) mov push push (bad) jno in (bad) shl push fs push mov mov xchg fstl add cmp adc xor push rcll fmul push gs pushq stos stc cwtl repz push scas ss mov rex.RB mov lret (bad) xor rex.WR cs cltd sbb rex.X rex.RX adc (bad) mov jl rex.XB mov mov sbb push test mov mov add rex.WRB fiadd in movabs repz es xor rex.WR int rex.WRX rcll rcr jl bnd rex.WRB xor rclb iret pop sti mov push mov sub (bad) rex.XB jo icebp (bad) ja adc mov push or push xor imul cld (bad) lret add loopne retq fwait rex.WXB (bad) nop and fs rex.WX pushq (bad) loopne adc (bad) add mov xor pop cmp sbb (bad) jrcxz scas jle icebp sbb pop rex.R (bad) or movslq sarl xchg fstpt push loope enterq (bad) cwtl or push mov (bad) mov imulb sbb cmp sub and fmul and repnz jmp mov pushfq xchg push fisubrl loop xor cld in and stos cmp jl rex.WRX xchg hlt and retq rex.RXB lret (bad) jo loope xchg sahf enterq sub faddl push sarl xor mov jae in rol mov (bad) push (bad) or out bnd jp shll pop rcr cmp pushq rolb rex.WRX (bad) stos repnz rex.RX xor cmp (bad) add or (bad) adc (bad) or rex.WR adc pop test xor pushq fmuls out jbe shrl xor rol loop mov xchg ja rex.B xlat or mov (bad) xor data16 (bad) movslq (bad) movabs adc test stos xchg enterq cmp mov mov (bad) lret loopne and (bad) sub mov cmpsb mov outsl (bad) mov xchg out (bad) mov (bad) sub xor mov push andl adc shll repz sub in cmp retq lret rex.WR test (bad) cmpsb in stc vpunpcklqdq out test adc movabs jmpq popfq (bad) xor pop imul add cmp nop sub in mov (bad) lret sbb (bad) mov outsl shll cwtl retq sbb push cmp push negb (bad) mov fs outsb movb xor movabs ss roll or sub (bad) cmp mov rex.RX fdivs mov shrl movsb rcrl pop fidiv jnp pushq cmp sbb data16 movabs cmp roll xor pop je sbb xchg push xchg sub stc (bad) jo mov test shrl jge rcll and movslq mov push stos or add mov hlt (bad) roll out or (bad) mov xchg jle enterq repz outsb sub loop lret retq fidivr sub mov (bad) xor or rorl xchg mov sarl jge lret mov (bad) (bad) (bad) stc je mov add mov jns roll test hlt push roll cmc pop shrb mov rex.XB pop outsb jbe andl mov vpaddsb pushq mov shrl retq xor loope (bad) rcll jo popq xor xor (bad) loope xchg mov mov jns mov rorl movslq push std (bad) push retq hlt pop stc test xor rcr cli rex.WB adc pop (bad) loope loopne fstps rex.WRB rex.B xor mov fcoml xchg outsl (bad) fisubrl jmpq sbb loopne adc shrl add rcrb (bad) xchg push cmp in roll mov push cmpsl shl push cmpsb cwtl ss mov xchg int3 fisttpl imul int3 jl (bad) loope shr xor sub mov add (bad) add sub test movabs mov rcl sub sub rex.RX cs sbb sbb add adc hlt mov ss es cmp mov mov rex.RX (bad) je (bad) rex.WRB movabs sahf cmc ss rcrl (bad) lock sub sbb vmovhps movabs xor mov data16 add shr out cld (bad) jle sar push (bad) jmp jp shl xchg cmc push fs mov rex.W ds icebp (bad) repz (bad) hlt mov (bad) pop rol sbb data16 rcll addr32 mov rex.WRB rex.RXB shrl fwait add rcrb push and (bad) rex.B rcrl (bad) retq (bad) insl rex.W mov movsb rorl or in pushq rorl or cltd rex.WXB jae (bad) out retq cmp jo xlat and (bad) (bad) mov and cmp pop (bad) rcrb add out cmp cwtl cli fldt sbb sbb or movabs mov rex.RX jbe (bad) int ja push out jo sti xchg or jnp push xchg adc or cmc clc push pop xor (bad) mov rex.W out jb pushfq repnz and cmpsl rex.X stos jrcxz (bad) mov (bad) mov fsts jae lret shlb mov jb fcos push (bad) rcrl mov int3 rcl shr mov and (bad) sub (bad) in stos movabs and jb (bad) xor popfq mov fmull enterq data16 rex.B (bad) xor shl (bad) movsl sub cmpsl mov in (bad) xchg mov stc add and jge test or or lods jo jns je adc imull rex.WR or and (bad) jnp pushq xchg (bad) (bad) mov and push rex.XB (bad) callq rex.RXB (bad) shr (bad) data16 ja pop rex.B xor add cli or mov jmpq in std sbb rcll jl,pt ss adc mov xchg sbb insb cld imul mov jae scas (bad) rorl adc jmp callq mov cmc xchg xor ficoml repz or rcrl addr32 sub loop rol pushq leaveq (bad) mov lods retq (bad) stc jo in mov pop xor je xor lret enterq shrl add rcrl retq xchg rex.WRX fisubrl repz mov loope fldcw adc (bad) rex.B cmc (bad) test sbb (bad) rcll shll sarl (bad) mov rex.X std fdivp inc (bad) pushq enterq mov or lret xor jo cmpsq repnz (bad) (bad) popfq mov pushfq sbb mov in fisttp xchg fisub fwait subb or rex.WX js (bad) sarl jl shr pushq adc jbe add rcr (bad) loope rex.XB rcrl (bad) jo movsl (bad) cltd rorl pop xchg (bad) (bad) (bad) (bad) or mov (bad) (bad) sub shr hlt adc mov je xchg xor xchg sar sbb jno rcll lret xchg sbb addr32 cmp movslq pop repz popfq pop xor jae mov (bad) sti xchg retq hlt or imul out nop push repz fwait repnz sub (bad) cmp rol icebp jmpq (bad) and xchg mov roll rex.RB mov fcmovne outsl sbb cwtl movsl movabs sarl (bad) lret mov (bad) add cmp push pushfq add push (bad) xchg cmp and out mov or cld movslq insb (bad) add sub sbb cmpb testb or negl out int3 add repnz out sahf iret movabs mov cmpsb pop (bad) leaveq xor pop rcl (bad) (bad) jb std rex.R (bad) mov xor sbb (bad) (bad) imulb movl sarl pushq push pushfq lock rex.WRXB cmpsl lret mov xchg iret sub xchg mov stc xor shr stos int3 push add (bad) jle gs xchg sub adc add (bad) repnz loop (bad) cmpsl xchg rex.WB xor cli je and xor sbb xor (bad) xor jg imul loop rex.X (bad) (bad) rcll leaveq (bad) outsb xchg sub shll (bad) (bad) ja insb lea rcll add or mov rex.R movsl sub or lret jbe,pn rex.B subb adc (bad) rex.W repnz jmp and andb int sbb xchg mov shl lret or scas rex.B cmpsb loop jmp shll mov mov rex.X mov pop (bad) je ss (bad) sti (bad) int or out and fsts rex.B (bad) push (bad) lret (bad) mov (bad) xchg rex.XB fdivrl and lods pushq xor pushq xchg (bad) or lret rcrl test jmp push xchg mov adc sub cmpsb movabs fisttpll mov jrcxz movabs movsb jge mov cmp adc loop rorb jnp lret mov cwtl cmp mov (bad) sahf push jrcxz mov lods rex.XB mov and mov mov sbb out (bad) mov xor insl (bad) movslq (bad) mov sbb (bad) (bad) enterq negb cmp adcl or mov sar pop (bad) (bad) retq lea pop lods movabs mov rex.WXB push scas mov (bad) cmp mov jo jrcxz fcomps or push (bad) incb or push (bad) or adc in neg jge (bad) outsb int rex.RX rorl in movsb mov xchg push cs nop leaveq cmp shrl push and fsubrs lret test out xchg rex rex.WRB out (bad) add mov mov pop test or callq outsb sub jno idivb cmp (bad) imul (bad) jp rex.B cwtl rex.B xchg sbb addr32 movslq mov shr movabs outsl rcrl pushq imull fstl rorl rex.X scas callq imul (bad) sbb push lods pop push jno test adc (bad) (bad) rex.RX addr32 (bad) imul insb sar mov adc add sbb jg lods push or (bad) sub push rol rex.B cld push xlat (bad) repnz and movabs mov movabs imul push (bad) sub rorl add (bad) mov xchg mov fisttp (bad) sarb repnz or push loop movslq (bad) retq stos cld rex.B mov int3 in fidivr mov out (bad) fisubrl rex.W mov retq adcl enterq rcll imul mov es add pop rex.B adc loope mov pop insb (bad) cmpsb loopne cwtl cmp jp mov mov jge cli pushq xchg test insl (bad) shl (bad) cmp iret add (bad) add repz sarl rex.XB add jno jg xchg push jns cmpsb rorl in (bad) rcrl (bad) roll loope (bad) cmp (bad) fwait (bad) push gs adc movsl rol frstor out (bad) rex.WRB rex.WB gs jno fs lock int3 outsl loopne jmpq retq shl jbe fisub (bad) retq rex.RX int mov test (bad) rol stos fimull loopne (bad) (bad) movsb xor in rex.B fwait (bad) clc pushfq xchg cltd gs (bad) fcompl xchg sarl ficom (bad) xor sub roll cmp and nop add add (bad) test jmpq push cmp (bad) jbe shrl loope (bad) jmpq jmp mov push or rex.RXB repnz test (bad) add shlb stc pop and insb shll adc lea (bad) mov out rex.B jo pcmpeqw shr loope fldl in movsb outsb rex.R pop xor mov movabs iret mov (bad) gs or push jnp add rex.WR (bad) rex.WB xorb (bad) ror (bad) sti cmp test jrcxz repz xor add repnz sbb sbb add scas leaveq xchg (bad) rex.WRXB rex.B lret out xchg adc cmp fwait cmpsb add xlat mov addr32 adc and iret (bad) loopne jns in add notl and shr mov js (bad) std adc scas mov loop (bad) mov xchg jo mov sarl nop test xor add ds mov push dec mov push mov shll mov xor rex.WB pop add cld fisub (bad) jo mov shl (bad) sti loop ds mov push rcrl imul out (bad) mov or mov mov jo mov jns ficom adc pop sbb (bad) cli lods and cmp mov and push es xchg iret jno rex.WR retq and xchg xchg repz repz test faddp sub cmp fildll jbe adc (bad) xchg mov or and int stc or repnz rex.WX jmp movabs sahf repz sub push push fnsave (bad) cmp fldcw rex.RX je (bad) mov sar fstp (bad) mov push imul push sbb jrcxz pushq lods add rcll mov or pushfq cwtl lret adc test pop pop xor (bad) gs je enterq mov or out mov fnop pushq testl mov jae (bad) (bad) roll addb shll rex.W int mov or adc lret pop cmp rorl movsl or sahf xchg pushfq (bad) cmc rolb scas iret (bad) push cs sub icebp (bad) stc mov (bad) rex.WRXB nop rex.WB in add (bad) mov sbb xchg vpsrad jno and or (bad) mov push (bad) lret shld fdivrs test sub jno fdivrl add (bad) rex.X or mov scas rex.WRB mov in xor jp or movb pop and je add sarl xor negb sub sarb or push sbb (bad) stos callq add push icebp sbb pop mov rex pop cmp push add clc roll jb cmp mov jne (bad) hlt (bad) (bad) jp xchg sarl pop mov (bad) (bad) lea shll xor cltd movabs cmp rol adc jp xor sbb cmpsl lret (bad) (bad) xchg cmp sarl movabs xchg rex.R mov mov or test sbb loop and push xor scas rol mov fwait and insl frstor pop (bad) ucomiss sub rorb cmpl jmp (bad) shl and push xor rcrl movb and in xor (bad) adc rex.WB lret popfq xor jae movsl mul (bad) jb movabs mov add mov neg (bad) lret insb (bad) fisub ja (bad) inc xor sub add xchg mov cmp popfq test add push fnop out test orb xchg sbb (bad) fldcw rcrb outsl sarl ss imulb shl jnp pop pop cs mov fdiv fisubl iret push add cmp add jle sub scas iret leaveq xor rex.RX repnz test cltd lock sar callq (bad) (bad) pushq (bad) and pop (bad) (bad) xchg (bad) pushfq repnz popfq cmp movabs repz ror stc pop (bad) rex.WX pop mov or mov insl loop jmpq lods sub lret mov adc jb pop sbb cld lahf ss cwtl mov pop ds sbb pushq mov adc movsb (bad) fcmovnb imul (bad) stos (bad) sarl mov xlat (bad) adc pop mov sbb shll sbb (bad) push add gs mov shll callq rex add iret cmp jns (bad) imulb add mov (bad) fcomps add jo jae repz adc cltd rex.B xchg add mov mov hlt shrl and test negl cmpsb ror add repnz xchg rex.RB rex.B rex.WRB xchg movabs xor or (bad) shll (bad) cmpsl shlb mov (bad) mov xchg and rex.RB push add cmpsb (bad) outsl xchg xchg clc rex.R repnz idivl (bad) enterq pushq push rex.WXB xchg and mov idivl add std hlt leaveq callq add (bad) mov je in push adc rex.XB (bad) rex.B add sbb repnz out sar push jrcxz fisttpll (bad) (bad) loopne popfq (bad) out and mov std adc cmpsb lahf xor (bad) pushfq ror shl pop rex.R xchg mov lock sub sbb sbb fistpll pop (bad) out rex.RB sub add mov sarl mov rcll jo (bad) (bad) mov rex.XB mov repz sbb rex.RX (bad) loopne mov rex.B (bad) or rex.RX rex.WRXB mov out mov push in roll out add shrl addr32 (bad) cld pop lret test (bad) mov repnz adc sub stos pop cs xchg rorl stos insl shrl (bad) xor (bad) and roll cmp rex.WRB fcmovnb pop ja jne fsubs data16 vpsrlw mov sub adc popfq mov retq mov or add lods js in outsl pop add adc stos femms (bad) cmpsl hlt (bad) mov mov mov out xchg mov insb jle stos jp fdivrs jg (bad) callq hlt repz rex.B rex.RX pop movabs mov or mov push xchg shrl push (bad) pop movsb movabs add rex.X mov data16 mov fistp mov jmp mov je push in pop rex.WX mov sbb xchg roll in cmp shll (bad) out sar shll and add jg lret outsl or test push cmpsl out add (bad) (bad) lret lret js (bad) sub lods (bad) nop or sarl out ja sbb xchg sti rex.RB (bad) xor adc sarl xchg sbb rex.WX (bad) xlat addr32 incl add cmp psllq cmp imul shrl xchg leaveq adc cmp (bad) fcmovnb sub mov rex.X rex.RB add add (bad) (bad) xorl xor and push (bad) mov or sahf mov lods loop rex.XB xchg cmpsl rex.RXB add xchg lods and pop cmp pushq (bad) rex.WB out rol jnp loop (bad) jne je and loop cmp lret repnz mov test rcrl mov retq roll and sbb (bad) imul sub in cmp xchg rex.RB shrl rex.RX push stc lcall add fcmovb (bad) sub retq push cmp movslq sub cmp push (bad) (bad) (bad) xor outsb rex.WRX in mov fidiv shl xchg or je in mov retq movabs cmp (bad) sbb (bad) stos shrb jne ficoml or pop adc rex.XB (bad) (bad) sub mov jbe xchg sub movslq sarl push and mov or movabs xchg add mov out pop stc lret cmp movslq (bad) or push shll ror mov (bad) mov shrl sbb xchg decb rcrl sar adc inc xchg scas xor jae mov mov mov cld shrl (bad) xchg or movslq clc add adc subb xchg sti (bad) pop scas mov add rex.RX adc (bad) fadd sub sub (bad) fs test jno pushfq sbbl rol leaveq (bad) rex.RX lock pushfq xorl xor int3 (bad) (bad) (bad) cmova enterq movsb fisub rex.RXB (bad) repnz cmp mov xchg movl cld or rex.B gs jo rex.WX insl mov jge lret sub xor out repz js jne xchg sbb mov testl test stos repnz sarl data16 ja repnz in and sahf (bad) jnp xor addr32 movsb repz and ss enterq adc int stos mov shll or add orl mov sbb ffree leaveq loope lods or jae nop lret jge stc loope outsb jns add ss rclb mov rex.WRXB movabs lock (bad) push std retq add push push (bad) cltd addl sbb (bad) rex.WRXB push xchg repz lods or rclb jb rex.X mov (bad) idivl movabs xor add (bad) (bad) (bad) ror xchg fwait mov xchg shr adc fs (bad) repz add (bad) xchg sbb cs insb add je flds or and xor loopne and pop imul leaveq (bad) mov pop mov lahf lock add iret (bad) mov xchg rex.WB jae cmp xchg (bad) xlat mov lea rcrl popfq movsl mov retq and movabs (bad) xchg cmp jne (bad) data16 jnp insb roll add xchg test sub in mov mov add lret lods sub cld rex.WB sahf pop rex.RB loopne xchg mov mov dec (bad) mov push rex.WB loope add xchg (bad) (bad) add (bad) (bad) jl mov std lahf movb sbb pop push pop mov (bad) (bad) repnz sti fbstp add movabs sub shll push jno pop (bad) rex.R in rex.WXB test rex.B (bad) retq xchg adc rcr pop clc loop sarl icebp insl ror popfq cmpsl mov sub frstor shrl out pop sti int movsl or pushq (bad) sbb jp rex.WRB fs mov push jmpq jo add jb (bad) mov frstor rex.B rex.WRXB cmp ljmp in fstpl fsubl leaveq cmp and mov pushq rex.WB xor sarl fimul (bad) push sbb rex.R cld add jge add repz or fs sub push idivl sbb jns mov push (bad) cmp rex.B (bad) mov and xchg (bad) mov xor stos rex.XB adc or pop cmp js or lock loopne and xor stos shl jg jbe cmp (bad) mov or cmp scas cli rcll xchg hlt adc lret pop (bad) rex.RX loope rex.R in add rcrl fldcw shrl lret mov and add fs xchg xchg adc lret or xadd sarl fidiv pop pop scas (bad) jmpq rex.XB addr32 hlt mov roll rex.R sub and xor (bad) imul adc sbbl mov (bad) nop rorl cmp xchg lret test shrl rex.WXB cmp pop sbb or add adc outsb sarl (bad) mov jmp rex.X test sub or jne add sbb and and (bad) mov rex.WXB orb adc xor rcrl pop (bad) shl pushq int adc (bad) and sbb adc jno shrl ficom xchg movabs pop rorl adc sbb mov xchg jns (bad) rcrl jo movsl rex.RB add cltd rex.B rex.B lock mov movabs hlt pushq int (bad) jb cmp push cltd clc add push rex.RXB data16 gs (bad) (bad) rorl push scas (bad) cmc jrcxz clc data16 lret xchg (bad) shll (bad) or int3 jo movsb sub add mov rex.WRX sub (bad) std (bad) pushq loop rcll adc xchg mov pushq xor shr and sub repnz mov mov js cmp add pop jne add xchg (bad) mov repnz rex.B cltd shl and add (bad) lret out cs imul je pop add in jrcxz (bad) loope mov in xor rex.WR jns out fldl std outsl xlat shrl int3 in (bad) pop xchg mov (bad) in mov xor jb sub rex.WXB rex.WRB in mov push add xchg enterq rex.WX jmp ja iret sbb addr32 add rex.WRXB lea mov jmpq sbb xchg imull push out sarl clc push rcll rex.X add jbe,pn mov repnz sbb mulb (bad) insl cmp xchg (bad) loop out mov sub jbe and or jmp xchg add movabs (bad) mov and (bad) mov mov cli pushq add icebp movabs (bad) or js xchg (bad) flds and movslq mov rex.WRB rclb cmp mov jb cld lret add iret xchg lods je orl jmpq sub jmpq (bad) xchg mul sub sbb jno leaveq movd mov lahf movabs dec lret mov rex.XB out xchg and rex.B xlat test movabs or or rol (bad) and xchg iret (bad) mov or adc fwait (bad) sahf pop cmp retq test fnsave pop lret ja pop mull mov iret addr32 pop sti cmc rex.WB shll test sub sub jns xlat iret imul test mov stc mov pop add and (bad) lahf nop and adc (bad) (bad) iret mov mov insb test xchg cmpsb sbb orl pop jno xchg or xchg (bad) pop adc jae fxch sbb loope jge in (bad) xchg xor mov out sub and gs xchg rcrl in scas fnstsw ror (bad) movabs imul mov repnz rcll outsb xlat stc loope out iret sbb pop rex.RXB movabs push loope stos orl loopne outsb mov rex.WRX incb xchg rex.B (bad) cld or cmp (bad) (bad) sub sbb sarl fisubrl nop push xchg (bad) cmp imul sub shrl jle fisttpl stos push (bad) (bad) mov lea sarl xor mov rex.RX fwait in iret (bad) (bad) lret jo callq cmp mov shll jrcxz jmpq imul pushfq or jmpq rex.X cld (bad) fdivp ds adc (bad) shll pushq push jb pushq pop shlb (bad) sarl out iret mov jns pop rex callq sub (bad) mov mov sbb xchg sbb add fidivl rex.XB jnp shrl scas xlat xor mul (bad) out gs fdivl fdecstp push std (bad) ja xchg movsb insb rcr adc pop (bad) negl scas test sbb icebp sahf (bad) sbb shll pushfq rex.X rep leaveq fwait rex.WX rex.B xchg xchg pop roll jno or stc xor sub (bad) mov clc (bad) lods add mov jae cmpsb subl mov xor xchg add pop rcrl (bad) stc fcmove xchg roll add js sub cmp mov mov fadd outsl icebp sahf stos mov (bad) rorb add cmp (bad) je or rcll xchg lcall jnp rex.R out add sub (bad) xor (bad) lods insb mov cmp sub (bad) sbb (bad) sbb adc adc ds shl xchg rex.RX xor imul mov shr jae xor sbb movabs or jbe (bad) xor pop loop sahf hlt pushfq sahf pop rorl sahf push leaveq (bad) (bad) int3 movsb mov cwtl fwait rcrl mov (bad) test movabs jae std (bad) push pop subl imul xor push (bad) sarl in stc pop (bad) and mov mov (bad) xor or callq cwtl mov (bad) div roll xchg jle rex jno add lret push movsl in loope (bad) mov int jmpq shrl or cltd lock js cmc (bad) push xor hlt (bad) xchg sar (bad) (bad) jmpq cmp rex.WXB add xor rex rex.B sti sbb roll out add (bad) mov jb and fidivrl sahf std out and mov adc popfq in sub imul loop lret xchg movabs mov es outsl rex.XB mov jmpq (bad) pop pushfq sar in scas xor lret je and jge ds (bad) pushq jp loope (bad) adc jge roll xor (bad) rex.WR mov in insl and cmp nop movabs fnstsw movabs jmpq shll faddp pushq xor and int jmp out shll push jo scas cld (bad) std sahf rex.WX pop rcll xchg jge hlt (bad) shr (bad) sbb movslq sti pop imul fist (bad) rcrl movabs xor (bad) adc test (bad) roll pop lods pushfq rex.X in (bad) leaveq (bad) int3 cltd jb sub cmp cwtl notl jae add movabs (bad) (bad) roll rex.WX cmp (bad) cli (bad) (bad) loop add add rcl xchg andl cld push mov ja (bad) rex.RX data16 mov mov sar enterq and xchg (bad) shl in fbld rex.RB jnp sar movabs mov (bad) xchg lods jl xchg mov std push rex.XB xchg shl shrl sub repz cmp jno xor xchg pushq int3 mov sbb rex.RXB rol add lods rex.R rex.RB fwait xlat faddp (bad) imul or lret rcrb add pushw stc mov (bad) mov cwtl rorl outsl add movslq insb callq add movabs rcrl ss and out rex.WRXB cmp loop mov (bad) rex.WX sub (bad) repnz ds roll xor lods mov cld rex.RXB (bad) sub shrl (bad) sbb (bad) cmc adc mov in mov loop jl or and (bad) (bad) and loop je jmpq scas sar mov pushq loope movabs mov jmp rex.RX mov imul (bad) cltd rex.R xor pushfq (bad) lods outsl jle lret mov lods mov (bad) push (bad) cmp push xor mov fwait (bad) ss (bad) in add cmpsl cmp jno fistpl mov (bad) repz test sti xchg and and cmp xor shll mov ficom sarl mov repz movb (bad) pop in cmp (bad) cltd loop jae jns rex shrl lret (bad) rex.WB shrb repnz push xchg movsb xor cmp rcll addr32 stc cwtl (bad) cmc scas repz mov je push std callq and mov rex out (bad) mov mov sarb retq retq fsubs movabs shrq (bad) (bad) mov test pop or xor out or cltd (bad) ja retq out jge (bad) roll in mov loopne rex repnz insb rex.RB fs (bad) cmpsl or rex.WR pushfq out xor lret and addb test adc rex.WRB push (bad) mov rex.X push jb popfq js (bad) mov fistpll fistl cmp rex.B mov rcrl rex mov callq xchg push xor rex.B mov nop fs sub cli jle lret sub sub xchg (bad) and repz or rex.WRX adc movabs retq (bad) and leaveq mov and jns fs xor xchg sbb pop (bad) adc js mov and negb shrl jmp leaveq addr32 rex.X testl or in xchg outsb mov pop (bad) repnz xlat data16 sbbl jo in fidivr rex.RB rex.WX (bad) shl testb cli and sub stc mov roll retq lea adc xchg shrl xchg int sub hlt lahf cs cmpsl pushfq sar or (bad) xlat shrl add rcll rex.RB cmp out mov pushq cmp mov mov std or jns (bad) repnz (bad) mov or movsl shlb scas pushfq (bad) cmp pop or pop jns,pn in (bad) xchg and adc rcrl xor pushfq sub mov pushq sarl sub out push in pop shll js (bad) ror nop lock out stc rcrl (bad) (bad) xchg cmp or stos sti jg xor pushfq cli insb shll (bad) cltd hlt inc rex.WRB addr32 (bad) mov adc repnz or lods sarl ds hlt clc push movsl xor rex.R xchg rex.WR push add xchg clc fildl push mov mov and rorl lahf add (bad) mov (bad) sti es (bad) pop xchg (bad) pop jrcxz or and and cmp retq fcmovb sub leaveq cs (bad) (bad) in (bad) xor mov repnz xchg mov iret (bad) movabs rex.WX sahf rex.XB shll fisub int3 (bad) rex mov sti roll xchg (bad) shrl mov (bad) xor mov out and sarl rex repnz xchg jmpq xchg mov enterq (bad) rex.WX (bad) sub jp sbb pop (bad) out rcrl mov sarl pop sbb and popfq (bad) and cli pushfq int rcr mov sub (bad) movslq jge shl xor pop (bad) (bad) or lahf orb rex.RXB (bad) mov xor loop (bad) pop add (bad) mov mov and push out pop (bad) gs (bad) rcrl and jb in mov addr32 jne test out shr jl es hlt outsb add addl add push lret fsubrs lahf adc cmc cltd (bad) xchg sarw mov or in (bad) xor (bad) rclb push cmp movabs movabs sti sbb rcrl rex.WX insb repz (bad) movabs movslq mov jmp leaveq mov retq rex.RXB neg pushfq pushq shll cmp mov (bad) int3 xor (bad) nop mov sarl sub rcll (bad) repnz (bad) insl mov xor sbb rcl rex.W cmpsl add in pop jo fsubrp cmp fldl sti rex.X fisubr xchg jrcxz movabs xchg int3 (bad) hlt pop adc je mov jne (bad) cmc rex.B (bad) cmp cltd mov push scas (bad) (bad) popfq insl xchg rex.B mov cmp popfq in fwait std (bad) lret pop movsl jne push ds rex.WR rorl pop insl pop and rex.WRX sub or or mov cmp jp movabs xchg (bad) mov add jl rex (bad) and jno stc xchg xchg std mov stc fsubs (bad) lahf or sub sbb rex.RX movsl sbb in adc (bad) pushfq orl push (bad) fcomps shr rex.WB cmp (bad) (bad) jmpq xchg test ficoml (bad) ja imul rcrl retq and je roll es rex.WXB rex.WX mov jo (bad) pop ss setne (bad) cmpsl sbb or mov (bad) xchg fadd ds insl pop clc (bad) movabs cmc xchg (bad) pushq mov add push rcll jg xor retq sbb (bad) in (bad) (bad) (bad) xor (bad) cmp pop (bad) nop fnstsw mov jmpq lock sub mov data16 imulb and (bad) (bad) mov addl (bad) cmp (bad) jmp fwait movabs add out add or jl lret xchg int sub rorl notl or cld (bad) adc xchg jae retq cli int3 in shll movsb (bad) push (bad) (bad) test pop (bad) mov pop imull add jns cmp add ds add int3 mov subl lret add movslq rex.R mov callq jp jns pop sbb lock add jl push and lret add jno cmp rcll lods add fcompl pop vaddsubps fnstcw fcomi jrcxz jp pushq adc loopne sbb jrcxz sbb cs mov scas jle ss (bad) push push sub cmp (bad) rex.WR push notl std mov (bad) insl rex.X (bad) push push push adc pushfq (bad) jp and enterq rolb mov test ror xchg sahf rex.WRX js (bad) popfq adc (bad) cmp movabs lock pop xchg decb jp mov mov (bad) fisttp xacquire rex.RX mov (bad) cmpsb mov pushfq or mov fadd cmp or repz or xchg xchg xchg mov xor or (bad) jno stos push xor in dec sub data16 movabs clc pop adc cltd lret insl add rol rex.WRX rex repz rcrl in hlt jno fcoml outsb push adc mov (bad) fsts jg mov jl,pn mov xchg in sbb loop mov std loop stos lods leaveq out push in mov mov rex movabs pop fiadd jns sahf (bad) in inc cltd jne jp lret movslq shl popfq std adc mov rex.WR ss mov rex.B fsubl callq rex.WRB xchg cld loopne jbe insb and rex.WR rex.WXB add rex.W fldt outsl cmp pop add enterq add push mov push (bad) cmp push mov sbb push (bad) (bad) (bad) (bad) push out lret cmp (bad) ds nop mov roll adc sbb or fwait add mov out xchg mov retq je sarl mov rex.RXB clc (bad) fs mov xchg js fnstcw insb addr32 add loop test adc mov mov sub leaveq rex.B lock subl (bad) push mov (bad) in xchg sub es (bad) rclb mov out add or stc test xchg retq scas sbb sbb xchg rcll (bad) nop int3 stos mov xor jnp and (bad) (bad) rex.B sbb (bad) out adc and je repnz (bad) or out enterq fbstp (bad) mov sub ds rex.RX mov or and add adc out add (bad) rorl out (bad) sti popfq repnz sbb or sahf (bad) (bad) repz int cmp jle mov rex.X repnz xor add cmc movabs push xchg push (bad) xor mov rex.WRX out jl rex.R lahf jg fcmovnb (bad) jle andb test out cmpsb or popfq jnp xor test rorl add xor mov mov cmc vpaddq adc and ljmp rex.RB cmp add insb rex.WRB rex.WR retq mov cwtl (bad) rex.RXB jrcxz in cmpsl xorl xor rcrl scas mov lret lea in (bad) adc out rcr xadd cmp jmp and add sub cmp xchg shrb xor roll jp mov rorl rex jae lret adc xor xchg movabs callq shrl (bad) mov shll retq sub sarl xchg sahf movslq xchg movabs lahf roll fiadd rcl fs mov adc add push ljmp xor int movslq out rex.RXB (bad) callq mov jrcxz std sbb (bad) and mov cli rex.RB shll repz (bad) xor out rex.R jmp std (bad) stc mov cmpsb mov (bad) adc (bad) (bad) roll cmp mov montmul cmpsb rorl (bad) sbb sbbl rex movslq movsl (bad) mov mov mov (bad) jne add sarl mov rex.X shr addr32 int cmp sahf add cmp xlat retq xchg cmp (bad) or (bad) mov cmpsb add js (bad) lock test test repz js (bad) out push push outsl (bad) sar jl mov rorl rex.WRXB rex.RB stc (bad) lock pop ror int mov icebp popfq or cmp in add rex.WXB (bad) xchg mov adc push movslq (bad) xchg rcrl sub mov cmpsl or movabs jmpq sbb movabs imul (bad) loop jns (bad) pop or retq pop rorl adc rcl fbld roll pop xor sbb jl scas test (bad) (bad) orl rex.WB or xchg lahf out enterq xchg or pop movabs rex.RB roll movsb xchg fimul test (bad) push jno out in movsb in (bad) out rex.B out pop loop rex.R rex.RX in frstor retq roll test imul add (bad) mov jle lahf add loopne stc rex.B ds or test jrcxz xor jp cmpsl repnz cs add insb mov adc (bad) jmpq (bad) and pop insl jge stos es movabs repnz (bad) xchg cwtl mov fadd sub rex.R rex rex.WRX cmp (bad) push (bad) cltd repnz sbb in mov int3 (bad) or (bad) retq xchg or rex.RXB test (bad) btc cmc rex.RX outsb pop fwait (bad) cmp adcl sbb adc lret or (bad) in pop push (bad) or (bad) test std ss add (bad) push lods mov fsubrl (bad) fild fwait iret out (bad) add imull xchg add rex cli add bnd pop mov in lret sub stc retq add push in out xchg rcrl lret and imul repnz push cmpsb push cmp or int movabs jg and in jae rex.WR add (bad) (bad) sbb cmp (bad) xor jrcxz iret rcrl or sub sub mov xchg lods sbb sbb mov (bad) and sub xlat jne xchg rex fs mov add xchg xchg data16 fcompl rex.RX rex.WXB jns ror (bad) lahf fnstsw (bad) lea shrl rex.X (bad) or rol jmp rex.RX jl,pt std je fiaddl mov (bad) cmpsl mov or (bad) or movabs mov je (bad) jbe outsb subl (bad) mov cli pop xchg adc (bad) xchg xor adc test shl jnp movabs (bad) sti int (bad) lock loop mov adc mov cwtl divps adc rex add mov adc pop movabs cmpl rol cld or mov int pushq rorl lret jge jns (bad) movabs sarb pushfq xor sub push pop cmp jno jne mov nop mov xchg xchg sub sbb add cmp rex.RX fdivrl rcrl or imul xor cmc pop mov andl rorl jp in cmp (bad) lret ror lock xor add (bad) test out (bad) sbb sub loope adc and stc pop clc mov in sub mov pushfq ja mov (bad) mov outsb (bad) (bad) mov sub sbb roll push (bad) test mov mov icebp rex.WRXB adc (bad) add add cs jnp sub fldcw test rcr xlat (bad) fisubr (bad) and loop xchg imul shrl sub jle adc sub jo or mov add (bad) pop xchg rorl lahf je,pn pop (bad) loope sti rex.WRX pop rcll movabs rex.WXB ror (bad) jmp movsl (bad) mov js cli lahf rclb mov adc lods jle lea (bad) sarl loopne xchg cwtl movslq rex.X mov rex.R addr32 (bad) cmc push xchg (bad) pop int mov push stc sbbb jmp mov (bad) (bad) (bad) push xchg out cmp and lods jae adc rcll add icebp pop cmp pushq out shll out (bad) (bad) mov jo rex.XB add neg mov fisubrl adc pop pushq rex.WRX push shll (bad) mov rex.WR xchg rcrl rex.WRB rorl movabs mov lret lret pop rex.WRXB (bad) cmp mov adc scas jns mov (bad) movabs add rolb insb lea callq mov xor (bad) pavgw jrcxz cmp int cmc mov cmp xchg cli xchg out sbb in cli movsb (bad) (bad) vlddqu (bad) add pop adc in sbb and js movslq out mov mov rex.WRX jmpq leaveq addr32 rex.WR scas (bad) outsb ss jbe sub xor clc int xlat lahf jl nop and xchg mov notb adc sub add xchg cmp and add rex rex.WRX repnz stos jno (bad) sbb rol movabs cmc add (bad) mov push or adc pop xchg mov rcrl scas (bad) lea rorl (bad) scas rex.WRB (bad) shll mov (bad) mov adc jnp rex stos rex.WXB int3 adc test jb or adcl mov lods lahf add push enterq (bad) or shrl sub (bad) repz or pop pop movb or rorb (bad) xor (bad) (bad) mov adc xor cmp hlt rex.WRB rex.X in rol mov adc mov (bad) rorl add rorl outsb sbb xor int3 out outsl repnz rex.RX push rex.RX (bad) xor ffree sub iret in cltd jg rorl sahf div mov sub xchg (bad) jmpq push lret je mov ja (bad) fmul cmpsl or mov pop rorb imul (bad) rex.XB movabs pop leaveq andl cwtl ficoml pushq (bad) decb mov push in (bad) (bad) (bad) rex.WX (bad) repz cmp rorl mov (bad) loop stc rex jmpq js (bad) pop mov rex.WRX xchg movsb scas (bad) callq shr rorl shr cli out jge rex.RB repz xor adcl rol movsl push cmp jnp pop enterq movabs mov pushq xor pop int fildll jae scas imul fcmove in mov (bad) xor mov roll cmc popfq shr sbbl insl test (bad) (bad) cmpsb repz rcll retq push sbb out xchg mov lret loopne (bad) jne cltd cmpsb rorl js repz (bad) xor lahf mov xchg pop add xchg movabs xchg mov xor shl and (bad) cmp ror roll fisubl xor std and cs rcll movsl pop xchg (bad) jg xchg lods movsb fwait rcl test outsb callq iret mov loop cs (bad) sbb outsl or pushq mov int sbb in repz fs (bad) sbb loop cmp and rex.WXB adc or test xchg xchg lcall mov add mov and (bad) push std or imul sbb (bad) repz ss sti shrl fidivrl jg out jne pop cmp shl xlat mov add xchg (bad) fwait rex.WRXB mov idivl (bad) stos repnz ds rex.XB movabs (bad) cli or xlat xor rorb jge (bad) mov mov mov xor sub (bad) test add test clc (bad) sub pop sarb sar adc jle add rex.R rex.WR lock sahf iret (bad) enterq xchg int3 callq jnp pushfq js mov sub sub (bad) or rex.W rex.WR (bad) cmpsl movsl (bad) adc mov push or xchg insb enterq xchg xchg (bad) mov mov fidivrl movslq push rex.WX push in imulb and test (bad) movsb cmp hlt test sbb (bad) sbb gs xor loop rclb pop xchg (bad) jo jns (bad) jno out movabs pushq leaveq pushfq xchg xor outsl xor insb pop (bad) lret add add (bad) jne subl lret retq (bad) (bad) gs rex.WRXB add mov sbb rex.RX rex.WX rex.X test and xlat leaveq lea rex.R and mov out in pop outsl pop out xlat rorl and cwtl stc cmp lea mov push addl xchg rcl sbb (bad) movsl add or repnz pushq rex.XB fcoms mov sub mov mov xchg (bad) movabs repz fsubrl xchg shll (bad) and (bad) roll push lock add jbe xchg lea mov rex.W sbb (bad) rex.WRX mov test cs icebp test ja lret rex.WRB xlat jle loop test mov mov fstpl add lret in outsb add xor (bad) or stc out mov xchg sahf mov pop rcr jrcxz sbb (bad) imul push (bad) sbb (bad) cmp xor fisubrl fisub or data16 shll or sbb pushq xor ss mov add or and stos mov (bad) mov jmp xor cmp jl xlat int imul xchg insl sarl sub xor (bad) adc lahf movsl add push in mov insl push cmp add sbb pop xchg (bad) jno and rex.XB xchg jge lea rex.X cwtl repnz movabs pop fwait fwait stos movabs popfq in out int adcl es loop push cmp rex.WRX scas (bad) mov cltd outsb sar je xchg and retq movabs mov (bad) rcll pushq nop and sub imull (bad) movabs cwtl xchg (bad) rolb mov jbe insb lret jae adc mov out xchg rex.X mov lods (bad) sbb rorl enterq pop movabs bnd movabs cmp sub cmp sub shll movabs sbb cwtl leaveq movsb std (bad) rex.WX (bad) xchg rex rcll cwtl mov jp (bad) xor or lods xchg shl jo jle je mov (bad) (bad) in (bad) cli adc pushfq rex.W rex.WRXB rex.B (bad) loope vorpd stos add pop (bad) lret test (bad) std mov sarl loopne (bad) and mov adc cmp sbb adc fdiv (bad) adc rex.RX rex.RX cmpsl mov fldl add test rol lahf xor sub push (bad) rex.B xor push cmp jmp add lret rex.R rex.WRXB xor jp outsl (bad) int or xchg xchg add (bad) (bad) cmp xchg (bad) sbb xor xor xchg (bad) negb mov mov pushq jns add mov cwtl xchg xchg sti ja jmpq rex.WXB sub repnz xchg hlt out movabs (bad) in fidivl xchg idivb movabs (bad) in mov or rcll (bad) mov push jo gs (bad) fwait rex.R add adc loop scas add adc lret rex.RX cmp or callq outsl int movabs rex.WRX rex.B pop movsl rex.R cmp in push rex.RXB out xchg rcrl cwtl scas sbb fadd (bad) rex.XB (bad) xor jle iret rex.WXB (bad) add pop pushq imul (bad) jg rex.RXB mov sbb enterq rex.RXB adc rorl sbb pop cmc xchg jns (bad) push rex.WR rex.WXB (bad) test test fbstp es (bad) push adc or popfq (bad) js imul (bad) sbb test mov add cmp out fmul cmpsl scas shlb xchg add mov adc mov scas lret pop loop lahf (bad) (bad) movb mov mov retq rcll loop cltd lret vpcmpeqd addl mov push pop (bad) ja repz loop (bad) jae mov rex.WRB jno xor xchg cli mov mov (bad) jmpq rclb fdivr (bad) fdivs int3 fildll and cmp add movsl clc jrcxz adc or or mov subb lea movabs xor push (bad) sbb xchg xor mov jrcxz add in (bad) xor (bad) push xchg (bad) adc retq fldl sarl lods pop mov lock (bad) rex.WRB je pop mov (bad) jmpq sahf or int mov xor stos push rcr (bad) (bad) mov pop mov pushq ror (bad) xor mov rcll sbb lret pushfq add lret add adc mov push or stc jp (bad) mov (bad) xor lea (bad) mov imul loope lahf adc push (bad) test (bad) mov and je sub fucomip or xor insl mov (bad) jl cmp mov add mov rex.WRB push (bad) jmp sha256msg2 rex.WX lea loope in mulb faddp movslq and jae (bad) mulb add fnsetpm(287 retq pushq shl adc enterq sub adc (bad) in lahf push cmpsl rcll negl mov int3 std data16 push cmp lret movabs mov in callq movabs lahf (bad) rorl jge rorl add mov or roll (bad) adc fld (bad) retq addr32 (bad) repz (bad) movabs adc cli push jrcxz in adc jns jnp test mov mov movsb lret jge vcvttpd2dq push or sbb mov lret pop push mov xadd pop movabs repnz push pop test retq (bad) (bad) fnstsw (bad) jmpq sbb movabs iret sbb rex.WRXB xor adc mov push pop fadd jns subl jns movabs add xchg shrl mov cltd (bad) sub push cmp (bad) and fidivrl or iret out (bad) (bad) mov ds cmp adc rex.WB jnp pmulhw (bad) and incl mov xor sbb retq rex.WR jg (bad) rex.RX (bad) cwtl mov jns std cmc sub fwait rclb xor popfq (bad) (bad) ss push outsl in xchg insb shll and jne (bad) shrl mov (bad) outsb rex.WR gs rclw repnz punpckhbw (bad) pushq stc adc mov leaveq jo out (bad) lahf movsl fildll jns sub pop (bad) movabs stc push or fadd add (bad) lahf pop int3 pmaddwd nop mov xchg vpunpckhqdq and out rex.WB jmpq mov int retq rex.WB je xchg cmp sarl (bad) jmp pop and (bad) rex.RB movabs nop lea lahf scas mov mov push out mov xchg (bad) mov (bad) (bad) mov int3 in jg or (bad) mov loopne std callq movabs rex.W (bad) adc sbb lock retq sub xchg lods jo cs in enterq scas movsl or (bad) stos (bad) (bad) stc sbb jl mov sub out mov movabs push jns or (bad) test insl mov pop in loopne pop pop fsts stos scas lahf or adc loope lret cmpsb enterq adc stos cmp fbld roll fstpt retq (bad) int3 rex.W (bad) jmp (bad) cmc xchg in sbb add add mov add (bad) (bad) stos (bad) (bad) mov negb push jrcxz rol jbe (bad) std lea callq xchg leaveq push mov jnp movsb cwtl (bad) movb mov (bad) int in stos adc iret fs rolb lods (bad) (bad) out and mov and cmpsl psrld (bad) jns or icebp pop mov test sub movabs jno rclb shll add outsl lock (bad) rex.B xchg test xor movabs imul mov out jl pop lret (bad) (bad) fistl mov scas loop negl cmp jrcxz stos gs (bad) (bad) (bad) ss (bad) or repz or mov fldt xor clc (bad) sarl add stos (bad) xor sbb (bad) fdivs insl rex.R (bad) sahf sarl retq (bad) loopne xor (bad) push xchg (bad) std adc pop orl (bad) leaveq and (bad) (bad) rex.WRXB mov lret loope add jl pop retq cltd emms lahf iret fildl mov fwait xor movabs sub push test stos jge (bad) mov retq std lahf divl pop callq cmp imul rex.WX (bad) (bad) rex.R scas (bad) leaveq test mov lret sbb (bad) mov rex.RB push mov stos pushq rex.WR sti mov je push (bad) xchg (bad) (bad) rex.WR (bad) rex.WRX or (bad) lret or sbb (bad) std mov pop or stc addr32 decl push fld (bad) (bad) rex.RB cwtl adc sbb cmpsb or int cmp enterq xchg test pop rol adc js sarl jne callq mov mov (bad) rex.WB cmp pop sub lret retq lods and nop jns jle popfq sbb imul subb js mov movabs jle mov (bad) (bad) repnz movslq push ffree jg mov outsl jae sti rorl fcomps (bad) pop xchg enterq (bad) push and rcll mov (bad) mov adc rex.B push (bad) repz rcrl imul xchg popfq test rex.WXB (bad) cld pop rex.RXB push (bad) fwait xchg rex loope mov popfq test (bad) add stc and (bad) (bad) mov out mov (bad) insl sti pop xor push jp int jae rex.RB (bad) fdiv sahf iret xchg sbb mov loope imul mov jge sbb adcb cld push gs imul sahf sub mov push scas xchg cmpsb lods (bad) fcomi and (bad) mov jo adc repnz push mov idivb adc add jge and or sbb sub xchg (bad) lret rol push jrcxz push adc callq xchg and (bad) pop (bad) negb (bad) rex.WRB (bad) mov fs fidiv decb and cmp mov test imul andl movabs rex.WRX in roll and adc movsb lret movsl mov (bad) mov adc push xchg (bad) (bad) decl jl fucomp mov (bad) mov rcrl movabs rex.RX shr and or test cmp jbe add or add stos mov rol rex.WXB movsb (bad) sarl enterq (bad) and out clc pop ror loopne rex.B xchg mov inc movabs sbb jge push out pop stc (bad) add jg mov insb sub roll out loope stos push roll (bad) jae insb or rex.WRX int3 jo push sub out lock rcll ss rcll or (bad) sbb xchg jg pushfq test test cld (bad) mov test rorb xchg mov (bad) mov cltd xchg movb fisubrl fs data16 ds mov xor lahf orl add rex.WRB (bad) (bad) sbb xchg add mov sahf rorb (bad) mov cmp jb shr ja adc xchg xchg sarl and stos int3 (bad) cmp cmp sub ss jb (bad) in (bad) mov sub (bad) and (bad) jno (bad) xlat lock xchg or out sub cwtl icebp mov testb loopne je (bad) leaveq add shr outsb icebp out (bad) adc in pop xor mov imul fcomps xchg loop sarl pop retq (bad) sub fcomi rcl sahf pushq pop (bad) in xchg repnz sbb xor out int3 (bad) sarl outsl rex.WRX push jge (bad) ja movb xlat sti mulb callq jge mov int3 movabs or int (bad) stos (bad) fwait rclb enterq cwtl movabs movsl rcll (bad) ja rex.WXB out mov shl jno (bad) fldcw rorl xlat test and jae mov in out xchg mov jg sarl cmp cmp mov hlt rol loope xchg mov jmpq rex.WX int3 (bad) clc retq sbb roll or rcrl cltd and leaveq div (bad) pop xchg shll enterq rcll clc hlt cmpsl (bad) scas jp cmp rcrl lea roll (bad) incl cld xchg sub iret pop sbb push lret cmp add push mov mov lret hlt rcrl add (bad) mov xchg sbb lock lret outsl sub push (bad) clc rorl shrl cltd or jae rex.WRXB mov ror add (bad) jae sbb roll push (bad) lret out sbb jrcxz lea xchg mov and sti shrl rol (bad) pushfq cmp jmpq (bad) insb (bad) movsb xor imul outsl and mov (bad) rex.WRXB rcll leaveq sahf sti pop push add loopne rolb roll push jp loop lret (bad) imul lcall jl in mov mov lret mov loop push and pushq cmp xor (bad) orl (bad) roll lahf adc rex.WX lret retq fwait add mov loope pop sahf mov xchg jae sub lahf add rcrl cmp cld cwtl pop add movsb jns test cmp movabs rol (bad) sub rex.WX mov lods (bad) lods xchg imul cwtl repz pop bsr mov (bad) xchg sarl xor cmp rcrl hlt pushq jnp and out and lock and xchg movsl scas lahf jg rol and rcr imul (bad) (bad) (bad) loopne sub sub (bad) cwtl xor pop (bad) jl mov cmp sahf lock subl out rcrl hlt xchg or rex.WX test mov mov sub lahf repnz shll out sbb and mov or adc rol scas xor rex.WB xchg jle in ds shll rcl jg mov icebp and retq in rex.XB xchg rex enterq stos leaveq (bad) out pushq sub rcll (bad) lret in es fadd pushfq (bad) xchg or pop ss rcll pushq pop add rex.X movsb imul ja (bad) cmpsl cltd gs sbb sbb rex.WX js and lea (bad) (bad) sub fldcw retq add outsl xor clc mov (bad) movabs rex.R cli int movslq cmc out jne insl (bad) mov mov test js rex.X fisttpl lods rex.B jno rex.WRX rex.WRXB jmp sarl stc (bad) mov xor (bad) fdivl mov in push push rex.WX xchg pop sahf (bad) clc mov (bad) int or loop xchg jmpq imulb icebp and notb rex.WX rex.RX lahf xor retq test repnz rolb rex.WB fcomp cltd movabs jae rex mov sub movabs (bad) jg js (bad) (bad) (bad) jnp mov pop pop movabs rex.W addr32 insb retq rex.R rex.WRX rex.WR movabs repz sbbl fisubr movsb rorb out imul pushq push xchg add hlt lret repz (bad) negl rex.WX rex.B (bad) ds pop cltd out or (bad) hlt mov rex.WXB out mov xchg rex es push pop jmpq mov retq cmp movabs rex.W retq mov mov (bad) (bad) adc leaveq movslq pop faddp hlt or mov adc sti iret (bad) sub fstpl jmpq je scas lret lahf push sarl movsl (bad) hlt or pop fdivs jmpq sub (bad) leaveq pop add shrb (bad) scas iret (bad) push push (bad) mov adc (bad) rex (bad) mov jne (bad) out jrcxz xor xor xchg imul jbe xor rex.WXB fisubr push test movabs rex.RX rex.B rex.WRX (bad) jno shrl (bad) insl push stos test xor push rol push rex.WXB pop rcr ss shl pop stos jnp fisub test mov rex.WB mov out rorl rex.WRXB or lahf (bad) mov test movabs adc sbb xadd ja xchg cmp jmpq cli js mov rex.WRX fist ror xor clc std add je lea hlt rex.X cs or fs test cli fwait mov add (bad) ds jo sbb loopne out (bad) and (bad) imul lret mov or (bad) xlat sti enterq or sahf xchg (bad) addr32 rex.WRB in fistpll jno lods sub or and or xchg (bad) pushfq rex.WXB adc movsl and mov (bad) (bad) rcrl insb xor and rex.WR xchg shll iret push movslq in xchg rex.R or xchg repz movabs sub (bad) hlt movsl or or cmc mov jle rex.WRX sub rcll rep movsl sub rcrl (bad) (bad) and or ss andl xchg shrb jns retq pop sbb rex.WRXB rex.WX out rcrl sarl out cltd cmp stc add cmp (bad) std (bad) (bad) jbe je (bad) jnp add rsm cmc and push jrcxz (bad) (bad) movabs pushq rex.R cmpsl mov cmp rex.RB addr32 adc mov xchg xchg or xchg int jmpq repnz jge stos sbb faddp mov callq (bad) movabs cmp (bad) rex.R add shll insl mov adc xchg stos cmp add pop cmpsl loop (bad) (bad) rex.WRXB push jg rex.WX jo rex.WRB (bad) cmp lods pushq cmp or adc movabs test (bad) test mov mov jge movsl int sub xor fnop rorl push (bad) shl jno movabs decl js (bad) and (bad) mov mov mov ds test subl mov rex.RXB cmp scas incl faddl pushfq inc rex.WX mov lock (bad) in retq sub rcll jae rcll cltd rex.WRXB test xlat rex.WX (bad) (bad) fcmovb gs adc loope (bad) and divl es and cmp mov and hlt xor repnz pop movsb mov rex.XB repnz sbb mov (bad) (bad) mulb xchg xlat cmp icebp or (bad) rex xor mov add enterq jo mov pushfq retq jg lods cmc leaveq rex.B icebp sarl ss (bad) sbb pushq push xchg sub iret out int push add rex.WRX rex.XB mov sbbl std (bad) add jge retq push add (bad) and ds repnz rex.R push (bad) movsq push jmpq enterq or (bad) data16 out callq xchg test (bad) int3 mov push test gs rex.B repnz imul mov test rolb gs or out cmp (bad) loopne (bad) push (bad) sbb or (bad) pop movslq retq stos (bad) cmp ror pop rex.RB xchg (bad) rex.XB rex xchg outsl (bad) cmp rcrb mov mov icebp cwtl adcl outsb lret mov xor jns xlat mov out pop callq add stc xchg insl mov out rex.B mov rolb vmulsd add out adc (bad) xchg or sbb addr32 sub adc pop cmp hlt xchg insl cs fsubrs movsb cmp push rcll int jo cmp (bad) xlat shll (bad) int3 cmp nop xchg pushq cli rex.WX imul adc adc movabs rex.RB (bad) (bad) push out cwtl push stc sub xchg xchg test retq jrcxz (bad) rcrl cmp pop xchg (bad) (bad) movabs adc xlat (bad) pop xchg sbb xchg mov pushq mov mov xchg mov scas mov mov (bad) mov (bad) xor pop int3 jrcxz rex.WRXB (bad) xchg push dec mov add (bad) fnstenv rex.WRX repz push (bad) outsl popfq sarl mov rex.R movsl out (bad) mov xlat vcmpss pop (bad) adc out (bad) lea (bad) xchg adc retq add add pop rex.WX pushfq std nop callq (bad) sarl pushq repz pop push clc imul fisubrl add add cmp pop or movabs sahf enterq cs sahf (bad) mov rex.B decl mov outsl mov insb jle (bad) rex.W repnz xor cmp roll vcvtsi2sd or rex.B lock cmp jmpq ffree callq ja (bad) movsb rex.RB adc add add roll callq pop xor push add mov push movabs lret (bad) sbb cmp fbld cwtl jo in shl xchg (bad) (bad) sarl (bad) mov shrl xchg sti xor and (bad) jo pushq (bad) (bad) insl loope (bad) shll rcll xor adc mov scas fcomi xchg mov (bad) push cmp (bad) (bad) (bad) xlat andl xor rclb (bad) negb out mov (bad) cmpsl jnp callq fiaddl outsl int3 rex.W mov mov loope cmp (bad) cmp or popfq xchg adcl lock cwtl rex.RXB jmp lahf (bad) fcomip (bad) enterq (bad) adc repz lret (bad) jo push mov rorl cmp mov lea (bad) add fidivr (bad) rex (bad) rcl rex.WRXB (bad) and (bad) jns jrcxz jae fnstcw stc jp movb add scas add gs (bad) xor flds jg clc rol (bad) pushq (bad) sub cli sarl shll rex.W xor push sub lret cmp icebp cmpsl ja sbb je xchg shrl int pminsw (bad) movb rorw (bad) jb sub test xor xlat addl movslq outsb mov fs movabs add mov (bad) mov pop movabs negb and insb insl sbb xchg sbb movslq mov jns ds rex.WR icebp imul xor adc rex.W sbb (bad) adc and rcrl mov cwtl adc mov in jae lahf insb and push mov enterq mov rex.RB cmp (bad) push out rex.RB fnstenv or cmc jno test callq movabs lret adc rol pop mov xor cmpxchg out rex.WRX and rol or (bad) shlb mov fadds (bad) rex.WR rex.X and sub sub xor pushfq in jbe pop rex.WXB int3 or es enterq imul (bad) push enterq sub push jmpq jno mov fdivl enterq mov jp,pt push adc shll (bad) ja in retq (bad) and mov jns pushfq mov subl (bad) xor xor sub (bad) (bad) mov mov (bad) (bad) (bad) cmp (bad) xchg jrcxz (bad) vldmxcsr in jmpq adc adc shll (bad) jb xor and (bad) repz stos or cmp mov xchg jne ja movabs and xlat push or (bad) enterq lea imul and rcrl scas push cmpsb repz jbe retq adc rex.X (bad) shrl ficoml cmp std fsubrs cmpl rex.WRX rex.B (bad) sbb cld mov rex.WX pushq out rex.B scas (bad) mov mov xchg iret cmp lock mov scas vmread shr xchg mov hlt mov rclb rex.RXB (bad) int add adc loope test adc mov lahf push rcl (bad) je movsb add jge rex.X jmpq test adc adc xor jb sub jmp rorl (bad) retq cmpsl push sub nop cmp (bad) cs rcll movabs movabs xlat (bad) rex.XB rex.RXB lret mov je (bad) mov jnp (bad) cwtl nop idivl mov fimull xlat xor push loop and (bad) cmp in mov xchg or xchg sahf mov adc jne pop incl (bad) mov enterq add mov fwait jno mov xor cmc cmc rex.W rex.X repnz js jns add clc fmull or and rolb roll jp iret (bad) rex.B cmc int (bad) scas (bad) jbe sbb xchg sub (bad) cmp divb mov (bad) nop adc and and (bad) xor stc cmpsb rex.R (bad) in sub cltd icebp rex.W xlat clc movabs lret (bad) leaveq sub rex.WRB and fsubrl int3 rex.RX rex.WRXB add xor mov int3 xchg (bad) pushq cld xor xor xor (bad) add subl cmp or out (bad) lea outsb (bad) popfq mov es (bad) dec jp lretw rex.WRX fildll push rex.X movsb xor pop rex.WRB rex.WRXB sbb xchg es rex.WR rex.WRB (bad) cmp (bad) shlb callq sbb or rex.WRX insb loope loope mov mov lret xor sbb icebp pop rorl (bad) jae xchg xor and mov (bad) rex.R mov rex.WRX xchg jle rorl (bad) sbb mov rcl cmp and and (bad) (bad) (bad) insb jmpq sbb push rex.X jae (bad) movabs mov rex.WRXB jo xor stos outsb rex.X rex.RXB rex.WRX and cvtps2pi xchg rex.RB retq orl cltd xchg adc mov xor pushq lea shll (bad) adc cmp (bad) (bad) mov out mov jno cmc outsl (bad) (bad) push icebp pop pushq rex.B movabs or or lods (bad) (bad) pop lcall (bad) mov rex.R repz lahf rex.RXB icebp mov and rcrl push subl loopne jmpq adcl loop nop jmpq mov cmp sub and addr32 iretw or (bad) jo (bad) (bad) (bad) popfq xor xchg mov pop mov sbb (bad) in (bad) stc repnz adc (bad) add movabs push xor lret ds mov repz mov mov roll paddusb sub lods add push cmpsb js int3 movabs mov and cmpsl (bad) pushq jg fwait mov (bad) popfq (bad) in lret loope jb jo jg imul (bad) and (bad) rcll xchg in push mov sbb hlt jp add xchg xchg (bad) in pop xor lret (bad) push push (bad) int xchg mov jmp jg add rorb mov decb pop mov fcmovnb (bad) jne xchg mov and adc (bad) movabs cmc rex.WRB adc add jg out frstor jne test iret adc sar int3 js lret pop sbb adc in cmp test jge mov int3 jno (bad) add rex.W gs lock (bad) (bad) repnz (bad) je ss iret rcrl xor push cmp test (bad) xchg iret push adc lock pushq enterq sbb fwait movabs lock je mov mul lahf (bad) (bad) rex.WRX rex.RXB mov int push xor rorb xchg jle xchg adc movsl rex.WX jl in or mov rex.B rex.W js sub mov and jbe mov rorl adc test pop mov jmp mov js jle leaveq (bad) icebp cmpsb (bad) outsb in (bad) int3 rex.B (bad) shl shlb rex.RX addr32 rex.RXB jne jae icebp cltd (bad) mov or icebp mov rex.WRB mov (bad) (bad) rex.WRXB jo push jp lret jmpq adc xchg leaveq (bad) out rcll je shll adc adc mov push pushfq mov mov rcll xchg in (bad) fcoml out rex.WRB rolb rex.WXB data16 fsin (bad) movsl mov push ror pushfq (bad) popfq out rcll stc stos (bad) movabs push xchg lods or (bad) cld sbb js (bad) cmp (bad) xchg cmp jg (bad) rcrl lret adc out cmpsb lret (bad) jmp fstpt repnz jb std rex.RB lea sub cmp jl rcll fs popfq mov jns sbb movabs jle in hlt rex.RX push insl movslq mov flds rex.WXB divb cli rex lock sbb out cld cmp fidivr or jbe in fcmovb push mov adc rex.B sbb pop xchg pop fbld callq sub sub movabs sbb sub popq add retq insb rex.X (bad) xlat (bad) fidivl sub and pop adc or cli rolb (bad) push or scas movsb xor jge rcr and (bad) xlat sbb push xchg sub and cli int push and or out push sti lock rex.B rex.WR mov mov loope iret repz out or (bad) in fstps fdivr (bad) rex.XB xchg push lret and cmpsl mov jle mov movabs rex.RX rex.B out sahf icebp jrcxz push add adc sti add cmpsl mov mov mov in sar gs lahf sti rex.WB movabs test xchg orb sahf mov (bad) idivl mov rex.WB cld mov jg out add cmp mov mov shlb pop clc rex.RXB rex.W movabs add or jrcxz add jo (bad) mov mov movsl scas add add cmpsb (bad) xor jmpq sbb loope (bad) rex.XB sub sub adc pop xorl (bad) push ja xor cmp (bad) adc or mov (bad) sub test jbe (bad) mov movabs adc rex.R add rorl mov test fstp int3 rex.XB int3 fs mov insb cld cs lret mov push add cvtps2pi (bad) rex.WRB xchg and in jno fmulp cwtl int3 int push loop (bad) xchg jbe loope (bad) (bad) rex.WRX stc and es (bad) rcrl testb test fidivl jae add fldl mov jno imul mov xor push jge jno int3 sti lods (bad) and adc push (bad) xlat sbb xor xor mov xchg test stc mov jae jmp pushq xchg clc loopne cmp leaveq jrcxz out jbe mov movabs orl loope rex.WR fdivp rex.WRX xchg loop std mov mov (bad) out pop add mov mov movabs fcompl (bad) fadd hlt nop adc lock bnd fnstsw pop movslq jno test int3 sub cmp adc repnz mov cmpsl imul rex.RXB sbb mov rex.RB in pushq addl push xchg (bad) rex.WRB cs (bad) popfq add sar add mov (bad) jrcxz xor push rex.X jno xor je vcvttsd2si jmpq out repz fcomps lods jae xchg adc add (bad) jl test xor mov or stos cld cltd (bad) cli int3 lock es mov iret cmp (bad) fdivrp sarl ficompl jae (bad) jae push push add shrl movabs push cli incb xchg (bad) rex.WXB rex.RX fsub fsubrp imul add retq add cmpsl (bad) pcmpeqb jge push lret sbb add int3 cmc callq mov lods jbe adc push test (bad) rex.WRB cli xchg pop cmp jno sbb and sbb or js add sbb jbe pushq sub cli (bad) jp je stos and or add (bad) imul test ror and cs add xor sub add out mov loop jns jrcxz pop test xor insl subl test ss in fdivrs iret or test loope cmp lret (bad) jl (bad) adc jae mov rcrl and repz fs adc sbb pop callq lods xor rex.WX (bad) scas enterq pop mov repz pop (bad) jmpq movabs mov int jb clc cwtl or repnz adc movabs js cli outsl mov ja xchg sub movabs js jb enterq fld (bad) cmc (bad) cvtdq2ps imul icebp andb shll push sub push (bad) incb mov add outsl (bad) (bad) xor fnop loop and pop lret jle test or or (bad) outsl mov nop jmp and (bad) (bad) rex.XB enterq cmpsl (bad) rex.B pushq repnz data16 push mov (bad) jae out imul (bad) (bad) in sub movl sbb cmpsl or sub rex.X in xchg xor test push and xor xchg (bad) rex.X retq adc std xchg (bad) xor mov xchg lret jb sub lods (bad) cmp sbb sarb rcll mov shr or (bad) rex.WX ja (bad) jp rex.WRX loope adc iret push (bad) and outsb or sbb sbb callq mov rex.RB pop sti jrcxz (bad) (bad) (bad) rex.W mov (bad) pop cmp rex.WX test cmpl insb pop fist cld or movabs add test (bad) mov mov outsl (bad) (bad) mov (bad) xchg movabs sub ja in mov adc stos rex.RB movabs rorb (bad) popfq loop loop movabs cmp mov sub pop add add and or cwtl stos rex.RB repz (bad) movsl sub cmpsl fs lahf rex.WRXB mov loope xchg or rorl adc sahf mov fistl jnp icebp frstor int insl rex.RXB (bad) lahf movabs mov pop std repz clc movabs (bad) fwait add xor (bad) push rex.RXB pop or mov (bad) xchg rex.WX (bad) sarl clc mov popfq orl mov jmpq es sarl (bad) xchg retq cld pop shrl rolb stc movabs (bad) rcl std add out and jge fwait mov add (bad) sbb cltd push cmc sbb (bad) or (bad) data16 mov (bad) movabs jl fisubr fistp and sbb cs insl rorb sbb rcrl test xchg stc (bad) (bad) jno popfq movabs (bad) xchg ss fs fcoms (bad) rorb in xorl sbb ja (bad) pop loop repnz adc (bad) hlt repz mov (bad) (bad) fisubr popq out sbb push lods repz test icebp push mov repz (bad) jl (bad) (bad) fxch fmul rex.WRX push retq fnsave ds jmpq retq adc loope pop (bad) leaveq pop (bad) mov sti andl push jl sbb ja (bad) fdivrl mov adc rex idivl xor pop cli (bad) test jae (bad) js imul fsubs mov push outsl retq jbe jo add pushq retq fisttp or mov sbb leaveq rex.WX js adc sub and sub test or push inc (bad) rex.WXB and repz imul jrcxz xchg insb shl shl mov leaveq in loopne push (bad) movsl rex.XB scas (bad) shrl add clts int3 mov rcrl (bad) in pop fcompl rex.B negb in mov (bad) add or insb loope push rex.WX sub mov sub adc rex.B int (bad) jno sar rex.X jae lret fildl or pushfq jge rex.RB lock rex.WRB (bad) fcmovnb (bad) fdivp sbb mov retq jg (bad) cmp (bad) (bad) in lods rex.XB add lcall jno or rex.WRXB decb sub add pop movabs (bad) (bad) and and je (bad) rex.RX hlt jb mov out add loopne not pushq xchg int mov roll jrcxz sub lret adc (bad) insl (bad) rorl xor popfq movabs imul movslq (bad) (bad) lock enterq (bad) out shrl or cwtl imulb sbb callq rex.B jno rorl or shll (bad) hlt rorl sbb push stc mov adc cmp jo sbb pop repz fisubl push jb (bad) xor rcll retq retq adc pop (bad) mov (bad) mov hlt (bad) sti insb adc lret rex.R push scas movabs lock mov (bad) out in jbe rex.WB rex.W (bad) fiadd in sbb movabs mov (bad) mov fs (bad) in nop movsl fcoml (bad) mul xchg mov pop stos jle rex.WXB repnz (bad) ds (bad) and cmp lods cmpsb rex.RX addr32 sarl (bad) jne pop repnz movsl adcl xchg (bad) (bad) sarl outsb jp jmpq out loope lret lahf xchg rex.WRXB icebp xor adc (bad) xchg jb mov pushq mov or cwtl jo insb (bad) shll clc stc cltd (bad) repz scas (bad) test int popfq push adc leaveq rcll jmp roll sarl pop adc roll and xchg pushfq xor cmp (bad) or rex.WRX mov scas rex.WB stos negl cmp jp test mov adc cld cs push (bad) push int fdivrl xchg movabs repz pop (bad) shlb (bad) lahf xchg mov and out rex.RX and mov mov add pop cli movabs sub (bad) shl int3 outsb pop rcrl lods push ffreep lea ds xchg shll (bad) mov mov shrl fstps jb (bad) xchg test (bad) out test std jrcxz sub sub fsubrl sbb add sub (bad) mov (bad) movslq test sub rcll jle (bad) mov xchg rex.RB jmpq (bad) movabs subl enterq push push imul mov jle push std ss sub and sub lods hlt loop xor int rorl cli int scas repz (bad) xchg in hlt rex.WX (bad) in mov jmpq sbb sbb rex.W sub pop scas jno xor xchg or insb fstl shll cs push cltd rex.RB or insl lret rex.WXB xchg xchg pop add loop (bad) lock sub xor movslq sbb rex.B mov add out jle rex.X rcrl xchg pop jmpq iret (bad) loope shrb popfq movabs (bad) nop iret (bad) sub stos lret (bad) push loop fcomps (bad) mov mov (bad) mov xchg xchg xor mov sub retq fdivr xchg sub or and sahf adc cld bnd rex.WX rex.WR sti push cmc ja xchg and movabs lret mov jbe nop mov bswap jl (bad) (bad) (bad) mov add xchg movabs (bad) movabs mov sub rcrl or sbb mov or std in push movabs (bad) jmpq pop adc pop es jne ja (bad) cmp push cmp int adc enterq popq (bad) cld adcb jae sub (bad) rcll (bad) lret mov mov test rcr add pop std rex movabs scas rex.B sub sti rex.WR xorl (bad) (bad) jge out (bad) pushfq push addr32 movabs cmp int3 mov rorb rex.R int or pop imul clc and shrb and scas (bad) movb pushfq pop lret fnstcw (bad) mov insl (bad) jns xor movabs xchg add loope (bad) xor (bad) iret lret push inc sub in sahf (bad) sti adc movabs rex.WXB mov jrcxz adc (bad) loopne rex.XB adc scas rex.B lods (bad) add push sbb es push test imul movabs xchg (bad) xor sub cmp jg stos add insl push add scas jp add lods movl loope adc adc sub cmp cmp or lret push out push adc testb xor flds fs rcr (bad) mov sarl mov jns sbb fs rex.R incb (bad) rex.WRXB roll stos addl sbb adc in or ds fcomip stc rex.WRB rex.WB or je sbb pop movabs outsb cwtl rex.WXB rex.X test jp jle adc rex.RXB sub pop xor (bad) sahf (bad) rex.WRX cmp jo int3 jge mov jne rex.XB (bad) xchg push xor shll rex.WB ss or or mov (bad) xchg retq lret (bad) adc xlat shrl loopne rorl xchg retq rex.RX mov insb cmp jno mov shr notl adc rex.X retq sahf fnstcw pop cmpsl pop pop rex xchg imul loopne (bad) adc fnstsw (bad) sub insl (bad) mov rex.X test adc retq lret xor xor (bad) rorb xchg fstpl cmp rex.WX (bad) mov xchg (bad) mov jne int3 push or jmp (bad) xchg cmpsb cwtl lea sbb shll sub (bad) lods jne or imul icebp out xchg cld sahf add push (bad) cmc clc popfq pop cmp add lret rex.B movabs stos cltd rorl jns rex.B xchg shll rolb jrcxz (bad) insl cmovb push add pop sub jp int3 or repnz retq rex.WXB (bad) mov mov (bad) lret jo and lret sub js pop sbb adc loope (bad) in repz shrl (bad) pop in loop sub rex.WRXB (bad) (bad) push lock int ja leaveq add xor and data16 test (bad) rex.WXB xchg (bad) (bad) mov cmp clc (bad) rex.WRB retq rex.WRB cmp mov jae out pop jmp (bad) mov (bad) cld (bad) (bad) frstor (bad) leaveq vucomisd xchg add (bad) (bad) mov (bad) lock fistl (bad) jns mov lret (bad) sub imul pop rex.RXB sbb lea jnp lret xor jg push lret mov jae sub cmp rcrb (bad) add or stos cmpsb lret test mov ror leaveq xchg and pushq (bad) jnp (bad) xor insl (bad) (bad) mov (bad) xchg and mov push out imul rex.WXB rex.B fwait in pop xchg test jns mov (bad) add mov rex.RXB jae (bad) jp mov mov retq mov mov lret (bad) (bad) pop je leaveq add int imul rex.XB retq rex.XB xor jo loop mov leaveq (bad) int out lods (bad) fdivrs inc repnz loopne fildl jo test pop mov mov (bad) xchg jge pushfq push jp jge repnz rex.WRX repz int3 mov (bad) stc scas cli sub mov (bad) stos ss vmovntdq icebp (bad) add jnp mov (bad) jge mov xchg or jb rex.B rex.WXB mov imul xchg int or jmpq (bad) mov add pushfq pop in fldenv mov sahf pop xchg pop cwtl mov pop or xchg lods mov cmp and jmp or mov and leaveq xchg scas fld cmp push adc rex.WXB rex.WB jno add (bad) mov stc rex.RXB rex.RX enterq (bad) jp sub jns sub pop jb or rcr test (bad) xchg push cmp (bad) lock lret mov lahf rex.WR cmp cmp adc (bad) sbb (bad) in pop xchg rex.WR jrcxz fmull rex.WRXB jbe rex.B (bad) sbb mov jp (bad) repnz ss and cmpsl cli (bad) insl jg jg or jmp jrcxz mov pushfq movabs gs hlt (bad) cmc (bad) xchg adc (bad) pop jmpq rex.RX xchg sbb rex.X jb pop mov rex.WXB jo (bad) lock mov lahf jae fstpl sub sbb shlb out xchg and lret rex.R xchg retq rorb (bad) cmpsl test mov xor repz jne sbb retq mov (bad) loopne (bad) jnp rex.WRB rex.WB lock mov mov mov (bad) xchg xor and clc cli mov cmp int3 (bad) jns (bad) movsb (bad) or shr es xor repnz pop xor test (bad) loop rclb cld mov movabs mov mov rcll iret std pop ffree (bad) rex.XB adc mov outsl jle shr cmp movslq xchg movabs nop (bad) addr32 (bad) xlat xor jne (bad) rcrl rex.RB mov (bad) (bad) fisttp pop xor (bad) xchg lods pop xchg movsl rorl pop mov imul or mov cmpsb movabs and pop stos outsl lock adcb (bad) (bad) adc sarl (bad) mov mov xor xchg shr incb insl (bad) or imul cli movabs mov mov je repnz in rex.WRB xchg movabs sarl adc adc std mov in movabs movabs adc fnstenv enterq movabs cmp xchg test xchg sar cmp mov pushq mov xchg mov mov rex (bad) jmp outsb push jmpq jno rex.B test mov sbb andl jp popfq (bad) jmp xor movabs mov stos xchg loopne xor shlb movsb cmp rex.WX or shr stos repnz (bad) lret movl insl jmp mov lock sarl (bad) sub shll mov xorl (bad) (bad) clc hlt pop stc push (bad) mov sub roll adc push ror incl popfq mulb (bad) cmc mov movabs mov int sbb rcll sub shll pop push and rcl rex.WB int3 cmpsl stc ja (bad) test adc mov std push lret imul movsb jnp push rex.RX cmp rex.X (bad) jmp xor test (bad) lock cmp jg sbb xor (bad) fiadd movabs (bad) std mov (bad) rorl test test sbb adc mov rex.R xor (bad) xor add mov sub (bad) sbb loopne out orl lret repnz sbb (bad) in scas push xchg and (bad) shll adc in (bad) jns lcall mov rcr adc cmpsl sar rcr out shll (bad) and cld push and pushfq and rex.R add push int xor (bad) jb leaveq sbb roll rex.RXB je push jg mov xchg int movabs roll adc callq scas push outsl idiv shll add pop and cmp out and iret push negb iret scas add sbb fadd fbstp push mov mov hlt test rex.XB sbb (bad) cmp loop pushq mov pop cld jle repz mov iret out rex.X jle mov pop mov pop adc movabs lret sub sub (bad) lret std jbe int3 add cltd lock and mov and in pop movslq sub sub add (bad) lahf sbb xor sbb (bad) sahf loop jge leaveq add mov cmpsb rex.X and rcrl sub rex.WR jnp lretw retq cs loop invlpg xor hlt test (bad) mov rcrl rex.X retq and iret xor pop adc xchg cwtl mov mov (bad) rol stos pop cmp loop xor add sub rex.WRX loop jrcxz (bad) rorl cld jmpq es and add cmpsl rex.XB xor roll scas pop ja (bad) pop sub ss add push rcr jns xchg adc mov jne movabs push std loop mov hlt in (bad) and and and nop stos xchg sbb movabs pushq fcoms fcmovne mov cmp insb mov outsl jbe (bad) mov sub or flds sarl jl mov and rorl (bad) scas rcrl cwtl sar mov decl je rex.RX fs mov xchg pop rex.WRB fwait rcrb mov mov movslq jno rex.WRX cwtl (bad) and out sub loope cli xchg (bad) push rex.RB nop or fsts xchg fwait sub out rex.RX push add mov fidivr scas (bad) (bad) mov mov loope or cli adc pop std js fimul outsb ds and add xor lods pop nop popfq sub rex.B in cmpsl rex.WX shl retq sbb add rcr lahf push pop test (bad) (bad) jae jne test adc rorl pushfq rcll clc xor xchg push (bad) (bad) sub rcll xchg cmp mov mov nop (bad) xor sub outsb xor movsb mov fistpll xchg loope sub je pop lahf (bad) in xor lods data16 (bad) (bad) add or cmp pushfq cmp add fsub rex.XB xchg cmp rcll movabs (bad) mov cmp pop push enterq sar add cmp adc insl (bad) lahf js rcl cwtl cmp (bad) in (bad) imull rex.X negl jmp cmp fsubl xor cmpsl es (bad) jge shrl jbe push rex mov iret rex.XB (bad) add mov rex.W sarl rorl pop (bad) movabs cmp xchg jnp mov imul imul or lret iret andb test fs add mov and (bad) jbe sbb rex.WRXB sub rcrl cmpsb pushq test sub setb (bad) sahf mov xor adc rex.RB fdiv add cli int3 insl movsl mov enterq int3 (bad) (bad) (bad) es out mov cmp pop int3 pop retq imul out sarl rex.RB rorl (bad) add xor push scas (bad) (bad) lods xchg and mov retq rex.WX xorl sbb (bad) pushq rex.RXB stos mov cld (bad) callq movslq mov (bad) mov jle push push cmc roll (bad) add (bad) cmp push (bad) (bad) and lea push cltd and lret rex.W rex.R or mov (bad) rex.XB and sarl lret test in (bad) push loope rex.RX cmp and sub sarl test fldenv add rex rex.RX imul lods test imul in push sbb je (bad) std fild add mov fnstcw (bad) scas or adcb or pop movabs or (bad) rex.XB repnz mov xchg sub movslq (bad) insb fimul (bad) cmpsb stc or xchg jge add (bad) adc and faddl rorb jae adc int3 mov (bad) (bad) clc (bad) icebp enterq lock mov (bad) or sbb (bad) cmp mov and ss fldenv fistpl (bad) repnz rex.RXB adc cmpsl jae xor (bad) rex.WR rcl cmp paddw int3 pop in sub xchg xorl jl (bad) ds lret fwait es rex.B cld sub adc lock rex.RXB fwait xchg sub sub mov lods (bad) mov enterq pushq movabs mov rex.WRX test leaveq (bad) push rorb adcb enterq jmp sub xchg negb in mov movslq rex.XB add movslq (bad) mov rex.WX add xchg mov or mov (bad) jae xchg shll (bad) js rex.WX movsb or shll icebp (bad) sahf lret (bad) sbb rex.R ss ficompl gs xchg (bad) repnz lcall (bad) leaveq imul xchg rex.R sahf scas int xchg mov stc jns cltd shl add cltd jb,pt mov sarl lock fs rex.B shlb (bad) fnstsw jl outsl xchg shl out cmp xor test xchg addr32 in fwait rcll rcl rcrl (bad) repz jnp mov sub test sarl adc (bad) cmp icebp lret (bad) test loope lea lods iret (bad) and callq sub (bad) rex.RX gs movsb int3 hlt mov pop pxor sahf mov (bad) sbb jl (bad) (bad) ss or rex.WXB data16 sub shrl xchg cmpsl (bad) push (bad) (bad) shr xor or push bnd add out sahf and leaveq mov cmpsl jns loope sahf cmp pop (bad) add je xlat ss in in and js jns movabs (bad) sbb add in stos or add adc (bad) fistp adc fcomps rex.RX ss (bad) (bad) lahf jl and adc xorl add sub loope lret test pop movabs xor insl lret stos gs addl cwtl shl xlat retq sbb out xor (bad) cmpsb rex.XB add mov adc mov jns fistpl (bad) movabs jb xchg mov jge subb and fnstcw rex.W xor (bad) xlat sbb mov (bad) jbe out insb or xchg push rex.XB rex.W cmpl out jno rex.WRXB adc mov mov repnz rex.W repz clc movb insl mov rex.RX mov notl sub hlt data16 icebp rex.X xor push enterq (bad) sbb in (bad) (bad) mov xchg int3 sub rex.RB push rex.WRXB movsb insl mov cltd sbb clc sbbl add (bad) mov jl roll xlat rex rex.XB shrl out sub add rex.WXB xchg jg (bad) (bad) (bad) xor iret push xchg sbb (bad) rex.WRXB xchg cmp cmp in sbb (bad) (bad) mov rol subl jge pop (bad) repz jno hlt add xor shll pop movabs (bad) pop shrl rcr roll mov sbb (bad) rcrl mov push (bad) (bad) (bad) cs sub sub add retq in (bad) (bad) (bad) cld movl push and rorl push rcl gs iret out rol mov or fadds (bad) sub mov pushq loop rex.WRX rex.B loop cltd (bad) int lods int3 pushfq pushfq xor add stos or test add xorl mov iret nop imul (bad) and cwtl rcr movabs sbb movb test mov jo add pop (bad) (bad) callq cld mov push lods rex.WX xchg gs ffree xor scas rex.RXB sti imul insb cmp pushfq (bad) (bad) movslq clc (bad) (bad) sarl stc lret lods int3 (bad) shll mov enterq pushfq fadd (bad) outsb (bad) adcb pushfq movabs rex.WR xchg xlat cltd insl mov div mov cmp gs rorb ror fnsave jns mov (bad) rex.WR pop ds fisubl (bad) sahf mov rex.WRB mov lock xchg in xor mov (bad) iret lret cmp push cmp iret adc loop rex.RX xchg and roll cmp rex xchg xchg movabs mov mov loopne orl sbb or shlb sar punpckhwd pop mov push (bad) fisttpl or (bad) rex.RX ja test (bad) mov xchg cmp sub or add stos fwait mov cwtl rol cmpsl mov movsl (bad) (bad) (bad) xor mov add jg in movabs int3 shrl cmpsb jne (bad) (bad) int3 rorb pushq fcomps sarl cwtl add jle sbb test in (bad) out mov mov xchg (bad) mov (bad) rex.W (bad) cld jno add sub mov (bad) adc test adc mov cmpsl bnd mov iret pop (bad) adc loopne sti sub in add iret (bad) movabs stc cmp and (bad) cli push cmp xlat sub jl vmovlpd cmp in lret stc add repz rex.RXB out mov es movabs and es pop xor and mov pop rcrl pop mov movsb lret or jne rorl scas icebp roll (bad) rcrb rex.W (bad) pop sub int3 xchg retq (bad) and adc mov sub test outsb rex push mov sub pop fs rex.WRB callq (bad) xor (bad) cmp rolb xchg and jno rcll and mov add cmpsb ja je test rcr rclb or (bad) jae lret xor rorl lea adc mov pandn (bad) rol test lods pop pop movabs adc shrl fcmovnb or lret nop rex.RXB movabs rex rex.WRX rcrl loopne fwait mov rex.RB add add adc and (bad) rcll xor sub jne xor loop sbb jrcxz rorl repnz mov decl pop jmpq and or je pushq rex.WRB retq xchg sbb sub movsb addr32 lea shll (bad) lahf (bad) xor packuswb xor std pushfq fmuls stc loop (bad) sbb rex.XB mov rex.WRB jnp sub sbb push cmp rcrb sbb cmp push repz test mov (bad) enterq movabs int scas (bad) movsb out mov movsb mov mov (bad) retq in cmp xchg testb cmc mov mov sbb sub vsqrtss fiaddl sti mov fnstsw add xchg (bad) (bad) callq mov xchg decb cmp cmp adc mov movslq stc sub fsubrl xor jns xchg int (bad) mov movsb mov (bad) push loope mov lret and mov fdivl gs flds icebp js negb pop enterq sub mov lods (bad) rex.WR rex.RX movabs pushq adc pop rex.WRB shrb (bad) cltd (bad) js negl leaveq rex.B mov and cmp (bad) test icebp add push frstor stc xchg (bad) scas negl icebp xchg in rex.RXB int3 sbb jmpq leaveq (bad) (bad) mov sbb retq stos (bad) (bad) movslq xchg sbb mov sarl cmp or or movabs mov leaveq int lea ss (bad) pushfq push shrb xor xchg gs (bad) mov movabs es and jns (bad) mov xor mov jl mov cmp bnd push out (bad) fnstenv cltd retq add nop movslq (bad) (bad) mov jge add rol rex.WR (bad) enterq mov jp cwtl movsb (bad) repz shll jg xchg push not repnz in rex.WB movsb movsb movabs xlat fmull fstpt lahf loopne ss test cmc test cmp rex.X insl lahf xor out in rex.WR data16 fisub (bad) xor xor mov sub (bad) mov and (bad) (bad) and rex.XB rex.WXB rex.RXB (bad) jno cmp sub mov adc rex.WXB push movsl pop roll stos (bad) sub movsb fwait sub mov mov (bad) push xorl cmp bnd imul repz (bad) (bad) xchg js or rex.WB fisttpll out (bad) retq retq rex.RB lahf sarb xchg int int push imulb sbb mov jp scas loope rex.X es rex.B pop jl (bad) cwtl std mov sub cmp jno (bad) mov stos or repnz cltd test (bad) (bad) sti mov movabs rex.WRX jne out jae rex.WXB rex.WX rex.WXB rex vmovq clc push mov adc rex.WRX and loopne imulb xlat in xchg or xchg jg mov (bad) or test enterq lret mov sub jbe,pn ss enterq add jmpq in pop scas and rex.WR jmp add and jno mov (bad) std stc sub movsl lret leaveq jo or icebp sub (bad) add jmpq rex.WRXB movabs imul loope jle imul cmc (bad) mov jrcxz (bad) jle adc shll loop pushq insb pop movsb rclb retq lahf scas rex.RXB cmp (bad) jp mov fstpl sub rex.WXB test rex.WRB sbbl push add sub push mov outsl rex.WRX xchg (bad) (bad) jno insl (bad) out mov (bad) sbb scas loope rex.W fstpl adc (bad) cmp add enterq retq hlt pushq cmp rex.WRB jrcxz jg pop add loope int3 jrcxz outsl icebp jb (bad) fwait and mov jae es mov rex.RX add xor (bad) push leaveq movabs cmp (bad) mov roll add test icebp movsb sbb mov lods sub test (bad) mov adc (bad) cwtl gs rex.X int3 incb jge adc rex.R (bad) fstps jnp mov cmp rex.RB jp int mov leaveq scas scas sub rex.WB mov adc mov rorb sub icebp (bad) in test repnz stc (bad) cmp lret js adc mov rex.WR rex.RX icebp jb outsb mov push fiaddl imul mov rex.WR fnstenv (bad) sub retq in sbb pop rex.XB rex.R adc rex.B lock mov sbb add (bad) pop int3 repnz jrcxz mov mov xchg rex.WRXB sbb jg (bad) insl in jne popfq imul stc enterq rcll (bad) or in fnstcw rex.WR cmp jge (bad) (bad) fnstsw test sub adc lods lock mov (bad) lret or jns retq lahf adc cld cmpsq xchg mov int pop nop rex.WB test imul out mov mov movabs add imul or xor std lods in ss rex.RB fxch rcr rex.WR add imul sbb rolb xlat xchg lahf rex.WRB xchg cmpsb mov leaveq lret divl mov or lret adc lea or retq movabs shrd enterq insl xchg jns clc xchg cld push rex.B popq sbb repnz (bad) lea jl fmull rex.WR fcmovb rex.W lea rex.X mov leaveq (bad) or (bad) (bad) cld icebp xchg (bad) cmc add and movabs js out (bad) fdivrs hlt sbb idiv xor pushq mov lcall rex.RXB sti add movabs mov jnp movsb cmp movslq push loope jge movsb pop (bad) xor (bad) sahf xor subl rex.WR rex.WB rex.WRX rex.B fmull data16 mov movabs add (bad) push or outsb movslq mov adc movabs pop repnz or vzeroall xorl mov xor fucomp sub rex.RXB cmpl xchg mov add (bad) mov int3 sbb or nop fisttpll repz xchg push rex.R fidivrl rex.RB movl stc (bad) (bad) shrl adc xor lock cli mov jg retq rex.XB xlat (bad) out (bad) or xchg pushq (bad) mov in int3 or movabs clc loope enterq rex.W rex.R sarl fstl sti xchg addr32 xor mov (bad) idiv pop in (bad) xchg stos sbb es and jb xchg repnz rex.WXB cltd in rex.RXB je cmp and pop (bad) addr32 std jp (bad) pushq lahf mov sub rex.WXB pushfq (bad) cmpsl mov xor (bad) (bad) add leaveq (bad) nop jnp push xchg jns add jp insb sbb jo sub sbb fs frstor cmp pop rcll ja cltd adc rex.RX outsb mov repz in pop xchg movsb xchg add icebp fs rex.WR test (bad) mov in cmc rorl jmpq (bad) xor rex.RXB scas jae cmp rorl pushq cmp and push jg rex.WRB jmp push fldcw (bad) sub rex.WB leaveq pushfq data16 jbe adc imul movabs cs mov (bad) xchg (bad) cmp pop shll icebp addb add mov shll insb add shrl (bad) mov insl stos add movabs (bad) lret scas cltd rex.B fs jp push and sti rorl pop (bad) sarl fimul shll cwtl ffree outsl xor in enterq rex.WRXB (bad) repz lret loopne push xor add cmpl mov movabs mov xchg negb xchg sbb cmp (bad) rex rex.XB fs movsl mov stos (bad) out push sub add and jle leaveq movabs xchg mov fs jns push push rex.WRXB fwait rcrl adc (bad) (bad) jnp sub add icebp jg movsb popfq rorl cltd (bad) jno xchg (bad) repnz and rex.B jns (bad) cmp enterq movabs movsl icebp cwtl cmc mov (bad) (bad) xlat sub fistpll adc jne or cmp (bad) cli lods (bad) lea pop (bad) ja scas punpckldq and mov fptan movsb mov cmp rex.RXB test sub ja cwtl rex.R xchg loope (bad) pop fisttp or jle add lret insl int3 out (bad) lret movabs jle adc xlat (bad) push xor ss sbb jge jrcxz,pn fwait rex add (bad) xor adc rcll (bad) fldt rorl (bad) leaveq pushfq rex.WRXB rex.WR (bad) mov out pushq in mov repnz in fmul jrcxz pop cmc and shl jmp (bad) and retq adcb insl fldt movabs ss scas fs mov add add or push (bad) adc retq cmc sbb scas cld (bad) rcrl loope (bad) mov (bad) out mov (bad) push nop rex.R jbe pop (bad) (bad) in icebp cmc sbb (bad) lret rcl add fwait shrl sbb shrl (bad) (bad) ljmp leaveq sti pushq jnp fistpl shl fs mov ds lret mov cmp sub (bad) pop and scas (bad) imul movsb xchg push lret push sbb (bad) gs rex fwait repz cs out (bad) lcall iret (bad) cmp (bad) cmp (bad) in jo sbb adc xlat (bad) fcoms sub xor mov mov sbb loope or js bnd (bad) (bad) out (bad) rex.RX xor push jle hlt (bad) push retq mov ds popfq add (bad) mov rex.WRB or xchg imul mulb pop shll add movsb cltd loope (bad) fldenv rex.WR rex.R (bad) sub sarb mov stc and cwtl lea mov xchg or movabs jmp cli pushq rclb adc loopne (bad) fwait push and cmpsl rcrb rcr (bad) stos pushq lea rex.WRB (bad) mov movabs mov ja sarl jp (bad) (bad) mov xchg fsubs fildll mov insb mov lods add int iret loopne and rorl sbb rcrl repz add (bad) insb or movabs repz rcll ss out pushfq jmp stos fadds js lahf pushfq and es adc push add retq (bad) hlt (bad) (bad) xor (bad) (bad) mov sub cltd and cli sub cwtl movabs (bad) ss mov mov xchg enterq sub add in cmp rex.B mov jno cmpl int3 push cmp rcrl rclb retq shrl (bad) std shl jge xchg mov jb rorl loope sbb cli xchg rex.X movsb or (bad) fxch (bad) scas xchg addr32 out (bad) rex.WRB movabs (bad) sub (bad) rcrl outsl adc jle or jns out mov repz cmp je rex.WRXB cmc mov (bad) xor rex.B loopne cld rex.WRXB shll xor adcb rcl pushfq mov (bad) jae (bad) insb (bad) imul ffreep loope jbe faddl lret movslq sbb xchg fwait xchg hlt addr32 std rex.B jmpq (bad) jb pop mov add lock loope js out (bad) fsubrs lret add or retq add sub mov movabs mov sub out xchg cmpsb mov xor or sarl sbb xchg adc xorb cld or addl fisttp xor icebp (bad) add shll jge and (bad) xchg scas push and movabs fs (bad) push rorl rcll (bad) sub xor stc (bad) lea lret sub (bad) xchg (bad) data16 roll and lret insl (bad) and in rex.WRB leaveq in mov pop xor sub xchg pop rex.R out jne or rex.WX xchg enterq (bad) mov (bad) xor unpcklps (bad) pop jle test and (bad) pop rcll or mov (bad) and cmc jmp (bad) (bad) mov (bad) lods sub in (bad) lock sarl jb rex rex.RB test jle (bad) mov cltd rex.WRX rex.WX cmc imul orl cmp jbe and (bad) adc in mov jp fs int3 popfq (bad) add (bad) (bad) pop adc rex.RB add retq mov callq (bad) rex.WRB (bad) or cli push pushq (bad) sub xchg fadds xor or in mov cmpb js jnp add (bad) jg insl jne jrcxz lock test push mov int3 add sub in insb rex.R callq lock enterq lods test pop stos iret stc hlt xchg (bad) lods retq rex.B rex.WRXB or sbb and (bad) mov movabs (bad) clc jno rex.WXB mov pop lods retq sbb outsb (bad) xor mov and and adc cltd (bad) (bad) (bad) and push pushfq loopne mov mov (bad) adc sarl mov rorb fidiv push or in movabs push jl,pn int rol and or or xchg movslq sub add (bad) add (bad) (bad) pushfq mov jg xor or rex.WX rcrl fwait int rex.W mov mov pop (bad) shrl jl (bad) pop cmpsb incl pop orl mov xor enterq rex.W rex.XB and lea out and mov mov sbb jb rex.X movabs or movabs xor lock movabs movsl sbb xchg in (bad) fisubl (bad) out xchg shll push cmp push xchg (bad) (bad) in jo rex.X cltd addr32 sarl mov (bad) loopne (bad) sarl (bad) rex.WRX cld imul pop rex.WRB addr32 enterq repnz cmp sahf rex.RB adc (bad) and (bad) sahf jns cmpsl add sub cli fisubl mov (bad) mov jg jnp (bad) bnd cli not add jnp (bad) cld mov and xor push jle add push sahf mov (bad) std jbe retq rex.R rex.WRX cmc sarl pop and movq (bad) rex.WRB test xor rcr int3 pushq pushq xchg rex.WRB hlt mov pop pop pop cld sti scas movabs (bad) in sub test (bad) jne cli add cwtl jns pop test (bad) xor lret fsubl rex.R and pushq rex.WXB pushq test (bad) retq fstpl pop addr32 and cmp movabs xor stc lcall fucom or cmp (bad) outsl cmp retq (bad) jbe jbe (bad) mov lret jmpq cmp or test jle rcl frstor (bad) out imul jno cmp pop repz cmp sti (bad) mov sub pop movabs in cmpsl test movabs mov mov lea (bad) fdivs (bad) sbb jbe fcomi repz adc jae adcl add pushq mov sbb mov xchg int scas fldenv (bad) xchg enterq mov sub imul jns mov sbb or insl neg repz add rex.XB in lret test nop lret jae cmp test mov sub nop (bad) mov rex.XB jbe lahf in mov lret (bad) loopne xlat (bad) clc int3 or rex.RB jg add mov test cmpl addl or std (bad) jmpq (bad) cmc movsb sahf testl repz cmpsb cltd rex.B push jle shl js xlat test pop xor mov (bad) out cmp insl bnd jl xlat mov sbb sub mov (bad) (bad) movabs pop jmp mov int3 cwtl pop stc out movabs lods (bad) js push rex.WR rex.WRX imul rex.R rex.X in rex.WRX jno rex.R (bad) repnz pushq (bad) enterq ja mov fidivr nop jb int3 and (bad) mov push rex.RB lret movslq cmovge mulb movsb mov mov mov sbb movabs fdivr test jnp ffree movabs jrcxz movswl and vpinsrw jge jae jo movslq rex.WRX jbe sbb cld xor jno rex.X xchg xchg rcl cmpsb fs (bad) stos or movsb cmp (bad) iret adc xlat (bad) movb sbb and test mov andl mov (bad) in mov jo sub rex.WRXB rex.X sub cmp cmp mov (bad) lret jne fs divl sbb and pop push or fisubr cli sbb fbld (bad) ds loop enterq imul in xchg int3 pop (bad) insb jbe sub std pop rex.WB scas int3 int mov or (bad) repz or mov (bad) enterq sub (bad) pushq jo,pt repz jge and fwait scas sub incl jno retq data16 mov (bad) mov mov retq cltd jle (bad) callq fimul (bad) jbe repz mov (bad) (bad) add cmp xchg add (bad) and cmp movabs rex.B push mov or push rex.R shrl cwtl cmp and (bad) adc test (bad) cmc push rex.WRB fs mov retq jnp popfq cmp jno pop xor and popfq xlat lods rcrl adc testl cltd and iret mov jb jnp sbb (bad) div sub pop sti rex.XB shrl or push sbb (bad) movabs decl es xchg (bad) jrcxz addb loop xlat popfq cmp loopne fs in sub jno fnstsw vxorps jle sub (bad) rorl jg or xor movslq jge jae mov jg test jne insb add mov rorl cmpsb movabs adc sub and sub roll (bad) jns movabs (bad) rex.WRX pop add adc popq mov shrl sub xchg adcl (bad) rorl (bad) cmp add enterq leaveq sub pop cmp fisubl int divl insb hlt rcrl (bad) adc mov cmp sub repz adc loop mov (bad) mov roll loope mov push icebp retq or rex.WB andnps cmp and (bad) (bad) rcl movabs xor fmuls imul in pop xchg rorl (bad) xor mov shll jb int3 rex.WXB jno lock adc pop rex.WB punpcklbw sub ja mov xchg (bad) mov fnstsw out rex.X rex.WR out (bad) (bad) and callq out (bad) imul rcll xchg div jno (bad) or pop (bad) rorb sti (bad) push es (bad) gs push push or xchg mov jae (bad) mov lahf out rol movabs sbb fwait jne sbb sbb callq sbb addb (bad) je (bad) adc test sti rex.WX xchg xor mulb (bad) rex.RB xlat mov rex.WXB pminsw rex.WX (bad) jmp fildl bswap mov (bad) stos test pushq (bad) ja cld out pop vdivsd in (bad) push sbb lods clc xchg xor mov sub xchg (bad) xor (bad) scas jle clc popfq fwait sub rex.B xor rex xor pop rcr rex.R lret sub icebp mov adc rcrl cmp negb or jns xchg es cmp rcl adcb loope callq fildl lret or fistpll fs xor mov rex.WB xchg mov nop movabs callq rex.RX xchg movabs cmp cmp test sbb int3 xchg mov add shrl sub shl fsub jmpq lods outsb int and mov mov cld rcrl mov (bad) add repnz add test outsl or roll test fbld xor rex.WRB repz rorl push loop sub pop and ja (bad) and lock movabs or pop sbb ss push imul and repz (bad) cmp cmc and (bad) cld enterq repz ds rex.RXB in (bad) fnstcw (bad) pop je (bad) retq push or cmp rex.WRXB fnsave and andb mov jno mov ja cmp in addr32 and mov idiv (bad) pop cld nop jg (bad) icebp insb mov mov movabs iret (bad) push leaveq push adc jbe (bad) test (bad) cmpsb cli push (bad) movabs sub imul rex.B (bad) hlt jp jg cmpsl movabs mov loop pushq and pop gs jp loope xchg jbe popfq xor or (bad) insl (bad) (bad) imul (bad) jns shrl mov leaveq sbb andb or mov xor cmp pop mov cwtl (bad) sub decl pop movabs (bad) and xchg sbb int3 ss movabs (bad) (bad) mov (bad) sub jnp subl adc iret test push movabs fmull rex.XB add repnz jle loopne mov (bad) add and enterq (bad) jnp repnz mov mov rorl (bad) in mov es pop add or stos (bad) and std xchg movslq lock xor xchg and rex.X jae rolb (bad) cs hlt (bad) ss shrb cmp sarl (bad) int data16 rorl nop xor ds (bad) mov jnp sub cmp lock retq popfq or movabs mov (bad) mov addb add (bad) fstl push mov movslq fsts insb stc rex.WXB adc cmc pop (bad) cli (bad) ja (bad) jne or lea popfq sar adc sahf xor (bad) cmp loope popfq rex.RB rex.B pushq (bad) icebp (bad) scas bswap int and (bad) rcll (bad) jae sub push (bad) hlt mov std lock and cmp jl (bad) rex.X movsl rex.X add stc cltd mov rcrl add pop sub in cld rorl and (bad) test rcll mov andb callq mov rcll pop cmp gs cli movabs sahf (bad) xor movsb scas (bad) callq (bad) and cmp xchg rex.W retq fidiv (bad) clc ds or pop (bad) adc loop pushfq push test xchg (bad) idivb loopne rex rex.B stos mov (bad) cmp lret add loope int3 or flds iret stos sar and rex.XB or rex.R stos fwait rex.XB fstpt xor sbb or or negl test (bad) push imul rex.WX (bad) jae sbb pop iret xchg (bad) and (bad) addb xchg sub shrl int cmp ror or xor scas pushfq out out roll sub roll sbb or rex.WRXB or imul mov (bad) pop (bad) add movabs pop movabs lret in movabs ficom in in xor retq (bad) sub add (bad) (bad) fsts callq rolb rex.RB mov repz sbb repz sbb xor stc and jrcxz or retq xchg xor (bad) rex.RB outsl (bad) cmp rex.WR scas pop xchg (bad) subb cmc bnd pop ror jo mov sub fidivr sub sub (bad) (bad) addr32 (bad) rex.WR xor sbb (bad) rex.WXB jns or add mov (bad) (bad) adc xor cmp sbb sub rex.XB jo or or pop out push (bad) rex.RX jns mov add (bad) retq pop test sbb lret mov (bad) scas (bad) xlat stc rex.WRB (bad) xor cmpsl pushfq sub repnz rex.B shrl and jl movabs jle mov repnz mov xchg and cmp in movabs and (bad) xchg rex.WRB (bad) (bad) pop lods sub faddl (bad) jne xlat (bad) (bad) pushq cmpsb jmp adc callq mov add fiadd sub rolb sub icebp mov mov test push and jnp iret shrl jg loope cmp (bad) (bad) int3 mov xor jge (bad) (bad) movsb enterq fsubl callq jmpq (bad) cld movabs and adc insl rex.XB rcll jp adc jo rex.XB lock sub repnz and sbb (bad) jnp movabs iret sbb sbb jne add repz mov jns rex.RXB rex.X (bad) lock cmc or rex.WR repnz rex.X xchg jae (bad) xor adc shlb loope rex.R mov lods cmc or sub retq cli mov mov fmull add callq rcll add cwtl sub test (bad) (bad) rex stc push lret jne outsb loopne stc or add fadds mov (bad) add movabs movsl rex.B bnd rex.RB sbb loopne cld jae loop cmpsl lods enterq nop ja lret sub out or rex.XB mov out rex.WXB rex.WR ds int add sahf rex mov sahf in pop lock cmp mov sbb adc rex.RX out mov mov test rcl mov (bad) out rex.WRB mov (bad) test lret insl repz callq mov and jo and rex.WRX rex.WRX test mov jge mov rex movabs insl insl xchg cmpsb sbb cld retq sbb cs ja repnz mov scas mov push or int3 insl out adc add retq mov jo pushfq mov ja sub (bad) ffree rorb and fmuls clc rex.WRB jae and mov callq pop (bad) jbe fnsave clc xlat xor mov sub cli or and movabs xor in data16 push pop or push (bad) sub push enterq xlat rorb sub xchg cs imul sbb leaveq stos pop (bad) jg outsb repnz (bad) mov int3 pop enterq movabs jmpq mov cmpsb (bad) xor ss movabs rex.WRB psubw out pushfq pushq shll cli movabs jp (bad) xchg or lea xchg test or xor ror add rcr add mov sarl ja rex pop stc lret (bad) rex.WB repz int3 mov mov xor mov imul pop rex.RXB mov lods insl xchg stos hlt or test out add movsb icebp movabs mov mov insb sbb roll sahf add rcrl and (bad) mov xchg rex.WB callq sbb mov sahf fstpl loop shr pop or xor rex.WX (bad) mov rex.X (bad) popfq pop (bad) (bad) add (bad) cmp rex.RB rex.WRB and sarl retq pop clc and sahf cwtl std adc rcll adc push cmp lcall mov retq in add pop (bad) rcrl cltd mov mov (bad) rex.X rex outsb stc orl shrl add xchg cs lods (bad) scas (bad) sbb (bad) jae outsl xchg (bad) (bad) and xchg push lcall imul loopne cs jne jg frstor outsb sbb popfq add rorb add sub stos shrl pushq scas jae roll cs pop sarl rex.WRXB test add shl movslq (bad) xchg repnz and sub mov (bad) int3 std lods rex.WXB ja iret stos cli stos mov jge sub scas lcall je jno int or mov rol cld cmc or in out retq rex.WRB cmp shl mov xor xchg jb movabs xchg cmp fisubrl cmp in pushq mov jge (bad) sbb rorl test movslq and xlat jl sbb pop rcll push test sub sbb frndint xchg add mov (bad) (bad) mov cltd mov rex.B mov cli pop lret add fdivrl mov sarl jnp roll xchg popfq (bad) repz (bad) (bad) lea std fdivrp mov roll jle and rcll xor (bad) or out or rcrl and movsl jne xor or xchg jge mov imul sub repz jmpq sbb test (bad) xor xchg (bad) movsl sbb (bad) fsubrl outsl repz pop mov rcr or add push rex.RXB (bad) cltd fldl (bad) (bad) xchg sub (bad) ds and pop cmp mov stc rcll xlat jne out int insb lcall sti pop or in out retq push add (bad) (bad) jbe add repz (bad) pushq shll movabs rex xlat (bad) and in int3 add ja cmp rcrl lret and xchg in xchg and rex.WRB fidivrl movb or retq sbbl cmp sub std rex.WB repnz cmpsl sbb mov mov int3 push sti mov jmp and icebp (bad) test ss sub or repnz cmp cmpsl imulb in rex rex.W shr mov cwtl jmpq (bad) shl and (bad) jae mov and (bad) sbb in adcl xchg lret sub mov test movabs sarl cmc (bad) repnz pushq (bad) repz xchg decl sub and int3 loope es rex.B (bad) int mov (bad) outsb cmpsl or stos fidivr (bad) test sbb fs jp sub movb xchg sbb adc push push and jbe jrcxz (bad) cmp (bad) movabs loope xchg mov cmp rex.WRXB (bad) mov (bad) sbb jns gs and rex.X bnd push sar or mov jbe (bad) mov adc rex.R sub lret and mov add xchg subl int repz or mov rex.X rex.WR (bad) mov rex.R rex.WB push test mov nop add push repz data16 in rex.WRXB add (bad) cmp repz sbb pop sub adc push addr32 xor rex.WXB mov movabs and add sbb sbb fnstsw and lret movabs mov pop sub cs cmp lock int3 lret (bad) movsb mov xchg pop mov popfq pop rcll lods sbb cli lahf mov and (bad) adc add stc rcll mov cmp test (bad) jno pop lods pop dec adc cmp (bad) mov gs sub cmp jno (bad) mov pop mov repz insl pushq mov xor mov rorl in push psubq pop push mov es fnsave flds jno sbb rex.RX adc imul out mov imul pushq xchg xadd repz rcll and callq rorl jmp (bad) outsl jbe mov sti (bad) jo jne add fdiv rex.WX (bad) mov stc sahf sub movsb mov nop rex.RX jg icebp fwait imul loopne test (bad) xor (bad) mul sub mov leaveq mov cwtl rcrl scas loop cmp mov std leaveq fsubs fidivr jmp loop out rex.R rcrb popfq or stos cmc (bad) sub jg cwtl pop sbb lret (bad) xchg sbb push movsb (bad) mov fldl rex.WRB (bad) jp mov sub xor shrb shr push (bad) je rex.RB rex.WRB callq mov repnz scas es scas rex.RX stc sbb cmp jp (bad) imul xorb (bad) jno sbb jno loop sbb (bad) adc insb (bad) mov stos out and xchg clc rex.WRX fwait loope rex.RX loop sbb mov (bad) rcr (bad) xchg idivb clc rex.RXB leaveq xor lret (bad) enterq xlat test rex.XB jmpq rex.RXB (bad) jle mul add pop lahf ficomp je fcom or add loopne rex.W (bad) push frstor retq shr idiv sub jl rex.R callq and sahf mul in mov fild inc or testl add mov (bad) xchg jb loopne (bad) mov jge lods stc jmpq lock lea xor adc jno jb fsubs data16 fdiv jmpq cmpsl test loope (bad) adc pop push sbb test xchg retq notb ffree add fmull and in or xor rex.WB adc rcrl and (bad) out adc rol mov rcll lret stos push callq jbe adc xor rex.XB rex.RX (bad) (bad) mov cmc or adc jns mov (bad) repz out jne xchg test (bad) mov flds and (bad) mov (bad) sahf cmpsb loopne and push xchg sbb cmp adc (bad) roll pop int movsb (bad) in cwtl mov icebp (bad) stos movabs out or fnstenv cmp xchg mov mov xorl in jge fwait incl (bad) rex.WRX (bad) jns rex.RB rex.B and or loope sar sub movabs rorb std sub cmp je ss mov cmp cltd (bad) shll int sub xchg faddp out (bad) rex pushq or rex.RB rex.B nop (bad) pop insb push mov std or hlt add rorl (bad) (bad) sbb stc mov push movabs jno (bad) lock (bad) fsubs jg cwtl (bad) mov adc mull rex.RX iret (bad) push fisttpll test (bad) jne movabs (bad) (bad) testb popfq (bad) xlat fstl jae push lock shll neg rcll xchg or test jnp mov ja sbb retq rex.R leaveq vcvtsd2si add mov jge out (bad) push mov mov or pop add (bad) hlt jo addb cli add (bad) mov sbb fwait notb idivl int loop and popfq (bad) mov retq xor movabs rex.RXB lods ss rex.RX and xlat movabs movabs (bad) (bad) jmpq and add jae pop (bad) rcrl xchg add (bad) (bad) sti iret movabs sbb or adc (bad) cmp vmovntpd (bad) mov cwtl (bad) cwtl (bad) and callq and retq push test jmpq sbb outsb (bad) lods insl xchg sbb (bad) cmp mov add sti xor add and (bad) and adc rex.XB sub (bad) movabs xchg std rcrb in mov movb rex.WXB rex.B mov (bad) rex.RX (bad) sbb adc jnp es fs loop movabs movabs shll sbb sti (bad) or cmp ja shll sahf movsb outsb rex.R movabs or xor iret fs out retq cli mov shll mov ds add sbb add mov retq mov and rex.X rex rex.R rex.XB (bad) rex.B pop adc (bad) mul sub and xchg fiadd (bad) ss cmp fwait (bad) enterq mov fidivrl pop shrl and (bad) icebp repnz sahf or (bad) push pop out rep loopne movsb cmpl cli push hlt rex.WRX rex.WXB rex.XB add callq (bad) popfq (bad) mov jg out test fadd fistp lret (bad) (bad) mov add (bad) xchg cmp adc (bad) (bad) cs ds loop addr32 (bad) (bad) fidivl mov and movsb mov mov sbb (bad) xor jmpq clc mov xchg loop pop fmul push cmp (bad) rex.WR (bad) lea cltd imul movabs mov rex.XB sub xchg (bad) rex.W fsubl adc loopne xor and jb icebp in push pop pop jns xchg cmp cmp sub pop int3 add pop fsubr sub (bad) add rex.WB repnz test std mov cmp mov lret add (bad) js cld nop mov jno rex.RB addr32 (bad) pop xor rex.X lea loope or retq push fildll lcall (bad) icebp add rex.R xchg xor rex.WRX in cmp callq cltd test mov push mov pushfq cmp rex.WR xchg sub (bad) and mov xor fcomps xor and pop repz data16 xlat sub (bad) (bad) cld cmp ss fildll mov popfq test lret xlat pushfq or push (bad) ja mov push mov (bad) (bad) std xchg sbb (bad) hlt (bad) rex.WX imull (bad) movslq mov cmp rex.R mov xor int movabs sti push adc rex.RX lret leaveq lret (bad) loope (bad) pushfq flds cli jnp icebp stos scas (bad) (bad) add out lods stc (bad) pop rex.WB loope int cmpb fstpl test push retq and pop cmpsb andl movabs icebp insl jle cli (bad) lret imul push and rex.WRB mov retq ss fcmovnb pop xchg mov mov cltd push push mov jo lea lret (bad) fnstsw xchg (bad) vcvttss2si add jo mov sub movabs xchg cltd and and push out (bad) cld rex.WRB (bad) jne add (bad) test mov xor cmp fs movabs mov ja (bad) or in rex.RX rex.WRB out lret add jl xchg cmp fpatan cmpb rex.WRXB jmp test (bad) pushfq movslq rex.WRB fmuls jo (bad) xchg test (bad) movabs (bad) loopne sub lea mov or xchg sbb mov sbb mov nop jmpq repnz mov (bad) je sbb rex.B lock int3 fnsave add xchg hlt (bad) rex.WB clc xchg icebp and cmp rex.WB lea outsl (bad) mov rex.RB loop je push mov and mov (bad) cmp repz adc stos pop mov jb lahf push cltd (bad) xchg in cld pop lods mov or stc pop (bad) jrcxz rex.RB add mov mov jl sub sub mov jae loope in jns loope lods enterq cmp (bad) mov (bad) rex.RB fldcw xlat sub rex.WRB jmp jrcxz mov lret rex.WX (bad) movabs xchg adc add mov int cmp (bad) (bad) repnz sahf fldenv adc iret cwtl movslq push callq rex.WR fcoml rex.WR cmp rex.B fcoms (bad) xor test xor (bad) insl addr32 adc xor pop xchg (bad) mov rex.RB xor pop movabs xchg and mov jno repz movb (bad) sbb xor (bad) sti int3 out out (bad) (bad) (bad) or test divl ds fnop repz (bad) out movabs loope add lahf rex.WRX repz push xchg cmp shrb out push shl lea jno add cmp mov (bad) (bad) mov mov adc fldcw fisttpll or fs cmp imul jmpq sti jns add mov sbb shrb (bad) pop repnz adc lret out mov movabs je cmpsl jl (bad) adc lea xlat (bad) mov rex.RXB jmp pop adc (bad) (bad) fcompl (bad) jrcxz xlat pop stc rex.RXB faddp rex.R rex.R rex.WR jg rex.XB (bad) in leaveq jns (bad) xchg jb in pop fisttpl rex.B rex.WRXB retq xor mov callq negl (bad) in (bad) (bad) mov loopne nop push push pushq jmpq bnd cmpsb scas and rex.RX ror or imul scas mov icebp imul loope adc out mov sub fldcw lods fild sub (bad) int3 lea lods in idivl cmc movsl ds and mov adc stc rex enterq mov fnstcw (bad) (bad) and fsubrl cli add fiadd insb nop data16 divb loop rex.WX rdmsr out jg movabs lock jle push (bad) rex.RB loop nop rex.WX addl movabs or mov adcb mov js rex.RB rex.B mov jp mov in scas in (bad) es rcrl push shr jo or xor rcll out sub cmc xchg cs insl and jb xchg iret rcrl jg sbb test pop callq es movabs mov lods faddp jno jg in (bad) sti rcrl or ror ss xor lods rol (bad) callq ror in std mov lods shrl cmp rcrl mov (bad) (bad) scas sahf (bad) rex.RX inc sbb xchg push rex.B lock movabs (bad) in jo mov ss add (bad) ds mov or lret and xlat xchg int jo lock ja jmpq (bad) mov sub repnz add fisubr (bad) xchg (bad) shlw adc lcall out cwtl out loope xor sarl mov pushq or mulb push (bad) stos add lret rex.RX (bad) sub sbb stc and xchg xchg lea rex.XB lock stc pop rcrl rex.WR xchg (bad) loop (bad) jae sbb out lods rcrl movabs mov push in fcomps jns clc lahf shrl (bad) mov out (bad) outsl fbld cmpsl movabs add sub sbb xchg and movabs loop push shrl gs and (bad) sar lret (bad) popfq es test jno rcll add imul jp roll stos (bad) data16 nop in adc cltd (bad) xor (bad) xor ds lahf lahf jl rex.B rex.W rex.WRXB (bad) rcll jge or test mov scas jg mov in loope jbe sub rcrl sub push test ja fs xchg rcrb sbb loope mov add pop push stos int3 fidiv loop jge rex.R (bad) adc hlt sbb lahf mov scas xor (bad) fidivrl rex.W subb insl (bad) xor xor cmp jo rcrl fdivrs (bad) sub movd es cmp mov in fstpl xchg mov rol pushq mov stos shll cmpsb mov iret mov rorl stos fcmovu rex.WRX ror push mov lock lret xchg and add cmp mov pop int out stos popfq (bad) lahf rorl rorl cmp adc in cmpsb rex.WRB addr32 xor pop scas (bad) mov faddp or shl (bad) fadd adc stos (bad) fcmovne vxorps jbe pop shl or (bad) or (bad) mov lret xchg xchg add rcll mov (bad) out in jrcxz hlt cmp rex.WXB loop rex.B (bad) fwait mov scas push lods rcll rex.W ss mov and xchg (bad) (bad) mov and (bad) imul (bad) sti clc fcmovnb roll xchg or sub sub mov (bad) cli adc sub add xor jle (bad) (bad) cmp lea cmpb (bad) jae rex.WRB js sub (bad) popfq lock ror pcmpgtd xchg movabs mull pop mov add jns (bad) cmp (bad) out xchg loopne cs cmp mov sahf (bad) (bad) mov in movabs (bad) rex.R cmp pushq sub cwtl mov jmpq callq xor jmp sarl stos ds test enterq adc test cmc jae mov cmpsl loope xchg (bad) or rex.WRXB sub shll cwtl out lret add lret (bad) retq lea or shrl lret js or test rcrl movabs cmp test sub movabs scas shr stos shlb cmp (bad) (bad) mov bnd notl shll sub out jae xchg or jp cmp rcll pop lock adc cmp lock pop and jb lret js jne xchg roll or scas movabs adc jl lahf mov popq (bad) xchg push add test in pop movsb std or mov or (bad) sbb int lea jbe fadd xchg adc adc insl mov cmp mov js rex.RX iret jge push pop cltd movsb mov add jnp cmp cmp sub mov xchg cli sub sahf (bad) fwait rex.WX (bad) (bad) movsb outsb xchg push stos or fldcw mov sti sahf lahf (bad) hlt movabs xchg mov lret in (bad) loop mov lret xor mov stc movb cmp lret pushq movabs movabs rex.RX rex.B ffree ss (bad) sarl (bad) sub cmpsb mov (bad) pushq xchg loopne iret roll in jno loop cli movabs jle mov adc sarl (bad) rex.WRB push mov lods hlt or (bad) mov (bad) fwait (bad) out test (bad) jmp sbb (bad) push sub pop sub addr32 sti jb mov je cld sbb xor (bad) loopne cmp add iret rex.RB push mov insb or cmp mov or (bad) push sub xchg rcrb add cld rex.WR cli hlt rex.B fwait ja std insl xchg (bad) rex.WR cld (bad) cs jl (bad) leaveq movabs rex.B (bad) lret sbb jg sbb decl jae movsl shrb hlt jge int xchg (bad) fiadd rex.R rex.WRX sub mov popq (bad) sbb retq rex.WR lret movabs sbb punpcklbw xchg lock jb (bad) icebp xor nop xchg sarb (bad) repz rex.RXB movsb xor cmp rex.WRX rex.B (bad) (bad) pop add faddp push adc (bad) gs xchg add lea jmpq sbb jbe rcr jp sarl decl pop cmc rcrb rex.X xchg sbb cmpsl sub (bad) mov addl fwait cmc rorl push imul clc xchg push cmp (bad) data16 cs test (bad) xor enterq insb xlat test xchg cmpsl addb push hlt add xchg outsb jge xchg in (bad) mov retq mov rex.RX movabs mov xlat mov rclb adc jrcxz ffreep insb cld xchg scas (bad) jns sub xchg (bad) cmp xchg (bad) and loope pop fnstcw mov data16 and push rex.RXB or out push mov pop sbb iret push lods and fbld outsl adc subb in pushq cmp rex.RX insl jae mov int3 (bad) jrcxz test rex.X stos xchg xor stc in (bad) pop (bad) (bad) (bad) add lock mov sarl jl rcl push mov sub mov (bad) mov fcmovnb mov lretw rex.WRB cmpsl mov mov lods and (bad) rex.WRB js mov rex.B lock test cmp xchg mov movsb or mov add push enterq mov jle idivb rex.WXB subl add (bad) lock (bad) mov rex.WR fwait adc stos or mov cmovge sbb repz mov out (bad) ds rex.WR cmp rcr (bad) mov jae cmp cmc ds add adc push mov xchg (bad) stos rol shrl or imul data16 movabs roll rex.WRXB test pushq out int callq mov mov add (bad) push jmp (bad) mov mov add rex.WB sbb rex.WRB (bad) outsl and jb insb sub rex.W insl sub xchg sar mov (bad) xor cmp mov rex.B fsub cmpl shlb push lret sbb fnsave movabs cmp xchg lods shrl sbb cli test jg add rcr (bad) shrl mov rcrl iret (bad) out sub mov movabs outsb movslq adc lahf rex.WRX cltd cmp loopne callq pinsrw retq (bad) xchg in int3 sbb callq jge (bad) enterq adc cmp ja leaveq callq mov (bad) addl insb jno or sarl (bad) fidivrl movabs (bad) lods jae (bad) mov rex.WX (bad) sub add pop js rex.WRB and movabs add and (bad) enterq pushq rex.WB sbb icebp (bad) lea xor xchg cld lret jg mov sbb rex.B cmpb repnz or pop lock rex.B sbb rex.WXB test (bad) rex.RXB insb xor rex.B lock rex.WRXB enterq (bad) sub jne (bad) pop decl repz shlq in pop and mov (bad) xor push (bad) insb sarl sbb out cwtl movabs xor (bad) (bad) jmp test (bad) lret movabs stos ss add xabort orl movsl rol stos (bad) fsubrp nop mov rex.W push out push add (bad) shll (bad) icebp stos mov rex.WXB out out imul add jb pop xchg rex.WRB jno cltd int loope adc cs mov rex.R rex.RB (bad) (bad) movsb or jno cmp (bad) rex.WRXB cmpsl lret rol ficoml cmp (bad) sbb xor pop (bad) cmc mov or xchg lahf enterq rex.R out je cli fnsave shrl test cmp pushfq jno or sarl sub jb je mov xchg mov cwtl jae (bad) fwait movabs fcmovnb jp mov or enterq jae mov jne test test shrl movabs xor xchg stc out mov xchg jne (bad) rex.R fcom int mov jmpq jp xchg xor fildl xchg pushq fnstenv (bad) sub jrcxz sahf jns (bad) test sbb rcr mov xchg scas xchg mov (bad) xchg push movabs testb push iret push out mov and add rorl and (bad) mov shrb jg adc (bad) icebp rex.X xchg add lret (bad) int3 pushfq lods rex.W cltd mov mov rex.WRX rex.R rex.XB mov shrb iret (bad) push jb repz test mov andl rex.X repnz mov add rex.B rex.R mov mov (bad) shrb add ds mov shll test iret movsl or sub rex.WX icebp ds adc fcmovnu pop jge lock scas mov (bad) cmp and mov rex.WX rex.WRX adc (bad) icebp cmp sahf std cwtl idivb rex.B sub rex.B fs (bad) push movabs (bad) or test ja rcrl cmp push shl (bad) jo rex.WX retq mov add movslq (bad) (bad) nop idivl popfq sub xchg roll loop iret (bad) mov mov mov in mov xchg (bad) icebp add movabs lahf nop retq (bad) pop xor scas pop pmullw xchg pushq xor mov lea and rex.RX out add (bad) shrl fisubl rcll negl ss ja rcr jle clc in add push rorl outsb (bad) fstps shll out xorl mov mov xor movabs rex.WB jns (bad) mov xlat xchg shll sub add (bad) test adc shll cmp lahf cmp ror mov cltd jbe lret out shrl xchg xadd mov xor (bad) cmp es jrcxz xor lret fmull es sub movl fcmovnb jno adc loope (bad) jo cmp sub rex.WB rex.WX insl and or (bad) shl (bad) cmpsl rex.WX jnp rcrl and in pushq fiadd xchg push shll sub fstpl imul inc lods addb iret es (bad) (bad) js push pop (bad) (bad) out or shl sbbl and lock testl mov push in out int stos rcrl scas fbld sbb mov sbb cmp or fsubrs sub int3 movabs repz int sarl popq (bad) enterq enterq jno fidivr loop repz test insb addr32 pop cmp and rex.B push mov (bad) push or shll ja and pop icebp movsb jrcxz mov mov scas rolb (bad) scas push leaveq sbb out lcall (bad) lret mov std ja loope mov mov xchg sarl sub rex.WRXB cmp rcll rex.WB (bad) rol xor pop cs pushfq xlat movabs push sub adc (bad) jo (bad) xchg pop (bad) and cmp in je mov mov push int3 (bad) callq out movslq stos rex.WR rex.WX xor roll lods sbb (bad) fist jnp (bad) sub rex rex.WR es (bad) repz and rex.WX rclb loopne sub cmpl retq roll (bad) ss mov jle imul push and iret (bad) mov (bad) rex.B jrcxz xchg repnz add (bad) mull mov movabs (bad) and rcll lods rol mov (bad) int (bad) ja pushfq cmpsl jge sahf adc push cmp fcoms rex.WB fimul xor in xlat and rol mov push mov lret xorl shr movabs xor fcom mov icebp jg fidivrl rorb (bad) mov (bad) mov rorl insl xlat mov movsl test jrcxz mov repnz repz cld cmp jge rol movabs and (bad) pushq (bad) lret (bad) mov (bad) mov ss mov sub lock bnd sbb (bad) pop stc jrcxz fnstenv rex.X rorb rex.RB mov xchg mov lods mov fwait sbb xchg out cmpsb (bad) lods fbstp add xlat add fadds xor cltq movsb movabs imull cmc mov jrcxz rex.X mov xor xor lahf stc movabs sahf roll mov mov jge (bad) mov vrcpss int (bad) or xor xchg idivl leaveq movabs fdivs retq test scas mov mov mov rex.R rex.WRB test repnz and cmpsl (bad) insb cltd (bad) pop jge rex.WR scas add cmp in decl (bad) mov and rex.WXB cmp insl (bad) rex.B (bad) movabs orl add rex.B rex.WXB cs (bad) mov (bad) cmp push roll mov hlt test in mov scas mov sub adc movabs imul cmp retq fbld rex.X or jne cltd jo orl lods and shll pop mov rex (bad) loope movslq test jl out sbb roll loope out or ja mov (bad) mov sub out fcomp sub punpcklwd xchg mov lret mov rcrl fistl enterq scas shrl test mov sbb mov mov and mov ja xor sub (bad) ds shrl (bad) js sahf rcll scas movabs addr32 sub sbb cmp fild rex.RX sub (bad) sbb adc lcall out adc (bad) movsl pop roll leaveq pop cmpsl mov pop (bad) scas callq rex.RB jp mov mov jbe add outsl in pop movabs pop rex.XB sub add add mov mov sahf movabs and loopne movabs cli pop rcrl jns lret nop xchg (bad) or and (bad) xor mov mov xchg push sarl int3 ficomp xor sarl (bad) xchg paddd loop sbb mov faddp xor (bad) and (bad) lret xchg mov lea xchg or movsb jmpq mov (bad) cli popfq hlt and sub mov mov scas (bad) movsl (bad) add mov (bad) mov repz rcll movslq (bad) cli lea xchg (bad) movabs pop shll or loop mov fwait rcrl int3 mov fcmovnb jmpq add pop cmp ficom xchg rcrl (bad) push cmpsl cltd pushfq mov rex.B (bad) jne clc test mov gs mov loop sub xchg jge loop ja rex.WB icebp retq (bad) push add (bad) mov (bad) or xchg js rex.R mov loope (bad) mov (bad) rex.WX addr32 hlt (bad) out sbb xchg out in repnz and fstpt enterq sbb (bad) callq int stos cld (bad) callq xchg jbe or scas (bad) sub xchg adc xchg rex.WR fiaddl xor and push pop xchg fdivl sub subl (bad) repz (bad) xor jle add xor (bad) fcomp jl jge (bad) lods loopne addr32 roll mov rex.WRX repnz adc sbb (bad) jno cmp iret rex.WRX enterq sbb or jae jno pop push and leaveq (bad) xchg rex.XB add rex.RX rex.WRX (bad) fiadd jo sar (bad) mov addb enterq adc sub (bad) or cmp shll (bad) and lock or xchg (bad) (bad) mov pushq pop (bad) out (bad) stos (bad) and (bad) rex.WX and mov icebp cli loopne xor pop pushfq (bad) cmp cmpsl sbb retq jo (bad) int jb (bad) movabs (bad) movabs imul push add es mov repz pop mov lea sbb movslq in pop cmp and xor xchg mov push insl cli shll sbb fild sub pop rex.RXB lret jp movabs nop add pop scas popfq or cmp rcl rex.X rex.RX (bad) iret rex.WRB addr32 iret xchg rcrl push xor (bad) xchg push rex.B mov (bad) lock pop rex.WXB rex.R xchg jae jp push push sub mov mov jbe loope cmp sahf xchg lods (bad) or sub rex.RB mov shll test sahf shll xchg jo cltd repz (bad) add sbb add in fistpll outsb xor repz (bad) jno pop sub popfq rex.RXB popfq sub addl or fadd (bad) jmp nop sub jl rex.WB enterq sub adc (bad) xchg cwtl in scas fwait jae in and rex.X rex.R std loopne sti pop mov pop mov leaveq mov rex.WRX push jne push imul xchg push mov and jmpq fsubp rex.WXB sbb sub pop mov loopne movslq repz lock rex.WRB cmc (bad) (bad) sub movabs (bad) xchg test (bad) add rex.XB sbb jmp int3 cld je sbb movabs lock cli fisttp rex.WR es jg loope lret lock and (bad) retq leaveq mov mov (bad) movsb lret cld movslq (bad) push rex.RB insb stc cmp negb callq fisubr cmp rex.R fimull retq xchg pop (bad) callq roll rex.R xorl xchg (bad) push jbe rex.X sbb rex.W (bad) (bad) (bad) mull sub lods jg addl jp or and sbb (bad) sub test cmpl rex.R push sbb sarb push sub jbe out add mov outsb int3 mov cmp xlat add sbb (bad) (bad) int mov retq repz pop push retq xlat stc lods icebp (bad) and fldl mov pushq lahf movsl insb fstpt rex.RXB icebp rex.X cmp (bad) jae repnz (bad) sbb (bad) (bad) sarl and rcl test or sub int3 insl test and out jbe cmpsb fld (bad) jg imul or mov pushfq or shll sbb lret add xor (bad) jae (bad) roll cld test mov and (bad) rex.RX lock js sbb pop xchg jl rcl cmp rex.X cli cmp lret shll cltd (bad) movabs movabs sub (bad) insl add rex.WRX mov loop insb (bad) int callq pop rex.WB cmpsl out lods mov sarl out fiaddl movabs (bad) jrcxz add mov (bad) jl data16 cwtl loopne rcrb test (bad) rex.WX sbb xchg pushfq ffreep shll push insl insb shll iret outsb loopne mov stos loop retq add sub test (bad) mov xlat jle (bad) je movabs (bad) sbb or (bad) ss jae movsb rex.WB and rex.WR movabs out rex.B rex.W stos test add xlat (bad) lret and pop or (bad) imul ja rex.X mov (bad) sbb lret push movabs sarl sarl rex.RB callq or shll pop in add (bad) jae (bad) and mov sbb sub callq xlat movabs vcvtusi2sd rcrl jnp (bad) in (bad) (bad) mov mull xor sbb int out movslq in movabs in popfq xchg xchg shll push pop (bad) cmp pop (bad) rol rex.XB roll adc (bad) or jo xor stos xchg test cs jrcxz jnp callq pop and int3 std mov sub rex.B stos scas pop xor or xchg and mov repnz fsubrs sbb test std (bad) rex.WRXB jg sarl ss shr cld xchg out (bad) test scas rex.WXB jns cltd mov sahf (bad) and (bad) (bad) lret sub movabs rex.WR jae in mov lret xchg add jno jbe lea (bad) div (bad) add add (bad) lahf (bad) or movsb mov cmpsl rex.XB ds (bad) jg adc pop rex.WRX cmp out mov test rex xor mov mov jne,pt int3 lret pop mov (bad) repnz rcrl in xchg lret (bad) push hlt mov mov xchg int3 retq mov loop xchg movsl xchg ja,pn movabs mov pushfq jno iret insl loope mull (bad) xlat sub (bad) xchg adc movb js adc cmp xchg loopne mov push xlat js rex.WX sbb movabs or (bad) adc (bad) nop sub rcll mov (bad) fnstsw (bad) (bad) rex.WX (bad) ficompl ror cmp shrl test roll jnp sbb xor and rex.WRX push (bad) mov andl mov in fsubr mov xchg xorb (bad) mov jg mov and (bad) add mov test fwait add and std ror (bad) scas mov (bad) callq jae loope xchg jrcxz adc mov rex.RXB or sbb hlt std test sub enterq (bad) (bad) vmovdqa repnz repnz stc in outsl rol je xchg movabs sbb pushq insl add xor push stc mov retq xchg or rex.W (bad) popfq add and rex.B fs (bad) rex.WR callq rcll movabs sub andb callq or (bad) and repnz jmpq cli jrcxz sahf cld lret cmpsb adc or callq and icebp leaveq outsl (bad) mov int3 add rex jg and rcll orl sarb int3 jno cld push push or jae mov sbb rex.WXB rex.WR lods and adc addr32 mov jl mulb add pop imul lods rex.WRB and (bad) mov rex.XB ror mov sar movslq retq movabs adc fnstcw sub lret insl mull mov rex.R rcl (bad) idivb rex.WRXB mov mov jns rex.WR jbe (bad) jb pop cmc movabs test rex.RX repz shrl pop out push repnz adc or mov roll xchg (bad) js fldcw cmp add jne (bad) jg or mov (bad) rcrq leaveq (bad) shll jne sahf jp nop retq loope pop (bad) mov rcll icebp (bad) lret repz movsb (bad) movabs js movabs (bad) (bad) mov lret sbb (bad) mov ffreep (bad) fwait scas leaveq lock mov lret callq shll sar test rex.B ds jbe jne ffreep lahf jle (bad) sahf (bad) callq push test leaveq repnz sbb (bad) psrad movabs callq sub (bad) lea xchg lret mov jmpq (bad) std sub mov pop or rcl lret imul pop add pop stc movabs mov (bad) jrcxz (bad) rex.W addr32 imul js (bad) leaveq jo mov (bad) outsb loopne retq adc orb rex.B xlat jge (bad) mov iret sub rex rex.B (bad) and insb movabs (bad) bswap sub or (bad) mov (bad) rex.XB sub (bad) jne xor jmpq xchg (bad) insb in rex fdivp (bad) loopne enterq mov rex.WRB test pop xchg adc sar xor jns insl mov mov movl pop (bad) xor and in mov adc and mov stos (bad) rcrl xor loopne insb (bad) xor pushq push add out movabs fwait scas or pushfq fnop (bad) stos push insl repnz jl xchg es repz adc rex.B xchg cmpsb sbb (bad) cmpsl sbbl or fdiv int pop xchg movabs test xchg pop xchg shrl rolb (bad) sub sbb cld pop rex.R add nop (bad) scas (bad) sarl mov orl jge rex.RX jae or sub and rex.WXB rex.WRX jl mov outsl loope and sar fcoms cli mov retq (bad) outsb test (bad) xchg rex.RXB (bad) mov (bad) (bad) mov xor cwtl cld jl jle sarl cmpb mov xor mov and adc repnz mov es xchg ss je cmp add xor lahf jmpq cmp test sub imul cld xchg pop mov pop push sbb movabs out testb popfq out rcrl adc subl leaveq retq rex.WB xchg (bad) adc scas xchg sbb sub fcoml mov in rex.B rex.WRX movabs test loop add rex.WXB cli enterq rex.XB (bad) jge rcrl adc rorl sbb push gs cmpsl sarl and (bad) sti repnz (bad) adc frstor sub cmpl and rex.R ja (bad) jno jmpq (bad) xchg lods jg pop jrcxz add and push (bad) (bad) jmp mov pop lahf (bad) test movabs xchg pushq and xchg stc out in adc xor lock add fdivrs stc and or lods pop cmp sahf (bad) xor (bad) incl adc lret jbe jle rex.RXB loop shrl and std pop (bad) rcll (bad) pop (bad) jns fidivrl (bad) jp loope and vcvttss2si cmp add lret mov pushq cmp cld add mov mov (bad) stos jae (bad) in xchg cmc cmc push lahf add xor push sbb cmpl rex.WRX cltd cmpsl mov frstpm(287 loop enterq retq xlat xor add sub push enterq test loopne add (bad) add je fnstcw mov movabs out sub leaveq lret std cmc out xlat pop mov and sub (bad) (bad) leaveq fdivs (bad) xchg sarl mov gs sub rex.WRXB test rex.B cmp loopne hlt sub imul std rex.WRX jo in xchg push test (bad) js cmp repnz fs fwait nop imul repz fptan and pushfq pop cmp out rex.WRX xor jnp vmovups mov xor or jmpq clc mov xchg mov (bad) and stos es stos rep (bad) repnz add add movabs rex.WR rex.WRXB rex.WRB mov rex.RX repnz push mov xchg in pop mov fcomp retq add xor jbe add rex.B hlt shrb (bad) roll bnd sub sbb es rex.WRXB data16 std int3 (bad) rorl stc rex.R (bad) ror retq add xlat (bad) add xorl mov in rex.WR rex.B retq jno xchg or cmpsb mov pop int (bad) pop ss add mov sub and and in pop xor lea or add cli or lea addq gs push pop shrl repnz fidiv shll jrcxz movabs (bad) rex.WX rex.WRXB or (bad) (bad) pop (bad) or rcll (bad) cmp cmp cmp std pop xchg sbbl movabs cltd sti sbb xchg and scas xor rex.WR iret js sbb or rclb fadd (bad) loope,pn (bad) lret rcrl icebp adc (bad) enterq xor xor out popfq frndint iret lret add or scas rorl fldcw add ds cmp (bad) (bad) mov lods push mov pushfq (bad) adc rex.RX repnz sbb (bad) sub popfq sar lret je jrcxz fdivrs js xchg mov (bad) push mov rex.X faddp in rex.RXB or repz (bad) imul in jno mov cwtl (bad) (bad) out in jmpq lahf mov xchg stos jnp jns movabs and ds fisttp add iret (bad) lock mov and sar fst outsb (bad) sbb mov mov and push add (bad) int3 lret stos mov (bad) xchg (bad) scas (bad) test and (bad) sub lret imul rex.RX xchg push movabs sarl retq shrl (bad) cmp pop decl movslq sarl mov in mov sarl shrl push mov sub outsb rex.R xchg in sarl (bad) rcrl add sbb (bad) pushq jg (bad) cmpsl (bad) adc (bad) insb (bad) pushq xor (bad) mov cmp rorl pop movsb (bad) repnz xchg rex.WRB jge (bad) je insl repnz subl fcmovb jae rex.WX mov pop roll fnsave pop shrl lret sbb movabs fadds pop xor outsb (bad) stos (bad) jl jae cmpsb xchg (bad) cltd (bad) mov or add hlt repz mov rcll add xchg pushfq shll add push sbb rolb push pop mull (bad) mov adc stos pop iret negb xchg cmp (bad) sarl hlt (bad) (bad) mov cs rex.R or or (bad) in (bad) outsb sar pushfq cmovle stc (bad) jge ja jne adc scas mov add jae sub mov jmp ror jle andb jne fimul xchg nop callq adc movsl cmp movsb (bad) sarl (bad) cmpsb or mov sahf sub jne or rcrb (bad) sub movabs push and rex.R lahf scas (bad) out out cmp adcl vcvttsd2si (bad) mov in shl and testl and pop rol movabs sub outsb ds push insb mov rol xor icebp xor xchg out or imul mov scas testb sbb and imul and cmp (bad) js add rcll cli xchg fnstsw (bad) add icebp xor xchg sub push (bad) ss push enterq (bad) (bad) xchg pushq repnz mov lahf retq test xchg xor in pop rcrl shll movsl sqrtps mov ror in (bad) xchg cmc repz (bad) rorl sub lcall and xor ja testl adc and or sarl add and (bad) mov rex.WR (bad) push and cmp hlt xor nop and adc mov jge lahf mov or xchg cmpsl movabs movslq and or add rex.RB (bad) addl (bad) (bad) (bad) sbb rol fistpll sarl pop pop rcl xor iret movabs xchg push or fsubs rorl je adc nop rcrl rex.XB iret jo xchg xchg loop js roll pop jno imul xchg rex.WRXB cli and loope es rex.WB retq pop jo shrl int3 loop jrcxz add mov roll sbb (bad) (bad) mov callq cmp push sub (bad) jg and rex.B xchg jp fiadd sub movabs sub sub (bad) adc movsb pushfq ja hlt (bad) test and fcmovb xchg adc add je icebp fwait pushq scas mov repnz callq (bad) rex.X repz lret add (bad) (bad) (bad) xchg lret (bad) rex.WXB es (bad) (bad) push scas cmp std shrl xor push xor sub jbe add movabs leaveq pop pop xchg and jmpq (bad) (bad) nop cmp (bad) (bad) push mov movabs data16 rex.RB rex.W mov cltd cwtl scas mov (bad) rex.XB fmuls rex.RXB and fmull scas div xchg pop adc cmc out (bad) mov pop (bad) sbb jae (bad) mov xchg andl rex.WRX rex.WRB retq leaveq jrcxz test mov cmp shrb icebp mov repz nop add imul add mov rex.WRXB mov ds (bad) adc mov lods movabs movabs add cmp adc xor sti adc jrcxz push and cmp rex.WRB jp ffree add flds mov (bad) rex.WRB jmpq (bad) or push (bad) rex.R in sbb and jle rex.B or idivl fbld movabs rex.B jne adc lahf int3 cwtl jae movabs cmp mov out add ficom imul xor mov sbb or xor clc mov je rex.RX lahf cmp clc loope push int3 rex.RXB (bad) sbb loopne jg rex.B rex.R jns xor add (bad) (bad) lock add shrl jbe adc decl pop movabs mov repnz rcr rex.WX xor rex.W (bad) rolb or jb fmull jbe and sbb cs in (bad) cmp (bad) and (bad) mov outsb add mov shrl mov bnd xor xor (bad) jae (bad) pop scas mov sub mov push out fs pop shrl ss out (bad) mov sbb shr or movb pushq orl shl pop sub imul mov rex.WR lock imul push cmpsl rex.WXB rol sub hlt (bad) sbb xor mov sbb movabs add xorb and cli pop callq (bad) sub rex.WRXB (bad) (bad) out rex.WRXB mov xor rol decl es loop (bad) xchg sti movd (bad) jl,pn stc rcr movabs (bad) (bad) add sub xor cwtl insb scas paddsb mov iret in (bad) pushq push (bad) mov xchg pushq (bad) push mov rex.B add test rcr mov or mov pop shrl hlt mov (bad) cs rex.X jg (bad) lret adc sub rex.WRB fldcw rex.RX pop retq cli test movabs fidivl xchg rex.RB and movslq rex.XB lock mov mov jbe int rex.WRB jno cs xor lea (bad) sub adc lret (bad) and int3 (bad) jb cli xchg cmp jnp and mov (bad) loop xor rorl (bad) sbb pop cmp fist shrl rex.W callq fs (bad) repnz jb movabs outsb xchg movslq and sarl fisubr lahf (bad) stos or jge rex.X loope fcmovnb cmp (bad) mov cmpsl ror cmpl or movabs sub mov (bad) (bad) (bad) (bad) test rex.X movabs mov jge and movslq mov mov push sahf (bad) lret es cli xchg pop jrcxz roll fdivs rol rex.WRX pop fidivl pushfq rex rcll (bad) setp push out pushfq sbb lret test in movabs cld rex.RX (bad) rex.WRX ja xchg sub add sar sbb fs cmc (bad) xor shll inc mov jae fisubrl leaveq xchg iret roll or test std rex.XB es pop jae fwait sarl (bad) rex.X repnz push and (bad) sbb or frstor and outsl xor rex.RXB xor mov (bad) pushq (bad) (bad) enterq int and push xor rex.WX xchg adc sub pop fcoms (bad) xchg imul mov (bad) roll xchg (bad) mov mov jp xchg mov incb fidivrl in (bad) adc je enterq pop rex.WR rex.WRB and incl rex.B mov sub jae push (bad) (bad) add mov orl lods jo (bad) out mov (bad) mov (bad) js (bad) and push cli adc sub enterq data16 xchg (bad) add add fcompl (bad) jmp add rex.WR sahf loopne (bad) adc adc adc push sbb addr32 rex.WX xchg mov cmp or xchg pop pop fnsave shrb sahf rcrl mov xor callq sub and rcl sbb cli mov rcrl (bad) jmp add je sub and sub mov mov (bad) mov rcrl (bad) push test shlb cmp (bad) xor rex.R jnp out retq nop iret fsts in lret (bad) test and mov jnp rol (bad) and (bad) push lahf mov rex.B rex.WRXB adc and hlt push mov cwtl xchg fwait ds out rex.WRXB jbe sbb stos enterq add jp add cmpsl roll int rol push lahf or (bad) mov cwtl rcrl xor retq cmc callq and sbb mov movabs clc rex.WB or (bad) and push fmuls shl cltd in lods mov (bad) imul movsl rcrl rex.B cs xorl sub sub fild jb rex.XB fcoml mov movabs add movabs idivb movsb cwtl popfq cs mov jbe (bad) pop jle cmp jg fist negl sbb mov add rex.WR fyl2x jnp loopne rcrl sub rex.WR and mov or outsl (bad) push adc mov xor sub pop push sub fimull and xor (bad) (bad) jno addr32 push outsl (bad) mov jp and xor cmovb fnstsw jo sub mov loop add cmp and movabs add sub fsts (bad) adc mov rcll or retq shll test movabs adc (bad) xor nop or xchg sarl retq je rex.WRB and lods scas sub sbb (bad) xor (bad) mov rex.X cwtl (bad) leaveq fild cmp stc (bad) (bad) in addr32 sub pushfq mov and xchg fistl rorl add rorl outsb mov jmp fwait (bad) xor in or push in pop xchg mov sbb (bad) icebp iret add (bad) xor jg mov (bad) out or xor scas adc lret rcr add rex.WR rex.X fisttpl rol mov js jle shrl mov (bad) push in jmp add (bad) loope add pop (bad) and mov notb push retq xadd jmp sub (bad) hlt xor notl cli rex.RX (bad) rcrl rex.XB push pop imul add insl rex.X fs pop test lock divb (bad) (bad) in (bad) jno and xchg sarl jge rcll mov je mov (bad) push rorl add cmc loope test mov test stos add out rcrl bnd int fcoms mov imul cmp adc retq (bad) fmuls rex.XB out (bad) (bad) andl (bad) mov xlat jo pop (bad) xchg (bad) js fst (bad) rex.WRX lret fwait (bad) push add jg rorb movabs idivl lea xchg mov (bad) pushq mov (bad) mov push mov sub (bad) pop (bad) rex.WB jo (bad) add xor imul rex.W sti mov mov rorb cmpsl rex.XB push rex.WXB loope int xchg mov jno pop xchg sahf in add mov insb movsl cmpsb lret outsl and jo jns repnz rex.RX rex sub jns sub jge cmp sbb mov adc push cmc push jrcxz (bad) (bad) or in (bad) pop cld enterq jrcxz (bad) mov push and repnz kxorw xchg (bad) (bad) cltd push rex.W outsl stc je rex.WR jg lret jo mov pop xchg mov cmp push mov cli leaveq data16 callq and negb xor sti push pushq stc jae testl xchg rex.WB mov mull xchg retq loopne and movabs or fidivl stos xor out (bad) xchg cs cli mov cmp movabs (bad) xchg mov mov mov movsb (bad) leaveq push popfq out std jne pop clc repnz (bad) rcrl test mov rex.RB sub xor jns (bad) sti mov movsl rex.WX rex.XB (bad) add es xchg test retq pop cmp adc add (bad) pop cmp rex.RX shll jnp sti pop scas fimull xchg mov (bad) and pop push adc jns,pn and (bad) jg sarb mov movabs hlt adc (bad) (bad) mov rex.WRB rex.WB fs rorl sbb iret stc (bad) retq and repnz loop and jrcxz (bad) or mov subl mov repz fdivp mov loope loope repnz pop jl rcll add mov sbb movabs xchg out jae roll push pop mov (bad) out jnp out int3 adc mov push mov jle xchg adc rorl pop sti in jge or (bad) ds shrl mov add mov in sub lods jge (bad) retq sar mov ja (bad) pop adc in (bad) scas pop shrl in xchg (bad) popfq repnz nop sbb movslq rcl lods testb xorb rcrl addr32 xchg int3 rex.WRB lahf rex.B lock xchg xchg movabs sbb xor (bad) xor (bad) in lods outsl rex.WRX movsb (bad) (bad) cltd mov push insb jns cli stos (bad) ja mov and (bad) cwtl loope cmp out pushfq pushfq rcrl movsl movsb (bad) movabs fs fwait stos xchg jg pushfq sahf push test mov (bad) fsubl and (bad) (bad) xor mov xchg popfq scas cmp (bad) jae lret (bad) pop out clc (bad) rcr or xchg fdivrs xchg rex.WB enterq xor (bad) and or sub pop lods push jge jmp and fildll test mov sub xchg or xor fsubl outsl cwtl test sbb rcll cld mov jge rex.WX rex imulb jmp mov (bad) (bad) callq adc xchg lea rex.X (bad) mov xor notl (bad) push sbb pushq jmpq xchg icebp or push or lret add pop sbb sar mov popfq jne mov lret xor iret adc push add jp inc movabs sub jmpq push ror je rex.WRB cmc (bad) mov (bad) test (bad) jns add mov push movabs rol (bad) xor pop lea xchg out data16 add sbb cld lock xchg shl (bad) or rex.X or cwtl (bad) mov pop mov outsl add shrl mov (bad) rcl push cmp sahf cmp and push fadd addr32 out cmp adc test cwtl cmp xor std xor fs nop or (bad) mov outsb ficom rex.WB sahf and mov roll int3 movsb jne movabs sahf (bad) rex.RX cmp pop movabs lods roll cli (bad) xor push pop (bad) sub rex imul callq pop cmpsl shrl and rex.RX repz mov add mov icebp roll adc mov addr32 push xor xchg scas movabs xor outsl (bad) pushfq (bad) add jmp jl in mov leaveq scas shr pop pop jp cs movslq rorl sbb nop sbb popq xchg or and cmp (bad) mov adc sbb jbe add xor (bad) push mov cmp sbb (bad) jmpq lahf (bad) mov pop or fstpt push shlb rorl loope rcrb pop pop movabs (bad) pop sarq popfq movsl (bad) leaveq test rcrl and push jmp rex.WR sahf cld gs xor xchg stos frstor retq mov rorl fistl add sub mov sub rex.RX cmp jmpq leaveq std and (bad) rcll (bad) mov (bad) mul (bad) sbb popq lock sub pushq loope pop (bad) stc (bad) adc mov mov enterq (bad) cmpsl lret and xor imul jo outsl rex.WX ds out xchg lods mov pop adc roll mov popfq lods cmp add stc cmc jbe outsl imul lret lods xor pop shl rex.B (bad) (bad) movslq rex.X cmc stos fildll push lret (bad) push fdivs adcl rex.WXB (bad) popfq mov insl rex.XB cmpsb and or (bad) rex jl mov xchg movslq rol vxorps movabs xchg or rex.WX mov or fiaddl shrl or pop ss sub std int3 int ds sti rcll in shll and (bad) pushq pop imul rex.RX rex.RB xor cmpl es push shrl cmp (bad) jmp jl in (bad) data16 imul xchg or lret lods rex.R and jp mov (bad) and jno gs cmp mov rcr xchg pop pop rex.WXB retq sbb int3 (bad) xrelease or (bad) jrcxz (bad) xor int3 (bad) out pop imul cmpsl loopne rex.RX ror pop cmp push sbb cmpl jnp stos in push rex.X (bad) test xor jae retq int3 movsl out cmc (bad) xor cltd std xchg mov mov mov adc (bad) in rcl rol ds (bad) ss (bad) mov loopne cmp flds scas jg lret push rex.B ss scas pop (bad) test rcr rex.XB ds xor out pushq or (bad) fld fidiv xchg movabs (bad) repnz fidivl (bad) sahf fnsave jno mov sahf shr sub adc (bad) sub add jg gs rex.B and xor retw or jne xchg mov cmp addr32 cmpsb (bad) adc scas push loope add rex.XB test pop jno mov enterq hlt add pop jnp movabs (bad) fnstsw xchg rol adc rex.X rex.WB in imul pop test movslq xor ror cmp rex.WRXB cltd fwait jne (bad) imul sarb (bad) (bad) cmp pop or (bad) adc jg sbbl popfq rex.RX repnz sbb addb (bad) sbb pop xor cmc fsubrs mov cmp loope fdivr movslq mov pop push lret rorb movabs jl in xor fxch xlat or sub pop icebp int3 repnz retq sub cmp pop fwait lret cmc rex.XB bnd movabs lret test fstpt rex.W lahf fstp mov imul sbb mov pushq mov (bad) rex fcmovne rex.XB test nop shrl int adc pop je fist and int3 sbb fisubrl retq add (bad) mov sub xchg (bad) int3 mov mov movabs add lret sbb mov shrl (bad) pop cmp sahf fdivr mov mov pushq bswap cld bnd fildll movsb jmpq loop mov adc stos es xor sub xchg fsubs sbb (bad) fwait sahf xchg xor movsl jb js push adc (bad) pop not callq (bad) sbb cmp rex.B je mov or or or lret mov add popfq lods insb je lea jbe add (bad) cmp out jl rex.WRB xchg mov scas sub rex.R lock (bad) (bad) cmp addl adc rex.WR data16 xor xchg sub shlb mov repz sarl incq popfq (bad) movsl nop mov lock sbb xor int3 jg rex.WRXB clc or ss (bad) adc pop rcll jno cmpsl sbb repnz imull enterq or xchg push shl (bad) (bad) and sbbl mov lahf xlat rex.X (bad) (bad) std rex.RB xchg add shrb push mov rcrl xchg cmpl adc fwait (bad) jns test cmp fbld fadds sub mov sub or fisubr idivb xor mov or adc mov and rcrl mov jb mov fnstsw mov repz cmp fdiv fisubrl (bad) sub popq out cmp nop pop push push jne ficompl ds add rol lods (bad) mov push sar rex.R movabs add rex.WRB (bad) loope ss rex.B ja (bad) test pushq data16 cltd lahf sbb int rorl xor (bad) scas push (bad) pushq add out retq cmp push jg lret rex.X cmp imull (bad) (bad) shll cld icebp ror jp cmp lods mov cmpl int3 sar (bad) add rex.R jb xor imul or sbb mov mov je (bad) loop sub cmc stos mov add insb push repnz in (bad) mov and jo adc cmpsl movb xchg mov adc out in (bad) rex.WXB xadd (bad) push (bad) or std rcrb mov ja callq imul fstpl sbb lea add stc outsb adcb mov insb and mov rex.W lock (bad) push scas callq (bad) and or retq out mov and movabs xchg es mov mov cli test std test and es movslq leaveq shl mov add fisubr rex.X sarl rorb movabs cmc movabs cmp retq and ficoml or rex.RB push pop cmp movslq adc sub (bad) jmp fwait sbb iret pop rex.R rex.WXB lods add xchg cltd fsts int3 fwait orl and (bad) cld jg rex.WR lahf add test test test rcl add rex.RXB and fwait ror addl add (bad) jrcxz adc cmp (bad) (bad) scas fsub (bad) mov pop cmp adc rex.WB (bad) or pushq mov jge test enterq adc retq rex jno mov jbe (bad) sbb mov jp stc popfq sbb xchg xor lods outsl test rex.WRXB rex.B rex addr32 fcmovnbe mov jmpq jrcxz cmpsl lock movabs loop (bad) nop (bad) repz out pop cmpsb mov nop sub addr32 rorl push or jns jnp cmc or fcompl test stos mov sub sbb (bad) add (bad) (bad) test sbb imul add shll sbb out mov jne nop sti or (bad) (bad) and mov add xor (bad) cmp xor cmc xor (bad) (bad) loop vmovdqa cmp std push pop roll jrcxz rex.R rex.RB sub (bad) movabs adc int and xchg shll sub pop xor rolb jge and jrcxz (bad) fsubs pop outsl and retq pop mov add push mov clc (bad) xor adc cmp mov ds stc faddp adc (bad) andb cmp rorl pushq sub rex.WXB cmp push cmp rcrl jg mov out mov jb out or outsl sbb jl sbb movabs mov add scas rex.RXB rol rex.B cwtl and xor pushfq sbb cmp shr xlat jl sub mov xor in rex.RX outsl pushfq jns shll in (bad) xor rex.WRXB sahf (bad) test data16 lret (bad) test jno sub adc or pop je mov cmp ss test out cltd and clc jae mov nop pop movabs rorb loopne mov retq rex.WX es rex.X pop rex.B adc rcrb mov or pop jnp out out jb (bad) ss adc xchg (bad) mov rcrb push mov loop or rex.RX rex.WRX rol mov sbb fmul add cmp (bad) (bad) rex.WB rex.RX ror out (bad) (bad) rex.WRB (bad) xchg xchg (bad) (bad) mov cmp rcr sub lock rex (bad) pushq (bad) xor (bad) push cwtl (bad) adc cmp leaveq stc xchg rex.RX lock pop fildl (bad) scas sti repnz xchg pushfq in mov (bad) test adc sub xchg mov mov outsb jmpq xlat and fmul sbb rcl jmp (bad) ja ss rex.RB loop mov out out lea roll adc mov (bad) mov rex jne (bad) xchg (bad) int adc lahf enterq (bad) data16 movsl rex.X or lock fldl mov cmp adc (bad) fnstcw movabs lret rex.X outsb sbb or rex.RB jae add mov or es rorl nop or pop (bad) fstpl xor ja jno pop roll addr32 add pop repz stc sahf mov roll (bad) callq and mov xchg jp (bad) (bad) lods jl pushfq in (bad) jb cmp shll (bad) outsb rex.RB rex fs push xor jp add and (bad) imul test (bad) sti out movsb ror cmp mov xor or cmp push mov addr32 enterq movsb hlt punpckldq es cmpl orw mov int3 imul add mov cwtl int3 adc adc xchg cmp and fsubrs mov in test mov (bad) popfq sub mov xor enterq xlat repz sbb pop ror repz cmp (bad) fst cmp mov sub je callq (bad) ror cwtl mov stos lret push fdivl sub (bad) sbb int imul lret and and (bad) mul cmp scas adc push xchg and mov lods xor in add hlt or xor (bad) (bad) sbb (bad) add xor insl push ds push push repnz movsb insl push add (bad) xchg cmpsb lret retq movabs sbb mov (bad) outsl push push rex.WR lret pushq (bad) subl xchg or out mov jb or loope repz jne and divl add xor add push shll loopne sar xchg pop mov add mov rex.RX mov xor rex.WRB adcl push mov add push cli hlt (bad) movslq rex.XB movslq (bad) rcll jae sub adc out movabs (bad) pop callq push out (bad) rorl movslq rcl mov pop push insl enterq test rex.B in movabs rorl jb movabs adc cmp vpcmpeqb loop (bad) std (bad) sarl (bad) jae (bad) xor jg out and push rex.B rex.XB shl movslq sub or rex.WX add cmpsl rex.WRB mov cmc movabs scas add (bad) rex.RB add out and xchg push sbb (bad) iret jae lret scas rcr rex.XB pop scas add rex.RX movslq (bad) mov movabs mov loope rex.WXB adc shll out (bad) or adc (bad) mov (bad) jb jmp lret mov addl cltd (bad) sarl pop (bad) (bad) stos add (bad) adc pop mov sbb mov sbb shrl rex.WB jrcxz mov mov movslq iret insb es mov mov mov rex.RX jmpq rex.X cs adc (bad) lret rex.WRXB movabs stos pop sub cmpsb push sahf xor xchg in (bad) cmovbe mov or jmpq (bad) xchg stos int int imul mov sbb xor repnz rex.WRB xchg jns rcll xchg mov movabs (bad) ficom add rol movslq xor pop (bad) cmpsb movabs adc ror or movabs rex.R lock rex.WR sub clc shrl xchg fs fld mov mov mov rex.WRX fnsave xchg mov or cmp gs pop sub pop xchg mov notb adc (bad) rex.WX cmp jg loop (bad) out jge add adc xor mov lods enterq idivb notl and adc in icebp cmp stc (bad) lea imul movsb sarl popfq pop neg adc rorl xor pop in push outsl (bad) mov jge (bad) (bad) cmpsb fdivrl pop sub rex.WRB insb xor rcrl rex.XB rex.WRX push testl rclb shrl subl in pop add mov test xchg mov jno jbe fwait cmc sub (bad) jb push cltd insl xchg movb sub (bad) movsl icebp clc mov pushfq (bad) (bad) shr jmp sbb hlt movabs retq sarl push jae jl rolb fcmovne lock sahf lods rex.B pop xor stos bnd mov and (bad) mov (bad) xor (bad) ss loop retq bswap (bad) mov movslq popfq xchg add sub rcr mov (bad) js std jge rex.X (bad) iret fs cld mov movsb loope ror loop mov mov lods xchg rclb pop rex.R xor pop adc mov (bad) pop jp push rex.W enterq test xor rex.B (bad) movabs and add xor ror mov xchg (bad) (bad) rex.R xlat cmp in xor rolb insb (bad) test repnz mov mov jae add test and sbb push in push popfq jo (bad) and cmp mov xor add int3 (bad) insl movslq adc xor stc and repnz int xchg (bad) (bad) icebp jb fxch imul xor xor leaveq icebp lret fwait js mov cli test (bad) mov (bad) (bad) xchg jl movslq pop out fs (bad) rex.XB addr32 (bad) cmpsl pop add cmp shll mov xbeginq push (bad) jne sbb movslq hlt cmp retq (bad) iret (bad) xor mov test movslq jp jne insl mov cs addr32 cli mov xchg ja or mov fwait (bad) mov xchg mov xchg (bad) cmpb add (bad) enterq sarb fsubl pushq sbb js jg sbb jge test pushfq sti rex.WR fwait in pushfq imul jle xlat (bad) cmp sbb gs jge shrl and and mov psraw pop test mov movabs lea in movslq sarl push add (bad) mov pushfq insl hlt rex.B movabs mov xchg (bad) mov jo hlt (bad) sub cli (bad) add add mov push push (bad) movabs (bad) (bad) mov sbb andl movslq mov and (bad) mov popfq out sti (bad) jo repz (bad) (bad) incl (bad) and jno rcll add js mov enterq retq cmp test rex.W (bad) callq imul test (bad) fwait (bad) mov mov jbe and rcrb xchg sub rcll xchg cs jae scas movabs sar clc mov adc mov and enterq pushfq lods pop shl ss out (bad) lock iret jae scas rcl movabs ja scas rorl lods roll in rcrl popfq incl fnstcw (bad) mov jne mov (bad) cmp and add mov (bad) retq neg (bad) (bad) addl (bad) ficomp rcrl cli mov pop jbe rex.WXB xor idivl or shrl loopne push (bad) rex.RB outsb (bad) repz lock out mov mov jp or in (bad) rcll (bad) movsl cwtl shrb mov sub test movabs mov clc xor lods insb mov adc imul movabs in popfq std jmp mov fistl (bad) add lret retq xchg push cltd rex.W (bad) sti rolb jmpq add adc (bad) (bad) rex.WB or cmpsb mov sbb fdiv (bad) fisttp push retq stc add pop fdivp mov add clc out test (bad) leaveq jo mov shr mov push frndint adc divl nop add int3 popfq sbb loopne xlat pop or (bad) (bad) movabs rcr push shll pop (bad) mov mov (bad) enterq xchg or rex.RX mov jrcxz push adc adc add (bad) outsl jno repnz mov pop adc fisubr (bad) movabs add add ds cmpl ror push push movabs movabs mov in jb (bad) push fdivs (bad) rolb (bad) (bad) vpsubw shll pop ror mov loope out or rorl mov std testb push pop mov sbb and (bad) gs xchg rcll mov je (bad) scas lret mov cmp pop sti repz (bad) lods movabs add in movabs rex.RB pop and rex.WXB mov fimul sahf sarl mov (bad) jo rex.RX rcl jg inc movabs movabs (bad) rex.RX pop rcrl xor push fnstcw add rclb or (bad) rorl loop rex.XB cs imul fiaddl mov (bad) mov jge callq lcall (bad) outsb or pushq xchg xchg lret sub fs rex.R (bad) rex.WX (bad) jo in (bad) lret fwait (bad) gs (bad) xor (bad) pop in movsl (bad) (bad) shrl jp (bad) (bad) sbb int3 push cmp cmp push rex.X (bad) adc movabs mov icebp je and lock fistp sub (bad) (bad) rorb sub rex.B jnp bnd xor add cmp out (bad) jns (bad) jge cmp movabs (bad) test add lret sbb imul pop xchg rex.B es jmpq mov int add ds jo mov rex.WX mov rex.RXB scas (bad) rex.WRX (bad) rex.X ja or xor push xchg (bad) sbb mov adc cmp rex.WXB (bad) or mov (bad) push enterq iret movsl mov cs outsb fisubl or ds pushq outsl rex.R rex.WB scas add and and insb push (bad) lahf jno outsb sarl cwtl movabs rex.WXB mov add sub mov (bad) and stos rex.XB shr fldcw test lret xor xchg (bad) sarl jne (bad) mov callq jle test std outsl mov add loop fsts stos jp clc shrl jle pop cmc rex.R (bad) sbb rex.X adc add mov sub xchg shrl cmp stc (bad) retq rex.RX stc std (bad) or gs movsb rex.WRB rcrl retq (bad) mov fsub pushq test enterq popfw rex.B pop nop mov and movabs (bad) loope lods jle lret (bad) rex.WXB cmp jb sub mov callq fs jne outsl sti lret add cmp mov pop mov gs je (bad) (bad) lahf rol jle (bad) cltd hlt mov rcrl jp bnd lods cmp pop rolb (bad) loop cwtl adc add (bad) pushq jrcxz rex.RB scas adc (bad) shrl pushq out flds retq (bad) sahf (bad) divb es in (bad) mov cwtl sbbb mov (bad) sub sub enterq fildl rex.WB mov (bad) repnz xchg fs callq (bad) std rcrl (bad) fs rorl mov mov cmc (bad) push (bad) cwtl push fidiv sub (bad) cmp enterq adc adc xchg (bad) scas mov mov add rex.WRB shll rex.XB xchg scas rep fsubp (bad) (bad) cwtl insb rex.RB pop (bad) rex.W sbb (bad) pushq shrl test in movslq or icebp js scas mov mov lahf jp cmp rex.R imul repnz add push mov rex in leaveq sbb rex.R bnd xchg (bad) fwait sub (bad) jo pop fldt fmull lods mov stos xchg jo leaveq cli mov pushq xchg divl rex.XB movslq (bad) nop mov cmpsl rex.R (bad) lret mov push (bad) (bad) movabs lods or (bad) cmpsb jrcxz and retq test rex.WRX pop mov rex.WRXB loopne outsl adc cmp scas fcomip rex.R rep pop fxch rex.XB in clc retq xchg xchg mov (bad) lods repz data16 (bad) movslq int int3 (bad) loopne cli nop int3 and (bad) adc rcr sub stc xchg in xchg add (bad) movsb adc enterq xor xlat (bad) jne in loop sbb pop (bad) (bad) mov retq pop clc addr32 (bad) jl jmp movslq cmp idivl jno cmpsl sbb movslq xor nop imul sbb xor shlb xor cmp cmc xor lock rex.WR xor or mov fadd pop xchg cwtl xor sbb or nop (bad) mov (bad) mov cmp and ja mov adc movabs fsubr movabs push pop add xchg lahf cmp sub xchg mov or out rex.WRXB (bad) (bad) pop add rcll (bad) sub ja imulb scas (bad) stos (bad) (bad) leaveq sbb cmp fwait cmc insb add lods retq (bad) movabs fdivr (bad) jb xchg (bad) sbb insb outsl pushq mov scas shl or pop (bad) jle mov cli mov je mov insl stc ja mov xor decl sahf adc mov and sub (bad) (bad) cmpsl xchg adc (bad) jnp rcll pop rcl sub (bad) out mov shrl movsl fwait sarl or (bad) mov or and rcl sahf mov std mov xor out rex.RX rex.RB cs cmp jg (bad) cwtl (bad) fisubl xchg (bad) mov (bad) xchg add (bad) (bad) mov cmpl out rex.RX (bad) std adc xchg (bad) leaveq jae cltd mov adc push (bad) iret loope rex.WB popfq scas rex.B (bad) add sbb test ja push movabs insl insb mov cmp and add imul lock mov adc fwait pop movabs sub movslq jne movsb enterq pushq clc repz movslq (bad) mov adc and (bad) xchg rex.RXB fwait mul fwait or adc xor andb fwait pop (bad) pop loope int3 push or (bad) (bad) pop mov jo movabs lods xchg rex.WB mov stos add pop jno lret movsb cltd movsb (bad) (bad) (bad) mov mov andl jae rex.WRB fwait lret rex.RXB je notl and (bad) out or push adc sbb (bad) fisttpll (bad) mov rex.RXB pop icebp outsb in (bad) mov mov (bad) movsb pop (bad) loope (bad) imul mov adc cmp pop in out loopne (bad) mov movsb sub or out (bad) lea xchg js fs rcll ja repnz movabs mov in je fmulp jo scas std stos rex.WR test or (bad) (bad) (bad) add mov fwait ja rcll rex.R push stos loope add jp (bad) (bad) rcr hlt jmp lea rorl rex.W (bad) push push leaveq rcrl test (bad) rex.WRXB mov out icebp (bad) cmpsl xlat iret test rex.WX roll xor shr sahf push xorl (bad) lret addl sub jae push rex.WRXB jne jmp adc icebp popfq (bad) xchg sub cmp shll negb sbbl repz or xor addr32 rex.R xchg mov insb rex.WR stos push rex.R adc neg (bad) jg sub mov (bad) mov push (bad) (bad) idivb (bad) push add (bad) add js jle sti je cli xor je rex.WX lahf callq xchg fdivrl out sbb (bad) mov cmp mov cmpsl (bad) pushfq adcl cmpsb mov (bad) test cld or mov add pop shll rex.WX rex.WR (bad) (bad) std (bad) jns xchg outsb sbb rex.WXB pop (bad) shll (bad) rorb loopne jl adc fistpll sub sub jbe xchg lock iret stc (bad) xchg jrcxz je rex.WRX (bad) adc pandn lahf (bad) rex.WRXB (bad) mov rex.RB jg adc leaveq out popfq or scas sbb add or scas xlat callq out jmpq stos sub mov out decl test rcrl and (bad) sbb enterq (bad) (bad) lret test xchg movabs pushq shr (bad) pushfq mov sbb loop xchg addl and pop sar es lods mov xchg jae js rorl xchg mov movslq rex.B jo decl mov xchg imul push lcall (bad) ja sbbl lock enterq sbb or adc movabs mov (bad) fcomi push test mov lods jp (bad) roll out mov retq retq (bad) stos popfq mul pop add rex.W (bad) mov and xorb xchg add (bad) or xchg cmpsb fwait adc and shrl adc jno add rex.WRB (bad) enterq lret test rex.XB (bad) sub hlt (bad) jo out ror in rex.B jmpq cmp jle and sub shll sub and int scas movsl iret (bad) (bad) data16 mov pop adc and sbb sahf (bad) rex.W test and test and pop loope rex.WRX mov jle rex.R sbb cs mov rex.WB (bad) mov (bad) (bad) pop adc movabs rex.XB repz jle cmpsb (bad) callq nop xor roll loope es lahf (bad) jnp rclb rcrl hlt (bad) xchg mov std lret push stc fwait (bad) sub test rex.XB push imul and sbb test jne pop xor lret rex.RXB xchg push (bad) pop retq jmp repnz (bad) mov faddl out pushfq lret jno icebp int insl rex.RX repnz data16 sbb or add (bad) fisttpll rclb test pushq jp (bad) adc imul rex xor sbb xchg loop clc fsubrs rex.B int lret rex.W push sub xchg add adc pop sub idivb cmpsb jrcxz rex.RX mov mov shrb (bad) in js (bad) add shrl xchg repnz rcrl retq xlat ss rex.X jae test rex.WRXB jmpq fld retq add mov rorl imul enterq (bad) rex fisttp lahf movslq stos (bad) enterq notl pushq fnsave outsb xor cmp mov pushfq (bad) or pop mov xor rcrl xor pop in rol sahf test std jl (bad) cmpsl xchg movabs add push (bad) pushfq (bad) std mov leaveq out ror out sub rcl hlt faddl repz repnz (bad) rex.WXB cmp (bad) (bad) push xchg movsb adc push sub or xor sub jnp jrcxz mov xchg mov (bad) pop (bad) (bad) (bad) mov add shll (bad) sarb rex.WRX nop mov jmpw fbstp sub cmp (bad) mov add retq xor stc xchg sub rcr out (bad) lret jl (bad) shl mov pop movabs repnz sti cmp adc jrcxz rex.RX adc (bad) test loopne (bad) stc retq (bad) jle loope lret callq (bad) fmuls push popfq mov or lock movabs enterq rex.WRB rex.WB sub push (bad) int3 addr32 movsb sub (bad) loope mov out pushq rolb outsb in rex.XB jno lret fucomp jbe jbe repnz xchg cmpsl callq jmpq insb icebp mov ja and jge (bad) pop int3 cmp lret rex.WXB stc mov jrcxz and (bad) cltd mov in cmp add xchg rex.WX (bad) notl out xor pop shlb (bad) or callq movsl cmp nop fwait xchg and sub jno shrb rex.X test mov leaveq leaveq mov int3 push mov or movb pop adc and (bad) out (bad) pop repz xchg add xor movabs add sarl mov (bad) jnp adc (bad) lret cli rex.W cli (bad) adc jl rex.RX add mov (bad) pushq add xlat test mov nop rex.WXB jno clc lods xchg xor es iret and movabs jns mov or add in pop roll retq fisttpll rex.RB add jae in push cmp rex.XB test mov push cmp (bad) rex.WRX cwtl in mov sti (bad) jrcxz and repnz pop lods mov or movabs js stc je jns loope add cmp cmp sub (bad) mov cmp rex.RXB jl fwait xlat loope mov (bad) shrl push (bad) lahf push enterq cli loop and fild rcrb leaveq sub ds (bad) lock es (bad) cld vmovddup gs and or add push (bad) lret mov je (bad) cmp hlt xorb xchg rex.R fmull loopne movabs mov hlt ror enterq fldl or push sbb or mov (bad) push cmp push add in add add (bad) xchg (bad) repnz movabs or scas movabs jl or adc jnp rex.R divb push adcl sbb jae pop fwait mov fwait sbb retq (bad) or rex (bad) rex.RB rex.WRB cmp in pushq mov js jle jrcxz xchg (bad) push cmp mov xor out jmpq insl mov push rex.XB pushfq movsl movabs xor and fsubs loope movsl (bad) nop (bad) jle sub (bad) rex.RB add stos pop add fiaddl rex.X cmpsb xchg shll enterq cwtl movabs xor sbb lret sbb xchg (bad) nop punpckhwd or xor pop jmpq cmp mov loopne insl jrcxz mov adcb rex.WR ds enterq repz test rex.X mov movslq jne jmpq rex.W xor es (bad) jmpq mov repz mov imul pop xchg (bad) jns xor loopne movsl jmp fiadd cmp (bad) jae rex.WRXB repnz rex.WR xor cmp sahf xchg leaveq sar (bad) xor jp sbb int3 (bad) fistpll leaveq add repnz sub mov add mov enterq cld test and add mov xor rex.RX jae outsl mov sub (bad) cmc loopne rdpmc movabs and je test clc retq (bad) mov retw mov jmp enterq movslq jl (bad) sub adc fcmovu jge (bad) adc callq fmuls jmp repz ficoml stc rex.B js hlt jae cmc rex.W lahf sub (bad) xor (bad) add sbb stos (bad) std mov jns scas data16 addl add (bad) lret fldcw nop and idiv rex.WRXB idiv mov (bad) sahf mov jae xchg (bad) adc sub mov repz subb xchg mov mov mov fiadd movl clc sti neg (bad) loopne in sub cwtl and or pushfq cmp xor rex.WX and and lods movabs rex.XB jge pop icebp mov rex.RXB adc (bad) icebp in xlat clc icebp retq outsl int3 or fsubrs clc (bad) (bad) mov int3 rex.B push leaveq mov ja jp int jbe (bad) mov lock je (bad) lods and rex.W repz xchg (bad) (bad) jmpq cld mov push (bad) mov test (bad) out in cltd jmp lahf mov (bad) or mov ror (bad) jrcxz (bad) add sub out add mov xchg sahf and stc or rcr xchg xchg rex.B jne lret mov mov or sub (bad) rex.B rolb mov mov rex.RXB mov ror or sub rex.WX lock mov sub pushfq rcr in and push xor xorb sub rex.WX adcl (bad) fdivl int3 insl imul rex.W jg fsubrp pop stc std (bad) mov xor addb add in cmpsb mov sar leaveq xchg rex.WRB rcrl xor roll js rorl in adc data16 push cld out test (bad) push push xchg fs adc std ftst rcrl sub in popfq sar push mov or shlb adcl mov rcl (bad) and rcll jns fucomp (bad) nop sarl test jle divl lahf mov (bad) and lret lret cmc mov fsubrp lahf push movabs rex.B insb sbb (bad) int3 mov xchg (bad) cmc push sahf xchg cmp insb vdivsd test (bad) int sub cld (bad) jp and mov in stos mov jrcxz js fs xchg movabs ficom pushq cmp adc mov (bad) adc callq jns mov rex.W mov iret stos (bad) out jnp mov cmp fwait jle sahf imul (bad) cli adc repz scas adcl adc movslq rex.WR ja sbb (bad) (bad) jbe callq callq ss rex.WR scas shrl or rex.RXB jge rex.WRB rex.B int int3 lea roll xchg and xlat sbb jbe adc fst shll add test mov sub xlat rex adc retq shrl add (bad) mov pop (bad) xor mov cli add rex leaveq loopne cmpsl jge rcrl pop push test rex.WRXB jl mov ja repnz xor mov (bad) xor or retq pop cmc stc cmp (bad) sbb (bad) pushq sbb rcll data16 (bad) mov jle xor sub or rex.WXB rex.RXB rcr (bad) mov pop fwait imull mov in add or cmp cmp rex.WRB rcrl and int3 in (bad) pushq cmp clc rex.X rex.WR mov loop xor pushfq movabs rex.X jns jbe test (bad) sti cmp push rex.WR rex.R retq jrcxz and shl jmpq out (bad) jno in ds nop adc shrl sub sar je icebp add cmp lock divl int3 (bad) out callq (bad) lods adc sahf sub (bad) rcll cmp lret xchg movslq mov cmc lods or xchg cmp sub rcr rorb pushq es add (bad) (bad) in mov push ss lea pop shl or roll rolb shll scas rex.RXB icebp scas (bad) rex test xchg rcll (bad) xor rcrb shrl (bad) cmp sarl xor sbb (bad) mov rex.XB ss and rex.WR pop push push mov rcll mov leaveq rorl lock push repnz sbb and fistpll mov leaveq retq (bad) cmp xchg roll movsb pushq jmp sub (bad) xchg mov cmpsl or shll jae adc cli (bad) dec clc (bad) or mov cs rex.B add rcll (bad) add sbb rorl rep (bad) lret nop mov rex.WRB (bad) out adc cmp add rex.RX sti (bad) insl mov (bad) or (bad) mov jae fsubr shrl adc lcall and in (bad) rex.WX callq test enterq mov (bad) retq (bad) rex.WB je rex.WR push jrcxz stc ss (bad) jbe rclb (bad) jnp add movabs sub (bad) adcl in (bad) jle add rex.WRXB sub or idivb mov in fcmovb xchg stos rex.WX sub or push fsubs (bad) sar push xor sbb pop clc (bad) decl jmpq movslq xchg and rex.WR insb and lret test xchg rex.RB (bad) add fnstenv (bad) sub movsl rcrl sarb push mov retq (bad) rex.WXB rex.RB push orl cmp jrcxz callq xor (bad) and xchg rex.WXB xchg push cmp cli pop mov in (bad) stos (bad) insb rex.W rex.W sarl fidivl rex.WX mov sub mov retq mov and mov rex (bad) jno mov shrl (bad) lret test popfq in pop loope int and jp xorl mov insb add movsl out sbb fdivs add jle ss retq mov mov cmp rex je imul mov callq ss loope rex repnz xor in sub cmp leaveq je mov rex.XB (bad) mov out adc pop add lret rex.WB loop pushfq jp rorb stc pop adc movabs in scas roll rclb (bad) adc fiaddl lods sub sbb imul popfq shll or xor mov mov xor cli pushq cmpl fbstp mov in mov sbb sahf jnp rex.WRB cwtl lods fwait or xor not (bad) push fstpt roll mov rcll pop movabs sahf fdivrs (bad) adc jle fbstp js mov cwtl add and (bad) repz test movsb mov jae adc dec mov (bad) xchg rcl rex.B (bad) stc add cwtl gs pop adc (bad) xor stc jg mov cmp mov pop pop and jnp sbb (bad) rex.RX add or and add clc in icebp pushq iret mov repnz shrl rex.XB or movsl (bad) mov (bad) xor (bad) (bad) repnz push add jb roll cld (bad) (bad) (bad) xor xchg int adc sahf sarl movabs addr32 push xor fmul rex.XB rex.RXB scas fistp rex.WR xor cli repnz (bad) xor int retq cwtl xchg xchg callq add js rex.W out xor sbb sub xor pop add pop mull (bad) xchg pushfq mov sub sbb xchg xor pop vxorps or or ds adc shl rex.WRB mov (bad) (bad) add (bad) test xorl mov fs stos (bad) (bad) orb xor in add loop shrl xchg (bad) push (bad) jnp (bad) pop pop rex.B lock pushfq (bad) xchg mov rex.WXB sti fcmovb rorl cmp xchg test add leaveq mov mov cmp or xchg (bad) pushfq int3 fwait push sbb cmp rex.R sbb rorl in add fldl in adc adc (bad) push sar cmp mov (bad) rcrb lret xchg rcll retq ja rex.X sub mov xor loopne int in or rex.WXB cmp (bad) (bad) (bad) adc neg (bad) test mov or (bad) imul mov mov and push sbb shll mov nop sub cmp cli ror (bad) push cmp pushq subl (bad) data16 mov (bad) outsl imul mov movabs mov shrl (bad) and lods jno jp (bad) (bad) stos lret movabs add mov mov loope xor js mov lret jp push fcmovb xchg adc fstl push roll pushq adc and leaveq and sub jmp mov rex.WRXB ss xor jns sub cmp xor retq movsb jmp movabs ficomp imul int3 sub (bad) sub ds (bad) int3 (bad) imul repz mov adc iret enterq retq (bad) (bad) add loope adc rex.B insb add je retq pop mov leaveq sbb (bad) pop out movabs sub (bad) (bad) xchg data16 pushq faddl cmpsb xor fisttp (bad) push add xor addb sbbb lea jno std mov sub scas sub xor cmp cs repz movslq (bad) (bad) (bad) mov cmp fwait mov out jnp enterq (bad) mov stc mov sub cmc rex.RB xchg jno (bad) (bad) std adc cld sbb stc sub stos lods popfq add retq (bad) mov jno rcrl sbb xor mov lret insl lret rex.WB xchg jge rex.B mov movabs imull (bad) sub pop gs rex.B (bad) rex.WXB rex.WB or test jg enterq xchg mov xchg shlb jno sbb shrl callq add jge fsts out push pop rol jb sub movabs cmp push int3 in rorl mov je (bad) xor rcll push add shll mov jns (bad) xchg adc mov scas sub jb roll pushq div (bad) jrcxz (bad) mov cmp lahf rorl adc xchg xchg (bad) jmp push sbb popfq adcl shrl stc divl movabs fiadd adc pop shrl mov retq mov shrl rcll int3 rex.RXB js or sub rorl jrcxz fwait mov icebp adc leaveq fild shr xlat cmp lock mov xchg subl movabs (bad) xchg repnz xor (bad) jge sub pop mov jnp or jo test sub add test mov rex.WB xor stc rex.WRB jno sub es or fwait pop fstpl rex.RB (bad) (bad) push leaveq xchg jp (bad) cmp (bad) or loop jno fimull and sti or add jnp (bad) lods jae (bad) movsl leaveq cmpsl lret (bad) mov mov jrcxz (bad) sahf in adc rcl xor movabs xor adc lret mov rex.RX (bad) gs cltd fcompl jae mov mov mov lock lock cmp lock jmpq mov int3 add insb iret sub add mov and data16 rex.RXB loope mov outsb (bad) outsl sub nop jnp int3 sub (bad) (bad) sahf ds imul rex.WR cmp (bad) xchg (bad) xchg xchg mov mov test xor cli rex.WB rex.WR loopne push lahf sahf fadd jno (bad) jp cmc mov repnz iret rex.RX rex.WX gs mov out jge lods mov sbb pop mov jo mov sbb jl lret rex.X movsb movabs (bad) xor (bad) cmc adc mov icebp xchg fmul push rol scas and rex.WR orl jp mov loope jge or xchg callq rex.WRX je fistpll pop add rex.WRB sub jp mov rex.WRXB retq xorb jno cmp add pop movsb rex.RX jmpq or test (bad) rex.WRB ds (bad) sti jno jmpq mov faddl rex.WR mov or adc mov sar fs (bad) cmp mov mov jb cwtl outsb (bad) push stos sub lods stc (bad) cmc pushq lock lea lret (bad) int3 rex.WRXB jge repz xor cmovle sub fisttp lahf (bad) xor lea (bad) rex.RB stc pop pop loope orb mov (bad) jbe (bad) push rcrl xchg mov int and lock rex.R rex.WR stos (bad) cmp fmull (bad) and mov fs (bad) rex.B fstenv std (bad) icebp fistpl (bad) mov movabs cmc cmp rex (bad) (bad) enterq fisubrl rex andl cmpsl shrb cli loop (bad) icebp jmp sarl sub jg add jno (bad) fsubl xorl sarl rex.WRXB (bad) mov roll cli movsl rorl sbb and jmp (bad) xor rcr jns rex.WX rex.X rex.WRX js movabs adc add push movslq add fcompl or retq fld (bad) cmp mov rex.B mov stos xchg shll (bad) mov lahf sbb iret movabs movabs (bad) sbb jg addr32 mov roll (bad) (bad) sub fcmovnu (bad) pushq rorl in cmp sbb shr (bad) (bad) mov fstl rcll mov stos rex.X rex.RXB cs (bad) pop rex.B add (bad) add rex or rex.X in xchg mov test out mov cmc movl mov ror and add jo andb (bad) int3 std clc pushfq add cmpsb gs rex.WR xchg retq je adc (bad) mov mov (bad) out sbb xchg rcll xchg mov jmpq loope movsl fistpll shrl pop (bad) pushq jb divl mov stc pop rex.RX (bad) mov add mov push rex.WRX (bad) adc jge rolb pop out push jp in nop xchg rorl (bad) fimull lret popfq xchg push shrl xchg rex.WXB imul adcq pushq (bad) test fwait (bad) fnstsw add (bad) push movabs mov iret pop adcl out mov std sbb push ror (bad) and inc cmpl negb (bad) lock lods mov cmp or rex.B rorl movslq jb fs mov out int loopne fldcw movsl roll push (bad) (bad) xor adc movabs xor fstps movabs in push rcll jmp fcoml mov (bad) (bad) adc jne rex.WRB cmp mov (bad) rcll mov cmc jrcxz roll sahf fiaddl fnstsw pop and mov xchg movsl xor int rcrl fimul loop mov push xchg test sbb add sarl mov inc enterq fwait mov (bad) int sbb fsubr subl rcrb sbb test (bad) mov cmp test movsl mov rex.WRX sub hlt cmp enterq (bad) jae mov mov mov xchg sbb rex.R rex.WR cs and (bad) imul movabs rolb outsb lock xor enterq rex.B (bad) cmpsb xor (bad) adc xchg out or insb push jo xor mov insl rex iret jrcxz rex.WXB xchg mov (bad) int3 (bad) ss movslq std jrcxz ror jae fadds test push (bad) (bad) cmc (bad) (bad) mov sarb jmpq (bad) rex.WRB mov and fnop mov stos mov xchg test rex.WR movsl add (bad) imul mov xchg mov sbb fistl pushq cli int3 movabs out (bad) mov (bad) jbe xor (bad) fldl2e xchg sbb jno loope mov je jae lock jne jo jmpq je or or out mov sbb retq rex.XB or imulb mov rex.WXB rex.WRXB cs sbb pop (bad) (bad) out rex.WRX repnz (bad) mov cwtl outsb xor loopne icebp cmp jne or rex.RX add (bad) sbb retq int jge push sub jno rex.XB (bad) and cmp and push je rol js ja (bad) pushq mov rex.WRB movabs fnstsw cmpsl sub sbb jp fnsetpm(287 je xchg sti lcall (bad) mov fisttp (bad) loop je int3 (bad) pop jns and insb fnsave (bad) (bad) icebp ja rex.WRXB rex.WB rex.RX insb loope enterq rex.B jno and jg sub out insb (bad) rex.R rex.WRX (bad) movsl add (bad) in sub add mov (bad) idiv jmp sub adc fs test loope (bad) xlat xor mov loop rex.WR rex.RX mov rex.X mov rex.WRX mov add sub cmp sbb (bad) popq cmp (bad) add and cs lock jne push or or fisttpl loopne (bad) stc popfq vunpcklps int3 jle xlat pop decb vcvttsd2si lahf je (bad) mov es or (bad) out divb sub (bad) retq pop adc (bad) cmpsl mov mov mov xor xor pop add (bad) ffree jo movabs lahf cltd imul clc cmp (bad) jo rex.B or rcrl mov rol outsb sbb xchg callq rcrb and (bad) cmp add pop sar notb ds repz es push in cmp sub cmc cmpsb (bad) (bad) retq xchg hlt (bad) xchg test (bad) xchg add (bad) (bad) (bad) rex.WRX fadd neg (bad) (bad) mov mov (bad) xchg or cmpsb adc in stc pop fbstp and stos rol sbb test enterq movl cld loopne xgetbv xorb pushq (bad) adc jmp jp fwait xchg movabs (bad) add nop (bad) add sub jns vpackssdw xchg add repnz (bad) unpckhps fldcw je or cmpsb (bad) sbb std movabs rorl adc mov push cmp rex.XB sarl jmpq cmpsl sub pushq mov mov movabs sbb add jle or sbb cwtl retq mov (bad) (bad) sbb test sbb (bad) out mov rcr or sbb add movabs sbb xor (bad) jmp mov mov leaveq (bad) mov rex.R sti sub cmp fstpt rex.X gs rex.X rex.WR add rex.WRB sbb (bad) xchg test rex.WR retq in cltd leaveq pop push cwtl rex.RB fwait adc sbb xor bnd js cmp pop xchg adc stos jmpq mov sbb in rex.WR (bad) notl mov sbb sub scas movsb xchg mov (bad) insb (bad) movsl retq jmp mov mov sahf and loop (bad) repz imul xor or or push pop int3 mov mov add jrcxz rex.B cld or jae (bad) cs gs ss or (bad) movslq imull je xchg (bad) (bad) (bad) (bad) div int3 rex.WRX pop mov cltd lods adc pop cmpsl enterq loope mov add insl rex.WXB repz add and addr32 or incl or rex.WRB jmp sub (bad) sbb (bad) mov loope repz fwait and mov or rex.WR jne adc addr32 cltd cli or shrl nop movsb (bad) jnp int3 mov sbb rex.WRX mov iret loopne in or lret shll lods mov fnstcw cmpl sarl jne loope test (bad) xchg test je adc movb je rex.RXB repz loope mov scas std lock add push shll xor mov mov roll imul mov or pop jrcxz in imul jno xor (bad) vmulss test fstpt add xchg mov push jle imul xchg (bad) int3 movabs jno addr32 out add adc outsb xor pushq in and repnz (bad) cmp pushq scas cld or pop cmc (bad) mov fsub mov scas jg sarl cmc mov pop iret sbb imul sub cmp loope (bad) fnstsw or rcll sbb mov roll push cmp insl (bad) sub cld movabs add sbb out cmp mov push fwait pop mov rorl push loopne add int3 (bad) xchg mov or or add stos pop xor rex.B and fnstsw add push sbb rex.WR and cmp or ljmp mov pop int3 test (bad) cmpsl rex.X rex.B and xchg xchg shll data16 mov rcrl push jrcxz fucomip inc cmp outsb ds xchg jno (bad) cmpsl mov rex.WB shll sub or rex.XB lret fsubs jno insb rex.WRB rex.B jno rcll xor addr32 stc fucomp cmp and popq (bad) movabs mov xor test shll xor stc mov out adc stos xchg (bad) rex.RXB testl outsl jb jnp fidivl outsb pop xor pop rex.WRB rorl mov xchg xchg cmp push (bad) mov shl xor in adc sbb (bad) (bad) push stos fsts (bad) int3 js notb cmpsb lret fiaddl fs (bad) stc pop cmp sbb lahf mov (bad) sub or cs and pop in iret stos imul xchg (bad) sub jne mov mov icebp cwtl xchg movslq push stc (bad) mov jmp (bad) (bad) (bad) mov imul (bad) mov xchg and test addl sub imul xorl (bad) and cmp (bad) pop (bad) jg xchg sub pop rcrb iret in shlb mov adc movabs mov (bad) jle sarl lahf clc scas jae rcrl jne nop xchg cmc shll shrl add scas xor out xor movabs sahf movslq jo fs outsl shrl xor add (bad) lret xorl rex.WXB and xor movabs rorl rex.W jno int3 sahf fimull cmp rcr rex.WR sti clc xchg faddp mov (bad) rex.WX rex.X ja or sub (bad) fldenv pushfq test enterq clc jmpq (bad) (bad) (bad) mov (bad) push movabs jp (bad) jnp int3 xchg mov add and int jp outsb int3 leaveq (bad) rex.WB js sahf lock sbb mov (bad) xchg xor test adc retq stos (bad) push and lret and sub push cmc jp xchg add xchg movslq sub fbld sub movslq cltd push cmp repnz (bad) or insb leaveq xor xor rex.WR (bad) (bad) clc add cltd movabs addl jno rclb test cwtl and push iret (bad) mov sub mov enterq incl sub rex.XB jmp xchg add loope sub rex.B in mov and (bad) mov push jo pop movabs (bad) jp (bad) enterq (bad) imul nop rex.XB xchg adc add or (bad) pop movslq jo in mov jne ss or jb mov (bad) icebp jnp pop sub cmp add add retq (bad) hlt rex.WR rex.WRXB lods xchg icebp push (bad) int3 rex.W cmc (bad) addl mov xlat rex.X fstl int out int jp clc mov (bad) sbbl jnp (bad) or sbb (bad) xchg nop leaveq mov enterq (bad) cmp rex.X mov jmpq outsl fxch leaveq mov enterq sub xor (bad) xor (bad) cmpsl sub rex.WR add icebp loope ja or mov int3 (bad) fdivl (bad) lods movslq in push int3 rex.RX (bad) in lret or (bad) icebp fistpl or jmp (bad) cmpb lahf sbb movabs add (bad) jrcxz sub mov pop fnstsw fbld lods icebp lret imul mov imul (bad) mov faddp hlt ss xor xchg (bad) lock fwait cmc lods mov xchg rex.RX (bad) jge (bad) callq or (bad) add (bad) lods movl pushfq sbb loope sbb sub (bad) xor callq stos rcl jp rex.WRX rex icebp inc xchg jae mov add (bad) (bad) xor test shrb pushq xchg repnz movslq lret rcll or in out loop sub rcll jmpq repnz xor (bad) add subl out (bad) jnp insb (bad) jbe add lods (bad) or adc lahf xchg je,pt add (bad) test mov mov or xchg pushq jp pushfq lock xchg cmc insb pop mov ffree fs pop xchg pop decl int (bad) push and rex.XB mov jae xchg out sub sbb pop int sbb sbb (bad) lock movabs xchg or pop pushfq fsts shll (bad) mov mov and (bad) xor lock outsl sbb cmp xchg sbb in (bad) mov pop rex.X cmc (bad) lock loop mov rcrb lahf adc fnsave int3 test mov pminsw or fdivrl adc xor (bad) xor rcrl adc repz cltd sbb (bad) and sbb stos test mov mov mov pushfq movsb repnz or stos out std fcomp push add adcl (bad) and rex shll lods mov jo cmpl rex.X adc lods sahf (bad) hlt jae popfq enterq shr push pushq (bad) movsl (bad) roll mov mov fldenv jl stos rorl enterq and (bad) cmpl rex.XB scas ffreep test add shrl mov (bad) cmc sbb int3 fmul rex.W shr loope xchg xor std movslq jae pop adc int3 (bad) mov xchg jg sti roll leaveq (bad) stos xlat jp lret jae cli and (bad) push jns or xchg (bad) ja sahf sbbl retq (bad) rex.RB lods movabs xorb js test rclb rex.RB add lahf loop xchg std push (bad) (bad) add lret mov cmc (bad) (bad) shr rcr (bad) jmp sarl stc jge rorl rcll in add mov push rcll adc pushfq fildll (bad) repnz pop jnp and add rex.RB rex.WXB lahf sysenter scas cs jmp jg rex.WRX out jns lret lret xchg adc (bad) jbe jae repnz (bad) xchg jns cltd (bad) test js (bad) ds idivb movslq movabs xchg mov mov shl or in lret repnz test mov mov out pop or (bad) cmpsb repz mov and sub add in out (bad) rex.WR in shrl mov mov rex.WXB outsl rex.WRXB repnz mov addr32 addl jrcxz cwtl mov mov add (bad) jae pushq movslq mov sbb add and fidivl loope movsb (bad) insl cmp sbb jb lahf rcll xchg sub test (bad) xor xchg outsb rorl movslq insl xor pop retq (bad) hlt (bad) ror or rex (bad) mov fsts lret test xchg pushq retq jp rex.WR (bad) ffree fldl or shl sub xchg shl (bad) movabs (bad) pop popfq or mov (bad) push sbb outsl and push rol int3 rex.WRXB adc lock shll repnz movsb sarl push xor shl movabs pop (bad) or mov loop (bad) clc push adc mov retq test jge mov shl (bad) andl mov imul (bad) pop icebp pop imul fisttp cmp jne xchg addr32 adc sub orl mov fadd out sub rex.RX mov sarl in xor mov rex.WX je rorl (bad) (bad) ss mov icebp sub adc pop rex.RX sub cs rex.WB sbb test movabs (bad) mov clc xchg xor lods xchg jrcxz cmp sbb data16 adc rex.RB rex.XB jbe rcll sahf xor cltd rex.RB jg,pt stc outsb movabs mov mov rcll mov pushfq repz add callq scas scas sbb popfq and add mov jbe fsubr (bad) int (bad) scas mov mov rorl rex.WX sbb cmp (bad) mov push add add (bad) insb mov test sub sarl leaveq (bad) mov movsl sbb movslq loop sarl out rex.WRX lea shll fidiv or pop rex.B pop lock sub xchg addr32 loope ror mov jbe or popfq lret and (bad) rex.WX (bad) rex.WXB sub jbe in adc shll adc in (bad) or xor retq add insl fwait rex sbb rcl movabs (bad) (bad) mov shll add lods lea xor sub rex.WR rex.R rex.WRX jae mov push sarl shll (bad) push xlat (bad) sarl mov jno loop clc pop rcrl sbb lods sti rorb outsb rex.WR rex.WR lret and xchg cmp outsl and outsl rex.WR jrcxz int3 (bad) lock jne rex rex.WXB (bad) xchg rcrl mov cltd xchg and decl cs (bad) xchg (bad) rorl ds incb (bad) repnz jmpq mov (bad) shrl jb sbb pop enterq and jrcxz (bad) add lea (bad) pop shrl adc mov mov imul xlat mov sub pushq pop and pop ja enterq in rcll pop or rex.WB cmp leaveq loopne es sub shrl out mov xor stos (bad) (bad) js or rcll rex.W stos leaveq cltd cmp loop sub rex.B lret and sarl cmp test es mov jmp sbb loopne enterq mov add mov (bad) (bad) cli (bad) xor push xor xor stc and rex.RXB mov scas adc xchg (bad) js (bad) xor clc (bad) (bad) int xor int cmp clc (bad) jb jle jg push std lahf and cmp pushq sub callq xchg xlat data16 adc and adcl add out fldcw and adcl int3 testl loopne iret xchg fdivl mov vorps insb sbb xchg ficom add cltd or scas movsb jbe add int rex.R loop adc fwait (bad) fnsave test addl stos gs cmc movabs mull stc adc outsl int3 ja scas push cmp movsb pop cmp (bad) jns hlt rex.XB xchg leaveq imul fnsetpm(287 (bad) (bad) mov frstor sub shl rex.R icebp adc mov rex.WRXB lret out ja test xchg pushfq xchg jmp pop jnp scas lret (bad) or in mov or adc int3 rex.B (bad) retq sbb mov imul repz (bad) lahf rex.WRXB xchg pushq rex.B mov repnz callq notl push push (bad) and (bad) sub popfq pushq sbb rcrl xchg cmp data16 rex.WR lock shrl psubd xor mov (bad) pop push jae outsl (bad) (bad) cwtl mov add out (bad) (bad) rex.WXB add outsl rex.R rex.WR (bad) shll add callq jns rex.WXB rex.RB loope repnz roll mov (bad) rcrl neg adc repnz jp push (bad) mov jp stos sub mov insb insl iret es and rcl test mov (bad) hlt xchg ss (bad) test pop sub jl jb lret push (bad) and adc rex.WRX (bad) and int or lret out rex.X push jle rolb sub rex.RXB out in jle out (bad) rex.X nop rcll (bad) not scas (bad) (bad) notb fwait mov jl in add faddl movabs mov (bad) mov int3 cmp pop std roll xchg jo sarb xor out add fld cwtl rex.WRX rex.WRXB out pushfq int sbb movabs (bad) and (bad) (bad) (bad) xchg xchg and sbbl sbb (bad) and test in fidiv nop (bad) fadd hlt jo ss add movabs (bad) xor icebp test orb loop (bad) pushq roll in (bad) rex.WR jne jge adc xchg movabs addr32 fisubl add (bad) cmpsb scas rex.XB in retq fmull sub add loope lret std pop pextrw mov pushfq cltd rol cltd cmpsb jmpq std popfq (bad) (bad) shlb cmc pop repz movabs and clc loope lret lock jb mov out cld add xchg jo cmp ror bnd xor fidivl (bad) mov sar (bad) or or xor repnz sti (bad) jb rcr push rex.R in mov jne stos adc fnstcw mov jb (bad) (bad) rex.RB (bad) xor ds rex.WRB rex.WXB rex.WRX (bad) (bad) mov xor clc add jmp (bad) rex.WX retq test cmp icebp (bad) add movslq rex.WR jae jns,pn rex.WRXB ja test xchg mov sbb out jno retq (bad) fsubs rex.WX iret movsb or pop xor push cmpsb cs retq push insb mov jno (bad) fnstenv je jle push (bad) je add fadd (bad) mov std and outsb (bad) push sbb ss (bad) pop in in fdivrl out sbb (bad) lock out add cmpb push mov stos sbb repz (bad) test (bad) rex.WXB addr32 xchg add pop push xchg sub mov pop cmc mov jno (bad) int (bad) out ja movabs mov lock movabs sub gs (bad) out mov jb mov cwtl repnz (bad) mov or xor (bad) (bad) sti mov insb (bad) rex.WRB fs stos rex.X test jp int rorl sarb insl (bad) mov mov movabs fnstcw xlat cli icebp movabs loope ja pushq cltd insl or mulb outsl je push push orl sbb (bad) (bad) stos xchg sub mov xchg mov (bad) bnd ja movslq in imul mov outsl (bad) int sub es (bad) rex.X stc mov push movslq xor stos push mov (bad) or (bad) add jrcxz repnz (bad) jge mov lods in out mov and sbb sub imul insb cs jno pop std stc or cmpsl cmp sub (bad) (bad) pop xchg iret lret sub je rex.RB rex.WX cmp add out lahf jns in negl mov retq notl cmp in (bad) rex.WRB icebp mov in enterq add pop jle insb cmp scas mov cmpsb rex.XB scas rex.WRXB addr32 (bad) not (bad) xor rex.R enterq gs movsb mov movsl rex.RX adc loopne test in sarl rcrb or fldenv je callq adc jmpq pop jp rcrl (bad) sub rorl mov enterq mov add lods rorl rex.W push ds (bad) sbb pop lods add rex.RB and rcl or mov pop mov cmp loope pop fldenv add fild rorb (bad) xchg clc imul mov mov add outsl rorl test xor in push mov lea push lods movabs hlt jmp xlat outsb or cmpsb fistpll mov test ja (bad) (bad) sahf or rex.X fisttpl add add sarl mov push add js (bad) sbb incl stos rex.XB es rex.RB (bad) (bad) (bad) mov sahf jnp stc pop cmp rex.RX xor pushfq lods std jmpq popfq adc adc xor lahf incb rex.WB shl fsubr lock vcomisd (bad) je stc xchg (bad) (bad) xchg push stos adc jbe pop mov pop mov pop xchg (bad) jb cmp in rex.X pop jrcxz mov clc mov jb pop rex rex.RB fstl lods mov fadd shl push stc gs mov pop pushq rex.WB rex.WXB sahf jmp lods rcll loopne std callq rex.RXB (bad) (bad) mov pop (bad) movsb or (bad) shll or callq add (bad) mov mov shll ljmp xchg outsb test clc insl shll jo fldenv adc sti mov push and (bad) ja add mov out (bad) (bad) fbld mov cltd push sub adc cmp adc movb cmp movabs lahf (bad) movsb pop and xchg stc (bad) cmp movabs push shll clc and fcmovb xor ja jno (bad) add outsl shlb cmpsl (bad) rex.WXB rex.WRX cwtl mov stos fld add xor mov js (bad) xor sahf (bad) push rorl cld push callq sarl movsl jne movslq (bad) jmpq stc jae sub jb rcrl mov movabs adc rex.WR je,pn pop mov (bad) rex.WX (bad) pop (bad) nop (bad) cwtl cmpsl mov and rex.R lret jle jnp and sbb test add gs retq push mov (bad) jbe out retq jg scas rol (bad) outsb pmaxsw xchg nop mov (bad) out mov sbb rex.B fs popfq pop pop iret add jns rex.X jns lods fidivl repz mov rcrl sub and std scas jae in cli outsb (bad) jne stos (bad) iret imul mov rcll movabs and notb rex.WRB rex.RX (bad) sub rex.RX rex.B (bad) roll rcr repnz sbb (bad) mov push sub nop imul sub or jns (bad) repz sub add adc (bad) je adc (bad) cwtl fidivr rorl mov or and cmp (bad) jb jne lret rorl jl shr rcl ds std xchg orl rol sbb pop adc out sub (bad) xor mov (bad) idivb ja xchg shll imul (bad) lahf and (bad) sarl rcll push add mov rex.WRB rex.WR (bad) out rcll rex.RB (bad) xor sbb xor repnz divl outsl xor js jae add test sarl rex roll cmp mov out add rex.RXB fmull pushfq cli sub int sub rol pushq xor or je sub xchg xlat stc (bad) fcmovnb mov or (bad) fldenv cwtl cli insl push lret xchg cmpsb jbe jb xchg sub and or (bad) in rex.B adc movsb cld cwtl rex.WB push sarl xchg push rex.X sti sub xchg (bad) (bad) scas cmp loopne pop shll push (bad) xor or mov sbb retq xchg fnsave stc adc rex.WRB or rorl sarl (bad) (bad) mov loopne in sbbl in xchg movabs (bad) callq cmp std (bad) jo pushfq lods movabs rolb enterq add cmp mov cmp add (bad) mov pushq mov xchg rex.WB std or test outsl sbb (bad) jge fcmovb rex.XB movabs pushq imul scas movabs lret mov adc orl lret jnp sub in (bad) movabs movabs rex.RX std mov rex.WB stc rcrl outsl sub xor mov movabs add rex.WRB rex.WB roll (bad) and (bad) rorl xchg rorl scas mov js or addl (bad) (bad) sbb popfq xchg lret jbe xor pop xchg mull clc xor lret xchg or jno mov xchg (bad) jl repz in movabs xchg out xlat sbb fmuls sbb lods rex.WX cli lret mov mov rex.WXB lret cltd jmp pushq rex.WXB pop push cmp stc xlat (bad) sarl mov pop push pop xor xchg mov shrb pop sub movabs jb,pt fcompl cmp cmp mov ja in xchg sub frstor cmpsl rex.RB sub and cmp add jle sbb or mov stos push cltd or scas add mov (bad) lret enterq cs add movsb add in repnz (bad) push jle push lods rex.WR or mov and sbb (bad) pop xchg xchg adc lret mov repz test movsb (bad) adc mov lret scas adc cmpsl icebp mov js mov (bad) iret addr32 popfq (bad) mov jmp cmpsl subl xor and adc movsb in (bad) rex.W mov jne mulb rex.R rex psadbw rex.XB cltd (bad) rex.WR rex.WRX cmp movabs hlt pop sub js cmpsb sub xchg push movabs je pop or mov fadd (bad) fadds pushfq sbb test jg cmp (bad) jg leaveq pop and xchg pushfq xchg rex.RX push rex.B data16 nop or pop or xchg insl leaveq and cmp push fxch out sub iret idivl sub out movsl test (bad) (bad) rex.WRB lret or mov (bad) std (bad) ficom push mov sub pop (bad) test rex.X stos retq push ja and out (bad) cmpsb out divl jo sub lea sub movabs rex.B mov adc fsubrs ss (bad) leaveq (bad) cmc pushq jrcxz in bnd and rex.RX sub xlat rex.B iret movabs mov (bad) rex.RB pop mov (bad) xchg and sarb (bad) (bad) out out insb stc cmp clc xchg add xchg mov repz scas jge rolb rex.RB rex.WR rex.R cmp rex.WRB (bad) and (bad) (bad) enterq adc rex.R cli (bad) rex mov add stos cli xor sbbl hlt mov sbb jp fs repz (bad) or and sarb (bad) lahf rex.RXB callq fild fdivs pushq (bad) ja mov outsb xchg pop xchg icebp (bad) rex.RXB rex.XB fisubl (bad) add rex.R pop adc imul pop jmp movabs scas sub add fldl xor fcomp loopel mul sbb (bad) rex.WR rex.WR incl mov rex.XB mov (bad) adc (bad) clc (bad) rex.R and (bad) jae or sbb sub adc movsl mov test rol mov enterq movsb cmc mov retq movslq lock rex.WXB out cmpsb rex.RXB in jno sar or iret add mov and and sbb (bad) jrcxz or hlt leaveq add leaveq int es lret mov adc cs fsub and (bad) jmpq (bad) enterq jle sub pop std rex.WRB mov push ror (bad) out (bad) sbb (bad) xor enterq jbe shr rex.WXB cmp out mov or addr32 int3 lods mov or mov rex.XB mov cmc mov add movabs rex.WX sahf iret fnstenv xchg movsb jl mov fstl (bad) jmpq sbb sbb test (bad) rex.X (bad) push sub push and xor callq rol lret jmp fmuls jns xchg push je add rorl std leaveq push scas (bad) jne add lret jb xchg iret and add xlat and (bad) movabs fmuls or insl std adc jmpq push adc (bad) mov xor (bad) int sub fistpl and jb ja (bad) jle ss movsl roll jno rex.WB hlt rcr lods sahf fdivl in orl cmp mov cwtl pushfq (bad) rorl or pop gs push sub repnz (bad) mov test sahf push jno and cli mulb inc (bad) xchg movsl (bad) rex.RB cmc add cmp mov cmp mov icebp scas imul int mov rcrl cmpsw (bad) sbbl or mov add cwtl movl rex.WRX fwait cmp in mov add pushq adc mov push rorl insb jae,pt adc cmpsl outsb xchg mov pop repz in sub test jno pop mov or loopne fiaddl movabs push scas cltd add (bad) add in es notl xor (bad) rex.B rex rex.WRB jae fisubr or mov and in rcrl push sti roll push mov add sarl sub clc xchg (bad) adc mov sbb loop sub int (bad) (bad) scas xchg es ds xchg sahf rex.WB mov jb mov or (bad) push shlb sub sbb (bad) rclq sub sar mov sbb in (bad) or mov iret mov and adc shll adcl mov sarl iret add mov pop ja movabs enterq (bad) sub sub or rex.WXB insl sub rorb loope fnsave and jnp rex.RB or and (bad) jg mov adc or (bad) insb movabs out (bad) outsl rcr and xor (bad) (bad) rex.WR sarb shrl (bad) cwtl (bad) mov (bad) in mov shrl leaveq mov or and pslld xlat (bad) and (bad) (bad) stc lea shll (bad) (bad) fstpt add and movslq adc rex.WB and or movabs shr ficomp sub test xchg rex.WX loop xor int lahf insb rcll lods rex.WRX lret mov (bad) repz rex.B mov jrcxz cmc (bad) decl (bad) sarl mov xchg roll mov test (bad) test jg jb roll in loope cmpsb roll retq sbb pop inc pop (bad) rol es lea test sarl and (bad) mov rex.XB and add outsl (bad) out add add fcomps out pop (bad) mov movabs or pop stos (bad) lret movsb (bad) mov rol (bad) movabs xchg and fldl and pushfq jp movabs and sub mov adc and jge add mov enterq jg movslq (bad) pushq and es lret add movabs push sar punpckhwd and shll (bad) xor popfq push sarl xchg rex.WRXB pop movsb (bad) sub (bad) sub repz movabs add and (bad) retq hlt xchg in sbb (bad) jle cmc pop add mov xchg jo mov pop jns and add sub retq add add repnz (bad) sub mov retq and push nop imulb cmp rex.WR (bad) jb jno fstl rex.X (bad) (bad) stos (bad) scas (bad) fsubr lret push shrl rex.RXB fs pop rex.WXB pop mov lods add mov push shrb lret pop iret enterq lock andb mov addr32 repz mov scas rex.WRX mov lret outsl (bad) retq icebp sbb mov clc xor sbb push popfq out cmp jns (bad) shrl imul fcomi movslq pop adcl pop cmp std (bad) mov shl (bad) mov cld add rex.X shll rex.XB lret fwait mov xor pop add insl scas mov mov pop imul movabs adc adc std sahf iret push rcll fmuls push fcomip sbb ss (bad) xor leaveq mov jbe sub and xchg mov or xchg xchg cmc xchg sbb repnz sub insl (bad) or stc (bad) rcll iret jmpq jb (bad) fnstsw and (bad) (bad) cmp rex.XB rorl sub cmpsb imul mov shll movabs adc movl rol sbb xor pushq repz xor iret rcll cmpsl fisubr (bad) addr32 iret repz (bad) cltd rex.B push mov or movsb jae xchg cs cmp fdivrl outsb or shrb rcrl or shufps mov rex.WX add enterq outsb push rcl mov cmp lods cmpsl or xchg (bad) fstps cmp fnstsw movslq lret (bad) rex.WR or sarl mov insl (bad) jne jge rcll push mov imul xor rex.X (bad) (bad) enterq rorl pop pushfq (bad) test negl fwait icebp lea rex.WRX jrcxz sbb and sub (bad) icebp (bad) (bad) enterq adc (bad) add rex.R rex.B rex.X ror shr mov pop and loop in mov xor retq xor sbb movabs callq mov jp and test mov mull xchg xchg test in movabs mov add xchg roll adc roll movabs orl push jmp or (bad) callq popfq cmp jno movsl xchg nop rcl jp cmp sarb adc shl scas xor out add adc (bad) imul loope mov (bad) data16 mov rorl mov (bad) (bad) cmp cld mov (bad) icebp mov (bad) inc cmp loope jg rex.RX rex.WRX adc es enterq callq outsl rex.RXB (bad) mov hlt push jne stos int3 and add cmpsl adc adc cltd adc add sub fistp xchg sub add gs mov sub jns out (bad) repnz rex.W int mov std enterq xchg sbb xchg xchg push test or (bad) cmc in setbe scas push js xor lods sarl leaveq jae rex.RX repnz xchg icebp (bad) int3 rex.B (bad) sbb sub fcoml and fnstcw xchg ror jno cmpsl add cli (bad) (bad) fucomip callq cmp or (bad) std outsb mov xor test or add test or outsb xor out leaveq (bad) popfq lret xor rex.RB adc cli movsb jmpq addr32 cltd add insl xchg sub stc and adc and xchg mov add sahf add idiv fmulp sub stc (bad) std adc sbb pushq sub movabs loop out in ss outsl (bad) ja add int3 cltd rex.B repnz cmp psrlw (bad) pushq (bad) movabs add vmread js adc and rex.WRB jno mov rex.WB rex.WRX repz icebp mov lock loopne jb xchg fcoms cli movabs clc test rex or xchg sahf (bad) push cs (bad) cmp lock jrcxz jns and test (bad) and xor rex.RXB iret and movsl repnz movsb adc or (bad) js jae xchg mov rex.B (bad) sti retq iret rex.WX fistpll (bad) xor lahf lock xchg and (bad) and xchg push ja (bad) push push js pushq (bad) movabs faddp (bad) in and pop rex.R rex.XB jae subb in jo lret (bad) movabs stos mov mov cmp retq shll callq nop (bad) imul pop add cwtl out sbb fld sbb rex.WRX adc adc shll icebp (bad) int mov jno (bad) (bad) scas lahf outsb (bad) and adcl insb iret jmp rex.RB (bad) (bad) xlat shrb inc sbb repz rorl test cltd and out cmpsb loopne callq rex mov xor iret adc pop push and pcmpgtw sub clc xchg push movslq in (bad) sub xor sbb fsubrl iret pushq jp pop and (bad) lock sub rex.WX xchg xchg xor repnz (bad) fiaddl fs mov rcrl jae (bad) cwtl rcll mov cmp enterq lahf push sbb (bad) add retq (bad) jrcxz mov push (bad) xor (bad) outsl rex.WXB loope rcl rex.RX jne mov pushq movabs in xor out pop and sub add xchg cmp sarl jrcxz cmpsb adc sarl add mov lock leaveq cltd (bad) (bad) cmp rex.WRXB es rex.WR xor (bad) rex.RXB rex.WXB in xchg cmp (bad) test sub (bad) xchg mov rex.WXB jns fstl (bad) hlt lock out cmp xchg and enterq xchg xchg lahf or xor insl pop (bad) (bad) xor rex.WXB ja and (bad) insl fwait jmpq rex.WX (bad) mov rcll (bad) mov shll rex.X pushfq xor in rorl add mov sub add mov mov icebp and rcll mov fwait mov movabs sbb lods sar jmpq jp int3 (bad) nop mov lret repz adc imul jns cwtl movabs repz (bad) xor cmpsb and xchg rex.WRXB (bad) stc (bad) movabs and ror loope movabs (bad) rex.X adcl int3 mov std shl push loopne xor add test insl add push mov pop outsl or (bad) iret je cmpsb xchg test xor jg loope (bad) test (bad) iret jl mov ja imull add test sbb xchg sbb lods iret rcr pop divb lret shlb mov jb rex.WRB pop and rex.WR ffree fcmovnb push rcrb xor (bad) roll mov push lret pop (bad) jrcxz or (bad) not (bad) xor fisub add fcmovnb jnp jp retq jge pop xchg jrcxz (bad) fistp movsw mov push divb hlt movabs fs insl fnstcw jae mov sub or rex.WX out jno sbb xlat sti (bad) fldcw or movabs data16 shr jb ss and xor fild xchg cmpsl push in mov orl (bad) enterq int fist cmpsb rex.WX xchg jp sub mov rex.WRX mov enterq test and or (bad) (bad) popfq rex.WR lret xlat mov (bad) jle add adc adc rcr sbb scas (bad) (bad) xchg iret mov rcrb add (bad) rex.W lret insb (bad) (bad) (bad) (bad) pop pop ja int3 sbb (bad) enterq push int and movslq (bad) loope gs rex.B movabs movabs jmpq add cmc pop and xlat int jnp lock (bad) test fdivr xchg lea (bad) loope repnz jl xchg (bad) imul lret add jno pop mov neg sub add fdivrp and xchg adc movabs cld mov fucom ss repnz push cmpsb mov push insb jl orl shll or iret (bad) mov (bad) (bad) in nop (bad) or repz retq orb (bad) push shrq fmul lcall sti stos add add rcrb in mov (bad) test jne shll fist incb cmp mov ljmp in add pop rorl rex.WXB movabs leaveq mov (bad) and sarb repz movslq jno cld (bad) mov hlt xor test (bad) loop sub cwtl push rex.XB sbb scas pcmpgtb xchg xor out mov rex.WB lock (bad) pop (bad) cmp scas rex.RX (bad) add in pushq sbb shll pop rorl (bad) fwait pop xchg stos mov sahf pushq add and (bad) callq jb nop mov shrl and jle jns jns (bad) (bad) (bad) jae (bad) cmpsl xchg lea out rex.R rol ja je stos add mov add jb shll orb add sbb ja (bad) rorl pop (bad) sarl sbb (bad) mov lret sti out iret mov pushq retq rorl or xor clc retq incl rex.WB rex.WRXB in (bad) push rex.WR fs retq sbb int3 (bad) pop push and cmpsl loope pop test mov mulb cld js (bad) push mov mov (bad) and (bad) (bad) rcrl (bad) pop loop pop jge mov lock sbb add mov lret iret push xlat and (bad) adc push pop sub callq movabs and mov rex.WXB pop shll test mov pop movabs sbb fidiv xor lret jg mov stos sarl ja jno rclw pop movabs and out sbb mov push xor adc retq (bad) fsubl xchg in rcll cmc xchg mov retq rex.B push fildll (bad) xchg cmpsl xchg sub (bad) pop rex.XB rex.WRX sarl xchg mov lret rcr xchg (bad) sbbl test (bad) hlt pop push popfq addr32 rcll repnz shrl gs in lock int3 rol cmp xchg out andb xchg mov jb lea rcrl out rex.RB cmp retq push xchg (bad) fiaddl or out (bad) or rex.B rex.XB (bad) xlat pop out loop hlt test rcr int and xchg sbb mov incl cltd movsb movabs rorl and jle rex.WRB rolb sub cmc test add cmp pushq pop sti lret clc sbb (bad) (bad) or rorl xchg pop retq (bad) xchg mov sbb lock callq (bad) popfq clc movsl sub and adc movabs ja scas add rex.X rex.R gs (bad) jmpq sbb testb insl lods (bad) cli lahf jno lock pushq jo loope icebp rex.RB jbe xchg (bad) in cltd rex.B out retq loopne clc sbb (bad) sbb rcrl (bad) add (bad) rex.WR push sbbl mov jmpq (bad) rcrl adc retq stos mov movabs (bad) xchg insl and mov outsl jnp jbe add repnz jl push xchg shll mov mov outsl test (bad) leaveq shrl pop cmp lods (bad) (bad) mov (bad) shll mov (bad) rex.WRXB out jns lret sub (bad) and push (bad) (bad) scas add jg (bad) xor (bad) std fcmovnb and (bad) (bad) mov roll push mov sbb jl sbb jo lret mov push loopne fxch std loop rex.XB stos fidivrl repnz or xchg shll push mov cli rorl lods test push stos (bad) ja (bad) fsts jle add mov lods push push mov mov negl mov test rex.WXB test movabs fildl xlat mov add pushfq cs xor movsb lret jl mov (bad) test outsl adc andl rex.RXB push scas scas mov out cmp movabs mov sbb imul movabs add sub scas xchg (bad) icebp mov jmpq xchg (bad) (bad) add sbb test loop in rex.B out jle iret push rex.R push cmpl add (bad) sbb (bad) rcll loop rolb jne mov addr32 sarl cwtl lods out insb (bad) pushfq cmc sti insl int3 xor xor sub (bad) stos mov mov (bad) (bad) fisubl and stc (bad) xor add mov (bad) loop fsts cmp cmp rcl outsb retq in shll add int3 (bad) or push cmp repz loope jmpq sbb (bad) es (bad) scas sar fidivrl xor xchg cmp addr32 mov add and and cmp rex.R fs sti test (bad) mov ss jbe jo adc rex.WR nop in mov jrcxz (bad) hlt lea rol fidivr and add mov sub enterq divl mov add add stc shll int3 loopne (bad) rex.WR rex.B fcomps sahf (bad) jrcxz leaveq loopne sarl (bad) (bad) lret jp mov (bad) pop clc data16 xchg lods (bad) (bad) pushq fild jne sub push lea rex.WRB ja mov mov adc std rol mov push out add or xor xchg ja jmpq push jb add and mov sbb rex.WR addr32 shrl lret movabs data16 vpsrlq loop clc mov lahf or (bad) roll pop xchg jrcxz out popfq sahf pop sub movabs cmp (bad) or (bad) out loope or test jne shll sbb popfq rex.WXB rcl callq (bad) pop xadd fisubl adc (bad) iret sub orl or movabs fildl xchg rorl (bad) add sbb rex.X in lea (bad) out xlat int3 retq xorl xchg lret rex.B icebp adc rol jmp jge movabs jno cmp je in in (bad) sbb pop lods sahf lea stc or push fiaddl iret (bad) pushq (bad) (bad) orl rcrl js lret lods movabs addr32 (bad) push cmc shll mov xchg rclb mov fcmovnb (bad) jae xchg mov (bad) or or rex.WRX stos retq and sub and ds sbb test add or (bad) jo (bad) fisub gs shl fstpt test mov (bad) xor insb rex.RXB repz add ja mov (bad) orl xchg iret (bad) jb,pt and loopne add shlb std frstor pop int mov cltd (bad) sbb rex.XB xchg push rcrl incb cltd xor mov es clc sub (bad) jns movabs jae int (bad) mov jl (bad) sti sbb retq jne cmp (bad) movabs std fstl (bad) retq adc shrl rex.RX xlat cmpsl fdivp cmp adc mov mov xchg cmpsb movabs jge cld pop inc int and (bad) xlat ror xor fmull ss jnp rex.W test xor lods add cmp xchg rcll scas jb int3 pop mulb xchg int jno mov (bad) out xchg rcr incb xor (bad) mov pop push (bad) sbb mov (bad) push jne sub mov scas lret mov or (bad) fistpl sarl cmp divb (bad) repz andl movslq outsb sahf xchg out pop and rcll loopne vpmaddwd jbe rex.W scas jg sub iret pop sbb (bad) jno rcrl xchg (bad) lods orl mov (bad) xor rex.RXB ror xchg movabs test and rcrl sbb int3 jle push stos rcl mov xchg shr (bad) cmp sahf cmpb jg pop lods (bad) xchg mov sbb (bad) sub nop mov mov sarl (bad) pop mov jp mov (bad) retq rcll (bad) add (bad) adc jle (bad) scas add rolb add jne jrcxz (bad) jmp push and xor (bad) cli jp fdivrp clc push in sarl jns sub retq add and cmp (bad) (bad) rex.WRX test rex.RX add xchg shrb lea (bad) int clc adc (bad) enterq ss imull or (bad) mov (bad) xchg in (bad) (bad) callq xchg cmp cld or movabs sub shr imul pop (bad) cltd sbb pop xchg jnp loop pop mov (bad) or xor shll and mov rex.WRXB nop insl retq sub adc pushfq mov mov fadd cli rex.RX test ss (bad) jp and rex.WR loope out mov xchg jge fimull rex.X repnz insl push test shll fldenv push sub fcmovu rex.WXB (bad) cmp mov rcr fwait nop int3 xchg cmpsl rex.WRB repz fcmovne xchg lret (bad) movabs xchg (bad) jnp add rex mov (bad) ds callq out mov push mov sub roll in mov std rcll fwait (bad) mov (bad) iret adc cld add jnp mov (bad) add (bad) shll (bad) out (bad) or cmp (bad) (bad) push sub and in fld sar mov mov (bad) addr32 (bad) mov (bad) xchg add rex lods jo jne or mov retq (bad) rex.WRXB jle (bad) xchg shll mov sbb xor or movslq ja or (bad) lret (bad) adc cltd lock test mov rex.WXB repnz and movsl scas test enterq (bad) add movabs mov repnz xor (bad) (bad) pushfq cltd push (bad) xor iret cmp (bad) (bad) (bad) mov mov loop sahf (bad) roll (bad) mov in mov scas sub imul rex.RX data16 add pushq mov test rorl pop (bad) push add rcl data16 rclb jnp rex.WRX scas insl rex.WRXB rex.WB shr adc out and popfq lret jo jns or xchg andb pop lea ds push popfq adc rcll and jle mov rex.WR cli cmp (bad) ja movsb (bad) push mov (bad) loope cmpsb pop cmpsl cld jge sbb js cmp adc lods addl jrcxz push add imul mov rex.WRB rex.XB sbb (bad) mov cmpsb in (bad) (bad) outsb decl pop (bad) jle xchg add fsubrp xor movabs cwtl rex.W xchg (bad) lret (bad) scas cmpsl mov std (bad) (bad) callq (bad) jb mov (bad) xchg and mov sub sub (bad) idivl sbb retq (bad) cmpsl rorl jmp or (bad) rorb pushq jl sbb and push mov sarl mov (bad) adc xor rex.WRB sbb or scas jne pop sar add enterq (bad) push add data16 repnz cmp int in movl xchg rex.WX loop cmp mov fnstsw out jg sbb xlat or loop jrcxz rex.RB push iretq mov xchg cmpl (bad) addr32 (bad) test sub cltd hlt (bad) fwait xlat fistpll mov movabs rex.WR (bad) imul out rcrb fnstcw xchg ja pop shr push loopne cmp adc rex.WXB xchg movsb pop (bad) sti loop sbb fisttp rex (bad) int mov mov cmp gs adc mov popfq sbb jp rol push sub lods mov in sti (bad) jae xor lret sub adcl and data16 rcrl movsb movabs push (bad) (bad) pop cmc rex.XB test cltd and jns loope ds (bad) jae cwtl test mov (bad) jle sbb shrl mov (bad) mov hlt fldcw leaveq xchg (bad) lahf rcll in pop clc mov (bad) mov jge movsl rex.RXB ds sub (bad) jle test shrl pop sahf mov in repnz rcr stos vpmulhuw fs jmp pop leaveq lret jl xchg (bad) mov (bad) fisubl gs jg (bad) repnz rcl cmc mov mov cmpsb mov xchg mov shrl rex.XB (bad) adc mov sub and imul in nop (bad) jns xlat (bad) cmp add jge in xor lock (bad) sbb retq out jle in (bad) xchg shrl fisttpll pushq mov je add (bad) pop (bad) jp lret jle adc callq es cmpsb shrl and rcrl pop (bad) out jle xchg add rcrl int3 or push (bad) movabs loopne (bad) add cmpsl (bad) add (bad) loop (bad) retq stc rex.WRX jg (bad) mov ficomp cmp mov add sahf mul fistpll fwait push movabs fcmovnb mov repz pop roll movabs mov xchg out ja sub fsubrs cld push xchg rcrb rorl pop xchg (bad) sbb out test pop in mov adc rex.RX lock xor movsl repnz fidivrl jge (bad) pushq int3 mov adc rex.WX sarl int out (bad) cltd insl shrl rex.R rex.WRXB mov xlat fcmovnb sub imul insb push fstl xchg imul (bad) push and (bad) sar jns sub mov orl cmp (bad) sbb and (bad) add xchg (bad) and add rex.WRB enterq mov push std iret cltd xchg rex.B mov insb test cmp or pop rex.R addr32 insl rcrl repnz sbb (bad) movabs push outsb shll or out mov (bad) xor jne rcr cmp (bad) movabs mov add push xchg std and add (bad) iret lret andl (bad) (bad) in jno mov cs rcrb or (bad) callq out sahf mov mov rex.R gs sbb jmpq and shl jno pop pop icebp lock cmp rex.RB jbe push movsb and fstpt (bad) pop int nop jno in bnd mov jbe rex.WB cmp (bad) adc (bad) add cmpsb leaveq adc loope imulb rex.WXB lea fld1 pop shll addl sar fsubrs cmpsl pop (bad) mull cmp (bad) xlat pushq add xor rex.WX (bad) rex.XB rex.WX xchg sbb and rex.XB push (bad) pop nop subl xor iret int3 in sbb rex.XB rex.B mov vpmaxsw adc mov imul xchg rorl popfq mov (bad) cmpsb gs mov imul cmpsl ss or sbb int icebp repnz test (bad) iret mov and push jbe rex.WR rex.WRXB xor retq mov mov repnz xchg (bad) add (bad) mov jns or sub leaveq ds add rex.WRX enterq icebp jrcxz add out jp (bad) iret (bad) jl cld movabs xchg sbb fwait jns adc jae rex.RX xlat movslq ffree scas fiaddl mov and vsqrtpd outsl test or loopne rex.X (bad) lods xchg fwait mov rex.WX xchg jle jp (bad) add mov cmp add jae rex.R lods or add rex.B in bnd jne xchg rex insl out fmul (bad) mov shrl pop icebp rex.X lret int imulb rex.WB repz (bad) adc and repnz lock mov (bad) in rex.RX rex.R int3 fldcw (bad) mov sub movsb push add mov clc (bad) (bad) (bad) xor in xchg nop bsr mov cwtl retq outsb rex.RB sub enterq or xchg test mov and push xlat and (bad) pop and (bad) gs jo xor int (bad) movsb pop (bad) movabs in movslq mull icebp lock sbb out pop (bad) loop rex.WRX add mov and ss test loop (bad) shr mov pop xchg test sbb mov fnstenv mov imul lret push adc rex.WR rex.RX cmp xlat cmp test pushq addr32 push nop rex.WB repnz jns push xor rex.WR nop xor imul mov (bad) lahf sub cmpps adc loope add leaveq rex.B imul data16 repz lock int push xor lods out rex.WB push (bad) xchg callq add mov adc ss jp mov loop rex.B fldl insb cli add sbb push stc xchg (bad) pop rex.RX sbb jmpq cmp mov pop push rcrl stos xor sbb sahf add rex.RB jnp rolb xlat jge rcrl repz add (bad) (bad) rex.B lock cmp sarl (bad) gs push std fstp hlt add fistpl callq xlat jo scas movslq ljmp pop cmp lea push pop adc (bad) lods in fwait rex.B (bad) jle lock xchg rex.WRX (bad) jns (bad) shrl movabs and rcrl xlat sarl rex.X mov rorl fcmovnb stc rex.RB mov mov shll add es lods sarl and pushfq jge shr rex.WX mov std (bad) mov mov insb fwait ror sub xchg rex.WRX (bad) rex.W sbb (bad) loop mov cld sbb xor rcll cltd rex.WX adc fcmovb cmpsb std xchg cld (bad) (bad) mov lods sub xchg int out rex.X rcll push jmp jns sub adc mov rorl rex.WRB (bad) scas jg (bad) mov imul xor in jge or (bad) (bad) cmpsb fsub jne rex.RX mov (bad) and fist jno shrl mov shl adc adc rex.W leaveq xor (bad) loopne in fcompl sub rex.RX stc repnz (bad) cs lret addr32 mov lock sar pop push int ss roll in adc sbb xor mov test mov or (bad) movsl rex.B fistp jo or sti fnstcw movabs pushfq out pushfq (bad) icebp rex.B lret in fdivrl std jl cmpsb xor push lret out rex.WRX mov js lret iret std lret push pop test sarl (bad) test cli (bad) out nop mov jno (bad) andb mov (bad) int3 adcl data16 cmp mov mov xchg (bad) es jae iret xchg rex.RXB mov stos (bad) lods jno shll popfq rex.RX and xchg jns (bad) decb mov sbb sbb (bad) or push and (bad) sub adc (bad) repz leaveq push repnz fistl sub push (bad) rex.WXB rex.WRXB and out insl cmp shl sbb (bad) (bad) lret roll shld (bad) (bad) fs rcr push mov jrcxz mov pushq shrl fdivs adc pop rcrl rex.R pop or adc (bad) cmc (bad) hlt addr32 adc fmull rex.X rol mov imul mov retq and push mov ss rex.WXB cmp leaveq adc out add loopne add pop mov lock lret mov xchg ja movsb shll test fcomps xchg push jne fsubl jno std and icebp mov sbb and pop adc (bad) leaveq test movsb es mov (bad) jb leaveq andl stos sbb sbb (bad) sub xor jo pop adc loop xor (bad) enterq pop hlt rex.RXB mov rcl imul dec movb repnz (bad) (bad) sub movabs movabs loope movabs jbe nop fmul imul add cmp xor jp adc adc mov (bad) add imul (bad) xchg sub ss and mov (bad) outsb fildl add xchg push shrl jle add sbb callq (bad) (bad) (bad) xchg add add cwtl rcll std mov (bad) repnz push stc (bad) fwait push mov (bad) shll (bad) mov repnz stos (bad) cmpsb (bad) shll cmc mov (bad) movabs xchg mov rcrb xorl fwait xor mov sarl cltd push in out int jno lea push pushq (bad) notb retq jg (bad) loopne or mov jle xor cmp push xor in cmpsb enterw mulb mov out fwait insb (bad) sbb in lahf jp repz pop outsb (bad) adc cmp xlat push xchg jmpq lret mov or jns movslq jno in xchg enterq test sarl sbb rcrl (bad) (bad) leaveq mov lahf jp jnp xchg test imul movsb (bad) mov (bad) jl fisub (bad) or jle add andb stos and data16 rex.RXB rex.WR or ds repnz (bad) (bad) (bad) jns (bad) xchg rorl mov callq lret imul insl cmp push out sub cmp andb repz leaveq loop pushfq stos rolb xchg adc mov jo retq xlat sbb rex out rex.R movsb nop fist rcrl xchg fisttp movabs jg sahf fwait rex int3 shll test rex.XB mov sbb popfq fisttpll imul add rex.WR adc cwtl icebp xchg sti (bad) (bad) push jne add clc jge lahf jp or cmp xchg and fwait (bad) and fdivrs rex.WRB mov xlat or (bad) jmpq push cmpsb icebp stc mov clc cmp jns (bad) stos rorl fsts enterq insb rex.XB retq (bad) notl cmp scas adc adc mov movabs rex.RX push add and cld stos sbbl rex.RXB sarl cmp int3 xor add out (bad) xchg movsb rolb rex.XB push cmp cmp mov (bad) and outsl test (bad) rex.WX rclb cld sub xchg jrcxz cmp xor ss sbb pop stos rex.WX ds rex.B (bad) xchg pop stos ss adc xchg cmp es or rex.X add movabs cld xlat sarl rcll or fwait iret (bad) loope adcl jne and xor xchg cltd (bad) fs je cmpsb (bad) cmp jp add andb jrcxz xor std rex.R (bad) cld add loope icebp rorl cmp lahf cmpsb lret movabs sbb add push push cmc pop lods addr32 shl rcll rex.X sub in movabs and jmp cmc and sub test mov sarl push mov ds sbb (bad) iret out rex.XB rorl xchg pop (bad) je movl fwait adc rex.B jns xchg loopne lret and out sub movb roll cmpsl xchg iret movabs jbe rex.B xor fsts (bad) fadd cmpsl cmp add push mov xchg mov xor popfq notb or and mov or stos (bad) rex.W mov (bad) loopne sbb enterq xchg insb jmp shll repnz lods sub jl rex adcl gs (bad) rex.WB cmp jmpq negl push sarl rex.WRXB rex (bad) ror sub sarq scas int lea and (bad) xchg movabs xchg mulw pushq adc xlat and repz xor rex xchg sti (bad) (bad) lock lock mov push loope leaveq xchg (bad) rex.WR cmp add (bad) rex.XB cmp (bad) cmp pop (bad) (bad) rex.WR cmc data16 test add fmuls scas fisubr pop sub stos (bad) lret iret mov (bad) xor adc out test add lods mov lahf xlat ror insl shrl test mov or cmp int mov sub fild rex.WRX (bad) rcrl mov rex.RB stc ss jg and adc cmp out xchg adc sbb out push rol add (bad) pop cmc sub rcr or cmpsl (bad) insb out jge lods shll (bad) push roll and adc mov (bad) mov fwait cmp rorl test rorl add (bad) je (bad) outsl xor or mov shr lret rex.WXB mov xor test jp lea (bad) fldcw (bad) test and add fnstsw imul mov jle callq adc (bad) xor sbb loope hlt cmpsb (bad) shr pop fldl and lea ror jo rclb and retq push jmp sbbl pop int3 xor and adc adc subl jle sub (bad) or xchg rex.WRX adc pop add (bad) (bad) xchg cmp cmpsb js (bad) sub rex.RX xor in lret adc xchg mov pop (bad) leaveq jns cli pop push (bad) xchg data16 (bad) repnz adc pop testb or (bad) fildl mov push xor (bad) fiaddl jg xor jns outsb nop mov subl rex.RX movabs pop rolq lahf (bad) icebp or cmp (bad) int3 (bad) cmpsl push cmp and iret jbe and scas test movabs rex.W (bad) xchg shll movhps (bad) mov or and mov mov rex.RXB (bad) lahf add (bad) rex.WX (bad) (bad) cmpsl jle in xchg movabs and ds mov in leaveq fucomi out cltd mov mov and jrcxz rorl or pushq pop int fistl notb pop sbb push enterq adc and loopne fdivrl (bad) cmc mov (bad) test add sub rcll fisub push movabs test test push shr shrl push movabs adc shrl out (bad) cmp mov lret sbb jno repz rorl (bad) rex.WRX mov or pop push shrl jno fidivrl add stos pushq sbb cmp mov jle pop rcrl mov sarl (bad) addb mov inc and sbb mov or jnp testb jns,pt (bad) mov movslq shrl lret imul or int3 mov (bad) sbb (bad) (bad) movsb out sbb shrl mov rex.RX (bad) imul shll es (bad) movabs or (bad) xor cmp repz mull pop or xorl mov rex.B lock (bad) movslq shll lahf outsl (bad) neg jbe fwait (bad) stc test mov (bad) int3 cmp lods sub sub mov jmpq (bad) mov (bad) fcmovnb mov imul shrl loope shll xor rex.WR rex.R fsubp (bad) mov (bad) gs outsb jno (bad) mov shrb sarl cmp xor repz sti cltd lock add cmp mov jbe out sbb loop jge pushq rex.X xchg xchg shrl (bad) pop fwait rcll rex.RXB sbb movabs out sub out or sbb sar int3 add push cmp pushq push notl mov rcr scas mov (bad) add sub jbe jp cmp (bad) xchg idivl insb push rex.B addr32 icebp out (bad) rcrl loop rex.WX fs iret roll cmpsl divb (bad) jg movd mov jae cmp push stos movabs (bad) sbb mov xlat enterq int cltd nop cmc int3 std iret pop jb movsl loope sub rcl cltd outsb xor mov adc insl rex.W shll rex.X adc sbbl movslq imul fcoml jns clc mov cmp rcrl pushfq in idivb and (bad) fcmovnb insb cmp cs jae ficompl jle (bad) add rcll and jle rex.WRB scas push cltd add (bad) lods cli push (bad) lods rex.WRX rex.B jno (bad) shrb repz stos adc push fstl add push (bad) (bad) fdivr insl cmpsb (bad) leaveq sbb in movl imulb jo stos stos and fidivr movabs or rex.WB rex.WRXB (bad) (bad) repnz push fisttpl cld notb rex.WRX hlt fs or (bad) movsb mov and xor enterq pop in ja rex.WRXB rex.WR (bad) jmpq sub sub (bad) stc jle rex.WX adc fwait repnz (bad) pop (bad) test xor stos cmp add (bad) pop lretw pop push adc xchg testb (bad) imul retq or mov jns or jp testb sbb insb wbinvd (bad) repz mov movsb (bad) rcr jp out xlat rex.W (bad) fldcw cld jo rex.XB sti ja sbb sbb pushfq jp pushq mov scas fs cmp mov fcomps jg xor sahf jns sub (bad) sbb mov outsb js icebp lods (bad) sub ss (bad) test (bad) cmp jbe sar sarb lahf (bad) movabs add bnd pushq xor int3 sahf (bad) and icebp and jb insl xor xchg adc xor int imul sub imul mov imul lahf rex.WXB icebp mov jno fdiv iret rex.WXB (bad) mov insb divb (bad) rex.WRXB test fnstcw xchg mov pop mov push cmp subl movabs pop sbb repnz callq repz push cmpl int3 enterq mov (bad) mov retq cltd and sbb loopne (bad) xor push enterq in or fdivrs movsl mov in rex.WX fidivr (bad) xchg (bad) jo sbb lods (bad) (bad) (bad) or mov sbb icebp (bad) int bnd (bad) fisttpl xchg mov lea retq fstpt (bad) rex.W xor mov add rex.WB add and (bad) lods mov (bad) (bad) rex.RB int testl add rclb xor add jno repz rex.B ljmp mov (bad) in adc mov rex.WRX rex.WRXB (bad) xor lret cmc sbb sbb rex.WRB cmp por test xlat out ss retq (bad) xor hlt retq pushq roll fbstp (bad) pop jle loope mov sub rex.R addr32 clc ror lret js cld push mov rex.RB mov jge rex.WRX mov ds ficom fisubl out xchg outsl movabs push stos rex.WR xchg outsb rex.RX in add pop rex.W add mov shr (bad) adc or and vcomisd add sub (bad) roll xchg mov rcl sub imul int (bad) ss add (bad) jge add shll fdivrl mov push scas add mov mov stos shll (bad) out rcll (bad) push cld sub add shrl (bad) pushq repnz xor rex.X xlat mov cwtl movslq sub ss or (bad) (bad) push popfq lods fcmovb cmp mov xchg rex.WRXB data16 xchg ficomp lret (bad) jmpq mov sbb pop stc (bad) repz sub int3 sub (bad) push push rex.X sub xchg (bad) sub mov js loop movsl adc jae (bad) popfq repz sahf pushfq shrl cmc stos adc (bad) roll jl decl (bad) pushq movabs rex.B cmpsl je push rcr (bad) sarb xor int xchg add rorl jmpq loope or movsb addl xchg stos jnp movabs rcrl xlat mov shll adc cmp and scas jnp cltd pop mov loope and movabs fild notb in (bad) mov loopne push mul out movsl adc sbb sahf rol jns xor mov (bad) mov rcr pop mov je callq hlt sbb jnp add add and rex.B out (bad) in jb jmpq and sub sti add int mov mov mov (bad) rorl in fs jle (bad) repnz mov (bad) add test mov (bad) pop (bad) out rorl mov sub sbb sbb push sub cltd mov ss sti pop rex.WR xor rex lock lea loopne add mov icebp lret lock pop (bad) rex.WB mov int int3 add cwtl movabs cmpsb rorl xor iret fnstcw xor jae xchg je lahf or rex.WXB frstor test test xchg int (bad) movabs sarl rex.RX (bad) jns stc rex.WXB cmc sub or roll test movabs add stos ficomp xchg pop imul sti (bad) (bad) adc test jno pushfq (bad) movabs mov loop jp (bad) cmpsl jb mov iret add and fwait int3 xor jp or mov roll sub jno in rex.WRXB pushfq iret loop mov (bad) test adc ja movsb cmc test rex.WX sbbb mov movabs movslq (bad) mov icebp iret xchg in es (bad) or outsl xchg mov popfq sahf repnz push movsb rorl xchg xchg lret (bad) lret rex.WX rex.RB push rex.WB enterq lods popfq (bad) lret fcmovnb test rex.R pop xchg pop sar xchg xchg test lahf hlt sbb adc sbb or sar (bad) ffreep jp test (bad) push (bad) (bad) scas (bad) adc in (bad) sbb mov adc jne shll (bad) (bad) push retq cwtl cmp lret (bad) (bad) and rex.WXB ss or mov (bad) lahf (bad) nop repz rol adc fsts rol adc mov stos xchg mov outsl loop rex.WRX rex.R jmp adc (bad) lods (bad) outsb pop sub (bad) iret mov (bad) sbb std mov (bad) mov ja cmp rex.WRXB scas mov (bad) (bad) add fisubl pop xchg hlt or shl (bad) pop retq mov in callq pop adcl cmp cmpl xchg lret mov add js pop loop repnz in (bad) ss leaveq or loopne movslq cltd (bad) js xchg sbb pushfq loope (bad) shrl pushfq or adc in retq (bad) adc push cmp jrcxz in xchg loopne fs subl cmpsb jae rex.RXB and lahf movabs rex.WX pop (bad) lock xchg in cmp push inc xor mov (bad) jl lods sbb movsl int3 pushfq cs rcrl adc jno mov loope (bad) push cmpsl (bad) negb pop je push rex.B jmpq pop shrl ds (bad) decb pushq (bad) xchg iret push (bad) icebp movabs sarb roll and lret lods (bad) fbld rex.RX mov lea (bad) cmp (bad) lock iret cmp out jbe fnop add shl fldenv pushq cltd add mov or loope repnz add pop xchg or ficompl rex.RX loope pop movabs roll xor (bad) rorl sub movabs xchg pushfq jg rex.RX push sarl insl shll jb sub push add (bad) in retq scas loope add xor rex.WRB rex.RX popfq loop (bad) (bad) or je scas xor mov sahf mov fsubl rex.B mov (bad) add loopne popfq mov js xchg xchg (bad) jbe fstpt xchg jb stc pop xchg fstps mov rex.WR rex.WRX fidivrl (bad) repnz (bad) shlw and loop rol sub adc mov int mov stc je mov cld rcll xlat (bad) (bad) outsb (bad) loop cmp pop rex.WRX idivb jle (bad) hlt rex.RXB jmp xchg xchg in (bad) jb rex add (bad) mov sub (bad) cmp mov mov add imul lea or lods rex.XB out rcrl push shll xchg sahf (bad) sbb push pop vpcmpgtw stc roll jmpq push rcrl push out xchg xchg test cltd rex.RX cmp mul sub push push data16 cmpsl push add movabs repnz sarl mov rex.B xchg in roll out push mov roll movabs (bad) rol adc popfq (bad) jo sbb vshufps nop rcr add mov divb add lock pushfq sbb jno and pop and sub add jne cli rex.RX cwtl fldenv retq rex.WRX (bad) jmp xor or cmp pop cmp scas (bad) sbb and insl retq pop pop rex.R cltd cwtl add cld rex.W (bad) (bad) fucomi xchg sbb sbb pop loope fsts (bad) int3 (bad) movsb and (bad) data16 (bad) int shll out (bad) push sti sub xor (bad) lock movabs (bad) retq pop pop (bad) xor fist (bad) rex.RX mov and rex.WRX rex.WXB lock movabs shrl mov out cs lea (bad) and lods mov (bad) mov xchg cli sarl sahf (bad) shll lods test xchg addr32 xor int shrl lods (bad) repz lret sub sbb mov cwtl mov xchg enterq shl rex.B mov and rex jmp xlat rcrl (bad) mov cmp rex.WX stos shll (bad) retq rex.WXB cmp (bad) mov scas (bad) push add mov pushq adc test xchg (bad) outsl (bad) rcll and popfq mov or rex.B (bad) ja test cmpl outsb add cltd movsl (bad) fbld rol sbb push addr32 rex.B xchg movabs (bad) rol movabs xor repnz icebp mov (bad) add (bad) add lret (bad) adc sbb jnp (bad) pop jge movabs es pushfq (bad) push (bad) addr32 ror (bad) cs mov jno rex.WX xor mov rex.B int3 rex.XB add (bad) ss cmp movslq pop rdpmc stos push rex.WRB outsl mov mov rex.RXB rex.WRX scas or jb sbb fdivs sub jae cmp mov (bad) mov test jp or push sub rex.WRXB (bad) add or (bad) mov sarl sbb test test adc xor mov (bad) mov pop jmp outsb rex.B adc cwtl (bad) add maxps add lret outsb sub ja and rorl nop sub mov sahf out add sbb rex.RXB movabs test adcl mov rex.B sbb (bad) neg pop (bad) jne enterq lea xchg sbb lret xchg or (bad) repz (bad) jrcxz push repnz lods mov mov enterq mov (bad) xor rex.WRXB rex.RXB pop movabs and popfq (bad) push (bad) movsl hlt insl callq movabs adc clc pop (bad) sarl fwait movabs enterq add xor mull icebp fadd idivl out lret ljmp cmp rex rclb mov cwtl and sub movabs fistpl mov mov jnp push std mov pop xchg cmc push pop scas rex.B jb mov jg (bad) adc ss shll stos (bad) icebp push or sarl pushq cli jae jo xchg fs rex.XB addr32 (bad) mov rex.WRXB leaveq and movsl cwtl xchg shrb (bad) push mov popfq iret or mov iret rex.WB fs pop jne data16 (bad) mov rex.B mov mov add sub mov lret int3 repnz rcr pushq test mov in out jl pop xor rex.XB (bad) add rex.RX sbb sbb or mov loope cmp iret (bad) sub lret (bad) jrcxz (bad) rex.RXB xor xor cmc rex.WRXB mov icebp int3 cmpsb (bad) fbstp pop jp movabs rex leaveq cmp (bad) enterq adc cmp insl rex.WRB sub adc cmpsl push ss (bad) repnz sub sub cmpsb xchg retq rex.WRX cltd retq push pop and pop xor (bad) jp mov leaveq or and pushq outsb adc mov rex.RB fcmovnb adc enterq sbb jbe (bad) cs mov je scas mov pop vmovupd hlt pop add push js cmpsb rex.X in in rex.WRB (bad) jb retq lock rex.R movabs callq add and out sub mov adcb (bad) adc (bad) dec scas (bad) repnz rex.B movsl jne (bad) loop pushq scas cmp repz cmp sarl pop or fldt jmpq (bad) jno lahf outsb (bad) (bad) fs imul jbe cli or repnz loope jle cmp rcrl nop movsl (bad) leaveq push movsb xchg adc (bad) (bad) and out add fs xchg (bad) pop (bad) shll movabs (bad) scas pop callq jge sbb cmp rex.WXB out pop fstl rorl adc (bad) and repz repnz in ror movabs sbb sub pop and jge (bad) xor iret addb mov loop fistl insl fsub add cmpsl addl rex.R in ds xchg repz outsb lret movslq jb adc xchg pushfq lahf repz enterq lods (bad) movabs stc jo test fdivrs repnz mov sub mov in sbb sub fidiv mov jmp je (bad) (bad) mov rex.RX (bad) and (bad) jne loopne xchg loope fiadd insl (bad) (bad) xlat vpmaxub add mov sahf repnz push sub ss mov jp fcomi push pop xchg movslq mov pop (bad) rolb xor mov cli (bad) test lret retq mov rex.WX jbe fs xor xchg jg jo callq int push (bad) out cmpsl and pop sub sub rex.XB iret retq pushq rex.R (bad) sbb cmp xor mov jmp adc callq add xlat add pop loope jl scas cld or (bad) cmp ss sarl incl add testb rclb cmp imul jl jg (bad) jns push mov shll cmp pop movabs rex.WB js incl iret cwtl cmpsl addr32 (bad) push mov stc or (bad) rex.WRXB (bad) mov rex.XB cmpsl mov (bad) rex mov xor (bad) lods (bad) jl mov mov and jge or (bad) mov orb (bad) lods rex.B fwait or rex.RX mov xor repnz xchg sub sahf xorl sarl rex.WRB insl (bad) rcrl pop cld xor repz or mov (bad) faddp scas mov (bad) mov (bad) jbe mov jae retq xchg cmp icebp cmp ja xchg pushq mov (bad) (bad) sub xchg lahf rex.B rex.WXB stos mov sbb loop pop sub pushq xchg (bad) rex.R fs sub int3 fsin (bad) xor scas (bad) xor rex.WXB mov imul (bad) out rex.B loop (bad) mov (bad) (bad) and push (bad) mov sub add leaveq xor out xor movabs rex.B sbb retq fucomi (bad) (bad) mov xor sbb shl adc jo mov nop in mov jmpq fsubs (bad) jae fnsave mov and mov lret (bad) je cmpl (bad) (bad) xor mov jmpq push leaveq data16 (bad) in vrsqrtss lret or xor cwtl (bad) loop (bad) leaveq sahf hlt jae (bad) insb sub cmc sbb out movslq sahf fs xchg (bad) fbld rex.WRX (bad) or enterq sub lock xor test (bad) jne int3 push (bad) shr (bad) sbb stos (bad) jnp (bad) (bad) lods jp mov leaveq rorb jns xlat (bad) jp (bad) add movabs movsl (bad) mov insb rex.RXB jno movabs pop (bad) (bad) addb sub add movabs lods bnd scas cmc repz xchg movabs pop sbb outsb movabs loopne shl (bad) std adc rex.WX (bad) jrcxz jrcxz sbbl (bad) mov movabs jns jne popfq vmulpd (bad) pop ja loope rex.WRX sub in fimul pop rex.WRXB cs (bad) adc mov lret fist (bad) int sbb scas xchg es jg and or pop and fisubl lcall or jrcxz int3 cmc add lahf cmp cmp sbb push mov (bad) scas jb mov cmp lret int or fwait add lods rex.WRXB mov sbb lret fdivs xlat xor xor mov fcoml adc rex.RXB ds in (bad) cltd rex.RXB or xchg jno repz iret test sbb lret xor (bad) jb leaveq (bad) test or popfq out repnz test rex.X mov scas jnp jns fsubr adc out repz add movabs fist int3 (bad) mov movabs imul xchg sbb mulb (bad) mov rex.WXB xor jge clc xor or in (bad) or rex.WR mov outsb movabs cmp (bad) rex.WXB sbb scas or callq lock pop sbb repnz loopne and outsl cmp iret js div (bad) shll (bad) (bad) (bad) movabs pop outsl rex.WXB movsl mov push sub test or imull outsl loope lea rex.WXB adc int3 mov std mov or (bad) movslq mov rex.R mov retq clc movabs loopne out xchg pushq or (bad) jp repz (bad) jb cwtl jmp (bad) cmp out clc movabs fdivr adc and jae mov jp retq movabs xchg (bad) rex.WRXB pop add pushfq xor loop (bad) jae icebp cmp sti mov ja js cmc rcrb mov outsb jge ds mov mov scas fldt cmpsl jrcxz mov shrb adc idivb and push (bad) cli rclb enterq cld (bad) test or adc jo int rex.RB rex js lea rex.RXB (bad) jns xlat mov push hlt or (bad) jo (bad) shrl lret cwtl shrl loop jo or sub jnp cmpsb mov sub shrl repz xor and mov xchg in stc cmc lods (bad) xchg stos shll add add (bad) sar (bad) hlt lret (bad) pop fadd (bad) add fistl movabs movsb and outsl (bad) ja jnp (bad) (bad) sub mov add in mov xchg mov (bad) je rcrl out nop fcoml xlat rorl rolb adc or rcrl retq icebp xor jno jmpq mov lahf jae sub xlat fiaddl rorl xchg shrl xor rex.WXB xchg or or shr push sub (bad) jae mov (bad) mov sub es pop mov (bad) xchg repnz test (bad) hlt lea sbb lret or mov add cmp ror (bad) pop ffree adc jnp sub lret scas xchg outsl push xchg jmp movabs fimul pop jo mov rcll (bad) ja jns rex.B fwait mov outsl lock cmp rex.WRX push addr32 pushfq loopne (bad) xlat shrb (bad) fnsave cmpsl rcrl jge (bad) jo insl rex.WRXB add adc push sbb fcmovu mov (bad) xlat movslq (bad) mov ja pop xlat mov fwait in lock mov sbb (bad) rex.XB (bad) (bad) lods or int3 rex.B (bad) jne (bad) vhaddps (bad) pop and xchg lret (bad) jb lret (bad) sbb xchg movabs idiv adc outsl in lods adc test (bad) fsubrl idivb mov fbld (bad) rex.X rex.WB sub rex.XB sbb shll icebp mov add sti jnp cmp repnz (bad) (bad) xor insl xchg or fnstsw rex.R rex.WXB or xchg repnz sub je callq mov js jnp test leaveq movsl gs int3 stos jno rorl shrl and mov loop incl fldl scas flds int xor cs in xor enterq cmp mov int3 stos rex.WB lret xor lret add je add popfq xchg rcll mov roll int movabs rex.B push lret cs fcmovnu (bad) rol repnz lods jrcxz rex.W (bad) iret (bad) jp (bad) (bad) movsl repz retq fwait cmc mov and rex.WRX in mov xchg sbb rex.WRB repz mov mov cmp and cmpsb xchg rex.WRX cwtl rcrl rorb xor cmc pushfq jae (bad) test roll add sbb lahf cmp mov stos movabs jb cmp rex.WR rex.WRX cli (bad) jae rcrl adc sub rex.WRXB stos mov shl int test (bad) movb fnstcw popfq rol psllq out roll sbb roll jge (bad) mov add cmp xlat jg lret jno (bad) adc sahf push movabs rex.WRXB sub pop (bad) mov fistp (bad) xor mov lret fs rcrb cmp leaveq repnz xor (bad) sub mov (bad) mov movabs push rex.WR (bad) lret nop shr out jae movsl pop xchg in pushfq outsl push adc (bad) xor out (bad) test sarl (bad) (bad) repnz pop xchg int3 sub and shll out add jo sub (bad) ss rex.WXB xchg mov xchg lea (bad) lret cmp (bad) jge mov or jbe rex.B repz movsb out cmp sar cli fldt sbb (bad) mov mov loope lret (bad) (bad) jo movabs cmp push fsubrs loope (bad) int imul jae test xchg out fwait push sub rcr jl xor (bad) or mov setp movsb rorl out rex.XB rorl icebp insl pop repnz fst sub (bad) std sub insb (bad) (bad) outsl shrl jb cwtl (bad) xor rex.W cmpsl pushfq movslq and (bad) mov out jl mov push jno (bad) (bad) mov sbb mov jae rex.RB shrl repz data16 jmpq (bad) xor ds adc fisttpl mov (bad) out add movb movabs insl add rcl divb jns rex.RX adcl rex.WXB rcll imul outsl cmp in je jbe add sarl nop rex.XB jg roll mov push lret and pushq lock (bad) push jno retq ja andl movabs mov mov add sti (bad) sbb icebp mov fsubr jle jnp (bad) sahf mov (bad) (bad) jnp sub sub (bad) out and or fdivl rex.RB (bad) repz clc movl and cmp xchg adc add xchg jb loope mov outsb fisubl (bad) in retq jp movabs xor imul test movsb cmp enterq jnp rex.B mov movabs jp (bad) jb insl adc push add repz push pushq lock push sarl icebp xchg sbb iret rex.XB popfq test (bad) rex.WRXB sub mov rex.XB rex.WRX sahf sti loopne rex.X paddd test iret sbb and rex.RXB rex.B jne rcrl sub mov int mov sbb insl jb cmpsb icebp push (bad) in rorl push lods cmp fdivr test or rex.R es ror cmp (bad) rex.RXB add rex.WRB ss rol movabs jge loopne and shrb xor hlt movabs movsb add (bad) lods mov (bad) xchg jge pop hlt adc rex.XB sub mov (bad) push sbb sbb pop and sub (bad) stos movabs movabs cmpsb rolb rex.WX (bad) rex.R leaveq jo or rex.X (bad) pop sbb addl lock addr32 cmp jg mov shrl movabs cld loopne rex.R fwait stos fisubr rex.B fisubrl pushfq test jno (bad) jae fwait movabs mov cs movabs or add rcrl (bad) sbb jns xor pop xchg jmpq sub jmpq fisttpll popfq movabs fiadd mov xor loopne out cmc sahf add outsb xchg mov pop pop pop adc xlat adc xchg scas divb (bad) pushq mov movsl cs or int (bad) lods fist fs sarl fcompl add sub in jb cs pop (bad) and xchg shll test int3 loopne outsb adc nop mov mov sub jle and pushq rex.B push rex.RXB imul and add add fsub sub rex.B ja mov xor gs movabs xlat rol or (bad) pop retq cmpsb jb mov jbe rex.RX movabs jle shrl sbb and rex.RX movslq and (bad) fdivl sti xor (bad) or retq jnp cld insb fisubl int3 cli insl or jb test xchg loope fwait in pop int addr32 movabs sbb es rol clc movabs lods jl sub pop (bad) cmpl xchg addl js and push callq and mov std cltd rex.X ds sbb sbb shrl (bad) sarl (bad) sub mov leaveq (bad) fnsave mov rorb push mov test rex.RXB loop mov loop push mov rex.WX mov add loop push out (bad) test scas mov and lock (bad) mov xchg je stc xchg fldt jo stc sub pop push retq sbb cli or sbb cmpb stos rex.WR imul adc jmp movabs movabs fldl int insb (bad) fcom rex.WX callq imul (bad) (bad) add out cmp rex.RB jle enterq cmp sub mov repnz movsl mov or add mov jmp scas in rex.RXB retq fldt cwtl jmp clc pushfq movsb mov nop xor (bad) mov jno (bad) jnp cmpsb iret faddl push xlat lret rex.WB jbe add rex.WRX fsubr jrcxz callq sbbl (bad) (bad) lods xchg jp cmp mull insb rex.R enterq cmp push add and insl out (bad) pop adc sub adc push insb in callq xchg mov pop jl retq gs (bad) jbe xchg adc adc movslq callq xchg (bad) lret and sahf psubsb (bad) jne icebp int (bad) lret and or jnp sbb sub add loopne lret sub leaveq (bad) cmc xchg xchg add (bad) sub mov insb cmp rex.WXB rex.X cmp jb mov cld mov imul pop jo psubusw sbb in (bad) fidivrl icebp sbb mov jl or repnz mov mov fsubrp int3 (bad) scas repnz movslq (bad) (bad) pushq (bad) sbb mov mov rex.WXB enterq or ljmp retq test and mov loope stos or idiv mov xor sub pop movabs and ss xor sarl rcrl retq jp rex.B rex.WR fs xor lods mov rclb jrcxz jo mov jnp enterq repz mov rex.WRB adc jmpq mov or add retq imul stc jbe sub xor push andl fcoml sub test pushq sub jns pop adc lock push rex.R cs and and (bad) sub xor jo pop roll (bad) int3 (bad) shrl sbb vandnps fidivrl mov (bad) (bad) in loope mov xor test (bad) cmpsb xchg mov lods cmp lret xchg retq (bad) jmpq mov test (bad) sarb addl (bad) sub rex.W out sbb cwtl pushq and sahf fiadd or mov xchg adc rex.RB add rex.WRXB (bad) jge out mov loope int adc clc ficompl enterq movsl mov push orb (bad) subb cmc pushfq callq test push loop loope mov cmp rex.XB sbb xchg cwtl (bad) movslq insl es and movabs jbe push jmpq (bad) and rex.WR rex.WXB cmc jmp rex.WRXB mov ja in jle rex.RX pop mulb movabs mov mov xchg xor xor loop test rex.R rex.X sub and (bad) add xchg sbb (bad) xor (bad) (bad) rex.RXB rex.RB jne add lret insb xchg sarl cltd (bad) shl mov or loope add js (bad) retq mov stos pop (bad) movabs imul loope xchg sbb push repz movsb or push jmpq in stos rorb es rex.B cmp xchg scas mov adc shl rex.R rorl addr32 and iret and push shll sahf and sub add (bad) mov (bad) adc sti xchg add jl hlt sub mov sbb jbe (bad) jns add and outsb in ja shrl pop adc mov (bad) (bad) mov push cmpsb rex.B add rol pop test div sub pop lret mov xchg stc (bad) jp movabs sarl loop add (bad) movsb (bad) (bad) leaveq mov or callq mov mov jns push or sbb movb leaveq insb (bad) jns mov (bad) mov push sub xchg or leaveq (bad) or rcrl sbb xor push iret push or rex.B in enterq callq nop sub enterq and or faddl (bad) mov sbb rex.B repz rex.WB adc sbb (bad) jb movsb mov in callq push movabs (bad) fistp pushfq and (bad) mov mov push push add test clc or xchg rclb roll push add mov sub (bad) mov loopne sub int3 cmp add pop shll addr32 retq rex.RXB rex.WX fwait out std roll fcmovb rex.RXB (bad) add icebp fsubrs in rex.B in jge adc mov enterq mov (bad) fldt data16 sahf rex.B (bad) icebp outsb add out std cmp lods (bad) scas fisubl fwait shlb iret leaveq stc cs rex.B std clc mov jne (bad) movabs rcll psrlw (bad) mov fnstenv std js lret and fisubr jnp push sub out adc sarl xor shrl push add in sarl test ds xor rcr rex.B sarl cmpsl sub (bad) xorl cmc sub or (bad) iret sub rex.B and (bad) sarl cld rex.WB jge movslq cmpsb cmp insl jbe idiv retq stc fwait lods cwtl shrl movsl add sbb jmpq loop and rex.WR lret mov cmp rex.XB movabs lea int xchg negb mov shll mov (bad) pop push xor mov jnp cmp adcb and or cmpsl cmc retq (bad) or rex.RB sbb add cmp rex.WX retq (bad) (bad) mov pop pushq scas mov loopne mov and or (bad) repnz leaveq jmp enterq movabs movabs or jp sub fist or xlat movslq test cli add (bad) int3 stos cs add std adc xor (bad) fistpl loopne pop in fstl lahf stc std retq mov xor add out (bad) mov (bad) and stos cltd rex.XB mov and rex.RX rex.W pop clc int3 rorb sbb pushq jnp or pop xchg and divb int3 (bad) cwtl (bad) push adc (bad) (bad) pop sbb insl (bad) movsl push and add cli rex.XB fstl repz sub cld out sub rex.X leaveq in add (bad) rex.WRXB movsb insl adc jrcxz pop lock cmp enterq sub mov or pop and pushq roll scas callq jns xchg jnp rex.RXB mov (bad) (bad) scas rex.W addr32 add xchg and in push enterq xchg icebp jp (bad) cs add jrcxz retq mov rex.WXB ss adc (bad) movsb mov (bad) cmc add orl mov stc movabs faddl movsl repnz mov xchg ja jno pop xchg xor add rex.B rex.WR (bad) adc mov mov adcl push mov (bad) mov test (bad) mov js ja (bad) cld lret in mov jmp cmp (bad) jns repz and scas jp (bad) sub sub (bad) mov imul cmp int flds insl mov (bad) std (bad) test xchg (bad) fbstp mov mov rex.WRXB int3 fldl movb (bad) fwait xor repnz (bad) xlat mov sarl jrcxz sub or stos jrcxz sbb cmp imul in (bad) pop pop (bad) jnp (bad) lods push fwait (bad) adc shr add adc shlb notb rex.RB mov mov push jns and ja divq rex.WRXB pop fisub in (bad) retq icebp jle (bad) lahf cs imulb jno rex.WB movswl xlat (bad) cmc clc (bad) rex.WX jo xor rex pushfq in je (bad) pushq and cmp rex.RXB insl push shl (bad) xor jp fcmovnb cmp enterq std rcll xchg fdivs mov (bad) (bad) lahf rex.WRX (bad) xor fsts sarl (bad) ds add xchg icebp and callq xor mov rex.R repnz mov int3 sbb loope rex.RXB add fisubr ja icebp cmp iret repz mov (bad) callq test rex.WRB sarl xor mov movabs jmp jb jl (bad) hlt (bad) (bad) xchg (bad) push loop (bad) rex.B sub mov fsub (bad) movabs in stc xor movabs push mov lret fs jge jnp xchg in pushfq jle lret (bad) cli and or sbb (bad) (bad) mov lahf rcll add adc fwait lcall rcrb rol out mov adc movabs (bad) (bad) sub jns cwtl shrl mov js xor std lea sub pushfq ja retq sub xchg out lret (bad) cwtl movslq nop rcrl sbb xor repnz (bad) out mov (bad) test pop lock lea adc (bad) pop loop or int jmpq mov pushfq sahf and xor (bad) sbb and rex.WRX rex.RXB pushfq cli pop mov rcll (bad) outsl rex.WXB popfq shlb rex.WRB es jns rex.WRXB in rorl shrb (bad) or sub rorl out jne sbb mov xchg cmp mov and xchg (bad) sub (bad) (bad) movabs loopne cmovl jp pop and pop repnz sub cmc test ror xor in xor sar (bad) xchg adc sbb (bad) lock rex test sahf (bad) (bad) out fisub sarl stc sbb rclb stos xor xchg rex.WXB jge rcl (bad) pop xor (bad) and push sahf fnstenv lea lods rex jrcxz ficompl xchg add mov xchg insl movabs rex.WXB sbbl (bad) xlat mov pop rex.RX mov scas or xchg shll or out pop xchg adc mov clc pop mov scas (bad) ror or rex rex.W rex.WR repnz rex.WRX and pop push jae (bad) mov cmp stos rep inc xchg add data16 mov xor mov out popfq shr loop rex.WR sbb mov pushfq jp jbe rex.WRX sbb (bad) (bad) xor rex.X pushq xchg xchg movsl scas jae rcrl callq shll outsb (bad) (bad) jnp mov movabs rcrb loop nop jns (bad) cmp out callq or or movabs fdivp xchg jge (bad) rcll imul movabs (bad) movsb enterq rex roll (bad) jg cld (bad) pop (bad) mov leaveq and rex.RX cmp enterq (bad) hlt xchg sub imul (bad) jmp out lea bswap movabs xor pop rep retq xchg xchg (bad) jmpq or cmp movabs cmp sbb loope and lret rep enterq (bad) pushq adcl cmp shlb callq movabs cmp sub pop cld jge mov and cmpsb addl pop in sbb or not mov mov idiv rorl iret (bad) push and out or or (bad) cwtl outsb pushfq loopne shll in (bad) mov (bad) test nop rclb movabs rex.B (bad) insl (bad) test cmp and xchg rex.RX sar adc or rclq js (bad) popfq sub jbe loopne rcll mov or jg iret cmc je loope or mov mov out (bad) imul adc movabs (bad) jno (bad) rex.B and in (bad) and pushfq or xchg (bad) pop rcr test callq gs test (bad) (bad) imul gs sbb popfq jmp rex.RXB push jle test test push add stc bnd test rex.WR rex.X divb imul imul rex.RXB mov callq mov loopne repnz sbb cld add xchg cmp rex.RB rex.WRXB and out add (bad) rex.W (bad) mov mov (bad) cmc sub (bad) rex.X rex.WR (bad) xor sub rex.WX or rex.XB rex.RXB rex.WXB and retq ja cmpsl and xlat xor rcll pop cs cmp sbb cli pop cmc movabs sti out repz rcrl roll mov mov iret (bad) push icebp enterq (bad) hlt sahf push jmp movabs cmp lea jb xchg movsl add in sbb or jne cwtl cli and std or fadds in sbb jo pop mov popfq or sahf test add fwait and (bad) rorl jno ss movl mov rcl retq cmpsl (bad) data16 mov sbb adc movabs rex.WR (bad) mov mov (bad) fmulp test rex.WXB add out cmp lret (bad) (bad) mov fxch (bad) (bad) gs (bad) cmp cmp mov sub rex.X sub pop (bad) es rex.RX in rex.B mov shr (bad) fisubr sbb (bad) test gs test rclb bnd add lret loop and xchg movsb sbb rex ds rex.WR loop movsl adc pop sbb rex.WR cmp lea cmpsb pop pop (bad) test stos retq lahf imul add movslq mov (bad) pop mov (bad) (bad) ss jl (bad) cwtl addl mov jmpq loope mov (bad) int subl pushfq mov test rex.WX jno test imul cmpsb repnz loop test (bad) sub or cli shll add rex.W iret (bad) mov add and (bad) notl jae or mov sub jae je mov je jbe pop rex out or mov cs (bad) xor loopne push lahf mov jb negb fxch rex.WR notl or rex.WRXB ss (bad) jl rex.WB sbb rex.WRX lock cmp neg insl mov xchg jmp (bad) (bad) rex.WX pushq (bad) push and or adc outsb (bad) mov xchg adc sbb leaveq stc adc xor out divb movabs sbb shl mov fcoms movabs leaveq push rex.WRX pushfq (bad) jne jge cltd jae loope (bad) (bad) xor cmpsl (bad) push callq add adc and jg sub retq add lea sub (bad) rex.WX and add stc (bad) xor movsb (bad) (bad) mov xchg jp retq mov rex scas xor rex.R jp (bad) std mov xlat (bad) or iret rex.X rex.R lahf rex.B mov rex.WRX repz (bad) (bad) (bad) rex.B mov (bad) (bad) mov mov xor mov sub int3 xchg (bad) movsb or xchg outsl loope out lret test out push and nop mov lahf retq scas loop xchg int3 sbb pop mov sub (bad) sbb rex.W adcl mov or rex.WB xor retq out addl retq push xor fnstsw mov retq int push mov addr32 retq fisttpll jge movabs roll (bad) (bad) cmpsl (bad) test push (bad) repnz xor (bad) nop cli fiaddl retq popfq sbb sub add rex.WRB ss rex.WR adc pop pushfq (bad) pushq mov loopne retq in lock xlat pop lea lret sub xor push (bad) xor xchg icebp (bad) cmc (bad) xchg popfq pop pop rcll rex.RX fwait and xlat popfq rex.RB rex.RX xor or cmc fnsave lahf rex.WXB jrcxz sub cmp xor (bad) xor data16 movabs decl (bad) pop test fwait or (bad) icebp fsts lret (bad) enterq je lea cmp mov sub mov jae loopne mov stos ss (bad) xchg xor insl cwtl (bad) mov jbe rcr push lea (bad) adc pop adc es adc (bad) jbe mov jmpq out fldenv (bad) lods pop push jbe (bad) retq pop std jp lea pop mov test rex.RB je mov sub cmp adc and xchg stos jno adc rex.XB movabs mov sahf rolb out icebp adc mov jp callq (bad) mov or rex.WX cmc or pop cmc pop int3 and addr32 ficoml (bad) cmp adc pushq es pop (bad) sub data16 test lock sub or jo and cwtl rorl xchg mov mov xor fcoms add pushq pop or pop or xorl in and (bad) (bad) rex.XB ds (bad) (bad) enterq in int3 xlat add retq mov movsl fsubrl movsb xchg pop ffreep (bad) out retq movabs mov callq rex.WR rex.WX lock fadds jns rclb (bad) rex.WRB jmpq mov fidivl jge mov xor std adc out or clc (bad) (bad) ror (bad) shll or jo cli in or mov and sarb rex.WXB int3 sbb add popfq (bad) jno iret jge xlat xor ja adcl nop jge (bad) adc cwtl (bad) sbb jnp pop mov sbb loopne loope enterq movslq int3 (bad) push pop imul mov jnp cmpsb in mov negb out leaveq in imulb rsqrtps jp fisubrl (bad) mov cwtl clc movabs or sbb jno push (bad) fisttpl mov test xchg pop rex.RXB movabs mov jnp rex.WX retq int3 cmp push (bad) pop mov (bad) pop enterq rex.WX movslq and (bad) cld sahf (bad) rex.R mov (bad) sub and in lret or lods lahf rex.RX and mov mov or roll sbb cmpl add add rex.WR es fimul lahf movsb push shlb vmovups sti sbb callq movabs rex.RX rex.WX pop jno adc rex.WXB clc addr32 idivl test xchg mov sbb loope or lea divb (bad) jmpq (bad) rex.WR pop std (bad) mov adc roll (bad) cld mov pop (bad) scas std js es jrcxz jl fisubr mov xchg fcomp (bad) (bad) sub rex.RB xchg adc add cmpsl jle xor test pop jns xchg testb jmpq cmp rex.X fiadd add (bad) fs add cli sbb xor (bad) movabs rex.B push int xchg rex.W callq cs and or getsec jmp cmp rex.XB (bad) enterq std in stc (bad) jle loope hlt xchg lock rcrb lahf adc xor rex.WRX adc rex.WR mov rex.WRB leaveq mov outsb adc retq pop rcl retq popfq sbb push (bad) iret imul repz pushq in rex.R rex.RX scas and enterq pushq test test xor (bad) add (bad) outsb fmull clc js xor mov pop loope (bad) jne rex.RX notl stc movsb add adc fsubrl rol cltd test mov and jae test fs (bad) ror cmp lock push mov or xchg icebp mov jns jmp in mov jp movabs sbb movsl mov callq xchg (bad) movabs rex.RB mov punpcklwd sbb outsl lahf ja in (bad) rex.W (bad) (bad) ss cmp movslq add mov rex.WB mov lods rex.R cmc (bad) movslq cmpsb rcll es xor ds add rex.WR and cmp hlt mov sub pop and fs shrl rex.B and (bad) cld (bad) (bad) roll mov movsl incb shrl mov retq insb lods gs cld cmp rcll push hlt repz inc xchg int test xchg rex.RX rex.RB jg mov shll jle jge add mov mov rol rex.WRXB rex.WX mov shrl (bad) (bad) add rex rex.WR roll sbb cmpsl rex.WXB addr32 (bad) sbb shlb sub push rex.R addr32 rex.W decl (bad) loope sbb stc in jo (bad) adc push mov cmp sub and rex.WXB add insl (bad) clc test (bad) add out cwtl xor imul adcb rcll lock xor xchg shll xor cltd (bad) push and (bad) in add rep sub adc notl cmp (bad) clc pop adc lahf data16 in mov movl lahf movabs xor pop xor fldt pop push sub xor xchg push cmpsb scas test (bad) scas in (bad) jno (bad) add sarl xor cmp (bad) test xor clc cwtl leaveq (bad) (bad) int3 mov or shll jmp movsb lock rex int rex.WRB fstl (bad) out pop adc rex.WR push lahf (bad) sahf mov rex.B ss (bad) pushfq icebp or and add push xchg add (bad) icebp sarl pop add or add pop sarl rex.B rcrl (bad) ja movabs rorl lods or pop rorl mov lods jl test lock pushq ss insl xorl add lret xor fnstenv (bad) (bad) popfq adc rex.WRX mov mov out (bad) rex.RX rex.X sub cld mov sub adc xchg out cwtl and in movabs out mov mov mov and movabs push loop rex.WX rex.XB sbb rol movabs lock and adc test xchg cmpsl movabs fisubl rex.WB rex.B rex.RXB lods or cmpsb (bad) leaveq rex.RB insb shrb adc rex.WRB outsl sbb add (bad) repz sub add pop fnsave test lods lret mov lret pop push sar (bad) mov roll jbe (bad) (bad) (bad) rol lahf movsb es xchg lret (bad) int3 loop jne cmp rex.RB in push callq callq icebp jl lret std adc push outsl (bad) mov outsb adc loope sbb lock sbb leaveq mov xchg pushq stc out outsb xor xchg (bad) xlat stc jge (bad) psrlq pop cmpsl xchg push imul mov pop xchg addr32 stc mov jp hlt (bad) xor xchg (bad) (bad) inc jns jo rex.WRX rex rex.B jg rex.B mov imul pop xchg (bad) mov add push nop fadd or (bad) (bad) add fld sub (bad) adc xlat mov pop xor (bad) sti (bad) pushfq mov test fs scas (bad) movb retq imul sub fmuls push cmp xchg sbb add sahf and gs xor mov xor loope hlt not cltd or mov rex.WR movabs (bad) and rcll rep (bad) iret push test and mov rex.XB lods adc jrcxz jno shll or jb data16 retq or cwtl rcrl rol scas pop mov data16 (bad) shrl xor xor shrl (bad) mov pop imul test (bad) iret jmpq jns sub (bad) outsl sti (bad) movabs clc pop sub loop scas rex.W pop movsb sbbl movabs rex.RX and (bad) xchg (bad) xchg fmulp out push mov movabs push fwait repnz cld imul mov (bad) test add cwtl in mov push nop out repz (bad) sub add stc js int3 mov out rex.X sub shrl repnz insb sti lret pop sub je cmp (bad) sarl loop pop outsl rcrl popfq movsl add loop rex.WB mov and jno (bad) xor xor adc shl rex.W insl test sbb out jge rex.B cld int3 (bad) rorb movabs push push add cltd pushq rex.WRXB rex.WRB callq mov int (bad) fiadd stos gs (bad) shll iret out lret repnz test rex.B (bad) rex.WXB rex.W shrl or (bad) sbb retq jno movabs in ror mov sub or (bad) hlt (bad) jns (bad) movsb fwait jmpq int3 xor or lahf mov xlat jmpq jge xlat jg sarl fwait adc movabs rex rex.WRXB pop lret loop cmpsb fs cmc rex.RX adc and (bad) icebp mov mov callq and (bad) (bad) sub and mov loope roll pop lods rorl mov push cmp add frstor add adc movabs and fld int3 sub orl cld shll fbld pop ss lret in mov shl out out int3 popfq mov push xchg push (bad) xor movabs rex.B (bad) cmp sbbl push (bad) (bad) fmuls sub mov xor xchg rex.WRXB loop or jmp add je add (bad) sbb mov sbb xor movabs adc sub rcrl stos repnz movabs add mov mov jmpq rex rex.XB mov movabs sti mov (bad) fucomi shll cmp fcmovnu cwtl rex.RB fwait xchg xchg (bad) cmc sbb add cli pushfq out icebp jbe or cmp adc mov es rex.R (bad) shll cld cmp add iret xchg cmp roll movabs pop jne cmp (bad) xchg mov or add shll (bad) test rcr mov mov movabs add (bad) pop rorl (bad) fsubrl cld sahf pop (bad) addl test pushq rex.WRX mov rex adc mov subb shll rex.WX stc adc (bad) iret mov scas loopne sbb (bad) cwtl jb xlat push cltd pop or rcll rex.WR jg scas pop cs test (bad) jno jl (bad) movabs imul ja int mov (bad) jmpq fs (bad) int3 mov xor shr xlat imul lret pop or jbe mov shrl out jl jge xchg pop sbb xor movb or pop xchg loope shl and (bad) shrl rex.XB rex.WR fldenv shl mov out and in cmp (bad) hlt out mov (bad) sub (bad) (bad) rcll sbb repz and sbb rex.WR test or xchg rex.WX cld xor enterq shr rex.WX (bad) mov pop movabs and rex.WB rex.WXB loope mov xchg pushfq pop jge (bad) sub add jl add cwtl rex.WXB (bad) xchg jge xlat (bad) (bad) cltd (bad) test sub and cli pop and rex.WXB int adc clc imul xchg (bad) movsb lods jl mov add sahf (bad) jo (bad) push lret mov test mov rex.RXB (bad) fadd sbb (bad) (bad) push cli fiaddl outsl (bad) lret add roll xchg (bad) scas add (bad) xor movabs mov outsl xchg stos mov int3 movabs add shr sti out push add mov cli test std je xchg pop rex.WRXB jg int3 (bad) popq cmpsb jne lret (bad) shrl loop mov mov fidivr ror loopne sahf xchg pushfq mov je lock out adc (bad) in mov rcrl and js ss sarl mov (bad) (bad) pushq (bad) rcl and jns push and (bad) jrcxz icebp lea shll sub sar stc movslq vporq (bad) and add fbstp cli jp incb enterq push scas movabs sub shrl rex.XB not lods xor jo add pop mov and lock cmp sbb stc movabs pop xchg enterq in add jbe jnp lods movabs (bad) pop repz add and jl rex.R cwtl test jmpq (bad) (bad) xchg pushfq jmp ss xchg in rex.RB pop mov (bad) sbb xchg ficompl rex.R mov xlat pinsrw rex.WXB jne clc cmp lret jns rol and adc push lret mov ror sbb mov sar icebp rex.WB clc sbb rex.RB (bad) jo std shrl add rex.WRB lret (bad) cwtl (bad) jne fdiv fcompl xor jmp (bad) fisttp (bad) sub movabs and jp xor sub retq jmp movsb (bad) add hlt (bad) jns or and xchg (bad) std or and add sbb (bad) roll stc test (bad) sub mov fiadd (bad) xlat or fistp repz push fcomp (bad) and pushfq (bad) (bad) stos xchg rex.B ss pushfq or (bad) (bad) int3 rex.WRXB cmp ss (bad) retq (bad) lahf add jae (bad) es or roll pop xchg rex.WX xor movabs add or mov (bad) cmp sub lret loopne (bad) mov testb ja jne shll jle xor mov cs movabs jbe ss mov add fistp mov imul lock xor (bad) add jge xchg mov test mov stc pop mov loop retq (bad) jbe mov icebp repz xchg and pop je retq rex.B cli mov (bad) rex.XB rex.RB push loop (bad) movabs (bad) movslq add rex.WRXB scas (bad) and stos enterq (bad) je (bad) (bad) sti push (bad) rex.WB movsl rorl adc out jge rcl out or int rex.WRXB add rex.X shll fcomps icebp (bad) (bad) sub jge fisttpl fisttpll push sarl movsb movslq retq (bad) in pushq rex.WX (bad) sub mov movslq rorl mov (bad) test cmp rcll in add mov loopne cmp cwtl cmpsb push xchg sahf test rex.R adc xchg push push push cmp es pop icebp nop ds xchg (bad) incl cmp ja mov xchg rex iret pop xor or adc int out push movabs loop or cmp movsb (bad) xchg rex.X xchg (bad) movabs add addr32 test retq or rex.X push insl jg (bad) rcr js lahf jmp stos (bad) pop hlt (bad) xchg std rcr fldl xchg rcrl sbb jge mov (bad) rex.WRB rex.B rex.WR repnz rex.WRXB lods nop loopne je add lret cmp jns sarl andl bswap lret mov movsb adc (bad) xor lea pushfq imul rex.XB push xchg rcll movabs (bad) (bad) sub (bad) movabs pushq shll jmpq jle callq sar sub cmp xchg adc xchg (bad) xlat (bad) in cmp xchg push clc incw mov lods loop cmc and mov rcrl cmpsb adc xchg clc jb (bad) rex.X (bad) add lahf cmp fldln2 mov rex.R lods sub lods sbbl movabs and movabs ja (bad) (bad) movsl sahf loop sbb mov add leaveq pushfq and cltd rcr int3 (bad) in adc loope cmpsl or gs rex.WXB xchg iret and sahf decl pop loop sub retq rcrl cmp stc (bad) pop xor cwtl loope mov mov (bad) (bad) cmp (bad) or jae mov stos movabs xchg rex.WB mov push and (bad) mov lret iret (bad) shl xchg loop adc rex.WXB add (bad) callq out movabs je push sar (bad) imul sbb imul rex sarq xor mov mov push (bad) rorl jmp xor inc rex.R movsl int rex.WRX mov pop insl pushfq (bad) push (bad) scas rcll mov sub and movabs mov xor (bad) in enterq clc scas add or shrl in shll sbb sub pushq mov (bad) or xchg push roll mov js repz hlt rex.RX es fadd xor mov (bad) mov fwait push out jg add orl stos adc rex.WX xchg sub jns js jl (bad) xchg jge xchg and shll rex.RXB sbb mov pop xchg callq adc sbb rex.XB mov fidivrl (bad) (bad) (bad) sbb push (bad) xchg or jmpq rex.X xlat mov fadds xchg and rex.WR insb (bad) and (bad) and fisubl stos test in fsubrl rorl rex.WRX sbb xchg mov (bad) in loop and (bad) scas movsb fisttp repnz callq add push rex.WB fnstcw rex.RB (bad) subb mov xchg jbe int3 xchg xchg mov cmp (bad) out (bad) repz cmpsl rol adc popfq or jmp rex.RB add (bad) jp xchg retq (bad) icebp sahf xchg fisubrl (bad) cmp rex.WRB (bad) lods (bad) pop clc fsubrs mov mov pop out cli sub xor rex.WRX add movabs push mov (bad) fnstsw add orb sub mov (bad) scas stos leaveq jae rex.W fistl int3 leaveq fwait rcrb rex.R xchg cli mov mov pop add out pushq lret movabs pop mov insb fiaddl mov adcl sbb pop pushfq mov je rex.WB rex.XB rex.WRX push pop xor (bad) (bad) rcrl fs (bad) insb (bad) idiv add and mov sbb mov (bad) sub add frstor rex.WRX xor jns repnz and repnz add fcom (bad) jge pop (bad) stc pop mov out fldenv cmpsb xchg movslq mov or stos jl js mov adcl mov lea movabs vunpckhps cld jbe pushq and adc and and fnstsw xchg (bad) rcrl mov sub test movabs mov je rex.B sbb frstor imul xor leaveq mov (bad) cmp (bad) jb jae je fs (bad) jno rex.WR movslq (bad) and cs sbb sbb and sbb jmp sub bnd mov in adc mov (bad) (bad) cmp (bad) sti sti add cmpsl xchg movabs pushq sbb repz (bad) scas test mov mov sbb push mov repz movabs clc mov retq push js retq adc lea sbb (bad) test pop add testb xchg repnz xor jae sub (bad) (bad) sub and mov stc xor test (bad) adc add out lret out in mov movabs shll push decl or loop lods mov add sbb adc mov shl xchg xor jnp xchg sub ror mov insl rex.WRB and xchg outsl (bad) adc rex.WX rep cmc test pop push xchg mov mov ss xor lahf rex.WRXB fwait or xchg mov stos xchg mov cli xchg cld jnp retq (bad) or jne sar push cmpsb sarl push and repz add insb (bad) shr repnz push (bad) out rorb retq movabs (bad) add sbb sar rorl sti imul adc and pop (bad) mov pop incl (bad) repnz (bad) loop add (bad) jb shl stos lcall pop or repnz mov adcl rex.WRX fwait (bad) test in shl xchg movabs add (bad) repz imul sahf (bad) xor (bad) vshufps flds sub (bad) sub xchg sub add bnd pop mov roll xor loop repnz jbe jno,pn adc adc mov and xlat rex and enterq or mov js rex.WRXB xor (bad) push rex lret (bad) mov std cmp rorl xor lahf loopne shll (bad) lret xor movabs std out mov out (bad) and xor cmp rolb fsubrs ror (bad) jae (bad) sar cltd pop rex loopne lahf mov loope xchg sub (bad) rcl cs cli loop rol xchg repz lods (bad) (bad) push imul shll es mov lea cmc pop loope (bad) xor in rex.WRB xor jb sbb pushq and adc rex.WR pop (bad) imul or jns pushq vmovshdup and fidivrl adc fs repnz mov jb out shrl (bad) rex.WRX mov popfq out out pop test roll pop mov in jmpq xchg imull (bad) rex.WRX mov out push cmc cmpsb mov sti rcrl leaveq enterq push mov rorl loop in xor add xor out je cmpl mov cmp stos (bad) sub jmpq sbb xchg std add rex.XB bnd rex.RXB add rcll outsl rol cmp add popfq xacquire lret (bad) mov nop (bad) mov (bad) mov movabs (bad) lock add sbb xor gs mov cld std scas (bad) pop rex.B rex.R rex.WX mov rex.B testb clc mov sub and loopne cwtl pop push (bad) xor or mov push push mov idiv rorl (bad) xor shr fs out pop xchg shl (bad) icebp rex.X movabs sbb rex.W cltd and (bad) (bad) ss rcr push and (bad) mov lret sbb (bad) (bad) (bad) (bad) mov int3 scas mov gs and lret push cmp rex.RX (bad) cmp (bad) insl in cmpsl iret (bad) sbb push pop test retq sbb push rex.B out jne imul lcall (bad) je movsl xor out addr32 rex.WR xor sub and sbb (bad) testb rcr xor jns shll jmpq sar or (bad) out rex.RB and movabs lods add mov repnz sub sbbl xchg test add ja stos mov add pop mov add loop sub rcl mov mov mov idivb stc add movabs sub std (bad) (bad) retq lock and callq mov retq (bad) in sub out fsubs iret (bad) loope (bad) callq stc hlt mov pop imul cmp xchg (bad) fistpll pop es add leaveq pop sbb (bad) jb rex.WRX add xlat (bad) and cmp (bad) and add mov fnstsw rex.WRX rex.WR (bad) hlt rex.WRB int3 (bad) or cmp insb mov xchg xor fisttpl (bad) fwait xchg or (bad) jb adc cltd cmp jno in lret (bad) repz xor imul js push add mov and add rex.WX fimull add fcomp jp (bad) sub lods (bad) add (bad) loope rex.WR mov movsb retq mov in mov mov enterq pop rex.X sbb test rex.XB rex.WR xchg add (bad) hlt xchg ds fstpt cmp sbb (bad) rex.WX out insl mov (bad) rex.R lock and in mov sbb cltd test sarl int cltd cld or and xchg or rex.WR sub cmpl (bad) movabs sub ja pop je adc loope rex.WRXB or movabs or fnop mov leaveq sti test in in (bad) (bad) jo mov scas rex.WXB hlt retq imul jns rex.XB leaveq in cmp (bad) or (bad) cmp int3 cli cs retq outsb cmp int3 cmp (bad) leaveq int3 enterq imul or pop fimull testb mov enterq (bad) jge pop fild rcl (bad) xchg fisubr retq jnp (bad) pop fdivr xor jmpq jbe mov xchg rex.WR (bad) leaveq add (bad) mov test (bad) (bad) jne mov rex.W rex.RXB (bad) rex.W (bad) stc add ds mov ljmp rex.WRXB sbb addr32 xor repz lret icebp out jns rex.RXB (bad) xchg mov push mov push xchg push jge push loope pop movabs addr32 jp ror cwtl or cld jle fwait jmpq jno push (bad) lock or adcl movsl lret xor jl repnz xchg (bad) sub lret shll lock xchg js sbb movabs insb (bad) cmpl jo pop repnz or enterq int or or pushfq (bad) loop std cmp jbe fdivs enterq xor movabs adcl movslq push jo (bad) xor rex.WXB cmp rol je rolb loop and (bad) std (bad) sub xchg and loop jle rex.B (bad) outsl leaveq rex.RXB xor sub loopne sarl lea (bad) ss movabs out add imul or sub pushq mov jnp (bad) shll jb cmc icebp pop rorb lods in (bad) pop xor xor adc rex.B rex.X cmpsb callq out pushq add rorl nop shl cwtl insb add shrl cmp pop rcrl rex.WRB jrcxz xadd (bad) mov rcr pop sbb mov clc rol cli mov idivl (bad) jno,pn (bad) out int3 and decl fsubrl test idivb jnp shrl cmp xchg in shrl cmp push (bad) rorl fs mov cli pop adc xchg (bad) cmp (bad) imul jno callq movslq mov stos xchg fwait cmp shll (bad) cwtl and (bad) roll xor sarl lret push mov xor jne jno mov sarl loop retq (bad) jge adc push sub roll cmpl ss mov (bad) mov (bad) add stos repnz cmp movabs scas rcl jge fcmovnb or test roll jne rcrl mov jrcxz pop fdivl pop xchg data16 mov sbb xchg movabs add cli add or (bad) (bad) sbb popq sbb lods xchg stos push jne,pt jg testl cmp (bad) (bad) add pushfw push jno push mov lods movsl cwtl test push imul data16 cmc cmpsl lret cld jmpq (bad) fisttp xchg movabs decb loope (bad) movabs or sarl out rex.RXB pop (bad) shll and enterq (bad) shl sub mov cmc and repz adc test cmpsl sbb and push rex.WRX sub (bad) (bad) jb popfq sub cwtl xor lahf scas rex.WX sbb movabs mov (bad) xor push mov (bad) imull test sbb repnz mulb mov mov jp xor clc je ds loope (bad) xchg cwtl hlt mov (bad) (bad) leaveq cmp rex.WRX rex.WR roll rex.WXB rex.RB leaveq add repz (bad) rex.WRB mov mov and rex.R nop cli lods movabs sub adc rex.XB test (bad) pushq rex.W int lods int3 mov test and cpuid sbb sbb out push or jnp and movabs int int3 int rex.WR sbb lret xor (bad) xor in cmc (bad) add lea sub lock (bad) xor cmp vdivsd (bad) iret or pop rex.WXB rcrl vorpd sarl jbe cmpsl icebp push rcrl out lret and cmp cmp (bad) xor pop (bad) jae out (bad) stos cmc (bad) ror cmp movsl adc push loop cld repnz in (bad) jne rex.R addr32 sub pushfq (bad) jae movsl mov stc movabs loope rcrl fnstenv mov movslq (bad) add add or scas pop (bad) xor jnp mov shrl sub mov and gs xor int3 add callq adc jb mov pop fidivrl pushfq push xor vmovdqa iret sub iret add push jmp roll movabs fwait outsb sub out pop (bad) jg sahf push (bad) mov jbe xor shr movslq pushq loop (bad) movabs je mov mov test jmpq adc sbb rex.WR xchg or rex.RB (bad) orl mov shr rex.RXB scas adc rex.XB pushfq xor (bad) testl mov cmpsb pop shrl jp fwait xor mov adc movsl push idiv mov or adc fldenv sub pushfq scas sbb (bad) movabs mov rcll add rcll sub shrl or mov (bad) and lods (bad) cltd movsl pop jne sub pop rex.B sub mov out lea shll xlat rclb jns (bad) mov lock sub mov movsb jbe in sub push cmpsl sub cs rex.B jns (bad) imul popfq repnz pushq add jno pop lods repnz rex.XB mov retq cwtl and (bad) (bad) jno rol fucomip mov (bad) push push cltd (bad) (bad) sbb (bad) js mov push pop cld iret adc pop and imul (bad) push test xor push rcr mov pop psllw add mov roll out cmpsl rex.WRB (bad) cmp pop rol movslq enterq cmp lret rex.WRB (bad) fnstenv push in jne jb (bad) mov or in jrcxz (bad) negb cmp (bad) (bad) rol imul rex.RX fwait pop and mov callq adc shrl mov add (bad) decb xlat fidivrl pop (bad) (bad) mulb icebp roll rcl out ss or int3 shrl outsl adc movabs imul (bad) push scas fadd sahf sub jnp xchg sahf in (bad) repnz neg sbb mov fistpll rex.WX iret (bad) lea jg rex.WR and add sub rcll (bad) sub icebp roll pop (bad) (bad) push cmp sub or in enterq es add adc ja (bad) (bad) rex push enterq testl xchg imul jo lahf popfq rex.R out and xchg add or in (bad) rcrl fild scas rex.WR rex.B out rex.RXB xor test lods mov mov jg rcrl lock cli mov pop std xor lret xchg mov cmp jl callq (bad) mov in pop shl (bad) cld sbb cmp jge movsb (bad) fldt (bad) je pop movabs rex.WR adc push lret rex.WRB xor push jg scas test pushfq mov rex.RB rorl nop lret push mov (bad) testl push or jge movsl movb or jrcxz pop ficoml in fisttpll mov mov (bad) int3 (bad) fildl std or (bad) sub rcrb cmp std movabs outsl fucomip cmp icebp in out rcll adcl (bad) pushq rex.B in cmc lods repnz movl cmp jmpq xchg cwtl (bad) retq (bad) ficom xor loopne rex.WR and out rex.B xchg (bad) sbb add pushq sbb adc push jbe (bad) iret in (bad) sbb jns test rol fidivl out rex.WRX in rex.W jns and ds rcll add rorl or out negb cmp outsb sarl cltd imulb jl addr32 rcl add imul mov ror nop cmpl mulb xlat cmp (bad) cmpsb add mov or push (bad) (bad) (bad) rex.WRXB out add sub rex.WB sub (bad) psubusb rorb sbb sub rcr rex.XB sti (bad) retq mulb lock adcb (bad) mov sbb rex.WB rex.WR adc adc (bad) int push clc andb mov and fnstsw add std rorb xchg (bad) (bad) sbb fdivs xchg xor cmpsl and sub addb rex.WXB movabs jo and icebp rorl scas jle icebp sahf mov rex.X (bad) rex.XB repz gs mov mov mov jae mov cltd cmp sub fsubp rcl mov (bad) int3 pushq rex.WR xchg adc jle xor sbb retq xchg gs out shlb out (bad) iret rclb fld or pop rex.WB sub and mov pop insb rol cmp rcll lods ffreep jrcxz popq jne decl add mov mov xor in imul mov mov jmp loopne std (bad) sbb mov (bad) adc cmp movabs xchg sbb pushq (bad) push add test cmp pop fnsave sub rex.WRXB mul movb fidivl sbb rolb rex.WB sbb in idiv rex.WRB fwait rcrl movslq clc adc hlt rex.X rex.R cmp xchg out movslq movabs js movsl or movabs mov fcmovnu sarl rol xor xor rorl (bad) fs xchg push lret andl hlt out (bad) cwtl (bad) testl fwait or imul std (bad) cmp cld push repz int test pop pushfq add sbb scas rcrl outsb in adc loopne sbbl push (bad) rorl (bad) idivb vsubsd xor cmp push retq sarl test out movabs rex.B or or pop cmpsl test or (bad) imul sub mov and sub mov icebp rex.RXB (bad) lret div rex.WB jae ficoml test int3 xorl mov rcll cmp (bad) xchg add rex.RX sbb sbb lret pop (bad) mov cltd cmp rcll rorb or push stc leaveq loopel repz sarl test add push sub adc or (bad) in xor cmpsb callq mov (bad) sbb and xchg stos (bad) rol mov (bad) mov cld (bad) gs cmp push lret and movl loop lret xchg pop jbe movsb rex.XB rex.B rex.WX sub stc xchg pop movabs in std popq stos cmp jle rex.RB fwait shrl pop (bad) nop loop adc mov cld adc icebp faddp test jl sahf mov jae rex.X (bad) pop xchg loope test cmp rcrl add (bad) mov xchg xor and and out lret pop cmp add in sbb shl rex.WXB (bad) jl lods jns in rcl mov jae mov jb rex.R out fisub pop (bad) (bad) mov movabs mov movabs (bad) (bad) (bad) shrl sub cmpsb mov mov (bad) ror mov (bad) sbb fidivr cwtl and cmpl out mov nop iret (bad) (bad) (bad) movabs cmp jb adc adc lret insl (bad) mov adc and sub mov or cmp js push push in (bad) push (bad) retq (bad) iret or (bad) sub sub cmp xorl retq pop andl callq cmc cmp rcr (bad) shll leaveq scas cmp test (bad) (bad) not sahf jns retq rorl (bad) iret cvtps2pd (bad) int3 cmp sub lret fwait sbb js scas pop push jmpq mov (bad) rex mov outsb rex.WB (bad) je rex.W cld mov fcoml andl out rex.W rex.B fist movabs cmc int3 imul xchg outsb test stc (bad) push shll (bad) (bad) mov (bad) (bad) cli addl enterq cmpsb gs rex.RX jbe adc push and xor mov fmull roll jrcxz loopne retq cmp cmc xchg rex.W ds xor (bad) pop mov ficom sub and std sbb movabs scas mov xchg pop (bad) sti std rex.B data16 adc rex.WRXB or shll or pushq (bad) clc retq xor shrl sbb (bad) data16 jo rex.WRX sub xor mov cmp in jnp out sub mov jae je cmp or js and sub (bad) pop xchg sbb (bad) outsb (bad) stos rex.WR sti pop mov (bad) (bad) and clc repz sarl (bad) adc std out test outsb cmp test xor jge xchg mov mov xchg xchg add in orl loope vcmpps sub xchg icebp rcr and rex jp lret retq (bad) or movabs lret bnd rcll nop mov mov (bad) xchg add rcl out lock pushq sbb pop rex.WRB mov jo (bad) lret mov imul sbb fcoml test lret rex.B movabs mov mov rex.WRXB rex.W imul out mov xchg iret movabs or push xor xor es fsubs (bad) or loopne sub rex.WB jo mov or loope repnz cmpsl xchg int3 push mov add add repz (bad) (bad) add neg rex.RX cmpsl sbb sbb rex.XB rex.WB test (bad) cmc sub pushq je icebp clc push out jo mov rex.R add iret cld push (bad) jo sub pushq enterq xchg jl sub add xchg push jmpq rex.WRB (bad) (bad) stos loopne lret (bad) xor rorb and (bad) int clc (bad) rex.WB or imul je add (bad) loope cmpl sbb cltd push jrcxz mov pushq xchg pop mov callq scas test enterq mov mov fstps jns clc (bad) xchg movb jmp rex.WXB mov es nop shll rcll js ja pushfq movabs stc hlt roll sub out jmp rcrl mov jmpq cmp xor mov xchg lahf rex.WXB addr32 jae cltd jo add mov inc imul (bad) (bad) out mov mov mov shlb jl hlt stc roll test jae jns (bad) sbb and (bad) rex.RB rex pop and pushq icebp sahf fcompl adcb cmpl sub jae mov cltd (bad) xor sub in xor xorl gs icebp rex.WXB lods jrcxz (bad) pop rcr mov mov leaveq sub and jno push adc (bad) loope jns rorl movslq shll rex.WX xor movabs (bad) jrcxz pop in rex.WRB gs idiv jle jns push sahf shll or shr mov in scas test roll rex.RX cmp rex.WB cwtl cmpsl and ja jmpq xchg jae mov (bad) cmpsb sbb movslq xor or shrl std xor loope rcrb vorpd imul shrl ss jnp xchg mov roll xor mov rex.XB fwait add pop mov mov rex.WB cmp (bad) stos cmp andb xlat and sub cmp mov cmp pushq xor sahf rex.WRX rex mov insl adc jb rol movslq imul push stos lods mov adcl push or rcrl nop (bad) rcrl js loop cmpsb xchg lea cmp mov rol jmpq xchg sbb int3 loope (bad) pop cld sar sbb in rclb scas xchg sbb jns roll (bad) jmp xor jl or sub mov jle lret (bad) and enterq jmp pushq xchg std enterq pop fisub mov out lahf cs (bad) xchg test jo push rex.B sarl rex.R ds pop (bad) mov retq movabs and loope lcall adc rex.WB jge shl jmpq jns ror sbb fstpt retq rex.WX sbb mov rorl mov push icebp rex.RXB (bad) (bad) (bad) int (bad) movabs mov ficom (bad) movabs ds sbb fildl mov xor xchg adc push addl mov fldcw clc movabs lret (bad) (bad) test push sbb (bad) (bad) fcmovnbe (bad) in (bad) fs push (bad) ss rex.W xorb out sub movsl add sarb sbbl int3 rcrb xchg rex.WRX pop (bad) ds (bad) sarl sbb inc (bad) rex.WX pushfq movslq adc rcll iret adc mov cmp lret mov push xorl adc test cmpl fildll pop adc add fdivrl vsubss mov rex.WR xor push sti cmp push movabs (bad) (bad) (bad) rex.WRXB gs cmp shr (bad) mov scas rex.RXB and rorl cmp mov es fnstcw je,pt mov movabs mov scas out rorl (bad) jle retq xchg cli stc add cmp push and jae test mov scas add cwtl push or jae popfq rex.X mov (bad) repnz xchg callq std test rex.X outsb sarl xor pop xchg xchg xchg pushq push cmc lret jne xor rcll mov xchg lock mov ljmp cld jnp mov xchg movabs fwait sub cs fistpl (bad) mov pop cmp insl cmpsl shlb rorl int3 sbb pop out or enterq lret cmp rorl iret (bad) rcll adc ja add add retq push sti mov pop incl (bad) out repz (bad) adc jrcxz repnz (bad) cmpsb movabs out xchg mov sbb in xor (bad) (bad) cltd mov mov push and imul rex.WRXB add pushq adc orl jbe add fisubrl rex.WRX rex.WRXB and out or pop sbb retq mov loope pop mov fs scas rex.WXB in (bad) in or or sub xorb scas add mov cwtl test or lret movsb (bad) bnd jno fidivr out and mov add pop jg mov add sbb fld sub adc (bad) (bad) insl test xchg rex.W (bad) (bad) (bad) xchg mov xor jrcxz stos enterq sub sbb int3 movabs sub push inc cmp and fwait mov (bad) xacquire mov (bad) jno add rex.XB fmull mov rex.B test movabs mov testb out fcomi lret (bad) scas jg and test rex.WRB mov rex.B (bad) in pop shr out roll xchg out rcl or xor jg rcrl in leaveq movsb xchg scas mov int testb push cwtl mov lock jno rex.WRB add movabs (bad) xor push rex.WR cmpl rex.WRX add xor notb or out insl mov xchg mov rex.RXB push enterq xor add pop in xchg rex.WRX (bad) mov cmpl (bad) xor (bad) rex.RX lea cmpsl loop mov test and loop sub (bad) fwait (bad) movslq repnz stos rorl (bad) xor (bad) rex.WRX lret outsl stc and (bad) pop adc mov push movsl (bad) (bad) sbb jrcxz or mov fistp loop pushfq rex.WRX and adc jp fcmovne (bad) and or (bad) mulb cld nop (bad) xchg movsl movsb fistpl cs cmp rex.RB (bad) je or add sub sub pop adc cli xchg (bad) sub (bad) fmuls callq and add imul pop and (bad) xchg pop fs xchg in push cmp shrl (bad) (bad) (bad) sbb sub fdivrl adc lods and push (bad) xor (bad) scas or cmp addr32 (bad) stos movabs pushfq mov fstpt (bad) jbe jnp movabs js popfq movabs sbb retq jmp js push rex.WXB mov push sub (bad) movsl (bad) sarl outsb cmp sar shll lret fistpll ja rex.WR fs or (bad) sarl shr cs mov sbb scas pop and enterq mov lahf rex.RB (bad) fcmovnbe mov rex.WRX adc jl (bad) rex.WR rex.W add in mov outsb rex.WRX leaveq cmp repnz test xchg adc fdivl rex.W movsw leaveq push mov (bad) sub jno fmul or lods jrcxz pop push lea adc int3 (bad) retq adc lea leaveq jo cmpsb xchg (bad) je mov rex.WRX lods mov (bad) pushfq pop scas xchg pop (bad) sahf cmpsl (bad) add bnd orb (bad) movsl rex.WR sbb xchg mov mov cmpsb mov rex.WRX (bad) rex.WB insb (bad) cmpsb rorl iret pushq loope sbb (bad) fcmove movabs mov or fcoms pushq rex.WXB adc ds sub sbb sbb scas (bad) (bad) vpinsrw movabs lods in xchg rex.B popfq rex movabs jno xor add cmp xor fnstenv add add scas cmc and (bad) rolb (bad) in enterq fs popfq (bad) (bad) xchg jo xlat jrcxz rex.WRXB retq mov cld (bad) add push movsb pop pop xchg (bad) retq rex.R outsb mov (bad) mov mov mov loopne jg (bad) fidivr fcomi (bad) outsb outsl (bad) rex.RX rex.RX adc lret imul cmp in ficom jmp shrl (bad) test stc (bad) adc rex ss fiadd push shlb in adc (bad) sbb mov icebp mov stc scas xchg sbb xor ds push (bad) jnp sbb in iret popfq add or imul sbb out or mov int3 jmp ror cmpsb jne mov mov rex.WRX loop jle int sbb lahf movsb jb stos movabs roll and or cli (bad) sub or cmp jno xchg cmpl rex.RX repnz lahf jmp (bad) es test pushfq movabs add imul outsb rex.WB rex.WRXB xor imul sub xor cld popq lock fstp (bad) add xor rex.WR rex.XB cmp jne loope add and (bad) mov (bad) rcrl or out hlt outsl or int push lret popfq (bad) and rcll pop loope fldpi or jmp pushfq jae cltd jmp sbb rex.W jne mov rolb jbe fidivr outsb lods repnz int3 mov and movslq mov js mov xchg xchg adc cld test movabs pop mov and rex.RXB (bad) (bad) clc stos cli retq hlt (bad) outsl mov push retq iret xlat loop out test cltd fisttpl movabs sub pushq repz hlt icebp fnstenv stc iret rex.WR pop mov mov insb rorl fwait jmpq (bad) xchg sbb sub fwait enterq lretq push rex.RB jp es adc rex.WB sub lret add pushq xlat cmp in and xor sub jmp rex.RB mov rex.RB sub callq int3 push jge or cmp or lods fstps stos jle ja lock (bad) shrb test fnstenv in sbb retq jle retq test and test xchg xor xchg iret stos movabs rex.WXB rex.RX retq or iret push test rex.WX repz cmpsb test loope mov movabs jrcxz imul nop sar movabs cmp and lock (bad) sub (bad) or (bad) sbb jo and xchg pop rcrb rorb rcrl sbb shll pop push (bad) repnz xchg lods mov xchg sub adc rclb add lahf pop xor (bad) rex.WX mov roll pop out adc pushq (bad) mov rorb mov cmpsb retq nop pop cli fs stos mov fimull test (bad) (bad) sbb add mov rex.WR movsl jmpq mov cmp lods lahf or shrl roll ds rcll mov out lock retq adc and sbb (bad) mov (bad) decl mov jae rex.WXB sub insl (bad) sar (bad) stos sbb xor mov (bad) movabs movabs jp addl (bad) mov in mov xchg sbb out loop cmc roll loope adc int rex.WRB lock in loope in add cwtl mov mov addl int3 push repz or pop mov xor lret (bad) sbb loop addr32 mov mov xor movsb rex.WRB (bad) xchg int3 retq sti movabs add cwtl repnz orl insl (bad) in idivb (bad) pop jbe sbb push rex.R lret (bad) and adc cmpsb pushq faddl mov mov in xor push rex.WX push pushq jg rex.WRB cwtl fdivrl cli sbb mov rex.R shrl imul (bad) data16 in in or nop mov fwait xchg cmp push mov or xor rex.RX xor repz mov xor callq movsb fstpt pop movabs callq js (bad) (bad) fsts push shll cwtl gs xchg repz add rol mov je movabs and mov clc push cld scas jb roll insb in imull rex.WRB jae rcrl scas lret sbb outsl xor mov rex.WR mov mov shrl sub mov callq mov (bad) ss lret js xchg adc rex.WRXB int3 xlat rex.X push add adcl fcomp or lret cli mov add leaveq rex.XB frstor mov movl sub (bad) jrcxz repz callq jo pop xchg out repz outsb mov rex.RX xchg xchg lret (bad) jl jnp in (bad) (bad) in movsl (bad) add je cld int (bad) idivl shll ja outsl in data16 in movabs mov (bad) pushq (bad) mulb (bad) (bad) pop scas mov push xchg rcrl lods mov repz repnz test xchg and (bad) shrl movabs movabs xchg jle (bad) xorb int (bad) lods leaveq imul rex.RXB or mov in rex.B rex.WXB mov ss lret adc vmovaps addb cwtl cmp jp jge in xor (bad) roll (bad) in repnz (bad) cld shll imul sub mov icebp stc es lock ror jg jae popfq jp xchg enterq movabs loop (bad) iret xchg jae cltd out mov or jno pop mov rex.WXB xor lret (bad) xor jmpq (bad) hlt out (bad) or rex lods pushq movabs jl fadds lret xchg movsb mov fildl mov out insb mov or xor retq and shl xor (bad) (bad) in movsl cwtl jl sahf mov jno int3 mov cmc mov (bad) add clc cwtl jnp pop repnz sti sub rex.WXB mov insb pop (bad) test imul (bad) int insl mov fucomi shrl sub rcr add mov hlt movslq xchg jge lock mov jne push rorl lret (bad) shrq int stc push jne out rex.WRB fiadd lret scas pop jmp sub xchg neg cltd xlat sar sbb pop (bad) addr32 shll fiadd mov out insl push xor rcll retq mov (bad) (bad) imulb sub in rex.WB out lret sarl lahf rex.RB rcrl mov in hlt xchg loopne (bad) imul pop lods jb add mov fisubrl sub mov push inc xadd cmp adc and (bad) (bad) or lret retq (bad) (bad) jbe lods mov add jbe shlb rex.W rex.WRXB pop cltd sarb repnz (bad) rex.RB sbb rex.RX lock jo adcl rex.WB mov push in shlb xchg out (bad) out rex.WR rex.XB mov add mov fld iret add out shlb adc ss rex.W rol lret leaveq adc (bad) add fadds rex.W rcll cwtl jmp mov rex.R cmp or (bad) in je (bad) clc xor std psrlq shll pop add sub cld sub loopne xor cltd cmc (bad) add mov rcr (bad) icebp add push sar mov outsb roll mov iret nop callq and add shll jle rex.RXB mov sbb (bad) jne cmpsb in lret rex.RX (bad) xorl jle push (bad) cmc add fistl rorl rorl jp leaveq ss shr in out or push and in shrl cmp (bad) or movabs xchg hlt (bad) mov add mov shr and mov adc sarl ss and movabs jae movslq rex.RX cmp mov movabs xchg pushfq or push sub or (bad) lods cs pop mov jae jae out popfq idivb lods (bad) and (bad) sub loop out pop andl sub rex.WRXB pop add (bad) add out adc adc add int rclb (bad) (bad) loope mov fmull lock int3 flds mov sub iret int3 add sbb rex.WB fild (bad) xchg (bad) pop stos add shrl cmc mov add (bad) rex.RX xchg jo adc or movabs rorb mov movabs (bad) (bad) lret enterq jne ja add je or jl testl push (bad) mov test mov mov mov testb xor jae insb clc rex.RB rex.WRX rex.W int3 roll retq mov sub adc or add retq fnstcw and jmpq loope idiv ds sbb movabs mov mov cmp faddp add jg add pop hlt (bad) mov and ja rex.WRX rex.RX (bad) adc mov retq add fsubrp rcr jb cld mov lret add movabs rex.WXB (bad) out outsb iret sbb rex.WB rex.B cs (bad) and nop test rex.WR ds es (bad) lock cmp (bad) idivl idivb xlat gs sti lret lret jge cmpsl and pushfq mov mov (bad) cmp and pop cmp jg roll (bad) mov (bad) cmp (bad) add mov rex.WRXB jl cmpsb mov mov movsb lret rex.RXB push sbb pop rex.X rex.RX hlt test repz addr32 test sahf (bad) adc sbb or xor (bad) lret popfq lret rcr movabs jno sahf pop sarl mov hlt pop (bad) xor movslq scas addr32 or (bad) in lret je rex movabs rex.WRXB insl test flds in adc (bad) adc loopne (bad) rex.W retq add movabs lahf callq mov fdiv fisub jbe or fbld callq rex.R loope js sub add int rex sbb (bad) clc cmpb subl add fcmovne test sub adc mull rex.B and (bad) and jle lea fadds std sub (bad) insb jae (bad) fucom clc rorl (bad) sbb cli movabs xchg cld xor mov je push fstps (bad) int repnz rol cmp (bad) xchg retq jno rex.WRX fnstsw test xor fimul rex.WRX pop xchg ja pop clc gs fdivs in enterq push sti leaveq int xchg push rex.WRXB repz (bad) (bad) outsl adc shl (bad) out sbb cwtl sti jo mov nop (bad) cmp xor lock test sahf rex.WB xsaveopt cmp xlat rex.WRX and (bad) loopne vpsubw int3 cmc (bad) push add (bad) lret rex.B rex.RB mov rex.W jg (bad) addl int push or pushq repz enterq faddl movsb cmp jrcxz mov sbb sbbl (bad) rclb (bad) mov rex.WR sbb xor (bad) add (bad) mov cmpsl lret rex.XB clc lods and (bad) rolb movabs cwtl rex.RB pop cltd in std repz fmuls imul (bad) iret enterq insb (bad) scas jp xchg in icebp repnz leaveq (bad) popfq (bad) (bad) enterq fistpll rex.RXB out loop or jne rex.R fcomps (bad) rex.RB int out rex.WX fdivl (bad) rex.WRB jl jle add retq mov rex.WXB fwait stc mov fdivs sub js pop or mov rex.WR push sub or mov sub xchg addr32 mov mov decl mov jne (bad) jno add push cmp lret fadds (bad) mov xor (bad) enterq (bad) cmp retq jbe sub scas jno fildll lret (bad) or iret btr nop (bad) mov xchg add mov lahf lahf add jl (bad) rol jae sti xchg mul rex.RX fimull repnz push xor sti sbb add mov cmp pushq pop lods push sarl fiadd es lret repnz xor cltd sbb sarl pushq or popfq xchg mov shrl (bad) sbb loop jle add (bad) leaveq outsl or xchg outsb xor (bad) fs in (bad) (bad) (bad) pop (bad) pushq (bad) shll int3 sub pop sar inc out (bad) (bad) iret mov sub xchg sarl adcl and jo in rcrl adc enterq imul rorl add stc (bad) in (bad) stos sarl (bad) dec cli (bad) pop rex.XB fs xor mov push ja mov callq rol fisttpl (bad) cli sub in je or out mov sub jp (bad) ds rol ss adc (bad) repnz push add in (bad) (bad) callq mov (bad) rex.B (bad) pop movabs sub in movsl fiaddl out int add test repnz test movabs mov jo or data16 and rcll jno mov add shl mov or or (bad) (bad) pop (bad) icebp popfq shrl (bad) out jns or rex.RB adc add jno cltd insl mov push mov (bad) (bad) push jae (bad) sub callq mov movabs fdivrl popfq out jge (bad) imul (bad) (bad) xchg mov fbld sub (bad) pop fdivr movabs cmpsl rcll pop jrcxz adc enterq movabs lea stc (bad) and (bad) adc jns rcl sbb xchg cmp (bad) mov inc jrcxz movabs and pushq movabs rex.WRX movabs xchg jrcxz (bad) jae (bad) lahf lea movabs cltd movsl jne retq out mov (bad) repz fs sub xchg iret mov addr32 sbb (bad) cmpl test cmpb in rex.B (bad) and xchg out cwtl cmp rcl cmp loop cs rex.B xchg fidivr stos rex.RB lahf movabs (bad) xor (bad) (bad) and imul fwait pushq or adc xor je mov out fimull cld ss js (bad) mov fiadd lret in (bad) fwait mov fistp cli clc scas test cmp rol add cmp shrl fimull int3 movabs outsb icebp (bad) rcll mov (bad) ffreep popfq rex.WRXB shl rex.WB sbb (bad) mov movhps sti in negl mov or fcmovbe xlat jns or rcll loop add pop xor pushfq movslq (bad) mov ror jl pushq sub jp push int xchg rex.W rex jo lret ja push and movabs sub (bad) in add clc idivl rex.WX push retq (bad) lret adc (bad) movsb sbb mov and or push test jno int3 cld rcll (bad) (bad) xchg movsb push ss bnd je fnsave es out (bad) (bad) lods int test cltd mov xlat jo ss (bad) or je sbb out callq rex.WRB (bad) xor or mov lods rex.RB (bad) test push mov jne mov pop movabs (bad) push movabs test rex.RXB retq (bad) sub sbb rorl lods out outsb sahf pop fisubrl repz sarl std fwait lock (bad) xchg mov test cmc cmp xchg mov rex.B rex.RXB cmp in int insl (bad) out test enterq (bad) (bad) mull movabs in lahf movabs xchg push xchg insb pushfq or sub mov xor mov rex.WRX stc rcrb sahf cli (bad) pop rex.RX movabs rex.WXB pop sub push data16 movabs push jmpq add imul retq test sbb mov rex.WRB pop jle sarb (bad) lods insb hlt rex.RX ja xchg std pop add adc mov in xchg ffree xchg push callq jl hlt stc and fcomi callq mov xchg adc (bad) pop jmp lret rex.WB adc (bad) sbb push rex.B ljmp mov (bad) in insl xor int3 cwtl loope lods rex insb xchg push jo and (bad) ds outsl (bad) xchg jrcxz add jnp out push rex.B rcr jle stc imul fldl and adc jnp adc cmp xchg or cwtl jp rex.R (bad) nop sarl cltd (bad) push (bad) ss add push sub jle mov rex.W cld mov jnp adc movabs ja jmpq rcrl or int3 scas (bad) add callq sub (bad) adc rex.R clc xor popfq sbb stc test add jo test rcll mov shrl ficompl pushq mov int cwtl out rcll or push mov rex.RB data16 adc in movabs cmp (bad) add js (bad) rex.RXB repz add cwtl xchg (bad) shll nop xlat (bad) (bad) rex.X cmp xchg shl in mov hlt (bad) ss xchg rcll or push (bad) jo adc shr adc lret (bad) push loope mov (bad) fmull (bad) rcl adc push bswap lahf lret rex.R rex.B sub mov jrcxz rex.RB fwait gs jrcxz fadd fs push mov mov hlt (bad) pushq movsb push popfq cmp (bad) movabs jae icebp (bad) push xchg push es sbb push (bad) mov rex.WX pushfq fldenv xor pop cmp out cli out (bad) sbb loope mov (bad) (bad) movabs std lods callq jne jrcxz shll jno sbb sbb in lret (bad) mov xchg mov (bad) rcrb fsts sarl xor rex.RXB (bad) jle lret xchg jb jo adcb stos pop cli xor pop (bad) rex.RB rorl xlat pushq (bad) in movabs ss push rex.WR (bad) xor movabs sbb fstpl xchg (bad) jg and imul or repnz adc mov (bad) jno in (bad) movabs lahf roll rex.RX rex.XB mov add pop sub sahf (bad) mov lods out and int3 rcrl (bad) sarl ja movsl sbb rorl out add stc test pop loopne mov (bad) push rorl cmpsl cmp fwait jmp sarl pop iret leaveq repnz (bad) mov negb mul ror jp (bad) insl rex.WXB add test leaveq adc cmp mov adc push rcrl and stc subl jmpq xor rorl rex.RB or ss test insl (bad) (bad) sub repz sar (bad) loope leaveq (bad) test in movsb mov rex.WRX or fs add pop sub fcmovne rex.RX loop test push retq fcoml rex.X retq movslq jp (bad) jge movabs (bad) mov jae fnop rex.RX addr32 retq (bad) in and popfq (bad) adc lea sbb out callq (bad) rol pop lods jg pop test movabs (bad) rex.B jno cmp jne (bad) cld sbb shrl (bad) mov stos adc rex.WB mov xor and mov movabs insb (bad) push adc (bad) xor mov cmpsl rex.XB shll lahf imul fadds jns shrl sbb shll sub mov outsb mov outsl rex.B pop fcom shll or or in and and nop vpsadbw push fidivr mov shrb and sbbl sub movabs sub in scas (bad) sti adc jns rol (bad) shl (bad) rex.WRB rex.WX mov xor sub xchg shr mov and fwait mov rcll (bad) cmp lret lahf mov xor mov adc vdivsd or pop (bad) rcrl sbb lahf in rex.RB cmp mov mov rorl push jge lret retq popfq icebp in movabs ds faddp (bad) xorb loope xchg or fldt sub and fstl mov mov loop xchg (bad) popfq test callq mov rol nop sub bnd fldln2 pop fmuls scas and rex.WB rex.X cmpsl sbb lock mov leaveq pushq ja stc push jp jne sahf rex.WX sub mov adc or pushq shrb (bad) xor stc stos cmpl xchg xor add scas adc jmpq or add xchg rex.WB repnz rex.WRXB out (bad) mov jp adc rcr rex.WRX adc xlat (bad) rex.WRB enterq mov (bad) pushq fs sub test imul mov sbbb mov mov (bad) (bad) (bad) (bad) mov cmp sub out push (bad) jae (bad) clc (bad) xchg (bad) and and icebp jmp (bad) mov retq cmp push jmp (bad) mov xchg (bad) shlb movsb pop out jb rex.R sub push test lahf shll sub rcll scas sub xchg repnz imul push mov add rex.WRXB or shrb jno rolb rex.WR jae (bad) mov iret mov xor decb rex.WRX lahf adc and movabs addr32 clc jle cltd (bad) (bad) jp mov sarb lock fdivrs xchg add rex.WRXB (bad) retq mov fcom test and pop mov test xchg retq push movabs ja (bad) shr push incl (bad) pop and add xchg and movabs out and fstpl add mov and test lret pushfq mov add (bad) rex.WR (bad) int3 pop xchg sub (bad) (bad) pop iret jmp jmp (bad) push sub leaveq fnsave jl (bad) (bad) rol lea fistpll mov mov fwait add stc gs mov fcoml imul leaveq stc (bad) sbb sbb mov mov pop (bad) sarl ds xor pushq pushq movsl xor or rex.WB sub std sbb movslq mov (bad) rex.WRB cmpsl mov mov jno jg enterq sbb data16 pushq xor and adc loope fsub pop test adc cmp callq or int3 add std push jmpq out outsb nop enterq jge ja adc mov pop or test sbb pop pop (bad) jmpq test clc cmc es out jo movabs rex.W rex.RB int3 xor (bad) (bad) pop (bad) fxch stc sub adc and add or hlt cmp or (bad) test lock rex.RXB rex.WRB enterq retq jns mov (bad) stos pushq notl stos gs sbb (bad) mov fs gs rex.X fldl xor int3 retq (bad) xor (bad) jl (bad) mov (bad) (bad) retq (bad) data16 sbb repz test gs jno push stc sbbb sub (bad) (bad) jno add mov sub (bad) jno jo cli (bad) or int3 fdivrs test sbb xor jns movabs jae jmpq add xlat test in (bad) cmp push js mov in pop xor (bad) (bad) and add mov insb rex.RB rex.R repnz pushfq sahf cwtl rex.WRXB retq rex.RB mov rex.WR rex.RX push insl jp xchg mov and pop add sbb (bad) (bad) xor (bad) mov jmp (bad) loop rol push in sub imul pushfq cmpsl rex.W rex.W xor leaveq shl rex.RB rex.X data16 cltd xor test mov outsl mov sub out (bad) rex.WRXB rex.RB rex.WRB loope sbb iret rex.B (bad) test xor xchg (bad) mov pop clc jbe adc mov sbb sarb pushfq adc idivb addl (bad) clc sub jmpq (bad) jrcxz xor mov movabs and sbb mov mov jp fldcw pop movb pushq out and rex.WXB (bad) (bad) xchg repnz xchg mov cmp adc mulb mov (bad) test sbb mov sub sarl pop lret sbb mov lret sbb mov lret xchg not scas cmpsb enterq repnz movabs lret in mov callq shll rex.WR hlt outsl jno fwait rex.R pop rcl out rex.WRB rex.RB jbe enterq mov lahf movabs int3 mov sarl (bad) jnp ja mov jle and (bad) neg and insb imul callq mov and lret imul sbb (bad) jae outsl movabs ds cltd icebp (bad) push insb retq rex.WR sub mov rcll roll sbb hlt rex.X rex.WRXB rex.RXB cmp ficom mov adc je rorl mov or retq int3 (bad) (bad) or mov mov mov or (bad) cmp mov xor push (bad) movabs adc sub lea fwait xchg test pushfq leaveq sarl cltd addl and mov rex.R pop xchg (bad) (bad) mov lods (bad) (bad) mov cmpsb jbe sbb or rex js push test (bad) repz insl fwait adc fwait pop pushq rorb (bad) out movabs int3 nop xchg xchg lret and lahf (bad) adc test jmpq xchg (bad) and movabs pop sbb sahf in add mov push xchg mov std jb cmpsb mov push sub rex.RB repnz mov retq jo push mov pop test out (bad) rex.B rex.WRXB (bad) iret rcrl jge int3 (bad) cmpsb callq out pop xor adc mov jno (bad) (bad) mov roll rcl (bad) mov mov icebp rcrl in jmp mov (bad) lahf xor jge (bad) rcll rex.R movsl add xchg mov repnz rex.WRXB sub mov mov (bad) popfq roll rex.RB (bad) shrl scas mov (bad) pushfq mov or rcll cmp (bad) test and int3 and rex.RXB stos rex.WRB or shll (bad) lret sub mov rol es or cld (bad) rex.RB sbb jnp data16 in pop callq pop rex.WXB (bad) sti shll stos adc stc or pushq rex.RXB add rcrq jrcxz roll iret sbb xor je (bad) and repz sbb lret mov add incb enterq jp rcrl shl pop fdivs xchg out (bad) mov (bad) or (bad) or xchg nop fldl adc push (bad) rex.RXB (bad) push mov stc (bad) (bad) mov (bad) js sub (bad) sbb (bad) sbb rex.WRXB rorb fs (bad) mov addr32 stc add rex.WRX rex.WRX retq (bad) rcr sbb (bad) ja rorl (bad) stos mov (bad) mov rex.XB jp pushq jbe adc and out and and lret or (bad) cmc jg movsb sub sub xchg retq jbe pop xor rex.WRX (bad) (bad) rex.WR mov jle shrb (bad) cmp mov icebp mov xlat cs sbb ss icebp (bad) add xor mov cmp movslq pop mov fcoms xor lock (bad) rex.RB cmp outsb fnstenv rex.RX fdivrl jno (bad) (bad) push int3 (bad) in stos mov add fucomip out mov xlat cmp mov pop icebp cltd xor fisttpl add push (bad) leaveq jnp enterq sub add ds mov pop mov jp (bad) repz jbe sub add jge or rex.WXB gs rex.WRX imul (bad) and (bad) sahf mov (bad) xor outsb cmp mov jns clc mov roll adc sarb adc js jmpq jle (bad) clc (bad) rex vminpd xchg hlt int3 (bad) (bad) ds divb (bad) test mov in sub rex.RXB lock fsub mulb lea or (bad) (bad) mov sbb rex (bad) jo mov (bad) rex.R cmpsl rex.WR sbb xchg sbb and cmpsl es adc xchg lea jle movabs iret sub sub (bad) jge jae sub rorl rex.R repz (bad) cs jns (bad) and roll fsub mov (bad) add iret pushfq lods jge lods mull lahf enterq add test mov movslq or test adcl sarb cmp rcrl rex.R xchg or push rex.W jno fbstp cwtl (bad) jle xor or xchg lret je (bad) rex.X lahf mov out add xor insl (bad) ss in rorl imul add mov rex.B movabs fildl sbb movslq adcl icebp xchg (bad) outsl vmovlps rcrl movsl (bad) (bad) scas test and xor mov pop xchg ja pushfq fstpl xor add adc adc icebp cwtl (bad) int3 cld push (bad) (bad) pop (bad) (bad) repz callq cmp movabs in icebp (bad) mov (bad) in xlat fsts jnp jne mov rex.XB movsb insl seta cmpsb sarl cld xchg adc (bad) (bad) rex.XB in mov (bad) movslq fcom rorb icebp add jb (bad) (bad) jae (bad) push mov sbb cmp (bad) in rex.R js fistl cmp movabs sub rex.WB fs xchg insb xlat callq and fstl jnp (bad) ror xlat jl rex.RX (bad) (bad) movabs xchg movabs xchg mov push mov cmp (bad) (bad) imul retq mov cmp in test callq in roll imul and scas cmp insb popfq int cmp sahf cmp imul sub xorb cmpsb (bad) js mov push rex.XB cmc rex.R rex.WB rol jg idiv movabs add and pop (bad) int icebp enterq mov sub out repnz jne std and fdivs mov jo or lods subb mov mov xor (bad) test and xor and movslq jno lods in pop loopne insb icebp sarl in pop sbb and mov loop sbb in (bad) sub cltd cld xchg int3 pop add xor movabs pop lods and rcll callq mov add jle movabs (bad) add (bad) movabs and lock (bad) mov add shll jne sbb cmpsb jle xor sub cmpsl fs shr imul and push and mov cmpsb out and push loopne leaveq test shll lret adc loopne je roll cmp xor int cltd imul decl mov rex.B cmpsb mov mov mov rex (bad) push in idivl adc lret ja sahf stos rex.WRB (bad) sbb rex.WRB rex.WRX push rcll movabs and sub in hlt xchg lahf pop mov ja jrcxz jp movabs sub fmuls jne sub out callq cld ror (bad) rex.RX (bad) (bad) notl lea rex.WRXB retq int add and rex.B testw rex.WXB flds rcrl fist cs and rcr test rcll rex.R (bad) (bad) fisttp cltd add lock rex rex.WRXB repz gs push cmp rex imul ds test jns cld rolb add jae add (bad) (bad) xor mov cwtl and mov or adc rex.RX and movslq and sub rex.B rex.W pop in int3 cld imul (bad) pop push add insb jbe rol adc rclb sub rex.WRB (bad) cmp push rex.WX out sub pop xor movabs shll mov jmp rcr jp movslq (bad) and sub stc movsl and lret fsincos xorb xchg rex.X fildll ja jnp (bad) (bad) or jrcxz (bad) sub add or pop (bad) push (bad) leaveq (bad) sbb cli rex.X lock movabs (bad) pushfq repnz and stc xchg movsb addb xchg sti (bad) jle (bad) jbe or (bad) add int3 pushq retq rex.R repz (bad) rcrb rolb in pop int3 and (bad) enterq mov (bad) int push (bad) (bad) and testb vmwrite sti sahf rex.WRB enterq or lret sub ss rex.WR (bad) add xlat cmp mov data16 shll mov (bad) out lret imul int3 pop fmuls sub pop (bad) sbb cmp rex.WX rex.WXB pop adc lea (bad) sbb xor mov jmp ljmp jmpq xchg cld jne cmp pop gs (bad) clc push jo add cs mov jp lahf callq movabs jmp cwtl sub rex.WRX fildl xor add callq jb in jg rex.RB rex.RX fwait or flds xor jl scas lock pop add xchg shrb cwtl cmpsl cmpsb adc (bad) jge retq lock pop and rorb (bad) fadd add xor cli mov xchg je (bad) (bad) jmp push movsb repz ror shrl xor xor jge cmp in shl sti jo or mov fstpt enterq sbb add (bad) xchg sbb sbb rex.B rex unpcklps xchg fsubs int3 xchg shrl enterq or (bad) xor rex.WRX roll (bad) rex.WRB and rcrl lret in shrl rex.X (bad) xor xchg push in rcl (bad) (bad) leaveq xchg callq cmp icebp adc cmpsl rcrl jge xor movabs sub xchg jp adc (bad) jb and (bad) mov fstps add rolb mov mov fadd ja and inc idivb mov (bad) mov xchg mov (bad) callq add and retq jg jne adc pop movabs mov (bad) cli cltd mov rex.B (bad) in roll imull xor ja mov rex.WB cmpsl fwait shll add jl push js pop decb rcll cmp rorl jmp (bad) cmc push (bad) xor mov mov (bad) imull rorl mov jmpq (bad) rorl (bad) jg push decb rol cmp sub mov add or xchg mov mov or (bad) xchg stc rex.B rex.W sbb mov fidiv sbb xor xchg rex.X xchg rcl test (bad) (bad) ror mov jnp (bad) je rex.R movabs scas rorl mov loopne fistp rex.WB rex.XB lretq mov scas rex.WRB lahf movabs sbb cmp (bad) in rex.RX out add xorb lahf add add lods (bad) (bad) xchg stos fwait xor jb mov jo mov push fisttpl cmp es jg insl lock xchg sub rep icebp shlb rcrl mov shll rex.RXB pop insb pop add jns rol scas fmulp mov xor jg movabs test stos je (bad) (bad) enterq or (bad) jae test sub scas or mov lret insb rex.WXB (bad) adc movsb adc ds ffree repz mov int3 (bad) movabs jae movabs rorl rex.XB rex.WRXB push (bad) repz and sarl (bad) out mov (bad) mov in andb pop fstps sub cmp (bad) pop lret (bad) fisttp data16 rex.W movabs leaveq movb add xchg (bad) lods stc lret cmp adc xlat xor movabs mov pop xchg (bad) (bad) push (bad) jrcxz pop xor out rclb rex.B or mov jmpq push xor js ss sub insl sarl sub out repz sub push insl rex.WRB xchg adc xchg and pushq rex.WXB cmp xlat je jp xor xchg (bad) cmp loope iret nop (bad) fisttp xor (bad) xchg fdivs adc mov outsl loopne enterq mov push xor xor fadd jbe add add (bad) retq (bad) cwtl mov xchg lahf data16 xor shrl test pushq rex.R test push (bad) clc fdivs xchg mov jbe rex.RX pop stc xchg data16 (bad) enterq (bad) cmp mov rex.XB rex.XB (bad) jl or pop sub xor (bad) fisttp cmc (bad) or (bad) xor lret xor (bad) (bad) and fimul cmp rex.WX rex.WRX rex.WR (bad) (bad) jno movabs (bad) lret (bad) ds jle stc sub incl (bad) cmp mov gs rex.WR jrcxz pop rex.X retq xchg jae addr32 mov imul add or mov rex.WRX cwtl rex.R fildl mov xor sub add xor mov mov (bad) retq (bad) sarb mov jns sub mov pushq jrcxz movabs lahf lahf stos mov outsb add mov outsb xchg (bad) or and fdivs xchg pop or sbb movabs (bad) mov leaveq mov jbe callq stc notl pop rex.B mov xchg stc xlat movsl jle ja movabs fptan out (bad) icebp jg imul (bad) cmp lret mov or (bad) add (bad) xor cmpl pop xor push loop and hlt xchg roll pop mov hlt adc cmp (bad) push stc insb (bad) andl callq leaveq lahf sub add add outsb movslq pushq stc push sbb xor lock movsl mov rex.WR and stc imul retq jp insb mov rex.RB repz pop (bad) or rex.WRB test imulb rex.X movabs jle cltd rorl mov hlt shrl out (bad) fsubrs clc rex.R (bad) imul xchg push stos rex.RXB je and mov pushfq sarl mov movabs sub roll sub rorl pushq rex.WRXB jno sub adc cli add add push push (bad) imull or int mov pop (bad) sub jae mov adc movb rcrl stos mov mov push push sbb mov test adc out mov int (bad) imull (bad) pop rex.WRX cmc int3 shrl jns or sti stc (bad) test and jns ror jg cld (bad) or rcr pop (bad) or ds lea xlat js imulb sti rex.B test pop rex.WRB xchg cld add pop pop loope lret mov mov cmpsl testb fcmove movabs repnz add in adc subl jmp retq mov cmpl lods (bad) (bad) mov leaveq push xor vpsubb mov adc fistp jbe testl int3 (bad) adc xchg repz cmp movsl mov rcrl xor push jbe outsb rcll cmp add add rcrb or test jo lret rorb (bad) (bad) movsl push stc std sbbb xor (bad) or xchg or rol (bad) sub sub lret push (bad) in int (bad) iret sbb scas movabs (bad) (bad) lahf push cmpsl mov rex.XB (bad) jo xchg sub pop cwtl cmp outsb (bad) cmp std pop outsl rex.WRX test rorl in out (bad) enterq loope fucomi sub (bad) cli push push (bad) pop mov sbb adc cmp (bad) cmp (bad) fistp rex jrcxz mov sub lods int3 (bad) sbb push (bad) (bad) mov enterq scas sti mov retq push mov pop clc rorl sbb repz fbld movsb cmp (bad) adc insl sahf or shrl ja popfq (bad) sbb cmpsb out adc or adc rex.WX rex.R lret in xorb (bad) insl (bad) cld add jnp callq push out lahf repz jno jo mov (bad) pop je (bad) gs add int cltd (bad) rex cmp in push imul jrcxz push (bad) loope in loopne or add data16 (bad) out pushq jno xor movabs pop sbb neg (bad) jrcxz cmp int popq test callq add xchg or (bad) or cltd cmpsb push movabs (bad) rex.WR jbe loope int3 sbb lret pop fsts (bad) movsb add cmp mov mov ds gs mov test js jl notl cmpsl (bad) jmp cmp fsts subl movslq div adc xor (bad) or lahf adc (bad) sub rex.W std ror sbb ja jge loop or lret int3 fstpt rex.XB sarl mov (bad) cmc adc push in lea lret sub (bad) mov imul (bad) (bad) leaveq movabs (bad) scas pop jrcxz jbe jrcxz sub (bad) cmc jnp (bad) in mov or mov pushfq (bad) iret cld rex.WRX sub cmp adc (bad) pushfq cltd adc int3 add or icebp leaveq sub ffreep mov enterq imul pop (bad) rex.WB ds sahf jne rex.WX rex.WXB xchg addb jae (bad) cmpsb pushfq notb lods sub cmp movl or outsb fs orb rcll cli xchg repnz rex.WXB add stc rorb (bad) rex cmp (bad) outsl je nop xor movabs (bad) push loop sahf movsb ffree or movabs hlt push fldcw rcrl xor movabs sub mov sbb push cld xchg (bad) lea lret xchg lcall sarl xlat pop rcll rcl jl sahf movabs (bad) in stc callq sub stos xor adc rex.WRX sub xor js pushfq repnz jns sbb lret mov lret xchg pop mov or rex.WR and std popfq shl jae (bad) rcrb mov jns (bad) lret rex.W movb adcb addr32 xor std movslq pop out rex.X sahf lret push xor sti stos (bad) repnz int iret out in adc insl cmp fyl2xp1 or mov mov push cmp pop rex.WXB sahf test shl cmp jle es sub ds (bad) pop pop and in sub leaveq cmpsl rex.WB xor movslq retq and iret (bad) scas std test or sar jb pop xor testl sbb enterq xchg subb (bad) in ror xor movsb cwtl cmp (bad) mov jl add adc loopne xor fcmovnbe cmpsb add cwtl sarl and rex.WRXB scas or add in mov mov (bad) jmpq jp or (bad) (bad) rex.XB xchg jb push rex in mov clc jg and jae and or add fcmovb mov jl (bad) xchg stos (bad) (bad) adc rex.RXB xor jge test rorl ja sbb insb xor xor adc (bad) add rcrb sub retq pushq xor int3 popfq ds jno rex.W and push movsb fcomps mov outsl test pop jo mov pop or lea xor sbb pushfq in or (bad) repnz ficoml sub cmp (bad) or (bad) mov outsb lsl pop push (bad) cmc sub (bad) cmp adc fwait data16 and retq xor (bad) repnz fcomps callq test ss xorl jrcxz data16 test (bad) rex.RB movslq or mov mov rex.WXB jle sbbb sbb stc rex.WRX rex.WXB cqto xchg outsb adc andl je cmp pop adc mov sub callq xor imull xor xchg or rex.WRX callq mov loope lret gs (bad) test sub movabs movabs ds loope mov callq (bad) nop jge (bad) (bad) in scas and adc lock mov retq push mov xchg mov or (bad) and rex.WB mov jns movslq rex.RXB movabs sar (bad) rorl lret cmpl loop cmp pop pop jno sbb sbb int loopne push imul rex.RX cmp enterq push iret (bad) mov fadds int3 retq xchg fwait jae add (bad) mov sub rex.WR cltd mov movsl add mov mov mov jge out push lahf sub or ss imul jbe test (bad) mov out jrcxz rex.RB mov bnd push lret jno xor push enterq add mov sti (bad) jg movsl scas mov repz adc xchg add test push jrcxz (bad) and xchg out jne in popq and int3 int3 pop scas mov std sub add rex.WR int push adc rcrl flds rol (bad) mov vpcmpeqd testb cmp shl adc push rol adc mov mov movslq faddp mov xor mov lret shll rex.WRX xor roll rex.B cli roll pushq jle pop callq push shr (bad) (bad) imul xor shrl loope or insb lods or test (bad) fbstp rex.WRX mov rex.W rex movslq mov repz (bad) xor data16 loop xor mov (bad) sbb rex.WXB cmp lret clc sbb rex.XB sarl mov shl sub pushq push adc (bad) test mov pop stc add insb rex.RX (bad) pop jne rex.RB mov cmpsl movabs xor loope nop callq (bad) outsb jrcxz fst rcl mov lods lret (bad) lods rex.WB lock rex.WX je test xchg add cltd divb insl (bad) outsl rcrl (bad) cmp fisubr sahf repz mov test xchg sub lock jp outsl loope pop cmp hlt lods ds add jnp xchg or (bad) rol rex cmp enterq and (bad) je out icebp rex.WB (bad) mov rex.R and roll fisubl (bad) jb (bad) add stos lret cwtl movsl adc (bad) mov out xchg movabs add jno enterq mov rex.WXB rcll rex.WRXB rcrl push pop jno mov jns mov addl imul (bad) push or in je rex.WRB int pushq mov mov sub (bad) or (bad) jp pop pop (bad) roll testl push ds mov stos jrcxz retq adc lods cld and (bad) pushfq adc and pop (bad) sbb xor sbb adc (bad) pop mov (bad) (bad) mov add movslq pop cld iret adc pop pop push sub testb es sbb loopne or xorl iretq jmpq rex.WR gs (bad) jb (bad) cmp rex.WXB (bad) xor sbb lret jo test pop iret push mov (bad) fs jo (bad) rex.WRX (bad) ds (bad) push mov lret or mov push (bad) adc adc retq (bad) xlat cmp or mov test xchg (bad) in lock (bad) push (bad) jg rex.XB cmc faddp movabs insb leaveq lods jns (bad) (bad) gs js and mov in fsubl test jl imul stc mov int3 mov mul xchg (bad) and movabs mov adc rex.RXB mov out movabs leaveq adc fcmovu (bad) (bad) movabs (bad) (bad) xchg push sub fxch (bad) int rex.RB (bad) outsb (bad) rex.R lock (bad) lret loope (bad) fist movabs sub (bad) (bad) mov js adc cmp push (bad) rex.WR (bad) sbb addl jae sub test pushq ds movsl (bad) flds movabs rex.R mov jo mov lods and xchg fwait mov int3 rex.RX pop stc es (bad) adc xor or int cwtl cmpsb pop xchg js test imul and int add (bad) push xchg cmpsl je sarb jno mov scas or (bad) stc (bad) pop xchg (bad) (bad) (bad) cli mov orl mov and lock retq adc add (bad) lahf rcll jp jno sub (bad) pop jmp rex.B cwtl movabs sub sbb rex.RX jae mov test add repz insb push jmpq jp (bad) cmp sbb sbb xor outsb jge mov rolb (bad) rex.W sbb rex.WX (bad) fadd (bad) add fwait imul int (bad) xor mov iret sub xor movabs idivl (bad) sbb rorl pop lret std hlt in loope rex.RX insb rorl sarb rex.WX loopne movabs rorl int3 (bad) push lods rcll sahf sbb fsubrp (bad) repz mov gs rex.R jbe addl std in rex.B insb lock js rex.B and movabs cmpsl (bad) movsl (bad) shrl push sbb cltd pcmpeqw xchg pushq (bad) (bad) cmp movb rcrl mov pop stos data16 rex.WRXB (bad) (bad) rex.RX (bad) jne rex push lock jae mov push vprotb rex.WXB cltd imul insb rex.R roll add cmp lods push nop mov (bad) (bad) xchg mov jmpq (bad) mov movsl rol addl (bad) cmp out (bad) rex.B and (bad) pop cs sbb cmpsb rex.R mov cmp adc rol and test adc and (bad) fimull sbb adc (bad) mov adc mov (bad) loopne movabs xchg outsb sbb cmp xchg callq (bad) scas jnp (bad) (bad) divb shll rolb add mov cmpsb lock repnz adc mov mov pop rex.WRX jne out sbb ror loop jmp cmp cs adc movabs fcmovnb and (bad) mov pop fcomps loop rcr jne mov jmpq in scas mov (bad) sbb (bad) rex.RB cmp push loope rex.WX push (bad) xor roll pop outsb (bad) add xchg sbb (bad) flds mov (bad) jp jno (bad) retq int (bad) pop sub add mov sar push callq repnz or lods loop xor rcr (bad) and (bad) lock movabs scas test rex.WRX rex.RX jl jno add mov (bad) rex.WR sbb (bad) retq sbb and jge rex.RX cmpsb mov mov mov (bad) scas sahf rorl xchg or rorl leaveq repnz (bad) movabs cmp lret callq (bad) cmpsb sub (bad) adc rcll xor xlat lods (bad) jg (bad) mov (bad) (bad) in rex.B roll pop fdivl mov rolb fstps jrcxz jmpq out mov (bad) cltd xchg sub push mov scas fcmovne rex.WXB shrb cwtl cmp (bad) es (bad) pop mov mov shll add jo jae and js (bad) negb jmpq add ror test (bad) out pop cmpsl rex.RB mov retq jmpq xchg cmp shll roll jg clc fs out and xchg fcmovnb out (bad) sub sar pop insl rex.X sbb add imul mov push fwait and cld cltd (bad) cmp add (bad) xor (bad) ss rex.WRXB sbb (bad) rcll lret es xchg (bad) sti mov vpaddq addl outsb rcr ss movabs add retq ja js add mov rex.RX movsb out jg,pt rcll rex.WRB rex.RXB xor pop push sub int rcrl rex.RB (bad) (bad) jns xor adc out cmp rex.RX sub jrcxz xchg icebp (bad) add stos rcl (bad) loop push add jnp lret and mov xchg addr32 mov or pushfq mov cmp rorl mov mov sub add cmpsl sti fimul jno je popq (bad) sbb pop mov test sbb xorb and int3 rex.WR (bad) rex.W (bad) mov jae test sti (bad) popfq sahf push adc insb push xor ss fdivrp cmp lret cmc jbe jmpq (bad) outsl mov push hlt pushq ds loopne repz xchg test mov je int3 rex.WB insl fsubs add addb fcmovb adc outsl mov fs sbb hlt or cwtl xor rex.X jne movsb movabs rex.WRX or mov movsb retq lret mull fwait push lods sbb push test out lret ss pop addr32 rex.WR sbb add mov (bad) and xor rex.WB xor adc rex.XB data16 mov and mov sbb movabs test rex.WB lret and loopne fcoml loop or lea (bad) data16 mov cld jmpq push in js (bad) sub retq sbb retq icebp rex rex.WR loopne add rex.X outsb xor retq and add adc js out rex.B mov (bad) mov pop mov rex.RXB retq in nop jp jge test (bad) outsb (bad) addl retq repnz icebp movsl sbb (bad) sub mov fcom pop and pop (bad) (bad) pop jno out retq rex.B (bad) or cld icebp leaveq mov and lret cld xor jno movabs rex.W callq movslq cmpsb fwait and mov fistpll (bad) adc jp or jae retq (bad) icebp clc mov mov sub (bad) xchg andb jns jrcxz icebp fprem jmp sahf cmp add (bad) rcr (bad) (bad) cmp push fwait mov cmp or adcl sub mov xor adc rex.WB push popfq vrcpss adc xchg xchg xchg mov (bad) (bad) insb xchg por (bad) cltd cli mov and jnp rcr in cmp stos xchg shll iret (bad) add (bad) shl cmp popfq rcrl movabs test or jl or mov loop sbb sbbl adc mov (bad) cmp (bad) (bad) (bad) rex.WB jmpq js (bad) not fs mov adc imull gs roll jrcxz mov or and push (bad) xor loopne and adc mov fisttpl rcll loope mov sub xchg pop xor pop mov sub (bad) cwtl (bad) lods rep fisttp loope test lahf (bad) cmp pushfq mov repz rex.R hlt fstl xor syscall test lock mov (bad) test xchg fwait push add rex.R sbb movaps pop mov fisubrl (bad) (bad) enterq testl or fcoml pushq sti pop (bad) pushq rol sbb sbbl jrcxz hlt xor vpshufhw shrl mov rex.R mov mov int3 movabs (bad) imul pop mov test (bad) or outsl insl mov pop out add mov mov lods rol add fnop callq rex.WX jle jo and insl add cwtl stos (bad) fwait and xorl iret loope (bad) or adc std movabs sub sub shll (bad) imul (bad) sbb sub (bad) int ja ror xor pop lock clc (bad) (bad) popfq or cmpl or jge adc cmp (bad) test (bad) xlat cmp lret push add sbb jnp jge cmp xor sarl rolb (bad) mov or sbb (bad) sbb roll pushfq xor rex.XB rex.W rex.WB rex.R iret test rex.WRB cwtl xor (bad) rex.WXB add callq adc fisttpll lock push cmp pushfq xor shrl insb xor in rex.RXB xor rex.B (bad) adc cmp loop push jbe in int3 sti fwait insb rex.WRXB (bad) mov int rex.RX push cmpsl fldcw rex.WR fcoms scas (bad) sbb leaveq rex.WX (bad) rex.W cs rex stc mov sahf cmp int sbb jrcxz test (bad) in push lods out int3 (bad) in imul pushfq xchg (bad) push shll ja xor (bad) out (bad) (bad) pop stc xchg lock push rcrl pop mov (bad) (bad) fs mov rorl mov adc adc xchg xchg push popfq add rex.B mov (bad) (bad) cmp sti cmp add cmp sbb sub out or int3 fnstsw add cltd movabs shll out push sti scas ja movslq lahf jp rex.X icebp and insl lret out movslq test or shll in add rolb insl loope shl jge sub xchg xlat xchg and movabs (bad) (bad) jae jbe movabs retq leaveq or and je rex.RXB and sub loop movslq fildl (bad) (bad) ja cmpsb (bad) mov in test add (bad) adc movabs lahf scas movabs cld cmc fwait xlat jge mov imul rex.R (bad) shrl cmp xchg jne ss (bad) cmp jmp rex.R enterq rorl push out (bad) (bad) cs loop xlat xchg or imul fiaddl pop rex.WB rorl sahf or lods fucomip lock repz mov xchg out rcr or (bad) outsl flds adc mov xor sub popfq in sub rorl lret or mov cltd xchg xor fidivrl (bad) rex.R adc add rex.WRX and mov roll scas lahf jno push test icebp and pop iret (bad) (bad) push sar xor mov (bad) mov pop in cmp rex.WR rex.B callq or lret (bad) (bad) xlat add mov ffree (bad) mov (bad) mov rex (bad) mov (bad) or movsl (bad) mov (bad) rex.R cmp (bad) iret jmpq pop add xlat (bad) sbb (bad) rex.WRXB push shll fs xchg clc (bad) movslq repnz (bad) mov add subl and (bad) cmp xchg subb loope fdiv (bad) fcmovnb pop mov movslq cmp test sub jbe sub fmul adcl lret push pop and fiaddl xchg data16 push add (bad) test xchg and or add add enterq stos repnz rex.WXB movabs ror outsl (bad) insb fimul mov movsl icebp mov sbb lret fcmovu cmp mov movsl add add sbb or mov out (bad) fnsetpm(287 xchg movslq movsl mov and lret and insb add jbe ds xchg callq in outsb (bad) (bad) rorl inc mov or xchg jns lret (bad) cli mov js xadd pop or pop and in (bad) outsl sub out rcrb jo or rcl fwait retq mov pushq and xorb and rorl rex.R jp movabs (bad) (bad) rex.B (bad) sbb rex.RX lea xchg or (bad) cmp rex.RB out cltd pop in retq jne lahf int3 push fiaddl outsl push rex.B rex.XB sbb mov rex.B iret jmpq rex.WRXB out sub (bad) movsb test stc (bad) add cld fucom lret clc (bad) jmpq ror jne lods cmpsq ror sahf out (bad) or clc pushfq retq hlt add sub imul push cmp sarl in je rex.R add jno (bad) (bad) mov sbb (bad) add sub cld xchg rorl stos inc xor and adc clc rex.B rex.WXB (bad) (bad) mov sub out xchg pop dec xchg int3 (bad) scas jmp rex.W push rex.RB je iret pop push mov xor jg (bad) je mov jmpq pop fcoms and lret hlt jrcxz rorl rex.WXB rex.XB sbbb rex.RX std mov retq es rex.WRX mov iret push sub (bad) (bad) mov jle adc pop fidivr ds push xor (bad) ror (bad) rex.RB rex.B cmpsl (bad) leaveq push fistpll imul ror xchg roll sbb (bad) jno sbb (bad) push retq retq mov loop movabs sub retq flds rex.XB or cmp movslq push addr32 stos adc rol add (bad) (bad) int movslq rex.WRB pop xchg addl cltd in lea movabs adc (bad) repnz test rex.WRB xchg icebp (bad) add jo add xchg retq scas adc movsl shll repz retq rex.WX rcr add stos mov jge xor rex.R stos (bad) rex.XB outsb jmpq cmp or out add mov sbb sub sub sarb repz cli sbb (bad) (bad) (bad) adcb xor rcrl rex.R (bad) hlt fwait rclq (bad) add xlat (bad) push in test cmp scas sbb shll fwait or rex.WRXB xchg in roll adc push xorl (bad) add (bad) cmp lret add lods jg (bad) and sbb sub cmp (bad) icebp leaveq jge retq repnz and jno or std (bad) sub sub mov cltd lret rex.WRXB movabs repnz fdivrl gs (bad) loop xor (bad) cli flds (bad) adc rex xchg xchg sbbl push sbb jns fldcw pop xchg (bad) sarb gs sub cli rex.RB jg icebp jp callq (bad) lock xor mov fwait mov sar jl cmc or repnz mov roll add clc popfq movsl pushfq rex.WXB lock (bad) (bad) (bad) loop iret jae,pt (bad) xchg loop xor movslq rex.B stos cmpsb sarl pushq movabs roll idivb fnstsw rex mov jo retq pushq faddl (bad) (bad) xor int lods (bad) scas retq shrl std jp cli add subl repz enterq cwtl and push pushq lahf loopne cmp adc fs rcrb sub callq sahf and rorl add shrl icebp pop rex.RX ror push (bad) (bad) mov ficompl in or mov loop roll cmpl (bad) sub retq lea mov or (bad) test stos jmpq (bad) jno rcll or xchg rcll jbe rex.WRB rex.WB and (bad) in retq (bad) sub cmpsb cmp iret scas cmp cmpl movabs pop sub test jl sbb and lret int3 xchg adc in (bad) jae jne sub mov (bad) imul movsb rex rex.R xor test sub cmp loopne (bad) add fisubrl idivl data16 (bad) jge rex.B xchg adc cmpsb movsb rex.R mov rorl int loopne lock lret out push movsl and (bad) (bad) packsswb xchg out add push add jrcxz incb xor rcrb rorl pop sub std flds add fild jne cli push (bad) xchg insb xsaves callq mov out iret callq and outsl xor push je test (bad) outsl ss sub pop jmpq lock rcll push fwait cld (bad) (bad) enterq (bad) mov out and xchg mov retq loope (bad) mov mov mov rex.RB sub xchg pop movsl rorl mov sti (bad) fwait mov in xchg jne (bad) or cwtl and mov fadd sub (bad) sar (bad) in xor sub (bad) rex push scas stos xchg jge cmp iret loop sbb sub mov rorb rex.WRB retq (bad) jae or loope cmp shrl rcr jne testl (bad) rolb adc addr32 movsb fwait (bad) out psrad or mull jp (bad) test rcrl fisttpll shr rex.R imul leaveq repz push (bad) xchg rcrl lret movsl movabs push xor and add rex.B or adc loope mov pushfq xchg scas faddl push cmp movb (bad) nop sbb int pushfq mov add jno mov xor stos ficomp mov lret push xorl pop jp xor es cli jb (bad) lods int3 mov out loope movabs xchg clc (bad) rex.R rex.RX in push mov in (bad) cmp pop bswap (bad) pushq icebp rex.R (bad) lock (bad) jns push stc mov mov (bad) or rex.WR sub repz pushq fist movslq xchg mov iret rex.R retq xchg jbe cmp push pop pop xchg mov mov pushq or cmp js stos test (bad) (bad) (bad) (bad) xchg sub cs ja xchg js xchg rex.WR rex.WRB callq (bad) (bad) sbb rex.RX (bad) jno lret add insb js sahf rex.WX or and lret (bad) sub (bad) rorb mov (bad) lods mov sub cltd add pushq pop ja (bad) in jae fdivr mov faddl xchg (bad) rex.WRXB add pop adc xchg (bad) in cli jl cld clc imul in loopne mov sarl (bad) retq test and callq mov stos loope (bad) out (bad) fxch shrb addr32 (bad) in add or adc sub (bad) callq out (bad) mov leaveq repz int3 rex.WB loop jrcxz mov jnp lret enterq xchg rex.R rex.R lods out (bad) fistpll es loope (bad) outsb jno stc repnz push jns (bad) mov rex.X (bad) int3 xor pop or int gs jmp cmp cs (bad) ja test mov (bad) (bad) cmovge lret jb pop pop pop movsl test rex.RXB subl rorl lahf rolb and jge mov push and roll sbb add popfq mov xchg sti ror jb jmpq cwtl rex.B sbb (bad) cwtl (bad) fdivrs mov xchg or sbb (bad) cmp mov frstor mov repz or subl sbb js fstp retq xorl rex.WB xor or rex.RX adc (bad) mov (bad) (bad) mov mov sub or (bad) cmp fidivr movabs mov out mov xor jle push rol cmp cwtl icebp rex.RX mov out mov iret enterq movsl hlt rex.B sbb outsl clc (bad) sub mov (bad) or mov sar mov mov out cld (bad) pushq adc mov lret pop stc sbb rorl jne push movabs add std (bad) test mov rex.R cmpsb sbb rolb or mov fcomps cmpsl roll xor jns ds rcll fsubs add mov (bad) (bad) and ds rex out mov shrl sub sub movabs movsl sti (bad) ror pop pop stos (bad) fsub mov lods incb push xchg (bad) mov stc or fcompl movsb jle add (bad) xchg movslq mov and cld push movabs fmull or add (bad) callq retq cmc int3 jae pop jrcxz xor cli add lret xlat (bad) jp faddl in loope jb cmp jmpq loopne clc xor pop (bad) push bswap enterq (bad) outsl (bad) rex.RB or (bad) int xorl shl mov jge (bad) (bad) pop movsb std and rex.WRX rol mov movabs cld clc callq mov mov sub (bad) cwtd movabs repnz test insb cmpsl icebp roll fsubp (bad) mov test scas sub jno sarl rex.WXB fucom jne (bad) imull js pop rex.R rcrb insb movabs rex.WRX movabs fscale movabs mov nop rex.RX rex.WB in cld icebp and xor in jne xchg add enterq (bad) (bad) stos rex.XB or rex fs adc jrcxz lock push enterq retq push and lret retq add and jae fiaddl jg bnd xlat movsb ss adc (bad) cmp push outsb (bad) hlt rex.B rex.XB mov cmp mov lret sbb (bad) addr32 xlat jbe add mov mov pop or retq fild stc and xor (bad) sbb clc sbb add retq mov orl retq (bad) pop callq xchg and (bad) mov mov and cmp ss in sarb cmp test mov repnz or push cld push fadds mov movabs and cmp (bad) lret hlt or repz and sub sti (bad) (bad) xchg xor add add icebp (bad) rex.WB adcb in pop int sbb out cmp or adc cmp xchg ds push jrcxz rex.B int shl pop fwait in punpckhdq icebp lret adc loopne xor (bad) pushq and shlb movabs movabs mov (bad) mov (bad) push add jns loope je in leaveq rex.WX movabs test add fnstenv js movabs mov imul loopne callq rex.R jbe ss fiadd sbb add in out lahf retq push shlb rex.RXB icebp rex.B (bad) jmpq rex.WB stos or mov mov ss xchg movl xor rex.RB test xor xchg rex.RX push or ss out js sti out mov out neg outsb rex.WXB cmc jp (bad) sar and in sub fsubrs xor rex.X rex.B mov xor hlt iret cmpsb movsl (bad) mov or push rcll cmp (bad) hlt callq xor (bad) (bad) adc leaveq (bad) (bad) (bad) pushq mov pushfq out lret lock pop (bad) js clc pop fcmove ja movsl shl in rex.WRXB and rex.WB rex.R or js (bad) xor rex.W xchg movl out imul out cmpsb fsubl rex.RX movb mov adc xchg sub (bad) push (bad) sbb stc out add (bad) rol std sbb enterq test cltd pop (bad) push and jg mov roll out (bad) adc imul (bad) xor rcrl negb movabs fildl repz in scas jae in ss rcll sub out rex.XB or add sbb mov (bad) movsb xlat or (bad) add fdivrl ja (bad) and pushfq cmpsb pushfq test fsubs or push (bad) divl pop movsb pop and pop rcr adc (bad) (bad) scas scas mov lret mov cmp mov (bad) rcr sbb sar int3 std mov rorl in (bad) jno movabs shll xor rex.WRB repz jae stc pop xchg test (bad) add jno xlat test outsl jrcxz add ffree rcrb in rex.W data16 ds mov xchg mov push adc sbb stc push scas adc (bad) rex.B push cmpsl (bad) cwtl mov out mov push in and testb fistl fnstsw pop retq lock mov pop (bad) mov nop or lods cmc roll and mov xbeginq hlt rorl push add jae xor je adc loop (bad) (bad) xor int3 (bad) mov mov movsl (bad) (bad) loopne movabs add adc (bad) cld cs cmpl in sbb jmpq jb (bad) or scas or xchg repnz ftst lahf rorl xchg (bad) xor xlat retq in sub roll rex.RXB jne push push icebp clc (bad) test jge or (bad) (bad) (bad) out pop add rex.WRB add sbb jns jo (bad) sub sti (bad) icebp jnp shlb outsl and rex.X (bad) movabs (bad) jmp addl rcrl push cmp sbb (bad) enterq adc jmp xlat movsl lret pmulhw cmpsb cld movl (bad) rex.R inc mov shr movabs (bad) add mov sbb (bad) (bad) callq mov rex.WXB lea out (bad) roll mov add movsb sbb (bad) rorl ror adc (bad) mov pop rex.RX and pushq lods xchg lahf movsl shrl adc rcll insl test negl push xor loop movabs xchg movsl addl (bad) fsts pop rcll push lret in xchg hlt mov int3 add add jo rcl xchg and mov js sar xchg add xor mov jp (bad) loope je add outsl push pushq mov loope cmp lret mov mov rex.WRB sub (bad) callq icebp cmp inc pop sub push rex.W (bad) pop in cmp sti sub lret xor (bad) sub pop xor iret pop and callq (bad) shrl fisub jns cltd sbb test push xchg sub (bad) cmc jno (bad) adc popfq gs xchg sub (bad) rorl (bad) loope adc ror nop sub sbb hlt shrq pop lret or (bad) test pop push shll pop (bad) (bad) rex.WX add lea roll cmp test cli (bad) test mov cltd rex.WXB sar or xchg mov xchg loopne rorl mov sub add lret push loope mov rcll cli (bad) jns scas js loop shrl int testl (bad) rcl inc rex.B ror sbb (bad) (bad) mov incb sub (bad) or mov rex lahf test rorl adc loopne (bad) add nop movb jle rex.R xor gs jmpq add pop add (bad) adc shrl cli mov mov fadds (bad) sbb out insb xchg stc pop mov out fidivrl sbb mov in mov pushq out insl sbb push sub jmpq sbb adc retq (bad) push movabs clc xchg push loopne and fimul (bad) mov fsubs ja xchg leaveq xchg retq adc subl cmp (bad) rex.XB (bad) add adc gs rcr add mov rex.WRB insl rcr lods rcrl (bad) int3 insl pop cmp stos icebp imul (bad) mov fiaddl rorl stos and mov iret rex.X rex.WRB repz div (bad) (bad) sbb sub xchg mov andl je or rex (bad) movabs rcrl lods fidivrl jnp loopne rex.W es (bad) xor rex.WX pop sub sbb jge out ss mov or jp rex.WXB cli clc xor hlt rex.WRXB cmp test sub mov shrl movsl jne data16 loop add and xchg sbb mov and add enterq loope pushfq out or rol add outsb (bad) rex rex.R xchg int3 rclb mov nop xor (bad) rex.WXB fwait enterq and mov fldcw sub (bad) jo cmpsl cs rex.B jne sub insl xchg stos add mov lods shll jp test or hlt in cwtl mov cmp lret in imul cmp rex.XB sbb sub pushq in shlb (bad) cmp rex.X test cli add (bad) ss xchg push xor xchg sbbb rcrl add out pushq adc cmc rex.RB sbb lahf stos iret int fwait movabs mov (bad) jg jle push sbb imul and popfq push xor and shll iret mov (bad) fsubr imul cs xor rex.WRB test sbbb cli xor and jmp lea mov nop (bad) pushq (bad) shl mov fsubrs jb cli xchg popfq out mov adc push sar out rex (bad) or lods cld jl rcll push lret cmp fs xchg and out cmp cmp add scas jle mov jae fmuls movsb mov je and cmp (bad) rex.WB pushfq mov xchg inc (bad) adc mov (bad) cmp out push push hlt add cmp int in mov insb (bad) iret xlat xchg rcrl xchg sbb adc pop xor (bad) jle fistpl add mov sbb movabs icebp movsl (bad) jl add adc cmp xchg (bad) lret sbbb rex.W add cld (bad) in pop push add loopne rex.RXB faddp callq stos cmp cli sub pop ffreep sahf (bad) adc rex.WR retq nop push loope shll sub adc rcr sbb lods cmp pop ds mov add retq jrcxz fldt pop and rex.WRB fwait (bad) js add callq mov and (bad) (bad) xor out (bad) mov xor or (bad) (bad) out lret (bad) lret test cwtl sti int3 add rol jns (bad) rex rcrl fidivr stos movabs (bad) mov pop (bad) int3 fistp mov add cmp (bad) fmul adc mov xchg rex.WR jle,pt fs adc xlat out sarl repz rcl (bad) cmp insb mov in pop push pushfq movabs cmp and fndisi(8087 rcrl rex.R pushfq pop push mov lret mov rcll sub retq jmp shll stos pushfq movabs jge (bad) and imul sarl fnstenv and cld xchg nop adc (bad) xor addr32 sarl mov jl sahf mov mov sbb fldcw (bad) mov out rcll xor rorb fbld push pop pop pushq insl mulb sbb rorl add roll mov in pop xor (bad) shrl push (bad) adc jae rcrl adc cltd es stc ja imul test rex.WXB fisubl shrl push mov mov nop add inc js scas jno ja or test sbb rcl xchg (bad) cwtl mov lods xor lcall and repz fdivrl (bad) f2xm1 shrl push pop shll xchg out sub cmp jne pushq sub sti rcll pop nop retq pop cmp (bad) sbb xor add shr jrcxz insb sbb xor mov stos push xor and mov rex.WRXB out sub lods int3 mov lret enterq adc push xor sbb (bad) rex.RXB rex.B ds in pop enterq jg movabs lahf test std pop adc roll fwait cwtl (bad) int3 jl add test (bad) add (bad) (bad) (bad) insb push add mov loop lods (bad) jb xor jo test cmp xchg rex.WR rex.XB sub lret leaveq cmpsl jp or and rcrl (bad) int3 (bad) fild (bad) pushq push (bad) out ficomp (bad) hlt mov and (bad) rex.WRX addb xchg cmp rolb lods sub retq int jp rex.WRB movsl push mov or pop adc pop xor rex.RX xchg jge iret add loope imul (bad) mov push movabs sbb andl leaveq (bad) jmpq rex.WX enterq rex.RB mov rex.RX lret rex.WRB mov in fildl (bad) repnz fstpl jns rex.RXB adc rol sbb rex.WRX rex.B in jmp rex.WR and cmpsl (bad) mov retq int jmpq rex.WB xchg jle int3 pushq (bad) xchg insl (bad) sub (bad) jrcxz (bad) xchg in (bad) in test int3 push (bad) add pop jne callq insl (bad) stc icebp iret mov xor cmp add popfq insb scas repz (bad) test mov (bad) add mov rex.R xchg test sbb or std cmc add rex.XB lock adc mov xchg test (bad) (bad) xor addr32 (bad) clc pop mov push rex.X add xlat lock pushq repz sbb xchg rex.B rex.RB addr32 lret add sar (bad) insl loopne mov (bad) ja sub pop (bad) xor rolb sub sub (bad) rex.B rex.WXB out xchg push xchg or ss or rex.W xor scas sti rcrl rex.B ror test sahf iret (bad) shll rex.WRB and std cld sbb out (bad) lock sbb (bad) add cmp pop movabs lret push outsb jmpq rorl (bad) mov sub cmp (bad) shrl and mov sarl out mov xchg mov int rex.WX in (bad) xchg sbb iret fisubr mov xchg enterq rcrl mov xchg rex.RXB shl lods and sbb out sarl and test jmpq adc retq out shll push sahf ror xchg rex.R rex.WRX xchg pop scas test jle icebp mov lods (bad) cmp and movslq psraw (bad) movabs (bad) adc enterq sub xchg jle xor sar clc mov jl sub rcrl jmp movabs scas sbb add jle mov sbb outsb (bad) retq je movabs xor xor rex.B and rex.RB (bad) es rex.WRXB vmovmskpd adc retq rex.WRB (bad) sbb or cmpsl pushq push test jmp (bad) lahf imul mov pushq xchg repnz in xor rex.RX in mov (bad) cs sbb mov cmp mov xor test in mov pop sbb fwait xchg mov iret repz in enterq cmp (bad) fs rex.WX mov xlat (bad) adc clc (bad) pop push rex.WXB jp test xchg pushfq stc sbb movslq pop xlat (bad) (bad) mov xchg xorl (bad) test fsts (bad) or leaveq or je adc xchg fcoms outsl mov insl adc enterq (bad) sbb icebp (bad) sub push mov rex.WRXB ror adc retq xor push stc or movsl mov (bad) insl xorb hlt cld xlat (bad) jmpq xchg or jo adc push pop and test mov rex.WX outsb jp addr32 outsl fild xchg sbb mov rex.X sub add sbb fadd shrb xor jno xor and cmc push mov insb movsb out movabs sub xchg movabs cmp cmp (bad) int3 cld jp cltd idivl or sub mov scas imul mov lret or rex.WRB xor retq (bad) adc (bad) (bad) pop rex.RB (bad) (bad) leaveq lock xchg mov test sub rex.R mov pop or xchg (bad) (bad) vorps (bad) (bad) (bad) sbb clc fild or int rex.RXB (bad) fldt mov cmp int mov vpsubsw jno cmpsb movabs jb mov sbbl xchg or jl cmpsl sbb xor adc rex.RX add cltd loope nop ds mov (bad) fwait lods rcrl mov fbld (bad) rex.WRX mov (bad) xor xchg ror add imul mov xchg cmp movsl mov adc rex.WX pushq mov insl clc mov or (bad) cli js rex.WXB rex xor ja pop cli xor push jl xlat pop (bad) leaveq fidivl enterq mov retq sbb (bad) mov and rex.WR mov or cmp mov (bad) cmpsl hlt out insl in lahf lahf (bad) sbb rex.WX and sbb (bad) cmp push js or in fs cmp pushq xchg hlt cmp stos sub rex.W adc adc movabs rex.XB stos jrcxz jg retq shlb jne es and push retq sarl insl rex.X and cmp shlb xchg cmp (bad) and xor xchg add shrl in sub xor mov (bad) jno adc adcl mov rol pop vmovdqu loope or (bad) jl rex.X cmp shll xchg or xor out and rol push rcrb jnp (bad) int clc andb (bad) je xchg lods outsl fisubrl repnz sbb mov pop jne callq xor fcmovb xchg gs test xchg fadd enterq or (bad) addr32 callq rex.RX (bad) xor out fwait rex.RB movabs (bad) rex.WR sbb xor push cmp ffreep mov (bad) out mov mov or test mov rex.WXB adc cmp jl in or sbb adc cs cmpsl or pop clc data16 (bad) xlat (bad) xchg mov scas xchg and mov mov mov in and jo test and xor mov add jae mov lret retq int imul icebp pushfq jmp (bad) (bad) mov iret cmpsl je shlb repnz out std pushfq cmpl pushq std (bad) jb jmpq fld lock mov add addr32 int3 mov rcrl cmp (bad) sub xor rex.WRX out rex.WRB int3 imul sub imul (bad) xchg xchg (bad) fidivl mov jge mov xlat (bad) (bad) mov adc jp fnop stos (bad) jrcxz stc cmp icebp jrcxz lret iret (bad) outsb lret (bad) lret test and rex.WRX mov xchg movabs push loopne xor ss (bad) add movabs mov (bad) fistpll (bad) push xchg pop (bad) jnp rex.B adc adc pop add rex.WX scas test iret (bad) or (bad) jbe add sbb push int3 (bad) mov in mov lods (bad) xlat rex.B (bad) loope lods fsubrs (bad) pop and jb lock imul (bad) or (bad) cwtl pop loop rex.WRB pushq and fmulp and roll xchg rex.X xchg fcoml movslq (bad) xchg test cmpsb jbe rex.B mov sub mov imul sbb jo shll mov rcrl (bad) es pop stc xchg cmp lods (bad) imul add rex.XB add shll sub (bad) ja iret xorb (bad) jb and xchg and loope xchg xchg mov sti add hlt pop retq fadds js xor sbb flds mov movb and loop cwtl std orl add fadd shl or (bad) and add and std outsb orb vunpcklps rex.X xchg mov xchg xchg pop mov stc jle mov rex.B mov and movabs pop xchg and jg cmp stc lea add xchg roll cmp or (bad) repz movsb rol out mov mov (bad) ds mov mov test shll mov xchg xor sub mov jne or sahf adc (bad) and je xchg mov stc mov xor push sbb or xchg movabs (bad) movsb rolb int jmpq (bad) push sub pop rex.W adcb mov fstpl fidiv sarl stos fwait mov xchg or (bad) js pop (bad) shll cmpl enterq insb and sbb mov add scas leaveq ja xchg movsb je jnp shrl scas mov lahf push (bad) test mov pop cs test (bad) loop scas mov push nop sarl mov (bad) hlt rex.W mov cwtl roll movabs sub (bad) out mov add rex.WRXB rex.W (bad) (bad) xchg cmp sbb xchg movsl xchg decb (bad) xchg push stos repz retq gs sub lods xchg and sub (bad) sarl push mov stos rex.XB xor pop (bad) xor scas push std loope ss cltd pop roll sahf sub (bad) xchg rex.WRXB mov jmpq or (bad) fldcw sarl sub cmp cmp sbb movslq add lret repz push test ja incb push in add rex.WRB rex.WXB sub rcrl fimul leaveq xor sub ja movsb int test sbbl rex.WRB adc or shll int (bad) jne rex.X shll js rcrl insl rex.WRB xor ror (bad) pop jmp out movabs ror lock idiv popfq mov (bad) rex cli pop jno xchg cltd std gs push push mov (bad) (bad) lock shrb mov std (bad) mov movabs push gs (bad) cli sub rcrl je cmp (bad) or enterq push sub and (bad) (bad) (bad) mov rex.RXB rex.XB jl xchg shll insl and sbb mov pop lret push adc jrcxz int3 enterq adc add clc sub mov cmp shrb leaveq rex.R push je push (bad) jno adc xchg stos jb rex.WRX mov pop xor (bad) sub lea (bad) clc movabs scas (bad) fiaddl enterq sbb (bad) icebp pushq xchg lret loop cmp mov rex.WRX cmp outsl (bad) (bad) mov adc or or xchg ds mov adc cmpsb (bad) or mov or push (bad) sub push (bad) sub insl cmp pop movabs (bad) outsl mov mov sarl rol movabs rcll std (bad) (bad) in (bad) roll sbb movsl movb frstor int3 jbe (bad) mov rex.W rex.X iret scas (bad) adc ror lret in popfq lret jnp out pop iret jbe shr rcrl shl imul repnz test stos mov add sub mul pop imul xchg jns rcr rclw pop push xor (bad) ror jrcxz cli (bad) rcll jns pop stos (bad) mov cmp cwtl jnp xchg xchg out (bad) adc sub fstpl or or sarl fdivl mov xchg iret (bad) mov (bad) scas or rex stc outsl loopne lock jae (bad) movabs test and rex.X add cs cld jae sti (bad) mov lods insb or sbb xchg (bad) mov and xor lods rcr (bad) in in push add cmc (bad) (bad) add fs (bad) push rex.WRX sub push (bad) and movsl retq push je movabs es orl (bad) mov rex.WB sub rcl xorl roll (bad) rex.XB sub pop int xor (bad) pushq cmp sbb mov nop rex addr32 (bad) add pop push pop je and xor or in fadds and cmp sbb sbb js mov rcll sbb sub mov push rex.WRXB rex.RXB popfq lret (bad) fwait pop mov jo in rorl or lret sti rex.XB (bad) (bad) in mov cli rcl rorl jae jns fmuls or stc movslq cmc orb adc test xor inc sub lea (bad) jns,pt (bad) mov xchg mov out and rex.RX rex.WR sbb pop sub rex (bad) rex.WRX sahf mov jmp rex.WRB xor xchg lods and (bad) leaveq (bad) jp mov mov xchg rcll pop outsb shr sub in pushq pop shrl in mov test testl (bad) imul add rol out lret cmpsb outsl sbb movabs cli rex.WX and (bad) jp mov movsb (bad) stos mov add sub rex.RXB rex.X push shlb clc jp ja (bad) xchg (bad) cmpsb mov movabs loop adc mov int add cli shll cmp int3 mov mov repnz push (bad) push fldt imul lahf repnz ds out (bad) adc and cmc mov xchg enterq cmp cmp mov out fwait push (bad) push andl sub pop (bad) sar push in xor add rorl xor pop mov jle rex.WX sti adc (bad) rcrb rex.RX js sbb loop or rolb push loopne xor jno or xchg out std mov and iret test imul jle stc loop jo jl (bad) jnp cwtl cmc pop loop add (bad) cld mov retq movabs jb (bad) adc add pop test iret data16 stos rex.B rex.WX mov loope push mov inc cmp pop incb (bad) cmpsl mov ficom cwtl in out rcrl adc rex.RX add mov and (bad) xorb pushq lods test sbbl xor and push rex.R loopne pushq mov add out test or and push stc (bad) (bad) retq pop pushq std and shrl test lea push xchg jge rex.WRB (bad) mov lret movabs (bad) xor (bad) mov jnp (bad) and (bad) add imul pop hlt cmpsb pop int3 fimull roll or mov adc xor jae in mov pop fbld movabs (bad) sub repnz (bad) sti sbbb lret or mov cmp (bad) mov cmc iret out cli lods retq movabs lret mov mov sub movl mov mov in (bad) mov int testl iret lea retq and (bad) jo jge gs shl pop sub jg (bad) xchg int3 xor jge movabs callq std (bad) pop mov sbb shrl testq jp and es adc (bad) out push (bad) in in data16 and (bad) or cmp roll cmp jmp (bad) and add pop std and (bad) retq insl jnp imul sbb jns movabs pop fcmovnb and (bad) repz jle xchg lods lret sub sbb rex.B mov fisttpll in scas (bad) and push adc movabs (bad) iret mov (bad) movabs in rex.WRB (bad) fdivr lahf cli ss (bad) and retq negb out jmp nop rex.B fs retq push rex.WRX lock (bad) scas or xchg test mov lret cmp push and jbe test jae enterq stos (bad) std mov rex.B nop xchg scas insb divl cmp mov add rex.WX movabs int3 jae,pn rex.WXB rex.R adc (bad) xchg add int3 retq loope mov pop in mov icebp int3 clc sbb (bad) iret rex.RX rex.R repnz enterq jne xchg loop retq je mov ficomp add add mov lret gs xlat (bad) vminsd leaveq (bad) adc xor xchg jmpq jge (bad) push (bad) (bad) adc (bad) sub test nop xor mov or mov (bad) repnz lock rex.WB ja jae jmp xor (bad) xor jnp (bad) rcrl sub and (bad) fcmovnb int3 xor push cmpsl cld or ss ffreep outsb mov xor and retq insl xor shrl xchg and rex.RXB je stc roll (bad) sbb (bad) repz (bad) (bad) roll sbb and jg and mov cs retq pop (bad) xor add pop cld (bad) mov push movabs rex.RB xchg rex.R xor (bad) mov xchg mov (bad) rex.R cltd sti retq mov push cmp iret loopne add (bad) roll ss stc and (bad) rol stc mov rex.RXB pop add mov rcrb out jle (bad) jne xor push fs out xor mov pop (bad) fldenv jne add sub add and xchg test cmp lret and (bad) shll xchg fcomip mov add test mov movsb rex.RXB movsl (bad) int3 cmp (bad) (bad) xchg js rex.WRXB (bad) (bad) test mov icebp (bad) sub and mov mov pushq xchg lock (bad) stos (bad) mov pop sahf sub pop rcll push test mov rex.B (bad) push sub push int subl (bad) sbb movsl (bad) popfq in push shll ss imul rex.WR fs pushfq add (bad) mov adc (bad) mov push mov out xchg in rex.WX mov fstp pop cwtl sar sub rex.B add lahf (bad) or (bad) mov sub in adc lret iret or insb shl (bad) mov std pop icebp ror es repnz (bad) cmpsb scas movabs loopne (bad) jrcxz adc rex.RB callq cli cwtl sbb (bad) lock mov and pop (bad) stc addr32 outsb xor jmp enterq int xchg out jae adc stc mov mov adc mov mov (bad) xor hlt jmpq pop (bad) sbb add negb fistpll rex.B (bad) add rex.RXB rorl stos movabs rex.WR jbe rex.RXB gs pop (bad) loop sub rex.WRXB (bad) add movsl cwtl int in or cld cmp mov add lret rex.R xor js stos test (bad) iret cmpsl stos rex.RB rcll adc lods outsl fistpll cwtl (bad) sbb insl movl adc rex.B (bad) mov shl insb icebp mov in pop lods fbstp ja test mov and lods enterq data16 mov and rorl iret movsl (bad) xchg imull sbb adcl xchg push push pop popfq xor mov push add or mov xchg (bad) mov out lret (bad) sbb and xor jo xchg leaveq rex.WR rex retq (bad) fcom test pop (bad) cli rex.B out push sbb (bad) add in rex.XB rcr cmpsl xchg idivl sub sar (bad) (bad) mov pop stc shll (bad) add outsb out or or (bad) sbb (bad) clc retq rex.WRB xchg (bad) icebp loop pushq (bad) add lea cmp pop movsb or (bad) insb mov push (bad) jnp mov sub (bad) (bad) (bad) jne rex.RXB and scas out idiv and rex.RB and imul retq cmp push rex.WRX in xlat add rex.RXB fisttp shl cmp jbe (bad) and rex.XB gs (bad) scas (bad) or rex.R pop loope cs mov int (bad) insb stc (bad) (bad) cmp test (bad) jp rex.WXB divl sub mov out lret sbb je iret movabs out loop or xor (bad) add in cmp pop xchg enterq or (bad) add retq jo movsb fidivr jbe jns adc gs (bad) fsubrs scas xchg push adc mov fldl pop sub repz jle add test push ds sub (bad) (bad) and retq push (bad) in rex.WRXB in ja xchg (bad) fs mov xchg rcll add add sbb xchg enterq imul jnp mov cmp lock (bad) pushfq pushq sbbl jge fildl fisubl (bad) xor leaveq mov (bad) out push test repz xchg lret (bad) repz lods (bad) mov jnp jae mov sbb jmpq iret xlat (bad) (bad) repz xor (bad) jmpq repz fs jmp cmc movabs rolb test cmpsl lock lret and imul rex.WX rex.XB mov adc xor imul rex.WR outsl iret (bad) xor fcmovnb (bad) ror (bad) jne scas pop fwait movabs pop (bad) imul sar xlat xor lock pop xchg js xor jno test add test jb pinsrw (bad) adc cld int3 sub or jbe retq lods jrcxz sub fsubl (bad) fmul xchg lret mov sub cmc lret adc sbb sub rex.R xor (bad) adc cmpsl rcrb or xchg addr32 je repnz int3 stos (bad) xchg pop add mov sub (bad) pop jns jmpq jmp xchg lea movsl loope add cmp (bad) cwtl xchg jp (bad) (bad) clc (bad) rex.WX addr32 movabs mov jb out sbb push popfq mov xor fucom notl and test fwait jo sahf stos icebp jns leaveq stc rex.WR movabs retq push adc in pop sub icebp or xchg (bad) jl mov cmc xor fs (bad) sti add int (bad) adc (bad) int movsb jo sbb (bad) jae (bad) mov push rorb popq sarb enterq xchg jno (bad) mov out test add mov int3 not (bad) je mov movslq pop cmp hlt rex.WRB std out mov jo jae (bad) repz stc or leaveq fadds js stos in out fadds xlat insl pop cld rcrl int3 clc mov mov xor movsl int3 xor fisubrl stc (bad) cli in sti mov or fadd sbb (bad) rex.WXB mov rex.WR (bad) mov jo mov xor test rex.WR outsl adc pop (bad) cld rcrl stc mov jns addb mov or add lret xor enterq add sub pop sub sbbl retq iret rex.XB cltd icebp rex.XB icebp retq xchg rex.RX mov adc push or push je xor rex.WR rex.WRX push xchg nop or je lret add rex.B icebp (bad) sub xor scas scas movb movabs cld jnp cmc ror (bad) outsl (bad) clc pop test rex.RXB mov out pop and pop (bad) cmp or movabs outsl rcll fistpll test rex.B mov pop rex.RB jo int sub scas xchg mov or pop lret xchg sbb add jae mov mov (bad) fstpl xchg (bad) fdivrl (bad) rex.WR movabs add data16 xlat jnp pushfq (bad) mov lods clc out (bad) xchg mov cmpl int not es (bad) sub callq jmpq (bad) jns and retq rex.WXB repnz (bad) clc or movslq (bad) (bad) mov jnp (bad) movabs pushq mov rex.RXB jle movsl test lahf push (bad) jl cmpsl movabs (bad) cs mov xor pushfq inc leaveq push int3 out es int cmp jmpq push pop xor stos (bad) (bad) std mov rex.B xchg (bad) test xchg mov cmp fnsave (bad) rcll test roll sbb jp rex.WX sub pop mov scas and sarl xchg ja (bad) rex.WRB sbb mov movsb jp (bad) loope adc icebp lahf rex.WR shll (bad) (bad) int xchg iret jno fisubr popfq ror shr sbb int rcrl (bad) pushfq xchg push movsb shrl (bad) mov xor jl repnz mov (bad) sbb xor test sarl add mov scas sahf rcll addr32 test jge sbb rex.R mov push adc rex.WX lock and xchg rex.X callq (bad) cmp js (bad) cmp (bad) lods rcrl mov in (bad) je (bad) imul rorl out mov rex.B push and jle std rex.RB sbb fisubrl jno lods adc (bad) ja push imul stos (bad) fldl ss (bad) fidivrl rorl sub rex.WRXB mov sub pop (bad) xchg mov pop push fs shlb rex.WXB mov int push cmp sahf xchg stc pop movsb movaps jno,pn lods icebp add jno repnz movabs mov sbb shrl mov movabs rex.B xchg pop cmp lcall movsb ja out push stc (bad) add pop cmp and mov add js mov mov mov fmuls rcrl (bad) sub add cmp cwtl sbb fdivr add rorl jg jle rex.WX xor (bad) pop adc or xchg (bad) fs xchg movabs rex.RXB shr in imul rex.WR sub mov or roll movsb cltd sti rcrl adc mov fnstcw int (bad) shrb hlt mov sub (bad) rcll outsb pop rex.WX or cld stc popfq rex.B sub fwait pop ss int rex xchg fadds leaveq je sahf cmp cmpsl sbb in (bad) (bad) mov fildll shll cli xchg rol and int mov sbb and movabs (bad) add repnz movb xor rex.WR adc fldenv (bad) sbb addr32 (bad) cmc sbb and xor popfq add (bad) xor bnd (bad) xor xlat loopne jp (bad) sbb push pmuludq outsl fcoms jle fcmovb mov (bad) mov popfq retq fmuls push movslq bnd sub outsb cmp pop scas fbstp adc (bad) callq cli imul mov (bad) lret imul jg pop (bad) sub rex.B sub push mov int3 and mov mov add sub xchg (bad) (bad) add pushq mov loope (bad) adc sub faddl cs stc lods or icebp repz jns (bad) rex.WR sub lret stos sbb es jp mov vminpd cmp enterq rex.XB test movabs rcl adc ja (bad) add mov (bad) jb int scas sbb sub orl mov movabs sbb push in repnz (bad) add es adc xor cmp xchg (bad) mov xor (bad) and xlat sub sub stc jp rex.WR pop pushq mov gs jae stos rorl mov rex.WRXB xchg sub xor mov (bad) (bad) pushq mov (bad) sarl sub leaveq rorl rcrl movabs jle cmp rex.XB test mov rorb (bad) jrcxz and or es xchg imul rex.B sti divl xchg mov xorl xchg adc fidivr (bad) je pop lock int (bad) xorl icebp or xchg test jo sbb mov addr32 (bad) rex.WX rex mov loope movl in (bad) cmp movsb jbe mov rex.W fist pop out loopne (bad) fnstcw cmp movabs (bad) in (bad) xor mov (bad) sbb or mov fnsave jbe int3 mul iret lods xchg xchg and jae lock callq mov rex.W rex.XB jmpq lret lret push movsb push add (bad) fdivr rex.R addr32 jl and out retq add rex.WR jl sub adc rex.X mov mov leaveq repz js xchg stc or rex.W or (bad) lock movsb (bad) repnz shr rex.R ds sbb sub xlat mov mov cli adc (bad) (bad) mov (bad) (bad) imul mov notl jge ror insl cmp push pop rcll gs rorl adcl lock mov and shrl cmpsb pop retq mov outsb movabs cmpb rcll xchg (bad) movabs (bad) sbb add and (bad) test and es xor rex.RXB jne,pn movsl add subl mov jnp (bad) icebp jmp push ror outsb adc lret (bad) mov (bad) insb je (bad) lret (bad) jb hlt rex.XB sub test cli mov sub or stos lret mov out repz pop mov cmpl mov pop jp iret adc mov test retq test (bad) (bad) test (bad) and jb mov xchg xor imul rex.RX add jns sbb stc rex.WRXB or movabs (bad) rex.WX rex.WRXB rex.XB (bad) cmp jns or xor rex.WB sbb imul add movabs (bad) in lret xor movsl push mov ss adc jmp rex.RB std cld fdivr xchg adc (bad) (bad) pushq fistpl sahf sub cwtl ja xchg rex.WX xchg push cltd rex.WRX jge or rex.WB test xchg callq rex.WRX enterq mov (bad) lods xchg movabs add mov imul adc callq mov repnz rcll jb rex.RB sarl in sub mov rcrl or adc rex.WX addl shrl push js mov and jp (bad) or or sub cld (bad) lahf test sub hlt xor rex.WRXB (bad) mov addr32 test sub rex.XB faddl or (bad) rex.B rex.WX sub cld (bad) xchg imulb cmp (bad) pop mov (bad) mov jl xchg rcrl add clc jmpq pop rex.B gs (bad) shll rolb outsb movl or rcrb (bad) (bad) (bad) xchg addr32 fnstcw sub push int rex.WX pop rcrl repnz cmp push sub (bad) lret sbb icebp (bad) lahf (bad) rcrq sbb (bad) adc cwtl rex.X cmp lret (bad) and lahf stos mov push or push cmp xor mov movslq rex.RXB and mov jg xorl and and rcrl psraw pop sub rcl flds rex.WXB out rex.WRXB push xchg (bad) shl (bad) movabs (bad) sbb fwait mov jle imul div retq mov rex.WXB cmp (bad) icebp ss rex.WRX setp (bad) and sahf mov int mov callq pop (bad) add rorb rex.XB retq lahf mov rex.RX rcl repnz and fild stos loop (bad) (bad) jne sarl out (bad) mov cmpsb lahf outsb and and jae sarb (bad) mov es mov insb mov fwait pop pushq insl jg movabs and mov xor cmp (bad) and sub pop xchg movabs mov imul adc (bad) repz xor addl jae in mov sub (bad) add mov sar pushq or xlat (bad) jae (bad) rex.B lock pushfq sahf pop (bad) shl rex.WRB (bad) in enterq (bad) cld lret rex.X ja xor jmpq (bad) retq callq rex.B (bad) xchg (bad) (bad) mov sbb xlat out int3 jnp scas mov test (bad) and loopne retq (bad) rol jmpq insl rorl pushq rcr mov push shlb test xorl xchg cmpsb mov movabs mov mov sbb pop (bad) out (bad) jb enterq popfq mov (bad) cmp insb loope in add (bad) repz add cli lret lock mov xchg jb xchg out cwtl repnz adc fwait add fiaddl pop lods lret or push cmc xchg mov test push scas repnz enterq or fnsave wbinvd rex (bad) movabs pushq lret xchg leaveq push (bad) rcrl insb (bad) ror cs movsb nop xchg ljmp mov in (bad) lods sar int3 adc sub jrcxz (bad) (bad) ss sub add jl retq shrl cmp sti icebp loope repnz imul pushq mov and sbb (bad) pop mov (bad) push or (bad) (bad) rex.WXB mov mov and push jle xchg jmpq loop lock iret rex.WX xor popfq xchg movsb jae push adc shll adc leaveq outsb jmpq push mov adc (bad) xor scas in push mov rex.RB fisub pop rex.XB rex.RXB add mov (bad) cs mov out add jo fs movsb and sub push mov sbb or jne int imul (bad) icebp mov sub mov cmp movabs mov fnsave (bad) xor (bad) (bad) sahf sarl pushq xchg (bad) movsb lret js (bad) test mov test addps sbb mov int3 and and jae or add sub sbb movsl fwait xchg rex.RX mov rex.WR (bad) (bad) push mov (bad) add add pop mov xchg ffreep xchg rex.B (bad) movl pop rorl sub (bad) (bad) mov push (bad) insb cmpl outsl movsb loopne insl fbld or test cmp (bad) fildl jno test movabs test es fldt (bad) xlat (bad) push lret in mov add mov fnstenv sbb push ss (bad) rex.WR out nop (bad) enterq por add ss je pop mov callq enterq jns int movabs lret cmpsb cmpsl rex.WRX sahf mov sub shrb rex.W imul outsl in bnd xor lret sub std sbb cmpsb add or rex.WRXB (bad) loope jns fxch xlat (bad) in retq rex.W gs enterw cmp nop xor enterq pushq (bad) test (bad) rex.W rex.R cmpsb outsb insb sub add imull (bad) lahf (bad) mov (bad) xlat xlat sbb test lret (bad) and icebp mov (bad) and (bad) sub popfq test cmpsl sti clc (bad) xor rex.WR stc adc (bad) (bad) jmpq sub adcb mov (bad) enterq pushfq sti jrcxz scas add adc out adc mov outsb ja rex.RX pop sbb jp xor xchg (bad) sbb std and leaveq or mov jmp outsb add add xchg rex.WB rex.R movabs (bad) insb rex rex.W adc mov out mov rex.XB jmpq pop leaveq rex.X repz sub retq (bad) xchg clc mov xor movslq shl callq xor sar sarl (bad) adc mov lahf mov (bad) loopne ficom movsl mov push rex.XB (bad) mov imul (bad) roll movsb cltd test shll (bad) xchg xor mov xchg testb retq loope mov xor lret (bad) jg (bad) js fstl xchg (bad) (bad) (bad) (bad) (bad) and (bad) (bad) fisttpl repnz pause cmp (bad) mov xchg add movabs out test xchg sub movabs fnstenv mov imul mov insb (bad) (bad) callq (bad) shll movabs ja mov mov sti in pushfq rex.B test add pop jae jmp xlat cmpsb (bad) (bad) fsubs sbb stos rex.X rex.XB rex.WX outsb sarl or ja movsb cs (bad) lret (bad) or pushfq test (bad) (bad) lret rex.RB loope movslq rex.RX es retq shrl je int3 sub cs push (bad) push inc pop lods xchg in pop movabs sbb push scas leaveq rcl xchg cmpsb loopne (bad) (bad) insb xchg mov fadds (bad) retq sti push xor movsb fwait xchg or cmpl sahf push repnz rcll mov rorl (bad) pop adc test stos addb insb rex.WR clc rex.B loop pop mov roll nop rex.W insb push pushfq rex.WRB jbe loopne (bad) movsb rex.WRX and mov cmpsb std mov jge rcrl pop cmp (bad) xor (bad) rex.B jb retq rex.W ficoml lret icebp jle cld loope hlt gs xchg cltd jg push rex.X (bad) mov push (bad) mov idivl adc outsb in xor rex.WR cwtl movabs lret jno xorb mov andl cmp xchg push pop (bad) or (bad) (bad) pop push adc jge rcl mov cmpsl shl (bad) (bad) mov rcrl sahf mov adc ror xchg sub movabs cwtl rcrl mov rcll test repz (bad) sbb xor and mov movabs (bad) sbb rol jae jne fwait jbe movslq rex.RX xchg rex.RB (bad) in or fucomip movabs (bad) rex.WRB and (bad) rcrl add fxch sahf and (bad) and loop mov rorl lret (bad) movslq outsb xchg pushq (bad) movsl test and sbb roll mov adc shrl in shrb jnp pop movabs roll sub cmp fist rex.WRX rex.XB fcos lahf rcll cmp lret mov movabs mov sahf loope (bad) fnstsw jne xor cmp pop cli add or movslq rex.W rex.RXB (bad) jbe rex.X add push ffree nop xor scas loop (bad) xor cmp roll out mov add fisub sar repz rex.W int add shr rex.RB lret (bad) xchg cmp mov cs pop add es clc fisubr rcrl out movabs push add fs rex.X (bad) rex.R jnp out andl in add sahf pop ds mov int3 jae mov loop (bad) rcl rex.RX xrelease test rcr or and out and sbb rex.X insb (bad) lea mov rcll mov iret cmp mov mov nop (bad) ss push push xchg mov xchg adc cmpsb or loope (bad) in and rex.WXB in rex.WRXB mov push add rcl int3 (bad) rex.RB (bad) rol or hlt (bad) cmp fildll retq mov adc sub out or ja cltd (bad) cld cmp stos or (bad) std mov or iret mov stos icebp scas and rclb pop sub rcrl rorl (bad) mov ror mov add (bad) jge lret mov push mov jae loope int adc sti push lret sub jp rex.WR and repnz rex.WRX rex.RXB sub (bad) jno (bad) mov movabs movb retq or (bad) (bad) cmpsl add mov int3 and pop xor fidivl cmpsl lock (bad) xor (bad) fmul jns sbb (bad) mov retq mov mov sbbb cmp xchg or loope mov (bad) cltd jl rolb rex.RX (bad) pop sub (bad) sub imul rex.XB jge cmp mov cld shl jle es jmpq or callq scas fmuls stos stc fcmovbe fist xor test adc (bad) xor in push rex.XB iret add repz mov icebp ljmp adc adc rex.WRX enterq adc mov insb nop rex.WR jge cmpsb jle adc leaveq xchg jmp (bad) and mov (bad) hlt lret int add xchg fistpll cltd jno mov (bad) movabs (bad) or mov or movsb adc (bad) cmpsb sbb retq mov mov sub or mov (bad) cmp rorl fcmovb mov pop pop retq movsl ror repnz pop mov (bad) xor rex.WB fmul cmp rex.WRX rex.WR in mov mov int3 add scas mov push insl jo data16 xorl xchg (bad) test fbstp push or cmpsl (bad) mov faddl (bad) (bad) mov xor rex.R rex.WR pop rex.WXB pop lret fcmovnbe xor or pop sar xchg cmpl (bad) js rex.RXB xchg cwtd xor cli (bad) fcmovnbe adc (bad) xchg jge in sbb test imul lock in jo rex.W xchg sbb and test rex.R (bad) imul mov xor add callq stos rex.WRX add std jp iret repnz popq hlt rex.B gs sahf iret rex.WX (bad) (bad) xor jne cmp rcll push rcrl xor add (bad) (bad) rex.WX jnp adc shl (bad) (bad) xor or pop jo movabs std (bad) cmpsl mov and jmpq lret rcrb adc mov cmp (bad) fs jae (bad) fiadd pop stc test xchg scas (bad) cwtl scas enterq cmp sub xchg enterq sub and shr lahf pushq pop outsl add sub xchg loop (bad) adc repz jae rex.X (bad) callq shrl and mov ja (bad) iret adc pop cwtl (bad) sub movabs pop xor outsl (bad) out movabs (bad) xor (bad) (bad) jae sbb push xchg rex.RXB insb xchg cmpsb cmpsl add repnz and out mov rex.X mov cwtl rex.WX fstpl jmpq or scas rex.WRXB (bad) (bad) (bad) add (bad) movabs movsl and rex.W push sub xchg fidiv iret data16 paddd fxch jge jnp mov xchg add int cwtl movsb mov std rex.X jge pop (bad) lock and sub retq (bad) mov rex.WXB rex.WRB out and (bad) pushfq sbb mov jge pushq pop cmc adc (bad) rex rcr xchg mov jbe sbb in rex.X or incb fisttpll scas mov xchg clc (bad) mov (bad) pop iret sub xchg jg roll xchg (bad) (bad) rex.WX movabs (bad) movsl fcoml add xchg rex.XB sub adc mov rex.RX lret test sbb cmc xchg (bad) and lahf icebp or adc mov mov movabs jl movabs xchg and mov mov fisubl jrcxz xchg loop (bad) rex.RXB lods mov jrcxz fadds add shrl (bad) xor cmp in sub (bad) rex.B rex.X jne xor es repnz (bad) xchg (bad) in std mov add shrl nop adcl and outsb sbb sbb test std sub mov lods sarl in in xchg int3 cmp movsb or loope or and (bad) mov (bad) out vpshufhw sub cmp fnstsw rorl push leaveq shrl xor enterq adc roll push cmc push jnp (bad) testl or and rex.RX jbe retq jno (bad) (bad) rex.WR sub in mov sbb leaveq adc outsb data16 sbb cmpsl and add lock movslq (bad) std adc outsb xor cwtl (bad) (bad) xor repnz rex.X jne mov jno or push sbb pushq movabs sbb enterq cmp add xlat jmpq (bad) adc rex.WR rex.WXB insl add movabs or in (bad) (bad) (bad) xchg cld push lret cmp callq (bad) add (bad) int3 clc test cwtl jns js sar pop test icebp jge int test and cld add or clc movabs push jne sbb adc in sub jae in rex.WXB and add loopne hlt decb pushfq rex.XB cmp movabs nop xchg rex.WXB sub add enterq rex.WRXB cmc ss push add cltd out and repnz xchg movsl stc mov (bad) loopne imul repz sbb (bad) mov (bad) mov mov pushq mov rex.RX (bad) cmp retq repz cmp test cmc movabs int3 rex.WRX movabs rex.W es xchg sub cmpsl sbb cltd fisubrl pop rex.WX repnz lock in sbb jno (bad) mov js fmul rex.WRB leaveq mov repz jae rex.WR adc out sub (bad) add rex.WXB roll cmp int mov stos mov add jmp mov int enterq cld mov mov iret xchg mov rorl (bad) xchg add stos repz popfq add (bad) loop mov test sar fisttpl cmpsb (bad) cmp and sub mov jg xor repnz rex.RB xchg cli fwait insb outsl jb imull cmp push rcrb mov rex.W jbe js jae xchg xchg (bad) pop cmp mov or xchg mov (bad) xchg rex.WRXB outsb jmpq xor jrcxz (bad) (bad) adc rex.RB rex.WB fisttpl movsl add jo jb mov cltd or push adc add stos js jmp jnp clc add jno or add stc add xchg sub jg ss int mov es nop and out retq mov rcl (bad) (bad) xchg movabs jge (bad) shl adc sbb (bad) insb (bad) rep mov sub sti (bad) or fnstsw je lret out mov stos (bad) pop stc rorl rex.WX ljmp lods (bad) repz jl adc rex rex.R cmp jb xchg rex.WXB imul retq in add popfq mov test (bad) test rex.WX addr32 movabs mov hlt adc push push (bad) cltd roll rex.RXB insl xchg xchg movsl (bad) jg cwtl movd add xchg fnsave rex.WRXB mov and add pop stc (bad) xor repz xchg in pop pop adc lret and sarl (bad) (bad) imul stc sbb sub mov (bad) ftst mov retq and sbb mov xchg ss sbb test movabs rex.WB xor xor movslq shrl shr (bad) mov rex.WX pushfq cmp clc iret rex.RXB (bad) lret rorl insb mov add adc or popfq sub movsb pop mov shl icebp in push out (bad) (bad) (bad) jbe pushfq scas rcrl jae add mov xchg lods (bad) movabs shl push ja (bad) and int3 mov pop (bad) xor in or or adc fld nop or pushq adcb (bad) adc loope jp or rex.RX repnz and and rex.WX jb mov mull (bad) movabs int3 movsl or rex.XB addr32 mov sahf rex.WR push (bad) mov stc jbe out lock scas rex.WB fwait neg pop sbb cld sar rex.WRXB (bad) xor sbb pop rex.WR rex.B es retq in sbb (bad) mov movabs push in xlat sahf xchg pop cmp insb (bad) rex.WRXB push or fsubr jb add (bad) shrl jo shll and add shrl lret insl add pop (bad) movabs rex.RX rex.WRXB adc sahf xor jge push (bad) mov mov retq cwtl test out int3 jp lret mulb (bad) (bad) cmp out lahf loope (bad) rcrl xor and shl adc add stc or leaveq xchg rex.RXB (bad) mov or (bad) adc pop pop retq rex.WXB jns xlat rol add (bad) cmpsb and stos nop jns adc or xchg mov loopne rex adc fsubs xchg ror xchg callq and mov sub (bad) int push shrl jge shl test mov jno fwait mov sar push adc jae verw sub add pushq jno mov add sahf pop xor mov int3 (bad) (bad) rex.R push and rorl retq (bad) test test not jae pop and push and repnz (bad) xor push (bad) (bad) pop push roll out pop (bad) cmp retq cmc je sub sbb fiadd (bad) (bad) enterq (bad) jge mov add mov jl pop lock (bad) scas movabs sub rorl (bad) add insb mov std (bad) mov push outsl div cld mov rorl (bad) cltd (bad) jg jbe (bad) out js movabs adc lea (bad) lods (bad) rex.B add add int stos fidivr push sti (bad) cmp rex.B and subl es loop (bad) out rex.WXB push jp movsb cmpsb (bad) rex.WR (bad) repnz sub (bad) mov sub adc jns mov rex.RB insb xor retq out sub idivl xor in and add xchg adc shll add (bad) mov jnp adc popq cltd (bad) (bad) mov nop push cmp mov movabs (bad) rcl lret mov lret (bad) sbb cmp xor jb and cmp cmpsb roll push shrl rex.WX mov (bad) xchg push rex.X lock (bad) xor xchg rex or cmp jbe stos ja rex.RX movslq out sbb mov pop (bad) insl add xchg out rorl movabs mov sub (bad) adc fwait in cmp mov fs mov divb int3 rcl mov es (bad) adc test jp (bad) (bad) gs ja stos cmpsl mov icebp shll (bad) adc orl (bad) je retq push (bad) sti callq rol pop (bad) rex.X mov and hlt repz or jnp adc shlb and xchg jb sbb (bad) mov retq (bad) lret xchg jnp pop (bad) mov pop scas add js (bad) (bad) cmc (bad) outsl movabs push rcl xchg cmpsb (bad) (bad) movabs jp test (bad) (bad) cmp jne fwait rol xor cmp lret rcrl fs mov sbb xchg cli jb sarl cltd xchg loop sti pop mov jne xchg cld push popfq shll outsl or sbb movabs shrb int3 rcrl xchg mov (bad) sub rex rex.R lock jnp lret (bad) mov jno shrl sub and stos faddl insb xlat rex.X mov (bad) adc cltd imul jrcxz bnd mov outsb xor rorl je rex.WRB adc mov movabs jrcxz xor pushq push sub shl insb retq fsubl lret je stos shll in lock and xchg repnz cmp je xlat mov nop mov (bad) mov (bad) rex.WX jmp retq mov fcomi popfq xor sbb sbb rol rex.XB or push (bad) xor push (bad) rol jl clc int3 mov hlt (bad) rclb test pop xor (bad) cmp mov (bad) and pop cld movabs faddp adc push mov (bad) sbb or imul fadd lret (bad) addr32 (bad) pop jbe rcrl (bad) stc lahf jp adc callq cltd and out iret (bad) fistpll sbb xchg inc icebp lret (bad) xchg hlt cwtl push push (bad) ffreep lret rolq adc xor scas jmp (bad) shrl push xor or sub scas pop retq rex.WB fadd pop nop mov cwtl (bad) rol cmpsb cmp (bad) sarl add (bad) cmc or (bad) (bad) mov sub sbb pop adc jl int3 (bad) cs popfq (bad) mov sbb add test fcmovnb rcll sub sbb rex.WR cli add mov jns movabs jnp mov sub test callq lret (bad) pop ja mov cmc out jnp xchg repz roll (bad) add and pop int test push xor test and xor cmpsl and cmp and incl gs mov callq lret (bad) fistpl (bad) divb cmpsb icebp rex.RXB xchg (bad) cli jge fldl pop mov sbb cmc sbb fildll xchg (bad) lods fcmovnu mov jge (bad) mov pop mov fbstp rex.WRX cmp rcrl (bad) pop sahf movabs rcll xor pushfq xchg int3 out movsl xchg mov callq mov jmp movabs cmp and in pop imul and rcrb (bad) sub mov movsl xor (bad) (bad) rex.RB fisubr xlat mov (bad) shll (bad) pop (bad) movsb mov js or ficoml iret iret pop fsubrs ja int3 push cld icebp (bad) fldenv (bad) mov shrb fist loop rex.RXB xor fneni(8087 and insb out mov fsubl sbb push (bad) xchg (bad) fucomp callq in movslq lods or xchg add (bad) sub cmpb mov std sbb stc gs fldenv rex.WRX rex.R xor (bad) in xchg rcll rolb movabs scas rex.WB push nop cmp (bad) in mov fwait lods in and (bad) cltd (bad) or jge and pop std (bad) xor xchg cmpsl sbb jnp rex.WRX xchg repnz xor (bad) ja prefetch or (bad) sbb lahf mov in add mov jg movabs xlat (bad) and pop jno scas push add testl mov out stos or (bad) lret add stos mov out cs cmc movabs pushq xchg or (bad) lahf cmp and (bad) loope es int3 (bad) or xor jno adc xchg jns jne imul ss add mov and mov lahf (bad) mov mov rorl and fwait data16 std pop imul cmp add imul mov add sbb lahf (bad) fstps sbb rex.RX xor pop clc mov (bad) movabs scas adc incb mov mov (bad) rex.XB mov insl rex.X (bad) xchg rex rcrl test push cwtl shr loopne mov rorl (bad) std shrl movslq mov add jns and xchg icebp or mov (bad) stos (bad) jns imul add (bad) repnz pop sub test cmp (bad) loopne mov cmp pop sbb adc rex.B test pop mov xor adc fwait sub mov adc fistp in add cs jo rex.RB adc cmp sub rorl lock or sub sub rex.XB (bad) sub callq add jge jo pop jle sub pop xor xlat cmp (bad) lret xchg (bad) fstpt rex.WXB add jno gs sbb enterq (bad) cltd retq sbb rex.R jge (bad) loope (bad) sahf (bad) mov out rex.X xor fcomi rex.R add (bad) pop mov cwtl cmp jb mov mov loope (bad) pop mov mov pushq out rex.WB repnz xchg xchg int3 (bad) jle rex.XB xchg jmpq and jno add rex.X xchg jae jb xlat (bad) rol rex.WXB jmp sub cmp (bad) int es and xor je (bad) mov pop xor jl movswl in roll lret mov imul adc lahf movsl (bad) test fidivrl (bad) repz add out add (bad) xorl xor stos movb cmp lret iret fucom sbb out jge xchg lret fnstenv rex rolb rex.RXB rex.RXB (bad) pushfq imul rex.WX xor int3 jne push ror push add clc rex.RX xchg cmpsl lret pop (bad) rex.WRX pop negl mov xor (bad) jle maskmovq divl rex.WB xchg int3 cmpsb mov adc data16 sbb cmp rex.XB (bad) (bad) sti outsl (bad) jae jns cmp popfq jmp add sbb mull and fs add add rex.WXB stos push punpcklbw adc je movslq fimull retq or movabs sub ror stos xlat mov xchg or xchg mov pop loope rex.WRB rex.X rex.RB test shrl mov lret rex.R rex.B rex.X (bad) movabs out loop rorl movabs push and enterq cmc retq shl pop pop (bad) rex.WB addr32 sarl pop mov movsb jmp popfq or add add (bad) mov in (bad) insb xor pop xchg shll orw lldt (bad) mov cmp mov (bad) or jl loop (bad) (bad) data16 adc retq rcll lret mov (bad) enterq push addl fisubr cmp jo rex sub cmc movabs mov out retq in and xchg fmuls adcl insl pop (bad) xchg xchg rex.W lock xor retq subl xor leaveq movsl repz lahf mov xchg jo (bad) mov xchg sub sub xchg roll movabs adc sub out rorl movabs xor (bad) loopne shl or and imul mov movslq (bad) fs scas or shll xchg or xor popfq (bad) cmc jo add roll test sbb mov add rex.WRX pushfq rex.B cmpsb imul es add jle stos loope mov adc (bad) (bad) xchg scas rorl cmp pop je (bad) mov jp fadd (bad) (bad) sbb rex.WRX mov enterq (bad) cs (bad) movabs (bad) mulb ficoml hlt add fimull or idiv cwtl and xchg rex.WRXB pop rcrl in (bad) idivl (bad) xor mov (bad) in xor adc jl (bad) int3 xchg lret xor push sahf sub push and and (bad) int jmp rex.WRX addr32 xchg cltd lea (bad) cmp pop rex.WX xor (bad) xor jg add outsb sbb rcrl pop mov icebp jrcxz rex.WB (bad) lods clc xchg and cs sub (bad) rex.WRX in xchg rex.R mov mov stc leaveq mov fnop xchg (bad) or xchg (bad) mov push (bad) or std xchg xlat mov mov and test xchg rcrl loopne add test fwait (bad) (bad) mov or rex.B lock outsl cmp (bad) mov cmp cmp fdivr (bad) lahf push in (bad) mov rex.B rex.B cltd adc xor xchg popfq (bad) stos fildll test jne jno rcl add adc pushq rex.WRB pushq mov movslq cmc xchg rol (bad) (bad) adc roll sbb pop cmp (bad) mov cs in sub insb test (bad) mov and repnz lret push (bad) adcl and (bad) mov out loop stc fwait icebp (bad) sbb retq test movabs rex.RB xor sbb mov jo movslq sarl push pop rcll mov (bad) push shrb cmp lret xor loopne (bad) test lret retq xor pop fstpl outsl rex.XB movabs testb div sar mov mov (bad) jbe or adc or int rex.XB orb mov jno lret add mov rex.R test in rol addl jo sahf (bad) lods xchg rex.X xlat sarl cmp enterq sbbl scas rcll (bad) jb sbb adc (bad) and (bad) mov movabs sbb (bad) or iret (bad) adc lods add adc outsb jo lods push or cwtl scas rex.RX pop repnz shlb jb (bad) add rcl movabs sbb cli pop shrl and fiaddl and (bad) in rcrl sti or (bad) mov fdivrs sub (bad) mov test rex.WRXB (bad) in ja rex.RB repz cmp jbe (bad) subl (bad) movabs (bad) xor mov fiadd test pop (bad) jo (bad) rex.WR (bad) out lahf pop std xorl (bad) mov int3 repz and insl (bad) ja int3 ficom (bad) fist callq rex.X push retq cs repnz and adc (bad) ja lea mov addr32 jne (bad) or and ja (bad) push (bad) fisubl adc (bad) (bad) data16 and and (bad) xor mov (bad) adc fist (bad) fwait lret lods sub fmul mov callq jbe lods rex.WRXB xchg insl rcrl (bad) xchg jo callq push stc pop cltd mov (bad) or adc add pushq sbb sub fmulp test divb (bad) rcll jb pop in sar or shr xor repnz mov addr32 and and rex.WB outsl sbb data16 loopne (bad) xor mov adc adc sahf push stc rex rex.WXB loope mov pop stos xchg mov pop or mov movslq cmpsb and shrl insl jp jne nop sahf (bad) adc jle imul rex.WXB movsb test cmpsl pop mov sarl in add mov xchg cmp (bad) repz jg stc (bad) movsb xor xor (bad) mov push or mov jp add mov or sarl push sarb pop xor (bad) push test xchg rcll test lret rex.WRB repz sarb lods stc mov jns pop add rex.W rex.X (bad) cmp mov (bad) rex.XB popfq scas retq (bad) callq adc push (bad) sbb loopne xorl lret jg (bad) (bad) xorl jnp add cmc leaveq sub sbb push retq push pop and pop sbb sub mov movslq cmp mov (bad) mov push sbb mov mov retq cmpsl (bad) bnd rex in lahf adc scas mov add loope adc (bad) rolb jg data16 xor pop jbe or (bad) mulb rex rex.RB (bad) (bad) (bad) lods xorl (bad) sub loope fisttpll fist shl xor cmp xchg mov jle mov sbb ss retq mov scas cmp xchg and (bad) xor movsb rex.WB lock (bad) rex.RB ds jbe (bad) in loopne (bad) mov push (bad) xchg xchg jmpq rex.RB (bad) je callq jmpq jo std or sub rex.WRX cmp xchg repz sub add outsb repnz mov int3 sub rex.X and cmp test (bad) mov clc jnp (bad) test retq mov int fcomi mov pop (bad) lods loope (bad) xchg rex.WR add xor lea movabs add fwait loop or xor cmp xchg (bad) adc (bad) push or lock cmpsl lret rex.B adc enterq orl pop loopne sub mov out enterq mov cmpl xor xchg lret and xor xor jne xor rex.WRB test (bad) std cmpsl rex.R (bad) in repnz xor fcmove ss repnz mov (bad) sub mov movabs rex.B rex.WXB flds and (bad) (bad) (bad) int3 loope cmp enterq lret mov repz rex.R xchg sbb mov orb or mov mov push int3 mov sbb divb adc and (bad) or mov fmull sarb imul rex.WRX cmp xchg out mov lahf fwait add lea cmc rex.WR ja push outsb mov rex.WRXB xchg repz mov rex.B xlat imul jg imul push mov rex.X and test mov (bad) in int3 mull xchg rex.WRX lock and nop test cmpsb rex.RXB pop fisttp insb rex.RB rex.WR (bad) rex.RB cmp loopne rex.W cwtl cmpsb retq out push jmpq (bad) sbb int fcmove and or xchg fs enterq (bad) cmc (bad) rex.X repz faddl int3 mov fildl mov imul jae lock fadd rex.WR (bad) pop icebp cwtl jle loope repz je xchg shl in mov fwait pop xchg cmp jp adc jns jne nop add stc fistp stos (bad) insl jae mov loopne (bad) (bad) sub pop insb sbb add xor clc mov or (bad) iret sub cmp rex.W rex.WRX (bad) cmp jge test (bad) (bad) stos cwtl push adc and (bad) nop mov sbb loopne rex.XB cmp mov movabs push jl (bad) rex.RX mov or adc lret std rcl (bad) sbb (bad) std rex.WRXB nop or rex.RX fnsave roll sbb add iret movslq (bad) (bad) (bad) jmp jnp out (bad) sahf mov cltq jne fbld out sbb rcl enterq (bad) (bad) cmpsl insb loopne in es add ror xlat mov mov cmp retq (bad) movabs rclb mov rex.X rorl (bad) retq adc (bad) stc sbb mov sbbb js xchg pop clc sbb (bad) loop push rorl in and mov xchg imul cmp iret adc xchg cltd adc jrcxz (bad) cmp shl add hlt cwtl push mov movabs jae cltd push test pop mov rex.XB (bad) data16 cld (bad) add pop (bad) adc cmp repz sti int (bad) callq push lock out (bad) rex.WR rex.R mov callq push mov mov xchg ss jrcxz lods push (bad) mov (bad) (bad) and adc sbb fsubs push jp jl (bad) ja xor mov shll pop cmp shll lahf idivb cltd retq leaveq xor cmp sub pop (bad) (bad) (bad) (bad) fwait xorl mov jae xchg xor roll sbb fisttp mov sub rex.WB xchg and or add fcoml test jne xchg lret xchg adc in int3 lods mov movabs xor cmp leaveq rex.R neg push mov (bad) rex.WRXB jae mov in push rex.X xor jno imul xchg jmpq xchg sub push xchg jl addr32 (bad) icebp retq rex.RX mov or cmc retq cli cmp fidivrl icebp (bad) (bad) mov cmpb cmp movslq pop loop rorl rex.WRX repnz hlt jns in frstpm(287 or lods add cmp push fnstsw imul xor rex.XB rex.W add adc iret jge mov shrb sbb or sub fstpl add lahf xchg push sub mov xchg stc adc lret gs mov fcompl jns jnp adc sbb (bad) out fstp add lret div rex.XB mov rex.RXB add loope rex.XB mov or mov (bad) mov xor jp and icebp imul rex.WRB mov movabs rex.W rex.WR rex.WRB movslq imul pushq movabs mov jmpq sbb (bad) imul or int test test gs xor rex.XB pushfq in (bad) jge rex.RXB mov push ja test push rex.RX push sbb repz loope xchg vhsubpd iret sbb (bad) jb mov repz movslq es pop adc add (bad) retq (bad) add sub push addl in and (bad) mov callq callq xlat jl outsb jmpq rex.WRXB rex.XB rex.B (bad) rex.WXB (bad) pop jp pop mov cmp ss mov push (bad) adc lock (bad) in rex.B mov rex.WRXB jp jbe pop lods jno cmp add sub (bad) int3 in rex.WRX jno jo loope int3 pop jmpq scas sbb insl rex.WXB pop hlt add rex.XB fsubrp xor rex.RX rex.WRXB imul cmp mov add andl repnz (bad) mov popfq xchg movsl mov (bad) (bad) movsl mov enterq notl rex.W loopne cld jne mov or (bad) adc adc movsb ficompl jae mov sbb adc pop jl add stos jb rex.WR roll in mov rex.X enterq (bad) mov sub mov fistpll rex.WRXB mull sbb adc and lret std xchg fildll (bad) mov cmp stc jns mov std (bad) mov in mov pushq rex.WRXB rex.WR fisttp roll xchg mov add jrcxz sub stos rex.B rex.WXB (bad) scas rex.WRX and mov fstpl in leaveq push jbe int3 sbb mov jrcxz jb fs pop (bad) sbb mov rex.WXB sub sbb push jb fptan (bad) rex.RB in (bad) adc (bad) jns (bad) xor frstor loopne rex.WR xor jl sarw (bad) cmpsl xor sub rcrl fwait mov insl and rex.XB (bad) std lret mov lahf roll js imul push sarl (bad) (bad) cwtl mov (bad) (bad) push stc sarl xchg (bad) fistpl rex.RXB sub fldcw push stc push (bad) movabs (bad) sbb rex.WR (bad) (bad) jge rex.W sbb add xchg push cltd lret (bad) loope setb in (bad) fidivrl loopne pushfq sub push and and popfq and retq rex.RX jns rex.RB lret sub sbb pop mov adc mov mov xchg cli jb shrl mov xor cmp pop add rex.WRXB xchg pop sub int xchg (bad) sub mov fnstenv rex.B rex.B sub xchg mov (bad) negl pushfq xor rolb js (bad) flds ss (bad) fild subl cwtl rclb pop pop outsb rorl movslq test and pop mov (bad) rcrl and jae mov movb cltq rex.B movsl rex.RX and fcmovbe std rex.R push adc out gs cs (bad) popfq lock in scas adc rol pop or (bad) callq jg xchg lret (bad) rex.RXB lods fist icebp clc rcll out or pop (bad) fstpt and or pop ror xor (bad) roll cmp in rex (bad) xchg (bad) rex.B popfq pushq mov shll xchg cli callq lahf rex.B (bad) fwait jmpq sti cltd sub sub and retq (bad) outsl rex.WX xchg rex.R mov cwtl subl (bad) adc adc adc mov fiaddl roll mov cmp or out repnz js outsl xchg (bad) (bad) jno jge test mov shrb ja mov sub sbb mov in icebp xchg lret sub subl push (bad) mov nop mov jo icebp int pop adc mov rcl rex.RX retq cs movabs xor fimull cmp jno sar nop mov roll adc pushq loope mov fcomip rex.RX shr repz repnz cs movabs or rorl hlt clc (bad) (bad) int3 sub adc mov pushq in (bad) or cltd sar sub lock jp (bad) movslq int jmpq rex.WRX rex.RX (bad) sub xor xchg jle pop cmp cmp add (bad) xor fadds mov jns fwait jno push jb cmp xor (bad) fstpl shrl movabs (bad) lret adc es movslq movabs xor or pop rol push cli and adc mov je pop sbb pushq xchg rex.RB (bad) imul out sbb rex.RX data16 mov int rex.XB add add or and test xchg ror (bad) movabs add (bad) mov in rol icebp rex.XB (bad) push cmc jrcxz roll movabs xor (bad) es jl retq or (bad) repz add cmp xor adc adc (bad) xlat lahf jge xchg add and (bad) adc push frstor loopne rex.WB xor jrcxz lret mov loope rcrl loope cld (bad) (bad) pushfq int (bad) mov xchg (bad) and push sub cmp loope xlat (bad) sbb sub pushq fmuls jb iret std ffree (bad) sahf int3 xchg rcl lods (bad) (bad) add (bad) (bad) (bad) add (bad) lret pushq repnz out mov cmpsb or mov rex.WRX lock nop lret add rex.RX pop xchg repz mov sub and in rex.X xchg cmp rex.WRXB push (bad) lock cld xlat imul or rex.WXB pop mov rol gs cmp addr32 test xchg callq out sbb icebp repnz add sub lea push fwait sbb jno shrl andb rcrb cli mov (bad) popfq subb rex.WX test and rex.WXB push add cmc lret stos (bad) xlat adc (bad) jno sub fisttpl movslq adc movabs mov mov (bad) xor pop idivl callq rex xor lret int3 rex.RXB mov not movabs (bad) mov rex.B fwait rex.WX test movabs lahf (bad) testl retq retq xor shlb shl js jl and xor sub lods rorl sub divl (bad) xchg and sbb pushq in cmpsl (bad) addr32 (bad) repnz movabs (bad) (bad) hlt or (bad) xor callq mov sub movabs (bad) (bad) jp (bad) enterq mov (bad) jo jmpq mov pop (bad) jle mov rex repnz int3 rorl mov mov (bad) rex.RX addr32 (bad) fildl or adc lock shr sbb lahf pop xor add add jns ja rorl scas vcvtdq2pd (bad) rex.R rex.B mov mov mov imul adc jae jp shrl stc pop push ds lret rcrl mov lret shll pop (bad) xor cmp rex.WX jo jno and mov jno callq add rex.WXB lods retq sub shrl (bad) xlat mov mov (bad) lock cmp cmc (bad) sub xchg lahf int xchg (bad) repz enterq and sub xchg cmpl leaveq push fnstenv imull xor mov rex.B pushq fild js xchg sbb movslq retq movsb mov in (bad) pop (bad) mov add (bad) push stc xor cmp (bad) xlat rex.XB (bad) mov adc mov leaveq or pop or cld (bad) mov rex.B mov addl cmp rex.WR xor mov notl rex.WRB (bad) push mov or cld mov or stos (bad) or (bad) fcmovb loop in lods (bad) adc fcoms cs negb xor clc repnz mov add push sbb (bad) rex.RB loopne insl rex.RXB enterq movabs rex.W repz sub stos jo vorpd int3 add xor cmpsb rex.RXB mov push pop movabs fs and mov cmp sahf mov loopne push rex.WR or rcrb sub pop je mov pushfq rex.WRX test pop cmpsl enterq mov sub callq (bad) test mov retq sub jmp test enterq icebp (bad) or sti stc iret sbb and ss jne jne rex.WXB cltd jno rex.RX (bad) (bad) push movabs shrl and fldenv mov (bad) movslq fiadd rorl xlat mov push or loopne mov movsl or cmc xor jae sti or xchg jmpq retq out (bad) adc sub sbb jno ljmp push fucom cwtl xor shrl clc insb je clc xchg or (bad) jo std mov and or callq enterq or or sub and in sub mov adc icebp divl (bad) lock mov shll xlat mov pop mov std and push mov jnp or scas imul rex.WB xor sbb lea data16 outsl (bad) repz ss mov movabs movabs in (bad) cmp repnz or scas test rex.WXB jae mov (bad) int3 pop imul rex.WB mov lcall rex.RXB and rex.W mov and and xchg xor push mov movabs div shr jrcxz std cmp movabs test jp repz sub xchg movabs mov je scas jrcxz rex.X mov rex.WRB rex.R (bad) jrcxz and cmpsb adc adc out in addr32 incl rex.WXB insl stc mov pushq (bad) sbb rex.WRB (bad) icebp sub xchg (bad) (bad) add or lret (bad) lock jno jns mov mov jge movabs loope fisttpl scas fmuls jns lea jp rex.WRX pop pop retq (bad) rex.XB mov enterq iret add callq mov xchg movabs out outsl loope lret xchg sbb (bad) add rex.RX repnz (bad) cmp movabs (bad) icebp rex.XB push sbb leaveq jmp add mov enterq fbld cli movabs imul xchg and cltd or add add stc pushq mov adc movabs stos xchg repnz loop (bad) repnz rex.WR loopne add iret sbb pushfw (bad) mov sub adc jl sysret test jae rex rex.WXB ss (bad) adc add cmp in rex.WR cmp add test test add (bad) scas lahf lret retq stc ja sarb sub fstps bnd out lret mov fstps jb push movabs add add (bad) jae sub stos cmp (bad) (bad) cltd (bad) addr32 sahf shrl rex.WB insl rex.RX je pop rex.B rex.WB (bad) mov movabs scas cmp mov (bad) (bad) adc outsl icebp std pop lods push scas cmp test (bad) repz rex (bad) loopne cmpb fs (bad) movsl cli fiadd rex.B xor jle xchg int3 jmpq (bad) setp (bad) or rex.WRB (bad) and and jnp fsts adc int popfq lods ffreep rorb pop sbb fucompp roll add cmp or pop mov sahf adc push rex.B rep rol outsl jo roll (bad) out roll loope xchg mov mov xor (bad) push cmc add fiaddl ja jns sahf lock sar gs rorl test jp and fsts jns retq cwtl addr32 pop repnz lret xlat lods (bad) movslq insl rex.WRB outsl sarl xor xchg cmp movabs mov add ja (bad) rcll vpunpckhbw adc lock lods jne cmp (bad) jge movabs mov add push clc rorl xlat cmp rex.WX outsb shl or loope rcl (bad) callq cmp push cmp popfq pop test (bad) outsl (bad) neg pop (bad) mov (bad) or mov rex.WRXB (bad) (bad) (bad) pop adcl mov sarl cli push (bad) (bad) je mov gs ja cmc sub (bad) stos push repnz adc cmp out jrcxz lahf push mov mul add sub adcl xchg (bad) jo (bad) movabs add sub jb rcll sub enterq cwtl cld add enterq js jb movabs jl hlt and pop mulb rex.XB sub sar xchg mov movabs in sbb cmc cmp rex.R add or (bad) shrb add sbb movabs rex.WB shrl mov int push rcrb js (bad) test imul rex.X scas ficom sbb cmp loope push enterq shll imul (bad) ds faddp adc jno mov sarl (bad) rex.WXB or bswap (bad) (bad) jae and add (bad) std pop jns fbld cmp lret out jmp rcll jl xorl (bad) cwtl cmp (bad) vpunpcklqdq lret and rex.RB or pop mov or insb rex.B jmpq jo xchg rol nop fisttp sbb shrl mov mov xchg js jl or test (bad) out rcrl cmpsl enterq lahf mov (bad) rcrl jp jmp sbb sub sub int3 callq add adc rex.RX cmp cmp mov xchg scas add jg jp cmp je push mov add or push in sarl rex.WB int (bad) imul or and test in xor es cmp cmpl shrl repz and sbb cmp movsb or jrcxz cmpsb test roll pop lret callq out lea xor cmp in repz xor pop in ror sbb mov addl movslq rex.W add (bad) sbb jmpq imul and movsl ja push add enterq xor add callq iret cmp sahf (bad) jae mov rex.WR push stc and (bad) xchg rex.RXB orl lea sub jmp push addr32 mov repnz (bad) xchg out vorps (bad) cli out xchg xlat rex.B (bad) sbb add (bad) movabs xchg mov (bad) sarl iret xor stos addr32 rcrl stos rex.WB rex.RXB pop outsl cmc jbe loope sbb loope jl push cld pop or mov rex.WR lea es sbb int3 mov ror push fdivrs je lock cmp mov and jbe add and mov popfq mov fisubr sub lea lea pop repz repnz pop cli fcomi xor push rcr rex.RX adc and retq jno cmp sub lret idivl rex.WRXB jae rcr int3 icebp (bad) sub (bad) sub jle cmp push fwait cmpsl pop sarl test out out out or xor movabs pop cmpsb mov (bad) mov (bad) jb repz pop rcr fcomps rex.WRB (bad) rex.W loopne icebp fisub sub shrl rex.X jge xor mov jg scas mov and (bad) movabs imul cmp pop hlt add rex.XB or cmp cltd shrl xchg cmp pop rorl push add pushfq push cmpsb rex.WRXB loopne and rorl pop cli mov sub add roll fidivr loopne test pop xchg jo rcll rex.WX lods mov testb (bad) pop and rex.RX mov jne (bad) mov (bad) adc int3 movabs rex.X rex.RX add shr movabs adc cmp ds (bad) loopne rcll movslq ja sbb (bad) adc xlat pop retq cmp movabs jnp xchg mov and idivl (bad) addr32 and cmp mov orl mov push sbb sub ds rclb shll ja sar movsb mov xchg imul jae shll lea lahf (bad) stc add add movabs rex.WX rex.B imul iret adc and cmp rex.XB gs in mov mov add rex.X rex.X repz (bad) sbb mov (bad) or sahf shll mov jnp mov (bad) cmp rorb adc and pushq xor mov shll divb (bad) jmpq mov rorl clc (bad) repnz out xchg and cmpsb xchg in sub test rex.B leaveq pop push (bad) pop rcrl or ffree cli mov add and xchg jl sahf xor or (bad) rcr push loope ffreep jrcxz add cwtl outsl es (bad) mov (bad) jb mov (bad) (bad) cli (bad) je or sbb xchg or movabs retq xor movslq jmpq popfq shrl movsl leaveq xchg (bad) rex.WRX testb gs mov (bad) out sub insb xchg movslq sub mov rex.R cmp (bad) or and xlat and cld nop data16 cltd mov or or gs movabs repnz stos out jmpq rex.WRXB leaveq xchg shl enterq (bad) mov rex.WRB decb sbb xor leaveq xlat rex.WRXB push sarb test jg lret xor push lods (bad) lret (bad) or test adc lods cmp xchg rex.WR ss rex.WXB (bad) jae (bad) stc lret mov (bad) int push vucomiss cld out lahf rex.WXB rex.B xor int3 int3 add (bad) rex.WB pop sbb sbb adc callq stos sahf (bad) cmp jne xchg xor mov and (bad) test (bad) (bad) mov leaveq mov mov rex.XB addb jl xlat movslq clc lock (bad) rex.WRXB adc fnstsw pop fstpl rex.RXB fcmovnb mov (bad) (bad) xor cmp adc icebp (bad) imul fisubrl or rex.WR rex.RX int add sahf or mov movabs rex.RB jne cs fmul rex.WRXB je rex.WR and out fiadd or (bad) lea insb jb xchg mov stc (bad) sbbl mov (bad) xchg jno xlat xor xor hlt add add xchg rex.WR xchg out jmpq (bad) (bad) push adc xchg (bad) (bad) xchg sub add or mov test sub (bad) jmp (bad) (bad) clc (bad) xchg int3 mov rex.XB rcl repnz pop sub outsl cmp mov test (bad) pop jbe jns adcl or outsb jbe movabs popfq (bad) imul icebp mov cltd rex.X faddl or enterq callq pushq push (bad) lret int rex.B (bad) int3 rex.X mov rcrl in sub push lret rex.WB clc (bad) cmc fstpl add jo rcll ud1 sbb jae movsb (bad) sbbl mov fimul repz xchg int3 sbb sbb add cli push sbbl jns out rex.WB add cmp (bad) (bad) out mov int3 xor (bad) flds sbb bswap push jno retq or sub xchg insb adc mov mov mov (bad) rex.WRB rex.WR mov addl (bad) fsubrl rex.WB pop repnz (bad) lock push sub fistl mov or (bad) push sub testb (bad) xlat mov add rex.WB mov lahf push ja jno clc mov fsubl rex.RB rex.R jno rex.WRX sub clc lahf push cmp loopne (bad) rex.X loope (bad) icebp (bad) je div jl mov cmp xchg rex icebp mov adc mov mov sub out pop (bad) cmpsb clc xchg cmpl adc mov xlat add gs adc cld (bad) or fdiv mov lret clc fucomip movsb cmc pop add lea jb jnp lock std (bad) or mov rex.RB push rex.X (bad) rex.WRX rex.WRX rex.XB sub jmpq sti and test stos jp sbb mov rex rex.WB jnp iret and jbe push std (bad) or retq (bad) leaveq sbb xor js rolb movabs sbb pop push jnp std roll push mov cmp mov fisttp mov pop sbb retq push roll addr32 sub xchg inc neg pop or rex.X rex.WXB movabs sub iret stos (bad) rorl rex.XB add cld (bad) xor sub (bad) rex.WX rcll or push (bad) jmpq lret callq ss rex.WR rcrl rex.R insl (bad) ja jns clc push frstor pop rex.WRX jmp loope rex.XB (bad) inc fildll stos lock mov fs and mov adc pop xor xor sbb nop (bad) xor rcrl (bad) rex.WXB loope (bad) movabs cwtl js jge mov adc mov fimul lret mov cmovne rex.W cmp xor (bad) notl test rex.WX cmpsl fistpl rex.RB rex.WXB jno vpmuludq (bad) fwait repz push cmpsl loope mov (bad) subl or nop xchg pop or rex.WB pop rcr jb scas sbb ss fs (bad) fucom cmpb mov xchg (bad) xchg ficom add test repz cmp adc add jp (bad) rex.W jbe movabs sub rex.WR (bad) icebp leaveq stos imul std test (bad) fnsave adcb orb loopne mov and repz xchg movabs retq (bad) and out ds mov add outsb sub sub (bad) (bad) push (bad) xchg mov push hlt repz (bad) testl loopl pop and mov push movabs push scas or gs (bad) movl (bad) shrl imul movslq leaveq mov icebp movabs stc (bad) rex.WX gs and cli lods int3 rorb rex.X iret mov or add int3 mov mov jrcxz movabs sbb add rex.WR mov lahf (bad) push outsl mov retq push out movsl rol sbb sub cld fwait retq movabs or jrcxz rex.WB mov push rex.XB xchg (bad) int3 add out or sub movabs mov lock and pop in (bad) mov (bad) jns rex.XB fidivl (bad) repz mov flds (bad) test ss jmpq sar lods sahf sbb mov loopne (bad) adc mov fnsave xchg sub mov jo mov outsl int movabs imul (bad) or movabs rex.RXB or rex.WRXB fcmovu jno enterq rex.XB (bad) outsb nop and adc (bad) or rolb loop pop cmp cwtl loopne (bad) enterq adc cmp pop ss jnp (bad) repz sahf (bad) push nop sbb or jp stc pushq (bad) fimul loop movsl lock fildl retq lret sub cwtl cmp xchg jg test popfq rol mov rex.RB rex.WRXB andl sbb int3 sub fs clc push pop mov hlt lea callq movabs jbe imul scas sbb movabs scas mov cmpsl adc pushq and outsb xchg sub sbb xlat (bad) callq scas imul adc fcompl shlb mov test (bad) xchg jno cmc test std mov jbe mov (bad) fbstp imul (bad) cltd cmp shll mov rorl in fsubp fsubrs repnz xchg xor sub idivl xsetbv sub jno and pushfq and loope sbbl mov (bad) pop shr and adc ss jrcxz pushq sarl test iret hlt mov mov repnz pop out cmpsb jp fldenv jl mov insl rex.WB fisttp fwait std jrcxz jnp mov cmpsb rorb ror rcll adc (bad) rex.RX xchg cld (bad) mov retq fimul push pushq (bad) or rex.WRX xor (bad) push xchg adc pushfq imul pop fistpll mov cli xor (bad) mov and (bad) xor (bad) movsl rex.WRB (bad) xor lods enterq test pop (bad) or (bad) mov test hlt (bad) (bad) iret cmp pop add (bad) (bad) scas jno add sub pop je adcl (bad) mov (bad) (bad) es scas rcrl fnstsw (bad) rex.WRB test movslq fcoml sub push shl (bad) xchg movsb scas mov movabs movabs icebp xchg cmp or rex.RB sub sarl jl (bad) (bad) xor mov (bad) xor mov push (bad) negl mov fdivr rex.RXB in (bad) push nop rex.WRX fimul fs cmpsl rorl cmp add imul mov cmpsb int xor xchg jbe pop (bad) rex.XB ja mov movslq lock push clc repnz xor xchg rcrl jmp (bad) or roll mov (bad) rex.WX xor out and mov xlat (bad) je lret mov xchg callq scas xor or pop (bad) or movabs mov jo fnstsw imul cmp cld jae xchg popfq jmp insb jg or shlb jne sbb and rep rex.WRXB addr32 shrl addl imull movabs cmp jl (bad) iret lret js mov mov jb pop xchg leaveq shll punpckldq jae roll fldenv test movabs xor movabs insb jns pop xchg shl enterq (bad) movabs movabs (bad) jge push or xchg xchg out and movabs jns movabs and leaveq or sarl unpcklps sbb push lret sbb jle mov outsl xchg mov lods mov cli xchg rcll movsb fsub rorb rorl (bad) loope adc rcr sbb rex.X mov test cli loop pushq (bad) (bad) stc rcll jbe std hlt (bad) imul cmp fwait sub rex.R rex.B push ror add cmc mov (bad) add (bad) (bad) mov loope ss je (bad) push sub imul rex.WRXB rex.B pushq ja (bad) iret sahf test outsb sbb (bad) hlt pop mov mov rclb (bad) mov (bad) rorl shl push mov pop mov data16 pushfq (bad) pushq (bad) jne or int3 testb sub add rex.W lods sahf sub cmp pop xor jp movsl testl mov xchg test imul cwtl mov lret xor mov scas jle int3 repz gs repnz cli icebp repnz rcrl mov mov (bad) cld outsl rcl sarl fwait in jne (bad) vmovupd mov movslq rorl rex.WRB rex.RX jp shrl sub xor loop mov sarb xor or rex.WRXB enterq mov push adc fisubr fld add xchg data16 cli mov xlat sahf cltd movsl rcrl xchg (bad) cmpsb in rorl in rex.WR fistl rex.B mov xchg pop rex.WRXB test pop fsubrl callq cmp rcrl lea and (bad) popfq rex.RB sub cmpsb xchg adc add (bad) fild sbb int mov rcrl mov pop icebp int3 xchg cmpsl test testl sub retq cli or sub pop jno jae pop sbb (bad) lret mov (bad) xor (bad) cmp xchg (bad) add rex.RX rcll cld scas shl rex.XB (bad) xchg clc retq mov add mov rex and loop add shll rex.WRX sarl pop lret jae and xchg stos sub (bad) cs mov cmp pop movsb cli std and shrl or hlt xchg loop shll (bad) pop pop pop insb cmp rcrl (bad) icebp int (bad) and (bad) stos rex.WXB fxch roll fwait loope cmpsb in sub push xor (bad) stos (bad) stos (bad) pop xchg iret and je push mov mov xchg adc rex.XB sub pop jo lret fildl movabs xchg popfq rex.R (bad) sahf repz imul (bad) xchg (bad) fisubrl sub adc sbb cmp repnz lods cli xor (bad) je sub jmp (bad) cmc xchg adc divb mov adc cmp xchg sub xlat loope ja movabs rcl adc (bad) ja (bad) out mov repnz ficoml jnp sub push rex.RB cmp sbb movabs jne add jmpq test callq cmp mov cmp xor mov out mov mov xchg rcll rex.WRB adc xchg lock or insb rcll (bad) mov (bad) mov mov xchg sahf scas add xchg (bad) rex.R rcl sub out (bad) shrl mov and movabs push add push (bad) fistpll mov fidivl add and stos or (bad) xchg fcmove sbb (bad) flds jns test pushq in (bad) leaveq rcll int3 rex.WX xor out rex.RXB fdivl mov mov xchg mov (bad) rcrl rex.X pushq or (bad) callq mov test fdivl fstpt adc (bad) rcrb lahf (bad) shrb outsl sbb rex.WR loopne sarl mov pushq xchg rex.B sbb es shrb (bad) jle xchg or gs rex.XB lods lret hlt or and scas lahf and add (bad) jge rcll jrcxz pop cmp (bad) insl push outsb sbb mov shll rorl data16 idivb rcll lret lock pop jle rex.WRX add cltd xor repz (bad) rex.WRB in mov ffreep outsl int3 lret fxch lret bnd scas jbe add mov or loope icebp fcomps shrl stos orl fistpl (bad) lods sbb (bad) (bad) test pushq (bad) sbb xchg (bad) cmpsb and cltd cmpnleps roll xchg or jmp icebp sub cld (bad) rcl sti sbb cwtl ds std mov add leaveq rex.X rex.W lret mov sar shr (bad) (bad) mov test jmpq jle cmpsl insb push jns test and add shrl pushq xchg cli shll xchg ds mov in rorl add cltd jmp rcrl es rcrl mov rcrl adc sub xchg (bad) lea (bad) (bad) or jno xor xchg pop sarl sahf movabs cmpsb fs cwtl adc retq mov cmc xor jo add or rcrb (bad) pop shrl lods push icebp mov lret fisubr (bad) iret (bad) cmp push out repnz popfq pop pop (bad) hlt pop mov xor jns sbb add push xchg in sahf rcll sbb popfq jp pushfq repz fistpll (bad) icebp mul (bad) pxor (bad) (bad) test and or fcmovnu cltd (bad) rex.B jl (bad) sub std lret and loopne (bad) or jp add in xor pushfq jp mov out cmp leaveq sub out cmp push sbb loop shll retq fwait and sbb rex.WX cmp movslq mov (bad) and fcmovu xchg add add and and rcl jrcxz mov stc mov mov out jbe (bad) mov push rex.RB add je (bad) sahf out add nop rex.WX (bad) cwtl mov adc loope pop std and rex.WR mov sbb ror pop and mov movsb in sbb rex.B fmull mov ficoml std sar (bad) cmp movabs callq and lods movb stc (bad) ror sub sarl movabs rolb xor adc mov cli (bad) xchg (bad) push push loop clc jno mov and mov (bad) cli retq iret sbb xchg (bad) roll jmpq addr32 leaveq pop (bad) es jmp rol add xchg roll pop rol pushq cld pop cmpsb data16 gs fwait (bad) insb push (bad) and outsb rex.X rex.R xchg mov push and enterq jg rex.WRX cmp fidivrl sahf shr add cltd (bad) cmp (bad) or fildl (bad) loop fdivs sbb xor and fdivl mov ss callq (bad) mov rcrl push pop push xchg (bad) mov negl (bad) movaps rcl jae callq lea (bad) or push sbb test pop out xor rex.WRB sbbl rex.WRB rex.R rex.RX (bad) (bad) mov (bad) xlat (bad) loopne xchg hlt outsb es (bad) mov adc rex.RB or pop pop and test cs xor rex.RX mov shr mov add rex.RXB test cmc adc repnz (bad) xor sarl mov push ds addr32 (bad) lock add xor enterq pushq scas roll xor pop cmp jno xchg (bad) sub (bad) jmp (bad) (bad) repnz out (bad) mov movabs rex.WXB ja callq es or leaveq fnstsw (bad) (bad) (bad) (bad) add rex.RX mov mov jrcxz pushq mov test retq sub scas or scas cltd mov mov mov js loopne sbb fstpt mov adc fs mov (bad) jnp (bad) mov in shlb rex.WB movabs retq (bad) rex.WRX lods mov adc push (bad) xchg lret popfq jns xor adc mov mov sbb (bad) cmp stos rex.WB adc (bad) rex.WR repnz adc iret test iret or rex.WR or dec adc enterq mov mov (bad) xor cmpsl hlt rcll jb mov pop mov jo repz js adc xchg add jl std incl shrq pop cmpsl (bad) andl mov jle sub cmp (bad) jge test rex.WX push xor shr jle or mov add shr rcrl sbb cli and mov rex.W (bad) jmpq lahf test (bad) mov push scas (bad) rcll mov hlt jno and rol xlat movsl (bad) lock clc cmp rorl lea add fucomip int and rex.WRX xchg rex.WXB or add rcrl push out loop jle add cmp rex.R fwait lods test movabs fscale add lea sbb cmp jrcxz out std mov xchg mov (bad) sahf jmpq mov mov cmp and add rex.WRXB cmc jp (bad) push insl retq xor sub jns mov rcl out psubsw repz (bad) and pop imul test (bad) stc lret jae (bad) sahf and sarl or (bad) sub roll enterq mov rex.WRX mov jmp fs mov sarl (bad) and jrcxz add test repz cmp retq callq outsl pop in fstl jl sbb and cmp jno rex.RX shrl rex.WX xchg rex.B or callq shrl mov mov clc pop movsb adc push xor rex.XB cmpsb adc ss in movsl push (bad) jbe and retq movsb movslq (bad) rex.RXB push jmp jbe ror cli rex.B or (bad) (bad) mov mov jmp xchg add fsubrp xchg es sub retq pop cmc mov xor es ds xor pop mov push sarb jo fsubs rex.B es repnz out sbb and rex.RXB rex.XB fldl iret lods (bad) shlb fsubrs add mov or sub movabs (bad) rex.WRX lods je (bad) sarl (bad) (bad) (bad) mov pushfq loopne rex.WRB movabs jo movabs and push rex.RXB cmp mov out loope movabs cmp (bad) fs icebp (bad) mov shll xchg mov xor testb xor cmp jmpq mov leaveq je (bad) xor movabs (bad) jrcxz sub imul mov cmp jo add (bad) repz cwtl pushq xchg jl mov (bad) jp insb sub (bad) scas ror xor add sub xor loop jae (bad) lock rex.WXB shrl xchg mov gs jne repnz lahf pushfq and shl xor mov (bad) scas sub fstpl lret or mov mov (bad) push ja mov xchg retq (bad) adc out push leaveq xchg xchg retq (bad) outsl out (bad) cltd mov loop mov nop sub fdivrs rcrl xor cld jg mov sub lret (bad) jno outsb push xlat imul fs (bad) rex.WRXB lock xor shrl fbstp pop jrcxz in sarl pop mov mov (bad) (bad) xchg incb loop movabs mov rex.W lock rex.RB (bad) jp rex.X mov jmpq (bad) sbb rex.WRXB add or xchg jp getsec adc mov rol shlb rcrl pushq (bad) je loop (bad) scas adc jge cltd cmc xchg insb xchg mov pop lret or test fwait xor (bad) mov jns jrcxz cmpsb int3 cmp adc mov stos iret stos out (bad) pop (bad) test sbb int xor (bad) hlt callq imulb loope add je rcrl mov stc fiadd shr rex.XB in lea (bad) xchg loope sub enterq mov cmc jp xchg rex.RX hlt xchg std test (bad) (bad) mov xorl mov addl rcll xchg xor cmp jno leaveq rex.WX enterq pushq xor rex.WRXB (bad) mov (bad) stos ror addr32 jrcxz adc rex.X test (bad) rex.WXB nop outsb shrl retq or rcrl rclb mov mov repz cmp xchg imul mov xchg stos xchg xchg xlat stos movsl rex.WRXB es movabs and rcrb ds and (bad) fucomip xchg iret fs fiadd mov rex.W add iret rex.XB rex.RXB leaveq sahf retq xchg repnz scas xor loopne imul mov clc cltd loope int3 push (bad) adc cli sub xchg mov and nop enterq (bad) add cmc pop add (bad) mov adc enterq rex.WXB (bad) jg fnstcw add retq xor mov (bad) in jle sete mov add or jb clc out and int3 cmc (bad) (bad) fbld xor add jmpq fisttp or cmp (bad) or movabs pushq (bad) pop and mov test (bad) jno rcl jo cli xchg movsb pop or dec shrl callq push jnp sarl (bad) xchg (bad) sub shll test ss notl xor mov xchg stc ror fsubr or shll (bad) je jnp and sbb shr clc xor jbe rex.W rex.WX (bad) sbb sarl rex.RB lock (bad) rcr add push mov (bad) ds mov (bad) jle in lock imull int3 je xor movsl add sub pushfq rex.WRXB jnp jmpq rex.RXB jno push push push or callq mov out pop and imul sbb shr push loop movsl jg retq (bad) scas (bad) xlat mov and add rex.WRXB and lret mov (bad) movslq add movabs (bad) iret (bad) xor movabs mov sti ficom int jns mov ja mov fld imul (bad) (bad) rol add add xchg rcrl (bad) cwtl test popfq adc rex.WRXB xor (bad) xchg or (bad) lahf out mov incb xor movb add fidivr rcll (bad) push lods test rorl mull sbb callq adc fisttp (bad) vpsubw mov (bad) xor (bad) fs loop jle cmpl rex.B clts sbb in sarl and lret push sub (bad) sub add cmp ds (bad) stos (bad) cmc (bad) cltd jrcxz jg enterq add xor shrl add (bad) lods push pushfq adc sbb loope lret out cmpsb jbe and cmp xchg test push std pop loopne je (bad) movsl (bad) or rex.WXB std rorb (bad) iret shll ss lret in movsl adc lods popfq add retq std pop or adcl stc rex fs sub subl cmp sub shll out fldcw lods nop jle imul jns,pn pop xchg mov lods fiaddl adc flds callq test lret rex.WRX gs test pushq push loop (bad) fs (bad) pushq push jrcxz fdivrs sti loope mov mov test xor rcll shld cs jb cli sub rol test add rex.X clc mov subl adc xchg fisubl (bad) jns pop jo repz movsl (bad) ror rol push fldenv js jnp in xchg lret (bad) sbbl (bad) xor add rex.WB fs jo (bad) jmp add outsl rex.R sbb leaveq cs movabs and decb fs (bad) pop jle stos rex.WRXB xchg movabs loope pop mov imul jle (bad) and fsubrl push (bad) inc lods jl shrl retq or sar pop jns imull (bad) rex.XB shlb rorl jge stc (bad) mov loope mov neg movabs outsl ja (bad) cwtl cmp and mov imul or repnz (bad) jno adc lahf std (bad) mov xchg sti sub out rex.RXB (bad) jge and mov adc mov add add insb xchg (bad) lods (bad) push jge nop orl movabs mov mov adc mov (bad) fwait mov mov xor add xor mov (bad) rcll (bad) pop lods in rex xchg rex.B lods (bad) xchg imul lret sbb orl or repz mov rcrl (bad) scas movabs mov jae popfq rcll or (bad) jl clc sub pop mov mov movabs adc (bad) adc popfq mov imul repz (bad) rex.WB movsl out test mov add and mov fcmovb mov adc push insl (bad) xor mov movsl subb lret rex.XB rex.X lahf pop xchg fcmovne callq (bad) leaveq movabs enterq (bad) incb (bad) jno (bad) in in adc mov jo add subl sub (bad) lret rex.B repnz (bad) push leaveq jmpq lods sub movsb jp rex.W (bad) (bad) mov negl cmp and loop lock (bad) movabs fsubr clc add insb popfq (bad) (bad) xor rex.RXB (bad) pushq jno movabs or test xlat xor pop fdivrl imul lahf cmc rex.W callq cmp int3 xlat sub sarb jle movabs (bad) and jae pushq rcr out notb mov fimull sarl test rclb cmp mov rcr (bad) adc (bad) sbb (bad) rex.XB in retq xor mov sub fildl imul xchg (bad) jo roll cmp and and loopne negb rcrl (bad) es add adc int cmp xchg cmpsb or mov jmpq mov rex.XB divl xor mov add cwtl mov rcll loope rex.RXB xchg (bad) (bad) gs (bad) jb out lea int3 retq test rex.WX loopne mov jg mov (bad) rex.W movsl cld repnz rorb pop xor icebp (bad) adc repz sub (bad) je scas rex.WRXB fcoml leaveq adcb je cmpsb and ja sub (bad) adc imul ficompl rex.WR or rcrl loope bnd add imul int3 xlat out and mov xor jno xor lret mov test sarl mov adc jmp subb adc (bad) (bad) insl shrl or rclb pop imul movabs jno or xchg movabs rex.R xor retq sbb adc stc mov (bad) ja insb (bad) sbb movabs add pop cmp or sub xor lret (bad) gs xor cwtl (bad) lock mov mov (bad) scas jb out pushq es adc or push (bad) cwtl test (bad) jg xchg int adc rorl adc rex.WX repnz fsub mov test repnz mov rex.W movabs xchg mov rcll out or rex.R and sbb nop (bad) ror sti adc xor rorl (bad) cmp jb loop cmpsl addr32 xor faddp xchg sti xor cmp movabs mov loopne (bad) stos loop retq pop add jmpq mov sbbl hlt lods sub cmpsl shl in push xor cmc mov xchg (bad) hlt cmpsl (bad) loopne test xchg ss (bad) sub xchg lret loop popq (bad) mov (bad) movabs shll popfq mov (bad) fimul je rorl lahf sub adc mov mov sub rex.WB fadd sbb in out push ffree ja mov mov test rcrb shrl (bad) data16 sbb ficomp fdivrs (bad) xchg pop (bad) test shrl mov xor shr push (bad) cld pop stos (bad) movabs sbbl callq (bad) rex.XB mov mov icebp sbb test callq add fmulp cmp jae enterq pop add orl jge (bad) lret and add cmp push xor sub add adc jle add sbb add mov or icebp mov fisttpll (bad) sub rex.RB adc movabs mov mov jl rex.B addr32 rcr jae sbb sahf outsb lret push sti mov jp (bad) pop rex.X shrb imulb (bad) outsb (bad) or popfq ror pushq and int3 cld (bad) neg mov (bad) movabs enterq pop repnz movabs pop xchg fistl js fwait jp sar or sbb and shrl (bad) jp or xor or jae mov xchg lret fistpll mov shll adc fisubrl stos clc fdivs movabs and test test stos (bad) rex mov scas mov fstps adc or jge (bad) mov (bad) ja in mov lods xorl lods push test rex.XB (bad) mov mov test xlat xchg stc mov notl xchg jle js iret retq (bad) jbe xchg out pop (bad) or lahf (bad) movabs insb mov and mov fimul lods cmp out cmpl shrb rex.X adc pushq xor shlb leaveq mov rcr rol (bad) or imul insl paddsw xor (bad) cltd js cli repz retq imul xor fadd rex (bad) xor rcrl (bad) pop sarl retq scas (bad) xchg loope int3 sbb fldl rex.XB ds lahf jns rol ss outsl jg icebp sahf rex.B scas mov jae add sbb lea or sub (bad) rorl push sarb or (bad) cmc (bad) (bad) jbe lock in (bad) rcrl rex.W mov sub loope (bad) icebp rex.X repnz (bad) int3 (bad) movabs loop (bad) movabs rex.RX lret xor mov mov xor lahf mov data16 stc xchg movabs cli (bad) rex.B sbb (bad) pop sub (bad) loop mov sarl pop mov data16 add pushq pop sbb lret (bad) movsl rex.WB cmpsb mov shll retq fiaddl icebp mov (bad) nop sub cmp rex.B movsb (bad) fldenv sbb and xor rex.WXB mov pop out and cs shrl cmp stos adcl shrl insb sub icebp (bad) int3 movsb mov sub rex.B rex.RXB pop (bad) loope xchg jmp repnz cmovne cwtl mov xchg push icebp (bad) stos leaveq cmp sub adc imul and mov int pop mov (bad) mov in rex.WRXB hlt std (bad) sti or add xor or scas xchg sbb rex.R (bad) jge push (bad) add cmp ss sbb cs hlt mulb mov and mov rex.WB (bad) lahf sbb rcrl push clc or (bad) cmp (bad) stc rex.R mov add (bad) (bad) shll mov fdiv sar xchg clc scas fwait mov (bad) rex (bad) insb push shrl lock rcrl xchg mov jnp rex.WX mov xchg pushq repnz sub in (bad) (bad) rex.RB or nop mov loop (bad) out fs sbb rex xor shl movabs cmp mov loope (bad) sub jae sbb adc (bad) loop cmp movabs jns (bad) lret clc (bad) rcr incb push fdivs icebp (bad) (bad) xor jrcxz pushq or mov cmp outsl jl xchg jrcxz pop movsb rorl sbb ds jmpq (bad) rex.RB lea xchg js (bad) jae add outsl hlt rcl sbb ror out sub rex.XB sbb shll or xor or leaveq flds test cmpsb jns test and xchg retq sbb js fnsave movabs xor std (bad) push pop shll xchg xchg sbbl (bad) out sbb add je (bad) loope leaveq pop (bad) xor xchg icebp sub mov psllq mov loope sarb cmp fs rcl in (bad) mov movsb lock rex.WRB mov lret and shll stos int adc (bad) sbb pop lods mov inc sbb movabs pop push sub retq xchg mov int stos jp sub add or rorl jne (bad) sbb (bad) (bad) es mov sbb add xor popfq cld lret sar pop rex.WXB roll adc (bad) pushq pop (bad) sbb (bad) or rex.WB roll sub sub push stos mov or shr push rcl loope cmp rcrl lret (bad) (bad) imul movabs out or (bad) leaveq popfq cmc test rex.WXB repz ds cltd (bad) and outsb or xchg (bad) xor adc shr (bad) outsb xor rol sbb fild int mov js lock rorl lret data16 (bad) add or stos outsl mov movabs jrcxz (bad) xor (bad) imul and (bad) mov mov sub es jmp shll movslq cmp xor and (bad) (bad) sbbb cmp xchg and loop rex.B es scas (bad) pop jns fwait test ja (bad) rex.R xchg (bad) insb xchg sub jrcxz sarb push xor repnz test (bad) add jge add adc rex.R iret rex.WB rol mov cld sarb adc pop in sub ss xlat jp sub rcll hlt mov repz rorl jbe stc rex.XB mov jne lret rex.WXB out in dec xchg notl loop movabs mov rex.WR pop scas (bad) es fldcw and decl jmp retq lret movabs pop cmp rex.B xchg (bad) mov jl (bad) jmpq fbstp rclb add rex.B xlat sbb push (bad) jb adc int mov push xorl (bad) and sbb pop and imul pop xchg cmpl xorb (bad) outsl repz (bad) roll (bad) xchg mov (bad) je rorl loopne mov rex mov cwtl out rcl int3 mov sarl cmp int3 lods or hlt adc movabs movabs stos or sbb int fs lock fcmove mov and imul mov decl rolb mov (bad) mov (bad) rex.WRX mov mov f2xm1 rolb adc je (bad) xchg sub (bad) xchg shl rex.XB jae imul and (bad) movsb fimul in cmp rex.WB lret movabs (bad) cmp mov xchg jb mov sub movabs cmp (bad) movabs cmpsl xchg fildll lods test lea add jno or retq mov negb fsubrl or std mov movabs retq cwtl sar rolb mov js outsl sub repnz cltd add xchg js sarl add pop (bad) movabs pop cmpsb or movslq idivb mov shll and rex.RX (bad) clc (bad) and pop adc rcr add add movabs int3 icebp jg mov retq cli je (bad) ss repz leaveq adc rcrl jno sub (bad) cs jnp adcl rex.WR mov cmp movabs movslq shrb movabs orl (bad) test test cmp adc in adc pop outsb push jns (bad) imul add xor or rex.WR (bad) fmul outsb rex.B (bad) mov test xor shlb jl out adc sti xor jg and sarb jae or cmpsb lods rcr (bad) (bad) out mov lahf lret in or outsl (bad) imul (bad) je sub pop add xchg (bad) jne repnz jp shlb pop cmp add movsb add (bad) js mov out (bad) fwait xchg test leaveq mov clc xchg outsl xor (bad) rorl leaveq mov adc jp rex.R (bad) (bad) je cmc test sbb imul (bad) sub out loope sarb mov jge lret pushfq add shrl jbe nop sub rex.W pop (bad) test hlt mov push roll add popfq cmpsb adc repz cmc test jl rex.WRB cwtl add xor jo rcr outsb rex.WRXB rex.RX int jmp cwtl in sub sahf add cmp cmp test rex.WRB (bad) jmp out xchg mov (bad) rex.WXB sub movabs rcr cmp stos jmpq movabs add mull (bad) add std stc (bad) js (bad) mov (bad) or test (bad) mov lret add (bad) in add scas sarl fwait jns rcrl rex.RXB mov pushfq js rcll ds rorl cmpl (bad) callq outsb and rcl data16 add push movabs out rclb rex.W xor fadds xchg mov cmp rolb xchg out out jno sbb (bad) pop stc jrcxz sti in cli mov push and enterq lea fcoms pop sbb mov cmp (bad) jle rex.R test add and rex.RXB rex.WRX cmp (bad) lods movabs jnp jge mov jp cmp pushfq mov xlat (bad) cmc int sub (bad) mov sbb rol (bad) mov test rex.B out (bad) cwtl movabs test movsb (bad) movsb rex.B (bad) (bad) loop push push push xchg imul rcll jne (bad) rex.WR mov std lock cmp outsl (bad) shll adc (bad) (bad) jae xchg jns repnz (bad) cmc test xchg popfq and push rcll (bad) add in (bad) xchg (bad) sub (bad) test and mov rcl (bad) stos sbb push pop rcr jne icebp add shll and or fistl xchg mov pop nop pop mov imul scas add out pop jmpq rex.WXB enterq outsl divl divl test (bad) sub jne xor insl jne fistl sub xchg mov (bad) sbb insb jle xchg imul (bad) mov enterq out cwtl mov mov rex.B sbb jnp mov stc (bad) (bad) (bad) pushfq movabs sub (bad) test ds (bad) outsl loop cwtl leaveq sahf sbb (bad) callq lahf sar rex.RXB shll outsb icebp pop sti mov xchg (bad) jns shl es pushq push pop jo (bad) vpaddusw pop scas fldcw (bad) or or mov xchg rcl rex.RXB sarl insl sub lret add movsl (bad) mov imul (bad) int3 mov fldcw push rcr (bad) mov callq xlat mov mov (bad) sub or lret xor cmp xor loope (bad) cmp rcl scas jno mov rex.RB xor popfq push enterq pop (bad) mov xor sub in bnd shl data16 (bad) movabs or xlat xor (bad) mov idivl sbb clc testl jp mov or xchg push pushq mov fcomp (bad) loopne lret (bad) mov mov (bad) mov mov add rex.RXB loop xchg xchg jo fnstenv or popfq nop add sub or cmp xchg jns jb pushq movabs mov fndisi(8087 sbb jle rex.B rex.W rex.RX or mov sbb stc jle loope int3 movabs adc push (bad) retq lods movsl pop jno in mov sbb adc rex.XB lret rex.B xchg lret roll sub pop scas rex.RB lahf sbb (bad) icebp jno mov movsl outsb mov xor fld jae and cmp xor rol mov or add (bad) std pop add cld mov (bad) jo sbb movabs and test or xor shrl (bad) xor rorb mov outsb lods cli rex.WRXB fistl rol pop cmpl sub rex.WXB (bad) cwtl cmpsb sbb (bad) (bad) rcr (bad) mov cmp mov callq xchg (bad) test sahf mov sahf add jmp idiv rorl xchg jg sbb enterq jle (bad) rex.WXB shll mov adc xchg data16 cmpsb rex.B cwtl movabs jge (bad) adc in mov push retq cltd xchg lods outsb pop sub (bad) rcl (bad) pop pop out cmpsb (bad) or rex.WRX (bad) fiadd (bad) retq movabs retq shll push in xchg (bad) movabs loop or push mov jg js rex.RB rcll jae cmpsb xchg sbb icebp (bad) in (bad) mov (bad) (bad) or rex.WXB lret (bad) push imul out fs mov mov icebp fcoml mov int3 test cmp sti out add leaveq rolb scas in add cld add imul popfq fistpl xor adc (bad) enterq std (bad) xor (bad) xchg pushq cld and (bad) lret pop sete cmp and retq xor pop fild adc push addr32 lock mov imul movsb pop xchg rcl scas fnstenv push stos test (bad) jmpq adc shl (bad) lahf rex.R mov lock cmp (bad) sbb xor (bad) cli out xlat movabs xor (bad) (bad) rorl and (bad) lret cli (bad) or mov (bad) fisubr ss sub (bad) sub xchg sbb (bad) mov movabs (bad) ds adc add out rol add sub and rorl cltd movsb shrd loopne in mov movsl xchg mov (bad) lods rex.RXB repnz out es lea rol movabs or dec andl xchg retq add mov rcrl fisubrl (bad) rcll jp rex.WB addr32 xchg nop push cmp sub sub fist clc jae faddp mov ds add outsl (bad) movabs adc (bad) mov (bad) pop ffreep xor (bad) jmp stos in icebp jae ficom (bad) xchg movabs sarl fistpll rorl (bad) push rorl lods (bad) pop jne jae rex.B add push test mov adc jnp rex.B xor ror sub (bad) (bad) fnsave rex.B lock stc xor (bad) jmpq sub (bad) repz (bad) push (bad) rex.WX jrcxz pop sbb (bad) jp sahf rex.WR movabs add (bad) and xlat cli hlt push mov xchg and in mov in movsb sbb adc pushq (bad) push in sub or xor rex.WB rex.R lret jge xchg sub add adc mov add fild rex.R int imul rex.RX rex.WRX fcomps rex.WR adc stc (bad) mov mov sub cld mov or lods sub imull rex.WRXB (bad) loopne rex.WRB lods rex.WRX sahf int3 outsb movsl mov sub out repnz jno iret movslq and rcll fcomps mov cmp sub jb add or jrcxz int jno std rex.W jl loopne xchg (bad) fldenv (bad) add mov mov jno cwtl subl fwait sub adc rex.W int3 retq xor (bad) jns jns jo mov fimul jne or mov mov jp cmp int (bad) (bad) pop gs (bad) jns mov in movsl leaveq rcll rex.B imul push lods jp jnp sbbb rex.RX jb rex.R rex.WR (bad) out hlt jb pushq push rex.W outsb push mov jns test jnp mov loop rex.RB sub out pop xchg lock mov and cli (bad) or shrb fstpl (bad) pop lret or leaveq cmpsb lods int3 sub mov (bad) out (bad) rex.B movabs sub mov jns rex.B (bad) int3 xchg in jae pop andb push popfq and sub (bad) (bad) insb repnz movabs rex.B rex.WR rex.RXB rex.XB retq out rex.WB rex.XB jns fwait mov xchg xchg cwtl or (bad) add stos rex.WX lea sbb ds xor mov rex.WRX movabs stos or mov rex.WB sarl xorb (bad) and pop test lock icebp stos sbb xor rex.WXB and (bad) adc (bad) ds jo and popfq fmul out or cmp imul (bad) mov fnsave out int3 in fcompl int cmpsl rex.W movsl andl or out jae pushfq rex.WRX mov rex.WRXB callq pushq xchg movsb pop rex.WRXB repz jmpq (bad) rex.WRB movabs movabs rex.XB xchg adc jbe test movsl hlt sbb in in callq add repz imul fisubrl (bad) cltd push rex.WR outsb add int3 enterq sub sarl (bad) (bad) ffree rex.WXB (bad) sahf rex.X je cmp jno popfq pop mov cmc cmp xor cmc int (bad) lock lahf sub leaveq adc test movslq jl add jge mov std jno rex.WX and or fistp (bad) js fidivl (bad) icebp in and rex.RXB addr32 add pushq add out decb sbb adc out jne cmp (bad) push nop rex.WRX adc or sub (bad) (bad) jne rex.X (bad) mov je imul adc rex.WXB rex.WX imul adc pushw mov (bad) rex.WRB fdivrl idivb (bad) fistpll fyl2xp1 leaveq repz test cltd mov je pushq sarb sbb add adc nop rex.RXB shr insl jl iret sbb test imul rclb shl rex.X sarl retq repnz (bad) mov rex.XB (bad) lret rex outsl (bad) sti fist add shlb iret (bad) fisttpl rcll mov cmpl int3 cmp mov rex.RB (bad) mov sbb test mov add cmp add xchg hlt test ja movabs fldenv push shll in std js loop roll lods int3 cmpsl xorb movabs (bad) sbb cli rcll cmc xchg cwtl and (bad) mov xchg movabs movslq adc shlb sub (bad) and or mov rex.WRX sbb mov or in (bad) jnp mov mov iret lret push adc jne scas fcmovnb adc imul sarl sbb jrcxz rex.WR mov iret out mov (bad) shll (bad) retq (bad) insb std (bad) xchg add popfq xor nop xchg jo mov lret lock lahf or jae sahf fistl (bad) data16 (bad) scas (bad) (bad) (bad) mov and adc mov pushq xchg insb cmp jp mov sub int3 rex.R lods sti test or or adc sub rex.RB xor adc (bad) jrcxz out adc rex.WRXB mov mov (bad) (bad) test leaveq xor xchg ror mov pop jns bndstx loope jno adc cli (bad) cld cs cli movslq int3 xchg push (bad) rex.WRX (bad) jmpq int3 sarb (bad) and mov ror xor mov repnz movabs add retq cmpsl rex.W rex.RXB or stos adc sbb push sbbb retq pop out add cmp push movabs retq je rex.WRB (bad) (bad) jns xor fimull push icebp add rex.WXB es movslq pop mov add fadds retq xchg sbb sub loope sbb cmp (bad) (bad) loopne cmp sbb and cmp or jge rex.XB rex.WR mov xlat mov out sub stc (bad) mov or or jrcxz or fucom (bad) xlat (bad) xor rex.B outsb scas testb repz imul (bad) repz add rex.WRB test pop mov insb fdivl rex.WRB int3 xchg xor xor xchg je rex.RX icebp (bad) leaveq testb adc mov (bad) (bad) sbb int sub mov rex.W loopne pop xchg in repz push rex.RX addr32 mov fdivrl (bad) sub push cli lods mov jo jmpq mov rex.RX (bad) xor mov cmpsb push jrcxz or mull mov cltd scas (bad) rex.R cmp sarb xchg mov movabs iret lret sub cmc data16 sbb rex.WXB callq push (bad) jns pop repnz stc jae adc jns pop (bad) jle mov mov and sarb fistl sbb (bad) enterq jp pop movb add mov rex.W ss out test mov cs int3 outsb xchg retq movabs mov lret xchg or retq loope hlt xchg repnz stc sbb shr pop adc jl stc sub add int or rorl fld push mull mov in cmp add and sar jnp mov (bad) push test (bad) lret rex.XB imul xchg xchg mov andl (bad) lock shrl pop lods or add movsb (bad) icebp in shrl cltd (bad) repz sub rex.X rex.B rex.X scas rex.RXB es xchg add sbb rex.R rex.RX rol pop adc push (bad) fnstcw orb push out std fistp rcrl gs rclb rcll loopne (bad) xlat jle xor (bad) rcll adc out (bad) mov movabs (bad) jl stc movsl lahf adc fwait and mov pushq test mov (bad) roll (bad) adc sub rcrl lods shrb adc loopne push stos rex.RX (bad) sub sub add sarl fisub sarl movslq outsl (bad) cltd (bad) mov pop movabs rcr sub stc xchg (bad) sub (bad) sub (bad) rex.WX out sahf test (bad) jmp fidivrl (bad) rex.WRXB sub cltd rcrl pop mov (bad) adc xchg xor (bad) sub pop stc mov rex.WRB popfq jge xor add (bad) sub add sub and rcll rorl or cmp in jne and (bad) shrl imul cs clc pop loope add je (bad) xor ja sub enterq pop loop jp rex.B adc mov outsb (bad) imul out sbb jl (bad) js out fdivr std rex.WX icebp pop pushq mov faddp (bad) cmpsb outsl sbb cli pop iret mull or icebp (bad) (bad) mov (bad) (bad) mov std mov pop cmp pushq (bad) add (bad) jb (bad) out mov rex.XB lahf fwait xorl ja rex.WRB pop and add push (bad) pop jmpq and mov xchg (bad) (bad) cwtl (bad) (bad) cmpsl iret subl jle mov xlat adc in sub mov xchg xchg mov rex.W sar (bad) jo push out gs cmp fstpt xor push (bad) mov mov push xlat pushq rcrl cltd stc pop pop pop rorl (bad) (bad) jbe (bad) sub shlw mov rex.WRXB sub cmp push std (bad) lret nop xchg pop mov (bad) xor hlt rex.X rex.WXB sahf scas adc pushfq (bad) sarl fsubs psadbw rex.R ds fwait (bad) cli (bad) pushq (bad) jmp cmp (bad) cmp and cli adc xor rex.RB std pop mov jmpq or bnd jno or repnz mov fs loop jae (bad) shl push jnp rex.WRXB notl jrcxz rex.RX sbb cmp and jle adc jmpq (bad) cmp retq jl cli lret and cmp leaveq cmpsb mov (bad) (bad) enterq movabs sahf sbb (bad) mov push movslq shll or imul stc test rex.XB push shlb (bad) push callq xchg iret fisubr (bad) rex.XB scas (bad) mov movsb fbstp cmp rex.WRX sub sahf ja (bad) cmp fwait hlt (bad) (bad) (bad) (bad) cmp (bad) int push or rex.RXB (bad) pop xchg rcr jmp (bad) mov rex.WRX repnz data16 pop xorl jne icebp xor (bad) repz jbe jo ss shll jo adc sub xchg rex xor fs pop sub rex.RXB rex.WR (bad) (bad) xor pop pop xchg (bad) (bad) sbb xlat push callq test adc rex.W mov cmp mov popfq (bad) jle fldcw loope (bad) int3 (bad) cs cmp (bad) rex.B mov sbb xor rex.R rex.B data16 fldl callq cmp incb outsb (bad) int cmpsb mov sbb xchg retq xor mull mov jne mov jo pop stos xchg mov pushq jno shll sbb int pop (bad) lret (bad) cpuid jno add addr32 sub rex.WB xchg cmpsb pop pop stos xlat rcll fdivl lret (bad) notb mov mov lahf repnz mov fwait test (bad) and (bad) sub lret imull cmp outsb mov gs jno fwait pop and shl mov movb (bad) js (bad) jns jge ror (bad) xchg mov mov xchg adc mov (bad) jmp mov rcr flds vphaddwd loop fldl cmc add jns xchg (bad) (bad) mov rcl sub hlt (bad) movabs (bad) adc stos cltd (bad) ss push (bad) sarl or fsubs mov mov (bad) ss and retq (bad) adc (bad) pushfq (bad) lock in imul jmp pushq jp mov push (bad) push (bad) roll mov adc rex.WRX movabs cld (bad) push pushfq mov lret rcrb xor pop fcom imul rcrl mov rcl xchg data16 sahf push sub or (bad) sub sahf insb mov sbb xor roll mov test or cmp cli out rex.WRX movsl sar (bad) mov xchg (bad) xor cmp (bad) retq ss rorl data16 push push int3 (bad) lods jl rex.RXB (bad) sarl icebp mov testl enterq mov (bad) cmp mov outsb (bad) mov and loope jb movslq rcrb sbb int sti out in fwait adc rcrl (bad) jmp adcb (bad) ffree xchg sub (bad) xlat in int jno xchg mov pop rex.RXB xchg outsl test (bad) (bad) insl int3 cmpsb mov (bad) xchg rex.WRXB cmc jbe pop shll sub mov cmp rcrb rex.XB imul add in adc mov add xchg cmp push add and xchg int3 sub (bad) adc xlat (bad) xchg (bad) ja (bad) jne xchg imul adcb hlt cli lahf in imul (bad) jg mov rex.R (bad) bnd lahf in (bad) rcrl loopne jne enterq xor (bad) sub (bad) rorl cmpsl rex.R rex.WRXB (bad) cmc gs rex.XB test xchg pop cli jmpq sub lret sar xor cltd rex.XB or adc movslq ss or xchg sbb (bad) add jns (bad) mov (bad) xor pop mov (bad) mov cmp (bad) xor mov (bad) push sarl loop (bad) ss iret (bad) xlat and rex and (bad) mov sbb in retq xor lret rcr sub jae pushq movl movabs and (bad) repnz and lret jns stos xor fidivrl and add (bad) rex.WRB mov (bad) push jp movabs addl mov rex.RXB shrl rex.WB cmp pop xchg (bad) rex.W cmp (bad) jo add (bad) push movabs jl or rex (bad) out leaveq roll jrcxz mov or and rcll jb (bad) mov xor sub pop xchg jrcxz retq (bad) incl cwtl (bad) pop adcl testb outsb (bad) sbb scas movabs rex.RX adc movsl push sub movsb sbb jrcxz repz mov rex.X sti add loopne ja cmpsb in outsl sarl retq hlt je ss faddp rex.RB icebp or sub add jns mov mov in out and rorl mov xor ror outsl (bad) (bad) jne sahf sbb rex.RX adc shrl rex.WR xor movabs (bad) js shrl shr sbb (bad) mov std shrl je cld add movabs (bad) xchg rex.R sarl mov roll rex.RX movabs test stc sbb sub movabs (bad) (bad) mov add jo and rcl (bad) cmpsb xchg rex.WRB cmp and pop xchg sbb mov iret rex.WRX fwait mov (bad) (bad) push mov xlat sub roll (bad) sbb enterq mov rex.WRXB rex in rorl adc rex.R push int3 push rcrl rorl (bad) add mov (bad) (bad) hlt (bad) (bad) rorq (bad) lods pop popfq add int3 loope (bad) adc sbb shrl lahf xor rcl adc fadd mov add (bad) rcrb (bad) sub stc (bad) and mov push movabs clc shl xor roll mov sub rex.RXB xchg sub shrl cwtl shrl stc movabs mov rex.B in sti adc int jmpq jno (bad) repz int3 pop mov lods jg lods faddp sahf push (bad) xor push rex.WRX jb rex.RB retq sti mov cld mov shrl stc mov sub cmp (bad) movb cmp xchg mov and ja sub insl lods (bad) mov add (bad) fcomi sbb nop clc movabs pop test rex.RX (bad) rcl adc cmp mov sarl lahf mov clc imul xorl cmp rex.RB rex.B es jmp jne xchg push std test mov decb (bad) adc je jnp out pushq shr loopne xchg jle fs push pushq add xor nop rex.RX rcll mov lock std or or repnz shr cmpsb cmp rex.XB shll sti rex.WR sbb add jbe int3 mov cmp jnp rex.WB gs andl xchg fwait mov (bad) cltd cmp (bad) push mov xor imul and push (bad) cmp cld pop movabs add rcll lock orb andl (bad) rol fsubrl sub lods rex.WRB xor jne adc insb (bad) fwait cmc test lock je mov (bad) lret fldl (bad) jg mov jge xor or insb punpcklwd xorl scas movslq mov sar or mov sub sbb stos (bad) rolb mov ss cmp movb and in cmp addr32 jmp jo or xchg rcll rex shll push (bad) (bad) sub jns test jmp lret (bad) (bad) xchg movsl mov sub cmp not (bad) fidiv rorb adc jbe (bad) jmpq pushq and cld xchg rorb rex.WX cmp sbb (bad) push ror leaveq clc jno jmpq in (bad) xor jp jl pushq fwait sub sahf insl xor and mov mov and mov sbb sub movabs int3 jo int fdivr movabs rex.B sub (bad) jno loop add mov (bad) fldcw int3 repnz pushfq pop mov int mov push movb xchg mov adc push test enterq movabs jno nop (bad) divl jnp out test jne retq adc push xor sbbl and pop pushq int xchg add lods faddl jrcxz pushfq jp rex.WR jno in jae xlat mov push movabs lahf mov rex.RXB adc add out xchg add mov (bad) xchg icebp rex.WR cltd enterq xor out xor insb fistpll out mov test mov subl rex.RXB lock add mov cmp test rolb loopne lahf rex.WRX pop negl sbb jno (bad) (bad) fsubl mov pushq (bad) enterq sarb xor jno lret pushq int3 and insl (bad) test loopne adc rex.WRX mov mov mov sbbl xchg xchg (bad) mov xchg (bad) jmp push mov xchg and rex.W insl test adc (bad) (bad) movsb (bad) (bad) repnz loopne sbb or xchg adc in nop rex add fadd div add test rex.WRXB js push mov push or mov lods movabs pop jno (bad) jns (bad) lods lahf mov std (bad) fisttp adcl movb cmp in rex.WRXB jno repnz movslq jmpq (bad) (bad) and out sub mov iret cwtl xchg mov cmpsb retq loope (bad) fistp rex.X es enterq lea pop pop and fidiv xchg sbb jrcxz movabs jbe enterq int3 fdivl movabs jle sbb jnp ss jbe jno stc adc or ja movabs mov enterq lret rex.R mov mov xor (bad) addb imull jl xchg cltd sbb (bad) push retq fimull lods adc shlb (bad) loope or cmpl repnz sbb mov loop (bad) xchg cmp cmp callq jmpq jp clc (bad) test jmp (bad) rcrb stos mov adc jge adc int3 fs rex.RXB fisttpll or rex.RB sub fisttp cmpsl movabs jnp jo or rex.R (bad) (bad) (bad) shrb mov leaveq or jmp pop or fadds outsl mov xchg mov loopne (bad) fst movabs jle lret xchg add lock mov int jmpq (bad) sahf fistl (bad) push fbld jmpq sub rex.X gs nop stos outsl enterq mov nop fcmovne adc hlt pop jae sbb rex.B cmpsl movabs and jo pop jnp callq and nop mov sub add add xor cmpsb cmp lret (bad) rex.W rex.WXB rex.WR lret in push rex.WRXB mov int3 (bad) jrcxz movabs sbb lret (bad) mov push sahf push pop rex.X js rex.XB retq mulb (bad) mov mov xlat cmp (bad) fild cmc rex.WRX push in cmp sub mov cmp jbe add retq rex.WB sub retq xchg pop in and mov cwtl lock mov and xchg sbb mov imul fisttp (bad) (bad) sbb sbb xor loopne mov lock rex.WRXB sahf cli cltd clc leaveq in fdivp (bad) jno xlat xor mov (bad) rex.WB rex.X rex.WR movsl int3 iret shlb movabs in lods fcoml fsubs loope (bad) fmul pushfq and and int (bad) or xlat imul mov rex.RXB and mov xchg cli rex.RB rex.W and xchg in lret (bad) rep movl push repz negb jne lea jmpq stc je add pop xchg (bad) mov xor rcrb (bad) fmul rcll mov (bad) fildl jmpq fidivr cmpsl cli sbb mov in (bad) (bad) mov test cmp rex.WXB stc rex.R (bad) sub xchg rex.B xchg (bad) xchg rex.WB (bad) or rex.RX pop pop (bad) clc add adc callq (bad) fidivl jg (bad) movabs fidivr (bad) mov rex.WRX jge push cwtl (bad) add rex.WRXB addr32 rex.WRXB jle (bad) ja cmp pop pop nop push rex.X mov rex.RB loopne xlat enterq or lahf or rex.XB bnd in rolb lret sub (bad) rex.WRX rex.RXB out rex.RX (bad) jo (bad) xor xchg jbe out (bad) rex.RX cli or int3 (bad) rex.WRB rex.WR pop or rex.WRB and mov stos sbb icebp pop stos push mov ficom mov jae mov test mov xorl xchg (bad) (bad) jge add rex.W callq scas cmc in jb rex.WR out fld mov mov jae and leaveq push xlat push int3 int3 sbb jbe and fcoml retq hlt push (bad) mov enterq add iret add xchg mov test sub nop ja (bad) jno cmp fsubrs out or lock mov rex.WX loope stos js fs add push rex.RXB in scas movsl sarb (bad) mov data16 (bad) rcrb add retq mov jo adc (bad) mov adc (bad) in (bad) pop (bad) xorl loop sarb (bad) out sbb sarb or retq repnz sbb fs mov sbb addr32 insl (bad) push pop cmp negl cmp fnstenv adcl loop enterq add sub rex.W or test rex.B test rex (bad) (bad) fimull jne mov xchg xchg rex.RB rex.XB xchg fwait scas (bad) and or xlat (bad) rex.WRXB sarl mov (bad) fwait ss (bad) mov sbb (bad) rex.WR retq (bad) jmp fadd int (bad) orl (bad) flds repnz adcb iret or std out pop test cli mov push add mov jae callq jbe ss imul xor mov retq xchg (bad) callq xchg imull rex.RX mov repz xor rex.WXB leaveq jae fucompp adc add xchg (bad) mov movabs rcll leaveq pushq and movabs cmpsb xchg jp (bad) xor ss cli push (bad) imul js add xchg retq cmp xor jg push sbb jge and cmpsb cmp add xor and fcompl sbb in mov std push lea rex.B fs jne ror mov bnd stos sarl adc test (bad) or push (bad) sarl (bad) lock and (bad) rex.WR enterq iret rex.WB movabs add rex.WXB cs rcrl xor jbe or pop (bad) fidivr push test push out pop roll xor or (bad) mov jae sbb xchg sbb xchg enterq and rex.R test jnp sbb rex.WXB rcrl movsl mov int3 xchg pushq xor push xlat mov in (bad) sbb scas add (bad) jo mov cmp lea (bad) scas outsl cltd lock cmp add mov pop (bad) sti or mov pop imul (bad) (bad) fdivs bnd rex.X or sti rcr adc and add (bad) movabs adc add (bad) andl jrcxz and cwtl outsl xchg std popfq scas stos (bad) cmp pushq cwtl or callq enterq (bad) cltd lock cltd out (bad) rex.W adc hlt rcl lods enterq movabs rcll push (bad) rex.RXB (bad) mov shll push in mov or out cmp adc mov int fwait leaveq imul sarl xor (bad) movsb (bad) movslq sahf cmp rex.RX pushfq jg xchg stc test fdivrl sub sbb (bad) pop mov add lret sub loope rex.XB add lods add sub mov add sbb neg fwait loop (bad) push sbbl (bad) and rol mov (bad) rol (bad) mov rex.WX cli int3 adc rex rex.WRB loope fcoml mov je mov xchg cmpsl rex.X cmc adc (bad) and ja or xchg adc cltd mov movabs jp addl rex.WRX fstl pop cs (bad) mov lret (bad) or fwait (bad) in stos and cli (bad) mov negl xchg leaveq mov imulb lret (bad) jae movabs leaveq jns sahf int3 or mov or rex.RB sti mov mov mov pop jg adc rex.WRB (bad) movsb xchg fs (bad) sahf sub (bad) xor xor notb mov adc rol cmp lret frstor mov repz fld jnp jmpq push sarl cmp adc sbb mov push sbb js stc xchg sahf xchg pop in lret ja (bad) add rex.RXB lret pop jg jbe mov lahf add xchg (bad) repz sub or sub (bad) pop movabs fildl mov sbb and (bad) int3 cmp fisttpll movsb cld (bad) rex.WR rex.X gs sar decb cmp ficom or xor mov xchg lret pop fwait xchg rex.X (bad) clc outsl mov xchg jne push jo movslq int mov cmp xchg (bad) xchg subb sbb fistpll (bad) fs sbb jo (bad) pushq mov pop jg movsl retq jo rex.RXB repz mov rex.WX (bad) rex.WX imulb xlat sahf retq mov sub xchg cmp add gs xchg and in (bad) (bad) rex.RB jnp mov pop enterq xor notl outsl or scas mov ds mov xlat cmc add add sbb ds roll mov fmuls xlat xchg (bad) (bad) vmwrite fadds (bad) (bad) adc rex.WXB rex.WXB xchg cmc (bad) jo or data16 adc mov (bad) pop shr callq rex.WR data16 in mov jno repnz movzbl (bad) mov sub retq and pushq shl or (bad) (bad) and xchg iret adc js (bad) jrcxz rex.RX addr32 pushq xchg movabs xor add cltd out or (bad) sbb stos (bad) xchg (bad) (bad) (bad) cli cmp cmpsl mov fwait cmc cmc xchg jge sub ficom mov (bad) sbb insl (bad) stos rex.X rex.WR test imul repz cmp ss (bad) ja movabs jg fucomp rex.XB mov sbb test (bad) adc movabs (bad) mov mov mov push or fimul leaveq lock fldt lea fucom test (bad) pushfq callq jbe lea std sbb fisttpll imul or insb pop jle adc cmpsl jnp or scas jae mov (bad) test lret jae movabs sbb (bad) gs jb jg jne (bad) push sbb mov jns xor (bad) mov repz sub mov out xchg je mov rex.XB lock es add sub and or js pushfq mov test sbb (bad) mov leaveq (bad) mov adc stc movabs xchg rex.WRX divb clc cmpsb test mov add data16 pushfq mov iret sbb int sbb cmpsl pushq (bad) mov fstps adcl add rex.WX fldcw rex.RB insl loopne add sbb (bad) jg jmpq mov xlat sbb xor je mov push cmp ss sbb cli roll (bad) xchg pushq fs pushfq lods test xor sub and outsb vmcall cmc mov mov rcr xchg or rex.WRB xchg rex.WX andl (bad) and (bad) pushq mov (bad) rex.WRXB pop add in lret mov rcl movslq sar jg (bad) fnstsw fwait cli in xchg push shl (bad) rex.B mov fisub mov mov push es rorl imul sub xchg in (bad) push xchg xchg add out jge sbb add jns rex.WR (bad) outsl (bad) pushfq (bad) shrl rex.WB rex.RXB (bad) jmp dec mov mov fsubs orl add rcll insb je sub cmp out movabs jae pop rex.WX rex.X (bad) (bad) (bad) (bad) cmpsl add sahf (bad) cmp rex.RX data16 repz (bad) push sbb adc or enterq jle (bad) callq (bad) loope add ja sahf mov test rcrl sub adc (bad) in mov add (bad) jae repz pop adc xor mull sbb pushfq (bad) xor out add fldl out and add movabs xor lret add push jns (bad) hlt (bad) or pushq stos cltd addl add clc negb mov callq test roll retq out sub sbb jrcxz loopne push test movslq cmpsl out nop (bad) movabs sbb mov (bad) (bad) xchg rex.RX jnp insb movabs fstpl (bad) cld push add xor or rcrl (bad) jmpq xchg fld adc (bad) ss movabs add js jg xlat movabs add lods out jno jg iret xrelease cmp xor out movaps pop rex.WRB int3 add rorl enterq xor (bad) clc adc (bad) push add xor sbb (bad) testl (bad) sahf add rex.X pushfq roll jne mov push (bad) shrl cli or lea fld gs fdivl (bad) scas movabs mov pop cmpsb (bad) sub callq int and movabs (bad) (bad) incl lock nop jmpq jb pop sub sti rex.WRB xor movabs xchg cmp sub xor cmp jo (bad) sti imul stos fs push (bad) pop sub pop xchg rorl push data16 (bad) jge stos jp push xchg mov loop jbe xor xor test loope (bad) out mulb mov mov xchg bsr pushfq int jb jnp (bad) jo (bad) sub rex.R push cmp test mov scas rex.WX or stos jp movabs (bad) (bad) add cmc (bad) cltd xchg out shll test stos retq mov add jbe movl rex.B adc rex.WXB adc hlt xchg (bad) jb rcrl fwait icebp jne mov rcrl (bad) insb lret (bad) sti fwait mov xchg mov jmp roll test imul lods (bad) lret iret (bad) pop rex sahf ror mov mov or lret sbb pop mov mov out retq cmp push (bad) rorl pop stc (bad) pop mull sub stos fidivr test push sub or rex.RXB test fnstenv stc (bad) push adc sbb mov jle (bad) mov sbb and sarl mov rorl cmp rex.WX mov (bad) pop (bad) (bad) xorl (bad) shll jmp (bad) (bad) rcrl in mov loop (bad) sahf or js adc rex.WRB cmpsb fisubl (bad) adc xlat rex je rex.X cmp mov sarl std fwait sbb or out ror pop mov in rolb rorl int3 loop push lods rex.RB pandn add js lods mov mov mov nop cltd mov std bnd (bad) xor or pushfq push pop fadds rex.WXB adc (bad) rex.WR test jo fwait push (bad) iret ss leaveq adc leaveq (bad) xor scas gs adc xabort add or mov (bad) pop test (bad) (bad) movsb mov int (bad) (bad) lret stos callq jmpq and add lret pop data16 add and add (bad) callq ficom or adc cmp and rex.WRX ja (bad) shl in rex jg movabs pushq (bad) xchg mov cli xchg leaveq fisttp mov sub jne rex.WB adc cmpsl rex.WR fdivs jge mov not sub (bad) adc in movabs rex.WRX xchg (bad) hlt pop test mov jae xchg loopne (bad) rex.WR loopne mov out addb (bad) adc (bad) iret (bad) mov rex.RX jbe mov clc adc jb (bad) loope jae (bad) test adc rex.XB rex.WRB repnz mov push cmp mov sbb pop pop (bad) (bad) pop rex.XB rex.WRX rex.RX xlat movslq and (bad) scas popq cmp mov mov rex.B rex.RX cmc jmp orb test movslq add (bad) mov cmp cltd callq loop jne rex.R mov xor mov iret jo rex.WX repz repnz sub rex.B rex.WX xchg mov cmpsl add (bad) sub (bad) xchg movsl (bad) imulb (bad) xchg test jrcxz or movabs shrb cmp sub sub xor pop push lret ss fcmovne orl mov (bad) movslq rex.RXB xor (bad) sub jrcxz jrcxz loop rex.RX (bad) repnz retq (bad) fnop es scas cmc lods lret retq cmpb mov rex.X (bad) test sbb rcrl (bad) imul pop mov rex.WB rex.W xor xor pop rorl int add faddp (bad) jrcxz leaveq or mov cltd sbb cmp (bad) (bad) fs shrl xchg movabs fstpl cmp cltd mov lret popfq adc xchg rex.RB je adc jnp cmpsb or (bad) rcr xor shrl rex.WX sub movabs rex.RB sub and rex.WRXB xlat ds roll (bad) sar data16 fldl (bad) rex.RX rex.WRB rex.B xchg pop xlat imul movabs movabs jns xor cmpsb pop xor cli leaveq sub rex.B insb imul (bad) (bad) lret lods icebp int3 fimul shll jno mov movsb (bad) cld add (bad) jno mov sub (bad) pop pop decb ja jbe sub callq pushq (bad) pushfq xor sbb rex.W rex.XB xor mov retq lods stos callq (bad) xchg callq idiv push popfq mov xor push rex.W (bad) rex adc adcl fadd enterq cli rex es roll (bad) callq stos test (bad) data16 (bad) imul stos push fcmovnb or cltd movabs sbb test (bad) sbb (bad) xor cmp shlb mov xchg lods (bad) repz rex (bad) mov mov mov xorl jns test add sub repnz and lret rex.X mov gs (bad) push loop rex.RXB cli mov insb and rcll scas callq idiv mov movb mov rcrl icebp cwtl xlat mov je nop divb cmpl out and (bad) (bad) rex.B addr32 test push data16 (bad) int adc imull mov andl roll jmpq push repnz leaveq stc movabs pop jne or insl ror stc (bad) std mov rol (bad) out cmpsl iret xor rex.WRB mov adc shrl es repnz sbb roll pop fstpt pop pop cmp sbb repz shll push add loopne sub cmpl jo mov sub add sahf rex.RXB shrd xor rorl shr pop xchg callq loope (bad) fs cmpsl lret ror movslq and mov rorl xor (bad) (bad) jns adc xor jge int3 sub (bad) and cmc loopne mov push loopne mov or mov shll test (bad) rex.WRB iret rcl retq xor loop jnp mov rex.WXB rcll out rol clc push (bad) (bad) xchg jl xor rcll and shr (bad) ds xchg sar movsl mov movb (bad) push sbb movb rex.W rex.B bnd jmpq sahf out xor notb (bad) out movslq pop xchg (bad) sub jge fdivl mov mov jno clc lahf mov gs add add lock xor jo cmp cmp (bad) xlat rex.WRX (bad) pop (bad) xor fstl mov mov movslq jae cmpsl insl rex test jns test or rex.XB in int mov sbb (bad) (bad) and imul mov (bad) (bad) mov (bad) js bsr xor in fidivl (bad) (bad) mov add (bad) stos sbb cltd rex.RB retq (bad) imul incl testl add faddp mov and mov cmp pop jmpq fiadd cmp rex.B lret xchg sub add addl rex.WRX not (bad) sub callq test fmull sbb xor pop or or (bad) stc push rorb add (bad) adc mov insl (bad) movabs movslq sbb fnstenv and fisttpll cmp fdiv mov loop xchg (bad) xchg (bad) movabs clc sbb rex.WRB fiaddl mov pop push mov rex.RB and (bad) add movabs xor (bad) fnstsw jg leaveq (bad) xchg mov add jb (bad) out sub fs (bad) sahf push movabs shrl movslq fnstenv fwait sbb imul sahf rex.B rex jp,pt (bad) rex.RXB scas cld or shll mov rcrl fwait cmp rex.WRB int mov jmpq (bad) out push (bad) imul mov push and xor (bad) jno sbb lahf movabs (bad) ss pop rex.X mov xchg pushq shll in add adcb rex.X std (bad) repz jmpq xor in cmp (bad) lret movabs imul rex.B push add (bad) mov xchg mov (bad) popfq (bad) mov lret (bad) cld sub not pop sarl rex.WX lock ror mov loop rex.WRB mov xchg (bad) retq sbb iret sti xchg rex.RX shll cmp test sub (bad) cs stos add fdivp mov add movsb push rorl rol (bad) stos loopne outsl push (bad) adc sub lods (bad) sub (bad) sarb loope (bad) (bad) cmp add or cwtl push rol lods fist shrl and pop cmp nop jnp xchg (bad) cmpsl fdivrs mov add (bad) (bad) (bad) push lock test pop (bad) jbe enterq rorl jmp sbb mov xor xchg (bad) test cld nop sub fdivrl rex.RXB js adc rex.X in rex.WRX lret cmp fdiv rex.X repnz sbb pop (bad) rex.WX (bad) loopne xor (bad) mov fnstenv xchg sub iret sub int3 rex.WRXB movslq sub test pushq mov (bad) lret rex and lea movabs cmp cmc (bad) xchg rex.W rorl cmp or vpsadbw (bad) ss add lret xchg fprem movabs xor test int mov (bad) sbb roll rex.R test jne sub mov mov cs stos (bad) (bad) fstpt callq mov or fiadd (bad) leaveq rex.WXB rex.WR (bad) test hlt enterq movsl (bad) retq mov jae sbb mov mov (bad) add fmull push outsl vandps ror and jl sbb or rex.WX rex.WRX in gs fimull cmp fdivs sub (bad) cmpsb enterq fcmovnbe paddd xor rex.WB mov stc stc gs sbb (bad) sarl and rex.RB xor add jno mov imul orps rex.RB pushq pop hlt add adc mov jo (bad) (bad) pushq scas xor fnstcw icebp (bad) xchg sbb mov test (bad) mov outsl cmc rex.WRXB jp pop sub mov mov (bad) rex or (bad) mov pushfq lahf or mov or fcmovnu rcll rex.X loope mov callq xor cs mov pushfq pop jg push (bad) stc iret push sti fiadd loope sbb rex.X add pop shl mov sbb add and leaveq pop jbe (bad) lret fildll sarl jae xchg (bad) data16 in fcoml (bad) ss stc cwtl movabs loopne add (bad) xor xor xor in rcrl mov stc mov jb callq inc sti adc fsubrl orl xchg sbb repnz loop rex.X fdivrl xor out leaveq sbb callq fcompl movsl fnstcw sbb hlt ds (bad) jp (bad) sbb mov cs sarl pop rex.WX add cmp fcompl lods rcr or cmc (bad) mov mov (bad) pushq sbb repnz jns mov (bad) xor mov jg pushq negl callq sbb rex.XB jp xor cmp add mov cmc sub (bad) iret add and adc mov (bad) callq test and jp mov jno pop cmc je ds rex.XB lock push lods gs (bad) popq imul adc xor (bad) mov retq (bad) outsl adc int3 xchg ss lock out adc push push sub sbb pop mov cmpl rex.WRB fadds enterq stc xchg push lock rex.RX rex.W jae cld cmp rex.RX sarb jg in fwait rex.RB xor push ss xor sub rex.WRX sub (bad) (bad) movslq add add cld rol movslq add adc movsb (bad) mov repnz rolb rorl jl sub cltd sub int3 pop clc (bad) (bad) mov push xlat sbb mov rex.WRB in mov mov jo fwait (bad) js rex.X (bad) dec mov ja addb iret rex.R addr32 vpcmpeqw rorb add pop leaveq or and roll (bad) jbe loope lret pop (bad) sub callq jge mov lock cmc adc imul lahf xor (bad) jg rex.WRX rex.WRX (bad) (bad) in hlt jl std sub jp (bad) add or sub lret (bad) int3 (bad) rex.WXB xlat (bad) (bad) movsb je repz imul fnop and mov cmpsb cmpsb sub (bad) pushq (bad) add je (bad) jbe rex.RB pop repnz jmpq rex.XB movabs (bad) xor loope pop retq push (bad) adc rex.WR lret in xchg mov cmpsl scas and rex.R rex.WRB addr32 xchg jge lock movslq rex.B xchg mov (bad) mov sti rex.XB popfq cmp (bad) (bad) lods rex.W adc int jg rcl data16 cmp mov (bad) and movslq rex.WR mov xor add sbb mov xchg jno mov (bad) jae cmp test rex.WRB es rex.WXB retq mov clc xor shrl mov pop (bad) xor fldt xchg xor mov cmp idivb shrl (bad) scas mov jp cltd movabs shlb scas int push cmp jns xor mov mov and test push movabs sbb and in (bad) jnp in movabs int3 rcrl jle rex.XB mov in repz mov cmp sub rex.WB rcll clc and rex.RXB imul fimul enterq (bad) (bad) and mov movabs hlt rex.B jno test lock sar shll (bad) gs rcl push sub mov sarl jnp rorl sbb (bad) (bad) jb or jnp sarl (bad) xor cmp adc mov rex.WRX cs and xchg movabs stos rcl rex.XB testb repnz shrb mov rex.WR pop movabs retq add popfq sbb mov movabs sbbl sub mov addr32 movslq mov loope add loopne icebp xor and sbb (bad) adc icebp (bad) (bad) rorb pop lods (bad) in cmp (bad) jbe gs push mov pushq (bad) or clc sub cli jp push sub rex.WR jge sahf gs jrcxz or (bad) sbb movslq mov leaveq mov adc (bad) fisubr in sbb leaveq rex.WRX (bad) mov or (bad) mov sub sub xor xlat (bad) push movabs sbb in cmp mov addl mov sub (bad) ss sub rex.WB xor push mov (bad) mov loopne xchg (bad) leaveq repnz push push (bad) jp mov ficompl movsb rex.WR fst test in imul repnz mov (bad) fistl add icebp pop mov shrb adc (bad) ja sub (bad) cmp and out push (bad) fcmove xchg (bad) (bad) int rex.WX rex mov (bad) shrl add sbb jle xchg movabs (bad) pop jb mov push (bad) idiv push leaveq fisubl callq rol repz (bad) mov jrcxz movslq lock fsts xor jrcxz enterq adc rorl lock loopne add int xchg xchg repz rorl xor (bad) mov rorl sti cld mov and sarl (bad) cltd (bad) in shll sbb jle (bad) sahf icebp xchg (bad) (bad) lea icebp or sub (bad) mov cmc push rex.XB shll pop cs rcrl xchg lahf int3 (bad) add lret adc test sub gs adc fidivl (bad) rex.WR in rcrl fldt rcrl imul fisubl out sbb rex.X xchg lods push mov jo mov rex.WR xor jns (bad) ja roll insl rsm push add mov pop lods cld mov lahf nop (bad) (bad) push outsl xchg es rex.RX sub (bad) and mov repnz js,pn sahf (bad) fimull xchg mov test jnp insl (bad) cwtl push rorl rclb push jno adc cld pop fisttpl mov iret gs popfq and loop pushq test jne (bad) xchg xchg rex.WXB shrl stos pop iret jle rex.R (bad) fisttpll rex.WRB insl movsl adc jg jg pushfq rex.WX sbb sbb (bad) xor rex.WRXB xchg retq cmpsb mov adc jle jno iret jae,pn jnp in adc rex.XB adc adc or fwait sbb leaveq popfq stos jnp (bad) shrl (bad) rex.WB mov not sub movabs and hlt ror (bad) add rorl cmp cmp shrl callq (bad) shll test scas jne rex.WRX sbb (bad) xchg pop rex.RB retq insb (bad) xlat (bad) enterq rolb rex.RX rcll (bad) (bad) (bad) insb iret fs sbbl pop xchg out xchg cmp xor repnz hlt ja sub int pop rex.XB pop mov rex.B test lret int3 xor rex.B cld rex.B movsb push (bad) pushfq pop ds sbb sarb loopne jl add lahf mov loop sub rex.WRX mov jns rcll in fsubrs cltd (bad) loope pushq xchg sarl and rex.X ss shll rex.WR fstpt movabs lea roll sbb (bad) movsl (bad) mov jb mov cmpl shrl or and (bad) xor rex.WR jno sub (bad) cmc xor add lret push test out add cs (bad) cmp leaveq (bad) out movabs push jmpq fwait pop xor idivl push and out (bad) in xor rex.RX shll mov push rcrl or (bad) cmp shlb (bad) scas shrl leaveq (bad) and imul or rcl loopel adc int3 sbb sbb test sbb xchg (bad) mov rex.XB int add mov mov sub fcmovnu int3 (bad) jnp xchg (bad) jb (bad) rex.WRB xchg outsl retq jne stc xchg clc xor (bad) mov faddl fs and movl or adc jns in jle (bad) fbld and test add (bad) fistpll (bad) cmpsl add mov rex.B sub (bad) and (bad) rex.RB rex.XB rex.WX repz rex.R jns enterq (bad) clc rcll out xor add fnstenv rex.RX rex.WR mov and sahf sbb lods mov (bad) or flds rex.XB xor vmovupd and movsb or lea jle pop test jns mov (bad) jb rcrl add rol fidivl icebp (bad) rex in mov pushq jbe loopne sub lods rcrl mov mov xor pop int3 repnz (bad) std xchg lahf sarl and mov push jmpq scas rex rcrl (bad) mov enterq and xchg rex.WR cld pop push and rex xchg out stos or mov shrl out cmpsb icebp adcl imul (bad) (bad) (bad) sbb and sub pushq loop fdivp (bad) (bad) mov jg (bad) shll (bad) or add in test loopne jl xchg push (bad) cmp adc sub divl jmpq mov and imul xchg movabs rex.WRB sbb retq and or flds (bad) mov jmpq std xchg addl xor (bad) jno xchg jns and mov test data16 in mov out (bad) movabs roll xchg push add pushq test mov int3 (bad) jo cltd shll andb (bad) rex.WXB xchg push (bad) add push rcl mov cmp insl clc in retq popfq gs sahf mov (bad) or jg enterq cld out retq loopne rex.WB rex.RXB retq (bad) clc (bad) flds and fisubl push cmp sarb out xor jmp outsl shll or int mov rcrl cmp je add (bad) repz jno cmc cmp pushq xor rol data16 js (bad) and rex.WRX cld xor pop fstpt adc (bad) xchg pop push (bad) stc cmp adc (bad) mov (bad) mov movabs jno in (bad) add insb lahf scas pop pop mov mov xchg rex.WRB shrl mov fistpl jmpq cltd in pop outsb (bad) adc (bad) lods add movabs and lret xchg stos pop rex.B test ja (bad) pop mov (bad) adc pop pushfq roll rex.WXB (bad) cmp and (bad) std (bad) adc add cltd (bad) ffreep test movabs clc mov push lret and (bad) jno xor add lret sti (bad) cmp xor rcrl rex.WX mov andl loopne repz fwait in sbb xor (bad) sbb and push sahf or out ds sub xchg rex.B rex.RB rex.RXB cmpsl (bad) cmp (bad) rclb xor rex.WRX lret rex.X add fstpt outsb add adc sub addr32 jl mov sti or test rex.B loope (bad) jnp sub and test cmp lahf pushq xchg pop in cmp out (bad) adc pop stc shl jns fistpll loopne (bad) mov and test (bad) xadd fisttp jo sub subb adc (bad) (bad) jg xor pop lods mov rorl fadd add pop xchg jno out sbb mov out jg rorl jmp sbb rol jl fs int xor rcrl lods pop cli clc mov je mov sbb push sub sub mov sbb jg stos faddl and and sub pop mov int3 retq movsb add testb shrb iret callq xor (bad) cmp sbb xlat rcll add outsl sti rex.B add loopne addr32 jmpq ffree (bad) cmp out rex.B adc repnz (bad) and inc std or (bad) rolb add cmpsb and in sub mov rorl rorb pushfq sahf mov (bad) ds jrcxz xchg stc (bad) sbb andl adc xor repnz (bad) cmp (bad) xchg rcll movabs (bad) addl push outsl popfq and sbb add (bad) (bad) imul (bad) icebp fcomi and (bad) out test fadds (bad) mov lea lahf (bad) xor jns xchg movabs and (bad) loope ds rorl (bad) movsb rex.RXB sub sahf movabs push mov adc (bad) sbb inc in movabs in pushq pushfq and xlat shrl mov mov xchg sbb cmpsl adc push addr32 rex.WXB rcrl insl movabs iret (bad) scas mov cmp sub (bad) add (bad) enterq rex.WB shll xchg add xchg (bad) adc sub rcll rex.WXB cld mov movabs xor (bad) fild sub fmul mulb shrl ds js (bad) rcrl cwtl add pop adc xor and mov mov jno repnz (bad) (bad) jge in sub mov movslq add mov and int3 jg enterq (bad) imul std xchg decb sub mov out subl sub loope (bad) (bad) push pop cmpsl mov pushq subl (bad) jmpq in mov rcrl mov roll out add lret rex.WRB mov movabs stos cmp ds test (bad) movabs lahf add (bad) int pop (bad) (bad) fsubs adc adc test sub jmpq or loop (bad) movslq cmp in int adc or fnsave xchg fwait (bad) lahf rex.B (bad) sbb (bad) add adc lahf shll (bad) sbb addr32 (bad) ss mov (bad) (bad) cmp rol out int3 ficom jg int testb lock insb movabs jbe xchg repz popfq shll shll push in test adc jo,pn test cltd sub add sbb (bad) imul push xor (bad) in (bad) fdivl push xchg sarl sbb rex.XB rex.WX shr out rex.B jl (bad) mov sub (bad) rex.WXB mov xor push add testb sub add imul jae push jle mov cmp scas jp and (bad) cld mov cmc (bad) cmp jo (bad) xchg out movabs (bad) sub mov rex.XB pop retq in hlt (bad) test add xchg testb or mov xor pop je iret (bad) adc cmp sbb ljmp (bad) mov adc jo (bad) adc popfq push xchg lret jns adc adc pop scas jg outsl pop mov std rex.WX mov ja rex.WRXB pop idivb mov jp push sbb outsl shl or push (bad) add xchg (bad) jle sbb scas mov callq (bad) (bad) imul rorb mov rex.X add jmp (bad) nop adc rcrl jp cli jns sahf loop mov (bad) mov xchg xor (bad) imul rex.WXB and xchg (bad) scas sub and pop sarl decb (bad) or scas jnp rex.WR rex.WX mov pop xchg mov xchg rol adc (bad) jmp fmulp rex rcl sub add retq out (bad) loop (bad) out repz mov xchg movsl lea xchg lods (bad) pushfq push (bad) rex.B icebp rex.WR sbb pop and or scas imul add (bad) push push rex.WX lcall sahf shlb pushq rex.X sub push mov push fstps or rex.RXB and out movabs movabs sub icebp (bad) or shrl rex.RB (bad) stos (bad) rorl mov (bad) jo (bad) rol outsb mov shll xchg shr enterq leaveq sti pop rcr mov push lock fstl test mov cmp jnp (bad) loop (bad) pop push lret rex.X jne sti lret outsl loope (bad) jo shll adc stos addr32 mov (bad) jmpq mov add pushq mov pop adc (bad) cmp shll movabs cmp (bad) xchg fldenv (bad) idivb fidiv jnp xlat cmpsb jg movsb or in and or fmull ds dec adc lret lret mov fdivr (bad) addr32 rex.XB (bad) out (bad) out (bad) (bad) movabs pop (bad) icebp jno (bad) mov lods (bad) out sbb movabs out rclb loop rex.WX xor (bad) (bad) (bad) lods or (bad) lahf loopne cltd mov scas mov xchg and fist sti xchg es add icebp xchg adcl mov add mov mov (bad) cmc xchg add jle sub hlt retq (bad) cmpsl shl movabs loope jns fsubrs mov rex.WRX rex.RB (bad) movabs in xor sub outsb mov lret es sbb cld pop (bad) cs rex or lods cltd (bad) (bad) mov movslq mov fcmovb jmp imul std stos (bad) enterq stos icebp xorl psubq rcrl push rorb mov mov frstor pushfq iret push pushfq clc loop cltd sbb sub lret mov (bad) mov add (bad) cltd push rex.WX rorl push test adc cs cld movb punpckhwd (bad) shrl and je jo pushfq popfq sarb mov rex.WR xor cli sub rcrl cmp ja hlt rex.WR or (bad) movabs (bad) xor (bad) fmuls movabs (bad) stos and outsl pop cmp repz xor sub (bad) insb movabs mov xor scas mov and leaveq mov push cmp out (bad) rex.RX (bad) sti shlb cmp (bad) repz std (bad) mov push mov rex.R sbb add sarl repz sbb rcrl outsb pushq (bad) enterq push (bad) loope mov or (bad) pushfq mov sub rex.RXB test mov outsb insb movabs jnp test cli adc (bad) mov rex.RX or shl std movabs ror xor lret (bad) (bad) pushfq pushq in movl (bad) lock or (bad) popfq gs sub (bad) int adc insb jns leaveq push movabs callq movabs pop popfq pop rex.B adc rcll jmpq push lods rcrl test rcrl (bad) in fwait ja xchg in xchg outsb pop cmp (bad) sarl (bad) or (bad) subb (bad) pop (bad) shll fadds jo xchg (bad) or shll sbb shrl hlt cli jmpq cld push test adc (bad) mov mov cmp sub movabs jae js sbb adc jmpq lock sbb adc jno sbb sarl test ror and iret rcrb mov (bad) mov and clc (bad) adc mov mov rcrl repz and out outsl rcr xchg in or rorl push cmp movabs loope out push rorq push cli add lock movabs fnstenv ffreep lahf cmp cld (bad) add icebp scas jl lret movabs cltd mov and movabs lods push jrcxz add rex.WXB insb std cwtl stos cs sbb out (bad) lods xchg push repz out push (bad) in cli jno mov and movsl pop int sub adc ja jge fdivl or out (bad) mov sbb xchg sti xor cwtl clc loope jg push (bad) movabs rex.XB ds jo rex rcrb jbe int3 jb cli (bad) (bad) xchg cld and xchg stos jbe fcmovnb (bad) push (bad) pop fdivs (bad) (bad) (bad) xchg or jb scas jb jbe fldt xchg cld xchg mov mov xchg xchg (bad) addr32 cmp (bad) rcr push (bad) jb lcall loope retq adc (bad) (bad) adc push (bad) fisttpl lods mov loopne fild rcll sahf dec retq test sbb sbb push pushq jmp cmp (bad) roll test cmp insb roll (bad) ror xor shrl xor pop xchg jnp out (bad) mov int3 stos lret rex.WRXB enterq shll rex.RXB pushfq mov push cltd adc hlt xchg subb fmull (bad) fucomip retq jp fs movabs (bad) fidivr (bad) xor lahf mov mov add and sub jmp je push in sarb (bad) mov pushfq rorl push test cld xor ja int3 pop push and rex.WRB jns loop imul in fld xor xor sbb jrcxz pushq or std fdivl rorl lret cmp (bad) int sahf (bad) rorl lods pop test mov (bad) or sub gs (bad) and in (bad) (bad) cmp xchg xchg sbb (bad) je movsl sbb (bad) repnz xchg mov (bad) (bad) xor jnp (bad) (bad) iret and pop rex.B adc cmp out push retq idiv shll jmp xor jp mov out (bad) xor push movabs callq cmp jo or movsb lahf roll push in xchg rex.RB jp fildl cwtl rol out loope (bad) stos stos jae cmp lret sub incl pop xchg xchg out rex.RB cmc sbb adc (bad) outsl rorl fidivrl roll mov (bad) (bad) xor pop rol mov loope or repnz jl adc (bad) xor cli (bad) adc es roll rex.R rex.WRX repnz data16 cmp add xchg out repnz add pop rex.X jmp pop push cmpl adc rcll or xchg in mov or xlat jns roll jg,pt (bad) sti pop mov loop fadds movabs imul repnz insl sub sbb rcll je jae loopne and add in insb mov or jmp jnp sub test (bad) jns pop rex.R sub xchg mov int3 mul mov rex.WB in xor std pushq je or out add lret shll push rex.W rex.XB mov add cmpsb fsubrs in xchg retq mov lea cmp lahf movabs loopne mov movabs adc lahf iret push (bad) adc in movabs (bad) imul bnd mov movsl fsubrs cmp lods xchg sti (bad) cmpsb jrcxz (bad) jb repnz movl sarb mov rex.RB adc lock add pop jae test push rex.W xor popfq mov xchg sti (bad) enterq rex.WRX (bad) mov std jl lods sbb iret (bad) fldl cli mov push add loopne xchg xchg add fstpt int3 mov or (bad) test (bad) fwait jns mov rclb and sbb movabs cs gs jo (bad) std test lret xchg (bad) retq ss sbb (bad) fimull (bad) pop movslq mov (bad) and lret movabs (bad) lea add rex.R xor (bad) mov (bad) out movabs test f2xm1 (bad) mov pop rex.WRB jb mov xor fs and fildl jne xchg (bad) iret ja or (bad) (bad) mov (bad) jo xchg movslq retq retq rex.WRX cmp rex.WX mov rex.X (bad) jmpq test pushq jp outsb fdivs (bad) lock je,pn (bad) sub and shrl out shl and mov sub faddl clc xchg (bad) mov xchg (bad) push sub repz fistp (bad) test (bad) adc (bad) rex.WR movslq iret push movabs lea rex.W jmp (bad) icebp rolb (bad) sahf je (bad) pop cmp mov jle (bad) xchg test movslq or mov mov pop add shr push movsl cli fildll rex.XB rex.WXB (bad) (bad) mov es rex.XB movabs mov pop loopne (bad) push rex.B andl mov (bad) jp jno xchg (bad) (bad) iret add or and stc sub jmp loop movabs jmp test (bad) (bad) rex.WR mov and sub mov (bad) mov add in sbb rex.XB fcompl out shr jge mov stos rex.WRB sbb shrl notb (bad) cmp (bad) add add je rex.B fdivs cmp stos test cmp mov sbb mov test jne (bad) pop inc xchg fcoml and shrl lret rex.WRB jmpq sarl rex.RX iret pop stos stos mov rex.WRX hlt or loop add (bad) outsb rex.WRXB ror mov jb mov iret popfq movabs insb jae shr ss sbb gs xorl insb jno mov pop pushq mov sub es cli (bad) decb (bad) scas rex.RX jno fisubr roll leaveq ds xlat cmpsb xchg add hlt scas mov loop rex.WRB or cli std xor rcr add pop outsb ror mov nop retq icebp je fldt (bad) in adc mov xchg jbe test (bad) leaveq rex.RXB jb test rorl rcl rex.R mov cwtl test push (bad) and cmp push add (bad) jae js cmpsb rolb stos rcll (bad) (bad) rex.RXB divb je incb jns cmp and callq pop cmp sbb neg in imul xchg fidivrl (bad) push mov (bad) adc lret cmpsb lods mov (bad) repnz (bad) out insl retq shll fdivrl (bad) mov xor xor xchg movslq xor ficoml roll stos movabs cli xchg pushfq enterq mov leaveq (bad) rex.R int3 lock (bad) out (bad) adc rex.WRX or pop rex.RX cwtl sbb movsl pop mov and loopne pop sub pushfq push xor pop (bad) js rex.W jl retq rex.R out js (bad) xchg imul imul (bad) idivb push jg lock and (bad) fdivr movabs sbb (bad) sub mov shrb and mov (bad) jne mov fsubr lods sbb ss mov shrb fildl rex.WB xor lret rcr (bad) (bad) push faddl pop fcompl gs int3 retq (bad) rex.XB mov rex.WXB push (bad) and (bad) (bad) (bad) cmc je mov clc scas rex.WX (bad) or add (bad) outsl adc (bad) repnz in xor jrcxz (bad) lea pushq ss repz in sahf (bad) add add push rex.WR jl callq cwtl sbb nop shlb lock pop mov (bad) fmull rex.W or sbb fsubrl (bad) push xchg rex.X mov pop sbb outsl jns cs loopne fldl sbb rex.B fldenv and data16 in std clc gs (bad) xchg (bad) jno outsb and mov (bad) cmp (bad) (bad) rex.WRB rex.B rex.WRXB mov in mov cli push or retq rex.WXB mov jnp cmp (bad) rex.WB pushq adc loopne stc imul sbb xchg jae xchg rex.WRB (bad) mov sbb sub (bad) icebp js mulb callq out retq nop movsb or jg mov xchg and (bad) repnz mov out cwtl rex.WRB movabs rex.B (bad) test jne push enterq lretw pop adc repz add repnz es fscale stc sarb movabs adc xchg and rex.B repnz rex.WR (bad) xor mov callq movabs bnd (bad) pop data16 leaveq lret jne pop sub lea jae fstpt mov rex mov movsb (bad) rex.R (bad) or rex pop test lret fwait (bad) movabs jrcxz sbb (bad) xchg mov (bad) xchg xor cmpsb (bad) mov mov rex test retq cltd sub cmp xorl test xchg xlat fwait cli rcl xor int3 test jnp sbb or xchg stc rclb leaveq (bad) xor leaveq test fwait (bad) in lods out repnz mov lar popfq loop jmpq (bad) rol pop fistl jae cwtl rex.WRX adc xor ss push jg jne cld lods mov movslq push imull iret add xor mov xchg lahf rex.WRXB (bad) lea (bad) mov jmpq ds movsl (bad) pop callq cmpsl js jno insb mov sbb cmp movsb nop rex.RX stc rex.WRB xor push in (bad) int rex.B repnz fstl (bad) or rex.WRXB cmp add add (bad) test or (bad) add ror in (bad) movabs (bad) cld jno xchg and and (bad) adc xor fisttpl xlat test add sub (bad) sbb jmpq lret mov pushfq push test in je (bad) or (bad) ds out push pop movsl sarl sbb mov rex.X mov rex.X rex.B loopne (bad) fstpt lahf jrcxz mov (bad) mov outsb lret rex.WX or (bad) iret add (bad) sub shlb (bad) and neg enterq pop (bad) fldenv movabs outsb movslq callq mov and sbb rcr insl iret mov (bad) and std shrl sub add cmp in add mov xchg packuswb fstl rex.R inc xchg adc test outsb (bad) mov mov loop and push pop mov sbb push adc rcr or out add (bad) mov (bad) fisub jmpq rex.RB movabs (bad) (bad) jne lock pushq nop rorl push movabs mov cmp (bad) rex.WXB mov (bad) shrl cmc push je or cmp fs lret addr32 (bad) jb movsb cli jge out pushq (bad) and xchg movabs shl xor je add xchg adc test sub fmuls fimul and sub fildl xchg add enterq insl add pushq movabs imul pushfq and mov jnp nop jge sub lock mov (bad) rcrb (bad) mov mov rex.R scas rex.WRXB pop int3 rcr lods mov (bad) in xor jrcxz (bad) rorl imul jg (bad) mov (bad) push outsb mov xchg stos lock icebp rex.X (bad) mov cltd (bad) insb imul push (bad) pushq mov lret rex.RB insb sbb test pop imul sub and fsubrs xchg sbb mov jmp iret rcrl (bad) mov js rorl jmpq mov sub adc cmp orl pushfq pop lods int rex.WR pushq add xchg mov push sarl add lahf jns shrl xchg and (bad) cmp jle hlt imul (bad) decl movabs rcr scas mov fxch (bad) mov or std rex.R movl sub jmp (bad) frstor imul fxch lea int3 in (bad) xor int shll sbb (bad) shl hlt movsb icebp test (bad) lret cmp jae sahf and (bad) imul mov xor (bad) mov (bad) rex.WX rcll repnz mov rcll loopne scas mov mov rorl add repnz fmull sbb sbb push jmp add (bad) (bad) and (bad) jle jmpq mov jno or or stc jge (bad) pop test ds or push (bad) xchg sbb movabs movsb sahf roll pop jns lret and sbb or movabs push (bad) outsb addr32 push xor rcrl xchg mov adc xchg cld movabs mov sub clc sub xor cmp and cmp xor (bad) cld (bad) lret fmull jno pop outsb sarl roll lret (bad) in sbb xor sti rcll (bad) and sbb movsl sarl shl mov (bad) shrl movabs xchg repz mov fs rex.R jle (bad) jg (bad) rex.RXB xor retq (bad) sbb (bad) rex.WRX mov sub cltd repnz rex.WRB rex.WX rex.WRX repnz cmpsl (bad) mov roll (bad) jne movslq rorl (bad) xor retq roll jle ror mov or sub sub popfq es shlb pushq mov add sub cmc (bad) out cmp movslq (bad) sarl jno enterq scas cltd rex.B jb fwait mov pop lret push add (bad) rex.WRXB add movabs xchg fiaddl sar int3 out push add roll (bad) enterq xchg cmp leaveq movabs adc ja cltd test mull rex push (bad) mulb outsl icebp sub and imul mov stos mov shrl rex.WRB leaveq sarb loope mov and (bad) xor and sub and rex.RXB lret (bad) add and (bad) mov in push mov int3 movabs rex.W out push scas xchg (bad) jnp rex.WR imul ficom sub outsl (bad) stos pushq or (bad) push scas mov or sahf ror rex.WB sbb outsl or mov mov outsb rcrl rex.WXB add in lahf pop out rex.WRX lret xor xchg mov leaveq sub xor and repnz jp pop scas rol lret int3 stos enterq rex fs add adc (bad) xchg test imul int fwait jmp in xlat rcrl jns in fbld int pop rex.W or xchg (bad) rcr lods mov jo ror push jp sbb scas (bad) pop (bad) loope fcmovnb outsl shll mov movabs rex.WRXB fisub (bad) in rex.WRB (bad) rex.WB nop (bad) roll jae (bad) mov loopne xor jne (bad) (bad) push rex.X cs (bad) pushq xchg xchg leaveq and loop rex.WRB out (bad) pop pop (bad) callq pop (bad) rex.WB (bad) lods rex.B jbe xchg (bad) mov (bad) (bad) sbb (bad) cmp roll jg (bad) mov xchg cmpsl rex.RXB movslq fnstenv (bad) xor (bad) mov lahf decb sub jp (bad) icebp es (bad) (bad) ficomp (bad) sbb sti imul (bad) pop and outsb sub sbb sarb ja int3 rex.WB jl rex.WRXB add unpcklps add (bad) (bad) (bad) mov mov xchg cli xchg mov (bad) jl xor lcall (bad) (bad) callq pushq jge int3 (bad) xlat int3 rex.WRXB pop insb retq cmp fs (bad) xlat lea iret popfq (bad) imull and mov repnz xchg mov rex.W scas and xchg loope (bad) (bad) jne in (bad) cmp cmp mov jne loope lret hlt xor rex.B rex.WB or roll fsubrs pushq shr pop lods (bad) (bad) mov xor popfq in pushq jmpq scas mov cmp (bad) mov or xchg mov imul int3 rex.WR jne (bad) cmpsl lret (bad) stos scas shrl rex.XB out mov cmp test jnp and out scas sarl push jb mov rcll scas or hlt int3 (bad) mov (bad) xor rex mov mov es sub data16 mov adc pop mov (bad) cmp xchg pop fldcw jae nop hlt cmp rcll stos mulb es popfq and scas or xadd repnz lods shr addl sub out mov xchg lahf fnsave adc iret pop mov fsub fs sbb jns sbb out shll lods leaveq adc rex.RXB shr shll mov sar pop jae pop xchg push repz outsb int3 xchg test mov add jmpq (bad) std fstps mov adc pushfq or jae (bad) jo data16 movabs sbb icebp (bad) jo and lret std mov repz sub pop add pushq (bad) in rcl rex.B adc rex.WB insb mov mov adc stc pop rcll xlat sahf mov negl xchg push int (bad) shll (bad) movsb add ffree imul test out ror (bad) out repnz xchg test adc sbb movabs mov sub (bad) rol (bad) push scas mov sub mov cmp int3 sahf sub fmull int3 rorl rex.XB fs mov xchg movsl (bad) icebp or (bad) hlt sbb sub rex.X add mov sbb (bad) jge jne faddl jl rex.RX xchg xor cmc iret xchg lods fildl adc (bad) and jns cmp bnd imul cmp mov out xchg adc rex.RXB outsl stos mov add fisubrl or mov mov test add rex.WRXB test sar imul out jp mov imul (bad) jge ds push rcr rex.XB push rclb iret rex.X rex.W rex.R add lea fadds inc add lret sti (bad) xchg out addb sub movabs or lods test xor rex.RX ffree jg xor out mov (bad) js add addr32 cmc pop cs rex.RX (bad) std xchg (bad) rex.WX rex.B es ror xor jmpq jnp div out out iret int3 movabs sahf std (bad) xor movslq mov xlat shrl push add mov rep mov or adc (bad) mov shrl test add push (bad) jbe (bad) movsl (bad) rex.W in rex.R rex.WRX xchg jae jle push shll adcb sarl (bad) insb lret (bad) scas loope mov shll lods jnp (bad) rol or test push loopne (bad) retq rex.B (bad) rex.X std (bad) jl lret rex.WX lods (bad) repz shr rex.X mov push pop (bad) (bad) ja (bad) or pop loopne loop or fwait (bad) cmp stc and iret mov xchg or rol (bad) xchg sti xor add iret pushfq pop hlt imul xor sub ror xchg imul rclb sub and lods loopne xor lahf cmpsb or (bad) (bad) rex.WRB fild push xchg jg jae jp xor rorl (bad) pop sarb pushfq sub pop andl xor pop test jbe shrb loopne push push (bad) imul sbb sub rex.WR mov (bad) mov rcl data16 rorb or (bad) callq rorl (bad) in rex.WX (bad) rex.WR jne imul or ss lods movabs pushfq mov and sub (bad) cmp rex.X and mov fidivrl push pushq mov cli mov xor mov movslq (bad) pop sub push jg popfq and callq pop cs loop rcrl loopne sarl (bad) rex.WR scas iret push xor cmc ror cltd jge sarb add loope (bad) mov and cmp add roll jrcxz add and fcmovu loop retq xchg sub rex mov in cmp xchg (bad) rol rex.WXB push xor and shlb add fstps cmpsl (bad) push xor mov sbb out lret es imul pushfq sub xor sub out xor mov stos fstl lods mov and (bad) (bad) callq pop rex.WXB fwait cs fs sbb (bad) (bad) shrl (bad) cmpsl jbe mul (bad) adc test cli xchg fildll (bad) rex.WXB and fwait lret (bad) xor (bad) cmp jno mov sub lods pop mov mov mov xor (bad) mov and test cli xor imulb (bad) xor ds sub scas or push rex.WRXB int jb and sbb mov (bad) cs rcr mov rex.XB xchg int insl rex.WRXB (bad) pushq xor lock movslq lods (bad) popfq loop adc pop outsb hlt shll pop add (bad) adc mov movabs push xor sbb (bad) (bad) xor xchg shlb imul cmp es lret sarb jae add push pop shr rex.WRB sub cmp (bad) cmc pushq adc cltd rcrl jbe lea adc add cmpsb push sbb cli int3 lods mov out jg stc mov add (bad) or mov (bad) push movabs rex.WRXB cmp out rex.RXB stos (bad) fsts rex.R jno (bad) xchg lcall shrl jmpq sbb test (bad) out rex.WX rex.X xchg jp data16 rex.RB sub enterq mov fmull xchg fidivrl xlat sub mov addl mov (bad) repnz lock jae cmc or pop pushq or rex.WX rex.W loope movsb push xlat rex.B rex.RB rex fisub rex.WXB repnz and rex.B enterq fcoms or rex.W lret (bad) sub leaveq mov loopne rex.X lret mulb lods (bad) mov cmp pop imul stos mov (bad) hlt cwtl or add mov sub push popfq lods push cmp movabs (bad) out rex.WXB ficompl rex.RB rex.WXB rex.WRB stc lahf mov add rex.WX mov adc sbb mov add lods sbb rex.RXB adc hlt (bad) sub xlat cmp pminsw std jp cmp or rex.RX mov rex.R and mov cmpsb (bad) pop lret roll fstpt sub jmp lahf (bad) and and jmpq mov or (bad) popfq rex.RB fcmovnb clc pop jnp loopne sub jle and xchg (bad) xor mov jns pop or retq std fisttp mov pop jrcxz sub test cmpl jge addl fsubr ja and push data16 rex.WXB mov sub in mov repnz ss jno out shrb ror mov movslq shll (bad) sbb popfq iret movsb je push rex.WX adc mov (bad) int3 rex.RX rex.R jmpq (bad) stos jbe lret pxor rorl mov subl push rcrl fwait xlat sarl (bad) (bad) (bad) rex.XB outsb (bad) repnz fwait mov mov in pop (bad) rcrl fnstenv jge (bad) sbb iret mov rex.B pushq adc add movabs sbb cmp adc ficompl sbb rex.WR enterq (bad) add retq rex.WRXB outsl fs rcrl sarl popfq push push clc sar ss in fwait rex.WRB jnp pushfq out (bad) rex.B incl adc mov cmp bswap (bad) push cmp callq lods hlt movl rcl addb clc (bad) lret (bad) jnp repnz adc mov (bad) (bad) clc (bad) rex.XB rex.WB jrcxz xlat (bad) pushfq rex.WRX pop mov fsubp jl pushq sahf test imul cmp fwait or xchg testb (bad) mov mov lret in int3 jrcxz imul gs rex.X insl (bad) movabs outsb mov rex.W rorb (bad) bnd pop adc shl fstpt xchg movabs cmp cmc ds (bad) (bad) (bad) jo cltd rex.WB (bad) jno out iret mov (bad) movabs jbe imul iret mov stos sarl (bad) or xor movabs (bad) pushfq shrl cmp rex.RB sbb callq jle rex.RXB and movabs adcl mov xchg pop icebp rex.WXB incb lods cmpsb mov outsb xor (bad) (bad) rex.RB rex.B (bad) cmc popfq and rex.WR callq popfq (bad) test add rex.WXB repz ficomp test mov (bad) (bad) and fmuls xor sbb test repz jp mul int3 js rex.WRX or cs callq mov stos mov and movabs cmp mov fstl mov add rex.RXB xchg pushq or push (bad) sub mov or xor mov int3 jae (bad) in (bad) je sbb int pop add movabs rex.RXB and (bad) (bad) rex.R outsb sbb xor rex.RXB pop xchg ja push pop lea jmpq repz push (bad) (bad) cltd (bad) mov (bad) retq mov int3 jge xchg ja rex.RX xorl cs nop pop jl std xchg jg (bad) mov (bad) jno or hlt rorl movsl popq (bad) (bad) je rex.RXB es mov imul xor movslq roll (bad) out (bad) icebp sar and movsb test sar sbb cmp lret movabs rcr fcoms rcrl loope outsl jg iret lret mov pop pushq ror subl movabs sbb scas mull addr32 shrl pop jrcxz xor shr mov std (bad) cltd pop xchg pop rcrl movabs (bad) lock xor imul lea rex (bad) sub and sti mov push (bad) insb rex cs xchg and jbe push sarl pushq std rex.RB fnsave xchg cltd cli push (bad) (bad) cmpsb lret cwtl jmpq (bad) leaveq shrl sbb add pushfq je stos ja rex.RXB cmp push in pop (bad) jae out (bad) and fcmovnb adc leaveq and test rcll rolb cmp rex.R rex.RX popfq and jne cwtl rcr cltd jb out mov in (bad) jo retq xchg loop mov xchg (bad) lahf mov (bad) pushq test rex.WR fs xchg enterq outsb jp mov cmp mov lock testb mov (bad) xchg test cmp mov stos mov mov outsb or rex.WXB add shl push cmp cmpsb add xor pop rol fldcw movabs push jl add push lods jbe lods adc cmpsl jns (bad) in pop outsl mov adc (bad) jb int3 movsb jp (bad) mov xchg roll mov pandn sub (bad) push cld (bad) gs (bad) nop jl rex.WB xchg mov (bad) scas sbb in mov movabs xor jns (bad) mov cmc lret pop jmpq or addr32 xchg jmp cwtl adc lret rex.WRXB pop mov scas jmpq and and rex.WRX in (bad) or pop or clc adc scas movabs pop xchg (bad) (bad) (bad) xor (bad) nop push sbb (bad) adc (bad) xchg rcrl (bad) lret stos mov adc rex.RX iret rcll out insb (bad) lret xlat mov gs lods jns incl xor rorl fnsave (bad) pop and xor mov rorl rex.B push (bad) push enterq test (bad) (bad) ja jns rcrl xchg fptan jp movsl mov rex.RXB shrb xchg cmpl (bad) stc movabs imul (bad) sub mov bswap pop sarl jl movabs mov xchg retq cmp enterq sub rex.WRX pop pop ffreep mov mov fwait (bad) xchg and retq out xor cmpl add loopne (bad) jl rex.XB cmp jb sub mov loope lret lahf (bad) rex.WR and faddp (bad) mov (bad) push sbb stc retq cmc (bad) icebp enterq (bad) test jns in movsl xor cwtl (bad) faddp cltd xchg sub retq movabs add and (bad) scas lret faddl retq or fnstenv cmp outsl adc adcl es xchg mov mov rex pop lea xor jmpq jge (bad) mov push jmp cmovne push rorb fnstcw sahf js imul or int mov fnstsw cmp (bad) popq ds rex.W (bad) (bad) mov push rorl leaveq sub or movabs pushq (bad) repz insl iret rex.RB xchg and xor fstp retq movabs inc shrl fldenv xor mov stos cmpsb out or fstpl fcmovnb rcll sti jle xor rcrb xchg sub flds rex.WRXB mov fucomp movabs xorb mov movslq rex.WRXB gs or retq xor sbb (bad) xor sar mov push jmpq lock (bad) insl shrl mov shrl bnd jrcxz mov out (bad) scas fldt (bad) (bad) out test repz lret jp rcll icebp rcr scas and enterq (bad) or (bad) pop sar add fmul nop out rex hlt xor mov fsts rorl mov (bad) jne (bad) mov fsubl sarb rex.R (bad) outsl jns sbb sub add or int3 add sahf movsb lret addr32 (bad) pushq (bad) lods sbb out popfq shll and pushq lret rex.WB xorl test cmp shll repz adc lret mov (bad) rorl out mov imul (bad) pushq lahf rex.B rex.WRB popfq repz shr sub mov es mov push add xchg or or or fild rex.WR mov (bad) (bad) and ds pop (bad) sub (bad) sub movabs (bad) pop movabs movabs retq add push jmp (bad) and rex.R or jge sub cmp stc rex.WR mov sbb fcomps (bad) insb pop stos jne add movsb jo int3 repnz rex.X jae (bad) (bad) (bad) xchg loopne (bad) cmc sub cmp mov (bad) js movabs mov (bad) xchg movabs xor movabs xchg jrcxz mov mov xor sarl movabs jmpq (bad) test (bad) fildl outsb xor (bad) shrl cmp and (bad) clc test mov add stc fs imul and test movslq mov jge (bad) orb rex.R rex.WXB or enterq insl movabs sbb std xchg int3 cmpsl (bad) in shrl (bad) mov or lret mov cs sub fist cmp rex.WB (bad) (bad) xchg (bad) sub rclb add loop fiadd shrl and (bad) popfq insb mov clc mov rcll rex.RXB (bad) or cltd mov add and xor or (bad) (bad) mov (bad) rex.WRB in retq rcrl (bad) or shl fstpt gs and (bad) cs pop sbb xor xor fwait push test (bad) in jb ss jrcxz pushfq rex.WR loop jne push sbb cli in ds orl push sbbl sarl mov rcrl (bad) xchg mov rex.B xchg (bad) (bad) test fidiv (bad) stos rcrl pop mov mov (bad) mov sub lahf xchg fsubs rex.WRX jnp movabs xlat and push cmp shrb cpuid (bad) push rorl rex.WR xchg mov sub mov sub jns (bad) pop pop (bad) mov sbb insb rex.RX data16 repnz rex.WRX rorl or sub addr32 pop loope (bad) jle xor cli (bad) mov jb test rex.RB negl jge sub lret cmpsl or xor jo addr32 mov out cmp imul fildl xorl repnz enterq xchg rex.WX cs lea xlat sarb fwait and movsl (bad) rex.R sti orb ror hlt cmpsl sub in pushfq rex.WXB lret (bad) or mov jmp add mov (bad) retq (bad) sbb xchg pushq add jp (bad) pop mov and xchg test scas orl jne fmuls sbb (bad) fwait sbb pop (bad) in (bad) cmpsl rex.R add rex.WR xchg gs imul fimull in add cmp fwait sub (bad) rex.WX outsl int pop fidivr mov xlat cmp push mov cltd movslq (bad) push enterq and fs repz test sub mov sbb or rex.RX int adc enterq or test rex.WB (bad) ja es or test int3 (bad) cmp lock loop test pop rex.WR push negl (bad) rex.WXB mov and movabs xchg rex.RXB (bad) xchg loope retq movsl retq outsb lock pushq callq insl mov jle sub mov rex.WRXB sbb rex.WRXB or mov retq icebp movabs repz retq mov imul rex.WRX in test adc rex.RX jb,pn in iret (bad) sti loopne sub add movsl cwtl jmpq test rex.RXB mov pushq add (bad) (bad) cltd cmp add repnz adc add js mov xor rorl mov jge int3 movabs lods jnp pop cmp jns test xor cmp add mov adcl lret (bad) mov mov int3 xchg rcr adc xor xchg fucomp xlat xor sub addl cmp jl (bad) cmp rex.W addb add sub rex.WB rex.WRX and in fcoml adc int3 cmp int3 (bad) sub cmp fiaddl int or cmp cmpb (bad) cwtl fwait (bad) lret add test adc or add cmp xor adc andl test imul lret adc xchg mov iret push cmpl insb jle adc icebp (bad) adc xchg (bad) (bad) (bad) (bad) scas pop rex.RB imul mov (bad) icebp pushq adc (bad) clc imul loopne rex.WXB jbe,pn xor (bad) push add and rex pop std cwtl pop (bad) xor xchg rex rorl (bad) mov outsb (bad) lret fwait repz rex.WR out pop int iret pushq (bad) sbbl outsl stos addr32 add retq sahf push (bad) cmc push negl (bad) sub (bad) add stos xor loopne xchg movslq sahf sbb rex.W movabs mov int add stc imul rorl pop xchg scas sahf pushfq push xor rcrl js stos add jmpq loope and xchg pop or shrl in mov and sti xchg push (bad) (bad) adc (bad) pop test and xchg (bad) repnz imul xchg cmp in jns mov repnz mov mov xchg xchg rex.B or int3 and rex.W in pop fs and sub cmc (bad) xchg jl cmp rex.B test mov movsb cmpsl (bad) pop (bad) and (bad) xor hlt pop jle pop and pop test repnz xchg jmpq cld in cmc movabs xchg jnp in rex.R test (bad) sbb cmp movsb pop outsb retq mov xchg or (bad) mov mov push jp mov roll add push in xor rorb (bad) sahf mov cmp (bad) (bad) mov cwtl subb rex.B stos test pushq shr xor lock rex.WB repz (bad) pushq cmp (bad) popfq (bad) hlt rex.B xchg (bad) cwtl stc and and mov (bad) cwtl pop (bad) jno and pop fildl pop xor and movl push jp repz sbb xor imul icebp xchg (bad) sub (bad) sbb cwtl (bad) (bad) (bad) addr32 rex.W movslq test (bad) pop rcll test (bad) rex.WRXB lea rex.X pushq cmc push lret lea cwtl mov mov out movabs lea (bad) add shll (bad) mov rex.X rex.WX repz mov (bad) xchg in mov lret add adcl push (bad) rex.WRX cli scas or movabs sar and adcl jb xor pop (bad) xor sarl mov lahf mov sub fadd cmp push rex.WRXB mov jge orl pop cmp rex.R mov fsubrs insl pop cltd test je adc (bad) mov in jle rex.WRXB add rex.R or fisubl (bad) xchg mov (bad) rex jmpq movabs lret adc xorl movabs loopne shrl jne xlat cmpsb (bad) jnp and mov sbb mov and rorl cmc or pop in xchg sarl mov jb and and loope callq rex.WXB rex.B jae jmp imul (bad) (bad) push rex sti rex.XB out jno iret pop mov (bad) rex.WXB cmp lock imull and (bad) iret test lods rex.WRX rex.WX rex.B rex.W mov movsb rex.R xchg rclb and rol (bad) movabs repz movabs jbe push movabs ja (bad) add (bad) lock xor add in movsl rex.RX (bad) rcrl (bad) (bad) shrb pushq lahf cwtl roll and (bad) cmp cltd pop mov sahf addl xchg adc xchg xchg push jb mov shll movb cwtl jo add retq lret lods and rcl in cmc xchg jmp jl mov nop int3 pop test cmp fcmovbe fadds jle or rcr lods (bad) rorl xchg fsqrt pop mov (bad) je jnp (bad) lods mov (bad) mov xchg fdivrl mov sbb push (bad) jb jle movabs xchg fimul mov je in (bad) cwtl jnp push movabs stos (bad) insb or int sti mov nop ffree rex.RXB addr32 mov sbb xor xchg (bad) test movslq mov sbb out (bad) mov (bad) mov out xchg iret (bad) retq in rex.RXB rclb test (bad) ffree sub repnz (bad) divb add int3 fdivs (bad) pop sarl xor syscall adc jg xor subl insb sbb (bad) (bad) retq add add enterq andl adc mov or repz popfq fldt sub scas (bad) fstp (bad) fadd movabs xlat fcompl (bad) rex.X xor orl add push jp sbb movabs (bad) sub and (bad) sbb (bad) mov rex.WR fstl pushq rex.WR icebp (bad) adc (bad) jae loopne rex.WR pop loope (bad) enterq out (bad) push mov jb insl or test sub mov (bad) icebp jb (bad) (bad) (bad) or movabs out rex.WXB ja cs or insb (bad) fldenv mov shrl repnz push loope mov xchg rcll mov mov icebp pop movabs adc cltd repnz (bad) shr cmp sbb pop or rcll testb nop in (bad) mov jg sahf xchg movabs (bad) mov rex.B fs mov xchg rcrl movslq jne shll outsl loopne es movabs int int3 sbb mov rex.B xor fcmove and adc stos push fwait fwait jb jns sub (bad) xlat mov test jg sar callq fadd mov sbb push movsl push jmpq ja mov mov jb roll (bad) xor pop rex add imul push in adc xchg retq outsl and movabs lods sub test (bad) ds cs (bad) mov test or loop or and js mov push xlat mov rex.WXB (bad) movb cmpsl jbe xchg mov pop cmp adc mov leaveq or (bad) int3 sbb jbe js adc jbe add rol add pop (bad) test jo (bad) xor mov ja jb fsubrl lret xlat fnop add pushq xor fildll in or addr32 cli (bad) mov pushq (bad) and loope pop mov push add mov pop test (bad) sub add push fwait enterq jge repnz rex.RX sbb int (bad) or mov (bad) insl mov sbbb jno and andl mov sub add xor jp gs rex.WX (bad) loop (bad) adc (bad) (bad) push movabs loopne cmp cmpl xorb lock mov (bad) xchg fisttpll ja and sahf sub push add rex.XB rex.R and (bad) push popq es mov cmp xor (bad) cwtl scas add rex.RB rex.X enterq xchg mov mov jle cli jno (bad) bnd mov adc je fsubl rex xchg jp lret add insl (bad) xchg rex.WR add mov (bad) iret push adc or movabs (bad) lret (bad) or (bad) subb push lret push int ja iret adc fcomip sti fldcw add (bad) pop movabs xchg out xor (bad) data16 xor pop sub mov lea lret mov enterq loope (bad) pop (bad) pop mov push callq mov shrl loope fsub cmpsb rex.X and jno roll std ja mov (bad) add movabs test xor xchg (bad) xor retq int3 mov rex.RX lock (bad) mov ror fbld fadd mov (bad) mov sbb mov movsb sub repnz (bad) (bad) callq pop scas shrl out (bad) mov (bad) cmp in scas rcrl pop pop in push cltd xchg add jne cmp adc pop cmp movabs test mov rex.R cli cwtl leaveq cltd sahf callq xor pop lahf movabs mulb jbe xor xchg jne mov fimull data16 xor add mov mov pushq jp (bad) jp jmpq mov sub outsl xor movabs test in (bad) int adc rex.R sarl addl (bad) (bad) (bad) testb in out mov pop js add jg add gs shrl ficompl shll rex.WX sbb or fist jae mov add (bad) pop (bad) movabs rex xchg in (bad) test je jp insb pushq adc retq cmp (bad) cwtl cli rex.XB scas test xchg rorl adc (bad) ss and (bad) icebp mov scas mov mov sarl rcrl mov sahf lea cmp adc adc xor insb mov hlt pop xchg xchg cli shl data16 (bad) rex.WR push add cmp movabs shr leaveq mov cltd (bad) je int3 push movabs rcl enterq jae (bad) stos movslq rex.RX (bad) jne cmp jl lret retq cmpsb (bad) xor insb (bad) (bad) lock mov rex.WB rolb cmpsb cmp (bad) cli xchg insb (bad) xor (bad) push or enterq rcrl rex.WB imul (bad) sbbb movslq rolw stos add rex.B (bad) (bad) stos outsb rex.R jb and adc ja enterq shll add xor (bad) adc loopne cwtl pop rex.WB loope (bad) divb lock js mov (bad) leaveq sarl fwait jns and and mov rex.R mov (bad) xlat lock sbbb insl out retq addb callq (bad) fdiv (bad) (bad) xor out (bad) in cmpsb repz add jge sbb pop out mov movsb orl rex.B icebp mov repnz fdivrp (bad) sbb cmpps loope cwtl add rex.WR add mov out cs rolb jb adc sub loopne sbb pushfq xor or adc cmpsl (bad) mov mov mov or (bad) test mov or clc sti fstl jmpq movabs fildll jb mov fadd mov jno jo loop cmp (bad) loop (bad) cmpsl and cmp popfq int3 sbb jae rex.RX and in lret pushq jnp (bad) push jrcxz movabs lahf cmp cmp (bad) stos push fucomip rex.B rex.R out (bad) add (bad) movaps jo rcr xchg (bad) push pushfq (bad) xchg (bad) or mov sub mov add outsl mov cmp sub iret adcl inc rol not (bad) mov (bad) mov icebp popfq xchg neg loopne (bad) xor and cli jmpq or (bad) mov sbbl sahf rorl sbb and and (bad) out data16 xor sub mov (bad) rex.B rex.WXB mov mov mov stc (bad) scas jle xor fmuls mov (bad) int3 clc pop test and (bad) pop pop shl cltd (bad) (bad) rcrl addr32 pop (bad) (bad) (bad) mov imul lods (bad) add xor movabs enterq mov leaveq fabs out movb mov mov (bad) xor jne lock (bad) xor (bad) int3 fcmovb adc popfq adc pushfq (bad) faddp xchg pushfq or jge pushq push and rcll (bad) pop or fwait adc add lods nop jmp xchg jp int3 mov rex.RX in rex xor sub add addr32 (bad) and add (bad) or enterq nop loopne cmpsb (bad) rex.WR lock fdivrl or mov push mov movsl sbb bnd lock loop in push xchg rex.WRX lea jl lahf adc imul sub cmp clc jbe xor sarl in jno popfq (bad) xchg or xor cmp adc mov gs xor (bad) or movsb popfq stos (bad) pop leaveq xchg ja vpaddd lret jge gs sub enterq (bad) (bad) jbe mov (bad) rol sahf mov rex.R jge clc pop adc push fs (bad) or insb sbb sbb jno or jp rex.WXB mulb cmp rex.XB rex.W sbb retq int3 movsb xchg (bad) lret out repnz jp rex.WR rex.RX scas icebp callq fisubr (bad) cmpl sub data16 stc movabs rex.WRB (bad) cmp xchg fadd out xchg rex.RX rorl jnp rcl (bad) notb mov sti repz js shrb xchg sarl fs roll mov enterq (bad) push cs mov (bad) scas repz movabs (bad) push sub repnz pop insl clc sbbl jbe fimull pop add xor roll rex.WRB adc movabs in (bad) jno stc shrl pop cmc (bad) cmpsl data16 pop (bad) loopne xchg xchg (bad) (bad) push adc (bad) loop cwtl shr sbb (bad) mov (bad) push xchg rorl mov (bad) lea test (bad) outsl sub (bad) push (bad) icebp mov stos es xchg add sbb add sar and lahf cld sub xchg or xor jno fdivl movabs ss or std and mov roll lret ss (bad) (bad) push fsubs cltd rex.R sbb loope mov fdivr mov flds pop sar (bad) (bad) xchg hlt xchg and adc movsl cmp std sub data16 and mov pop mov lret (bad) rex.WR (bad) stos xor retq mov lods mov sbb xchg (bad) loop shrl cli fldt push (bad) (bad) push rex.WB sar (bad) (bad) in sub (bad) shl push fwait out pop iret cmp pop xchg mov sbb rcl or (bad) push popfq rclb jnp cld rex.WXB out xchg mov xchg retq sub test jno (bad) fdivrl sbb jns cs (bad) xor rex.WR roll pop hlt pop and lret jnp (bad) clc faddp and ja adc (bad) cmp xchg rex.WR in (bad) movabs roll rcrb mov std xor mov scas or rex.WRB je leaveq negl (bad) xor stos jp cltd or movabs std pop scas rex.RX (bad) mov or sub xchg (bad) xchg fdivrl shrl jno rcll (bad) movabs scas xchg add and (bad) mov mov shrl fstpt (bad) mov xchg jmpq insb fdivrs (bad) js loopne mov scas fcmovnu cwtl (bad) insl je rorl push dec mov test mov xor push adc lahf fs shrl push xchg pop add (bad) mov (bad) or jge test pop popfq sbb in fsubs add cmpsb icebp retq (bad) jmp xor cli cmp xor ficoml enterq jp rcr movabs (bad) repz (bad) shrl jrcxz pop sub and xor cmp rolb orl stos jnp test in iret or jmpq addl rcrl roll lea rcll xchg ja int3 (bad) or insl and rcll inc add jrcxz jmp repnz movabs xchg (bad) ficompl cli rorl rex.WR loop retq mov sbb add and (bad) (bad) add or movabs stos lret (bad) stc rex.WRX iret add and xor cmp adc repnz movabs (bad) movabs jbe fidivr jnp std add rex.R jge sbb repz sbb rcrl push incw (bad) (bad) jo adc gs push rex.XB push shrl shrb hlt sub push mov imul lahf stos repnz scas rex.RX xchg movabs out in out test retq fdivr and mov js or rex.RXB cmp xchg jrcxz (bad) cltd vpcmpgtb sarl retq jbe sbb mov mov add (bad) loope add not scas (bad) jle addr32 adc ds rcrl adc cwtl adc enterq xchg cmpsb xchg in icebp lock rex.WRX jge int3 jrcxz fisubrl cmp shll add (bad) xchg jns imul rex.XB jg (bad) movabs sarb push scas sub lea ja adc test (bad) mov loopne sub sarl mov (bad) and movslq or lods cmc rex.B cmpsb jp mov rex.R push ffreep scas in (bad) (bad) rex.X data16 pushfq or std (bad) jl cwtl data16 movabs rex.WR (bad) adc or hlt test xor je jmp push mov popfq adc stos sub adc mov jb ja int cmp mov loopne fisttpll (bad) add pop sbb outsb jge or loope lret (bad) pop loopne loope (bad) lods cmpl or fidivl sub rex.X xor fs adc cmp int andb imul int3 mov and rex.WR outsb rcll mov jp xorl push movslq insl rex.X sarl rex.WR rex.RX (bad) (bad) jg in sbb rex.WRX add (bad) icebp pop add xchg divb cmp data16 rex.RX jbe cmpsl test shr js sarl mov adc cmpb lods rcrb pop rol (bad) xchg cmp in or push (bad) (bad) or sub xchg ss xor (bad) xor clc cmpsl cmp (bad) sbb movabs add rorl xchg (bad) sub mull mov pushq (bad) repnz imul insb (bad) rex.WRXB movabs sbb movsb rex.RXB adc es cld push test jp rcrl pop (bad) loop jl (bad) je mov cmp add loope rex.RX pop pop rcr (bad) pushq (bad) lret and push pushq callq fstps mov rex.WX hlt fcmovb mov fmuls mov and push jne decb iret int3 push test (bad) je loop rex.WRX xchg jb mov (bad) rcrl cmp jle movabs (bad) je scas (bad) rex.WR rex.RX xchg out jg mov pop (bad) repnz imul (bad) in pop mov cwtl add sbb xchg xor (bad) xor mov jne and jae xor xchg (bad) iret jno (bad) (bad) adc cld rol stos xlat rex.WB mov pop fimull (bad) movsl and cmp outsb xchg lods add (bad) mov jge xchg (bad) mov mov (bad) (bad) test (bad) xchg mov (bad) pop hlt (bad) xor (bad) cltd sbb xadd mov push jb mov and add (bad) (bad) (bad) mov enterq (bad) xor out adc (bad) ffreep mov mov int3 sarl rex.WRX (bad) je (bad) jb rcl mov mov lfs je xchg jrcxz mov imul (bad) fiaddl (bad) sub rex.WB leaveq add cwtl add (bad) mov movsl loope rcll in mov mov xor (bad) shrb stc jno or shrl mov rex.XB lods or pop rcrl loope mov jno add xor push (bad) out rorb sahf (bad) mov clc (bad) or outsb movabs ljmp lret movabs mov mov subl xor add (bad) cmpsb rcll enterq push xchg stc lret cwtl mov cmp or add rex.WR rex.B jp hlt std (bad) (bad) and es mov rex.XB ds popfq mov sbb addr32 adcl test mov jg gs repnz rex.X mov xor fs push out fisubrl repnz cmp and (bad) mov mov add push movabs mov xor rorb cltd add (bad) adcl xchg rex.WRB movabs adc enterq (bad) pop sub add (bad) rex.WXB cmp mov (bad) (bad) pushq jne rorl or mov pop pop rex rex.B fnsave fwait outsb (bad) rcrl xchg ja callq push cmc sbb push (bad) or ror (bad) cmp (bad) pop push (bad) push fs jrcxz sub rorb add xor movabs es rex.WRX sub pop rex.RX rex.B retq in fstpt mov pcmpeqw movslq xor xchg (bad) pop mov insb mov mov fdivrl pop push (bad) insl rex.RX cmp (bad) (bad) rex.XB rex.R mov (bad) (bad) (bad) jrcxz push cmpsb (bad) lock xor lret (bad) push loope,pt jg rex.WRX cld mov in in movabs fisubl sbb rex.WR lods add cwtl add (bad) imul sbb out add xchg iret cmp add (bad) mov gs sbb lret (bad) mov lret pop cltd outsl (bad) jl je mov sub or out (bad) lret push add movabs shl mull cmpsl or repnz xor imul movabs or rcr rex.RB je std movabs (bad) xor mov jg mov scas rex.WX rex.XB imul jnp (bad) sarl mov cs addr32 (bad) idivl cli iret icebp sbb cmpsb scas (bad) test cmp test pop outsl out xor stos jbe cmpl repz out (bad) cmp mov (bad) in and xorl clc (bad) xor fs xchg sti rex.RXB movabs jae out and jno rex.RXB rex.WX rorl movsb (bad) roll out lods (bad) jae cltd sbb sarl push (bad) jrcxz mov loop cmpl mov (bad) lock pushfq (bad) jns cli push lods adc and xchg pop test push (bad) rex.RB cli (bad) movabs sub rcr rex.B rex.WR sub (bad) xor (bad) int3 fwait xor cmp (bad) mov xchg repnz pushq rex.B fs loopne,pt leaveq lods rex.WR bnd adc sub test vpsubusb pop cmp jno fidiv add jp or iret leaveq (bad) jmp lret imul add sub fcmove int3 int movsb jrcxz cld adc and push testb movabs (bad) pop pop mov fimull stos mov or mov and (bad) popfq jp xchg xchg rex.R cmp add cmp (bad) lods and insl movsl hlt stc jmpq mov sahf div rex.WRB (bad) mov vcvttsd2si push movb (bad) (bad) shlb fdivr (bad) xchg sbb repnz fcmovnb push rex.RX lock fidivl pop out pop xchg callq (bad) pop cmc jle cltd adc sbb pop mov jnp (bad) insl mov (bad) sbb and cmp add es (bad) or out vdivsd jno rex.WR push repz rorl (bad) xor add (bad) rex.WB lods (bad) clc pop pushq mov (bad) mov rex.B pop xorb jb retq scas jne fimull add (bad) (bad) mov and nop (bad) ss movabs je cld rex.WRX and add movslq (bad) pop or cld rex.WB cs scas rex.RB sbb cmpsb xor outsl movabs and ja fadd xchg xchg (bad) fisttpl movsl cmp xor retq (bad) rex.WX rex.WB (bad) and rex.WX stos shlb ja cmp and or cli sarl mov xchg mov xchg mov in movabs ds xchg (bad) ljmp pop imul mov or jb rex.WRX ds cli rclb nop rex.RXB rex.WR lret add rex.WB rex.RB (bad) retq lret data16 jbe imul (bad) (bad) rcrl xor or (bad) mov icebp lea cmp mov retq outsl add jg and rex.WRX and xchg rex.RXB cli retq mov sub jns (bad) adc push jl (bad) xchg xlat negb retq mov sub mov sti (bad) rex.WXB rex.B movb push lret mov rex.XB cwtl (bad) or cld lods imul addr32 (bad) (bad) repnz rex.WB scas rex.RXB or add fisubrl leaveq xchg jnp (bad) sub cmp mov lret sbb xorb pop (bad) hlt adc lret shrb mov and insl movsb leaveq mov stc rex.RX mov rex.R icebp decb adc rex.WR (bad) jnp sarl jrcxz (bad) js xchg sarl jnp and rorl xchg (bad) repnz ss (bad) hlt (bad) movsb scas shll (bad) icebp mov int3 mov xchg fiaddl insb rex.WRXB or (bad) imul mov jl int push sbb and jle push sarl (bad) jne or push xor mov rex.WRXB outsl add and xchg (bad) (bad) movabs cld (bad) shrl sub rex.WB cmp ja xor add rex.B mov cs (bad) loopne mov rex.B stos divl pop (bad) (bad) int sahf iret xorb roll adc shl push fildll adc cs sub stc mov cltd insb fld shl fdivrl retq xchg cmp pushq push retq (bad) cmp push shrl out sahf mov (bad) roll (bad) rex.WRB (bad) mov jmpq lret fstps rol xor sarl pop push out xchg xchg xlat lahf mov fnstcw rex.RXB in mov mov (bad) imul (bad) push cmpsb jae jrcxz and jl jns rex.B sbb (bad) test mov rex.WXB scas jnp lahf addb adc push movabs cmp movsb pushq (bad) adc jno mov adc adc je,pn sub jo jne cld (bad) lods jno push repnz retq (bad) clc push push (bad) retq (bad) (bad) mov fcompl retq rex.R add rex.W fdivrs sub lods retq xlat rex.WRXB or jnp test pop add rcr jae (bad) adc clc mov cmp lahf rex.B (bad) xchg mov sbb mov lret fucom ds nop and loopne jge and cmp loopne or jne (bad) movb cli faddl rex.WR out or jrcxz test pop js xchg retq enterq callq push mov (bad) repz (bad) (bad) movabs (bad) sub loopne push mov rex.B xlat xor callq insl movabs pop fs pop mov lock sbb (bad) and sti (bad) retq xchg fstpl jno jb sbb rex (bad) push int and loope cmpsl xchg rex.WR divb leaveq (bad) shll and sbb (bad) xchg int sub rex.WX mov repnz rex ds add outsl int rex.WRXB push and jnp mov in loop jno rex.R sbb cmp cmp (bad) jnp (bad) xchg test enterq imul push push (bad) sarl mov add mov enterq movsl xor es or xor stc cmp (bad) (bad) pop xor (bad) (bad) mov cltd orb movabs (bad) cmp rex or (bad) pop xchg (bad) callq loop sub scas rcl movsb test mov lock (bad) cmc adc pushq fisttpl rex.WX movl enterq (bad) push rex.B adc pushq movabs pop adc and test loopne int3 enterq (bad) enterq cli cltd (bad) rcll stc jg rex.XB test xchg mov jbe popfq sarl (bad) and xor rex je fldcw std and mov pushq (bad) rcl fsubrl (bad) (bad) iret cmp iret test (bad) movabs xlat incl and scas rex.WXB roll and pop add (bad) sbb pop mov (bad) rex.WXB sarl sbb sar out xchg add rex.RB lea mov push in adc pop rex.RX fs mov pushq (bad) adc test sbb or stos pushfq out mov cltd (bad) sar sbb jae push shr callq rex.RXB popfq ds (bad) (bad) mov xor and adc dec (bad) mov mov rex.WR (bad) data16 cmp lret repnz adc outsl cmp sbb mov jge xchg out pop add insb rex.WR mov xchg scas rex.WRX pause loopne cmp movabs cld callq inc xlat adc pop xchg data16 bnd sbb int3 jp,pt rex ss out adc je out mov sarl pop (bad) (bad) int3 mov loope (bad) cmp callq rex.RB enterq jnp (bad) rex.R cmpsl sbb lock jb movabs sbb push enterq in rex.RX test mov cmpsb lahf cmp repnz sbb stc movabs mov icebp sbb rex.XB cmp (bad) rex sbb movsb xlat add jl (bad) jne push (bad) rex.WB out push (bad) (bad) xlat cmc mov pop sarl pushq and sbb (bad) data16 push cltd or jnp movabs jle (bad) imulb gs jmp rex and leaveq out (bad) pop loope mov rex.RX push (bad) movabs pop iret xor adc gs (bad) data16 (bad) cs pcmpgtb insb mov rcr mov fstpt (bad) iret (bad) mov pop cmc rex.RX (bad) (bad) shrl rex.WB and fsubs shll rex.XB jbe (bad) and rcl fidivl callq std add (bad) (bad) rex.WR pop iret movsl add (bad) gs (bad) (bad) pop rex.B repz sbb es and (bad) mov movabs rex.RXB (bad) adc xchg mov lcall pop jb js fwait add xor cmp loopne ror rex leaveq xchg test rex.RXB rex.RB mov lods ss adc sbb lret out xchg cmc add push (bad) js setl pop in rex.X jae mov sub cld xchg rex.WRX add jae repnz insb retq rex.B mov mov rex.WXB sarl (bad) (bad) stc and xchg sbb push scas rcrl mov rorl push xor lods enterq mov add or (bad) adc out pushq pop (bad) icebp add cmp out ss test stc (bad) add xchg mov or xchg jle sbb imull adc (bad) sarl out rex.XB or movslq jne (bad) lret pushq xchg rex.WB lretw xor sbb cmp adc (bad) xchg rorl rex.WRB or pop loope lods mov fist hlt xor rcrl cmpsb divl pop out and pop adcl decb fcomps in jbe movabs adc or mov sar je out imul insl pushq insb xor callq iret outsl lods rcl push push cmpsb xor sbb cmp and sub add int and (bad) (bad) fcmovb adc in lock movabs mov pop cmp test imul setp push fcoml and (bad) (bad) xor cmp sarl addr32 and (bad) xchg movb adc in iret pop push and rex.WRXB sbb fstl (bad) es and sbb push (bad) in (bad) jne jae (bad) lods push mov scas sti testl pop iret (bad) popfq add (bad) rex.WRXB movabs mov push pop cmp movsb mov xor rex.B adc rex.X ss adc (bad) ja adc and sub je roll or rcll xor adc xorb shr sub lea (bad) add (bad) (bad) shrl cmp sahf (bad) adc retq in (bad) (bad) xor rorl pop xor pop push xor mov mov nop movabs mov rcr out mov sarl outsb add add (bad) push xor rex.WXB int3 and ds ror movsl testb test (bad) int3 scas pushq movabs sbb (bad) sbb cli sub xchg cmpsb movabs cmp jae je movabs rex.WRB (bad) rex.R (bad) rex.RXB stc vmulpd js lods (bad) xchg fist mov sbb ss rex.RXB xlat movslq pushq mov roll rex.X shrl mov lahf negb (bad) rorb int movabs sub rcll xlat cmpsl jp mov out (bad) scas movabs mov callq mov jae adc xor insl (bad) and leaveq rcrl divb rcr (bad) xchg mov repz leaveq ds mov rcl movabs int mov mov sbb lahf push mov stc adc rex.R xchg xchg rcr (bad) loope mov (bad) rex.W repz mov push rcrl mov rol or jae (bad) (bad) jns (bad) (bad) rol fldcw gs sub mov lods jp scas rcrl pop (bad) xchg xchg jne leaveq (bad) (bad) fisttpll rex.RX mov xchg (bad) and imul cli push addr32 rex.RX xchg shll (bad) and pop mov scas addl roll repz mov rcll xchg (bad) shrl rex.RB pushq xchg mov std sbb (bad) mov rcl and add mov add pop jp rex.WB (bad) movsl movabs rex (bad) lock jle movabs out imul rex.X add rcll cmc div jne jp (bad) in xchg mov jns leaveq (bad) in xor pushq (bad) rcr sarb jrcxz xchg mov retq shl loope cltd leaveq add shrl mov rol mov leaveq xchg (bad) shll movabs adc std pop in cwtl sbbl sub xor (bad) adc add std push xor ffree rex.RX adc adc jbe mov (bad) mov (bad) idivb je sub imul xchg cld clc in (bad) mov test repz (bad) idiv sub sub imul sahf outsl xchg fcomps (bad) sbb fxch adc rex.WXB lretq repnz fild xlat xor jnp (bad) cmp (bad) mov jno jle (bad) or rex.WRXB cmpsb fisub neg subl (bad) retq incb pushq pop mov movsl add mov fbstp vpminub outsl jae pushq jno gs pop std callq mov mov rex.WR push loope loopne (bad) jmpq (bad) jns rex.WRX jno cmpsl lret cld adc or lods (bad) rcrl (bad) mov (bad) lods mov (bad) imul loope cltd repnz rex.XB stc int3 test lret rol or mov push icebp enterq sbb (bad) jo fldt cmp and jne pop mov imul (bad) push mov scas cmp add (bad) (bad) adc movb pop pop pop rorl rex.WRXB movabs (bad) ss (bad) pop (bad) lea jg cld (bad) ds retq outsb movsb rex.X fdiv cmc rex.XB rex.WXB jrcxz and pop push sbb leaveq rex.WB hlt movabs cmp adc fwait lods test sarl lahf (bad) cmp cmpsl sbb push mov jbe or (bad) outsb jmp rcr (bad) push or pushfq lahf add loopne rex.WB mov std rcl andl jnp rex.WRX pushq sub roll pushq sub pushfq cmp sub pop cmpb (bad) mov and (bad) cli test rex.WX lret lret jp in sar (bad) jbe sub lret icebp ffreep mov test sub xor andl icebp test int3 retq test cmp clc int xor outsl repnz movabs xor hlt push (bad) rex.WRX out cld (bad) in sub sub loope (bad) and ss or jno mov rolb push int3 lea movslq and rex.XB mov in jns and rex.XB orl (bad) repnz nop (bad) cmc mov test sub mov sar (bad) (bad) cltd mov fmull rex.WR jbe (bad) or flds xor repz and movabs rex.X hlt fcmovb jmpq movsb shll outsb inc push and in mov lods mov (bad) or mov pop sbb rorl lahf rol cmp xlat (bad) lock in add rorl pop add xchg test jrcxz je xchg (bad) jno or repnz imul xor cmp xor xlat shrl mov cwtl insb (bad) jae iret pop cmp (bad) outsl (bad) xor addr32 sub mov jae pop cmp sbb rorl and clc or repnz xchg (bad) sbb add icebp rorl lret (bad) repnz cmc rcll xchg movslq mov and jmpq movsl mov sbb sub mov adcl cmp xor imul and lock js icebp (bad) push movabs in (bad) std movabs shrl add rcll rex.RXB enterq retq cld lret jge scas stos and add xchg (bad) std (bad) loop cmpsl add xchg pop xor gs rcl jmp addl adc (bad) xchg rcll imul (bad) sub (bad) jne cltd cld outsl jmp mov movabs callq out cltd fbld mov (bad) fadd (bad) rex.XB sbb jae lahf std roll jrcxz rex.WRXB fs cli sbb adc jmpq push iret rex.R fildl mov fiadd jle adc jb roll (bad) push cmpsl sub rcll outsw xlat add sbb fildll mov and mov (bad) out cmp mov fstps pop ror pandn movsb (bad) (bad) pop push out scas cmp repnz rcll in jae cmc add pop data16 xchg int3 sti sbb push cmc xlat iret jp loop (bad) jg add sub loope mov sub jl (bad) repnz insl xchg adc roll ds cmpsb push xchg (bad) faddp cmp cli in rex.RB rex.WRXB roll adc pop (bad) shrl lret (bad) sub sbb rex.X mov mov popfq movabs retw in int3 shll adc jb (bad) jbe stos add nop (bad) out in cmp mov iret data16 shlb xor sub cmp jmp jno sar (bad) jrcxz flds rorl shrq cmc xor sbb leaveq (bad) fcmovnb jbe ja xchg fistp retq gs std (bad) mov movabs xchg movabs popfq rcr cmpl repnz push mov in rex.WRX loope jae pop mov pop sahf mov xor (bad) jno movabs cmp (bad) insw rex.WRX loop add out ja test (bad) pushfq clc rex.B sub popfq (bad) std rex.RX int3 (bad) sub or jge xchg (bad) mov movsl xchg jo clc mov add push (bad) sub cwtl mul retq addl retq cmp rex.RXB rex.W std (bad) popfq loope out movl sbb mov jne test stos mov (bad) (bad) add jae xor cs pop lock cltd push pop cli stc ja retq mov in jae sub xor xor int sbb pop add shl (bad) ficomp ds movslq rorl iret loope sbb and mov (bad) jrcxz and iret rcll rex.WRX cltd cmp sbb in mov not (bad) repz push jrcxz xor (bad) ds mov loope mov rex.RX (bad) sti push sub add movabs mov fcmove adc adc and mov jrcxz out jae xchg jl mov retq rorl mov mov xor (bad) imul popfq insl and cmp rcll add lret icebp popfq repnz rex.RX and test enterq roll (bad) jg lock retq (bad) sub cmp lret in (bad) (bad) jno movabs repnz in cmp mov std ss stos lret pushfq mov add retq mov add sbb xchg cltd ss jb rex.RB (bad) callq jne and jge adc rex.WRX pushq xor cwtd (bad) or rex.W lea push mov or jo (bad) in stc or ds add cli mov out ror xor in mov ja rex.B cltd rolb fadd mov and out (bad) out rex.WRXB (bad) xor lret test (bad) (bad) (bad) pushq push int3 adc lods mov in push roll jl cmp ds rex.R xchg jb in sub (bad) pop test mov adc movabs enterq cmp mov adc mov ja in xchg rex.R callq outsl out mov sti cmp cld add test xchg (bad) in repnz cmp and lods cmc (bad) push pushfq rcll rex.X rcl rex.XB shlb mov rorl cmc add sub add push std sti popfq movsb lret enterq jle xor push rex.RB mov jle rcll je rcll mov pop mov movsl xchg loope (bad) mov rcrl jge ja icebp fstp add adc fsubs (bad) movsl push movabs push movabs pop insl sbb mov sub outsl leaveq jae (bad) jmpq callq (bad) mov out (bad) (bad) mov (bad) cmp (bad) cld (bad) test movabs rex.X sub mov rcll (bad) cmp pop add or cmp in retq loopne jle rex.RX cs fidivl insb fsubrp mov iret rorl or xchg es xchg fsub retq shrq mov cmpsl fld add (bad) (bad) pop and outsl jge add je sbb (bad) push rex.WR rex.WX (bad) (bad) stos (bad) movabs cmp rex.RB (bad) out scas rex.XB data16 fistp jb mov js (bad) loope (bad) sahf xlat mov rex.WRB xchg xor cmp adc imul iret rex.RXB push rolb rex.X rex.R lea icebp fist push fwait rex pop pushq pop movslq nop or es adc (bad) movabs rclb cld (bad) mov (bad) lods (bad) (bad) (bad) (bad) rcl roll test xchg (bad) jl jb mov in mov xor (bad) rex.WXB sub fcomp (bad) (bad) pushfq popfq fs mov (bad) mov rex.WB xlat rol push repz lea (bad) rex.RB (bad) repz (bad) pop mov cmpl js lods lahf shrb mov stos int sarl jnp jb lea rex.WX popfq int3 (bad) mov cmp cltd shr clc (bad) movabs imul rex.RXB pop movabs movslq sbb add (bad) pop rorl adcl (bad) mov (bad) fmul out (bad) (bad) retq loop cmp mov (bad) mov (bad) rex.WRB lock out movb sbb retq scas outsb shlb mov mov and rcll (bad) cmp xchg int3 jrcxz pop loope js pushq (bad) and imul lret add jmpq test mov lea stc rcrl adc (bad) (bad) je xor xor mov stos cmp std cwtl lods or popfq add adc (bad) mov jae rcrb (bad) shrl sub sbb xchg fidivrl mov xchg xor outsl xchg sarl jns stc (bad) sub out lretq jnp or add pop adc sbb (bad) mov in xchg movabs test jl push repnz adc (bad) xor xor cltd out sub xor loopne xor jnp sub (bad) repz movabs scas add rorb (bad) popfq jnp fadd (bad) xchg movsb pushq lret cmp xor adc and sbb frstor (bad) sub (bad) mov test xchg pop rex.R sbb push negl enterq sub mov iret or out loope test cli or mov sub movabs jbe adc loopne sti sbb insl (bad) hlt xchg (bad) int xchg mov pop retq nop or addr32 insl mov (bad) adc test test (bad) scas fadd (bad) or faddl adc xchg ficompl shll movsl (bad) lahf callq sahf rex.WB test bnd test add push je or adc shrl fldenv xchg rex.X rex.WRX xchg cmp adc movb adc push cli adc rex.WRXB sub pop add add loop add xchg cltd ja xchg int3 test rorl lret scas repnz push (bad) and cmp (bad) rorl (bad) in (bad) nop cwtl pop or roll ds sbb sar fs xchg mov rex.WX pop retq adc pop cmpl push rorb cmpsb add cmp int3 pop cld scas mov lret frstor sub fdivrs or (bad) mov loop fsubrl test movsb mov (bad) (bad) (bad) sahf mov sarl fwait jle mov cmp (bad) (bad) in (bad) and (bad) mov sub mov (bad) cmp retq push pop xchg mov and (bad) (bad) push xchg lret jle cmp lret or jl add lods mov in pop rex.WRXB lret adc subl out sbb stos imul cmp orl push enterq sub test jo ffreep rex.RXB jg rclb (bad) pop clc mov cmp rorl rex.RX enterq mov (bad) push (bad) data16 rex.X (bad) or outsb push (bad) sub and fs cltd jae mov push or movabs rcrl lock or or adc fcomp or jae pop loope sbb sub retq mov rorb mov and rcll ds (bad) rcr pop scas sub pop xor jle jg add ss lret (bad) push and pushfq add (bad) adc xchg sub jo imul roll pop push subl push xchg sub mov and stos cmp jbe add (bad) (bad) adc rcrl ror add adc test test sbb iret and test add clc cmp enterq addr32 (bad) mov stc (bad) (bad) jb add xchg push lods mov data16 adc push and xchg sti mov (bad) jrcxz pushfq xor and enterq sub (bad) xor mov movabs mov (bad) (bad) nop pushq (bad) mov xchg jmpq outsl (bad) mov xlat jg (bad) out shr sbb cmp gs (bad) cmp pinsrw and rex.R jl push xor mov mov (bad) sarl testb mov repnz jne jns fldenv faddp cwtl mov or rol insb adc (bad) icebp add (bad) (bad) (bad) rex.WXB xchg sbb mov jmpq (bad) mov loop jns test mov xchg and enterq sbb (bad) outsb add mov movabs cmp jbe ffreep jmpq (bad) mov retq mov (bad) js scas (bad) jne xor stos adc fcmovnb sbb xchg lret xchg jbe negb int (bad) sub xchg ficomp icebp (bad) sub iret and (bad) mov ss movabs (bad) xchg rorb int jrcxz or sbb (bad) rcll js rcrl jno (bad) fimul ds jno lret xchg pop sub fdivl popfq rcrl enterq rex.R movabs imul xchg (bad) or out in stos shll shrb rex.RXB (bad) pushfq repz pushfq push xor leaveq sbb in rex.XB jl rex.XB int mov (bad) fbstp retq or (bad) mov (bad) (bad) cmp sub pop rcrl push test push rex.WR test (bad) popfq in and add jns add insl and leaveq movsl pop scas iret rex.RB test (bad) roll (bad) jns mov data16 cmpsl movslq popfq add sbb (bad) imul fdivr xchg out cmp rcrl cmpsb adc xchg clc (bad) push (bad) (bad) (bad) or scas or mov mov add sbb (bad) push cmpsb and push div sub jbe mov movslq or xchg gs push xchg out shrl mov (bad) (bad) xor and rcrl and push (bad) xchg xor xor (bad) jns retq cltd repnz sub (bad) cmp cli mov callq xor jl xor lock rcrl xchg js outsb and push xor fnsave mov mov pop cmpsb fsubr xchg leaveq movsb pop fxch (bad) pop movabs or loope out (bad) mov or cmp mov jrcxz and cmp mov add adc or js sub jmpq xor lret or (bad) roll pop int fstl insb rex.WX (bad) mov rex.WRXB jp ficoml lret push cmp mov pop lret or add pop icebp rorb vpmaxub rex.RB mov (bad) jo fisttp in jo pop push rolb frstor movslq enterq rex.WRXB rex.X rcrl and sbb adc fwait jae xchg (bad) cmp cmp mov sbb (bad) movsb sub mov or movabs mov pop hlt jbe enterq adc enterq (bad) add insl retq sbb adc cmp pop cmc cmc xchg cmpsl lea enterq (bad) shrl cmc add loope jp add sbb push (bad) adc and (bad) repnz loopne mov (bad) lret jmp stc in int3 fsubl adc cmpb outsl clc xchg shlb add add cltd and or (bad) or adc fistl sbb (bad) xor cmp rex.WR (bad) out jle (bad) rex.WRXB outsb iret movabs mov pop stos fstl jns mov xor xchg (bad) (bad) mov mov add fnsave rorl cwtl rolb pop push adc (bad) (bad) mov jge movabs sub mov scas mov adc in hlt jno retq out cltd int or movabs cmp jno movabs jrcxz pop rcr sub xchg in sbb adc xor or and lcall (bad) repnz hlt mov jb xchg sbb rcll jnp rcrl sti (bad) lahf pop xchg rex.B cli mov fsubrl out mov cld rorl sarb or movabs (bad) movabs push (bad) sbb add rex.R addr32 xchg stos loop push roll rex.WRXB fisub sbb std xchg idivb xor cmpsl mov mov or or addl imul sbb rcl faddp jns stc (bad) (bad) and add mov jo mov int3 lods cmp loope xchg (bad) jo iret sub pushq shrb jnp repz (bad) and rex.W (bad) (bad) pop xchg mov sahf int addr32 roll insl xor mov add lea push adc loopne jae out mov shrl shrl pop lods popfq repnz cs add test ffreep (bad) lock sbb movabs outsb roll sti shrl (bad) jle mov insb test (bad) (bad) xchg fidivr sub insl add hlt movabs in xor sar pand xchg stos shrl in push (bad) movabs jae vmovntpd add es xor (bad) or movsb or cmpsb sbb movsl (bad) int out and cmp lret enterq fisubl orb hlt (bad) and (bad) push rcrl lret jno fistpl sbb imul add adc out cmp lret cmpsb xchg mov mov add rol cmp add popfq movabs push je sub cmp out (bad) adc sub cli add (bad) icebp shrl push mov ja mov push (bad) (bad) (bad) push data16 test (bad) or cmpsb xchg (bad) mov sub sahf insb jbe stc mov imul adc movabs negb ja jb test mov adc imul adc clc add rex rcl fs (bad) pop (bad) scas ss shll xor mov rex.RX (bad) rex.RB mov cli and lods lock (bad) or roll (bad) scas (bad) pushfq pop push retq cmpsb negb rcr rcrl out mov test (bad) pop in jg push in rcrl adc rorl outsl stos rcll jno mov cli rex.XB movsl (bad) jmpq stos enterq cmp nop clc sbb movsb xchg cli jg movabs and scas clc jae fdivs jb ror mov mov imul push xchg sbb (bad) cmpsb rex.X jns (bad) roll lea in cs sub shll jmpq repnz int popfq add movsb jo lahf (bad) rolb (bad) sbb mov rcr xor (bad) movabs (bad) mov roll push loope (bad) mov add (bad) cmp cltd in rcll mov retq (bad) or and push rex.RX (bad) jg (bad) std cwtl movabs iret or mov loopne push push and sbb popq (bad) jno retq out stc iret nop adc and (bad) mov cld (bad) (bad) (bad) clc movslq test scas (bad) fnstenv pop ss jb movabs pop in movsb mov js stos sub (bad) xor and imul or pushq (bad) cmp fs fnsave sbb cmp adc lret sub std xchg jmpq out nop fcoms add xchg lret add mov or (bad) mov sub (bad) repz rcrl jp (bad) test psubd and adc cmpsl (bad) int3 jl add add rex.W mov push rex.WXB data16 rcl (bad) insb sub loop int pop sti mov xor mov pop shrl subl mov (bad) cs cmp rcll mov add fwait xchg cld (bad) mov jo or enterq xor adc insl sbb fadd and mov mov sbb (bad) in fsts cli pop rex.RXB lret sub outsb sarl cmpsl stos add (bad) sub insl (bad) retq (bad) cmp push mov pop adc rex.WX mov rolb testb shll or pop add xchg cmp gs int add or (bad) or rex fxch xor out jrcxz add (bad) pop lret and rex sub fsubrl add iret jrcxz xchg (bad) lret sbb rex.WB vcvtss2si sub fsub (bad) inc mov xlat std pop (bad) stc addr32 sahf rorb xor fsts and push leaveq mov and adc fisttpll sarl gs rex.WR xor std sbb mov or flds fdivr jo mov mov sahf sub (bad) (bad) nop (bad) or fcomps cmp movslq shrl (bad) rex.WRX lret (bad) xor (bad) pushq repnz jmp rex.WR xchg mov push sub sarl xchg rex.R callq fsubs rorl add shrl rex.WRB data16 and rcl pop pop rex.W xor push xchg cmp mov in out pop sbb shr (bad) jo jle cmpsl negb mov (bad) in rcll imul fstps mov mov xchg scas retq cmpsl rex.XB jp cmp and add adc (bad) (bad) int (bad) pop lret (bad) (bad) imul (bad) cli fdiv rex.W add scas jg cmpsl outsb cli vshufps loopne mov std pop xor add js jg decb push rex.RB mov push rex.XB sub push sbb rex.B repz pushq int3 fsts rex.RX in or adc rex.WRXB sub enterq cmc pop rex.WX retq jle jb (bad) rex.RX xor movabs add pop adc rex.X xchg mov movabs enterq retq movsl repz sub (bad) sbb popfq rex.WRB cli fmul push and faddl fs add cmp sub mov sahf add sbb and (bad) movabs test (bad) cmc jrcxz lea xchg jo (bad) mov cmp adc movslq add add movabs cs (bad) mov fisttpl fwait and rex.R int cmp (bad) in fisubl push in imul rcrb (bad) or xchg int3 (bad) pop (bad) pop jbe fwait jp mov mov or fisttpll sub mov mov neg rcrl lret mov mov (bad) lret mov push mov imul mov add pop pop and callq mov mov add es push cmc in rex.WR jae sub and pop add sub (bad) sbb fadds in cld xchg jmpq movabs sub in fstpl xchg bswap (bad) fimul (bad) mov pop mov (bad) lret fnstcw xor test push rex.RX rcrb mov std xor sbb (bad) rcrl cmpsl in rex.WRXB or out movabs (bad) fwait jle mov (bad) rcrl iret decl add (bad) nop test (bad) and cwtl pop rex.B repz jmp out adc pop jo xchg push (bad) je sub loope jrcxz mov fwait jge outsb test mov test rex.RX (bad) rex.RXB pop rex.WB add jno mov cmp rex.RX and pop out orb (bad) mov (bad) rex.W and mov (bad) fucom stos push jno out (bad) rex.WRB (bad) (bad) mov xor ja (bad) (bad) stc jge fdivrs mov xchg cmp sbb xchg and lods (bad) jae ja cmp adc rex.WRXB stos mov popq sbb iret sbb sbb sahf fs xor xor xchg (bad) jp pop push lods (bad) mov or (bad) pop out pop test cmp mov adc test sub out imul mov rex.WXB lret mov (bad) movabs push callq (bad) mov or lahf xchg rorl xor (bad) cmc movabs lret rex (bad) fwait rex.WRXB xchg rcll shrl push movsb (bad) fs rcrl pushq cmc push in fadd ja adc or pop mov jb sbb xchg movabs mov add (bad) cmp (bad) jne fsubrp rex.R xchg pushfq rex.XB rcrl jmpq add mov or stos jb mov gs mov and test pushq stos or roll loop retq std xchg movb jno callq or movabs insl (bad) idivl rex.XB rex.RX or (bad) xor (bad) xchg add lahf movabs in rex.X roll gs out (bad) jbe rex.WRX xchg stos sahf rcrl rcr (bad) repnz cs xchg imul push movsb rex.B or adc adc (bad) outsl xchg mov shrl jb sarl sbb out and callq jl mov (bad) (bad) jl stc (bad) (bad) sbb pop cmp idivl fnstenv rex.RB xchg callq out mov xchg icebp lea jno adc cmpsb enterq rex.WX rex.WRXB mov pushq rcrl xor shrl gs (bad) mov xchg mov jnp stc push sub sbb adc shr rex.WR fwait (bad) lock mov roll xor sub xchg decb mov push movabs in sub rcll xlat mov (bad) (bad) rex.X adc sbbl and rex.WRB sub lods rcll (bad) movabs leaveq jrcxz faddp movl (bad) enterq mov xchg cmpsl in cmp repz (bad) movabs ja add ficom std lea jae rex.RB fildll (bad) push rex.X retq imul add mov (bad) xchg (bad) (bad) retq or test loop push shrl rex (bad) and pop loope (bad) shrl ficoml std shrl insb imul movsl jb js mov sbb sub loope add mov test (bad) mov mov jmpq adc roll cltd out (bad) rex.WRX sbb out rcrl (bad) jg pushfq in sar jns rex.WB (bad) jnp (bad) sahf jp stos (bad) and (bad) popfq jo (bad) pop rex.WX loopne test xchg scas (bad) (bad) xchg nop cmp and sarl sbb and add push cli or movslq rex.X rex.W (bad) rcrl mov xchg stc or rex.WRX rcrl push xadd sti xchg ja out pop cmp sbb xor lahf jnp xchg test fdivs rex.B rex.WXB sub (bad) fst mov xor jmp icebp (bad) and imul addl ja movsb xchg sub push xchg sti (bad) mov (bad) jp jne ja xchg shrl xchg int3 lret push push mov and cmp mov cli callq fiadd mov int push out roll mov repnz mov adc callq (bad) and in stos (bad) push imul adc xchg cwtl push (bad) stos loopne (bad) pop xchg and fwait add mov (bad) clc callq rex.RX mov pushfq shrl sbb mov (bad) out (bad) jbe scas test mov fistpll (bad) movabs xor movabs rol sub adc callq icebp jmp stc pop (bad) hlt (bad) xchg movabs mov lea fldcw sub lahf push (bad) (bad) jl mov mov movabs mov cmp in cmp cmp rex.WR rex.RB ficom movabs mov mov pushq movb stos xchg sub cmpsb cmp jns lods xor mov or fsubs rex.RX mov xchg mov rex.WRX sub lods mov fnsave shll mov sub mov add faddp iret jg pop shrl repz pushq (bad) lret sti pop pop mov push push outsl rcrl cmc jmpq wbinvd sti sahf int3 repnz (bad) (bad) sub adc mov mov add lock icebp (bad) rex.RXB rex.X xchg cld mov adc add loopne rex.WRX sub jae and out xlat mov mov rex.WR lret sub pop out fidivl jp (bad) xor adc cwtl xlat stos lret popfq movsb or fsub (bad) cs mov and (bad) xchg add pushfq xchg fldt and (bad) adc rex.XB shrl loope jg (bad) test adc rex.WX fstpl push (bad) or pop or movabs shld loopne xchg rex.WXB ffreep ja imul (bad) (bad) xchg roll sbb (bad) cmpsl mov add fs rex.B (bad) cld mov ror scas (bad) mov (bad) mov xchg rex.WRB movabs push lret sbb int3 (bad) (bad) and mov lods (bad) jl (bad) pushfq int3 adc insb rex.B push push add enterq enterq loope sbb sub mov jnp sub roll insl xchg add bnd rex.WRX xlat xor jno (bad) mov loopne insl mov std mov ror in hlt int3 ljmp xchg sarb jns fistpll or adc int and (bad) xchg fisubl sub pop pop xchg imul xor or (bad) lret shlb xchg outsb push imul insl (bad) or stc mov sbb sbb (bad) or cmpsb sbbl xor mov fild pop lock jbe push movslq jp gs out jne (bad) sbb mov jns (bad) jge sub add add pop sti out repz pop movabs fdivrl rex.XB bnd fidivl xlat xor rcll (bad) fimull loop rex.R bnd (bad) and or rex.WXB test sub (bad) lahf (bad) not std mov cmp xchg (bad) push sbb (bad) icebp adc repz test jb test mov sub fisttp flds fldenv sti repnz insl pop mov leaveq jo (bad) (bad) rex.WR rex.WX mov and push rex.RB fcmovne imul mov adc xchg jo cmp rex.R rex.WRB xchg sbb and add in lods or and or sbb not loopne and (bad) jmp pushq callq adc cmp pop jle lret xchg out jg push (bad) mov and in rex.WRB adc mov rex.XB and mov rex.WB faddl shl xlat (bad) loope loopne (bad) or (bad) sbb mov cmp mov cmp (bad) push cli jg rex.WR ror mov mov pop sbb lods (bad) cmp xchg hlt and andl sbbl movl repz popfq lret rol out and lock shrl jp movsl jne movsb test or sarl retq fwait sub movsl ds int repz cs mov push fidiv stos lret scas nop sub in (bad) rol fild adc cld cltd xchg sub cmp mov xchg nop roll data16 mov (bad) mov rex.WRX cmc shll jge (bad) insl (bad) jae js adc and sub test add or fldenv (bad) int ss scas (bad) movabs pop roll rex.WXB rex.WRB jmp cwtl push cs subl shll rex.WRX (bad) je xchg icebp nop sbb mov (bad) push int pop insb rcrl mov pushfq xchg cmpsl rorl jne stc std push rex.X push test shrl mov xlat fimull cmp loop push pop movabs in rex.WRB (bad) push dec jl movabs xor fldenv rex.X sbb rex.WX fdiv rex.WRB rex.WRX iret or and jbe push xor sbb or push lret ja in (bad) sarl cmc roll mov movabs je shll movabs iret mov and mov mov mov loope insb xor (bad) jnp push sti adc shr or roll movsb mov hlt leaveq (bad) (bad) xor rex.WRXB rex.WX mov (bad) and fadd test not pop retq addr32 push fild rex.WX loope mov loop rcrl cmp or lret (bad) add cs fcomip stc pushq div retq cmpsl (bad) gs rex.XB jne fwait add fildll cwtl (bad) (bad) adc rex.WB in sub (bad) scas and rex.WXB pushfq and repnz imul sarl stc mov sbb fildl negb rex.RX roll cmp pop (bad) mov mov lods jns je rex.WRX out rcr cmp pop rclb pop callq stos rorl sub lret (bad) imul pop test fsubr test mov roll rex.XB rcrl scas test lea cltd jb xor iret sub adc mov xor jne sub pushq repnz mov add test addr32 movabs jno (bad) rorl loop sbb push shr lods (bad) imul rorl add cs rex.WX lea ds shll pop (bad) repz andl iret (bad) pop (bad) fild rcll (bad) pushq enterq add (bad) movsb iret in psubusb (bad) adc rex.WRX pop mov cmp (bad) and push and retq sub sub rcll std push jmpq sbb movsb retq sub sarl pop and xor clc fisubr push (bad) jae rex.B rex.XB scas icebp mov (bad) test mov vcvttss2si and jp pop (bad) mov (bad) and ficom sub cs scas jrcxz xchg scas sub rex.RB sbb imul leaveq loop or xchg cmp or xor jrcxz pop cmp (bad) mov (bad) mov cmp or jl int cmp add sbb rex.X jae (bad) and add cmp (bad) xorl xlat (bad) (bad) xchg shlb repnz pushq loope int rcl rex.RB out fdiv and imul xor rex.B xor (bad) xchg cmc (bad) pop rorl jo (bad) hlt cmp sbb sub sub (bad) rex.X loope rex sarl mov xchg xchg (bad) (bad) (bad) shlb xor xchg ror (bad) add fmull jmpq push fisttp fadds add xor add movl sbb mov cmp lea cmc pop gs std mov mov addr32 ffree lahf leaveq pop std push cmp shll rex.RB (bad) sbb xlat pushq andl movsb rex.WB ss std shrl sbb test (bad) and ror or adc faddp (bad) adc data16 mov iret (bad) enterq test push xor mov outsb int3 cmp rex.X sbb je or (bad) nop xchg fnsave sbb hlt rex.WB stc movabs rex (bad) mov insb (bad) mov mov push sbb rex icebp repz ds jno add (bad) in sbbl cs lret jle enterq cmp (bad) jge (bad) xor sbb ja outsb in retq xor stc add hlt pushfq push pushfq xchg movb xchg scas adc sbb mov callq adc rex.X mov rex.XB mov xor cli sbb imul add xchg (bad) rex.WX sub (bad) add cmc leaveq sub jmpq mov movabs rex.WRXB sbb fwait test (bad) mov js add outsb test int mov pushq (bad) lock pop xor (bad) (bad) and xchg mov fwait cmp sub (bad) rex.WRX (bad) js movabs movabs (bad) (bad) lea addr32 stc (bad) cmp xor data16 rex.RX or xchg pushq mull (bad) xchg pushfq cltd rex.WX rex.RXB rex.XB test push rex.WRB rex.XB mov mov mov mov mov rex.XB mov mov repnz int adc sarb jne lods clc test std in (bad) sub xchg imul (bad) ds (bad) adc movsb mov adc mov (bad) dec (bad) pop loopne rex.WB test (bad) jle not repnz xor sahf sub mov mov mov add mov or jns or rolb xchg movabs jns xchg movsb mov out orb rex.WB pushq rex.WRB outsl adc (bad) xor movabs mov xorl imul adc lock (bad) iret not (bad) add outsb or pop fstpl mov addr32 sti (bad) rex.R cwtl stos jne pop (bad) enterq decl fwait clc xchg lods push (bad) repnz mov (bad) repz repz out xor in mov mov out xlat enterq subl fadd (bad) xor push retq add (bad) sbb fs sub insl enterq rex.RXB rex.WRB repnz callq cli mov and fidiv lods (bad) test pushq jmp shrl cmp lods mov push push rorb rex.WX mov mov cmp out sub and xchg scas repnz rex.R mov adc mov callq movslq fs mov retq (bad) es fimul cmp mov mov rex.R test pop and lea xchg sbb retq in test (bad) xchg cmp (bad) xlat repnz retq mull cmc jns movabs xor cld sub and jg sbb mov in imul or xor int3 fildl or repnz (bad) cmpsl lods rex.XB xlat jnp callq retq or out push adc divq mov jge loopne sub (bad) or int3 cmp (bad) jns cli jg fcompl jge lods mov push enterq cs test (bad) pushq (bad) (bad) stc sub test rex.WRXB mov (bad) sub cltd out movsl subb xchg cmp sub rex.X (bad) movabs int rex.WRXB adc adc in es rex.WR fs in addr32 and (bad) cltd push int pop sub roll (bad) mov xchg fwait jge test pop iret (bad) out test push sub xchg fbld or push sub rex.RXB lods jnp (bad) mov jmp xor mov (bad) movabs clc (bad) mov jle retq movsb movsb jb rex.R jmpq retq stc push int3 test cmp test pop sub movsb je add xor rex.RX sahf outsl xchg lods stos rex.XB rex.WR (bad) xor or repnz pop movsl int3 xchg (bad) rex.WXB movabs fs notb cwtl imul sub pop add je xor (bad) pop (bad) mov rex.W and out mov clc sbb cmp int retq mov mov cmpsl (bad) andl jae jns mov ss imul and jbe sub je cmp mov stc in movsb rex.B jae in mov cmc jle (bad) movabs xchg callq (bad) (bad) xor movslq test jp rex.RXB sarb sub or or movsb xchg ja (bad) jne mov in cmpsb xor rex.X (bad) ja test jnp out pop int3 fisttpl icebp data16 bswap cmc sub loope mov leaveq add cmp enterq (bad) (bad) add rex pop loopne int3 mov cmp sub int fisttpll xor rex.WB rex.XB pushfq retq rex.R and (bad) pop rex.R cmpsb xchg rex.B sti jnp lock mov sub or cli adcl rex.XB out movslq mov pushq movabs pop mov rex.B jne andl mov repz (bad) leaveq lcall test and flds cmp out fcomps mov push sarl xor sub or fmul (bad) (bad) lret mov mov add rex.RB rex.XB ss mov or rcr or fsubs mov adc and retq cmp rex.RB adc (bad) mov mov icebp and (bad) stc loopne (bad) sub (bad) (bad) add retq in stos or add stc repz imul rex.RB lret mov fldenv push or mov cltd rex.RXB movsb (bad) sbb xor clc rex.WRX lock lahf fsubp mov cmp jl cmpsb fstps mov xchg mov mov test (bad) sub addr32 movabs rex.WB lods add loope mov xchg rorl rex.RXB add rex.RX movabs or fcmovnb out cld outsb rex.WRXB rex.WRX repz je lock (bad) mov sub mov or pop (bad) jp xorb repnz (bad) or push pop rex.RX xchg sub rex.W add or movabs and stc adcl out push mov pushq movslq vandps add stc stos or loop rex.XB xorl iret rex.WRB (bad) icebp es rex.B (bad) sti rex.WRX xor je sarl shll mov fwait push (bad) ror sarl std movabs (bad) roll sub rex.RX xlat add mov (bad) push cmp movabs (bad) pop pop pop push je movsb in fiaddl rcrb movabs rex.RB xchg mov rex.X insl int jne (bad) (bad) iret xor sbb add stc imul push int3 or testb jno xchg sbb mov out mov je in callq andb jno sub movsb and enterq test sub (bad) int pop rex.RXB in sbb nop shrl popfq rorb (bad) cli pushq mov xchg lock jo mov rex.WRXB jb cmpsl (bad) pushfq callq test shl (bad) cltd jl shrb cli jo mov lret (bad) mov fadd cwtl xor lods adc test in or movl addl cmp add (bad) xor rex.WR jge push or (bad) jae (bad) sub xor rex.W rex.WX and add cmp (bad) (bad) shll jp sarl jle lcall sbb (bad) imull cmp stos stc mov mov (bad) test addr32 insl (bad) sbb and adc idiv mov mov lock out movsl gs lret (bad) cmp sbb add (bad) xor rex.WRXB sti pop imul (bad) add (bad) (bad) rex.WB rex.WXB xchg sahf push callq pop xchg xchg out shrl (bad) ror sbb insb rex.X std adc (bad) mov add xor roll pop (bad) lret gs fcoml sbb test mov mov pushfq xchg out pop and cmpsb fldl sbb mov (bad) lea sarl stc (bad) cmp xchg loopne mov xchg pushq (bad) adc cmp xchg cmpsl sub sbb and add jbe (bad) shr push out (bad) lock rcl cmp rol (bad) xchg stos mov jb fldenv insl rex.R shrl (bad) adc (bad) pushq pop sbb popfq and add cmp hlt jno (bad) sbb fstp pushfq repz subl scas callq mov jb and fidivr andl xchg std fiaddl push mov jno rorl adc adc (bad) mov rorl or decl push imul mov push sbb rex.WX rex.XB (bad) retq ror cmp sti mov loopne clc rex.WB sarl in push lret enterq mov imul cmpsl push movsb fwait pop lret (bad) jb,pn lahf mov fcomps rex.RB or in xor mov jrcxz and rex.WRB loop iret pop sbb roll jns mov jnp rcl and push rex.WRXB mov rol add push jle add clc fstl (bad) lret or xor cs rex.WRB xor jle cmpsl sar rex icebp rex.RB shr retq push fs sahf sub (bad) mov movsb (bad) jl (bad) mov (bad) mov (bad) lods sbb (bad) or repnz cmpsb push in (bad) (bad) in pushfq sarb lret repz (bad) div (bad) sub push out retq out (bad) rcrl sbb mov mov sub repnz and movb jl lea pop and imul fs adc (bad) mov retq push sub orl rorb loopne rolb jmp mov mov sahf fadd (bad) xor nop and sub xchg lret pop repnz rex.WRX jo insb ds retq adc movl (bad) rex.WRX (bad) mov mov xchg jmp adc test or movslq loop fbstp out and mov add mov rex.RXB fbld (bad) enterq push rex.X (bad) outsb jb repz cmp fs xor adc (bad) imul pop push in xchg decb fbstp (bad) xor cld fisub jg jno pop icebp jg enterq (bad) rex.XB repz add push jl mov (bad) mov push fs (bad) loop repnz mov jne and in and cli movabs outsl mov icebp int3 test fisttp addl ds rex.WXB ds int3 (bad) loopne jp repnz fmuls test (bad) in rex.XB ss outsl cli repnz loopne (bad) sbb jl mov test push test (bad) xchg in sbb or cmpsl pushfq cmp lret movabs xor jp (bad) or (bad) leaveq xor sar xchg movabs leaveq (bad) (bad) enterq or mov xchg xchg rex.WRXB rex.XB add fcmovu cmc sbb jbe imul xor (bad) (bad) addr32 retq cltd (bad) jnp adc out jge fisubl (bad) pop (bad) jmpq xchg sub rcrl je jb xchg in rol testb jp out (bad) push iret es (bad) andb xorl out xor adc rcrl mov mov loope retq xadd int3 xchg stos (bad) rex.XB leaveq jb addb mov rex.RXB (bad) and rcrl iret sub sbb jnp ss (bad) xchg in jns lret xor (bad) xor cmpsl callq ftst shll and adc rex.WR mov in cwtl and mov add sub mov (bad) (bad) cmp divb and adc (bad) in mov sbb adc repnz sarb insb retq stc (bad) scas pop cmp jns (bad) pop vpavgb (bad) lret out adc repz mov ss xchg pop rex.WR out sbb adc cmc mov xlat xor mov repz (bad) adc pop enterq sbb pop test sbb sbb (bad) lods vhsubpd enterq pop rex.WX fdivr popfq xchg cmpsl (bad) stc movabs jne movslq repz rex.X stos (bad) movabs mov and loopne jne mov ss mov xchg insb (bad) out div fnstcw adc sbb sti loope jb mov loopne and jge rex js lods add mov (bad) and (bad) add push cwtl (bad) xchg pop cmpsl popfq movabs nop cmp callq pop mov (bad) jnp xor xlat enterq rex.RX (bad) add cmpsb (bad) sbb or cli fmul addl fst lea (bad) retq mov fisttp xchg (bad) jbe (bad) out sub nop (bad) mov xchg xor (bad) enterq mov (bad) jge jne je xor cwtl (bad) or andl popfq movabs pop jb repnz or js outsl rex.WRB shl mov (bad) roll mov sub int3 adc add mov rolb jge loop leaveq insb int3 xchg sub pop imul loope std cmp (bad) pushq (bad) rex.B rex.XB adc rorl enterq (bad) sub mov cld rex add and sarl mov inc callq and (bad) (bad) sbb (bad) push and mov enterq ror sbb mov sarl jge mov xchg (bad) data16 (bad) (bad) (bad) (bad) loope cmp jge rex.WB sbb push mov out mov cmp (bad) and lret test rex.RB shr and lahf out (bad) cld fistpl mov loop movabs roll (bad) xlat (bad) mov roll cwtl scas mov mov pop xor clc rex.WRXB mov xor sbb repz xor jns or push pushfq shr or out jge rex.WR stos imul fadd adc sbb rorb sarl mov std leaveq movabs repz mov (bad) cltd cmp outsb mov jno (bad) pop fmul (bad) sub mov adc sti vminpd sbb fbstp (bad) int jno pushfq or sub or sbb (bad) rex.WR jb (bad) sbb faddp fmull rex.RX rex.WRB jp loope fistpl imul mov out and mov xchg rex.W adc xor imul rex.WX scas iret jg rex.WB fnsave mulb rcr notl sub movabs lahf rex.WRX (bad) adc out enterq imul mov shr mov iret hlt cmp jne mov cmpsb and js jo sub or jb (bad) div mov jae and lods movabs imul lahf jmp cmpsl sbb ucomiss xor lods fistpl fsubrs popfq testb lock fnstsw ss fdivrl rex.WR mov push pop loopne jns shr push (bad) (bad) (bad) adc jge in cwtl (bad) int3 mov mov outsl rex.RB jmp (bad) pushq clc (bad) lea (bad) jnp xchg rcrl add mov callq (bad) rex.W sbb repz rex.WR lahf adc adc sbb lret jmp xor int3 sub mov mov js rex.WR jrcxz (bad) out fs rex.WB mov adc rex.WRB xlat mov mov (bad) icebp rex.WR jp repz (bad) sub test js cltd rex.WRX add (bad) rex.R stc pop xchg out xor rolb jmp jg enterq add int movabs loope sbb add pop jns test loopne mov icebp insb cmp jg jmp (bad) fucomp stos cmp repnz nop mov (bad) jb test jnp xchg and xchg movsl rex.WR enterq jp es rex.B rex.RB pop push and lods add imulb cmp and insb stc mov sbb and rex.RX (bad) sub sub fsubs shrl xabort mov ja sarl (bad) add movabs sub sarl sbb add (bad) jb pushq movabs jmpq or rex.W cmc movabs (bad) (bad) in xchg pushfq iret roll (bad) rex.WB rorl rex.WR cmp (bad) sarl push (bad) or sbb rex.WRB pop rex jrcxz in int3 (bad) adc jnp (bad) pop shrl outsb or push (bad) add (bad) repnz test push std push sarl jg fcoml iret adcl fnstsw sbb rex.WXB outsb add ss (bad) fisttpll cmp rex.RXB lea clc push jnp in jle in adc div cmp or push loope jle ds movslq rol imul xor hlt test rex.WX add mov (bad) mov jge iret popfq fwait lret stc mov movsb rcrl (bad) and es jg int3 xor lahf push pop sahf adc repz and hlt xchg sar (bad) stc out ss pop leaveq ror and gs insl iret enterq and movsl out jl iret rex.RB (bad) out jge xchg pushq cltd mov push leaveq in rex.RB stc cld movsl push jb (bad) out movslq xor lcall and cld or or insl or testb (bad) mov popfq leaveq add fst pop shll (bad) cmp scas mulps (bad) pushq and cmp iret std movabs fs mul (bad) insb jp rcll mov rcrl out rcll faddp xchg pop jno outsb cs fwait mov adc shll and adcl jle mov mov and jo push (bad) out (bad) sti test loope jle (bad) sub xor sub rex or xchg shll imul data16 fldcw (bad) sub in subl rorl test sub adc (bad) rex.B and callq jno mov stc (bad) mov sbb mov movsl mov retq rex.WXB or js xor cmp fcmovbe adc outsb pop out rex.WR jno fstpl mov (bad) sbb cmc icebp (bad) pop stos mov movabs xlat cmp add sbb pop test ja callq pushq (bad) jg pop (bad) (bad) icebp (bad) jl cli xor mull pop jmpq mov (bad) sub movabs rex.RX pushfq adc rex.WXB (bad) jle adc rorl and pop adc in (bad) cmp rcr xlat lock jno shl movsb lret int3 test jns int mov out push (bad) mov sbb jae imul sbb loopne jmpq cmc (bad) movabs rol fst fnstcw or (bad) ss or sub rex.WXB mov jno insl roll pushq and scas cld in or gs (bad) (bad) callq int movabs pop movsl rex.R rex.WRX andb and out push adcl cmp cmpsl rex.X (bad) insb (bad) (bad) rex.RXB rex.WXB sub sbb pop sub push (bad) (bad) mov pushfq std fidivrl cmc (bad) pop jno shrl adc fidiv sbb mov jne add stc shrl loop out rex.WRB mov (bad) stos (bad) add data16 (bad) xor sub pop mov mov rcrl (bad) push jno scas mov rex.RB addr32 rorl es rol movabs je fnstcw jae adcb out (bad) rol stc jmp out test mov xorl movabs (bad) sbb movabs lret add repnz fstl or stc cmp mov in retq jne (bad) xchg xchg rex xor shll mov push adc retq repnz gs outsb (bad) cmc mov xchg pop (bad) ffree fsubl insl rex.WRXB and fcmovnb iret (bad) add cli and rcll and popfq sub rcll ror jnp sub push xchg nop pop cmp jmpq stc jns rcrl in test pushq and movabs jg movabs sbb lret shll jne (bad) (bad) sub push out jno and xchg retq cmpsl adc subl sbb xor fdivs mov rcl sbb mov rex.XB (bad) or (bad) cmp sub gs rex.XB in rex.WXB test pop jns sbb (bad) scas mov mov (bad) movabs mov imul sub xor rex (bad) add idivl loopne add add js sbb sbb in jns loop test or push add (bad) cltd fist add cmp cs adc lea (bad) and (bad) jb out movabs jmpq pop or in (bad) jne mov je sti cmp rex.WRB in (bad) rcrl jg (bad) pop cmp xchg cmpl cli xchg enterq adc rex.RX rex.RXB rex.RX rex.R mov loope pop jmp movabs xlat bswap and xchg jb (bad) jmpq rorb rex.WRX cmp xor out cmpsb cli (bad) pop in shrl (bad) negl jmpq subb test fs in psadbw (bad) movabs lods rex.XB (bad) xchg test retq add sbb icebp je int iretw (bad) shl addr32 scas mov cmp (bad) (bad) (bad) mov rex.B add rorl xlat fadd xor xor lods (bad) mov hlt test jns,pn nop mov test (bad) int3 mov mov shrl or jno cmp retq shll jnp (bad) repz (bad) pushq rex.WX rex.R out in mov jmpq pop movslq lahf leaveq or roll mov stos mov or int icebp rorl sub roll or shrl ficompl iret jrcxz adc or imulb pop (bad) xchg rex.RX mov stc xor (bad) loopne cmp jg mov rcrl in and lods jle jne or leaveq movb xor pushq adc and sbbl std (bad) push mov int3 push mov stc movb test subb (bad) push sub (bad) jno mov rclb scas test test push pop xchg xchg rorl (bad) mov (bad) ds enterq sbb cs rex.RX fmuls (bad) out xchg adc stos sbb lock jb jbe add (bad) and add lods sbb (bad) push movsl (bad) rex.WX faddl or shrl loope cmpsb adc sarl test add (bad) rol and popfq shrl (bad) mov loope lods (bad) shll xor (bad) mov and rex.B adc xchg insl fldenv rex.WR shll mov (bad) jne push (bad) rex.X lea and fiaddl rex.XB rex.WRX jae sti xchg (bad) lret nop sbbb flds rex.B xchg (bad) rex.WXB retq (bad) xor loop push fildll rex.R sbb repnz jne loope movabs add (bad) push mov loop in (bad) (bad) std sar mov movabs lock add add mov idiv adc push shl xlat (bad) xchg mov (bad) movsl gs xor sub (bad) rex.RXB js fisubrl (bad) sub jo ror bt rex.XB lock movsb (bad) mov inc rcrl shll mov mov xchg jrcxz add cltd (bad) icebp (bad) movabs cs (bad) adc cmp bnd rex.W movabs jne rorl movabs add add (bad) cmp shrl jno test pushq mov sti push movsb xchg (bad) orb cmp cmc in mov adc enterq or jae jne int rex.X xchg sbb lret jp mov in retq (bad) (bad) (bad) mov fdivs outsb ds (bad) (bad) cld addl shll mov movabs ds in nop mov lods movsb sbb (bad) (bad) jns jge sbb xchg shrl (bad) popfq mov mov and movslq (bad) imul cmpsb mov mov out xchg int rex.RXB fld ss loopne callq mov (bad) pop or mov scas out lods mov sbb and mov mov mov sub pop (bad) fwait push roll test mov xor (bad) add rex.XB je xor and repnz lods cmp or cltd xchg mov mov push iret pop cli mov shll (bad) cmp ss push callq jle rcll jb shl nop cs lcall xchg enterq pop imul cmpsb add (bad) (bad) (bad) int leaveq sub std insl rex.WX pop clc fisttpl shll adc (bad) and roll sbb mov (bad) fs int loop faddl (bad) sbb mov fnstenv xor cmc out lock or (bad) and sub icebp movabs pop fcmovnu orb leaveq pop mov repz fiadd lret loopne or (bad) sub jns addr32 (bad) cmp popfq callq in (bad) or rex.X fwait mov or std xor js xchg (bad) add pop rex.B (bad) psrlq (bad) rcll (bad) and and xchg add rex.X mov push (bad) outsl (bad) xchg repz sub hlt (bad) je lods mov sbb cmp add pushfq shrl je or sub (bad) loop mov stos es cld out xchg outsl (bad) sti (bad) or leaveq xchg imul adc rcll pop cmpsb mov (bad) xchg jnp pop mov shrl adc js (bad) pop popfq sar fwait rex.B lret rex.RXB pop jnp add repnz nop (bad) fistp rcll lret mov popfq cld ffree sbb int3 add jae test inc add out jo adc outsb rex.WRXB (bad) sub mov ja roll rex.WXB (bad) jrcxz lret pop out mov mov clc loop and incl imul sbb or (bad) (bad) loop (bad) cmc int3 (bad) rcrl adc rcr out xchg stos mov sub cmp (bad) shll retq rex.XB cwtl lock rex.WRB rex.W add movabs jrcxz adc (bad) mov sarl stos cld push and in out movabs fidiv sbb int mov cmp cmpsl (bad) fstpl jl cltd and sar or jmpq sbb and pushq xchg mov rex.R ds cmpsl std rcr leaveq add shlb callq vcvtss2si jne (bad) xor pop mov (bad) jno add loope pushq adc sub cld or mov push pop fs xchg (bad) mov (bad) jmpq or rex.W xchg cmpsl movabs push cmp rex.R cmp add (bad) jb mov mov out jg mov addr32 roll lret xorb xlat xchg insb cmpl rex.RX mov rcrb adc orl cli add movabs rex.XB (bad) loopne xor callq movsb stos ror pop mov jp jmp adc shrl sbb (bad) fadd movabs push test pop sbb scas (bad) cmp fldenv mov sub loopne in movabs es lea imul jbe cltd movabs push xchg adc rcll std movabs mov or and (bad) cmp rex.R insl popfq rclb pop ja hlt fwait xlat rex.WRX mov (bad) push loope shlb rex.WRXB pop callq int sar mov test add sarl push pushq test mov rcr push xor mov (bad) cmp jrcxz jo jrcxz jge popfq (bad) out rclb mov add repnz callq (bad) xor cltd clc (bad) xchg cs scas or test lret rol (bad) jno movsl rex.WXB addr32 mov cmp xor rcll mov jne pop loope adc xor mov (bad) enterq add hlt mov fwait (bad) xchg fcomps cmc jp adc and andl or cmpsb mov (bad) mov rclb (bad) movslq sub ds xlat cmp xchg fsubrs adc lret xchg cmp (bad) (bad) repnz mov or adc data16 rorb (bad) xchg lods ja or rex.RX imul (bad) mov rex.WRB fsubrs cmp movsb xchg (bad) (bad) fsubs cmp enterq jns (bad) and leaveq adc xlat retq rex.RX (bad) fdiv (bad) pushq (bad) outsl jmpq sbb jrcxz movabs mov fisubr callq cld ror negl clc stc sti add and movabs movabs callq or int movslq lret shlb add pushfq (bad) push notb add rcll pop mov pushq in add enterq or je (bad) xor movsl test (bad) (bad) fildll (bad) jle jle fucom xor (bad) in mov xlat js (bad) in or jns (bad) sub div and adc stc int push (bad) or xchg loope sti pushq xor ss movabs xchg insb repnz (bad) xor (bad) push sbb (bad) ss add push (bad) (bad) movsl (bad) jg rex.WRX (bad) mov and cmp adc push mov rex.R rex.RX test clc rcrl test (bad) (bad) adc adc cmc and fwait roll rclb js rex.RXB shr and mov je (bad) jne test cmc add jno sbb push rex.RX mov pop adcl mov movabs cmp push (bad) sbb pop cmp pop adc and (bad) (bad) xor subb push (bad) (bad) mov and cmp insl pop xchg (bad) (bad) rcl (bad) (bad) (bad) fisubrl int3 pop jmpq enterq out jg sub cmp pop (bad) adc fldcw test and or (bad) movslq iret mov jmp (bad) xchg cmp rcll out add add (bad) sub (bad) lret out cmp int3 jp xlat (bad) rex.R cmp (bad) cmp cmp mov shrl movabs pushq add jrcxz cmc int3 mov (bad) jmpq xchg (bad) shlb jbe (bad) xor nop and rex.RXB shll adcl int (bad) rex.WR out rex.X and or jb cmp mov icebp (bad) xor cmp rex.X sbb (bad) callq (bad) (bad) jmpq int and cld mov (bad) jbe add cmp (bad) mov mov (bad) je (bad) xchg shl rcrl fistpl callq stos cmp rex.WX shl rex.W retq repz add (bad) (bad) (bad) stos mov addr32 add enterq mov push cld (bad) xchg adcl lret mov mov rex.B rex or rex.RX xchg xlat rcll mull test scas or fs rex.WRXB imul or (bad) adcl fcmovbe (bad) nop mov insb and scas add movabs imul rex.R ficomp rex.WRXB or cmp ss pop enterq add and loopne loop,pn cld in (bad) jns retq rcll adc cmp add add add loope loop xchg fisubr (bad) mov out decl rorl lods (bad) std std or lea cmp gs mov add in (bad) fs rex.B movabs or rex.X lods iret xlat lret out rclb (bad) outsb or push (bad) lret mov fstl mov rcrl rcll (bad) out (bad) incb xchg sarl push (bad) js pop imul xor (bad) mov (bad) xchg mov rex.R gs xchg or addr32 test (bad) in mov mov pop js adc stc addr32 ja shl xchg cli (bad) (bad) icebp xchg stos int fwait push cmp rorl pop xchg lea rorl ds xor fist rcl fisubr loop mov add lret push sarl popfq jmpq int3 in xor movabs jo cmp roll imul lret movsl mov fdivl (bad) mov (bad) rex.RXB std leaveq mov lret stc movabs xchg imul sbb (bad) sub (bad) enterq fld1 je shll mov ds (bad) add and (bad) ss repz shr pop and js out (bad) sbb add xlat roll (bad) enterq cwtl leaveq lret xchg lret (bad) xchg push (bad) jge rcr outsl add movabs (bad) rex.B clc roll jbe testl xor (bad) cwtl sbb out insl retq jge (bad) xchg xchg xor cli mov push out lea rex.XB pop mov add push movabs rex rex.RX out rex.X (bad) hlt (bad) rex.WRXB decl rex.WRXB insl (bad) lret hlt jmp mov out or mov mov movabs mov rcrl sbb xchg in cmp vmptrst shll mov shrl movabs fild (bad) out and rex.WXB xchg add pushfq cmp movslq insb rcl rex.RB gs lahf or or add (bad) sbb retq cmp push (bad) and pushq mov xchg rex pop mov jns add shr cmp cmp ss xchg imul mov or in rcrl pop inc fstpt outsl sti rcrl rex.B outsb (bad) xlat int xchg lret push scas shlb mov (bad) loop cmpsl jmpq mov and add (bad) mov mov shrl pop int or sbb shr mov int add rex.X repnz rex.RX addl adc jg incl roll out (bad) and jns push lcall mov lock mov jnp cmpl xor adc (bad) jbe roll movsl pop lret roll add (bad) mov mov jmpq mov iret icebp sub xchg and (bad) rex.WX pushq gs (bad) stc add shl xor add fildll add lods sub iret (bad) scas (bad) loopne ror movslq and lahf and cltd xchg sub adc or imul push (bad) iret rex.WX fiadd jno fmull (bad) xor push jge rcll sbb test mov ror cmp shlb roll rex.WB int3 movabs xor jp lahf movslq shr cmpsb lock pushfq push sbb rex.X xchg rex.WX add subl shr xor pop rorb cmpsb xchg pushq or rex.B fstp and icebp sbb mov rex.RB push lret movabs (bad) add outsl jp cli push clc (bad) (bad) fcmovnb jle cmpsb rolb xchg rex.WRX jne rcr adc cmpsb roll fcoml (bad) movsb (bad) pushq repz in add pop adc mov rcrb pushfq pop test add mov or std cmpsl add test fbstp push xchg add or sub sbb fadds ds and sti test xchg addb rex.X test adc mov cmp (bad) push (bad) jrcxz retq out fldenv (bad) mov cs rclb jne xor push outsl sub scas rex.WRXB rex.WXB rex.RX (bad) pushq mov mov fist movabs push mov rex.RXB or lods rex.WRB (bad) movabs jmp (bad) sbb scas or jrcxz mov (bad) callq js rcr rex.B rex.WRB icebp rex.B in or (bad) clc cwtl adc fisubrl int jge mov xchg mov mov rex.WRX rex.XB insb (bad) ja mov imul mov adc mov pop mov sbb insl repnz (bad) sub or pop xchg or (bad) outsb pop jnp fsub rex.WRB mov (bad) push jge sbb (bad) lret sub leaveq fdivrs (bad) cmpxchg add mov icebp (bad) fadd stc (bad) jl sbb (bad) cmp shll adc xchg and mov cmpsl sbb rol fisub mov rex.B mov roll nop js jg movabs jmpq sbb (bad) pop fs movabs add out jbe fistl mov callq rex.WRXB int3 (bad) je push out (bad) jp mov lock push mov xor rex.WRXB or (bad) push jg rorl outsl in rcrl or rex.X ror adc rex.WRB test push gs cmp mov add xchg lret mov andl imul gs mov movabs ja xchg rcrl rex.WR std loope lret rcrb (bad) mov mov or (bad) fs rex.WRX sub loope mov fucomi jge add (bad) push rcrl mov sbb push sub pop pop rcll rcrb cld fdecstp fsubp stos rol loop popfq sub xor rex.W (bad) add test rex.WR rorl and scas je (bad) rex.XB xor pop mov pop rex.RX (bad) add (bad) (bad) rcll fwait pop fdivrs adc out icebp sub scas test mov (bad) sbb cld jmp (bad) mov cmpl adc stos cli jb add fidiv xchg sub jmp rorl pop (bad) jp (bad) cltd and ror in (bad) sub clc (bad) xchg movslq test rcll xchg out ds (bad) andl rex.RX cmpsb fwait stos addb loopne mov mov xor sbb rorl addr32 push es or retq ja mov cmp in sub rorl scas xor and jmpq mov pushq jle jo sbb rex.B rex.X xlat mov cmpl movb xor icebp sahf (bad) jmpq cmc fstps jns xchg pop rex in lods cs outsl (bad) sbb sub js lret ja sbb rex.WRXB fstps cld (bad) mov rex.WX rclb sub std rex.WRX rex xor mov stc lods sub (bad) shrl add (bad) cmp mov imul ja mov jno jo (bad) loop add paddusw cwtl subl (bad) out push push add mov adc sbb lods mov test shrl sub (bad) rcr (bad) pop (bad) cmp rex.WXB and sub roll pop add mov (bad) add or sub out or mov rex.B rex.XB (bad) repz rorl cld popfq push adc stos int jns nop sbb std pop (bad) push (bad) (bad) pop scas roll fcomip sarl jmp std jge iret test rex.WRB sti mov xor xlat outsb pop retq jne lret cmpsb add (bad) (bad) hlt sub ds push iret sbb enterq (bad) (bad) rex.B ds rex.WXB xchg mov rcrb imul mov icebp rex.WRXB (bad) fisubl push pop (bad) cli (bad) callq xor in repnz (bad) es (bad) (bad) mov adc (bad) mov (bad) repnz lahf ds (bad) shll (bad) fildll pop xor (bad) (bad) rex.RX cmp shl imulb lret cmp rclb lock int test insl pushq (bad) add jnp and retq (bad) cmp or mov or jl jo je xor pushq xchg cmp repnz in jae (bad) retq rex.WR sahf sahf stc (bad) pushfq rex.WXB (bad) std (bad) xor hlt movabs cmp lret (bad) fistl (bad) movabs movabs rex.RB cltd cmp rex.R in es rex.WRX lea (bad) (bad) rex.XB ja mov xchg scas xchg xor mov fwait sbb (bad) (bad) fldt jae sub (bad) (bad) divb (bad) sub jmp ficoml insb fsubrl adc xchg movsb test or sub rex.R rex.RX sub sbb sub mov (bad) test popfq mov fbld jae (bad) (bad) clc (bad) sub (bad) push jmpq (bad) std sbb push pop hlt fucomp xorl xor leaveq push fs adc (bad) enterq (bad) pop mov mov (bad) callq push rex.RB icebp (bad) sbb js push push jle pop (bad) rex.WX sub jnp fdivs std pop int3 out outsl sti fidivr and sahf (bad) and leaveq sub xchg rex push adc xor xor bnd cs faddl sub enterq sti mov (bad) fstpl in (bad) jg jge sbb imul jmp cmpsb adc push loope (bad) or enterq sub js test rex.WR int3 in cmpsb push (bad) or lock sbb cmp movabs orb jne in fcoms mov lock mov imul (bad) xchg cmp (bad) sub and xor (bad) adc (bad) rex.RXB lahf jrcxz pop es (bad) xchg (bad) mov jns mov pop rex.B or stc scas sbb (bad) mov mov mov in or pop sbb (bad) push outsl sarl jge (bad) xor (bad) in (bad) clc out iret rex.R mov rcrb pop adc leaveq sar mulb fild movabs movabs divl (bad) mov sub test jge (bad) roll rex.XB cli in shrl jnp mov cld sarl rex.R (bad) jae jg or nop (bad) xor lret (bad) cmpsb mov mov cmp leaveq fadds xchg sti rorl cmp in adc stc lret lods idivb lods movslq jmpq xlat xor xchg rex.X or imul stos std xor cmpsl iret xor pop out push out push movabs xor clc rorl adc jns rex.XB notl cmp or data16 rcll jb rex.XB adc mov add rex.RX xchg in or in pushq movabs mov (bad) fldcw (bad) (bad) jns push xchg jmpq xchg (bad) and out lret cwtl insb cli sarl mov in pushfq or movabs mov (bad) (bad) je vshufpd roll out adc mov retq shl rex.B rex.X fsubl jrcxz mov jno push cli rorl lahf push retq (bad) movslq add pushq mov scas push (bad) or popfq shrl pextrw insb mov (bad) addr32 sarl int out sti rcrl or outsl std pop sarl sbb out ja xchg out loop rex.WR (bad) (bad) jne (bad) jl (bad) mov (bad) sbb sbb adc xchg (bad) mov xor fs (bad) callq notb movslq sbb icebp sbbl leaveq sub jl adc and jg rex.WRXB stos insb sub mov xor add or lret (bad) push cmp jp sti orb sbb rcll push rex.X cltd rcrl lock stos int3 pushq lret lods xchg iret rex.WRXB imul (bad) cld (bad) (bad) add rex.WB rex xchg retq pop lret (bad) mov (bad) xlat jnp rex.XB scas sbb (bad) cmp push int3 sbbl in repnz mov (bad) mov movslq loop (bad) mov xchg roll and imul sahf in je rorb repz mov sub fisubrl rolq add rcrl mov (bad) icebp pop jnp in rex.X mov (bad) (bad) movabs rex.WRB sarl pop in or jno (bad) xor fild rex.WRXB iret sbb rex.WB shrl leaveq jo mov fwait xchg lret repnz retq out pop hlt xchg mov adc (bad) push lods stos mov rex.RXB test push enterq mov adc pushq or cmpl rex.WXB sarl movabs fwait rex.X shl mov (bad) mov fs cmp rex.B callq fs rex.XB roll jnp loop add movabs (bad) (bad) in push jbe xor and test (bad) fistp xchg (bad) add out xor sub pop cmp lret add (bad) adc movabs rex.R (bad) (bad) sub cmp repnz mov add xchg loop js and and jrcxz in rorl cli rorl sub imul pop (bad) mov (bad) xchg jg iret (bad) (bad) int3 xor rex.R sarb and add xor adc mov (bad) rep (bad) mov int3 mov mov rcr jp jl sti cltd pop (bad) cmp (bad) sbb (bad) and rorl mov movb jno (bad) or rorb sub cmpsl xor (bad) mov jb gs scas repz rorq jl mov out and imul sub (bad) jb mov fsubs (bad) xlat xchg or add add xor mov xchg fcmovu and rex.WXB or pop adc lret repnz sarl xchg adc xor xchg gs sbb (bad) imul lret rex.WXB (bad) xchg xor (bad) pop and movabs add scas lret push or xchg loopne mov mov movsl (bad) (bad) xor xchg or cltd hlt rex.XB push rorl (bad) cs pop mov outsb out rex.RB (bad) cmp insl (bad) sarl xlat xor add (bad) fdivrp jmpq pushfq lods fsubrl imul fldt sub in mov stos gs (bad) sub sahf int3 cmpsl (bad) gs xor jrcxz (bad) fisubl sub js std sbb cmp retq xchg pop xor jno and adcl sub test sub (bad) xchg fmul xchg xor sub leaveq lock or (bad) stc pop xor movabs shl jmpq js and sub (bad) push sarl loope loop add sub ss cmpsl push xor xchg in or lods rcrl (bad) (bad) lret divb xlat xor add movsl pop cmpsl callq (bad) and imul ljmp rex.RB (bad) pop sti cmp pop sub xchg int jp fs xchg (bad) xchg and xor in (bad) insb (bad) rex.WXB rex.W testl xlat nop rex.RB (bad) sbb rorb leaveq movabs rex.WR popfq pushq jrcxz (bad) fistpl (bad) push (bad) pop xchg (bad) (bad) push mov movl mov xor mov xorl sub not sahf sub (bad) sub in sbb data16 (bad) add movsb retq iret lahf clc (bad) (bad) movabs sub fistp mov jmp int3 sar callq push jl enterq loope pop mov rex.B add cmp xor jno pop sub jns xchg sbb out enterq (bad) (bad) gs rex.RB lock push cmp pop xchg clc xchg rex sub outsb push fstl movabs rex.WX rex.WRB cmp adc fildll (bad) sub fisttpll pop clc rcrl pop push ljmp jb (bad) and stos fisubrl sbb and repnz fstpt jp pushq sub insl movabs pushq mull add (bad) mov sub ror (bad) shl rcl es sub xchg (bad) add cwtl sarl and fsubr sahf xchg sub jg jbe,pn lock sbb push sub flds (bad) (bad) mov sti and sarl out or xchg cmp jb je add pop jne rex.RB (bad) vmaxsd shll sbb lods mov ds jmp insl stos idivl or rex.RB outsl lret (bad) mov xor mov stos (bad) rex.B outsl mov push (bad) addr32 xchg and in callq sarl int3 andl sub imul rex.X or rex.WRX mov (bad) (bad) ja or rcrl (bad) or and sub sbb sub (bad) sbb (bad) (bad) cmp rcrl jns in or repz adc ds mov (bad) imul iret mov jg jne movabs or (bad) imul cmp mulb jno loope ja push rex.XB rcrb mov lock pop lret gs cmc (bad) push sub (bad) in sub fcomp outsl lea in ss scas (bad) lret pop roll mov or fldz xchg (bad) jb rex.XB push (bad) rex.WXB cmp adc in ficom adc (bad) pop (bad) movabs icebp int3 pcmpeqw (bad) rex (bad) outsb mov push (bad) fsts (bad) lock rex.RX mov imul or mov or cmp movabs rex.WR movabs xchg es loope rcr adc adc rex.WR jmp iret (bad) gs mov (bad) and xchg test rcll jmpq clc fwait mov sbb scas shlb orl adc mov rcrl rex.WR popq movsb (bad) pop movsb gs xchg rex.B sub (bad) mov mov pop xchg (bad) xor xor rorl mov rclb test movabs cmc (bad) idivl sbb je mov shll (bad) out rol push sbb (bad) (bad) sub or pop rex.R cmp rex.R (bad) and rex.WX movabs mov jmp mov scas ror jo (bad) movabs or jl (bad) loop or mov movslq (bad) stos loopne cmp (bad) xor mov lods stc cltd test cmp jne add addr32 and rex.W adc mov retq sbb mov (bad) add jp js sub sbb retq and loop cmp (bad) jo jl mov (bad) or callq rex and addl pop sub out sbb rcll sbb mov movabs fisub rex.RX rex.XB fwait rex.X (bad) out int3 sti shr fs and sti jno fistp cmp xor rex.B rex.RXB loopne (bad) cmp sub pop mov xchg callq (bad) pop xchg xchg push out ss js xor sbb adc test fldcw fdiv loopne insb sbb sbb cmp rex.B bnd mov or nop rorl movabs cmpsb mov fmulp jl rex.WXB gs add push fcmovnb rex.WR cmpl push sub js (bad) sbb add mov cltd imul sbb sub or push ja imul xor int3 movsb (bad) sbb insl (bad) add mov subl add xor rex.WR gs cmpsb (bad) and xlat std insb addr32 and retq xlat addr32 add xlat imul lods mov push mov movabs repz rex.WRX cmp (bad) out repnz sub stos lret shr (bad) rex.RX add lock and mov hlt vmovdqu movb push lock rex.W repnz sahf callq outsl pushfq adc addr32 sub loope or (bad) (bad) xor (bad) std mov sub sbb rex.WR sahf test sbb jbe (bad) and (bad) or mov xchg (bad) sub rex.W jle mov lock scas and repz test out (bad) mov movabs or sub (bad) rorl (bad) mov loope (bad) enterq jbe lea or (bad) retq jbe rex.B in clc rex.XB (bad) jae (bad) pop repnz (bad) mov repnz js shl movabs cmp mov and xor adc ss (bad) (bad) mov cmp (bad) movabs jge jno callq sbb jmp movabs (bad) lret xlat cmp mov decl push sbb pop lock pop (bad) bnd pop sbb repnz xor lret sub retq (bad) mov rex.X rex.WRB lahf (bad) in test (bad) jnp mov (bad) jnp jmp fiaddl cmp rex.R rex.WR in fucomp (bad) sub std or (bad) cmp or mov mov and rex.WR fnstcw callq xor mov rex.WX pop or pop (bad) pop mov mov (bad) je sarl clc loope sub add jnp ss and adc andl rol jge retq xchg cmpsl and xor (bad) rex.X rex.RX mov pop sahf mov insb jl sbb adc retq cmp movslq xorb not jg mov clc gs idivl cld loope jle mul sbb jrcxz leaveq movb rolb adc imul int3 outsl shll (bad) xor and and pushfq or jae in (bad) (bad) movsb (bad) push push jae (bad) mov (bad) ffree jle add cltd mov push rex.RXB out hlt movabs scas rex.R (bad) cmc (bad) (bad) (bad) jns lods pop in jo movabs mov jg notl (bad) mov push loopne sub jae test insl ds and es xor leaveq cmp xor mov cs movabs rex.WR mov cmp sbb push sarb jp pop int sub add fs pop rex.R add rex.RX out pushq test leaveq enterq adc fstpt adc xchg push in rex.XB (bad) cltd mov rex.RXB std movsl cmc (bad) rex.X sarb jrcxz xchg rex.WR rex.WRX test outsl rex.B rex.R xchg jno rorl mov addr32 or test mov rex.RX pushq jo add imul rex.WX xor (bad) in mov (bad) or mov loopne jrcxz sarl xor jns rorl int3 and in rex.B rex or pop repnz fsubrl jg xchg (bad) jns leaveq jp (bad) (bad) mov sarl mov movabs or jae cltd cmp (bad) fidivrl in movsl sub rex.WRXB and rex.WR (bad) roll (bad) mov adc (bad) std jp add ds out jb loope adc and pop rcll mov (bad) (bad) jp icebp xchg lods sub add and push fld mov movslq xchg repnz loopne sbb pop adc lret rex.XB push stos fld rex push icebp adcb fadds xchg or ficoml shll scas sbb sbbl xor repz rcrl or mov (bad) fisubl xor xlat sbb mov (bad) jnp or xor ror fstl (bad) mov lea rex.WX or mov gs je popfq jle sarl rex.RXB (bad) or lret (bad) movabs mov cmp fstl pushq roll movabs (bad) insb xchg cld jb mov add addr32 lock jrcxz rclb imul cmp shl mov rex.R rex.RXB (bad) mov mov rex.WRB sbb add rcll (bad) jge cmpsb or nop adc loopne cmc stc movabs fiadd repz repz cmpsb add (bad) test shrl loopne (bad) xchg iret fwait pop fs (bad) out stos mov mov ss adc push callq (bad) stc lcall jmp shll flds enterq xchg sbb fistpl icebp xchg (bad) adc movabs rex.WX push sbb push (bad) int3 xchg add movabs jge test sarl and hlt adc (bad) jp nop add xchg rorl (bad) rex.WRX rex.RXB (bad) shl imul stos mov jp out addr32 or cmc (bad) or fabs outsb xor mov pop pop sti rex.R xchg mov and mov sbb test (bad) xchg and xchg adc (bad) (bad) pop mov (bad) fsubrp data16 jb jmpq (bad) addb hlt rex.WXB mov jmp fsts std cmp cmp pushq pop mov ds sub out test insl (bad) adc pop mov rex.B roll loop cmpl jo (bad) sbb mov clc jb stos (bad) xchg (bad) lret xchg jl sub rex.WX xor adc xchg xchg pushfq sarl (bad) movabs mov in rcl rex.WRX or rcll mov (bad) cmpsl je,pt cld (bad) lret mov movsl cmpl jmp jmpq (bad) int rex.WB jrcxz shrb jle (bad) leaveq addb (bad) jb mov jp cld pop je shrl cmp fmull cmp sbb (bad) lock (bad) mov roll rex.WB push xor movabs jae sub repnz mov and rex.R xchg adc pop jo cwtl fnstcw fistp xor xchg push add jg (bad) pop clc mov and movslq rex.WRB sub adcl lods lea (bad) negb (bad) and rcrb retq (bad) ja jns mov mov cli sub cmpsb outsl (bad) je stc and or pushfq retq (bad) add cld rex.WXB sub callq movabs pop movabs enterq (bad) pushq mov (bad) mov (bad) ss int3 lahf (bad) push xchg shll jrcxz fdivp (bad) lock sti jae pop mov jne add (bad) or sub mov nop sbbb mov (bad) xlat cmp test jmpq and or jmpq (bad) pushq rex.RX rex.WB ja jb out xor decl insb push sbb gs out pop sub jmp mov push (bad) jo pop or xchg rex.WRXB pop repz rex.WB rex xor jg rex.RXB xchg ja (bad) (bad) xlat ss rcrb rex.WRX sbb scas jbe add out stc fcompl movsl ss (bad) js rex.B test xchg movb xor lods mov repz rex.B jo ficom rorl (bad) movslq (bad) and test xchg or lea mov es enterq rex.WXB (bad) jns (bad) ds lock jg rcl movabs sub lret lea push ds (bad) rcl addr32 hlt lret rex.R ss add outsl ror imul shrl insb sahf (bad) clc adcl mov (bad) or xchg mulb (bad) cwtl sarl loope and sarl adc adc shll out (bad) and mov or (bad) (bad) xchg rex.B rex.WR push pop ds bnd (bad) (bad) (bad) retq sub dec jmp lahf jmpq sarl jmpq lret imul (bad) (bad) pop rex.WXB sbb add gs mov pop rex.RX lock rex.WXB rex.WRXB add loop xchg jp pop out adc push (bad) pop or loopne sahf jl rcll movabs adc or test add rex.RX (bad) movabs iret jae sbb enterq shr sahf mov roll rex.WRB fdivl repnz pop cmp leaveq push jo jno callq jmp std jbe rorl adc in lret (bad) cmc enterq sub outsl and and (bad) sarl xchg insb rex.WRXB fwait cld mov pop jmpq scas minsd icebp xchg cmp adc and sbb (bad) sbb rcll hlt fwait lret scas pushq jrcxz pop (bad) jns lret iret or repz lea (bad) rex.WRX rex.XB add repz cs pop jae rex.WRX outsb rex.WB bnd push movabs mov movabs mov testb imul stc xor (bad) mov mov rex.X int3 fbstp mov sub nop rex.RX and rex.WX adc mov (bad) (bad) retq out lret sahf rcll jae jmpq mov lret ds rex.W outsb adc jo add fmuls (bad) adc cmp shr sub rex.XB int3 jb xchg or mov mov (bad) pop pop repnz rorb movabs std adc (bad) movabs (bad) (bad) (bad) mov (bad) rex.W vshufpd jo fisttp jb rcr movabs pushfq mov mov rcll (bad) push lret mov xchg sub mov (bad) lahf movsl test (bad) rex.WX add retq sbb xchg insl push (bad) mov (bad) (bad) hlt fildll xchg sbb test sub adc jo (bad) js fistpll jne push (bad) rex.XB (bad) jb rex.WB add jmp jl rex.WXB (bad) (bad) lock movabs (bad) ss jbe mov (bad) jle (bad) jae rex.WRXB jae adc (bad) xor jae xchg (bad) adc jmp sbb rex.R icebp outsb sbb pop and stos jl pop imul (bad) jg (bad) lahf loopne pushq pop xor nopl xchg or gs cmp sbb lods mov (bad) popfq rex.R repz add (bad) (bad) idiv leaveq xor mov cmpl testb movabs loop repnz mov rex.W rex.XB pop (bad) enterq hlt mov callq popfq or rex.RB rex.B insl adc pushq out mov sbb add lahf bnd pop or loopne xchg fisubl xlat (bad) out (bad) push addl jae cmp jnp,pt movabs je cmp stc fsts sub callq jge mov out cmp fidivrl fimul (bad) sbb cltd adc (bad) sbb testl callq cmp shlb and mov add neg test fistl pop sbb repnz js xchg repz (bad) (bad) movabs cmpl (bad) (bad) mov ds fadds vpsubsb sbbl jle cmp push addr32 (bad) jmp xchg add rex.RXB rex.WR (bad) jae repz popfq mov hlt xchg adc cmc pop mov or out int pop scas sahf (bad) lods ja (bad) jmpq add add andb pop scas (bad) adc pushq (bad) rex.WRX rex in rex.B shr push fistl out (bad) or xchg pop jle (bad) (bad) test retq cmp shrl cmp test sti mov lcall loope cmp addb rcl sbb shll push lahf (bad) pop ror (bad) cmp xlat (bad) adcb movabs not pop pop lahf (bad) mov push (bad) test loop add iret add xchg fwait movabs js pushq (bad) jg fiadd (bad) insb sbb iret and out pop sub sbb xchg (bad) (bad) rex.WRX pushfq notb mov sub cmp rex.W test mov in jnp (bad) shr and or sbb movslq or adc pop cmpsb xchg push (bad) stos rex.X mov rex.R (bad) xchg cmpsb ja in shr sub and lret jno mov pushq in fs xchg scas rclb cmp lret (bad) xchg pop js mov rex.RXB and lea andl sahf pushq faddl rex.RX xor fld add jnp push mov rex.WX cmp jl add retq repnz cmc fsubs shll mov jle mov fbld lahf add push pop ficoml enterq test lea roll sub pop (bad) scas pop int3 (bad) push sub movabs rex.WB rorl pop mov movsb in sti or push pushfq or cmp cmp hlt rol mov movabs sarb and (bad) xor jle mov xchg (bad) mov cmp int cmp (bad) pushfq pop and mov ficompl (bad) lock outsb rex xor test cmp and sarl xchg movabs out cmpsl mov pop rex.WRXB loope shrl (bad) push sbb shll cwtl mov sbb andl rex.WX (bad) mov scas (bad) (bad) sbb lret int3 xchg jbe fcomps xchg in movabs jns fnstcw mov cli cmp ds (bad) and mov (bad) mov rorl movsl enterq movslq (bad) mov rex.WR (bad) pushfq sub rex.B or lock xchg mov sti rex.X and sub (bad) sub cmc pop loop out rcl or roll add sbb retq loope mov or cmp repnz pop (bad) (bad) icebp rex.R mov sbb sub mov sbb loop scas xor xor add lret jg test fnsave mov mov fwait gs rex.WX ss test retq in fwait int loop xor idivl clc shll jbe pop mov movabs (bad) jo fstpt bnd imul pop pop callq in and (bad) xchg xchg (bad) (bad) icebp fdivrl test mov or cli and repnz cmp sbb sub movsb and sbb (bad) lret repz pop lret rex.RXB fcoms pop addr32 (bad) shrl rex.WR fildl enterq mov rex.B and lret ss movslq mov test rex.WRXB ds sub rex.WRB movb retq divb add sbb pop loope insb fs mov sahf shrb fnsave jl jnp cmp (bad) rex.RX adc movslq (bad) fsubrl out fadds test add (bad) rex.WRB pop sarl jrcxz jmpq movsb jmpq stos push test lods (bad) jne jmpq test je insb nop lods jne adc repz add adc jmp iret rex.RXB cld in ds fwait loope xchg rex.WRB rex.B lock mov int loope lret icebp xchg cs jno int3 mov fldl outsb roll cld sub lret repnz cmp movabs or mov mov test rex.WRB rex.RXB sub rex.X push jl test sahf (bad) lret rex.RX mov rex.W sti outsb vcvttpd2dqx sbb push retq in fdivl movabs je adc outsl test xchg test jmpq (bad) adc sub (bad) imul or mov pop fwait out adc add popfq mov stos mov rex.WRB mov and rex.B push sub ss rex.R rex.WRB lahf sbb cmp in shll rex.RXB ss mov jrcxz (bad) cmp rep loopne ficom mov mov jnp pop jp pop adc sub (bad) jg xor mov mov stc std (bad) rex.WRB lret rex.WB rex.WRX push add pop lret mov mov lahf adc loope (bad) sbb and xchg pop fcompl (bad) add xchg add mov jnp retq rex.WRX mov cmp (bad) mov insb push sub adc enterq insl mov or (bad) push fstpt nop adc xlat xorl adc clc push loope (bad) xchg hlt cmp out (bad) cmc (bad) xchg bnd out and or rex.X ss xor in adc rex.R mov mov ss (bad) test xor mov orb clc (bad) (bad) and cld fcoms xchg (bad) (bad) mov (bad) je adc pop cmp retq cmp add (bad) outsb mov stos rex.B sub jbe out notw enterq movslq rex.X loop mov lods jbe cli shrl cmp mov mov shl ror outsl push mov (bad) cmp out iret rorl mov mov (bad) and jl xchg mov rex.RB or movabs (bad) sub xchg adcb fcompl mov pop cmc repnz imul rex.WXB (bad) rorl scas and add ds pushfq rex.WRX in (bad) sub in mov or retq sbb inc sahf or rorl mov lea push shll adc xor xchg movabs mov mov fwait push and xchg xchg pushq pushfq jb (bad) orl sbb and mov xor and mov ss and rex.WR outsl mov movabs xchg fwait (bad) hlt jmpq rex.WB mov push out (bad) mov int or and roll jmpq lret lods xor cwtl ja rex.B repz add scas mov mov mov movabs adc jno icebp shrl adc shrl push mov jne (bad) mov jae add and loope adc sub test mov retq jmp adc pushq sarl lret (bad) or rex.WXB and xor fadds rex.WRX loop (bad) (bad) rex.B sub loope xor (bad) mov rex.RX fwait stc (bad) hlt sarl add (bad) in rex.R push shl retq movsl rcrl mov (bad) pop roll pushq cmpl jmp xchg jb (bad) stos mov iret movsl (bad) add pushfq cwtl out rcll roll rex.XB rex.RB adc nop movabs mov mov adc out add and (bad) jl sub cwtl push out sarl xchg (bad) add cltd sub rex pop fcmovnb (bad) xchg rex.XB mov ss (bad) in retq mov cmpsb mov (bad) data16 js roll (bad) in pop test (bad) mov scas int repz mov (bad) or nop xchg gs push cmp and rex.WB shll xor out fwait movsb scas jbe mov and or (bad) rex.B in outsl rcl je movabs movabs insb pop movsb ds jnp and or cli (bad) mov mov (bad) (bad) push roll xchg icebp (bad) std push rorl xchg jl test cs int3 mov cmp fiadd shr rex.XB rex.WRB adc cmp cmc stc cmp mov shrl (bad) rex.WB gs (bad) xor xchg sar fist jmp je rex.RB (bad) and fmull rorl movabs pushq sub xor mov xchg or in rex.WXB mov rex.WRXB mov or mov test (bad) faddp js mov (bad) lock pop push add iret sub sbb (bad) test lret (bad) scas pop xor insb loope out xor sbb sbb popfq (bad) (bad) js (bad) icebp cwtl (bad) lock (bad) or and movb enterq sahf xor rex.WR push clc and pop pop mov mov (bad) mov nop std (bad) sti movzwl add pop pop rcr push jne int3 (bad) adc xor retq rex.WB (bad) xchg (bad) sub and rex.XB xchg push fdivl pushq add imul insl xor sub in repz (bad) rex.WR data16 sbb shrl jne cmpl jnp retq (bad) int sahf (bad) rcrb pushfq rex.WR jns (bad) adc or mov loopne jno push xor repnz (bad) (bad) mov pushq cmp int3 push adc cmp jmp callq (bad) repz cmp outsl or shr loopne push jmp fs lret and push jae rex.X (bad) add rex.WRXB cmp in lret adc rex.WX (bad) loop sbb neg rex.WXB mov fstl int sti sub leaveq mov jmpq jo xchg xchg jmpq or jne outsl in (bad) push fisubl (bad) (bad) (bad) pop xchg sbb mov test jrcxz mov vmulps in movabs mov or repz retq nop test or rex.WRXB mov mov test in lea rex.XB lock imul cmp loope rex.R movabs repnz fistl jl addl sbb sub jo add (bad) stos mov adc rex.WB icebp int (bad) cmp (bad) adc js ja cli sub pop rex.WR sbb loop mov fimull out fscale sbb add fsubl sbb jb and (bad) mov pop xchg mov or fdecstp iret (bad) iret cmpsb cwtl xor or push mov (bad) lods (bad) sbb rcl (bad) (bad) (bad) add (bad) lea mov test adc movabs rex.B mov repnz (bad) push rex.WRB cmpsb in scas fadds sarb (bad) cli or movsl (bad) xchg xchg iret out xchg jg rcrl enterq cs jo cwtl ss (bad) lock insb sub cmc xchg and pushq xor jo mov jne pop (bad) fadds notb (bad) fildll orb movsb jb add mov shll (bad) mov mov push cltd jns rex.R (bad) cld (bad) callq jne and roll jae mov push rcrl mov jmpq out rorl rcrl cmpsl (bad) loopne or push in (bad) ss hlt pop insl mov xor mov xor gs mov xchg adc je rex.WR rex.XB (bad) pop pop cmpb sahf xor jno push sarl sbb push xchg fs and (bad) movabs push shrl (bad) sbb or fistpl mov jrcxz (bad) movabs imul push movabs mov rcrl sub test push rex.X jle (bad) lock (bad) pop iret xchg (bad) mov rex.WR mov sahf in sbb adc (bad) jne push rorl xor add xchg pushq fld (bad) rex.WRB rex.WXB (bad) (bad) xor jae sbb xor or rcll ja rorl testb (bad) subl rex.R (bad) fsubs mov int jne retq and or xorb lret movabs addr32 mov scas dec (bad) xor sbb ror jg lea add lret shr rex.WRX mov int3 pop xor push rex.RX cmpsl cmp rex.WRXB (bad) xor jmpq pop sub jb,pn pop shll data16 lock (bad) add (bad) jrcxz movabs rolb cmpsl out int (bad) fcompl in mov movslq lahf cli stc int test push mov adc push test cmp mov retq mov cld sub sarl psrld rex.R (bad) ja (bad) mov retq cltd rex.RX rex.RX jno,pn cld rex.XB cmp sarl jo fwait add cmp xor (bad) push retq rex.WX and cld add sahf movsb add sub sub data16 adc lods iret or ja sbb (bad) (bad) shrl mov add mov (bad) lahf cmpsl test mov rex.B cli (bad) and push add adc sub sbb cmp sub sbb movabs rex.W popfq mov mov (bad) xchg rex.WXB rex.WB out stos or fcmovnbe mov (bad) outsb xor enterq cmpsl nop in jae (bad) sub (bad) lea (bad) (bad) nop xchg stos vxorpd (bad) fdivrs movabs push sub pushq (bad) leaveq jns test loope imul movslq xchg adc jle fildl (bad) sbb mov hlt xchg pushq mov (bad) xchg push (bad) mov rex xor outsl xchg cli callq in sub out in xchg cmp sarl jp out jbe adc (bad) or insl rex.WXB add repnz mov jge repz ds (bad) (bad) testb and (bad) insb ja pushfq addr32 xchg jae rex.X add callq test pop sub lret enterq movabs sbb (bad) scas adc sub mov xor mulb pop mov shld (bad) mov (bad) fwait repz and (bad) (bad) scas loopne xchg pop and mov sub (bad) jmp sahf sbb (bad) icebp (bad) mov test (bad) je mov rcll push (bad) pop fidivl ror rex (bad) int3 fcmovne adc adc repnz out test lret rolb mov callq xor mov (bad) (bad) (bad) add mov subl cmp sbb je out jmpq enterq add adc xchg (bad) loope out movabs push xchg shrl leaveq scas shrl push xor xchg rorl jge (bad) je adc movsl repnz fmull iret mov rex.WRB or lahf sarb mov (bad) push fdivrs (bad) negb and push add (bad) repz mov xor rex.RB or fnstenv iret loopne in or or pop out xchg mov (bad) imul pop xchg jae icebp fucomip (bad) leaveq insb and out lock iret repz test loope push rex.WXB pop push (bad) out (bad) sbb or and movabs vxorpd enterq adc data16 sub out and mov sbb scas insb xchg pop pop repnz xor fwait imul (bad) add cmp adc sbb xchg insb rex.X rex.W rex add fisttp pop rex.WX add sub xor xor out (bad) out jrcxz and rex.RB sbb (bad) outsb sbb es out lock icebp cltd mov stos out rex.WR rex.WR or fnstsw (bad) int3 enterq pop nop outsb mov test clc mov mov mov (bad) xor jl lods setge sbb nop rex.RX mov movsl cwtl or (bad) (bad) mov iret movabs (bad) iret out loope mov add in (bad) cltd jmpq scas xchg loope (bad) or icebp sbb xbeginq rex loope rex.WR or stc rex.RX rex.WRB pop sbb sbb (bad) add leaveq push xlat mov add stc shll pushq sar mov (bad) sbb pop and shrb jns shrl std or pushfq int3 sbb rex.WX xchg loope or sbb in xor mov add (bad) rcll cmp mov rex.WRB gs (bad) jl cmp pop sub lods jmp shrl leaveq int pop sahf xlat ror insl in stos rex.B xor add data16 jno and cmp (bad) ss xchg retq repz rex.WRXB rex.RX cmpsl enterq out mov out fmul xchg sub rex.WRXB repz sbb or (bad) sub mov and cmp ja out (bad) (bad) cmc test and and movabs xchg retq push lret pop xor pop imul rex.B out stos pushq jl (bad) push fnop mov jp jle adc xchg in popq mov pop lock (bad) cmc mov xor out xchg mov or popfq (bad) sub jge rorl int shr xor pop or jo jns paddq rex.WRB jge rex.WRXB xchg stos test icebp sti cmp jmpq cli rex.X pushq sub rex.R xchg sub xchg (bad) xor (bad) lods rex.X mov mov outsb lret sub jnp xchg sbb cmp hlt cmc jle xlat movabs out jge rex.WRXB rex rorl fwait (bad) mov pushfq iret icebp or imul sahf iret xor xor (bad) movabs mov movsb je fnsave mov xchg jp movabs jmp (bad) xchg jae mov hlt mov ds (bad) cmc (bad) cltd adc (bad) pop vfmsub231pd lahf data16 and or fnsave and rex.WX lock shr test adcl nop mov lcall cmp lock rex.R cmp pop mov add push movabs roll mov out nop (bad) ror shrl xchg int sbb popfq movabs pushq fist out rex.B or pop rcrl sbb sbb rex.B scas (bad) pop rex.WR xacquire sub rex.WXB xchg (bad) cmp pushfq fistpll leaveq sti jns add xchg cmc xor jmpq (bad) adc (bad) rex.WB retq ja (bad) cmp cmpsb int3 rex.RX js cmp pushq hlt andl jbe (bad) (bad) movabs pushfq jnp (bad) fisubl nop retq (bad) jno in pop (bad) rclb (bad) es (bad) sbb lods add cmp mov xchg (bad) mov pushfq adc and add retq rex.R mov jns loope jo rex.X jne xor (bad) (bad) fcmovnb retq xor (bad) in rex.RX add fs rex.WX int (bad) (bad) imul jo shll lods cmp cmp rex.B rex.B (bad) jne rex.RXB (bad) or imul and out rex.XB adc ffree rex.WRXB fistl (bad) popfq (bad) mov mov insl xchg lret fcmovb adc sti mov and mov or rex.WB neg sub push push cmp (bad) jne mov mulb test enterq imul (bad) in and push popfq mov (bad) jo jne vpcmpgtw mov loop jno or and (bad) cmc or rex.WRX sub addr32 retq stos lods mov jb xchg rorb in ror (bad) callq push push cmpsl sub out push mov push cld mov sar rex.WRB lcall jle ffree mov lret xor (bad) repnz pushq or imull xor ja jge iret xchg vucomiss andb out mov mov add out loopne mov jl (bad) lret push movabs mov and push pop sar (bad) jns mov rcrl int3 mov roll adc (bad) cmp loop callq mov (bad) (bad) rex.R add jg rex.WRXB (bad) lret retq or shll adc stc and retq fwait repz rex.WRXB hlt ja roll test (bad) push jmpq scas rex.B (bad) add addr32 sbb sbb jnp out sar mov jb jo rcll xor (bad) xor cs pop xor mov xchg adc pop add (bad) sub add (bad) hlt rol rex.R sbb jg rorl mov shll push (bad) mov ror stos jnp cs cli push (bad) cmp cli test jno outsl roll and xchg clc cwtl cmc rorl popfq rex.WRB ss jrcxz sub (bad) cld (bad) test outsl rex.XB notl mov loop add xorl int3 outsb rex.R or fisubrl rex.WRXB sar insb ss scas int3 adc (bad) mov xor (bad) cmp and rex rex.WRB stc sarl rex.XB test sbb ds sti and rcrl or shr retq (bad) outsl insl in xchg adcl rex.WRB out jnp xor iret repnz shrl mov jbe pop rex.WB mov add xor fs adc jae callq mov fnstcw push (bad) sar (bad) cmp scas rcr pavgb jne,pt xchg or nop sbb cmp xorl add pop push xchg adc fld add and lret cmpsb rcl and movabs xchg or out rex.WRB sbb rex.RX mov or insl and pushq pop xor rex.WX ds (bad) xchg out in xchg repnz sbb and stc sub (bad) icebp rex.WRB add rex.W fsubrs out test lock (bad) xor cmp lret pushq shrl out mov fstps roll mov (bad) movabs and mov out (bad) movabs (bad) (bad) add sub out add fnstsw (bad) (bad) sub pushq outsb in imul or (bad) scas or cmpsb xchg rclb (bad) shrl mov loope or mov mov addl hlt jbe cmp xchg rol push sarl adc or out scas (bad) loope rex.R or xchg (bad) (bad) mov (bad) sbb nop xchg sub fnstenv and or mov sbb in cmp shrl (bad) rex cwtl cmp jge jbe cltd cmpsl (bad) xor mov (bad) jmp movabs movabs pushq rorl mov lock rcrb iret ss fsubrl (bad) sbb fucomip mov and xchg loope je mov cli jg movsb cmc (bad) popfq (bad) jno jle jb xlat add xor jnp callq gs adc xchg repz mov in rcr sbbl (bad) mov push fs jnp enterq pop (bad) int (bad) and rex.WX add insb sub sbb rex.WRB repz ss sbb rex.WX and fisttpl sti cli sbb rex.RB imul jo xlat shlb sub (bad) pop adc rex sub (bad) adc mov stos movslq sbb and test in (bad) fcmovne xor push xchg loope rex.WRB sub xor jns rolb (bad) xor or fsubl or push cmp (bad) vcvtss2sd iret (bad) (bad) xor (bad) ss test pushq test movl or retq sahf mov rex.WB (bad) jae fldenv mov jae mov xchg repnz add insb es (bad) and mov (bad) shl jp mov cmp hlt outsl rex.B push movabs xchg rcr hlt mov cmp push sbb rex.WB (bad) or adc xor xchg lret push rcrl hlt gs insb in mov (bad) push sarl rclb movabs mov cmp movabs movabs popfq loopne mov (bad) (bad) fxch or xor shrl or push js rcrl mov add rex.R rex.RX cmp pop nop (bad) lock clc push loope pop rex.WRXB jmp fildll xor and outsl sub (bad) cltd test decl rex.RX sbb mov sub (bad) adc jl jns pop loopne insb sub in ds (bad) repz sub (bad) or movslq lods (bad) sbb (bad) jrcxz fld fs pushfq sub sarl sbb shrl insb test mov sbb (bad) outsl (bad) subps retq pop stos sub (bad) push insl cmp rex.WRB ds sub (bad) or iret and (bad) callq rex.RX repnz lea in xor rex.WX rcrl mov ljmp int3 leaveq (bad) rol adc enterq adc scas loopne push leaveq sarl mov rcll xchg add (bad) pop adc je mov gs xor repz rex.B repnz cmp (bad) addr32 (bad) rex.WRXB push and out jl in out mov sbb (bad) xor cmp (bad) movabs sbb push (bad) (bad) out (bad) pop test add and fldt in add icebp adc rex.X gs and mov sub (bad) shl testl loope iret in add xchg rex.WRX jp lret cmp out clc (bad) rex stos (bad) xchg add rex.RX pushq (bad) cs mov cli (bad) add ss stos sbb cmp rorw sbb rex.X rex.WXB ror adc out icebp or (bad) sbb retq retq sar lock xchg rex.W rorl std xchg and pushq (bad) jbe sbb sbb insl repnz incl (bad) mov stos (bad) cmc (bad) sarl jne (bad) lock (bad) fdivr loop pushq (bad) mov jb in rorl pop add xchg rex.X xchg rex.WRB (bad) rcrl and fldl repnz subl rex.X rcrl insb repz mov and cs sub sbb mov and imul or mull and mov adc cwtl pop fbstp rex.B (bad) (bad) gs xor cmp sub mov sbb (bad) xor (bad) mov or adc mov cmc rex.XB jp loop xchg gs mov xor rex.R shrl (bad) pop mov sub scas leaveq out scas mov push sbb test add rex.WB mov (bad) nop lret rex.RXB (bad) jrcxz sbb cmp outsl cmpsb jo cmp pop fisttpll add or faddp rcll sbb jbe rolb (bad) add mov test (bad) jb jae int outsl cmp pop (bad) mov lods (bad) (bad) rex.WRX js repnz mov sub (bad) xchg add js (bad) (bad) (bad) ja lea movslq insl and jmp fs jne js mov rex.WRB rex.X xchg (bad) out sbb xor iret data16 and pop andl cs or (bad) adc (bad) cmp or push in repz and ror rex.B push add movslq rex.RX movabs rex.X push or push test pop or addr32 xchg sbb cmp jl sar cltd test imul jnp mov pop (bad) cmp lahf mov sarl (bad) adc rex.W data16 lock (bad) or rex.WRXB pushq fcmovb mov rex.WRXB jno and retq (bad) sar ds movabs (bad) jb shrl int3 out (bad) (bad) rex.B (bad) (bad) xchg push movabs or rex.B insl sub fisubr std iret (bad) mov rex.RB rcll ds rex.XB ss andl negl xor jl jo pop cmpsb xor pushfq fldl jne rex.B scas shrl xor (bad) fcmovbe rex.XB lock cmp int3 lcall loope rex.B ds adc mov (bad) or rorb shll in sbb xor callq jle int3 test test (bad) js sahf mov sbb es loope and add sysexit (bad) rex.WXB sub ffreep (bad) rex.XB cs (bad) pop pop loope cmpsl pop xchg or sbb sub int mov rex.WX jns sbb xchg stc movabs shlb xchg jbe jae faddl xchg xor (bad) mov cmp xchg pop xchg ror imul cltd rex.WR ja xchg sbb retq mov push adc cmc adc and mov xchg enterq xchg cld xor sarl or (bad) push rcr lock pop rex.WRXB cmpsl fxch rex.B sbb cli insl rex.B mov (bad) rorb rcrl xor xchg stos fcompl sarl adc pushq or (bad) repnz mov scas testl mov imul sarb cmp fsubrl insl outsb shll lret (bad) cli jno ds (bad) jne cmc cmpl test (bad) sub loopne pop (bad) loopne loop (bad) jle loope int3 (bad) or lods fldt sub adc mov xlat xchg movabs addl or mov (bad) movabs push add callq mov mov movabs sub dec in (bad) (bad) push jg lret (bad) jp callq imul (bad) jo mov idivb fs adcl add (bad) (bad) mov mov sbb rex.RX (bad) loopne rex.WXB enterq rex.WRX repz add bnd jmpq int3 (bad) mov (bad) out cwtl push pop pop (bad) scas stc punpckhbw xor rex.R fistpl add (bad) (bad) rex.R repnz (bad) stc retq retq sub sbbl jo movabs xchg (bad) mov pop mov pop in sbb enterq adc movabs mov (bad) test ja rol lret test lock fwait jae nop clc mov pop xor (bad) or cmpsb rex.WB ja jmp js push rex.WX push movabs mov jne add fcomip (bad) adc insl rorb and mov cli (bad) shlb std cs cmp xor fmul movabs retq cmp enterq pop fist (bad) cmp leaveq icebp (bad) rex.WX repz jrcxz fild jb adc shrb rex or (bad) jrcxz rex.WB mov loope push (bad) callq (bad) pushq sub fisub retq xchg rex.WRX (bad) outsb fmul test sbb cmpsl add and out rex.WR (bad) or bnd add sub rcll lock je sahf mov bnd pop pop (bad) pushfq sub mov and jl adcl imul push test loopne xor rex.WX in mov xchg fs hlt (bad) sbb xchg int repz lret pushq fdivrl (bad) rex.WR cmp roll add add mov (bad) (bad) (bad) nop jae (bad) cs js xor movabs jl or or fsubl lret rcr and mov xor pop sub add pop enterq and xor in (bad) sarl nop cmp es rex.RXB mov lahf in rex.RB rex.R push adc movabs rex.B rex.R xor adc (bad) retq movabs rex.RX rex.RXB addr32 (bad) (bad) repnz insb add push rex.R retq cmp lret rcll outsb fldl (bad) mov and movabs and leaveq mov movabs in (bad) movabs cmp cmpsb stc (bad) rex.WRXB in xchg cwtl addr32 int rex.X rex.WXB cmpsb loope roll (bad) push add push (bad) sti xor jbe xor (bad) sub gs jne rex.WB jmpq rcrl (bad) cld (bad) sarl retq orb and loope jbe movsl (bad) jno jb and fisttp je (bad) lret rex.X push xchg mov fldl mov mov (bad) sbb movabs pop cmp loopne pop rcll cmp (bad) vshufps xchg out in jle loope ds (bad) lret xchg stos lcall hlt sahf repnz xchg mov repz push shll jl push jrcxz callq push imul fist (bad) jno rex.B add ss mov (bad) lock int3 jne retq push push pop movabs or (bad) jne add icebp (bad) sbb fwait mov mov movabs mull mov in and sub cmp and lahf stos rcrl (bad) pop rcl (bad) movq test pop sbb or jo movabs and sahf rcrl lods or (bad) jmpq rex.X mov add (bad) or movsl jb rex.RXB (bad) xor mov push xchg out and fadds rex.B gs sub rex.R fcmovbe rex.B movslq movl pushfq rex.R cmp (bad) mov (bad) (bad) lea ror lret mov sarb std fbstp push xchg xchg (bad) loop sahf jnp push shlb in (bad) stc mov (bad) xor push mov jno sti pushfq rcrl push (bad) (bad) retq (bad) movslq add adc shrl pop sahf movsb (bad) int3 rex.RB (bad) retq rex.R jne jge cmp and pop rex.WX loope (bad) rex.B xchg (bad) rorl rex.XB imul fxch lahf xor rex.R loopne pushfq mov cmp stc lahf test pop rex.X iret or sbbl mov rol (bad) push (bad) rex.WX cld xlat cmp adcl cmpsl jg mov or mov ss rex.RX mov loopne adc fist out nop test (bad) rorb rol int push (bad) sub movsl push adc jno mov sti (bad) loopne loop add rex.XB push scas lahf mov int3 data16 mov (bad) add (bad) int3 movsb nop testl sub (bad) (bad) xchg shll jp shrl xchg popfq rcll cmpsb cld sbb in ror add adc jmpq mov (bad) xor callq (bad) roll insb out push cmp nop (bad) xchg sbb pop sbb push addl xor rex.X fistl retq add (bad) repz add cmp ja sub scas ss movabs add (bad) push fidivr repnz (bad) (bad) outsl lea out sbb fbld (bad) add movabs (bad) movabs xchg push (bad) ror (bad) movsl movsb xlat xchg pop xchg push outsl mov xor mov loop (bad) pop lahf rex.B out rex.WRX test cwtl roll cld ss adc in int mov rcrl mov cmc (bad) xor ja mov (bad) adc rex.RX insl rcrl add push cmp push mov out retq (bad) retq adc (bad) out push xor or rcrl or cmp nop (bad) xchg shr pop lods scas and mov rex in (bad) (bad) xor cwtl sarl xor rorl (bad) cmp xchg callq cmp loop sbb xchg lods shll sbb movsb pop mov mov jbe xchg in push shlb callq (bad) mov test jo rex.WRB movabs or push (bad) rclb rex.WB repnz stos (bad) push callq mov and sub (bad) rex.WR (bad) (bad) out fistp pop jae mov test sbb mov (bad) js cmp imul cwtl or jnp sub rcr xchg (bad) out sbb movabs sahf (bad) mov or jmpq outsl sbb (bad) pop sti in or movabs add out faddp loope xchg repz (bad) mov adc clc jmp sbb mov (bad) sub addl sbb xchg (bad) rorl jo (bad) and add rex.WRXB pop lahf shrl std jle clc movabs ja sbb (bad) sbb cmpsl cmp push pop sarl or mov pop xor rcll pop xchg sarl movabs pop xchg sub fstl (bad) cwtl loop rex.WR sub imul gs or push push rcl orb mov (bad) repz pop ds (bad) rex.WX movabs movslq imul rex.RB xor (bad) (bad) (bad) loope rex.WX test jg lea and sub rcrl movslq cmc incl sub jmp loop rex.B rex.RB rex.WB (bad) (bad) lret xlat rex.WRX test loopne insl push or rex.WRXB mov notl jno (bad) iret pop cltd retq icebp movl xchg rex.WRX scas lea jno xchg sub cmp mov sub mov int3 rex.XB mov mov int3 cmpsb cmp rex.R fldl (bad) sbb lock movabs xchg test sahf adc lret (bad) pushq in loope fsubr notl lahf fstpl pop add loopne add test jnp (bad) cmp cmp add add insl test pop jmpq cmpsl sub test out sub cmp (bad) (bad) fsubrp (bad) sarl test mov (bad) adc pushq retq (bad) je iret retq lock mov or rex ja (bad) (bad) push stc js xor jae loope rex.B rex.XB mov rclb add mov test add pushq rex.WR imul or stos movslq mov jns retq loope (bad) out (bad) xchg mov retq mov (bad) sub jle (bad) mov (bad) jbe std loopne sub mov jg mov fildl popq (bad) push sbb pop pop cmpsl scas mov pop and cmp (bad) adc cmc sub sarb rcll mov rcr cmp movabs adc sbb add ds lods mov (bad) (bad) ss xor sahf (bad) add add push (bad) callq frstor (bad) (bad) add cmp rorl (bad) (bad) in and lret or mov xchg imul add int jne mov roll roll mov (bad) insl (bad) in mul shll mov mov sub cwtl pop (bad) callq lea cld xchg out loop jrcxz test (bad) cmp movsb (bad) (bad) pop jbe loope fwait movabs (bad) clc std sub or rex mov jnp (bad) push ds hlt ja int jb adc sub push stos pushfq rex.XB (bad) push add cmp cmp outsl negl rex.B rex.RX cmp out shr cmpsb rex.B (bad) rex.W (bad) negb xorb (bad) rex.W push and sub fnstcw adc jl cmc out (bad) jne mov pop test movabs mov (bad) adc add rex.WX imul add retq jbe add and pushq pcmpeqw and xchg retq scas div iret rex.WX fidiv movslq je jo shll (bad) int3 in sub callq (bad) or mov lock (bad) add xchg rex.WXB stc in ja jne shll cli adc test pop (bad) (bad) jo (bad) callq shrl mov or int3 jp mov mov mov (bad) (bad) or push rex.B rex.WRXB out add int3 (bad) xor fsubrl cmp and rex.X cmpsl movabs rorl (bad) xor mov fs and and rcrl mov outsb rcll jbe decl mov outsb push jne shr (bad) or fild (bad) cmp xor pushfq rex.WX rex.WR adc vmaskmovdqu (bad) testl jle add lret xchg xchg movabs sub and rcl xor rex.WRX (bad) (bad) jrcxz (bad) add or sbb (bad) shlb mov cs jb rcrl rex.W icebp mov js sarl insb movabs (bad) lock rex.XB adc xor mov jo test out in mov (bad) or fwait mov or rorl mov test pop stc imul int3 loopne std or (bad) push lret rcrl mov rcl jo icebp jmpq outsl pop test and stos shr jle (bad) sar js (bad) lock frndint or mov rcrl enterq std std movabs loope cwtl jmp add or clc js cmpsl lods or (bad) sarl rcll test (bad) je jns or rex.WRB gs in (bad) iret js (bad) pushq sahf callq xor cmp pop pushfq rex.B scas and fildl rex.WXB rex.W mov pushq mov sbb or (bad) adc callq (bad) retq mov repnz imul push sbb sub popfq in (bad) sub ja lahf sbb lock insl rcrb shll sub sub mov xchg mov sbb fstpl or mov jge icebp (bad) or rex.XB (bad) (bad) mov pop xchg callq add rex.RX mov in (bad) lods (bad) or pushq push rex.WR insb or (bad) xor rex.RXB shrl movsl xchg outsb fimul jne (bad) cmc ja or int cmp mov insl xchg mov rex.WRX fidivr (bad) cltd jmpq out movabs faddp stc gs (bad) sarl (bad) jne mov sbb jle stc or loope and rex.B cwtl and rorb mov rex.W (bad) mov movslq rex.XB rex.WRXB orl rcll xor rex.RX (bad) pop sbb outsb adc mov (bad) clc jmpq add jo add leaveq es cmp and maxps pop or rex.XB movsl mov bnd faddl (bad) rex.RB pushq lock (bad) (bad) sub sbb xchg fistpll xchg cltd or xor mov xchg xor mov or cmp mov (bad) movb fldenv jno adc repnz test sbb (bad) pop (bad) cld jle (bad) mov loop sbb add callq insb pop rex jo (bad) jg retq mov lret es and mov xchg sub mov jbe movsb pop sti mov or mov mov roll and roll cmpsl jnp imul scas mov jg mov pop es ja xor scas pushfq sub rex.B xlat and add (bad) rcrl clc (bad) rorl adc mov xorl rcll xchg (bad) pushq je movsl jae movabs repnz pop or movabs jns,pn je movabs hlt push sub (bad) movsl add (bad) imull sub (bad) lret retq (bad) loop sbb mov (bad) push sub cmp rex.WRX or retq push iret fidivr rex.WRX xchg clc jnp or pop ror ds test xor rex.WR shrl rex.RX test sbb lods lahf (bad) mov add and movabs cmpsl and mov rex.WRX int3 in (bad) ja fisttpl push add mov fidiv pop leaveq shrb leaveq rex popfq ja jrcxz push mov cmp cmpsb ror push rex.R or jae mov sub enterq in xlat outsb (bad) roll (bad) lahf rex.XB movabs pop out int push int adc rex.WR movsl test lods lret and rex.WRB (bad) data16 sbb repnz lock pop mov mov shrb xchg clc mov (bad) sti dec sti mov rex.X rex.WRX jrcxz xchg sub push retq (bad) rclb (bad) rcr sub cmp pushfq sub mov cmp iret mov or (bad) rex.WB (bad) (bad) jno add (bad) cmp fmull movslq movabs sub sahf xchg sbb sub mov scas (bad) mov xor sub in pop and data16 sub lret loope rex.WB (bad) mov rex.RX mov imul and ja mov int xor push mov (bad) jmpq mov lods mov movsl xor rex.WRB lahf cltd enterq es adc and rol rex.W (bad) enterq data16 cmp cli rex.RXB test adcl outsl mulb jae jno xor (bad) mov and (bad) movabs add sbb adc (bad) and mov (bad) loop shr mov (bad) andl mov shlb add cltd rex clc fsubp rex.WR jo sbb fcoms mov pop (bad) callq push cmp js jnp test cltd stos out in testb mov ja movabs and sub pop imul lock (bad) xchg imul (bad) xor sub (bad) sbb add (bad) movabs sub fwait (bad) fwait and stos sub (bad) pop sub adc (bad) jno repnz mov shlb jp pop pop movabs or in sbb sub retq stos jno scas retq xlat (bad) sub repz (bad) rcll mov clc adc cwtl jo lahf fsubr jb hlt xchg pop push rex.RXB pop shll rex.WR iret (bad) push xchg xor in addr32 je sbb std pop rex.W rorl (bad) xchg cmpsb jbe pop (bad) icebp mov (bad) scas mov movabs cli cli cmp bts rex.WRX xor jb shrb mov cmc scas movsb sbb fsubp adcl xor xchg or rcll in rex.W popfq xor loopne (bad) mov in roll rex.WX add pop roll sahf mov rex.WRB xchg adc (bad) pushq pushfq sahf bswap out sub jmp frstor cmpsl jo in mov (bad) xchg xchg incl rex adc (bad) insl jmpq rol (bad) cmpsb (bad) ja lea cli int iret push (bad) cwtl xor outsb jge mov rex.WB (bad) mov (bad) mov movabs rol rex.WXB fwait sub in xor rex.WX in movabs xor jne neg sub stos iret (bad) lret rex.WRX rcrb std movabs sub insl fistp mov fsts or rorl lret mov cmp in retq sbb clc iret adc sahf cmp outsl (bad) add js sbb (bad) (bad) rex.WRX fwait cmp cmp mov (bad) (bad) xor jnp mov movl push cmp add movabs mov fistpl es rex.WRXB (bad) add jo (bad) xor lods (bad) pinsrw sti stos xor jb divl movsb sub sarl or int rex.RXB (bad) jae xchg retq repnz in (bad) or callq test jg add cmp rcrl jno (bad) rex.WB or idivb or shl pop in rex.RXB (bad) or rex.B pushfq jbe lods ja shll fmull outsl or mov xchg mov lea rorb jmp js (bad) pushfq rex.B loopne cmp int xchg add jbe cmpsl xor sbb push callq mov mov fs (bad) adcb lahf not imul rol sti xchg add cmpsb pushq (bad) cwtl pop adc fcomi or movabs rolb (bad) shr (bad) and (bad) push push enterq lahf cmpsl imul lret rex.WX sbb pushq add rex.WXB movabs (bad) cld xchg jbe ficom mov (bad) pop push sub sbb rorb (bad) movslq jno rcll loop test xchg cmc or in rol (bad) jmpq in fisttpll sub (bad) rex.WRXB cmpsw push pop in (bad) (bad) mov insb lahf or (bad) (bad) mov fucomp cld pop lahf push (bad) jg xor jle and repnz xlat in pop (bad) adc mov jno or gs xor jne rclb movabs or (bad) ds pop rex.X lcall cli (bad) cld mov lods mov adc scas js (bad) add mov fcompl rcrb (bad) and add repnz out rex.WRX push lret movsb mov mov (bad) movabs sahf cld rex rorb (bad) xchg sti (bad) lock adc test mov (bad) and cmc popfq out mov lods jne cs rex.B rex.W pushfq mov cs mov iretq (bad) retq pushq mov jo test add xor mov sub (bad) and pushq add rex.WX and or mov sub mov cmp mov gs xchg std test sub push and add or sbb adc retq mov retq cmc shl (bad) out cmpsl sbb pop imul sub lret fistl (bad) popfq clc callq (bad) iret rex.WB outsl mov sbb xor mov test add test rolb roll xlat (bad) cmp (bad) leaveq mov push mov xorl icebp jmp jae push rcr rex.WRX nop movsb rex.RX es adc and outsb mov sahf (bad) cmc rex.B cmpsb mov (bad) out std callq jge gs rcrl push rcr shld push clc sbb imul stos (bad) sbb and shll movabs cli fwait jmp adc in movslq movabs shll test shrl loopne imul es rex.B pop pushq scas adc pop rex.B mov scas orl out pop lock popfq rex.WRB iret mov mov clc rex.X mov out sub xchg stc or (bad) sbb (bad) shll mov insb (bad) scas retq or sub js cmp add and shll fisubr push shll mov jp rex.WRB movabs (bad) js rcrl cmp jbe pushq cmp xor rclb (bad) xor rol (bad) scas sti or rex.WX (bad) jmpq jrcxz nop cltd sbb rex.WR rex.B repnz jno or mov std rex pop xchg mov vpmulhuw (bad) in insb in mov rex.B (bad) cmp adc enterq (bad) sbb xchg (bad) ss sbb movslq lock mov xor (bad) mov adc scas repz ja rorb jns jrcxz fistp retq xchg mov int3 mov mov fs je adc (bad) xor scas movabs pop shrl mov mov rex.WB and rcl movsb xchg cmpb mov cs or shr xchg mov test rcll in (bad) in mov xlat mov rex out jle mov out int3 retq int rex.WX loope ds out (bad) (bad) pop or int3 (bad) jne gs rex.R jne fistl (bad) lahf test roll (bad) sbb rex.WRX loopne mov cmpl repnz ficom (bad) rex.R out shrl lods push std sub sub icebp rex.B jb adc iret out rex.B rex.RB push mov mov rcl (bad) xchg sub int3 iret movabs shll (bad) ja pop pop ss cmp jg push addb repnz (bad) not rex.WRX push stos lret nop movslq xor xchg xor ss rex.RX loope mov out (bad) fsubrl rol jrcxz pop or cmp rex rex.WB jbe lock (bad) jl or test mov rcrl jne cmp shrl fisubrl cmpsl (bad) outsb (bad) movsl (bad) adc or jmpq pushq pushfw (bad) sti in (bad) (bad) lods cmp jle rex.XB outsb ds nop rcr xor and loopne test fnstsw jb lahf (bad) gs lock (bad) js sub rcr cmp icebp fsubrp cmp cmp test lods or mov pop xchg pop mov mov mov movsl rex.WR mov adc xchg mov xor test retq out mov mov cmp (bad) repnz fbld movabs (bad) xor rex.WX scas ficom mov orl xor fmul or or sub mov xor and push (bad) pushq xor jge stc retq push mov xor rex.XB outsl push (bad) (bad) rcr cltd int rex.RXB or enterq xor cmp enterq mov (bad) adc rcrl (bad) cltd or and mov xchg rex.WRX mov je adc mov (bad) jl sbb (bad) push and mov xchg fsubrs test mov je sti insb rex.XB outsl in test int sub shl add repz fistpl (bad) jae xchg (bad) rex.W in jbe nop shrl lret (bad) (bad) sub push sti out rex.X or xor rcll popfq mov pushfq (bad) rex.B add in pushfq and (bad) jne movslq ficom insl shll (bad) (bad) pop rex (bad) jo cmp mov add std mov add or rcrl add add mov (bad) addr32 int cmp jbe pop imul test sarl cmp (bad) negl fs fld iret mov jb out cwtl (bad) std mov (bad) jg movabs xor icebp or pushq (bad) or (bad) xor cmc iret in sahf xor push callq mov mov and adc (bad) loope repnz fwait jmp rex.WRX loop rolb nop std xchg sti mov rex.WRXB sahf sbb (bad) and (bad) cmpsb xchg xchg or roll int out test (bad) xor pop add mov xlat or ror movabs jg or or ficomp movabs xor jmpq or xor adc in mov jb lods movabs lret shrl (bad) retq scas mov rclb sub movabs out movabs mov sbb fisub mov (bad) outsl cli ds xchg imul (bad) sti cltd jno adc lods (bad) ffree imul jmp adc (bad) (bad) rcl (bad) rex.WXB pop xchg shl repnz jnp decb add xchg movabs add (bad) cld iret mov enterq rex.WXB rex.RB pushq nop pop rex.W fwait js jb (bad) xchg lret rex.WRB mov mov movabs repz and (bad) int3 push ds subb xor (bad) jmp pop (bad) jle pop sahf es fwait vpslld xor frstor notb sub divb imul insb lret movsb pushq cmpsl rolb rex.B or rcrl xor (bad) xchg xchg jno sbb and xchg sbb movnti jge xchg lods nop rolb shll scas test ja and and mov bsr data16 mov jbe jmpq mov rex.XB mov test mov in out sbb shll sub add adc add stc int3 imul test push sarb out es jnp test outsb rex.R lock push lods cmp xchg jmpq rex.RB and rex.RXB scas rcl cmp nop push js rol (bad) orl xor frstor rorl rex.RXB (bad) sub sub loopne add rex.B out fdivrs fbld leaveq and int3 movsb adcl fsubr lret cmp sub loopne jne jrcxz enterq jrcxz icebp ds cli jbe adc (bad) (bad) movabs xor add fidiv rex.WR and pop repnz jp adc jne (bad) sbb rex.XB (bad) adc jnp fmul mov rex.RB rex (bad) callq test pop rex.WRB movabs pushq mov sub lahf imul test ja add jg sub rex.WR repz and out mov pop or (bad) ja add lret lahf movabs imul xor pop push ror mov (bad) xlat (bad) fildl cmpsb data16 mov xchg xor mov pop scas rex.RXB addr32 test roll lods sbb sub xchg hlt pop out pandn shll add in xchg sahf jbe rex.WRXB retq stc rex es rol test cwtl (bad) cmc (bad) jo cmp cld xor rcll rex.RB mov push mov iret imul gs repnz (bad) add push sub mov rex.WRX fs rex.WB jl scas idivb xchg adc outsl sbb (bad) vpsrlw (bad) rex.WRX and mov mov sarq cmp add mov add je pop or pop pushq in rex.B hlt (bad) jns repnz mov xor mov add add rex.X sbb adc xor loope fsubrl (bad) loopel repnz loop pop fisubrl xor (bad) mov lret add sbb int3 mov jp lods imul (bad) test callq (bad) rex.RXB repz lret jns shr js repnz outsb xorb enterq stos sbbl rex.RXB stc rex.RXB sbb fist ja hlt xor sub (bad) icebp ds push mov rex.WR repnz rex.WX rex.RXB sti add enterq loop mov fcmovb jg (bad) (bad) and in add cmp pop (bad) (bad) mov hlt movsb pop leaveq xchg (bad) int rex.R mov mov outsb movsb sub lahf fcom callq jmpq jmpq movabs mov mov fcoml (bad) shrl (bad) sbb shll (bad) fwait sbb sbb cmp adc loope mov lret xor sbb mov icebp pushfq sbb retq js pop rex.WXB mov cmp (bad) loope repnz sahf pop xor mov adc xchg jg insb movslq je jnp xlat mov xchg imul rex.B es sarl movsl jne or and sbb scas retq jrcxz cmp mov jns clc mov xchg ds rcr loop (bad) movsb rex.B rex.WX (bad) push lret insl mov push (bad) loop lret push stos lret xor cmp hlt iret imul rex.WX cmpsl (bad) mov lods xor cmp mov andl cmpsl (bad) mov cmp add sub adc movabs add jl (bad) xor xor rcr imul (bad) push add jp pushfq adc sbb mov lret fidivr icebp (bad) (bad) sti (bad) lock sbb fld fisubr orl rorl mov xchg stc jp sahf lock (bad) leaveq cli rex.WRB pushfq mov sarl cmp scas rex.RXB sbb out in test rclb mov mov sub mov shrl retq or cmp shrl shrl sub xchg mov (bad) enterq cmp rex.WRX (bad) cmc shlb rex.B push rex.XB pop xor enterq (bad) (bad) (bad) int3 (bad) mov xchg mov xchg cmp sub (bad) and and jle gs and fstl ja (bad) cmpsb (bad) (bad) sbb or (bad) (bad) rex.WRX loope xor sbb (bad) (bad) sarl xlat (bad) loope mov rex.B rolb mov sub mov rcll pop xchg repz jmp rex.RX xchg sbb rex.XB rex.X int3 (bad) jg repnz rex.RXB repz lret push out loop jmpq jmpq (bad) (bad) cmp or sub push je cmp iret test and sub ja test (bad) xor pop mov push imul jmpq rex.RXB movsl mov mov xor sub push jbe pop rex.RX out and push and pushq jmp (bad) sub rex.XB stos fwait mov xchg (bad) push xchg mov pop add movsl jno and (bad) testl adc jmpq jnp sub xor test shll push mov cmp sub lret jb xor out retq insl rex.R movabs mov movabs add js es cmpsb icebp movsl sub movsl es or pop push lock rcrb test int3 repz movsl and mov in test cmp add fwait loopne in mov rex.B rex.WRXB faddl gs es loop stos rex ja (bad) ds xor (bad) test test rex.X cli sbb sti (bad) mov pop mov cli xor jg rex.B jbe hlt (bad) jnp negb (bad) (bad) and frndint sahf pushfq rex.WXB (bad) icebp or fistpll fs jne xchg fdivr jle rex.WRX or roll cmpl (bad) shrl and (bad) mov xchg jmp push std push push (bad) pop test or rex.XB addq rol sbb jns pop stc rcl rex.WXB lret fs rex.WR iret xor mov (bad) test rex xchg hlt sahf add cvtps2pd in scas test mov rex.WRB rol sub cmpsb sbbb rex.XB movabs test rcrb hlt jbe sar mov rex (bad) and fidivl pushq (bad) adc lret test mov sub or add jne and add or loope (bad) repz jae add fidivrl je and retq push and adc (bad) (bad) sbb movabs fsts jbe fstps imul sub or xchg movswl rex.WRX jo insb push mov test rex.B rex.WR adc mov sahf sbb (bad) (bad) out or or pop rex.WX addl (bad) test push pop mov mov mov xchg cmp (bad) movsl xchg and (bad) ja jg sub pop xchg add mov vcvtpd2psx jb cs addr32 mov (bad) pop in imul cmpsq std cmp (bad) (bad) (bad) clc add out inc sarl loope popfq fcmovnbe rol sbb hlt cltd insb jle pushfq pushq add xchg or loop adc xchg shrl pop xchg movabs sbb roll push outsb rex.WB lret (bad) sub (bad) movabs imul xchg cld rex.RX pushq scas or lahf lods (bad) in (bad) cmc lret or rep pop fnstcw rcll mov mov jmpq cmp iret lretw movabs add es (bad) or je push mov jle imul push ds and (bad) xor jnp (bad) xchg mov cli or (bad) (bad) int3 xchg rex.XB and sbb cltd rcll rcrb outsl sub adc out xchg jae jp jb cmpsl (bad) stos sbb rorl (bad) rex.WRB ficom test (bad) lahf sbb cmp xchg pop pop rex xor (bad) jo icebp mov pop add mov rex.RX stc sarl push and callq jp mov (bad) or mov xchg and pushq mov (bad) retq jb mov adc shrl xchg jbe (bad) jo loop jrcxz push es movabs (bad) js push jbe rcrl (bad) enterq (bad) lock mov xchg movabs cmc pop (bad) rex.XB xchg pushq retq ljmp out sbb cwtl add decb outsb xorl (bad) lret iret icebp cmp rex.R rcrl std mov xchg mov or (bad) sar jrcxz in xchg rcrl iret (bad) testb fbstp rcrq sub and xchg movabs cmp divb xchg push xlat jp shrl sbb enterq rcll int3 xchg mov add test gs or cmp xchg pop sbb xor sbb lahf scas lods pushq sbb sbb xchg (bad) cmp and sbb cltd gs popfq adc pop rex.WRB ffreep outsb xchg outsw sub pop shl (bad) jb (bad) jl lods (bad) jg fwait out xor sbb sub (bad) and (bad) mov sbb xor and je xchg (bad) pushq lret notb out add mov cmp mov stos rex.WRXB sub adc rex.WRX pushq jle lret add (bad) jo test jne jl (bad) mov icebp out rex.RX and cmc xchg outsb rol push pop gs iret cltd cs push or (bad) pop xlat repz hlt test imul sbb xchg out repz loope idivl cmpsb jmpq mov (bad) lret or rex iret jns out int rcrb mov xchg fild mov and (bad) rex.WB (bad) outsb jl roll jmp shll add retq pushq cmpsb icebp xchg (bad) jge push stc pop (bad) and add xor imul mov cmp ss mull pushfq jp (bad) rcll rol pop cmp shl rex.RXB rex.R rex.WRX jmp mov jns jl lods (bad) adcb mov scas push imul pop (bad) pop xlat jrcxz int cmp fsubr rex.B lods (bad) add rex.WR shrl or pop imul adc pushfq (bad) ja loopne in sub xchg subl (bad) je rex.R imul data16 (bad) ja test jns and sbb subb xchg repnz int3 (bad) mov lret sahf (bad) shll loope xor pop pop (bad) (bad) retq and pop lods int3 (bad) xor movabs sarl adc (bad) shll xor (bad) fsubrl std rex.WR rex.WRXB icebp cli stos xchg (bad) (bad) cmc mov jle (bad) sub rex.WB (bad) data16 sbb jge mov (bad) push stos (bad) xchg pop stc add cmpsb mov (bad) add lods or (bad) and jnp (bad) (bad) (bad) cltd sub clc pop rex.R mov push (bad) pop fisub (bad) jo or (bad) jnp rex.RB xor lock (bad) lahf mov lahf xor movslq mov rex.R stos loope lea mov sti iret (bad) xor in sbb ror pop movsb xorb jg cwtl adc popfq imul cmp addr32 mov mov xor (bad) sub fisub sbb rex.WX nop loop pop in mov mov push mov fiaddl shll sarl jns movsl xchg outsb add add xchg jmp jne jb mov movabs (bad) adc imul in rex.WX rex.WR roll jl and iret in lods sbb cltd roll retq rcrl (bad) lret test (bad) cmp xchg addl jge add subl pushfq (bad) mov out rex.B rex.R pop push (bad) jo xchg test (bad) (bad) pop adc sahf sarl jnp mov roll jg push mov lahf movsl lea test adc xor lahf xor xchg out jb sub movslq mov lods mov rex.B sbb xor rex.B fwait jno or and push add sub int test std pop pushq rcrl or pslld enterq fnstcw adc xchg jmpq rex.WRXB mov rex.WR cmp add (bad) fs loop movabs cs leaveq (bad) push sar rex.R fnsave sub and mov rex.WXB or scas cmpsl pop in imull or loop jp ficom sub jmpq jge xchg adc xorl adc callq xor (bad) mov mov mov leaveq sbb mov lret sarb add adc (bad) jno rcrl cld xchg out jle fwait (bad) (bad) pushq fadd sub retq fisttpl jne subl (bad) add retq shrl loopne rex.WXB orl sub adc scas (bad) movsb (bad) rex.B retq lods enterq jle jo add xchg (bad) lcall push int3 in mov mov (bad) jbe push mov imul vmovdqu64 roll (bad) sbb jge adc push sub int3 pushfq xchg fcmovb (bad) callq jge (bad) movslq hlt loope movabs int3 (bad) adcl enterq or lock mulb scas (bad) rex.WRX cmpxchg addr32 insl (bad) or (bad) in inc fwait jmpq jns sarl mov (bad) jbe push mov sbb ja mov (bad) fbstp lock sub jge mov jp push xor (bad) (bad) mov test lock stos fnstcw icebp movabs cwtl fsubrs fs xchg out out ffreep push jne in imul pop (bad) rex.RX cmp jg (bad) (bad) jmp xchg add ss (bad) test sarl rex.WR jle sarl shlb scas mov and jne pushq mov test (bad) sarl push cmp jnp movb rcrl lret (bad) (bad) insb or rex.R xchg loope cmp retq xor (bad) jl lods cmc popfq (bad) movsb add imul (bad) (bad) int (bad) sub shrl lea icebp (bad) mov leaveq jno (bad) sarb loope cmp mov jl repz pop es mov shll jge rcll cmp cltd in jne fsubl shrb (bad) jl push pop retq push stos test lods test repz (bad) retq cmpsl shrl jl fnstsw iret outsb mov out and rcrl adc (bad) jp mov push xor (bad) add adc lret jo roll cmp adc sbb enterq and test or movabs rex.B mov subl fdivs mov std stc mov in (bad) (bad) roll outsl (bad) addr32 sarl movsl (bad) jb rex (bad) rex.WRX enterq lret jnp sbb jle jge retq xor orl cmpsl (bad) test ja jrcxz add sarl or lods mov (bad) (bad) push xor and and sbb ja lret rex.WRX (bad) and lods loopne jnp push int3 sti mov (bad) stc mov mov mov sbb xchg jmpq fist outsb (bad) pop imul push shrl movsl mov mov sahf jmpq data16 add cmp pushfq mov add rorl out (bad) outsb (bad) (bad) ss scas jg xchg push (bad) callq and clc mov leaveq in and test jle cmp andl jno pop scas or add (bad) sets (bad) icebp (bad) sti lock sub jrcxz movabs push add pushq xchg rex.WRX jno repz lods add mov rex.WR mov rex.RX cld sbb add cmp rorl add sti jge xchg sbb rolb orl out xchg repnz cld outsl je (bad) movslq in or es js push stc (bad) mulb xchg add adc decl fcmovb and std (bad) mov add test jb or std lret mov not (bad) repz stc or cmp je pushfq loope jge cli adc sbb jno test (bad) rorl (bad) stc in sub or (bad) (bad) out add pop mov out pushq jae (bad) fildl (bad) fnstenv jge loopne (bad) stos xchg rex.RX (bad) loop test js lods or shll rex.R in add js push (bad) (bad) mov mov ror adc rorl push lahf sar decb pop or flds xchg repnz xchg xor mov sbb fiadd mov rol add and out sbb mov mov add adcl jns sub mov sub fstp add push sbb in (bad) and sbb negl lahf xlat (bad) retq int jrcxz shll (bad) xor mov cltd fstps mov xor pushq (bad) push pop lods mov cmp cmp fisubr and (bad) jmp in push scas sarl and in pop rolb (bad) stos retq or scas ffreep mov sub (bad) cwtl movslq rol loope cmp iret (bad) add add loopne shld (bad) movslq or cltd rcll rex.WRB (bad) (bad) icebp rorl adc adc gs popfq jb (bad) mov mov pushq pushq ss jb rcrb (bad) cwtl in xchg iret and repnz xchg sbb retq cs fldcw pop pop xor movsl fiadd mov (bad) fstps rcrl fldt jo jmpq inc jl ss cmp retq out xor movabs (bad) fcmovnbe sahf sbb cmp out cmpl negl add jp rcll push gs mov sbb pop push ffreep sbb vmulpd sarl imul cmp and movslq add pushq (bad) mov roll rex.RB cmc addr32 (bad) lea int (bad) fsts rolb rex or (bad) xor mov fcmovne xchg (bad) jbe (bad) add popfq imul xchg (bad) add pop pushq subl roll sub xchg or xor (bad) adc xor pop mov cld and (bad) fnstenv repnz xchg pop add insb and jb jbe lods loope movabs mov pop ror push in cmp (bad) (bad) rcll enterq (bad) rex.XB retq mov xor (bad) push rex.R (bad) rex rex.RX rcl push cld lahf pop andl and pop (bad) scas jle xor rex.RB xchg and adcl xor hlt add movabs mov shll cli mov jrcxz cld xchg rcll movsl push jno adc rex.XB add nop (bad) pushq in mov jbe xor rex mov adcl sbb cmpl mov jns imul fnstsw loope testb (bad) push rex.B jl sti rex.RB cli movabs xlat adc (bad) vpaddsb xchg jl cwtl sub je mov (bad) xchg idivl imul add rorb movabs jmp (bad) shrb add add lret push pop jno test (bad) mov retq repz (bad) outsb repnz xor movsb mov rex.WRX idiv push ficom jrcxz faddl push gs (bad) mov cmp enterq loope (bad) (bad) icebp rex.RX push (bad) int3 iret add mov jmp hlt adc divb sub push rex.WRX repnz push and repnz js retq mov enterq add in xor lret adc sbb add outsl sbb lods pop shl lock lea movabs cmpsl mov out fwait sbb jne (bad) jb rex.WX mov rex.R stos (bad) pushq sub and push or rex.WRB sub mov enterq fistpll (bad) std lods popfq push or fmuls outsl rex.WX lock rex.RX fdivr std mov fdivr out test (bad) (bad) adc sbb loope xadd sbb jno rex.WX xchg and lret callq roll mov sbb xchg sar (bad) out fidivr rex.X rex.RX sub fsubrs rex.WXB cmpsb push jg (bad) xchg mov push popfq int movabs mov (bad) (bad) sbb lret xor rcrl (bad) mov and imul imul add rex.WB ja sub jb sarl clc push fmul callq rex.R bnd lods ss sarl shrl cmp (bad) rex.B rex.B rex.WX (bad) cmp (bad) movabs mov scas mov (bad) adc test movslq insb pop sub shll and imul iret scas sahf outsb cld rex.B jns or (bad) rex.B addr32 rex.XB (bad) add (bad) (bad) sbb (bad) and out xchg xor rcrl rex.WB fisub add (bad) cwtl loopne and pushfq and rex.R jb rex.X loop int fildl ds (bad) sbb rex.RX iretq es fdivrs (bad) in rex.B idivb or xchg sbb fwait mov fldt cmp or jns (bad) retq (bad) rol pushfq outsl js cmp (bad) rex.WRB (bad) imul rex.WX and stos xchg idivb js pushq popfq mov (bad) adc sub mov sub and roll rex.WRB std lahf leaveq mov (bad) adc xchg sbb rex.WRB insl pop rex.XB rex.WB sub sub jae rcrl cmc mov lock xor and xchg (bad) fimull fsubrp lock add shll xchg pop shl add iret cmp adc data16 scas xchg in in retq hlt xchg cld pushq sbb adcb loop icebp roll push lea rorl popfq rol int3 sbb (bad) (bad) insb rex.XB shrl adc mov cltd ds cmp pushq and (bad) movabs lret lods (bad) rcll or rcrl xchg enterq cmp add add movslq sahf push jo scas and rex.WX rex.B xor jle shlb rex.RX sbb scas xchg sub retq rex.X and xor (bad) rex.WXB rex.WB mov (bad) jno (bad) sbb add test scas retq mov jg repz mov xchg loope (bad) mov (bad) xor xchg add jbe rex.B movabs jl retq (bad) cmp outsl leaveq xchg (bad) cltd in sub cmpsb lods (bad) je mov and stc xor movsl out (bad) in movabs push in rex.WRB (bad) (bad) mov jno add rex.WXB mov mov rcr js jne stc out rolb scas pop xlat xor rex.WR sub mov loope sbb test loope (bad) xchg xchg fsubrl test adc rex.WXB iret sti cli adc add fucom adc xchg repz fcom lret add cmp xor sub leaveq or cmc insl add fstpl xor cmc sbb (bad) rex.WRX sub fidiv ss insb xor mov loopne sub pop push ss gs fadd je movslq mov rex.WRXB test (bad) (bad) cs int3 fldl xchg in (bad) test (bad) jnp sbb repnz add leaveq jg lret ja (bad) imul sub sbb pushq add lahf leaveq (bad) (bad) sub mov stc push cltd (bad) sbb mov jp mov xorl in sub fsubs mov orl enterq (bad) in (bad) outsb in mov es retq cli scas sbb or stc cs mull mov (bad) (bad) rex.WRXB notl jg (bad) psrlq enterq cmp lret cli std nop and sub sbb test mov popfq xchg hlt (bad) mov lahf imul insb rex.WR fwait insl test fwait outsl jmpq cld xchg (bad) es cmp mov jnp jmp nop or loope add add xlat test rex.W rex.WR icebp lret push cld rex.WRB rex.WR or divl fisttp adc lea callq out (bad) repz adc icebp icebp scas outsl insb rex.W enterq pushq rex.WR loopne (bad) xor sarb sub int3 movsb clc add or fstpt mov add test repnz sbb mov popfq jmpq or insl add test mov rex.X orl scas sbb ffree adc movabs cmpsb push xor stc push pop xchg loopne icebp pop sbb xchg (bad) cmp out fsubl rex stos push test sub fsubrl jns bnd or cmp rex.X pop sbb retq rex.WXB movabs add xchg sub xchg jmp sbb lret xchg pushq (bad) cli sub sub (bad) mov (bad) incb notl jb (bad) (bad) rex.B fstps add rex.X ja mov outsl rorl jp mov ror notb jns rex.X sarl jnp push (bad) mov fwait adc std or test (bad) jp lret loope rex.WRXB (bad) test add out scas sbb (bad) sahf cli (bad) xor rex.X rcll or and rex.B repnz in fs rcrl or (bad) jg (bad) rex.WXB imul (bad) rex.RX roll sub hlt xchg int3 shl callq jne addr32 cmpsb cwtl mov (bad) repz cmp stc lret jrcxz rex.WRX shll shl jp xor movsl or jmpq retq sahf and in (bad) (bad) loop icebp test sbb jl (bad) sarl pop fwait sarl repnz mov xor cmpsl jrcxz (bad) adc ffreep sub int3 xor sub (bad) push retq adc (bad) jp (bad) xor and icebp sub fwait rex.WRXB cmc out rex.XB (bad) pop sub (bad) push sbb xchg js (bad) rex.WXB fdivs out and pushfq (bad) fildl insl es fdivl ds int3 icebp out ror fldl lods repz rex.X rex.XB retq mov test (bad) xor not pushq rclb sbb sub js (bad) es leaveq mov (bad) repz enterq pop push or mov fsts adc loope movsl jnp sbb in push adc rex.XB (bad) mov mov movsb jnp adc popfq jne shll jle iret adc (bad) test sbb jrcxz adc rex.W fwait jae rex.B stos rex.XB rex.WR lret retq shrb icebp mov sub out sub icebp (bad) mov rex.RXB rex.WX pushfq push shlb sbb push rex.RXB rex.WR adc rex.R xchg fadd push loope in clc enterq popfq push popq jmpq (bad) cmp rex.W jp rex.RX mov xor pop es lock test or sub test xor movabs retq jl int3 cmp imul pop lods (bad) sub xchg add mov and rex.W rex.B adc pop rex.XB popfq cmp (bad) iret (bad) loope sub insb rex.RX fnstenv jmpq ficom rex.W (bad) push shrl (bad) fxch shrl xchg rcrl pop je rex.WX fisubl jp roll fisub xchg mov sub sbb jns,pt push in lods in jae adc stc (bad) mull (bad) inc sarl fisttp mov xchg mov xchg (bad) roll insl or fistpll int cmp stos icebp stc rcll rcl (bad) movsb rcl out rex.WB ss pushq (bad) mov rex.WR cmpsb cmp rcrl (bad) mov fstpt sbb repnz push (bad) jbe (bad) and mov (bad) jo xchg roll rolb xchg notl (bad) rorl pushq rex.RXB imul mov sub sub sbbl adc rex.XB (bad) fidivl fwait sar mov movabs in sarl hlt sbb and xlat movabs jmp rex.WX sub (bad) xor (bad) mov and insl pop div cs cld retq (bad) jle movslq loop icebp add rcr (bad) hlt jns pop rex.WRXB jl shlb cmp add enterq pop and jno insb repz (bad) cmpl (bad) and shll mov rcrl mov shrl and (bad) rcr mov fs (bad) pushq ja push mov jns shr (bad) push (bad) (bad) cmp andb (bad) mov mov adc fdivrl enterq mov rex.W mov rex.W cli jo add movabs jb int3 rex outsl mov int3 (bad) pushfq mov movabs stc rex.WXB fwait cmp cld rex.WR push movabs sahf fsincos adc out or sahf xchg and and rex.WRX cmpsl add (bad) rex.WXB (bad) lahf out fwait (bad) mov (bad) (bad) sub fidivrl mov sub sbb xchg rex.WRX xor es mov and add lret (bad) fdivs jg jo out scas and callq (bad) (bad) mov xchg outsl subl adc (bad) mov (bad) mov sub (bad) xor adc sbb (bad) jns jge jrcxz (bad) add callq cs rcrl sti cltd xlat je loopne jne jge movabs pushw push addl stc rex.B push xchg rex.RX (bad) rolb (bad) xor rex.RXB gs and xlat addr32 rorl pop jle xor (bad) fildll push mov outsl int fs (bad) ror sub push data16 movabs fcompl (bad) jmpq test (bad) xchg (bad) mov mov sarb lret repnz rex.WRX rcrl or movabs and fisubl add jne pushq cli (bad) rex.WRXB xlat jmp sbb push push add push (bad) imul fadd decl or sbbl xchg adc sbb pop mov pushfq fstpt std shr sbb push mov mov mov cmp movslq jl std cwtl fnsave idiv je rex.X xchg pop (bad) push jrcxz js (bad) (bad) in (bad) rex.WRX push sahf (bad) loopne fadd cltd lods std repz addr32 sub hlt add in repnz frstor mov cmp loop mov rex.RXB jg (bad) repnz xchg (bad) jbe (bad) (bad) (bad) add notl xchg mov jns sub test pop rorb mov mov fs cmpsl or rorl repnz rorl mov callq sub mov or js xchg and out test movsl pop xor out mov cmp pop (bad) rex.WB rex.WRB sub xchg rcll cmp cmp jg xchg adc add sub sahf lret rex.R mov xchg cltd imul cli mov xchg scas add sarl adc int3 out rex.XB (bad) out (bad) rex.WRB pop mov test mov fstpl orl loop rex.XB and rex.R mov (bad) (bad) insb enterq mov (bad) rex.WR rex (bad) xor mov mov xchg rex.WRXB (bad) sti int and sarl faddp xchg sbb or rcrl and push (bad) outsb lea (bad) or icebp jno (bad) add mov pop rex.B rex.XB xchg pushfq adc rex.WRXB fs fwait xchg addr32 add pop (bad) (bad) mov popfq sbb vpaddb shr movabs jne rex.WB shlb movabs leaveq add adc jrcxz js movabs in add stos mov (bad) (bad) sbb mov rolb cld pop std xor mov (bad) xchg (bad) mov xchg sub (bad) shll movabs cmp rex.WRXB movabs push fmul xor (bad) iret sub add sbb ss in jmp sbb repz ffreep rex.WRXB rex.W fwait test fneni(8087 cmp leaveq xor (bad) xor mov pop (bad) adc addr32 jmpq rex.R sti pop rex.WRXB fs rex.W subl mov rex.WR pop in sub push iret sbb mov retq mov jb cwtl or loopne movabs jmp (bad) sub xor (bad) movsl or setl rex.WXB cmpsb in out xchg (bad) xchg loop lret (bad) rex.XB pushq callq in fcomi and (bad) sub (bad) push mov sbb add repnz (bad) shrb ss std repz shll sub loope xchg push cmp test cwtl jmp and mov fsts pop (bad) (bad) xor add hlt (bad) loop stc adc roll int3 sub cmp (bad) nop mov and clc movabs sbb gs rcll fwait lock stos fldenv icebp xchg sbb mov push mov rex.RX fsubrl in je (bad) xor (bad) jns subl mov shrl pop or enterq (bad) rex.B push cmp xchg xchg sti icebp outsb mov rex movb in jp orl sti (bad) (bad) (bad) rex.RXB movabs nop adc pop adc cmp or pop xchg rcll (bad) (bad) fs sarl (bad) ja fadds in pop stos (bad) and pop xchg out rex.WX lea es std adc pop (bad) retq rex.WB pushfq mov fadds in (bad) pop and add (bad) shr rcrl sbb rex.R cmp cwtl ror rex.WRX rex.WRB outsl sub mov rorl lahf adc rcl rex.RX fistp ja (bad) cmp pop out xor adc fisub int and mov cmp rolb (bad) xchg adc (bad) test (bad) pushq cmp (bad) test (bad) std out cmpsb sbbl (bad) scas jbe mov out jrcxz mov mov out in repnz (bad) jle stos lret sbb xorl (bad) (bad) xchg frstor fsubr sub or je cmp and rex.R out pop in add sub push leaveq (bad) notl jbe decl rorl (bad) pop sbb xchg xchg cmp mov iret add in (bad) xor mov cmp (bad) and (bad) imul shll jbe xchg (bad) (bad) (bad) lret enterq gs fbstp jnp jo out rex.WRX stos outsb test loopne lret rex.WB xchg (bad) loop dec lret add movabs mov push ss in test loop imul xchg enterq rex.WRXB (bad) (bad) (bad) (bad) hlt mov fidivr xor (bad) mov data16 cwtl lret loope cs js scas cli add sbb or repnz (bad) je cmp jp test js cmp (bad) rcrl push xor movabs sbb in stc retq retq fwait push add xchg xchg and sub mov mov (bad) repz mov pop rex.XB lea rex.WB (bad) add sub add push rex.RXB and (bad) jns xchg sahf gs mov sbb shll xchg jge imul cmp sahf movabs negb (bad) mov jg sbbl mov xor pop out rol xchg (bad) (bad) loop and rex.X insb lahf (bad) mov (bad) and pop ja rex.WRB test out mov bnd out imul outsb or sub int callq (bad) sub shll shll movsb push (bad) ds cs (bad) roll xchg pop insb jnp push sbb shr std fs sahf rorl repz add xor pushq pop imul sar rex.W or (bad) mov and lahf movabs scas (bad) xchg rorl mov addr32 add rex.XB ds rorw jno rorb rcll cmp lods jrcxz adc adc push add adc jge rex.WRXB fcmovb cmp push shrl xchg mov int3 (bad) sbb push jno std ja xchg sarl mov insl and jrcxz (bad) xchg roll cli pop outsl pushq std rex.WRB rcr (bad) cmp mov lods retq lret pop (bad) retq or imul rcll (bad) sub popfq mov callq jno or rcrl xchg icebp xchg roll movsl lret loop test lea roll lods xlat scas add outsb xor (bad) xchg push out (bad) leaveq shrl stc lahf add outsl push mov mov sub jp int cmpl jae retq (bad) adc in add pop std adcl sbb rex.B rex.R hlt pop push (bad) mov (bad) cs cli or (bad) cli fstpl xor jno rex.WR sbb sbb cmp (bad) xchg xor rex.RXB lock sub sbb sub mov and mov add mov movabs movabs insl rex.R mov add (bad) rex.RB (bad) ja pushfq (bad) (bad) rex.WRX jge or push pushq es jne cmc or mov mov scas movslq rex.RB adc divb mov stc fs repnz es (bad) xchg in (bad) mov xor mov push add hlt clc lea add (bad) xchg in cmp push (bad) (bad) xor sti add (bad) jge pop cmp jl fiadd (bad) jmpq jmpq xchg rex.RB sbb rex.WXB or sbb sbb (bad) mov shl mov mov movslq sbb pop rex.WR xchg add repz pop imul movsl loope rcll adc callq xor jle repz and movabs movabs sbb test mov (bad) sti add out xchg leaveq sbbl rcrl jae je rcll mov push xchg loopne (bad) frstor jo mov fidiv lret mov mov rex.RXB rex.RX (bad) mov mov jo rex.RXB (bad) cmpsl pop (bad) (bad) jmpq imul mov rex.WB (bad) mov xchg orl js int3 out (bad) (bad) idiv insl adc movsb jo (bad) int (bad) jno xchg jnp rex.WRX xchg notb cmp rex.WX ds std (bad) sub jmp loop cltd sti jge xchg or xor sub sahf sbb (bad) adc xor ds sti rex.WR fldt andl cmp sbb (bad) mov push movabs in mov (bad) push shll js sub rex.XB rex.WRB or push iret scas (bad) stos or movabs jae data16 sbb mov shrb in xchg lret callq add (bad) popfq adc insb fld fwait test cmp sbb fiaddl rex rcrl mov jnp out imul pushq addr32 rcll and cmp mov jmpq adc add cmc (bad) imul leaveq lret (bad) fiaddl sbb rcr cmp adc jno (bad) cwtl movslq rex.W scas adc stc outsb ror mov outsl cmc std cltd jg roll (bad) js rcl (bad) ss lock xchg (bad) or mov xchg adc hlt jb roll rex.WRB decb and repz mov rcrl rcrl rex.B xor pop insl and (bad) movabs jrcxz mov xor xor stc mov (bad) fmul callq and (bad) lret jo fsubl adc (bad) addb (bad) insl rcrl stos adc gs (bad) mov movabs jl jno pop (bad) sbb shrb repz (bad) retq xlat lret in sbb xchg sub sbb jo cmp sbb jae test cs cmpsl leaveq nop lods (bad) leaveq xchg pushq stc jmpq rex.XB mov sub cmp test nop (bad) mov mov (bad) xchg mov push mov and xlat rex.WRX rex.X pop xchg lret mov mov (bad) sti (bad) (bad) (bad) mov cmp mov pushq push (bad) int3 xchg fs mov adc pushq fcmovnb and stc sbb int3 rex.WRXB rex.RX jp xor enterq pushq (bad) xchg jp (bad) hlt xchg leaveq lock (bad) stos lret fstpt mov cs ficompl mov callq mov add cmp rex.WRB rex.WB pushq idivl add out (bad) in rex.WXB jbe add clc xor loopne and xor or movabs rex.W jge adc lock iret lahf cld in imul in out lock cmp test (bad) sub (bad) xor mov addr32 pushq cmpsb ficompl xor loope cltd jbe (bad) scas jl (bad) add test add xor pop (bad) mov shrb or or and push ficom xlat in (bad) pop rex.RX sub jmpq stos icebp cwtl jrcxz sub addr32 int (bad) fstpl in pushq stc sti hlt xor rex.R (bad) sbb shr fnstenv stos int fcoml lock cmpl xor cs mov leaveq and jmpq leaveq push add int3 jp movslq push sbb ds (bad) getsec sbb iret sbb gs movabs mov pop mov insl sub mov rex.WXB fs repnz fstp test ror scas (bad) stos adc test pop insl push jbe jno stc rex.RX es rex.W or adc add pop pop js mov cld push xor mov xchg (bad) ds cmp sbb in (bad) adc rex.RB movabs callq rex.XB (bad) sub or nop pop leaveq repnz or rex.WRX fildll rex lahf mov mov xor adc sbb mov add lock shrl pushq pop mov outsl out loopne int in fistp movabs fmuls (bad) fldcw jp fisttpll je (bad) (bad) movabs out int3 jno (bad) fwait jno xchg (bad) rclb (bad) imul test (bad) jl sbb (bad) testb data16 or mov lret rex.RB mov mov rex.WX cmp cmp rex.W or cmp mov (bad) (bad) fcompp movabs and cmp (bad) (bad) rex.WX push (bad) cltd mov cld movsl lock loope fs in pop mov (bad) pop mov or loopne icebp in (bad) repz movabs and js mov cltd imul in or movabs mov adc (bad) jne test clc movabs add and mov mov sub xchg add je (bad) lret or out rex.X insl (bad) cmc mov sbb or std mov retq cmc rex (bad) or mov adc movb xor es ds lods rorb fistl sub (bad) rex.WRX mov mov in cltd adc (bad) or rex.RB jbe (bad) fnstcw sub rcrl add shrl and rex (bad) (bad) jmp cmp sarb push out test mov cmpsl rex.RXB add iret icebp scas rex.RX (bad) insl cs mov fcoml (bad) jno cmp xchg imul roll jg movabs (bad) (bad) (bad) adc leaveq cmc addr32 int3 (bad) cltd movslq adc mov popfq (bad) and mov (bad) rcl or jno callq fs sbb add xlat and roll jmp shrl (bad) fcmovb (bad) data16 out addr32 lcall pop test (bad) or iret cld jl rex.XB stc xchg (bad) xor xor jne cmp adc xor out (bad) (bad) jp pop stos shll jmp roll and test jo (bad) sub in mov stos (bad) jo int cmpsb incb pushfq lods sarl sub shll icebp movabs (bad) movabs rex.WB pushq add adc fs xchg fwait shlb mov rclb sbb roll imul fcoml gs mov sar xchg lret lret cwtl pushq roll mov (bad) mov jb jp (bad) push (bad) icebp push push mov shll lock and cli rex.X or xchg stc jb cwtl sarl rex pop clc shll rex.RX add (bad) mov es ds push or roll test mov (bad) add hlt xchg pop mov rex.WX (bad) jno (bad) mov sar xchg xchg scas mov (bad) jbe out (bad) mov sar and ds push rex shrb fist push (bad) in (bad) mov mov sbb movsb shrl rex.RB ja (bad) ss (bad) mov rcrl callq jmpq cmp rex.WR sets rcrl int3 scas rex.WRB test (bad) pop lods add xor and add push enterq es insl jg ss movsb push adc sub xchg (bad) jbe rex.WRXB pushq (bad) jb add xchg fcmovnbe mov jmp mov gs pop shrl or rclb cld add lea cltd insl xor (bad) or movslq rex.R cmp mov std lahf fs cwtl rex.WXB jge rex.WR mov test (bad) mov std test and out lret rex.XB iret imul scas and xchg xchg add rorl sub (bad) cmp (bad) je orb (bad) adc xor (bad) jns xchg cmp and loopne mov jnp sub shrl movabs (bad) or mov iret (bad) (bad) and hlt test pop outsl (bad) lahf xchg gs rcr (bad) jno lods jg out rex.RX add repnz pop in sub sub shll jl jo stc mov insl adc push fld mov shlb mov lods and out rcrl (bad) out addl jp xchg (bad) enterq insb pop insl xor or cmp popfq pushfq (bad) sub cmp push fld lods or cmp shrl rex.WRX rcl insb fwait jp xor shrl pop sti pop rex.WB rex.WRXB rol (bad) mov lret and orl (bad) sub jle cs movabs (bad) out jbe mov (bad) (bad) sbb mov fistpll rex cmc sub fcmovne retq (bad) sbb iret (bad) movabs (bad) lea add sarl jl or mov rorl sub rex.X rex.WR (bad) xchg and pushq xchg rex.WX jno in mov rcll pand lret gs sub shr mov xchg imull and rex push xor pop xchg fistpll or adc rorl stos xor or je sbb cmp leaveq sahf push push fs fcmovne mov adc sbb (bad) lock fsts ja (bad) mov data16 (bad) mov in jno (bad) sub jmp push xchg shrb add rex.X insb movabs rex.WXB adc xchg jl (bad) rcrl in cmpsb xchg (bad) xor rex.WRX (bad) (bad) rex.RX (bad) rex.WXB fiadd (bad) movabs movabs imul push faddp int subq (bad) mov es rex.WR (bad) jbe xchg rex.RX retq js notb sbb sub scas xchg cmpsl (bad) xor addr32 int3 add xchg or (bad) jmpq add scas cld xchg enterq callq or outsb adc fldenv jp rex.WR rex.WXB (bad) icebp xchg rex.WB repz cli (bad) adc or push (bad) sub adcl pop loope nop (bad) enterq rex.XB rex mov ds jg mov clc jle jp clc mov and repz cmc mov mov (bad) xchg shll mov or icebp adc mov adc cmp pop (bad) (bad) cld adc out outsb and movabs cmp mov rex.W out rep mov enterq or insb (bad) xchg shrl xchg jmpq sub jrcxz fs cmp (bad) (bad) (bad) fidivl mov mov cltd (bad) xor pop mov imul repz jo pop xlat rex repnz or adc in jl xor testb add xchg jns sbb (bad) push pushfq out cwtl sarl loop rex.WRX hlt scas rex.WB movsb fimul sbb and add pushfq nop sbb sbb rex.X sbb add movabs pop and pushq mov in retq jp sahf (bad) movabs sub test pushq or push (bad) push push xchg sub xchg mov (bad) mov sar in cmp sbbl mov mov pushfq scas shr iret lret mov adc mov fadds (bad) mov jo cli adc xchg rcl int3 loope loopne (bad) (bad) push notb mov sub bnd jl rcrl cmp fimul pushfq push stos shll lods ss outsb movabs xchg (bad) test or jo pop pop rcr (bad) roll rex.WB mov scas roll rex.B mov (bad) popfq jl loopne sarl add (bad) xlat cli je retq enterq mov (bad) ds pop rex.RX lock xchg add lret rex.W ja jmp iret rex.RX int mov jge outsl (bad) icebp xchg add adc repz sahf add rol sarl out retq nop (bad) (bad) jns rex.WXB jmpq or cmp (bad) mov mov push shr in ss cmp rcll negb (bad) jmpq jmp push xor (bad) (bad) testl cmp cmp (bad) rex.WR mov in ror pop adc sub add sti leaveq loop xor and and pop jrcxz sub mov rcr std add shll or cwtl in xor adc insl push fstl pop (bad) mov (bad) push rcll sub mov add int3 movabs divb jmpq pop xchg loop mov cmpl callq (bad) movabs add sbb jne adc pop pop sub pop movabs push outsl retq shrl cwtl movabs ss outsl retq test movabs (bad) stos push out stc add fs test stc jne and loop cld mov scas shll jne loopne in (bad) rex.X in retq shl rex.B movabs (bad) add data16 sarl mov or or cltd mov and and (bad) rex.WRXB fs pushfq repz mov xor jle gs pop rcll test sar xor and xchg (bad) lods addr32 pop stos sbb xchg in callq and pop (bad) (bad) (bad) (bad) (bad) jns icebp rex.B mov (bad) retq jle lret cmp jp pushq rex.X retq loopne enterq fnstcw or in add xchg push test out push repnz (bad) nop test (bad) (bad) lock pushq rex.RX outsl pop sub (bad) popfq sti std xchg xor rex.WB jo cld add vpsubw rex.W fcompl fimul rex.B xchg sar add and and rex.WRX data16 rex.X rex.WRXB (bad) imul adc (bad) rex.XB (bad) movsb push retq adc movabs icebp cmpb mov push push jle cmp xchg sub ja rex.RB fisubr (bad) add mov pushfq movabs xor xchg ss callq int3 adc test retq and gs and pushfq sbb (bad) xlat int sub push cmp lock int mov out int3 icebp rcrb jrcxz rex.WXB insl (bad) (bad) loopl div rex.W or not (bad) mov cmc fcmovnb (bad) idivl stc rex.R loopne cmpsl add stos not or rex.WRB data16 loopne int3 pop or callq mov lods enterq sahf cmp mov shrb mov jle (bad) int rex.WB movslq (bad) cmp cld xchg rex.WB mov out stc scas (bad) out or pop and movabs (bad) pop (bad) rex.X lret cmp (bad) jno cmp es rcll lock mov cmp mov xchg pushq rorl rex mov jp push rclb (bad) add std mov (bad) int jno movabs fwait sbb rex.RB rex.XB jmp out or xor jo cmp cmp (bad) cmpsl or add or imul in pop add stos mov lods stos jns xchg (bad) pushq rex.XB enterq mov ja xchg lret test jbe add fstl (bad) stos pop scas fwait (bad) gs lods ja xor push (bad) pushq rorb cmp mov adc int fstl rex.XB push add mov rex.WXB repz xor fisttp int (bad) xor fsub sbb imulb rclb rex.WXB addb leaveq (bad) (bad) testl push or pop rex.WRB outsb mov adc ja test vpandn loopne clc xchg sub and repz loopne movslq push stc lret repnz (bad) psubsw jg mov mov (bad) fcmovb adc adc mov (bad) or jp sub in rex.B (bad) sub pushq (bad) enterq (bad) adc and mov out movslq cwtl insb xor xchg (bad) sbb rex.WX cmp or xor ds (bad) repnz out add and mov adc jmp rex.RB (bad) cmp and jnp stos shrl fstpt mov cmp test (bad) pop imul mov rex.WXB iret (bad) push (bad) add sub adc movabs rex.RX fcmovb xchg lea xchg cmp xchg (bad) mov xor int3 xchg insl shrl mov jmp callq sbb xlat out sti rorl xchg mov (bad) clc rcl add loop gs jbe sarl je sub sar mov sub mov out (bad) mov jo xor adc (bad) xchg flds jb rex.WX and test fidivl push mov pop jmpq ds sbb notl (bad) stc and ror cltd mov (bad) (bad) cli roll sub sbb sub pop (bad) mov mov add lret (bad) fwait and insb mov push shr (bad) out pushq cmp andl xor movslq cmp jbe roll fs (bad) (bad) mov pop cmc jns pop jrcxz cmpsb (bad) rex.WXB repz add adc sub loope xor and hlt push out (bad) cmpsl mov rex.WB iret mov xchg in mov rex.X (bad) rex.WRXB jp (bad) loop add (bad) rcl jbe mov gs sbb jg movabs movslq sub insb movabs rex ffreep pop rex.WRX cmp mov rex.X or scas pop (bad) cmc (bad) (bad) out rcr (bad) xor enterq lret jmp lods cwtl repnz xor lods rex.R or shr (bad) (bad) xor test adc shll mov push test cltd out push pushfq out fldenv sub std callq test popfq outsl rex.B jrcxz fcmovb (bad) stos repz mov (bad) ss sub shrl xor rcr (bad) xor vshufpd icebp pop push or push rcll test test sahf cwtl add (bad) pushfq (bad) (bad) notl shrl cmp rex.WR loope movsb int3 iret (bad) mov (bad) (bad) mov jmpq cwtl and mov rex.WRX callq rex.WXB enterq push fnsave jae loope pinsrw push ds sbb insl (bad) (bad) lock jle movabs imul (bad) (bad) lahf add xor (bad) cmp rorl std (bad) roll movsl pop js clc repnz adc or rex.XB ss lret fmull (bad) mull (bad) jg jb sahf xchg mov outsl sbb sub pushfq mov movabs and movslq jne pop divl (bad) ds (bad) sub jle ja xchg push xchg ror or jno mov and rcr rex.B jo retq pop sbb add jle rex.WX es mov rex.WRXB xchg mov out mov xor mov adc ss mov sub (bad) xchg (bad) jrcxz imul nop jnp lret jl adc shl hlt (bad) (bad) ds (bad) (bad) sbb sub add retq mov rcll iret (bad) callq rex.WR clc ds sahf cmp (bad) xor jp (bad) hlt shll cmpsb pop movslq (bad) (bad) rex.W rcll adc (bad) sbb jae clc imul rex.XB lods lea shll add and xchg shll cmp lods leaveq rorl sub and mov xchg lea mov movabs ss retq adc jge insb mov add add int adc (bad) cmpsl sub adc mov sti lods cmp lret and callq sub xchg es and mov cltd sbb lahf movabs and xchg and lods movabs movabs movslq roll sub test pop stos ffreep add mov and int shrl jo add jmpq (bad) or cmc iret sbbl shrl cwtl xchg std pop sbb iret (bad) shr nop mov or mov (bad) add retq rcll shrl stos rcrl je in jp movslq loope (bad) mov add cmpsl rex.WX int jl push (bad) rex.WB jnp jmpq xor add rex.X and movsl cmc mov movabs (bad) add xchg xchg sbb int mov or (bad) cmpsb pushq shr (bad) (bad) nop and imul retq (bad) jno (bad) callq pushfw insl subl rex.WRX movsl faddl andl mov (bad) rcrl rex.RXB (bad) push lret and mov rex.WR fdivrl ja stc es mov jo loope jge (bad) sbb or rex.WR rex.WX in lret sbb rex.WX add stos mov out pop pushfq fs sar loop mov fmull pushfq xor rex.WRXB sbb cwtl rcll rex.XB rex.RB xchg mov xchg fimul movabs out (bad) orb (bad) pop (bad) fs (bad) or rex.WB and rclb adc rorl test (bad) and std and (bad) push xor enterq and (bad) xchg fwait mov (bad) hlt cmpsb add out (bad) push (bad) (bad) pushfq pop (bad) mov (bad) (bad) mov negb (bad) repnz xor add movabs fcmovu stos test lods loopne rcrl sbb (bad) sub cli rcl mov (bad) jb lret sbb int (bad) pop sub mov (bad) and rex.RXB cli sub add lea lock mov out jnp lret testl (bad) adc mov jp rcr (bad) fldenv sbb shll lock jo xor ficoml in ss rex.R rex.X mov imul and cmp insb cmpsb xor rorl fs movsl pop int3 xor and push add loope cmp lock or rex.R (bad) imul sti jno fbstp (bad) (bad) sub rex.WX mov xor shl sub in (bad) jnp mov roll add test lods add roll imul int stc or or pop xchg push cmp pop loope rex.WRX (bad) mov sbb movsb iret xchg icebp jnp out jno sbb (bad) in add movsb mov rex.WRB mov add sahf jmpq cli xchg push movsb sub rex.WB out or imul xchg pop loopne pushfq push jle es or rcrl (bad) sub sbb int3 lods (bad) pop ljmp rex.WRXB (bad) cmp xchg repnz loopne nop loop (bad) jb ss rex.WRB or (bad) sbb popfq cmpsb mov rcll pop pop add movslq out loop fadd fstl int mov adc lods (bad) fs lea rclq sbb cmpsb cwtl pop fld (bad) movabs (bad) (bad) iret callq push sub ror sub xor jno and pop lahf stc pop xchg sbb and rex.RX test mov xchg adc fs pop repnz xor rex.RXB sbb divb fbld (bad) sarl pushfq test mov hlt jge push enterq rex.WRXB mov lods stc popfq and or sbb (bad) jno (bad) shr mov fisubl jrcxz hlt jl test cmp xor and mov mov (bad) fiaddl push (bad) stos faddp sahf loope rcrl pop ror jo add add (bad) out pop leaveq rorl cmp rcrl push int3 movabs fidivl leaveq jmp sub lret push movsb (bad) fisub add jge lods push faddl (bad) insl xlat (bad) rex.WRX rex.RB sbb xorb xchg jno add icebp rex.B rex.RB imul je hlt iret mov movsl adcl push mov cs movabs pushq (bad) xor lea movsb xor sub rcrb add sub iret repnz ja (bad) (bad) or mov xor pop adc hlt add jl cmpb (bad) mov mov fcmovnb (bad) sahf stc cmp xchg cld rcll addr32 (bad) mov fnstsw xlat mov add pop xor test and rcl jle rex.WRX (bad) mov (bad) out loopne add and rex.WB mov and pop retq (bad) mov sub add out callq sbb xor push int3 rol fistpll sbb (bad) addl cli rex.B test outsb mov xor movslq cmp (bad) mov (bad) sub mov rex.RX in sub mov (bad) mov rex.XB fnstenv (bad) rcll je ds nop mov scas mov (bad) adc or shll out sbb xor mov ficoml sbbl (bad) or add repnz pop (bad) scas (bad) int add (bad) sahf fldt icebp enterq rex fdivr lods adc rex.WRB out fldcw cmpsb es repz test jp imul rex.WRX rex.RB int movsl rex.RX out and data16 gs (bad) cmp jmp mov js sahf (bad) shld xor out loope pushq sub and rorl rex.RXB int (bad) or (bad) lock mov push scas rex.WX xchg sbb cmp add mov test pop mov shrb push js sub (bad) rex.WXB adc (bad) pop test repnz push jo fdivrl mov test cmp xor cmp fmuls test imul in cmpsl jae cwtl leaveq es int sahf stc (bad) (bad) add push sahf jne sbb fidiv movabs adc jp andl add fstps rex.XB jne retq (bad) jbe sub jo idivb mov sub loop mov lods xlat xor mov xor fisttp (bad) adc fidivrl mov (bad) cmp (bad) jmpq retq (bad) mov sub andl or sub (bad) (bad) lock movabs (bad) test jns (bad) cwtl in add mov rex.B (bad) mov pushq cmp (bad) add sbb popfq repnz rol outsl (bad) xchg jge and adc ja (bad) (bad) mov xchg sarl mov movabs jp lret fidivr mov or out jns pushfq roll push adc fdivrl test add (bad) (bad) retq jmp jle xor cmp mov movabs rex.WRX sub xor jrcxz adc add add (bad) xor sub and (bad) cli push mov pushq sarl rol (bad) fnstenv and rex.X pop je add out (bad) sbb sbbb (bad) pop in or test (bad) xchg stc rcrl cmpsl rex.WXB pop or xor adc mov rex.B fmull rex mov pushfq sbb roll mov fwait jmpq cld push (bad) fstpl nop (bad) (bad) cld (bad) adc outsl rex.B lahf add xor mov jl in jge rorl or repnz popfq int3 (bad) xchg lret sbb fisub sar (bad) or xor pop lahf ror je js in scas int3 fisubl (bad) loopne rex.WRXB rex.W rolb (bad) notb sti movabs pop rolb or rol leaveq pushfq sbb add xor movabs shll or rcll sbb lods adc (bad) jge subl out push in rcrl lods lret rcll mov (bad) imul mov popfq adc andb jb mov cmp (bad) sarl and adc (bad) pop xor stos lret (bad) (bad) mov pop stc rex repnz rcll or (bad) jne outsb pushfq mov mov movb loopne rex.X test xchg (bad) push and rcr (bad) out cmp lret xor pop xchg shll fistl sbb mov movsb sbb rol mov lods jle shl jbe jno sbb js pop std xor (bad) rex.WRX test xor pop roll xlat pop jmpq rol push (bad) or (bad) leaveq int3 imul ss int3 sub and scas sbb jne jae sbb mov sti add rex.WXB rex.RXB push loope mov sar jb and int3 (bad) pop icebp (bad) jno rex.WRB clc sub mov adc mov cli mov (bad) (bad) rex.RB rex.WRXB scas add jb rex.WRX callq roll pop fwait icebp loop xchg (bad) jns xchg (bad) adc and test mov pslld jmp fistpll cmp pop and adc lret callq sarl push add (bad) and pop sbb movslq out rorb mov rex.RX add xor xor rex.WX and icebp movslq or cmp fcomi and std cmp (bad) ja sbb fild fnstsw (bad) (bad) rex.X rex.WRB add pop notb icebp and (bad) or rex.RB pop shr sbb and and jrcxz repnz sbb and movsb (bad) insl hlt and jo rex.B jns popfq sahf sar jae addr32 (bad) rorb adc cmp lret outsb nop test (bad) loop enterq shll rex.W retq lock out sub hlt movb js jb rex.R or and mov and sub lods push cli adc xor (bad) mov rex xchg sarl leaveq rex.WRB loop cmp sbb movabs sti movabs (bad) lea lods (bad) idivl sbb retq jns cmp (bad) (bad) icebp imul rex.RB lret xchg (bad) (bad) (bad) int fs push std push fistp ficom (bad) retq mov retq sbb jmp rcrl sub movsb (bad) mov std pop imul stos mov insl nop movabs test push lret lock fstpt in rex.XB repnz xchg (bad) cltd jmp and shll push pop int shrl movsb scas fldt xchg (bad) fdiv mov stc (bad) xor pop callq (bad) fstl push imul rex.XB push (bad) (bad) cmp and rex.WRXB jno stos (bad) testb gs enterq pop add sub retq pop mov rex.X or fstl rex.WR fs (bad) test adc adc (bad) push (bad) cmpsb pushfq pop jrcxz xchg or pushq or pop (bad) roll sbb sbb (bad) repz in (bad) jb rex.WRB (bad) jo jnp or (bad) xchg (bad) and add push cmp hlt (bad) repz stc rex.R add rex.X retq lea sub out add (bad) out xchg lret push mov push loope rex.W (bad) lret (bad) add xor or xor cli sub adc adc out inc fwait (bad) jmp add shrl out (bad) or (bad) jg movabs and psllq sub rex.RX sub fmul out enterq movabs adc (bad) sub push enterq popfq mov xchg (bad) or (bad) movsl shrl rex.WRB cmp adc jrcxz test rex.WX sbb xchg imul add mov nop add movl lea cmp push shll clc mov adc jns jp mov cmp xchg movabs and (bad) int xor sbb stos pop gs xor mov stc and insl mov pop fs repnz mov (bad) pushfq retq (bad) (bad) shll and sbb lret mov adc nop (bad) add roll je mov rol adc rex.WB jp pushfq stc cmpsb repnz rex.WRB loopne repnz mov (bad) scas pop pop rol fwait xlat in mov sbb push cld rex.WX stos mov out sbb pop sbbl rol lret testl loop sub lret (bad) jmp shrl repnz (bad) fldenv pop ss out xchg je add sub movsl rol pmullw xchg jbe cmp sub (bad) add mov shll sbb in rex.WX adc out add int xor std rol (bad) mov stc data16 iret icebp pop mov jns shrb (bad) mov hlt jrcxz jns stc push rex.RB (bad) mov pop pop cld (bad) lea sub gs (bad) rcll adc rex.WX (bad) std (bad) pushq (bad) pushq hlt xchg rcrl jmp mov pop sub movabs adc (bad) (bad) lret (bad) add jge scas roll shrl xchg (bad) fstpt ffreep sahf or test movlps add xchg (bad) and sbb (bad) out adc sahf sbb (bad) add (bad) out lock xor rex.WX fcoml (bad) mov pop add rex.R (bad) adc icebp pushq scas (bad) rex.XB std retq js jae rcr pop repz cmp add xchg fstl int (bad) movabs fbstp sub rex.W rex.WRB (bad) rex.RX out and pop rex.XB fwait cli mov (bad) push movabs rorl and movabs rex.RB rex.WRXB mov je adc (bad) mov mov push or jae rex.R ds adc mov (bad) or retq nop jno rex.WB faddl cmp mov xor and mov mov cmp (bad) jne mov out loop mov mov movabs in fist (bad) pop cwtl enterq jno jb shrl retq or pop jo rex.WRXB cltd fisttpll and andl fneni(8087 or (bad) fidivrl xchg add adc out xor cmp es mov add pushfq ds mov lret rex.WB cwtl lret sarl lock out jl lret rex je jrcxz rex.WX xchg cld sub imul add add test sahf cmp xor add rex.WRXB sbb fs xlat xor xchg pushfq rex.X xchg (bad) in ljmp movabs and in fwait pop add rorl jg jrcxz rex.RXB cmp pop movb insl sahf movabs callq (bad) mov adc (bad) sbb xchg add cltd movb imul sub test sbb (bad) cmc add pop pop xor jp ss (bad) mov lods shrb frstor enterq rclb push and rcll stc sbb sarl adc (bad) cmpsl add int3 sbbb pop (bad) push stos sar xchg roll movabs sub (bad) mov (bad) test movabs adc add sbb or add push sti mov xchg adc xchg popfq shll cs xor scas shll enterq fsts mov mov sbb add cmp and retq stos (bad) ds add lods push add scas insb sarl cmp xor adc pop (bad) pop push and add (bad) mov loopne rex.X iret fcomi xchg mov pop pushq cmp cwtl mov push shrl movslq (bad) sub ja push pop (bad) rcrl sub (bad) jno mov loop in pop mov push jo jno movabs jmp mov (bad) cmpsl (bad) xchg pushfq xchg stos jp sub rorl repz xchg xchg mov mov (bad) cltd lret push add mov xchg in leaveq ds or cmpl iret or xchg xchg pushfq lods add out pop rex.WX std (bad) xchg repnz xor push fistpll pop (bad) in rex.RX lret push movabs es shr fist jne sub jo imul roll rcl mov rcr (bad) xor xor cmp shll pop mov cmpsl rolb mov sarl jl (bad) sti (bad) adc xor (bad) mov imul test int3 outsl jns mov lea (bad) insb and xchg add fsubs mov lods rorl inc shrb outsl mov lahf pop ss lock sarb (bad) movabs retq jne rorl cmc cmp je push movb or outsl movabs (bad) ficom retq (bad) outsb fsubs sbb gs and and (bad) jp sarl rol xor (bad) jo rex.WRX sub and rex.XB xchg rol (bad) in and rex.WB xchg out leaveq and (bad) (bad) rex.RXB in or fidivl enterq lea rex.R xor push mov rex.WRXB xor ds push loope leaveq callq adc mov movabs or pushfq mov cmpsl bnd fidivl (bad) lods jg test jge push rex.RX mov fnop imul (bad) callq out mov jo sbb out jnp shl retq (bad) pushfq cmp mov push idivl sbb mov adc (bad) rex.W outsb adc add (bad) rex.XB mov mov sbbl (bad) mov rex.RXB mov mov movabs (bad) push mov out loop cmpsl (bad) (bad) clc xchg rex.RXB mov add fsub push (bad) jp xchg insl cmpsl jge jno fdivrl repz rorb push js fs std xchg rex.WRX cmpb (bad) ficomp icebp sarb mov leaveq rex.WRXB sub xchg outsl (bad) repz loope rex.XB xchg repz (bad) retq sbb movl jrcxz xor sub rex.WRB cwtl test sbb add retq rex.WRB orq cs loope iret (bad) jae push (bad) add (bad) mov sbb (bad) adcl je (bad) jno lock sbb rclb loop and (bad) rex.XB pop (bad) jns xchg mov xchg cld (bad) mov movabs cmp xchg jns mov (bad) jrcxz in cli mov out sar icebp sbb mov cmpsl and jg sub xor xor (bad) retq xlat pop ffree or or sarl xor cwtl sub sub data16 cmpsl rex.R and fdivr cltd mov xchg mov shlb enterq fisubr fdivr movabs xchg xor mov imul rex.B mov rex.X (bad) std in (bad) (bad) (bad) fidivrl rex.XB rex.X jmp (bad) sahf imul sbb mov fwait jae callq and rex.RB xor cli (bad) jns jno gs and xchg out mov (bad) sub imull out (bad) imul leaveq rex.RX pushfq rex.WR out cmpsb nop orl imul add scas je xor ja fmulp and and ss retq rex.RX xor sub (bad) movslq rex.WR retq enterq (bad) (bad) (bad) lods movsl leaveq rex.R movslq or add (bad) scas rex.B jbe mov or add rex.WXB fst sahf je int xor add movabs xchg sub xor (bad) mov (bad) mov pop (bad) sub rex.WRXB subl ficom ja cltd sub mov (bad) mov sbb ficom (bad) rex.WR add xlat test outsl repnz cld jne xor jo data16 out leaveq adc and mov add iret clc out fsincos jo mov subl mov mov repz pushfq rex.RX stos (bad) (bad) fidivl sub mov rex.RB cmp mov xchg fwait mov js icebp (bad) lahf rex.XB mov sub (bad) jmp ds loopne cmp sub add xacquire rex.R pop cmpsb shrl (bad) jrcxz cwtl pop pop test or mov fmulp js (bad) fistpl mov push hlt stc movabs gs repz mov (bad) sub scas xor pushfq (bad) mov rex.RX rex.WX jge test (bad) div cltd test rex.RB gs cmc sub imul lock mov rex.RB mov mov jmpq popfq in add sbb rol sub callq push or (bad) hlt (bad) fcoml and stc out xor lahf subl cmpsl test in rex.R (bad) lret in mov mov or rex sbb movslq cli (bad) rex.WRXB pushfq xchg add rex.WRB fistpl jp mov shrb cmp ja rex.WXB push rex.RX loopne jmpq shl mov adc enterq xor data16 lock cmp push or push (bad) cmp movabs es rex.WX rex.XB ja retq add fmul movabs (bad) or push rolb fsub cmpsb scas loope xchg (bad) sbbl sub and sub sahf sbb and cmp jl out insl or mov jo es rcll jmpq mov jg sarl xor xchg pop rex.W lods xor jmp (bad) je (bad) (bad) (bad) leaveq clc (bad) sub and rex.R in test sarl cmp rex.WRX imul cmc repz repnz rex.WX mov (bad) test retq out (bad) add rex.WRXB and out (bad) sub (bad) enterq push cmp repnz mov sbb in xchg rex.WR rol jnp rex.XB std imul jo rcll adc shr cld pop mov clc nop sub stc cmp shll (bad) hlt loopne mov (bad) cld cmp and lock sub adc sti add (bad) retq test lods add cmpsl rex.WR addr32 (bad) fwait add (bad) mov mov shl rex.R jno or nop xchg cmpsb in rcrl pop shlb pushfq sbb fs movb movabs sub iret xchg pushq sub fmulp pop add loop out xchg lret xor loope jnp (bad) (bad) sub jne jmpq pop (bad) mov jrcxz mov pushq push mov adc stc insb fdivl jl rcrl sub cmp rcl cmp rex.WB stos xlat rex.XB scas sub rcr pushq add sbb mov cmp jne adc and mov addr32 frstor lret mov je or jl vmovdqa32 rorl rex.RX movabs (bad) in cmp callq push rclb in lods mov pushq cs mov (bad) (bad) mov movabs jp jno andb movabs adc rorl stos (bad) movabs sahf (bad) pushq rcrl xchg mov push xor sbb and mov cmp rex.X shrl (bad) jo mov (bad) xor xor movslq outsl (bad) pop pop stc mov mov pop rorb jae rex.RXB iret mov jnp shrl rex.W or mov callq shrl jge cli in pop repnz lret (bad) test mov jbe pop lods std fcoml es gs rex.RXB cmc xchg (bad) adc fstps (bad) jp push movsl repz cmpsb movb rex.R pushq movabs (bad) push adc (bad) jno iret rex.XB xor sbb pop push sbb and fldl2t (bad) outsb movabs adc enterq retq sarl xor insl add test pop sarb out pop shll in fstpl xor ja adc rcll (bad) (bad) je sarl rex.WXB rorw or fiadd pop icebp rcll pop jmpq outsb and push sbb (bad) fdiv fildl cli movabs pop rex.B cqto adc adc movabs cld (bad) flds (bad) adc scas mov lahf (bad) xor out (bad) data16 movabs mov sbbb rex.WB roll and sbb mov mov rex.WR rex.RB mov and rol (bad) nop movabs (bad) xor test jno stos fcmovnb cmp pop pop sbb (bad) lock rex.W mov cli xchg xchg and xchg shll sub rcrl std jae stc stos and leaveq (bad) loopne test cmp xor iret rex.RXB xchg repz rex.WX pop movabs enterq mov push xor in pushq push cmp or (bad) shll jne jg lret vmovupd (bad) movabs mov loop adc (bad) rex (bad) fistpl data16 (bad) push jmp xchg lret rex.WX mov sarl rex.WB sub iret icebp adc cli in jge rex.RB push ja cmpsb sahf lock sbb callq mov shll stos movlps ror out xchg mov xchg jge pushq repz pop test movb lret jne (bad) add pop lret rex.RX fdivrs mov (bad) in cwtl cmp xchg push cmp cli sahf rex.RX or (bad) mov outsb fildll rex.X mov ja mov (bad) leaveq sbb push (bad) stos fstps shll ficom icebp repnz push (bad) and adc sahf or and and fistp popfq fs fsts (bad) push rex.WR or (bad) in cwtl imul rex.WX rex.WB mov callq (bad) cmp mov repz mov pop or pop pop test xlat movsl adcl test cs roll (bad) fwait repnz (bad) and jnp (bad) iret (bad) xor jns mul (bad) jp cli sbb hlt pop add mov lret stc and retq (bad) add sbb mov rex.WR fdivrs add (bad) icebp and callq cmpsl mov rolb sarb iret jp rex.B rex es out lret push (bad) xchg jmpq mov packsswb jnp (bad) sbb movabs rcr rex.WRXB movabs lea rex.RB rcrl imul xor shl callq cli push or jp xchg cmp (bad) rcl xor (bad) jns popfq fist (bad) sbb and xor popfq data16 icebp rcrl push (bad) cmp mov rorl and lea jbe rex.B lods stos adc outsl mov jrcxz sarl loope pop jg retq xor (bad) jle xchg rol jb loopne jno mov mov movabs adc push notb (bad) push add cld fsubl cli sub cmc out and xor push js scas shll nop xchg (bad) sbb int3 jnp cltd (bad) test (bad) in out fisttp fmull sub (bad) xchg movabs shrl (bad) fldt mov cmpsl jne leaveq adc jg push mov rex.R in shrl shll (bad) mov jle js jno cmp shrl int or fiadd mov fbstp imul (bad) lahf mov repz (bad) movabs movslq test test pop (bad) movabs rex.XB in mov rex.WX in fimull mov divl jno rex.WRX data16 or roll int movabs imul sub jmp cmp mov push nop in shll lret jae sbb clc movsb jge mov in rex.WRB repz or xor lret sbb andl add stos rex.WX (bad) sti mov jle xchg cmp pop lret (bad) mov mov (bad) sbb roll cmp xchg sbb shr movslq xor sti jne outsb add (bad) decl sbb jmpq (bad) mov scas cmpsb (bad) xchg repnz and sub popfq nop (bad) lea (bad) jae jns cmp mov (bad) in icebp rex.R cmpb (bad) sub mov mov cmp adc jbe,pt rol mov (bad) shl mov cmp sub adc fidiv callq (bad) cmp rorl cwtl adc jns (bad) (bad) retq xchg fnstenv shll or sub add popfq (bad) cmp sub xchg (bad) pop rex.WRXB ds inc sarl (bad) out and rex.R fwait mov stos ror lods jbe or (bad) es (bad) ror flds pop out (bad) int xchg enterq ss rex.RXB (bad) in repnz add stos test adc imul fstpt jmp and sbb movslq mov mov add (bad) add shl sub rex.B loope lea pushq push popfq stc stos repnz pushfq (bad) add lahf in lea stos mov rex.WRXB sub rex.B retq pushfq pop sarl pop iret fdivl xchg rex.WB rex.RX int xor push mov (bad) shrl push mov jbe push rex rex.WXB rex.XB (bad) fstpl sahf mov rex.RX repnz jnp rex.WRXB xchg (bad) mov pop (bad) lock adc pop xchg iret mov and movabs adc jmp (bad) test or cmpsl add sub (bad) mov (bad) int3 sub xchg (bad) js adc (bad) lcall add loopne xchg vcmppd ds push cli iret mov rex.RB add cmp (bad) scas adc mov rorl lock (bad) xor xchg (bad) or mov mov xchg xchg push shr cmp sarl pushq rol add xor leaveq movslq xchg add and add jge imul adcl xor stos fptan rex.WB and mov add sub (bad) xchg (bad) mov (bad) add movabs xchg stc or (bad) and (bad) cli rex.RB mov sub jrcxz add es and (bad) push sub xchg fcomip add test lret add imul pop fadd fmuls jno (bad) shrl sub lea idiv and jg mov (bad) (bad) rcr setne sbb fcmovb lret pop orl lret cmp pushq or fnstenv outsb add cli pop stc (bad) ss (bad) (bad) mov not jno lret (bad) movabs sbb pop sahf (bad) mov pop mov rol jns icebp out roll (bad) adc rex.B sbb test icebp imul (bad) or stc push test and xor add loop push nop rex.WX add lock out (bad) rex.WB rex.X insl (bad) xchg int3 push movslq callq pop lahf xor cmp (bad) mov sub rex.WB std roll shll iret xchg fdivrs rex.B scas (bad) rex.WXB rorl xor fldcw xchg movslq xchg cltd rex.WR cltd pop mov (bad) push (bad) or mov push add rex.WXB rol adc mov rorl out rex.RXB clc and xchg std mov rcll rex.RXB jge add xchg (bad) rex.W cmp and jnp sub mov and (bad) (bad) and movsb iret sub sub (bad) sbb lods js retq icebp rex.WRXB sbb popfq iret movabs sub rex.WX and pushq mov cmp iret int3 xor mov adc rex.WR sbb movabs (bad) mov mov push xchg xlat (bad) enterq and rex.B sbb data16 loopne (bad) mov movslq jns ffreep add jbe mov lods iret or sbb in (bad) pushq (bad) je rol addr32 stos (bad) cmp data16 sub and scas out retq jp ds jno rex.RB jns jrcxz sub in loope (bad) add test fdivs insl (bad) fsts js out repnz rex.WX cmp and ss add rex.R movabs int3 push iret (bad) je add adc adc cmp rex.XB mov add clc icebp mov or (bad) repnz mov rex.RXB mov out mull rex.WR jg lock vminss jge (bad) fisttp sahf (bad) (bad) (bad) divl rorb mov outsl pop loopne pop pop xchg clc or cmp test cs jl (bad) shrb pop (bad) mov or sub pop lret pop (bad) repnz rex.WB lock jmp pushfq (bad) (bad) sbb xchg sbb sub jno or ja mov addr32 mov fbld movabs jmp retq and enterq sbb cmp jo shll (bad) loope shrb cli add rex.WX jae test add icebp push mov lock dec fadd fcmovb in jo pop (bad) mov fldl add out xor jae mov xor sbb fild pop cmp idiv sbb fnsave sbb vunpckhps cmc add outsl in (bad) jle repnz push lret mov rex.B or stc mov sbb sahf imul sbb xchg (bad) mov sbb sub (bad) rex.RX sti es scas sbb jns cwtl push neg rcrl (bad) add lods rex.R lods or test sub rex.WXB xchg fsubrl rex.RB rex.X (bad) cmp cmp fs add rex.WRB xchg (bad) (bad) cmp (bad) sbb pop stos rorl out jbe jne iret (bad) outsb cli (bad) adc xchg mov cmp adc test cmpsl (bad) sbb (bad) movabs scas mov and repnz lahf sub push (bad) (bad) in or (bad) cmp pop movabs scas stos mov push add lret (bad) retq jbe (bad) decl rex.XB or sbbl fadd fdivr out xchg fstps insl sbb gs or rcrl rex.X xchg mov or in adc lea sahf lret fistpl movabs mov in test cmc rex.WRXB add mov (bad) lret cltd sub add pushfq (bad) rex.R cs xchg hlt movabs pop add cmpl add int push fisttp xor test sarl icebp movabs pushq jne or shrl (bad) test insl cmc test shrl rex.WRX xchg sbb (bad) lods fldl (bad) rclb add rcrl movsl (bad) lret jnp xlat shll xor xchg testb push sarl sub cmpsl xchg fwait (bad) cwtl xorb mov gs cmp js shl lods xor sarl leaveq insl pop sub (bad) out mov xchg mov mov (bad) ja sahf pushq rex.RXB in test lahf leaveq xor mov mov fisubrl or jrcxz outsl shlb or movsl faddp jg (bad) adc jrcxz test xchg and or imul in (bad) pop lret jbe cmp jo fstpl cmp add repz (bad) (bad) jae ss xchg cmp and lret add mov repz and pop cli jbe (bad) enterq out adc int xor lock loop cli xchg frstor rex.WRXB lock xor (bad) (bad) jl adc hlt addr32 add (bad) sarl adc and sbb lret push mov mov (bad) pop rcl sub (bad) (bad) xchg mov fnsave add adc (bad) (bad) icebp lret mov (bad) mov insl add mov cmp rex.B sbb mov jl int mov add push (bad) cmp add rex.WXB movsb (bad) scas fsubrs movabs sahf movb (bad) sbb adc (bad) rex.WB ss add push iret adc jmpq mov rex.WX add movabs fnop (bad) pop jnp out xor fwait jmpq jmp and rcr rex.RXB in push test xchg loope sub pop shll push shrl mov cmpsl push (bad) sbb sarl (bad) mov push rolb je fcoml pop (bad) cmp push loop jnp callq push cmpsl jne (bad) movslq movabs jb adc jmpq xor nop loopne xor fldt xchg lret (bad) rex.B loope (bad) scas (bad) lahf in subb rex.WR cwtl int3 adc shl push jne (bad) rex.RXB mov shr rex.WRXB cmp in adc jno,pt cmpsl mov loope sarl insb rex shll mov imul pop hlt or std add mov sbb test rex.R xor mov ffreep (bad) sbb rcll (bad) out cmp (bad) pop adc stc movabs (bad) cld mov mov lret movabs stos fidiv test cmc and add jnp xchg sar iret mov int3 (bad) add scas outsb mov rex.B imul pop or icebp seto shll js ror or movabs rex.WX mov sbb ds repnz (bad) out movabs jno (bad) and test sbb and or ja rex.XB rcl pop jmp movabs mov nop (bad) ror movl in or xor iret in cmpsl sbbb fadd test rex.B loope int3 fcoml mov sbb rcrl mov rex.WRB rol out mov mov lods insl sahf rex.B fs mov and cmc add lret (bad) pop (bad) mov sub push enterq test push fistl iret sub lea lret xchg and push jo (bad) (bad) fsubrp je cwtl shl retq rex.WRXB add repnz jo (bad) mov push mov rex.R xor mov jbe rex.WRX rex.RB xchg or loopne (bad) fwait sbb and lods sahf push lock xchg add cmp rex.WR rex.WRXB (bad) add rcll sbb mov pushfq (bad) jmp (bad) xor jo outsb mov test mov or (bad) movslq mov fildll (bad) rcl sarl (bad) int3 sub lock rex.WB rex.R shrb xchg or xor sti mov (bad) add cmpsb movabs sub testl shll rex.RX jae,pt rex.WR jmp xor cld lret lahf ficoml movabs fmuls sahf or cltd (bad) callq test ror leaveq add movabs (bad) int3 imul push loopne stos loope (bad) mov callq ficompl xchg jne (bad) xor (bad) js test scas pop sub sub pushfq shr repz or xor jg push mov mov (bad) rcll rex.WX (bad) lock push cmpsb incb repz cltd (bad) jmp in shr (bad) mov add (bad) push rex.R adc or lods rex.WRB and (bad) xchg movabs pop cld rex.X rex.B mov idivl je lods movabs rex.B pushq rex.WXB shl shrl fstl or insl sbb sub insb vshufpd retq rex.X xlat in cmpl mov loope xchg rex.WB add jle mov cli outsl shll sub (bad) pushq rex.WX add out (bad) (bad) xlat shlb sbb xor sbb add (bad) std (bad) jle xor pop sbb pop and adc mov inc cli insb (bad) sub adc (bad) lock jns int imul rcll scas or (bad) insb rex.WB fadd popfq mov (bad) mov testb int3 add (bad) fstl and (bad) fbld rex.W sub fsubrs fstpl jg (bad) fild es out jle pop sub mov enterq (bad) rol sbbl cmc cmpl sbb (bad) or pop movb mov or andl and pop movsl loop push testb test test nop or xor push clc fadd pop repz adc pop int3 adc xchg enterq fbld pop sub mov ja (bad) (bad) mov adc or (bad) and lahf test (bad) sbb xor std iret imul lret nop test rex.WB lock add mov movabs fldcw or rex.WRX mov rol in add movabs mov xor rex.XB test leaveq sbb xor fistp add rex.WR xchg in add mov scas jle pushq fs push cmpsl stc add xchg sbb pop retq and stos (bad) mov fwait mov fs (bad) lock cmpsl leaveq out xor rcrb cmp mov jbe cmpsl out cs int mov rex.R mov lar push data16 rex.X (bad) (bad) or leaveq vaddsubpd shrb mov (bad) (bad) hlt cli loope fdivr (bad) rex.WXB rex.WRB rex.WRX pop divl (bad) add xor rex.RB loopne movsl (bad) sbb popfq mov push jp imul mov inc (bad) roll (bad) (bad) retq pop push icebp and rcl ror jo in xchg int3 xor jg and iret retq rex.WR push xor and in xchg push xchg (bad) retq cld sub orl jg rex.RXB (bad) cwtl mov add xchg callq sahf mov (bad) movsb xorb nop add lods test adc mov nop in (bad) (bad) cmpsb (bad) cwtl shl (bad) mov shll insl adc jp fs cs rcrl xorl lret (bad) repnz or jbe int rex.W movabs xchg (bad) sub mov mov (bad) sbb cwtl (bad) sarl push std vmovss movslq ja (bad) loope stc mov mov pushfq jno (bad) js cld lahf cltd pushfq rex.R out in iret mov and lock (bad) sarl (bad) (bad) cmp rcll stos cmc shll fdivr push lods fiaddl or xchg (bad) cmp movabs pop rex.RXB sub rex.RB scas add es rcr loope sbb mov mov loopne jmp (bad) (bad) (bad) rorl rex.WXB (bad) ja xlat push stc lea (bad) (bad) jg cmp imul and mov sbb (bad) clc (bad) mov pushq out int lock iret loope mov (bad) popfq mov (bad) mov cli pushfq ud2 adc mov movabs xchg mov fistl in sub in cmpsl (bad) test addr32 jo sarb jmpq subl add fldenv enterq jge (bad) leaveq (bad) cmpb (bad) fwait imul fnsave test xchg (bad) out xor test nop mov jb pop adc scas or enterq xchg rex.WRX xchg outsb jge rex.X pop jne mov (bad) stc movsl shll and or movl jo mov jrcxz out in je js jge (bad) (bad) (bad) cli pop testl pop es lods imul leaveq push cld (bad) pop bnd lods rex.RX rex.WRB (bad) ljmp sbb or jg xor rcrl stos sar sbb adc add rex.RXB movabs cmpsl icebp (bad) addl xchg out xor rcll ficompl lea or rex.XB (bad) rcrl or (bad) lahf cmp rex.WRB mov sarl (bad) jmpq (bad) callq pop jle rcrl std (bad) xor movabs push mov (bad) xchg cmpsl rex.X sbb rex.B pop sub xchg and insb xor push mov shrl jge fwait cld rex.WRB sti (bad) (bad) jb xchg (bad) testb sarl sub shr jrcxz sbb pop (bad) testl lock (bad) repz iret repz iret sub xorl mov jrcxz (bad) out (bad) push mov rex.W stos int pop jno (bad) int int (bad) out adc sub and rorb fwait adc mov mov nop fsub int3 xchg cmp adc stos add lock stos outsl jns jrcxz pushq or (bad) sub (bad) adc pushfq in stos shrl jns sub sbb mov insl clc jge cmp movabs pop and out movabs adc (bad) test rex.WRB cs adc js jae cli pop test mov (bad) sbb lret (bad) or cmpsb sahf (bad) and icebp je fisttp jno out scas fsubrs xor rex.WRX push stc scas insl mov xor jno add push int (bad) clc pop in addl mov push sub retq sub fdiv mov mov cmpsl retq xor or imul imul out movabs faddp repz adc (bad) xchg cmp test mov and rex.B (bad) xchg imul std hlt loopne leaveq popfq hlt repnz or clc mov (bad) repz out retq jle mov (bad) add (bad) and mov test outsb jno test push rex.WX mov lods mov jnp rex.R pop shll stos add (bad) (bad) js cmpsb (bad) (bad) xchg lret (bad) addr32 shll rex.X mov (bad) ja mov movabs or andl out pushq iret in mov cli sti (bad) in adc add rorw xor sarl mov unpckhps in sbb cmp scas xchg icebp frstor jg xor insl pushq cwtl orl add xor rex.WB (bad) hlt xchg jns ds (bad) popfq or rex.RXB addr32 adc (bad) movabs jbe xor insl loopne stos cld roll mov xor int3 push retq adc test xor push lcall (bad) add (bad) sub rex.WX mov mov fdivl (bad) ss sarl movabs lahf rcl mov sar xlat icebp movsl mov or mov in fisttpll je,pn fdivrs add sbb iret test cltd sbb add movabs mov pop insl push fildll rorl cmp xlat insb xchg rex.X rex.R rex.WRXB xor jns xor mov pop or movsl leaveq outsl test rex.X or xchg rex.WXB lret fwait stos and mov sbb adc xlat cltd outsb rol mov (bad) add gs pop rcr (bad) scas sub retq lret lret jne cli mov (bad) rex.WR out nop cwtl cmc adc jp shll loop pushq outsl sbb jb,pn (bad) rex.B cmovge (bad) ss or jge nop retq (bad) rex.RX rex mov sub fwait pushq xor push rcl sub rcr (bad) xchg adc mov (bad) mov fldcw xor (bad) sar mov lret ss addl movabs xor shr (bad) add sub mov roll jge iret hlt outsl iret or push ss jle xchg or (bad) cmp xchg rex.WR (bad) mov rorl xchg rex.XB (bad) cmp out movsl iret or mov loopne xchg scas scas int rex (bad) (bad) (bad) jle roll rex.XB jns jmpq jg movsl test xchg xchg xchg scas jp push push mov add mov rorl jae jmpq pop movsb int or nop std and sbb imul fxch in icebp rex.WR jno insl roll or (bad) leaveq sbb jg sahf rex.B cmp add sbb pop adc lods popfq cmpsb mov std incb mov rex.W (bad) (bad) mov mov sbb rex.X jle cmp shll mov mov xor rex.WXB rex.RXB and and (bad) imul outsb (bad) (bad) xor rex.WRXB rorl fwait (bad) stos out push (bad) rcrl fnop loop rex.XB addl xchg sarl sbb mov rex.WX rex.B push cmp adc adc jg xor mov ds enterq jno in and jp xor rex.WR movslq mov (bad) (bad) stc xchg (bad) jns jp (bad) movsb lret icebp xchg cmp inc cltd adc xchg sbb cwtl stc leaveq hlt pop xchg loope (bad) xchg (bad) push (bad) cltd mov (bad) je (bad) test int movabs movabs sub pop fwait rcl imul mov jp pop rol stc (bad) cmp rorl ja xchg sbb scas sarl cmpsb mov push add retq lret (bad) sar mov and sub pop cwtl shl mov (bad) insl movq or loopne shrl (bad) clc rex.WRX push test cli mov add dec push rex.WRXB pushfq sbb clc mov test movsb sahf (bad) mov pop xchg out movabs pop sub adc shll (bad) jl mov enterq xor stos movabs rex.B movabs imul mov shrl rex.RB rorl fmuls out callq gs shll mov out mov push (bad) leaveq sar (bad) sub mov loope rol int shrl add sub rcrb add mov and pop adc mov pushfq out repnz loop mov movsb sarl movabs sbb push (bad) (bad) xor mov mov movsb xlat (bad) rcrl xchg mov and rex.WR lock pushq (bad) movabs (bad) fcoml xlat sub (bad) xchg mov sbb cld roll cmp push and cmp cmp addr32 (bad) jbe repnz mov xchg adc rol out mov rex.X sarl sub test (bad) xchg mov pop mov repnz mov rex.B xchg movsb rorl scas fisubl xor xor mov (bad) rex.B outsb mov cmp repz add (bad) mov stc xlat clc pop (bad) rol in (bad) jmpq sarl shrq jnp or and mov mov cmp lahf rex.XB mov sbb xchg pop (bad) (bad) xor (bad) (bad) (bad) cmp push std (bad) jno jno rcl adc sub or and insl lahf pop cltd ffreep xchg pop loopne cmpsb rex.B xchg jnp adc insl retq cmp or sub mov rex.WB rex.B imul mov out (bad) jo data16 (bad) test lock int (bad) cld rcrl add vfnmadd213ps (bad) mov (bad) divb and adc cmpsl mov (bad) (bad) push int3 jp cmp rex.WRX add mov pop test jg movd mov shr leaveq jmpq rex.R fs movabs mov rex.B add ror pushfq notb jno push enterq push (bad) fldt sbb (bad) jnp (bad) xchg mov imul mov (bad) and xchg gs pushq or rex.RX mov jge test adc cmp or rcrl rex.WR sub (bad) stos or sbb lcall sub jg mov pop fwait push and lret iret jmpq popq pxor xchg xor rorb or callq fidivl movl mov lods fnsave std iret (bad) sub mov rex.B add jae retq xchg or add rex.WRXB fcmovnb scas enterq mov xor cli sbb (bad) jno hlt (bad) fucomi ss sbb (bad) rex.RXB leaveq stos ljmp (bad) in mov rex.RX pop (bad) rclb out fistp xchg imul cmp cmpsb cwtl (bad) rex.WB rex.B movslq mov rcl movabs and vpaddb push mov cli rex.X sub (bad) or std movslq gs sbb out jp pop cmpsl rol cmp fildll flds roll lahf jp push sarl jge or fidivl xchg pop pushq js (bad) insb rol in (bad) sahf xor push movabs fidivr (bad) popfq jmpq xlat es (bad) (bad) (bad) jmp adc int3 rex.WXB mov (bad) movabs loopne xor rex.XB (bad) jae cmpsl (bad) lods int or pushfq fistpll rorl jb pop rex.X rex.WR (bad) push cmp xsha1 cmpsb rex.WRX add sub jrcxz (bad) mov sti sub test add sbb mov xor rex.X data16 mov neg mov xor xor jg idivl rex.WR gs xchg or scas (bad) in or xchg sbb rex.RB rex sub (bad) or jl js (bad) jns callq fcmovnbe movabs rex.WRB add (bad) mov jbe push (bad) rcll sub pop xor (bad) jmpq out fildl movsl (bad) mov cmp in xor add (bad) jg rcll insb xorb cmpsb mov std mov xlat shrl and fadds lahf js roll or data16 loope mov jmpq lret xor and rex.B lods (bad) sub xor (bad) fidivl rex.WB fisttp fisttpl jge jg ja cmp xor lods xor and (bad) (bad) (bad) movabs gs (bad) mov add (bad) fdivrs add xchg fwait (bad) lret outsb pop pushfq or stc sub and lea iret or and (bad) fsts scas mov mov (bad) jo mov or scas or xorl (bad) repz mov (bad) adc std pand (bad) mov mov int3 (bad) std or rex.B and rcll int rorl hlt test idivl movabs (bad) mov or mov push lret cmpsl mov in hlt cmp (bad) imul and sub cmp sarb or roll push sbb fs (bad) fld lret fucomp lock sbb outsl xor movabs (bad) (bad) (bad) push out retq lods jl jbe rcll cli insl shr pushfq rex.RB (bad) rorl loop (bad) in rex.WRB add pop add rex.B lret (bad) lret and adc (bad) (bad) flds xor lods sbb lock xchg rcrl rex.WXB mov in (bad) mov add mov shlb ror push (bad) pushq popfq push lods out jnp rex.RB (bad) pop add rex.RB rex.WXB mov xchg retq and int fisttp insl out lret pop add jl (bad) cmp fcompl or pushfq insl xor sbb and fnstenv xchg (bad) push ds out shrl outsb jl in mov (bad) loop sub sar mov or (bad) sahf sub sti or mov jrcxz (bad) pushq shr xchg adc rclb mov rex.WRB jne pop (bad) add adc sbb sarl jnp (bad) or loope jp out (bad) or fisubl test movsl pop mov not (bad) and mov adc mov add int3 roll (bad) (bad) enterq sarl fadds lahf (bad) pop jmp shrl hlt or imul jbe (bad) movsb cmc rcl shl pop fwait stc sub (bad) data16 shrl xorl (bad) out cmc fsts mov sbb mov sbb (bad) (bad) int sub fstl in test push rex.WB lock sarl pop push xchg imull (bad) vaddss retq mov or adc add leaveq (bad) ss pushfq imul sbb data16 xchg (bad) mov xlat jbe pushfq add roll rol mov insl push rex.RB adc rex.WR (bad) add mov add xor mov pop rex.X rol (bad) cmc imul (bad) out sarl xchg mov xchg push (bad) sbb jmp xlat movslq and jmp repnz cltd jg retq (bad) sbb mov mov fcoms imul test fistpl fmuls rex.B fsts sub mov (bad) xchg sahf ja jmpq adc fsubrs (bad) mov cld outsb (bad) test sahf loope rol retq sbb nop xchg std pushfq shll fs xchg loope shl (bad) or mov mov int sub xor and mov add movabs pop (bad) rcl adc sub pushq nop stos or jrcxz and (bad) cmp divl push (bad) jae int3 and mov mov pop sbb iret mov retq mov imul (bad) jae callq repnz rex.WRB rex.X mov js push jl push jle cmp or cmp (bad) out jnp mov sarb (bad) retq cltd (bad) insb lret mov or lret retq repnz insl enterq (bad) icebp callq rex.WB mov out mov fwait jle pmullw insl out fist adc and cmpsb test test shlb cld movabs xchg adc rex.WB mov xor movsb (bad) fwait sub in xchg add xlat jnp or adc hlt jbe stc mulb fnsave jb cmp mov jns pushq cmp push xlat (bad) rex.WXB mov pop in jae sub (bad) lods and mov sbb (bad) int3 (bad) std push (bad) movabs icebp pop and movabs outsl push push repnz shll add std js (bad) or std rex.WX out outsb shrl jrcxz and jne rex.X xchg insl rex.B stos leaveq xor (bad) xor out je repnz rorl lret loope and shll jp cli mov xchg xor xrelease gs js rcll icebp jns or jno sub xchg mov xor and rex.WB cs in fs repnz (bad) (bad) xchg int xor add jbe xor sbb ds int sbb out push shlb movabs lods mov jg and enterq cltd lock or pop shrl js outsb rex lret adc mov add std in mov movslq stos int or adc push (bad) push lret cwtl mov sub out test (bad) push add jg jae lock movabs and fimul jbe jle add rex.WRX rex.X mov iretw loop add fwait xchg jno push and mov test rex.R sub (bad) roll (bad) or clc sub jnp jo and mov (bad) movabs xchg and leaveq push pop repnz mov int fisubrl ds cmpsl pop or rex.RX (bad) sar pop or movabs callq mov cmpl pop xor lea out adc adc xchg pop (bad) jge (bad) xchg fmulp add stc andl add sarb cmp xchg xor xchg rcll and movabs push mov (bad) out jno pop rorl rex.WRX gs lea callq xchg rex.X rex.WXB (bad) roll add lret or (bad) outsb cwtl roll clc test (bad) retq pop sub stc push jbe jmpq mov fxch adc int xchg lock pop and (bad) out cmc out rex.B or cmpsb (bad) pushfq rex.RB andl (bad) in xor sar pop and mov leaveq (bad) je lock (bad) out in mov rorl (bad) or mov ficomp clc movabs jrcxz leaveq mov fbld adc mov (bad) in pop and movslq lret pop pushq sarl movabs mov sbb sbb insb pop mov rex.WRB mov imul xchg (bad) mov movabs mov (bad) rex.X sbb int3 rex.WR rcr fdivrl in rex.WXB test ss vpsrlq mov jnp rex.B repnz xor out add and movabs sub mov movsb add cmpsb mov push (bad) jb fidivrl sub gs (bad) (bad) mov sahf mov (bad) cwtl jnp stc mov mov loope sarl enterq roll pop cli decb jb imul repz adc sub (bad) je xor jae repnz rcll rex.X push sub sarl mov xor jmpq mov mov (bad) fadd sub jmp clc movabs sbb add and rorl rex.R jae sti iret xor (bad) rex.RXB pushfq adc cs rex.WR insb and rex.RX repz (bad) adc (bad) pop rcll iret rcr xchg jge mov loope jmpq (bad) xchg (bad) jae cltd or cwtl test (bad) cli push xchg (bad) cmc sub fdivs movabs (bad) fpatan mov or adc fisttpl (bad) rcll add pcmpeqd pop imul repz and fldt rol (bad) push movabs mov movabs loope cmp pop mov repnz (bad) jrcxz (bad) out (bad) (bad) subb (bad) stos sub push or cmp movabs add (bad) mov je sbb sbb rex.WRX adc outsl and ror fs int3 dec rex.WRXB adc (bad) neg (bad) jne cmp pop cmp cltd (bad) jb cmp cmp and (bad) pushfq hlt pop or xor cli sub ja popfq outsl cwtl testl cltd stos movabs callq rex out icebp rex.XB je sub add cli (bad) (bad) loopne in sbb test cmp orl mov int bnd lods vpsubusw (bad) es enterq lret rex.W mov jmpq rex.WX cmp and fisttpll adc rex.RB adc add (bad) (bad) add shll adc cmp rcll in (bad) (bad) out cmpsl (bad) push pop fsts jp (bad) loopne stos mov or insb sti callq xchg (bad) repz subl pop rex (bad) rex.WRX (bad) jg (bad) (bad) (bad) insl ffreep and xchg add rol enterq jbe sarl fstl loop rex rex.RX (bad) mov incl in (bad) (bad) rorl jl jrcxz (bad) (bad) xlat ss adc movabs add xor insl (bad) in cmpsb shrl adc xchg cli (bad) pushfq or movabs rex.RXB rex.WXB lret xor movsl rex.X add lret or popq callq cwtl jle (bad) cld neg repz sub (bad) rcrb (bad) iret sti pop and popfq jg rex.B mov (bad) xchg xchg imull rex.B rex xchg ja sub (bad) rcrl iret test xchg stc roll jb pop stos rcrl sbb in rex.B movabs adc rcr test gs rorl in and lret mull nop pop cmp sbb je rex.WR jns mov or rex.RXB fsubs ja shl (bad) in cli insl lahf rex.WX or xor sub pop mov repnz fcompl es sbb pop jno lret stos ror repnz cli in (bad) fs xor (bad) movabs adc frstor int3 vaddss imul std addr32 cmpsb (bad) sbb xchg xchg loop insl xchg (bad) xor or enterq insl test xor cwtl xor repnz test mov fstps lret repnz adc mov or rorb rex.W (bad) adcl adc sbb (bad) (bad) pushfq and mov jae loope (bad) movabs test cltd rex.B rex.WX cltd movabs out cmp pop (bad) mov cltd sarb enterq mov (bad) sbb test xchg (bad) fsubl mov lahf rex.XB rex.WXB rex.R rex.W adcb fisubr rex sub insb pop vpunpckhwd and ja rex and in mov and pop rcll (bad) cmp sub mov stc (bad) and sub nop or and int3 icebp jp (bad) mov cmp ja xchg lret rex.WRX es jmp jno fdivrl out jns movsl adc fcomps mov enterq lods (bad) (bad) cld cli lock xchg mov or in or (bad) xchg mov or rex.WXB (bad) (bad) fbld lods jne sar jp out ja test xor fdivrs push add and enterq (bad) lods fnsave cli in mov cmc test cmp rex.WR rex.WR jne repz pop cs out add and gs std or lret xchg pop jns shr xor lods fildll or movsb mov sub imul xchg loopne icebp rex.W cmpsb xchg xchg add rex.WRX jnp pop int3 mov rex.RX repz imul xor cmp cmp (bad) add (bad) sbb retq movsb (bad) hlt outsl in mov (bad) (bad) (bad) cmc rex.WR fwait jbe cmp retq jnp xchg jle fadd cmp mov jns sub xchg loop mov js sbb lods fadds (bad) (bad) in adc jmpq stc lret mov js std int3 jmpq jae imul orl repz mov movslq movabs xchg sub fistp mov jl data16 rex.RB sub idivb (bad) mov (bad) mov (bad) or add rex.B int3 lahf rex.X fistpll push vmovd (bad) (bad) jno test push mov sub rex.RX rex.RX mov sbb fldt test jg hlt pop loop mov roll sbb out mov icebp cmpsl movabs scas fcmovu ror in jg out mov iret xor in (bad) add xchg xor std jle add and rcrl in (bad) pop push mov xor cmp add and repz push sarl jle imul push out rex.R stc clc lods sbb roll sbb add (bad) and es jmpq sar jns jno mov rcr jb in xchg movsl hlt outsb pushfq retq or movabs jmpq or fadd je rorl jno adc (bad) sub fwait jnp int3 nop xchg addr32 outsb (bad) cmp (bad) stos rex.B cmc mov sbb (bad) mov (bad) in push rorl (bad) pop mov shrb add mov and movabs jns and loope pop clc xchg (bad) mov fdivrs rex.WRX rex.WRB jno fcmovb mov pop xor leaveq (bad) sbb pop cli mov sbb (bad) std jnp icebp clc rcll (bad) jae enterq rcrl lret mov rcrl (bad) sbb (bad) ror stos xchg jne (bad) scas outsl sahf rex.B ss jge lret loope lret loope rex.RX mov cmpl retq xor pslld or je and ffree pushq and or xchg jrcxz pop jp or adc ja ficom (bad) mov lret pop xor movabs (bad) (bad) mov imul mov enterq outsl loope xchg or rex.X xor cli rol xor jno test cmp cmpsb rex.RB rol (bad) sbb or (bad) jrcxz mov push repz (bad) xchg rex.XB rex sbb mov (bad) mov xor retq hlt pop jmp add jmpq jle imul mov rex.R fwait (bad) adc (bad) repz jnp fistpll stos (bad) in cmp test rex.WRXB adc (bad) bnd add pop out xchg stos mov (bad) rex.RX lock repz insb and fwait lahf push pop shrl mov push roll push (bad) lock xor (bad) test rex.WX shr (bad) rex.RXB callq movslq jo (bad) jne test xadd repz mov or push shrq fldl (bad) rex.W mov movsl cld rorl cmp (bad) shrl mov (bad) jae sahf movabs rcrl push adc xor cmp mov cmp and rcll adc rex.B jne lock mov jbe cltd rcll jns pop cmp shll mov sbb sub (bad) int3 xchg (bad) fwait jle fsubrl test adc addb add jns cmpsb push clc repnz cs rex.R cli nop adc xchg imul mov mov sbbb hlt roll and (bad) and lret mov rcrl rex.R int test (bad) cmpsl pop movsb mov and repnz movsb or sbb sbb loopne push mov jp sub (bad) adc lret rex.XB sub sbb js cmpsb pushfq (bad) adc (bad) sahf sub (bad) inc and cmp cmp rol pop cmp adc adc (bad) mov rex.R scas push jnp pop rclb mov and adc flds repnz rex.XB scas hlt test iret or out loope adcl rex.B data16 rex es adc scas or push fcompl (bad) cmpsl mov mov iret rex.RX cmp leaveq movabs jge ja (bad) push mov shrl movabs rex.WX rol adc xchg insl (bad) retq xor cmp or scas fistl pushq insl mov pop xor xchg sub movsl rol out xchg rex.WRX hlt (bad) imul push (bad) mov movabs add enterq test pushq (bad) adc cmc pop pop mov cmp ss sbb fnsave (bad) xchg pushfq pop pop jbe int3 xchg je rcll callq add adc rex.WB gs (bad) (bad) pushq hlt rex.RX rcrl int mov (bad) sbb rex.WXB rex.WX rex.RXB test shll ffree (bad) mov movabs add sub add push movabs sti add sub cmp and adc roll (bad) mov and lods (bad) (bad) movslq fwait shll rex.WRB jrcxz (bad) xor jo icebp movabs jmpq (bad) scas sarl loop (bad) (bad) add jae test xchg roll sarb cmp insl jle stc adc xchg roll rol outsb cmp (bad) mov std jle mov add (bad) enterq rex.WRXB cmp rex.WXB (bad) jae lea stos adc add mov add iret sahf ljmp or mov mov lahf scas add addb in push stos jo (bad) mov (bad) pushfq in mov shrl stc movslq sbb cld pop sub adc jo xchg xor xchg test callq neg rex push pushq sbb jrcxz stos test (bad) test cmp mov testb test and jnp movabs stos add pushfq mov rex.R insb pop mov jmpq fisub or mov repz pop push add mov sub rol pop rex.WX rex.WB rex.WX (bad) xchg pop or lods sarl jae shl jge jno sbb rcrl (bad) test and cmp adc adc pop sar (bad) mov in lret jrcxz (bad) fs (bad) (bad) sarl rex repnz cltd add mov fdivl retq bnd add and leaveq xchg jl repz (bad) retq (bad) rex.WRXB pop (bad) (bad) jbe jmp cmp adc sub ds int adc test fucomip (bad) (bad) fidivrl and movabs (bad) add add cmp stos movabs xor popfq jno (bad) imulb add sub (bad) jmpq cmpsb jp mov callq enterq movabs add iret icebp cld sub xchg mov cmpl xlat sti mov mov or fs or (bad) out loope negb jg xchg stc cld hlt sbb jno mov mov popfq out (bad) fcmovnb mov add rex.WRB jno,pn enterq xor rex.B lret addr32 (bad) sub subb in add movslq add pop cmp cmc jne xchg sub rorl scas xchg or jb push (bad) sahf fisubl fwait sbb or adc (bad) adc xor sbb movslq cltd fistl or nop retq jp movabs xchg cmp add iret jl add (bad) es movsl mov rcl sub (bad) push rcll sbb stc xchg add xchg add cwtl sub (bad) je test jmp sbb xchg rorl push ror pop hlt mov (bad) rex.B ds add adc sar test neg mov btr (bad) shrl cmp jmp jb (bad) leaveq mov insl lods (bad) xchg test icebp sub andb shrl jmpq rex.R stos jg (bad) rex.X cmp movabs rex.WRXB in mov rex.WRB gs rex.R stc sub xchg shrl sti mov divl shrl cmp sub adc lret rcr jo jle (bad) orl xchg scas lret rex.R pop xchg jne shr xor pop lods or mov popfq gs test shrl mov in (bad) (bad) repnz xor shll sub shrl jmp (bad) vcvttsd2si fimull adc rex.XB fstl push sub scas xor add je add imul (bad) rex.RXB mov (bad) cmpsl roll out (bad) adc repz repnz jrcxz sbbl mov (bad) rex.WRB jns int3 (bad) jge int3 movabs pop or mov sbb push lock roll jnp in outsl sub jg fsubs int3 (bad) cs sarl sahf sub imul ja movabs jmpq and in xchg std xchg mov test fdiv cmpq or movabs test and mov faddl (bad) mov push cs int repz (bad) xor rex.WB adc std cmpsl lret xlat std xchg or (bad) (bad) or iret insb cli rcl cmp retq add jge (bad) jnp pop lea xchg out (bad) movsb mov fwait or rex.WR add (bad) (bad) pop pushq push fimul (bad) pushfq movslq stc insl sti callq xchg mov jnp sbb pushq retq shrl jg sub negb mov rex.B es scas out test pushfq rex.B mov sahf cli (bad) (bad) sub movabs in (bad) (bad) rex.WRXB rex.RXB ss out pop rex.B cmp test xor jns (bad) callq adcl xchg cmp jo (bad) rex (bad) repnz insl nop pop (bad) mov add clc movsl mov test (bad) cmpsb (bad) rex.WRXB cmp ss xchg push mov (bad) data16 mov fs ja rolb sbb fdivs (bad) fwait adc mov sub retq sarb lret fldcw pop lods (bad) rex.X mov pop rex.WRX rex.B in mov lods cmp xchg jp hlt (bad) stc (bad) or and sub (bad) jno js (bad) (bad) movabs out pop mov cli rex.WXB pushfq (bad) and sbb lods add (bad) mov xchg rex.RX rex.B sbb jns repnz (bad) add sub and sub mov rex.XB lret movslq cmpsl (bad) sub pushfq lea mov cmpb (bad) sbb jno and bnd pop lods fdivs (bad) xchg int mov (bad) int xor jmpq fsub add or mov repnz rex.XB (bad) rex.WRXB test or or fisttpl fisubl fstpt popfq jp test test movabs (bad) add jo sbb (bad) rclb imul jo mov fcoms pushq cld xchg test cmp (bad) mov (bad) (bad) pop (bad) cmpsl xchg jno add (bad) (bad) (bad) sub movabs repz lret cmpsl mov mov outsb movabs lret (bad) in mov (bad) ds pop in (bad) notl xor shr mov and sarl (bad) mov and clc imul movabs rex.RB fwait ror mov and mov xor rex.WB shrl pop lea rex.WRB es pop push mov movabs test repz pop jle insb jge pushq rex.XB or orl fsubrp or out rex.R scas sub rol sbb add push rcrl add retq fidiv and pop rex.B stos and mov hlt lahf sar rex.W add cmp mov repz add pop cmp mov (bad) xchg or (bad) push test movabs (bad) mov (bad) pop rex.X rex.WX retq (bad) cmp xchg mov loop in add rcll std (bad) rex.B loope icebp cwtl leaveq fisubr sar nop (bad) cmp rex.WR jrcxz xchg cmpsl (bad) cmp add push stos lods mov (bad) mov jnp lret in sarl (bad) out neg xor jns xor int mov sbb scas fs rex.WX (bad) decb xchg mov mov movsl (bad) rex.XB (bad) sarl (bad) rex.RXB ja rex.RX mov jb fnstsw in pop xor (bad) imul movsb pop (bad) loop shl je out pop (bad) rolb sub in callq (bad) rex.WXB gs jmp xor xor cmp pop jne shrl cmp shll (bad) pop and leaveq out retq cmp sti or sarq stos (bad) movabs (bad) fld (bad) add sbb in rex.RX loop or sub adc mov or add and rorl jmpq (bad) adc mov jp rorl movslq rex.X fild movsl out (bad) sbb cmp fisubl (bad) mov int movsb (bad) pop mov xchg mov rex.RXB rex.XB mov idivb cs jg sar jrcxz xlat mov es mov mov in adc sub jnp rex.R mov mov out xchg push (bad) xor mov leaveq sbb and jmpq sbb and and lret cmp add rex rex.WRB hlt push mov add sar xchg mov sbb sahf (bad) adc sub stc stos movsl fisttpl (bad) shr jmpq and mov sub (bad) movl repz xchg test int repnz (bad) and cmp jbe rex.RXB xor cmpl enterq push mov movabs xchg movabs add imul mov jns sub adc cmp sarl retq cmp pop hlt mov (bad) popfq mov or jp rcl add test insb shrl iret adc movabs jmp in sub cmp rcrl xchg enterq rex.B test mov movabs enterq rex.B hlt stc add sub push popfq (bad) out (bad) push (bad) xor mov sar stos sub shrl adc sub pop scas sarl out xlat test mov lret movsb mov jb (bad) roll cs cmp sbb (bad) xor lret sarl or adc (bad) roll out pushq pop sbb adc (bad) rcr ja xchg loope sti rcrl (bad) lret mov cltd (bad) fsubl sbb or cmp mov pop pop xchg mov sub cmp xchg pop (bad) sbb decl mov cmpl cmpsb int3 out (bad) (bad) fdivl or lret ror data16 mov jae jo adcb test rex.B rex.WXB sbb xchg outsl jrcxz or cmpsb (bad) enterq sub xchg add jne std rcll fimull enterq (bad) (bad) or fistpl (bad) fmull retq xchg jrcxz cltd (bad) addl (bad) jno leaveq mov sti (bad) ss mov ficompl sarl sbb out xchg cltd sbb sbb (bad) xchg push jg (bad) jno xchg mov retq nop subl cmpsl mov cmp (bad) imull ja add cld sub js enterq sbb and rcr movabs test (bad) repz test cmp jns fisubl xchg (bad) push int3 jmpq rol or cmp jp (bad) cmp ss rol (bad) (bad) push ficom (bad) pop rcrl repz sbb nop rex.WX sahf in movabs (bad) cwtl cmc (bad) fistp sahf adc in rex.RX push and adc outsb rex.R rcll push pop (bad) (bad) and rex.W or mov ffree bt jmp jp pop std shrl mov movabs and (bad) sbb insl enterq sub retq mov cmp stc loope (bad) rolb adc add xor shrb xchg lret jge loopne pop sarl mov and adc lret insl mov mov neg data16 repz rol push scas adc pop sbb rex.WB icebp rcl repz nop movabs xchg clc cmpsl lret mov iret cmpl (bad) movslq retq xor cmpsl or sarl jp jrcxz cli fild ror rex.RXB rorb std jge out cmp movabs and mov sarl jnp (bad) xchg add pushfq rex.WR (bad) (bad) xlat (bad) shll jmpq cmp repnz or movabs xchg rex.X repnz jae sbb sbb lret pop sub jmpq push pop mov (bad) rex.RXB scas hlt retq add add xchg cmc pop pushfq sbb xor cmp (bad) sbb mov (bad) mov and (bad) rcrl push lretw adc loope pushq or addr32 sahf (bad) (bad) jno push xor icebp mov add jrcxz sbb (bad) pop jo xchg int3 movabs push rex.XB faddl std xchg (bad) pushq rex.R push retq sbb es jmpq mov mov test and (bad) sub (bad) mov (bad) (bad) (bad) cmpsb roll sub scas xchg jp (bad) sbb jg add mov (bad) rex.WRX (bad) (bad) divl mov (bad) adcb adc mov andl jo mov (bad) rol rex.XB (bad) iret loop add push (bad) repnz mov out add xor cmp shrl iret sub adc jno jg lea cmp xchg mov test mov mov xchg cmp jns shr fnstsw add sarl outsb push retq ds rex out sbb mov pushq sahf fdivrl lock jno push fnstsw roll data16 stc lahf clc imul movsb adc mov roll rex.WRXB ds (bad) jg adc mov (bad) rex.WRXB (bad) xor shrl shll sub out shll sub rex.RB loopne fistpl mov (bad) pop in sti xchg xchg (bad) (bad) out movabs xchg pop callq movabs out mov out fisttpll add adc mov rep loope (bad) in cwtl int or xchg (bad) mov stos subl mov lret pop enterq ja sbb cmp pushfq xchg repz xor (bad) and jg (bad) in je (bad) out mov rex.W rex.RX stos iret ja mov ror mov push gs pushfq shrl movsb xor in iret andb mov rex.WR (bad) jne rex.B retq imul and or repz (bad) int3 (bad) mov (bad) xor add pop rex.B rex rex.R (bad) insl sbb add out xor ror ds jmp callq shrl add sub mov insb pop sub rcr retq rex.RB in fisttpll jmp (bad) test fdiv xor in sar loop cli js mov xor sar gs (bad) cmp repz out movslq cltd loop push mov insb sub in rex fcmovnbe (bad) sbb cld and jb add (bad) adc pop and insb xor cmp ds sub add nop jbe fwait (bad) adc adc (bad) movsb iret (bad) fistp jge or add sbb xor (bad) jae mov pushq fadd fmuls push stos enterq out (bad) loop mov mov addr32 pop xchg pushq (bad) adc mov push movabs loope sarl push movslq mov mov bnd xchg sub jae pop add mov mov shll leaveq mov (bad) fwait (bad) shl mov clc or sub sbb mov repnz xor (bad) and loope shrl rex.WR rex.WRB rcrl insl cmp out rex.R lea (bad) jl (bad) sbb add (bad) push xor (bad) cmp ja pop pop xor and sbb scas rorl cmp mov mov (bad) add rcrl pushfq xor pop xorq imul mov sub jns movabs sub (bad) in mov rex.WR sub (bad) jge fwait in (bad) pop roll rcrl (bad) fidivr (bad) roll jno (bad) jbe cld pop rex.B cmp and retq (bad) shl repnz xor xchg xor sbb mov sar adc jo roll xor in and or pushq scas rolq callq imulb (bad) adc shll popfq mov mov rex.WRX rex.RX jbe mov sbb push push sbb add ja (bad) lret add add mov (bad) mov adc mov rclb cmpsb (bad) jo mov fs sbb loope xor sub (bad) rex.RXB jg roll shll or rex.WRXB lret jno push push (bad) cmp fdiv lods mul imul push push stc sbb jno push rex.WRX roll xchg lods rcl fisubr fstl push xor and xchg stc or (bad) (bad) mov mov pop lahf push xlat sub out fstpt jge rol (bad) in (bad) (bad) (bad) retq shll mov and jns lods lret adc sub xorb pop (bad) sbb (bad) adc sti int lock push cmc jl callq (bad) fucomi jmpq xchg mov test or loop test int3 ror (bad) mov rex.RX fbstp rex.WR pop push xor or (bad) mov cmpl vunpcklpd in xchg movsb sub cwtl (bad) in add mov movsl test or ds pop sarl (bad) (bad) add negb rex.WR movabs mov incb rex.R and adc sbb fnstenv add rex.XB (bad) enterq out xor add and mov jp rex.X loopne lods sub shll jmp rex.X rex.WRX out enterq xchg pop sub (bad) mov rex.WB push jnp pop pop (bad) cld rex.WXB or movsl add or xlat fsubl pop sub stos jb push sub rex.W cmp iret enterq enterq pop mov cmpsb clc test ds test fisubr jp (bad) cwtl sbb mov xchg cld add mov xchg (bad) pop sbb movslq rex.R repnz xchg insl rcl int3 xchg add (bad) cmp rex.W ds jbe rex.WRXB xchg jno rex.RXB (bad) pop lods repz push jle sbbb mov add sti stc rorb rex mov or rex.WR fldl fcomps (bad) clc mov mov add (bad) xor sbb cli sbb sub fcomp rex.R imul enterq movabs mov pop or rex.RX sub push enterq out and (bad) jo sub add rex.WR movslq cmp xchg jge cmp lret mov (bad) sahf cmpsl rex.R push pop add mov popfq (bad) sahf jmpq (bad) jae callq addr32 int3 (bad) mov js xor (bad) jnp (bad) imul cmc hlt xchg jp sbb xor test callq movsb (bad) or xor pop test fcmovb sbb (bad) push shll sub (bad) mov cli push fiadd add pop jnp jae sbb or jne fmull mov lods lret cmp add repnz insb out sub int cmpsb movsl out xchg rex rex.WR add lods (bad) xor out subl xchg fabs add push sahf add movabs adc (bad) in loop rex.X movabs out leaveq mov sbb xchg rol rex.WRXB add jmpq sarl rex.R shrl gs rex.B or and mov (bad) adc mov int mov adc and cmp mov (bad) xchg std idivb rcr sbbl clc or lock sub mov retq add mov fmuls rorb (bad) enterq lret add mov mov (bad) lock callq icebp rcr mov xchg and (bad) mov or in jnp test (bad) (bad) or (bad) mov out mov (bad) cli sbb shll fistl xchg jmpq je mov xor sbb pushfq adc stc push cli rex.WB stos push (bad) mulb mov (bad) mov insl pop mov xchg xchg mov cli loop and (bad) scas (bad) add pop jns xor stc or jmp xadd mov jrcxz (bad) movabs sarl (bad) rex rex.WX movabs mov mov mov push (bad) movabs or jmpq push push stc push jmpq sub pop xchg mov and iret add mov jbe in repnz sbb sbb shl jb adcl mov (bad) mov enterq mov cmp insl sbb fnsave mov cmp (bad) sub shrl in cmp mov in fwait mov push loop adc jle movabs sahf iret rex.WXB mov rcrl in (bad) pop movsb mov (bad) xor sub jae in pop cli adc push jne andl mov rex.WRX push xor mov mov and cs sub lret jmpq (bad) loopne or sti mov rex.WRB loop add subl shlq (bad) mov jg (bad) mov lahf mov (bad) lock rex.RB rex cmp (bad) adc (bad) test push jl jg int or add retq movsb add xchg xor idiv movl rex.WR mov popfq (bad) push callq retq rex.RX (bad) scas (bad) frstor pop outsl mov cld pushfq in out je mov adc (bad) adc rex.RXB insb lods pushfq js pop xchg sbb sub sub (bad) jne cli (bad) rex movsl out sbb cmp rex.WB js fsubl movabs rex.WRX mov (bad) (bad) adc pop pop jle ss psubb (bad) jae jrcxz or jno and imul add clc push pop outsb push lods rex.WXB rex.WB rex.WR adc in mov pop pop movsl adc movabs in sub (bad) pop pop jns shufps pop (bad) jle cwtl lret (bad) in in imul lret and pop rex.RXB and addr32 fbld leaveq xor (bad) negb (bad) adc push pop rex.WB sub rorl rorb rex.RXB rex.RX fdivs cltd sarb or (bad) cmc (bad) jl (bad) jno xchg (bad) jae push cmc movabs (bad) mov (bad) retq mov xchg int movsb cs (bad) and ds pop loop retq nop cmpsb xchg js xor ljmp or jnp rex.RX jae sarl sub or cli pop cmpsb mov rex.WRXB and movsl pushq rex.RX js (bad) nop rex.WRXB loopne adc (bad) xchg cld pop ja xor shrl jg mov pushq adc in iret (bad) (bad) xor mov (bad) rex.RX xchg cs (bad) xchg enterq (bad) fadd loop cmp adc gs or or (bad) pop movabs (bad) push (bad) sarl stc rex.XB sub jns loope add sub (bad) xchg jnp pop adc mov test lods mov (bad) (bad) adc out xor cld sbb (bad) lret repnz retq (bad) testb pop shrl sbb mov rol neg shlb rorl lret je rex.XB imul (bad) outsl xor cmpsb rex.W pop out xabort jmp (bad) repz jno data16 int addr32 loop (bad) push or push addl add jp movabs sbb jno sub cmp sti and (bad) mov sbb (bad) pop (bad) movabs outsl xchg sbb movntps lret xchg jnp cmpsb lret xchg (bad) movabs jmp (bad) or or or movabs add (bad) rex.WX adc popfq sbb rex.WB (bad) xor (bad) sub in outsl sub pop popq imul sub add mov loope pop xor rex.B jno (bad) testb mov add callq pop sbb loop add (bad) mov icebp jb cmp mov cld test fsts mov add sub (bad) mov test xor enterq adcb (bad) pushq scas or out (bad) jp rex.WRB cmp xchg mov add loopne scas (bad) adc jrcxz jo pop fstps imul (bad) pushfq lahf repz jne rex.RB rex.WRX retq out or mov test enterq (bad) jae notb lock or insb xor jno fidivl add cld enterq (bad) pop mov fldcw add jmp mov cmp (bad) fldl sbb rex.W rex.WRB adc or xor loope sbb jns push cmp sbb mov jle cmp imul popfq jne (bad) xchg icebp push loope cli jns and insb int (bad) idivb loop or repnz and cmp (bad) adc rol xor push movsl (bad) sub and fildll (bad) or (bad) or (bad) add xor sub pop jno adc (bad) jp mov xchg rex.W and (bad) xlat cmc cmp adc cmpsb sarl rex shrl test ror push out cmpsb cs out data16 js cmp fs callq rex.XB fwait jl rex.B rex.WRX rcrl jb (bad) lods and xchg (bad) adc mov or xor loopne jp sub pop (bad) mov jo adc test jbe fisubl rorl test xor pop and pushq cmc jne (bad) hlt mov xor lods mov stc popfq roll adcb enterq rex.WXB ja jns fldenv movslq mov scas xchg sbb stc movabs (bad) (bad) (bad) jns mov sub andb (bad) and pop sarl (bad) rcrl push xrelease rorl mov (bad) mov or scas nop jle cmp out rex.WRX adc sbb push movabs add je rex.B rex.WRXB imul std rcrl pop iret shll jle xchg test repnz jmpq mov (bad) cmpl (bad) rol lret lahf fmull (bad) (bad) loop (bad) sub adc rcrl sbb adc movabs imul and iret cli cmp cltd out lret sub add (bad) add vfmaddsubps andl sub sbbl sarl jmpq (bad) insb shrb lea fnstcw sub (bad) enterq rcl std (bad) int rcrl xor push shr rex.WR mov int3 (bad) xchg push mov rorl mov cmp pop jmpq (bad) scas movabs (bad) add mov loop sahf mov mov add lock xor fstpl insl cmc adc cmp rcll jno mov movabs rex.WR js rol je mov and in cmc xchg (bad) cli movslq (bad) sti jl lret mov pop mov shrl je (bad) rex.RX rcl out add rcll and jnp jmpq push sarl rex.WRB or mov mov mov shrl out movabs cmp stc mov cmpsb push add adc add rex.RXB shrl in sbb (bad) jg push fwait (bad) ffreep sahf sbb cmc cmc addl cmp movabs xlat lods adc mov loop insb mov xchg jge lret (bad) (bad) test roll movabs popfq (bad) (bad) hlt addr32 movabs iret mov (bad) testl (bad) cmpsl push movabs int3 loope push outsb sbb iret cmp xor (bad) (bad) rex.WX fisubrl rex.XB sub lea iret retq xchg xchg rex.B rex.WX shlb out pushq rcll mov add (bad) in (bad) stos rcrl cmp lret sbb cli out xchg cld (bad) xchg movabs xchg cmp pop loope (bad) rex.WR xlat rex.WX pop push adc and mov loopne gs (bad) cmp callq (bad) jne xchg pop in loop rex.WRXB rorl add stc int addr32 mov es scas rex.WX sub je sbb add xchg (bad) xchg loope xorb (bad) icebp cltd pushq or shll (bad) and adc pop lea or cmp mov callq push sbb callq xchg xchg subl shrl testl sub in (bad) (bad) stos push (bad) fadd jb push ds lea (bad) jmp hlt insb mov and movsl nop xchg adc lret mov pushq or and mov (bad) adc rol push shrb test sar orl jno (bad) sar retq add lret js pop and rcrl adc movabs cmp (bad) lret (bad) mov and imul xor mov shl rex.WR in add push jrcxz jge xlat cmp rex.W shr cwtl out add outsb rcrl mov rex.WR movabs sbb jae adc insb lret cmp pop movabs rex.X rex.WX (bad) adc push xchg shl sbb rcll mov and sbb jns ss rorl std pop idivb callq rcll (bad) movsl sahf mov js or sarl rex.RX mov lret cmpsl (bad) outsb movabs mov jl std roll retq popfq mov callq movsb or scas or mov cmpsb repz shll stc xchg rcll xor popfq (bad) adc fnsave shll jmp ja lret test xchg loope pushq xor jp sahf int3 pop (bad) mov adc xchg repnz mov incl (bad) idiv mov cmc sbb int movsb add push sbb pop mov pop test inc pop pushfq jge movabs out and rex.WR fdivl faddp mov in stos pop outsl fisttp sub mov rclb movslq or pushq (bad) add rorl mov movabs int lret (bad) lret mov (bad) sarl orl mov (bad) mov (bad) and (bad) and rex.XB jp (bad) sahf mov pop (bad) and (bad) in retq (bad) retq lret (bad) ds sahf and xor jne sub scas (bad) imul cltd push add rex xor xchg sbb and (bad) callq test adc rex.W xchg outsl push out add scas sub adc pop rex.RXB loope sbb mov adc jrcxz cltd xor and (bad) (bad) movabs sbb insb cmpsl rex.WR (bad) cmp xorb rol rex.WB loopne ss (bad) fisttp mov fstps rex.R mov (bad) icebp (bad) (bad) add sbb iret xor callq (bad) fcmove jp xchg movabs add fadd fidivrl push loop rex.RXB ffreep rolb ds rex cmp lock pop mov (bad) cmc xchg push pushq mov cli add js or jmpq (bad) mov movabs push rex.RB (bad) divb (bad) mov push mov andl cwtl jmp divb rex.RXB movsb stc mov or orb cmpsl (bad) stc xchg mov pop mov add hlt movabs lock cmp test (bad) fdivl test xchg mov and pop jg jg enterq (bad) add (bad) xchg mov jp (bad) mov cmp xrelease rex.WX adc movsb iret mov jae,pt jno mov (bad) sbb adc or (bad) shrl rex cmp rex.X (bad) (bad) (bad) mov cmpsl movslq pop ja push xlat lret nop and sbb jl lods xchg add lods pop ss cmc jo cmp iret repnz out rex.XB (bad) mov lods pop shll shl sbb out (bad) sbb loope pop imul rex.WRB scas sbbl rex.B rex.X adc pushq pop std mov iret cmp rex.WB push (bad) lahf movabs cmp mov jle std or mov (bad) jb mov test (bad) jae fisubl movabs lock mov retq add (bad) adc stos xor pop mov cwtl roll icebp sbb mov clc (bad) or loope sub sbb test add (bad) jns ud2 (bad) cmc cltd pushq movabs cmpsb or movabs xchg cmp (bad) rex.R in cs pushq test mov rex mov std loopne (bad) repnz sub sub lcall (bad) movabs mov or mov (bad) jne loope rex.RB fwait (bad) pop (bad) mov sub mov callq jg cmpsl shll (bad) mov sbb jnp sub add and jl rex.WX mov movslq int3 sub fimul cmp add cmp cs (bad) rex.WXB rex.WRXB mov rex.WX jrcxz fldlg2 rex.WRB ja stos mov (bad) mov pop jrcxz mov add jmp pop xchg fwait adc lods js data16 test sti leaveq cwtl (bad) jbe test in rcll lret adc ss ror jmp hlt (bad) out pop stc pop sub sahf jno rcrl xchg sub xchg rcll sti (bad) rex.WRXB (bad) (bad) cwtl iret jae rex.X sbb fisubr (bad) cli rex rex.WR (bad) mov sbb rex.RXB (bad) sar pushq std or (bad) add outsb (bad) out loopne pushfq rex.X movabs sarl (bad) clc lahf sahf mov sbb and jmpq fisttp (bad) movabs xchg (bad) (bad) lods hlt repz rex.RX test js in and or push lods imul xchg icebp or movabs jne out movabs fcmovb test pop (bad) int (bad) or push rcr and (bad) xor or movsb sub cmpsb jnp push lods rex loope ss in sar jno pop push cmpsb mov cli leaveq (bad) pop fisttpll movabs mov andl (bad) (bad) mov add (bad) fisubr shr xchg divb (bad) movabs sbb add shl retq mov popfq jne in xchg xchg (bad) (bad) jp (bad) cmp (bad) lret jge repz jae cmpsb shrl (bad) sbb xchg mov insl mov cmp sub jbe xor pop xlat rex.X pushq add psubusw (bad) xor push xchg pop loop pop incl andl mov pushfq lret mov iret sub lret movabs sub lea roll jae (bad) jl (bad) shrl lock rcrl jo and xchg rcll jrcxz shll xor pop (bad) (bad) loopne mov rex.WRX data16 loope and sarl (bad) cld (bad) fucompp nop (bad) rex.R jno rcrl in (bad) retq mov rex.WRX rex.B (bad) fmul pushq mov (bad) sub push outsb rex.RB mov add jge mov mov jp mov mov subl cmp add pushfq and cld mov adc scas or mov jb icebp retq xor in hlt loope (bad) (bad) and stos (bad) (bad) roll and (bad) test (bad) mov mov jno adc jbe push jns rex.RB or rex.RXB (bad) cmp xor rcl add data16 jg (bad) (bad) vpacksswb hlt mov int cs adc jno shrl movsb lods (bad) or std sub add in out gs (bad) rex.WB pop and and mov cmp rex.W repnz lods jo outsb in and roll cs std rex.WXB rex.B (bad) add (bad) mov rex.WRX adc (bad) rex.WR insl clc adc in in fisubr jo (bad) loope (bad) xor lock xchg push insl mov sarl enterq jbe movabs retq pop rex.B or jo lret fldcw sub stos (bad) mov retq add js jb (bad) lret iret rcr insb scas enterq (bad) cmp sbb pop push (bad) testl movabs rex.R rex.WRB and or lahf rex.W (bad) xchg xchg xlat add add xor stos sbb in xor ss fiaddl sbb (bad) callq jrcxz adc pop add test sahf sbb mov (bad) (bad) icebp jbe (bad) fcomps jmp (bad) lret es outsb sbb roll (bad) mov fildl (bad) fadd popfq xchg add xor cld mov nop pop js sti cmp mov mov (bad) rex.XB movabs mov rex.W (bad) mov jb gs (bad) pop and faddl fcom (bad) mov pop (bad) jne (bad) rex.WB xor or cmc rex.W fldl and mov cmp rex.RB (bad) retq mov and pop rex.WR fldenv pop int lock repz retq rex.X in cmpsb xchg fwait retq xlat sahf rcll xlat add andl xchg fldt jl fisubr sar (bad) adc iret rex.RX test rex.X rex.R xor shrl pushfq out out jb (bad) in add (bad) mov (bad) (bad) shll add sub jp hlt pop (bad) (bad) (bad) mov jns xchg (bad) sarl sarl sbb (bad) (bad) sbb add sub imul (bad) jno loope and push (bad) movsb adc xor (bad) out jge lret fwait mov shl movslq rex.X rex.WRXB repnz sahf (bad) icebp stos cmpsb cmp adc int3 push (bad) roll (bad) xor jne iret sbb pushfq leaveq sahf shrl (bad) rorl xchg test je xchg cmpsl add add test mov roll cmp pop (bad) mov rcll rex.WR popfq rex.W rex.WRB sbb xor shr (bad) iret or fcoml adc jp icebp rcr jne in cmp push sub mov (bad) out fcmovnb hlt xor insl mov push (bad) sbbb and (bad) push (bad) sub scas (bad) rex.RXB mov rorl push and rex loope lret andb jbe repz cmp mov iret (bad) rol imul mov sub shrl or mov cli lret fisubrl jne (bad) (bad) mov jmp jl cli roll test pop movabs sub push adc cmp (bad) xor mov (bad) push rex.WRX xchg imul sub rex.RB cmp insb adc rex.WR idiv mov sarb adc enterq xchg jl insb lea shrl mov test (bad) fist rol push xchg addr32 ja (bad) fs enterq cwtl test shrl (bad) adc mov mov push mov retq nop xchg (bad) (bad) (bad) hlt add (bad) rcrl mov test add rex.RB sbb rex.WX rex.WXB adc movabs rcrl cmp mov mov sbb xchg xor xchg (bad) or ffree (bad) xchg jg pushfq stos test push ds (bad) mov insl mov lret xchg cmp mov sub cmp scas rex.WXB cmpsl adcl rcll fistpl leaveq mov stos jnp movslq movabs rex.WRX gs pushq stos xor jle (bad) add lahf pop mov mov movabs push (bad) (bad) or or or (bad) loopne loop sub lret push pushq (bad) stos (bad) mov mov movsb add enterq and rex.R es adc mulb xchg scas hlt test jp (bad) mov jb popfq jmp rep sub add adc mov xchg adc mov movabs jbe and rex.WRXB mov pushq stos (bad) fadds or lret ds cmc shl fs pop cmp stc or shrl cmp in pop mov rex.WRX pop shrl mov in rol and rex.WRX xchg clc in scas (bad) xchg icebp mov sarq and outsl adc add sti fwait inc rex.WX adc jg rex fs and (bad) (bad) enterq (bad) (bad) xchg rex.B lock scas scas ss adc pop cmp xor (bad) fimull xlat add sbb stc in mov movabs movb rcr mov jno adc (bad) xor sar add mov xchg in pop xchg neg mov movslq adc out mov rex.WRXB (bad) std adc repnz shll retq cmp loop sar (bad) movzwl rcll sbb rex.WRXB test xor add jrcxz (bad) mov loop push mov mov (bad) ds mov lret sarl fucomi xchg xchg retq mov iret (bad) rcll rex.WRX (bad) jnp mov fsubl cmpsb movsb and shrl push (bad) ss add movabs jmp or adc adc scas notl adc add and (bad) pop jns xor sub test enterq pushfq movabs (bad) (bad) rcl jnp movsl and jo rex.RX scas stos js add movslq rex.WX stos xchg popfq (bad) scas cli shll xchg mov lea xchg jo rex.XB std sub gs in rex.R xor (bad) cmp and lmsw sahf (bad) callq push (bad) iret pop (bad) (bad) (bad) push jp,pt add and rex.WXB rex.WRB cs ss cmp or retq xchg scas faddp mov es mov cmp sahf cs (bad) xor xor rex (bad) add test lret insb js cwtl int3 add xchg rex.RB sbb fldcw (bad) sbb retq mov jge orb (bad) enterq mov xor sub (bad) sub jge faddp es (bad) xor fs repnz jp pop or repz (bad) xchg ffreep mov vpcmpgtw fistp sbb xchg pop xlat jbe adc outsb mov sbb mov sub outsb movabs (bad) mov rex.RX rex.WRX sbb pop or (bad) (bad) (bad) rex.RB rex.WXB cmpsl fucomi movsb jge sbb xor mull mov rex.B lahf (bad) push mov xchg sbb js xor mov mov add xchg imul adc xchg (bad) (bad) rex.WRB rex.WRB or and push adc xor jno sub jge lea mov (bad) cmpsb xchg jp dec sbb rcll es (bad) insl or xchg repz iret jo (bad) lret int3 jb data16 sub rex.WRX push sub sbb adc out cmc mov or sbb and cli std (bad) mov pop or mov and rcrl movabs add mov cmp fbld (bad) and (bad) rex.WRX callq fcomp cld jp retq rorl rex.RX repz (bad) jae rex.RX push mov iret cmp rex.WRXB and movabs (bad) cmp (bad) leaveq mov imul rorl (bad) (bad) and movabs movabs sbb cmpsb mov xchg jge rex.RB in jp sti sbb repnz rcll in sbb (bad) add add cltd (bad) and out mov pop int jb scas imul push (bad) out xchg fsts (bad) hlt lret cmp xchg (bad) fidivrl (bad) stos adc add repz pop adc and psrlq movslq stc stc mov std jmpq ror rex.WRXB iret movabs inc (bad) gs out mul push movabs jnp lea and pop xor test sbb sub lods (bad) movabs (bad) shrl rex.WR (bad) in rcrl pop scas bnd (bad) loopne (bad) imul mov sub sahf cmpsb push retq movabs adc (bad) (bad) (bad) mov xchg jl fwait mov xchg (bad) imul cwtl fs xchg (bad) pop inc (bad) cmc (bad) stos push mov xor and rex.WX pushq in xchg loope fisubl lods xchg lcall in (bad) jb lret shr or adc pushfq gs mov sahf fwait inc or ss adc cmp mov int3 movabs out xor std fxch add pop sub (bad) int cmp xchg movabs rcrl pop gs movsl lret adc shrl sub cmp sarl rex.WB mov shl xor imul fidivl adc and outsb xchg rex.WRX and enterq (bad) insl lahf js push sbb rex.WR insb mov in cmp jmpq push xor loop pop loope movsb push out mov rex.WRX and pop nop (bad) (bad) rol cmp mov (bad) and rex.WR jnp cwtl push (bad) or xor xchg cmp (bad) jno rcrl push movabs xchg js cltd (bad) movslq mov and xchg jnp (bad) push shrb xchg out lret (bad) lock (bad) jbe scas outsl shll jo pop mov callq cmpsb fistp push in xor (bad) or movabs (bad) (bad) shrl test (bad) lods sarl lahf push cli mov (bad) ss mov (bad) scas fstp js adcb add stos or and (bad) ficom rcll sbb cld iret jno (bad) sbb loopne rex.B (bad) cmpl jrcxz cwtl repnz add int add in iret xchg xchg rex.XB fstpt stos popfq repnz (bad) rex.RB fnstcw push hlt repz pop leaveq (bad) rex.RB sub (bad) roll xchg fldl (bad) (bad) sbb pop shrl std std or imul xor popfq rorl (bad) push and es (bad) sbb out (bad) mov add cld mov fwait push mov loope add sbb lock mov rex.W (bad) sar xchg fstpl movsb in cli insl loop stos sbb jge jg sahf (bad) shll sti jrcxz xchg adc leaveq lret int3 mov mov mov adc mov or lea or pop movslq adc cltd (bad) lret test fdivp rex.B (bad) (bad) rorl push xor jle jmpq ds mov xchg fstpl (bad) pop nop callq xor frstor cmp (bad) movabs xor (bad) mov mov sub (bad) (bad) pop sub (bad) repz out rex.WRXB lods hlt xchg mov xor rex.WRXB rex.B repz fimul ljmp sub icebp xlat cs (bad) jbe sarb jp add movsl cmp (bad) outsb sub mov add mov fldenv sti out lahf repz (bad) xchg test sub and jno jne orb jns gs mov fwait xor incl insb sarl or and fwait stc (bad) js rex.WX pop int (bad) (bad) fstpt rex.RX hlt or jle movslq pushfq mov sub cld sub (bad) nop (bad) rclb fstps rorl callq notb outsl rcl outsl pop loop shll ja sbb cmp rcrl jp xchg rex.WXB repnz jrcxz rex.W jle or rex.WR xchg imull mov jno mov sahf pop je repz sub fnstsw push xchg (bad) movabs rex.WB out mov ss rex.WRX fdivl test (bad) xorb sbb (bad) mov (bad) stos cmpsl and movabs fdivs rol rex.XB mov cmc (bad) xor push movabs and sbb or pushfq imul stc int3 xor mov rcrl ds cwtl or fs sub scas in stos cld mov callq int sbb mov movabs rex.B and (bad) callq jns imul shrl rex.WX clc mov xlat (bad) incb loope jl rcl lret ja adc (bad) movabs cvtps2pi and mov cs xor (bad) repnz push xchg push decl out jno sub and stos js (bad) imulb lods jnp (bad) and jge lea xlat or (bad) mov (bad) (bad) xorl rex.B rex.B rex.WXB rex.WB rcll (bad) je xchg rex.B add jns lret fnstcw addl retq mov int3 rex.WR ror inc negb adc or (bad) add mov lahf cmc pushfq mov jo (bad) ss rex.RB add (bad) mov jnp movabs rex (bad) (bad) (bad) std shll stos hlt cmp push rcl jno or xor js addl (bad) mov sub add mov cmp nop mov imull xchg pushq lret (bad) mov ss in jae rex.WRX fs insl or pop (bad) xchg jnp lock or rex.R or push movsb jp xchg in loopne (bad) mov std sub cmp rex.RXB rex.RX rex.WXB repz ja icebp sbb (bad) imul int push adc fnstenv pop movslq rex.RXB imul push rex.WRXB jns stos sbb decl jmpq in xor (bad) and (bad) cmp shl stos sbb mov and jbe iret cld cmc or shll test (bad) movsb int3 xchg (bad) adc lahf std pop xor adc pop cmp xchg rex.W xchg mov lods ficom icebp xor xchg out (bad) xor std pop sub movb sarl fsts lret adc push pushq movsl xlat jnp retq pushq (bad) mov mov mov fstps adc sti nop rex.XB fwait rex.WR shrl test xor sti (bad) cvtps2pd pop sbb and xchg mov std rex.XB rcll or (bad) decl insl fnstcw test jnp retq pop movsb pop xor (bad) loope xlat mov (bad) in adc (bad) jae test (bad) (bad) rex.RB sub cld (bad) sub push test rex.W movabs jns pop testb mov mov ja fbstp cmp movsb (bad) icebp enterq (bad) (bad) js movabs mov add cmp or lahf movsl pop faddp xor fsts xchg mov (bad) sar (bad) fldenv ss (bad) rex.RXB in xchg fmull loopne je std retq (bad) loopne or rex.XB add rex.WR int3 sti xor mov pushq jnp (bad) xorl pop (bad) add (bad) movabs rolb (bad) mov (bad) (bad) cld rex.RX out rex.X rex.WB add outsl (bad) xor rorb retq add fninit fidivrl rex.X (bad) rex.WRX rex.WRX sub cli (bad) loopne leaveq adc (bad) int3 rex.W jmp jne mov stc out movabs sub (bad) mov xchg rex.XB cmpsb je rex.RX xchg rex.WRXB xor repnz rcr mov mov repnz mov (bad) add jnp shll nop cs xor xchg mov push (bad) adc (bad) fildl xchg loop sbb mov or fs jle (bad) or mov push not (bad) (bad) pop jge (bad) sub subl incb sbb lahf rorl add adc clc mov add jno (bad) rex.WR retq movabs sahf movabs cs gs orl in mov sbb negb rcll (bad) (bad) pop add ja out jb sti push loop jmpq rex.WRB stos movabs mov pop int3 (bad) negl mov mov adc movabs and sbb sbb or rex.WRB outsb loop xchg mov jle orl xor xchg xchg movsb mov rex.B add add and sub sbb (bad) rcll lahf test test lret adc loopne out add mov mov xor mov rex.RX jns add rex.X jno shll pop adc cmp and rex.WX and adc adcb mov jl pop xchg rorl adc mov mov outsb jno pop mov repnz rorl insb or pushq repz pop (bad) and stos sub es iret rex movabs or or mov mov and jo sub (bad) rex.WR test sbbb xorb cld fstps mov push push jae pop outsb sub int3 sti clc cmp sub (bad) rex.XB movsb in cmp sub in jmpq jrcxz (bad) mov rex.WRXB loopne pop stc mov sub shll (bad) add vmovapd mov rex.RXB lahf sub xor sub retq loop rex.WRXB mov test (bad) loope (bad) jns jp out retq fisttp out std mov (bad) fcmovnbe nop (bad) xchg rex mov test xchg adc or cmc (bad) mov (bad) sub push mov insl rex.WRB stc add shl sub pushq mov sarl mov (bad) cmp and (bad) (bad) icebp mov (bad) xor (bad) mov push test sbb jb fcmove or data16 (bad) fisubl js notl mov (bad) addr32 fbld add mov sub jns add in enterq (bad) ja in rex.X ja jae rex.WB push in in test mov jne and std mov sub loop mov jmpq shrb and rex.WRB clc (bad) mov or xchg ffree js push xchg (bad) add je jb (bad) fsubrp xchg icebp sub icebp cmc fadds fstps sbb in xor or (bad) icebp add rex.RB sbb jp in lods (bad) lahf cmp sub mov (bad) mov pop mov adc mov rex int mov (bad) mov cmpsb mov push stos mov mov add and (bad) jne and adc iret (bad) sarl iret and movabs outsb mov rex.WRB (bad) xchg (bad) sbb add callq int3 xorl movabs repnz (bad) add retq mov fsubs sbb callq rorl pop rex jnp incb rex.R jae retq shll (bad) rorl mov and iret in xor fdivl (bad) push or iret push scas jl rex.WRB xchg sbb (bad) mov rex.RXB rcl and sti (bad) stos (bad) outsb sub adc rex.RX add (bad) xor lods or fucom pop lret (bad) cmp xor sub jo movabs adc mov mov (bad) and (bad) imul cwtl add movabs rorl fbstp fdivrl sbb push out rex.WRXB retq and mov or (bad) xor push adc rex.WB scas movabs imul sbb (bad) pop jmpq (bad) mov add (bad) fsubrl rorl test rcr movslq adc and sub mov xor out mov mov (bad) testl lret (bad) rex.X xorl testb jns lret lock rclb int (bad) repnz xor lods and (bad) or fbld rex.X lock mov stc or push (bad) jne (bad) rex.X adc xor cli mov clc lret rolb fadd stos and int3 fisubl (bad) mov rex.X sarl lods sbb popfq xchg rex.XB rex.WRX fcoms iret ja (bad) loope stc rex.RB and cmp enterq std pop sub sbb int3 rex.W (bad) repnz rol jge (bad) sbb push shr xchg iret clc xor (bad) shrl mov jns repz ror (bad) lods loop push xchg (bad) xor jns jrcxz retq pop ror mov rex icebp (bad) sbb add jno rex.WXB mov pushfq xchg cld callq insl mov cli sarl (bad) push (bad) rex.WRXB popfq push mov mov sub rex.WRX lret rex.WB rex.B add icebp jp jns in (bad) sub sbb jmpq fdivrl test or mov iret lea cmc mov movabs cs or dec out roll cmpsb sbb xor and in jl loop out push movsb and or out loope rex cmp or rex.B in movabs test adc rex.RXB in xchg adc mov add mov add rex.X repnz sbb movsb stos stc xchg rex.W adc fst shll (bad) idivl push or adc xchg fldenv xor retq rcrl lods and adc std (bad) outsl xchg (bad) sub (bad) (bad) mov repnz (bad) imull callq shrl xchg mov rex.RXB repnz cmpsl xor jno or mov or repnz cmpsl sub sbb mov clc jg test (bad) xchg cmp xchg fnstcw and add mov xchg rcll (bad) idivl stos (bad) mov add callq movabs icebp xchg cld rolb fisttp (bad) test pop mov xor push roll scas (bad) xchg lods movslq loope mov sti insb xchg loop sbb test push pop lods sar mov (bad) cmpsl in in enterq jbe jbe clc imul or fistl rcrl cmp fscale lahf mov sbb sub (bad) push rex.WXB mov xchg mov retq std adc fcmovbe pop mov (bad) lods (bad) test xlat xchg test pop mov in movabs xchg outsl xchg (bad) clc xor in lret (bad) xchg jg mov (bad) add sbb lea rorl push push loop lods rex.RB fprem movabs in add xchg outsb test sarl or jne adc nop pop stos roll rex.WRB or int3 es sarb callq sarl loopne lahf (bad) cmp leaveq mov test xchg in sub (bad) mov loopne lods insb push (bad) (bad) mov insl mov xor xchg fwait sub mov sbb (bad) pop (bad) jmpq rex.WR push or movsl push rex.B sbb jb mov cmp mov xor (bad) es jne (bad) rex.WR mov lret (bad) insl sbb add (bad) sub sbb and (bad) lock pminsw (bad) cmp add cmp or insl mov sbb add push adc adcl rex.WXB rcrl test lods and rorl add testb shll (bad) (bad) retq and (bad) rex.R lret (bad) mov rex.B or (bad) movabs roll xchg cmp sti pop mov popfq sbbl movsl and (bad) pushq jmp lock rol sub icebp ds mov jmpq shrl hlt (bad) (bad) pop jrcxz sbb rorl mov or mov js movslq add int mov xchg sarl or rex.RXB mov movabs mov mov sar roll loop out sahf pop or js mov or movsb rclb je shrl mov insl jp jge xor (bad) rex.R or mov int3 (bad) and sbb mov mov in or scas fisttpll repnz (bad) in loope xchg rex.RB retq std ss mov add and mov pushfq cld mov and test jo cmp lea (bad) hlt loope jg mov loope fdivl pop (bad) (bad) mov je (bad) nop mov (bad) adc mov (bad) sbb out jns pop sub rcl sub out ss in bsr imul insl loope ds mov (bad) cmpsl (bad) int rorl je lret lahf mov fisttpl (bad) (bad) jb rex.WXB sbb lret xor (bad) gs jns cmp imul test mov fisubl push rcll negb add adcl sahf xlat and movabs (bad) add fldcw adc pop nop adc and pop lret adc test xchg fcompl xor sarl push rex.RB pop jo (bad) ror pushq and xchg (bad) fwait movabs push icebp adcl (bad) (bad) std movabs push sti xor stc rex.WX sahf loopne (bad) repnz std cmp shrl (bad) js movsl (bad) lock cmp shl rcrb sbb rex cltd test stos pushq jp cli movabs sbb nop mov enterq jl jne ja test rcll stc pop rcr jg sahf mov rcrl mov shll lret movabs rcll mov movabs mov add mov (bad) sub push fnstcw (bad) mov mov or jmpq or pop rex.RX rex.WRX and push mov mov (bad) or push xchg es lea lock cmp mov fyl2xp1 xchg (bad) icebp sbb (bad) cmp out or cmp sub cld sub fidiv mov notl jae add add test rex.RXB rex.X ffree stc (bad) fwait push jl int rcrl jno cmp mov cwtl mov mov jae imul cwtl or jnp (bad) (bad) sbb (bad) lea and test enterq stc ja movabs push rex.RB rex.WR imul (bad) js (bad) in xor (bad) (bad) push jbe and (bad) pop xor hlt rex.XB rcll add (bad) lods in (bad) mov (bad) pop callq (bad) test (bad) pushq movsb movabs (bad) movabs (bad) mov lock (bad) or (bad) movabs jns rcr jmpq fisttpll (bad) retq repnz rex.R sub data16 rex.WXB div imul sti mov jnp imul mov xlat pop loope lret (bad) sarl stc xor mov sbb int pop (bad) sbb sub movabs outsb mov shll pop adc (bad) callq bnd rcrb insl push xchg retq add pop mov jo (bad) cld (bad) in mov add loop (bad) (bad) (bad) pushq (bad) adc jae addl cmpsl shl (bad) fstps sub mov jmp mov jp cmp rex.WXB test sub jrcxz lea iret pushq sbb mov xchg int fiadd sbb addr32 testl addb mov andl mov pop (bad) (bad) pop rolb add fildll xor jp callq addl callq repz insl jne sub (bad) adc notl mov (bad) rex.RB gs adc push and (bad) rex.WB (bad) mov scas roll and xor cmpsb and rcrl mov and rex.RX rex.RXB in movabs (bad) enterq loope jne xor pop lods ss pop cmp insl mov scas sbb sub cwtl add pop jp push loop sub callq mov fnstcw add retq mov andl (bad) (bad) xor (bad) fdivs out pop and push cltd push movabs loop shrb rex.WRX jbe push sahf (bad) (bad) sar (bad) sub rex.RXB movabs or xor adc fcmovu pop movabs mov shrl xor jno xor mov (bad) stos sub cmp callq rex.B push fcmovnb jne sti rorl sbb (bad) xor cmpl jno idivb (bad) mov pop loope rex.WX fwait (bad) and rex.R cmp add xlat pop outsb add fisubrl (bad) rorl movabs mov push add iret fwait mov loope rex.W or sbb insl xchg in shrb pop imull (bad) orb rcll je imul pop pop out fnstcw (bad) lock mov xor mov pushfq mov (bad) xchg out and pop pop sub cld xchg cmp rex.WX mov rex.WRB mov adc movabs (bad) push imul callq stos jns pop xor fisubr mov adc jne and andl xchg retq mov mov (bad) out pushq lea mov test (bad) (bad) js fdivp xchg icebp in leaveq icebp (bad) gs stc (bad) cs nop mov mov xchg and (bad) adc repnz mov mov rex.WXB or int3 push imul out fidiv sbb retq rex.WRX ss retq pop rex.W rex.B js (bad) add imul lods mov (bad) loop push sub out addr32 mov movabs popfq loopne movabs callq jne fstl rex.WRX callq (bad) retq js mov rorl jno sbb rcr pushq and (bad) xorb jmp roll callq rex.WR add rex.RXB (bad) repnz (bad) mov sbb rol (bad) rex.WB push mov fcmovnb rex.WRX (bad) lret rex.RB rex.WXB (bad) xchg xor xor jns rcl adc fadd xchg mov stc pop loop and push jrcxz sub cli (bad) insb stc shr pop (bad) and jb rex.RXB rex.WRXB or (bad) rcrl cmp pushq sti iret cmpsl sbb fstpl (bad) xor movabs je mov push loope (bad) adc pushq (bad) xor add (bad) jne xchg mov movabs cmp mov rex.RXB rex.R pop sti movabs sub in lock mov movabs (bad) jae mov test (bad) sub pop repnz xor rex.XB (bad) add xchg cld popfq out popfq (bad) add xchg stc negl cmpsl rol stos add cwtl (bad) pop cli jns roll rex.WB rex.RB (bad) mov push push xlat or test (bad) mov retq pop cli xchg add (bad) sub mov fimul pop test rex.RX cmp adc sarb (bad) jo mov rex.X or (bad) jne callq enterq cmpsb repz rex.WB iret add sbb adc and sub (bad) fmuls sub mov test mov (bad) add in xchg in jbe rolb jno faddl sub sbb repnz or mov xchg in jo or lods rex.W pop movabs (bad) fist es (bad) mov (bad) push enterq cld xor xchg movabs (bad) sub rex.WR (bad) rex.WRXB (bad) xchg cwtl rex.WRX rex.WXB sub jle loope lret xchg fcomp sub insl rex.WR jrcxz test lods notb shll add imull push lock lret in cmp movslq loope adc movslq push xchg loop rex.WR rex.WR rex.WX rex.RB movl scas (bad) popfq stc lea fbstp mov addb std (bad) (bad) lock shr lret jnp popfq mov leaveq cld add stos lret out xor sub repz mov rex.WB hlt shr xor add test cmp clc mov sub or xor jrcxz cmp pop (bad) jle lret roll (bad) jge fnstcw mov jo or (bad) cmp rol and (bad) jl rcll js iret xchg push out sub (bad) cmp rorl out jns ja (bad) xchg lods xor cli mov std retq icebp roll (bad) movabs movabs (bad) in mov cmpsb (bad) orl shl mov jno ror movabs test mov rcrl std int ss mov stc roll insl pushq in xchg add cwtl pop (bad) (bad) push jg jb (bad) movabs fucomp sahf xlat xor out jl and (bad) movsl std (bad) movabs (bad) pop (bad) sbb (bad) or sub push mov mov mov repnz test movabs rol sbb int3 iret xchg out fwait pop lret adc cmc push add movabs bnd fsub (bad) enterq (bad) insb xchg mov mov shrl insl shr (bad) jle shrl in repz js leaveq in lea cmpsb movsb iret imul (bad) mov jae shlb and out push lods jae out pop rex.WRX rcrl notb jns in jne jp rex.RX ds lahf rex.X roll popfq es repz icebp pop imul xchg jmp frstor sub adc and lods rex.XB shr rex.B lock jle (bad) xchg sub push imul rcrl clc sahf add enterq test or sbb xor mov jno add mov mov and (bad) jnp stos add jno callq sub cli insb gs add mov mov jo jl jb (bad) loope mov or ficomp cmp loopne mov pop (bad) rex.RX pop out (bad) leaveq xchg jae adc callq (bad) iret (bad) jrcxz cwtl sub insl addb (bad) movsb rex.WR (bad) clc jle stos (bad) pop rex.RXB add icebp jae or callq push jp out sbb rex.WR mov xchg ds sbb test faddp (bad) xor (bad) rex.WR and xor push test movabs push xchg adc negb sub movslq enterq in mov adc rex.B flds pop (bad) enterq icebp (bad) out movsl (bad) negb add cmp pop rex.RX rex.WX ss movslq jnp es adc fs xchg (bad) xor xchg movsl loop mov and (bad) in pop add test (bad) jb mov add rex.WRB xor scas rcll rex.R rex.WB movsb loopne shrb push inc and iret rex.B pop jmp fstps movsb stos or (bad) (bad) fldl lret and cmp adc ja cmp rcll xor ficom (bad) hlt pushfq rex.W data16 add adc (bad) rolb sbb sbb scas cld mov cmp (bad) fs sub rex.WRXB jmp cld jle xchg jl mov jne rex.XB popq mov jl (bad) out pushq lods (bad) fsubrp rex.WXB (bad) insb sbb lea mov mov adc mov and mov repz push lret add cmp rex.WXB (bad) xchg pop and or lret fwait insb sbb add fwait out out jno jae repnz (bad) (bad) xchg shl ja cmpsl (bad) xchg jp (bad) jle retq (bad) mov (bad) pop cltd and jge jb insb pop retq rcll or push add (bad) mov rex.WB sbb enterq xor rex.B mov rolb cli xor jo and movsb or movabs loopne lods adc (bad) roll add push jp lret iret mov cmp jo xchg jmp sbb movslq movsb repnz hlt stc push cmp xchg rex.RB lock cmp fs scas test pushfq mov jrcxz (bad) cmp stos or rex.W ror xor (bad) (bad) mov fisubrl add jle cwtl gs push (bad) es (bad) rex.WX xchg jns sarl xchg and mov (bad) (bad) xchg movsl repz lods fmull rex.WB in mov xchg jns cmp sahf imul jg scas pop xchg rex.WXB (bad) iret (bad) lret fisubr hlt rex.RB add sahf rex.WRX scas and test cmpsb rcrl addb rex.WRB rex.WRXB jmp sub mov mov push cmp rex.WB sbb push lock scas (bad) rcrl pushq pop push add es mov hlt out jge push pushq lea in and mov jnp retq rex.RX (bad) rex.XB rex.WX mov jne lahf lods es add (bad) stos fwait xchg ja in rex.WRXB fld jbe and rex.WRX rcll adc lret (bad) lods movabs sub (bad) fbstp or leaveq (bad) pushq cwtl je xor loop xchg test sub hlt rorl pop in mov jae ss ror insl xchg mov test (bad) xchg (bad) rex.B jne cmpsb fbld repz (bad) out pop adc pop rex.W mov or adc repnz sub push and and (bad) adc rex.B (bad) scas pminsw out add or mov (bad) test or mov sub movabs pop and rex.X rcrl (bad) rex.WRX rcrl mov roll test (bad) mov rcll jbe jno add (bad) (bad) jnp adc (bad) cwtl adc shrl mov lret mov (bad) adc rex.WR rex.WXB xor (bad) fbld lahf lret mov test rorl fstp (bad) loope rorl mov mov (bad) lret fidiv (bad) (bad) test (bad) (bad) rex.R sub insl pushfq (bad) mov fbstp es rorl rex.WXB mov popfq rcll xchg mov xchg (bad) imul (bad) cmc push rex.WXB fistpll rex.R xchg pop xchg lret (bad) xlat adc push sub roll (bad) cltd loop retq and fbstp rex.RX mov retq movabs lods jbe sbb out xor push loope addr32 lock mov rex.X icebp mov adc jb jl adcl (bad) rex.WXB lods (bad) callq (bad) sub (bad) adc (bad) flds push mov rex.WX mov test (bad) loop jo or and (bad) jne cli int retq xchg (bad) fldl mov mov enterq int3 movabs cwtl cli jns test (bad) movslq jg adc rex.B pushfq push rex.R cmp cmp jl lock insl and (bad) (bad) xchg and negl sub int3 xor movsl fidivrl movsl lret movabs or enterq out xchg jb clc (bad) (bad) (bad) adc out cmpsl nop jno (bad) sbb rcrl push shr rex.WX (bad) push sahf rclb adc jne add xchg out imul xlat movsb (bad) cltd roll popfq loop mov rolb cs pushq rex.B out cmpsb mov jrcxz sbb pop (bad) adc sbbb gs movabs (bad) xor jae sub push mov stos shrl sub test out (bad) pop jo rex.WXB lock pop xor add orl add js shrl stos int3 xchg (bad) jno cmpsb mov lret (bad) cmp or pushq (bad) cltd out add ror (bad) insb cmp and (bad) push shr (bad) je pushq rcrb and xor stos rol loopne faddl adc jne test xchg mov xchg loop xor adc callq (bad) adc lods retq xchg (bad) stos (bad) jne and jbe fnsave loope xchg movsl xchg lret (bad) loopne push jo fwait mov (bad) cmpsb rsm (bad) or xor xor js addl sub (bad) mov xorl jne jp lret jae pop xchg jae mov mov xchg adc mov push cmp enterq ds xlat (bad) cmpsb fcmovnbe scas lret sub rex.R pop stc lock cltd shll add (bad) jge roll repnz int3 insb mov fldenv rex.WX rex.R insb repnz mov (bad) adc rcr jbe movsl rorl xchg rorl sahf (bad) movabs and addr32 movsb loop pop in mov mov (bad) mov jbe xchg in (bad) scas jns cmpsb pop shrl (bad) decb test in mov (bad) rorl push fdivs mov test sbb jno (bad) test sub xor sbb fs rex.XB imul movabs mov cmpsb rex.W rex.WXB (bad) movabs loope rcll (bad) (bad) xchg gs cmc add imul rorl out xchg add stc mov mov (bad) rex.WRB push fadd mov mov lahf (bad) pop int3 mov push cwtl rorl outsl cmp rex.XB shrl cmpl pushfq (bad) push and out rex.B outsl xor or jb rex.WR test sbb clc ljmp (bad) rex.B mov (bad) sahf movb fstps movabs rex.B je mov sarl movabs and outsb cmp jbe rorl push fcmovnu cmp sahf lock pushq int push loop mov (bad) jne jb xchg sub cmpsl rex.R rcrl adc mov shll rcr je nop imull roll mov cmpsb pop cs int in rex.WB mov xchg (bad) or rol xchg (bad) jmp or jno cmpsb ja ds rex.R xchg mov mov data16 imul int3 mov or in rcr insl (bad) (bad) jne (bad) sti loopne stos or mov ss mov rcrl adc lret pushq or xchg mov (bad) adc rcl jno rex.W push xchg shrl jns (bad) xor fldenv and stos shrl and movabs outsl push jns int push es xlat roll rex.WR and cmp cwtl ficompl popfq (bad) jne xor jb rex.RX gs fsubrl adc rex.W in add push add rex.RX adc fs lret out rex.WRB rex.B xchg frstor xchg jb (bad) fildl pushfq xor mov rex.B jbe sarl rol jns cltd push (bad) adc shl mov out lret sarl test pop rex.R (bad) jmp jrcxz (bad) mulb int (bad) mov and sbb rex.B in loope (bad) (bad) (bad) shrl mov pop xchg shrl push pop (bad) push add stc sbb rex.WRXB roll (bad) es xor rorl enterq (bad) pop rorb and lret shrl iret movsl scas subl add mov sarl jrcxz and rex.RXB mov pushq adc jp jle ja sbb callq (bad) rex.WX repz rex.RB adc test pop rex.B out sub iret (bad) movsb sbb repnz pushq (bad) (bad) pop sbb mov sub idiv stos sbb rex.R lock rex.WR sub jne mov in and mov fs iret out rex.B rex.XB pushfq rex.XB retq pop or xor (bad) movsb and mov mov addl addr32 (bad) xor (bad) mov sbb data16 cmp repz rex.RB mov jmpq adc fistpll rex.WRXB mov mov or roll add lock mov retq and cmp (bad) mov jae rex.WRB adc adc fcompl add ds or or sub rex.R rex.RX rex adc sti sarl pop movsl mov xor mov shrl shll mov lret movsb add jo (bad) sub pop cmp (bad) rex.WRXB sub je rex.WX sbb xrelease lods hlt mov (bad) and movsb (bad) in jnp rex.WX fmuls (bad) adc in movsb push or mov mov and (bad) lods insb retq (bad) icebp pushq rex.WX (bad) fildl xadd mov rex.WRXB shrl lret lods out shl lea sub repz jno (bad) jno movsl movslq add xor mov xor (bad) add jae rex.WXB cmp repnz (bad) loope iret out mov fbld cmp sbb out mov movb mov jnp loop xor (bad) scas lahf (bad) int ds jno out mov (bad) (bad) lret push adc (bad) (bad) fdivrl popfq decb cmp fisub lods mov and gs js mov xchg mov sarl xor iret mov cld sub xor (bad) (bad) shr data16 fidivl lret sbb rcll pushfq mov (bad) ss or int jl popfq out fwait mov pushq adc sub sub cmpsb cmp rex (bad) int3 out add push (bad) sarl pop (bad) sti (bad) (bad) push pushq (bad) outsb or lret sarl cli rex.R rex.WRX sub icebp loope jae movslq and or jrcxz cmpl fnstenv movslq jo (bad) xchg cwtl mov lea test (bad) repz cmp (bad) pop (bad) lret sbb hlt repz sbb lret es pop adc repnz shlb movsb mov pop rcll scas add jle,pn and add mov mov adc test (bad) loope xchg rex.B iret rcll andl movabs pop push out xchg xchg data16 loopne out fild repnz xor (bad) mov push push rex.XB cmp outsb rcrb in rex.XB fwait rol test (bad) jp lret testl sub mov stos lods jnp in vmovdqa sbb add jae pop sarl (bad) movsb lret mov roll (bad) loope cmpsb and (bad) push mov mov cmc rex.WRB sub and rcr test loop push (bad) (bad) (bad) xchg (bad) scas (bad) add out insl (bad) (bad) and movslq mov int3 push push lods cs jb movabs sbb movsb (bad) hlt outsl fwait jle movslq (bad) in or rex.X vpsllq sub rex.W mov jae movabs retq and sbb rex.WR adc mov shll mov pop xchg neg insb jle add cmp jb ds mov repnz int (bad) stc xorl add mov loope popfq pop (bad) shrl lahf idivb xlat (bad) jno push lret push test and adc rcrl rex.WRX lahf pop std callq fmulp (bad) (bad) rex.B movslq rcll adc in orl (bad) xchg stc lea imul (bad) jrcxz jmp retq movabs xchg cli lahf cmp rex.WRX mov rex.R jno xchg addr32 lods cmp int3 (bad) mov xchg (bad) icebp stc sbb mov (bad) es movabs and sarl outsl mov rcrl cmp or repnz xor add cltd and sub (bad) rex.WX rex.W pop add in adc jl sarl xlat shll xor (bad) jmp mov (bad) and sahf insl rex.WX xor repz mov xchg push (bad) adc xlat jmpq jb sahf (bad) rex.WRX xlat retq sub adc vpand xor xchg pushq and mov movsl cmpsb stos repnz cmp movabs data16 adc sub repnz add test xchg or rex std cmp (bad) (bad) rex.WRX addr32 mov add (bad) lock mov (bad) mov rcll lret adc lea rcrb insb add sbb test jno test loop rorl rex.B ffree mov stos rcll push (bad) cmpsb out rex.R (bad) out mov scas jle sahf out data16 retq fisttpl sahf scas push test add mov cld fadds jmpq rex.X rex.RX (bad) jg (bad) rol sbb pop (bad) push mov fsts cmp in (bad) jno addr32 (bad) fld and fs (bad) sbb retq and or xchg icebp add (bad) mov sub xchg or callq jns xchg adc shll rex.RB mov and mov jge retq rex.WRB (bad) iret mov nop adc lret stc (bad) jae xchg xorl (bad) mov rex.RX rex.WX pop jl push (bad) loop sub imul mov (bad) test test sbb int3 pop pop mov (bad) (bad) in stc cwtl imul sbb (bad) movabs iret and sarl movsb sbb xor and (bad) push roll test pushq nop out lret (bad) mov pop mov jbe jmp xchg movabs lods rcr stos rorl loop mov shrl mov cli incl adc ss (bad) hlt pop mov push fnstcw jne (bad) pop jge int3 pop sahf fidivl mov fist movabs mov (bad) (bad) (bad) xlat sub rex.WX test push xchg pop xchg jl cs (bad) movabs mov int3 imul std mov rex.RB or mov pop add std lods cltd out movabs sti rex.WRB adc xchg mov scas loopne push js xchg adc rex.XB movabs clc rex.XB rex.RX retq stc jle adcb mov fidiv sbb (bad) lahf (bad) fist rex.WR jle fisub scas outsb loope or pushfq rex.RB jmpq lea push jb jmpq add cld loop int push lock push jmpq (bad) repz int3 in retq sbb or jb in gs jns mov mov (bad) (bad) ja cmpsb sub mov outsb adc (bad) push jmp sub (bad) add insb js xchg xor sbb movabs xor rex.R rex.RX repnz cmp pop adc rex.W fmuls jb sbb loop shlb addr32 outsb mov out stc and push add insl rorl or (bad) js rcrl (bad) adc retq loopne mov rex.RXB sti xor scas adc lods (bad) jae adc out shl xchg add sarb (bad) callq insb jrcxz sub loopne (bad) mov adc insl xchg (bad) push (bad) pushfq (bad) scas stc rorl addr32 movabs push cli rex.XB (bad) rorl (bad) adc jbe rcl cwtl add rex.RX mov callq popfq in test rex.RXB (bad) leaveq fwait adc or cmp imul rex.RX rol sub mov or bnd push add add cmp xchg lret sbb pushq cmpsl out (bad) fadd mov jno in lret fwait rex.R add rex.B add int leaveq shll (bad) loop and (bad) and adc cmp shrl nop enterq push (bad) mov loopne cmc (bad) (bad) adc pushfq cmp push mov shl ja rcrl (bad) cld rex.WB rex.WRXB cmp (bad) mov xchg cmpsl adc (bad) jb xor enterq lret rex.WXB (bad) rex.XB loopne rex rex.WRX (bad) callq jmpq xor (bad) (bad) fisubr pop and retq shr movabs (bad) rex.XB and (bad) fiaddl sub rex.WR idivb push cmp xchg mov imul (bad) xchg or cli insb rex.WXB xor es xor (bad) repz jg mov jno (bad) (bad) rex.WRXB sbb lock shl fsubrs xchg xlat shl rex.WX stos int in lods cwtl testb (bad) rex.B (bad) ds (bad) mov cld mov (bad) xchg and shl cld lret scas push lahf rex.WRB fadd sahf movabs push nop pop xchg ss enterq (bad) fldcw cld (bad) fwait hlt loopne xchg es and mov (bad) adc jp cmp mov movl mov and fxch rcrq imulb in stc add jle rex.WXB movslq movabs cmp imul std or mov xchg movabs lahf sahf push rex.WRB rorb clc xor mov pop jo (bad) or xor jg fwait sti and outsb lea loopne xchg in sahf rex.WB sub cmp (bad) sar (bad) adc jns rcr xor mov insl out (bad) xor in jl pop in mov jp xlat sarl int roll fisubl stos or addb gs jae loope hlt (bad) repnz mov movabs cli movabs xchg sar pop push sbb pop and cmc int roll imul scas rorl and cmpsb rex.XB in mov sbb push jp sbbl int or cltd pop fild in shrl or repz std rex.X iret rex.R mov mov movslq sbb rorl pop imul jp mov fimull sub pop jle and gs (bad) repnz (bad) (bad) xor insb (bad) xchg shll (bad) xor lret (bad) (bad) add sbb addl cmp rex.B or rorl test mov add pop xchg js xchg mov pushq rcll mov add leaveq rcr (bad) imul rcrl or mov (bad) sbb testl andl gs loop sub scas rex.WRB push rol adc rex.W es add mov shll int push push pushfq movabs fsubl sti or sub xor pushfq lret lret add (bad) (bad) jno pushq push gs test fcmovnbe (bad) int3 flds lock xchg mov rcrl cmpsl push shr rex.WB rex.RXB rol cmp adc mov popfq mov add clc stos jbe rorl in fistpl rex (bad) loope jmp addr32 jmpq in cmp scas leaveq fldt add add (bad) (bad) sub cmc outsl rex.WB rex.RX leaveq (bad) rorb sub lret (bad) icebp rex.RX in enterq (bad) cmp fnop cltd in (bad) add roll or xchg fs rex.WRB fidivrl leaveq rol imul sbb in (bad) icebp (bad) jno (bad) jp sbb outsl (bad) clc rex.RX movabs in (bad) pushfq cmp jns roll sub roll rex.WXB mov jl in rorl addr32 push cmpsl lret int3 rex.WB popfq es pop sub (bad) shlb (bad) loope xchg (bad) xor push adc or clc insl bswap lcall rex.WRB mov (bad) cmpsl (bad) cld popfq sub and mov sbb in or (bad) std lret push or lahf (bad) rolb rex.WRX and fwait (bad) rex.WX mov pushfq sbb xchg and inc lahf and (bad) add lods (bad) movslq callq jno test cmpl mov fnstenv cld out push rcll xorl sar rex.X (bad) xchg movsl adc jnp jo je jp shll movslq leaveq (bad) jno xchg jbe adc xchg outsl (bad) cmp push pushfq sarl jno push cmp vpunpcklwd fwait test sbb cvtps2pi (bad) rex.RX pop movabs (bad) sbb jns and sbb xor pushfq movslq fnstsw int mov or (bad) sub push rorb (bad) push (bad) xor in movabs (bad) mov rol shll jns mov rex.RXB jmp js cwtl (bad) xor or fstps cli adc rorl iret fucomip lea rcll or mul insb rex.WR push fidivr mov rcrl gs ror mov iret xor (bad) adc sub mov and rcll jl (bad) (bad) xor movslq mov in sub clc xchg push sbb push jrcxz ds pop adc cmpsl mov push add mov mov (bad) ss sub (bad) push (bad) add rex.WRXB retq rex.RX fisttpll rex.B retq xchg (bad) xchg jmpq xchg add icebp (bad) mov imul rcrb rex.WRXB cs in cmp mov shl in (bad) xor (bad) movabs callq rex.R pop cmp rcr mov popfq shrl cmpsb mov rex.XB cwtl pop movabs (bad) in scas sarl (bad) xlat (bad) rol and mov or push jle adcl pop jge retq rex.WRX retq test shl rex.WB addr32 sahf imul sbb (bad) mov rex.WX rex.WRX adc (bad) sahf enterq fwait adc adcb pop sbb jrcxz and loop pop jno (bad) lret adc rcl (bad) lods add rex.X repz cs pop (bad) mov (bad) mov icebp (bad) decl and push push xor enterq (bad) jbe loope and or fldenv rex.RXB movabs ss (bad) test cmp mov pushq add cltd rex.RXB or out (bad) xchg or xchg std vpmovsxbd adc lea mov xor push clc lock leaveq jno callq (bad) nop (bad) (bad) add pop ficoml push mov cmp ja jbe stc enterq (bad) jae adc xorl cmpsl xchg or or (bad) xor xor loope (bad) int3 rex.WRX adc fimull lahf lahf or xor jo mov (bad) sub jne mov stos jns pop add notb (bad) divl jae add leaveq fchs out testl sub sbb clc rex.RX sar ds fmuls loopne loop adc xor flds (bad) stc adc movabs jmpq sti fldt mov rex.B rex.RX jmp pop mov rex.WX mov out pop movabs sbb hlt add (bad) fiaddl fmulp add add add and ror pushfq mov (bad) xchg addr32 cmpsb rcrl sahf (bad) and adc (bad) fcompl (bad) ja pushq (bad) mulb fbstp push rex.WRXB pop movabs add stos out (bad) mov rex.WRB rcrl lret cmp mov (bad) sti ja (bad) (bad) retq scas leaveq push jno (bad) sarb jnp jg (bad) scas (bad) sbb adc movsl retq add (bad) xchg cwtl shll adc and or and movslq (bad) test sahf popfq sub int jl jg and repz xor test add scas (bad) sbb int stc pushfq push test movabs pushq jbe rex.B adc (bad) movabs outsl fs pop je (bad) (bad) out mov lret add xchg push sub (bad) mov xchg sub lods (bad) callq loope (bad) sbb adc rex.R (bad) rex.WRB xlat xchg out (bad) icebp push pop or (bad) jo xchg movabs mov fwait rex.RB test es mov (bad) shll adc int jnp lcall int3 push (bad) mov jp sbb imul movslq mov mov enterq icebp rcrl hlt (bad) outsb sbbl jnp add callq lock pushq or xor mov (bad) (bad) (bad) (bad) fbld (bad) int3 rex.RX (bad) mov (bad) subb icebp testl roll xor (bad) addb je rex.R test (bad) (bad) pop repz jp (bad) add jg jl xchg movsb pushq push jge jmp jp pop pushq imul rex.X lock cmp cmpsl mov jg jno jns rex.W (bad) icebp mov or add andb (bad) mov out pop and cmp retq js std lret xorl data16 movabs lods (bad) mov lock mov rex.B sbbb and in rex.RX rex.B pop xchg and repnz sub (bad) add (bad) push pop xor mov sbb rcrl xchg (bad) loop push out cmc or jnp sub xchg cmp scas cmp (bad) in jbe jle rex.B rex.RXB callq xchg push shll mov add push jo or ja (bad) lahf mov push push jno test pushq rex.WRXB cmp int mov rex.RB and (bad) mov je rex.WXB xchg cli or cld shll movabs cld outsl jbe adc push and rcr mov and adc (bad) loopne (bad) jne or stos (bad) xor cmpsb sbb push roll add roll insb retq ror xchg stos push rex.WRXB gs (bad) fisubr adc fstps lahf (bad) (bad) and or jo rex.RB push cmp gs (bad) xor retq and push sarl repnz lret cmp mov jbe rex.WR repnz adc (bad) adc mov ja test cmp cmpsl rex.RX mov test rex.WRB stos lahf pop retq sub mov mull rex.WXB xor (bad) mov jb fldenv xor mov cli lret mov mov jle out (bad) movsb in mov and (bad) xor (bad) callq fwait rcll lods repnz addb mov pushq sarl xor out push testl pushq (bad) fnsave mov jae syscall cmp push gs sarl andl in test xor push out mov pop pop cmp rcll (bad) (bad) movabs leaveq jnp lret callq or rorl pop add fwait xor add test lret addl jb sti int (bad) rcr push mov adc or mov sbb sbb or rcll (bad) idivb rorl (bad) jae adc ss pop rorb stos cmp adc (bad) or and (bad) mov or in mul fldl2t (bad) shrl inc loop negb int add imul movabs (bad) rex.WRB fwait pushfq mov rex.RB fimul xchg add adc in sahf sahf sbb (bad) rcr (bad) jo lods (bad) sub (bad) mov fnstenv sahf sbb jns adc pop imul push std adc mov (bad) cltd mov (bad) cwtl lahf cmp pop cmpsb je sub mov cmp adc stc jmpq xorl retq (bad) sbb movabs mov fsubl adc jg adc movsl (bad) icebp and mov pop add enterq rolb xchg mov addr32 (bad) and (bad) mov shl mov push and mov or movabs jnp repz js (bad) fcompl sbb rcrl mov rex.WXB rex.WRXB mov cmp add rex.WR fbld pop sub mov sbb stc xor test push test (bad) insl jrcxz jo pushq jl xchg mov repnz repnz push adc mov ss data16 and movabs pop jnp rex.R xor push add add xchg (bad) or jl icebp addr32 stc hlt xchg xlat in ja (bad) xchg lock test pushq cmp mov (bad) rcrl mov sbb ficoml pop add out xlat (bad) push sbb (bad) pushq loopne rorl jns je inc jmp cmpl in mov nop sbb mov stc add rex js rex.WR sbb stos sub orl adc xchg repz jle xor movabs sub loope cli jg xchg and rex.W rex.WRXB jg es rex.WR incq iret cld gs movabs sub (bad) insb and (bad) xor sub andl or sbb in (bad) outsb sti shll iret fnop pop test loop or xchg (bad) (bad) faddp mov push movsb out insl adc rex.WX push callq in sti subl int rex (bad) mov (bad) fist push sbb rex.RX (bad) xor vpsadbw out lock fldcw fsub add cli rol (bad) sbb or or (bad) (bad) xor sub mov (bad) pop movl movabs out add (bad) cmpsl imul (bad) xor lods popfq push lea or pop lods retq movabs xor (bad) enterq sbb test je (bad) (bad) shrl (bad) xchg shll mov or in movb flds pop add jne shrl rex.RX sub mov repz movabs xor pop cli cmp repz fcmovb cmpsl (bad) testl mulb (bad) cmc sub out jno std insl add cmpl roll (bad) (bad) (bad) mov rex.RXB repnz rex.WX fwait icebp mov movsb lock (bad) sub rorl rex.WB (bad) xor andl pop pop (bad) pop xor xchg sbb sub rex.WRX enterq (bad) outsl rex.WRB (bad) pop enterq fld mov pop (bad) push (bad) xchg rorl lahf cmpsb roll (bad) and addr32 rorl and (bad) xor (bad) callq push xor rex.WR nop mov rex.R sbb mov and xor ror sbb mov sbb xchg out mov imul sbbl or lahf gs rcll retq cmp cmpsl xchg rex.WR fsubrs mov test repz xor jae retq (bad) rex.WRX cli adc out movabs (bad) (bad) jo (bad) and adc add incl jg mov jno xor shll rex.WB add cmp (bad) in ror push fnop push (bad) loop xlat cmc (bad) sub fldenv movabs (bad) addb add cmp and sub (bad) movabs int rex.WB jno js je cltd lods xlat (bad) mov mov data16 cmp ffree cmc (bad) xchg xor loope mov and test jne (bad) scas fucompp movabs mov adc sahf pop add rcrb add cmpsb gs add add or or and fs cmp sub jmp shll rorb sbb cmp and sub jno add out xchg add (bad) add rol leaveq (bad) cmp sahf rex.WX test and mov out mov push push je mov rex.WRXB cmpsl test jrcxz enterq stos mov (bad) pop mov (bad) cmp idiv sti pop fdivr shr (bad) roll (bad) or rex.WRXB or xchg movsl or iret and shll lahf jg scas rex.RXB mov rcll and rex.B xor (bad) sub movslq out push pop sar mov lock cwtl mov xchg (bad) rorl lods xor push xor rex.XB shll (bad) (bad) (bad) xor stos pop sbb pop (bad) or rcrb rex.RX movb ja cmpsl rex.B xchg (bad) mov enterq jrcxz xor add rex.WRX add sbb rex.WRB mov roll add rorb cld rex.R insl stc enterq xlat lods (bad) adcl shll addr32 or mov rex.B and callq lret popfq repz (bad) sub sbb mov outsb mov int (bad) shrl mov xchg mov cld (bad) push lods rex.W rex.XB ja (bad) cmp (bad) xlat lock (bad) push sar push xchg pushq sub imul imul xor xchg push movabs lret loop jmpq sbb xlat (bad) ss rorl cmc stc int3 jle sarb rex.WXB mov in mov clc cmpsb (bad) xchg sub roll jne orl add sub xor add xor ds fs retq fsts mov push repnz xchg lods lods shll or lea (bad) cmp push cltd adc je cwtl sarb movslq mov cld rex.WRX xchg enterq cmp push test and (bad) (bad) push (bad) adc loope,pn int xchg mov notb rcl pop pushq pop add rex.WRB cmp loope fldl mov jae add mov clc xchg cmp sti (bad) insb retq (bad) add mov mov out and pop xor (bad) test pushfq int es sub (bad) fld test fnsave stos test jno ror add jp add jmp pushq add xor (bad) loope mov (bad) lret imul pop cld (bad) ja data16 fwait rex.X in rcrb cmp mov rex.WRX rex.WB rcll test popfq rcll (bad) sarl cmp fistpl stc adc cmp (bad) mov xor test fs add add std rex.WX stc or adc enterq pop fldenv test test lret xor popfq jl sarl adc sbb jmp xchg add pop sbb or (bad) or xor lods movabs jne push movabs (bad) pop loope enterq jo add es rol jns js add (bad) callq add rex.XB (bad) out shrl xrelease add mov (bad) fidivr int3 movslq rcll fmuls roll cmp xchg rcrl imul (bad) and in (bad) notl pop jmpq test rolb js rcll retq (bad) in enterq and sbbl mov insb sbb cmpsb (bad) lahf rex.B add scas jns mov cmp push cmc mov hlt test movabs gs shll rex.RX pop and push scas movabs fwait xchg and pop add nop push rex.XB (bad) cld repnz sbb sub and retq icebp (bad) rorb (bad) add test pop movabs rcrl jrcxz (bad) pop (bad) (bad) lods sub data16 mov rorl loop loopne shl pushq retq (bad) sahf or out add and popfq movslq sbb hlt test fisubr pop (bad) (bad) movabs scas cltd add rex.RX rex.RX lock push pop sarl sti mov fldenv (bad) fsubs mov test in add or xor (bad) mov callq sub (bad) mov orl sahf mov rex.B jae test imul and in retq jg loope shr (bad) add (bad) jb cmp rorb ror pop (bad) lret add and lods push jbe mov repnz (bad) mov cmc add int sbb cmp sub out (bad) pop sub cmp mov (bad) (bad) pop mov (bad) mov roll (bad) hlt rcll pop sub (bad) (bad) sar xchg cmc sahf jae (bad) pushfq pop cmp sub add cltd mov pop mov (bad) ds int3 xor int movabs adcl lods rex.WX cmp jp cli (bad) icebp in mov imul mov (bad) std popfq sub retq jne rex.XB add (bad) iret js (bad) push mov and shrb retq stos cmc cmpsb negb adc je sub clc (bad) adc (bad) fild push (bad) scas cld xor mov jmpq ficom rex.WRX adcb (bad) pushfq cmp rex.RB in add repnz es hlt push stc scas and xor faddl imul test cmpsl xlat mov fldl sub xlat rex.WX cmp mov sbb cmp pop or addr32 jb,pn jmpq mov adc stc xor mov (bad) lock lret (bad) imulb rex.WR fisttp in rex.WB (bad) lea (bad) mov (bad) lea or clc out movabs retq outsb addl sub sbb mov (bad) xchg jo push insb push xchg rex.WR (bad) orl lock enterq mov sahf movsb mov roll pop rol push sub and fcomp je sbb test xor adc jp add xchg shll xchg rolq pushq rcrl push roll rex.WRXB movslq (bad) in out jns test cmc and jle adc fsubrs (bad) jae xlat or mov movsl (bad) test rex.B jrcxz lea loop rex.RB jno insb sarl push callq jo fst mov rcll or test scas adc mov movabs mov xchg mov sub orl xchg add adc (bad) insl ja mov mov test icebp test mov or callq xlat cmp rex.WRX mov jae in add outsl rcrl sbb je cs jae callq cmpsl cwtl jns sarl jbe (bad) test lods add movabs adc sub (bad) movabs pop push jnp jae rex adc fisub pop jno (bad) imul push xor adc or lret (bad) js xor push (bad) ja cltd retq (bad) jb fwait (bad) iret in xchg rex.RB sub test rex.WX insb stc cmp mov divb leaveq movabs (bad) movsl mov push and (bad) out idiv fldenv in adc xchg rcll xchg cmp fildll cmc lahf out rex.WXB fsubs sub adc out sbb add jrcxz and sub adc sub rex.RXB imull mov cmc (bad) lret shrb insb fs mov mov out (bad) mov xchg (bad) push mov adc (bad) (bad) movb or popfq (bad) cmpsl int3 insb xchg jno addb jg mov jae and lock (bad) popfq pop cmp mov adc xor xchg adc cmp sbb es rex.B cmp rex.WRB rex.WRXB int jrcxz out sub popfq adc cli xor int jmpq rex repnz sub mov stos rex.WRXB mov lret test xchg cmp adc rex.XB insb (bad) mov (bad) lret clc cmpsl rex.W (bad) (bad) cmc in pushfq add retq sbb (bad) roll hlt (bad) or enterq jns imul jmp test jbe,pt (bad) xchg sarl mov or jae rex.WB repnz rex.XB mov sub out sbb stc cmp (bad) lea out lret icebp mov (bad) movabs test imul retq or xchg xchg push mov mov cmp test pop (bad) test cmp pop pushq adc pushq (bad) jle shll mov jp pushq gs insb xor xchg rol data16 (bad) addr32 (bad) rex.WX mov xor stos int3 jrcxz movabs rex pop fs rex.WRX rex.X sti rex.XB push xchg or mov sub iretq stos fidiv cmp (bad) (bad) jmp loop push out (bad) xor retq or jno jae test mov (bad) (bad) loopne rex.WRXB xchg mov sub sub mov (bad) repnz movabs pop (bad) (bad) mov mov mov xchg sahf loop adc (bad) enterq ja mov jns xchg rex.RB sbb (bad) jg and (bad) movsl (bad) repz jge callq adc rex.WR (bad) fiadd sub stos ja leaveq (bad) rex.RXB mov rex.X mov sbb insl fwait sahf mov cmp cmp movabs loopne int3 pop adc mov push (bad) jns js cmpsb stos sbb jge xchg adc hlt add rex.WRX std rorb fwait xor sti pop callq mov sub pushq rex.RXB (bad) jo sbb int3 movabs xor int3 mov andl xchg or (bad) mov retq sub repz xor cmpsb popfq mov loop sbb repnz xor int mov stos jmp cwtl icebp jle iret clc (bad) (bad) sbb or rex.WR rol jo pop rcll sub sbb js and sbb sbb and mov mov mov xchg mov fisttpl cmc (bad) push xchg jae retq sbb shl xchg sub xchg rex.RXB in xchg lret divb retq bnd callq rex.WR fadd mov retq icebp jrcxz sahf mov jge rex.R retq movsb mov add adc rex.XB or or jae loope gs and fstsw cmp outsl loope rcrl imul lret (bad) movsb rorl fstp cld out in repnz sub lods sub addr32 jrcxz adc retq insb je pop mov mov (bad) mov or stos sbb rex.X rex.R jnp (bad) jle cmp rex.WB bnd rex.WRX (bad) repnz (bad) sub (bad) fidiv orps imul (bad) gs or and xor hlt cwtl cmc pop test rex.RXB movsl mov repnz pop rex.WRX mov mov in (bad) enterq (bad) fs rex fwait xor shll sub sub or (bad) sbb xor ljmp push rex.WX xchg fyl2x psrlq std (bad) cs sar and mov cmpsl (bad) scas (bad) (bad) and and pop movsb (bad) retq repnz cli mov loopne jbe loope cmp sahf fdivrl add outsb mov cmpsl or (bad) gs rex.WR rex.WXB cmpsb (bad) add test sub ror (bad) gs mov ficompl mov rex.R movabs jge movsb addr32 (bad) leaveq push rol mov (bad) (bad) insb and mov fnstcw jnp callq (bad) rex.WX test sub movabs or rex.B (bad) movabs sub add adc cli (bad) sar lret rex.RX ror xor sbb jne test adc fisubl cmp clc mov loopne fist pushq std and sbb adc test mov faddl jb (bad) scas add add pushq movabs test sahf fiadd cld jo adc ja pop mov xor (bad) mov push (bad) movabs scas movabs jge push adc push out ss adc (bad) hlt rex.X mov (bad) (bad) fldcw sbb movabs rex.RB jae sub (bad) jnp xchg rex.WRXB (bad) (bad) rex.WX cmp test movslq leaveq imul or (bad) rex.B mov sarl (bad) in andl jns retq xchg sub (bad) ss or and mov rex.WX repnz cmp jo cmp pushq data16 jmpq (bad) je xor rex.W mov fldcw test (bad) sahf rex.B decl (bad) hlt mov rcll and clc (bad) xchg cs scas sbb (bad) pushq (bad) sub in push fs mov lods jg repnz jbe (bad) (bad) cmc rex.WRB xor (bad) movabs jno popfq faddl rorb mov rex.W add rex.W movsl (bad) rex.WB sbb sbb or movsb mov (bad) adc (bad) add or mov jb sarl es sub xchg lret sub add xchg int3 (bad) stos rex.B rex.W xor and rex rex.RB rcrl add ror adc in fwait mov rex.WRB adc mov push jmpq or xor (bad) or stos fwait shlb jg (bad) movabs add (bad) (bad) cwtl lahf cld (bad) imul shr nop xor or (bad) or je sbb std (bad) jmp loope cmp lock loop stos cmpsl movabs rex.X xor mov or xchg or xorl sub mull xchg cwtl stos roll enterq mov rcr shlb es lods lret movabs sti (bad) lods mov mov (bad) pop mov test sub cmp stos rcrl push xchg test movabs (bad) mov rex.RXB push mov imul pop pop pushq roll jno (bad) ficompl (bad) sahf push jns (bad) in rex.B repz xchg push mov pop incb in or lret rex.WRB cmp cmp jo fnstenv lock sub nop (bad) (bad) in lret rcll movabs rex.XB xchg xchg repnz pop fcoml stos ljmp int3 in mov movsb lea (bad) (bad) test stos xchg push (bad) jle fcomip sub adc insl push and movabs and rex.WRX jne sub cmp jp push or fs sbb jno xchg sub xor iret roll sti cmc mov sbb (bad) adc (bad) (bad) (bad) or mov (bad) add mov (bad) mov popfq clc mov testb (bad) addr32 cwtl cs (bad) in sbb rex.B stc orb test sbb std add push (bad) rex.X add xchg jl xchg sbbl shll outsl data16 mov movb xchg jns mov mov movb cld (bad) and mov notb retq sub (bad) (bad) sbb jns cltd mov jg repz (bad) sub (bad) add push rex.WRXB cmp cld sbb fmul movb jmp out jno scas rex.WB fwait stos adc xlat sub adc rcrl push sbb or rcl pushq sbb rcrl retq cmp (bad) and (bad) jl sub push test mov cltd clc rex.WB xchg rex.XB (bad) in rex.WXB sbb jns out mov sbb xchg mov movabs sub adc hlt or int3 or fsubrs retq pop sbb loope mov jno ja movabs push (bad) jb leaveq jno loopne rex.B stc stos popfq stc repnz lock jb gs (bad) in or xor rex.RB fistp jo (bad) jp adc negl xor (bad) adc push lret mov mov test mov and retq push xorl mov jp and jp mov add or int jl rex mov or xchg (bad) (bad) cmp and (bad) adc sti imul jne xor sub mov rex.B lock (bad) rex.RX xchg ss jbe jne rex.RX rex.WRX iret (bad) or (bad) add (bad) sub movabs sub rex.B je xor clc fnstcw rex.B and ja and retq mov fsubrl out sbb mov push loop pop xor cmp (bad) loope hlt xchg movabs xchg mov add xor sub movsl rex.WB xchg xor xor (bad) adc (bad) clc and push (bad) rex.WB jno jo sbb lock loope clc ja add cmp mov shrb test outsb lock decb adc mov (bad) sahf and int fdivrs sbb clc incl ds rex.WB std (bad) mov pop adc hlt xchg add jmp xchg enterq mov divl mov in roll pop insb movabs (bad) xchg sub (bad) pop adc leaveq rex.RX sub jp sub and jmpq pop xlat and shr loope push (bad) or (bad) leaveq movabs jg insb add mov sarl retq fcomp jl out lret or or callq test sub xor rex.WXB xor fdivrl cmc cmp out repz lods (bad) cwtl test rorl sarb lret outsb (bad) out push rol (bad) stc jle roll lret hlt mov jp sbbl addr32 cwtl xor ror pop adc or cwtl (bad) adc fwait push je (bad) jge lahf cmc pushq xor cwtl rcr xchg xlat rex.RB int3 jg (bad) test mov shll rorl fnsave clc (bad) shl and test (bad) stos movabs xlat movsl sarl std (bad) mov add test jns add ucomiss faddp cmp cwtl mov (bad) mulb mov or ja stos shl (bad) rex.WRXB xchg jl iret mov lods rex.B jae lods rex jrcxz push cld test cltd in sbb movabs lods mov xchg mov (bad) test insb rex.X rcrl (bad) xchg mov sbb enterq subl lret or mov ds cmp rex.B rep (bad) push (bad) movl movsl add (bad) xchg cmp jmpq icebp add pushfq test retq hlt rex.B lahf callq retq cld movabs (bad) (bad) repnz insl xor lret div insb sbb add and xchg xchg xor or subl pop stos movabs rorl out int in lret (bad) (bad) adc xchg iret jns xchg fild xchg mov (bad) mov (bad) lock mov scas clc addr32 (bad) (bad) (bad) and mov nop pop (bad) (bad) orb (bad) add sbb shr or (bad) pushq movabs data16 retq scas in xor and mov or adcb sub mov rex.B rex.WX loopne lret (bad) movabs scas sbb (bad) mov sar push xor (bad) (bad) pushfq not roll movsb hlt (bad) data16 in (bad) (bad) mov stc (bad) adc xor mov rex.B adc shrl cld shl and sbb (bad) popfq repz mov stos rex.B cmpb cmpsb jg pop out movabs (bad) negl mov stos add fildl pushfq in inc fdivrl repnz jbe rex.RB jrcxz,pn int3 rcrl loop rex.WR lock shrl sbb rol xor js mov jp cmp movabs out insl add xchg leaveq ds (bad) cmp loope rcr rex.R stos rex.WRXB rorl sub add xchg sti sahf add ss rex.W pop outsb and fildl lods add int3 sbb adc jp mov xchg cmp cwtl xchg cmpsb mov imul pop jmp (bad) pop pop test stc ds cs mov (bad) mov cmpsb loop sbb jno outsl sti xor adc clc enterq lret jnp cmp xlat (bad) movabs int3 (bad) mov int3 xchg adc pop sbb test lock cld loope and (bad) push repnz shl movabs cmpsb sar out mov jmp adc (bad) xchg adc repz jno sub xor mov stos or jmpq subl fwait cwtl in add or (bad) and (bad) (bad) (bad) (bad) (bad) pop mov adc rol out mov add add lret rex.WRX in mov (bad) neg (bad) fstpl and js (bad) jne pop rcl mov push cs and rex.WR ss rex.WRXB sbb leaveq stos fmul rex.B xlat lret flds in sbb sahf (bad) jb jns jne push xor sub imul jmp ss fcomp (bad) push rorl fcomps and (bad) pushq jge addl fcoml xchg movsb mov rex.R repz test (bad) ds push pop cmpsb sbb in movabs lahf movsb (bad) imul or retq sar fisttpll loope (bad) xrelease fimull lahf jno mov mov fcomi loop sbb rex.XB iret retq lahf adc jmpq or test or test rex.WB in (bad) pop add jmpq movabs jb (bad) jg or pushq in mov xorl mov outsl mov add sbb int3 xor or shrl sarl jge outsb pop rex.R test xchg or imul retq gs sbb outsb ss rex.R ffree test push movsl test test rex.XB pop (bad) pop scas movabs sarl fisubr cmp jg jrcxz mov xor lret iret xor or test (bad) outsb jb movsb sarl pop cmp jp rex add pop rex.RXB (bad) (bad) (bad) adc sub sub mov jg cmp sbb loopne mov rcl (bad) xchg rex.WRX (bad) jbe lret roll rex.W (bad) sub mov int3 fnstcw shr adc rorl mov movsl (bad) out jg in lret pop cmp ja rolb rex.X repnz jmp lret andl mov mov xchg jns jmpq (bad) test je mov jno rex repnz out cli add (bad) movslq (bad) mov jnp push (bad) adc in mov sub (bad) imul lret (bad) movslq retq adcl (bad) (bad) (bad) mov (bad) rex.B rex.RX stos xor push int rex.X loope scas addr32 xor sub lock ror mov sahf rex.RB adc sbb sub rex.WRB xor lock xor cmp loope stc (bad) xchg xor fs leaveq divb sub rex.WX sub mov (bad) hlt js callq (bad) mov loopne xchg add stc lea cld (bad) rcr jo push test or or (bad) xor (bad) cmp pop xchg enterq push sbb jle xor mov cmp lret xchg (bad) rcrl in jne push in test xor outsb (bad) sarl fldenv adc or ds in mov push cli rcrl (bad) rex.WX jl jnp rorl and pop xor insb rex push rex.X (bad) xchg push retq (bad) add (bad) mov pmullw rex.WR add (bad) xor (bad) lods mov popfq lret (bad) rex.WRXB movabs imul cmc shll movb or sub adc pushfq sub idivb clc cmp shlb sbb ja add mov (bad) hlt pushq jrcxz sbb push sub in mov (bad) mov int lret rcll jae (bad) loopne std rcll sahf shrl or pop movabs cmpsl (bad) push rcll lea jb icebp roll xor mov push sbb fstl in xor iret out sbb shl callq fstpl sbb xor sarl push cmp jmp rorl jb rex fmuls js jle sar clc movabs (bad) jae in incl sub rex.B (bad) xadd imul jle (bad) (bad) sub movabs shrd (bad) rex.WRXB ss and retq or pushfq xor lret sarl gs rcll jrcxz lret jnp pushq add sar cli loop and or addr32 mov faddp ja (bad) out (bad) mov cmp adc lock js xlat (bad) push jns add jo lods (bad) cmp movsl push (bad) push cld mov rex.WRX rex.RXB sbb jo push test out insb (bad) adc enterq (bad) xor in rclb mov adc imulb pushq (bad) rolb stos loope add addr32 inc cmpl lret jrcxz out xlat in stos xchg (bad) test jrcxz or stc in push fwait mov je movabs fdivp shr cmpsb cwtl pop cld rex.RB pushq cltd rex.X xor in roll jl cmc rex.WRXB test fdivp sbb (bad) enterq sub in add (bad) fcmovnb rex.W xchg or cmp ja pushq mov mov mov cld adc scas ja retq test cmc mov push (bad) addr32 jns movq lret repz sub (bad) xor jo stc mov insb and movabs mov add fs enterq (bad) ficompl lock mov stc (bad) callq rolb lea xlat xor stos or stc in int3 (bad) sub jne xor cmp adcl add (bad) or rex.B rex.RX xor sbb test jmpq or sub mov (bad) (bad) jp sbb pop (bad) rex.WXB rex.XB (bad) fs pop sbb clc fisub sahf test mov rex.WXB fstl fild sub jae retq jo jbe fdivr mov mov fwait movabs jge xchg rex.WR mov and jae push int and xchg lock rex.R rex.R rex.WRB (bad) pushfq cmpsb rex.W insl divb cmp xchg rcr movsb push callq callq pop xchg addl pop fdivr and add push push sub popfq (bad) in (bad) and test movsl int rex.WRX movabs sahf (bad) mov push push int3 and jno xlat cmp movabs cld leaveq adc movl fidivr mov add rolb sbbl add and (bad) callq imul add or mov mov lea rex.RB ds sub cld pop (bad) repnz iret (bad) test in xor xchg retq imul sti mov (bad) insl loopne jns add mov icebp mov vmovq int lret in sbb cmp fisttpl xchg ja retq (bad) jmpq sub subl rol and xchg xor jae loope mov rex.WRX (bad) and mov cmc in fcmovbe out (bad) rex.B int pop jmp out xor adc rex.B xchg adc cmp pop mov mov mov loopne mov sahf xor add out pop (bad) (bad) adc jmpq push mov xor or (bad) in sub lock out insl cld (bad) mov rcll mov gs mov imul pushfq psrlw ja cwtl lods and sbb (bad) jo shl jmp cli mov xchg (bad) pop outsb (bad) movsl (bad) push and (bad) lods (bad) jge sbb repnz (bad) stc (bad) mov movsb imul xor shl fs pop ffreep sbb or rex.WRXB rex.W popfq or rex.WX movabs mov cld (bad) stos movsb test (bad) cmc push icebp sub sbb xchg rex.RX sahf movabs popfq or (bad) jne mov rcrl sbb cltd (bad) movabs rcll loopne adc out xor fwait movabs pop xchg movsl test (bad) mov imul cmp add pop (bad) add mov gs (bad) (bad) push loop sbb loope mov rex.RX pop mov cwtl add mov sbb incb xchg xchg add xchg xchg push (bad) icebp pushq test (bad) xor hlt cmpsb push mov pop es (bad) add ffreep leaveq ficom stos add js rex.WX scas (bad) (bad) scas stc jrcxz cmpl sti sbb xchg loope (bad) add in adc int3 nop clc iret ja (bad) mov jae shll (bad) rcll (bad) fmul (bad) lods jle mov pushfq shrl push and add mov je nop sbb adc cltd push or mov fmuls nop (bad) jae adc xor jg jle rex rex.XB fistl shr xchg leaveq mov out and jl stc sub loopne rex.B mov or sahf clc pop fstp mov xchg mov (bad) rex.WRX mov in retq adc mov adc std sarl shrl faddp lods ja cmpsb (bad) sahf (bad) mov (bad) and adc psubusb je and movsl cs xchg (bad) lret (bad) movabs push sub in fcompl (bad) cmp insl movabs sbb movl (bad) loope fmul test (bad) in xchg callq lods and movabs rex push loope pop roll movabs jmpq iret jl push popfq movslq shrl mov (bad) mov int3 out fbstp (bad) test fcmovnb jnp or sbb sub xor mov pushfq (bad) pushq add retq pop in push push push subl (bad) (bad) (bad) (bad) cmc (bad) stc (bad) (bad) repnz (bad) pop cs rolb sbb cmp rorl xor mov lahf movsb adcb jb and sahf loope add (bad) (bad) cli neg lock jae loope xlat (bad) cmp int rcll lret retq repz outsb rex.RXB insb std push (bad) (bad) mov and (bad) minps sbb xlat mov in sub retq andb add pop cmp and popfq cmp mov pushfq lahf rol cmpsw add idiv movabs mov orl xchg int3 movabs rex.X shrl cmp push rex.W lret sub (bad) (bad) rcrl movabs and pop mov test mov (bad) sub mov mov mov rol pushq xchg (bad) (bad) shll sub sti push cli sbb pop sarl int jmpq mov (bad) pushq mov (bad) jno lods retq (bad) adc xchg rex.R and stc shrl cmp sub lea push shrl pop mov push out (bad) nop je fldcw xchg sbb cwtl pop iret rex push mov out rex.W roll mov pop notl and (bad) pop rex.B adc fildll mov movabs mov lret cld pop lea push add rex.WRB movabs mov fldenv sbb rcll (bad) cltd xor jp or add mov pop mov jne cwtl rex.B add rex.WR mov or adc sub (bad) pop cmp (bad) fsubrs rex.B rex.XB cmpsl fwait (bad) pop shr rex.W jnp outsl std (bad) cmp add nop jmp lret (bad) iret stc je rex.RX add sbb and (bad) sahf mov (bad) mov (bad) rex.W test (bad) mov mov gs (bad) ja jrcxz sub rex.RXB rex.WB movabs (bad) jle (bad) imul lahf addb sub clc nop push rex.R (bad) cmp rex.B cmp (bad) jnp lret fisubrl hlt and sbb jmpq adc lods mov (bad) shrl xchg add movabs cwtl (bad) in insb xchg int3 (bad) xor pushfq xor xlat pop xchg (bad) jbe js or rex.WR mov rex.W jrcxz sub ficoml pop lretq jns stc roll imul (bad) mov (bad) lret (bad) js or xor adc rex.WRXB sarl cs int lret cltd insl sbb sub rex.WX std scas mov jrcxz sahf rcrl test (bad) mov lock adc or and (bad) mov add rex.RB jge (bad) cmp (bad) fwait int3 sub shrl cmp rex.WR jae and enterq (bad) cmp popfq sub xchg xchg sbb rex.B xchg sub or (bad) roll xor fidivr push movsb hlt sbb (bad) es and cmc stos movabs callq (bad) in add js xchg gs adc jmpq mov clc sub ds mov (bad) es lock (bad) popfq rcrl pop in xchg mov rex.WRXB pop lret jge leaveq imul (bad) jno adcb shrl rex.R std rex.WB jp rex.WRXB shrb mov jne mov push jno (bad) stos repz stc (bad) iret and (bad) clc xor (bad) rex.WRB callq sahf xor rex.R jbe (bad) sub icebp jb adc rex.W or lods xlat callq fcomi in xchg (bad) mov out js pop mov pop rex.XB test mov (bad) pushq callq hlt pop lret mov stos (bad) xor lret xchg movabs cmp insl int jle,pt xor clc rex.XB push insb (bad) (bad) mov fistpll mov push pop mull mov fnclex cmpb lock cltd loope add (bad) sub (bad) pop fild repz sub (bad) mov js es mov sbb enterq mov not (bad) jg jns insb (bad) mov addr32 lret pop (bad) (bad) int3 fcompl add sub out pop (bad) faddl adcb rex.WR rex outsb pop or xchg movsl (bad) (bad) sbb mov cs jge jbe xor push mov adc (bad) test xchg pop fidiv add int neg mov rex.XB (bad) xor fcompl test fcmovb imul leaveq es rex xor rcrl jbe (bad) idivb pushq int mov (bad) out adc cwtl imul shl outsb rex.WXB lock sarl ja outsl sbb adc and jp cltd rex.XB shrl rex.W hlt (bad) std sub int sbb outsl mov pop (bad) xor shrl (bad) imul xor xchg mov int cmpsb test jl (bad) fdivrs mov scas mov push roll in pop push or movabs rex.RXB mov jns imul mov scas (bad) sub cmp rex.X mov (bad) sub std adc retq (bad) roll xor imul cmp pcmpeqw adc mov add rex.RXB loope mov rcl rex.WRXB fs rcll jns mov (bad) sub jb fwait adcl rex.B xlat rex.WRB mull stos sub or jns ss cld xchg fnstenv mov (bad) (bad) out loope (bad) std add shrl (bad) mov jg pushq popfq jl outsb flds xchg (bad) lahf sub pop rex.R mov add int3 push (bad) mov sub or sbbl stc mov xor add mov in jno cmp add cltd or (bad) jl pushq out or jo rorl movabs in mov fcomip sub push (bad) (bad) and stc ss (bad) sub rex.RXB lock rex.R int stos out (bad) (bad) rex.W (bad) lret rex.WX fsubl adc add jge push and test iret (bad) (bad) mov xor sub psrlw xabort cmp cwtl jb add (bad) repnz and retq mov mov (bad) lret xor andl rex.WR xor (bad) jae cmp fcoml mov cmc adc cmpsl and (bad) icebp clc in test push stos loopne leaveq stos rex.W int fdivr repnz (bad) mov std in (bad) (bad) (bad) enterq (bad) push lods jo movabs rex.RB scas adc retq lods lods fcmovnu pop pop repz (bad) mov sbb xchg sarl cltd imul mov (bad) (bad) cmpsl loop and retq pop movabs (bad) callq adc mov (bad) lret shrl mov push add adc (bad) and out cli in mov int imul rex.B and iret cmp push stos movabs or lea (bad) (bad) iret xchg (bad) shll in mov clc negl jge fsubr rcl jl hlt lret fnstenv push icebp idiv xor mov pop lret out xchg sub fistp and sarl insb iret sbb mov repnz lret (bad) lret sahf divl (bad) insl fucomip rex.WX lcall shrl test push rex lahf addr32 xchg (bad) adc cmp jno loop or (bad) outsb (bad) cmp (bad) stc es (bad) mov mov and mov int sub mov stc or fisttp (bad) mov data16 repnz in (bad) cwtl cmp loope cmc rex.B (bad) (bad) rorl subb (bad) ss rex.WRX ja and cmp in (bad) rex.W movabs lret xor jrcxz int jmp sti (bad) rcll fdivrl rex.WRX imul rol jrcxz jae mov in add mov (bad) mov xor movsb (bad) movsl or cwtl rex add movabs (bad) popfq iret or outsb xchg data16 and adc xor imul rex.RX (bad) xchg lods xchg stc mov xchg (bad) mov sarl cmp xchg (bad) and lock (bad) add (bad) sub outsl pop imul iret xlat sub sub mov stc fwait xchg (bad) xchg es movabs pop cli enterq repnz and (bad) jb movabs insl mov movabs fbstp rex.XB mov jae lahf (bad) mov hlt (bad) movabs push add cmc rcr (bad) (bad) mov out rex.RB rex.X xchg (bad) pop in cmp scas loope (bad) cld mov add loope sarl sub rol lods pop je push (bad) repz xlat test (bad) (bad) je jrcxz orb adc pop adc xchg movslq movabs ja push shrl movslq mov mov sub fldcw (bad) subl pop pop movabs or loope xlat rex.X rcl movabs xchg adc pushq xchg cmpsl xchg orl sub rex.XB or adc jl retq mov test xchg (bad) mov pop maxps lret (bad) xor push sub test pop or jl xor xor and add rcrl (bad) test (bad) jne test retq mov stos rcrb xor not rorl (bad) shr mov pushfq int lret push ja (bad) fisttp (bad) xor rex.WRB insl xor lret (bad) (bad) jrcxz (bad) mov lahf adc rorw movabs imul mov cmp add sbb addb sub or int3 iret shrb sar icebp pop (bad) (bad) repnz (bad) (bad) cs pop sub mov fstpt js add in outsl xlat or fs cli bnd divb rol std rex.R in clc mov pushq mov xlat cs add sub xlat sbb xchg (bad) fwait rex.WB or (bad) fisttp (bad) (bad) movslq jnp sub pop push rex.WB bnd (bad) or jo retq sub mov loop mov push sub mov rex enterq or ss imul sub movsb sbb rex.R int (bad) sbbl fwait cmp fcomip (bad) rex.WRX out push jo mov mov xor lods mov stos in rex es scas cmpsl scas (bad) cld (bad) (bad) jne rex.RB adc pop (bad) (bad) xlat cmp std rex.WRXB sub outsb andl (bad) (bad) push hlt push adc jl (bad) sub sub rol rex.RB rex.WB rex.RXB xchg pop adc out (bad) repnz sti rex.RB movsl fbld xchg fidivl xor jmp mov icebp jp fistp jo icebp lahf outsb sbb movabs in loopne (bad) movabs movabs repnz (bad) sub xchg xchg xor lret rex.B (bad) (bad) shrb pushq in leaveq jmpq (bad) cmp (bad) or jge mov jmp retq mov std xacquire jno mov pushfq lret (bad) jmp std int3 pop fidivrl cmpl fldcw jl or or pop out xor sub jnp fucom jb je loope pop mov icebp sbb movsl cli lods pop push nop (bad) (bad) (bad) movabs sub cmp xchg rex or (bad) pop fwait movb enterq jrcxz in fwait mov in jno fs scas loope (bad) xchg rex.W and xchg mov mov lret mov xchg ljmp mov rex.WB sub cmpsl rex.WX rex.WR (bad) testb xorl cwtl fistp mov pushq xchg and and rex.RXB (bad) iret rex.WRB and movabs cwtl outsb mov imul fisubr roll (bad) jmpq out movslq mov lock popfq cli fwait rorl shrl push mov rex.RX in or rorl xor sub fiaddl mov add pushfq data16 jp (bad) mov rex.B mov in scas enterq shll movabs out (bad) (bad) gs fisubl add adc mov xor sbb and imull xchg cmp addb nop outsb imul cmp mov sbb xchg (bad) cmp jg pop (bad) rorl add lahf mov xor cld sub adc rex.WRXB rex.WB cmpsl or insb mov push int (bad) jnp cwtl cmp retq imul std rex.XB (bad) stos vpslld adc (bad) pushfq ds adc test insl xchg (bad) (bad) rolb sahf lods pop rcr out mov (bad) (bad) ds cwtl add std sar rorb sub movabs (bad) mov mov iretw ss insl fwait (bad) fsubr xchg shll lods rclb jmpq imul out test ja (bad) retq and in movslq (bad) rex.B repz rex.WXB mov rex.WX movsb mov mov push (bad) mov sub pushfq or (bad) push and int3 sbb jo push cli mov (bad) rcr pop jmp or and (bad) jne xchg mov sbbb loopne (bad) sbb or rex.WRX jo loope adc mov lret lret xchg adc rex.B movsl mov icebp fisub repz add es mov mov loop pushfq test scas mov cli sbb rex.W xor cwtl mov push test movabs jmp test movabs (bad) mov (bad) xlat jbe movsb lods rex.WB loope loopne rex.RXB cmpsb add repz and nop xor jrcxz movsl mov rolb cmp pop enterq in repnz sbbb mov or clc cmp add int3 pop stos push ds mov repnz out stc rex.XB rex.WRX mov rol adc mov fisubr rex.B cmc (bad) rcrl xor mov (bad) xor (bad) and nop je (bad) xor jnp adc (bad) xrelease fs sbb xor mov test test repnz xchg jrcxz (bad) xor movabs adc (bad) pop lret xor insb (bad) int3 rex clc iret cmp (bad) mov rex.W rcll add jl vpunpcklbw and icebp xor inc or jl in xchg pushq addb xor test and out xchg lret xchg rcrl loope cwtl stos xor movabs roll xchg test jl or push std out hlt lret xchg in mov jno movsb je sbb test fwait mov and adc rex.B pop data16 (bad) jbe xor (bad) nop retq mov (bad) out cmp (bad) rex.W mov test xrelease popfq xor pop mov mov pop retq in fcoms (bad) mov jp (bad) add loopne insb jbe movabs imul or sub jrcxz loopne push (bad) clc int mov sub xor mov (bad) lock rex.WR outsb negl ljmp (bad) rex.WX cmp adc push cmp fimull movabs std sbb push sub or stc fadds mov sub retq in or movsb (bad) je rex.B sub cmc lahf pop mov sub out ss cs sbb (bad) mov pop jrcxz cmp push push sbb pushq in ficomp mov retq pop icebp es mov callw add test (bad) cmp adc xor (bad) adc (bad) xchg mov sub xor (bad) pop mov test fiadd lret sti rex.RB roll movabs xchg lock lahf rex.XB rex.R movabs (bad) xchg lods setne (bad) xchg mov xchg (bad) jle mov jge sub push fidivl sti es test int xor (bad) push mov sub xchg (bad) (bad) (bad) iret xchg pushfq pop rex pop rex.X je lret fwait test (bad) rolb or ss rep pop mov cmp rex.WX rex.B xchg loope rex.WR ror cmp sbb mov xchg (bad) (bad) ror enterq rex.WXB (bad) xchg pop sub push test rol (bad) popfq cmc adc xchg movabs test (bad) or push rex.WX rex.WRXB add sarl repnz xchg xchg mov mov push mov std jmp pop and rex.WRXB (bad) test frstor mov jg adc (bad) add jp add sarl xlat cld retq ds pop jg jge (bad) stos rex.X add rex mov (bad) (bad) imul sub loop and jnp cli (bad) mov cmpsb (bad) mov (bad) cmpsl push (bad) xor and fdivrl (bad) (bad) sbb jge mov (bad) inc jle pushq addr32 shrl mov rex.WRX in jrcxz and xor mov jmpq mov jg je jnp repnz xchg xor nop (bad) scas or pop negb leaveq mov adc sub rex.WRXB cld stos (bad) add cmp xchg jg in cmpsb xchg rex.W in shll (bad) (bad) hlt roll cmp andl jnp mov jg jge hlt lret enterq mov xchg scas sarl cli or mov gs cmp mov jbe mov sub and test fwait out push loopne jb xor rex.B jno jb jrcxz imul pop (bad) (bad) icebp (bad) xor rex.RX cld xchg jne mov (bad) mov (bad) and outsl pop idivb rex.RX mov rex.RXB and movsl (bad) jmpq rex.R rex.X rex.WR mov leaveq sub rex.WR movabs pushfq lods leaveq rex.B (bad) ds stc test rex.WRXB add pop mov (bad) sbb rolb insb retq cli int movd (bad) cmc (bad) xchg fadds xchg sub (bad) adc mov pop (bad) cmp (bad) rex.WXB sub add xor fimul lods sbb sbb movabs (bad) movabs xchg rex.WRXB rex.WRX movabs in icebp (bad) stos scas faddp cld jae xor (bad) push (bad) mov xchg and jno stc sub rex.XB retq fild sub in callq jrcxz pushfq jno adc scas repz cmpsw mov mov mov and pop or scas adc imul rex.WRX xor outsl pop cmpl add insb sahf xchg ror or sbb imul jnp (bad) int (bad) out int (bad) insb add test cmp int3 mov repnz pop stc rorl (bad) (bad) and (bad) jle mov rorb lea add in loope cmc (bad) mov adc xor sbb mov mov fldcw or rex.WRX rex.WXB fiadd (bad) icebp vmovdqa mov (bad) cs sbb and (bad) xchg jl retq rex.WB js sbb jo cld movabs stos sub movslq (bad) mov callq rex.WX movslq or movabs push rex.X rex.WRB add int3 (bad) sub (bad) (bad) and rex.WB rex cmp (bad) rex.WR fdivl add test fidivrl sub jne add xchg insb sub idivb mov fmulp (bad) (bad) rex.WR movabs mov and mov rex.B movsb imul (bad) jmp adc loopne fistl ja movsb jnp js sbb xor testl out movabs adcl add movslq push xchg (bad) movabs add insb out jge jrcxz fidivl pop (bad) rcrl iret xchg retq sbb rex.WB mov (bad) mov movabs hlt jbe iret imul icebp int3 stc leaveq cltd lock and xor adc iret add mov int3 rex.WXB mov rex.R (bad) retq lods rex.RX (bad) mov adc (bad) mov (bad) retq fldcw push and outsb or cmp rex.WR (bad) std (bad) bnd or lahf adc (bad) push loop mov xchg movslq int3 repz adc pop jne (bad) xchg (bad) and rol sbb lret jns fcmovb pushfq pop (bad) (bad) or xchg pop sub rex.WX cmc mov repnz loope mov rol or mov add rex xor (bad) pop or push add mov pop rex.X or xchg (bad) addr32 out lahf movslq retq test jl loope xchg cld jne sub mov (bad) push callq jbe outsl (bad) out sub cmp xchg (bad) sub (bad) xorb (bad) xor (bad) xor movabs mov rcr imul rex.WRB fidivr lahf clc (bad) mov shll rex.RB mov sbb add enterq add rex sahf (bad) loop cmpl pop sub (bad) ds imul movsl retq repz movabs sbb cld stc sub (bad) xor rex.X rorl adc insb xchg xlat adc outsl lret pop callq rorl mov and xchg add shrl sub (bad) hlt out (bad) faddp movsl rclb loop jle cwtl cltd in rex.B rcr and fwait lods or xchg insb pushfq xor adc add fbld repz std callq sar cs data16 xchg (bad) pushq in sbb rorl (bad) jno (bad) rex.WRXB rex.XB popfq in mov pop mov rcll loopne stc fadd roll pop pushq lahf sbb iret sub rex.WRB rex.XB sahf iret pop scas and shrl (bad) mov rorl or test pop bnd (bad) insl sub (bad) loop rex.WRX gs or cli lods push je mov ja push and mov pop in sbb rex.RX (bad) push jge roll cltd mov push loopne jno sbb push xchg and jge cld rex.WXB jge rex.WRB xchg xor insl scas (bad) sub jrcxz data16 int3 (bad) repz int cmp (bad) roll movabs retq mov (bad) mov (bad) (bad) ja fdivp sbb in xor and imul fwait lock test pop and xchg cmp and lret cli sbb xchg mov rex.RXB rex.WRB sbb mov xchg (bad) or pop push mov movabs (bad) push jno vcvtph2ps and cmpsb fisttpl (bad) push (bad) movabs rex.WX iret (bad) (bad) idivl (bad) scas jae adc pop add (bad) xchg lret repnz sub adc rex.R rex.RXB loope mov ficomp and rex.W jle or (bad) enterq cmpsb fisub xchg or (bad) je or push stc mov cmp jne (bad) mov push faddp repnz (bad) lahf mov mov sbb retq adc flds sbb (bad) stos (bad) push movabs adc sbb clc xchg add (bad) fisttp lea mov (bad) rex.W leaveq fdiv cltd xor ja mov xchg fs (bad) repz stos jnp mov imul movabs (bad) pop and rex.X (bad) (bad) jmpq and in cmc stc rex.XB fmul add (bad) pop add (bad) push push out int jne xor movslq loopne add (bad) rex.WB lock lea (bad) sub cmpsl flds movabs fwait mov add jns jno mov rex.RX (bad) sub cmp and pushq sub or rcrl pop sub sarl sti pop mov xlat cmpsl xlat movsb callq rcll (bad) jmp sub cmp (bad) jne mov jge and (bad) jno (bad) (bad) fildl sbb xchg fild in adc repz (bad) (bad) mov (bad) (bad) mul subl sub cmp jmp movslq mov or shlb sti push pop lahf loopne popfq xor (bad) sub popfq mov in test rex.WR (bad) scas sahf loope xchg lret (bad) neg mov test push fisub hlt retq icebp add loope movsl add add out pop and rex.WXB (bad) cld int divl rorb test jae sbbl je mov pop (bad) (bad) mulb jg or hlt clc mov (bad) std adc out mov xchg jne add mov movslq add (bad) iret xlat cmp (bad) icebp jle pop (bad) retq ss jno loopne mov adc (bad) (bad) test rex.WR xchg cmc adc retq mov rex.WRX jb sub rex jmp jae or lods testb in (bad) ja mov nop and scas push xchg loop mov jmp pop rex.WRX adc out rorl mulb sbb in adc pop pop rcll or cltd pushq cmp (bad) imul or movsl movsb retq int3 add mov roll and (bad) and xor in jo (bad) mov add fisub rclb in xchg out jo sbb rol out adc loope mov (bad) int leaveq add test jne mov cmp repnz (bad) mov std shll test xchg lret movabs push clc rex fmuls (bad) and movabs pop xchg xchg (bad) xlat xor pop rex.RB ds fld retq outsl test xor or pop pop adc shll lods shlb xor nop mov add shrl sbb pop push enterq mov mov fstps adc adc sbb ja (bad) mov pop fdiv fisttpl (bad) or sarb in xor movabs rex.WX and jns adc jbe mov std int3 cmp cwtl jae or lret fadds (bad) loope cli or (bad) scas lcall callq sub loope cmp adc sbb movaps sbb add or (bad) loop movabs xlat mov iret cmp (bad) ja adc outsb jg or lret add rex.WRB (bad) or (bad) mov rex.WR xchg movabs (bad) mov shll (bad) in clc pop insl or mov loope xchg fwait popfq mov rex.WX lock xor push (bad) adc ss (bad) cmp cmp cwtl or and cmpsl pop (bad) cmc (bad) or movabs pushq rex.W adc mov test fidivrl jnp jb loope (bad) xor sarl ja rcrl xchg (bad) pop mov rorl jbe add inc pop insl es out jno int3 mov cwtl rex.R or rex.XB and (bad) rcr sub test mov roll xchg push push jp (bad) je in (bad) out stc sahf fisttpll pushfq test jle movabs popfq cld pop rex.B push int3 std sahf pop and push testl jns in lret cli mov rorl xchg sbb mov loope rorl test lahf (bad) rex.RB js push retq sub jne insl stos rex.X stos in loopne cmp xchg ror (bad) (bad) jmp mov sbb and shrl out pop rex.WRX int3 and mov ja pushfq xchg movabs roll stc (bad) (bad) jrcxz shrl rex.W (bad) or xlat pop popfq repz std push rex.RXB rex.WX cmpsb (bad) jno or negb xchg rcll jbe sub fwait jmp repnz mov (bad) int movabs clc incl cmp jp test callq mov outsl rcl xor jg shrl add frstor (bad) (bad) rex.WRX pop rex.B cmp or add lahf cld sub ds rex.WR rex.RB retq vpsllw xchg test rcll sahf movabs sbb repnz and retq (bad) pop outsb std rex.B subl movabs out xor (bad) mov (bad) push in mov sub sarb (bad) rcll ror notl jnp xor jne out (bad) rex.R addb mov sbb callq mov loopne stc adc xor (bad) mov jg lret cld mov xor cmp fidiv or xor (bad) sbb push jbe rex.RX sub mov fwait add (bad) xchg mov pop mov mov cmp testl sarl out mov movabs rex.R imul mov adc push add cs imul cltd rex.B sbb and (bad) repnz loop test sti sahf shrb (bad) cltd andl xor pop xor enterq xchg mov adc rex insb sarl pop mov leaveq xchg adc ror sbb movsl fnstenv pop out callq clc repnz mov nop sbb mov add cmp lret and (bad) sub (bad) (bad) in (bad) pop movsb repnz inc pop and fs rex.RXB pushfq fldt rex.WRX enterq gs loope mov pop xor xchg lods fs or std movabs add enterq pushq frstor shll in (bad) cmp (bad) (bad) sbb sarl mov cmpl movabs cmp lods scas or jmpq (bad) mov add (bad) stos mov (bad) jp cltd loop data16 (bad) (bad) xor movabs rex.XB fcmovnb rex.RX adc push xchg loop xchg popq push cmp mov adc bnd out or jnp rorl rex.WXB gs mov jle mov mov ljmp rex.B xor (bad) mov pop clc add sarl xchg int stc cs jrcxz mov rex.X (bad) (bad) push rcll fistpl pushq mov and (bad) jo (bad) xchg lods movsb (bad) cmp rcll stos js andl cmpsl lea fmull mov sbb test pop jge xchg cld rex.WRB repz sbb sti lret imul mov icebp loopne pop or jle ficoml rcrb cltd adc (bad) (bad) in movsb (bad) sarl add (bad) jo jge (bad) xor or xchg (bad) movslq sarl and xchg rex.B movabs rex.WB in sub imul sub rex.B rex.X rex.WB add enterq enterq ds rex.WXB rex.RXB push movabs (bad) xor lret fcmovb (bad) xlat fcomi rcll pop cmp or (bad) icebp jae sti mov jrcxz int3 mov int test (bad) cmc cmp lret jmpq mov sub push add mov add orb cs pop ror rcr mov loop insb cli in xchg rex.RB rex.WRXB xor mov shll test rex.R mov mov (bad) sub hlt in fcompl add sub rex.X lods rex.WB out sub fcoms retq iret lret mov rex.WR jmp (bad) icebp sub pop (bad) insl jnp sub (bad) callq scas sti stc pushq repnz or (bad) jno testl repz rex rex.WRB push stos (bad) es mov fsubr rex.WXB repz outsb in (bad) and xchg jg sahf (bad) mov movsb in or pop test jbe repz (bad) rex.WRX mov lock mov xor (bad) sbb and jmpq (bad) mov movabs jrcxz or sub adc cmpsb fs ds rex.X push (bad) sub cmp repz pushq (bad) gs loop movabs cmpsl cmp cmp (bad) and add jno (bad) or mov repnz xchg (bad) add cmp insb out repnz push fidivl movslq sbb insl enterq test out scas insb mov loopne lret shr retq cli imul (bad) pop fiaddl cmc (bad) (bad) movabs gs push rex.WR mov and jmpq rol xchg loope sbb js std cmc adc xchg add cmp lods jmp (bad) scas movabs add pushq (bad) xchg pop in movl loop shl pushq (bad) test (bad) mov or xor add cmc sub js bnd (bad) movabs jrcxz adc rex.WX or cmp sub jl pop (bad) leaveq outsb (bad) hlt (bad) push mov rex.RB es idivl notb mov rex.R sbb repnz movabs mov pop rorl pop movsl incb shll movabs shl imul (bad) add retq xchg test movslq jmpq and adcl mov out imul sbbl shlb (bad) loope mov imul shr scas mov mov and add push add insb jmp rex.WB cs (bad) cld fwait scas jmpq (bad) (bad) jl adc (bad) mov fist leaveq or ss (bad) cmp fbstp cmpsb (bad) shrb rex.WRX jnp adc fbstp (bad) rex.B xor stos sarl cmp mov test sub adc loopne (bad) xchg mov loope lock and es testb in pushfq jg sbb rex.WRXB (bad) movabs cmp sbb add outsb add cmp sbb (bad) jl xor jmp and or (bad) xor jno jle pushfq shll xlat imul sub pop mov (bad) (bad) cwtl test movsl fnstenv pop sbb jl stos fmuls rcrl shll popfq xor stos push lahf mov pushq movabs ja repz cli loop callq sub (bad) ficom xchg xchg jnp cmp jno rcrl shrl and push test stc lret lahf xorl or out (bad) imul adc (bad) xor out xchg (bad) mov xadd cmp adc nop cld enterq leaveq (bad) icebp mov mov jg xchg add sub sti xchg push rex.WRXB adcl cltd ds retq rex.WR fwait sbb rex.B pop mov sti rex.WRB cmp roll rol xor xor sbb xchg add rorl test pop insb out mov (bad) int3 pavgb (bad) (bad) incl mov movsl adc jge xor lret outsb pop (bad) xchg xor xchg mov out (bad) rex.WX out movsl insl fs pop add sbb int hlt and mov test movabs js sbb push pop int shll xchg out jnp adc cs cmpsb pop lods shrl lea rex.XB (bad) (bad) rcrb add insb or xchg movsl movabs pop loope mov retq (bad) cltd insl test cmp mov adc shll out sbb test not mov rex.B adc (bad) imul mov rcrl scas rex.WRB rol adc mov pushq rcl mov (bad) in sub xchg ds outsb cli sbbb jae add (bad) clc pop cmp js cld sarl rex.WR (bad) stos sbb rex.R js lret xor rorl repz je sar adcl imul imul fdivrs rex.RXB test leaveq cld push push (bad) push rex out movabs (bad) pop mov pop div lahf and add mov mov jle lods fisub rex.RX jne rex.RX gs incl cwtl cmc out retq (bad) rex.WX rol (bad) pop (bad) gs adc mov pop stos pushq cld cmp (bad) enterq (bad) (bad) ss jnp push pop pop (bad) rex.WXB cmp movslq xchg movabs rex.WRB retq mov mov sub gs mov scas mov (bad) jbe fnstenv xchg (bad) pop cmp sub and jp add jo pop out mov jne callq xor rex.WR fsubs orl (bad) cmp mov subl sbb sbb jle rex.WRXB and rex.WX int sub xlat iret shr (bad) lock xchg adc jo (bad) retq (bad) (bad) movabs add out sbb or cmp and mov jle (bad) gs enterq popfq sub pop xchg js cltd shrl pop mov cwtl test mov (bad) or and mov cli stos lret rex.RXB movsl xchg jg push sbb (bad) fldcw (bad) jp in fmuls ficoml (bad) mov jrcxz xchg mov pop sbb cmp cs rex.B mov add jo jns rex.W cmpl cmpsb cwtl negl xrelease popfq cs pushq rex.RX jp loop out rex.X in adc xchg int3 mov rex.WR and lret add (bad) test popfq gs xchg add rex.WRXB jo (bad) xchg outsb push (bad) push repnz mov mov movabs rcrl movslq (bad) (bad) (bad) (bad) (bad) (bad) and sbbl lods rex.B and addr32 add xlat sub out (bad) or scas imul out sti rcll push in adc xor mov xor add shll rolb mov scas push (bad) cltd jle mov (bad) roll fwait hlt rcrl repz jle rex.RXB add mov cltd jmp jne or ffreep mov repnz (bad) rex.WB fwait int3 adc repnz lret setl xor adc in jmpq jno (bad) fdivrl rcrl rex.B jp movabs movsl mov (bad) repz mov rex.WXB (bad) ja push rex.RX movabs (bad) sub int pop outsb in (bad) pop insl sarl movabs xorl (bad) mov jl mov mov movabs push rcll stos (bad) (bad) mov rex.WRB pop or rorb and sarb (bad) rex.WRXB (bad) int out (bad) adc and cmp rex.R cld pop (bad) cmc mov pop imul test loop lret sbb test movabs lock (bad) push jae rcll cltd outsl pop mov cwtl shl out fwait mov scas pop fnop cmc mov sbb sub int cmpb sub (bad) push repz (bad) or movabs int xor rex.WRXB sub (bad) jrcxz and adc (bad) sub std (bad) cmp in mov xchg xor cmp stos rcrl cli (bad) repnz adc lods and rex.RX add retq fs shrl in jns shl pushq (bad) flds leaveq push sbb cmp rex.WRX mov pop mov rex.WRXB (bad) rex.WB cli and pop movabs sub incb mov stos cli movabs test xchg insl outsl xor rex.B ds mov sub push (bad) out mov adc retq int3 adc stos hlt roll sbb lahf xchg std (bad) sub sub rorl enterq jg rex.WB mov sub cld popfq rex.X shrl clc sti pop mov jrcxz (bad) int test xchg (bad) (bad) fwait and pushq stc and movabs enterq leaveq sub repz (bad) sub fsubrp clc sub mov pop scas leaveq (bad) lods mov xlat (bad) bnd sbb (bad) mov or xor (bad) push or jns imul mov (bad) (bad) cltd add push ja mov sbb sub sub test (bad) sub es insb rex.WXB cli rex.WR cmp ss mov rex.W jno (bad) mov test (bad) (bad) pop lea movabs (bad) mov sbbl pop mov fucomip (bad) xlat sub jae or int (bad) test cwtl int3 jrcxz fiaddl enterq cmp add stos jp rex.RX mov rex.WB mov shlb (bad) add mov cmp mov pop addb or add (bad) rex.B lret retq rcll cwtl test int3 add add popfq rex.WRB fadd rex.WR xchg mov mov fstpt incb or loope repnz and lock jb mov callq pop je add (bad) lret stc rcr test cwtl loope (bad) (bad) mov pop lret pop (bad) jno rcrb mov in cmp adc shll pop pop push add cmc jae xchg (bad) mov mov rex.WRXB rcr gs mov out jg xor inc mov in pop push (bad) rex.WRX add xor rex.WRB popfq (bad) add fbld fs push pop mov in test mov enterq test pop outsl and add and (bad) rex.WRXB stos rex mov lock rex.WXB rol sub jne lret (bad) jl loope adc (bad) lock pop test and jge int and shll adc movabs sbb add pop sbb scas xor lret jmp retq cltd (bad) cld push loop movabs add jns mov rex.R outsl rcll xor sbb rex.WXB jb lock (bad) repnz adc (bad) push fwait add test mov icebp (bad) add mov data16 shr mov faddl (bad) sub std push cmp mov in cmp xchg clc pop jp fcoms insb pop movabs (bad) rex out int3 rcr out (bad) loope movabs out (bad) add cmp lret (bad) sub cmpl ss xor fwait lret add retq jno adc cwtl mov push mov xor push xlat mov and icebp loop mov leaveq sbb retq rex.WRB push adc mov lret roll adc push mov cli rex.WRB sub in shr out (bad) icebp jo adc fistpl adc (bad) (bad) and or add sbb (bad) out (bad) sbb retq cmp cs addr32 movsb add (bad) jbe icebp ja mov (bad) imull shll cmp lret int (bad) push fs adc (bad) sbb push jmp mov xor push (bad) cli mov cmp jg rex.WB sub add movsb push rex (bad) cmp mov mov lods cmpsl push mov (bad) sub test rex.WRXB jne hlt sarl jno sbb sbb (bad) sub jp (bad) (bad) idivb push pushfq cld fidivr ljmp (bad) mov or or out pushq or fsubrl rex.WRB int sub nop fmulp enterq sub loopne shr mov (bad) pop lods out movslq insl (bad) mov data16 (bad) lret ja adc cmc push shrl jle and xlat rcr pop movabs xchg cltd cld (bad) jns rex.XB addr32 sahf stos test jbe rex.WR lret retq rex.W (bad) sbb (bad) rex.WRXB rex shrl xchg rcl int outsl (bad) in adc rex.W (bad) jrcxz mov xor ds or (bad) sbb cltd mov sbb rex.RB sbb (bad) xor push popq or cmp ficom and leaveq mov push dec movabs test adc movabs cli je add test stos push sbb (bad) jb loop add int3 (bad) movsl hlt (bad) fisubrl (bad) ja (bad) (bad) push iret stos insb rorl mov test and mov movabs imull out rex.WRXB push jp jmpq rex.WB xor (bad) clc roll rex.WRB popfq (bad) sbb or loope in fistpl int sbb mov mov movabs movabs push add jno adc movabs rex.WB clc adcl sub (bad) xchg fnstcw adc rcr pushq ljmp repnz rex.RX rex.R loopne or rex.XB pop movsb movabs (bad) jmpq (bad) xchg outsb ja sub xor (bad) int rorl loop fstl rex.X xchg add (bad) rex.WRX rex.WR lea fstpt mov jno jb (bad) js testl (bad) rex.X cmpl je (bad) loopne (bad) mov ss or adcl movabs int3 rex.RXB pop xchg pushq clc push scas (bad) movabs and stc add add add cmp xchg enterq rex.XB xlat outsb push (bad) int3 xchg loopne pushq (bad) sbb add lret cltd pop movslq cmp pop xchg callq cmpps (bad) jne test mov in movabs (bad) or pop add (bad) pop jge movabs (bad) or sahf fisub mov in rex.WB fldl je rex.WR movslq cmp rex.R cmp xchg pop rex.R rex.WXB rex.WB (bad) rex.W cli (bad) cmp int3 adc movsl in pop mov push cltd (bad) repz cmp mov adc (bad) adc ds (bad) or sbb stc sub insl mov fildll sarl rex.XB rcl ja test insb mov (bad) jno lahf scas mov sti rex.XB pop lret rolb sbb sarl jge jno leaveq xrelease or xchg cs mov jns push cmp cltd rolb xchg xchg loope shll xor shl lret rex.W sbb roll lretw enterq retq icebp shll pop rex.XB ds and sbb movabs rcrb fwait adc rex.RB (bad) adc sahf movabs mov (bad) jb rex.B rex.WRB xchg rex.WR rex.X imul sub xchg mov jrcxz shll xchg mov jmp rex (bad) rex.R cmpsl callq shlb pop xor shr (bad) adc retq (bad) rex.WXB lea (bad) and fwait and and xor xlat cld shll mov shll gs (bad) cs rcll mov rcl fsubr rex.XB ss (bad) rcll add retq rcr movabs out js add adc jp mov jmpq test or test rcll sbb ds stos nop sub std insb fstpt adc pop add movsb jmpq mov movabs (bad) loope jbe cmp shll test callq and fisttpl (bad) mov mov insb (bad) and xor jrcxz fcmovnbe std rex.WRXB mov loop je cmpsl (bad) mov (bad) rex.WX rex.RX addr32 ja (bad) fild adc and mov jmp lahf fwait pushq mov add lods (bad) push pushfq pop rorl stos roll (bad) jnp fwait loop sub pop and add subl movsb rex.WR (bad) (bad) mov (bad) data16 jno rcrl insl (bad) (bad) fisub cltd mov stc jb and add shll movabs cmp mov shl mov (bad) xor test out retq jp mov xchg (bad) ss sbb pop stos lret (bad) insb xchg and pushfq mov fisub push jbe xchg jo movsl xchg (bad) lods (bad) scas sbb (bad) in pop orl (bad) fwait or and (bad) jmp cltd pop iret insl es push and (bad) roll js rcl or repnz rex.WB (bad) (bad) in jle rex rex.WR and and rorl mov rorl mov fcomps cwtl movabs lods fisubl or repz (bad) out (bad) sub in js and mov outsb mov (bad) jae mov lods stc popfq rex.WRX jmpq cli fst mov xor (bad) (bad) shr outsl loop sbb int3 shrl sub lahf sub roll pop lea or sbb add (bad) idiv jns je xlat sub jmpq xchg loope mov repz popfq rex.X sarl jg lods and adc adc out sbb rex.B lock jl xor sbb rolb rorl movsl popfq (bad) and pop movabs cld enterq lock and data16 mov lret and jl lret add xchg (bad) (bad) retq xor sbb mov rex.WRB jnp xchg popfq xor movsb sbb mov mov test movabs xchg rex.X rex.WB xor mov nop (bad) jnp sub xchg or rex.WXB xor inc jle adc pushq imul (bad) mov (bad) cmpsl nop out or rex.RX rorl mov add jne popfq imul jbe movslq insl rex.WB add retq push ds cltd xchg mov sub sarl jae adc insl sub movabs add in loope (bad) addr32 stos (bad) jae loop mov mov rex.X shrl mov (bad) rorb insb cmp leaveq cmp rorl pop xor xor add (bad) mov dec rex.WRXB retw jb iret push add mov je (bad) int stos lods icebp movabs movsb movabs (bad) xchg shl (bad) (bad) gs ss mov sbb and and push sub ja xor pop pop and retq add or adc rex insb mov outsl out rcll (bad) in rex.WR add jl and adc orl (bad) (bad) lret fistl in sub loope lea (bad) loop jp and ja adc (bad) jmp xchg shrb (bad) (bad) icebp out (bad) movabs cmpsb std scas (bad) lock cmpl shrl negb (bad) (bad) fld xchg adcl (bad) stc (bad) xor lods xchg sub (bad) hlt (bad) out mov pop in jns and xor cld repz sbb (bad) flds nop push movabs pop xchg mov iret sub clc std (bad) sbb mov pop cmc test rex.B jns stos pop xor (bad) lock rex.X pop rex.WRX test and fisubl adc (bad) xchg flds rex.RB rex.RX rex.X mov fildl lret mov mov (bad) push add movabs (bad) scas loopne jp (bad) jb and test cmpsl rex.WR repnz rex.XB enterq int3 rex.RX adcl or repnz push (bad) mov pop xchg mov mov mov jo (bad) popfq sub sbb out jge push rex.WRB adc movabs sub (bad) sbb jbe cmp pop and (bad) clc (bad) popfq imul mov xchg or push xor in jrcxz xor hlt fidivl lretq sub and (bad) sub fmuls fstpt loope sbb cli cli loope gs mov orl pushfq xor fisubrl rex.B addr32 testl popfq (bad) push mov fs stos cmp adc outsl repz (bad) mov jnp repnz fsts (bad) movsb movabs xchg vmovaps jl jmpq icebp mov clc fsubrp rex.RXB repnz jle in rex.W (bad) (bad) gs (bad) pop mov lods add add cs cmc icebp push rex.WX add jo sar fucomip xor mov xchg shl xor mov push mov enterq callq fstp leaveq add (bad) xlat stc fisttp xor rex.WR (bad) rex.WB addr32 rex.RXB xchg mov xchg jae mov icebp push jle idivb cmc fisubrl retq js (bad) icebp add (bad) lret jp movsb movslq mov add pop cmp sar rex.WRXB imul mov lahf sbb lret mov callq (bad) cli fildll movsb push cwtl add fildl (bad) (bad) (bad) shrb repnz sub and outsl in rex.WB fmul mov enterq and je retq (bad) jb and movabs add cmc (bad) mov imul and rex.RB mov sti mov mov jmp je insl mov lahf push pop (bad) insb sub movslq rex cmp sbb cmp hlt xor out sbb rex.WRB rex.WRB sub mov (bad) jl pushfq mov add add jmpq pushq hlt (bad) (bad) xlat stc div rex.WR mov fs outsb testb (bad) leaveq xor icebp in rorb js and pop idivl imul hlt (bad) pop (bad) cmpsb rex.WRB mov cmp adc jrcxz faddp adc xor lret in cmc mov jge cmp and sbb rex.WXB in (bad) loop ficom lgs sar test sub addb jne ja rol xor lods enterq test test stos in rex.WB and fwait jns mov mov fs (bad) mov (bad) xchg mov mov mov pushq cmp std rex.RX mov xor mov pop adc push movsb cltd jmp rcrl sub sarl mov rcrl (bad) stc retq (bad) test adc sub push (bad) in jg or jae movabs rex.WRXB lret adc (bad) jle int3 mov or sbb pop pop lret adc fwait pushfq movabs shl out fadd ja mov adc xor cltd sbbb rex.WRX mov and test cwtl sbb in shufps and fucomi movabs (bad) pop or (bad) sbb shrl cmpsb (bad) xor movabs sbb lahf movabs sar loop (bad) xor cs mov (bad) push or neg mov ficomp adc (bad) ljmp in push std rex.B add repnz in (bad) stos (bad) cmc outsb pop out ss (bad) jrcxz lea add push (bad) sub sarl movabs ja cmp mov (bad) js add (bad) (bad) sarl jne fnstcw stc sahf cmp xchg jl mov movabs add cwtl rcrb jl rex.X je xor mov cld retq sti push cmpl in mov stos (bad) and hlt pop cmc push je (bad) or sub enterq rorb jp int xor mov mov fdivr stos popfq rex.X shrl push xchg stc (bad) xchg mov lahf (bad) mov rex.X int (bad) mov push lods adcl sahf mov rex.WR (bad) in rex.WRXB mov loopne rex.RB (bad) mov lea rex.WR (bad) mov sbb (bad) test or lret mov jb rex.B (bad) movsb decb or and shr insb sbb fcomi (bad) and mov (bad) mov rex.WX mov add sub cltd iret push mov nop push (bad) hlt and sarl (bad) xchg (bad) sbb loop rex.R sbb retq mov callq push xchg add and lods ss jrcxz (bad) cmpsl pushfq push movabs rex.XB sti retq shll clc mov and jns cmpsl pop stc adc rex.WXB push add ror insb testl sub mov xor pop iret mov sub out rex.WR (bad) shll movabs (bad) sbb and std pop (bad) frstor xor movabs jo rex mov fbld (bad) jmp sub (bad) (bad) or rcrl or fidivrl fldt xchg mov add icebp cmp or xor (bad) fcmovbe jns cmp (bad) callq idivl (bad) je jbe scas repz and rex.WB pminub (bad) fwait cmc mov and sub jae (bad) or (bad) and movslq cltd and out mov sub (bad) in lahf rex.WRXB pop movsb pop cmp cmp lret pop jne add mov int3 jo rex.WRXB mov pop lret fidivrl enterq mov mov rex.W xor xchg repnz popfq add mov lea (bad) repz push (bad) jmpq in xlat xchg vpaddw out jns push mov mov rcr adc sub fsubrl rex.W test movslq cmp (bad) or iret orl pop ficoml pop or xlat and movabs out fsubp rex.X retq mov jns mov xlat jl jge and gs push fs cmp cld jp lock (bad) (bad) repnz cmp jbe add xchg popfq retq sub push xchg shll mov rclb (bad) cmp cmp jno (bad) shr add sarl lods int3 (bad) roll pop mov ds rorl movsb (bad) cld fs (bad) repnz rex.WR mov sub int and push pop (bad) xchg push mov cmp movslq sub sbb outsb xor sarb stos or lods loope test movabs mov and lea test jmpq lock push callq fs add pop pop ja (bad) cmc add xchg lods jl xor mov cmp test (bad) jl mov sub pop in sahf mov jp cmpsl push xor lcall test add (bad) movsb ja (bad) rex.W loope sub jne add rex.RXB test repnz xor (bad) rex.WRX adc test jns popfq movslq retq pop adc and (bad) xchg ja sbb (bad) push and rex.WRX or mov je push enterq mov rex.W out and out cmpsl sbb enterq (bad) mov outsl and leaveq rex.B (bad) (bad) (bad) stc stos add int3 negb xchg (bad) test mov mov hlt rex.WR lods jae sbb rol xor jp mov addr32 pop js (bad) lahf mov outsl mov jge jae hlt mov and popfq add xor icebp xchg xchg (bad) enterq xchg in xor idivl int jnp xchg movsb mov test (bad) (bad) add cmpsl and pop and fidiv (bad) int3 push jmpq (bad) loop cs cmp fistl (bad) test flds (bad) (bad) in movabs fs repnz test push lods xor jno cmpsl rex.WRB fild jns,pn (bad) (bad) (bad) fisttpll rex.B fwait adc fldt (bad) movabs mov scas rex.WXB and cld movabs lret and lret jae data16 rex.RX mov stc rorl sbb test and leaveq mov push rex (bad) loop sbb mov test js callq (bad) retq rex.X rcrb (bad) sbb adc (bad) pushfq sub pop sub fmuls add pop mov rex.RXB (bad) (bad) jbe jns add rex.B out rex.WRB rorb or fidivrl rcll ljmp mov insb (bad) add mov jl callq je int3 imul addr32 test enterq (bad) hlt movslq xor (bad) std rex.WRB (bad) loop and (bad) jo lods pushq (bad) je rex retq loope (bad) jmpq jle ss push lret mov mov xorb sbb xchg shlb orb (bad) (bad) movsl test mov addr32 (bad) sti xor lea (bad) add sbb add sub in sbb movabs ds repz mov shrb or enterq and rex.WX mov fildll out movabs (bad) mov cmp (bad) xor mov and rex.WB jrcxz jae test popq inc fs repz add scas xchg lods sbb cmp test push xchg jne pop divl pushq (bad) in jnp adc push cmp mov mov testb rex.WX (bad) loop adc sbb (bad) push jnp xchg pop (bad) push sbb rex.WRB faddl (bad) sub rex je pop rex.WRB imul (bad) in insb rex.WB rex.WR retq (bad) pushfq insl pop xor leaveq rcr or sub cmp jmp adc std lahf cmp lahf stc cwtl jns push sub movabs sub rex.WX sbb adc sbb (bad) hlt (bad) (bad) cmpsl xor rex.B and lea lret rex.R rex negl xchg fiaddl rex.WX xchg cs pushq and in jmp (bad) jns in in pop incl (bad) jg push jns xchg xor lods (bad) add (bad) repnz in (bad) rex.RX test jle adc rex.WRX mov in mov ror jno data16 imul ja callq icebp rex.XB (bad) repz add and out clc lods (bad) lock pushq (bad) movsl (bad) out (bad) repnz fs mov add xor icebp movabs movabs retq adc xor fiadd movabs jns rex.WX mov lods stc xor mov ss xchg rorl cld out add mov or imul rex.W nop xchg sbb stc movabs (bad) imul push add adc rex.B repz jno lahf ss (bad) testl or xchg and rcrl cld lret mov rex.B cs (bad) je movabs jns (bad) cltd xchg retq xor jmpq xchg push fwait (bad) push rex.WRB mov xchg and sarl (bad) repz ffreep adc push (bad) stc mov pushq jg xchg (bad) adc sti mov pop and and lods (bad) (bad) (bad) movabs xlat rcll outsb rex.WRXB (bad) stos fld testb rorl pop test icebp or rex.WRXB or in jge jnp cmp (bad) jae sub rex.X jmp (bad) mov lret fwait pop movabs pop out sbb loope (bad) (bad) (bad) test lods rex.WX add callq mov (bad) xor scas xor (bad) mov int3 sub int lret and xorl decb (bad) out cmpsb mov rex.WR mov jns int (bad) mov xor test rex.B stos imulb cld mov xchg in and xchg callq pop ror xchg jrcxz rex.WX add cmc cmp cwtl jno sarl (bad) in push inc adc movl xchg idivl xor rcrl (bad) xchg int3 imul mov xchg pop adc test mov cwtl cmp fdivrp pushfq out pop iret or mov (bad) (bad) sub (bad) push fistl xchg out add js rcr in xchg orb or test movsb roll rex.WR repnz (bad) rex.WRB xchg mov (bad) stc rep add mov fmull (bad) mov (bad) pop retq push (bad) mov mov mov (bad) testb sar rex.R jle cwtl movsl stc rex.WR shr dec (bad) out (bad) repnz rex.RXB (bad) js rorl sub mov pop xchg movslq or (bad) divb fisubl adc sub rex icebp pushq (bad) (bad) xchg retq mov pop add leaveq fnstcw sub fcoml add scas sarl rcrl (bad) sarl out repnz push rcll cld (bad) cltd fs rcr out stc xchg pop jbe jmpq test mov mov sub idivl xchg sarl (bad) xchg pop cmpsb push mov movabs imul cmpsl or pop add cmp (bad) je mov movabs (bad) pushq sar (bad) (bad) testb retq or cmp movabs jg push cli int3 bsr fwait cmpsb mov jmpq sarl loop rex.WRXB es rol incb push xor jge (bad) cli xor xorb test (bad) xlat mov divl or jae (bad) sub (bad) jo cli add jbe rorb mov jmp and int3 mov push (bad) fnop mov cmpsb rex.X test sbbl push clc rex.X rex.W xor (bad) pushq js callq (bad) xlat rex.RXB sahf (bad) rex.WRX rex.B push ds adc (bad) rex.WXB movabs (bad) rcrl pop adc xchg (bad) loope rcrl or int3 stos push fidivrl sarb fchs jrcxz (bad) jl rex.WXB and (bad) cmp lret rex.X test mov and pop pushq pop cmpsb fisub cmpl clc adc roll jl (bad) cs or insl adc lock out hlt push pushq sbb movb fadd xor out pop (bad) xor int popfq mov out (bad) cld and sbb hlt jne lods int jmp lret pop mov mov (bad) (bad) movabs imul rex.WR ds shrl (bad) shll (bad) lret (bad) sub shll add jne test xor mov sahf and rex.WR loopne fbld mov shlb cmp pop (bad) hlt pop jae push fimull orb lock mov (bad) xorl rex.RX mul (bad) (bad) jns enterq (bad) lock rex.WXB scas and test (bad) out mov leaveq shl fidivrl jmp cmp repnz pushq (bad) mov push sbb jge (bad) cltd mov insb mov icebp or mov cmc mov (bad) sbbb outsb movslq (bad) rex.R je sub out and fsubl fwait roll add mov cmp retq movsb lock push scas es pushq rex.WR loope cmp (bad) repnz scas (bad) mulb loopne sub movsl rex.RB roll mov (bad) jmpq rex.WRXB rex.RX sbb add js movsb rex.W pushfq and jp test lea pop jp repz add nop push (bad) xchg cli and or or incl jmp cmp xor in jae and jns mov xchg (bad) fidivl je rex.WRX xor (bad) or (bad) nop lret sbb cmp rex.RXB je or add rex.RX outsl sbb (bad) xchg rex.R out (bad) sbb jle and imulb rex.XB cmp rex.XB rex.B cmc (bad) (bad) je enterq cltd idiv test sbb mov sub fldl incl xor enterq out scas lods jge in jo ror retq cmp cmp (bad) (bad) or and cmp subb xor pushq retq (bad) or xchg mull or shrl push sub (bad) out cmp jge jg cmp rex.WXB jg xorl imul and imul (bad) add pop fdivs xchg cltd jns retq (bad) mov movsb pop adc rex.WRB (bad) (bad) push sbb repnz (bad) int3 (bad) js es cmp mov xchg fist fldt push cld push mov cmp pop enterq in rex.WXB retq jle rex.W hlt push (bad) adc push mov lods and cmp jns in or push sbb loopne xchg mov mov imul and add rex rex.B xor push cltd std cmp (bad) ja pop mov jnp iret cmp lods fcoml test add (bad) loopne and pop xchg (bad) jb stos ffree (bad) stos retq (bad) (bad) fcmovb mov andl fildll mov xor push cmp (bad) jb js mov (bad) sub (bad) xchg sub rex.WRB cwtl jrcxz shrl (bad) sarl insb xchg fildll cmp std test (bad) ror cs (bad) xchg cmpsb iret loopne mov (bad) adc add lahf shr stc jl and out mov add xchg icebp es test xchg shrl testl mov (bad) push (bad) xchg adc and mov rcrl xlat add stc (bad) test lret movsl and sbb xchg jp and (bad) stc lock xor out fidivr (bad) insl sarl divb cmp lret test adc cltd rorl xor mov sbb or lahf and jbe xchg std pushfq lea mov add mov (bad) outsl jb sub mov pushfq lahf addr32 rcll test (bad) mov xor pop cmp fdivrs xchg mov test cmp cltd insl icebp enterq (bad) lock sarl fmuls rcl mov test and fcmovnb jbe test shr pop (bad) sti push xchg push mov (bad) repnz hlt and int es movabs mov cltd cmpl fsubrs xchg std mov sbb lock (bad) rex.X (bad) sbb insb jno lahf xor stos nop and movsb shrb outsb mov iret sub xor callq mov cltd stos cmp (bad) roll clc iret add xchg std (bad) and movabs shrl (bad) adc lret sub pushq mov (bad) adc rex.XB cmp in es (bad) or sub (bad) add out in cmp enterq pushq pop jne sub mov (bad) sahf adc fimul rex.RB repz movsl jmpq sub rex.WXB mov xchg (bad) ds vmovdqu sub nop adc insb rex.WRB subl scas sbb notl (bad) shll sub push adcl sbb rex iret rcrb (bad) in xor push (bad) test (bad) mov rcll rex.XB or outsl adc sbb shl (bad) cmc rcll jo enterq cmpsb and lea (bad) out es rex.B xadd (bad) rex.WX repnz rex.X xchg add xor rcll mov push jrcxz pushfq sti jb pop in mov mov (bad) ss (bad) sub mov cmp cmp test repnz xchg cs rex.X repnz (bad) sbb (bad) cmp stc mov sub (bad) and add loop (bad) repnz (bad) xlat rex.RB adc js in jb mov shr fstpt stos jp (bad) rex.RB pop rol (bad) jrcxz movabs sti (bad) popfq (bad) cli jg mov pop cmp rex.WRB sbb pop rex.WX fmull movsb jle subl (bad) retq bnd push rex.RX xchg pop (bad) xchg mov rex.RX rex.RB repz (bad) rex.X fsub pushq jae sub sub rex.WXB in (bad) jo jo stc xchg data16 or mov (bad) xchg gs clc xor xchg data16 test mov imul fs (bad) iret retq leaveq mul fmul jmp jae xchg xor cltd cs mov pop movsb (bad) rex.RB (bad) mov negb testl or xchg (bad) outsb test adc add rex.WB addr32 push mov (bad) rex.XB and ss pop fsubl rclb pushq (bad) rolb enterq sbb sbb pop fimul and outsl mov sub or (bad) repz sbb (bad) callq rcl mulb (bad) jnp pushq loopne sbbl cmp rcr rcrb mov (bad) roll mov xor rex.RB rol pop pushq sahf callq hlt xchg mov mov es rcl (bad) syscall adc clc stos lahf xchg add rorl outsb (bad) mov insb mov jo mov pop scas jge lret sub stos test jrcxz add rcll pushfq (bad) (bad) movabs jp adc (bad) (bad) jae mov sub (bad) pop outsb lret movabs (bad) pushfq (bad) xor mov (bad) sarl mov xchg imul rex.RX ss movabs mov in rorl (bad) xchg sub js shrl or adc stc shrb pop (bad) test adcl and push cs lret mov mov cmc or rcll sub pop and rex.WXB mov sarl (bad) (bad) cmc jle addb ljmp (bad) and jae sarb pop test rex.RX rex.WR lock pop loopne in in jnp test cmpsl (bad) jo (bad) xor roll loop in shll (bad) rclb pop rcr fnstcw stos ds push cli (bad) iret insb outsb enterq cmpsb jbe rorl out rex.XB xor rcrl and sar adc fldl2t je int3 in jge mov xrelease mov push mov enterq sbb iret icebp adc scas ror (bad) shrl cld mov iret lret mov rex.WRX cli retq jae rex.R adc push sub insb jmp out jb imul fdivs xchg movabs push sar outsb (bad) pop rex rex.X repz test (bad) outsl (bad) and lret repz mov sub mov std ja (bad) (bad) adc stc sbb adc pushfq pop test callq test mov rcll sub movb and cltd rex.WX or add shlb push addr32 mov adc sbb rex.WRXB mov pop (bad) shll or sarl movsb ffree (bad) clc xor rorl fisubr xor rcll (bad) (bad) ror (bad) cli adc adc add pushq (bad) adc (bad) rex.R rex.WRXB pop jns callq add fwait out rex.R (bad) fcomip mov mov (bad) or add adc push sub scas lret outsl mov pop sub loope pop insl icebp mov fnstsw xor mov mov sub jmp insb sbb (bad) sti (bad) stos add rex.X cs sub loop adc roll rex.R mov pop xor ja mov pop mov rorl add repnz jo rcrl (bad) leaveq jno rcr decb ficomp rex.B pop rex.WB fabs movabs xchg (bad) bswap leaveq sbb movabs jge in mov xor push callq (bad) xor add popfq loopne pop je sub decb (bad) mov (bad) pushq icebp lahf in pop roll sub lret rex.WX rex.R in std adc pushfq outsl push (bad) movslq jl and js stos add hlt addb jo push jae mov repz xor fisttpl int (bad) insb cli pop loope rcr and jne add or pop pushq xchg rorb pop mov test (bad) gs imul xor scas clc xor (bad) movabs jno pushq imul out hlt movabs (bad) (bad) sbb retq rcrl xchg (bad) in add sub pushq enterq sub rex.R jge loopne retq adcb sbb repz (bad) jp ficomp (bad) movabs add (bad) sub scas stc shll sub jns decb hlt rex.WRXB rcrl (bad) cmp test adc rex.WB pop and lock outsb and mov (bad) (bad) stos rex.B jmp push mov (bad) rex.WX lret and pop add std iret and and mov out movabs jne jg pop pop and test xchg cwtl sub imul (bad) stos pushq sbb popq bnd or ja mov pushq movsl (bad) (bad) rex.WXB rcrb or mov mov sti adc pop (bad) rex.RB fs stos movabs jl xor jle and shrl sbb in xchg sbb (bad) adc (bad) pushq mov jae mov movabs rex.B rcrl (bad) in mov rex.WRX mov pop xchg cmp and shrl (bad) enterq (bad) adc sahf repz addr32 mov (bad) (bad) icebp (bad) (bad) ffree scas rorb (bad) adc add callq push mov mov jmpq xor (bad) cmp icebp pop test roll or shrl div faddl xlat in test nop pop iret adc mov xchg lods rcrl and pushfq fcmovu movsb xor rex.WX adc and ja fwait (bad) test scas (bad) mov in xchg lea adc movsb mov and rcrl xchg jb in fiadd shll scas pop mov fwait mov adc sbb or push push xadd jmpq xor inc jmpq xchg fildll (bad) sbb cmc shl int rex.WR (bad) sub adc lods xchg (bad) rol test jle shl movabs jmp or stos out jl (bad) jo jrcxz and mov lods rex.WB mov rex.WXB es xchg movsb rex.B rex.WX movabs lret test cmp (bad) fwait adc js je std pop rorl pushfq sbb add rex.WRX outsl jae cmp popfq pop (bad) cvtdq2ps (bad) push ror xchg mov loop mov lret repnz imul adc jge push and (bad) movsl leaveq fist jmpq repz adc jae ffree cmc mov lock rex.RXB and cmpsl or xorb jno sub (bad) mov leaveq mov add lods (bad) lock and loop xlat add rex.WRXB (bad) rex (bad) pushq pop cmpsl cmp or shrl jne mulps mov mov pop scas lahf int3 rex.WR sub jle loope hlt xchg test addr32 jne xor sbb xor rex.W rex.RXB loopne rex out xchg (bad) mov xchg rex.WX stc vpmaddwd rex.XB sbb in mov xchg cmp repz retq cld std scas fldcw orl cs (bad) and sbb rex.WRB cmpsb sti lock mov xchg jmp fwait out mov rex.WRXB (bad) add rcrb xchg jnp sbb icebp loop rex.RX rex.B shll (bad) mov (bad) add movsb xchg mov sbb (bad) in imul (bad) rex.WRXB ds sub leaveq jrcxz ror cmp mov movabs gs jp jo push (bad) jno retq cli add mov and enterq stc cmp mov rex.WB fisttp adc lock fldcw mov fistpll pushfq or and (bad) leaveq xchg movabs (bad) push sbb in mov scas add rcrl (bad) pop xor sbb sbb add mov or cs push adc gs mov movabs movabs pop in mov mov test and and shr retq stc test cmc mov lahf fs adc rex.RX jbe rex.WX out (bad) stos std retq pop insl and fnstsw ds jae cmpsb fidivr (bad) xlat rex.WR repnz add pop out rcrl repnz out mov (bad) (bad) sbb movabs push out (bad) movabs (bad) in int movabs xor adc cs movabs rex.WX (bad) nop xchg sbb (bad) sti pop vpxor sub imul scas add test add es lcall lods or retq rorl xchg cmc and flds sub rex.RXB imul in fwait (bad) jbe (bad) sbb cmpsl int add sub mov xor cmp rex.WB (bad) adc cmc xchg xchg cmp pushfq retq stos mov in rex.B insl sbb jge add mov fistp jrcxz adc (bad) xchg out rex.X fs mov (bad) jo mov outsb roll (bad) (bad) jp in mov loop (bad) mov iret cmc lea add xor cmpsl mov (bad) outsb (bad) iret testl retq cmp rex.WXB xor (bad) (bad) rcrl or jns (bad) enterq mov jno pop mov imul jp lods (bad) callq jno mov pop xchg or jns icebp in hlt int3 leaveq and fcmove jp jrcxz lret (bad) pop retq rex.WR test iret retq push (bad) cltd sub data16 sub fsubrl rex.WR (bad) (bad) rcrb and rex.XB rex.R outsl flds (bad) (bad) (bad) rex.WX sub mov (bad) mov (bad) cmp loope xlat mov (bad) rorl adc (bad) repz andb mov in mov add rex.X rol movabs sub add or hlt es or pop rex pop mov shl loopne push mov in (bad) repnz loope int loopne fistpl orb cmp sahf adc mov fs loop rex test or cmp (bad) jne push stos ror jp cmc or ds (bad) stos push lods (bad) sub mov rclb jg cmc (bad) (bad) add xchg and rex.X xchg xlat insb cmp push repnz cs lahf xchg jl rex.B repz (bad) xor push rex.WX in orb sahf rorl movsb xchg insl addl movabs jp (bad) rol xor out (bad) jb rol mov or loopne push mov (bad) sbb mov cwtl mov (bad) or lahf mov in and mov (bad) movsl (bad) sub rolb mov in add or xor fistl rex.WX ds xchg in (bad) movabs scas (bad) subb rex out sub int ds cwtl mov jp lock ror orl cld mov lahf movabs lods frstor movsl sti movabs and xor test lods loope mov rcrl xchg pop jp xchg insl out repz xor (bad) jle stc rex movabs (bad) (bad) (bad) push loop (bad) scas push lods rex.WRB and int and retq pushfq rclb fsubrl jae in adc roll lret rex imul movabs adc rex.X (bad) xor push xchg ds lret xor out test sbb notl rex.RXB callq sub (bad) pushq rorl and jg push (bad) xchg rcrl sub pop mov stc ja mov lods (bad) repz enterq (bad) stos out fldl push (bad) push mov fsubl jge sbb xchg push xchg bnd in mov in rex.XB (bad) lock callq gs mov mov xchg xadd mov jp int addr32 test pop in jns outsb sbb (bad) (bad) repz xchg callq xchg and fcomip lret shrl (bad) adc xchg fnop incb out (bad) sub repnz push enterq rex.WB fwait rorl or scas jp cwtl pop jnp addr32 ror out shll jno jne and lea rorl sub cmpsl cmp int (bad) (bad) (bad) mov lret rex.RXB and imul mov mov retq mov cmp xchg mov shr roll ja clc xchg imul adc data16 push fsubrl orl and pushfq jmpq sbb sarl xchg sbb rex.X or fsts (bad) (bad) nop rex.XB lods pop std add add xchg adc imul in cmp cmc rcr scas (bad) out fimull or lock pop adc sub cmpsb jne,pt rcrl sub test add mov mov shll movabs adc rex.B insb sbbb cmpsl shrl xor mov ror punpckldq ffreep rex.W stc js es clc xchg incl out push xor int3 rex.R es lret std add cwtl mov (bad) lret xchg sub shll or stos xchg int in mov roll push (bad) jbe (bad) mov (bad) pop rex.RX mov mov xchg sub sub rex.B push push xor mov add (bad) cwtl xchg mov (bad) out adc shrl (bad) movabs rex.WR xor rex.RXB push or and fdivs cmp leaveq in mov pop fwait nop scas rex.B data16 push push jo mov movabs rorl (bad) imul repz rol (bad) (bad) add adc int xor cmp enterq rex.RXB jae in retq leaveq scas rol push mov repnz and movabs rcrl add stos mov fdivrl pop sahf cs sbb imulb cmp (bad) xadd test out rorl sti (bad) sbb mov mov shrb (bad) out cltd xchg lock or push rex.WXB xor mov leaveq push (bad) (bad) cmp push loop rcll sbb (bad) or push shl jmpq (bad) sbb push (bad) add xor in jl cmp cmpsb and xchg stc jo rex.X rol (bad) outsl pushq sub repz rcr (bad) pop andl sub repnz movslq (bad) sahf mov outsb lret jl adc and gs (bad) mov mov repnz (bad) add sbb (bad) xor jne rex.RX jg (bad) xchg movslq in out mov adc pop rex.RX or rex.XB rex.WX lea hlt ss std or cmp (bad) (bad) cld test mov adc rex.B mov xrelease popfq negl or sub xchg repz lock (bad) jo jns sub inc nop cmp xchg rorl rex.X lret jmpq mov or insl xor (bad) mov jb rep mov (bad) (bad) fisubrl rcrb rcrl jns jbe sub pushfq cmp mov jb loope pop ss int xor and sub mov test rorl mov lods lock callq hlt mov (bad) jae rex.WRB adc jg shrl push (bad) sub movabs and sbb (bad) rcll pop (bad) rex.WRB movabs mov push (bad) (bad) rex.WRX data16 jle (bad) insl (bad) lock lahf int3 movb jne outsb shll jl (bad) fidiv fcmovnb int3 or pop callq sub nop lret add (bad) fs pop movsl or cs sub js fldl rcll movabs xor rex.RXB xor rex.R rex.WRXB sub (bad) mov mov adc hlt retq and (bad) mov int3 je (bad) mov adc mov (bad) or loope xchg cmp and sbb shll sub mov in cmp jmp and push pop xor insb (bad) sbb add pop xor push decl (bad) pushq stc int (bad) (bad) add (bad) lret push rex.B rex.WR outsb subl lret int3 movsl lret rex.WRXB (bad) mov imul rol sub jmp retq callq jmpq cs xor xchg orb pop mov mov in scas jbe rex.WB (bad) jmpq rex.B (bad) (bad) mov (bad) jmpq add add and rex.B rex.WRX (bad) addb enterq cmp sarl pop pushq lock (bad) leaveq (bad) addr32 jg out retq adc (bad) insl je sbb stc lret rex.X addr32 repz fimul insb orl mov sub mov or rex.X rex.WRXB mov in imul sbb orl add xchg xchg or rex.WX rex.B rex.W in add or ja rex.XB mov mov push fstpt cmpsl shrl (bad) xchg mov ds mov add in popfq rex.RXB fucomip mov mov insl nop sarl rex.W insb (bad) roll sbbl sub or mov jl enterq push loop sbb jmp jnp mov xor rorl cmp xlat cmpsl rcll mov fbstp out lock loope rcll jns mov shrl fistpll (bad) pushq jl cwtl pushfq nop in lods add (bad) adc lock jnp (bad) mov (bad) cmc push pop mov sahf push (bad) rex.WX imulb pop mov clc rex.RX (bad) push mov rex.XB callq mov mov lods stos xor mov movq or rex rex.XB stc mov shrl andl (bad) cmp imul add sbb stc mov pop add callq repnz jbe shrl subl xchg mov add rex.RXB (bad) (bad) loop and loopne push hlt rex.R mov sbb mov add (bad) js fcmovb sahf out (bad) jl adc and (bad) adc xlat inc (bad) add (bad) lret mov gs negl sar popfq in data16 shrl push (bad) rcrl cwtl lahf add adc or and sbb cmp (bad) mov (bad) (bad) pushq rex.WRXB lahf (bad) jle (bad) iret iret lsl int3 in xor lods push (bad) rex.WRXB iret (bad) rex.B jrcxz ja rclb out cmpl cld push rex.B repz pop mov cmp add stc rex.X clc mov or cmp cmp mov idivb (bad) jns out test rex.WRB rex.W clc add adcl or mov push (bad) xorl jmp jo (bad) push ds int3 ja sub in sti or jno int (bad) rex.RXB fisttpll xchg xor (bad) jbe test xlat cmp iret or and xor pop (bad) adc pushfq xor lret rex.B (bad) add jrcxz xchg loope adc rex.WRX in movsl mov rex.RB add rcr rex.RX sbb mov push add sub cli cli rex.WB cs insl hlt (bad) and pushfq mov push stc std pop movslq jae add insl push (bad) cli rex (bad) (bad) cmpsl rex.WXB test (bad) movabs roll (bad) and (bad) (bad) (bad) out mov sbb jrcxz movabs loope sub rex.R rex.RB movabs pop rorl pop rex and ror pop stc cmp cmpsl rcll and roll jnp mov mov jg fistl add pop iret (bad) mov (bad) cmp stos vmovdqa jns rcr rex.W movabs jbe adc pushfq (bad) or cli fsubl jno enterq mov (bad) add add xchg xor sahf push rex.WB pushq (bad) mov add std je push push (bad) jae outsb movsb or mov std pushq xor pop pop stc in sub sbb xchg lret pop cmp rex.RXB rorl loop nop xchg outsl xor out scas jle pcmpeqw mov or (bad) (bad) ss pop insb pop and lret gs add test iret lods and test xchg sahf (bad) mov testb rcr (bad) push rex.XB shl (bad) fistpll xorl (bad) sar and in leaveq in movabs ror or xorl jrcxz pop (bad) xor mov shl xchg add shrl imul or ss callq shr mov test (bad) sbb lods repnz jp pop iret (bad) (bad) mov cmp (bad) jrcxz mov (bad) (bad) imulb jae and (bad) mov xlat add mov retq (bad) nop or fist xchg sarl and jns add retq or sub xchg shll or xlat icebp not repz sarl xchg xchg sbb add fdivrl ds mov lock cmpsl (bad) movslq lods hlt mov or push roll sarl jne fnstcw pushq jrcxz pop add movsb iret ja (bad) movabs fnsave xor loopne pop xor movabs imul sahf mov (bad) faddl push test xor mov fstl clc shl movslq mov mov lret cli cmp rex.B rex.X sar iret sti adc push lret (bad) adc mov mov push xor push mov sub or stos (bad) ror jne pop shr callq rex.WRX mov (bad) jbe adc rex.WB and sub cs shll xchg hlt (bad) push sbb jge add sub xchg (bad) mov shll shrl (bad) push shr ja and and data16 jnp cmp clc sarl test test pop xchg callq (bad) iret stos in mov clc cmp fidiv retq out out mov fsts lock rex.WRX jns int mov jg stos sti mov rcr sub jp fst cltd adc mov or (bad) cmc rex.X imul adc addr32 (bad) pop ror mov shrl cmc mov (bad) out roll fcompl add rex.RB je and rcrl jns scas (bad) pop add mov (bad) adc out rex.WXB cmpl rcll scas rex.X faddl pop out (bad) roll rex.WRX rex.WX leaveq push mov push add outsl rorl rex (bad) repz add rorl scas repnz jne ja jns stos cltd rol std subl cli rex.RB movabs xchg pop adc xor rorl lods movabs and std mov retq sbb (bad) mov outsb pushfq rex.WXB rcll (bad) pop cmp sbb subl test (bad) loop rex.R sub fcmovne ficomp rcrb out sbb mov int out retq and rex.W rex.WX movsl mov (bad) and (bad) (bad) (bad) lods rcr stos movabs retq test (bad) rex.WR xchg jo add pop int3 shrl or jbe pop and sub mov psraw push rex.XB andl add xor (bad) push (bad) rcr stc xchg popfq and jo rex.R adc stc mov scas (bad) sub cli cmp rolb rex.B scas fcmovnb mov flds jl push faddp in sub adc fisubl fisttpll push mov loope lea (bad) (bad) sub outsb mov pop loope xlat push outsl mov xor (bad) rex.WB (bad) movabs mov shll (bad) (bad) rex.RX movabs mov (bad) (bad) enterq (bad) and xchg push push rex.RB pop cli (bad) ss mov ror in mov jle jno cmp shl seta pushq adc int3 xor xchg (bad) sarl nop sbb repz movabs ds jne xchg or imul cmp and (bad) rcr lods pop mov jns in cs gs mov jmpq rex.R xor mov (bad) hlt and jae mov sub out pushfq xor add callq rex.WX repz je rcl sub rex.W push sbb (bad) cltd cli iret add sub stc loop rex.WB sarl rex xchg (bad) outsl shr out int3 loop mov pop (bad) hlt xor data16 imul rex.WR jne push mov (bad) pop out sbb sbb rcrl or lret movabs lret (bad) pop (bad) cwtl rex.B cmp push sub (bad) push xor jle std fldcw adc lret insb test lock or mov movabs adc (bad) and and (bad) push int3 cmpsl pop xor mov cmp lret andl mov xchg sti enterq xchg xchg sub mov int3 shrl data16 sbb cmp adc add push add sub rex.W or jno and rex.WRXB fstpl fs xlat retq push sub or rex.B jnp (bad) test xchg xchg outsl cmpsb adc (bad) fnstsw retq cltd add leaveq stc lahf cmp push jge mov cmp bnd (bad) (bad) mov ficompl lret (bad) jno (bad) add mov cmp xor mov std cmc and and es (bad) pop rex.B jl and sahf es (bad) add fdivrl (bad) not cwtl sbb (bad) loope repnz shlb (bad) ss (bad) xchg or xor jb (bad) fsubs xor stc repnz sbb test mov loop add add int3 repnz xor push adc jno jo (bad) int shl iret movslq retq repnz rex.WR addl sub push int sbb (bad) int fadd fwait and sahf insb enterq push mov (bad) xchg (bad) stos mov icebp rcrb fnstsw rex.WB xor jns rex.WB repz (bad) movsl sbb and mov rex.WXB sub mov add rex.R adc or ficompl notl fxch scas mov int3 or or rex.X int lea mov sub (bad) or xor push fildl in jae pop cmpsl enterq rex.RXB mov movslq pushq (bad) (bad) rex.XB push vphadduwd xor fisttpl lock cmp jno mov or push rex.WRX test sahf movabs lret sti add (bad) xor es movslq push rex.WXB out icebp mov pop imul jge cmp mov (bad) retq int outsl mov mov sub div in or adc mov cwtl rex.RX xlat rol xor shlb sub callq rex.WRX rex.WB fucomi cltd mov add jmpq xlat fnstcw lcall (bad) cltd loopne ficomp (bad) rex.WB lods icebp in rex.X stos rex.RX fild xlat fdivrs adc xchg rex.WR int fiaddl pop cmp movslq mov movabs xor (bad) mov in loope (bad) add clc and retq (bad) rex.WRX es xor (bad) cmpsb adc (bad) fmuls jmp data16 sbbb movabs rex.B fdivrl cmc loope (bad) mov std mov mov leaveq xor push imul jns retq mov lret (bad) (bad) fwait enterq mov loope mov push and test (bad) xor insb (bad) add xchg rex.WRX fwait mov icebp jne rex.XB rex.RB callq cli (bad) mov jno pop and stos fwait rex.RXB cmp add (bad) jno ficompl and sarl addr32 movslq movabs xor iretq cmp xchg add and rex.WR out shrl jl in mov lret push addr32 push (bad) xchg sbb (bad) stos or rex.WRXB sub rex.WXB xor adc jp jnp rclb rex.WB or (bad) xor testb lods (bad) rol test movabs adcl or in (bad) imul fs fnstsw pushfq (bad) cmc jb std xchg rex.B sbb outsb ror sbb jns mov shr rex.RXB cs xor xchg rex.RX xchg jnp out and jbe mov (bad) pushq xor cmp pop pushq pop sub test imul jb and add cld out (bad) test roll leaveq fs outsl retq (bad) mov rex.X rex.RXB (bad) lret and cmp mov add shll fs add add and rex.RXB jp adc push ds (bad) fildll movslq push in movsb mov js (bad) adc xchg xchg movsb or hlt shll xor push mov (bad) xor cmpsl test movabs mov (bad) (bad) scas (bad) mov rex.X mov push in rcr (bad) xor (bad) rorl (bad) jge adc retq xchg or jo mov push movabs add adc xchg rcll test in fildll rex.XB movsb iret cmpsl addl rex.XB (bad) adc rex.WB (bad) jno and push shrl ds add fidivl adc orl callq in push fildll movsl mov sbb ds repnz retq jp sbb cmp xchg ror (bad) out (bad) rcr fs add pop cmp or rex.B rol jle pushq shll and shrl push jge cmpsl lret adc (bad) fidiv adc mov mov jbe push retq rcrl cmp mov jns mov cwtl cltd sbb (bad) sbb rol cmp mov fildl loopne jno sbb stos xor and xor fistpl hlt (bad) or movabs int push sti mov jrcxz add movsl rcll out (bad) lahf or (bad) iret out and std sarl loop retq adc rex.RXB cmp movabs lods add jno (bad) lock out mov sub addr32 rex.B add pushq mov insl fwait jmpq cmp adc sub cltd sbb sbb cmp in testl imul xor clc pop insb rex.WX fwait mov loop xlat gs push mov xchg xor (bad) mov lret jge icebp xchg addr32 stos repnz retq adc (bad) pop callq movslq roll iret (bad) sbb add mov out int mov (bad) ja pop xor retq cwtl (bad) mov fcmovu (bad) int jp rex.B sti (bad) rex.B sub jnp (bad) rex.XB rex lret pop jge pop (bad) pushfq addr32 pop fidiv (bad) adc xor (bad) jle idivb cmp movabs xor test lret jl movslq xor rex.B lahf mov pop cltd idiv jno int pop lods leaveq rcrl cmpsl cmp loopne imul or int3 (bad) add add jmp cli cmpsl cld mov or mov (bad) ror cmp xor (bad) jnp (bad) push mov pop (bad) jns jbe js sbb shr add mov push out (bad) mov xchg ror sbb rex.WRX rex.XB roll sub jne fdivrl rcrl lea rex.X rex.RXB insb and xor test (bad) and xchg nop in xor (bad) lock pushfq outsb sub adc std sub (bad) or lret (bad) in roll rex.X int3 pushfq push mov adc and sahf movabs repz add fdivrl mov pop loop (bad) xchg add add jp (bad) mov (bad) mov sub pushq push subl cltd loop sbb test xlat push std add xor jnp xchg sub jae sub (bad) mov mov sub std in rex.WX mov mov rcll sahf pop loope hlt shrb add rex (bad) xor fnstsw int imul push gs and stos movabs rex rex.WXB and sbb mov rex.WRX sbb (bad) lock (bad) fstps jp cld rcr pop adc pop (bad) add sub mov jae rex.B mov (bad) adc out setno subl rex.R rex.RX mov adc shl mov or mov xor push clc (bad) sahf cmp sbb lea rcll mov add pop movabs js in sar pushfq jbe and rcll stos repnz adc jle and retq xchg (bad) decl cpuid add sbb in addr32 (bad) add fidivrl xor (bad) pushq loop add jg fisubrl fiadd fcos pop push and mov or cmp and rcrl ja or adc sbb push xchg rex.RB es xlat retq (bad) cmpsl flds callq sbb xchg or in (bad) rol std jle (bad) shrl (bad) pop repz pop stos lock shrl xchg or lret out repnz jns sbb cmpsl mov (bad) rex.RX (bad) rex.WRX add cmp (bad) rex.RX jo (bad) test sbb fucomi int rex.B test fs add mov sub sub sbb mov repnz movslq and test mov (bad) add or push sub in mov adc push stc (bad) scas rcrb (bad) movabs cmp fwait callq nop xchg stc movsl fisubl scas adcb callq (bad) iret repnz jo movabs (bad) pushfq mov stos and pushq xor add (bad) xor (bad) cwtl push and nop jb xor out andl xchg cmp pushfq push cmpsl push sarl mov add pop rorl (bad) repnz push xor pop movabs rorl lahf rex.WX movabs pop jrcxz out movabs rex.WX hlt rex.XB rcrl xchg or (bad) (bad) scas mov adc mov sub mov (bad) (bad) push cmpsb std or rex.B add xchg divl rex.R mov fnop mov add lods xor pop rorl (bad) mov cltd cwtl (bad) test subb in pop ror mov mov shl mov movabs (bad) push adc pop rex.WRXB callq pop fwait movabs imul fmuls jns rex.B enterq jmpq cmp fdivs int (bad) (bad) rex.WRB (bad) in rcll lcall movabs (bad) sub mov cmpsb jae insb movabs (bad) lods test sub in or adc pop lods cwtl fwait push je jp add (bad) mov test sar mov fisttpll notl hlt pop std mov nop cmp rex.WX (bad) cli pushfq or jbe mov (bad) je movabs sub adc imul stc xchg sti adc push roll jmp (bad) je mov and rolb imul pushq cmc xor xchg (bad) out int3 mov nop iret pop je sub xchg jp rex.WRXB rex.X (bad) mov and mov icebp cmp adc out ss fucom sarq or andl xchg testl (bad) jo addr32 xor xchg outsb gs retq or int jbe rcrl out rolb vmaxps pop jo sbb (bad) lods pop fisttpl xchg icebp loopne xchg rorl movsb (bad) (bad) fwait mov out out je push cli movslq adc mov (bad) mov ss retq enterq add in jp jne,pt pop (bad) rex.WR (bad) shll outsb rex.RXB pop xor hlt (bad) add icebp xchg cmp imul (bad) movabs ror mov mov mov (bad) (bad) jmp rex.XB (bad) push mov mov sub test mov add sbb and fdivp add xchg and mov jae es rex.W or add (bad) pop sub fwait loop (bad) add adc repz add rex.X push cli rex.WRX sbb xor faddl retq (bad) xor sbb clc frstor negl mov add add rex.RXB cs lahf enterq lock jo mov pop ffree repz xchg retq cs (bad) es cli movsb pop andl ffree mov lods jge fcoms cmpsl sub mov fldt rcrl orb sti sub movabs movabs ss mov adc (bad) or sbb repz pushfq lret cld rex.B pop xchg mov movsb jrcxz sbb rex.WB roll (bad) int3 std (bad) imul add and (bad) lods iret loop (bad) lahf rex.B rex.XB out (bad) pop ja jno push rcll out lea mov jae rex.WB (bad) imul and movslq or and shrb (bad) mov (bad) or and or (bad) movabs (bad) xlat mov rex.WRXB mov (bad) shrb sarl fstps (bad) add jae in popfq pushfq lret (bad) cmp cmp pop lea roll stos jg xlat mov sub (bad) testl mov cmpsb int cmc movups (bad) sti sub jno fnstcw cmp scas enterq fimull xchg and add cltd sar fsubs lods repz loope sub ds xor repz test cltd cmpl int3 in xchg and pushq cmp add or cs (bad) mov mov sbb add fs fiadd and stc (bad) shrl rex.R movslq rex.WX pop rex.WB pop and movabs sti jb and mov fcmovu jns movabs mov (bad) out rex.WRXB (bad) (bad) xor and mov stc mov pop jnp add cmp out rclb and repz xchg faddl pop test lret mov es (bad) insl xchg mov jp pop add rcr push pop rex.X rex.WRX movabs fdivl jb rex.WRX mov jrcxz rex.B (bad) pop jns (bad) and mov (bad) sbb lret mov mov repnz xchg cltd fsubl ror (bad) (bad) shr callq mov (bad) movabs fstpt popfq add or ja loopnel in rex.WB mov or cli fcmovnb shrb iret nop movabs and xor adc imulb (bad) imul mulb add mov cmp jle xchg iret cmp sub pop in rex.WRXB cli jb mov movabs test jl (bad) xorl rcl xchg adc cmp jns nop jg push mov pop or lock and (bad) jno add cltd mov rcll lret lods sarl rex.RB pop movslq lret fldenv add sti nop (bad) add (bad) adc add jg jmpq inc in (bad) mov cmp imul add loop (bad) xchg rcl icebp jbe xchg lret (bad) xor retq (bad) sahf shrl movabs outsl scas rcll rex.WR (bad) imul jnp rex.R movsl (bad) fistpll sbb icebp mov xchg (bad) pop out (bad) (bad) sub (bad) mov sub mov movsb or jrcxz test (bad) jmpq stos sarl mov (bad) push cld scas (bad) shll pushfq (bad) mov (bad) (bad) (bad) test cmp rex.XB sbb repnz (bad) rex.B fbstp rcll xchg and or (bad) (bad) (bad) movsl lahf mov testl pop rex.B pushq addr32 cmp movabs cmp xor push (bad) hlt xchg adc cs (bad) fidivr rorl hlt out or push jmp mov mov insb sbb sbb xchg loop and xchg sarl jae (bad) and add mov add mov shll mov decl popfq cmpl shll mov lahf insb jge subl rcll xchg movabs jbe mov fdivl scas or cwtl icebp (bad) shrl sti lods outsb or rorl rex.WRB jns ror rex.WRX xor pop (bad) (bad) pop xlat fnop and fwait sub xchg jne adcl and in rex sahf sbb sbb (bad) rex.RB hlt pop or andl je sar rex.WX in out or imul and in jge cmpsl icebp or mov lods (bad) iret push (bad) fiadd out sarl jg ljmp rex.WR fcoms (bad) insb or loope mov in xor (bad) add sub adc jb iret pop loopne cmp ds or retq adcb movsl rorb je (bad) sarl out rorl add add clc pop cmpsb int3 shll addl rcrl adc mov sub imul (bad) jno xlat pop rex.RB mov movabs cmp imul (bad) sbb (bad) imulb adc mov rex.R or ja adc (bad) repnz rex.WB gs sbb fisubr and lahf (bad) jmpq fild xor (bad) (bad) xchg outsb add rex.RXB mov ror movabs test divb int jns rcll or rex.RX fs movabs repnz lret pushq rex.RX cmp out repz rorl (bad) sbb or cli cwtl or rex.RXB fwait fwait and sahf mov enterq (bad) xchg xor sbb (bad) andl rex int3 mov fwait jle rorl mov or mov lahf cmp cmp (bad) movabs cs enterq xor shrl xchg iret (bad) insl jle insl imul rex.WX lret or and xchg mov addr32 pushfq iret (bad) repnz fsub cwtl (bad) push cmpsb rcll mov cmp pop add rcrl pushfq xchg (bad) pushq fst sbb rex.WB mov sar sub add (bad) adc fsubrp pop add movsb rex.XB adc (bad) mov js int (bad) adc mov rcrl rcll sub rex.XB cmpsl movabs retq nop ss pop mov popfq xchg icebp fcomip pop testl jg add out sarl hlt test pushq xchg jbe (bad) pop fcmovne (bad) rcll (bad) add stos callq addl jo adc push cli test add jo sbb enterq stos rex.RX xor es or js ds fsts and movsl out jl retq clc rex.B jnp xor roll pushfq retq xlat rex.RXB push fdivl rol jge repz cmp jb pushq jle out mov rex.B and sar cltd (bad) add rex.XB fucomip lret add shll stc jbe,pt test enterq addr32 mov cmp test retq rolb xchg xchg add rex.W add push sarl (bad) jp cmp jge (bad) std rex.WX jbe (bad) dec rex.B mov addr32 rex.RXB stos (bad) insb (bad) repnz adc out and rex.B loop rex.WX cmp jno add (bad) xor sub cmc sbb pop (bad) xor (bad) stos push fidiv xchg enterq shrl clc or rol movabs push xchg enterq adc (bad) or nop jrcxz adc int3 iret cmpsb xor fistl rex.RB sbb mov (bad) movabs mov in outsb rcpps mov jmp or sub cmc jo mov test sub push (bad) out (bad) (bad) or fmul lods add (bad) out stc movabs loope nop andl rclb jmp jge mov nop ror fldenv imul cmc (bad) cmpsl rex.B pop xchg sahf (bad) xchg (bad) test outsl sbb add imulb and mov (bad) out (bad) mov (bad) add pushq (bad) (bad) es (bad) std pushfq or (bad) loope and add rex.XB rcrl fiaddl in rol fsubp scas shl ss rcl adc or insb mov mov (bad) (bad) test pushq (bad) and (bad) stos neg sbb in rex.WRX cmp sbb rex.RXB js sub rorl pop rcll and pop out enterq int3 out pop sarl or cvtps2pd cmp rex.R (bad) (bad) and std add rex.RB rex.X sub add int3 movabs and frstor sbb ja fisubrl (bad) xor insl in stc add sbb in loopne or rolb sbb (bad) jb push stos lods int add movsb cmpsl or (bad) (bad) shrb out adc repz (bad) push sbb (bad) imul out je sbb rex.RB add clc xlat xchg fsubl sub sub movabs cmp and fisubl adc fdivrp add lret jno xlat push pop jg (bad) (bad) fldenv xor lea pop rex.WRX push hlt mov (bad) shrb outsl push rex.RB xchg sbb lock clc (bad) mov (bad) decl fs xor cmc mov jnp test int mov sbb sub stc in xchg movabs fbstp rex rex.XB sbb stc rex.RXB mov mov xor cmp fstps pop rex.WRXB push mov out int pop fs cmpsb vzeroall mov (bad) test stos lret rex.B or repz hlt stc rex.XB data16 rex add jnp fwait test (bad) jnp xlat fs xor jbe callq test cmp stc lret (bad) ja fistpll (bad) cmp out rcrb and stc mov lret cmp add xchg (bad) in cmpsl sti rex.R rex.WRB pop mov xor sub xor adc adc add adc jmpq vpminsw xchg outsb je (bad) xchg imul (bad) callq out cmp sahf sbb retq rex.WR push cmp rex.RB adc (bad) (bad) mov (bad) nop roll jle sub push adc push mov jmpq int pop loope jle lret rcl pushq adc mov or xor addb out cmpsl nop xchg (bad) pop rex.W push (bad) fidiv movsl (bad) adc fdivrl sbbl (bad) (bad) int loopne pushfq repz xchg xlat nop xor pop test rex.B rex pop fwait (bad) xor outsb mov clc xchg ss mov es loop sar cld sbb retq (bad) mov mov int (bad) (bad) xchg adc (bad) (bad) jmp push callq sbb (bad) cwtl (bad) rcll movsl in xor xor and (bad) (bad) jrcxz sarl imul fld rex movabs (bad) xor add rex.B push fwait jmp xor xchg cli sub rcrl (bad) shrl rex.W fidivr lahf push insl (bad) sbb fistpl (bad) jbe callq sbb sarl push xchg test (bad) ss xor rex.WB sbb (bad) sti add ds and (bad) repz cmp xor faddl movabs mov (bad) xchg (bad) xor cmpsb cmp cs xchg shl shrl pop pop xchg pushfq (bad) pop (bad) addr32 push (bad) test fdivs in cs fs (bad) (bad) shll xchg pop iret clc rex.W xor rex.WRX int3 jle movb jns xchg pop outsb (bad) in sahf scas lods sarl movabs cmpsb xchg mov rcrl sbbl lret pushq cmp outsl pop pop (bad) repnz and pushq rex.B mov (bad) mov or hlt cmp cmpsb (bad) and add jnp lock mov retq popfq insb push fcmovne jmp lea (bad) jb mov cltd add mov lea sbb and xchg movabs icebp std (bad) lods cwtl and int3 int3 sub cmp mov add movsb (bad) (bad) or and jp pop shlb retq add (bad) movabs pushfq or shr (bad) in rex.WR mov rex.R (bad) push sub and or jge movb rol sahf (bad) xor sbb or (bad) mov adc scas stc lahf pop cld nop or rorl mov pop cmpsl xchg je cs sarl sbb loop pushfq (bad) faddl jno leaveq mov rol mov add movabs fwait cmp (bad) retq or mov (bad) cmc adc xchg cmp fwait roll jne mov std xchg rcrl and (bad) sahf scas (bad) jno rex.R lods ss sbb cs stos push (bad) pop (bad) xor fwait adc test fstps rex.XB pop (bad) mov or jrcxz pushq or add mov jno fstl cmp rex.B or repnz cmp rcll sti loope lret repnz repz mov (bad) movabs rex.XB add imul mov xor xorl jge shrl fcmovu pop sub and scas jne or in xchg mov (bad) out outsl cmc pop adc mulb (bad) xchg retq xchg (bad) fxch mov push (bad) cwtl repz data16 callq pop xor sbb (bad) xor imul rcrl (bad) scas rcrl adc (bad) (bad) xor sub pop test movsb cltd mov movabs rex.RXB mov int adc insb ss mov sub rcr enterq repz callq and stos (bad) in (bad) rex.B xchg rex.WRB pushq mov stos rex mov add sub vmread xchg sub clc not fucom add sbb jrcxz mov (bad) rex.WRX xor mov test fldln2 (bad) sahf gs callq mov loopne movabs cmc mov and push jo out or fsts cmp xor cmp sbb push adc movsl mov stc test rex.RX cmpl cltd rolb pop decl sub adc (bad) push int3 retq or (bad) jno adc cmpsb mov rcrl movslq out rex.WRX cmp or mov (bad) (bad) mov repz leaveq jle cmp (bad) fnop fwait xchg sub rex.XB mov mov xacquire sub (bad) jg mov or mov movsb or and out cmc sbb or pushq enterq cmpsb (bad) xchg enterq cmovne test push push loope (bad) imul fidivl xor decl (bad) in leaveq jmpq rex.XB (bad) or (bad) mov add jmp flds cmp sarl addr32 sarl fwait mov xchg movabs shl fcmove cmp shll js mov rcrl jae (bad) cmc (bad) idivb imul lahf lods test cmp int3 shr xchg cmc jp (bad) cmp sbb mov loop in imul cwtl stc (bad) popfq xacquire mov or int sbb rex.WX rcr sahf pop xchg add out movabs fs jrcxz pop scas sub (bad) movabs lock and sarl add or shrl repnz roll sub rcl mov cmp sbb rex.B rex movslq ror xchg lahf movabs cmp popfq jg fistpll rex.WRXB xchg repz (bad) mov mov js sub sarl sarl in jnp je add decl mov pop pushq movsb mov rex.WRXB or (bad) rex.WXB rex.B ja lea movabs shlb mov sub (bad) loop or pop rcll rex.RXB jge mov lret insb retq add sbb retq cmp xchg (bad) mov (bad) (bad) (bad) fwait ds rol callq mov popfq jb jle mov jbe xor stos sbb rex.WX lods sub cmpsb (bad) retq jle vrcpps in sarl fdiv (bad) rex.WRXB pushq clc rex.R rcll mov mov roll pushq (bad) retq push shrl sbb iret test xchg jle mov xor (bad) (bad) scas cmpsb adc andl add lea outsl (bad) mov xchg iret rex.W mov callq clc repnz loop cmp rex.B rex.RB (bad) loope or negb pop (bad) (bad) insl divl push fadd (bad) (bad) lret rolb cmp adc adc ja cmp fsubrp imul rex xchg repnz rex.WRX adc loopne mov mov pushfq roll out (bad) cltd push roll addl test rex.WR or jl cmp rex.W mov scas sbb (bad) imul fiaddl (bad) (bad) sbb loope (bad) negb cli xorb repnz loop iret jle rex.WR popfq add fadd repz xor xchg push mov push jrcxz adc rex.RXB fcmove stos outsl and (bad) negl outsb movabs std jrcxz lret fisubr fstl stos lret rex.WRX (bad) mov pop (bad) andl xor cmpb out (bad) es adc scas retq rex.B lock iret (bad) stos lret (bad) (bad) test pop rex.WRXB test add (bad) test (bad) jmp bnd cmp adc pop addr32 in (bad) sub rex.R andl xlat add (bad) (bad) and xor data16 repz add movslq mov movsb enterq xchg rex.B test lret jrcxz jle rcrb rorl cs rex.R sub jns flds xor jbe (bad) sbb mov jge (bad) rex.RX sub pop rcll scas fistp jns movabs shll movsl pop cmp sbb rex.R cli (bad) lahf lea (bad) clc data16 jg rex.RX test rex.B rex.XB shll pop out repnz or push out pop mov jno out (bad) sbbl xor mov (bad) rcll xchg stc xchg jns xchg je pushfq xchg test outsl rex.WX lock cmp and and cwtl mov mov andl sbb lahf cld (bad) mov or rex.WX repnz and xlat rex.WR test movsb (bad) leaveq or xchg add (bad) xor xchg movabs xor outsl icebp movabs push cltd insb (bad) rex.B adc fcoms out mov cwtl enterq mov popfq lret rex.RB lock xchg rcrl jl mov stc sbb (bad) xor xor jno retq jns nop scas mov rex.RX or sbb shr (bad) mov rorl (bad) pop shrl (bad) add pinsrw xor and scas movsl in insb inc sub (bad) mov loope lock fcomp jge (bad) rcrl movslq adc test and mov movb rex.WR shr rex.WB loope (bad) rol clc insb stos xor sar leaveq std mov out test test (bad) pop repnz adc (bad) mov fimull and push rex.RX repz mov jne outsb (bad) xor (bad) cltd js movabs iret icebp (bad) insl (bad) rex.B rex.B je test (bad) jle btc mov rex.B lea ds (bad) rex.WXB sub jns (bad) in adc shl pop roll xchg xchg (bad) push pop jbe mov fldcw lock int3 add xchg divb fistp mov (bad) or or mov addb xor out mov std mov ss (bad) test rcll and sar sahf or (bad) (bad) movsb (bad) insl pop callq imul push mov adc retq neg pop cwtl shl cld adc pop insb and sahf hlt sub (bad) hlt test cltd mov add data16 vmovss mov rcll ss jl rex.RX mov cmp (bad) lods pop jrcxz or shll (bad) cli xchg jnp imul (bad) rex.B pop lret jbe fimull fidivrl retq (bad) adc iret (bad) mov (bad) pushq fld andb shll rcr jns jrcxz adc and std pushq je (bad) (bad) movabs sub faddp clc jb cld cmp (bad) (bad) (bad) push test movslq enterq cmp rex.B mov in jge and mov iret mov rex.WR xchg adc pop gs insl jne rorl imul jl int3 cli mov (bad) mov xchg ljmp pop rol mov add fsubrs (bad) or jle clc addr32 sbb rex.RB es lret rcll in movabs and (bad) xor fild mov (bad) (bad) (bad) retq or (bad) mov or retq push iret retq cmp (bad) hlt leaveq imulb jb rex.WRXB (bad) test sub ss pop repz add cmc cmp in add xlat sarb ja enterq lret fsubs cli fisubl fisubr adc rex.XB repnz (bad) jl movsb jo rex.WRXB int3 rex.RXB cmp icebp shlb retq or xchg (bad) notl loop add rex.WRX rex.WR pop in add insl out jg rex.WX xlat retq repz hlt (bad) (bad) fstpt xchg repnz rex.WXB rol repz xchg xor (bad) (bad) (bad) jg (bad) jae pushfq add jae frstor js push (bad) fimul icebp or xchg cmc pop sub mov in xchg sub rex.WR jmpq mov shr cmp in push mov mov adc add clc mov jp sbb (bad) sub notb cli sub insl sahf pushfq mov jg imul and or push jp add push and movsb (bad) jb mov jl pop divl (bad) pushfq add adc mov int3 adc movabs popfq fwait mov mov pop (bad) sahf movabs cmc (bad) jne sbb sarb scas mov sbb icebp mov add (bad) mov xor loope cmp icebp cwtl (bad) fisubr in lret retq icebp movabs repnz (bad) fidiv (bad) mov xor icebp rcll ffree jl cmp int (bad) lock sbb mov fdivrl out fucomip out leaveq and add rex.WRX xor mov rex.RX sub (bad) (bad) xchg int sar (bad) cwtl sbb imul ds stos jg mov pop (bad) popfq adc rex.WR xchg rex.B lea cmp (bad) hlt xor xchg and pop sbb (bad) or add (bad) push and rcll rcl pop loope icebp jg adc xchg roll or or sar sbb (bad) mov xchg lret gs add (bad) rorl insl jmpq (bad) jo push (bad) gs xchg callq mov (bad) (bad) mov jbe (bad) leaveq (bad) pop fprem1 int repnz or push mov rex.WRX jno (bad) ss std rex.WRX scas rex.WX mov adc (bad) (bad) jmpq mov insb jns fs jmpq repz xor (bad) (bad) xor movabs out pop stc jns xlat (bad) add sbb sarl cmp mov sar scas (bad) gs push jmp add jno jb test add pushfq (bad) add and lret fnstenv (bad) out and cwtl (bad) (bad) push rcl mov (bad) jge xchg (bad) retq in cmc rex.RXB (bad) movabs ror hlt rex loopne js or (bad) rex.RXB rcrl repnz push and movabs mov mov or cmpsl mov insb xchg jo pushfq xchg mov (bad) roll mov mov rcl xor mov ss test fldl cmp or iret jo lock (bad) addr32 jne int adc fwait (bad) pop (bad) rex.RB rex.RXB cmp xchg (bad) in mov lock rex ss mov mov (bad) retq mov rex.RXB hlt jo adc xchg int3 xor mov popfq icebp (bad) subl fadd xchg adc out scas sti (bad) push (bad) rex.WRX shr rcr mov adc (bad) test xchg repz (bad) adc mov sub adc out leaveq sbb ffreep xor rex.X sub xor (bad) ds cmp in outsl rex.WB outsb sbb jge mov adc mov or rex.WRB pop xor mov popfq cli sbb rcll bsf mov xor jle rep test cmp pop decl int xor or leaveq iret sbb rcrl rol xor lea add add stc repnz push repnz int3 loop add or xchg xlat mov and int3 stc sub xor (bad) mov jmp rex.WR mov push pushq pushq jp and rex.WR stc data16 fucomip out mov mov xchg mov (bad) rex.WRX rex.B mov jge retq loopne rex.RXB fstpt leaveq cmpsb cmp (bad) sub mov (bad) outsb and clc callq rex.R jae rex.RXB andl (bad) repz imul or (bad) mov rex.WXB callq rex.R rex.RX rex.WXB rex.XB or jb imul (bad) (bad) lock (bad) mov pop jle and sub rex.WRXB adc (bad) lock xchg fstpl sbb sti in rex.WX adc jno int3 push and iret loopne rex.RX pop push jmp (bad) pop or test (bad) repnz rex.WR movabs xlat imul push fdivs enterq shr (bad) pop jo cmpsl movabs rex.WRB (bad) sub jmp add cli icebp cs clc pop stos sbb mov (bad) (bad) repz movabs add xor add mov incb scas sbb mov cmp or xchg lock jle cld addr32 mov data16 add (bad) ficom mov retq xchg lret (bad) add add or rex.RB jmp ror push rex.RXB xor addr32 outsl (bad) idivb int rex.WRX sbb sbb jnp xchg fdivl and push test and (bad) callq xor (bad) mov push push clc shrl shll (bad) (bad) insb stc push mov shlb movabs ja fisubrl and fs loop or scas rcr push out pop cmp (bad) fildll add lahf pop (bad) mov rorl rex.WRXB cs push (bad) mov movsb je pushq cmp iret and pop adc je xor repnz and movabs (bad) push pushw xlat sar and or rex.WRB (bad) fildll adc ja jp (bad) adc leaveq sbb jae or add sbb scas rcll sbb or (bad) xor adc rorl addr32 fwait stos repnz sbb movsl pop xchg jge (bad) xor (bad) sbb (bad) shr fstl loope and mov loopne jno mov jbe pushq hlt (bad) jno xor xchg (bad) sbb mov mov mov (bad) or retq fdivl fcmove mov (bad) (bad) outsb rex.WX add leaveq or adc shlb fwait retq int sub popfq mov (bad) sbb mov mov rex.X jle (bad) retq jrcxz mov rcl (bad) popfq pop pop repz test rex.WR sub fnstcw movsb loop movsl (bad) pop jge lret sub push rex.B or lock jrcxz data16 movsl rex.XB lea lret lock movsl in adc (bad) mov push (bad) fsts adc (bad) fnstsw lock sub and lods cwtl jg (bad) sub shrb movabs callw (bad) mov and roll cmpsb mov pop div adc sar (bad) (bad) in add adc adc pop sarl rex.WRB shrl addr32 shll mov mov lahf out push mov js add test cmp adc (bad) cmp outsb in adc icebp sbb rex.RXB jbe lret adc rorl and jg push xlat shr (bad) rex.R rex.WX ss stos or sub cmp repz loop cmp rex.RX xor jge jbe std (bad) roll loope pop rex.WX adc (bad) mov lahf or push and (bad) in add movabs (bad) sub movsb leaveq mov (bad) and or fdivs xchg fisub mov xchg popfq jae cld rol xchg sahf sti loopne pop jrcxz rorl add outsb fst rcll mov in xor incl pcmpgtb (bad) cwtl push add mov xchg fwait iret (bad) jne (bad) sbb xchg pop xor loop (bad) repnz fistpll mov push mov iret cmp rcrl pop sbb in stc rcll (bad) mov (bad) jg cmpsl addr32 rex.WR or lock (bad) repnz mov xor (bad) xchg rcll jo (bad) or shrl loopne (bad) push (bad) ja out (bad) mov sbb add sahf rcr cmc cs (bad) repnz jno addr32 rcll (bad) out scas jrcxz mov test enterq cltd retq pop out callq (bad) lahf movabs fild loopne push cmpsl adc cs xor clc cmp sub mov (bad) sbb xor mov rcll (bad) cli mul rex.WX je adc (bad) xlat sarl xchg jl (bad) (bad) rcl cmp xor vmovups (bad) pushq stc xchg rol and (bad) push and cmp pop int (bad) repnz mov movabs (bad) xchg (bad) fwait push xlat (bad) retq (bad) jg sarl mov xlat je callq scas adc (bad) outsl (bad) or iret hlt (bad) movabs rex (bad) (bad) insl int3 stc idivl popfq mov stc (bad) mov (bad) stc fldenv sbb in mov sbb and fwait std pop xchg mov (bad) in push mov (bad) rex.RB pop shr pushq sahf (bad) xor sarl xchg mov retq add xlat jle jae (bad) jp or mov rex.RX jl sub and (bad) xor adc xchg push add or mov callq movabs movabs fadd jrcxz repnz xchg jno (bad) out push mov (bad) ror add movabs rcrl (bad) fwait rex.WRB rclb movsb int3 push cmp (bad) mov sub int icebp and rcr cld pop loope test mov jrcxz xlat jns xchg movabs rex.WB (bad) movl lret fs mov jge movabs mov jl adc cmp xchg imul movabs cmp rex.WX pop jrcxz add and retq repnz push loope jns (bad) jbe xor fwait cld test mov adc cmp cmp xchg rcl stos movabs xorb mov push fisubr int3 lret or fdivl jp pop mov mov add rex.W sbb jl pop rol jmpq rex.WRXB rcrl and adc rorl push jle out out (bad) lock add jg roll popfq adc movsl sub jp ja rex.WRXB push loopne jb jne test shl rex.B and (bad) pushq imul sbb lock xor mov xor scas lea in add lods (bad) mov cld sub cmp rcrb inc pop cmp scas push lret xor lods (bad) cltd cwtl jg (bad) loopne pop push addr32 adcl (bad) shr add in sbb stos xchg lret (bad) sub sarb sahf lcall rolb rex.R data16 fist xchg nop fs lret fldl rex.RX cmp rex jbe,pn rex.B out gs jno shrl out sbb jmpq test mov pop retq in lret mov xor push lret ss lods push rex.WRXB in add mov adc jg fidivl rorl jmp (bad) (bad) mov repz mov mov clc test loop in rcll rex.R in scas xor rex add sahf mov (bad) add cli rex.WR stc jnp mov es sub callq xor rex.RXB loope rcrl loopne (bad) pop rol push (bad) and (bad) (bad) xor rex.WRX (bad) sub add jp mov sbb out faddp add ffreep pop pushfq push add lret jno leaveq movabs std movsl roll jns xor xchg shrl rcll (bad) mov rex.WB out addr32 mov ds data16 rex.R fcmovb push movabs pop test push test add xor sub xchg (bad) and mov rex rex.W sub xchg not xchg es rex.X rex.WRXB mov std jno sbb xchg sbb cmp out fnstenv lret pushq xor sbb (bad) repz fsubs lock adc (bad) movsb stc add pop or imul and or out pop sbb mov mov (bad) cmc fstps and push and rex.WRXB repnz fsubl rex.RXB (bad) xchg iretq js icebp in lret imul (bad) rex lea pop (bad) fwait and (bad) mov addl insb sbb nop jns jle xchg test mov fdivp cmpsl (bad) push mov or mov ds cltd add rex.XB xchg fdivl add xor fld repnz sbb (bad) lock pop xchg cli (bad) push (bad) (bad) sub shrl mov jns add movabs mov cmp cli add fistp stc movsb pushfq clc rex.RB test enterq fdivrs (bad) cs adc mov loopne add cltd je enterq shll rex.RX fdivr imul rex.R xor test fwait cmc mov iret rex.RX rex.WR cwtl sub mov loop cs int loop mov xlat xor cmpsb (bad) sar (bad) test outsb rex.WR rorl mov roll and cmp jl loope iret (bad) cwtl jae (bad) test fisttpl sub mov retq jbe mov push icebp repnz sbb popfq (bad) add cmc cwtl (bad) fidivrl (bad) rol pop (bad) adc mov mov int add rex.R loopne mov sub mulb pushq shrl cs (bad) (bad) cmc rorl enterq sub push test (bad) mov movabs add loope (bad) fisubr int3 jo (bad) orl mov cmc add sar clc or add cmp retq icebp in nop cmp add je movb xor loop test pop pop iret push sahf rolb xchg (bad) fnsetpm(287 (bad) (bad) cltd insb or popq roll lahf (bad) and jle clc xchg fnstenv (bad) loopne rex.WRXB mov roll jnp (bad) adc std shll adc rcr add sbb movabs (bad) fsubrs rex.WR rex.RX lahf jle (bad) jl lret (bad) and pop movsl ss (bad) rex.WRXB (bad) sar shrl stc xchg (bad) lret movslq (bad) (bad) adc jp sub sbb adc data16 (bad) rex xchg (bad) lock icebp mov and stos rclb fcmovb mov cwtl pop xor or mov (bad) nop (bad) cmp mov sbb mov cld (bad) rex.WR movabs (bad) xor insl jno mov xchg lret mov or ss fwait enterq outsl retq addl (bad) xchg mov (bad) shll popfq nop add rex.RB gs lret (bad) repnz out jle movabs hlt roll fwait add imul xchg out rex.B sub pop (bad) xor callq stc jns in int lods mov imul mov adc iret mov sete rcrl cmp mov lahf cmpsb add (bad) or fdivrs repz rcll rex.WX fwait movabs mov jb push loop outsl (bad) int movabs cmpsb lret mov (bad) outsb adc sar cltd in cmp (bad) fucomi loope mov outsl rex.R jnp jge test sub cmp jb sub xchg fsubs xchg loopne cld xor in or add loope enterq (bad) divb outsl xor adc (bad) jge mov fistpll adc (bad) ds rex.WB sahf xor and movsb and add sbb (bad) sti mov adc fs pop (bad) test repz xchg mov loop (bad) mov (bad) cltd push add ss xchg cmpsl cwtl xchg loop fucomp ror movabs (bad) mov (bad) xchg (bad) jne fwait popfq movabs pop mov lret int3 fsubrl scas xchg sub and enterq mov mov rex.WR test sub xchg cmc js sarl in out mov cmp cmc mov pop mov shlb add pop pop loopne pushq mov adc movabs lods mov sbb (bad) fcompl (bad) add sbb rex.W xor movabs or adc (bad) jp lret or rex.XB adc scas xchg movslq jno cmc and stc mov pop hlt js lea push jno mov insb (bad) jo add sub ror sbb jrcxz insl fdivr imul lret or movslq mov or stos mov (bad) push and lret out push in jmp jno sub iret adc lock icebp fnsave in jmp xor insb mov (bad) movl hlt in (bad) outsb repz enterq imull retq (bad) scas (bad) loope adc xchg rex.RB push outsl cmp sub mov xor mov rex.X imul iret leaveq rex.R xchg pop adc cwtl fidivl lock sbb lret rex.WXB pop callq sub xchg enterq pop cmp sahf xor fdivr lock movsb pop or lret sbb xor (bad) in adc lock (bad) repz and in out loope lret sbb (bad) (bad) mov (bad) sbb mov add mov xchg pop flds outsb pop loop (bad) xchg mov jge in jne fnsave jno lret movabs or repnz push sti fs (bad) or adc pushfq mov (bad) fucom or shrb rex.WR cli sahf xchg shrl cmp (bad) (bad) in stos mov ja add sbb mov (bad) imulb test gs (bad) push pushq jno sti lret (bad) cmp lods cltd idivb rex.WRXB adc shll mov (bad) lock push mov rex.B (bad) es (bad) leaveq cmp cvtps2pi gs adc mov mov sahf jno lods in and fs rex.WX (bad) mov xor cmp testb sbb rex.XB fs (bad) or push rex.RX imull jp xor mov es stos int (bad) push xlat xchg scas mov movabs notl (bad) rcll testb xor (bad) xchg (bad) mov lea jmp xchg shl (bad) sbb fstpt adc int3 or fldl xchg (bad) movabs add add (bad) fwait and or (bad) (bad) movabs mov (bad) icebp rex.B mov insl in mov (bad) and xor (bad) jrcxz push add push (bad) cs rol xchg insl mov and cmp (bad) jno jge shlw (bad) mov (bad) xor xchg mov pop (bad) add mov lret adc retq lock repnz in fnstenv test imul icebp fnsave lret scas test retq movabs cmp (bad) std (bad) lret popfq cmp imul add movslq lods jrcxz xor adc ss fisubl movabs push (bad) pop and js mov in movabs adc out enterq xchg rex.RX test (bad) jno xchg (bad) lahf jmpq rex.RB add rex.WRB (bad) enterq addr32 mov retq xchg pop test xor xchg rex.XB xchg (bad) (bad) jo sub add (bad) (bad) adcl movslq add jb mov jbe cwtl movsb loope (bad) xchg or and (bad) (bad) (bad) adc (bad) faddp in rorl lret in (bad) (bad) rex sub sti stc and push pushq (bad) gs mov rex.XB or icebp sahf (bad) and (bad) rorb fwait cmpsl jg push or fcmovnu and enterq movabs sub (bad) mull rex.WRX rex.WRX in pop (bad) roll (bad) or repnz rex.X vaddpd gs xor cltd mov rex.R rex.WRX psadbw flds movsb (bad) mov (bad) cmp sub in loope cmpsb sub push ficomp movslq xor pop (bad) rex.R (bad) push stc add retq xlat loope lret sbb fldenv sbb cmp mov adc loop retq movslq dec rex.WRB cmp cmpl and lods fwait xchg scas imulb loopne rclb vcvttss2si sahf cmp jb pushq jrcxz (bad) cmpsl test fistp ja pop icebp mov jbe mov movabs jrcxz mov adc test orl rex.R (bad) loopne rex ds mov mov (bad) (bad) sub rex.WXB sahf cmp xor mov rorb lods loopne (bad) add (bad) (bad) rex.WB cmp jb xorl xlat (bad) push outsl and (bad) cmpb rex.RB fs enterq rex.WB ss out imul push ja mov rex.RX roll fisubrl jno retq sbb sbb sbbb roll push and rol test jo mov scas add movslq xor rex.WB mov int cmc (bad) add in callq test or loop (bad) sbb fldl jrcxz jae jge mov popfq (bad) rex.WRXB push repnz pop xor enterq imul push push rorl add ja cmp xlat xchg fs ror iret loopne sub push rex rex.XB rex.RXB push xor rex.X add rex.WXB mov mov cld stc (bad) sub icebp jo (bad) adc loope jge enterq and rex.XB cli jb mov pushq pop out sbb rex movabs pop mov adc adc pop iret movabs rex.R repnz and jns xor (bad) nop cmp fldcw (bad) (bad) je in (bad) jno xor push (bad) movabs fstl fnstsw divb xlat pushq outsb mov mov sbb cmc test pop or insb lahf add ror roll stos int3 pushfq xchg imul (bad) out rex subl stos sub int sbb add (bad) in push sahf cli sbb jge xor popfq in rex.WXB xor (bad) sbb retq mov stos popfq adc rcr mov mov rcr insl movslq push xchg (bad) (bad) fstpt movabs push callq insl jle sub jmp int3 push (bad) fmul rol jno jae (bad) xchg rex.R stc add xor xchg sbb add (bad) (bad) loope fnstsw roll pushq test push rex.XB leaveq rex.W jns not sahf movabs mov adc insl cmp mov (bad) xlat rex.X sub sahf loopne (bad) mov movsb icebp movsl mov rex.WR rcrl repnz add cli test mov mov sarl movslq pop clc jle roll in (bad) mov rex rcr cmc pop (bad) (bad) data16 mov outsb rex.X imul adc shrl stc es imul (bad) cmp (bad) shll jge std rex.WB sub mov rex.WRX jne xor jge jmpq mov sbb fidiv fmul jbe out outsl add xchg push cs in push retq rex.WR push and rex rex.WB (bad) pushfq movabs cmp xchg sbb rex.WXB imul (bad) cltd rex rex.WRX movsb (bad) jge xchg sub xchg insb (bad) pop (bad) repnz adc and mov and (bad) (bad) rex.WRXB rex.RB mov movslq (bad) fisttpll push testl cmp ss cli or mov xor (bad) mov out adc lea (bad) (bad) xchg je mov addl scas add pop lods jg jno xor rex.WB fs fxch cmp cwtl xlat cs movabs xor rex.W rex.WRX rex.WX or pop (bad) rex.WRB xlat rolb push test fwait mov mov (bad) sub int jg pushq not sbb test cmp rclb (bad) outsb (bad) movabs cmpsl (bad) rex.W or jmpq out jbe (bad) int3 insb mov jl push jmp adc xchg imul rol imul cmp push mov cmp andl xchg mov or mov (bad) repnz jp incb pop xchg add rex.WRX shrl sbb mov or adc mov lret vunpcklps add jrcxz (bad) scas rex.B repnz ss movslq sub or icebp std (bad) int3 rex.X fimull test je mov fnstsw (bad) (bad) callq outsb addr32 xchg stos (bad) xchg stc clc cld mov mul jb fwait jae roll push cli add rolb (bad) rorl mov fwait lods mov movabs retq rcl pop cld mov cmpsl ja adc add xchg pop int jle xchg imull loop jmpq fsubrs fadd and add mov stc loopne cmp (bad) xchg rol pop jg loope fs mov sub (bad) fsubr pop sub add (bad) pushq rcll mov and and imul cmp stos bsr cwtl or rorl cmp or push int (bad) mov xchg lods adc adc (bad) adc jg insl sub push loopne lock or std ror and rex.WXB rex.WRB ja (bad) rex.R cwtl or out push shll sub adc cmp sahf data16 (bad) rcrb repnz mov fistp and mov shrb xor pop mov mov cmpxchg8b movsl movabs jo out add sub (bad) (bad) (bad) add adc xor pop lods pushfq (bad) mov out add std int3 cmp mov pushq xchg xor (bad) adc outsb or mov and mov mov (bad) insl rex.XB push or or jl (bad) adc xor enterq rex.WRX (bad) cld movabs (bad) cmp cli js add test sarl (bad) pop xor xchg lret sti insl out popfq in int cmp fcompl xchg adc and adc jo jno retq rep or fs jmp xchg gs js push (bad) sarl (bad) (bad) adc orl test xchg retq (bad) scas callq stc mov (bad) jmpq in enterq shrl jbe fldcw rorl rex.W mov rorl add mov ds movslq mov cmp adcl rex.X add hlt shr jl pop add add pop (bad) xor mov movl jl or jrcxz cmp pushq fsubrs xchg adc fdivrl push (bad) pop in mov vpgatherqd (bad) in fnstcw std stos (bad) xchg jmp movslq pop fsts rol (bad) xor scas cmovs es movb ja std (bad) rex.WRXB cmc jb test add (bad) scas jmpq xchg icebp addl callq add xor (bad) outsl (bad) stc jo roll leaveq sbbb adc cltd cmp rorl mov (bad) pop jge in loope sub cli sahf adc movabs (bad) mov push jp xchg movsl jg xchg movb pop imul rorl and pop cmp in scas fsubs (bad) out movabs in fmulp rex.WX fnstenv or add xchg data16 rex.B ud1 shr rex.XB rex.WRXB and (bad) pop sahf rex.X shrl movabs (bad) pushq adc cmp in shr (bad) rex.RXB imul xchg jrcxz or fildll stc add (bad) nop (bad) sbb (bad) xchg (bad) (bad) jbe std (bad) xchg divl (bad) mov adc sub xor rex.B rex lods movl pop (bad) and lahf cli repz rex.WX push xor sub jae adc (bad) fistpl bts rex.WRX jl pushfq fsts xchg push shl popfq mov (bad) jmp fbstp pop (bad) mov sbb out (bad) jp (bad) jo icebp int out (bad) lret insl addr32 push and fstp imul mov fldl jrcxz fimull (bad) pop sbb rex.WB (bad) lret insl xchg (bad) leaveq sub add adc nop pop movsb sub xor loope int rex.RB out cmp xlat (bad) jle out sub (bad) sub xor jo data16 movabs adc mov addr32 xor xchg rex.X cmp jg (bad) mov loop add mov int pop rorb (bad) or (bad) (bad) lret ja idivl lret ficom cmp pop repnz xchg in (bad) shl test mov jb popfq (bad) push (bad) rclb (bad) in cmc bnd jnp movabs (bad) mov sbb movl mov fidivrl fs rex.W or (bad) adc mov movslq cvttps2pi imul out cmpsb (bad) xor rex.WB rex.X retq (bad) push test callq lret rex.XB push in push rcrl jle mov enterq rex.WB loopne sbb add (bad) lea movabs rex.X or adc jmp sbb jmp movabs in xchg push cmpsl sbb jae jo lret or and repz test negl xchg sbb mov cli pushfq jp (bad) pop jl cmp enterq or ja jp cltd rex.W movabs (bad) icebp cmp (bad) fistl rcl rex.B jmp cmp xor (bad) mov mov sub add or cli int add pop mov push and pop lahf xor add addb (bad) repnz stos hlt lods (bad) sub test insb mov sbb add sarl rcrb mov mov (bad) or lahf out (bad) movb (bad) movabs (bad) subl rex.WR insl stc rex.WR imul clc bnd sbb pop fsts fistl sbb push sub (bad) hlt decl rex.WR gs (bad) rex.WR enterq addr32 xchg incl rolb xlat rex.WR retq adc (bad) (bad) rex.WB movabs pop sahf cli outsl xor shrl roll add stc mov rcr sub sbb sub ficom xor mov imul rcr rex.WB add (bad) (bad) (bad) rex.WRXB xor mov and rex.WXB shll mov out (bad) pop sbb add xchg mov or adcl jns shl ja rex.RXB rex.B sarl and xor mov stc (bad) and movslq xchg mov push hlt int push lret mov mov and in sub insl rex.WRXB jno fnsave out or sahf movabs mov icebp jno shufps mov lahf (bad) popfq rclb test movabs add stc cwtl push sub xchg movsb xor jae and push xor popfq movabs rex.B cmpsb (bad) sub vcmpss out hlt mov out (bad) xchg pushq sub xchg jne xchg iret lret imulb out add or adc rex.WRXB cmp lock rex.W xor lret add sub (bad) xchg add stos jo roll loopne (bad) (bad) int3 (bad) jbe es jnp xchg stos push jno rclb pop xchg shll or mov scas rex.B fs rex.X (bad) jg out lods mov add scas repnz (bad) sub jle lret test pop (bad) nop mov in jns (bad) rex.WXB pushq (bad) sub (bad) (bad) (bad) jno rcrl and rex.WRXB (bad) out xchg rol jmp mov or fwait notb cmpsb cmp cmpsl retq pushfq lods pop fcomp movsb imul in jno or enterq rex (bad) adc cmpsb jmpq mov rex.B int3 cmp xor (bad) mov xchg (bad) adc rorl mov retq jmp (bad) pushq sub cmp movabs sarl (bad) push push stos rex.B rex.W ss (bad) int nop jno stos cmc sbb cld jrcxz rex.WX test xlat ja rex.XB push xor rex.B lods hlt fildl lods mov mov cmp (bad) stos jnp add add sbb test sarl test (bad) nop adc mov add cltd data16 sti imul push rex.WRB and loop jo rex.B (bad) mov or (bad) or cmpsl cwtl (bad) icebp movabs movabs mov cmc mov outsb retq iret test lcall jl icebp sbb (bad) xor in ss subl jbe lret xchg enterq mov add (bad) lock add sub or fidiv and imul (bad) jo ror adc jrcxz ror mov (bad) rcll and repz rex.XB jmpq rex.WR sti cwtl jmp cmp mov (bad) mov in xchg rex.RB xchg in rex.B adc fistl xchg lods cmpsl (bad) stos sbb iret xchg rex.X adc ds clc jno and ss jb rex.R jbe shl cli rex.B lahf or icebp cmp rex.B xchg jle rex.WX mov (bad) (bad) sbb sub movabs stc test xlat xor (bad) stos sub out rex.WXB add xchg out sbb or adc movabs mov decb mov jns rex.RXB push (bad) or push jge (bad) movsb pop out add callq mov cmp rex.WRB (bad) (bad) fidivl lret jns mov sbb loope rex.WRB test lods mov sysret movabs lret add (bad) jno xor jns add mov add (bad) jae pushq (bad) (bad) mov in jge iret loopne enterq int xchg (bad) rcl mov jle mov orl retq leaveq pop (bad) rorl push imul push in cmp iret rex.WRB mov retq (bad) mov rol insl rex xor xor imul jmp pop jbe mov xchg mov adc fidivl (bad) xchg cmc rex.RB or (bad) pushq adc mov (bad) ffree leaveq sbb (bad) rex.XB (bad) xor movabs xor lea stc xor shrl int3 in mov and hlt out and (bad) xchg cmp retq fbstp orl xorl or fistpll and add in rex.WX gs ljmp xor (bad) (bad) xor icebp (bad) and movslq mov retq sbb and xchg ffree orl (bad) push and ror sub fmulp scas jle sarb ds mov (bad) lods out iret mov sub test je mov jmp and mov (bad) clc popfq cmp repnz insl xchg and mov insl mov cltd ror mov icebp jp jne add (bad) lods in rex popfq mov (bad) retq out addr32 cmp (bad) sbb sbb push je lahf rcll (bad) add jg cmp (bad) cmp rorl cwtl std shll shll movabs jns (bad) xchg adc mov push (bad) (bad) rex.WRXB rex lock ss jae (bad) sub mov mov or pushq rex.RX test in movabs popfq add mov fs rex.WXB adc xchg insl mov jb std and and lret retq add out fcoml (bad) pop (bad) pop and (bad) mov in scas (bad) fwait pushq (bad) ror cmp sbb push repz xlat (bad) jge xor jo pushq push hlt out xchg icebp mov rex.RXB or rex.X add rcrb sub mov rex.RXB mov push retq scas jle mov add (bad) xchg sahf (bad) or and pushfq mov (bad) pushq cmp retq jg sbb (bad) (bad) (bad) jg sbbl sbb retq adc jnp rex.WRB xchg pushq or (bad) xchg add loop cmp (bad) pop rorb sbb add cmp mov (bad) movabs loope (bad) out cs ss xor xor data16 sarl sub iret push lock stos xor neg add rorl (bad) rcll pop imul sub mov (bad) (bad) rex.WRXB (bad) mov rex.WXB sbb rorl ds in push mulb movabs enterq mov pushq rcrl (bad) fdivrp jae jno xor cld (bad) xchg test mov (bad) sbb (bad) xorl xor xchg mov (bad) pop add rorl jmp int3 cltd cmp (bad) fbstp or sub mov (bad) jl (bad) (bad) (bad) mov (bad) pop movsb (bad) and in pushfq callq rex.WRB movabs rex.RXB cs and imul sub mov add push (bad) mov loopne movabs stos jge cmp ds out mov roll adc rclb lret add ds rex.X rex.RX or cmpsb push cmp retq cmp test rex.W (bad) xchg rex.XB rex.WB shrl rex.RX mov int3 mov std rex.W rex.WRX mov jne (bad) rex.RXB out clc mov mov pop pushq push inc std add and xchg push lea rex.X jle rex.R xor or flds repz clc xchg retq (bad) cld pop testb movabs or repz rex.RX xor out (bad) roll xor shl mov imul mov movabs adc push in (bad) add cmp xor sbbl (bad) add sahf sarl in (bad) mov rolb movabs sub adc rex.W push rex.B fmul mov nop (bad) or jo or fisub rex mov lcall callq fcmovb (bad) rex.WXB in cmp xor fldt mov fnsave mov jl fbstp mov in cld (bad) retq or (bad) add jnp and add mov cmpsb imull or insb jmp sbb movabs (bad) push stc adc jbe sub jno or leaveq pop lea movabs cmc rex.WRXB cmp rolb (bad) (bad) pop or retq jne rolb cs xchg roll enterq loop retq lahf pop mov xor rcll data16 mov outsl loop or (bad) sbb (bad) ficom cltd xchg std roll rex pop (bad) pop pop rex.WRB mov cmp rex.R out jb push es rex.XB ds repz insb or jbe mov fisttp rex.WR (bad) mov (bad) rcll fwait rorl xchg xor adc shr mov add mov (bad) rex.RXB mov int shll movabs gs imul or shrl shll jo add ds decb int xchg rcr pop cmc jge and (bad) rex.B rex.W cmpsb sahf pop insl rex.B insb hlt bnd lret xor incb xchg movabs (bad) callq mov jne xor rol pushq push lods mov fs xor push int3 flds cmc rex.RXB jmp rolb in jge sti rcrl loop mov cmp insl (bad) mov movabs cmp and out (bad) adc cmp (bad) in mov jp (bad) rolb rex.X sahf xchg rex.WR (bad) or mov test pop shr sub add jmp push fldcw or and in (bad) fucomp callq retq sub (bad) push adc mov pop (bad) jns int3 shll jb rorl (bad) (bad) push repnz jrcxz xchg (bad) xor adc clc mov out mov (bad) movabs test (bad) sarl retq jmpq imul xor mov sbb jae (bad) (bad) repnz rex.B movabs (bad) or stc pushq mov movabs sar mov (bad) xor cmp int3 and ss jno (bad) cmp jne pop callq mov (bad) (bad) push (bad) push mov movsb jae movabs pop adc sbb iret (bad) jb fldl (bad) add add mov (bad) fs fcomp outsb mov repz fisubr std callq or fldl mov movabs scas (bad) packuswb jb mov ja repz xlat out test lret and and (bad) mov add clc pushq sub ja add rex.RX (bad) xchg movabs mov and rex.RB test outsl xor add (bad) loopne cmc jmpq rex.WX and lods sahf jnp fsubs cmp sti loopne callq hlt rex.RX iret rex.WX (bad) ficom mov lods icebp xlat fdivr add lods add cmp lods pop movsl cmpsl (bad) in mov leaveq rex.RB fisttp xor (bad) pushfq movslq and sub rex.W jg cmpsb stos rex.WRXB fcoms repz pop xor (bad) movsl pop and cmpsl (bad) cmp fdivrs sub in xchg cmp xchg int sarl rex.B push cmp mov add rex.RXB loope ficompl jnp xchg and pop and jge mov rex in int fcomp push and mov pushq int3 insl sbb rex adc (bad) pop repz add mov sbb pop mov lods rol int3 fwait rex.WXB (bad) retq (bad) mov xchg test cli (bad) sub insl sbb (bad) cmpsl insb cmp repz int3 retq mov (bad) jno,pt out (bad) pop movsb jg mov sbb loope cmpl repz sub xchg push or xorb rex.W (bad) jmpq fcompl add sbb rex.WRXB adc mov fmulp insl rex.WB test jl lret iret in lahf (bad) jb es and lret rex.B or test add cmp xlat (bad) add xor push roll (bad) mov (bad) rcrl frstor movsb int ds shll (bad) adc (bad) mov (bad) rex.RB shrb add adc outsl rex.RXB movsl adc (bad) lock adc sub pushq fldcw add (bad) cltd xor (bad) ss or mov shrl or lret (bad) sbb movabs jnp outsl test sub in (bad) mov xchg lods jge jno mov rcll xor (bad) (bad) mov mov pop hlt rcrl movsl xor cmp add xchg (bad) jns (bad) mov pushq lock adc add cmpsb xchg cli sub mov cvtdq2ps (bad) xor and sarl push sarl xchg add insl mov mov and sarb mov mov movsl add xor shrl (bad) or iret test mov int out mov xchg mov jle (bad) test shl and adc (bad) rex.WB or out iret scas jg out (bad) movsb icebp jrcxz outsb rol sbb in movsl sub pop (bad) cmp shrl xchg xchg mov fisub cld roll negb (bad) iret (bad) jb test in rex.WR retq jmpq fnstenv xor out pushq (bad) orb and test cmp rorb lret add icebp cmp adc sub callq es scas rorl out jb xchg add adc or movabs mov sbb adc push mov rex.RX rex.WRXB fs jg mov pop shrb or rcr rex.WR repz push or icebp sarl stos lock fisttpl or (bad) icebp push fiaddl xor pop mov lods xlat repnz andl rcr xor outsb stc (bad) mov and (bad) std jb xchg xchg rex.X (bad) roll shlb push cmp idivl cli rcrl jno fsubrp movabs sub rex.X imul shlb xor jns shl movabs out movabs mov repz cmpsl sub jb (bad) in jb xchg or outsl (bad) sbb roll je and xchg adc xorl mov xor rex.WRX mov (bad) pop lret clc lods test scas jne ror push loope add clc cltd (bad) push rcll in addr32 sub ss sbb movabs cs pushfq jp (bad) ficom fs (bad) (bad) in rex.WRX adc add es rcll (bad) loop push cmpsb cmp (bad) mov sarl stos scas (bad) and cmpsb sbb test and std lods jg jbe add jno repnz testb cmpsl cmp clc int (bad) (bad) mov pop sbb jrcxz rcrl in lock pushq adc pushfq (bad) xchg (bad) out rex.WRXB mov retq pop pop (bad) mulb add rsm testl adc movabs (bad) (bad) mov (bad) or or sbb leaveq (bad) fabs loope sbbl jmp (bad) lods mov roll push callq addr32 jns (bad) loopne sub jo mov (bad) (bad) sbbl rcrl test (bad) mov and and andl jne (bad) jl rex ja mov and pop xchg (bad) lods or callq std (bad) push rex.WRB loop fisubl js sub xlat rcll rex.WB addr32 xadd frstor and (bad) adc int3 popfq mov loope jno adc not (bad) rex.R jb adc adc mov cwtl es retq cld mov fisttp notl lret (bad) ss pop add lret mov repnz xchg std and pop outsb lret movabs scas fcompl (bad) rex.WRXB bnd xor rex.WX mov push jbe cmp rex.RX mov jmp pop rcll xchg stos (bad) std movabs cli lahf (bad) rex.WRX (bad) jo sbb adc (bad) shl mov mov outsb loop rex.WXB mov adcl movabs cmp mov jno and cli rorl repz cmp (bad) pop loop adc jae ja mov jnp,pt rex.WB add (bad) (bad) adc pavgb cmp mov repz mov add sar (bad) notl sub mov mov movsl mov rcrb and cmp rcll (bad) mov pop movsl shrl scas xchg mov (bad) shr (bad) jge add shll insb nop jmpq shll and je (bad) mov imul adc leaveq xor lock sub mul sbb movabs push retq test lahf fldl2e (bad) int3 loop push mov rex.B mov xchg cmpsb (bad) and mov rol mov sub mov (bad) xchg adc adc (bad) ja out lock mov mov lods sub movabs xor jne mov push iret callq jo clc iret rex.B sub pop ss fidiv jo (bad) fidivr rex.WR mov imul (bad) xor (bad) decb push rex.RB mov push mov shlb stos pop sub rex.W lock mov enterq cmpsb mov push imul jb movabs lret rex.RX and jmp xchg outsb mov rex.WB std or or sti cmp in jnp add mov (bad) and ja cltd mov popfq mov shll (bad) enterq stos cmc add rex.RX mov sahf rcrl retq fadd mov retq rorl movabs notb notb jge (bad) cmp xor mov add mov mov and cwtl (bad) jnp test mulb test (bad) mov xor add sti roll lods enterq loop fwait pop loopne xchg add sub (bad) mov pushfq mov add (bad) sub lods mov mov loop add sahf mov sub (bad) mov add mov repnz div ja (bad) (bad) movabs (bad) xchg (bad) rex.WRXB ffreep mov orl xchg mov lret sarl xor (bad) cmc rex.B imul mov lods rcll adc (bad) cltd pushfq shll cli test (bad) xor (bad) add jrcxz jnp lea (bad) mov stos icebp leaveq adc sarl adcl mov cltd jrcxz jp (bad) rcl pop cltd (bad) mov xchg xchg movabs mov push (bad) (bad) (bad) cmpsb retq pushfq lods cmp cmp inc (bad) movsb rex.WR push jl and rex.WXB (bad) shlb adc rex.RX pushq sub test xchg loopne jmpq lods (bad) cld test mov cwtl add out push (bad) stos (bad) icebp jnp rex.XB rex.WXB gs fwait shl or shrl pushq (bad) int3 push movslq jo cmp callq (bad) pop pop ror negb fbld std lods (bad) mov jmpq fisub prefetch or or xchg rex.WB rep fwait jge rex.WXB push add mov xor sarl lock cwtl and push fistl pop xchg (bad) rex.RB jo lock lret xchg (bad) hlt add retq jb loopne rol sbb leaveq (bad) xor cwtl mov mov in push jo lret rex.X sub (bad) jp scas movabs (bad) jnp xchg gs adc insb cwtl (bad) fdivrl rex.WR rex.B mov (bad) roll mov bnd add (bad) scas rorb add hlt testb adc sti jmp xor (bad) add and clc mov icebp mov mov adc add lret rex.W movabs rcrl pop and xor outsb rclb sbb rex.WR clc push shrl jge and (bad) mov es stc add fcmovb cmp jno jge mov rcr repz movabs stc out mov sub (bad) loop in sub std lea xchg (bad) in rex lret push movabs jae roll sub flds push xor cmpsl in (bad) movb flds sub add and jp lret fidiv fstl enterq or (bad) lods sarl sahf fisubrl xor sarl dec shll testb cmpsb or test add mov retq cltd int3 sub (bad) adc (bad) or xchg jrcxz xchg add mov cmp xchg or loope and rcll movabs rex.RB flds loopne (bad) retq fcoms mov add bnd or jae pop out callq int3 mov add retq or movabs sti pop fsubrl or outsb sub (bad) not fisub stos jb iret sbb movabs ficompl loopne cmpsb mov rex.X callq sub adc mov (bad) jg (bad) rex.R push fmul movabs rex.R or jrcxz (bad) add (bad) insl repnz (bad) jbe or xor rex.RX (bad) hlt outsl mov vfmadd231ps jns jg fidivl jo callq xchg cmp sar sub add mov callq in rex.R rex.WRXB out loope rex.R leaveq rex.B loopne subl xor sbbl pop sub lret cwtl fwait push fnstsw add mov (bad) imul (bad) (bad) stc xor rex.RXB rex.RB pop insl pop rex.B pop xor iret js cli add loop and (bad) loope js (bad) (bad) int stc (bad) pop mov (bad) push (bad) int3 sbb fiadd jo jrcxz jle movabs xchg (bad) sub fisubrl or hlt callq mov add sbb sbb rcrl mov push mov pushq pop (bad) rex.WB rcr mov adcl bnd mov ss and jmp rex.WRB movabs cmp out nop rex.B retq jrcxz jrcxz jo cmp xchg rex.WRB mov rex.WRB cmp fistp es in mov lret (bad) mov (bad) sahf lods xor or jl int imul cmc negl jle (bad) jl movabs adc callq lret lods cmc scas mov out (bad) movabs mov mov or xchg movabs jae xchg (bad) or test sub (bad) jle stos (bad) (bad) popfq mov and stc add mov (bad) sub shr and xor nop rcrl insl int3 out (bad) rcl mov in je (bad) mov sbb sub rol (bad) push xchg xor push jnp test mov adc movabs jnp int3 sahf rex.X adc adc add rex.WX rex.WX mov fldpi or cwtl xlat sub or xor cld rex.WR rex.WRXB (bad) xor or ja mov movabs (bad) outsb js rex.B mov (bad) (bad) shl cmpsl ja (bad) sub shl rex.RXB pushq (bad) jmp sarb (bad) rex.WXB and std xchg mov mov fisttp adc pop rcl (bad) lea in rex.RXB sub clc xor rex.RB lret mov stos retq (bad) enterq pop fs add es rex in sub fldln2 (bad) and push test (bad) sahf xor jle sahf icebp lahf rcr rex.WRXB stc rex.RB rorb add sub rex.WR nop roll (bad) in sbb fstpt mov jmpq add loopne,pn jg (bad) rex.RX rex.WR fwait test (bad) mov xor mov not jne sub sbb (bad) pop roll (bad) jo xchg out rex.WRXB popfq mov rex.WRB es mov add out mov pop and (bad) (bad) mov sbb mov jl (bad) mov shll (bad) rex.W cmp (bad) xor cld in sahf sarl lret rex lea xchg pop movabs rex.WX rex.WB scas imul and mov shl add (bad) cs (bad) lods mov pop pop sub push popq cwtl fwait mov push rcll rex.W rex.RX xlat (bad) shrl (bad) out sbb sahf sahf fidivr push lret (bad) sbb mov mov outsb shrl pop or (bad) movabs js mov negl addr32 int xchg (bad) pushfq mov (bad) rcll pushq pop xor pop and pop mov rex.X test loope rcrl insb js pop rex.X ss adc pop int sub add jle adc push cs jg out and ja mov cmp (bad) movabs (bad) lock pushfq out lea mov (bad) mov sbb (bad) xor rex.WXB rex.RB sbb fdivrl data16 gs in rcrl jno callq fild test mov mov (bad) xchg xchg xor loopne (bad) (bad) icebp (bad) sbb rex.RXB (bad) neg insb rex.B mov rex.W (bad) (bad) mov xchg (bad) mov jg mov andl iret jrcxz (bad) (bad) add xchg loop xor rcrl test out lret push in mull xor retq sbb je roll fldt out vmovaps add cmp (bad) data16 sarl (bad) or movabs test sub pushq test sub shrl add xchg sub (bad) jg shrl xor fsubs jmpq bnd xchg jb xor (bad) push sub rex.RXB mov shr and cwtl shr in imul outsb cli movabs in rex.RX xchg pushq shrl jl jnp movabs or push lods jmpq add mov sub mov and (bad) xor stos rex.WX insl fstps adc rex.XB sub nop pop add iret xor addr32 rex.B clc or jns mov stos int sti movslq leaveq push bsr rex.B repz jnp adc jmp fsub jp sub pushq or insb leaveq rex.WRXB insl es rex.WRX rex.R stos xor orl loop pop jo sub cmpsl sub scas shl fidiv divb or in sub (bad) sbb push xchg (bad) xor sub and clc add gs in rex.WRX add fs lock cld jge rex.WX rex.XB test rcll adcb add (bad) add popfq insl add pushfq hlt sbb adc (bad) int3 mov jle stos roll add (bad) cli mov (bad) (bad) shll lods push (bad) mov xor fdivrs movabs sbb iret jp sub adc (bad) hlt adc cltd je (bad) cli pop shll xchg (bad) std and sub mov rex (bad) mov jge cmc and scas cmp add or sbb int3 push pop jb and sahf (bad) es andl or fisubr shrl xor add (bad) jno fcomi int cmc mov sub sbb pop rex.B xchg and mov (bad) (bad) rex.WX (bad) sbb (bad) mov xchg mov lea callq sarl retq cld rex.WXB mov lods or mov pushq retq cmp roll or or or and rex.W and add pop xor pop xorl sub (bad) rex.B jp (bad) lret rcrl in fidivrl popfq (bad) mov es and jge rex.WX rolb mov sub cmpsb pushq pushfq rex.WR loope test (bad) sqrtps push add mov mov adc movabs push in push jrcxz jmp rcr lahf adcb pop out push fcomip sub adc lret rex.X sub cmp mov cmpsl int3 lret test or ss adc repnz xchg std xchg mov or data16 lods rol movsb popfq (bad) sbb xchg xor or rex.WX fstl or (bad) (bad) rcrl fadd xchg mov out cmp or cmc add insb (bad) movsb fisubr (bad) cmc sub mov repnz add test gs ss rex.RXB movb lea (bad) sbb iret mov and adc ror retq cmpsb sub rex.WX (bad) sar add fiaddl xchg (bad) cmp xor cmp out fyl2xp1 add mov or pop out add pushfq pop xor push (bad) push stos fcompl (bad) mov cmp in jb in retq enterq or sub (bad) adc add test cmp mov mov add fsubs divb mov rex.WRB ror jmp loope jmp cmp jmpq add (bad) (bad) sub sbb (bad) repnz sbbl in jnp rex.R rex.RXB or (bad) (bad) bnd or (bad) test xor push add jmp rex.RX rex.WR fsubl add in dec std rex.W callq jp and mov iret incl xchg mov cmpsl mov repz xchg insl (bad) gs test xlat lods sarl pop fidiv adc (bad) add int3 (bad) (bad) sbb or ds pop callq rcll cs fistl (bad) mov fisubl cmp (bad) cmp repz add fwait bnd xchg (bad) xor adc xchg mov test mov jns mov cli rex.WX rex gs mov lret (bad) movabs or or (bad) in (bad) xor sub pushfq rex.WRXB fs movsb xchg or shll loopne enterq xchg add sti in incl insb (bad) rex.R mov mov sbb rcrl pop ds (bad) insb movabs cmp push xor mov xor (bad) or rex.XB shr enterq repnz hlt pushfq cld (bad) ficom pushfq (bad) xor rex.WXB sub js jp (bad) jne fadd (bad) rex xlat jnp jge int or sar rol stos (bad) pop fs pushq ficompl push (bad) lea sbb mov movabs scas adc fwait movsl fisttp stos add mov pushfq (bad) xor adc loop fsubr addl cmc sahf in (bad) rex.WRB rol scas cmpsb test sub movabs pop in ja mov lret jb lret (bad) sarl nop in add mov adc xor iret movsb jne retq testb (bad) cld (bad) rex.WX mov js jl (bad) repnz stc jb sub test (bad) push and add adc (bad) and shrb in or jo addb xorl add or rcll jle pop movabs sbb jp xor je icebp adc sub (bad) xchg jrcxz mov or pop mov sbb fisttpl roll test cmp (bad) rcrl stos (bad) pop add xchg and cmp sbb rorl orl jrcxz pop sub lret imul xor movslq enterq (bad) sahf jb retq cli addr32 in (bad) (bad) xor lret (bad) mov gs jns mov (bad) rex.B int or out shl imul push mov movsb rcr xor jge (bad) or cmp jns cmpl repnz movb cmp jp rex.B js or or (bad) in mov xor iret xchg movsl mov (bad) popfq xchg movabs jae (bad) mov movabs shl fsubr movslq movabs add and fcmovbe or (bad) push (bad) mov rcrl rcl mov xchg movabs cltd mov mov rex.WRB (bad) mov rex.R adc pop sbb in mov jg (bad) rex.WX xchg adc fcmovnb and (bad) (bad) pop ss sar movsb (bad) cmp rorl rex.RX mov imul nop rcr loop (bad) (bad) outsb ffree and ds (bad) sub or data16 rcll in xchg ja in mov (bad) iret icebp (bad) nop sub int3 jne cs imull leaveq (bad) shll js iret rex.WXB outsl rol jns lods mov mov push (bad) (bad) scas test fs push es lret mov mov rex.WRX jo jno jae fadd shr or (bad) (bad) (bad) jp hlt pop fisubl lods sub lret pop rex.RX rex.WR lock mov fiadd xchg insl stos movabs or cmp mov lock pushfq test lods leaveq out sar vcvtss2si or imul jno cmpsb sbb rex.WB xchg xchg sarl (bad) insb pushfq lret rex.RXB mov ja pop fwait jrcxz mov (bad) (bad) pop rex.WR mov fldenv sbb sbb out movabs js rex.WRX repnz stos sbb (bad) (bad) xor mov callq jo push rex.RB lock add test pop add (bad) (bad) and adc mov cmp mov xchg (bad) stos xchg (bad) loop insb clc std xor adc fisttp int3 sbb rolb push enterq cmp sti rex.WX jo xchg shr (bad) sub incl mov (bad) (bad) imul mov mov rorb iret insl mov (bad) rex.W jbe pushq (bad) jl push mov mov mov jo cli jno mov mov mov rex.RXB fs xchg (bad) outsl push push flds sub (bad) repz adc fisttpl xchg (bad) hlt movb (bad) push jo movabs retq cs idivb movabs jmp add push or xor movabs sahf xchg mov (bad) add and mov adc add rex.B ss (bad) mov jge in (bad) xlat movabs (bad) (bad) mov sbb movslq adc and rex.WX add rex.WRB fwait xor add (bad) jrcxz lock (bad) add rcrl and push ror movabs vmaxps movabs movsb xchg shlb xchg push gs add and movsl mov pop (bad) sub fcmovb gs rex int3 test loopne mov cmpsl sub mov decl mov fsub and or js mov (bad) lret jl sarl rex.WR sarb (bad) in imul subb cmp xchg sub (bad) (bad) rex.WRB lods fcmovnbe cli (bad) (bad) jno add jae cld repz cld add (bad) fs fucomi sarl jg movabs rex.WXB loope movsl ss ds or shrb adc xchg movsb rex.W push add pop fdivrp mov (bad) sub insb loopne adc rex leaveq fstpt pop rex.WRB callq push movabs xchg mov data16 ds push (bad) xor or data16 mov (bad) movsb (bad) jmpq fstpt mov adc insb (bad) icebp adc mov inc iret sbb roll out (bad) rex.RXB jo cmp adc cmp jle popq adc enterq shlb pop (bad) int std iret loopne out insl outsb ja movsb sti cmp scas pushq stc (bad) and mov hlt rex.WB movabs cmpsl movabs (bad) xor scas mov sarl pop sbb jnp xor (bad) repnz adc mov subl or punpckldq rex.WRB repz out movabs jrcxz rex.B mov lahf mov nop mov (bad) xor ja (bad) enterq pushfq sbb cmp js xor add imul sbb mov xorl add cmp fucomi pushfq xchg sbb (bad) mov or adc jmpq rcrl mov mov std add pushq sbb (bad) (bad) cmp push imul mov xchg mov movsl cmp (bad) add push (bad) add out adc fs outsl jbe mov enterq xchg pop rcrl xchg or rol movslq int mov rclb sahf (bad) rex.WRXB rcrl stc (bad) shrl ds jrcxz xchg xorl inc leaveq clc rex.B ss int3 rex.WB lea (bad) mov loop pop pop mov adcl and test (bad) sbb (bad) xchg sub mov add mov maskmovq (bad) ja pop cmpsb pop mov retq repz adc xchg insl mov jl xchg rex.WX jge stc xor shrl movabs xchg rex.RX cmp movslq lret xlat jrcxz sbbb add mov sub mov pop imul ss mov sbb jbe mov fstps iret movabs rex.WR lea (bad) test xor rclb cli cld push addl mov js,pn imul or frstor (bad) repz or ficompl scas rex.WRX xor pop (bad) xor jmpq icebp in push icebp neg mov xor fildl (bad) rex.XB loope adc add out xor xchg and adc rex.XB mov push lahf adc outsl sar sbb jmpq pop loop imul fstpl adc int (bad) test rcrl (bad) movabs pop test data16 pop (bad) xchg (bad) movabs sub or rex.W adc mov adc (bad) add fucomip (bad) jb and sub add cmp push add rcll pop mov push and rcr sub hlt (bad) and sarl cs pop xchg pushq (bad) cmp sbb mov mov mov (bad) mov fisub sbb cs in sub cmp adc jns (bad) fildll adc jrcxz rcll (bad) imul rex.WRXB mov jl jo gs movabs shr rex.WR add (bad) xor enterq es rcll mov xchg cmpsb sbb pop push or shll shlb (bad) mov or stos fildl mov (bad) lret sub loope fs out leaveq and pop fcmovb outsb pop imul mov pushfq rex.B jg jl retq jb sti test in push roll pop std pop imul rcrl (bad) pop loopne sub pushfq add sbb in push and lods or sub pop cmp rcll pushfq imul outsl (bad) (bad) js sub mov std jo sbb retq insl sbb mov retq (bad) rex.WXB mov rex.WR roll rex.RXB shrb (bad) mov or (bad) pop rex js fs xchg or rex.WR mov (bad) jns push jbe (bad) push pushfq fnop cmc addr32 (bad) adc jg loope and xchg cmp addl sbb fnstenv movabs xor sub cmc and adc mov push or rex.X xor rex.RX rex.WRX and ds sub or jrcxz lods pushq mov ss rex.WRX xchg sub loope bnd pop jle loope jb addl jmpq and (bad) sbb sarl callq (bad) pop sbb sbb rex.WB repz mov int3 fidiv rex.WX mov (bad) repnz (bad) add fcmovb mov fistpl fwait icebp shr pop adc cs movslq or js jns jmp adc (bad) and enterq pushq mov je callq cmpsl repnz nop stc (bad) movsb rex.RB cltd fsub or jno push lock (bad) enterq mov (bad) repz (bad) xchg loope sub sbbl and fist lahf (bad) rex.RX je mov cmp scas or negl xlat mov mov cli rex.WR (bad) cmpsb fsubrs test rorl cmpsl movabs pushq sarl lock and xlat out or adc subb jo retq callq pushfq rex iret popq (bad) out add (bad) mov pop faddp rex rcl cmp clc adc rex.R lea cmp int3 xlat or mov sti movabs (bad) pop jmpq mov cmc adc fadds or (bad) rex.WB (bad) cwtl (bad) sub cmp (bad) mov xor lods (bad) movslq leaveq outsb (bad) sarb retq int3 rex.WR jge (bad) or rex fcmovb push test (bad) movsb xor mov jb fldcw nop fmull add in rex.WB pop xchg mov jp xchg loopne and (bad) bnd adc rex.X stos sub pop sbb sbb loope (bad) mov and rex.WR rcll (bad) popfq nop insl ds rex.WRX movabs nop (bad) mov xor (bad) icebp (bad) rex.WRB (bad) nop (bad) int ja adc rex.W fsubrp push ja rcll jrcxz xchg rex.RXB out pop stos or loop sub cltd (bad) cmp out sbbl xchg xchg rex.WB xor mov (bad) test movabs nop sarb (bad) rex.RX adc rol notb rex.WR xchg or pop sbb add repnz andl jno rex.WXB fldl fild icebp mov repz and xor rex.W fldenv add xor or xchg out sahf repnz mov pop rex.B cmpsb pop fmul (bad) mov jrcxz mov xor (bad) imul mov fadd int3 movabs cmp (bad) mov mull push jrcxz jle fistl push sarb test sbb xchg retq fnop scas push icebp fs (bad) frstor xchg push (bad) mov (bad) (bad) fstpl movslq rex.RB dec mov mov out (bad) jbe clc (bad) (bad) rcll (bad) sbb xor sub sarl (bad) rorl lods es (bad) imul jno callq mov mov (bad) rex.WRXB shrl ds mov movsb add sub xchg insb mov icebp rex.WRX lret rcrl adc shll fisubr sarl sbb sub (bad) sub rcll add mov (bad) sahf (bad) loop mov mov fild (bad) (bad) cmpl sahf in mov xor nop pop (bad) imul lea pop rcr fwait sarl insb add test gs retq pop roll mov or mov xchg in jge add jbe xadd sahf pop and (bad) scas movabs (bad) mov cmp fnstenv sub mov mov rex.RXB xchg rex.WRXB fwait push (bad) cmp in mov cltd push in and xchg int3 lea scas rex.B adc pop ss cmp mov lock push retq and and mov mov or sub xor (bad) cmp rcr loopne std (bad) rex.WX rex.WR add xor rex.RB (bad) rorl rcl rol enterq int3 (bad) in rex.WRXB mov (bad) or jns cs (bad) xor sbb cwtl and and mov xchg rcl cmp mov sub shr mov rex.WB (bad) movabs ficomp mov xor rex.WX lock data16 sub add outsb mov loopne (bad) retq imul xor xchg rex.B add sarl sbb addb repnz jg and in rex (bad) or mov rcl mov icebp mov or shlb mov jno (bad) js cmp mov push rex.XB cmp sbb rex.X repnz cmc sarl push (bad) cmp xor xlat rex.RXB (bad) int3 jbe rex.WX xchg adc jne rex.XB in je out jnp stos retq enterq sub cmp (bad) mov mov (bad) fildll add adc lret ss cmp (bad) je jge fldcw (bad) (bad) mov rol addr32 rex.WRX insl rex.WX or pop fwait idivb adc xlat xor (bad) add lea mov scas jnp cltd jo cmp negb notl xor xchg mov mov leaveq stos xor xlat xchg jo xchg sbb stc mov shrl mov rex.R adc cmovne pop fs ss shl je mov sahf and xchg or (bad) mov mov (bad) lretq (bad) (bad) cmc add and repnz (bad) jno,pn retq pop rex.WRXB in test addl jae (bad) cwtl sub fbstp add adc iret lods mov (bad) push mov ficomp pushfq (bad) cmpsl out icebp adc cli xchg pop or loop and fwait mov movslq sub mov rolb (bad) stos sbb rex.XB (bad) (bad) retq rex.W cmp movsb out (bad) in rex.WRB clc sarb out (bad) (bad) mov xor lods adc pop rex.RXB lock cmpsl pushfq or pop add pop xchg jp movsb (bad) push faddl (bad) cmpsl jns sub cli xlat and shrl rcrb rex.W sub mov jl or sub sbb sbb xchg jno fneni(8087 out rex.WR mov rex.WRX cmpsb rex.RB movabs rex.WX ds (bad) jg (bad) test rex.WXB idiv fisub cs (bad) int xchg jge retq icebp and pop repnz push (bad) fisubrl and shrb xchg xchg cmp rex.WXB addb nop hlt ds retq adc in (bad) (bad) sbb rex.RB rex fs mov in sahf int3 rex.WRX rex.WR mov insb (bad) pop repnz stos (bad) cltd adc sbb negb jae or pop xor (bad) sbb repnz orl cs sahf stos (bad) (bad) xchg and sbb sub (bad) divl rex.WB lret callq (bad) movsb mov sub jmpq lods (bad) cmc cmp (bad) add cli or sub jnp clc jo fnop xchg xor adc add lea sub in push xchg movabs jae imul sarl fwait push cmpsb fwait rex.WRX jg cmp outsb fs fiaddl mov ss lea and jg cli add mov jns nop je movabs (bad) (bad) (bad) movabs test sub rex.RB data16 xchg jrcxz int rex.WXB jmp adc mov (bad) lret adc adc callq movabs cwtl addr32 mov (bad) out mov (bad) (bad) fnop sub mov ja f2xm1 mov ficoml callq imul (bad) push add cmp outsb (bad) enterq and rex.WR (bad) adc imul lret adc (bad) vunpckhps xor xchg xor xor clc movsl comiss sahf add jmp movslq test or not or mov pop add outsl (bad) in mov (bad) rex.WR or mov rex.RX cmp (bad) mov ja sub lahf add or mov jmpq xchg test (bad) leaveq (bad) test rex.WRB xchg xor push cs outsb jae (bad) xor icebp enterq (bad) (bad) lret push insb mov retq rex.W movabs (bad) (bad) xor jl jae in mov rex.W fildl cltd sub pop xchg jae movslq cmp or push iret sbb repz (bad) movsb (bad) cltd jmpq pop cli add sar rex.WRX roll jmpq adc jg out cld (bad) jno or hlt pop (bad) jmp push hlt pop mov rex.WR sub and je vpsubq add movslq jns xor sbb push repz jmp and and movabs loopne xor (bad) stos int3 shrl sbb shll add (bad) (bad) mov jmpq (bad) add fs rex.WXB in sahf jge test xor sub jno mov or stos sbb jbe push rex.WRB (bad) gs (bad) (bad) mov mov jle xor imul rex.RXB fucomp xchg (bad) mul (bad) rcl jbe sarl pop jle mov retq shrl add iret clc ss (bad) pop (bad) (bad) jns rex.WRXB cmp test lahf stos or (bad) jno sahf lock rorl mov or movsl shr lea mov loop rex.WX ss cmp shrb shl and movslq mov ss ficoml in fnstenv sbb iret mov pushfq mov incl cmpsl fidivr ja (bad) gs (bad) push add adc rex.WB data16 sub (bad) xchg (bad) (bad) xchg stc xor mov xchg insb loope (bad) xlat xchg std lea roll orl rclb cmp (bad) rcrl loop pop xor shrl mov xlat rcrl fwait add es pop xor (bad) icebp repz (bad) clc sub cmp shr fwait mov cmpsb cmp (bad) leaveq xor xchg lret jb rorb pop movabs pop xchg xchg (bad) int or loope (bad) notl retq and icebp (bad) jns add (bad) loopne lret sub in lret andl loop int mov movabs rorl cmpsb (bad) lret (bad) divb pushq movabs xor cmp out popfq add cs cli insl rex.X xor movabs shrl (bad) sti jg stos insl shrl movsb pop cmp (bad) xchg jns fiaddl sub jo shr test sbb xchg jno iret (bad) lret int lock lock (bad) mov pop shrl (bad) data16 rex.WB sarl pop sti movabs cmp (bad) rex.X callq adc int fidivrl rex.WRXB push sub cltd sub rex.X nop movabs mov or (bad) adc (bad) mov cli and movabs out rex.WRXB movabs or jrcxz (bad) (bad) shrl xchg xchg iret outsb lock in ja sub mov (bad) incb pop popfq loop rex.RX cmp ror (bad) xchg rex.WRXB sub xchg jmpq mov (bad) xchg iret sbb pop ds in gs cmpsb add or jno xor loop mov add sbb int adc leaveq mov shrl mov (bad) cld sub xchg jb xor std loope (bad) rex.XB mov test (bad) (bad) mov and pop lret clc and outsb fistpll rex.WXB (bad) int3 popfq icebp fisttpll int fisttpl out stc retq jae lods sbb xorl rex.WRX callq addr32 movabs xchg xor pop mov add (bad) mov (bad) mov pushfq enterq xor rex.RX popfq loopne rex.RX rex.WB sub in adc sahf jrcxz xchg rex jle xor (bad) xor fcomps je mov std fimull add out rex.X push pushq stc sbb mov icebp rcll xor shll jmp insl xor in (bad) vcvttsd2si (bad) mov sub je (bad) pop jg cs cmpsl or rex.WR movslq pop ds lock iret add pop (bad) in pop repz enterq rex.W rex.XB outsl subb js sarb stc fldcw pop iret jrcxz sbb (bad) (bad) jbe mov sar pushq (bad) (bad) leaveq cs (bad) sbb jnp (bad) (bad) push sahf rex.WRX rex.B rex.RX and (bad) bnd (bad) movabs shll sti xor jno cmc int add jge cwtl scas sarb sbb loopne pushq mov movslq (bad) pop sub rcr xor cli (bad) out mov add add adc shrl test (bad) jrcxz rcll test rex.WR int mov mov and cmp fs or dec cmp jo (bad) fwait rex.RX xchg sarl shrl pop shlb fadd test retq cmpsb (bad) mov data16 rorl (bad) xchg pop gs movabs cwtl lahf shrl clc (bad) rorl (bad) mov mov rex.XB push int sub rex.WRX rex.WB xor pop fistp mov xchg lret xchg sub sbb jb shl sbb xchg (bad) xchg add or rorb rex.W shrl loopne pushq add (bad) xadd add lret push xchg cltd (bad) (bad) and (bad) or loop mov bnd xor loope jmpq (bad) mov iret mov mov lahf add fbstp lret jnp retq movabs out (bad) jno rcrl pushfq movsb adc rex.RXB es push addr32 leaveq xchg adcl (bad) jb scas scas test pop stos int adc xchg xchg sarl sbb rex.WX (bad) ja mov sub (bad) cmc sbb test ss push (bad) (bad) jg mov cmp in jae mov (bad) push jmp xor fbld (bad) pop fcmovnu (bad) je mov xchg push in (bad) (bad) std or rex.W jne (bad) (bad) int clc push (bad) rorl mov stc xchg divl ja shll loop icebp xorl rex.WRB sbb movsb add jp fsubrl insl movabs rol stos mov pushq add rex.XB push popfq cli or lret push in xchg (bad) jrcxz sbb out and (bad) (bad) sarl mov jo out pop cmp rex.RX xor outsl rex.B int adc (bad) cwtl in sub nop jge rol loop adc lret sarb stos jno cmp shll jmpq shll pushfq loopne pushq xchg cmp stos or addr32 or fist and mov (bad) roll mov rex.WRX out push in adc cltd mov (bad) xor mov add add movabs lahf repnz cmpsb icebp int test and stos iret stc add in (bad) sbb (bad) fxch xadd xchg cmp rolb cmp xor lsl stc sub (bad) callq jnp xchg adc (bad) fsubrl cmpsl (bad) int xchg mov jmpq (bad) in loop add (bad) sbb sub sub and test (bad) rorl outsb cmpsb ror jne pop mov lret sar xor jns jb (bad) pushq rex.X sbb (bad) js retq xor in std cmpsb and ror mov movabs (bad) fs rex.WRB or push rcr rex.RXB iret callq pushfq rex.B shll mov mov sub pop fadd pop xor in lret pushq sti rcr scas mov popfq stos mov int loopne clc xchg push roll (bad) fdivrp pushq ffree stos pop cmc rex.XB icebp pop callq (bad) rex.W (bad) push jmpq cwtl cvtpi2ps adc xchg lods lea retq (bad) frstor add gs xchg rex.RXB (bad) (bad) rcr out rex.RB imul (bad) mulb rcrl mov xorb adc adc and and lret pushq add rcr add rex.WRX or rex.RXB mov (bad) add rex.XB in jle fistp xlat sarl sub sbb rex.R rex.WR rex.B (bad) (bad) mov (bad) jne stc (bad) std (bad) push shrl sbb fmuls pop lret cmpl insb xchg out shll (bad) scas callq add rex.RX jl repnz or sarl cli (bad) repnz retq rex.WRXB sub loop jno roll (bad) (bad) out ficom stc xchg sahf out push cmp outsb rex.WRX cmp xor repnz roll dec mov xchg in js loope shlb lods and xor rcrl mov and std negb xchg jo mov enterq test outsl rex.RB sub rolb fcmovb push enterq xchg int3 sub (bad) ss mov add (bad) test mov insl (bad) movslq out repz push rex.XB loopne (bad) mov sub push rcr repnz xchg mov scas rex.X rex.XB lock mov imul retq sbb mov jbe push fucom (bad) cs fnstenv xchg xchg fidivl xor jns sbb rex.W addr32 mov (bad) int pop xor lahf rex.XB add or jno test jmp mov xor movb movabs jle mov (bad) shrl (bad) xor and (bad) adc (bad) sub cmp xor fldln2 (bad) std (bad) (bad) jmpq es rorl int3 stos (bad) or jle imul and cmp shrl fstpt sbb fldcw outsl (bad) roll rex.W (bad) jle retq xor fs push mov mov (bad) add sbb gs imulb lods push stos adc jns sbb adc ja cmpsl cltd jge mov mov shll scas sbb jo push fs adc out sub rex.WXB xor rex.WR (bad) cmp ja pushq clc add pop lcall add mov jp outsb or pop rex.WR lods mov push clc mov movabs xor rolb addr32 leaveq push rex (bad) mov jae or int3 sbb (bad) ja and or rex.RX cs adcl xchg fstp rex.RX and xchg jg cmp (bad) (bad) add es xor pop push sahf int3 adc out iret push in jb addl and add adc cmp movabs mov (bad) jns shr (bad) push mov or je popfq fwait sub xor sub jae jmp std iret shll jge rorl add rcll repnz jb mov ds sbb js or (bad) adc mov pop (bad) imul stc or (bad) leaveq rex.X shr imul std add fs push (bad) sbb leaveq (bad) roll rex.WRXB pushfq xorb lret jbe fstpl jae fisttp lods (bad) push pop rex.RX out push iret lahf and jns fimull stc jle stos sarl rol rex.W insb cld int3 add lods cmp (bad) shrl scas pop cmp mov fs add xchg cwtl rex.XB (bad) sti popfq xchg (bad) enterq movabs rcll (bad) rorb jno mov out retq sbb mov jno (bad) (bad) jns fsubp test icebp es sub std retq stc add add ja jno (bad) stos cpuid test rex.WRX mov loope push pop repnz mov retq jae pop nop or cmc rex.X rol movslq addr32 (bad) std loopne fs rex.WRXB cmp sub stc addr32 (bad) sbb iret jmpq clc cltd rex.XB repnz and xchg cmp test scas xchg insb mov shll pop cli (bad) imul rex.RX rcl add mov adc cmp sub adc xlat in shl fidivrl lods (bad) fisttp pushq jo movabs pushfq mulb movabs cmc lahf push sub ror rcll and xor movsl sti and xchg std (bad) sahf movsb retw iret cli out pushfq rcll and sarl (bad) mov add or mov ja mov pop bswap add (bad) fimul pop mov imul sub lods xor (bad) jns jp rorl mov movabs mov (bad) out xchg fdivrs xchg and insl rex.WR rex.WXB shlb (bad) (bad) (bad) (bad) xchg push (bad) cld pushfq or (bad) xor xor int3 jp cwtl fild pop (bad) repz mov hlt cs nop ja mov mov loop imul loopne,pt rcrl add ror add xchg cmc test cmpsb (bad) roll enterq rex.R ds fsub sbb sub mov sbb rcrl cld adc and jl scas jle xchg movabs and rex.RXB add rex.WR pop xor (bad) mov cmp sub int3 (bad) gs mov cmpsb repnz jg cmp (bad) mov (bad) int movsl (bad) pushfq out (bad) movabs iret rol mov xor movabs je ss adc iret in movsb mov push cmc xchg rex.WX addr32 retq rex.B outsl adc pushfq rex.WXB lret or pop inc (bad) cmpl fsubrp sbb push in int repz test xor jbe sti out rex.WX movabs mov movabs rol push test (bad) rex.WRX stc loopne and jrcxz (bad) sub rex.B in jns (bad) sub pop rex.WRX push jle and pop lret inc mov xchg xor je mov insl lock loope fdiv jns (bad) sbb (bad) movslq sbb jg push in rol popfq add out sub rex.WR cmc xchg stc and rol and outsb gs rex.B lock adc and retq cmp mov (bad) out ficom (bad) out rex.WR add mov or cld mov pushq rex.B rcll (bad) mov outsb rol jnp cmpsl xorl lea pop rex.RXB jnp loop lods roll enterq mov (bad) loope (bad) shll pop insl add rex.WRXB jge mov xor (bad) rex.XB test insl (bad) repnz mov leaveq test mov pop ror fs hlt mov fwait scas mov retq xchg mov jne jns in cmp or mov callq shr stc lret movl pushq (bad) cmp add (bad) (bad) xchg mov out jg jrcxz mov (bad) (bad) mov (bad) jmp imul cmp push in fidiv sub fwait test mov gs in sub xor js int rcll loop (bad) jo jnp push (bad) adc notb popfq sbb (bad) or rex.RX xor (bad) scas adc subl mov in (bad) hlt ffree mov imul (bad) or (bad) mov jg jge rex.B pop push roll rcr push xchg mov addb cltd shrl (bad) out int3 cmp mov xchg mov jne (bad) js roll cmp rex.WB mov pop fwait sbb insl rex.WR rex.XB (bad) lea sahf test and rorl add cld rex xorl push cmp jp pushq rorl lret cwtl (bad) clc add cli xchg repnz (bad) xlat sbb rex.W rex.R cs jmpq xlat jle lret adc in fdivrs icebp imul fldl sub (bad) xor ja (bad) movsl mov jge add callq out xchg pop es (bad) add roll rex.R movsb pop rex.WB repnz cltd cmp rex.RX (bad) movsb rex.RXB pushfq (bad) or sahf cmp (bad) rex.WRX rex.WR pushfq lretw jb push push jo cli lods rex.WR movabs rex.WXB stc loop lock fstl (bad) add add or rex.RX add rolb (bad) (bad) mov (bad) xor cmp (bad) fmull (bad) add leaveq adc jno mov (bad) add or cmp add push and mov (bad) sarl gs cmpsl mov loope cli stos lret xor callq add mov rcll rcrb (bad) ss cmp (bad) in and retq and (bad) (bad) xor shlb test sub jne es push sbb cltd repnz (bad) sbb (bad) cmpl icebp es rcr sbb (bad) xor cmp pop adc (bad) out es pop lea roll mov or rex.X rex.RXB sub xor (bad) outsl jrcxz iret test hlt pop and rorl addr32 pop sub lock and add xchg sbb pop rol or rcll pop jbe out iret rorl and pop xor (bad) in cmp add fwait sbb in movsb mov movsb xor addr32 test sbbb rcl jle jb xlat data16 (bad) mov or jle retq mulb movsb repnz pop rol outsl pushq sub mov iret in xlat int std lret (bad) data16 sub and rex.WR adc icebp push mov scas out fadd push rcr fimul loop jle mov fdivrl jae jno mov ds movabs xchg mov fldl pop in cmp (bad) xchg shl pop rex.XB jrcxz rex.WRXB jb (bad) rex.WRX xchg outsb movabs lock jg add adc loope cs (bad) iret notl stos push test movabs mov and loope popfq fnstsw ja adc insl cltd movabs (bad) rex.XB sub fdivrl imul and and cmpl xorb iret imul xchg and mov icebp xchg pushq cmpsl int3 mov mov fistpll (bad) xchg loope (bad) and roll xchg add adc loopne decb (bad) cmp or std rcrb shrl (bad) xor rex.RXB or mov sbb frstors in movabs outsl (bad) lock xor jp xchg (bad) xchg sub rorl repnz loope or cld mov cmp fnsave (bad) mov (bad) (bad) fwait sub adc jbe and mov andl (bad) cmpsl xlat (bad) jrcxz sbb orl loop test rol or stc mov adc mov in rex.RXB scas lods fidiv add fnstsw xchg icebp add sub add jl (bad) sub loop sbb cmp (bad) lret (bad) loope vpshufhw push (bad) and outsl in and shll push sti test rex.WRX mov pushq (bad) roll adc (bad) fisubr xchg rex.W imul xor rex.WR rex.WB fnstsw sbbl loopne in mov ffreep (bad) mov rex.RXB push cld out mov sahf mov mov pushq out popfq iret rcll sti xchg jmp push (bad) ror pop stos movabs mov (bad) cmpsb (bad) rex.W repnz jbe fs cmp cwtl nop (bad) cmc pop pop mov leaveq (bad) rex.WRXB rex.R std jmp push cltd loop je rclb rorl rex.WX (bad) in repnz xchg (bad) mov rex.WRB cmp (bad) mov xchg jg pop lret out rex.WRB outsl cli scas add xchg (bad) std jge je xor out cmp shrl cmp movabs mov cmc imul int movabs xchg and popfq mov rcrl (bad) or (bad) repnz adc in jns rcrl icebp (bad) xor mov adc jbe mov movabs outsb (bad) mov test add and (bad) movabs (bad) sahf or pop sbb add mov rex.RXB jns lock add movabs sbb lods mov (bad) jns rex.RXB push rex sbb cmp (bad) subl in fs xor (bad) sub (bad) mov lret mov imul (bad) movabs ds leaveq roll lods xchg mov movabs (bad) mov decl jo rex.R jrcxz rex.W movslq sar orl movabs (bad) jno es nop vpsubsb cmp cwtl pop lcall xchg add (bad) adc jbe jle cltd jge je sub leaveq insl mov (bad) test mov or enterq xchg imul testb cltd (bad) sti mov xor andl (bad) pop sahf (bad) sub and rorl jno retq test push cmc (bad) loope (bad) lret (bad) push cwtl and rex.RXB rex.B sub sbb xor add test push and xlat jnp xchg (bad) jnp rol rex.WRXB sbb hlt mov xchg stc lods shll rex.RB rex.WR push xor mov sbb add cmp mov rcl cmp shll add (bad) (bad) jbe lods int rex.WXB sbb jle fnop rcl insb adc (bad) stc rol test sbb sub or out sbb cmc and rex.WRX lea pop (bad) icebp and cmp stc sub repz mov lock jns cmpsl lret push popfq rex.WR (bad) jb nop clc lea fisttp out lock jno data16 (bad) fwait pop push and ffreep clc mov (bad) jo (bad) (bad) (bad) xor (bad) retq rex.RX int fildll fnsave fldenv (bad) add (bad) or and (bad) jle or (bad) xchg mov pop movabs repnz (bad) ss lock movsl jp jno mov (bad) fidivr pop sbb rex.WX mov (bad) lret (bad) cltd (bad) dec imul (bad) sub or mov (bad) mov sbb (bad) mov rex.WRB fs stos add push jge in lret xchg (bad) sub rex.B and mov fidiv (bad) rex.RXB es lods or repz mov enterq add in lea icebp pushq sub rex.RX rex.WXB mov jno clc pop (bad) mov (bad) fwait (bad) pop adc rex.RB lods or and leaveq rex.WRXB (bad) (bad) (bad) jp rex.RB es jrcxz movsl lock rcl (bad) cmp mov (bad) jne psrlq xor or push rcrl (bad) push (bad) cld fdivp jnp mov rex.WRX and sub (bad) and fwait popfq mov shll sbbl rex (bad) rcll jns fcmovb jle (bad) push (bad) mov mov add fstpl ds mov shll hlt or mov loop xlat sbb lret add (bad) xor xchg adc cmp (bad) mov cmp xchg rorb rex.WX sub (bad) out out adc in pushfq mov int3 out xor or push (bad) scas enterq (bad) rolb mov jrcxz ss pop scas (bad) out (bad) test or add loopne notb (bad) outsb and xor jl (bad) fnsave rex.XB pop test mov (bad) fstpl adc rcrb es test jae retq xchg (bad) rex.WRB add (bad) movabs rex.WB jp (bad) lea cmp fs xor sub jno jno jl movsb loopne rex.RB (bad) jnp cmc xchg and adc (bad) push callq rex.WX lahf nop or push and cmp in (bad) (bad) jge rex.WXB fnstsw stc push pushq pushq rex.RXB callq mov fidivrl or jp sbb mov cmp rex.W xchg lea repnz js adcl movabs negl xchg mov test cmp cli rex.WR add jnp pop andb and cmp loope loope int3 nop mov adc xor add (bad) and lock mov callq loope (bad) std (bad) sbb in js sub mov leaveq cld rex.WXB loope repnz cmpsl (bad) outsb test sti rex.WRB jmp or stc insb adc adc rex.B rex.WX mov mov (bad) callq in jae testl rex.RB test (bad) sub sbb xor int3 addr32 movslq rorb sbb rex.WRB test jo mov rex.X ficom hlt adc in imul (bad) cli stos jl rex.XB rex.RXB xchg (bad) retq mov mov jg cmp out cmp mov stc pushfq sbb xor mov movabs (bad) callq rcll mov cld and int mov pop movabs or cmp repz mov jp jb cs cmp incl xchg push and shll std push cmp (bad) cs loop xor mov xchg movabs (bad) rex.WRXB cmp loop jns pop push mov (bad) leaveq shll (bad) add cmp xchg add and or cmp push xchg outsb adc mov iret adc xchg rex.XB jbe pop (bad) mov sub in (bad) jno add rex.WR andl cmp cmp cli fnsave adc rex.X pop and sahf mov movabs push xchg sbb (bad) fmull (bad) retq pop movabs test xchg (bad) mov rorl sahf testb (bad) mov fsubrl (bad) movabs test lahf movslq or mov js rcl sar (bad) or fisttpll rex.WB je xchg (bad) mov retq std (bad) leaveq rex.R repnz ja push shrb cmp jrcxz in sub ja rex.WR fs movslq movabs in mov fstpl cmc cmpsb rex.WR lock mov (bad) jg adc fmuls movabs lret out fucomp (bad) mov or loopne push (bad) jb scas lods mov (bad) rol out (bad) faddl jbe add int leaveq mov (bad) and imul adc enterq repz repz rex.WR cs (bad) sti enterq in (bad) test rex.X mov (bad) ss mov (bad) (bad) in pop (bad) ja rcll add clc push and lret sub jge rolb shr cmp mov lahf (bad) rex.XB rex.X rex.RXB in (bad) jae xor cmp cwtl pop inc rex.WRX push fdivrs sub fldl adc push mov cmp roll xlat (bad) (bad) cltd retq cmp movslq lea mov rex.XB rex.X xchg movabs mov push fs fmulp mov cwtl cmpsb mov repnz callq cmp jl (bad) cmc (bad) stos pushfq xchg xchg adc sbb rex.XB and sbb shll jns (bad) (bad) rol sub jo fild out sar (bad) mov ds jnp (bad) jbe outsl rex.XB sahf pop (bad) outsl (bad) setl and cwtl cmp rex.WRXB scas mov roll jae pop push jmpq adc (bad) rex.WR in lret lea fcompl (bad) fwait mov lahf cmp adc (bad) int movabs movabs pop test (bad) lahf out movabs test or sar movsb mov jmp (bad) int retq pushfq rcrl orl adc (bad) movabs out repz out xor jne xchg adc (bad) xchg (bad) (bad) xor sahf int3 rex.RXB hlt pop popfq pushfq push rex.R pushq (bad) (bad) add popfq (bad) fstl push rex.W movabs fstpt scas outsl rex.RXB loope roll (bad) (bad) pop mul (bad) movabs (bad) (bad) lea flds (bad) mov rex.R xchg rex.XB adcl pushfw out xor mov adc fistl (bad) (bad) int pop (bad) shld iret movabs es int3 stos nop (bad) cmp (bad) cmc shll xchg movabs (bad) shl cmp fs (bad) in (bad) xchg loop rcrl mov retq sub (bad) (bad) cs cmpsb xor callq adc cwtl or pop hlt (bad) or sub loop outsl or (bad) iret jmp mov xor outsb stc scas nop mov (bad) imul (bad) rorl jg shrl (bad) mov ss pushfq lock lret mov (bad) pop rex.X (bad) push and rol (bad) cli (bad) rolb push test or movabs (bad) pop (bad) icebp rex.RX mov je gs lret in loope scas (bad) hlt or movabs test rex.WRXB (bad) fldt cmpsb (bad) icebp xchg jrcxz pop and (bad) (bad) test or nop lret xchg jmpq rex.WR rcrl or xor ja imul rcr jno shl shll lea sahf enterq shll add rex.WRX (bad) popfq loopne sub in movabs insb jo sbb scas imul imul adc add add andl int retq outsb rex.WXB rolb adc ja sbb faddl cmp (bad) adc (bad) retq (bad) neg (bad) xchg (bad) xchg test mov pop stos imul inc or sbb (bad) sarl xor (bad) rcrl movabs or loop loope jp add clc es fldz sbb (bad) (bad) (bad) xchg push (bad) cmpl retq scas rex.RXB rex.B rex.WR cmpsb adc orb pushq rex.XB ficomp mov jns ror iret movabs or adc clc (bad) push faddp (bad) mov jge (bad) fstl add lods sbb rex.XB sbb xor rex.WRX xchg pushfq movabs sti roll hlt cmpsb sarl jbe mov fwait incl repz repnz sbb sarl movsl int3 add xchg rorl test pop jl js out repnz jp rcr (bad) xor int3 mov push movabs lock in rex.R mov mov movabs mov mov jns repnz pop xchg jg pop push cltd mov rex.RX mov rex.WRB out pushq andl xor mov pop (bad) rex.WX fcoml and push fisttpl and mov (bad) movslq and insl rol sbb shll mov push cmp es cmp rex.RB or stos jo push rex.XB sub out clc xchg (bad) repnz xchg (bad) mov jnp repz mov pop fnstcw rcll (bad) nop cmp xor rex mov (bad) rcr lret mov or rex.X movabs jns push iret add sbb and rex.WRXB jl mov fldcw (bad) mov adc jnp (bad) addl jne pushq outsb mov and (bad) fwait stc jl repnz sbb xchg enterq xor (bad) lods mov add push pop xor rex.RXB rex.WB repz add sbb cwtl callq (bad) test xor fstp rcll rex.WB push repnz rex.WR cmp test fcompl int xchg lea callq jge sub movabs movabs repz adc push sub insl cmp (bad) rex.XB rol lret mov or repnz add mov rex.WR (bad) sbb repnz rex.WRB subb fbld mov mov pop cltd movsb rex.X lock lods jbe (bad) ror fldl in lret fmull outsb test loopne or xchg (bad) cltd jp (bad) std incl jno (bad) cmp rex.RB repz fldt repnz xchg rex.WRB xlat (bad) jmp and loop cmpsl xor rex.W rex insl sub rex.RX jne (bad) std cmp (bad) and mov lret push pop mov (bad) fcmovnu sub or js int add and mov mov jmp test jrcxz sahf lock or (bad) movabs (bad) mov cmp cmp mov or sbb enterq or push add mov xor mov cmp int (bad) iret imul adc xchg shrl cmp jmpq rex.B mov push sub jb rex.WXB mov rex.WR (bad) lret (bad) xchg (bad) xchg test lods icebp lret jns pop sti mov pop xchg xor movabs scas add rex.XB cmp lock (bad) idiv adc mov out sub or movsb adc loop or pushfq shr je int3 xor jbe out sti rex.WRX (bad) jp or (bad) mov adcl xchg lea shr jl movabs rex.B add (bad) fdivrl push fidivl sub shll (bad) out negb (bad) (bad) (bad) mov sti pop sub sub stc scas (bad) in retq in jmp fbstp mov stc (bad) xor js jae and and rex.R pop jg popfq or adc fildl (bad) mov sbb add or (bad) and fucomp push rex.WRX mov (bad) lock rex.WRXB xchg mov (bad) push sbb mov rex.WR in (bad) fisttpl add and (bad) mov hlt add lock jno (bad) mov push jb push adc mov xor and sbb outsl jmpq orl (bad) stc adc jl retq lock add stos movabs (bad) leaveq rex.WRXB adcb add xchg (bad) mov and je (bad) xor rex.WRXB cmp test shrl mov roll cwtl rex.WXB pop je mov div (bad) (bad) push xlat iret (bad) mov js loopne test rex.WRXB (bad) pop sub retq add repz mov or mov movabs mov mov (bad) ds sub outsb movslq sahf movslq rex.W je rex.RX adc loopne insb (bad) pop movslq rex.WR leaveq xor rex.WR movslq sub rex.WR (bad) jge (bad) jl fdivs shrl rex.WR fistpll add cmpsb sbb add and rcrb bnd pop xlat in mov outsb sub pop rex.WB add (bad) int3 rex rex.WR rex.WXB rex.WRX cmp xor (bad) and fisttp rorl pop add int3 adc (bad) (bad) movabs (bad) movslq push rex.WRX decb (bad) pop mov push push cmp push test out sti (bad) retq stc mov sub mov (bad) jle pushfq (bad) stc scas fwait stos (bad) (bad) cs movsl jns (bad) frstor rex.W rex.WRX rex.RB add rex.WXB rex.WB sbb movabs rex.WRXB mov cwtl lret xchg mov add (bad) ficom shll rex.RX rex.X (bad) shrl mov rcr fidiv jns movabs pop jno pop push (bad) (bad) or in cmpsl (bad) repz pop cmp cmp es fisub add add (bad) enterq xchg stc rex.B fnstcw sub flds test sahf cmp push cmp lret loopne rex.B rex.XB gs cli fsubs add retq int (bad) insb xchg test lret push movslq (bad) hlt movabs rex.W ds xor stos pop (bad) rex.WR repnz int push movsl jrcxz outsb sti iret jmp loope jge xchg fscale iret callq mov lahf sub shrl fstpt xchg jg cmpsl ficom mov in mov std pushfq rex.WB sti xchg push xchg movsb (bad) xor rorl mov sti and (bad) movabs cld mov (bad) xor (bad) add and outsb out std adc (bad) (bad) fbstp jbe push mov xchg movabs mov fsubrs cmpsl xchg or cmp sub movabs in fs (bad) xor int mov rex.WRXB push rorl jg rorl jl sbb xlat (bad) xchg movabs (bad) and rol hlt (bad) rex.WRX scas (bad) ja xchg mov lock mov rorl jge lahf movabs add out and rol fwait (bad) mov es loopne and add adc js in push lahf pop (bad) out xchg add cmp fisttpll (bad) (bad) (bad) sub es leaveq ds add (bad) cmp addr32 ficom cwtl mov out pop rex.B hlt jo xlat fisubr sbb mov rex.WB cwtl shrl pop (bad) in pop sti (bad) rex.WRXB and (bad) pop mov rex.WB rex.RXB mov loope pop sbb lods xchg enterq rex.WRB cmp hlt sahf (bad) sarl mov pushfq mull out (bad) adc cmpsl rorl movsb lret lret and jne jo (bad) pop callq negb enterq stos mov (bad) adc rorl cltd shll repz mov jae (bad) pop rcrl (bad) shlb test stos jno (bad) rcll insb fdivp test test movabs in movabs and pushfq mov test iret add xchg clc rex.B rex.R mov je jrcxz movslq insl or cli (bad) xor (bad) adc movsl or xchg xchg mov jnp cmp (bad) insl cmpsb (bad) out (bad) fnstcw (bad) mov callq rcrl mov in lret jmp movabs rex.WR (bad) mov fild cmp push rcr test shll fmul jle cmp xchg xor gs (bad) sbb (bad) sbb movslq fdivrl repnz rex.R push rex.WX sbb xor icebp cs pushq (bad) push xchg (bad) fcoml sarb bnd callq iret (bad) movsb enterq xor add mov (bad) repz xor lret addl sub (bad) xchg outsb adc mov rex.WXB mov mov rex.R jrcxz sbb mov (bad) fdivr (bad) mov cs (bad) xchg (bad) lods pushq flds lock div sbb out xchg outsl movabs fs jo rex.W adc pop mov fdivrl fnop movsb pop jp xchg adc retq mov pop fist (bad) lret xchg enterq in jo mov jrcxz mov repnz pop (bad) xchg imul rex.XB adcb (bad) mov xchg (bad) fldt movsb (bad) retq xchg xlat cmp hlt movabs lea addr32 xchg out rex.RX rex.WXB sbb cwtl mov test mov xlat sub (bad) sub xchg movsl iret add icebp retq leaveq sti xchg int3 test (bad) outsl movabs clc lret jns (bad) insl cltd sahf scas mov mov loope orl (bad) jg add cwtl js (bad) shr jb scas mov lods sub mov notl sbb add mov mov push je stos (bad) mov rex.WRX rex.RB push cmp push sahf push or cmc test leaveq rex.WR add add xchg rcrl roll (bad) xor sahf test movabs sub retq add adc test test sbb loope rex.RX (bad) xorb (bad) mov cmp jns insl xor or retq mov xor sbb xchg pushq xchg mov or rex.X pop (bad) enterq and std adc rcrl adc push sbb cmpsb pop sbb mov movslq mov test fmulp in or stos movabs xor mov fwait sub push (bad) mov and push imul fs fisttpl mov adc pop (bad) (bad) mov cltd xchg divb (bad) jmp (bad) mov rex.WRB repz nop imul rex.WR xlat cmp rex.XB (bad) (bad) cmp sbb sub xchg mov push loop or cs and cmpsl mov rex xor adc sbb push retq incl xor rex.WRB pop outsb push adc imul retq and mov jle jo (bad) faddp je (bad) cld jae (bad) in or rex.XB test (bad) pop adc push cmpsb rex.WRXB int movabs cmp rex.WX xor add test in jl sbb (bad) loope movabs adc adc shrl pop pop push nop lret lret (bad) and mov cmp rex (bad) rcl rcll imul pushfq (bad) mov cmp sub add jnp xchg cmpsb loopne pop repnz (bad) mov sub pushq lret mov shrl mov ss imulb xchg push cwtl iret xchg (bad) (bad) xor mov mov test lret mov and sahf adc shll push push or sarl jb,pn std cmpsl int sbb out rex.WX mov (bad) rex.WX push add rex add movsl (bad) (bad) rex.WXB rcrl movsb int3 shll push out lahf mov callq movabs adc shll pop lret cs mov lret int3 sbb push cwtl roll fldt xchg jns rcl jle pop jns xchg pushfq (bad) decb (bad) std ds pop rex.B movslq movabs callq rcll (bad) sarl bnd callq rolb stos rex add (bad) (bad) (bad) jns (bad) (bad) (bad) stos lahf or (bad) roll xor cmpl sbb cwtl jl and add repnz adc fs sarl xchg mov (bad) fildl rex.B ds nop loop sub iret and int mov lret and pop or xor mov in movabs add repnz xor int xor (bad) cmpb rex.WX (bad) icebp ja pop loop (bad) push and xchg xchg in test pop jnp jae jmpq iret rorl rex.B push mov xchg xrelease pop leaveq rex.B adc stc (bad) adc sbb jge retq push jnp sbb or rex.RX jns jl insl (bad) pop shl mov mov (bad) fwait rclb jbe insl movabs outsl (bad) (bad) sub add or cld (bad) xchg movabs lret rorl sub retq insb rex.WX and (bad) (bad) xchg sbb in xor add and add rex.RXB in rcll xchg cmc rcrl rcll lret cmpsb xchg push std test jae rex.WXB jbe sar rex.WRX adc sti (bad) retq sub sbbl rex.RXB cwtl cli rcrl lret pop sarl in adc sti rex.RX insb cld push sub adc (bad) xor rol xchg je sahf adc rcrl (bad) scas pushq and rex.RB xor xlat rex adc leaveq mov out pop in std pushfq test sar add repnz int3 cmp (bad) mov mov push icebp movabs test fnsave and (bad) sarb enterq xchg enterq add orl push (bad) retq (bad) pushfq and or int stos decl lahf retq retq jp (bad) loope xor (bad) (bad) cmp idiv repz (bad) mov loope push (bad) cmpsl imulb cmp fisttpll cs push jae (bad) push (bad) or cmp repz and rex.RXB repnz rex.WR (bad) outsl rex ss iret mov cmp test adcl add std rcrb frstor rex.RXB push ds sti (bad) mov pop mov rcll mov rex.B std mov in (bad) imul lods push in fwait test callq push andl cmp xrelease rcrl rex.RB mov push mul std add (bad) callq sub jg (bad) (bad) and scas gs (bad) mov (bad) lret sbbl rex.WX jrcxz (bad) cmp pop in lea retq fwait cwtl and adc jae callq adc sub rex.RX and sub (bad) and in fwait (bad) (bad) rcll adc rex.RB cmpsb popfq sub (bad) fisttpl fsts es pushfq and and test (bad) sbbl int insb xor cwtl sub nop lcall mov rex.WXB jrcxz and lea xchg rcl rex.RXB lods loop xor fildl stos cmp (bad) mov imul (bad) outsl test rcrb cmp or mov pushfq or (bad) jl movabs pop cmp adc enterq imul testl xor (bad) or jrcxz jle sahf rclb (bad) jle fs outsl xor (bad) xor lods enterq (bad) add (bad) xor movabs add (bad) (bad) pushq cmpl pop sub loopne rex.XB shr push xchg lahf icebp cmp movsl out (bad) imull or popfq shl push rex.B imul sbb (bad) xor rex.WRX fwait rcr mov loope push sub mov xchg xchg out (bad) rex.WRXB mov pop add stc mov out add rex.WR rcrl rex.WB in (bad) sub pushq movabs sti jge rcl lock or or ss sub xorb rcll jbe cli jne or push data16 pop imul callq adc xor shr movabs cwtl sub fimull fcmovne clc rex.WB (bad) lret (bad) (bad) sarb sub adc lods mov cmp (bad) jmpq mov xchg cmp in mov pop imull sub rcll rex.WX (bad) (bad) xor bndcn mov out rex.XB imul and mov out rex.RX rex.RXB push rcll cltd test clc pop xchg stc xorb rex.WXB data16 rex.X out sbb mov jne (bad) push jmp (bad) sbb int xorl (bad) adc sbb popfq (bad) sahf xchg leaveq mov (bad) (bad) outsl sbb test sub imulb test test loope sub rex.WRX rex.WRB sar mov or jno (bad) sbb ja std mov and rcl or (bad) sar stos cmc iret mov (bad) mov rex.R (bad) (bad) and cmp jns jrcxz lret xor and mov (bad) es out rex.RB addr32 add ror scas or adc (bad) jae and (bad) rcrl sbb callq (bad) int3 negl insl and ss (bad) rex.RXB rex.WXB rex.B push add rol xchg (bad) and ficom sbb rex.WXB repnz test retq mov lods sbb rex.WRX rex.RX roll sub cmp repnz mov cmp add data16 fsubrs jmpq decl (bad) sbb mov sub mov fmul rex.WB mov jne sub jbe iret sbb rex.XB or cmp je loope cmp out jp adc (bad) lock retq scas movslq rex.X push xor int3 xor rex.WX rex.WR movsl jne retq (bad) lock stc xchg xchg rex.X rex.WXB or mov push mov xor test fldl nop (bad) adc js ja (bad) adc sub (bad) rex.WRX rex.WR (bad) movabs add shl fstpt xor cld movsb rex.WB jmp loopne (bad) jle rex.WX rex.RB retq sbb xor cmp (bad) loopne xor and loope (bad) (bad) add or (bad) add xchg mov xchg rex.R retq rex.XB (bad) cmp sahf int3 lahf mov (bad) or add rex.WRX movabs pop rex.WXB (bad) add and jno insl (bad) rcll and sbb sub jg (bad) (bad) jns roll jge insb rex.B mov loope ds pop rex mov mov (bad) hlt hlt or jle xor in sbb cli insb mov outsb xor push or stos rex.R (bad) mov sti es pop movsl (bad) icebp sti (bad) (bad) (bad) outsl movsb stos mov or jp jnp push xorl pop cmp std mov and stc mov in repnz jno enterq retq adc jl (bad) lock (bad) sbb sub and (bad) xorl test rex.RX pushfq shrl rex.R pushq pop add jle xchg sub jp pushfq outsl (bad) jmp mov pushq cmp sarl mov retq shll pop pop mov fs (bad) mov test rol imul hlt roll (bad) pop loop sub (bad) cmp popfq cmp xor cltd out (bad) mov and sub inc xchg loopne (bad) scas xchg stos fcmovnb sbb int3 add ja xchg xor sub leaveq gs (bad) jbe rex.WX (bad) push mov rex.R movabs rorl (bad) stos push (bad) lret push add jg mov (bad) in xor jmpq in xchg jp adc rcrl add mov rex.WX jno rcrl in xchg add fwait and mov loopne std sbb jp mov pop rorl roll sarl (bad) cmp mov sbb mov sarb jge icebp callq in rex.RB and imul pop sbb cmp push addr32 repnz jrcxz fistp (bad) iret lock add es jo cmp push inc test jae test adc repnz movabs (bad) ss callq adc (bad) mov rex jge imul mov popfq (bad) lods (bad) (bad) mov fstl (bad) insb cmp adc (bad) cwtl loope clc mov fisttpll xor sbb (bad) rex.WX and or jg fildl push adc (bad) mov test int hlt and xchg push adc mov jp jno mov rex.WB push sub fsubl test or lret ror adc xchg xchg loopne add loopne push mov int3 xchg js sbb addl cli (bad) push popq push sarb jge and xchg xor enterq cwtl adc sub out (bad) jl or add xor (bad) (bad) rex.WX mov shll xchg (bad) (bad) mov (bad) out (bad) lret in test and pop cmpb cmp lock (bad) fsubrl mov rex.WRXB add movabs (bad) xchg cmp pop mov fsubr shll movsb (bad) push lock fs icebp iret (bad) xor subl shl lret movabs rex.R rcll adc mov mov scas stos shrl out cld pop rex.X cmp jb xchg add (bad) in lret (bad) adc out out sbb roll insb pop jg in xchg push mov and (bad) mov adc pop negl cltd jbe js add pop (bad) or retq pushfq mov xor xchg (bad) fwait iret xchg (bad) movabs (bad) or mov adc cmp xor jle (bad) neg push (bad) sub sub movabs fcoml rex.WRXB iret add incl jno pop test lock mov retq loopne mov xor cmpsb in jno je mov rex.WRXB rex.WRX (bad) pushq and pop xor pop out (bad) std out in adc movslq rex.R rex.WRX test int3 rorl rex.B out cmp icebp movabs jno icebp (bad) lret mov jbe push out or shrb sbb and cs rex stos jmpq or jle cmpsb jns xlat cmp (bad) loopne xchg (bad) test rex.R (bad) loopne rex.RX enterq callq mov outsb movsb cmpl int or shrb add rex.R pushq out js jno mov imul leaveq (bad) cld leaveq lret (bad) callq hlt (bad) and (bad) movsb (bad) mov icebp xor (bad) (bad) xchg pop xchg mov sti int mov sbb sbb insl incb leaveq and xchg ja (bad) jno pushfq (bad) (bad) (bad) ja jo ja int3 xor jne mov sbb adc jo rex.WXB repnz (bad) loope rex.WRX push jae xchg sarb rex.RXB rex.WRB sbb std test (bad) rex.W add nop jrcxz (bad) xchg hlt retq rex.WX rex.R retq movabs icebp fucomp sub rex.RB iret cmpl out psubusw mov (bad) int3 add rex.WRX ss rex.WRB mov fwait jb or cmpsb test jae pop add callq repnz adc imul jl add fcompl cmp int3 (bad) rolb push mov sarl sbb sub data16 mov test and xor lret rorl jl xchg clc adc jg or lea mov (bad) notl testb nop adc or int cmp sbb sub xor stos or sub punpckhbw push outsb jp ja shrl (bad) push rorl and mov jbe jp mov rol je (bad) nop adc pop retq pop movabs sbb scas mov and pop mov (bad) repz or sbb pushq lods jge adc rcrb roll rcll movabs and hlt mov cmp (bad) jb loope mov ror imul (bad) lock jg (bad) mov sarl mov shll (bad) (bad) jae mov add out or (bad) mov jp movabs xor rcr (bad) in enterq rorl iret adc cmpsl mul add jno movsl or (bad) popfq sbb cmp addr32 (bad) mov rex.R test roll sbb inc lods cmpsb movabs lock pop (bad) (bad) imul xchg mov (bad) xchg movslq fdivl ss jnp fnstcw shrl imul test xchg rcr popq rol cmpsl popfq out andl (bad) shll retq push movabs loop lods shrl lret orb xchg jne decl cmp movsb xor jl loop (bad) (bad) xor popfq fisttpll (bad) (bad) xor mov adc cmpsl mov rex.WR or (bad) cld lret xor (bad) imul int3 push or xlat int sbb retq sub xor jb mov (bad) push or scas shrl adc movabs sub or push sub add (bad) add fisubr mov add rex.B vprotw loop push pushfq clc sub (bad) imul fld pop cmp movslq rex.RXB loope push pop (bad) cmc jno fisttp and (bad) rcr int3 xlat mov test scas adc repnz jmp movslq mov (bad) pop pushq pop push or jg cmp (bad) in vcvttss2si jne divl (bad) int3 in movl test fisttpl adc (bad) movabs (bad) sub cmp sub xchg pop add ror movb mul jns rol jp pop cmpsl jle (bad) outsb rcl lret or adc repz std imul out mov lret jno shll jge movabs (bad) (bad) jno shlq shrb lret sbb rex.WRXB push or movsb jle lret jo (bad) jbe rex out (bad) (bad) xor sbb mov (bad) mov pop mov and or adc retq int xchg lahf movabs or (bad) pop push xchg retq (bad) mov (bad) mov movslq subl test (bad) (bad) test shr (bad) popfq lret int3 (bad) negb in hlt rex.B cmp fwait movabs cmp xor adc data16 mov (bad) push cmp (bad) xchg jp imul out (bad) xor stos jmp popfq xchg pushq mov pop (bad) (bad) add rcll loopne sahf shr rex.B xchg push fstpt leaveq (bad) jno cli adc cmp movsl cltd add push loope nop mov jle sub jg rex roll sub mov bnd push (bad) cmp (bad) rcr mov sbb callq add out (bad) mov mov mov sub pop xor xchg jo (bad) mov add or data16 (bad) repnz adc insl add movabs mov and (bad) leaveq movslq (bad) mov and add leaveq and rex.WRB enterq shrl (bad) jp xchg mov rcrb imul xchg movabs out sti sbb rcrl (bad) lret (bad) or retq push cmpsb repz xor and and xchg sub lods mov (bad) mov mov jno and pushq addr32 rex.WXB push xchg rcll test adc mov mov fisubrl (bad) vandps insb (bad) xor push mov pop (bad) (bad) (bad) add sub push sbb xchg jmp stc repnz mov pop popfq sub rcl mov repnz cmp xchg jns shrl add mov add jbe ror sub fistp mov imul popfq mov rex.WXB xorb (bad) or xchg sbb (bad) addr32 xchg xchg rex test adc (bad) mov and (bad) jnp sub mov mov imul pop add (bad) jmpq (bad) insl push mov loop xor cwtl cmp iret (bad) test sub int in rex.WXB rex.WB in rex.X (bad) enterq fild cmp rex.WRX rex.WR cwtl movabs rex.W popfq pop mov nop rex.RX xchg mov adc jle fcmovnu retq fistl (bad) out or lret rex.RX and jb rex.X cmp std loopne and movntq (bad) cmp mul lods rolb fwait loop xlat fcomp jg,pn pushq sub es enterq (bad) (bad) xchg rcll mov (bad) (bad) (bad) push callq (bad) sbb mov cmp add repnz lea (bad) xor rex.WRXB rex.RXB stc xor add sub bnd rolb adc add rex.WR rex.R addr32 (bad) rex.R sub cli jnp jmp popfq (bad) testl fdivl imull rex.W xor callq psubd xchg mov jrcxz negl cmp fisttp sbb adc mov xor js rex.X imul movslq pop repz loope movabs int3 sbb (bad) pop mov mov insb pushq jmpq jp sti (bad) mov cld cli (bad) icebp push cmpsl rcll in int3 sbb push shll mov (bad) idiv rcl (bad) sub mov rcrl out sar or push lods jbe iret sub stos movabs cs push shrl mov roll push mov jbe cld cmp mov jrcxz jge rex.WRB sbb pushq ja lods mov jno in rcr data16 add (bad) in mov imul sub sub (bad) stos add xor in mov (bad) (bad) push xor lock outsl add sub rex.XB cmc push insb iret adc andl mov roll movabs (bad) divb xor pushfq mov sbb add sbb cltd movsb mov pop jo rex.WRB sarl movabs shrl sbb es (bad) jmp leaveq mov and fisttp xchg fcmovb popfq int and and retq push (bad) rorl jne push mov movslq movabs push cmpl stos movabs mov rex.R int3 push ds push lahf or stc mov cmp adc xchg xchg jae fs callq shl adcb cmpsl pslld (bad) (bad) stos jbe xor rex (bad) (bad) jb roll insl iret rcr or sub fnstcw xlat xor lret pushq xor cs (bad) test pushq (bad) jae push mov xchg rex.B rex.WRXB mov pushq sbb jbe mov cmpl adc (bad) mov lods mov add and pop loop movabs shll sub fimull out add je rex.WR movsl jne lock jae insl mov push fisttpll (bad) (bad) cld rcll (bad) mov incb fiaddl cwtl (bad) loopne je rcrl stos (bad) lret adc fndisi(8087 (bad) mov xchg adc orb rex.R fldcw mov inc mov xor cltd imul (bad) mov cmpsb add (bad) jle cmp outsb (bad) or movabs xlat in test outsl iret movsl rex.XB es stc xor rorb (bad) cwtl and fs scas rcrl (bad) cwtl pop xor rcrl xor (bad) jmpq (bad) push loopne and mov mov std mov roll fstpt cmovbe (bad) rex.WRX mov lret movb push rcl (bad) jns mov add push or icebp test pop pop in dec xchg jmp mov ja adc sub outsb divb fbld (bad) sarl cmp xchg test repnz (bad) xchg xor shrl or pop mov ja sub fwait mov sar sub rex.RB (bad) xchg jrcxz stos lahf rcrb rorl jmp sbb rcrl sbb (bad) xor sub add mov or movabs lock jno mov hlt or mov fidiv clc add or in mov rex.XB (bad) jae fnop in or (bad) cmp (bad) adc movb xor jl retq cmpsb movsl mov leaveq movabs and sub rcll jl (bad) ss push movabs retq cmp mov rcll cmp rcl adc (bad) adc and cmp mov (bad) sahf rcrl (bad) or add (bad) pop mov xchg xor mov cmpsb rex.WXB data16 sarl movslq mov sub pushfq pop rex.XB std pop or cmc retq (bad) movabs push rorl cmp add test insb xchg rex.WRB movsb push xchg jmp or stos mov cmp sbb int sub rol mov movslq jb (bad) ja rex.WR rex.XB mov rex.X pop xchg (bad) sub pop (bad) (bad) rex.RB (bad) fiaddl (bad) add (bad) (bad) mov jns pushfq rcll (bad) (bad) rcrb add rex.WXB rex.WRX (bad) sysexit movslq add pop xor sub add xchg shr (bad) mov stos rex.WRX (bad) repnz (bad) (bad) movabs rcll rex.X data16 rex.WXB loop xchg orl int ja xchg mov rorl (bad) and movabs xor mov xchg (bad) pop (bad) push (bad) and movabs cmp in (bad) cmpsl iret (bad) callq (bad) fldcw add or test test or in pop jg sub xor enterq rex.B fcoml pushq pop (bad) cmpsb icebp sti xchg jmpq mov cmp (bad) outsl xlat lods or mov sub mov sub test cmpl outsb vpcmpgtb stc lods (bad) icebp callq push sahf jb or and xor lret fistpll loope adc stc (bad) fmulp mov xor rex.WR rex.RXB (bad) movsb scas add cltd add sbb out lock mov xor sahf jg sub test iret sub push jns rex.XB jns adc (bad) repz (bad) stc fdivrs mov pushq ss in add add lahf sub sar movsb shrl rex.WR jo (bad) cmp (bad) or push push xchg xor pop or rex.WRX and insb fsub in fprem1 (bad) int3 js stc pop mov int scas scas rex.WRX movabs mov shrl in jns mov rex.WXB fwait xchg (bad) mulb imul push xrelease add test sub rex.WRX or lret and loope cmc test in (bad) xchg fnop repz or push (bad) jbe (bad) xor int3 pushfq sbb movabs mov clc (bad) shrl add fsubl (bad) mov shrl mov mov jg popfq fsubrs push (bad) mov cli imul mov add (bad) sub adc pop rcl sbb rex.WRB scas (bad) jne fwait jmpq rcll jae sarl movabs (bad) sbb sbb and mov or and (bad) mov and rex.RX cmpl clc out imulb (bad) mov and std nop stos movabs pop out rorl (bad) xchg add sub rex.WRX int cmp cmc adc pushq gs loope (bad) rex.WRX (bad) xlat xchg rex.WXB repz fs retq ja and mov (bad) (bad) mov sbb xor movabs test rex lock rex.RX hlt pop pop stc (bad) add pop jle loope icebp imul push (bad) sbb and (bad) push push (bad) or add mov cmp fsubrl (bad) jg test mov rex.WRX jge sbb (bad) (bad) cmp (bad) js rclb (bad) and retq clc rex.RXB pop xor xchg rex.B leaveq iret lret retq sub ficomp rex.WR sub (bad) (bad) (bad) (bad) (bad) jp jb add sub xor mov xchg fwait pushq mov xor sbb push rex.W hlt or ss jge sarl out (bad) (bad) pop mov push out cltd or mov repz (bad) insb cld movabs rcr rcl sahf movabs loop sarl mov (bad) sub mov (bad) (bad) (bad) adc out mov pushfq (bad) lods (bad) je lods mov jle ss jg lret add rex.B jae jmp loop pushfq rex.WRB (bad) test ds pop lahf loope cmp or sub adc out add loopne movabs adc frstor shl rex jae repnz fidivl jns (bad) je xchg and pop cmp (bad) mov rol ja adc rex.WB lret jle jno (bad) vpsadbw pushq adc lea shrl or rcll rex.WRXB and push push in jbe fisttpll fnstcw push (bad) lret test add out mov (bad) mov mov xchg movabs sub lret pushq xlat (bad) insb int cmpsl cwtl js jb hlt adc imul movabs lahf jrcxz cmc add xor jne and pop xchg cmp mov (bad) add insl movslq rex.WB rex.B rex.WX imul movabs rex.WXB ds sbb sti popfq (bad) int rex.WRXB repnz pop and lods out leaveq movb rex.RXB rex.WRB repz jmpq sub addr32 lods rex.WB (bad) test sbb retq rex.XB in roll adcl movsb add insb fsts movabs or or (bad) lret (bad) xor pop (bad) xchg or movsbl and (bad) add sub nop xchg cltd imul add fmulp cs adc sbb xlat test jmpq fcoml push xchg xchg adcl (bad) push sbb retq pop lock cmpsl insl cltq fcmovnb shrl jo fisttpll jmp xor jge sbb adc xor sub jmpq ror in rex.WR rex.B cld cmc or scas test jae sub jl rex.RB roll adc rex.WB stc notl nop loopne (bad) iret cli sarl jg je imul sar (bad) add (bad) jae (bad) mov gs xor mov loope out rcrl cmp loopne cmp mov mov (bad) or loopne addl xorl rex.B imul mov rex.WX fstps (bad) icebp fistpl sub mov xchg (bad) mov roll pop pushq stc add (bad) shll xor sbb xchg mov scas and rex.R jp shll faddl movabs mov idivl fsubs xor rcrl icebp (bad) cmpsb and sarl xlat sarl push and mul add lahf cli retq lods lret xor (bad) sub stos (bad) cli (bad) rex jrcxz rex.WRB inc rex.W lock pop rorl (bad) sub cmpsl movabs callq retq push faddp sub (bad) jle je out sbb cmp fldcw jp insb (bad) cld sub sub int3 (bad) ja (bad) rex.B fildl addr32 mov add sub mov push in (bad) push stos shr cld (bad) jle lret pop cli adc cltd movabs jbe jno rex (bad) mov icebp nop adc xchg xor movabs add addr32 lahf pop xlat add rex.WX mov pop in adc xchg rcrl xorb push mov mov add shll (bad) test (bad) mov movabs cmp callq sbb cmc (bad) or out mov push hlt jrcxz (bad) frstor add rex.XB cmp xor push or loope movslq rex.X popfq sub mov sub (bad) jle adc shrl movsb mov int fdivs xor (bad) popfq psadbw test icebp (bad) push addr32 (bad) mov insl sub pushfq rorl mov jg mov or push sbbl and sbb fcmovne jae adc shrl or fistpl mov mov jmpq loope rex.R lock or lea callq icebp lahf retq push (bad) mov and fstpl (bad) xchg mov xlat sbb (bad) imul (bad) lods adc adc xchg (bad) xadd out lea mov (bad) mov mov rex.B push (bad) mov rex.WB sub pop scas roll or mov push sarl jmp xor in je add rex.XB (bad) rcl adc decb mov add incl cmp (bad) (bad) ja jno (bad) jge insl (bad) (bad) or movsl adc rex.X or rcll repnz xor cwtl frstor add lock rcrq jmp (bad) (bad) mov xchg xchg or and cli out mov adc retq and and (bad) and mov xchg popfq sbb loopne in (bad) mov vpord shrl mov sub jns xchg lods add cli clc shr fistp shrl (bad) repz cmc mov sbb jmp retq jmpq sarl fimull rex.X rex.RX or (bad) movb jne xor leaveq ja add mov mov out jns,pn imul xor jnp (bad) mov lret repnz (bad) rex.RX adc push loop lods insb (bad) (bad) int int3 add xchg nop (bad) or cltd jo sbb mov data16 fsts add fwait (bad) (bad) mov sub or ds (bad) es add or adc cmp fyl2x rex.W add push adc sbb es pop loop (bad) mov roll outsl rex.WRB insb callq sub or cmp or rex.RXB xor mov rcrl cltd pslld (bad) cmp rex.R icebp retq and rex ds rorl ffreep adc fcmovbe test int3 rcrb rex.RB rex.RX pushq (bad) rex.WX movabs push shll outsl jnp std rex.WRX in xchg mov test sbb sub pushq xchg mov xchg sti repnz and cwtl icebp stos stos es and callq out (bad) rex.WRXB rex.RX push roll (bad) mov xlat fldenv (bad) movabs add jno xor (bad) enterq xor and jp pop fstl rex.X adc sbb shll xor shl mov jns (bad) add ror jl xlat mov (bad) rcl sbb loop imul int pop (bad) cmc movabs mov jae ror movsb (bad) imul jmpq sub outsb fistl mov cmp fcoml (bad) lret jle xchg adc mov out pushq callq jge mov repnz test test mov mov pop fcoms add push movabs (bad) adc je jns add stos xchg xor cmp lock (bad) icebp int3 (bad) cmpsb jb mov xchg movabs rex.WR rex.B sub and mov rorl addr32 lea (bad) rcl push mov fs repz sub sarb (bad) popfq sbb lret clc pop icebp jg pushfq rex.R in sti or jl rcll sub adc rex.WX callq addr32 rex.WB roll (bad) adc js lock enterq hlt sub mov push and movabs test xchg and loopne,pt rcll test loope sbb fistpl (bad) fidivrl (bad) adc cli rcrl in (bad) or mov rorl xor (bad) shll loop push push retq in (bad) push and test (bad) or jle cmp or movabs movabs (bad) sub rex.WR ds xor xchg shrl insb rex.WR mov loope (bad) mov jbe (bad) out test ds or cli cld std pop outsb (bad) push sub mov sub jnp sub and clc hlt pop int3 in scas and sub push push adc pop (bad) fs and add jmpq (bad) callq jne (bad) outsb rex.B rex.WR mov xor xorl rex.WB roll (bad) popfw jmp rcrl jle xchg out out cmp test fmuls es stc pop mov (bad) (bad) retq sub rcl rex.RXB adc pop fs cltd fildl push rex.RB xor cmp add xchg or add clc (bad) add scas cli ss fisttpll mov mov rolb roll std (bad) push movabs mov rex.WX int mov retq lahf push or je pop sbb pop (bad) jrcxz xor add cmc (bad) cli cs push cmp pop mov mov movabs mov lahf jae (bad) add cmp fildll adc fnstsw or pushq sbb mov icebp jrcxz (bad) (bad) in fstps rex.W rex.X in setne mov adc int hlt or (bad) iret vandnpd cmp (bad) and hlt mov fimul sahf xchg sbb (bad) jb sbb rex.R (bad) jae cmp sbb ja js imul jmp repnz rex.RB lock pop std in xchg cwtl add je mov leaveq (bad) mov rex.WB (bad) movabs scas movslq cmpsl testl push lods jno movabs mov (bad) (bad) repnz mov rex.WR jno lock xchg rex.WB rex.WRB (bad) (bad) fs (bad) jno (bad) jge fsub jge fwait (bad) sub ficom rex.WR (bad) lret imul loope push (bad) xchg loope (bad) push repz or add adc fnstcw xlat sub int rex.WRXB xchg pushq rex.W movabs cs add (bad) jne xchg adc add add sbb xor mov sahf (bad) fwait adc ffreep scas in xor mov pushq mov ja (bad) shll jge (bad) mov rex.WXB (bad) sbb pushq out (bad) xchg movabs (bad) (bad) repz adc sbbl mov jl fimull enterq stc adc jno add push mov jb rex in push pop (bad) loopne jmp jrcxz xor js cltd and out or test rcr sbb (bad) clc adc retq lods movl clc (bad) ljmp fist movabs mov (bad) rex.WRX fs data16 fmull stc jp repz xor retq repnz xor adcl (bad) (bad) rex.RX cmc (bad) push imul out push rex.XB rex.WB pushq (bad) pop xchg (bad) clc rex.W and (bad) fs (bad) retq leaveq mov retq nop sub rex.W rolb mov rex.WRX mov push rcrq (bad) fldenv out fcom or add cmp rex.W rex.RB out rex.RX mov pushfq xor sbb (bad) data16 fwait retq or movsl (bad) or cmc (bad) jmpq jle je cmp fildl mov enterq and xor (bad) pop (bad) pop rex.RXB movabs movslq out or xchg cltd or insl sub (bad) jno loope rex.W in (bad) sub rex.WRB mov cltd mov movslq test or or scas (bad) add pop (bad) stc jp mov jo es mov sbb out xlat xor mov rex.XB orl (bad) shrb shll or rex.B in nop (bad) mov pop xor lods (bad) adc add or sub xchg adc mov lahf xchg xor (bad) mov outsl rex.WRX (bad) outsl fnop fs lret jrcxz rex.R xchg mov and loop jge lret es loopne cmp cli (bad) xor jne int3 cmp mov jg rex.WX cmp (bad) rcrl (bad) sti retq (bad) xchg (bad) fistp loopne mov lret rex.WR mov push test cltd cmpsb xchg (bad) sahf or sub (bad) sbb push rex.WRX push jae (bad) fcomip hlt jae (bad) or mov stc jnp in mov sbb cld fimull shll rorl shll test jmp test in test rex.WRX mov out xchg xor sbb clc push adc mov (bad) xchg (bad) xlat (bad) mov stc or sbb paddsb rex.WXB and push adc rex add add xlat rcl in mov iret (bad) lret imul (bad) data16 add adc pextrw cltd sbb pop stos int3 add sub jl lahf mov std (bad) rex.B (bad) xor lea jb gs pushq pop rol popq sbb push insl mov gs cmc and or shll cld out rorl and fcmovnb rex.X mov (bad) (bad) (bad) in sbb rex.WRB xor in std lods xchg push jae scas es sar xchg data16 lods mov in gs cmp mov mov rex.RB mov add sbb rex.B insl (bad) movsb mov jbe shl lret and jge hlt push add (bad) leaveq rex.XB jle repz jb rex (bad) sub sbbb mov or push test xor notl cs (bad) in in cmp jge mov pop js mov test push add (bad) pop in movabs sub fdivrl pushq mov repz mov (bad) xor jb (bad) ds stc and (bad) rex.B imul js rex.X mov mov je nop (bad) stos lahf adc jle jns idivb rex.R sbb (bad) (bad) lea icebp repnz ds rex.WX sahf sarl insb mov test movabs leaveq rex.B lret xor enterq insl and iret sbb mov test xchg add leaveq cmpsl xlat sub (bad) fwait insl pop xchg fdiv sub add (bad) add mov rex.B rex.W (bad) fcmovu lret cmpsb loop lret jbe out lret add jae stos (bad) jbe jo leaveq add (bad) repnz push xchg lahf push add sbbl int (bad) cmc (bad) (bad) or jp jae jmpq sbb scas retq or gs shll sub rorb push (bad) pop xor add push (bad) (bad) jmpq pushq mov cmp rex.W sbb (bad) push fnsave stos (bad) mull sbb fsts push push (bad) (bad) and insl push cmp repnz mul or loopne nop adc (bad) mov mov rex.B jns (bad) outsb jrcxz sub (bad) xchg pop in in sahf xor and jrcxz jae mov jmpq enterq jmpq shl jp xor fsubrl fadds (bad) lock mov out insl rex.XB jbe mov sbb sub cmp out mov rex.RX clc jo jge rex.WXB repnz add lock cmp sbb or xchg and mov or (bad) addl sbb callq icebp fildl (bad) rex.XB enterq rex.WRB (bad) xor or jo rex.WR iret mov je (bad) lret movabs testl iret in xchg (bad) retq push icebp adc callq fcom jnp mov pushq roll adc ror popfq callq lret (bad) int adc out mov out adc mov sbb jbe and pop lock pop movsl cmc jns push in mov test rex.RX lret sub mov pop (bad) shll mov icebp mov rex.W addr32 mov lods mov xlat out xchg sbb xchg (bad) callq scas or cmp (bad) cltd sar jno or mov shll and test roll (bad) addl fs sarl outsb rcrl out sub callq sub (bad) (bad) (bad) fsubs jbe pop adc mov sarl callq push push (bad) adc rex.RX (bad) sub (bad) lods rex.WR mov lock cld or (bad) rex.W loope hlt pop jle sbb (bad) xor popfq mov cmp or jmp adc movabs (bad) jbe jns in mov rorl sub (bad) jl mov out rex.B movabs insl or xorb (bad) (bad) (bad) rex.RXB cmp mov shr sub push enterq jge pavgb data16 repnz movabs mov ja (bad) pushfq sbb roll cmpsb jbe (bad) sub not cmp test xchg rcrb rex.W rcll mov fistpl rex.WRXB add xchg adc rcrl mov pop add xchg mov sbb push (bad) movabs data16 sbb xor insb fidiv imul retq rex.B mov push (bad) movsb adc movabs mov mov sub xchg mov cmp loop imul rcll cmp sbb jns shrl mov add insl loop in jbe stos lock mov add sbb mov frstor and popfq retq fcomi roll jb (bad) jge push fs shl imul mov rex.R repnz add out mov rorb (bad) mov add scas negb add push adc (bad) xchg rcll push int3 div sub xchg scas mov add (bad) imul (bad) push pop rorl mov xchg cmc (bad) sub adc orl jo xor shll out lret repnz jne jnp cmpsb rex.XB rex.WRB xchg jbe xchg hlt or shr loopne rex.WX mov add mov rex.X mov stos lock movabs or movb (bad) jle add jp repnz repz jbe roll rex.RB enterq mov or rex.WRX add rex.WXB rorl leaveq rcll sbb (bad) pop in xchg pop xchg rcll (bad) adc rcr (bad) (bad) movsl push mov xchg or and xchg pushq cmp (bad) push pop fstpl out in xchg cmp (bad) fs mov (bad) jns adc cli scas psrld cmp push cmp (bad) (bad) pop movabs xlat repz cmpl roll fnstcw retq movb (bad) lahf (bad) in fcompl jmp mov (bad) or (bad) xchg adc lods jb jge rex.R repz xchg rol cmpsb (bad) ds shrl mov (bad) or loop rex.WXB lock jne and add movabs fnstenv and pop roll sarl xchg adc adc pop scas rex and sahf mov jg rorl and mov jbe pushfq xor rcll movsb rorl outsl loopne sub (bad) jno (bad) jrcxz pop rcrl shr enterq test rex.B (bad) stc ffreep xchg jb xchg xchg fwait scas (bad) pop push (bad) pop sti mov xor repz int add sbb iret loopne (bad) movabs mov out mov (bad) add mov mov jns (bad) test (bad) xlat mov std retq (bad) xchg lret xor rex.WX int sub js callq lahf sub es or lods (bad) iret jmpq test in fadd nop rex.W (bad) lods push (bad) (bad) jb retq (bad) (bad) push mov (bad) xchg xchg add enterq mov repnz shrb nop (bad) jno fnstcw mov xchg mov imul fidivl out sbb rex.WB rex.B iret int3 xchg in bswap push imul fcmovnb movabs jae adcl xlat lret fisubr out sbb lret pop negl mov hlt fistp sub ss cltd ja vmaxss (bad) movabs mov mov add bnd movsb rex.WR and imul xchg add pushq adc jle xor (bad) out lret add flds cmc pop mov sub adc xchg movabs pop stos jno clc xchg push shl cmp pop int test add cmpsb (bad) (bad) fs xor out add fnstsw (bad) iret fwait (bad) movabs xor ror movabs jne (bad) sub loope (bad) (bad) xor mov or jb xchg insb xchg sbb rcrl pop adc xor (bad) loope push loop leaveq shrl movabs int outsl (bad) (bad) xchg stc cs jge shl xchg (bad) pop leaveq sub (bad) adc insl sub jbe roll (bad) rorl xorl jae shl adc in xor (bad) rex.WRX and roll (bad) cmp test (bad) xor fs (bad) (bad) cwtl retq pop (bad) sbb loope hlt pop cmpsl lahf js xchg outsl movabs cltd jbe movslq add clc pushfq push int mov lods cwtl (bad) shrl cmp sarl rex.WRX shlb or jmpq adc in (bad) movsl add push callq mov fwait retq shrl push stos cmp and ljmp jmp loop lock movb rol and lahf clc imul jrcxz (bad) in (bad) rex.B cs rex.WX xor add enterq cmc out rcll movsb jge rcl mov xor xchg je insb scas (bad) shll xchg mov lock xchg cmp out rol out movsb jp pop lret retq or sub pop int (bad) retq sbb icebp sti (bad) add clc rcr (bad) mov ss popq lock cmp mov icebp add ds cld adc push out rex.WRX xchg loop (bad) (bad) (bad) rorb out push roll int3 xor mov xchg stc lea pop xchg in rcr rex.B mov sbb push imul rex.WRX in rex.WX rex.X xchg cmpsl vandpd (bad) mov sub push sub rorl (bad) mov sbb lret in addr32 js rex.RB cmp mov xchg jmpq mov stos push (bad) repnz repz movabs pushq and enterq lea (bad) (bad) (bad) pushq test (bad) rcrl lods rex.B lock jl rex.WRX stos outsb rex.RX sub add rorl notl imul loop pushfq mov retq xchg in fistp xlat ja sbb push std (bad) pop cld out rex.R push loope stc (bad) stos rex.W rex.WX rcrl mov sub rex.R sub repnz adc (bad) jbe stc jrcxz xor cmc sbb shrl jle leaveq pop fbld hlt out in mov cmpsb sahf scas pushq and loop movsb fadd xchg test (bad) (bad) xchg mov test pushfq (bad) mov insb jnp lahf mov (bad) mov inc fdivl in (bad) (bad) cld xor pushfq fistp stc sub sbb sarb (bad) hlt je cmpsb (bad) push stos add mov lock test xchg outsb mov pop out cmp ds and movabs sub (bad) jge insb (bad) xchg repz imul add lret xor addr32 movslq shl xchg callq rorl out mov cmc pop addr32 leaveq jno data16 fimull ja rex insl movabs pop stc mov (bad) callq push pushfq pop (bad) (bad) hlt (bad) cld add jb loope (bad) gs (bad) lods mov int pop cld rex.RX or mov shl outsl push cmp sbb pop icebp cwtl push imul (bad) lea rex.RXB fs (bad) fstps shlb fldl xchg std rex.WRX clc setge mov retq and jmp scas pop test (bad) jnp (bad) fbstp xchg pop stc jmpq rex.WRX cmpsl stos rex.B (bad) repz fmul out in mov pop movabs es fldenv add and pushq mov js pop shl cmp rex.RX xor (bad) imul sbb mov push fdivrl (bad) stos adc callq movabs xchg (bad) rorl xorl xor (bad) iret roll outsl js test (bad) mov addb mov jns retq cmpsb repnz and pop rex.WR push lret cmc mov xor jae roll loop push nop sarl (bad) push retq (bad) (bad) test pop push (bad) (bad) repnz (bad) adc fcmovu jb scas (bad) in xor jrcxz iret popfq loope out mov callq pop rex.WX push pop rex.B rex.RX (bad) cmc jb pop jns (bad) (bad) (bad) xchg loop adc adc (bad) and rex.X test xchg jrcxz movb or jrcxz adc adc jno outsl rex.WB pop (bad) fdivl cmp and loope mov fcmovnb cwtl rex.WX out loop cli jno incb xorl lret (bad) adc adc jrcxz or fcomp ds shll rex.R cwtl pop xchg lret movsbl xchg es jle fnop sub jnp out sbbl fcompl cld xchg cwtl loop pop ss sub (bad) sbb repnz fwait mov iret fcom jp mov ja fadd es mov xor (bad) int jmp jb push (bad) ja push push (bad) adc sub mov rex.WRX ss or adc subb (bad) pop sub sbb test mov pushq mov rex.WB (bad) xor rex.WR insl sti std (bad) and jno fistl and and test movabs mov flds subb repz scas and rex.W sbb rcrl in (bad) movslq pushfq rcr cld es and or imul shll rex.WRB jne rex.RX fwait add enterq fisubl negl jnp adc (bad) outsb pushq ficom scas mov lods sarl xor push cli xor sbb (bad) (bad) push xor iret movabs jb pop add fs add bswap sub xchg mov (bad) andl jl push lret sahf stos roll adc jmpq and movsb iret shll (bad) or fstpl jne xor mul and cltd cld test (bad) ficoml add fistl rcl data16 xchg mov repnz scas or jg fnstcw rex.WB enterq cmpsb xchg (bad) gs ja xor adc shll xor scas rol rex.WB ss (bad) rex.W retq sub cmp jbe rex.R jnp sub int3 rorl xor push fadd lods mov add cmp (bad) imul (bad) leaveq fdiv sub cmp push incl adc (bad) out fidivr jp rex.WRX or int3 push mov pop test add mov mov lods fidivl xchg int mov pop (bad) movsb xor (bad) std leaveq insb imul push cmpsl sbb xchg or xlat or (bad) mov repz mov (bad) fcompl mov rex.WXB push fildl or fwait jge add movabs nop (bad) sbb mov mov xchg sahf mov cmp rex.WR rex.RX rex.RB add mov jae jo popfq xchg cli pushfq rex.WXB xlat and rex.WRB insb lods orb fdivr movabs jl,pn xor mov mov ja fbstp sbb gs retq fildl (bad) jle jno rex.WRX push retq rex lods stos retq cmpsl movabs outsb in fldt in (bad) pop and (bad) fcmovne push or std loopne lret movabs scas rex.WXB cli pop xchg rex.R movabs fs cmp sub stos cmp (bad) xor (bad) rex.WRB rex.WX add (bad) rex.WRX pop pushfq iret lock fwait xchg lods mov movabs rorb sub and or icebp js (bad) pushfq jne xlat (bad) or jae enterq sbb xor (bad) clc lret ficomp cmp pushq stc out jae jno in mov xchg xlat je jne (bad) insl movq rex.WB and repz (bad) and pushq nop shll or mov mov sarl or imul adcb sub fbstp add and xor xchg rcrl sbb lret push jge xor pushq pop int sti nop repnz (bad) rex.WRB popfq sbb xchg imul js lods testl (bad) cmc (bad) sbb lahf imul out rcl (bad) rex lock add jp fstps cs xor cltd or adc popfq std (bad) or rex.B rex (bad) lock rep mov popfq (bad) xor xor (bad) rcr rex.RB (bad) movabs xchg repnz gs cld scas pop jg rex.WR repz xchg lods mov add mov rorb and rex.WR pop sub gs out rex.WXB or ds (bad) jo adc test xchg jl sar (bad) sbb sub jle fucom or sarl popq (bad) xchg jrcxz xchg (bad) imull push rol cltd lret clc (bad) fwait insb add cmp adcl rcrl int add sub addr32 out ss push stc (bad) jge mov shrl xchg or jmpq andl pop xor cli add jb movslq jbe ds (bad) (bad) or imul (bad) stc or lret cmc xchg (bad) (bad) (bad) int3 in rex.B add pop in mov jle xor or stc movabs (bad) cmp xor mov shl loopne (bad) jge jmp mov rex.X mov rcrb stos mov loopne frstor jp cmp data16 bnd sub fisttpl (bad) retq (bad) jmp shlb sub mov sahf (bad) test mov cmc add adc (bad) imul add js in sarl flds xor rcl and cmp iret mov jne addr32 lcall scas int outsb or (bad) movsl (bad) shl movsb lret pop jno incl jmp rex.B jmpq jp shrl ss push mov iret sub movabs sub (bad) push and rcr lret or xchg xchg fs outsl (bad) jae sbb (bad) (bad) adc push leaveq add inc rex.WRB scas or repz pop fdivs add cmp je fdivrp xor fist adc loop nop (bad) movb rorb cltd movabs (bad) enterq (bad) fucom pop mov leaveq out xchg rex.XB iret movabs fadds rex.WRXB shll cmp scas test imul scas rex.WRX test push in or add lods mov adc fscale mov jg lret or rex.WRX test rex.B (bad) cmp (bad) callq jne int3 rex.XB cmpsl add cmp mov icebp or loope cld (bad) add or andl scas add mov sti movabs lret and out rol int pop sub fistl cmp xor shlb (bad) sub jrcxz cmp and or fldenv nop and mov test lods mov repz cli rex.XB repnz (bad) mov orl fbstp (bad) fiadd add repnz pop cmp pop or rex.RX gs (bad) out addr32 loopne (bad) fstl repnz cmp sub or (bad) repz rex.B rex.WRX mov lret and jns vcmpsd pop mov cld ja js rex.WB movslq xlat xor rex.WRB jecxz (bad) (bad) test lods adc (bad) and and pushq (bad) fdivl pushfq pop js test sub rex.RX mov rex.B (bad) lret mov test pushq test repnz ds movabs mov fdivrs cmp fsubrs movabs movabs movabs mov add mov movslq popfq movswl xlat out adc jl xchg callq cmp (bad) (bad) push rex.XB repnz (bad) sahf shl xchg add sbb out gs rorl in add xor es or add out pop retq mov clc rex.B cmpb jl nop jp rcrl fldcw mov retq mov jo sahf out test lret or (bad) sub rex.WXB lock rex.RB (bad) xchg cmc rex.X popfq adc test cltd (bad) sbb movslq (bad) xlat adc js rorl rex.RB rcll xor sub xor (bad) int pushfq repz mov (bad) rex.R insb lahf add scas and (bad) jrcxz leaveq (bad) jns mov std xlat rolb movsb cmc shll mov (bad) scas xchg and fsubp (bad) mov rex.WRB fs sub pop mov mov out std shll mov rex.XB rex.RX xchg rex.X addr32 out (bad) push in sub (bad) mov rex mov (bad) jae (bad) lret push cmp push std mov callq in mov addr32 and (bad) ljmp jl (bad) rcll rex.WRX mov mov retq (bad) or rcl (bad) ds sub xchg movsb pop rorl or and test cmp rex.WRX loopne (bad) fsubl (bad) movabs jmpq sbbl rex.RXB movabs mov fidivl test add pop fstpt repz (bad) in divb incb fsub popq jnp (bad) pushq (bad) (bad) and es and jp mov (bad) sub movslq add shrl add xchg rex.B xor (bad) loopne (bad) imull mov fsubrl pop jne and xlat (bad) mov (bad) mov mov rex.WRX jns shrl lods or addb adc xchg stos jnp jns (bad) rcll or lret lahf loope loope pushq adc cmp rex.WXB cmp (bad) sarl xor mov sbb xchg rex.WRXB icebp cmp movabs lock (bad) rex.R es push pop sub (bad) (bad) and shll scas movabs push jbe pop (bad) (bad) rorl out rdtsc jg in rex.WXB shr (bad) lods push or repnz push mov jne (bad) rex.X sarl movsl ss iret (bad) out sub xchg sbb imul retq lret nop adc in (bad) (bad) rex.WR sub adc cli xchg nop stos (bad) and add sub xor rex.WXB rex cmpsb xchg rex.B add or sbb rex.R mov sar (bad) push and fcoml (bad) fs xor in mov xchg rex.W jbe movabs xchg xchg (bad) (bad) shl rcll scas lret sub cmp mov adc mov xlat (bad) js add rex.XB rex.XB jg mov rex.R rex.RX rex.XB jne lahf (bad) xchg sub negb add (bad) xchg xchg xlat shl imul push (bad) and orl jbe rol jl sub lcall (bad) xchg rex.XB (bad) fs cli xor and js mov rex.RX push mov (bad) clc add in rex.B mov (bad) xor xchg sub std out sub rex.WRB adc enterq sar sbb (bad) (bad) xchg out stos andl stos sbb jmpq jb jns fidivl sub addr32 xchg enterq movabs (bad) adc rex.WR roll mov enterq push rex.B push (bad) imul or in xchg (bad) jbe pop movsb test (bad) jns and (bad) (bad) jmpq ror or and xchg cmpsl pop sub xor stos push (bad) rex.RX pop xchg or repz pushfq bsr jns mov sbb adc mov cmp es xchg and jmpq rex.W xchg mov and rex.R addl sarl cld pushq in xchg add test pushfq push retw rex.RB sub (bad) jrcxz rex.B rex.R cs iret push sbb cmp subl cmpsb xor retq test movabs xchg outsl enterq imul jmpq (bad) test xor movsq add rex hlt (bad) div shlb (bad) loope (bad) (bad) sbb repnz inc sarb adc sbb mov repz xlat sbb repz cmp sbb sahf push rep int3 in out movabs cmp std pshufw mov popfq push lods movabs out (bad) adc fwait pop lods rex.R jnp cmpsl loop fldl orl addl cmp jge sub mov rex.WX repz lock loopne xchg fnsave cmp test insl (bad) pop (bad) iret or rex.X (bad) xor push (bad) insl pop mov out shlb rex.RXB rol xor pop jne mov xchg mov sbb lret (bad) mov xchg or rex.B mov roll sub iret (bad) shll out jo push or sahf mov mov (bad) xor fsubrs iret rex.WRB movabs jrcxz rex.WRB sbb roll cs (bad) adc (bad) adc mov jrcxz and cwtl mov (bad) lret rcr jmpq (bad) roll stos fdivrs shl rclb sub retq or clc adc mov mov lods rex.WRB rex.R popfq mov jnp (bad) (bad) (bad) jno mov clc decl lods adc rcll shrl adc loopne jns pushfq mov and repnz and test stos (bad) fstp out xchg or (bad) xchg pop popfq mov (bad) mov icebp sarl push shrl cmp data16 pushfq (bad) out sarl pop movabs imul adc mov cmp icebp retq xor int mov jo (bad) movabs xor jbe adc push repnz cmp pop out sbb mov leaveq xchg (bad) sub (bad) add fisubl in loopne add int3 cmp ja sbb mov adc (bad) jae and mov sbb mov or movabs fsubr mov mov mov cwtl mov rol rex.WXB mov sar sub add and in fstl (bad) sahf mov adc cltd push rex.B outsb jno icebp (bad) out xor cli sbb rcrb clc adc (bad) mov add sbb or cmpsl (bad) scas mov (bad) rex.WX movabs xchg rcrl scas negb mov sbb lret fcmovne mov insb retq push pop rex.WRX shrl or pop rex.WX sub loopne test shrl pop stc push lret shrl fildl movsb or add pcmpeqw xchg jle xchg rcl adcb mov rex.RX (bad) mov push fsubrl ds rol movabs sahf mov add (bad) (bad) stos movb shll shrl jp push movabs (bad) std rcrl ss add ja xor iret cmpsl fcomps (bad) movabs cmp sbb movabs pop (bad) cmp sub xor iret repnz add stc sahf mov clc pushfq iret and sub rex.B lret pop sbb xor in (bad) or mov cmp fadd insb (bad) rex.RX ss (bad) push cmpsb enterq push roll (bad) mov (bad) pop mov rex retq and rex.R fldenv rcll rex.X or adcl jl retq fmull (bad) jge movsl sub out (bad) (bad) stos idivb sub and shll pop (bad) cltd lock or retq xchg loope push retq callq sti enterq ja and leaveq sub out (bad) push rcrl rex.XB xchg rex.X fmuls (bad) (bad) xor (bad) mov addr32 fwait enterq movslq adc fld int pop jmp xor out jno mov lea movsl mov xchg jbe incl jp jns pop mov push lret adc (bad) push movsl movabs inc (bad) sbb or push pop cli rex.WB test shll (bad) icebp (bad) xor movsl push jo movabs sub iret movsb ja int xchg iret jl ds test sub xchg negl lods (bad) in fldenv out mov in or or rcrl (bad) mov pop fadd rolb cs mov test (bad) or rex.XB lock in lods sbb (bad) repz or psrld mov cmp (bad) ss (bad) shrb (bad) jg test stos hlt vunpcklps iret push mov jle jbe and lret movsl stc pop add loopne mov (bad) add imul xorb out repnz (bad) cmp rex.WX xchg push outsb cltd and (bad) insb notb cmp loope imul insl sbb adc add (bad) jns mov lahf (bad) in rex jbe pop sti (bad) jae (bad) adc (bad) (bad) rol outsl xor jns lret sub rex.RB sub (bad) (bad) add (bad) rex.XB and sti addl inc int retq sub loop xchg (bad) cmp (bad) mov xor pop (bad) (bad) or rex.R or (bad) sbb stc lea rcrl cwtl rcll (bad) sbb cs rcrl lods hlt (bad) lock sub mov out push cmp fisttpl rex.WB rex.R loope mov cwtl mov shll retq out push cmp sti pop mov imul jrcxz (bad) and mov xchg fdivl leaveq (bad) cmp (bad) xchg cmpl push fwait sbb repz xchg push and mov adc jl mov mov (bad) fcom rex.RX jbe out (bad) rol xor sbb scas movslq adc out (bad) (bad) xor ffreep rex.RXB fildl xor xchg fidivl rex repnz fwait clc outsb push insl sub fwait lret faddp rex.WRX callq and fsubrl sub rex sub cld push pop and (bad) jns in rex.WR mov imul movslq mov jnp int3 fisttpll and jmp out xlat rex.RB adcl fcoml (bad) fldcw xchg (bad) lods jp add movabs lock (bad) (bad) cmpsb xchg push rex.B (bad) ss xor rex.RXB test callq (bad) popfq mov sub xchg or pop jmpq outsl mov push sbb xor cmc push loop mov pushfq repz adc (bad) sbb (bad) adc lock jne xchg jrcxz (bad) add test rex.WXB lods rex.RX mov orl addr32 mov mov (bad) lret loope (bad) (bad) sub je movsl lea (bad) popq sub (bad) xor push loope push rex.R sub scas rolb lret lea xchg rex.XB fild (bad) retq (bad) int retq rex.WR and test (bad) fsts and xchg push (bad) pop rex.RXB retq lret in stos rex.WR rex.WR movslq jnp sbb rex.R sub retq (bad) xchg (bad) gs out fwait sbb lret (bad) mov adc and or jo rex.WRX pop xchg mov movsb iret mov or jno cmp lahf jo retq or sub fneni(8087 pop ss jl rex.RX cltd sarl rex.R xchg (bad) xor movabs callq data16 incb mov out (bad) repz lfs sbb rex.X mov (bad) sub rex.WRXB imulb in loopne cs cmpsl rex.WRB pop rex.RB lock adcl movabs xchg scas fadd jne std es lret movabs pop jge out sbb (bad) jle (bad) test xor xchg (bad) add jno xchg mov ja fmuls lret sbb shll ds or push rcll or rcr (bad) int3 adc or roll (bad) mov lret jae mov rex.WR xchg addr32 push cld rex.RX loop rorl cs cltd jmp addl movsl shll rex.WRB rcrl jl ror addl ja out out add out and sub mov es and mov sbb cwtl cltd lea sarl sbb bswap rcll in rex.XB fisub movsl and rorl pop fnstcw mov cs rex insl cwtl and fmull test adc fwait movabs pop int loop (bad) vpaddusw jno sbb sbb fucomip rex.B sbb push xor and scas outsb lret cwtl jge fsts xor lret icebp sbb pop (bad) (bad) mov add (bad) callq (bad) cmp repz fwait retq mov and or mov ror push jbe imul shl sbb int3 shrl mov in xorl shrl pop (bad) push cmp adc (bad) imul (bad) (bad) mov (bad) pushfq icebp rex.WR pushq insl scas iret enterq and (bad) rex.B cmp cmc pushfq int fist pop out add movsl rex.WRX rex.RB push and jrcxz in out frndint xchg (bad) enterq push ror jmpq rex.RXB xor jns xor roll jbe rcr subl pop push jnp mov pop (bad) imul repnz (bad) insb lahf loope jnp cmc cltd (bad) (bad) movabs rex.XB rcll (bad) sub cmp out and adc (bad) pop movslq cmp rex.WR cs cld add or outsb fadd lea mov mov shll retq (bad) repnz push movb mov xor cmp sub sti (bad) rex.WXB icebp or mov cli add addr32 insb (bad) push stos (bad) es xor cltd or (bad) cmp and sahf loop outsb clc mov mov (bad) stc xor icebp rcr shl negl test or (bad) pop nop pop sbb rorl (bad) pop rex gs adc rex.WRB sbb movabs xchg jle xor rex.W mov mov (bad) fwait cmp mov retq repnz pop xchg fidiv (bad) sub add sbb (bad) insb (bad) enterq js (bad) rex.RXB sub cltd (bad) divl insl mov shl (bad) int loop xchg sub inc sbb sub jp cmc xchg rex.WXB sub adc rex.WRX retq (bad) leaveq shr rex.B push std mov add jb ffree adc leaveq rex.XB (bad) clc vmovdqu rex.B adc pushq rex.RX divl movslq lret (bad) or cmc (bad) icebp enterq xchg (bad) (bad) mov loope and iret rex.B cs (bad) retq rex.RXB mov pushq imul mov pushq add out rex.WX test (bad) jb rex.X repz imul hlt frstor out rex.WR add mulb rorl jmpq loop mov jmp (bad) jne sub shrl rex.RXB sub xchg xchg mov xlat gs out (bad) sahf cmp fcomi loopne retq pushq and movsl lods and insl rex.WRXB fs insl mov sbb (bad) jbe (bad) (bad) or imul in cmpsb (bad) mov rex.RXB pop jb mov (bad) lret rex.RB jne test sub jb jge pop mov push xchg rcr xlat rcl repnz test movabs mov out in jge jns pop jne lret (bad) insl mov (bad) lea sbb cmp mov xchg std movslq cltd fwait (bad) cmp orl xchg cs (bad) sub (bad) cli pop rex.RB mov mov cmp shrl rex.W mov mov es (bad) jns (bad) or rex.WRB rex.R jb sub (bad) ja sub pop scas add (bad) shll jo sarl nop push (bad) iret pop (bad) push test vcmpps (bad) fldl push (bad) mov rcrl test add pop jns rex.RB rex.RX int3 jge int sub sarl push add mov insl jge pop adc xor (bad) test in mov (bad) push (bad) jae xlat rex.B in (bad) stc jbe imul test rcl xchg (bad) and adc (bad) jmpq pop jp icebp je jnp pushq outsb movabs mov sub retq xchg ffree cld mov std out xor rex.WRXB shll xchg scas xchg (bad) (bad) pop rex.RXB cmp add xchg or mov mov js rcll pop scas popfq int3 add rcrl test and fsts cmp xor addr32 adc js sti mov rcr pop (bad) cmp ficom pop enterq jge xchg pop and lock and frstor pinsrw rex.R shrb push mov iret jle (bad) mov (bad) rex.RX pushq stos movsb rcrl movabs cmp out xchg shr pop (bad) insb (bad) rex.WRB je xchg xchg adc rex.RXB lahf adc sub movabs cmp xchg (bad) fisubrl cld movabs (bad) notl mov or addb (bad) (bad) sbb movslq mov movb inc stc decl (bad) xlat pop lret shll rex.WXB and (bad) js (bad) xor cmp (bad) mov jg negb (bad) (bad) jne cmc or xorl lock rex.W xchg roll pop xchg fs cmp jbe mov jmpq rcrl js fsubl and retq xor (bad) lea (bad) (bad) jns stos (bad) xor shr repz scas push in pop retq jp fdivrl shlb je (bad) icebp xchg add fbstp (bad) iret rex.WX pop movslq rcrl push shll (bad) jmp int (bad) fwait std movsl pop mov rex.XB cld rol jge (bad) jnp push sarl adc shrl outsb mov cwtl (bad) (bad) rcrl sbb (bad) jg push push shl push push lret (bad) lret cmp sub callq fwait (bad) fcmovu mov xchg (bad) movabs add fisubl in jmp pop adc jle xor or and rcr mov (bad) test cmp imul int adcb rex.XB shrl mov push pushq jmp nop negl mov lock rex.R ss je sar rcll scas cwtl (bad) (bad) sub ror (bad) (bad) or rex pop outsb roll pop jmpq in pushq jnp ds es shll add sub leaveq insl rex.WRX mov push xor mov mov test addl pushfq and xchg sarl enterq jo and ffree adc pushq jl rorb (bad) out add cmp roll stos test shlb scas (bad) lret or cld mov sub xadd stos xor (bad) icebp rex.WR rex.X mov sbb movb xor push adc (bad) jnp xlat xchg (bad) int (bad) mov stos mov rorl jg xchg (bad) xor add jbe (bad) xor adc scas outsb fs xchg add iret and cmp (bad) (bad) mov sbb sub (bad) divb xchg cmp mov mov in and (bad) cmp shrl rex.RXB rcrl (bad) cmp add or rex.RB xchg mov and es push stos rclb sti or add (bad) xor sub mov xor cs add jno sbb stos retq adc and (bad) xor negb movabs or mov fnstcw test rcrb rcll adc int rol cli rex.WX lret lret mov (bad) mov (bad) rex rex rex.X (bad) mov ja adc sbb loope int movabs pop shrl xchg callq mov fidivrl lret jrcxz cmp sarl popfq (bad) shl gs popfq pop push loop (bad) sbbl sarl (bad) cmp sbb addr32 jb rorl cltd movsb fmuls pushq mov sub js (bad) hlt (bad) push scas (bad) lods fnstcw push stos movabs in stc xchg xchg rex.XB xor (bad) cmp in rol icebp (bad) in (bad) rex.B pop rcl rcrb jb repnz xchg rclb sub hlt popfq in mov enterq rex.RXB mov mov add mov subl mov pop xor (bad) (bad) cs retq fimull rcll (bad) (bad) and rex.WRXB rex.B retq sub and ja pop rex.WRX rex.WXB and xchg std mov imul pop lods fwait rex.WR callq pushfq ja xchg loope rex.WR mov loope or pop (bad) jo add pop fdivrl js stos and sbb fildl lock pushq sarl fstpl pop loopne and and pushq push push rex.B rex.WR js,pn out cmpsl movabs cltd ror in fdivr sbb movabs sub (bad) rex rex.WRX hlt (bad) (bad) outsb and stc (bad) add imul sbb (bad) (bad) mov nop rex.WR movsb add outsl cld jbe out fiaddl lea (bad) roll and cmp out (bad) rex.R push (bad) out sub mov pushq repnz push and rex.RX fisub scas rex.RX cltd add scas rex.WR sub jrcxz icebp clc (bad) mov add fmuls out cmpl rex.XB shrl cs push adcl mov sub xor jnp notl retq add jle fdivp (bad) mov add pop mov xchg int push (bad) ss adc (bad) rex.WRXB in repnz cs rex.R jrcxz test jb rex.RXB sub addr32 pop xchg mov mov cmp insl xor jmpq pop loope pushq jo (bad) in shrl (bad) mov (bad) fwait addr32 (bad) and js fs xor mov mov pop pop rcl pop push incl (bad) and movabs lods in pop mov out mov cld mov pushq roll (bad) cli (bad) sti es sbb rex.WX and mov cmp jmp int (bad) cs push in je jo loop rorl insb add rcr mov cs jge roll xor in adc jne lock callq or mov mov stos (bad) scas mov lret (bad) mov adc xchg loope add sarl (bad) push push cmpsl mov rcl push (bad) (bad) (bad) sub int add (bad) fild (bad) mov sub push and negl jmpq cli add popfq (bad) (bad) mov cwtl (bad) js rex.WR (bad) (bad) add push pop (bad) pop xchg fsts mov out popq pandn jg out xchg mov rcrl jae rcrl clc (bad) jge stos std (bad) xor adc (bad) push sti shl in sbb shrl mov cmpl jge sbb (bad) sti xchg out jp mov rolb jrcxz rorl push mov repz (bad) and xchg mov fstpl rex neg retq cmpsb movabs (bad) (bad) adc (bad) divb movsl mov pushfq cmp movslq lea fcmovnb fimull xlat cmc jno (bad) fnop and adc jl stc or shrb shll icebp rex.R rol or fdivs and shll repnz (bad) imul or leaveq push and (bad) mov stos push (bad) jno repnz push (bad) xchg mov sbb add rex.WRX jne movsb data16 or ds roll sub cmp (bad) (bad) insl rex.WXB lock add shrl xchg leaveq (bad) cs and push xor push stos repnz add cmp movabs sti (bad) rcrl js sarl cltd lods sub outsl movabs roll hlt pmaxub roll xor shl mov adc stos xor loopne xchg xchg js adc rex.R rex.WX int (bad) movb rex sub out (bad) cmpsb add mov xor movsb or je (bad) (bad) rcll gs cld sarl add or sbb repz (bad) xor adc repz ja adc movabs add rex.WB rex.XB fiaddl lods test outsl (bad) cmc (bad) xor shrb (bad) or insb push test cmc int3 pop hlt or roll sahf lret movabs pushq fisubl movsl mov (bad) add int3 leaveq add (bad) je (bad) rex.WX push scas cmp push pop rex.WRX lahf out rcrl cmp je push push xor test hlt lods repnz scas pop rcll mov or (bad) lods (bad) je rorl rex.RX sbb clc fs xchg movsb mov movabs fdivl notl lods hlt or (bad) and mov or retq hlt sub jge adc xor mov add sbb mov xor jg rolb insl rex.WRXB callq pop adc (bad) hlt mov cmc sub xor (bad) notb or jbe (bad) cld stc jmpq (bad) cmpl xor (bad) (bad) out sbb (bad) nop (bad) ds incb xlat callq rcrb add or (bad) rcl movabs subb adc mov pop add js icebp (bad) icebp roll (bad) retq mov repnz pop xor add jne rcrb rex.WR rex rex.B add sub cli (bad) imul jle loop adc rex.RB rex.RXB imul (bad) mov or ss repnz scas pop rex.RX mov faddp shl rex.RX movabs jrcxz rcrl mov rcl mov lods mov jnp sbbl hlt add movabs in roll test mov (bad) mov ss shl rex.WX test and repnz push sbb int retq lea shl mov sbb add or (bad) lock fldcw and shl pushq (bad) xor sti retq popfq or test int3 cwtl and mov cmp movsb rex.WR push jb sub sub add cmp rcl cld add rcrl enterq hlt add and jrcxz adc jb and add repnz cmpsl or jne mov cmpsb sub (bad) mov loope and mov jrcxz mov movabs xchg lods lret cmc push sub jns adc (bad) roll leaveq movslq (bad) xchg sti xor jnp sub out mov adc sub cwtl mov push rex.RX shr push data16 and movsl stc push cli mov push pop sub out mov and add add es xor (bad) cmpsb cmp sbb movabs rorl js (bad) (bad) jo or rex.RXB fldenv icebp adc test lock ja shrl mov sbb (bad) hlt rex.XB (bad) (bad) or xchg ds movabs adc rex.WXB push hlt rol cmp outsb (bad) shr add popfq in addl (bad) lods ja imul lock movabs mov xchg jae mov or xchg imul popfq (bad) enterq (bad) scas (bad) xchg mov fwait clc (bad) fsubs (bad) movabs rex.WRX clc hlt mov (bad) mov (bad) jae adc add rorb cmpsl mov (bad) roll xor (bad) pop pushfq (bad) pushfq push mov andl cwtl (bad) xor movabs (bad) pushq mov mov sarb (bad) rcrl (bad) ffree ja jge jne pop loope int lock test ss add movabs out sub xor rcrl test sub je xor (bad) cmp or mov lret test cld push adcl lahf rol cmp rorl jae add testb roll (bad) cwtl and fucomip lahf jp rex.B pop mov shll xor rorl add mov out callq mov fcom xor shrl jl pop adc pushq jo xchg lret add lret mul xchg xadd or and lret add lahf test scas rex.WRB rorl sub shll imul (bad) out mov jmp pop rorb or (bad) fdivrl (bad) jno sbb shlb (bad) push push and lretw xor test (bad) in pop mov imul sub ja clc (bad) cmp xlat pop push add push sbb mov sub negl xor pop pop push out mov cmpl jbe rex.WRB mov (bad) (bad) mov (bad) add sub and outsb jns rcll or mov jl push lods in (bad) mov (bad) xor (bad) rex.WX sbb (bad) cld add jge lret xchg and (bad) (bad) jle rcl pop xchg xchg data16 mov shrl out leaveq shl cli xor decl (bad) jl rex.RB rex.WRB rex.B fwait rex.R push (bad) lock adcb (bad) xor cmp (bad) rorl cmc mov movsb (bad) ss jno,pn sbb movsl rex.WXB pushfq in sub in (bad) mov add cltd xchg insb shrl addr32 add sub pinsrw rex.B mov ja (bad) imul ss repz (bad) (bad) movsl xchg movabs test movsb and (bad) sarl cmp xchg mov lods rcrl movabs cmpsl rorl rol repz push pushfq outsl pushfq in shrl pushq mov sarl andl (bad) mov testb test jno jnp (bad) mov (bad) fisub cltd pop (bad) insb xchg rex (bad) push rex.WRX jrcxz rcll and pop cmc out xor (bad) (bad) push (bad) (bad) pop callq mov xchg movl xchg rcll rex.XB cmp xchg xchg xorl mov pushq xlat (bad) nop sbb data16 (bad) (bad) mov pushq shr sbb (bad) pushq mov (bad) (bad) (bad) xchg loopel (bad) movsl (bad) out xor sbb cmovno (bad) rcrb pop mov cmp (bad) movabs data16 mov rex.RX movsb fimul gs add lock je sarl (bad) sub xchg add cld out mov xlat sub mov test lods cwtl fwait cmpsl adc sbb rex.WXB add cmc mov xchg shrl and cmp add enterq jo mov clc pop sbb divq lret rex.WRB rex.XB rex.WRX movabs jl mov sarl and jbe (bad) push shll and rex.RXB in (bad) jg jp xchg repz mov (bad) icebp (bad) leaveq xlat sahf rol mov adc mov (bad) jnp dec xchg add pop rolw cmp and rol lcall sub pop pushq cld xor notb fcmovne (bad) mov (bad) in and or add jns scas test movsl (bad) jmpq rex.B (bad) cmp mov sub rex nop lods lods and xchg shlb jl (bad) add add sub jg shrl rex.R sbbq or (bad) fstpt lea (bad) andb and pop lcall (bad) out out mov test or imul push pop fildll (bad) xor pop sti rex.X loope (bad) (bad) push mov rolb insb sub scas lret xor movabs (bad) xchg movabs jb scas repnz rcll movabs mov mov shrl jb fldl (bad) (bad) popfq xchg out rex.XB movabs rol mov mov rex.B jae fnstsw jne jno xchg mov clc negb sbb (bad) jle rex.B and rex.WB out adc jne cmp icebp xchg cs repnz out fild int3 push decl jns (bad) rolb sbb and cs (bad) ss mov lods data16 lea (bad) jp mov adc movslq (bad) adc rex.RX roll (bad) (bad) (bad) rex.X sti pop movabs rex.WB iret (bad) lods idivb or cmp (bad) mov (bad) mov shlb (bad) in (bad) or jl xchg andl mov sub rex.WXB (bad) mov or sarl jbe add sub rol xlat sub push (bad) rcll out sbb jge mov out jne (bad) (bad) sbb rcll mov lahf rcrl (bad) in pop cmp xor (bad) adc xchg xchg (bad) repz insl cld rcll movsb add sar mov mov push lods cwtl add rcrl addr32 addb out rex.WRXB mov and and jbe rex.X add rex.XB (bad) sbb (bad) (bad) loop or rex.WB (bad) icebp push xchg lods (bad) xor loope sbb xor cmp enterq cmp sub (bad) push outsb lret pushfq hlt out test iret insl rex.RB rex.B mov push (bad) movabs fiaddl jmpq pop sar or repnz loope out cmpsl fs xor andl rex movsb stos nop sarl loope pop test sbb sub out fildl rex.WRB mov (bad) outsl popfq (bad) (bad) pop bnd sub add jge sub rorl sub jrcxz and (bad) adc ds pop (bad) or icebp sbb adc (bad) jge cld pop sbb loop xchg callq mov fs mov enterq in add movabs cli sar callq pushfq repz mov shll rcll cmc (bad) xor sub sbb xchg mov jmp movabs adc xchg ss mov fxch add push (bad) test mov and pop push in movabs movslq cmpsb scas movabs rclb xchg outsl and retq stos loop (bad) movl (bad) mov rex.WX or mov lods test retq (bad) rex.WB rorl scas pop cli test ss gs insl repz xchg adc stos mov xchg outsl std and mov rorl (bad) ja add rex.R add sub rex.B cld fchs pushfq pushq gs lea imul (bad) (bad) int3 sbb mov rex.R flds (bad) or rex.WXB rex.WRB lahf movabs xor (bad) cmp cmpsb and or push int rex.W fnstsw cmpsl (bad) adc mov cmp fdivrs (bad) (bad) sbb cmpb adc mov callq mov insb (bad) retq and rex.WRB lret (bad) add mov add jb or (bad) lods movslq mov rcrb std jb (bad) (bad) mov rex.WRXB outsl pop pop out rex.X sbb pushfq lret adc (bad) pop adc test out je mov repnz push data16 cmp imul jb (bad) not fimull xlat lock lods (bad) stos mov movslq sbb and fmull gs int out sbb cmp xorl push rcl fimull out cmp fbstp rex.XB loope fidivrl loopne mov (bad) test jo sbbb xor pushq xorl jmp cwtl add shrl mov (bad) sahf movsb push ja scas sub mov sub leaveq mov jns in mov (bad) insl (bad) in rex.WR or or movsb loopne lret sbb clc xor sub (bad) lret mov hlt lods or ss test icebp cld adc mov jmp pushq fstpl int and (bad) movabs cwtl push sub (bad) mov push (bad) (bad) push insl test rex.R repnz (bad) movabs adc mov mov stos sbb jb push sbb (bad) test ficom clc xor movabs jmpq rex gs sbb repnz xor (bad) jns push (bad) cltd xor lahf rex.RXB mov jle stos mov adc loope pop jmpq sbb iret icebp sti add cs xchg xorl rex.WB (bad) rex.RB (bad) mov (bad) xlat retq pop insl (bad) jmp xchg xor js mov (bad) xchg pushfq addr32 cmp (bad) mov mov in retq adc sub push cwtl int3 xor cmpsb imul or movb imulb xchg sarl fmull jo jge or test repz sbb sbb xor outsl jmpq cltd divl lret es jne mov fiaddl shlb jl or repnz lods movabs rex.WB repnz mov movsl pushq jrcxz out and jb out leaveq loopne outsb jmp mov jmpq rcll lahf lret (bad) je rex.B callq push (bad) mov in mov lea lahf clc callq pushq popfq sti ficoml (bad) jns xor jno and out mov adc jmpq pushfq mov (bad) cmp cmpsb pushq (bad) push loopne fsubs jno outsb mov jo and idivl test (bad) add cltd idivl fist rorb and out (bad) rcll es (bad) insl cmp cmpl rex.W cld sub (bad) rex.WXB (bad) mov rex.WR movabs out out push lret ror pop push xor rorl mov fs rex.XB rex.WRX scas lahf push add rex.WRXB rex.W fcomp flds insb movabs (bad) (bad) in (bad) nop rex.WXB xchg mov fiaddl stos test and ds (bad) notl gs fsubs jno xchg retq test rex.WB cld sub leaveq sub outsb mov (bad) (bad) out retq scas sub xor (bad) cmp (bad) ja or pop xchg mov cltd lret jp (bad) mov pushq push shr (bad) rex.WX hlt (bad) int3 movabs movsl xchg movslq rex.RX sarb popfq adc lock mov cmp in rex.RXB rex.WRB lock pop (bad) xchg (bad) cmp loopne movsb xchg xchg xor cltd sub mov rex.WX jne mov int add add mov (bad) ja rex.WR ficoml test push retq insl push jrcxz stos fnstenv movslq or rex mov add lret orb test push in ror es cmp xchg icebp (bad) and adc rorq adc mov rex.WRB rex.RXB (bad) cmp add push iret shl xor push cmpsl cltd xchg imul (bad) jno loop mov xor (bad) xchg sahf jg lock (bad) jo rex.WXB jp jno (bad) (bad) mov fsts jl rex.X mov movsb (bad) add xchg add sbb stc rex.X roll rex.RX (bad) xor (bad) insb je ds cmp rcll mov (bad) ja (bad) add leaveq pushq cmp cmp rex.RX mov in jl movabs jns jno mov movsl shl (bad) bts retq divb sbb lock add icebp out mov jmp mov repz movabs jne (bad) in (bad) test sbb movabs mov (bad) enterq pop mov pop in lods (bad) (bad) (bad) (bad) mov mov xchg movabs rex.RB fstpt mov repz fiadd pop push int3 out cmp stc callq rex.WR enterq test (bad) (bad) add (bad) push add jrcxz (bad) mov repnz rolb and cmc push mov or enterq mov test (bad) (bad) rolb jno adc and orb int3 or pop jl sbb mov out (bad) (bad) xor jno int and jne (bad) adc cmp and xor lret sub fadd add outsl xor retq jl stc data16 (bad) pushq cmp sbb dec (bad) xor sub sub je sar mov fdivs pop gs (bad) mov (bad) (bad) add sbb pop rex.R rex.WR int leaveq faddp repnz imul rcll xchg outsb jrcxz xor jae iret rex (bad) fwait jl rex.RX rex.WRX cmp (bad) int3 lret xor rcrl in (bad) or movabs out pushq (bad) xor pushfq iret mov movsb mov out fwait stc push (bad) or scas cmpsb push cmp in push sar callq gs mov cmpsb mov (bad) xor jrcxz jmp movabs sub out imul mov xchg jrcxz (bad) test jns sbb lahf lahf loopne pop cmp adc add jbe (bad) jb cli popfq (bad) (bad) jrcxz roll mov (bad) out fldt sbb or movsb roll (bad) xchg cli (bad) push in mov rex.WRX mov xchg (bad) jae pop (bad) xchg out add sbb (bad) stc xchg xchg subl repnz cmpsb enterq in mov sub imul test (bad) rcrl scas and fwait hlt xchg (bad) cmp and std xchg or jp rcrl cmovs retq mov xor (bad) cmc outsb (bad) lock and sub mov mov xchg add cmp sub (bad) out sbb rex.X lods or rcrl (bad) xor out insb sub rex.RXB je retq and pop pop in rex.W (bad) cmp ja movabs rex mov xchg or lock rex.WRXB rex.R sub fstpl icebp notb rex.B lock jg mov fst or data16 sub movslq pop sbbl (bad) enterq or jo in xor (bad) (bad) lea jno sub rol outsb pushq xchg (bad) cmpsb jbe int fadd cmp mov xchg rex.RXB fmull mov hlt push repnz mov rorb cmp sbb (bad) rex.WRX xor mov xchg loopne movabs rex.WRX xor js retq or cmp (bad) js callq lods or mov sbb pushq (bad) (bad) fstps jmp movabs jns retq push fsubrp (bad) lods (bad) (bad) jb mov pop (bad) sbb cltd clc or mov hlt fmul ss sbb (bad) repnz sub sbb or movabs shll (bad) mov (bad) sub xchg test (bad) mov mov cmpsb (bad) xor push mov pop (bad) jno cwtl cmc add outsb pop rcll xchg mov xorb (bad) cmp push xor jne (bad) out sbb imull (bad) jp cld insb jbe test pushq (bad) faddp int3 rex.WRXB (bad) callq jmp jp rcrl jl adc hlt mov push test push xor xchg movabs repz (bad) lock mov (bad) jne or test je shlb sti (bad) (bad) xchg adc xor sbb cmp cwtl loope rex.B rex.WRX pushq fbld retq or xchg and (bad) mov add lahf (bad) jne jmpq add mov incb add add mov sarb fadd mov cmpsb add movabs mov fs sbb adc sbb cwtl jge fnstcw pushfq out mov mov add and rex.WRXB pushq xchg (bad) add stc test idivl push lahf ficoml rex.B jb jge or pop mov (bad) sbb add (bad) cmp insb in roll adc pop stos (bad) mov sbb cwtl jns or adc repz mov fsubp mov cwtl rex.WB shr adc adc mov and (bad) rcll movabs sbb mov push (bad) loopne jb jge rex.R (bad) (bad) fnsave sti pop imul hlt loopne add adc mov jo jg lock xchg (bad) int movb rex insl or shll sbb add movsb cwtl (bad) (bad) rcrl out (bad) rcrl xor out movslq movb lret push popfq rex.X cltd movslq lock rex.WRB es cld xchg rex.XB or cwtl movslq test lret xlat mov (bad) (bad) jne cwtl shll sahf retq retq push fucomp jo cmpsb cmp push mov movslq out adc rcl cmpsl popfq or std shl rex.WXB rex scas mov in or sahf sti sub fsubr jnp add sar pop cwtl mov sbb (bad) (bad) or pushfq jbe cmc sub (bad) pslld out lahf pop popfq (bad) adc sbb (bad) xchg rex.WB pop pop xchg shlb adc pop add sub (bad) xchg (bad) xchg leaveq xor and rex.WB rex.WXB lret (bad) and jmpq (bad) (bad) clc movabs (bad) mov jmpq repnz sbb rorl add adc and (bad) movslq out mov (bad) sarl cmpl enterq shrl scas fistpl shll jmpq (bad) scas fsubs clc mull jmpq jle sbb fsubs cmc xor mov fildl rex.X icebp cmp mov lea (bad) sbb icebp shll retq xchg and insl test (bad) test push cmp jp and lret ss popfq test (bad) roll mov in repnz mov pop idiv repz rex.B add popfq repnz jne fadd jp add fdivrs mov (bad) rex.X xor (bad) cltd mov (bad) mov ss movabs iret pushfq adc jl xchg rex.WB add js js xor or rex.RXB movabs (bad) sub add (bad) pop lods pop cmpsb mov adc xchg cwtl pushq loop xchg adc sarl test fwait cmp and mov (bad) outsl rex.R subl cwtl lods mov insl negl mov popw (bad) icebp jmpq (bad) pop sar (bad) je xchg int (bad) sub fwait (bad) lret fwait out js rex.B pop icebp (bad) rex.WRB xchg int sub sarl rolb shl mov (bad) pop lods movsb nop xchg pushq pushfq lret stos jge loope (bad) (bad) xchg xor test adc (bad) pushq or (bad) shll lods xchg (bad) mov rcrl cli mov movabs imul rex.WRB frstor rex.WRXB (bad) mov pop or movsb push (bad) (bad) xor rex.WR lcall xchg rcr or shrl (bad) (bad) rorl xor roll outsl (bad) fdivrp movabs jo (bad) xor callq fistpll (bad) lret movabs xchg jbe test add vsubss (bad) icebp adc sub sub stos movabs movabs retq mov subl mov movsl jno shrl mov adc clc pop std out jo jbe pop scas or rex.WX xchg cmp lock movabs (bad) rolb add sub in movsb movabs rex.R or rorl xchg (bad) rex.WRXB icebp (bad) ja roll adc int movabs adc push scas rclb rcll movsl mov (bad) (bad) mov insb test and shll xorl (bad) add sbb (bad) jne add int (bad) fwait ljmp jrcxz add rcrl adc cmpsl enterq rex.XB sbb jg (bad) pop sar jb pavgb lea movabs data16 rex.RB in or test mov (bad) stc or jge sbb (bad) mov stos jp rex.RB in movabs loopne (bad) std iret roll jmpq sub push out sbb scas (bad) jl ror sub (bad) rorb (bad) lret pop scas jns nop and push rcll (bad) or (bad) jbe pushq shll add (bad) xor jmpq xchg (bad) insl add mov rex.R shr rorl rex.WRX (bad) sbb test test (bad) cmp rex.RXB shrl jg xor sti ror outsl rex.X cmp fnsave (bad) ja shr leaveq sahf sub mov lret rex.WR sub add xor and (bad) push cmp insl or cmp iret enterq mov shll or addr32 shrl cmp ficompl test and mov jno fimul ror xchg rcr mov movabs add cwtl insb shrl clc rex.R pushfq (bad) retq scas movabs mov fwait mov rcll and pop mov rex.W add int mov push roll (bad) sub test pop out cli idivb repz xor rex.XB adcl add rex.WRX fs test fdivrs pop cli ror sub sbb mov (bad) in imul (bad) repz push and sarl or insb ja andl jmpq sti (bad) out rcll and (bad) rex.B rex.XB insb jp fstpt jrcxz cmpsb (bad) retq test sarl mov (bad) mov (bad) roll repnz scas rex.XB rex.WXB es clc cwtl and jmp movslq rcrl (bad) add mov pop out xchg sbb pushq mov or pop (bad) jno jmpq addb es clc mov (bad) jrcxz test sub or (bad) notb rex.X stos mov add adc (bad) lods leaveq (bad) in push in sub scas rcrl rex.W push clc cs cmp jns shr sbb sub rex.B repnz mov rex.B mov add movsb mov sub movabs sbb in and (bad) repz (bad) pop or jne,pt movlps mov (bad) iret rex.W gs and retq add (bad) lret fs pushfq (bad) (bad) rex.B (bad) sbb push (bad) mov retq cs enterq (bad) adc cwtl rex.B bnd fsubl outsb sub ja xchg movsb push retq rclb test (bad) adc pushq repz test adc add cs insb in fcomi and mov movabs int and ds xchg cs rex.WB test or rex.WRB pop mov movl mov xor cmp mov jl mov cmpsl mov bnd cmp in out sub fs pop mov ds repnz rex.RXB push jmpq cmp fdivp test outsb ds fstps or fadd in movabs xchg fsubp mov push jp xchg or xchg mov orl and mov (bad) rex.XB (bad) (bad) js cmp adc fcmovnb adc add (bad) xor in shll pushq pop push push shl xchg pushq adc (bad) retq sti (bad) xor (bad) push (bad) xchg cmc (bad) jmp data16 imul sarl mov int3 xchg frstor clc (bad) scas (bad) rex.WRX out sbb insb adc fbstp pushq (bad) adc jge out add and std movabs add repz push mov imul (bad) retq retq sti and rex.W mov and in test xor fsubrl jns cmpb outsb push adc rolb (bad) movslq jg rex.WR rex.WR adc add retq jne sahf rex.RX cs rol int3 and mov jo mov jne rex.WXB (bad) repnz jb or rex.XB jbe jge mov sbb mov (bad) (bad) out fmulp test or fildll rex.WR imul rex mov fldenv mov loope jo (bad) mov rex.X scas stos pop mov callq mov int jns in js (bad) xchg xor mov (bad) rcr (bad) mov (bad) mov xlat jg rex.R es jrcxz movabs adc adc rex.WRXB rex.WB and push movabs rex.XB rex.RB movslq adc mov xor (bad) rex.WRXB sbb flds mov (bad) sbb int3 in (bad) (bad) (bad) mov cli jae shrl rex.R pop lods push (bad) xchg (bad) loop add (bad) outsl bsf (bad) iret movabs in jg add negb mulb add and repnz rex.XB cmp (bad) cmp sub add jo mov sbb fnstcw shrb enterq jo insl or rex.W fild mov rex.B rex.R rex.WR fdivrs push and loope adc and je pop mull xchg jp and adc lea (bad) iret mov out xor cmpsb or or int insb rolb rex.WB mov xchg out rcll jns rcrl or rex.WRXB rex.WRX sar jle mov cmpsl (bad) jne cmp add fistpll add rex.WXB xor add mov addb cmp fwait lret jno mov in cmp insl movabs sbb or imul shll popfq jno fwait jg mov cli shlb sbb xchg jb loop retq xor sbb mov pop out lods sbb rol (bad) mov (bad) cmp and hlt orb rex.RXB (bad) rex.XB push (bad) xchg data16 pushq cltd (bad) cmp sbb (bad) adc sub (bad) movabs add jns and fsubrl divb xchg in (bad) sahf jns outsl ja lock (bad) testb rex.WRXB (bad) stc addr32 xchg (bad) mov iret add jmpq xchg and rdmsr (bad) rex.WRX xchg or outsb xchg (bad) test pushfq pop loopne or mov jno (bad) and mov pop icebp flds push ffreep repz xchg cld nop insl int jnp hlt cmp rol (bad) jbe (bad) xor sub push (bad) cmc jno rex.WRX mov (bad) mov jnp jb leaveq and loopne (bad) popfq (bad) jbe,pn (bad) mov jns xchg (bad) (bad) push rex.XB mov xchg mov sbb stos sbb jb add sbb (bad) cmpsl sbb (bad) movsl movsb rex.WXB (bad) sbb add sarq jne enterq outsl jns (bad) data16 rorl mov jge pushfq mov movabs (bad) fldenv (bad) shrl xor (bad) incl shll shrl rex.X rex.WRB ss (bad) cmp cmpsb or scas movabs shr gs adc mov xchg fstps sub xor add add cmc js cmp sar adc pop repnz rcr scas and ljmp add (bad) out movabs pop xchg (bad) std jne rex.B sub sbb lock adc (bad) outsb rex.B lock (bad) pop mov sub enterq iret cs (bad) mov pop outsl roll jge movabs sub adc (bad) enterq (bad) jo iret pop jb mov out fwait rcrl xor in shr rex.WR jns jp repnz (bad) insb jmp (bad) (bad) xor in (bad) jno movabs rex.W jbe movabs push jmpq (bad) adc push sub es rex pushq pop xor sbb leaveq fldt mov mov rex.R test mov in rex.B rex.RX enterq (bad) xor pushfq lahf and (bad) (bad) or jmpq hlt cmp mov iret (bad) (bad) (bad) mov rex.XB jrcxz icebp (bad) shrl pop xchg rex.WRB sub xchg rex.RXB xlat movabs rex.WX movb add cltd and rex.R mov sub mov lret (bad) int3 sub or cmpsl shrl rex.W stos shrl jp outsb mov adc rex.WRXB (bad) xchg (bad) outsb sbb push (bad) mov mov adc xchg push roll or add jns sbb lret sar in pop rcr push (bad) cmpsb rex.RXB adc ss mov addr32 stc out retq (bad) loopne (bad) callq add lock and rex.WX mov insb mov cmc rorl stos rex.RXB jg mov sbb jmpq pop int3 mov cmp mov stos jnp xchg mov std fldcw int pop add outsl adc shl rorl adc scas mov hlt rex.B sub mov sub jb (bad) movsb shll pushq sbb lahf ror loopne out push shrl (bad) rex.RXB out outsb (bad) pushq loope (bad) sbb and (bad) (bad) xlat jmp (bad) test rcll push (bad) repnz stos imul (bad) rex.WRB ror cmp (bad) sahf cltd iret pushq xchg sbb outsb (bad) rcrl add in divb mov rex.WB enterq test rcr xor gs mov enterq addr32 rex.WXB shll insl (bad) adc cmc xor mov test (bad) or stc psadbw and or fmuls (bad) negl adc insb subl xchg cmpsl xchg lfs repz rex.WB repnz outsl lret xor add (bad) push rex.RX jo fistpll mov mov (bad) pop sbb rex.RB rex rex.RXB and mov enterq lret (bad) imul (bad) imulb add sub idivb jge roll pop xlat pop jnp rex.RXB shrl xor push notb enterq fwait hlt (bad) sub out rex.WB shll rorl mov or (bad) mov mov xchg adc rex.WRXB sub hlt movabs (bad) lods or pushq cmp outsb xchg jne (bad) int3 jg scas ffree xor sbb in xlat rex (bad) xchg (bad) ss shll (bad) (bad) mov negb (bad) mov movabs jl jns sub cmp xchg popfq (bad) cmp orl shl imul rcrl (bad) mov es sbb adc (bad) bnd xchg int (bad) outsb scas xor cmp rex.WR roll mov sbb (bad) add (bad) pop data16 lods mov std add ds leaveq insb jns imul rex.RXB rcl xchg popfq cli hlt mov sbb xlat rex.RB fnstsw pushq mov add in sub rex.X sbb iret add pop movabs adc xlat mov (bad) cmp int lahf sub mov shrl rex.XB rex.WRX (bad) cs cld out pushq leaveq mov notb int3 test sbbl lahf outsl (bad) (bad) insb rex.RB rcll xor pop pop test adc add loopne sub and jg loop int3 mov lods mov shrl rex.X ja cltd mulb stos int3 in mov rcr sbb outsb push cmp rex.WR enterw out (bad) adc (bad) mov push movabs adc shr xchg or roll ffreep sbb pop jmp or rcr movsl shlb int3 xchg cmp add or nop (bad) mov xor roll movabs and jg rex.R movabs add cmp shll jae and sub movabs jns pop outsb xchg cltd stos (bad) rex.B gs rex.RX (bad) movsb movabs stc paddusw (bad) xlat gs mov mov mov stos (bad) int in jnp out (bad) sbb add adcl lahf cmp xchg fcmovne or or sbb (bad) or ja add (bad) lods loope or sbb in push roll jl xchg imul pushfq mov fs mov jmp pushfq fnop int mov (bad) out imul mov adc lods jrcxz (bad) (bad) xchg repnz js push movabs mov outsb jrcxz out sub stos cmovp add roll out and rcl pop insb or pushq lret fwait popfq sti sarl (bad) (bad) (bad) xor (bad) (bad) lock fisubl enterq rex.B cmp jns push loope xlat pop movabs mov movabs and iret testl mov xchg rcll rorb pop shrl rcrl cltd rcll mov ror push sub movabs adc roll push and sbb test shll cs out (bad) (bad) sub adc retq xchg adc (bad) (bad) shll stos and fnstsw add (bad) pop adc (bad) rcrl fdivs shll rex.WB rex.WRXB repnz (bad) rorl sbb clc adc incl insb xchg sbb add xor jno jp sbbl add jmp sub retq divb push in movsl mov add xchg jo rex.WXB xchg (bad) mov xor xchg ss repz andl rex.RXB (bad) mov cmp or iret movabs jae jg xor (bad) or rex.B sbb sub push adc push cld (bad) test rex.R jl cwtl popq movsb pop and ja iret mov and (bad) (bad) (bad) in mov push and shrl (bad) rex.B mov (bad) ficom jg pop sbb mov (bad) loope rorl mov (bad) repnz jbe movabs mov sahf mov shll (bad) lea and mov out scas rex.B stos mov retq sub rolb mov cmp push xchg or add (bad) imul rex.B sbb sbb (bad) mov xor mov std fs data16 fbstp and lock mov pop cmp repnz sub sarl out rex.WB imul pop lock (bad) movabs fld out push test cmp adc xor adc sub jne pop mov div movslq (bad) xor fcmovb (bad) rex.WR es repnz mov or mov mov cmp rex.WXB pop or jge sbb fild xor or mov xor outsl (bad) cmp pop sarl cltd jge repz (bad) (bad) movsb roll stos pop test retq int in pushfq sbb rex xor icebp cli incl enterq add stos push cmp movabs sub hlt jo ror or ds imul (bad) adc (bad) imul outsb stos orb fnop (bad) lock xor sub fistpl xor pop loope xchg movabs sbb rex.B (bad) mov rex pop test cld test movabs mov push stc popq mov rex.WX test xchg xor xlat iret mov cmp jo pop (bad) shll (bad) cmp in rex.XB addr32 and jnp cmpl xor rex.W pop imul lods shll xchg add xchg sub and pop rex.WXB movsl fmull xor cmp rex jb xor add leaveq clc in mov (bad) rex.RXB cmp shll cltd movabs cld rcrb mov pushfq fwait jno (bad) rex.R rex rex.XB add adc shll stos (bad) add fild callq lods jmpq jb mov or stos adc push pop iret add cmpsb test outsb rex.WXB stos flds enterq cli negb outsl ss shld push sub jmpq jno rex.X retq mov movabs mov push mov sbb add rex.XB (bad) or movsb pop cmc lock (bad) (bad) mov test push push pushq fcom push (bad) add rex.R add rorl stos (bad) mov rex rex.WRX out subb and cli cmp sub stos movsl cwtl mov cmp rex.B es lret rolb iret lahf adc mov add (bad) mov adc in sbb shrl fld movabs add adc sub add rcrl out repnz or cmp (bad) xchg or (bad) adc hlt and and roll int (bad) stos pop rorl sub rorl lods fisubrl jno outsl (bad) repz xchg in pop roll cmp adc je (bad) mov sbb pushfq (bad) mov movslq (bad) (bad) rcrl mov repz movslq in mov adc rex.RB cld sarl (bad) shrq (bad) push pop mov ror mov (bad) add mov add rex.R cmc cwtl sti repnz scas (bad) icebp lret cli or rcll (bad) retq xor mov fcompl rex.R sarl (bad) test xchg xchg rex.B add (bad) xlat mov rcl jg adc mov mov (bad) pop xor fwait sub (bad) test sarl rcr or lods popfq push add ja (bad) jo add xor roll pop cmp leaveq ror rex.RB ds mov (bad) test shll cmp xchg sub rex.WR jge rcrl (bad) or pop cmpsl roll notl shll (bad) cld imul rex.B fld cli (bad) (bad) fild adc xor rex cmpsl rex.R loope sbb pop movabs shrb (bad) mov outsb rex.RXB out or leaveq insl (bad) jno ja (bad) ss xchg rex.WRB add push js (bad) mov cmp pop rex.RX lods sarl fbld lret mov popfq iret add push mov mov and fnop (bad) (bad) (bad) rex or xchg cmp mov (bad) out push (bad) jbe rex.WRXB (bad) xor (bad) add add mov jne (bad) shrl mov add (bad) movsb mov fucomp and xor int cmp push shrl repz add (bad) std addl pop pop push push lret cwtl out imul movabs imul jl sbb (bad) shlb adc rex.B (bad) cs mov loope (bad) fs cli out ds xor lret sub rol outsl (bad) cmp mov jrcxz and mov icebp adcl rcl rex.RB or test cli sub out (bad) mov sbb cld insl in cmc sarl stos push mov jno repnz in in rex rex.XB mov iret push movsl clc addl add in or fidivr in roll sti jrcxz sbb stc std shrb jno (bad) not rex.B mov mov jmpq test pushq sbb cmp ds rcll cwtl not sub (bad) mov (bad) out lret jae mov (bad) je and (bad) fwait sarl mov (bad) movabs fidivl sarl rorl rcrl push andl cltd adc rex.B movb sub insl mulps (bad) jnp fcmovnb xchg adc rex.WXB rex.WB jle retq (bad) (bad) mov adc or in jns mov (bad) pushq (bad) ja in jl shll ds pop or cmp jle repnz xor sahf jne (bad) in roll movsb fs test loopne rolb add cwtl pushq in rol lods jrcxz add pop or lahf icebp loopne xchg mov add subl and outsb push (bad) loope cwtl lods movb nop mov std rex.RXB push sbb (bad) xchg out mov or xorl ficom (bad) fistpll pop test sarl cmp (bad) adc rex.RX retq out shrb sub loopne movabs pop add or pop (bad) and xor fdivs jb test (bad) mov mov rcl rcll (bad) clc mov mov fimull (bad) mov scas fldcw or outsb and mov repnz jg rex.WR cmp add outsb sbb jmpq imul pop (bad) jne repz outsb sub stc hlt and stos rorl (bad) in movslq jne rex.X rex.RX or and rorl and rcl popfq movabs xor or add rcll and and mov mov (bad) movsb adc (bad) movl repnz iret xor xchg imul xlat mov fwait xchg std mov (bad) xor push shrl shl and cmp movsb mov mov and rex.WRB sub mov and sarl (bad) xlat rex.RXB xor leaveq out scas or (bad) retq cmp rcll xchg mov rex.B jo lahf inc push sub adc pop jbe jrcxz xchg cmpsl and nop xchg addr32 (bad) mov js pop jmp loope iret mov out mov xor stos (bad) repnz mov orb mov rorl add (bad) jbe push or pushq xchg imul outsb div mov jnp add rex.WR gs (bad) mov mov (bad) (bad) pop (bad) movsb jno adc rex.B fsubrl rcr adc loop push mov out or cmpsb (bad) js hlt in movabs es push movabs (bad) stc mov (bad) xchg fstl (bad) (bad) (bad) and gs iret fsubs pushfq stos add sarl rex.WXB xchg movsb lret lods rex.RXB (bad) adc xor xchg add callq fs xorb fwait rex.WB cli rex or (bad) cmp pushfq jg mov and pop rorl movslq roll iret mov test int subb jne sub rex.WR out test (bad) callq ss ds or shrl adcb mov or test stc repnz test shl stos mov and repnz andl fst movabs push push nop or or (bad) sub lea (bad) xchg lret (bad) movabs xchg je stos cmp xor (bad) pop xor js pushfq mov jnp (bad) pop adc movabs vpmuludq movsb sbb (bad) sarl add xchg lret cltd (bad) es sti (bad) pop pop fwait (bad) inc xchg (bad) push mov mov cmpsb or test mov insb cs rol jno iret es rex.WR rcr and popfq mov movabs loope lock shrq mov push pushfq add xchg (bad) mov (bad) (bad) mov push (bad) movabs (bad) add mov sbb cwtl (bad) rorl (bad) jno mov callq (bad) stos rcrl sub loope pop rex.R not (bad) movsl adcl push pushfq int3 clc scas je mov fidiv (bad) rol cmpsb add addr32 rex.RXB (bad) out or cmp cmp rcll addr32 and xor fcmovbe mov (bad) xchg add add leaveq (bad) pushfq adc sub data16 popfq lock icebp or (bad) (bad) hlt (bad) (bad) int lret sarl cmp cs movabs jl jae rorl or (bad) xor and add rcr adc (bad) jg nop rcrl (bad) mov in addl stc je or add lock rcl (bad) int3 xlat cmpsl (bad) idivb xchg mov pop stc or jns cld imul (bad) movabs and pop rex.WRB lea and sarl movabs roll test xchg sarl stos in pushfq rcll (bad) insl pushq xchg sarl cmp (bad) xchg in rex.W add jbe rcll rclb or cltd fcmovb push rex.WXB (bad) sub bswap in add jmp rcll repnz xor (bad) sub int3 rex.WR rex.X fsubs lcall xor xchg ja test jp shr push xchg or mov addb jo movsl fcmovnb jp (bad) lods lret loope and rcll imull mov (bad) rex.RB rex.WB leaveq retq jo mov (bad) xchg xchg cs roll sbb push repnz pop mov or rex.B (bad) ss (bad) (bad) ja enterq add movsb callq movabs jmpq jp fwait adc es (bad) rex.RXB cli clc mov lea xor (bad) rex.WXB std cltd rex.WRXB (bad) outsl jno fwait clc cltd mov jmp xchg push xor add lret imul adc (bad) push mov shl sub shl rex.W movabs jns enterq iret incb adc xchg jnp rex test adcb jne xchg jg jp (bad) (bad) and fisubrl (bad) or clc imul cmc xor jns data16 enterq movabs and cmc mov jae iret sbb rclb rex.B movabs cmc outsl test iret loopne (bad) ja xchg push add fs in sti or or lock (bad) loop rorl std iret xchg sbb repnz (bad) jnp add test mov repz mov js movabs add retq sbb cmp loop (bad) push jmpq cwtl push rex.WRB lret mov movsl (bad) mov je es (bad) adc rex.B pop ds mov sub sub push shrl jrcxz xor test rex.B pop mov mov movabs adc enterq and mov clc add rcrl jno (bad) and ror loop fwait rolb and cwtl pop adc push (bad) mulb xor (bad) xor mov adc stos xchg negl fdivrp (bad) rex.WXB or icebp (bad) and cmp mov fidivrl lret cmp lods adc (bad) (bad) and rex.R in std addl (bad) (bad) loope fnstcw iret mov notl rex.WR fldl push adc rorl imul cmp (bad) cs (bad) xor rex.WRB cli scas fstl xlat subl push jp mov (bad) (bad) rex.WR (bad) gs xor sbb xlat mov out mov roll xchg add cmp jp rex.RXB clc shll retq (bad) (bad) adc movabs (bad) (bad) cltd test and retq fs adc (bad) cmp pushfq pop jp scas out fisttp cmovb scas rex.RXB pop (bad) inc (bad) in (bad) mov rex.WX rcrl pop outsl jbe je jge (bad) fbld (bad) sarl fisubl (bad) xor mov or mov (bad) roll mov sbb lret and andl push movabs jns cmpsl (bad) iret or lret (bad) movslq ja adc pop xor std mov xor mov rex.WRXB push mov callq (bad) movabs pop test jle adc test lret pushq jb sbb mov adc imul and or mov jg fsts fs sbb jae movabs movabs (bad) sub mov or push sub xchg xor pop add retq (bad) pushq rex.WRXB mov retq pop mov cltd int3 sbb pushfq (bad) rex.RX mov rolb (bad) cmp pushfq lret add rcll mov lcall sub sahf jnp cs sti sarl lods rex.WRXB repz adc xor (bad) rex.W ljmp movslq vpsubusb rex.WRB add sub retq pop adc sarb fwait insl xchg shrl jnp and mov (bad) cmp movabs sub cmpl loope popfq and xchg imul rcrl int sub lods (bad) repnz fmuls xorl xchg rex.RXB fmull or repnz test (bad) jnp jmp (bad) mov cmpsb mov sahf insb mov pushfq mov gs (bad) adc rex.WRB jo jp mov rex.WRB mov rex.B xchg cli movabs rex.RX movabs int3 (bad) mov es rex.WB iret popfq cld sub hlt rex test mov push and repz mov add rcrl enterq out (bad) hlt in rex.W rex.XB jmpq (bad) xor cmp gs jne imul rol pushfq repnz mov rcr mov addr32 enterq (bad) or jns xor mov shrl std jge mov mov or imul lahf movabs sarl lret (bad) ja fmull rex.WRX (bad) movsl shl mov sbb mov rex.WXB cmp flds shll shll and fnstcw fucom jnp add xlat pushq rorl jp repnz shr xchg decl rol mov rex.WRX cmp mov scas jns fildl iret repz addr32 or nop loope (bad) jrcxz or and pushq mov xchg (bad) lret imul imul cmpsb (bad) (bad) (bad) outsl rex.WB popfq sbb pop mov jno fnstsw test pop loope adc (bad) flds scas cld xor (bad) xor repz movslq fldl2t (bad) stos adc out (bad) pushfq jrcxz rex.B xchg and (bad) cltd stc stos sbb shrl (bad) cmp or roll js push mov shrl and rex.RB fwait rcll outsl xchg xchg addr32 rcr (bad) (bad) jb rex.WRXB mov (bad) adc adc mov (bad) cmc mov xchg movsl movabs (bad) lea rex.R out jg push xchg test (bad) stos std clc repnz adc pop push cmp sub rex.B sbb js mov sarl (bad) lods repnz sub pop enterq movabs mov jae mov test stc cmp cwtl lods or adc rex.WRB or callq repz hlt test rex.X in js adc pushfq or rorl test gs movabs sahf pop sarl and adc rex.R out sub movsl movabs (bad) (bad) out out addl je mov push (bad) clc (bad) xchg ja sahf shr (bad) xchg jbe (bad) (bad) and or (bad) in sub data16 (bad) (bad) mov out std rex.R (bad) rcrl js mov movabs cltd lret push ja shrw fsubrs jne mov pop rex.WRXB xchg (bad) movabs or xor fnstcw movsb sbb (bad) cmc cltd push cmp movabs cmp mov jns (bad) cmpsb mov mov sub retq (bad) jo ficomp roll js jp pop xor jne lret jg cli and pop fnstcw shl mov mov movabs mov (bad) jbe shll je hlt repnz push (bad) xchg sub cltd shll lods mov and rcll clc mov sub mov jmp adc jno pop stos push jle scas adc pop movsb (bad) pushq or rex.WRXB sub jmp add push je sub cmp sar rex.X flds callq jmp sub (bad) out (bad) (bad) jbe in adc or adc pushq fld out sbb sbb rorl cmc (bad) ja lret sub vaddpd roll add (bad) stos jnp push adc (bad) rex.X hlt cmp add rcll rex.B pop pop sbb fldenv xchg sub movabs mov stos out xor icebp pop popfq rex.RX (bad) rex.WB adc add shr mov push retq pop push jbe jne cmp movabs fwait mov retq push xor jge int3 rex.WR xor mov (bad) jb insb lods repz stc fcmovnb stos movabs out movsl push xchg jo (bad) push xor or or js jmpq hlt jno xchg mov ror std int3 (bad) lea mov or add adc xor cmp rol xchg add (bad) (bad) jno push xchg (bad) (bad) pop cmc (bad) (bad) fstp cmc mov hlt jns xor (bad) icebp xchg pop fsubrs out rex.WB mov fsubr movabs cltd int mov rex.RB movabs jp rcrl sub sub rol cmpb push movslq fstpt sub sbb rex.WRX fcmovnb (bad) vunpckhps xchg mov fistp cmc rex.WR rex.R and gs xchg mov loopne rex.RXB subl rex.WXB loopne incl or xor andl movslq fwait lahf and (bad) push enterq (bad) or fiadd (bad) hlt mov pop push add shll rex.WXB mov repnz sahf or xchg (bad) (bad) mov scas fisubl cmc add (bad) pop xorl mov xchg loope or jns fidiv lock xchg cs push sub push movabs and add or (bad) mov and rex or fidivl and ror (bad) rex.X rex.RXB xchg xor js movabs (bad) retq jo xchg xchg cwtl xchg add (bad) jns jp (bad) mov push ds (bad) mov push data16 pushfq push jrcxz std fdivrp rex.WX and in sbb rex (bad) mov (bad) sbb insl mov jrcxz lret mov jb pop push callq xor rex.B sahf test pop movslq (bad) ss mulb movabs std pop lods cwtl sub mov cmp (bad) sbb jnp retq rex.RX out or sahf shll (bad) cld rcll jbe mov sub jno push rex.WRX fwait push mov jge (bad) add out (bad) fisttpll movsl or sub sbb int cmp mov xchg or mov xchg outsl (bad) or movabs addl orb (bad) jmpq sub fisubl lret sub mov (bad) mov callq sbb or lock iret hlt and je (bad) (bad) adc test stc jrcxz mov fwait stos ss mov mov xchg (bad) xor rex.WR jg int enterq (bad) je pop callq test out test mov movabs fstl push in jg lods (bad) jo jno rex.RX (bad) movslq enterq sbb pushfq rorl rolb xchg (bad) jmpq sti mov jmp mov movslq (bad) sub (bad) fiaddl rex.XB rex.B sbb xchg cmp lret faddp stc push push pushq (bad) jb (bad) repz (bad) (bad) mov (bad) stc icebp and rcrl adc (bad) add and int ss rclb cwtl shrl (bad) mov or (bad) fwait ja add lret rex.XB fsts xchg frstor push in mov (bad) cmp adc (bad) push pushfq movabs test imul lock shrl lea movb int3 sti jno xlat addr32 subb mov decb sbb push adc shll (bad) repnz in movabs (bad) pop cltd sti rcll push add stc adc (bad) nop push xchg (bad) (bad) (bad) movabs (bad) rex.R insb (bad) add imul repz (bad) sarl xchg rex.XB or lods lea (bad) movsl movabs lret and push lea rcl mov or clc sub imul mov rex.WXB (bad) add xor cmpsb enterq scas stos (bad) rex.WXB callq fsubl test xchg stos or sub push in or addr32 pushq rex.WR test mov mov clc cli mov cltd imul lock (bad) and fdivrs (bad) (bad) cmc mov cltd ffree lock clc mov test cwtl add push (bad) fbld sub mov leaveq (bad) insb mov sub lea cmp mov xchg cli movabs ss push push (bad) rex.R jb push mov (bad) push adc scas outsl fcomip pop rex.WXB adc mov (bad) (bad) rex.WRXB mov push js enterq pushq jg roll xor rorl adc (bad) jno sub jae cmp rex.R push mov sahf (bad) or std pop xor sub sub icebp add or loopne and (bad) mov and jmpq std shll (bad) rex.RXB in mov movabs cli push mov fwait pushq rex.XB rex.RX fisttpl push sub (bad) (bad) fwait popfq (bad) je insb cmp (bad) (bad) jg rex.X xor sub jo ja addr32 (bad) iret callq int lods mov sbb (bad) jnp sub (bad) pop xchg js leaveq mov rex.W int adc or rcr xchg shr add stc stos and jmpq mov js jp (bad) fadd mov mov movabs rolb xchg xchg and stos lret sub (bad) mov hlt xchg rex.WRXB jo stc (bad) cld movslq rex.B xchg sub roll (bad) cwtl or insl out xor loop sbb mov and pop sbb xchg in pop movabs (bad) jno jrcxz (bad) insb sbb (bad) mov mov ja stc int push (bad) xor push rex.R (bad) in (bad) mov stos (bad) sarl xor loope (bad) (bad) leaveq (bad) mov pushfq xchg (bad) (bad) pop movabs sub add cmc xlat pop rex.WRX incb jo rex.R adc xchg adc ror mov mov xor enterq and callq jg cmp adcl mov loopne sbb xlat (bad) stc rex.R add cmp lods movabs movabs jo sub or jle cld push hlt add (bad) (bad) fs enterq movabs leaveq in fs mov (bad) rex.X pop rex.WRB mov add mov fdivl fmull repnz and sub sarb (bad) jmpq rex.WR test in sahf mov rex.R cltd repnz (bad) sub xor xor xchg or mov movabs jns mov ljmp xor jae loope neg outsl (bad) dec xor xchg movabs movabs cmp fnstcw (bad) std mov ja cli decl imul jmp or push rol (bad) rex.WXB test sbb frstor mov rex.WX (bad) sbb out movabs data16 xlat mov sub and imul xor xchg int3 adc pop cld sub icebp (bad) jno sub addr32 push (bad) rex.WXB stc mov jg jbe fldlg2 sub rex.WB rex.B fmuls iret (bad) fsubr fbld in mov mov rex lret andb (bad) mov rex.WR addr32 cmpsq rex.RX adc fstp out fucom fisubr test shl mov rex.WB movb mov (bad) movabs jle mov jg and adc sub movabs repz (bad) cmp fwait sbb divl mov movabs jl jrcxz adc cmpsb cmp xlat rex.WRXB mov icebp jg cmp mov jo mov sub test lret rcrl test cmp cltd sahf negb cmp cmp mov fildl repz jo adc fwait rex.WR sbb mov stc xor fisttp jae (bad) jae vshufps xor cld push repnz movabs add pop shrl xchg stc add movslq jo test (bad) add jne cli (bad) adc xchg jg ror repz jp cli cli (bad) jo xchg jge in sub hlt (bad) xor rex.B jrcxz rex.X mov icebp or data16 je hlt ror (bad) cmp vmaxsd pop in loop rex.WR cmp lods leaveq fs rcrl (bad) enterq jns rcrl sub rcr outsb (bad) rex.RX imul leaveq (bad) and stc test rcr (bad) push cmpsb retq (bad) sbb pushq orl adcb mov leaveq jmp xchg test int add lea test rex.R (bad) (bad) imul addr32 jmpq or retq or push movabs xor mov insl sub mov (bad) je pushfq and shrl fbld std out scas outsl sbb (bad) popfq lods (bad) int (bad) push xchg xchg pop and rex.B loopne ss sbb nop push adc outsb stos leaveq movabs add rex.WRXB stc mov and cmp pop (bad) (bad) (bad) (bad) je (bad) jg test (bad) jne cltd and (bad) or xchg cwtl mov add or movsb pushfq cli mov xchg (bad) int pop sbb (bad) pop add and jp pushq repz and movabs addb out jb (bad) (bad) cmp (bad) fldcw push pop sub push (bad) xor push pushfq loop sbb cmp rex.WRB push (bad) sub (bad) (bad) jno fwait sub (bad) loope xchg sbb pop adc repnz notb pop mov data16 repz fwait loopne rorl rex.W mov and push sti adc rex.WX outsb test and (bad) fsubrs pop nop stos cli xchg repnz mov push scas rorl jo (bad) icebp out (bad) loope cs jge or (bad) cmpsb retq or jg rclb rex.WRXB mov stos in or lea xor pop sarb add pop int pushq rcrl xor sarl faddl (bad) lret in push rcrq fstpt enterq lods rcrl (bad) push (bad) push (bad) stc out and xor iret cltd mov and rex.WXB fadds jrcxz movabs int sbb jae jb (bad) rex.B pop (bad) pop cmpsb lahf fwait (bad) mov jns,pn xchg sbb add repz mov xor and (bad) add mov rcr (bad) lods jl mov push or adc mov lahf adc insb repnz (bad) movabs int subb xchg (bad) and mull xchg repnz or mov subb sub movsb (bad) mov rex.WRB rex.WRXB mov (bad) (bad) or fbld xlat mov lret shr loopne push fs add rcrl mov out lahf ljmp testl mov repz push jnp pushq movabs pop shll sbb std nop in rolb adc retq sarl push in je rcrl sub jl,pt lcall pop mov adc outsb mov mov xchg add adc jg sub sbb sbb scas (bad) (bad) (bad) (bad) and jae add movabs jl cmp cwtl repnz add pop ja (bad) sbb jne outsl and movsb mov adcl pop mov icebp loope sub mov data16 sbb rex.WB fimull in (bad) stos js cmp or xchg repz mov add lret in or (bad) xor divl je pushq jle outsb push sbb or cmpsl callq mov sub (bad) incl (bad) (bad) (bad) fisttpll outsb mov cld loopne and sbb imul int3 fiaddl in and adc add jo imul rex pushq mov adc std mov stc (bad) sti clc icebp add or and (bad) repnz movabs rex.XB xor sub add enterq subb mov add jno mov sub sbb push adc cmpsb add or fwait movslq test mov add cmc rol cld rex outsl sbbl or xchg popfq stc js rex.WXB cmp jrcxz rex.RX repz imul fidivl loope pop stos lea fdivr lret mov movabs ror (bad) (bad) add fsts rex.WB push rex.B cmp rex.R adc (bad) js xchg mov (bad) fstl ficompl rex.WRX int3 mov mov rex.RB xor adc outsb (bad) (bad) repz movabs addr32 outsl idivl and loope jmp rcrb repnz and (bad) lock (bad) jno data16 sahf pop xlat (bad) fcomp add cwtl sbb addr32 mov retq repz push mov (bad) pop and mov rex.WB gs repnz mov sbb add add cmpsb (bad) (bad) mov jno jo test (bad) rex.WB stos sbb mov pop jp pop xor rex.RXB out rex.XB mov mov xchg retq lods shrb cmp xlat rex.W rex.WB xor imul pop sub int movsl and ja js movabs sub clc shr adc jo (bad) rclb (bad) xor lods shrl and pushq js movsl xchg shll (bad) adc es fwait xor mov sub nop push sbb (bad) rex.B imul mov js cld and movabs rex.X popfq in (bad) (bad) or gs loop mov incl clc add (bad) ja fldl2t cmpsb mov xchg scas pop je es cmp adcb rex.W sbb mov (bad) shll mov sub cmp xchg xor cli adc pushq movabs mov pop cmp out jo in shrl scas stc and rcrl xor rclb or (bad) (bad) loope rex.WXB pushfq mov sub (bad) (bad) (bad) cmp (bad) jge (bad) jne rex.X movabs adc rcrl sbb and adc mov (bad) sub add rex.RX outsl cld int3 add pushq jg sahf push push rex.WRB mov jrcxz (bad) and jge (bad) jo (bad) imul lods test sarl ror (bad) (bad) fbld xchg movsb shll (bad) in fcmovne sar adc adc or (bad) movabs es add fisttp cmpsl and popfq pop movsl rex.RX add xor shrl sub shll sbb enterq (bad) movsb adc (bad) sub rolb rex.B shrl rex.RX (bad) mov rex.WRX adc test (bad) fiaddl mov icebp pushfq cmp mov rex.X adc (bad) xor rclb retq mov ja or mov mov (bad) cmc rex.WXB rex pop xchg stos pushq repz stc pushfq (bad) mov lock adc (bad) rex.WRX (bad) rex.R (bad) out (bad) xor rex.B mov (bad) pop jo leaveq fcmovbe hlt leaveq ds rex.WRX rex.WRB rex.RXB sub (bad) insl callq subl rex.WRX add cld and jbe add and data16 rex.W fbld (bad) lret cmpsl fldenv rorl rex.B rex.R enterq add mov mov rex.WR rex.WRB mov test (bad) push (bad) notb rex.XB and pop test rex.B mov mov subb and bnd pop cmpsb mov mov xor jae movslq pushq (bad) in jae adc pushq mov addr32 rex.RX stc cld test cmp sbb rcrl fidivrl or (bad) lahf andl jnp (bad) pop (bad) jo xchg jne sub sti pop sbb icebp xchg (bad) notb int cwtl stos sbb jmpq fdivr rex.WR push (bad) add rex.R or fwait mov repz mov fucomip jo addl flds dec add rol repnz retq jl test and xchg cmpsl xor mov adc sub roll mov sbb (bad) xchg jmp jp xor (bad) rex.XB xor push int gs movslq imul fcomps cmp mov add js xchg mov out sub mov test (bad) and mov xor cmp movb mov xor (bad) loopne cli pop loop add (bad) movslq xor xor popfq sub xchg mulb (bad) (bad) (bad) mov (bad) rex.WRB rex.XB lret repnz mov orl (bad) icebp cmp rcll or jmp sbb push push lea push sub add (bad) add sbb gs enterq sbb enterq or jne rex.RXB lods lret pushq cmp (bad) (bad) ja test out mov icebp pop psrlq addr32 ljmp (bad) stos shrb jns lock (bad) rex.B stos lods retq rcll cmp ss push push pop iret sub push cmp (bad) mov pop lahf scas rex.B repnz add sar out pop cmp push (bad) testb (bad) leaveq or xchg add outsl pop adc sub mov retq cs (bad) mov (bad) sub (bad) (bad) sarl xchg in jg (bad) xchg test callq movsb mov loop insb or addr32 ss cld (bad) (bad) outsl fisttp (bad) in (bad) shll add shl rolb and leaveq fs mov insl (bad) (bad) mov xor insl (bad) pop push adc adc (bad) adc cld mov (bad) cmovne add scas adc (bad) mov add rorl fistpll rol (bad) (bad) add mov lods loope lret xor (bad) jbe repnz (bad) shlb jg in (bad) fadds pop xchg add jns roll scas (bad) je rex.X sub scas push sahf lea push sub (bad) cli and enterq lahf movabs shrl loop xlat cld movabs rcrl pop enterq sub mov cltd jne (bad) jns js fstps rex.WB rex.R (bad) (bad) fnstcw sbb (bad) fcompl setns icebp shl test jge out xor cmpsl add jne movabs test rex.R out in mov (bad) jmpq xchg pop (bad) adc adc mov pop (bad) jnp (bad) ss ffreep rex.B or rex.WRX movabs xor lods adc (bad) mov in fidivrl icebp cmc retq xor retq repz fmul bnd and jno fdivp rex.RB movabs mov or add xchg or pop rex.X rex.RX shr loopne cli pushfq scas fsubs jp or pushfq sarb add (bad) ss jnp adc (bad) rex.WXB data16 iret ja sbb add sbb pushfq (bad) sub (bad) iret enterq cmp repnz negl (bad) fnsave (bad) cmp rex.B and (bad) sbb and jmp ror lret pushfq jp notl (bad) ja push insb enterq add mov lret loope mul in outsb repz ffreep xlat jb (bad) add mov xor insb jmpq mov cmp adc (bad) mov jrcxz (bad) and xor movabs rex.WRX (bad) psadbw cmp jb xchg adc (bad) test add mov fmull xchg rex.WB cs jl rex.WR and xorl jbe cli mov (bad) mov and push mov rex.WB mov jae rex.WXB xchg movabs outsl mov pushfq mov sub (bad) add xchg rcr fwait push or cwtl sub shll (bad) cli sub scas mov jae (bad) sbb shll mov loope (bad) lret and cmpsl add or loop push mov (bad) adc sahf sub jbe add out imul jne cmp (bad) (bad) ror rcl add (bad) add rex.RXB int3 (bad) sbb shll repz sar jns mov pop test mov ds (bad) sub repnz push add idivl (bad) pop fwait (bad) xor out push repnz jg add sbbl imul jmpq scas push lret clc mov (bad) mov add mov jae rorl stos mov rex.WRB mov retq lock (bad) int (bad) mov pop pop in jmpq push enterq repz (bad) or jo test lods rex.WRX clc repnz mov xchg xchg retq lahf xchg (bad) insb and movsl mov sbb xor idivb fimul mov nop clc (bad) rex (bad) adc rex.R (bad) fwait test fdiv sub clc fstps sbb add mov cs pop mov pop cmpsb gs sbb retq rex.WR rex rex.B rex.B rex.RXB add jnp or test gs add repnz adc (bad) xor push mov rex.WRX testl outsb (bad) iret and pop jle xor (bad) sbb loope jo rcl jbe movslq cmp rex.RB rex.RX andl or pushq add xchg jp (bad) subl rex repz (bad) addr32 (bad) xchg jg xchg imul out mov sbb rex.R and (bad) icebp (bad) (bad) int3 cltd imull shrl adc xchg (bad) test faddl sahf es jle push fwait lahf (bad) xor (bad) (bad) fs sub repnz and loope mov popfq sbb (bad) sbb ljmp or nop sbb data16 rcrl (bad) cld xor mov insl or icebp jg jl rex.WX cltd sub rcll pushq lahf callq or movsb fmulp cmpsb rex.RX in fwait rcrl hlt add jo cmpsb xchg mov rex.B jae es out mov push mov cmpb repz add push outsl notl addr32 sub pushfq popfq adc (bad) pop sarl (bad) (bad) pop and add testl (bad) (bad) (bad) and ja (bad) rol (bad) std (bad) sub mov scas int3 sub mov loope lock imul es mov sbb lret int mov rcrl add (bad) (bad) rex.B push movabs xchg test adc cmp mov and xor iret push cmp xlat adc out cmc movabs mov mov xor rex.W callq mov pushq mov ja (bad) in enterq cwtl mov xchg adc repnz mov retq lret movabs scas fwait callq pushq sub fsubr lahf (bad) rex.WR (bad) (bad) jae cmpsl sahf stos cwtl (bad) sbb fildll (bad) callq adc sub rolw mov in cltd pop adc test cmp test (bad) (bad) addr32 outsb rep out and (bad) mov rcll pushq test insl int3 (bad) push sarl push sub mov cmpsb out (bad) push rcll adc push cmp rex.X (bad) std mov popfq mov xabort sub test cwtl popfq add xchg rcr fist movabs sbb shll adc mov sti lret jbe pushq (bad) sub adc and faddp scas mov repz cmp roll (bad) xor adc sbb sarl xchg adc jle insb mov (bad) mov shll fisttp repz sbb mov pushq and (bad) pop ds cltd (bad) sub sbb (bad) push pop lock fldcw push outsb int3 or cmp stos in (bad) push add lret sbb rex.WXB mov mov xchg in jns (bad) fwait add (bad) jno rex.RB retq or movabs rex.RX rex.B push iret or (bad) (bad) and iret sub sti (bad) (bad) pushq mov mov sub push pop std pop (bad) shll in rex.XB mov fucomp out (bad) (bad) sub rex.R rex.WX rex.B mov repz out outsl add sbb mov or (bad) fidivl xchg in xchg (bad) faddp (bad) add cmp iret pushq popfq sbb mov add rex.RXB (bad) cmc sbb and hlt fcom rex.R repz add add (bad) repnz enterq pop orl (bad) (bad) (bad) (bad) test rex.RXB sub loopne int3 rex.WRB cmpsl iret (bad) ss divl js (bad) (bad) in (bad) push ficom cmp jae stos pop pushq pop pop rex.WRX mov rcll sti xchg pop sub movsl xlat int3 retq sarl lea (bad) add xor fild rorb nop shr rex.X ss retq loopne jno movabs add push and cs cmpsl stc in xor jle rex.RX cmp repnz adc cmpsb cmp (bad) rex.XB adc int add xchg push cmp adc xchg in add (bad) sub mov gs ja stos fstp cli sub add andl xchg retq icebp (bad) xor rex.WRXB sub outsl cli data16 xchg lret lods cmpsl sarl sbb fstl push (bad) sarl jo scas in mov je and (bad) std sti scas add ja subl adc adc adc (bad) rex.B lahf pop push (bad) mov mov xor (bad) scas and mov inc scas mov cmp pop push rcrl movsb pop fisubr rex.WR shrl rex.WB retq push sub rex.W push xor outsb or fnstenv insl lret sbb (bad) iret and int pop pop rex.WXB xchg jne int3 pop (bad) jge rex.R rcll rorb add imul movabs sub mov (bad) jbe fcmovnb add mov fcoms add test mov (bad) adc xchg mov add cmpsb lret mov je add xchg (bad) (bad) rex.WXB pop stc mov or pop jae int rorl (bad) in xchg push (bad) roll and fldt leaveq mov rex.WB subb and int3 icebp pop outsl jle notb (bad) (bad) xor stos fisttp pushq (bad) js (bad) pop mov or rex.WRB loope fcmovnbe cltd rcll js shr orb imul (bad) pandn add xor jmp fxch mov mov jae push cmp xchg adc and stos rex.R sub sub or movabs mov add stc movabs push push xchg icebp jp push mov ss lret fldl add lods movsb cmp mov sarl fldenv fcmovnb repnz mov leaveq rex.B jrcxz (bad) lret rex.WB mov jns (bad) and (bad) int ja rex.X nop push push int3 enterq rex.RX (bad) xor insl rorl mov cmp (bad) in or adc int3 leaveq xchg jge out movabs retq testl shrl jg pushfq nop mov lods inc lahf push cli jl sbb sti push (bad) xor jle sub (bad) pop (bad) testb clc mov sbb mov rex.R and je cld test gs stc cmp xor sbb repz or sbb sub adc (bad) enterq (bad) mov rex.WX loopne rex.WXB mov rex.XB jge ss rex.RX add jne jno (bad) (bad) cmp cli rex.RX xchg lret xchg rex loop mov int3 pop jb test icebp cld xor cmpb (bad) (bad) mov (bad) (bad) (bad) fmull (bad) mov rex.X xchg (bad) mov or rex.WR rex.WB jp test adc (bad) jle jg fdivrl mov pop cmp movabs sbb retq movslq push in cmp addl mov (bad) not sub leaveq or push scas (bad) (bad) mov mov repnz (bad) mov or sub add cs scas loope add lret mov data16 mov hlt and sub mov in fidivr and rex.R xchg xchg cmp xlat insb mov test rex.RXB (bad) cli add pushq lock int fstps ja rex.B sbb mov (bad) cmc fldl2e or leaveq lret xor movslq (bad) xor in (bad) (bad) xchg jne sbb adc loop mov lret rex.RB fadd fwait cmpsl jne imul and popfq xor repnz add xor sub ror adc mov (bad) mov jno nop ja (bad) mov pop (bad) repz mov gs adc loop iret (bad) test push (bad) or rex.B test (bad) xor retq cmp sub shll xor sarl cmp cli jle lahf (bad) repnz jnp shrb mov out and or (bad) in mov (bad) sub add add shll sbb rcll sahf std adc (bad) sarl movsl jne (bad) int (bad) (bad) icebp jnp xchg lock and lods shlb push leaveq pop stc outsl lea cli (bad) shrl xchg movabs hlt pop rex.RXB fwait shll (bad) push lahf (bad) clc rcll mov jl rex.WRXB rex.X (bad) and scas (bad) rex.B rex.RB (bad) movabs rex.WB rex.WB repnz rex.WRB and lahf jp add (bad) jbe xor (bad) xor (bad) shrl (bad) adc outsl push pop (bad) es stos pop js and jg shrl punpckldq popfq mov pushfq push jmpq (bad) in mov sub (bad) jle imul rex.RX (bad) rcll mov cli test mov rex.WB add pop rcrl movsl add repnz cs mov rex.R (bad) repz or faddl rorb sub xchg in insb push jle (bad) gs pushq movsb mov cltd scas movabs cmpsl std push enterq rex repz adc jg or sbb fsts fidivrl lea xor (bad) rex.XB xor lret leaveq mov xor (bad) add retq jo rex.B xor rex.WX jrcxz mov hlt rorl rcrl je xchg repnz fdivrl in xlat shrl xor in ficom shll hlt outsb cmpsl fwait (bad) lock insl imul jle adc xor movabs and mov or insl sar pop pop rex.R retq lock mov or rcrl loopne lret push scas xchg mov shrl out pop or push push mov retq callq xchg shr (bad) xor js jb fistp rex.B shl es rex.RX or pop xchg mov fmull shrl (bad) (bad) cmp imul sub fstpl sub (bad) loop mov mov lret scas movslq cmpsl xor (bad) repnz callq pop rex.XB (bad) or mov mov sub cmp enterq movabs fcoml (bad) repz lahf sahf push movabs pop rex.W rex.WR (bad) (bad) outsb imul in sub sbb (bad) je and mov scas mov shll loope fsubrp (bad) jmpq adc jg add mov mov (bad) and int3 (bad) jl pop mov rcll cmpsl or mov in xchg (bad) adc mov add jnp rex.WRX or movsl mov push imul push and add cmp out shll sub pop xchg stc outsb sbb int mov or adc iret imul scas lahf ja xor rex.B pop cmpsl rorl movsl jl (bad) mov add jnp add shrq test sbb pop xor sub cltd sub cmc (bad) jb (bad) lahf jmpq add nop (bad) (bad) lock jne je rex.XB rex.WRXB rex.WRX (bad) imull mov rol adc and xor lock xor sub xchg gs mov imul rex.RXB test rex.RXB movsb add mov mov imul jb nop retq sub pop (bad) mov sarl add jl mov int3 retq push callq mov mov sub cs lret addr32 xchg subl sbb push xchg sti xor (bad) and jrcxz xor and and or lahf nop (bad) xor vrcpps mov (bad) rolb xchg es lock sub adc (bad) lahf rcrl cmp push rex.WR movabs icebp and sti pop sbb data16 cli mov int loope sub setp (bad) mov add pushq (bad) outsb jb rex.B adc xchg adc mov push (bad) repz add mov sahf loopne lock es movabs cld (bad) xchg (bad) mov imul test pop (bad) cs rex.WXB addr32 jle fsubrl (bad) (bad) and rex.WX fs sub xchg (bad) out stos shr add shll (bad) xchg jnp rorl xorl roll imul (bad) mov pushq and lods (bad) rex.WXB mov or repz sahf (bad) popfq jnp enterq sub (bad) rcrl rex.WRX xchg rcll rex.WRB xchg jmpq out rcll fild data16 mov xlat pushfq push xchg mov mov xchg or mov xor (bad) (bad) (bad) push and xchg (bad) icebp xchg or xorb mov rex.B fdivrl mov lahf movslq (bad) cwtl push in stc rolb (bad) movabs mov out out fadd mov imul movabs pop xchg rcl test add mov or (bad) lret gs xchg cmp or (bad) rcrl outsl cli idivl (bad) add jnp push iret movabs and mov sbb xchg fcmovnb and ja jge push jns jnp xchg (bad) add cmp rex.WX ficomp jo shll (bad) mov mov movabs or cmp (bad) (bad) repz push mov jge xchg loopne movslq (bad) xchg cld movsl roll cmp (bad) movabs rex.B rex.R and subl adc (bad) lea add jo lahf mov fildll enterq mov and jle sub jge mov fs jrcxz sahf sbb cmp (bad) jge rex.XB (bad) int3 (bad) jne mov adc retq callq (bad) push (bad) repnz jmpq pushq (bad) mov rol (bad) mov pop movabs mov test rex.RX (bad) addb sub jmpq (bad) callq and sbb (bad) or sbb movabs jo loop movabs xor sub scas push xchg xchg fnstenv out fiadd mov jns rex.WXB data16 lods cmp mov cltd mov mov insb insb xor mov jge mov pop xor push jne insl insl data16 js (bad) mov fcmovb adc lret iret mov sbb or (bad) imulb rex.WRXB sub jnp mov (bad) fcomp or rcrl push repnz rex.WR mov xchg retq xchg movabs mov (bad) xchg sub jrcxz jle rex.WB mov icebp xchg (bad) adc xchg xchg (bad) scas push jle loop add rolb orb cld lods push rex.WB test or xchg cmpsb sbbl fist fyl2x (bad) js cmc jns (bad) ss mov xor mov es in repnz adc test (bad) in movabs (bad) in mov lock (bad) cwtl cmp jo fs outsl pushq rex.W (bad) jp cmc or (bad) mov (bad) pop sahf imul pop repz cmpsb rcrb int3 (bad) add lahf push scas push nop outsb cmp movsl mov movabs stc imul shll test paddd mov rex.RB mov cwtl add xor roll rex.RX mov sbb xchg pop (bad) jbe fldenv lods mov push mov push out (bad) lods add cmp (bad) hlt punpckldq sub jg movslq (bad) pop add sub in mov mov jrcxz (bad) pop out (bad) jmpq mov roll sar cmpsl repz and mov xor push add (bad) (bad) jp movsb (bad) add pop (bad) jo or push pushq push rex.WB leaveq rex.RB rex.R jnp (bad) xchg lret insl cmp orl stc jmpq mov xor sub rex.WB ds rex (bad) data16 push mov in insl loopne shrl pushq test js mov xor movsb jmp roll (bad) xor mov pop rex.WRX sarq push fiaddl je sbb shrl pop xchg jl jbe sar cmp jno mov out repnz mov rorl lea rorl movabs int imul cs movabs lret sbb fwait test sbb (bad) sbb enterq or mov addw push rex.WRXB (bad) js mov (bad) (bad) jno xor add movsl cmp in in push jp cltd (bad) cmp js jp fcomi push (bad) outsb cld rex.WR mov (bad) cmp mov rorb add jmpq imul cmp xor (bad) sbb sub lods push and (bad) pop jo mov stos or fstp in ja (bad) mov popq xor int3 jmp movabs sub fs mov std sarl rex.WXB xchg (bad) fstpt rex.WRXB xor (bad) rex.WRX (bad) outsb mov xchg xor sbb rex.RX repnz test mov loopne add or or adc xchg cmp rex.WR adc jmp (bad) xchg pop test jl mov sbb hlt lods cmpsb sub imul loopne xor (bad) int3 shr push jb sti (bad) adc loop pop rex.RB imul cli (bad) cmp mov repnz and mov jb xchg sbb and jp pushq sbb (bad) mov sbb test shrl xchg (bad) nop xchg mov out rex.RXB cmp or rex mov (bad) icebp jmpq (bad) lods or and int3 (bad) push (bad) mov mov out (bad) rex.W xlat mov jns xor pop xchg loop (bad) xor (bad) jo rex.WRX rex (bad) fisttpl jns and (bad) (bad) push iret in rex.W rex.RXB rol sbb lods lret cmc mov roll (bad) jbe mov mov lahf lret pop outsl (bad) repnz cli (bad) imul test out lahf jge rcrl stos roll fs cmpsl or xor test (bad) (bad) sahf mov and add mov sbb add pop fsts (bad) js rorb fwait (bad) xor jne lret loop rex.WXB rex.B bnd (bad) lret jnp icebp enterq es pushfq push pop push test cmp stos rcrl (bad) icebp adc jge cltd rex.B mov mov jge scas int3 jns (bad) idivb sbbl shrl (bad) (bad) rex.XB cmp adc push add jrcxz xchg cmpsl mov (bad) icebp movabs mov rex.WR rex.B sub mov pop iret outsl sti jmpq repnz adc jns adc (bad) mov add pop in mov sti and (bad) clc mov xor cmp rex.B mov (bad) test mov xchg cmc stos rex.WRB test push lahf rex.RB pandn push loop out jae xchg xchg jne shrl pushq insb rcr add test roll xchg loope sbb enterq xchg xor mov fildl sub lods add (bad) jle rcll mov shll rex.WRX loopne nop cmp vpsubw xor (bad) hlt (bad) jb adc push add mov and jo jbe (bad) (bad) xchg shll ss add cmp (bad) add btc popfq shll sarl mov in fcmovbe roll cli pop xor and movb hlt imul adc rex.WRB es lods (bad) repz test or mov add test loop in (bad) cmc mov mov or cmp sbb and mov test xlat (bad) pop or leaveq mov (bad) xchg testl rex.WRXB mov adc sarl popfq mov mov mov add loopne (bad) (bad) ss (bad) mov adc fwait mov fisubl jg cs jp mov loope nop roll (bad) in (bad) lret mov sarl sub (bad) fcom sub and sbb rex.B rex.WB es jmpq cmp rex.WB jae cmp xlat fsubrp and test pop (bad) rex.RB mov retq shr fld or retq mov fsub mov rex.WR push cmp adcl xchg movsl xor jge in repnz imul scas retq rex.WR dec (bad) sbb rex.WRXB sbb jno int rcll xchg sti jp and or rex.RX mov sub icebp mov sbb movsb gs pop push mov jo test stc mov mov xor xchg faddl (bad) push (bad) sbb sbb mov xlat cmp callq out hlt rex.RXB rex.W rex.WRB retq cmpb imul enterq sub add xchg mov repnz mov in xor movb sbb lock (bad) bnd stc sbb mov rex.B loopne fiadd fxch mov movabs ficom sbb ss adc bnd (bad) fwait add rolb imul mov mov mov scas jno push lret (bad) adc sub callq shll mov sbb out rex.WR divl popfq callq (bad) add rex.B leaveq addb push jrcxz mov scas lahf xchg add clc (bad) movslq stc xchg loopne sub xchg adc and cmp (bad) adc adc rex.WX ds sub pop (bad) pop std (bad) jmpq rcrl fadds lret cltd rcrb xchg mov mov and rex.WX cwtl test (bad) or (bad) mov outsl pushq add lods mov repz jmpq out (bad) xchg movabs mov push test sbb (bad) mov pushfq xchg movslq clc mov sarl (bad) sbb and shll cmp xchg rol rcll mov (bad) (bad) xchg jl jb xchg rorl (bad) jge (bad) mov and rcrl imul int (bad) (bad) jmp mov mov (bad) mov insl xor je xchg jrcxz (bad) rex.RX (bad) jl mov mov shrl jmp adc and rex.RXB stc repnz adc repnz lret out (bad) or jae jmp iret (bad) nop xor (bad) in std scas test add rcrb int3 movslq pop rex.B (bad) (bad) jo mov lahf movabs mov addr32 adc adc rex.WRXB sarl rex.XB (bad) leaveq callq (bad) and mov cmc adc orl sub movslq sarl fld xchg (bad) and lret loope xorl stc adc iret in mov rcrl rex.WB bnd mov and cli adc roll movsb pop test mov rex.W rex.WRXB sub (bad) pop sbb xchg mov stc xchg rex.X lods rex.WRX rcl pushq (bad) jmp loopne movslq sub bsr mov cld (bad) (bad) rex.RXB test in pop mov pop cwtl repnz jmpq sub adc repnz in rex and rex inc xchg push cld lock ss rex.X movabs outsl mov (bad) sarl jae rcll mov jrcxz movabs (bad) add mov add xor sbb sub pushq jl out xchg rex.WX xchg xor sbb test adc rorl or (bad) jg and cli mov lods fbstp (bad) in xchg out pop (bad) cs (bad) push (bad) enterq scas (bad) fistpl jle test pushq mov hlt (bad) xor jno xchg mov mov adc sarl cmp ds (bad) rex.RB mov (bad) cmp rex.WB rorl (bad) movsb shll xchg cli jb lock xchg sti movabs movslq callq out jmpq add xchg lret or cli icebp mov sarl mov sbb jg in movabs and mov add pop sbb (bad) (bad) (bad) loop mov callq repnz xlat loope or ljmp (bad) sbb xor xchg loopne cmpsb sbb (bad) adc (bad) adc rcr (bad) rex.B and mov jae add stos in adc (bad) (bad) rex.WRB mov movabs sub imul std fcomps sahf xor rex.RX imul sub xor (bad) cmp fcmovu pop (bad) mov xchg rex mov xlat nop or jle popfq js adc sub rex.WRXB test (bad) loop in fiadd xor (bad) xor loop xor int3 rex.WR rex lret pop jmp rex.RXB icebp callq or push add ficom loope xor rex.R negb mov and (bad) (bad) notl stos cli sbb js fistl add je rex.WR rex test in add mov sbb cmpsl fs and cli outsl ror subb repz push out xchg jmp cmpsl and outsl bnd icebp (bad) fldl sbb enterq (bad) repz (bad) mov mov movb lods int3 rex.B testl jb loope (bad) mov (bad) in (bad) jne (bad) (bad) cli xlat (bad) rex.WX rex.R xchg adc jno mov or callq test or callq fidiv and mov out sbb mov or xchg rex.RB addr32 mov (bad) rex.WRB cmp (bad) (bad) in sub mov stos (bad) inc sub imul rex.WRB movslq sbb or (bad) (bad) (bad) (bad) outsb mov retq push sub (bad) xor movabs movabs nop xchg sarl lret addr32 cmc xlat roll sbb lret push icebp sub xchg sbb shll push and sub cmpsb lods add jae loop fidivl roll je jo (bad) leaveq repnz sub mov rex.WX push adc pop movsb gs scas add sar setl jns rex.RB (bad) callq add push movabs imul fstpt in sbb (bad) (bad) flds ror mov (bad) mov int3 (bad) (bad) add cmp push movabs add add mov shl mov adc push loope ds add sub repnz orl sub push paddw (bad) and stos shr jl push or rex.B rex.RXB cs mov mov (bad) rex.RX xor push (bad) xor pop rol jg sub test rex.RX xor test xchg mov rex.RB mov je movslq out mov roll (bad) push pop rex.RX shrl (bad) and in imul rex.B iret or scas sarq pushq (bad) clc loop sub stos cli mov (bad) rorl iret in out ja sarl leaveq (bad) push mov add rex.R rex.WRX (bad) cmp jns lret rorb movslq out (bad) (bad) sar pop testl rex.X ss imul out mov xchg fildl xor sar es rcrl add pop loopne out int3 (bad) callq (bad) movabs sti mov adc sub stos lahf jae xor jnp repz and (bad) xor shl lret rex pop movsl cmp movabs ja (bad) or rcrl add (bad) push clc xchg sar stos adc imul jbe sarl callq std in pushq rex.R mov sahf jno and or stc rex.B sub and pop cwtl rex.WXB fiadd loopne cltd and movabs loope jge std (bad) (bad) (bad) (bad) scas movabs ja rex.X adc (bad) movsl push adc rex.WX (bad) or (bad) test jbe pop jl lock (bad) fldenv mov jmpq xor mov add loopne (bad) lock push rex.WRX repz push push movsb shl mov roll (bad) std shrl jns cmp test jmpq xchg shl jmp (bad) (bad) cmp out sahf mov (bad) mov (bad) adc popfq jrcxz rex.B rex.WX in adc (bad) push stos movabs lret (bad) hlt insl xor in mov xchg outsl icebp sar (bad) (bad) sub lret jnp movsb (bad) (bad) loopne rol (bad) jne lods xor rcrl push out jne push add fistpll rex (bad) lret (bad) movslq rex.WR sub jae (bad) push mov sbb xor jns scas push (bad) xchg hlt or pop rex.X out and (bad) adc orb icebp in pop jae lahf test and sbb mov (bad) jns ficomp sub mov mov mov outsl cmp stc rex.B or sbb (bad) (bad) loope test jge enterq rol std movslq adc shlb enterq mov add jns sub lock cwtl repnz mov jl (bad) xor adc pop nop movsl (bad) jno push ffreep add testl shlb (bad) xchg (bad) xchg fimull xor xchg cmp mov stos idivl (bad) retq sub mov adcl (bad) mov out retq xor lret clc and out mov test rex.WRB repnz mov ror rex.R add shll xor xor mov shl je mov (bad) sub rex.RXB retq mov sub add shrl (bad) cltd add rex.B rex.WXB pop outsl mov adc xchg callq and roll out add cmp loop xchg callq lods xchg adc mov shrl test retq icebp or out or in mov neg mov rcll rcr rex.W mov xchg (bad) adc xlat jg xor sbb pushq movsb fwait outsl (bad) mov push shr data16 leaveq or retq scas mov rex.XB test xchg (bad) fld mov pop and mov jbe xor mov adc jrcxz fsubrl rcll mov sub movabs cwtl (bad) mov jge in rex.RB adc cmp movabs out rex.WX mov rex.B int and addr32 jg adc jns scas sub outsb (bad) push xchg sbb xlat rex.WR add push (bad) (bad) (bad) jb add fstps fs mov (bad) pushq rcl lret (bad) ds movsb mov add sub xchg andl sarb (bad) cmp pop (bad) add push jno (bad) and cltd or xchg jrcxz imul cltd and (bad) cmp (bad) lea mov leaveq adcl add loop jg loopne loope fsubr int push sahf (bad) mov test (bad) leaveq hlt (bad) rcl push imul (bad) xchg xor (bad) sbb lahf and neg and rex.WR orl orl and add rex.RX cmp sbb pop xchg pushfq rcr (bad) push rex.WXB cmpsb xchg rex.RXB rex.WR rex.WRB movabs sub sar xchg pop stc jae push jmpq mov jle mov (bad) or adc int outsb rex.XB es std (bad) or movabs loopne int3 rex.RXB enterq sub enterq test rex.W data16 pop rcll sub mov (bad) (bad) adc out mov rex.W rex.WRXB sub data16 cltd fidivl mov lret lret mov push xor pop mov je (bad) mov (bad) (bad) mov xor (bad) mov clc fwait mov xlat rex.WB sbb (bad) adc (bad) rex.WB gs insl sbb (bad) sbb insb int mov (bad) mov mov push nop rex.B add retq jb stos mov add mov int cmp gs cwtl test push ss retq cmpsb in xor int3 fcoms and stc stc movsl icebp add sbb movabs (bad) (bad) js movabs js (bad) iret and mov leaveq cli outsb (bad) enterq (bad) popfq scas (bad) rex rex.WB cmp movabs add adc div fistl and rex.WRXB mov (bad) movsb mov shrl mov retq or movabs xor mov (bad) (bad) add push cmp xor (bad) jno or xchg add icebp retq test and (bad) out or ffreep stos fld rex.WRX push cmp (bad) mov cwtl pop addr32 sahf or cmpl outsb (bad) or cmp jnp xchg mov movsb rex.WB bnd negl test (bad) popq or jb fcompl cmp (bad) (bad) out sub (bad) (bad) je fimul pop rex.RX rex.RX rolb adc rex.WR rex.RXB hlt (bad) lret repz fsubl lea xchg jge outsl and jbe test add sbb rclb jge mov int3 cltd and shrl mov movabs out mov mov test int repnz xlat mov out sarl int3 pushq fbstp jb (bad) sub (bad) mov push xor hlt xchg retq mov incb bnd (bad) shll xlat fwait jg mov mov outsb (bad) or jnp (bad) rex.XB out mov in rex.B rex.RXB lret xlat xor or sbb shll xchg cmpsl mov xor lock pop sbbb and popfq mov roll (bad) xchg (bad) stc push cmp divl rorl xchg insl nop incl add (bad) rol lock pushq roll ja xchg sti mov rex.R cmpsl cmp jno (bad) mov fbstp jae nop rex.X rex.RB rorl add mov xor repnz cs jne pop fbld (bad) xlat rclq rex.RX mov out mov cltd nop rex.WX sti std (bad) jbe add rex.X pushfq sarl lret pushfq repnz fsubrp pop xor rclw movabs fnstcw add or (bad) (bad) adc mov jns (bad) rcrl mov sub repnz nop push loop shrb (bad) out rex.RB rex.WRXB (bad) mov cli rex.R fcomp int3 mov mov rex.B (bad) rex.WRX rcll out int3 sbb and mov fstpl lahf rorl (bad) jns or int3 and sahf (bad) (bad) fs adc fist int3 retq lea (bad) xorb rex.WRB jbe push mov xchg mov (bad) (bad) loop add rex.R adc or and (bad) test lock rex.WXB (bad) rex.R rex.R rex.RB (bad) orl xchg sub enterq mov mov shrl or push rex.R mov rclb adc pop shrl cld (bad) popfq sti push rcr loop mov xlat movabs roll cmp jl cs roll shll divb add cmp pop xor stos loop movabs pop push lret jnp ds mov stos out (bad) clc adc sbb rorl xor mov sub add outsl data16 adc or roll (bad) sbb sahf shl pop enterq stc xchg movabs jo lret data16 mov loope sbb ljmp hlt sub mov retq std pop test add mov shrl add imul (bad) movabs mov pop popq je sti fbstp hlt mov or rex.XB cmp adc imul rcrl fidivrl add fsubrs (bad) fisub cwtd out sub jno xlat in lea insl sarl sbbb (bad) (bad) xor cmovs (bad) cmp sub and cmc roll (bad) es movabs and insl std lret retq adc lock rcl adc rorl fcompl je add jno out rex test fsubl mov test add outsl sbb loope sarl (bad) pop mov nop loopne xorl (bad) and mov cli repnz and and stc icebp jrcxz lret icebp rex.WXB rex.W sub lahf xlat retq movabs addr32 adc retq or lods pop pop repnz mov cli mov sbb js xor out or (bad) or cmp (bad) (bad) (bad) xchg (bad) iret lret stos mov xor ss clc (bad) jae rex.WR jge rex.RX rex.XB xorl rex.W out adc ss xchg fucomp rclb mov rcrl sub xlat movabs negb or in outsl or rcll sti xchg shr imulw jg js (bad) lret rex.B fwait popfq sub shr and addr32 mov rex.WR repnz rcrl mov add cmp jp rex.W mov stc and add mov hlt (bad) lret xor xchg in vmovdqa xor out (bad) pop (bad) shr and pop sub sbb fild (bad) icebp repnz rex.WXB pop movabs lods add test and hlt mov jmpq sbb and cmp shll int3 out retq (bad) xchg insb cmp sbb cli mov sub rcll ds (bad) gs scas pop stc fisub clc xchg sbb loop rcll retq push sub (bad) and stc iret mov mov mov lea (bad) xchg insb test mov add mov popfq fsubrs adc xor rcll (bad) out cmp jmp data16 movsl sbb xor rex.B mov outsb ljmp xor sarl movabs sub pop shr sbb xor shll mov rex.RXB rorl ds rex.R add cwtl xchg iret xor sbb ds fldcw or (bad) xchg lock test cmp cmpsl fidiv rex.X cmp add stos xchg movabs sbb shl pop cmp out rex.R rex.WXB imul imul lret popfq rex.WX and sbb mov (bad) rex.WB rex.WB shll and push pushq pop and jae fcmovbe sub repnz sbb rolb roll je xor repnz rex.WB fidivrl in jo movabs xchg xchg shl cmc (bad) and pop cmp jrcxz (bad) mov repz sbb mov (bad) fdivrs jbe (bad) xor int (bad) sti cmp icebp clc (bad) jo (bad) (bad) add jae mov hlt pop pop pop xchg rex.WRB adc sub cmpsb adc (bad) add rex.WRB sbb xor mulb int3 (bad) fmuls in xor and test data16 rex.B push movabs (bad) hlt mov or fucomi adc fildl (bad) (bad) cwtl lret pop cltd (bad) es outsl (bad) mov sbb cmp rex.RXB iret int and repz sbb xorl xor add lret xor add jae rex.X retq repz and fbstp mov rex.R sbb test rex.WR std xor mov (bad) vpavgw pop insl add testl (bad) and xor out shr fsubl jo shrl mov (bad) fwait rorl sbb shl jle xor rex.WX test cli rolb callq es movhps mov rex.WRX test jg (bad) rex.X cwtl movsl fistp flds xor in xchg insl rex.RXB subb movsl xor cmc (bad) addr32 (bad) test pop es pushq (bad) movabs push rex.WX fiadd (bad) xor (bad) mov int jp pop shr vpminub sbb negb mov fnstenv (bad) rex.RB add jmp mov rex.WRX pop or mov or push pop divl jbe adc ljmp fadd xchg movsb (bad) and rex.X int3 in (bad) or (bad) add pop jmpq (bad) rcll (bad) roll sahf outsb (bad) cwtl pop imul jrcxz rolb repnz (bad) adc jbe rex.WRX loop pop scas add jmpq rcll (bad) xor (bad) xchg test scas lcall rex.RXB xchg scas cmp or rcrl push and (bad) lock movabs loopne cmp xlat cmp sbb or xchg mov xchg int3 or lock rorl (bad) movabs mov callq xor xchg mov add or cmp movsl icebp lock and repnz sarl lret enterq callq test int rex.WRB movabs jnp fldl (bad) popfq sbb mov movslq (bad) rex.XB jrcxz roll adc out (bad) shrl and xchg jrcxz mov xchg movabs xor cltd xchg xor mov rex.WXB enterq xchg rex (bad) (bad) mov sarl add outsl (bad) rex.WRXB pop and sub or mov retq ffree mov sbb mov mov test js jmpq jmp mov push push shll lods pop cmpsb sarb (bad) and adc pop shrl sub rorl (bad) cmp (bad) mov (bad) iret push xchg scas pushfq mov xor movsb mov rcrl (bad) jne insl sbb rex.WRXB pushfq int (bad) cltd (bad) pushfq pop jns xlat movabs popfq mov loop jne sbb cld rcll ss lods icebp pop lea pop test int3 iret pop (bad) add movabs xchg fsts rex.RXB mov je and fbld rcrb (bad) mov or jmp xchg and add test cmpb jp out movabs mov and xchg adc cld xchg xchg and retq adc pop push sub enterq fdivrl add add in pop sub shll rex.RXB cli mov lahf in in sti jle add add shl movabs test jge ss or sbb lock mov mov in andl loopne add sbb test (bad) rex.WRX xchg data16 mov sub movsb lea pop xchg adc stc out jne sahf sarl out jle lock imul pop (bad) mov iret pop xchg movabs xor cmp sbb movb pushq and in fstl adc rorb in and in lock xorl rex.B js rex.B in mov negb data16 rex.R push or cwtl jle adc shrq test roll jno loop loope or lock imul rcl hlt mov sbb iret rex.WXB andl shrl cmp (bad) (bad) lea adc (bad) fsubrl xchg and retq jle vpmaxub fldt mov rex.WRX (bad) adc jmp loope rex add movabs loop callq or rcll (bad) (bad) (bad) cmp pushfq faddl adc (bad) sbb (bad) in in imul movabs jp jb jae insb rex.RXB (bad) (bad) pushq icebp je xchg xor sbb pop (bad) cld jno,pn sahf or lret adc sub mov or testl push jp mov imul jrcxz (bad) pop je add movabs cld (bad) or and rex.WRX cmp sbb rex.WRX jae jp pop movabs jo (bad) sti hlt repz push and rex.RX ror push loopne push xchg movabs pushq or and pushq mov loopne rex.B cmpsl movabs rex.X fsubl fisubr (bad) insb xor sub rex.RX add (bad) cmp jnp mov in lret popfq leaveq pushq jns push shll cmp rex.X mov insb (bad) sbb or mov and cmpsb rcr rex.WX ja jne xchg out jp shlb movabs lret add add mov test movabs movabs adc ja add movabs outsb (bad) int3 ror rex.WX stc xor rex.RX xorl mov orb pushfq (bad) adc xor mov sbb cmpsl (bad) xor xlat in movabs jbe pushfq rex.R sarq sbb stos or rex.B rolb (bad) (bad) add (bad) rex.WRX mov xchg (bad) lret sahf iret fldl roll push es mov pop sti xchg pushfq rex.WXB xchg adc retq test mov and sub es sbb xchg rex.B ss test cmp (bad) (bad) mov push fcmovnb pushq or rex.RX or (bad) negb cmp push je shrl rolb and xchg push (bad) jns or xor mov mov movsb insl (bad) xor jne loopne and mov rex.WRX in cmpsb in cs rex.WX cmp fimul adc adc push rex.XB rex.RX jge rex.WB movb xchg rex.WXB fyl2x in adc lret lret fildll fiaddl sub rex.WX stc out pushq js loopne sbb jl (bad) rorl mov (bad) callq pop jno test rcll adc jl xor movabs jbe,pn fwait movsb lret enterq jl (bad) rclw callq cmp or shrl in mov xchg push (bad) sub cmp test jno shl push cmp movabs rol fidivl shll fadd and jnp cs lea (bad) or stos insl jno (bad) jno loop add cmp iret push sti xchg movb rex.B mov pushfq out (bad) sub rorl rex.RX hlt (bad) xor rex.WB ss xchg ds mov (bad) (bad) outsl rex.WRB in stc push pop and adc xchg cmc out jmp roll (bad) out (bad) cmp push cltd mov shll rex.WB rorl jrcxz int3 add out (bad) scas mov rcll add cmc negb xor sub test sbb sti fnstcw shll testb outsl int3 pop (bad) sub pop cmp test (bad) mov sar loope and (bad) pop in mov add pop (bad) and (bad) (bad) rcll rex.WR (bad) lret sbb loope rex.WXB stos and rex.W rorl mov roll and and mov rcrl (bad) stos retq in xor rex.RB or callq pop sub mov repz pop movsb adc rclb (bad) (bad) mov add (bad) mov outsl loopne test or in (bad) (bad) adc add jbe test roll adcl (bad) shrl xor scas rol cmpsb rex.RXB sar adc icebp rex.RB out cwtl rex.XB xchg popfq pop mov push (bad) (bad) ja (bad) cmp loop mov and jae test shll mov mov cmp iret (bad) fsubrl js sbb cld (bad) cli mov clc sarl movabs rex.X rex.B xchg loop fnstenv sbb mov sahf fwait or xchg jbe adc (bad) je (bad) (bad) xor cmp sarl fdivr pop mov add (bad) insb test cwtl and rex.B shll and xchg (bad) mov (bad) addr32 (bad) xchg rcrl add adc fwait rex.RX in mov cmp gs rex.WRX sbb mov (bad) mov push scas rcrl add mov (bad) retq xor xchg (bad) adc pop rorl enterq test push and jno mov stos and and insl mov (bad) jo outsb cmp std addr32 mov (bad) push rclb hlt or xlat roll xchg cmpsb mov or add rcrl xor pop rex.RX (bad) in push rol jmp mov subps cmpsl (bad) (bad) shll (bad) sti or mov pop sarl gs int3 lret insb vpxor sbb in jns scas int movslq fadds shll movabs movabs xor jmpq rex.X (bad) clc lods mov adc cmp in rex.B (bad) je xor rclb cli rex.WRXB mov adc (bad) movabs mov sbb cmp xor retq mov sbb ja xchg movb sahf cli pushq in repnz jmpq gs (bad) jle sbb stc movabs xor cmc lcall pop int rex.RXB rorl in fs orl jl push out idivl mov pop (bad) mov out retq incb xchg (bad) xchg push add xor scas lahf jo add (bad) stos adc test notb or rex.WR xchg sar rex.RX (bad) repz jae movabs add ss and in (bad) and cmp add insl ficompl and shll add mov movabs mov pushfq cwtl xchg and movsl and loope movabs or pushq rex.W xor insb iret in (bad) mov imul jno and int fist cmp pop scas movabs (bad) icebp jl lret notl stos or add callq jmpq (bad) (bad) movabs (bad) fdivs fstpl (bad) cmp fsubl mov add (bad) adc clc add xlat retq outsl xchg and rex.WR roll cwtl pop xchg insl xchg fdiv iret add sub push and cwtl mov push add xchg cmc mov or adc xlat (bad) test outsl imul (bad) xor insl (bad) mov fstpl push jnp and rex.R adc add clc and loopne adc (bad) (bad) (bad) cltd jne test rex.WR repnz push adc gs push mov rex.R cmpsb movsl (bad) rex.RXB rex.XB (bad) lret jmpq int rex.WXB movabs fisubr mov jne or xchg sub js pop insb movabs (bad) test add shrl mov lret cmp leaveq xchg (bad) mov rep pop xor xchg shrl (bad) rex.WB movl push (bad) adc cmpsb (bad) out or mov popfq leaveq rex.R sti (bad) mov (bad) fdivrl hlt rex.W cmp iret pop xchg retq rex.R push callq imul rex.RXB gs int3 out cmp rex.W sbb std rorb jae (bad) insl xchg mov ss je repz mov sub sub xor pop cli mov jno jb xor rex.B adc callq movabs sub (bad) mov movslq std sti add or lock push (bad) (bad) adc jge jp rex.W rex.X test add mov cmpsb xchg sbb pushq or and jmpq addb test rex lock stc xchg andb rex.WR (bad) sbb adc andb pushq add sti (bad) mov jp gs or mov in mov add cmp ja mov rex.WRB sub pop cli and lods movsb bnd scas es jrcxz (bad) adc mov fildll jmp rcrb js cmp (bad) mov jl sti fs jg (bad) cmp mov movsb mov cmpsb lods (bad) jo sub pop in sbb loopne or or fstpl out es rex.B movabs mov es movabs xor and rex.WXB mov insb clc add mov int3 sbb rcr fadds fildl or pop shrb (bad) in nop jae outsb outsb lret icebp rolb add rex.RXB and movabs retq lods (bad) (bad) (bad) mov rex.WRX mov or cwtl rex.WR adc imul pushfq mov subl idiv pushq cli ficompl (bad) ds mov cmp rex.WR jmpq lock mov or (bad) (bad) in clc jmpq mov rex.B mov xchg rex.XB and xchg shr adc (bad) movabs cmp xchg rex.R mov jrcxz mov jae (bad) (bad) jo mov insb data16 xchg (bad) movabs mov rorl insb cs jae jno stc cmc movsb fsubr jmpq xchg (bad) es mov and (bad) push fbstp (bad) (bad) test (bad) faddl sub int cmp sbb ss gs cs sub movabs push (bad) pop pop stos (bad) cld xlat add sar repz sub ss imul divl testb adc retq mov imul mov (bad) rex.WRB or std add vpminsw xor xor mov mov rex sbb xchg imul (bad) mov stos (bad) retq fs mov sub or xor incb movabs mov enterq or js xor rcll lods out rex.WRB shlb loop fmuls and push xlat pushq lcall fnstsw loopne push adc loope fsubr insl stos sbb mov pushq fsubr (bad) sti or stos inc xor leaveq pushq jnp jmp out divl (bad) cmpsl stos out adc mov mov cmp lods sbb or movabs (bad) cltd adc cmp fwait bnd in (bad) lahf fidivr (bad) xor fiadd xchg cmp (bad) rex.WRB fldcw mov add icebp rex cli adc rex.XB retq es xor rcr (bad) ljmp jne adc mov lret mov and cmp or jl rex.WRB fwait addr32 mov add jno ds jg mov add xchg (bad) mov clc xchg jge leaveq xchg (bad) fildl jno cmc rex.RB rex.XB pop test (bad) xchg xlat (bad) mov pop test (bad) (bad) and fsubrl out mov cmp loop lock sbbl movabs fsubs repz rex.WRB xlat mov cli rex.R fldenv (bad) adc or rex.WXB mov jns mov rex.RB rex.WRX out lret and fsubl rex.WRB or rex.RXB mov out notb adc mov add test pushq adc jmpw xor xor pop shl (bad) xlat or jae cmp rex.R shl jp xlat int pushq movsb or jg pop mov cmp mov in (bad) or lret or popfq repnz out mov pushfq (bad) sbb rex.XB shrl mov gs rcr (bad) mov and jnp loopne scas rcrl stos mov out rex.WRXB push add xchg (bad) sub mov nop in fmull fst jp and jnp movslq pop or out loopne add xchg adc nop add movslq or loopne add (bad) mov (bad) data16 mulb xor (bad) flds sbb pop (bad) cli insb imul icebp xchg xor movabs rex.X (bad) xorps movabs mov (bad) outsl xor rep xor (bad) fs pushfq xor test callq cmc lods lods rex.WR add iret je lock stc (bad) repnz adc test int3 sub or lea out pushq std mov rex.R cwtl movsb lods lock xor retq adc loopne (bad) adc lret mov addr32 rex.WX lret fs sar rex.R rex.WX rex.WR mov jl idiv rex.XB add (bad) and leaveq clc cli (bad) repz rol pushq (bad) idivb adc (bad) sub lret loopne (bad) shlb loop fildll rex or (bad) sub (bad) (bad) jae pop lea loop ja ja jno (bad) (bad) loope cmp movl fldenv rex.RB xor (bad) lretq mov (bad) movslq jo loope or pushq (bad) sbb fsubrs xchg (bad) jl cmp mov out (bad) mov mov out cmpsb mov rcl and (bad) rclb ljmp pop jae and pop fisubl mov push rolb and (bad) add test insl stos sub stc in incl cltd (bad) lahf sbb (bad) fdivs jrcxz retq xchg mov pop (bad) mov je (bad) pop sbb lea (bad) lahf cmc in (bad) jle jp enterq push fildll add (bad) (bad) addr32 pop lret lea cmc ja (bad) push (bad) mov rex.RX mov jp mov or movslq int3 loopne mov sbb adc (bad) ds rex.RXB test movabs clc lea lret jnp jne rex.WX add xlat mov rcll lret sbb scas rorl push mov jno lea pushfq mov movabs adc movslq (bad) out gs xor rorl (bad) adc push enterq jmpq pop cmp in (bad) (bad) roll rex.WXB sub scas (bad) test movslq (bad) fisubrl mov xor adc outsl cmp lret adc mov mov rex.RXB or jrcxz push push shl cli jns (bad) (bad) add adc retq (bad) and adc mov lret in movabs rex.X pop cli xchg rol repnz insl sub xlat andl stos insl leaveq in mov data16 cmp out mov out jge adc psrlq pop or cmp mov pop mov in or and (bad) or leaveq (bad) add mov fstpt movsb jns popfq sub pop rex.RX jnp loopne cld pop sbb xor fnsave rcrb faddl or fcmovne (bad) sub in mov inc orl fucomp mov rex.WX (bad) rex.WRX jne vphsubbw mov rcrl mov adc sbb movabs movabs xchg movabs jbe cmpsl int rex.RB retq iret movabs roll mov cmp lods ds xor mov rex.WRXB sub push movslq jo jp mov (bad) push movabs xor cmp and rcrl (bad) adc out fild (bad) fucomi mov (bad) mov outsb shll rex.WB outsl (bad) jge sbb mov xchg rcrl rol outsl add or retq in (bad) add sub (bad) sbb cltd and leaveq fsubs test data16 fcoml (bad) stc mov lahf fwait insl (bad) lret (bad) cld movabs ljmp mov sub fcmovb mov fs repnz (bad) sbbq or (bad) ss repnz scas test ja (bad) js movabs movabs rcr test rex.WX xor xchg pop adc imull movabs adc rex.W rex.X scas xchg mov adc fnstsw xchg int sub (bad) insl retq or mov movabs test xchg xchg iret in lret outsb std jo xchg lret rex.WB jg cmpsl mov (bad) cli cmpsb and sub add repnz hlt in (bad) notl mov rex.B cmp popfq shr outsl clc retq sub cwtl hlt in stc add lret in jmpq (bad) xor (bad) (bad) xchg adcl loope (bad) (bad) lods mov (bad) std cmpsb rex.RB and xchg shrl and int ss (bad) mov (bad) in movabs (bad) pop add (bad) (bad) movb push (bad) and cld es fnstenvs push stc shrl (bad) jns mov out movabs fstp cmpsb push negl cmp retq jg rorl xor imul (bad) push loope leaveq cld outsl xchg (bad) (bad) sbb mov adc rcll or mov (bad) cmpsb int3 repnz loope add rex.RB rex.XB imul rex.RXB ja cmp gs (bad) and rcrb int3 fnstcw (bad) (bad) xchg mov sub stos mov sbb cmp sbb iret xor insb loope scas rcrl add sar xchg mov jo cmp sbb sub cmpsb xchg cmpsl sbbb orl mov lahf outsb out jl rcrl mov cld cmp faddp cmpsb mov push (bad) gs xchg rex.RB mov jle xor imul mov addr32 repz mov xor adc ja mov out pop (bad) add push cmp mov xchg cmp xor jae rol mov out mov (bad) mov test fidivrl pop jb (bad) jnp imul in (bad) out movslq rex.WR mov ror (bad) cltd xchg cmc (bad) sar jle cmpsl in mov jp test rex stos fldpi movabs xchg rcrl testl lret lret push shlb sahf cmpl rex.RXB (bad) cmpsb fabs in pop imul xchg mov lret pushfq rcll mov rex.WXB popfq repnz cmp subb push jno std rex fsubrs mov iret mov sbb lahf add xchg rcll mov adc jne leaveq and sar cli mov (bad) sbb shll lea jae (bad) cmp test jge fist test fs lret jns xor xchg jrcxz push in std (bad) sbb fdivrp pop loopne cmp (bad) jno mov (bad) mov rcr jge (bad) pop stc sub (bad) in cltd sub rex.WR cmp shll rolb (bad) test (bad) fsubl or (bad) sahf leaveq or mov jge sub or xchg mov out jmpq rex.RX movabs repnz vpunpckhwd in mov retq (bad) sbb incl add insb (bad) fcomi in add rex.WRB rex.B sbb add rex.WRB test rex.X (bad) popfq push icebp jg add lret ja sbbl rex.X mov and or cli mov rex.XB xchg pushq rcr movsl mov (bad) clc (bad) xor fwait xchg icebp jo jl add (bad) movsl mov ja xchg clc lret mov rcl sti adc ss (bad) iret xchg adc fucomp shl gs callq test mov jo (bad) push (bad) fdivrs mov jb mov xchg (bad) pushfq (bad) (bad) pop rorl in rex.RX pop (bad) pop (bad) int3 sarb push sbb rcll movabs int fwait add cmp sbb xor (bad) ss jns movabs iret loopne stc iret xchg xor movabs jrcxz repnz (bad) shlb cmpsl xchg xor addr32 repz jno jns (bad) cmp in cmp nop xor sarb push (bad) fistp and and rex.WX (bad) loopne rex.B fsubrs mov enterq lahf mov rex.X cwtl icebp (bad) add cmpl repz sub add sub lret xor in mov jrcxz int sub jne adc xchg pop mov andb (bad) cmp movabs (bad) jrcxz and jns movabs add add (bad) pop fcmovnu rolb and sbb xchg cmc (bad) and in xor pushfq std jbe fstps xchg outsb mov rex.WB movabs insb jno jbe (bad) rex bnd clc rex.WXB (bad) adc and lahf (bad) in (bad) (bad) cmpsb (bad) movabs repz fwait mulb or add outsl loope or loope and and repz insl out and xchg (bad) mov jle jno in mov pop (bad) rex.XB xor add cwtl mov sar and fcmovb divb xchg pushq out movabs fcmovnb or movsl sbb jl push (bad) fist int3 xchg fadd sub mov loop gs and pop mov movabs (bad) adc (bad) (bad) (bad) xchg retq vpunpckhwd shrl jnp movabs xor je fstps (bad) icebp cmpsb jb jge jno movslq roll movabs outsl rex.RB xor (bad) je sbb mov add add sub repnz (bad) xchg rcll sub pop push sarl insl mov out pop adcb adc enterq adc pop lahf std rex.WB cmp fldt (bad) add cmp push in jp mov rex.RB fild adc retq jle movabs (bad) in (bad) pop (bad) jl (bad) pop mov leaveq xchg mov jbe rex.B or or sbb xchg pop add rex.WB pushfq retq repnz rex.RB adc test add rex.RB and jg movabs (bad) (bad) insb scas push mov xchg mov insl leaveq addr32 repnz rex.RXB retq (bad) rex.W cs cs (bad) int3 (bad) repnz xchg or rex.WB and imull sbb mov cmp (bad) loopne and rol ror sbbb xchg xchg sub push movabs (bad) (bad) xchg mov in xchg test sbb (bad) repnz and rex.WR ss retq xchg roll gs sbb (bad) sbb fmul (bad) data16 rex.X xor test xchg frstor rex.WX mov mov (bad) test sbb jmpq (bad) push and cli movabs mov movabs mov sbb int jmpq (bad) mov in jg cmp and fstpl movslq add jmpq ds in adc jno pop rex.W sub or adc lods stc sub add jle mov divl movsb setne jrcxz (bad) mov push mov cmp and ror pop mov adcb mov xor and (bad) sbb adc mov (bad) and push (bad) adc in rex.WB lret shrb in test rol rex.WRB in mov rex.WX data16 test and fst xchg adc adc mov movslq push fwait and (bad) or test (bad) cltd movabs xchg movl xchg jge int3 data16 adc xchg ss sbb pop mov fs test (bad) and fcomi scas adc loop xchg (bad) retq push push sbb enterq (bad) clc jb insb loope mov rex.WXB fs rcl leaveq add add rex.W adc imul or test pop jne xchg in xor movsl jnp cmp pushq (bad) sub idiv mov rex rex.WX xor or (bad) jmpq lea (bad) (bad) jb cwtl (bad) rex.WXB scas jle rol ss sti in andb jmpq je vrcpss rex.RB rex.WR xor (bad) sub enterq retq enterq test jae mov add add jl repz jnp cmc add add rex.R add and (bad) add sub roll and and insl mov xorl push lret lea (bad) xor cmp and sub es mov xor enterq pop push (bad) mov ja mov rex.WR in lret mov (bad) xchg rcll mov rex.WRB ficompl repnz outsl add (bad) xchg mov out xlat push cmp xadd push data16 ficom cmp callq retq mov (bad) xchg cmp cmpsb rex.WRX mov loopne mov mov shll rex.WX fdivrs ror sbb data16 rcll sub jmp add (bad) repnz sub xchg pushq mov pushq sarl movsl mov add (bad) push rol (bad) mov (bad) mov sbb in and or gs sub mov sbb loop (bad) outsl (bad) hlt sahf testl xor adc mov callq sahf (bad) (bad) rex.B mov fadd add in (bad) jno jrcxz enterq pushfq movabs add push retq xchg lea imull paddusw and mov insb retq (bad) (bad) jg push mov sbb cmpsb cli and insb mov cld mov or out lock fidiv (bad) movb sub rex.RB data16 xchg insb fucompp iret jne or movsb mulb rcrl retq (bad) (bad) nop or movabs jmpq add rex.R movabs decl cmc jbe (bad) loope shlb rorl pop mov lret (bad) and test cli add lret out (bad) xchg pop sbb out jl fild rex.WB push callq and test int pop sbb cmp jbe insl lret mov ds cmp sarl xchg add pop mov roll cmp lret hlt vandps repnz rex.WXB (bad) iret in xchg add mov jae test shrl (bad) push (bad) lret fiaddl lea cmpsl movsl add mov xchg pop xor movb jno mov cmpsb fcmovnb notb sub movabs and js sahf rex.WRXB add sub jbe pop repnz shrl sub sarb jb (bad) xor or adc push int3 movb (bad) mov (bad) pushq sarb xchg roll loopne sbb mov xchg lods mov (bad) sbb mov insl sbb (bad) out xorl (bad) mov lods jp (bad) adc mov add jnp pop icebp out and and and loopne rcr nop (bad) adc in jno pushfq rorl cmp int3 jmp push vmovhpd in retq scas test cmpsb rol fsubrs rorb and js xchg imul pop cs ds xchg mov add mov js hlt lret cmpsb jp mov rcrl or (bad) shl xchg jg adc mov roll xor mov bnd jmp cmp sarl rex.X xchg sub leaveq test stos sub (bad) stos shl xchg (bad) jge or mov (bad) in (bad) (bad) mov clc (bad) movslq or add pushq rex.XB mov fcmovnbe lret scas test (bad) addr32 shr enterq es and and incb mov push shr loop jp xlat mov (bad) mov es sarb mov or clc or pop push (bad) lret movabs and rex.WX fnstenv je cld mov add jmp sub adc rcll adc loop movabs rex.WRXB rex.R mov mov nop and and roll (bad) sti mov rex.WRXB iret rcl imul (bad) jo,pn and xchg in in sti pop hlt pop (bad) addr32 xchg xor (bad) (bad) pop sbb xchg (bad) popfq mov lahf and (bad) sub sbb (bad) lods cmpsb pop movabs mov pop out mov push std cmp stos cltd rex.WXB rol clc rex.WRX cmpsl data16 or nop push mov sub xor rex.WB xor mov movabs fs pushfq rcl add enterq sbb (bad) add cmp test add xorl sti pushq cmp rorl lods xor (bad) movabs (bad) mov sub fsubrs shr cmp (bad) imul mov ds rex.B xchg (bad) mov pop cmp je (bad) mov or push retq imul jmpq (bad) or mov test cltd (bad) shll movd loopne (bad) hlt rex.RXB (bad) mov cmc pop fnstcw add xchg mov and xchg fldcw rex.X mov cltd mov rex.WRX rex.WRXB insb rcrb jrcxz lret jmpq in (bad) in lret mov rex.WRXB cwtl int3 movsb pop repnz rex.X lea sbb pushfq or xchg repz out (bad) jmpq rex.R (bad) rex fstps and and sbb pushq mov roll out mov imul retq xchg sti cltd stc (bad) hlt lret and xor rex.B rex.WRB fwait mov rex.W (bad) add jl (bad) xor imul roll nop (bad) popq sarb js jbe or xchg movabs rex.WR scas adc sub add mov movl mov (bad) and test xor lods pop mov pop rcrl xlat mov (bad) mov mov mov jge cmp mov mov pop jns leaveq imul jo cmpsl scas rcrl in sarb test repnz (bad) rex.WB rex.X or jmp lea add loopne rex.X lahf mov mov (bad) (bad) rex.RX rex.WXB pop or sub mov adc fcomp repnz lret xor lods (bad) in insl movabs jo cld rex.WXB in xlat (bad) and movabs pop lcall fldcw mov mov mov enterq icebp xchg ficom (bad) js pop pushfq adc xchg (bad) hlt or leaveq mov loopne outsl and (bad) fdivrs cmp add movslq cmp fdivrs ss movabs mov (bad) rex.WR adc sub (bad) push mov add (bad) add fmuls lock rex.WRXB js out xchg mov rex.WRXB imul callq retq add xlat xor movslq int iret sub icebp fstps adc addl xor jae fsubrs popfq pushq ja jmpq mov xchg (bad) stc jge cmp movsl imul rex.RB (bad) (bad) xor outsb add loopne or pushq cwtl mov js jmp adc mov movabs out fistpl mov add (bad) push lahf cmc cmpsb xchg push (bad) div retq hlt loopne,pt lret hlt jo outsb je scas pop xchg rex.RX movabs retq rex.WRB nop xchg outsb mov hlt rex.R or rex.WB mov leaveq mov sub xor xor vpaddd orl (bad) push sub pushfq popfq jno movabs repnz mov insl hlt sub rex.RX jno add fcmovnu (bad) lea stc or rex.RXB push gs rex.WXB rex.WRX ss pop stc lods rcll or in xor mov xchg sbb fsubrs and sbb cli pop mov shl cli (bad) jle sbb lock iret adc test adc rex.WXB (bad) xor rex.B fisubr or repnz scas movabs sbb sbb mov fstp gs rex.WRB adc test repz pop in fdivp (bad) pop pop adc cmp xor mov or pushfq sub fwait incl (bad) mov retq or in rex.XB test rex.B push mov movsl jno shrl movabs xor pop and xchg mov cmp add rorl (bad) (bad) iret cli jg sub mov rex.WXB lret push rex.WRB sti rex.WRX (bad) (bad) xchg mov fidivr jmp fnsave (bad) movabs or lods jl (bad) in movslq xor repnz hlt in (bad) (bad) jae and (bad) outsb (bad) mov subl (bad) fldl out in (bad) pop fsts repnz jbe je (bad) rex.WXB (bad) insl (bad) cmp rex.B pushq (bad) rex.WXB rex.WXB cld sahf jmp cwtl xchg add fs sub mov push (bad) jmpq (bad) adc movsb rex.R jmpq shll xor cltd cmp mov add (bad) rorl adc je nop sarl cmp xchg mov cltd (bad) vmovapd fcmovnbe (bad) rcrl or and jle fsubr cwtl (bad) lods std lret cmp and add es cld lret rex lock (bad) cltd adc cli rex.W repz and xor sbb and xor rex.WRX retq loope sbb mov xchg cmc sub (bad) jno sub mov adc mov rex.B gs sub push xor std rex.RX loope out int mov mov in idivl add scas jmp cs push out mov push jno decl xchg sbb (bad) sub cwtl retq mov pop imul js jo add movsb xor xchg (bad) shr test jg (bad) shl xor xchg rex.RX movabs fucom pushq (bad) mov rex shlb adc xor add jne mov (bad) adc hlt fsubr icebp xchg (bad) and rex.RX shl pushq rex.WXB insb rcrl stos pop sub (bad) imul jns loop roll jmpq cmp shrl mov test rex.B std mov je mov ss fdivrl pop xchg xchg movabs stos mov pushfq rolb and pushq ss jb test in (bad) cmc push rex hlt (bad) push add decl push sub or sub cld sbb shll add xchg xorb shlb pop fwait ror mov out shrl std or hlt in enterq (bad) cmpsl mov push and or stc (bad) cmpsl jne stos rclb rex.RB mov add pushq cmpsl sub jge (bad) xor (bad) (bad) cmpsb pushq rex.WRX sarl (bad) and (bad) fs or and (bad) jp and shrl callq (bad) xchg adc addr32 sbb mov rex.R gs repnz fdivrl in (bad) sbbl rcr sbb (bad) (bad) push callq pop movabs jo jp mov rex.B rex.R xor jle rex.WXB cwtl lock imul add or lods rol out mov lahf xor and jo int out pop notl imul test (bad) push (bad) sbb ss leaveq xchg and jno sbb (bad) (bad) insb movsl (bad) mov mov roll (bad) and shrl jno or mov divb cmp cmp (bad) mov mov stos mov callq mov lock and (bad) sbb (bad) adc jbe jg mov retq sbbl mov rex.RB js rcrl or repnz pop adc movabs (bad) pop rex.X jg rorl notl or xor sti xchg jno add rex.WRB (bad) iret mov mov mov out add frstor xchg rex.X mov mov (bad) sbb (bad) (bad) jno mov sbb mov rex loop std (bad) hlt xchg jmpq (bad) out push fadd rex.WX add loope lods repz repz rorl push sub jrcxz rex.WB pop sbb (bad) mov xchg js cmp xchg (bad) lret pop jmpq rorl fdivl (bad) (bad) (bad) int3 imul mov or retq mov rex.RXB mov retq movabs push cmp mov repz ficom (bad) loop or cmp stos rex.RX lock insl add cld (bad) lods movabs xor jbe and pop movb cltd or jge add (bad) callq ds mov outsl (bad) xchg push fcmovnu cltd ror pcmpgtb mov (bad) mov cmp or xor test (bad) fstpl loop (bad) rex or (bad) lahf popfq mov addr32 mov callq add imul xchg mov (bad) xlat retq cmc cmpsl rex.WRB rex.WXB (bad) jl and (bad) stos movabs push xchg int notl sub xor (bad) xor jle (bad) add fcoms (bad) jmpq shlb lods xchg fsubs adc mul jno add cs adc test add mov xchg or fldl lods xor (bad) shr (bad) scas fisubrl movslq add mov sub fisubrl adc xor in icebp sub js rex.B sub add sbb mov test add sahf (bad) movabs in paddsw enterq (bad) or (bad) (bad) in pop (bad) loope int3 leaveq cmpsl pushfq cmp xchg cmp sbb pushfq cmpl rex.W xor insb cmp es es outsl push pop adc movsl (bad) rex.WB cs insl enterq rex.B test add loopne gs out or nop pop pop je mul mov retq roll push mov roll insl (bad) mov movabs sub fsubr int3 addr32 jns stc outsl retq fcoms or rcrl mov mov (bad) callq push sahf lret jmp (bad) out rex.WX test mov scas roll rex.WXB sarl xchg loope rcrl adc repnz outsb (bad) (bad) rcl testb cld push (bad) rcll iret pop sbbb pandn jno lock and rcrl rex.WXB lret decl insl cmp push fnsave mov add rol je insb shll pop (bad) sub rcrl (bad) sub sbb xchg sbb enterq mov js iret jne (bad) in or or jmpq rol jne cmp and jno sti fisttp jnp leaveq callq movabs movabs mov ror nop and shl rcrb int3 sbb or rorl out sub insb int fldt adc faddl adc pop cltd fnsave pop hlt sub mov jae cmp rex.WRX movabs retq stos (bad) (bad) pop mov fs repz (bad) ficompl pushfq add rex.RXB rcr mov rex.WRB (bad) mov out rex.WRXB orl adc xchg (bad) in ja (bad) loope jle cltd movslq mov xchg mov fld and stos (bad) adc jg repnz vrcpps (bad) movabs sub add jbe addl sbb (bad) enterq jbe xchg or sbb rex.X pop jbe mov lahf nop (bad) (bad) repz outsb movslq rex.RB rex.XB (bad) icebp in rex.R test fstp (bad) sbb clc movabs flds pop loopne add outsl scas mov testl addb orl and hlt (bad) stc rex.WRB jb mov sub callq sub mov repnz and jmp jns js jb mov and ja (bad) sub retq jns fs push fisubl (bad) leaveq jl (bad) ffreep out retq loopne (bad) leaveq xchg movabs loope iret callq adc or xchg or (bad) loopne rol mov xchg fdivrl fnstenv (bad) movsb js js fwait xor rex.WRXB cmp (bad) (bad) jns test stc jb insl repnz mov in shll movslq mov jg,pn movabs retq mov mov sahf lahf pop repz (bad) sarl lret adc idivb xchg test push fnop rex.X ror pop in and push mov fsubl or subb out imul rex.WRB es ds add data16 xor out pop xchg rorl decb lods pop and (bad) movabs clc (bad) lret sbb (bad) (bad) test sub cs pushfq and cmp adc rex.RB and pop (bad) imul (bad) adc pushq mov in or add cld pop pushq push adc clc jns add adc xchg xchg test lret lock rcl rex.WRX retq fsubrs sbb (bad) xor sub jl rex.WX mov pcmpgtb sti mov pop and popq fsubrl (bad) in test cmp (bad) pop scas jl rex.W vhaddps xor xchg (bad) (bad) sbb sbb mov mov (bad) xor loope loop iret add movabs repnz movabs mov stc (bad) push repz cmp pushq pop imul rex.RX jne fwait pushq test mov std ror and add loopne int3 adc (bad) sti xor out add out (bad) (bad) lods push push (bad) (bad) ja mov and loop push inc iret in frstor (bad) sbb in sbb (bad) (bad) rex.RX shl add or sahf fs rex.RXB ds xchg mov add sub mov sbb movslq lods or lea in xchg rex.RX and out pushq or pushq (bad) mov je icebp pushq cmp mov sub (bad) (bad) cmpsb int pop cltd (bad) rcrl insb cmp (bad) xchg jb cmp sub fistp xchg cmc xchg movabs rex.WRXB jbe stos repnz loope jl enterq push rex.W pop movsl jb pushfq insb or push loope mov (bad) fsts and (bad) xchg (bad) rcll (bad) iret shll rex.RB shll (bad) fwait push sti cmp or rex.WR cmp jle (bad) adc cmc mov (bad) fdivl add adc rcr retq int fcmovnb (bad) jno or (bad) pop pop sahf pushfq std rex.RXB popfq xchg xchg rex.W repnz out rorl stos xor jg mov clc enterq adc loop imull jno in lret mov ja js stos fcomp shrb cmpsb sub mov stc sarl leaveq pop rcrl or retq mov (bad) mov test (bad) shrb int3 fldl orl movabs pushq pop and jne and (bad) (bad) pop (bad) hlt jrcxz rex.XB jo jb mov (bad) jno (bad) sub lock push cwtl iret int xor jrcxz std rcr xchg sbb movabs in cmp (bad) iret pop cmp and outsb (bad) int3 (bad) or mul outsb add jle lock pop movabs adc nop repnz rex.RX cmpsb pop (bad) imull (bad) xchg inc test cli roll (bad) out cmp adc sahf fsubrl push xchg jbe mov xchg xor sqrtps sub int (bad) out mov xchg movabs in enterq sub ss test pop loop data16 rex.B rex.WX lret mov add scas iret loop xchg or sbb leaveq cltd lods jns imul mov mov mov or mov mov (bad) xor sub xor repnz (bad) cmp push rex.R out (bad) sbbl bnd nop push or (bad) (bad) sub mov callq icebp jg stc fisubr rorb jae fildll rol fistpl xor rex.WXB add repnz loope pushfq pop in repz out adc enterq add hlt cld adc xchg outsb fdivp xchg jmpq mov in cmp (bad) sarb xlat cmp rex.B adc lock movslq rex push int3 mov (bad) cld cmpsl jo adc sbb (bad) mov (bad) xlat (bad) (bad) clc rex.WX sar (bad) outsl loope jae (bad) or test rex.XB (bad) callq or rex.B rcr sbb xchg repz (bad) adc in pop xor jns jmp push (bad) pop (bad) shlq leaveq ds (bad) js adc mov or xchg hlt retq mov xchg (bad) (bad) rex.WB rcrq test add jl enterq cmpsl add fnsave push (bad) cmp mov pop sub (bad) rex.X and or pop jl loopne (bad) xor cld rex.WR cmc sbb jrcxz and (bad) fwait js pop or cmc rex.WRXB stos xchg test jo shl (bad) ja lret loopne hlt (bad) sub rex.RXB lret xor pop cmp dec sub (bad) callq (bad) mov (bad) fistpll fistpll pushq adc rex.WRX cmp test clc outsb popfq xchg enterq fist fisubrl rorb stc insb movslq retq lea xor sub (bad) adc int sbb mov add in xchg rex.RB mov test add xchg callq or fcom mov js imull xchg sbb loop (bad) or fdiv js sub ja and incb (bad) sub rorb (bad) (bad) (bad) jl repnz cmpsb add cmp cmp push rex.RXB repnz (bad) out mov or and jle xchg movsl loop rex.R jg fnop (bad) rex.RB xor shl xchg or cmc loope iret callq cmp mov callq adcb xor fdivl and pop ss (bad) push mov (bad) cmpl sbb push (bad) mov jle pop or cwtl (bad) fstps mov mov xchg sbb (bad) mov xor rex.WX loope shl (bad) popfq rex.R rex.WRXB sar jo adc mov mov mov rex.RX (bad) insl insl adc or lock rex.R movabs and bnd testb jno (bad) (bad) (bad) sbb rex.WR pop out (bad) fmul jbe flds adc movb enterq jnp adc or cli or jo (bad) adc rex.WRX mov (bad) add rex.WRX or xorl xchg (bad) imul xchg lret cmp pushq adc rex.B lret jo vmaxpd (bad) rolb add sub xchg and retq cli pop je sbb rex.WR jrcxz es rex.RXB movabs (bad) lret iret test shrb test sbb pop xor add pop cmp insb fcoms mov mov mov retq rex.B ja (bad) fstl rol sbb fisttpl in sub mov sbb or sahf stc cs add xlat loopne (bad) or rolb and (bad) (bad) mov jp sarl jmpq pop imul fwait and and movsb (bad) xor (bad) je pop rclb (bad) push callq shl test sub movsb rcll ja sbb sub cmc mov sbb (bad) (bad) add xor add sahf (bad) fyl2xp1 adc lock sbb jns (bad) add pop cmp mov (bad) xor loop jp pop jbe test pop sub enterq rex.WR sub rex.WRB bt pushq (bad) mov rex.B rex.WXB mov negb xor in pop (bad) push test (bad) (bad) mov xlat pushfq scas stos mov ss rorb loop xor cs adc jne iret pop push and andl in mov (bad) movabs (bad) rex.B iret jp sub (bad) xor test mov jnp xor fadd js idivb (bad) movabs xchg jmp jge rcrq lret adc (bad) test imul lahf mov mov or repnz push jbe xor cli mov movabs mov cmp jo lahf cmp add enterq pop movsb rex.B pop jp or jae jo sub pop in fstps outsb xlat rex.X cmc repz leaveq callq (bad) sub movslq loope lods rcr in lods fisubr clc divb sub (bad) mov sub jle fs mov jle mulb cmp rorb xchg movsl movabs rex.WRB rex.X rex.RX andl or xchg iret rex.W (bad) outsb jp ds adc fild in incb repnz faddl xchg jrcxz add cmp in faddl out cmp (bad) xchg cmc (bad) ror xor mov rex.XB rex.RXB repz or movslq add jle fsqrt push xchg fistpl push mov insb rcl xor (bad) imul cltd xchg xchg jnp retq rex.B push mov add xchg imul push xchg adc add sbb repnz repnz roll sbb cmp roll sub lahf or sbb pop jrcxz jle xchg repnz outsl mov enterq (bad) xchg in jbe (bad) jmpq cwtl imul movabs sbb jrcxz xor (bad) test add push (bad) rex.RB ss sub jbe (bad) shrl or or subl test (bad) (bad) rex.RXB (bad) sarb push add sub mov mov cmpl jmp xor sbb insl hlt and fimull xchg rex.WRB rex.XB mov add cmp sbb xor cmpsl ss test (bad) in jg (bad) xor cmp cmc fdivl (bad) cmp (bad) xlat rex.WRB sbb (bad) leaveq cmp xor sub sbb add retq repnz test (bad) in cld mov icebp cmp js sbb sbb (bad) lods callq popfq (bad) sub cmpsl fistl jae fdivl mov cmp test gs (bad) scas adc (bad) lret iret fcmovne jbe (bad) rex.RXB addr32 sbb jg cmp mov mov outsb rex.WXB (bad) cmp movabs xor rex.RB rex.RB xchg rex.WRX (bad) loopne push mov test leaveq add pop (bad) cwtl and cmp push jno cmp (bad) fdivs mov mov cmp add adc add lret mov rex.WRXB (bad) insl sar pop mov shr mov mov mov (bad) xor hlt jbe es (bad) xor sub rcrl int3 rex.R rex.RX imul mov movsl sarl fwait add or rex.RX rex.WRXB mov (bad) pop add xlat rorl (bad) xchg (bad) mov jp cwtl xor (bad) jnp or scas cmp scas jg or pop stos add imul and (bad) adc sbb stos rol loopne add mov je fcmovb sub paddsb xchg in pop ja and and jbe or rex.WRB and jrcxz jle (bad) out sbb lahf shrl jge (bad) jl lock repnz xor xor sub cmc or stos pop rcll mov rex.WRX rep and cld out sbb xor (bad) and xchg xchg repz jbe (bad) mov int3 push xor scas loop cmp adcl fild sbb lret rex.XB movabs push rcrl or repnz int3 incb rcrl (bad) in out pop sbb (bad) jb fwait adc test jne andl rex.WXB add xor lahf pushq lock adc loope jae cltd xchg insl rorl mov sbb clc (bad) rex.R rex.R rex icebp iret (bad) jge rex.WRB rex.R mov clc and or (bad) mov (bad) movsl xchg and sbb jnp sar pushq or (bad) mov (bad) movabs je sub cs cli insb rex.WR stc (bad) xor test and fnsave jns add movslq add adc xchg xchg xchg rex.X lss sbb pop pushfq (bad) mov mov enterq out shll (bad) icebp mov fldenv push data16 je jae decl fadds callq mov imul or roll sub rex.WRX xchg stos (bad) (bad) (bad) sbb lahf push xor lret roll insl (bad) cmp (bad) (bad) (bad) rex.B repz retq jno sub pop fiadd jp cwtl loopne in fldl int mov std mov retq pushq mov notb loop loopne iret in xor rex.WRB sub sub addl cmp add movabs shr (bad) rex.WB jrcxz test rex.B (bad) sbb jmpq xchg (bad) scas (bad) in jmp pop rex.WXB rex.WRB mov add jne (bad) (bad) in or (bad) xor movabs sbb ror cmp (bad) cmpsb loopne rex.B sbb (bad) jne fs lock xor rex.RX rex.RB adc scas retq mov mov jb (bad) xor mov imul (bad) (bad) out enterq rex.WX jle pop shll je loop es (bad) fndisi(8087 and rex.RXB xor jge pop rol shll loop roll loopne iret rex.X fwait rex.WX cmp fbld rex.XB rex.WRXB rcrl rorl xchg (bad) ja js insl pushfq adc sbb add jmpq mov loop out (bad) (bad) sub sarl pop enterq mov out (bad) ja add pushfq jno sbbl mov movsb test pop and sarl and (bad) (bad) je shrl cmp pop adc ja (bad) xchg mov addr32 mov rex.WB rex.B jae cmp (bad) push rcrl adc popfq mov movabs bnd scas fistpl add subl addl jmpq rex.WR add rex.XB add pop adc pop mulb mov icebp rex.RXB (bad) clc xchg jle enterq and mov adc ds mov out pop xor in add rex.WR xor sub (bad) jg pop rcrl xlat rex.RB stos jp xchg jl scas shll cmp rorb (bad) sub xchg (bad) rex.WX push ja rex.B jle push repz jb fisttpll lea imul rex.RX xchg hlt shll (bad) scas sar (bad) push out enterq xchg jnp rex.WRXB lock sti je lods std mov add loope mov (bad) adc (bad) scas jle shll hlt mov vmovdqa imul cmpsb fstps mov and xor out (bad) (bad) test rex.RXB push (bad) xchg mov and pop leaveq insb imul cs (bad) lret xchg (bad) and stos movabs cwtl push std (bad) (bad) xor rol (bad) xor in fist cmp int sbb in (bad) callq xchg shrl or xor pop jp xchg retq push rex.X (bad) lret pushfq xchg (bad) mov sbb add adc fistp mov mov test adc (bad) shrl fistpll in ja rex test jp mov xchg movb movabs jnp adc (bad) mov sarb shrb mov sbb insl or (bad) sbb (bad) punpckhdq cmpq lock scas stc xchg and test rex.RX (bad) int3 mov adc (bad) push imul cmp jg adc mov (bad) movsb in in pushfq pop pop (bad) shrl test xchg rcrl movabs scas inc xchg cmp loop retq (bad) and adc rolq pop fwait rex lret xor icebp add pop sub leaveq cmp jle jns int3 sub xlat mov fs (bad) or icebp retq (bad) leaveq repnz or pop add cmp loope fcmovnb (bad) loop pushq shrl orb rolb test stos xlat outsb (bad) or (bad) add and (bad) rorl xchg cmp sub mov jmpq shrb (bad) add sub loopne fdivrs rcll movsl or in retq mov mov add push out scas cmp (bad) movsb xor mov mov sbb lret (bad) jne fisttpll (bad) mov js add vmovaps icebp mov (bad) mov adcb sub sub xchg roll rex.WRX rex.XB jbe (bad) (bad) add (bad) (bad) sbb mov lret test fs (bad) rcr ficom in add lret js stos jno (bad) add sub cwtl (bad) rex.WB gs movabs mov mov adc (bad) cmp xchg rex.X movsl rex.W insb rcll fidivl push jns stos (bad) icebp movslq (bad) fsubrs mov callq in in xchg (bad) adc fstps sbb cmp pushfq fimull rex.RX rex.WRXB movabs cmp xchg add (bad) mov mov push scas movsb movabs pop fadd (bad) (bad) rex.B (bad) push (bad) rcr rex.WRX pop jbe retq fnstenv rex.WX (bad) mov mov movslq test mov pop leaveq int jns xchg callq jne cmc mov xor rex.RXB int lods jge fcompl or movl xchg lret lret mov (bad) jno lahf (bad) fildll lret fwait gs rex.RX add adc mov sub rex.WRXB gs (bad) fsubr in cmc retq loope pop rex.RXB adc movabs (bad) (bad) pop out repz (bad) (bad) (bad) scas cmp adc xlat jo and mov adc sbb xchg xchg stos pop sub repz stc lea cmp insl sbb fwait rex.RX minps xchg fdivl (bad) popfq push iret rcrl rex.WRB ja roll (bad) mov fisubl jne mov lock je mov cmc jno add movabs xchg mov stc jo lods mov shll cld movslq pop movabs retq (bad) sub cmp cmp adc fld enterq (bad) xchg or mov add pop (bad) (bad) mov or test in jmpq pop xlat (bad) push rcr out rex.RX mov (bad) (bad) rex.W rcll outsb jge clc rex.WR icebp push shll add (bad) lock sub imul loope or mov xchg test sub sar scas negb out lret mov lock and rex.WR movabs movabs push in (bad) gs sar movabs jnp fildll adc popfq repz inc or rex.WX je sbb in pop icebp (bad) ror (bad) and sub mov or fidiv rol in cld mov sbb xchg retq mov xchg fsubrs (bad) mov negl (bad) pop callq mov or cmp adc (bad) rex.WRX sti out lret shrl mov loope cld (bad) pop or jl fnstcw sub shll or jrcxz push loop add jle (bad) add (bad) (bad) rcrl repnz sti loope rex.RX faddl jnp fnstcw loope cmp sahf cli mov movsl scas adc faddp jno or or cmp (bad) in jg (bad) add test rcrl imul mov push adc callq xorl pop xor xlat (bad) add fisttpl (bad) rex.XB out pop es movabs stc fnstsw mov rex.WB sub add popfq movsb mov mov xor movabs pushfq popq mov sarl cmpsl add fisubrl (bad) (bad) or pop lods outsl rex.RB mov movabs imul gs xor sub insw rex.WRX lods jrcxz roll or popfq lret sub jmp add cmpsb (bad) rex.W rex.WB repnz hlt and (bad) jbe (bad) jns retq callq (bad) add int3 (bad) mov sarl adc mov (bad) rex.WRX and cmp mov rcrl mov (bad) je test stos sub shrl pop push rex.RB mov jae lods rol mov xchg and rex.WX stc outsl push fwait sahf pop sub shrl mov (bad) mov popfq (bad) (bad) adc rol mov (bad) jne and or retq and (bad) cmp test mov sbb sbb enterq loope imul (bad) or iret pop movabs roll pushq xchg push (bad) rex.W lret out sbb lods pop pop sub (bad) pop iret lret sbb (bad) jmpq data16 out retq (bad) jbe jge (bad) mov (bad) cvttps2pi mov shlb stos (bad) xchg xchg ss pop (bad) sbb rex.WRX and rex.R cli movabs pop jmp jnp rex.WR sbb outsb popfq xchg mov and or xchg and (bad) lea (bad) or lret fimull mov negl or leaveq jmpq rex.WR cmp stc sbb xor mov sbb mov cmpl cmpsb mov mul outsb lret mov jno rex.RB (bad) (bad) rex.WB sub ss rex.WRX add xor xchg and rex.RB rex.W addr32 retq mov cli mov jrcxz pop in cmp retq rex.B rex.WXB (bad) (bad) and lock test adc adc (bad) (bad) push push lret xor rex.WB sub fstpl notl (bad) xchg mov xor xor clc or retq lret lea roll movabs mov icebp pop pushq jb xchg add js mov xchg mov adc adc cltd xchg xchg divw (bad) mov mov sbb fistpl mov adc sbbl (bad) in enterq loopne sub cmp sbb lahf pushq mov sub vxorps mov fild (bad) gs (bad) jne sub sbb mov (bad) mov (bad) cmp rex.WX test mov loope lret cmp add mov test stc sub add (bad) cmp repnz mov adc int mov data16 notl fwait mov sub rex.RB rex.RB sbb fisttpll push add rex.RX in scas cmpsb xchg adc mov fwait test pushq xor (bad) push mov insb lret stc jle vphsubbw xchg fisubl mov mov xor lret fs xchg sub cli cld and xor or movabs cs fcmovnb sbb mov scas (bad) rcll pushq jmp sub sbb leaveq and add rex.R ja (bad) int3 rol xor sti stos lret xchg fisttpl sub xchg cmp add cmp mov int (bad) lret mov iret xchg movabs rolb mov jle or mov add xor jno test xchg lahf (bad) (bad) out rex add mov push xchg gs adc fcomps loop rex.WX hlt popfq iret inc (bad) mov outsl cmc enterq mov (bad) sub xor or pop insl rex.XB idivb (bad) sbb (bad) rex.B repz sar xor outsb stos cmp sarl mov (bad) (bad) sahf (bad) out mov add jae pop pop cltd mov pushfq mov mov mov test and or (bad) rcrl (bad) lret movb mov mov (bad) fsubrs lahf xor and (bad) rcrl (bad) scas sarl (bad) rorl or xchg fnstenv (bad) movabs callq (bad) xchg fstl subl mov cmp fisttpll rex.RB push movabs lahf xor xor test and (bad) lret rex.RB mov add outsb out mov lock mov (bad) mov jbe test (bad) es fst test add push adc (bad) rex.R cmp cwtl rolb loopne rex.WXB lret push movabs jl add (bad) shll mov lret cmp (bad) iret std stos and rex.WRB movslq lods cmp cmpsl (bad) xor test jb push add add test (bad) push mov pop push rex.WRX mov (bad) in jp fsubr sub sbb jge sahf (bad) or enterq jrcxz test in shll (bad) hlt addr32 imul mov sbb mov ss jp cld (bad) je shr lock js scas sarl add retq mov pushq add add rex.WRX ljmp enterq ja jo xchg lahf cs jmp sub jnp sbb (bad) leaveq ss rex.WRXB (bad) (bad) (bad) adc movabs sub (bad) mov sub (bad) stc lahf mov mov and scas cwtl leaveq cltd shr lret xchg xor popfq adc sbb stc jl xor push movsl mov (bad) pop test pushq xor add (bad) add or push js fstl mov fidivrl in jge adc test out fwait push int3 rcll push (bad) (bad) rolb shrl push out pop sti mov divl xchg notb adc out (bad) jo lahf add (bad) jbe imul push xor jrcxz (bad) sbb pop (bad) loop cwtl xchg push xchg (bad) mov mov mov (bad) loopne lret shll xchg mov js mov test callq xchg or pop faddl jg loop shl outsb pushfq std iret and (bad) adc (bad) xchg movsl mov adc loop and xchg and (bad) clc roll or rorl push push sub mov rex.WRB (bad) lret pop (bad) test nop and sbb push (bad) rex lock (bad) insl adc je cmp sbb jns (bad) mov mov sub repnz rorl or ficomp or roll jp cld iret stos callq rex.RB mov mov xchg jmpq fs subl mov in jnp roll rex.WX lea stc icebp adc rex.WB rex.B iret sbb sti mov sbb jbe in shrl std rex.B jg (bad) (bad) repnz rcr repnz shll leaveq and sbb (bad) rex.R roll xchg jmp imul pop sbb cmp loopne push push lahf mov push jmp in or jo mov jnp cmp mov in and (bad) in xor vmovq mov sbb cli sbb cmc movabs mov fistp (bad) rex.WX add movabs (bad) jae stc add enterq lret or xchg (bad) sahf rcrl rex.WX sbb rcrl jrcxz (bad) (bad) cli (bad) (bad) sub lahf scas xor add cmp push cld xor push cmp (bad) jl pop std (bad) movb cmp xor adc pushq push (bad) sarl push xor callq rcll fdivs cli movabs (bad) in rcll mov cmovae shll (bad) loopne (bad) rex.WX ss loop repnz movabs hlt negb repz sbb sub and (bad) and cmpl mov (bad) push sbbl fisubl xchg and xchg pop xor or mov rcll int (bad) stos (bad) and adc mov (bad) stos jns mov xchg nop xchg xchg inc cmpl fs xchg orb sbb cwtl (bad) mov movabs xchg (bad) movabs (bad) clc (bad) in sarl rex.XB sub adc jmpq rex.WXB out pop mov sbb xchg and and xor ds mov clc mov jge mov rex.WRXB faddl sub rex.B xchg fldt sarl fmull mov mov test sub rcr data16 mov pop and pop nop lret mov add jb xchg int3 sbb (bad) jmpq jnp rex.RX push sub out sbb and movsl callq outsb gs jmp add lahf xchg in (bad) mov test adc callq mov and lahf (bad) mov mov fnstcw mov imul sahf loop mov shlb std push jrcxz lret jmpq rex.RXB pushq cli rcr mov roll push (bad) shl fstpt (bad) jbe out sbb stc xor add push test jb lea loopne adc (bad) stc xchg scas mov mov rclw rex.RX xor (bad) or xchg icebp add fldcw rex.RX or test clc mov xlat pop cmc (bad) rex.X ja xchg xchg (bad) repnz mov cmp mov (bad) adc lahf mov faddl jnp pop retq loope rex.WX lret orl (bad) insb imul outsl (bad) movabs mov add cmp rorl data16 push stc pop mov jrcxz or sbb ror test stos int push xchg xchg rcll rex retq in (bad) add jge sahf out (bad) adc (bad) (bad) nop mov rex.WXB fisubr and add movabs jp pushq shll push jle (bad) pop out mov rex.WRB rex.WX rex.WB sbbb and sarl rex.WRX cmc pop outsl shr (bad) mov pushfq jno int3 mull andl fcmovb (bad) cmp pop incb xor mull jae mov fsubs enterq lea mov neg cmp (bad) jrcxz mov xor rex.WXB rex.WR fisttpll mov imul addr32 callq sub mov add (bad) jbe lock imul (bad) callq rex.WB mov sti icebp sti sub fwait rex.WX adc and insl adc (bad) (bad) iret rex.W retq divl and add sub (bad) (bad) adc (bad) or rcrl (bad) jne test mov (bad) mov mov ror idiv add mov mov mov int3 fisttp mov scas cmp outsl es icebp ds (bad) (bad) cmp sub iret rex.WR (bad) or icebp jle rcr xchg in sbb rol add rex.R (bad) pop jo icebp add rex.W sub jl (bad) ror retq fbstp push popfq mov iret fdiv and fnstenv xchg loope std jo mulb in push (bad) (bad) rcll mov (bad) shll fistp std jnp rex.WRXB mov and es (bad) movslq xlat cmp movsl stos cmp cli mov std int3 fisttp test and add mov jmp adc out add push rex.WXB test rcl adc rex.B pop add fiaddl fldl rex.WXB mul (bad) mov imul xor and rex.WXB add rex.WB rex.WRX mov and sub (bad) scas cmp jo xor rorl mov (bad) and rex.B sub sarl pop lods (bad) jo enterq or (bad) roll shl xor pop rex.WRX mov mov add xchg and jnp (bad) push mov shll mov push jrcxz (bad) cmp in xchg imul jbe adc push adcl icebp cmpsb and loope js stc callq sub popfq enterq rex.RB rex.B in iret imul jb mov jp rex sbb mov or shl (bad) pop je adc rcll rex.WXB sub movabs hlt movabs xlat andl jne sti rex.WR add (bad) (bad) jrcxz jle sbb int jmp (bad) (bad) jl sti (bad) loope fs jae and in cltd pop mov cmp mov and pop rex.WR mov mov mov iret shrb jge sbbl loop xlat pop rcll rcrb (bad) (bad) data16 repnz rex.RB or mov sbb addr32 add sbb enterq mov mov cwtl (bad) add addr32 mov repz and jne mov rex.B lock imul (bad) (bad) mov rex.RXB mov rex.B and sbb cmp (bad) rex.WRX rex (bad) sahf mov mov pop (bad) scas xor add cli addl cli gs out push jge movabs xorl rex.R out cmc jnp stc rex.WB (bad) repz mov shll (bad) lret (bad) rex.B cld and callq mov loope cmp es push in add (bad) mov (bad) xorl or pop js add popfq (bad) scas loope and adc test push rex.B jecxz sarl or push in int rex mov sbb (bad) rex.WR rex.XB in xorl out rex.RX fdivp xchg cli (bad) lret rex xchg push je in shrl sbb rex.WRXB stc and jl and shl jp or (bad) (bad) fild bnd sub add add and rex.RB push fbld rorl (bad) xor mov sbb push jne or movabs sbb push roll or (bad) ss jrcxz xchg push and test (bad) rex.WRB rex.RX loope and in iret (bad) sub push or pushfq lret retq out (bad) mov rex.RX jg movabs xchg adc (bad) jp cwtl mov mov retq (bad) (bad) mov rex.WR cmpsl (bad) or xor jo pop (bad) rex adc jbe rex.WR xchg in (bad) sub out add nop std loop jae rex.B mov insl mov xor nop lret out rclb fistpll cmp popfq outsl (bad) pop cli loope mov (bad) jb mov mov rex.B rex.WB add rcll movsb fstps loop add xchg sub sub mov andl and int rex.WX retq xchg jno fdivrl rex.RX repz gs icebp (bad) sbb xchg and (bad) pop movsl (bad) (bad) outsb ficoml xchg mov adc outsb movsl pushq repz xchg and (bad) movsb jge outsb (bad) movabs int3 and rex nop (bad) adc (bad) nop cmp xchg test rex.WR adc ud2 repz (bad) fisttpl out jmpq out pushq (bad) ficom popfq data16 pushfq xor jnp cli xchg xchg rex.RB add push scas movabs (bad) out (bad) out scas cmp lods jae (bad) xor xor (bad) (bad) jle push sub popfq and (bad) xchg (bad) movsb rorb sub add (bad) (bad) lea pushq lahf (bad) imul adc (bad) xor mov mov lret add jns pop fucom push cwtl addl rex.XB push in out mov cmp sub (bad) fdivs push add (bad) int3 (bad) and cltd je fwait nop fbld fstl add (bad) pushq cwtl ja mov (bad) int3 je adc jge test movabs ror rex.RX callq imul shll (bad) cs lret icebp movabs mov or icebp mov lahf imul xlat cltd roll mov jle loope mov rorl sbb mov iret lock push and jl test jg adc mov push (bad) callq mov repz insl rex.RXB hlt lock jae lret gs roll jp adc cltd rex.WXB pop frstor retq out fisubr push cmp sarl add rcll retq test cmp sbb test mov lods and sarl adc sub sbb sti add (bad) jno js enterq rcl xor mov and std imul cmpl fcoms test mov pop cmp callq mov or (bad) mov xor std jp jno add pop (bad) pushq movabs mov cmpsb cmp out rex.RB pop hlt cmp outsl pop adc movsb pop jo cmp insb pop or adc xchg (bad) rex.RXB push movabs sbb add add shll (bad) in mov push retq loop add test shll cmp mov je cli shr std lret or test lahf jae and rol scas mov (bad) (bad) pushfq movsl subps sub pop movsb roll (bad) (bad) iret imul and fsubs cmpsl movabs retq (bad) adc mov negl fldt pop push movabs jp and loop add add add retq sbb add jo (bad) push rex.WB or popq cmc (bad) flds rcl pop push popq clc push sbb enterq leaveq xor loop jge (bad) xchg mov jbe mov (bad) loopne push xor jns fsubr in loop sub cmpsl fmuls or sub std fcoms rex.WRB test mov xor xor pop or add sbb repnz push int3 adc hlt add movabs cmpsl test (bad) push fwait lea ror push outsl out sbb shll xor (bad) fnstenv imul (bad) shl rex repnz and push fwait icebp fwait xchg loope jrcxz rex.WR sbb mov stos mov push shll rex.RB or lods nop jl (bad) hlt or (bad) lret (bad) cmp repnz rex.RXB (bad) retq cltd add xor pushq incl mov push pop or repnz add (bad) movabs jg je lret push leaveq add (bad) movabs lahf int mov stos sbb (bad) fcos xchg rorl (bad) mov insb (bad) sub and shll xchg shrl retq cwtl push popfq lock mov add std (bad) adc adc (bad) out adc mov out (bad) rex.B addl stc rex.WXB jnp cltd movsb roll sbb (bad) sub rex.WB (bad) (bad) mov fsubrs (bad) jle adc (bad) mov loope add rex test pop out mov pop pushfq sahf (bad) repnz add mov jle movabs jno ss mov cld (bad) mov rex.WX xchg hlt (bad) cmp jno xchg std leaveq (bad) repz loope rcrb out lock pop xchg jmpq sbb xchg shrl sub shll cmp (bad) push (bad) lret rex.WB roll rex.X jae sbb mov cmp fcmove imul iret rcll xchg enterq xchg roll pop (bad) lret xchg adc loop cmp sarl pop sub add shrl xor ffreep pop movb (bad) rex.WX roll mov movabs outsb cld add vxorpd mov rex.B add push movb rex.WB (bad) cld movsb (bad) cmp retq jno rex.RX jg fadd add and fiadd cmpsb add (bad) rex.RXB xor xchg pop decb (bad) in adc sbb rolb retq insb (bad) cmp (bad) cs movslq cmp cwtl repnz scas rcll xchg (bad) callq shll push jns (bad) mov (bad) sahf ds rex.R add mov rorl cwtl pushq sbb (bad) pop xchg js out jle (bad) mov cmp add (bad) jae (bad) and xchg scas lahf xchg cmp and rex.W sub pop (bad) rcrl repz imul cmp insl sarb sub out add cmp (bad) xor cmpsb (bad) mov addr32 addr32 or rcll cmp mov pushq mov add (bad) (bad) or loope sbb add cmp mov (bad) pop lret rex.WRX int jl jno adc scas (bad) and xor and test movslq fidiv fwait pushq jnp rex.WRXB sub roll xor rex.WRX gs (bad) rorl (bad) add js jnp xchg adc adc repnz out rex.WX add (bad) std rex.WRX loop nop callq add pop add ffree jg (bad) andl and (bad) or jrcxz (bad) rex.WR movabs (bad) fadd sub (bad) cld test roll repz jrcxz (bad) xchg sbb std xchg test sub pushfq and rol callq mov sbb shll shll rex.RXB outsb rex.R and push rex.WRXB shll repnz (bad) movabs jle rcrl jmp pushfq rex.WR mov movabs cmp fcomps mov pop in xchg retq lahf mov insb lods mov iret or xor push mov shlb or and rex.W cs ss movabs callq data16 lea out fiaddl mov rex.XB and sub mov adc mov pop mov (bad) pop mov xchg or orl or rex.RXB rcrl test rex.WB sub divl mov callq jmp rex pop push fadd jrcxz out fldlg2 jl fld ds fisttpl out movslq shl and xchg mov jge adcl xchg mov cmc xchg clc cltd (bad) xchg sub sti rex.WRB rex jmpq or mov fadd cld xchg (bad) (bad) (bad) add sbb iret cmp (bad) rex.WRX rex.WB fbstp lret add (bad) pushq pop push movabs (bad) out icebp rcrl fnstsw shrl pop rex lret jp rcrl mov cmp (bad) push loope or loop (bad) mov (bad) xchg callq icebp pop stos je (bad) fild stc (bad) add fidivr xchg (bad) gs mov cmp testl sub callq lahf enterq jmpq sub mov mov adc fsubrl loopne movabs rex.RB jl or mov pop mov sub cwtl jns xor and add sbb jmpq add pop mov or loope loopne ss pop loop insb mov cmp jb mov hlt add sbb movabs (bad) test rex.WB fdivl or roll add cmp sahf and mov mov add stos xor add jb xlat shrl retw cwtl test es int3 in jno rex.RB rex.XB retq (bad) (bad) cmp jno push add (bad) popfq retq cmp rcr retq jmp loopne mov mov in stos push lods movabs sub push lods xchg and fidivr xor test mov push out (bad) xchg and rex.WRXB xor or loopne rex.WR ds (bad) rol repnz test movabs repz cmpsl imul addr32 pop mov rex.R cmp push add subl push (bad) (bad) pop shrd (bad) iret enterq (bad) test sbb jg fnop xchg lret (bad) rex.RX mov (bad) pop push std rcll movslq mov test icebp mulb iret push lock iret (bad) lods sti test rex.RXB and retq mov (bad) in insb mov xchg sub (bad) mov pop addr32 test fidivl fstpl rex.RB rex.RX lahf xchg in movsb cwtl (bad) (bad) jg push rex.WRXB (bad) icebp mov iret cwtl mov movabs cmpsb cmp pop and rorb or sub test mov scas (bad) push rex.R (bad) (bad) cwtl fstpt jge in je ja rex.WX repnz lods fsubrs sbb movsl (bad) or sub pop movabs in push lock (bad) jno and cmpsl rex.X push fnstcw jno movsb rex.R jmp cmpsb add (bad) fisub repnz scas movabs sub xchg rorb xorb testl pop pop (bad) out cli adc (bad) icebp rex.X movabs out repnz out rex.W mov add sti rex.RXB out (bad) mov add rex.WRB xor (bad) or lcall repz mov (bad) enterq (bad) fsubrl sar xchg cmovge rcrl sbb rcll movabs cld sahf add sub (bad) xchg (bad) mov insb lret ds sahf adcl add adc (bad) lea rcll hlt sahf jg (bad) callq es js push movabs or imul cltd clc lret stos cmp std loop sbb (bad) repnz push loop stc pop add adc or jmpq or sbb flds xchg jge and addr32 test cmp pop ds jbe rorl push push stos (bad) loop (bad) sbb mov xchg in xchg sarl add jg or mov xor xchg notb adc (bad) xor (bad) jp (bad) cmc (bad) imul (bad) (bad) adc (bad) sarl rex.WRB rcrl test rcr dec mov xchg adc in lahf ss mov cmp shl lods sub push push xchg fildl fbstp ds rex.R cwtl outsl rcrl mov xor pushq pop iret out xchg (bad) and stos fwait pop jbe rorl jns (bad) pop xchg (bad) popfq xor (bad) pop push fcmovnb rex.WR shrb cli or cmp (bad) retq xor mov rex.WRX jmpq rex.RB cld adc scas frstor leaveq test roll rex.WRXB punpckldq push jrcxz sub rex.RB add test push shll (bad) cmp (bad) mov rcrb (bad) rex.WRB add jb xchg or pushq ja xor (bad) and movabs xor lret fldl fisubl add rex.WRB out rorl loopne and jrcxz repnz jne add pop xchg imul gs jb je data16 sub mov (bad) faddp scas (bad) rex.RX rex.W adc (bad) xchg rex.B movsb or mov pop rex.RXB fcomps icebp (bad) xchg (bad) pushq xchg out rex.XB andl (bad) scas enterq fcomp rcrl xor outsb lret (bad) xor idiv xchg movabs retq out push adc mov movabs pop movabs push out jg shrl insb pop jg cmpl add scas pop rol rex.XB enterq adc jno (bad) cmp jbe rex.XB (bad) test fwait xor adc roll movabs outsb jb (bad) sbb push rol test push repnz mov adc (bad) fnstcw xchg retq (bad) sub rex.WR cs in pop and (bad) jge insb adc mov rex.WRB xlat mov add rex.WB adc mov xchg data16 rex.B loop rex.RXB sti mov (bad) rcrl mov rcr (bad) cmp (bad) or xchg int3 loop and lret in pushq sub (bad) scas fidivrl in mov sbb lret fcomp test (bad) (bad) rex.WRB push int movabs fistpll sbb in rex.W mov fdivrl push adc jmp mov rex.WXB stc test (bad) ss movabs mov jg or lahf (bad) addl (bad) xor movsl jae (bad) outsl rex.B mov retq repnz pop (bad) add std add mov add pop push cltd pushq outsl jno ror and in xchg mov fidiv rex.W rex.WRB test rcr rex.B (bad) test cmp cli rex.WR mov pushq movabs (bad) add jne bnd rex.XB sub rex.WXB and xchg jmpq (bad) or fsubrs callq mov cmp in stos mov rex.RB rex.WRX jo add stos stc rcrb rex.RXB cmpsb mov (bad) mov push rex.WRXB push test pop mov fildl iret rex.R xor adc jmpq pop push movabs mov add xchg fs rcr mov sub sbb sub stc sub mov (bad) cltd sbb rex.XB rex.WR mov mov jg repnz mov cmp fcmovnb out mov rex.XB sub mov (bad) cwtl fiaddl cmpsl retq repnz enterq (bad) je (bad) repz test ja (bad) rex.WRX shlb mov paddb fadds jmp data16 (bad) scas fildll mov loopne in leaveq sub sub (bad) leaveq loopl int3 addb stos sub jrcxz add jno mov (bad) test xlat mov fs (bad) int3 callq js (bad) iret rex.WB ds mul data16 sub scas rex.XB movabs mov push (bad) je mov (bad) rclb cli add (bad) mov and sbb je in scas out (bad) rorl pop push pushfq test int3 (bad) shll rex.WRX or (bad) cmc xor ds jl test fs movsl (bad) sub mov (bad) and add (bad) sub push lea int int cmp rex rclb movabs mov outsl jae (bad) data16 gs (bad) jo and add fcmovu cmp rex.RB add cmp rorl push (bad) sbb sarl sub (bad) mov stos int rex.RX sarb mov in add popfq xor lods push stos (bad) out (bad) sti cs push lea mov jle ffree mov jae pop sti mov lret sahf xorb sub rex push mov movsl (bad) adc sbb sbb rex.X fwait shrb cli hlt outsb frstor rcrl pop shrl sbb mov rex.WB movsb pop (bad) cltd outsl jne movabs push rclb adc in popq (bad) pop sbb (bad) rex.WX xor (bad) (bad) test imul hlt push test sti sub jmpq stos rex.RXB push (bad) (bad) (bad) fidivl xchg in xchg test shl or adc clc add rex.RX (bad) vshufps rex.B addr32 rorl adcl jmpq (bad) and rex.B lods mov in sub stos jne cmpsl mov jnp (bad) gs mov sbb movabs (bad) push mov and test sar imul push jno negb loopne xor out sahf sub (bad) loop repz pop cld imul in enterq xchg cmpsl mov int3 sti repnz addr32 (bad) mov repz fld std or sahf mov scas or mov mov lock push xlat negl jmp rex.WXB clc sub movabs out fsubr rex.WB and jmpq stos push sub test movabs jl push cwtl jmpq shl shll sub or callq insl shrl or enterq (bad) lods sbb pop and stos or je test cmp loope sub push popfq (bad) scas rex.R xor orb (bad) mov int jo loop xchg shrl mov xchg ds stc loop xor in insl sbb pushq lret or and cmpsb scas rex.X loope cmc fsubl rorl imul cmp jb xorl cmp out adc sahf adc shl (bad) and pop (bad) test (bad) fidivl ja push (bad) out shlb xor xchg in popfq mov (bad) xor rol xchg cmp lret scas (bad) icebp rex.XB movabs movabs rcrl add adc (bad) (bad) scas repnz rex.XB pop pop mov xchg mov (bad) mov add std rorb sub es fadds xor sbb sub mov rcrl js test jnp pop (bad) (bad) repz retq pushfq jbe int3 stc js shll mov out loop cmp pushq in lret scas fldcw mov pop rex.WRXB rex.X shr rolb pop iret iret push pshufw xor jp (bad) (bad) jne roll xchg add cmp (bad) scas adc or shrl shl (bad) fwait sar fs movabs mov roll rex.WX fcmovnb mov repz enterq (bad) rex.WRX callq leaveq add ffreep (bad) xchg loopne ja js repz pushq mov or (bad) leaveq push cld mov mov cltd fdivrs (bad) stos rex.RXB fildll nop mov mov stos cmc (bad) mov (bad) outsb out jb lret rcl stc xor (bad) (bad) lret (bad) sbb pop xor mov cmp rex.X jo mov test (bad) outsl gs and jno int3 pushq repnz (bad) (bad) callq mov data16 scas (bad) sub (bad) sahf xor (bad) sub testb mov mov lret rex.WRB mov mov cmpsl in test repnz loopne fwait fs orl or mov xor (bad) sahf callq rex.B loopne mov mov xchg shll sub stos out pushfq pop (bad) jnp jo mov sbb shll (bad) or (bad) (bad) rex.WRX (bad) jmp addr32 jne mov std (bad) cmp xchg pushfq fsubs stos rex.B nop test rorl out (bad) sub push shll insb (bad) rex.WX (bad) push rex.R roll jae movabs lret pop iret mov or sub rcrl pop outsl add (bad) sahf jp rex.XB lret (bad) rcl fildll mov loopne rorl add lret mov rex.RX or xor cmp (bad) (bad) (bad) pushfq pop or jne rex.W xchg ror cltd sbb mov sahf rex.WB lret sti movabs (bad) sbb (bad) jle adc xchg insb data16 mov cmp rex.WX xabort movabs (bad) repnz push (bad) and pop lods (bad) sub adc xor rcll fcompl hlt pushfq cli int mov (bad) stos out lret xchg jp and icebp (bad) retq (bad) xor sub add xorl rex.WXB cmp test in jne rcl iret leaveq jno (bad) adc addr32 in sbb sahf retq gs (bad) cmp add xchg or shrl rex.WRXB outsl mov jns out (bad) and loope xchg (bad) test loop fnsave (bad) jle mov jp pop outsl and push add bswap test loopne (bad) shr insl sub gs mov (bad) fucomi sub and in mov hlt rex.WR es mov add or (bad) stos pop shl xchg push rex mov jbe lods pop rcrl fwait cmp lahf scas fdivrs add jo jp adc xor sbb rcll adc decl lea int vpinsrw std and push es in (bad) xor and xchg cwtl pushq mov sub xchg shll ja lret sub rorl mov roll mov lahf movsb xlat iret imul rex.WRB shll test rex.XB rex.RB rex.B mov scas rex.WR xlat movabs imul add mulb rex.WRXB sub pop (bad) pop cwtl push in outsl fnstcw sahf jge scas sub jl rex.RX cmp out cwtl xchg outsl (bad) imull or rorl rex.W in push shll stc sbb or rex.B test sub in shr fstl lret cmp gs jg xchg test jns rex.WRX mov outsl lock (bad) sarl and rolb rex.B (bad) mov adc and cmp (bad) jae rex.RX sub or rex.B mov or je mov (bad) (bad) (bad) jns roll (bad) loop jne rcll repnz (bad) or cmc pushq add mov rcll out in xchg sarl cmp loope (bad) repz callq negb insb push roll popfq or rex.B or jnp cmpsl lret sub stos add push movabs sarl std cmp callq rex.XB fld sub fnop not xlat retq xchg (bad) mov (bad) in sub rex.X rex.W cwtl mov test icebp in (bad) xor fwait insl rex.WXB icebp sbb push push cwtl (bad) mov fadd add fwait xor sbb loopne enterq and repnz callq jae or add and leaveq mov cltd add cmp enterq xchg (bad) add pushq and xchg lods rex.WRB add sahf (bad) scas xor cltd in cmp fadd jne retq scas jle adc add stc rex.WX ss push cmpsb push test adc lods mov divl xor repnz xchg sbb (bad) lret cld pop push cli (bad) shll sub neg mov scas rcl jne outsl (bad) add (bad) mov rex.RXB sbb adc addr32 mov xchg rcll addr32 stos pop add loope (bad) sbb sbb (bad) jae movsl test sbb fucom lret jge push retq shrl int push (bad) sarl (bad) stos xchg (bad) jae (bad) cmc mov retq shl rex movsl push (bad) jns rolb cmp in lods jo mov rex.WRXB pop rex.WXB (bad) shl adc clc shll mov pop (bad) jae repz loope cs xchg movabs adc adc (bad) std rex.X xor callq adc (bad) mov int3 cmp mov outsl (bad) stos out pop shrl xor movsl repz sbb callq psraw jge sbb sarl out mov push pop movsb push out (bad) ja mov (bad) jmp shr stos test (bad) add out (bad) jle pop insb jbe jns movabs cld xchg shl fsubl pop xchg push loope (bad) jbe addl retq jae adc cmc or rol jo or (bad) stos leaveq (bad) adc insl (bad) notb icebp (bad) (bad) insl xor stos (bad) int fisubrl sub xor movsb rol add mov rol add jrcxz nop and jnp fimul retq or shlb xchg popfq lods rex.B movabs jno sbb lahf movabs lret sarl mov cmp cmc ljmp es add shll mov lret ja fbstp rol adc sub mov xor notl adc pop mov rcl fist mov (bad) and mov pop stos lods mov repz movsl imul incl add test (bad) hlt and push mov retq adc enterq jno test stc rcrl pushfq insb jo and sub orb movsl loope cmp mov add retq cwtl adc xchg rex.WRX push fsubs add mov (bad) fprem or xchg stc pop lea loop rex.B jno and in jmpq (bad) ror insl and movl add xor divl faddl xchg loop xlat push enterq test and repnz xchg jb pushq rex.B rcrl ror imul stc scas sub bnd mov mov pop enterq sbb rex.B rex.WX adc hlt movabs sbb mov and rex.WRX mov jl shll pop sub rex.WRB jl mov rex.WX pop outsb mov xchg sub rex.WRB (bad) or (bad) rex.RXB sub xchg int3 mov xchg lods (bad) movslq leaveq sarl andb sbb push test cmp nop rol fist mov pslld cmp push xor shrl mov xchg andl or roll cmp push (bad) rcr xchg movsl sub mov callq jp fsubrs loop cld sub pushfq cmp (bad) pushq (bad) jb push int3 cmpsb jle fmul movabs xchg movsl jne (bad) push pushfq imul cmp xchg test gs jrcxz movsl push (bad) callq rcr (bad) rex.RB lock add lret (bad) rex.WRX push and xchg add movabs rex.WR xor roll xor (bad) lods insb add int (bad) mov sahf xchg mov cmpsl nop (bad) icebp (bad) mov mov xchg rex.XB or jne fild xchg fs (bad) callq sub movslq leaveq adc push loopne sbb (bad) movabs (bad) roll (bad) ffree jns ficom add add incb pushq rex.WRXB (bad) lock push mov rex.WB movabs (bad) xchg (bad) cwtl sbb (bad) int movabs jmpq loop insb movabs jnp sahf ja ss lock pop jl in mov or rex.W lods rex (bad) movabs push shl stos pushfq rex.RX adc rol mov (bad) or sbb (bad) and addr32 sar callq (bad) std (bad) mov sbb nop test mov movslq pushfq pop add adc (bad) (bad) lods mov cmp adc (bad) pushfq rcrw pop in out rorl pop cmp scas lahf lret and in push out sub insb lock xchg xchg stos cmp add rex.WR mov jb movabs movslq mov mov xchg (bad) scas adcl rcrl addr32 movabs pop pop pop pushfq ss rex.RX (bad) adc pushq js xchg pushfq mov cmp add lock movsb pop adc sub (bad) rex.RX cmc mov roll imul movabs mov mov lahf (bad) mov and jbe add or and cwtl push mov (bad) xlat jg insb mov xor (bad) sbb movabs lea lods loop mov xchg xor adc (bad) sarl and rex.WB test jnp shlb cli fwait xor sub sbb mov out rex.WXB gs in mov in shrl add cmpsb (bad) xor test (bad) xchg (bad) rep mov add pop cmp rex.RB int3 nop popfq lret jmp xchg fs mov add rolb (bad) sub (bad) xchg adc adc decl movabs sar cmpb (bad) lea (bad) mov (bad) mov notl or ss imul rex.WXB mov (bad) lahf lret rorl add xor cmp rex.WR loope lahf jle pop push out (bad) (bad) push leaveq mov rcrl xor mov xchg mov sub std callq outsb loopne pop adc out mulb xlat push rorb xchg nop sub rcrl cld popfq pushq cwtl lret mov jge shll shll and ror (bad) (bad) push (bad) out scas ss rol test xlat rolb leaveq pushq (bad) js mov mov in add lock flds pop mov mov (bad) mov retq (bad) push adc enterq lods rcrl ds lret sub cli rex.B rex.WXB jmp retq (bad) outsl and movsb jo sbb xlat push rex.WR idiv xchg jmp sub xchg rex.B (bad) fidivl test rex.WR rex.WX data16 cmc outsl popfq jg stc (bad) pop scas xchg fsubl cmpsb insb (bad) loope add movabs movabs xchg stc or or fwait int3 jns xor cmp xchg push loopne (bad) add mov mov xor sarb adc ja (bad) xor cmpsb sub fiadd (bad) (bad) rex.WRX mov pop sti cwtl mov jnp rex.B mov rorl adc iret mov (bad) out xchg cs (bad) ja adc cmp lods mov outsb rex.RX rex.WX xor (bad) retq notb ja xor (bad) jae sub xchg (bad) cmp mov (bad) fmulp jo sbb xchg andl (bad) test fwait shl lret pushq cmp movabs cmp rex.X cltd insl repnz xorl in test jns rex.RB rex.WX (bad) and and retq int xchg mov es jne scas rol int3 mov in xchg movabs (bad) mov (bad) outsb and jmpq retq mov add sbb std cwtl or hlt mov rex.B (bad) push and rex.RB rex.WB clc leaveq icebp rcrl je adcb cltd popfq testl rex.RX or rex.W rex.R mov rex.XB test add adc rex.WRB iret in jns (bad) int pushq in orl xor sub adc mov lods xorl adc adc jg xchg nop shll cld repz (bad) (bad) mov add rcrl lods add pop mov movsb (bad) mov stos (bad) scas xor (bad) push cli hlt movabs mov clc cld or mov rex.B rex xor cmp push inc out insl (bad) sub rcrl add fstps outsl mov shrl add sarl jl addr32 mov and push jmpq (bad) mov std jmpq (bad) repnz pop adc (bad) cmp push (bad) leaveq cmp lock push js sub out add xchg (bad) cmp and movabs add (bad) xor cmp push jl fsubrl sarb mov (bad) lret int (bad) rorl out retq adc rex.X imul in jle enterq (bad) (bad) add (bad) (bad) xor (bad) callq rex.RX fisub cmpl pushq out out shrl (bad) ror (bad) sbb (bad) rex.W rex.B jns cmp negl fs in xchg mov (bad) mov adc fbld ds cmp and jge out jbe push xchg jmp mov (bad) cmp mov (bad) rolb test cmc (bad) jo repnz jae decl in jg rex.WB sub add push cmp pop jno movslq lahf ror movsl jg (bad) std or rex.WR rex.W and sarl pop jrcxz (bad) jae mov (bad) cmpsb popfq jmpq loopne fsts xor and jno sarl movabs cli pop std rex.RXB sub sti adc pop xor adc adc and cs movslq in (bad) (bad) js jno add cwtl xlat loopne and faddp roll movslq movsl movsl (bad) sbb pop loope ja sbb cmp repnz mov sahf in mov cmp (bad) rex.RB negb sar pop lods mov (bad) (bad) (bad) shll sbb frstor (bad) loopne xchg cmpsb push sub sub fwait sub ficompl and mov loope mov rex.R sub repz jo (bad) mov (bad) jrcxz add insl push and ss sub (bad) and pushfq (bad) (bad) xchg (bad) (bad) and movabs std movzwl lock fistpl (bad) retq cmp fisttp std callq sub xor imulb (bad) (bad) movslq (bad) (bad) xlat xchg lea (bad) popfq movsl in fadd loop (bad) stos mov (bad) (bad) pop xchg add xor (bad) ficoml enterq popfq rex.W xchg ffreep rclb fwait and xchg (bad) (bad) xchg cmpsb sub or mov stos gs and shrb ja rex.WRXB mov xor mov adc jmpq lret xor jrcxz push jb mov fidivr rex.RB rex.RXB cmp ror sbb mov rex.XB rex.RX cmp insl (bad) sub push sub rex.WRX test mov and scas xor mov loope adc pop movsl std cmc sub sub jo mov jge scas repnz xor sub jmpq callq add fsubr or stc and fiadd fisttp rorl push (bad) sarl mov push in add xlat imul mov fisubr mov xor mov (bad) shlb callq cmc insl push rex.B pop (bad) pushq mov (bad) (bad) in ror negb (bad) cmp roll xlat add (bad) fcmovnb (bad) scas (bad) lret and ds cmp mov or (bad) jno iret mov xor stc lea adc popfq and xchg add sar or xchg push loope cmpsb fsubs mov (bad) (bad) iret lods sub mov clc rex.RX (bad) roll push (bad) mov sbb jo shll cmp rex.WRX shrl push sti push loope mov rex.RB (bad) rex.WX cs rex.B fs mov ja mov fchs fs imul adc rex.B cmp sub mov (bad) sub adc xchg shrl add jnp mov repz add std (bad) lock rex.B add andb (bad) cltd js mov sqrtps push mov popq pop jne (bad) shrl imul rex.B pop roll shll add fstpt ss mov xchg and nop lret xchg add (bad) (bad) jp test fwait add jns rex.WXB addl xchg shrl loop pop stos pushq add sarl cmp in retq rcrb pop xlat outsb ror nop cmp in (bad) push mov shll or (bad) jne xchg add add cmp pop xchg pushfq fstp retq cltd outsb push rcll (bad) iret subl int3 lret adc sti rex.B rex.WRX mov roll test lret imul (bad) push mov jbe rex.WR fsubs add cmpl (bad) (bad) ss (bad) pop xchg cmpsb mov clc (bad) (bad) lods (bad) lea rcrl push roll rex.W (bad) shrl fwait shrb mov lret ds imul cwtl cmc push rex.RX jns push mov cltd fisub or decl lahf mov (bad) xchg push mov test jle adc lea gs rex.RXB jnp lret (bad) cld mov mov push (bad) cmc fsubs rex.B mov shr fs xor xchg mov rcrl (bad) (bad) lret sbb movsb cmp (bad) sub vorps pop (bad) adc (bad) lret and rex.XB movsl ss test sub add add (bad) movsl cltd test sbb and xor rex.X add push xchg test (bad) sarl movabs rex.WRB rcll xchg mov (bad) (bad) rcll test mov jp xchg jb movabs lea rorl cwtl (bad) ljmp rex.W out mov xchg scas jae sarl std xlat and movsl shrl push subl enterq (bad) adc ffree scas (bad) out out mov cwtl rorl rex.RB cld xor (bad) or lock push mov xchg in or mov outsb (bad) dec jp (bad) roll xchg movabs jmpq adc shrl cld iret or loop fisub add and jbe rdmsr insl movsb push adc sub idiv rex.RB rcr (bad) xchg movabs adcl imul add jmp leaveq outsl rorl insl loopne icebp repz adc sbb (bad) (bad) jae (bad) sub rex je bnd data16 mov (bad) retq add imull fwait repnz cmp add (bad) push shr cmpb push xchg jle shrl in mov fndisi(8087 shrl frstor (bad) mov shrb lret retq xor xor out xchg (bad) and icebp pushfq int stos movsb cwtl pop and adc imul and (bad) cs sbb rex.B (bad) es pop (bad) pop mov add movabs iret movsl mov imul add push movslq repz (bad) ficoml rex.WXB or movabs in out xor (bad) in lret lods fidiv (bad) mov callq test not add roll jb (bad) fcoml rcrl pop enterq xchg shrb and repnz jnp mov rex.R mov and sti (bad) rex.XB lahf in cmp sar test xchg (bad) mov rcrl add xor (bad) (bad) stc rex.X mov mov outsl xchg rex.RB insl jmpq rex.WRXB rex.B fiaddl (bad) loope rex.WRX or xchg adc mov (bad) rex.WX cmp rex.RXB repnz scas movabs (bad) mov outsl jae mov cwtl lret mov xchg xor movabs jle lret add mov mov fsubs (bad) lret sti mov roll cmpsl loopne adc out pop (bad) sub lret jl add (bad) idiv cltd mov xchg in add (bad) (bad) ds cld lock cs in sbb pop mov xor (bad) xchg jrcxz movabs rex.W retq enterq fpatan (bad) rex.W roll adc and ds in rex cs (bad) outsb cmp xchg cwtl lret std mov adc (bad) shrl out es mov add mov (bad) loope int xchg sbb mov xor adc (bad) out (bad) mov imul mov xor (bad) xor fcmovb mov xchg imul movsl flds in sub cmp insl sub adc stc shrl or sti pushq rex.X ss sbb rex.B rex.XB lods sarl cld rol mov test cmc sbb test test (bad) (bad) rcrb mull (bad) xchg xchg fsincos adc and sarb cmp sbb fwait rex.B loopne rex movabs pop in rorl js pushfq stos sbb xchg pop (bad) mov repnz in lea (bad) (bad) push (bad) shll callq rcl mov xchg rol mulb (bad) rex.WB insb cli add std jg in cmpsb xadd (bad) (bad) mov mov rex.XB ss sahf lcall cmp xchg lret (bad) rex.B repnz xlat mov (bad) add jno shll pop fstpl bnd fcmovu and (bad) xor divb adc sub scas addb pushq jmp mov add xlat (bad) scas in xor (bad) pushfq rex.WR (bad) adc test clc adc retq fdivl lret (bad) leaveq testl rex.WRB lock and (bad) or adc fstps rex.WR out outsl lret pop (bad) lods or retq sbb sti cmp lahf rex.X insl cltd (bad) rex.RX sub (bad) mov lods add jmp stos pop fsubrl loopne pop or xor pop sub mov (bad) cs xchg pop repnz adc sbb add xor add (bad) (bad) sub (bad) xchg test xor pushfq rex.B pop (bad) (bad) lret adcl sub cmpsl push repnz cmp imul mov mul pop cmp (bad) sub (bad) loop rex.WRX rex.B lods icebp adc adc or mov movabs xchg sub sub xchg fsubrs (bad) (bad) (bad) cmp sbb sarl movsl xchg repz (bad) sub sar adc mov hlt cmp lock int stos fcoms movslq cmp pop fcmovnb and shl icebp lret xchg rex.RX rex.WRX fisub roll callw lret xorl push jmpq (bad) mov mov (bad) mov adc insl adc lret jmpq (bad) retq add (bad) loope es stos movabs rex.WRX mov movsl (bad) xlat ja adc rex.XB add pushfq mov xor shrl adc (bad) xchg test (bad) repz in cmp xchg pop shll jp sub shll (bad) es adc (bad) xchg jg (bad) (bad) fsubs fnstsw xlat out mov or xchg pushfq mov rcrl test jno sbb movq mov stos (bad) ja push mov mov shrw ror orb (bad) (bad) int enterq mov xchg xlat fldl mov cmp and cmc xor jg (bad) repnz adcb xchg mov xor test lret data16 cmpsb xchg in enterq insb addl (bad) pushq jne fst out (bad) (bad) jno (bad) xchg andl mov cmp rcrl fs js loopne insb mov (bad) mov mov adc sbb lods (bad) jne hlt push and subb rcll (bad) rex.R lahf int adc and cli adc sti gs imul psllw (bad) jne rex.WXB imul sahf insl movsl roll jmp fsubp repz mov mov fisttp movslq es push (bad) scas jmpq xchg rex.R rex.WRX mov addr32 popfq (bad) lods (bad) jbe cs or cltd cmc addl cmp not imul jmp rcll faddp xchg pop add (bad) or mov (bad) sbb in mov pop add (bad) fldl jl fdiv cmp lea enterq (bad) pushq outsl lods movabs xchg or (bad) add iret rex.WRX mov test repz mov and (bad) (bad) mov sbb pushq iret je (bad) cwtl leaveq (bad) (bad) (bad) and pop mov lods movabs stos sti and rex.R addl pop out cmp and fistpll callq repz andl or push scas popfq sub sahf testl rex.WX addr32 (bad) add in sub roll negb sti rcrl rex mov (bad) pop add movb callq xor stc (bad) fs pop in jbe in imul movslq rex.R pop pop or fimull iret jb rex.WX sbb loopne adc (bad) jge shrl add leaveq loope xor insb cmp rex.WRXB lret cld rex.RB std xor mov decl (bad) ds insl fnstcw imul rex.WRXB xor ror add imul imul sbb sub mov es in xor mov cmc jg rex.WXB jno jne fild jl xchg (bad) cltd pop xor adc add rex.WRB cmp retq icebp or test mov (bad) xchg in or loopne subl mov add sbb add cs mov push mov pop mov cltd or xor push (bad) mov (bad) cmp loop jmp orl js retq pop push shll pop fldt xchg mov pop rclb mov rorl fmuls rex.RX mov or std mov stos (bad) xchg push roll int3 rex.WB jno cmpsb jnp nop cmpsl rex.RXB fwait xchg sar rex.WR mov (bad) sarb repz rex.RXB xchg (bad) add std shrl int3 or jne xor clc movsb (bad) int push cs mov add mov sbb rclb fwait sbb in add (bad) sub in stos cmp in movsl jo or rex.RB cs sbb popq push fs xchg cmc pop jmpq (bad) out cltd cmp xor and jne add mov shrl movsl (bad) lock mov xchg (bad) xor hlt subl rex.WB clc scas (bad) sbb (bad) jb cmp cwtl xor (bad) enterq mov rcrl cmp scas jl sbb mov stos imul or adc std (bad) retq ss and int3 (bad) shll and cmpsl add popfq push sbb rol (bad) cs xor loopne movabs (bad) push imul rorl ds pop stc rcr jmpq (bad) sbb and lret cmp mov scas iret test insl add jno and mov adc xchg (bad) andl fcmovne shl mov lret sub (bad) xchg push mov rorl hlt (bad) fcmovne (bad) add jrcxz ficompl cltd mov pop mov adcl mov mov int3 sbb adc rex.WRXB pop movabs cmp (bad) movabs out (bad) retq xchg xchg clc mov rex.WRX (bad) sub jbe repnz rex.RB xor jge mov std and xchg jns cmp or or pushq rcr mov movabs cmc mov iret (bad) lock rex.RB fs (bad) adc cmp or movabs fcomip (bad) (bad) push repnz or jg shl jl movabs sti xor jb cltd jns sar (bad) (bad) mov xchg ja (bad) cmp sub pop retq std mov sub push outsb nop hlt fimul sarl lret lea sar gs int3 lods xchg rorl (bad) pop sarl sbb addr32 fmull (bad) (bad) mov (bad) and shr push jmpq cld rex.RX rcr mov sub clc mov movabs pop lods sbb adc popfq and imul outsl rex.B (bad) jns rcrl or push jge cltd (bad) and mov add mov sbb fwait test (bad) mov mov (bad) movsb cmp test shll fistpll shrl js rex.WR repnz std rex.W rex.X mov roll addr32 push mov lret push (bad) testl mov js add cmpsb pop (bad) and sbb (bad) stos movabs movsb add int (bad) shrl movsl popfq pop mov shll jno sbb (bad) cmc fucomip mov loop,pt jo int3 and adc add loopne int3 retq sarl setnp adc cmp mov cmp movabs movabs xlat mov xor or (bad) (bad) jge lea adc (bad) (bad) mov mov loope rex.B data16 loopne xchg outsb (bad) loopne xor hlt cmpxchg add out pop movabs stos mov cmp js push cmp pushq pop xchg ds (bad) and rex.WRX rex.WR rex.RXB add sub push xchg rcll jl mov mov sbb jo ror mov fcomps sub (bad) flds jns clc lods fldl loope adc (bad) lahf add mov stos rex.B sbb retq or jmp callq rex.WRB in push flds mov add fisub pop pop rex.WB mov jmpq loope push movabs mov iret sbb div (bad) fsubrl xor (bad) ror popfq adc push fist mov xchg fnop and pushq movsb pop pushq rex.WRB fisttpll fdivs mov iret mov idivl (bad) pop lock xor (bad) mov hlt cmp std (bad) or pop neg jne iret pushq mov mov xor xchg ja out iretq addr32 shr rex.WB (bad) roll adc sbb (bad) imulb (bad) loope callq lods jb push xchg shl movsb mov sub jl jbe out (bad) sahf mov vmwrite repnz movabs (bad) sub lret rex.WR mov pop movups pop xchg mov xchg xor scas add rex.WX push pop pop pop callq fwait sarl fucom popfq pop adc rex.WX xchg push shr test mov adcb popfq add sarl lods (bad) pushq jl sbb add adc mov xor jns retq movabs in stc mov std (bad) test fsubrl mov xor (bad) loope (bad) repz out mov jo cltd rex.WB adc or fnstsw scas imul lret mov in rex.W out ds sub int3 mov fidivrl pop sub movabs add loope cmpsl pop sarl xchg ss sub outsb (bad) xchg test rex.RXB and jae int loope out jp loop sub pop pop test jbe xor out or data16 fadd leaveq mov insl movabs jmpq rcll rex.WX insb sbb mov shll adc push adc outsl cmc (bad) (bad) mov shrl sti cwtl imul mov repnz je loope rex.RX (bad) (bad) movabs rcll sarb cld or rex.R sbb sbb cld rex.XB (bad) pushfq (bad) rex.B (bad) (bad) imul hlt js int sbb out push xchg pop rex.WRX add sub sbbb rex.WRB pop jae lea xor (bad) jne pushfq mov retq (bad) fildl xchg callq (bad) test adc pushfq jg rol lret lods icebp cwtl mov shll jle push (bad) retq adc fwait jae push mov xor cmp repnz (bad) (bad) push nop ss loop addr32 fnop mulb (bad) mov xorl mov mov (bad) divl cmpsl mov lods add sub outsl jae sbb cmp or enterq outsb cltd (bad) sub add lock gs (bad) rex.WB mov lret adc ljmp (bad) mov jae push rol cli scas mov (bad) xor or loop add jo cli xchg gs in (bad) cmp rex.WB add rex.WXB sbb ja add mov mov (bad) imul shrl push gs test lret push xchg fcmove out movabs vmovss outsl (bad) neg pushfq hlt ficomp mov sar add or sar jns in stc rex.X (bad) stos adc rex.B cwtl scas add and (bad) loope out cmp add cmp movl mov add rex.WB or (bad) sbb sbb lock add cltd iret and pop movabs rex.RX (bad) jl out lahf and jns sub rcr hlt jo,pt mov (bad) in rex.X adc shll loope test add xor (bad) mov insl or push or scas pop adcl (bad) lret xlat loop (bad) or (bad) xchg shll add push jbe xor lret add pushq std xchg sbb in retq cwtl lret and fdivp callq mov out (bad) rex.X ficomp adc rex.RX or data16 sbb add adc js xor mov push cmpsb rex.X imul (bad) movsb adcb cmp lahf mov cmp lods movabs (bad) adc cwtl js (bad) jmp and enterq (bad) test cmp or imul rcrl jbe test jl movabs test out cli pop add pop ficompl fistpl xchg mov (bad) sar add adc jno rorl sub ss shl pop stos jo iret rcll and push movabs jnp rorl pop test xor fwait sbb lock idivb mov fdivr retq push rex.WR xchg inc sbb xor (bad) rex.WXB cs mov pop (bad) (bad) je fldcw rcll cmp lea rex.WR outsl or (bad) loope js enterq (bad) mov movsl (bad) or out roll stos outsl jne (bad) (bad) gs adc or out outsb icebp movabs imul addb (bad) add jl callq jp rex.WR xor sbb adc xchg iret movabs mov insl mov scas jg sarl sti rex.WXB (bad) add push clc mov pop sub and cmpsb mov jge jmpq cltd subb (bad) adc scas rex.WRX pop cmp rcll fs (bad) addr32 mov sbb pop fldenv stc out mov out push movsb push shrl stos in jns ror add imul enterq mov mov shrl rex.RX xchg rex.W fistpll sub sarl pop sarl fidivrl xor add int3 (bad) fimul cli jno retq xchg enterq (bad) roll xor leaveq std hlt mov ss lret mov adc (bad) adc lret jns lahf pushfw rex.B mov pop rex mull cli add adc rex.WRXB (bad) sbb iret (bad) xchg fldcw xchg enterq (bad) (bad) outsb mov movabs add or insl cmp sbb add imul sbb mov (bad) cltd sub mov mov stos movsl (bad) jno insl in je std movabs adc ja rcr sbb rex.W or shr mov pop rex.WRXB fwait xchg (bad) rex.R test mov test mov movabs adc fbld push stos jge sahf mov (bad) (bad) (bad) retq pop xor in out adc std (bad) loope add mov mov in rcl mov (bad) mov je int add rolb mov jp rcr add jne xor roll loop sub js pushq test movabs sub loopne cli retq and rorl pop or lods cmc mov rex.WRB sbb rex.RB and outsb mov and push sarl fwait xchg add pop rex.WRX pushq in cmp shrl sub mov push insb js fcmovnb je repnz cmpsl (bad) fld mov gs mov sub (bad) rex.WX test sub jb int3 or repnz mov in movabs sbb iret movabs (bad) mov sbb movabs (bad) test leaveq sbb push (bad) (bad) xor repz sub (bad) data16 sbb fstps in cs add (bad) int adc (bad) repz cmpsb (bad) rex.W push leaveq sahf rex.RB add cmp (bad) or lods jge jns imul pop xor (bad) in insl cmp and movabs movslq rex.B xlat scas sub lods shr fcmove loop mov cld sahf iret push cmpsb add (bad) insb rex.X adc (bad) fcoms movabs sahf (bad) mov in scas shrl rorl leaveq jno add lret mov movabs xchg sarl adc mov (bad) adc (bad) (bad) jbe (bad) add rcrl (bad) (bad) pushfq or test add cmc push flds (bad) cwtl (bad) mov xor mov outsl pop (bad) (bad) cld fcompl xchg mov jp nop and fidivrl pop cmpsl sarl xchg mov pop rex.WRXB rex (bad) pushfq (bad) jb movabs movabs movabs (bad) (bad) (bad) sub adc fcoms cmc mov jns out rorl xor std pushq (bad) or enterq (bad) ss in rex.X adc (bad) jl or enterq adc (bad) movabs in lock pushq (bad) sub cmp fmull pushq mov xchg loopne (bad) adc pop (bad) xlat or adc rex.WRXB (bad) scas lret mov mov sbb rcll (bad) stos imul fcmovne insb sti lock rex.WXB and sub insb mov in movb nop fistl (bad) or push (bad) imul mov push movabs jp lea cmp movsb rcll xchg cld mov scas stc rex.RB test xor mov shrl mov (bad) iret movabs push (bad) adc cltd ror jnp or outsl mull (bad) cmpsl icebp movaps (bad) or xchg rex.WB (bad) test rcl shrl sub loopne (bad) imul rex mov push int3 shrl fistl sarl addr32 (bad) (bad) xor ror xchg add callq loopne add (bad) cli sarl mov movabs test pop sub or test shll rex.WX or out test test cmp rex.X xor rex.WR pop sbb (bad) pinsrw sub retq (bad) mov cltd sti mov lea outsl mov ja retq (bad) and in mov add fimull jrcxz movslq cwtl (bad) (bad) cmpsb xchg push sbb sbb and std pushfq test sub lret adc fstl (bad) xchg roll xchg pop jae or js scas mov test cmp movabs adc rex.R rex.WRX pop (bad) fwait rcl push test rex.RX sub rorl clc (bad) out or (bad) sti idivl retq add lret sub add std rex.RX stc sub (bad) pop test lret xchg (bad) mov movabs (bad) (bad) adc pop jle (bad) rex.XB xor push cwtl mov enterq mov xchg mov movsb mov pop (bad) (bad) push rclb or enterq pop xchg rcll add (bad) int xor leaveq retq mov in ja out rcr jo jle pop (bad) lock movabs (bad) rex.WB cmpsl pop (bad) sub sbb repz push adc sbb (bad) push divl jge movabs fs xchg sbb in (bad) fcomps (bad) (bad) xor clc lock xor pushq (bad) movabs int in sbb (bad) rex.XB loopne sbb lret mov mov or jno pop (bad) (bad) jle andq (bad) (bad) (bad) adc add jrcxz (bad) (bad) rex.B pushq or rex.R js rex.WRX or (bad) shrl push add push (bad) sbb mov sub hlt sbb rex.RX insl movabs outsb test sbb xchg lods mov pop or fwait mov fisubrl cmp rex.WRB hlt pushq (bad) notb adc js rcrl jae pop insl and (bad) pop lods rcr ficoml xor adcl rcrl jl add and cmpsb leaveq rcll rex.WRXB mov sbb shl movslq (bad) push test int in fsts shll sub in fisubrl fadd or icebp fwait (bad) je push loop mov test sbb outsb push sub xor jo out rex.XB add repnz rex.WX data16 iret outsb cmpsb lock sub ror orb scas mov pop lods (bad) shr mov shl movabs out in test lret retq and fstpt xor shl mov (bad) loope enterq jbe lock cmp xchg pop jle sbb (bad) stos xor movl push rcll jg (bad) jb cmp xchg add stos outsb iret out cmp cld push imul add push vshufps fldenv es lret adc loope sti (bad) push jnp hlt insl (bad) xor and xchg in jge and cmpsb jnp mov test int3 (bad) jo push (bad) rcr retq adc callq movslq leaveq sbb test push movabs vmaxsd stc cltd jmp mov add cmc adc (bad) cmp (bad) add sahf xor add and fmull mov rex.WXB (bad) ja scas test rex.WRB sti mov sub mov and test rcl xor popfq icebp (bad) loopne movslq movsb and rex.RXB hlt lock iret rol mov (bad) in (bad) repnz clc lea cmp xor cmp xorl scas rex.WRB jle (bad) (bad) (bad) testl shll sbb mov lret movabs test jno rcr xor movslq (bad) mov mov (bad) cmpsb loope fst (bad) rcl jrcxz in sbb popfq rex.WRXB rol rex.XB push ror cmc pop or xchg mov (bad) rex.WXB sub rex.WRXB pop (bad) test or nop (bad) adc and hlt xchg int3 (bad) adc add push fldl imul push mov rex.XB (bad) (bad) sub fsubrl xchg add in jg rcrl std int3 (bad) fisubl mov fnstsw (bad) or lock movabs sub and rex.RXB mov (bad) nop mov pop xor add in subb roll mov (bad) mov int3 jmpq rorl sbb ja push mov scas vucomisd fdivrl mov jns hlt es lods shl repz sub or shl lods (bad) loop cli cltd (bad) or rex.WB sub cmp push clc cmp es (bad) rex.WRXB loope push (bad) leaveq loop imul or retq sub lock (bad) mov stc mov push xchg rex.W (bad) jns repz es callq int test pushq mov add js cld ss mov psraw jae adc jns retq cld xchg pushq cmp adc add leaveq rex.B cmpsl xor outsl or scas adc lret fld xchg or rex out and test xor push xchg and jno negl loope sar rex.RB mov (bad) popfq mov pop stc push retq faddl cli rex.WX insl pop (bad) fwait and pop rex.W outsl rex.WX pop movabs gs clc sbb in cld out xor (bad) mov es data16 mov xlat and (bad) int loopne (bad) js in retq out popq (bad) popfq rex.RXB pop retq sub pop pop (bad) rex sbbb jb data16 rex.RXB rolb pop (bad) jae sub sub movabs jp or fdivl shlb push rcll cmp mov jrcxz and andw imul movabs callq pushfq or rol or movabs scas adc mov (bad) add idiv movabs rex.WR (bad) iret push jp shlb (bad) (bad) sub add jne xor adc mov rex.B cli mov iret nop jl imul cmp (bad) pop clc mov movslq jae rex.WB insb (bad) xor lods stos rorl mov mov incb retq mov imul fs rcrl icebp jg sub cwtl std ror ficom iret mov mov mov xlat hlt fist rex.WX mov mov fwait (bad) sbb xchg out push roll mov iret stc stos pushfq lods (bad) loop roll (bad) adc xchg fnstcw xlat add inc (bad) mov stos jne in int stos (bad) repz movabs (bad) mov gs fnsave rex.B jrcxz cmc xchg sbb (bad) sarl sbb or scas rcl je in sahf xor (bad) divl imul and mov loope (bad) cmp scas pop or push lods imul push jrcxz add sub cmp icebp (bad) (bad) in addr32 repnz movsl fildll callq (bad) mov jle andl (bad) or (bad) push or andb lret pop sti leaveq rex.B cs pushfq stos test (bad) jg xchg push cmc outsl repnz lock imulb and roll lock fwait mov add shr (bad) out (bad) cmpsb mov cli sub and movabs out jle int icebp rex.WRX out fldt js scas (bad) cs loope lret sbb (bad) rex.RB stc pmullw int3 (bad) (bad) (bad) xor icebp movsb loop rex.WXB int mov loope testb popq and adc callq sbb cmpsl testb xchg jmpq pushq push stc jrcxz add or clc sahf sub mov add sbb adc lea clc xchg fistl retq lods sar or shlb push out cmc xchg sarl cmp jo xchg flds xchg rex.B jl int ffreep or js (bad) adc push lods add shll (bad) (bad) lea callq add xor negl jne shrl and rex.RB push mov push adcl (bad) push mov sub cmove fidivrl jnp cltd scas imull rcll shrl rex.W rex.RX andl xchg mov retq icebp lods xchg (bad) xor and mov lret in rex.WRXB (bad) sahf out fildl ja stos rex.R ss loope (bad) push insb rex.WB add jmp adc (bad) rex.WX sub stos lods (bad) or pop (bad) (bad) (bad) xchg rex.W jo (bad) xchg movsl and and sarl cmp (bad) callq jne pop gs xchg mov enterq jbe imul jo xchg mov shr xor rex.WRXB pushfq sti repnz add roll and fcmovnbe sar sbb add jrcxz (bad) (bad) pop lods repz rol lock jne icebp vunpcklps and out rcrl test rex.R callq and sbb xor cmp sahf push shll and (bad) or shrl cwtl movabs fldenv (bad) jns movslq addr32 imul popfq xorl (bad) (bad) hlt mov test retq (bad) (bad) mov test pushq xchg sarl fwait push mov sarl sub and adc push sti in cmp (bad) (bad) scas movabs rcrl (bad) and jbe pop pop pushfq test out data16 adc pop loop xchg insb sbb fdivrs xchg ss mov and fld rex.B pushfq in add (bad) push cld stos add fstpt fstl mov xor outsb xchg out sbb jnp movabs std pushq rcrl test adc (bad) loopne mov mov jle movslq adc fidivrl add rex.RX (bad) and stos loop jp retq xor rex.WRXB mov enterq (bad) pop addr32 (bad) and loope (bad) (bad) pop add lret add stos push xchg xor rex.X sbb (bad) imul sub (bad) stc rex.WR rex.RXB jle (bad) rex.XB lock fild or and loopne xchg sahf (bad) or mov mov pop rex.RB xor rex.WX jmp js jae xor test imul (bad) mov xor ja and or jne test pop lahf imul rex.RXB (bad) sbb mov in loop add or iret (bad) (bad) jbe sub stos fdivl mov cmp adc rex.W mov pop rex.WRB (bad) mov (bad) add sbb jae and subl rex.RB (bad) sbb cmpsb jg (bad) cli xchg xor (bad) and add jnp xchg fidiv fnstenv movabs test fucomip movsl stc sbb xlat xor rex.WXB xor movslq and and cltd shr jb xchg xor mov xchg mov fwait out fld fsubrs xlat add pushq push cmp int3 jl cli sti frstor shrl loop shr andl (bad) iret xchg ja mov cs (bad) lret out out jl (bad) mov shll push xor sub jbe (bad) jmpq (bad) (bad) sub xchg fisubr outsl cld rex.WRB add sar popfq js jno and sarl pushfq (bad) push outsl or or rcll imul test lods (bad) outsb xchg repnz jns repz and xchg in push shll stc rcll lea fidivrl (bad) mov test mov adc xchg pushq and test push (bad) and stos xchg lret movsb cmpsl (bad) rex.X gs rorb rex.R iret jo lock movabs pop movups xor cmp (bad) mov incb fnstenv icebp movabs cmp (bad) cmp adc popfq mov cwtl fldenv push insb loope iret fwait cli fdivrs int3 stos lock sahf rex.WX or movslq retq rex.WRXB clc rex.X pushfq fisubr mov sbb callq rorl sub rex.WR sarl rex.WRXB rex.RB rolb or xchg xchg scas add lods jns (bad) rex.B rex.RXB (bad) fisttp pop or rex.WRXB jae ror sbb (bad) push in mov fadds adc xchg callq pushq xor rex.B iret jg mov (bad) rex.WRXB imul mov jb iret pop rcrb and xor ffree stos out out rex.WX xchg sahf rex.B pop (bad) jo mov retq adc sbb sti fldl (bad) jl adc out (bad) sub test (bad) adc sbb sahf cwtl shll xor pop ljmp sti mov fmull sahf adc fwait mov loopnel (bad) iret (bad) and mov popfq mov movsl xchg cmp (bad) mov or out (bad) xor cmc sahf mov (bad) fsubr (bad) xchg xchg movslq jge mov push xchg xor in loopne sub rex.XB iret xchg sarl stos sbb adc shll push lret (bad) mov xor xchg rex.WRX adc (bad) lods and and callq retq add sub rorl (bad) mov fwait add fdivs shr test xor (bad) ffreep (bad) (bad) and test jmpq ja hlt sub mov push mov and sub sbb mov fadds or (bad) jmp mov (bad) add ficompl jp (bad) and cmp (bad) pop rcrl xor ja int3 sub movabs negb movabs imul pop add sbb mov sub test jp xchg rex.WR push sbb mov rex.WXB cmp callq (bad) pushfq scas mov push movsl movabs stos movsb rex.RX sub repz rcrl movabs mov lret notb rex.WR int3 movsb (bad) mov leaveq and rex.RXB jns movabs fucomip shrl hlt (bad) rex.WRB js scas rcrl mov shr mov rex.WR push out mov rcl rex.RB sub in (bad) xchg xor (bad) test jmpq ror mov rcr data16 sbbl push out jo and xor xchg jnp and (bad) xor sub fiaddl mov movabs add stc insb sar je insl xchg rex.W sbb mov mov rex.R sub out push cmc (bad) adc movabs (bad) fdivr test insb jns cmp movslq pop in jae rex.WB int scas clc adc cmp pushq rorl (bad) add mov pop rol (bad) jb add pushfq je (bad) xor fs cmpl (bad) mov (bad) jns shll loope (bad) sahf stc push iret (bad) jg (bad) in jno push sub sarl movabs fbstp in sbb sub (bad) rol fnstsw cmp shrl mov gs rex.X push jnp (bad) (bad) (bad) rex.WRXB icebp enterq (bad) lahf push (bad) fcmove loop or loope sbb popfq (bad) rex.R (bad) add add add xor (bad) sbb negb sbb stos and (bad) fldcw rex.R add clc iret add rex.XB leaveq mov mov jno and and pop or shlb xchg add imul jge gs mov mov (bad) out fbstp xchg sbb push add int3 (bad) test cmpsl or pop fucomp xor or rex.WR rex.RB nop cltd int3 add sbb (bad) (bad) rex.RX cld rex.WRX retq mov ss fcompl fldl2e stos rex.WB rex.WRX test or mov (bad) xor pop (bad) in rex.WR and sarb rex.WR jp ljmp popfq repz testl jne adc rex.RXB mov or and in test (bad) cwtl loopne (bad) (bad) pop in and out rex.WRXB in mov cmp enterq rex.RX lahf xchg sbb (bad) xchg flds stos mov xor test jl jge pop test outsb mov rex.W hlt rex.R jo mov mov out imul movb jge or fidivrl mov imul movabs (bad) (bad) mov (bad) int in ljmp in nop cmp push add data16 (bad) and jbe xlat gs adc imul nop and rclb iret add lock add xchg stc fwait adc adc loope (bad) stos cwtl mov (bad) push xor xor sub add (bad) sub fdivrl rex.RXB (bad) jrcxz and test rex.RXB push fst mov xor lahf sbb repz fistl add fidivl rex.RXB jg mull sbb in pop mov (bad) (bad) icebp xchg jae xor xchg icebp sub mov lea lahf cwtl out xor (bad) sub jmpq pop cmpl mov jl xchg enterq (bad) add sbb lret push rex.RB es in and movslq leaveq xchg adc rex.RXB pop pushq cmp cmpsb pop sbb (bad) jmp add mov pushq loope (bad) repz cmpsl push mov or in sbb mov cli rex.WRB fs mov mov or (bad) movabs xor adc movabs mov or rex.WRX clc jrcxz cmp repz fcmove jmp je mov sub (bad) sub jle push xor mov pushfq enterq idivl pushq fimull pop std repz xchg rex.W jns (bad) mov cmp lahf leaveq (bad) xchg subl fistl movsl fimull imul jo cmpsl sti leaveq rex.R int3 xchg mov push cs jae jge rex.B add fidivrl sbb (bad) rex.WB fist clc rex.WX movslq push stos mov (bad) adc retq jmp frstor adc rex.WRB rex.WXB int rex.WRX leaveq pushq punpcklbw loopne (bad) stos and (bad) pop hlt mov movd add rolb mov mov loope lret rex.RX add fnop fs sub push vmovd jno sub (bad) (bad) stos sahf leaveq rcl mov mov (bad) sti mov cld add callq jmpq jo (bad) adcl jg and (bad) repz jae lea mov xor in (bad) jrcxz loopne xchg in stos (bad) add rex.WB fistl lods in jge xor iret push (bad) add repnz (bad) mov mov cltd xchg (bad) ss and js in (bad) fimul ja sbb ficomp test lahf scas in fsubl mov gs jno jle test sbb ds imul imul lahf add push outsb (bad) mov (bad) jnp fcomps scas mov rcrb jb (bad) (bad) jne adc stc and sub add enterq rex.WB add idivl and insb (bad) div xor test addr32 and rex.WRX fwait test push pop std xor xchg add xchg cmp add xorl jmpq rex.WRXB rex movsb je lahf (bad) cmp (bad) mov sub idivb rex.W loop pushq stos cmp jle ja movslq sub sub mov adc mov ffreep cmpl adc rcrl cmp adcb rex.X jge out in mov cmp and repz mov mov data16 in je cwtl rex rex.WX xchg (bad) and mov shr jrcxz in xchg and adc rex.RXB addr32 int3 rex.R sti push cmp in sbb mov movabs mov fidivrl xor ss sbb sahf out mov (bad) (bad) movsl jbe leaveq adc insb (bad) (bad) fldenv cltd icebp and and subl xor fnstenv pushq rex.XB movabs (bad) xor in mov adc and sbb leaveq xchg stc and (bad) popfq sarl addl jo int ficoml mov (bad) sbb (bad) (bad) jne cld enterq lods lods int (bad) shrl push gs js xlat sar decl jno xchg jbe push rex.WB rex.RB mov rex.X (bad) test sbb hlt add push shll push pop and push sarl lods (bad) sarl push xchg lea add (bad) movsb lret and rex.XB (bad) mulb push rex.WX cmp addr32 rex.WXB scas add sbb (bad) mov (bad) out test sbb lahf jp rcrl (bad) (bad) xor rex.W mov mov movabs jo jbe cmp and fwait mov xchg mov pop rolb sbb imul cmp (bad) out nop add jl jno cmc (bad) (bad) and pop out (bad) roll rcrb (bad) addl (bad) enterq jle cwtl nop add xchg fildll rorl adc xchg out adc add scas or (bad) (bad) mov jae lret in pop incl out imul out mov fdivs push stc push in mov shll jbe mov mov pop rex.B lea push pushq fwait mull xchg cmp push ja subl (bad) sbb jb xor icebp add (bad) movabs pop (bad) negl push rex.R sar andb or (bad) rex.B stc (bad) jno icebp push ja movabs (bad) fstpl fwait std clc pushq add or (bad) xor lahf jl int3 pop rex.RB jle js cmp (bad) out repnz scas push clc pushfq (bad) (bad) pop jns scas adcl sbb test jg (bad) and and xchg rex.B imul popfq rcll ds sti xor rcrl out out (bad) or and push rex.RX (bad) sub adc (bad) movslq ja add sbb fstpt sub test imul xchg std in lahf hlt mov lret xor pop (bad) (bad) rex.RX xor cli loopne pushfq out add rorl (bad) outsb pop movsb or xor (bad) icebp xlat cmpsb jle (bad) (bad) jne jae jl sub (bad) mov out (bad) and cmovns jae in pop jo rex.RX movsb rorb ror (bad) in loope rex.RB pushfq mov push add (bad) add (bad) nop (bad) and cli (bad) ror pop scas int3 ficom clc cltd retq cmp iret xchg js (bad) push retq cmp push (bad) int3 pushq iret cmpsl decb std xchg pop (bad) adc rex.XB push mov mov movslq xchg xchg fidivrl lret cmpsb push mov scas stos adc repnz popfq jne movabs mov add movabs jnp push test xchg sbbb lret loope cmpsb add cmp push cmc cmp shll jno stc xchg add mov rcrl mov shll jle repz jae outsb sbb xor clc rcll push and lahf xchg rex.X rex.WXB sub (bad) iret add lahf retq mov jle mov fidivl popfq (bad) js sub cmc shll fmulp (bad) xor roll jae out (bad) xor (bad) roll cwtl pushfq callq imul mov rex.WRX cmp cwtl shl and mov repnz imul sub (bad) shll shll int movslq xchg rorl (bad) (bad) jg cld imul mov lret (bad) ja add icebp jb loop sarl in rex.WRXB pop push sub ja iret loop (bad) xchg xchg (bad) xchg (bad) (bad) (bad) js es sbb (bad) loopne cmp or and rex.WB add sub rex.WRXB mov xor bswap movsl (bad) xchg out loope push ja int3 popfq or std sbb add xor jg jne test int3 push (bad) xchg sub rex.WRXB fdivrl rex.B pop icebp (bad) callq mov sub (bad) mov cld jrcxz cmp (bad) xchg rorl sub outsb xor fwait loop adc mov lret rcrl sub pop pushq xlat (bad) mov (bad) outsl jb sub push (bad) clc movabs (bad) nop pop rex insb outsl sarl and cmpsb in movslq sub (bad) pop pop sar cwtl fwait (bad) jae jp in rex.R rex.RXB adc mov fdivrs movabs sbb (bad) test (bad) lret hlt and repnz or rex.R (bad) xchg insl stos movabs sbb rex.R rex.WR movslq sti (bad) rcl rex.R xor and (bad) mov adc (bad) (bad) adc test cmp in repz loope,pn sub mov fucomp jmp pop imul add repz ja (bad) (bad) jno mov mov add add rex.RB cmp xchg frstor callq insb jo rex.R (bad) mov loopne rex.RB outsl and add retq sbb pop mov (bad) rex.B repnz add (bad) out movabs xor loop (bad) stos fisttpl mov int movsb (bad) rex.WRXB mov rol sbb rex.R (bad) xchg in jmpq push rex.RX xchg int3 (bad) xor hlt pop adc test mov movabs sub mov test jp or lahf mov (bad) sbb imul std movabs sbb and enterq loope rex.WXB and xor sar movabs sahf movabs rex.B and roll sbb (bad) cmpsb iret and mov (bad) gs jp xor in jge push xor mov (bad) lods cld lret data16 or (bad) push (bad) rcll xor and cmp hlt mov in vpshaw movabs jo jbe fldenv rcll add rex.WB mov rex.WRB mov insl pushq xlat out add (bad) in faddp (bad) cmp nop add (bad) mov xchg push pop xchg leaveq rorl and cltd fdivrp (bad) jno (bad) addr32 add movabs cltd and xchg sub cmc adc movabs cmp xlat (bad) pushq (bad) (bad) mov out adc xchg adc rex.R xchg mov (bad) cmpb and xor jp rex.R repz (bad) (bad) rex.B (bad) fs mov or mov and outsb sub cmp rex.WX icebp out (bad) push stos add xchg or adc movabs xchg (bad) sbb clc (bad) rex.WRB fs outsb bnd (bad) orb int3 (bad) jb lods cs sbb outsb lret cmp (bad) (bad) rorl cmp rcll orl or mov test testb rex.B cmpsl paddd iret and shlb movsb jo pop sar test sub sub sarl out out cwtl adc clc loope mov xchg (bad) or enterq and lret cmc xor in pop (bad) jno jl (bad) shl pushq or push roll mov iret add and pop fucomp (bad) insl mov jno lock fdivr js mov xor add movabs (bad) movabs lock xchg movsb incb mov (bad) mov jb cs enterq adc cltd (bad) sub repz or stos (bad) or rex.RX rex.WX rex.X lret xchg shl xchg pushq or mov rex.WXB fwait xchg or lods xlat rcll out mov out ficomp sbb loope adc (bad) cmp jmpq (bad) (bad) stos (bad) (bad) mov repnz push rex.WRXB cld sub lea sbb movsl lret loop (bad) cwtl icebp lods (bad) outsl add out xchg (bad) add sbb cmpsl scas mov icebp add int std fst (bad) mov cmc xchg cmp jge pop (bad) popfq xor roll rcrb lahf adc movsb orb mov in add testl (bad) mov test cld out (bad) xchg outsb and int jl pop movabs in cld (bad) xor mov jle retq std or movslq roll fdivrl mov out cmpsl and (bad) rex.WX lock stc jns (bad) or insl sarl add (bad) mov callq pop cmp test fistpll test movabs int3 sub sahf rcll pop insl shll lahf mov and mov shr sbb (bad) cltd xchg cli outsb movsb shr jle add mov adc hlt enterq leaveq lret retq jge or andb popfq std (bad) mov mov xchg cld lcall rcl std movabs adc (bad) pop in pop rcll fmul outsl jne roll add pop cmp add (bad) cmp rorl jno cmpsb (bad) jl retq fsubrl cmp xchg mov mov sti lret out jmpq (bad) add adc loop rex.XB rex.R scas xchg or fistpll roll inc sbb mov adc xchg int3 lods or jle rex.WX ss sbb (bad) idivl sub rcrl test mov mov mov (bad) (bad) rcr (bad) cs adc mov lock cmp cltd data16 mov cmpb rcrl cmp lcall (bad) (bad) sahf sbb test test (bad) mov cmp rorl rex.WRB fldcw test orl mov mov leaveq rex.WX cltd sub pop rex.RX and lret mov mov outsl (bad) rex.WB (bad) xchg test (bad) sub retq popfq (bad) imul fnstenv cld repnz mov and test fidivr callq fidivl lret ja lea xchg iret loop clc sahf rex.B rex.WX fwait icebp (bad) callq xchg (bad) sbb data16 fcoml in lods rcrl rex.RB adc (bad) fistl movabs (bad) shrl jmpq (bad) jle adc (bad) mov pop test pushfq push jrcxz repz mov push add fbld (bad) pop fstp (bad) outsl cmp movslq (bad) add cmpl jmpq fild (bad) divl (bad) fs cmp sbb int xor scas fsubp xchg scas repnz shr ss (bad) in rcll lods (bad) scas pop xchg scas movsb movsb cmpsb imul stos in or (bad) je clc rex.XB pop xor jae std ljmp roll sbb rorl mov pop pop cmp in (bad) jne sbb jp sbbl mov xchg jg adc xchg ds rcrb pop (bad) cmp in jl icebp cmp rol int sub sbb or shll (bad) add and (bad) jl (bad) xchg movabs sbb mov outsl (bad) (bad) loope rex.WRX out repz imul rorl (bad) in jl out int in (bad) rex.X subl (bad) retq (bad) mov negl cli jns mov rex.XB mov rex.WR lret xor imul sub ror rex.RX lret (bad) movabs lods hlt (bad) mov sbb mov (bad) adc out bnd or adc lea int3 stc jo lret add insb (bad) ja push fucomi push adc or pushq test (bad) xor adc (bad) pop adc jb (bad) jo mov jle rex.R data16 rex.RB add cmp sbb (bad) (bad) xor xchg push outsl clc xchg push in test sub movabs mov repnz movslq jo movsl adc jp mov (bad) scas je mov (bad) imull movabs or mov cmp (bad) sbb stc or and jrcxz rex.WX add scas xor leaveq push (bad) clc (bad) sahf sub cmc test (bad) and or cmc (bad) sub fnstenv movslq push mov repnz movabs shlb push orl out lods (bad) movabs enterq loope insb or clc (bad) (bad) adc (bad) adc cli pushfq sbb (bad) repnz cmp fcmovbe cmp (bad) rex.B mov (bad) outsb (bad) xlat sbb mov (bad) sub cmpb loope mov movsl and icebp (bad) lock in sti scas push pop sub pop jo (bad) sbb (bad) rex.RXB ss cwtl (bad) rex.RB mov xchg (bad) rex.W out mull rex.R jnp fsubr movabs outsb xor and adc mov push lret shl sub jge push movsl mov add pop cmp lods popfq push add cmpsl pushfq xchg xchg xchg rclb mov pop fcomip xchg pop fisttpll push insl rcll sbb movabs push sub sahf sarl ss lahf fisubl int pop rex.WRXB rex.B cs and pop outsb (bad) je rcl (bad) sub repz adc shl movabs rex.WRXB shll rcll sbb lahf in jne xchg (bad) sub rorl cmpsl sti rex.RXB ja rorl (bad) xor push movabs shrl pop enterq (bad) lock (bad) jge mov je xchg rex.WRB imul xchg callq lret loope (bad) movabs std mov cmp cltd scas mov push rol jle (bad) movhlps (bad) mov jge rorl addr32 jmp jp cmp add rex.W fwait movabs jne in mov mov add cmpsb scas push (bad) (bad) rex.B leaveq loopne xlat lret sub (bad) rcll gs popfq (bad) mov shrb lea add cmpsl jne (bad) jo outsl xchg (bad) or data16 sbb (bad) mov out mov sbb cmp sub and repnz jmpq or mov add fdiv jl add (bad) ficom outsl rex.WRX rcrl sub (bad) movslq xor cmc iret rex.RXB xor imul shr int3 or rcrl add or addr32 iret hlt (bad) sub jae add icebp es cmp sbb jno push je jp pop (bad) (bad) mov xchg iret jnp lods jg sub rex.B scas and mov rex.B int roll push movabs jle imul adc mov fxch xor rex.WR faddl pop rex.B jns add retq rex.WRX out fcmovnbe rex.X sbb pop (bad) (bad) cmc mov adc xchg rex.WRXB outsb jns movabs mov (bad) jrcxz (bad) sbb jrcxz or cmpsb repnz data16 enterq jne mov retq mov mov lea rolb stos ss jp (bad) jg divb jg movabs mov pop mov (bad) (bad) cmp jrcxz mov cmc add lods movsb (bad) clc subl in (bad) repnz rex.W cmc gs jmp sub callq xor or test (bad) cmp repnz or add mov enterq sub xor pop repnz sub rex.X movslq mov adc ja sbb (bad) movabs loopne mov imul push movabs callq (bad) adc xchg pushfq (bad) rex.B push mov fistpll sbb xlat rex rex.WX subl imul (bad) sub pushq adc mov mov rex.R cmp push int3 rcrl decl lahf sub loopne or pop xchg sarl mov std xchg lods rex.WR rex.WRXB mov andl (bad) cli out or jne in xchg je cmp rex.X cwtl test iret (bad) xchg add (bad) or add sbb mov cmpsl xchg fnsave js jno pop incl rcrl gs mov rol data16 rex.B mov jnp (bad) (bad) imul push adc out movabs cmc and lret (bad) pop sbb sub addr32 rex.WRB rex.RB loope add (bad) fwait pop (bad) loop rex.X sbb enterq retq (bad) add cmp and mov rex.X xchg sarl add cli movslq int add movabs insl ffreep jmpq mov int cltd outsb mov nop cmc jnp add sarl rex.WRB jge xchg (bad) xchg mov (bad) jle add (bad) rcll (bad) pushq shrl loop xchg xor data16 in sarl cmp adcl cmp (bad) mov rex.WX add (bad) sahf mov roll rolb mov stc pop (bad) imul jno repz (bad) rcll movsb xlat lret rex.WR addr32 pushfq xchg js sub sahf jmp incb int3 (bad) shr adc mov push sub repnz sarb adc scas xchg lret fwait test add scas push (bad) test or xor and jno (bad) sbb xchg icebp loopne int3 mov adcb shrl push test movabs pop movsl movb test insb or add mov cwtl adc loopne cmp (bad) xchg mov and sub (bad) add lret xor (bad) (bad) xlat mov add add xor out fwait sarl int3 (bad) rex cs add mov loopne xchg (bad) fwait je shr mov jns pop adc fwait xchg lock xor pop or mov mov testl push cwtl repz in rex.X in iret mov shll test (bad) xchg adc sarl sbb cs rex.RX gs mov (bad) movabs repz mov mov stos iret push (bad) loopne imul callq add pop div cmp and and retq leaveq sar (bad) movl xor movabs loop ja fildl lret add (bad) (bad) fld hlt stos pop sub test pop cld mov xor rex.XB rex.B in clc (bad) (bad) movslq (bad) mov xchg (bad) enterq rex.XB cpuid cmp jrcxz cltd scas (bad) retq rex.WXB mov (bad) outsl fistpl jp movsl and push rex.RXB stos out mov jmp movslq and (bad) fistl scas lret bnd lahf add mov (bad) push (bad) sbb sub (bad) scas stc sub (bad) cmp stc insl xchg (bad) icebp movabs enterq jno rex.B cmc out repz fisttpll sub fiaddl mov xor mov pop pop rex.XB pop rcrl mov negb out mov rex.XB xlat fwait (bad) adc or (bad) add (bad) (bad) xor cmp add and add (bad) mov mov xchg sub sub sbb es lods pop pop and repnz (bad) icebp (bad) rex.XB nop push rex.WR ds lret rex.R in cmc cmp mov cmpsl xchg cltd (bad) shr cltd sbb pushq (bad) (bad) cmp shrl callq adc add mov iret or negl xorl stos (bad) lods or int xlat (bad) repz (bad) lods movslq insl rex.R movabs popfq (bad) stos and lret cs rex.WRX rex lods stc push (bad) (bad) movabs adc mov rex.WRB (bad) (bad) or rex.WRXB fisub (bad) shrl imul or jb rex.RXB xlat pushfq adc and xor movabs push adc stc loop (bad) cmp (bad) jl (bad) push or jge lods stos push or fldenv and std sub rex.B retq in shrl jo clc xor (bad) (bad) shrl lods or andl cmc fdivrl rex.RB xor mov (bad) rex.WX out mov and push lret enterq popfq (bad) add cmp outsb imulb sarl jp (bad) mov fldenv shll xor pushq (bad) jo in and (bad) insl shr adc shll mov in pop xchg (bad) (bad) (bad) rex.WRB xchg (bad) push imul jge rcll ja (bad) jae (bad) sbb xlat mov jnp icebp test lret xor idiv xchg cltd xor rorl mov outsb mov scas pushq (bad) movabs sub (bad) xchg adc loopne cmp mov xor rcl (bad) (bad) (bad) shlb (bad) repz imul xchg (bad) adc push outsb sbb pop loopne cmpsb (bad) mov rex.W iret adc test or rorl push mov in jo (bad) stos movabs cmpl popq lods int out shll mov int ds push xchg imul pop add andl pop movabs rcll jns test mov and sub rex.W fs out mov pop adc xchg repz jle mov (bad) (bad) stc jge jb mov rcll ds (bad) subl mov cmp rolb mov rex.B retq movslq rorl ss cmp movsb roll (bad) leaveq js or rclb pop xchg mov (bad) mov int3 fistl and sub test cld roll xchg add (bad) and fnstsw iret mov sahf lock data16 movabs movabs mov xchg jge incb movabs jo or mov adc ds rex.R (bad) stos (bad) mov or sub mov icebp stc mov (bad) insl out jg stos std popfq outsl add xor xlat lods or loopne pop (bad) (bad) je fistl sbb (bad) push cli jmpq repnz fnsave (bad) add rex.X stos ffreep push add fcmove mov xchg pop mov push jrcxz test inc jb (bad) insb mov sarl or or jae jae cmp xchg ds out orb cld adc rex.WXB repz (bad) int3 fdiv mov rex.WX jb add mov rex.WXB in or nop xchg rex.B repnz rex.WRX mov or push std add sbb cli pop mov js xlat stc incb clc mov ljmp jrcxz fnop loop pushq cld mov pop fidivrl cmp stos jge xor cmp stc (bad) rorl and mov mov mov int3 (bad) jne (bad) div (bad) sbb in cwtl popfq xor outsb addl faddl fsubs or or mov outsl ffree add div jno (bad) pop fdecstp adc (bad) fs int3 scas adc xchg leaveq enterq sub std sar xchg rex (bad) fisttp add (bad) add enterq jl fisubrl (bad) repz pop mov stc cli (bad) sub in rcl sbb roll push (bad) int3 add sbb lock sbb hlt (bad) loopne rex.X xlat lahf (bad) or sub lock insb (bad) rol xchg rex.WRB rex.B fwait xlat or fmuls (bad) in out (bad) stc jg xchg shrl mov js,pn retq cmpsl out imul std (bad) imul add fadd fldcw (bad) mov movabs rex.X mov movabs mov rex.R push (bad) ficompl sbb lock jne pop pushfq rcl sub lret push movsb lock mov jg out xor sarl enterq or jnp and hlt cmp jmp cmp mov outsb addr32 xor (bad) sub rex.X mov mov (bad) jg fs or rex.WRX (bad) mov rorl subb add (bad) cmp fstl (bad) icebp es shll rex.WRXB xor rcll out lahf shr add (bad) cmp mov mov repnz iret jp loop insl (bad) rcr rex.XB mov imulb popfq retq (bad) mov orl (bad) cwtl push mull jo int sti shlb loop sahf in (bad) in fadd mov xlat lret je add shll (bad) pop lods gs cld sub xchg (bad) (bad) out (bad) mov mov test in cli cmpsb lock enterq fs test sub fcomi xor (bad) sub jb pop loop int3 ficom pop mov movabs jae (bad) rex.WR (bad) cmc lods cli and sub mov xchg fcmovbe or cmc xchg iret jmpq xchg mov imul insl in and mov in loope rex.B and (bad) (bad) (bad) or rex.XB scas imul add pop jg fadds idivl (bad) loopne rex.WRB rex.WX sub (bad) mov movabs (bad) loope sub xchg xlat xor in jmp imul movabs or callq lods pushq jg retq (bad) cmp rex.WB (bad) cli add cmpsl mov xchg lret mov mov (bad) push (bad) fucomip enterq or leaveq (bad) xchg fnstenv xchg fldenv mov fildll hlt imul outsl cmc cmp jnp xchg mov movsl callq out jns insl fs jrcxz and (bad) add jmp repz (bad) sar add repz retq sbb int3 loop add sub jbe pop pushfq imul inc imul rex.WRB and (bad) je jnp scas and jne jns rcrb outsl (bad) imul rex.XB mov sahf (bad) movabs or pushq xchg movabs cld cltd shll addr32 icebp sbbl leaveq shrb xor movabs rcll jns mov sti rex.RB or mov rcrl push mov std pop rex.WXB repz std jbe addr32 test ror insb (bad) (bad) cs fmuls cmp xor (bad) shll (bad) xchg rorl outsl (bad) outsb rex.WRXB enterq test rex.WX add (bad) adc callq lock (bad) insl int3 jnp leaveq sub mov fld (bad) stos (bad) fiaddl repz jmpq int3 stos sub and test cwtl xor (bad) xor xor sbb cmpsl xchg jmpq xor rex.WRXB loope sbb and jns or mov (bad) sub retq jae rex.R pop (bad) popfq (bad) ss fistpll lret pushq pushfq int rex.RB repnz ljmp pushq push (bad) mov mov xor loop enterq rolb fidivl and test movabs fdiv sbb enterq (bad) fucomp or rex.WRXB rex.W sti rex.WR rex repnz jmpq (bad) xor add jbe jno test mov enterq retq mov hlt int mov movabs rex.WRXB ss fldcw (bad) jge mov mov icebp movsb rcr notb loope jle mov loopne (bad) mov push negb (bad) stos adc sub ss popfq push out movabs push (bad) or mov callq fdivp xchg add mov pushfq cmp loop cmp add mov add mov or cld rex.WR (bad) rcrl popfq sub insl fwait add pushq xchg rex.WB stc out mov rex.WX jo leaveq rex rex.WXB mov rex.W rex.RB lock (bad) outsl (bad) imul add push outsl mov sbb lret rex.WXB cmp pop test lock (bad) rex.WB mov and jne and fbld addr32 add in sbb mov cli xchg add repnz stc rex.R nop xor jns sbbl pop adc mov lret (bad) xchg jb rex cmpsl int (bad) fidivrl xchg sbb movabs movabs xorl fiaddl test jns fs (bad) sarb jp rex.RX shlb pop mov push jmpq stc adc mov or jae mov fsubrl sahf int push movabs or rex.WB movslq push (bad) (bad) (bad) rex.RB mov adcl xlat xor add sub in insl loopne xor xor negl cmpsb xor cli sbb mov xor pop fldcw stos mov push cmpsl popfq fwait bnd cmpsl (bad) mov cltd mov mov movslq rex.XB (bad) (bad) mov movabs test xchg rex.B (bad) cwtl leaveq fcmovnb pop cld (bad) je mov rcl cmp std (bad) (bad) shrl repz xchg add iret pushq push fidivrl stos repz ja push sub lret (bad) cmp (bad) mov (bad) bswap jae mov enterq movnti movabs ss test xor imul push (bad) js sti fstps (bad) sbb shl movsl cli push (bad) cmpl mov jae (bad) lods (bad) rex.WX pushq mull xchg xchg (bad) mov insb in repnz out rex.XB cli movabs mov rex.RB rcl stos cli jno hlt and std jae rex.RXB pushfq addb out lea adc or fldt rorl rcll sarl fidiv rcll loop shll sub sbb mov scas and roll jne jnp push repnz rex.WRXB jae jo and mov xor fadd rex.RX mov and lret (bad) in mov shll ror pop cmp rex.RX test hlt int3 cmp rex.R mov push jge pop lods rcrl scas rex.RB jae rex adc add jg (bad) (bad) pop rcrl popfq cli xor rorl fucomip pushfq (bad) cmc lret and ficom andl cli mov rorl xor rcll adc jrcxz or cmpsb rex.XB stc loopne jle rex.WRB sti rex.X sbb adc xchg retq insb sbb rex.B lods xor (bad) iret lret pop cld rex.WR sbb rex mulb negl (bad) test pop rex.WB shll and sbbl rex.WR rex.RX jae (bad) mov test cmp rex.X (bad) faddp rolb fsubrp mov (bad) rex.W pop pminsw (bad) rex.RXB rex.B rex.WX (bad) nop push pushq je rex.B in (bad) stos (bad) or xchg rex jno ss or mov ds movl adc cmc mov int3 mov fild lahf (bad) sbb jns rolb (bad) insb fnstcw jg adc rolb pop or sbb sub rol cltd clc rex.B cmp (bad) xor (bad) retq loopne roll or mov (bad) (bad) cmc jg jo (bad) lock retq or push (bad) (bad) (bad) movabs (bad) mov cmp pop sahf fstps rex.X rex.RXB loopne outsb es lock xor vcvtdq2ps jne rex.W push fstps addr32 iret shl lret callq (bad) (bad) adc testb in pop pop rex.WRXB jnp fildll jmp movabs (bad) rex.WXB (bad) mov jnp movsl lret pop rex.X xchg outsl push or test xchg leaveq cmc pop stos movabs rex.RX adc mov or xchg movabs neg loopne jge (bad) (bad) xchg adc jo rcl xlat mov push xchg mov sbb test test and loope pop sarl out rcl gs push xor shr (bad) mov insb adc sahf (bad) sarl pop out cmp adc enterq rex.X adc push (bad) movsl jge rex.RXB fs mov xchg mov mulb lret cmp jns jb jbe add lods (bad) xor rex.WR mov loop vmovhps (bad) out or pop (bad) fisttp pop fadd push scas or (bad) adc sahf shll rex.WRXB xchg jrcxz addr32 (bad) rcrb jnp xor rcl fldcw (bad) fcmovnb jb pushq push mull bsr (bad) pop rex.WB ffreep cmp scas mov std push roll rex.W movabs in mov lahf adc mov idivl jmpq mov (bad) mov pop (bad) insb cmp add (bad) xchg xor sar data16 in in (bad) xor rex.XB and cmpsb fld or subb push movabs or shll retq (bad) ja (bad) pop rex.WRX mov add icebp rex.XB mov sbb sub mov lods xchg shll pushfq fs jne pop jrcxz or shlb rolb fs in int pop rex sbb or add jp movabs jo ss push (bad) cmpsb loop imul rorl jno mov xor jnp mov xchg movslq testl (bad) repnz shrb (bad) jno cs and jns rex.WR bnd (bad) rex.WRXB lock (bad) mov or sub cwtl xor cmpsl and push insl cld (bad) (bad) (bad) push iret rex.X int test pop fcoml mull push addr32 rex rex.R orb jmpq pop ds imul and stos jnp (bad) xlat (bad) jno leaveq and adc out scas or (bad) (bad) fsubrs xlat add mov ror test mov xchg mov and sbb xchg fistpll cltd cmc sub fadds repnz adc rex.W imul or (bad) test rex add pop (bad) ss cltd es add jbe (bad) (bad) sbb add lret ror movabs imul js adc mov in lods fisubrl cmpl fcmovnb rex.RX (bad) (bad) out scas (bad) out clc data16 mov ds outsl and adc (bad) mov or gs rorb roll fs lock (bad) adc out outsb (bad) or fldenv test jl addl (bad) xorl jp (bad) repnz insl stos cwtl (bad) cltd enterq sub xorb jae pushfq movabs iret jle push and xchg rex.B repnz pop (bad) retq ja sbb cmpsl sbb rcrl callq pop cmp test jmp loop fsubl rex.X decl data16 fldt xor fldenv clc mov mov outsb rex.RX mov add roll loopne mov lods test and notb mov enterq adc add rex.RB in loopne rorl callq rcll pushfq jmp adc fistp je cltd rex.XB adc fimul iret test sahf (bad) outsl jno (bad) xor repnz push jge push add jge movslq adc jae add add (bad) in sub mov cmp (bad) cld loop xchg cmp pop in int fwait callq and sti add mov std rex.RB mov je xlat jno or lret mov imul jge pop mov fidivr and notb pushq rcr sarl rex.RB pop pop lret mov rex.R xor clc or addb mov test cmp pushfq cld rex.RB (bad) (bad) (bad) stos or xchg ror stc (bad) xlat (bad) and rex.B rex.R fs pop popfq and pushq adc decb out and push out add lret jns lahf jo mov je mov gs rorl mov pop rex.R out mov xchg ffreep xchg pop add xor (bad) rcr (bad) jp iret stos sar adc pop sbbl (bad) mov (bad) sarb pop movabs retq xchg xor add mov stc rcrl lret in xchg retq out (bad) lea hlt add push cmp xchg push out add (bad) and sahf rex.X rex.W rex.B fs sbb movabs rex.WRB lock sbb rex.WXB std fcompl int mov pop (bad) xchg pop imul jg adc xor xor vpaddd imul add (bad) cmc stos (bad) int movabs loop fdivrs mov push test sub mov (bad) xor rcll (bad) stos lea mov rol pop rex.XB cltd out repnz pushq fidivrl rex.WR test rcr pop scas add jne iret cli and mov (bad) (bad) int rex.XB (bad) vpaddsw jbe sar push add mov jle mov cmc rex.XB rcl fwait mov movabs repnz sub sub mov cmpsl rex.R push (bad) enterq (bad) push sub rex.XB (bad) adc xor rex.WRB loope (bad) lock (bad) outsb rex.WXB sbb sub xchg xchg jns jns jle (bad) push enterq fldt ds cltd add xor add (bad) scas adc push and rex.WRX and stc (bad) (bad) (bad) push shlb leaveq sahf and mov mov sarb xchg rcll icebp (bad) movsl and movslq cmp push cld fcomp (bad) cmc jo in (bad) rex.WR push retq retq mov mov sbb fldl add xor stc mov mov or loop sub push mov data16 rclb and repz add divb mov jno lea (bad) pop neg jrcxz imul rex.RX mov movsb stos (bad) xor mov (bad) (bad) add in rex.WB adc add clc jnp (bad) stc adc or sub push (bad) (bad) and loope cld pushq rex.XB rcll rex.B movabs shlb outsb stc cmp je (bad) movslq (bad) (bad) rcr jo cmc pop (bad) cmp mov outsb in jmpq or int or sub cmpsb jae and pop test lret out xor divl mov int (bad) jnp rclb in rex.R movsl rex.WR cs scas or and cwtl or adc adc cmp (bad) (bad) stc pushq mov rex.WX (bad) ficom shrl je std out push (bad) sub push add in scas sbb movslq fcomi lret fstpl mov and and fidivl add ja andl lret jrcxz or stos mov ror (bad) cmp jp addl add loope stos mov jmpq xor and movabs enterq mov sub out xor jbe fldl (bad) in cld retq retq (bad) and rex.WRB (bad) pop clc add and repz or (bad) rex.RB xchg mov add sub jmp (bad) and rex.WXB std movabs mov int3 imul mov rex.WR add (bad) pop clc xchg and sahf mov adc mov mov sbb jnp iret jmp and cli jo (bad) (bad) jge movsl in mov (bad) mov sbb (bad) outsl xchg xchg icebp sbb (bad) stc xor add hlt xlat insl mov rex.X jns mov rolb fldenv std sub hlt xchg mov (bad) xchg and jp repnz int xchg sub in rol (bad) sbb mov jae (bad) lea pop xchg movabs jmpq loopne int3 retq or loop add int cli jb sbb pop sub rcrl loop pop and (bad) add (bad) jle rclb or movb sub push and adc (bad) sarl mov js xchg mov punpcklwd rex.R push rex.B rol mov scas int3 fidiv jge push movabs rex movabs nop xor (bad) movabs and or js dec (bad) pop leaveq out movsb icebp add rcll fbld mov mov and mov (bad) xchg xchg out js jle rex.WRB (bad) negl rorb fs pop add jl lret push xor hlt (bad) jnp andb repz (bad) xchg pop xor rorl and rcl add retq repz mov mov (bad) mov hlt xchg in rex.WRX insb shll cmc pushq rex.RXB test push (bad) je (bad) push lods (bad) leaveq rex.WR cmp fnstsw bswap (bad) add fiadd rex.XB mov repz or pop subl cwtl jrcxz loopne jle mov rex sub (bad) rex.WRB stos mov test outsb hlt xchg (bad) (bad) rex.W (bad) mov jmp repz in (bad) jns shrl in cmp xchg sti mov rcr (bad) cld gs (bad) push add popfq (bad) loopne movsb shll mov xchg loope fildl add mov test sti rex.WB scas fwait (bad) mov or imul addb mov adc gs sarl std adc mov mov fstl jmp mov (bad) repz insb rex.WX pop adc int3 rex.WRXB sub (bad) (bad) sub add pop repz pop (bad) ds xorl in xchg in cltd lahf or rex.RX ss out callq or pop in movslq xchg sti cmp and cltd adc mov xchg adc adc cmpsb and subb (bad) jno xlat (bad) mov (bad) mov jrcxz repz mov cld add pushfq test adc in movsl jle pop rcrb mov sarl mov roll or shrl in mov rolb js jae in add push xor pop (bad) in (bad) pop push mov sarb movabs movabs (bad) jns add (bad) jne test ficoml iret sbb (bad) popq (bad) cli je sbb rcrb pop rcl (bad) retq rex.R xchg cltd or (bad) jbe and jo adc out (bad) rex.WX sbb out sub leaveq push add jmp add sub movabs cmp push je (bad) test (bad) gs mov (bad) fisubl jmpq jne lret movzwl rcll mov out lret mov rcrl xor rex.WRXB jne (bad) (bad) mov and rex.B mov jb insl movsl shll out jae mov and pop xchg cmovnp (bad) cmpsb (bad) ja and movb adc xlat movslq add retq ss fs negl mov sub xchg leaveq pop xchg in movl (bad) mov sub loope shrb loopne shll push cwtl pop in mov mov leaveq cltd repz in test pushfq jl add (bad) rex.WRX (bad) xor scas outsl jge jns xchg (bad) jo clc (bad) xchg add xor adc sbb push cmp rex.W rex.X (bad) xchg pop (bad) adc xchg (bad) mov (bad) jp jmpq (bad) gs loopne std sahf (bad) movb test ja pop jno rol lea shll pushq (bad) jbe sub in lret jb nop jno xchg outsb je mov sbb fs pop out (bad) (bad) cmc add movabs (bad) jno outsb loopne int iret mov lock xchg (bad) test sbbl lods movsbl push (bad) in movabs xor or repz xchg fisubrl and (bad) pop xchg shrl movslq rex.WRX (bad) jp (bad) sarl movsb push loop (bad) mov sub push sti gs cld movabs (bad) pop movabs notl mov mov cmp add (bad) (bad) (bad) add (bad) data16 (bad) sub xchg cmp cltd decb pop retq xchg pop xor loope movsb (bad) xor icebp cmp ds xchg (bad) testl icebp pop divb shrb mov (bad) loopne outsl rex.X sub (bad) in scas shll push jle xchg repnz sarl out mov movsl xor pop in (bad) cmc repz cmp test int xor lret ficoml cld rex.B rex.WRX shrl fnstsw or adc pop xor jno ror pop jb xchg xlat rorl (bad) xor lods add rclb hlt sbb lea roll cmp stc std fs adc add ss in pop jle add in jge or (bad) (bad) jno sbb push stc in or insb out (bad) mov cltd mov retq sub movabs sub addr32 jne movabs rex.WRB push (bad) pop pop stos in (bad) sub mov sbb xchg (bad) (bad) scas mov jge movabs iret xor sub pop ficom rex.RX (bad) frstor sarb sahf sub pop rcrl movabs movsl scas mov xchg add and xchg rorl pop loope and jle (bad) jo movabs insb (bad) fidiv out (bad) or gs cmp fnstcw mov lock mov (bad) (bad) (bad) jno fadd (bad) mov scas rex addr32 mov loopne mov test (bad) cli xor stos add sub movsb rex.WX (bad) scas jb mov fst xchg mov ja movabs or rex.WRX jg sbb xor ljmp sub jl loopne (bad) imul cmp iret lock sarb (bad) mov loope (bad) icebp sbb faddl add (bad) pop outsb test xlat sbb xor push xchg and mov push sbb rcr movabs sub and or add movabs rex.W add stos add jrcxz jae lret jno add cltd add mov jne pop test bnd jbe fbstp mov cmc sub mov insb std rex.B repnz insl fnstsw callq gs out pushq rex.WR ficompl sub int3 shlb pushq addl xor sahf mov test mov pop mov cli (bad) add add test sub mov pop jae icebp jp (bad) clc sbb jl (bad) or retq mov pop std mov fcomi push clc iret repz (bad) in fsts movabs and (bad) rex.X outsb stc in insb (bad) cli mov test lret rex.RB rex fisubr mov pop mov callq sub test (bad) cld fs pushq mov test jrcxz cmpl clc leaveq cmpsl frstor jmp mov cmp jno int rex.RXB sub mov rex.WB pushq fcmovu pop sbb sub callq movslq mov out enterq (bad) sub sbb rex.WRX rex.RB (bad) rex.RB ror and movslq rex.XB sbb cmp mov (bad) xor add (bad) out xor (bad) sub enterq (bad) or push cwtl cmpsb pushfq rex.WR movabs rex.WRB lock pop out rcrl pushq rex.WB mov adc push test sub (bad) jno rex.WRB in rex.WXB sub callq xchg (bad) mov data16 cmp push popfq mov mov fnop shll jns jno loop std or mov iret adc push je movslq sbbb jae outsb lods movabs fistpll (bad) mov scas jg or xlat adc iret (bad) rex.XB fbstp orl add mov cmc lea (bad) out xchg and roll (bad) (bad) pop sub sahf insl out rex.B movabs fdivrs push mov sbb sub pop push xchg fisubl or mov shr mov mov sahf xlat stos fildl mov (bad) mov and test mov sbb jrcxz add sarl sti xchg rcll (bad) (bad) adc sub (bad) ror rcll (bad) xor (bad) (bad) movabs xchg sbbl scas rex.WXB rex.X xchg rex.WRXB rcrl (bad) xor scas faddl in (bad) (bad) pop (bad) add xor fwait (bad) cmc or sub pop sub pushfq jl (bad) lcall sbb mov ja in xchg scas (bad) (bad) outsb and add push rex movslq lret out add nop mov (bad) xor shrb push add cmp icebp rex rcrl out iret mov fdivl shll sbb retq es (bad) jb sub jno xlat movabs sarl ss jg xlat (bad) fucomip (bad) jp sub in (bad) xchg rcr push xchg and (bad) fcmovne and (bad) (bad) movabs (bad) jmpq rex.B add vpunpckhbw lret (bad) (bad) xor cmp mov pop in pop ja pop jo or shll adc sarl rex.R lock xor (bad) jle,pt adc mov add cmp lock rex sarb xchg roll or and (bad) frstpm(287 lret js (bad) push xchg cmp cwtl cmpsl xor rcr (bad) mov jnp movsl sar push outsb mov mov push jmpq and mov (bad) jle push pushq loope (bad) adc movabs adc je fisubl xchg lods ss (bad) cmpsb (bad) (bad) xor sbb mov push cmp sub std xchg movabs xor roll (bad) shll jne lea out pop cmp add add int3 movabs movsb fnstcw nop lock cmp pop jrcxz std sahf xor pushfq rex.WB es (bad) jo gs iret (bad) xor sarl (bad) enterq or xchg rex.R sub mov and mov rex.RB je mov lret rorl popfq repnz rorl push pop stc roll jmp rcll rex.RB xchg outsb xchg rorl (bad) sbb lret movabs in jb (bad) int3 leaveq and lea lods lret mov xor mov rcl insb or (bad) cs and jbe xchg movabs xor cmc movabs add retq lods sub (bad) cmpsl jae rcl imul out rcll pushfq jae in or cld push mov test (bad) cmpsb movabs and mov movabs push add sub push je rcrl cli pop movabs lret cmpb faddl adc sub (bad) (bad) xchg mov (bad) mov (bad) jrcxz (bad) cmp sub mov (bad) rol iret cmp hlt rol sbb enterq xchg jb,pt add bnd (bad) in cltd mov sub or mov pinsrw lret lods test jnp pop jmpq and test (bad) lock fdiv outsb jb or out (bad) repz rex.RB (bad) rcl iret mov or jmpq rex.B xor xchg sub repz (bad) shr imul subl sub sarb pop lret imul sub pop rex.WRXB mov add add sbb rex.WXB fnstsw (bad) (bad) jns lahf push (bad) shrl mov xchg jmp int sub cmp and int3 ficomp rolb mov loope movslq (bad) int3 stos xor rex.XB cli std retq rorl cli int rex.RXB (bad) rex.RB rex.WRB mov add in mov xchg rorl jp push cmp mov xchg xchg mov mov hlt roll test xor cmp rol out fnstcw xchg (bad) xor rex.WRXB jnp cmpsb (bad) sub movabs or or mov jae enterq (bad) mov and xlat jg rex.W incl out addb sub push outsb (bad) pop rex.WRX (bad) retq rex.WXB rex.WRXB pop pop pushq movabs push enterq jnp add pand in fnstcw rex.WRB or sbb int divb jmp sub callq jbe cmp add jp imul rex.W or rex.WR sub loope fisttp rcll mov mov jrcxz leaveq mov xchg jns shlb shll or psrlq cwtl out shl adc cli or rex.XB sub or push pop push mul stc mov adc retq in rcrb cwtl movabs or mov pushq (bad) rex.WX mov sub idivb (bad) or (bad) xchg fcoml testb (bad) and repnz and je xchg rex enterq ja adc test add (bad) int cli pushfq leaveq int3 outsl or rex.WRX fldt (bad) push xor sarb movabs sub ds mov lock mov (bad) rex.XB (bad) out insb stc incl imul std icebp mov add stc movb or movabs insl or xchg mov push mov cmc rorl test sub add mov test popfq or jmp xor rcrl add (bad) sub (bad) mov int3 enterq add lock (bad) xor rcrb fidiv add or (bad) testb int3 add gs callq push xchg sub rorl mov rol (bad) insl rex.RXB rex.WRX (bad) ficompl fsubrl (bad) stos cmpsb retq stc test in iret popfq push adc fistl sar icebp loop rex.RX sbb add (bad) rex.B lods or adc cli (bad) pushfq jmp callq jnp jno movslq mov test xor out mov (bad) jne add negl rex.WXB or fisub (bad) jno in test fisttpll xchg (bad) (bad) rex.WRX and push and scas in stc movabs xchg test fisubl rex.WX rex.WRX insb (bad) jmpq mov rex.RXB adc jle (bad) adc adc rex.WR cmp pop (bad) rex.W mov xor jnp (bad) adc in adc jge sub cmpsl sbb js addr32 mov je nop in push pop or lret in std add data16 jp xor fisubr cmpsl icebp mov and xchg stc sbb lock cli movabs loope loopne sub sahf push movabs adc div fsts lods or rex.WRX rex.WR pop rex.XB mov (bad) notl (bad) movabs movl js xchg rex.WRXB and xor jmp cmp retq js jge adc pop out rex.WRXB push mov mov loope fsubr fidivr icebp mov mov retq iret xor sbb jae mov add (bad) rcrl callq div lea cmc movabs fisttp (bad) fwait rex.WB enterq adc add scas adc push movabs js mov callq cld adc (bad) leaveq jp jnp movabs stc (bad) gs subb repz fcomps fstpt xchg or lahf mov xor movsl mov je jae push mov int3 add cmp mov jrcxz (bad) mull rex.WR sub mov or loope (bad) jae out push rex.RX xchg jns rex.WRB adc rcr xchg mov fucomi div (bad) (bad) insl retq fs rex.WB rex.RX test (bad) jne pushfq loopne jae add fcompl adcl in xor xor je enterq and lods and rex.B repz fsubr xor in xor add (bad) rex.B or push repz mov jp cltd retq sub add lret mov rex.WXB loope (bad) loope cmp lahf and adc (bad) jno (bad) (bad) enterq mulb insl cli push (bad) jo fwait mov movsl cwtl add ffree add out callq add xor push roll cmp sahf (bad) addl jle fisttpll test rcll stos (bad) shrl xchg ss gs mov nop loope movabs and or jne cmpsb sti ror mov mov xor push data16 int3 imul and retq rcrb lods out rex.WXB and add and movslq push pop (bad) (bad) and stos pop retq loope xchg xor and shlb rex.R (bad) xor add pop rex add pop movabs (bad) leaveq fwait (bad) adc pushfq and cmpsl cmp (bad) jmpq test out fldl or sbb adc sbb mov mov rex.WRX (bad) adc leaveq xorl and add push fdivr int3 sbb cli popq cs jmpq idivl mov cmpsl cs ja push sub sub fidivr xor (bad) and divl (bad) test rex.W jae xchg cmc jrcxz rex.X xchg lret icebp sbb (bad) pushq rex.WB rex push adc mov in ja (bad) xlat push xchg cltd (bad) mov lods add xor mov stos movabs jbe lea movabs jmp jae jmpq mov or (bad) (bad) mov add sbb cmpsl outsb xchg adc loop jo int3 test (bad) jge rex.WR rcrb adc leaveq clc push repz sbb push add rolb mov cmp push rex lock fnsave loope fist test or roll fldenv pop (bad) adc out (bad) outsl (bad) rclb rex.WB cmpsl in in cmp and jae jno (bad) mov mov mov xor mov sbb movslq fidivr icebp cs test pop jmpq out callq cmp sub rex.XB addr32 mov int retq (bad) mov cmp repz mov (bad) adc data16 movslq popq (bad) rex.B outsl sbb (bad) test cs nop add jg xchg cmp (bad) fnstsw shll movabs rex.WRB gs sub add std repz (bad) pushq add ds js (bad) cmp xlat lahf rex.WRXB repnz or and push rex.WRB adc xchg adc in leaveq mov (bad) stc xchg (bad) mov movsl xchg mov in repz mov popfq out es test mov retq icebp rex.WRX push repnz sbb movabs and (bad) std xchg add out xor int3 test (bad) mov in (bad) shlb push clc mov add sub (bad) pushfq rex.R xor es adc callq movsb test rex.XB xchg fildl scas jne test mov push leaveq callq popfq (bad) xor mov adc icebp movslq int3 push jmpq (bad) ds jb or sbb jmp pop rex.RX sarb repz adc and mov jrcxz fisubr add (bad) iret mov popfq imul movabs mov rcl clc (bad) pop cmpsb sub cmp mov rcr retq add inc (bad) jge (bad) jmpq (bad) add cltd stc int3 rol fcoms retq fisttp mov outsb roll cmp (bad) adc cmpsb callq nop in and repz jp xchg std push rex.WX imulb test lods jl jg or or pop mov (bad) pop rol in mov mov sbb pop push rex.WRB test adc fnsave rex.B out mov sub push or out (bad) rex.WRB (bad) jne or movslq rcll jb (bad) (bad) or loopne lret pop mov fisubrl notb setge addr32 and push pushq fbld jne lods rex.RXB orl mov jge je xor cwtl rol jb mov xchg (bad) bnd jae fsubrs loope jg cmp and (bad) rex.XB retq int3 stos shrl imull rex.RXB sub roll mov sbb jbe fld or rorl sbbb pushq clc int3 rex.WR mov roll callq (bad) cli sbb add add sarl jo add mov (bad) pop xchg rex.RXB adc (bad) mov rol mov shll xchg rex.X adc (bad) repz fadd mov sbb cmp rex.RX cmp retq js (bad) shl (bad) enterq shlb lret pop and mov (bad) movsl fdivl (bad) rex.WRXB rex.RX jle jge jae jo mov rex xchg (bad) xchg stos loope xlat or and jb mov mov cmp in sub repz mov (bad) xchg pop cltd rex.RB repnz (bad) add (bad) (bad) leaveq push sub jb pushq (bad) callq sub rex.WRXB rex.R mov clc adc xchg rex.RX fisubl movabs fstps jg and repnz retq (bad) adc fmuls rex.W sbb retq hlt mov rex.R mov adc sub movsb adc or (bad) movabs add xlat xor xchg mov or push (bad) pushq jmp xchg mov movslq int3 (bad) or fdivr addl popfq pop pop mov sub rcr or jp (bad) sub (bad) xchg mov in xchg out (bad) in jrcxz fld sub andl (bad) mov fidivl pop faddl push lock mov movabs sbb iret test (bad) (bad) jnp mov fisttp cld add add fldcw pushfq jno jl adc enterq add xor (bad) fs lahf (bad) fnsave (bad) add mov sub repnz rex.R push jge cmp movabs rorl sbb push mov rolb cld pop scas rex.B (bad) shll rex.XB sub shll add divl sbb (bad) mov jae loopne std rex.X popfq mov adc mov iret jp sti callq mov (bad) jno fs test (bad) rorb sub fwait orl rex.R gs mov shll mov cmp jmpq mov pop pop mov je or and or push and rex mov jo imul shrb (bad) sti rol (bad) rex.W push push jge rex.RXB xor cltd and addr32 or mov pop je xor mov (bad) and roll rex.RX and or xor lock jmpq jnp (bad) or rex.WB in lock (bad) (bad) (bad) test movabs int (bad) (bad) cwtl rcl pop popfq mov mov rcll or (bad) gs or rex.WB (bad) or movsb or pop sarl fcomip and rex.RXB cmp rex.WB je mov mov fisub fnstcw (bad) and shl mov mov shrl mov sbb shr mov rol mov (bad) push rex pop callq in (bad) mov vmovntps in mov shrl in (bad) xor (bad) cmp (bad) xchg rorl shrl xchg cmp xchg jnp cwtl jo or xchg pop out jae mov (bad) jno cmpsl (bad) mov movabs or callq cmp adc rex.RXB imul out je rol cmp add rex.RB xchg mov shrl (bad) lret jmp xchg (bad) cmpb roll add out mov mov pushq adc movabs enterq (bad) callq (bad) mov pop jbe pushfq (bad) pop jg sub xchg stos rcll movsl lret sarl mov fldcw addr32 rex.RXB xor imull jne repz data16 in mov xchg icebp jo (bad) xor mov loope rex.WX std push ss (bad) (bad) pop (bad) add sub fnop jge sbb mov movabs movslq enterq cmp shlb (bad) mov rex.RB and out xlat cmp (bad) pop loope rcrl fwait loopne cmpsl leaveq cmp push (bad) (bad) pop push mov pop push hlt cli xchg pop push jb mov je rex.RX xchg fisttp scas sti jp movabs jnp cmp sbb (bad) lock or and rex.WB xlat (bad) (bad) push mov rex.RXB jmpq add xchg cli enterq fiaddl cmp jp repnz cmpsb xchg push rex.WR (bad) pop mov fs cmp adc imul mov and test lret addr32 rex.X cmp jns testb adc fisubl or js adc lock (bad) retq jne rex.WXB rolb (bad) lret clc rex.RB fstpl and jne pop rex.RB (bad) (bad) rex.WX rex.XB pop xchg cmp test jbe fistpll xor mov and mov ss xor mov mov xchg pop jbe xchg cmp fdivp fistl xchg rex.W ds pop pop pushq int test or lret (bad) jge add clc iret imulb lret and fstpl (bad) mov cmc (bad) (bad) push vandps outsb rex.WRX mov xor test movslq adc sub rex.WRX ss push mov mov add in and sub add movslq mov sub enterq test mov (bad) mov (bad) test (bad) clc je sbb hlt pushfq and fcmovu fnop mov sub jg es movsb pop mov sahf and jo movabs (bad) (bad) rex.W (bad) out mov (bad) sub mov loope sub xor (bad) push adc xchg and mov rex.B rex.WXB (bad) sub fistpll xchg cltd (bad) adc pop jno or mov (bad) pushfq mov cmp rex.WX cs mov cmp xchg pop add sbb sub sub (bad) xlat repz pop vpunpcklbw scas cmp icebp rcrl jae cld cltd pop movabs jb (bad) jle mov and sarw (bad) mov ds (bad) (bad) movabs rex movslq sbb sub negb (bad) fisub sahf insl rorl mov mov test push out fcmovne sub hlt sbb movabs or scas lea data16 (bad) mov outsl mov or push and sbb xor punpckhwd out and jo (bad) test lock (bad) repnz xchg xchg xlat imul out in jle (bad) out testl shll cmp pushfq jp mov (bad) xor xor add addl mov rex.B pushq repnz ss (bad) push sbb pushq cli mov sub fnstsw add js fs (bad) push rex.RXB ffree movslq xchg in rex out pop xchg retq jge push lret cmp adc push xchg rex.X test nop insl cmp ror jns (bad) adc ror and (bad) (bad) enterq shrl stos (bad) in xor adc (bad) sarl (bad) and fiaddl cs xor jp out mov loop rorl addr32 mov rcrl cwtl and out (bad) and test sub mov pushq sub jle rcrq lahf push cmp push movabs rex.WR cs (bad) shrl cwtl stc scas mov (bad) int3 (bad) push (bad) or pop sub add xor and rcr adc test cli (bad) shll fwait lods mov nop repz jbe sub movabs mov shll rex.RX sarl lret sub xchg rex data16 mov pop xchg (bad) (bad) xchg sbb jl js or cmp sbb callq sarl lret pushq retq rex.RX cwtl retq ficompl rex.B rex.RB xchg mov rex.WRX ds iret out or loope movsl popfq mov fisttpl sub (bad) xor or iret or (bad) sbb cmp mov and lods fmul std pop (bad) rcll flds (bad) mov pop add int mov (bad) cmp mov jmp xor or in stos mov movsl and or sub std out xlat (bad) jno xchg rcr clc mov (bad) icebp cli (bad) mov hlt movabs mov shll adc pushfq cmpsb (bad) mov mov (bad) movabs shll mov repz (bad) mov fwait sbb shrl cwtl and cmp in rcll fmull jp enterq push int sbb push mov xorl and jp sbb xlat sub rex.WX add xchg xor add and scas rorl movsb nop mov add icebp jo (bad) rex.XB xchg push (bad) or shll rcll or cltd (bad) xor lock fistl lahf jrcxz push push pushq rex.WX jb test add icebp jnp mov add callq (bad) out enterq (bad) jg xchg and fincstp in addr32 or push rorl sar jle imul mov sbb and (bad) cmp (bad) (bad) mov pop (bad) jae (bad) mov sbb sub fisubl out movabs not sub (bad) and mov sub (bad) sti adc cmc fdivrl lods xchg hlt xor (bad) imul negl sub lret mov push xchg test stos (bad) js rcll (bad) xor mov andb (bad) cmc sub hlt (bad) shll (bad) rcr xchg mov ror hlt (bad) add rol testl xchg mov cs and adc adc mov callq rex.XB gs ja (bad) shrl (bad) cmp jae insl rex.RXB movabs mov xchg xchg jmp mov jnp add xchg orl or add add repz flds mov jmpq or mov and adc adc sub cli and jne shlb stc mov rex.WR (bad) (bad) push retq pushq (bad) stc sahf pop xchg je mov cmpl add xchg retq (bad) rex.W (bad) add mov sahf in sbb sbb cli movslq jmpq rex.RX xor movsb shrl rex.WX lret popq xlat sbb rol cmp rex.RB add fnstenv roll xor xor stc insb xchg fsubl rcrl or push fsubs movabs xor cwtl add rol push jnp cmp sub (bad) rcrl and gs fldl (bad) xchg sarl sti addr32 adc shrl rex.WX scas rex.RXB (bad) xacquire (bad) lret test rcll int mov pop sar (bad) in or lods xchg xchg shl xor nop movabs retq xor (bad) jnp and addr32 sbb movabs lea xchg cltd mov sub cmp jge sarl add icebp sub lret rex.B imul ja idiv testb loopne (bad) fdivrl (bad) sbb (bad) rex.XB movabs fistpl lock rex.X (bad) adc scas imull xchg fiadd rex.RB jae (bad) push and rex jmp stc cqto pop mov jno rex.WRB and jg rex.RX mov in sti (bad) in jbe addr32 movb bnd divl add outsb lods mov jp repz (bad) (bad) (bad) cmp xlat cmp add enterq mov cmpsl pushfq (bad) sub fst sbb lahf sar pop mov imul ja lock shrb std xchg out jo jl cld xchg lret xchg rcrl jo (bad) in movabs std in mov mov outsl jg lret and insl mov jmpq rex.XB repnz iret mov int js and rex.XB push jo pop pop xor adc sub rex.WRX imul jle imull cmp ja loope lret int3 cltd mov mov lods xchg shll xor pop (bad) fcmove add fistpll bswap rex.B imul rex.WRXB icebp out sar add (bad) vpandn fiaddl xor or and es (bad) incb callq sub (bad) pop push stos iret movabs loop or enterq push shr jo scas jnp cmc idivb sub xorb xchg or cli pop xor lret push (bad) pushfq rex.X vunpckhpd and movsl and fcmovnb pop adc int or rcrb in add pop in gs ds lea (bad) (bad) rex.W sbb mov jno rex outsl rex.WX xchg (bad) out (bad) (bad) xor push scas or fnstsw pop divb rex.WX mov add push sbb imul xchg int (bad) scas test subl sarl repz mov rex.WX movl (bad) sub fs cli jns rex.R (bad) (bad) or adc fs lret and sub mov (bad) jno lea and pushq (bad) sub sub (bad) in (bad) clc jo xchg ja mov (bad) rex gs js pop jae (bad) retq outsb cmp scas repz pop rorl cmpsl and fs iret lock hlt loope cmp rex.WR (bad) mov fidivl int imul rorl insb rex.RB (bad) (bad) (bad) add pop jnp addb xor rex or shll xchg (bad) rex.WRX rex.W subl movsl cli rcrb rex.B and mov shll hlt int3 in lahf mov scas rex.WRX jp jge lea rclq sub xor cmpsb clc data16 pop rex.WR jl insl cwtl cmp sub adc shrb mov add or cmp loopne cld jae (bad) (bad) jbe gs add fnstenv xchg adc imul rex.RB rex.WXB add movabs or jo es rex repnz jrcxz rex pushq enterq stc sarb fs out cmp fbstp push retq and cwtl (bad) add sub stos out movabs push rex.WRX pop push out movabs cmp rex.XB xchg mov rorb fsubr mov movslq pop mov repz nop mov xlat retq mov push ds adc fdivrl movabs sbb or cmp fldl and adc (bad) rex.RXB cwtl ficomp stc lods icebp jrcxz movabs stc cmc sbb mov mov rex.RXB mov sbb test xchg rex.WR ss push push xorl pop mov cmc movsl loopne leaveq jo mov lret (bad) pop rex.RB add mov cmp lret xchg lahf loop mov or icebp icebp cld push sar (bad) je mov rex.WRX loope cmpsl movabs or or data16 fisttpll (bad) cmp push rex.W xchg sti adc incl mov and jno or xchg adc xchg sbb xchg mov (bad) mov stos jo rex.WB rex.B popfq rex.WRX and addl rclb roll rcrl adc or jg xchg (bad) mov and mov xor test insl lret rex.B (bad) pop in (bad) out imul cmc pop testl sbb sub out movabs mov outsl xchg (bad) jbe jge movabs in xor fwait mov push cli shrl pop cli cs fidiv (bad) jle xchg push lret sub xorl in mov (bad) faddl rcrl cmpsb xchg sbb (bad) (bad) and test xor mov sub cltd jne fidivl jmpq (bad) (bad) test repnz (bad) in rex.X rex.XB movabs sub (bad) or cmp sub xlat rex.WX or mov pop test rex.XB mov mov (bad) shrl popfq addr32 xchg (bad) cmp mov fstpl (bad) divl (bad) fistpl cmp rex.WR sub movabs mov rex.WRX cmp addr32 test rex.WR (bad) mov mov test adc jb jg outsl adc and sti cmp lock cmc fwait rex rex.XB jg retq cmp xchg (bad) rex.WRB (bad) push (bad) retq adc add pushq xchg movabs (bad) js loope (bad) rorl ror jrcxz,pt cltd mov (bad) imul rex rex.XB out (bad) (bad) pop cmp rex.WRB pushq rex.B repz mov jae rcrl and es jmp (bad) sbb rex.X test js or (bad) popfq mov (bad) xor pushfq retq or (bad) movabs roll scas pop in xchg rcl ss and (bad) jle adc adcb out rex.WXB out pushfq (bad) mov retq xor xor test scas (bad) cmp incb pop icebp push jp sub (bad) xchg (bad) mov jne stc add xor pushq callq pop push sarl loope mov fist (bad) (bad) leaveq shll int3 cwtl rex.R lock iret pop jo rex.WX fdivl rex.WRXB cwtl rex.XB or mov out iret test (bad) (bad) jle (bad) cmpsl pushfq (bad) roll jns notb mov push shrl xor mov sarq lret pop and rex.WRX xchg jno push add adc rorl (bad) and sbb mov sub cld (bad) and lods (bad) popfq sbb sahf rex.WB clc mov movsb pop rcll pop xor xlat js std mov outsl iret lret cmpsl rex.B rex.RB jmp (bad) hlt in or adc (bad) xchg push (bad) in rex.W mov frstor rcl (bad) outsb or (bad) ds movabs mov fsubp add sbb shll test sahf (bad) sub sar jo add (bad) xchg rex.WXB scas fcoms jl adc (bad) xchg callq lahf jns rex.RXB sbb xor sar insl sub mov test jae repnz or mov sub movsb adc pushfq lea cmp sti nop lret jbe sub mov rex.RXB fs andb pop (bad) xor pushq sbb movabs cwtl jae (bad) imul ror push mov rex.RB rcl mov cwtl repnz cmc push stc xchg (bad) cli jrcxz rex.R and imul sbb jae lods int sarl rex.WB int pop mov mov (bad) xor xchg imul xor std repz repnz pop rorl push rex.WR add fldenv (bad) (bad) sbb sub (bad) xor add jge mov movabs test scas roll in (bad) out stc sahf sub or (bad) rex.WRB xor (bad) cmp (bad) sbb sub jg (bad) xchg adc rex.B sbb ja test push movslq cld int pop sub xchg sbb mov push callq fsubrs rex.W imul mov movsb or (bad) (bad) xchg (bad) leaveq pop or mov sbb jp ja (bad) mov rclb sbb pushq xchg xor xor (bad) sarl xchg movslq (bad) push mov sub (bad) fstl jp push and rex.X fs pop and rcll (bad) add push adc callq mov roll mov jne rex.B xlat rex.RB iret std roll scas adc mov cs (bad) ror (bad) sbb mov add mov cmpl insb mov rex.B sbb scas rex.RX iret (bad) jae (bad) (bad) (bad) nop (bad) lock push pop in sbb cmpl scas or mov push cmp cmpsl rorl push add out addb cmc rcll std div xchg lods shrb rcr mov sub movabs xchg and mov insl gs fstpt (bad) fucomi sbb mov mov sub add mov test frstor stc mov jne and and cmp in retq (bad) (bad) sub ja pop sub out mov (bad) movb pop rorl cs (bad) lret imul sbbl sar and pop lods jp mull and fcmovne sbb rcll push (bad) (bad) or xchg clc or sub mov fs or shl mov cltd cmc loope mov ffreep sbb rex.WB movabs xchg sbb rcll (bad) pushfq (bad) xchg or rol imul fistpll and loope in pop shll fcoms xchg add loopne add fsubl jns cwtl jb shr inc (bad) stc enterq rex.RXB movabs stc sub imul movabs rex.WXB mov jbe (bad) je xchg data16 je sti push adc (bad) push xchg rex add pushq add or lahf push movslq (bad) jb xchg ss adc (bad) mov xor pushfq jg retq roll push (bad) js lret outsb xchg pushfq push callq fidivrl jnp movslq movb jns add (bad) (bad) enterq mov (bad) lods roll lret test divb fild rex.X retq xor icebp fsubs cs jnp sti rol lods and insl rcrl cli add sbb retq stc (bad) subps shrl (bad) rex.WRX (bad) xchg mov (bad) stos (bad) movabs iret lods add flds mov mov adc xorl pop (bad) movb jbe (bad) mov test and sub (bad) (bad) stc in fwait jmpq add ss or mov (bad) loope (bad) or cmpsb or hlt mov lock lahf add retq insl cltd add mov cltd sbb pop stos sub vcvtsd2si xchg movsl cmp mov decl movups xlat (bad) mov pop xchg std mov cmp or test add imul (bad) test lock insl lret std push push add rex.X rcl scas jmpq fnstcw jp mov sbb push mov xchg jge pop and and roll retq scas clc test sub rex.WXB gs movabs xchg out (bad) cs roll jns or hlt jae sub gs (bad) je scas test (bad) (bad) ffree sbb add push sub jns sar test pop stc (bad) mov pop repnz push or and xchg (bad) cmpsl sbb (bad) jl (bad) out cmp push test jmpq ror cmp cmpl in sub xor in popfq rcrl xchg and adc in or jle loop sbb outsl xlat xor outsb cs (bad) jl sbb sbb sbb rex.R ds pushq (bad) scas or in sub or (bad) outsl jo in shrl fidivr enterq (bad) cmp rex rex.WRXB rex.XB (bad) xor int xchg out sarl fiaddl rcl loope cwtl sub mov imul jb mov in test insb jns mov rclb mov rcl insb rex.WRX out movabs sbb sub or mov jmp mov roll pop or and insb mov lret rep (bad) mov hlt (bad) sbb and xchg xchg (bad) (bad) jbe mov stos clc adc pushq or rorl and pop adc pop retq movabs mov mov (bad) idivl xchg imul push movsl shrl jecxz rex.WRB push sti xchg add std push rex.B rex.WB cwtl (bad) ja (bad) add movsb fist jno pop rex.RX mov sarl movabs rex.WR movabs rex.X imul (bad) fsubl icebp fnsave add fstpt jmpq rex.WR insb ss retq jno push lret je and outsl rcll ds sbb (bad) loopne rex.WXB cmp testl jmpq movabs lock cmpsb rex.WB pop fwait pop test fild (bad) jns xchg lea test jge sub jg repnz rex.WX loopne dec add rex.XB add pop loopne fildll add movabs (bad) mov (bad) cmpsl (bad) (bad) loope rex.RX test mov cmp (bad) fistpl imulb ljmp xor (bad) adc cltd lea mov mov hlt rex.B add pushq cwtl xchg pushq int3 rcrl rex.W xchg xlat add test sbb movabs in and xor ja in rex.WB rex.WRXB rex.WX (bad) mov imul add jnp fwait (bad) shr (bad) mov and shrq mov rex.X rex.RB in fwait (bad) mov movsl rex.X or test lock and (bad) jg cmp shl sbb sub ja jnp leaveq mov gs in test in cmc pshufw jno (bad) add ds cwtl and test popfq xchg xchg (bad) adc add cld ror (bad) icebp rex.X push shll pushq (bad) shrl pop adc adc (bad) or rex.B xchg mov imul callq (bad) mov lock rolq (bad) ja and ss or xlat rex.XB xor lods adc (bad) sub iret push jmp cmp nop sub xchg (bad) jg sub mov (bad) shrl rex.WX mov rex.XB xchg mov rex.WXB (bad) fist movsb add (bad) (bad) movabs sub scas rex.WRXB sti push or sahf push add sbb mov pushfw shll xchg xchg rex.R mov roll or rcrl jp mov push add (bad) adc loop shrl jnp cmc movabs mov xor sarl in push cmpsb and rex.X in rex.WX push pushfq xchg sub jae pop jmpq add or (bad) adc cltd xchg (bad) fsubrl out imul gs fwait add xlat repnz mov add xchg cmp test imul (bad) xchg rex.B or (bad) nop and scas addl cmpb movabs movsl mov cmp adc loop adc cltd movslq mov xchg mov add jae (bad) repz sub (bad) jb,pn xchg pushq (bad) scas add movslq insl roll imul (bad) and rorl sbb (bad) jno shl adc mov shufps xor rcrl (bad) out sbb push rex.RB rex.WR mov in (bad) pop (bad) callq (bad) int3 sar xor fwait callq (bad) lahf sub mov ja retq sub (bad) add fwait idivl cmpsl (bad) lock add (bad) xlat sub jno fcmovne mov mov push lret xchg mov and fisubr sub repnz fbstp add hlt ds jg pop rex.WB sub (bad) rorl sbb sbb rcll test retq mov popq es or shrl in mov rcll shr clc pop mov (bad) add in (bad) add mov (bad) repz (bad) jo jp jnp imul mov rorl (bad) (bad) pop cmpsb jae sarl (bad) movabs mov (bad) jge out je fnstcw vmovapd xchg add add rex.X iret (bad) xor (bad) mov cmp fldl pop jrcxz xchg (bad) xor out sub (bad) xorl adc roll (bad) push std (bad) (bad) cmc mov sbb rcl stos mov shl sub sbb jo mov adc (bad) mov cmpl adc cli rex.WX lret ja int3 xchg insb cmp pop cld mov subl repz rcrb cmpsl mulb movabs rex.WRXB xchg and pop rex.WRX in rex.RX push or (bad) push out mov rex.XB pushq push nop (bad) (bad) cmp and bnd (bad) shr (bad) lock retq mov lods and (bad) icebp cltd adc mov and lret mov (bad) adcl add sub xchg sarb cmp loopne (bad) enterq mov loop xlat lret mov (bad) out (bad) sub movabs outsl in mov pop test frstor stos xor fadd mov rex.RXB enterq (bad) (bad) jmpq icebp (bad) lahf (bad) cmc rex.RXB mov scas mov cwtl (bad) (bad) outsb jno js adcl stos cmpsb mov sbb (bad) cltd (bad) fiadd je cwtl (bad) sarb ror repnz adc fadd (bad) retq (bad) callq xchg sub rex.B rep jo mull xor push mov addr32 adc xor jae shr retq cmp rex.RXB rex.RX push mov rex.WRXB rcl stos mov test or (bad) xor (bad) out cmp xor push cli ror mov (bad) fucomip int mov js add pushfq xchg loop (bad) pop lcall rex.RXB rex.X ss mov (bad) outsb sub mov push icebp jmp enterq rex.WRB (bad) (bad) or cmp cmpsl xor or jo (bad) push fistpll and sbb jge lret fnop rex.RXB mov (bad) xlat mov loop xor xchg cwtl xchg (bad) jae xchg out mov pop repnz or xchg test add mov insb mov mov push rex.X movabs pop and (bad) pushq xlat sub sub mov cmp pushfq pushfq (bad) shll fs mov imul jo rex.X jne movabs sahf xchg shll (bad) mov mov adc outsb xchg popfq xor (bad) mov mov push push cmpsl in or sti lret sbb in mov (bad) push lods jbe and ja mov add lock rex.WRX rex.X rex.B cs and in mov pop mov (bad) cwtl stos push (bad) mov adcl shll push outsb cmp clc mov xor (bad) mov (bad) ficompl jp (bad) rorl repnz mov callq nop lods shrl outsl retq sbb test (bad) push rex.RX rex.RXB jae,pt adc (bad) push fucomp stc xchg es data16 cmp andl out xor jge outsb lret (bad) ss repnz push (bad) and (bad) cs and (bad) (bad) sbb cli rex.WRX lret mov mov jns xchg xchg xor fbstp and rcll ss fnsave add adc and mov movabs movabs xchg callq pop and (bad) mov jg xchg retq sbb (bad) mov (bad) std jp pop shl frstor add lods mul add subl out (bad) (bad) cmp sbb ss movabs movslq cmp xor rex.WB repnz retq fwait cmc xchg rex.B scas or xor lahf xchg mov mov xchg and pinsrw mov rclb sbb mov pushfq xor jle nop fnstenv mov in rex.WRB fwait imul (bad) cmc push roll jb adc (bad) rex.XB rcl and repz outsl sbb pop xor push and push in int3 (bad) out nop xchg fnstcw mov sub (bad) and jo xchg lret shr (bad) retq cltd adc sub cltd pop insl lea or xchg rex.WXB push cmpl repz mov mov mov rex.WB sbb mov outsb icebp (bad) sbb xor movabs cmc (bad) out xchg mov in lock mov out test jo (bad) enterq jo pop icebp jg iret neg cs (bad) stos idivb mov mov (bad) (bad) (bad) test pop cmpsb sbb rol movsb loopne rex.RB jg pushq faddl fstpt (bad) int3 (bad) popq (bad) xchg (bad) sbb cmpsl xchg xor and fstl cmp jno rex.WB (bad) test fldt (bad) mov mov fld (bad) mov xor sub (bad) push callq fist sbb in cmp jnp movslq sub rolb cmc sub fwait add scas fadds pop jg addl xchg cmp lods pop (bad) int mov (bad) movabs movabs negb jno jo hlt mov cmp xchg or rex.W push xor mov insl xchg adc jo mov movabs insl rex.RXB (bad) mov xor xchg sbb scas movsb xor jmp je (bad) mov rex.WRXB (bad) xor cli jno sar rex.XB insb (bad) (bad) sub rcl jne roll sar jrcxz cmpsb roll rex.W lret lret rex.WXB icebp or rex.X mov jge sub pushfq iret jb adc and fnstsw xor cmp notb and rorl (bad) mov xlat (bad) hlt adc (bad) lahf push movabs xchg xchg in shl mov (bad) out addr32 mov lock xlat movslq or cmpsl jnp insl jb (bad) rorb (bad) cmp rex.B adc (bad) xchg (bad) xor or or xchg test rex.WB (bad) adc add xchg (bad) and cmpsb and ss (bad) jmp std int rex.RB push test (bad) mov sar (bad) loop mov push pop xchg pop rex.RB or enterq jnp pop loopne pop and movabs (bad) sbb ss and sub (bad) jmpq mov sahf pop sub mov out mov imul adc and pop rex.RX gs sub xlat (bad) fistpl push clc imul add xchg rcr pushfq (bad) xchg push in repz (bad) pop (bad) adc xchg enterq add movabs sahf mov cs enterq popfq sti add xchg (bad) (bad) (bad) push cmp mov in rex.WRX xchg jo xor roll sub push jmp or je pop stc jl cwtl xchg sub rex.W movabs (bad) rex.RXB add push lahf add pop data16 rcll fs and cmp movabs imul pop lret rcrl lods sbb add push xor fwait movsl mov repz std lret push mov cmp loopne test pop mov rex.WRXB rex.WR scas outsl clc enterq ss mov in fnstenv (bad) adc jg rorl fistl cwtl xor rex.WR rex.RX (bad) insb fiadd shl icebp and (bad) rex.WRX cmp jne mov (bad) (bad) mov or sub mov ficom mov sarl or (bad) cmp and mov jge sbb scas add lock roll mov (bad) out (bad) std sbb or roll movabs xchg xor movsl xlat xchg (bad) (bad) add jge (bad) jb rex.B xchg adc xchg rex jle sarl in (bad) xlat imul hlt retq (bad) or mov and in rex.W sub xchg test (bad) (bad) rcrl mov fildll rex.X cmp rex.XB test shrl jns adc push cli loope rex.R ds stos loop loopne rex.WRX push xchg pop rex.B rex.WXB adc xor xchg lret (bad) xchg fsts fcomps (bad) imulb pop rorl jo (bad) (bad) add outsl (bad) add int (bad) xor (bad) movsl jo cmp int3 icebp cltd outsb sahf mov jle lock loopne sbb imul (bad) add cmp xor pushq (bad) sbb (bad) pop xchg add fcmovnu out in insl jmp jmpq movabs sub sub in or mov jl cmpsl pop xchg mov insb mov mov (bad) pop and js cmp rex.W sarb pop push push or int movabs pop (bad) (bad) fstpt cmp jrcxz retq je rex.XB sub jle fxch and xor rorb xchg js mov fdivs clc insl add sub out fisub rorb js lcall sbbl mov lock push cwtl movabs cmpsl int3 or mov xchg loopne sub add scas rex rex.B cmpsl mov fstps add retq mov fidivl fsubl fadds scas stos rex movabs cmp (bad) sub and xchg sub jbe or add (bad) fstps sub (bad) fstpl ds xchg sahf rex.WXB cs (bad) rex.R (bad) xor mov add fisubrl pop retq kmovd retq (bad) fs divq pop in (bad) (bad) rol test orl test and test jns je enterq add mov and sub scas (bad) sbb and cltd shl psubusb push test sbb cmc push add or (bad) es gs sbb movb (bad) rex.RXB jrcxz fucomip ss enterq (bad) test test hlt (bad) or xchg outsb cmc fildll repnz (bad) fbld mov rex.WXB fcomp pop mov (bad) jrcxz (bad) cli add add fildl sub shlb adcl fwait sub scas out sbb (bad) insb jnp in jno clc mov testb cmpsl or iret test (bad) rorl lods and pushq ss xor jp or movabs lret xchg jmpq (bad) sub xchg (bad) adc js xchg movsl (bad) lods rex.WB push stos add rcr int movabs (bad) ror (bad) sub loope sbb repnz cmp jmpq or icebp out rex.WXB rex.X (bad) (bad) iret fwait shl jg sbb shll mov lea adc fisttpll icebp (bad) mov nop shrl int3 stos (bad) mul xor mov (bad) rex.W add movabs jrcxz movabs (bad) jbe sahf adc (bad) cmp and xor (bad) test (bad) mov movaps jmpq je lods rex.WR repnz sar (bad) loopne adc (bad) movabs xor rex.B out (bad) or mov cwtl xor jl xchg jno (bad) pop cs lcall ss sbb add mov in add adc (bad) mov movabs pop popfq mov jnp and nop cld incl mov mov push or push movabs rex.WRXB (bad) (bad) mov orl xchg cli insl mov iret pushfq cmp jne imul lock shll mov fstpt (bad) rex.R push mov in rex.WX repz fwait and xor insb test jrcxz lret jl pop icebp jno lock push or rex.RXB in sarl callq ror callq in (bad) (bad) (bad) mov fistpll or in and adc pushfq sub push nop (bad) rex.B ss push or rex.RB repnz ja outsb cmp (bad) sub (bad) (bad) push icebp jg decb shr out (bad) retq lret lcall jle cmpb rcll int rex.R nop mov fwait outsb sub pop sbb pop fsubrl xchg out rex.W loopne adc (bad) xor rcll adc (bad) mov fsubl add (bad) pushq out movabs test sbb sarb xchg lock sbb (bad) mov jmpq in (bad) cmc out fxch (bad) rol push mov rcll fsub movsb jne adc insl leaveq push mov int or sub movabs or dec cmp mov in jmpq fwait insl movsl push xchg sti push shrl addl add rcrl movsl pop (bad) icebp xor in cmp xor mov retq fstpt (bad) shl xchg cmpsl test rorl shl rex.RX in (bad) pop sar and xchg lret (bad) icebp jp xor mov rex.RX ds jnp movabs fld rex.B sti rex.XB cld mov pop jnp sub pop rex jns sub jb ja (bad) (bad) outsl (bad) xor movsb nop xchg test pop ss fild icebp fwait test rex.R sbb sub and mov add or rorl insl (bad) (bad) and (bad) xor sar xlat outsb rex.WR and rcr jo xor add sarl hlt (bad) lea movslq cmp cmp outsl (bad) ss (bad) movsb jno and sub in pop out ss stos fadd and cmp rex.W (bad) xlat xor (bad) mov fwait imul pop pop loope adc retq mov out mov mov adc test rex.WX rex.WRX rex.X add jp ss int fcomps hlt js sub cltd scas mov out rex rex and repnz lahf stos rcrb test repz sbb (bad) cli rex.RX js or (bad) push movabs invd pop int rex.W hlt rex.WRB fwait sub jo int3 repnz xchg or retq rex.WXB fsubrp rclb mov xchg test ficom insb stc add jmpq (bad) je jo mov mov ss adc sub push (bad) cmc add repnz lock nop sbb sbb add xchg xor jmp enterq movabs leaveq enterq sbb movabs subl repnz fsubs (bad) and rex.XB retq push or or and xlat jae mov xchg adcl test fisubrl in or rcrb mov callq sahf fmuls add (bad) add sub (bad) and imul (bad) iret lock and imul jle jo adc iret push std pop retq cltd rex.WXB icebp mov add rex.WX rex.RX jae popq add (bad) test sbb insb rex.RB ficom jnp (bad) sbb (bad) mov cmp (bad) gs pop stos in (bad) fsubrp add cmp sbb mov scas (bad) (bad) (bad) jo clc ja imul pop rex.RX push (bad) jno addr32 xchg mov test pushq rex.WB sbbl mov out jns loope movsl jb sbb (bad) (bad) fisttpll std pop rex.XB sbb scas rcll bnd mov xor stos mov (bad) int (bad) shll test stos or push cmp jo mov jg (bad) rorl fdivrp fs rex or insl jne ja nop or (bad) jp pop xchg popq mull movslq (bad) jbe xchg lods insl rex.RB sar fsubrs (bad) movabs stc jge shrl and adc (bad) sarl (bad) mov sbb and xor (bad) fnstenv add pop mov fidivl fbld and adc rex.RX cli adc and clc addr32 or scas xor (bad) push (bad) rex.RB (bad) rcll cmp pop sbb scas pop retq ja cmp sbb xor pop (bad) ror nop (bad) cltd and mov movsl adc sarl subl mov loop mov jmpq shr stos movabs (bad) repnz xchg add movsl scas sub (bad) jb sbb sub movabs fs or int3 mov (bad) cwtl (bad) (bad) imulb add movabs cld jp add (bad) mov ss movabs or (bad) (bad) rcll (bad) push and callq fnstcw outsl and jns add push sar (bad) int push or mov mov sub rex.WR (bad) addb push (bad) loopne xor std rcll adc pop repz push mov rex.RX pop (bad) scas adcl imul loop jo cli rex.WX sbb fild mov out fnstcw (bad) jge mov je rorl out in movabs sub rex (bad) movsb cmp fistl mov test rcrb (bad) mov cmp and callq lret sub movabs adc add jns hlt pop loope (bad) loop cld (bad) mov nop out xchg movabs inc jge pop jrcxz movslq (bad) jno and (bad) sbb rex.WXB rex.X insl mov roll rex js rex.WR (bad) notl jmpq pop sub sbbl cld movabs icebp pop (bad) mov rex.WR movsl insb adc movabs adc add testb xlat (bad) cmp rex.R and retq (bad) fwait rol xor cmpsl movabs jno (bad) (bad) lahf fincstp jp testl add lahf mov rex.B rex.XB or shlb xchg xchg (bad) enterq sbb lods fdivr sahf rex.WRX test popfq (bad) (bad) movabs (bad) fcomp mov mov push cltd xorl nop rex.WB mov mov test shlb or insl retq int3 mov and rex.WX cmp sbb (bad) sarl xchg mov fidivr psllq lock add pushfq cmc jns sub pop repz retq mov ja push repnz and fs cmp (bad) loope mov add repz es retq jl (bad) stos mov movabs (bad) adc and movabs add xor rex.WRX mov or jp lea cmp pop and xor lods cmp cmp rex.R std repz rex.B std pop adc pushq roll (bad) jne test lahf add and addr32 cmp enterq icebp add mov sbb cld fstl cmpsl pushfq jnp rex.B jbe movabs outsl mov (bad) movabs int3 loop adc (bad) and xchg cmp shll loope out (bad) push (bad) mov (bad) sarl lock shrl lea pop std add xchg out sarl insl mov scas jp (bad) fisubl mov std mov (bad) stc mov out or xor outsb sbb add out (bad) (bad) (bad) fs push loop sub pop cmp cwtl decl xchg rcl int3 pop testl adc fisubrl pop (bad) or (bad) sbb imul je sarl sbb mov sub std jnp mov add jnp lock push mov jae in or jbe (bad) kmovb xor add mov (bad) rex.WR mov mov rcll rex.WRX jbe movabs repz xor pushq sbb or add jl jns rex.B hlt or in rex.R repz xlat addr32 (bad) mov insb xchg imul push sbb mov rex.RXB and fldl fnsave cmpsl xchg add or stos mov (bad) movabs lock loopne xchg pop icebp adc repnz cmp sbb (bad) or gs sbb repnz jne (bad) mov sub mov (bad) clc sub (bad) (bad) fwait cltd shl movsl add in rex.XB jae or ss (bad) mov (bad) divb icebp cltd pop adc lret sahf (bad) add mov xlat fldenv pushfq fsubl movabs fidiv int3 in js adcb xchg pop (bad) sbb mov sbb outsl ja addr32 (bad) adc test or lock rex.RXB rex.WXB neg (bad) jns stc (bad) add pop jnp cmp (bad) mov lret (bad) (bad) (bad) sbb leaveq (bad) (bad) in ds rex.WRX int3 vpandn (bad) rex.B rex.WR and icebp rex.W (bad) mov (bad) pop rex.XB and (bad) xor cmc sarb mov mov ss nop rex.WRX pop test push enterq mov mov xchg or in mov cmp lret lret (bad) sub outsb jrcxz lahf pop repnz pop pushfq mov sub (bad) jo or pop rcrl lret jae out xchg (bad) in stos (bad) mov and rcll rol enterq cmp push divl in xor sub cmp rorl (bad) (bad) cli or (bad) xchg cs xlat jmp (bad) (bad) hlt jg mov rol fldcw sub sbb and jns (bad) shl push in hlt add out pop mov mov jl jle sahf cmp movabs loop mov jb imul add gs shrl sets and xor (bad) and xchg cmpsl rcrl imul pushq loop rex.WX pop adc sub jbe in (bad) rcll add mul (bad) pop (bad) (bad) sbb (bad) and insl or pop (bad) movb in cmpsl jne xor cwtl adc adc xchg or mov xchg fadd jnp test jmpq jmp (bad) movsb (bad) pop sbb cmp sbb mov lret xlat mov push xchg or sbb jge cmp sbb idivb rex.WB (bad) movabs test (bad) mov (bad) test sbb pushfq (bad) imul repz add push notb (bad) push pushq xorl sbb cmp out (bad) loop (bad) fwait (bad) rorl and insb retq sbb jae (bad) movsb add xor shrl add xchg orl repz jl xor jmp xchg sbb movabs int out callq sub lea lods adc loop,pt je fdivl roll test and popfq sbb fst movsb loop push adc jnp repnz sub (bad) test rex.WRXB rex.WX in or fs shrq and mov xorps movslq outsl rex.RB (bad) (bad) sub and hlt xlat cmpsl (bad) sarl and (bad) sarl add shrl (bad) cmp jae push cs movslq je int3 add enterq rex.WRXB (bad) cmp movabs mov cwtl jno push rol subl sub (bad) test cld mov cmp movabs imul pushfq cld sub (bad) test adc (bad) test (bad) xchg xchg ja outsl and (bad) rex.X loopne negl pushfq cli pop lret and shr callq outsb lcall rex.R fdivrs (bad) movabs fwait (bad) jo mov jge adc xchg je lret test or lods rclb push fdivrl pop pushq movb xor (bad) out push push rex.WXB jae hlt (bad) and mov (bad) xchg insl rex.RX push xchg shll push rex.WB rex.RX clc stos roll imul cmp cmc rex.W shll (bad) or lret push (bad) shll rol js es rorb popfq sub hlt jrcxz ljmp xchg (bad) (bad) sbb adc adc fstl fstps push loop rex.WXB jb insl mov loope mov adc push out (bad) out fisttp push repz test rex.B je retq (bad) pop add pushfq loopne (bad) ffree ss mov xchg jmp (bad) mov in fldl or enterq (bad) neg add popfq test rex rcrb and mov stos adc (bad) mov sub xor xor loopne movsl adc jrcxz int outsl xchg movabs rex.WRXB shrl shrl rol jnp movsb out adc (bad) pop jno test decl rex.RX and add pop rex.XB pop and sub movabs fistpll in rcrl jae nop outsb hlt out jns andb js (bad) int3 or rex gs cmp shll out shll pushq jns jmpq (bad) outsl or pop xchg mov rol push push stc (bad) xchg jrcxz int3 shll mov mov (bad) test adc scas callq add iret (bad) sbb add xchg shll movabs sti (bad) test jmpq mov cs sbb push or (bad) adc or cld roll lods (bad) out add fcmovu rex.WRX mov jge or cmp (bad) js sbb mov mov movslq cmc pop (bad) enterq movsb (bad) xchg frstor (bad) and negb outsl loope fisttpll xchg (bad) js mov jge in (bad) or (bad) and insl jno iret std (bad) cmp (bad) fs or xor lret stc lea (bad) icebp and mov pop mov imul cmpsb data16 sub movabs sahf (bad) jno fimull shrl (bad) test mov scas movabs scas roll fwait mov sbb jmpq (bad) ja rcll pushq xor (bad) loopne rex.RXB scas insl rex.RX add mov rex.RXB push mov or loopne in rex (bad) adc add jge cwtl pop xlat loope divl (bad) (bad) (bad) ss mov rcll popfq pop int in (bad) (bad) pop roll push mov lea sbb movabs (bad) outsb jmpq movabs and fcmovu push (bad) and (bad) (bad) scas enterq loope cwtl pop fcmovne rex.RXB cltd rcrq pop out movabs xor pushfq pop cmp xchg cmpsb loope adc fsts and (bad) pop xchg lods (bad) scas xlat mov in sahf (bad) mov rex.XB xchg rex.WRXB cmpsb xor cmp (bad) rex.WXB adc in jge cmpsl (bad) xor mov in or sub roll add (bad) sarl nop movsb cld cli movabs out fwait mov out sbb adc mov (bad) shr loope icebp mov shll xor jbe stc sarl xor (bad) xchg sbb push movabs fbstp iret jnp pushq movabs cltd mov and (bad) imul retq xchg rex.RB lea cwtl (bad) loope lods mov push and mov adc cmp adc in sarl sub add xchg (bad) or mov in out rex.WX (bad) andl sbb push repz mov cmp movabs mov and xchg push out mov cmpsb jae cltd push fs (bad) add retq (bad) rex.WRXB jno insb (bad) jp pushq (bad) lods popfq add sbb push (bad) xor outsb mov callq imul jmpq rorl (bad) fimull lods movabs (bad) out adc loop pop repz jmpq jmp sarl (bad) rex.WR rex.XB adc mov add add rorb xchg stc fiadd sarl mov out (bad) rcrl roll fs test and shrl movb xor rorl jmp test cld movslq rex.RX jo xchg push (bad) rex.RXB jge pop int movabs testb clc jne (bad) and rex.W rex.WB cmp xchg scas ja shll pop add shll jmp (bad) mov outsl std or and rex.WX rex.R rex out loope int3 rcll add es mov jnp popfq (bad) xor (bad) adc jbe pop cli rol (bad) movslq movabs and out sahf stc popfq fld cs pop fisttpl test pop adc cmp loope (bad) xchg fs rol cmp movsb rol (bad) test scas fidivl (bad) retq jmpq rex loopne sbb xorb add sbb jae lock xlat (bad) addr32 mov mov (bad) fnstsw add jo mov (bad) loope test xor (bad) cmp loope int pop and rex.WR mov mov (bad) popfq (bad) es mov pushq pop add in pop rex.WR rcrl rex.X sub or xchg and fadds repz or add sbb pushq and flds movsb mov xor add adc ss rex.WB leaveq repnz js stc test jmpq (bad) push mov rex.RXB stos fdivrs cwtl (bad) push xchg fdivrs and (bad) adc mov xor push js cld int3 xor gs lea xlat (bad) mov pushq outsl cmp rex.WRXB rcr (bad) shl jl (bad) xor cltd shrl (bad) lock (bad) rcll out retq fsubrs loopne cmpsb sbb loop mov nop (bad) pushq cmpsl mov adcl (bad) fcmovnb sub data16 shrl mov sbb (bad) lret xchg add and lea or jno scas sub outsl rex.WX scas rcl rex.X sub jne sarl xor (bad) rex.WRB cmp rolb imulb rex.RXB stc rex.B rex.WRX movabs addr32 xor jge leaveq shll sbb push movabs jne add (bad) fwait adc iret pop rex (bad) inc (bad) push stos scas sub hlt insl cld movabs (bad) rex.WR and insl (bad) (bad) fisub xchg xor jne out cwtl leaveq (bad) out rex.XB movabs fdivrs retq xchg (bad) mov (bad) and mov insl push pop add stos repnz xchg jmpq mov xor (bad) enterq imul jne movabs hlt rex.R add (bad) xlat sbb int3 cmp (bad) mov mov jb (bad) sbb rcr rolb or rcll fs jnp jg adc lret cmpsb or mov push test movabs (bad) scas fnstenv rex.WX mov shll add lcall cmc test cld decl mov mov out scas rex.WRX cmp callq (bad) xor rex.XB rex.RX lock enterq xchg (bad) int or incl imull (bad) stos sahf loop rex.B lock jne adc shrl test lods cs (bad) xor adc rex.WRB ss mov (bad) mov or mov jnp jmp mov (bad) mov (bad) xchg (bad) jle (bad) fisub push ds mov xor xchg mov movsb jg leaveq movabs sahf pop rex.XB vpaddb out js retq (bad) jp (bad) add sub and in and xlat adc orl imul lea or (bad) jbe popfq rex.W nop pop add clc rol jno pushq mov rcll xor pushq (bad) mov add int3 (bad) sub jmpq es cli movabs stc mov cmp mov cmp (bad) and cltd loope movabs or inc (bad) lock fwait add imul push add shrl sbb movsl rcl fnclex (bad) lock cmp sub push cmp (bad) (bad) (bad) ss rex.WXB xlat mov (bad) repnz std pop leaveq rex.WRX sbb fmulp pushq lock rex.WRX sub (bad) andl jns xor test rex.RXB add jno adc rex.RXB rex.WRB sub shlb test and (bad) (bad) sub psubusb sbb fldcw movslq lret mov jns test pop xchg imul test sbbl je mov (bad) mov (bad) mov mov xor cmc shrl mov shll add and jb cwtl add push sub push loop (bad) imul jns jl cmp xchg sbb mov and shrl mov cmp (bad) adc mov xchg mov or scas pop loop mov add and jmpq mov rcll (bad) popfq xchg jae jg cmpsl mov outsl xor lea xor (bad) ja rcll xchg mov jb test rorb (bad) xor adc imul stos fwait clc add out outsb ror adc rex.R mov or rex.B rex.WRXB movslq (bad) sarl cs (bad) mov xchg mov mov loope add sub sbb (bad) iret shr mov rex.W xorl pushq mov rex.RB (bad) fsubrl add retq (bad) or mov fadd repnz push stos roll xlat jbe es adc sub rex.WX jg adc (bad) enterq out rex.WRB or (bad) int3 je fnsave stc push rex.WRX nop jae add xchg (bad) iret mov mov mov rol or int3 sahf sub mov mov cltd movabs rex.XB std popfq neg jo test cmp xor (bad) jmp cli mov mov lahf or (bad) pop (bad) cmp pop in int rex lock xor (bad) xchg rex.RXB cltd sbb push movsl or rex.WRB sub shr (bad) (bad) pop pop out pop sub and lea xchg jns in mov rex.R xor jl jrcxz (bad) jo xchg int sahf mov data16 xlat (bad) in scas cmp rex.B rex.R xchg rex.B add fnop xor jbe or rex.X fwait repz xchg imul pushfq (bad) (bad) cvttps2pi lods movabs loope fstps (bad) stos rex.XB leaveq loopne mov fnstsw cltd and mov (bad) imul (bad) rex.WXB mov mulb repz movabs loopne (bad) mov fs (bad) adc jno rcrl repnz mov xchg pop (bad) or sub cmp stc je mov pushfq push jo jrcxz in movabs int3 add (bad) (bad) add fldcw addr32 js int3 clc pop jbe push and rex.RXB or (bad) movabs fcoml add fs repz push test lahf xlat stos stc in xor sub (bad) cmp movabs add mov (bad) xor fdivrl jle jmpq and clc std stos sub movslq push mov loop pop xlat and ja jno jb xchg or jmpq (bad) in (bad) (bad) pop sub callq fcomip rex.RX push retq pushq adc push outsl adc (bad) (bad) movabs xor stc test jb mov ss and pushq add retq (bad) repz jge fnop int3 xor rorb imul rex.WR ss mov int3 flds xchg or lods clc (bad) jbe sub rex.WB repz loope loopne repnz (bad) mov rex.W mov adc clc insl (bad) pushq pushq inc mov leaveq test rorl movabs jl lock sbb (bad) rex.RB xchg add fdivrl movsb push adc int3 outsl mov xor imul jb push pop mov (bad) and int3 cmp movabs pop lret rex.RB hlt xor cli and pop rcrl pop sbb in (bad) jns cmp retq data16 (bad) int3 jge push (bad) jbe adc adc rex.XB int3 xchg cwtl jns rcll pop mov adc rcll add adc fs lods xchg pushfq cmp and cmp mov sarl (bad) imul (bad) rex.RB fwait rex.B xor cmp test jp sbb or rex.RB (bad) or add push movabs retq xor (bad) adc add and hlt fstl mov shll shlb fs stc rex.WX rcrl rex.RX add frstor adc (bad) iret test mov stos fldcw jle (bad) scas lret pop pop std mov rex.WX imul stc fbstp movabs sbb pushfq rex.WX rex.R lret fsubl jmpq leaveq push (bad) (bad) xor lahf out fist xchg xor fnsave fwait je jne rcrb add ss (bad) cmp add faddp movsb (bad) (bad) (bad) push rol xor push mov add (bad) jl mov push sbb sub jb dec (bad) or or xchg loope hlt (bad) or shl in rorl loope in cwtl push sarl lods (bad) sarl rex.B rex.WXB pop mov lea jrcxz fstl (bad) loopne pop faddp js xor cltd or jrcxz (bad) mov scas cld push jp push mov push jns (bad) (bad) sbb movabs movslq rclb rcr (bad) xchg negb cmp movsl lahf cwtl sahf (bad) scas scas cmp and cltd mov cmp shrl sub xchg cmpb sbb movabs push rex.XB push loop jge add (bad) cmp (bad) (bad) js sub mov imull shrl (bad) (bad) pop (bad) lock test sub in test fsts add sarl (bad) enterq pushfq xor shll (bad) testb push addr32 cmpsl pushfq sub gs (bad) (bad) sbb jns std (bad) sahf negb stos addl pop mov jmp (bad) add add jbe cmp shlb fisttpl (bad) out or or stos xchg (bad) xor sbb test (bad) (bad) pushq fadd rcrl jge lret shrl jle rex.WRX int rex.X mov (bad) mov rcr shrb leaveq add nop (bad) sbb rex.WRX mov loop rex.WRB rcll sub rcrl in sarl (bad) sbb mov add lret push cmpb mull out (bad) rex.WRX addr32 pop leaveq movabs repz pop xchg rex.WX rex.RB cwtl mov sbb add mov (bad) (bad) rex.WRX movabs mov xor xchg pop (bad) mov movabs sarl movabs cs test (bad) xchg (bad) mov lret stc or add cmp rex.WR xor rex.XB mov mov jbe or fcmove pop (bad) sub (bad) add mov (bad) xchg int3 movsb jmpq cmpsl pop or out mov pop cmp (bad) sub (bad) fstpt mov jge iret std rex mov push bnd push jle xlat cmp mov adc xor ja fiadd cwtl int3 xchg in adc jbe fcmovbe xor sub xchg adc xchg push sbbl icebp mov (bad) cmpsb loop xlat add (bad) test enterq (bad) sub scas cmpsb nop add mov out xor rex.RX iret test xchg comiss sbb repnz mov cmc (bad) mov data16 adc or pop in ja rex.B lock sub jno jge (bad) mov or nop orb rex.WR lock shrl scas test callq xchg cmp retq mov out jrcxz js mov sbb in (bad) jg outsl or movabs lods sub xchg rorb push sti (bad) je leaveq test sub js (bad) lock movabs cmp rcrl mov callq jns shll (bad) js ja add and rex.WX sbbl retq sbb (bad) shrl icebp (bad) rorb cltd (bad) sbb xor (bad) je jo pushfq push rex.XB int3 mov pop mov xor mov std fistpll rex jge xchg pop add sbb retq rex.XB rex.X jl add adc roll xor (bad) xchg bnd (bad) scas (bad) add xor mov fwait stos sub add push xchg (bad) cmp rex.RB shrl cmpl jp cwtl pop (bad) (bad) mov push cmpsl (bad) rex.XB (bad) movabs jg mov xchg or repz rex.WRXB movslq adc out rex.WRX stc mov (bad) (bad) lret (bad) movabs lea in pushfq pop pushq imul xor cwtl data16 mov mov rex.R fistl out and repnz in jae xchg adc enterq (bad) outsb and mov repnz lods rcr (bad) fbld jg gs rex.B lock rex.WRXB rex.WRB gs jg jae (bad) adc insl mov mov movabs mov (bad) or adc pop (bad) mov negl mov push retq movabs sti int ds mov push movabs test cmc mov sbb sub leaveq jbe lret lods push add push shll iret cmc (bad) and jb jno rex.RB fidiv js sti pushfq pushq mov lock (bad) cmpsl inc sti or (bad) push rcll add (bad) sub mov (bad) outsb rorl cld cltd in sub (bad) loop add rex.WXB and push fidiv push push xchg sub shll sub iret xor or jb push lock sub scas xor rex.RXB xchg rex.X in es incl cmp (bad) repnz rex.WX jg insb sbb (bad) xchg gs fdivrp rex.X and dec push cmp xchg xor lret xchg jo fcompl rex.R (bad) out xlat (bad) iret add mov add rcll data16 jle sar cld lret movabs jmpq imul lahf or sub sbb out add ror cmc rex.X add fwait pop (bad) rex.X shrl ficom and mov in rex.X repz xorl (bad) loopne add sbb xchg xor mov bnd or movabs (bad) adc retq and stc cmp out loop imulb jge (bad) ficoml cwtl (bad) (bad) cmpsl add sbb rex.B sbb roll xor push lods (bad) cmp cli adc int3 xorl sub lods movaps (bad) pop xor rex.WRX rex.WRB adc pop (bad) clc fsubrs loop adc or data16 (bad) fdivrp addl (bad) pop (bad) test rolb mov (bad) movsb xor (bad) xor in cmp rex.WB (bad) xor rex.W rex.WB adc movabs push mov outsb (bad) fsubp add rex.WR ja push shll jg testb enterq mov add jmp (bad) iret cld jns stos xchg (bad) and repnz in sti (bad) loope out mov push (bad) xor jne jnp xchg (bad) neg pop and callq hlt addr32 sti pushfq fisubl sub or jrcxz rex.WX faddl and int mov xchg shll (bad) mov in (bad) repnz test xor loop rol rex.WX mov rex.WRXB int rex.WRB iret in rclb (bad) rex.B scas shrl rex.WRX mov outsb rorl cmpsl add (bad) mov mov fmull rcr gs and (bad) out add ja in sub rex.X rex.B (bad) pop js shl out fwait jns fsubs jo xlat stos mov cmp (bad) test rex.WXB (bad) mov in rex.W xor cmp mov sbb (bad) and lock xchg movsb pushfq jne (bad) xchg mov sbb (bad) (bad) pop lea (bad) retq mov mov sub push mov rex.WRB rex (bad) push gs icebp xor int3 rcrl cwtl inc add (bad) out rex.RXB rex.RB sarl int repnz adc icebp jl mov pop movabs xor rolb (bad) xor outsb enterq rex.B mov add rex.R or out cmp mov xor mov sarl or xor xchg (bad) cmp movabs push (bad) fisubl add gs sahf int3 in mov adc mov xor add (bad) mov push test xchg mov outsb xor rex.B rex.XB sarl and (bad) test adc or (bad) mov cmc test mov or rex.WRB (bad) sbb jge notb nop fiaddl (bad) (bad) lea xlat (bad) rcr retq out imul push cmp mov out xlat and pop cmpsb sahf mov sbb xor rcrl lret sbb (bad) add cmp sahf jp sbb (bad) pop push jnp add (bad) shl add jge pushfq rolb or (bad) or add sbb sbb rex.B mov sub xchg (bad) mov sbb sbb lret rcll xchg xorb xor in or and xchg jp (bad) xchg pushfq jmp retq loop sub mov (bad) mov add sarl xor rex.WX cmpl xor (bad) sahf sub rex.B mov test rex.XB int3 jbe fs nop cmpsb mov sub (bad) jae (bad) mov addr32 jmp sbb rcl int mov (bad) (bad) mov movabs (bad) (bad) adc loope rcl sub lret xor (bad) cmc repnz (bad) jmpq adc lret xchg mov mov xchg jne loopne loop rorb xor sub sbb (bad) jrcxz sub add sbb rex pushfq xchg out test (bad) scas (bad) mov rex.W rex.WB callq rex.WXB jp cmc rex.WRX sbb jle and rex fiaddl data16 or jno (bad) rex.WB cqto int3 or fsubs outsb rex.RX rex.RX es enterq rex.WXB rcrl or (bad) fist xlat xor sahf fcmovu popfq fdivl (bad) sbb (bad) fsubl mov (bad) or gs (bad) cli scas adc (bad) ja or adc pop cmpsl add out loopne lea adc leaveq rex.WR sub jns xor (bad) mov int3 lahf rex.WX mov lea fstpt adc jb (bad) rol (bad) mov movabs movabs adc cld pop xor out mov push in (bad) jmp sarl rorl loope (bad) lock sbb negl adc add fsts or scas sbb orl mov (bad) jne js repnz mov movabs sub mov pushq pop out push out push scas (bad) jl lret mov insl rex.XB sahf pop adc in int and movabs (bad) repnz xchg push mov cmpsb (bad) (bad) push callq leaveq rex.RXB rcll (bad) add fidivr mov (bad) xor rex.RXB sbb nop push sub rex shl xchg jrcxz js data16 or (bad) (bad) stos out push mov push mov outsb imul push scas hlt jne in or add roll (bad) (bad) in outsb or (bad) pop xorl xlat and stc leaveq fs in lret rcl repnz fadd xor (bad) rex.WB loope int3 lock rex.WR jl xchg rex.RXB test xlat pop add sbb repnz addr32 roll sbb rclb adc mov (bad) rex.W lods shrl cld cs xor mov (bad) and hlt cmp addr32 pushq ror jmp (bad) callq mov pushfq (bad) fcmovnb (bad) test sbb leaveq addr32 cmp (bad) jbe stc cltd sub cmp mov xor andl add ss fsubrs (bad) test jle mov sbb sbb imul jl mov mov test cwtl pop rex.W loope roll jle cmp mov mov (bad) jb (bad) in sahf rcr insb rex.W fmuls jo adc rex.WRB movabs rex.X add add cltd out (bad) mov fisubl cwtl rex.R jno sahf xor rex.B mov cmp stos jnp fnstenv int xor js add (bad) repz xor pop sub (bad) rex.W rex.WRX fldz add movabs mov sbb (bad) adc xchg xchg pop cmp movsl (bad) cmp rex.RB nop movabs xchg mov (bad) or (bad) sbb cmpsl orl in imul lret add out loopne xchg or imul cmp movabs rcrb jl rex.WX shl (bad) or adc fnsave xchg (bad) in sbb cli (bad) pushq data16 cmp cld add cmp jle (bad) rex.R xchg rex.W mov push or mov adc (bad) (bad) ss rex.WXB popfq stc (bad) repz retq mov stc pushq (bad) lock lret rcrl lahf test xchg (bad) mov and adc rex ss fistpll cld rex.RB adc (bad) (bad) pushfq in cwtl (bad) fnstcw rex.WRX xchg inc je movsl sbb push notb out (bad) pushfq out movsl (bad) jmp add mov mov and test sbb add mov roll pop cmp or sbb out push addr32 insl adc sarl rex.WRX lahf outsb mov and sahf mov rex.RB outsl sbb xchg push jrcxz xchg (bad) gs add adc mov xor (bad) or mov and rex.WB mov (bad) iret (bad) (bad) sbb movsl loop lret mov mov (bad) adc (bad) jmp (bad) stos (bad) (bad) cli and imul push cld pushfq push jbe (bad) movabs mov cmp cs (bad) (bad) (bad) fisubl sbbl scas je rex.WRXB jno gs adc mov (bad) scas lret rex.WRX sbb and (bad) test sahf cmp jno rcrl lock (bad) cld outsl insl sbb (bad) xchg lret stos movb int3 mov rex.WRXB (bad) insl jmpq in outsl shrl (bad) xor (bad) lret insb (bad) push xchg cld (bad) (bad) push sub test rcrb sbb es mov (bad) jne loop and loop test rex.WR (bad) int3 movabs movsb rorl (bad) out adc cmpsb jbe mov mov pushq sbb loope fwait mov jb fistpll rclb cmc nop (bad) rorl (bad) mov movsl mov xor add xchg adc enterq cltd lock (bad) fadd or and rex.WR push sarl (bad) jns je add rex.WX rex.R icebp movabs or rex.XB push (bad) shrl rorl je rcll (bad) fdivl pushq rcll xor callq add jl hlt in rex.XB jno (bad) and and lea sub and mov lods rex.RB rex.WB jo add data16 adc (bad) sarb mov repnz rex.WR test jle rorl (bad) (bad) leaveq and (bad) (bad) mov fistpll pop fsubl cmp rex.WR mov (bad) clc imull (bad) adc pushq (bad) cmc jb mov jp stos stos add mov mov or sti cmp shll or sbb adcl pop mov and push icebp cli ror sbb ja cmpsb vmovd push stos vunpckhps (bad) mov xlat (bad) mov retq mov (bad) fs int3 sub sbb ds sbb (bad) pushq (bad) adc loopne lahf (bad) mov movsb cmpsb fldcw (bad) fsubrp adc movsb ficom jp popfq sbb mov sti adc rclb insl enterq rex.W pop (bad) push insb repnz jb (bad) fnstenv insl rex.W in xchg test mov movabs icebp faddp or add jo (bad) rex.RB rex.WRXB rex.WB sub (bad) rex.WB loope fcomi mov sbb cmp jae mov decl leaveq sarl rex.W and sbb lret cmpsb push scas rol mov jne pushq inc sub (bad) lock repz rcr lods insb (bad) xor add xor sbb test adc cmp adc and ss test pushfq jl (bad) pop sti sahf xor jp (bad) out out enterq xor xorb xchg je (bad) pushq push int roll and rorl sub mov mov movslq mov (bad) xor adc mov jne addr32 pushfq repnz (bad) cmp (bad) rex.WRXB (bad) or pop nop rex.WXB loope mov movabs icebp shll adc add rex.RX ds rcll mov mov sbb add rorq (bad) fistpl rex.WR in cmpsl fnstenv lock shrl push mov mov mov stc adc hlt pop fst (bad) insb jne xchg faddl jno (bad) cmp stos rcll rex.B (bad) pop insb rex.RX (bad) add fnstsw xchg lret cltd sbb and mov mov jb out cwtl jp add rcll xor xor or or jns add clc test add (bad) cmpsl retq rex.WRX push rex.B and pop xor cwtl xchg lock or rex.R ficoml pushfq int movabs or in mov cli xchg stos push jge fs nop or (bad) (bad) movslq add retq movabs int mov out outsb adc test sub jmpq test fsubs imul pop lret (bad) xor xchg mov (bad) rex.WRB fimull jge (bad) enterq and (bad) and (bad) cmc test rex.RXB ror test jb mov add repz jle and (bad) sbb push mov rex.X callq (bad) scas or (bad) negb movslq mov test sub mov cltd push jmpq test jbe (bad) or (bad) shr mov rex.R xor jl lret loop retq (bad) int3 jg (bad) mov add loop imulb add rcrl xor pop add iret out mov or std mov (bad) mov cs adc rex.WRXB fwait cwtl mov mov (bad) loope (bad) mov mov sbb push (bad) jmpq and loopne (bad) rcll outsb fistpll cmc rex.RX stos fidivr add (bad) rex.W xor enterq bnd (bad) xchg pushfq jp push (bad) outsl (bad) xor cmp sub pop mov std add mov sbb (bad) (bad) push mov or shrl sbb adc sbb jns movabs ficoml out rcrl outsb enterq (bad) (bad) shrl jmp mov xor lods sub push rex.X loope (bad) fmulp cltd movabs cmpsl movsl add test jl movabs (bad) cs out repnz stos (bad) loope sbb imul lea lock jb out mov mov (bad) (bad) mov add (bad) rcrl lea sbb xor mov pavgb int3 cmp nop (bad) and std sbb (bad) retq lock rex.WB adc add imul retq jnp jmpq in rex.WXB xor (bad) callq loop mov clc out lret cld (bad) (bad) jg roll scas test outsb xchg outsb test (bad) sbb push rex.WRX xor fnop (bad) cmp add ja sub rex.WRX ss out jno or and idivl addl leaveq (bad) sub (bad) (bad) cs imul clc sbb cmp (bad) xor jo fisubl gs idiv xor pop (bad) mov (bad) sub iret faddl mov or (bad) adc out adc (bad) sbb out jns rex.X (bad) movabs fs cmpsb loopne (bad) mov lock lret test and addr32 or scas int3 iret add je js push (bad) jnp test or jne lret sar (bad) (bad) pop or (bad) pop rex.R adc cmp jno in and sbb jae lcall in rcrb imul add (bad) insb cli add (bad) (bad) enterq rex.WXB (bad) add and rex.WX xor shrl clc (bad) push (bad) outsb mov ss (bad) roll sahf movabs movabs pop sbb rex.WXB mov out shrl jrcxz cmp mov adc neg cmp (bad) enterq out (bad) sbb add add rcll ja callq pop (bad) add notb sbb shrl adc rex.XB shll out (bad) movabs fwait (bad) lods repnz mov fwait pop xchg sub (bad) cmp mov jae pop and jge (bad) cmp int test xchg rcll (bad) (bad) rorb outsl mull xchg rex.WRXB rex.B iret lods mov and jne sub mov pop insl sub icebp repnz shrl sahf (bad) (bad) pop (bad) movabs (bad) rex.R (bad) hlt rex.X cmp in mov (bad) (bad) pop jl sbb mov adc jnp and shr imul (bad) lock push (bad) cwtl fs mov add xor xchg shrl rex.XB (bad) clc ficom and (bad) jnp rex.WRX leaveq jns repz fcmovne (bad) in (bad) mov cmp (bad) movabs test rcrl (bad) movsl add (bad) stos sub testl cltd cmp (bad) out xor (bad) shrl es int out rex.WRX roll sbb clc testl xor jne jg in sbb cmp fcmovb mov (bad) rex.B (bad) fnstsw rex.WB test cmpsb in sbb fild cld and scas pushfq rex.WX xor rex.WB (bad) jmpq and (bad) int3 lea (bad) ficom cltd rex.RXB rcr cmp sar lods enterq lahf add roll fistp rex.WXB sarl xor int push pop pushfq inc movabs (bad) mov (bad) and and retq mov movl xchg loop adc or pop (bad) shll scas movabs xor xchg movl movabs adc fisttp cmp fwait scas mov rcll ss fisubl (bad) mov pop (bad) jp add push rcrl sbb sub and in xor movabs pop shll test (bad) mov incl js lock rex.RB add rex.WRXB repz adc adc xchg sahf rex.WRXB addr32 cmp sub jns add jnp sub cmp pop cmc sub (bad) cmp sub rex.B mov lahf add (bad) idivl jmp js sbb rorl jne add out rex.B pushfw callq rex.WX jp or enterq push and push cmp cmp sti movabs retq enterq hlt push mov je pushq xchg repz rex.RB in rex.WR rex.WRX xor mov lahf (bad) push adc cli xor (bad) repz mov movabs stc xchg cmp jb mov ljmp rex.WR pushfq jbe outsl je rex.W adc (bad) mov or mov mov rcrl out add pop xchg (bad) jp and js loop fucomi jl sub (bad) ja jp or jg or movabs int3 rex.W push xor lret cmp sbb (bad) test rex.XB jo andl rex.WR mov sbb xchg je jns or jo rex.R rol mov fisttpl xchg mov sbb repnz xchg jge rex.WRB or jns scas movabs repnz rex.RB xor mov (bad) rex fwait mov jp out (bad) (bad) leaveq cmc mov vxorps rex.WB xchg push rex.X rex.RXB rex.WR jae ja int insb clc xchg movsb lret movabs mov and or int3 add rcll (bad) (bad) rex.RXB cltd shrl cmp lret (bad) rex.WB xchg rcl adc pushfq gs lcall and (bad) sbb adc (bad) jo cmc or movabs xchg add outsb rex.B pushfq or rex.B ds (bad) cmpsl mov mov rex.WX jb in rex.WXB rex.B cmp add rex.WXB and (bad) fwait icebp loopne adc sahf add int3 iret or (bad) rex.RXB loop (bad) (bad) (bad) out mov cwtl mov ss xor push ror jnp cmpsb jo (bad) (bad) je frstor sarl (bad) sbbb (bad) shrl je leaveq fcoml lret test push sti (bad) mov (bad) int cwtl out fbld adc fsts rex.WRX rex jno (bad) in retq rex.RB sub movabs (bad) mov mov jle callq lahf add (bad) fildl add sbb mov rex.X pop sbb movsb jb or vmaskmovdqu sub (bad) push (bad) mov (bad) jrcxz (bad) xlat cmp (bad) sbb (bad) pop (bad) popq in fcomps adc loopne sbb rex.WRXB pop mov sti sub (bad) push or jmp and push lret pushfq jp sbb rex.B and callq xchg out cmp mov (bad) xchg popfq lret mov sti xchg jo (bad) (bad) andb sbb fsubrp (bad) sub jno rex.W fiaddl pop xchg sbb movabs jmpq fldcw or adc mov fcoms inc in sbbl scas movsb mov scas callq int adc pop sub sbb jge jg (bad) sub mov (bad) mov mov and cmp test xchg push fsubl push jp leaveq add lods ror repnz sbb test cmp sub loope test mov xchg data16 rex.XB roll test sub add stc cmpsb (bad) sbb (bad) je divb ds rex.WX push cmpsl rex.W mov (bad) popfq repnz jrcxz jb movsl incl fs (bad) and rorb in (bad) movslq jno,pt jo loope icebp (bad) and (bad) rcrl rorb xchg sahf jge (bad) mov movabs cmc mov test loopne scas (bad) (bad) (bad) subl movsl rex.XB pushfq (bad) cwtl or icebp sub rex.R pop (bad) js loope ficom or movabs sbb andl iret fisubr cltd in mov mov mov (bad) test frstor rex.WR xor outsl mov (bad) sarb xchg add movabs push (bad) xorl iret jp jmpq cltd (bad) or lea rex.WRXB fisubrl fdivl (bad) rcrb sub mov jo cli adc nop pushq xchg push cmp (bad) icebp xor rex.X (bad) (bad) std sub scas retq in cmp rex.WR cmp xchg push outsb (bad) stos or adc pop (bad) lea (bad) (bad) (bad) mov rex.WR jp mov rex.WR ds push mov add rcrl mov (bad) test rex.WRXB (bad) mov cmc std callq lods cmp retq xor mov sbb lock mov xchg adc or push es xchg (bad) cltd sub xchg and pop retq retq or retq xlat xchg xlat sti add rex rex.WXB rex.XB stc int xor fsub rex.RB retq rol xchg add rep mov (bad) repnz cmpsb rorl pushq fsubl sub enterq (bad) int adc callq cs sbb jno push (bad) (bad) sub es in rex.WB jmp mov frstor (bad) out fldl fcoml test sub push jg loopne xlat int3 es cmp mov lahf xchg (bad) and fcmovu je xchg out sub jl (bad) scas cmp jrcxz cli cmp cmpsl pushfq cs bswap mov rex.WB rex.WRX jo,pn jo cltd push (bad) (bad) jne (bad) lock (bad) adc xchg nop rex mov rclb mov loope jle add int mov fist (bad) shrb shll mov rorl repz push in cltd xor retq int scas rex.B mov out repnz sarl movabs push xchg loop es mov adcl retq int push push divl sub cmp jne xor movabs xlat fistl add pop shrl loop jmp in shll (bad) popfq mov ds addr32 adcl pop ja and rcrb decl add roll loop sub cwtl data16 movabs push shrl xor shrl es sub jle xchg cld rex.X cmpsb rorl mov rorb leaveq jno sahf (bad) push mov addr32 clc shrl pop test mov and sub int shrl xor (bad) nop pop jge ficompl mov add (bad) jae faddl (bad) and rex.RX nop ds movabs rex.WRXB mov jno cmp (bad) jbe sbb pop rex.B push xor test rex.WR fsubs pop cmp add or (bad) clc retq (bad) adc xchg repz and insb xchg jp sar (bad) rex.WR in out (bad) (bad) int3 std pop insl rcll jno rcl testb and (bad) pop scas xchg cmp out (bad) imul sti xor cmpsb test mov cmp pop in insl mov jrcxz scas movsb stos mov rcrl xchg out stc rex.WRXB pop mov in add or xchg add (bad) (bad) add pop pop (bad) outsl movabs incb pop rcl xor pushq (bad) or out xor fdivs rex.XB add adc adc shrl sbb (bad) (bad) sub xor (bad) stc rex.R rex.WB sub movabs (bad) pop xor addl repz sti xchg adc rcrb xchg fs rorl (bad) lahf (bad) sahf sub fnstcw xchg out jae (bad) lods cmp ja (bad) gs test (bad) int and xchg sbb mov pop rex.WRB cmp pop (bad) xor sbb mov in xchg out fs xchg (bad) shll and cld sub (bad) cli (bad) xor or adc (bad) (bad) xor push add jno add jrcxz or cmp jnp lods (bad) (bad) (bad) mov jle (bad) movsb scas (bad) xor add or loope mov rex.WRX or pop jrcxz sahf ss rol xchg rex.RXB mov lea movabs push mov insb callq mov pushfq int rex.RXB test adc (bad) mov push shll outsl xchg (bad) test xchg cmpsl mov xorl fdivrl hlt (bad) rorl stc jrcxz pop loope sub ja sub fisubr pop rcll push rex.RX sub or sar mov es lret xchg or shrl add movsb repnz push mov (bad) (bad) mov push (bad) je push movsl lahf jle rolb cmp rex.WR lods test push xchg pop add repnz ja rex iret adc jns lock fsubl mov sarl (bad) sub mov sar lret sbb je rex.RX rex.B cmp rex.X iret (bad) jne nop (bad) hlt jmpq rex.XB (bad) (bad) (bad) loop push (bad) out (bad) movabs std shl add leaveq adc sbb fs add pop repnz push and (bad) (bad) leaveq movsb mov mov rex.WB iret rex.RX lock rex.WRX pop mov gs add shrl out mov fsubs (bad) lahf rex.RB data16 rex.WRXB movsl (bad) (bad) outsb jno test rex.XB shl hlt (bad) pop (bad) cmp lret push add adc movabs out cli cwtl fucomip rex.WXB (bad) rex.RB (bad) cli (bad) jmpq (bad) xchg xchg push leaveq mov enterq (bad) (bad) je test or or rex movabs (bad) leaveq lret loopne jae out shr mov cltd push jb pushq (bad) rolb mov sub (bad) cmpl xchg jo cltd (bad) xor fsts sub mov cmpsb xchg jg add cld adc repz jp mov imul movabs imul xchg (bad) faddl fldl (bad) ds (bad) cmpsb or in add fisttp rex.WR stc out jno bnd push xor sub mov sub xor fstps stos sub fwait insl push enterq fucomip out rex.WXB rcrl mov xchg fwait std mov retq (bad) xor xor mov callq mov xor adc jb jb (bad) movslq jno lods test rex.RX sub pushfq (bad) add mov (bad) and mov clc repz rcl xor jo (bad) enterq (bad) mov icebp or or (bad) cltd add shr sbb jg loopne and sub cmp (bad) je (bad) mov stc sub fistpll xchg pop jmpq rex.RXB fdiv xlat retq mov pop enterq test (bad) jp loopne fidivrl sub pop shll xchg movabs push shrl xchg sub sahf imul (bad) (bad) shrl icebp mov add jb (bad) bnd mov rex.R sbb sbb jge xor nop movslq rcrl rex.B addr32 rex.WR enterq mov out movabs sub shr data16 jbe sarl loopne (bad) leaveq movabs (bad) rcrb fisub and sub jle (bad) or retq gs jae xchg pop mov stos and rex.RB rex.WRX adc xor cld rex.WXB jb rex.X cmpsb movsb adc or scas stos xchg rcl mov (bad) cmpsb stc xchg js movabs (bad) push cmp out mov push rex.XB adc pop rex.WRB (bad) push rex.WR rex.WRXB (bad) mov insb and pushfq xor rcrl xchg movabs mov sarl sarl (bad) scas and (bad) pop jmp rex.R (bad) mov imul shll pop xlat rcl movabs add cmpsl stos test movslq in adc cmp and rex.WXB mov (bad) rex.WR rex.WRX (bad) push (bad) pushq test rex.WRB xor jge movl add rex.B jl sarl cmp (bad) callq cmc in repnz fs (bad) push push cli rex.RX fnsave (bad) (bad) repz (bad) rcr fistpll loopne movabs jge or movabs jns (bad) (bad) mov (bad) push scas sub pop loopne rex.WRX add (bad) xchg (bad) jg xor in rex.RB (bad) jne cmp movabs mov mov (bad) cmc fldt adc gs sarl or rex.B lock fcmovnb push add rcrl jno shrl mov (bad) imulb (bad) rex.R xor adc fimull out sub lret popfq rex shl (bad) cmp out insb (bad) or popq rex.WX sub retq icebp pop (bad) jg repz push (bad) shll rex.RXB pushfq fwait stc roll pushq rorb in (bad) xor (bad) je pop (bad) sub push xchg cld mov in cmp sbb movabs icebp lahf movabs mov and push add (bad) rex.RXB popfq push rex.WRXB mov fadd cmc pop lret lock (bad) mov fbstp or test push iret adcl rcr adc adc retq (bad) cmc pop data16 pop fmuls shrl pop rcr cmpsl cmp jo xor push (bad) jns xchg ror add sub xchg sarl cmp rcll andb movabs sub sbb std push cmp fist rex.B repz rol rex.WB mov (bad) ror jno cmpsb cmc movabs rcll mov xlat (bad) sbb shrl (bad) jmpq imul insl xor rex.WR xchg pop stc jns xchg mov cmc add rex.B sbb jp mov rcrq test rorb jbe repz (bad) (bad) adc and adc xchg repz (bad) mov lods push gs mov mov xchg cmp mov (bad) lods test repnz mov adc sbb (bad) iret pushq mov (bad) icebp (bad) std lahf push jmpq mov rcr xor pushq stc hlt nop cmc pop cwtl push imul (bad) sti iret and rex.X (bad) mov rex.RXB movb roll sub iret xchg stos nop push loope rex.WRX (bad) jge lahf mov lods mov lea (bad) push insl rcrl fs mov rcl (bad) jne and movsb mov mov sbb lods and mov (bad) repnz shrl xchg test sbb adc xor or xor xchg incl stos (bad) rex.WRX (bad) push cmp movabs fnstsw rex.XB test add shll push push jno mov jle mov cmp jbe and mov cwtl (bad) insl add lea rex.B movslq retq sbb outsl rex.WX mov xchg enterq mov movslq retq cmpl (bad) adc pop (bad) icebp nop push loope add jmpq add loopne rex.XB je cmc or adc mov mov rex.RXB (bad) adc jns (bad) sub (bad) hlt repz pop and push pop fisubl or (bad) push movabs orb xchg (bad) xor sbb jrcxz xchg pop (bad) (bad) add stos fdivrs retq xor rex (bad) roll mov (bad) outsb js imul (bad) std xor cld sbb cmpsb sub shr rex.WR or mov xchg out (bad) out (bad) sar nop jno and test and pop (bad) shl sarl sarl sub es (bad) ja data16 (bad) loope lret shr rex.WXB int3 (bad) test (bad) (bad) mull mov jl (bad) lods (bad) addr32 or jne adc and jno hlt pop cmp rex.X lret jp (bad) cmp sub and xlat pushfq and pshufw or (bad) imul (bad) xchg (bad) insl jb fisttpl adc add pop mov callq mov cltd adc hlt pushq retq mov pop mov adc (bad) (bad) rex frstor (bad) cli mov movslq pop sahf iret cmpsl sbb xor pop cs ficoml (bad) (bad) negl movslq mov fldl (bad) mov xor movabs (bad) adc mov (bad) (bad) (bad) or or rex.X callq cmp mov xor (bad) hlt cmc fwait lahf insl jmp cs or rex.WRB rex.RB imul sti stos push loop loop rex mov or fcomp rcr (bad) xor retq (bad) in xor cmp push sub xor fsubs (bad) (bad) (bad) pop mov and (bad) rex.R xchg (bad) test sbb mov in stc (bad) adc int3 sub cmpsb pop mov pop mov xchg divb push mov xlat (bad) fisttp stc outsl fistp rex.R fs fildl (bad) fwait push xchg bnd jae push add pop jno movabs sub iret rex.RXB repz (bad) sbb andl insb fstpl mov sbb (bad) out mov add rex.WR push repz cmp enterq fcmovu push rex.RXB ficom rex.RB js pop pop retq test enterq scas lret or push shrl pop push movsl mov adc cmp imul js in fidivr sbb enterq (bad) cli rex.RX xor or in ss jb pop pushq rex.WRXB fnstenv ror movsb stos loopne jmpq sar pop es popfq out shl cwtl repnz add (bad) rex.RX (bad) or push rol imull roll sbb cmp sub mov (bad) adc jmp (bad) outsb rcrl fsub roll add mov (bad) sub in scas iret pop bnd or mov loopne pop push leaveq (bad) xor (bad) in fiadd test and mov pop rex.WXB mov imul xchg sarl mov jp add pop std sahf flds or rcrl (bad) rex.WXB rex.WRB jle mov rex.R mov and movabs (bad) pop mov sbb jnp jmpq add ss movsb cli rex.XB sub cld lahf rcll leaveq test outsb je pop and fistl cmp push adc xor lock rex.X gs xchg movabs rex.W xor or add xlat rex.X adc sub or leaveq xchg mov callq rex.R push mov add fisttpll jne sbb jae and rex.WR ljmp shrb outsl fimul (bad) sarl mov subb fnstenv xchg fcompl clc rcl sbb je out hlt int sub cli sub (bad) sbbl outsb adc jrcxz (bad) cli rex.RXB push div rex.XB (bad) mov retq (bad) sub pop (bad) sub jo jl cmp imul pop mov xchg loope sub (bad) fdivrs xor test sub movsb adc int rex.WRB iret rex.XB rcr pop cmp andl mov movabs add scas rex.XB cltd (bad) push rex.XB xchg fdivrl lret pushq lods retq adc addr32 push jmp (bad) rex.WXB rex.RB rex.RX (bad) iret shrb rclb cmp in rex.WRX rex.WR pop xor and js int pop je mov (bad) add rex.RX fistl movabs add xchg cmpsl (bad) mov push (bad) pushq popfq stc fimul mov (bad) sbb cmp orl mov cld cmpsb rclb int3 (bad) fmul and (bad) sbb loopne lret pushfq mov xchg sub mov add (bad) addb add jmpq movabs test addr32 neg sbb loopne jmp xchg or int push fldl js or add cwtl jp sub (bad) movabs test int (bad) in fs adc leaveq sbb (bad) fcoml sbb rex.R repnz sub and cs cmp test or rep sahf pushq (bad) mov add repz mov leaveq jo pop lret xor xchg nop add test ror imul jle sub imul int3 (bad) rex.WRX lock movabs xchg add push rcrl stos outsl mov (bad) push jnp test and or int xor sbb adc cmp movslq adc lea rcrl mov sahf insl push test data16 popfq (bad) rex.RX sub xlat sahf add rcll sbb es (bad) movabs (bad) pushfq xor add xchg callq hlt shrl jae (bad) lahf jno mov movsb xlat add sbb rex.W enterq scas test push mov pop popfq (bad) ja or test shrl xchg rol adc icebp or xchg xor add imul pop xor rex.WB rex.R rol shll (bad) repnz rex.XB rex.WRX int jns sub cmp sti (bad) (bad) and jb jl xor retq rolb rcll (bad) (bad) out ds pop (bad) sahf (bad) scas insb rcr test shll (bad) shrl add rex.B lret (bad) lret adc and jl rex.WRB data16 addr32 mov jno scas xchg push (bad) adc roll sub add fwait push xor (bad) (bad) or (bad) pushfq jae lock mov test adc or jmp shlb iret lea push adc rex.RX rex.W add clc pop retq roll cld mov (bad) (bad) cmpsb xor push addb (bad) mov shr fcoml outsb jmp (bad) (bad) (bad) rcr mov shll mov mov rex.B push xor (bad) rex.WRB fisttpl (bad) imul xchg jmp callq cmpsl sahf rcrl sub (bad) lock xchg push fyl2x xlat (bad) js adc (bad) cmp (bad) testl xlat insl jg ja pop repz xor xchg push mov add mov outsl rex.WR lret (bad) cmc xchg movabs rorl (bad) jbe insb or (bad) (bad) shl inc (bad) iret movsl gs hlt popfq xchg rcrl jge movsb sbb sar mov repz mov gs rex.RB sahf mov (bad) jbe movsb jb pushq (bad) out mov in adc data16 (bad) rex.WRB jg pushfq notb shrl movabs loop adc in add cmp cmpsb mov fs adc outsl cmc jmp jnp adc sbb shl jae mov and shll movb stos movabs (bad) movabs retq add sub push adc mov rol movsl addr32 jne adc cli in cld iret in lods mov rex.B movabs iret scas add rcll rex.WR addl lret (bad) push sub imul movabs jg fmul or rex.WR jno ja test cmp cli roll out push jb jo scas mov adcl or push (bad) cmc mov movabs roll icebp mov push jmpq pop lret jrcxz imul xchg test cmpsb enterq pop sub (bad) (bad) movsb rorl add mov insl or pop shl cmp cltd (bad) and lahf mov sbb xor mov movabs jb (bad) imul in loope cmpsb xchg mov sbb or repnz sbb add int push rorl (bad) (bad) test in pushfq cmpsl rex.WRB movabs rex.B add xchg cs idivl (bad) outsb jp js ror push push and rex.XB cmp (bad) mov (bad) (bad) rex.B cwtl int ds push (bad) (bad) xor cmp xchg rex.W rex.XB cmp sar adc loope mov mov mov (bad) xchg iret cmc mov jns rex.B rex.W cmpsl or xor shll sarl rex lret int3 (bad) pushq adc pop out fisubrl push hlt (bad) out (bad) int (bad) (bad) clc ds pop inc lea es movsb stos jp push rex.WB out xchg adc (bad) jnp sub add mov mov push int3 sti pop retq and (bad) mov push out mov adc rex.WX rex insl (bad) fisub and rex.R cmp (bad) lea rex.WXB (bad) (bad) iret and cmp test mov stos iret movabs (bad) jae rolb mov movslq sub jp xacquire pop lret out movslq test int3 jle (bad) loopne pop ja lock mov rcll cmc (bad) rex.RXB rex.RX jmpq rex.WRB iret jno pop mov (bad) adc rex.WRX (bad) sbb (bad) push test mov (bad) out add sbb xchg test rex.WRB add out mov sarl mov push sbb negl rex.WB adc movsl xchg sub ss repnz push outsb rcr and or or (bad) loop (bad) sbb add mov cld iret rex.WXB or sar adc outsb xor rcr pushfq out sub xor cld (bad) pop add in fstpl pop scas (bad) pop movabs xor (bad) (bad) jno imul rcrl rex.WXB xor (bad) insl test rex.RB sbbl nop stos (bad) jne and and (bad) rol sbb ds in pop ss mov scas callq fist fwait lret push imul jge (bad) rol push jae xor mov rex.WR rcll (bad) adc iret mov xchg mov stos (bad) jo lahf (bad) mov add jae je push mov rex.XB sar sbb pushq (bad) mov (bad) rex.RXB rcrl adc fbld sarl xor mov stc sbb xlat jle rcll xlat cld ror push push roll xchg mov (bad) (bad) (bad) (bad) imul jns pop (bad) stc subl jmpq pop add add fbstp sbb ror xor (bad) fnstsw sbb rex.XB pushq push add scas jns mov lock mov shrl mov and jle int3 movslq pop shr mov xchg xchg fs scas pop test (bad) (bad) adc insl rex.B xor (bad) cmpsb adc (bad) enterq adc rcr repnz in fcompl or jne out scas out jle jae fbstp sbb rex.WXB jno sbb xchg test or cmp push mov test (bad) xor jne insl xchg imul pop rex.WX cmp fiaddl sbb out retq movabs outsl rol jp mov mov in lods jge popq insl cmpsb movabs jl (bad) out cmp (bad) icebp fcmovb leaveq xchg pop lret push repz or push jns rcrl stos mov cli add mov cmpsb jne stos rcll ss fldl xlat stc mov in movabs jns (bad) mov adc std and movsl (bad) xor cmp test mov and (bad) (bad) insl jns jb shl rex.WRB sbbl rex.RB pushfq lods lea xor jne movslq fs cmpsb (bad) (bad) mov xchg lods sub rex.W cld cltd xchg jle sbb (bad) notl cs cmp (bad) jo movabs rcrl rex.WR je in popfq jns int3 push sbb rex.RXB fnstcw adc jge cmp icebp push jno jo test fcos je and imul and push pushq (bad) or jp or push fsubrl adc or in rcll (bad) mov sbb jle add imul cs jmp imul jnp subl xchg loope (bad) jo repnz cmp cmp and roll (bad) test pop loope (bad) enterq int (bad) or out rcrb addr32 xor jl and (bad) mov es repnz fwait mov cwtl (bad) addr32 rex.WRB movabs rex.WR pop test je pop rex.WB pop (bad) shlb insb xlat movabs jmpq shl rex.WRX shlb (bad) or sbb in retq cmp popfq xor icebp jp adc rex xor rex.WRX mov int out lret decl (bad) xlat (bad) lock add (bad) cmp scas sub or (bad) icebp (bad) loop jge rex.R cltd lock rex.B mov rorl push clc fsubrs negl rex.WRX lret test shll push rolb cltd rex.B adc xchg (bad) data16 stos push (bad) xor fnstcw and mov lret push cmpsl mov fimull pushfq xchg adc cs pop shrl sbb movsl fsubs adc push fnsave mov pop add jnp rol fisubrl xchg fsubs sub pop mov and (bad) cmp rcrl test push cmc and mov rex.X sub jne int ror (bad) push fisubl rex.B rex.WRB (bad) jg mov rex.WRB or and loop test int scas ja rex.RB pop xor insb repz add imul mov rex.W imul sbb rex.WXB pop lods (bad) pushq stc and mov mov rex.W addl enterq stos adc cltd (bad) xchg pushq (bad) mov jns nop push xchg and lret (bad) mov xchg repz xor (bad) sbb sub out jbe nop push and or and sbb sar sbb (bad) repnz (bad) cmp jnp roll xchg out cltd callq (bad) push leaveq (bad) pop nop lret repnz pushq mov lods mov add xchg pop rex.WR sbb add outsl mov (bad) mov pop movabs (bad) rex.WR rex.B cmpsl mov shr and fldl shll adc add lock xchg (bad) xchg mov shll (bad) rcrl pop loope add outsl push sbb int lods rex.WXB add mov hlt rcll mov loopne rex.B rep popfq fidivr fs int3 addr32 jnp scas nop outsb loope out (bad) xlat popfq mov pop xchg (bad) (bad) rol pop movsl (bad) addr32 pop rorl lret std jl loope fsubrl insl mov cmp pop mov or retq movabs movabs rex.XB pop sahf movabs rol fcoml pushfq push stc mov (bad) iret nop fistpll add jno mov out rex.X (bad) out sub push rex outsl js pop rex.RX es outsb stos (bad) je xor hlt add loopne jle adc loope xchg (bad) xchg movsl loop insb in push xchg (bad) sti xchg mov clc push (bad) mov fwait (bad) xor (bad) es jno out jge and std pushq loope mov xor rex.RX jmp cltd leaveq scas rex.B loop fiaddl out (bad) lods push (bad) jp xchg (bad) pop (bad) cmp xor jnp je movabs subl movsb pushq xor cmp out (bad) adc and push pop xchg mov jmp and fimull stos jns push icebp xchg sbb cmp pop fwait xor (bad) (bad) add jb (bad) mov sbb rex.RX or cli movabs push (bad) rex.WRXB repz js (bad) out sub pushq scas pop lret sub repnz rex.RB push or shl jl (bad) movsl mov jno stos (bad) (bad) pop rex.X adc (bad) clc in jle rex.WRX xchg add mov mov push fildll or test in (bad) repnz push (bad) callq pop (bad) (bad) negl test (bad) idivb fcmovnbe and test rex.RB pop cmpsl rex.WB repz (bad) loopne (bad) rex.WX and (bad) int fwait pop mov in loope andl sarl sbb mov (bad) cmc pushq sbbl (bad) pop cmpsl cld xor rex.XB sarl and fwait sbb pushq add (bad) sub sarl movsb (bad) rex.WRXB sarl cmp rex.WX leaveq stos (bad) iret xlat pop pop fadd scas add cmp ror jb icebp loopne xor mov scas int movabs loope cmp xchg in lret rorl ja mov xchg testl test pop cmpsl (bad) rex.WR xor or xchg imul add rcll jrcxz rex.WRX lret (bad) mov cmp (bad) out (bad) es js xchg pushq rcrl rclb imul (bad) (bad) and xchg fbld sarl vmovss lods cwtl (bad) mov rex.B rex.X rcr in (bad) mov shll mov (bad) repz cmp lahf sub rex.RXB lock (bad) mov lock movabs (bad) imul adc (bad) lret lods cmp rcrl (bad) mov (bad) add xchg movabs rex.R mov popfq sbb cmp retq sub adc stos (bad) and adc xchg push in cmp add (bad) add stos int3 test sti push movsb or movsl xlat mov and outsl xchg (bad) mov movsb in sahf rex.W gs retq rex.R bnd and icebp or rol mov jle (bad) test mov xor (bad) jae shr (bad) popfq mov rex.B and (bad) xor sbb xor cmp (bad) adc xchg loope lret pop xchg lea sub (bad) stc lods add xlat mov retq icebp (bad) rcrb retq movabs jg fsubs movsb jno lea (bad) rcll cmp out or pop stos cmc add jl mov std popfq mov fnsave (bad) rcll xchg stos (bad) stos mov roll lret scas shll fsubs (bad) xor repnz es std shlb mov (bad) retq roll pop loop rex or mov adc (bad) mov imul sbb in adc xchg xchg xor punpckhwd (bad) pushq (bad) xchg clc in js decl test (bad) roll rcl (bad) cli shrl push pop xchg in or (bad) push mov fildll sub mov cltd mov cmp jns flds in jl (bad) ja popfq jmpq xchg loop mov lret mov in sbb xor rorl mov mov cmc lea pop xor cmpsb repz push and ss int3 mov or mov add shr push jp pop cld xchg shl stc sbb lea push int fstpt stos jne imul push out sarl (bad) add enterq cli orl (bad) sub mov movsl or sub (bad) rex.WX add sbb push xor sbb rorl adc jo jno xchg adc jb jb es sub pushq imul fcomip rcll mov hlt movabs push data16 movabs (bad) pop jbe jg cmc push xor imul cmp (bad) jmpq or jge (bad) rex.WRXB rex.RX roll ds loope out add add insl enterq (bad) jno sbb jo roll push mov xchg xor xorb imul jl jge rorl ficompl lret (bad) lret pop (bad) rex.B shrl lods andl pop jmpq pop sar sahf cmc fistpll jns adc repnz xchg fs xchg adc movsl mov callq cmp (bad) shll faddp movabs (bad) shl orl int3 xor add pop (bad) rex.WRB jnp rcll shrl sahf (bad) mov loop fsubs rorl or enterq or rex.B pushfq mov xchg jb mov xchg rorl jb (bad) loop add mov movabs xchg mov and pop push add outsl lret rex.WXB icebp rex.RX (bad) mov push stc fwait iret cmpsl and (bad) or (bad) pushq xchg loop or icebp rex.WB ds (bad) leaveq movsl (bad) (bad) (bad) loopel scas (bad) icebp sahf rex.RB rex.WRXB xchg push rorl adc adc (bad) lret stos or outsb out sub push xlat jae js rex.WRB jle pushq lahf icebp enterq mov repz mov outsl shll (bad) cwtl add repz or cld sbb cmp shrl (bad) je rex.RX imul jno test pushfq rex.B fsubrs fistpll test (bad) cmp mov xor pushfq repz xor cwtl rex.WX notl xor xor rorl (bad) mov jmp jns rcrl (bad) (bad) fist xor rex.WRX fnstenv shl loopne jb rex.WB roll and out (bad) rorl xchg out pushfq cld (bad) in ja jbe int std imul adcl idivl jnp cli callq loop rorl mov fcomps movabs (bad) sub shrb mov jmp or rcl rex.X rcll callq and outsb pop xor ficoml mov xor fld icebp pop sub stos roll xchg movsl (bad) fbld ja (bad) push xor frstor lret shrl jns push or rex.WB and adc push lods (bad) sbb lock vphaddbw mov xchg xchg jne mov sub add xor sub std jge cli adc rcl add sbb sbb (bad) or jge fisubl xchg stos (bad) callq ffreep rex.RXB js add or fsub rex addr32 out jp mov sub mov mov (bad) test xchg sbb (bad) (bad) rcll or sarl (bad) lret vmovss sub mov mov and jns adc mov rex.X (bad) fadd rex.WRX rex.WR pop (bad) icebp add xor push in pop or xchg and stc roll add xor jp (bad) (bad) repnz fildl and (bad) in fs cmp stos jmpq jl loope rex.W xor icebp (bad) cwtl mov jae push and (bad) int (bad) xor repz lcall (bad) add ss je in (bad) pushq cmp roll (bad) in repz cld rex.WR test fidiv mov imul fs imul in rex.WRX iret push clc xchg and xchg leaveq cs imul xchg popfq jmpq orl fild jns rex.RB jb jp mov and add rex.WX rcrl add in retq xchg (bad) (bad) ficoml (bad) ffree push pushq (bad) fild out xor jp fnsave cmp (bad) mov mov addl jns push xlat xor jae retq pop sub cmpsl rcrb add iret xor sbb (bad) callq cmp test rcr or or and xchg fisttpl (bad) and es je pcmpgtd stc push loopne mov rex.WRXB add mov out fs rex.RX rex.WR jns cmc movabs std rex.RB lret retq jae loopne xor (bad) mov jle fdivl cld sub js and cltd repnz psllq insb cmp movabs incl clc rex.WR mov mov jns (bad) mov add rcr sahf sub jne frstor and (bad) lret pushfq mov movsb cmpsb stos ja xchg pushq lock out ja sti (bad) adc and (bad) push pushq (bad) cmpsl pop test mov (bad) pushq negl rex.R pop and movb add or mov push fsubrp push (bad) mov imul mov xchg jmp (bad) cmp xor (bad) xlat shrl rorl (bad) (bad) rcl (bad) pavgb (bad) mov push sub int3 cmp (bad) mov pop scas shll adc pop rex.R push add (bad) mov and cmp jae mov sahf cld loopne rex.WB xor xor rex.WR out lea lods sti in rex.WB fmul push in cmpsl sub hlt jl (bad) sub sbb mov sbb (bad) repnz ror xor cmp mov jp js popq push fnstsw sub clc mov out fsts rex.WR vunpcklpd std adc retq enterq movslq xchg sbb int3 xlat cmp in jo (bad) and es jp and rex.B sub rcr push loope xchg rcl add (bad) fcmovnb divb out int shrl fcmovu shrl (bad) fsubrs sahf add shrb rex.WR ja mov mull add add push rex out shrl cwtl iret (bad) imul xchg movabs push rex.WR cs (bad) add lret movabs lods push shl sbb roll imul or (bad) (bad) jbe test rolb (bad) (bad) mov test enterq imul shrl (bad) imul bswap je add lea sahf adc cwtl pop xchg jns (bad) mov fmul rex.R and mov shrl or loope rex lret test shr sbb rcll insb rex.WRB mov out jnp xchg xchg xor movabs rex.WR rex.WRX stc mov rex.WRXB jnp jne mov (bad) rcrl sbb jrcxz or xor ror adc outsb out (bad) rcll (bad) in sub sti movslq adc add rcrl repnz push rex.R (bad) cmp rcrl andl (bad) pop sbb xchg movabs lret push xor (bad) (bad) stos mov rex.RXB sbb repnz (bad) loope test mov int test mov stc (bad) mov fadd js cld cltd imul rex.WX xchg sub rex jp rex.WR mull roll rex.WRB cmp movabs mov lahf popfq callq out (bad) outsl xchg rex.RXB callq retq stc adc adc roll pop out and (bad) test test (bad) cli sub (bad) test mov (bad) jle xchg sbb addr32 xlat rol push clc pop out rex.XB push (bad) fadd callq adc in (bad) xor push jns rol pop (bad) retq mov push sub (bad) (bad) lcall add mov pushfq jno cmp neg in repnz stos (bad) mov xchg xchg int3 (bad) xor adc iret sub sub adc (bad) mov (bad) test push xchg rex.X lods js sbb notb fmul mull mov (bad) sub or (bad) lret jmpq data16 lods xchg adc (bad) cmp (bad) loope sub (bad) movslq rex.WRXB loop or push stos or and and adc rcll (bad) mov xor int3 push in sbb sbb in xchg push ljmp (bad) jle out jb sti callq push (bad) cmp rex.RB add jno out rex.W sbb cld ds test and (bad) rorl addr32 mov rorl cwtl add push xchg xchg (bad) shrw iret lret sbb lea (bad) iret rex.WX and movsb retq sub (bad) rol jle sahf fimull (bad) or (bad) sub cwtl sub (bad) mov (bad) mov (bad) imulb gs pop pop xchg mov es push xchg xchg jnp (bad) xlat jmpq adc leaveq scas test rol shrb mov and add pop (bad) jrcxz sahf rex.WRB and xchg mov pop rex.XB push scas adc lock mov fucomip iret add test pushq xchg cli (bad) sarl mov xor (bad) pinsrw mov cld jmpw jp int rex sahf (bad) movabs add sub mov or in add sub pop out mov cmp js push callq jl rex.W push add cld test xor mov pop mov rex.RB gs ror hlt icebp pop push adc rorl (bad) clc pushfq stos shrl hlt pop rcr sub out ds adc cmp nop shll cmpxchg std (bad) addr32 xchg cmpsb and (bad) jp and jns add test jl rex.WX jmpq add (bad) jbe xchg pop xor rex.R jo (bad) mov jmpq sarl jp movabs in sbbl cmpsl rex.WR rcrb mov sbb movabs sub and push sub xor xor out jbe sbb mov loope fwait (bad) cmp lret jnp jrcxz rcl movabs add mov pushfq imul xor pop in jae xchg iret scas test xchg and mov movabs out (bad) (bad) movabs cmp (bad) (bad) or jno (bad) xor rex.W xor cltd (bad) repz shrl rorl add roll rcrb fdivrp repnz xchg add rex.X sbb (bad) (bad) jmpq iret (bad) mov hlt mov sarl or js rex.XB (bad) push jg rex.WR mov rex.XB cwtl sahf (bad) mov std push jrcxz shll pop mov iret fsts mov callq lret rex.RX imul data16 movsl sbb retq movslq (bad) xor jnp loope jb (bad) loopne mov int or mov nop shrl (bad) mov mov pop js (bad) pushfq movabs rex.WRX (bad) (bad) cld xor mov push rex.RB (bad) cwtl ja sbb xor popfq fadds rex.X xor and rex.WRB sbb jb clc add cmc (bad) nop ja mov jp test sti add rex.B icebp divl jmpq and mov (bad) add test loope rex.B fcmovnb rex.B rex cld adc (bad) lret xchg jns lock xchg jg pop imul (bad) pop jg std mov or lock rex.R adc and icebp btr (bad) movabs (bad) (bad) push mov fwait sub add jmpq clc jmpq cltd in xchg loope cmpsb xchg cmp pop xchg repz adc xchg xor mov movabs or out imul rex ficoml cmpsl imul cmpsl xchg iret icebp loop (bad) mov jae (bad) fmuls and and icebp sub and rex.WRXB out iret lock pop add insb pop (bad) callq movabs jmp fldcw js cmc rex.B std cltd lret (bad) sub (bad) sub mov xchg leaveq xor movsl lret bnd jno je in mov xchg ja xor lret mov jle mov in xchg clc add (bad) addl insl sub (bad) mov mov cli jnp fimul sarl lret (bad) clc jo rex.WRB push pop (bad) xchg mov clc (bad) xchg cmp cmp leaveq lock fildll (bad) rex.RXB lea repnz cmp movsb adc sub mov (bad) xchg mov rorl cltd clc mov movabs (bad) scas leaveq outsl fwait out (bad) (bad) movsb retq or adc nop rex.WX or jp and xchg pop (bad) cltd adc add cmpsl lret stos test (bad) and (bad) xchg adc sarl jrcxz (bad) adc mov fwait icebp lock or (bad) rex.RXB sub xor mov rex.WRX rcrl faddp (bad) mov sti (bad) int or cmp pop or stos roll xor ffree xor es (bad) (bad) shr rex.WB imul jmp (bad) cmp push shll mov shll cmc jp mov rex.W imul lret jl rex.B xchg rcll (bad) adc shlq (bad) mov rex.B pop shrl test (bad) or rol (bad) movslq xlat rorl fist movabs mov adc (bad) sti rex.RX mov jg mulb sub or mov or cmp (bad) rorl fimull lret mov loope (bad) sahf push movabs frstor jl and mov movabs pop add idivb cmpsl add int retq vpsraw rex.RB rex.WRX retq rex.WR jne (bad) adc xchg imul sub mov mov pop (bad) cltd rclb mov mov (bad) imull (bad) lock nop leaveq lret leaveq lods scas fxch (bad) addr32 mov rex.WRB (bad) lea mov (bad) rex.XB rex.X add and add cmp adc icebp add (bad) cmp (bad) fdivr xchg push je adc fldt add rex.B jo mov push add sub jns xor gs lret test add fmull (bad) sub pushfq rex.XB jl and pop repnz (bad) xor fisubr fldcw loope xchg rex.R retq mov xor stc out (bad) sbb js jns jle or scas cmp cmp jp retq adc sahf int pop jge fldt xor sarl mov (bad) xor or movsl rex.WR add xchg rcll mov and movl cmp rcrl sbb rcll sahf mov (bad) loop pop (bad) sub fcoms retq jno in adc jge fwait rcl mov rex.RXB cld cltd sub mov mov (bad) sarb rol adc stos fstps stos add rex.WRXB (bad) pop xor mov push repz movsb (bad) out movabs cltd adc out (bad) xchg (bad) or in ds adcl push xor rex.WRB roll scas or insl rex ror jns mov (bad) push (bad) cmpsl sub add (bad) lret push rex.WR (bad) divl mov icebp jne xchg int3 in (bad) xchg jb (bad) fsub shrb imull (bad) pop cmpsl imul mov movabs mov iret (bad) stos jl loope cmp pop rex.WRB jae push roll fdivs (bad) jbe jo lret pop adc rcl out xor (bad) and add rex.WRXB mulb rcr and jle push xchg (bad) add (bad) out jb rex.WRB ja jbe push iret rex.WX movabs xlat mov push cmc (bad) mov or xor scas jnp (bad) mov nop out (bad) (bad) jge (bad) pop xchg out (bad) shrb cmp lock test (bad) in addl shl jmpq mov fs xor jrcxz sbb (bad) mov movabs add add jnp pop rorb sub lea icebp (bad) mov or (bad) cmp xor xor iret imul addl sub fstpt xor (bad) push int3 (bad) loopne rcll mov (bad) lretq ffreep test sub push mov xor adcl and mov pop iret shll xor sbb vpshuflw movsl stos xor leaveq cli (bad) int3 (bad) imul xor xchg sub int rex.WRB sbb xchg push out jae rex.WR sub (bad) test or (bad) rcl pop (bad) mov std loop mov jmpq jnp scas cmc (bad) or and cmp adc movabs (bad) xchg xor cmp stos (bad) xor sar rorl and rex.RB push cmpsl rcr in int rex.XB mov retq xorb (bad) mov (bad) iret mov fsubl rex.WR repnz js rex (bad) jge sbb in jb (bad) fadds lods rcl or ja loopne sbb mov shll mov retq (bad) and jp test mov hlt (bad) adcb enterq scas cmp inc (bad) shrl mov pushfq icebp and (bad) fcmovne fcoml mov shl cltd jge movabs test mov (bad) repz add ds shl pop lods shlb sub rex.B mov or orl cmp loop mov jmpq cmpl (bad) mov xlat lahf in (bad) push roll in sbb rolq mov (bad) (bad) xchg fwait cmp ficomp adc sbb push and sbb roll jno mov adc xchg sarl nop sbb add outsb sbb adc mov in fs int3 pop sub retq (bad) pop stos (bad) mov loope jg xlat (bad) mov xor cld add pushq adc adc rex.WX add adc (bad) sub sub xchg out leaveq mov (bad) add sub sub adc fsubrl roll lret scas cli pop stc dec xchg sub cli jb cwtl retq sbb outsl add (bad) es loop mov fdivs jmpq cmp cmp fstps rex.R xor lea jne mov rex.B cmp sub sbb cmp movabs rex.B add sahf and mov cltd rex.RB and mov test xchg xchg repnz rex.WB adc rex.RX fidivr jmp rcll and (bad) mov mov add or rcrl in fidivrl movabs rex.B pushfq rcl outsl push mov mov test (bad) imul mov (bad) shll mov xchg iret fwait out fstpl bnd pop shrb cmp (bad) rex.WXB (bad) mov pop push add xor vpand movsl xchg add cli mov jrcxz xchg addr32 cmp ds rex.B add (bad) push adc and adc cmp mov and test sub loop sbb rex.RXB pop xor sbb pop push rex.B data16 std out sbb jno jns repnz pop add mov jge popfq cmpsl (bad) mov rex.B sub iret or fdivrl js jo rex.WB rex.WB fwait scas pop fildll xlat stos add out jnp jl sbb (bad) pop rex.RX rex.WXB hlt addl fcompl js (bad) orl (bad) xlat callq push (bad) (bad) (bad) rcrl (bad) sbb pop roll cmp icebp stc xor (bad) jns fwait cli rcrl in fcmovnb xlat test adc adc cmp movabs ror jrcxz cmpsl mov shr sub sbb jge or jmpq adc xor (bad) (bad) mov sarl sub adc in cmp sar push add (bad) out rex.RX push (bad) sbb add fidivr ffree pushq rex.WX jg mov (bad) adc fstpl (bad) lods mov pop mov fidivrl gs in (bad) cwtl test repz idivl (bad) stc cmp xchg rex.WRX repnz and rcll rcrl (bad) (bad) mov pop cltd push and rex.WXB leaveq adc xor mov (bad) mov subl loope lret (bad) (bad) lea (bad) int3 xor jne (bad) movabs (bad) push out mov rex.WB gs test xchg adc mov pop ds movabs cmc (bad) add repnz rorb fcmovb cmpsl xor pop sub lock jo addr32 movabs cmp or mov sbb push in loop jb roll int3 xor retq pop (bad) (bad) mov mov add clc shrl sub and mov fdivrs xadd (bad) fucomi rcr (bad) xchg retq sbb cmp cltd movabs lock insl lcall or rorl (bad) lods imull shrl and movabs (bad) mov or add std leaveq (bad) mov (bad) mov (bad) and jmp (bad) xchg out rex.WRX jbe,pt (bad) gs rex.B add (bad) pushq roll adc adcb (bad) sbb out out test cmp xor mov and (bad) int3 test (bad) addr32 repz (bad) insl pop (bad) jne movabs xchg (bad) rex.RX ja (bad) sahf stos push (bad) (bad) cmp scas cmpsb (bad) loope int3 xchg mov ss (bad) jo cwtl scas rcl adc xchg std adc xchg in push sbb retq (bad) and mov ror cli add or insb and (bad) jne repnz cld xabort sub cli (bad) movabs (bad) (bad) rex.B sar cmp push adc (bad) xor lret (bad) jae cmpsb jle jmpq add fsubrs and cmp ja lea decb rcll jg lret sbb (bad) rex.RXB jmp (bad) push push lret xchg jo (bad) test stc (bad) mov rorl mov div loopne int3 (bad) cmp (bad) push xor subl mov insl rex.WRX stos sar push (bad) mov movabs mov fs add add ja addr32 rorl (bad) xchg pop (bad) or roll cmp retq sub jne pop cli (bad) (bad) (bad) addl (bad) pop shrl movabs (bad) out sarl mov adc fstl cmp xchg mov cli (bad) mov sbb leaveq (bad) sbb int3 jmpq sbb (bad) rex.B or xchg movsb fs clc jl push jg push pushfq test testl shr rex.WRX mov push roll rex.WRB sarl (bad) shlw adc rcr mov fldt rex.WXB fcoms xchg or (bad) je cmp jp fs rex.WB mov lock rex.WX jge ficompl jle ud1 (bad) adc pop and and iret stos data16 mov ljmp cmp add xchg pop jne jno or sub shr mov rol retq je pop cld fcmovb (bad) rex.W imul fstl rex.B repz push cmpl jmpq (bad) pop imul mov enterq cmp and outsb sbb vpcmpgtb sarl (bad) (bad) fwait and sti cmp mov nop pop (bad) sub test (bad) mulb xor sbb mov std pushq mov int3 insl mov int in pushq adc fistp lcall jbe sbb rex fidiv lret jle movsb mov add loope rcrq (bad) rex.RX jns cmp lea (bad) xor cld rcl push (bad) mov rex.RXB fwait mov (bad) jno xor out and stos leaveq out clc roll and fnop push (bad) (bad) jb mov movsl movabs cmc pop fcmovnb xchg rex.XB push (bad) in cld add (bad) (bad) callq pop xchg repz xor fildl sub cmpsb lret retq sbb add add and (bad) mov pop fbld rex.WRB xchg rcr adc (bad) pop and cmp (bad) shll (bad) sar sbb (bad) movabs int sbb jmpq and sarl cmp xchg add fchs push add pop orl jno (bad) stc frstor sbb mov rex.WXB (bad) pop negb (bad) gs mov jg xor mov movslq or mov adc mov cmpsl movabs mov cli jne pop (bad) and stc cli retq or jrcxz sbb movabs nop cmp (bad) loop rex.W and subl pop rex.R stc lret (bad) pop repz or mov pushq jl adc cs jb (bad) and or mov sub enterq iret pop test std lock xchg repnz movabs add add adc jmp imul movabs roll sub pushfq in repnz stc insb adc fisubl in std lahf add mov in jbe sarl retq cli or jns outsb cmp push xor sbb and jp rex.RXB mov rcll (bad) mov cwtl movabs xor mov shrb shll jmp jno (bad) in jrcxz pop cmpsb rex.WXB sysenter rcr fldcw (bad) mov movabs rex.WRX in mov jmpq xor or mov movabs pop rex.B push mov popfq (bad) ds (bad) roll sub push cwtl (bad) rex.RXB (bad) and repz or push adc rex.X lret sbb cmp sbb push (bad) shll add roll xchg (bad) rorl and mov sahf mov pushfq sbb rcrl (bad) mov pushq add je mov lock leaveq cmp sub xchg rorl stc xor or and addr32 xor enterq imul add jne fdivrl xor retq mov rcrl iret ja jp rcrl mov roll (bad) xchg movabs sarl rex.R popfq rorl or rcr fwait or frstor rex.WRB (bad) in stos movsl repz and cltd or rcl sbb sahf (bad) (bad) jle xor fistpll rex.X jg jmp fdivr insb or xchg add test rcl sub (bad) scas rex.WRB rex.XB (bad) jnp mov inc xchg test adc popfq (bad) xor cmp sub mov mov outsb xor je xchg stos push mov faddp mov out and pushfq loop repnz rcll jb (bad) (bad) add mov and xlat fstp nop xchg fidivl push sub rex.WRXB rex.WRX (bad) (bad) repz (bad) (bad) (bad) mov sub shrl stos in std vpaddb add sub (bad) xchg push rex.B pushfq sbb test (bad) cltd sbb xchg mov cmp shl or fstps adc clc xchg pop lret in cld pop rex.B sar pop rex.X xchg sub rex.B sarb repz and loope (bad) fstpl std imul sub jb mov int (bad) sub or std push (bad) sub lret pop iret loope rex.RX lret sub sar adc (bad) mov (bad) (bad) pop roll and adc jnp mov add pop (bad) gs push fsubrp (bad) mov cwtl add leaveq movsb sub stc out (bad) test jl (bad) cmp scas addr32 (bad) movsb rex.XB cwtl test stos rorl push es lahf cmc insl (bad) mov push mov loopne xchg (bad) lods lret movabs mov xchg rex.RX mov (bad) (bad) ss (bad) or push push jmp (bad) xchg or (bad) lods xor mov xor xchg and out rcl es std divb retq fnstenv fmuls jbe jle xchg jno jmpq xor rex.WB rex.WRXB and xor and icebp callq test lea movabs (bad) xchg insl jns (bad) repz cmp nop sbb or jo (bad) clc in lret ss sbb xchg fldenv adc push push jno or rorb sahf mov rex.R jle stc sbb mov ds fisubrl roll sub outsl fld (bad) and (bad) rex.WRX (bad) pushfq add frstor rcll fs not xchg mov adc test push rol sub jae cmp xor adc movabs sub cmp ds sbb add rex.RB (bad) (bad) lea sbb cmp and decb shr and adc rex.RB outsl xor roll mov rex.RX nop movsb imul jrcxz test sahf fmulp ss pushfq mov (bad) sbb pushq (bad) (bad) in sub fild rex.WR mov rex.RB mov movabs popfq jg lock and xor nop xchg (bad) (bad) rex.B add out int3 retq scas pop xor (bad) cmpl rcll (bad) xlat mov mov callq lahf sbb es add lods rex ds jo or mul mov gs pop rex.WXB cltd and or clc pop pop (bad) rex.WR xchg sbb lods shlb lret test sbb leaveq shll mov fs xchg cmp and rcrl cmp enterq jl test movabs rcll xlat fldl add and negl (bad) pushq push xchg (bad) setl rex.RB and (bad) xor mov outsb fadd push rex.RXB fsubrp jge (bad) movabs test repz rex.WRX out stc jb (bad) jge cwtl and mov xchg roll and push sbb std out mov mov mov movabs rex.WRXB popfq sbb addl mov adc push add mov push add cs xor (bad) (bad) mov out and or rol sarl adc pushq mov (bad) rcrl cmpsl fs and (bad) mov rex.XB cwtl adc je lods mov mov loop sahf stos enterq outsl add sbb fld lret test jae fldcw xchg mov and add sarl out idivl shrl xor pop outsl stos rex.WRX sti (bad) scas rex.W pop fs push xor imul xor test out xchg jo (bad) and (bad) jle rex.W (bad) jae roll lret std out xchg or (bad) fwait (bad) rcrl stc pop lea lret mov sbb add rex.WRXB sbb (bad) and shlb out int pop out fcmovnu popfq jle rex.B xlat fs pop rex.WX stc mov movslq lahf shrb rex.RXB lret (bad) (bad) movsl roll and shlb (bad) pop sarl outsl (bad) (bad) fs icebp movabs lock mov (bad) test hlt scas roll outsl xchg movabs mov movabs cmp rex.X movabs add jl (bad) xor add jne cli rex.R movabs or callq imul lock lret sub insb (bad) cmp ds fidiv mov icebp cwtl mov (bad) push add stos rex.B xor jrcxz ffreep adc add lret movabs jl (bad) push int (bad) fadds lods (bad) xchg movsb or (bad) pop (bad) rorl out jno (bad) mov orl lret push sub xor rex.B movabs jge retq shrl pop (bad) jg jns shll cli rex lret sbb sub leaveq mov jmpq push cld in pop lock movsb cltd sub (bad) cltd js (bad) (bad) ss or negl (bad) (bad) roll push ffree cmp adc mov int and rex.RX (bad) mov rex.WRX xor test mov in movabs mov xchg leaveq fldenv rex.WXB (bad) adc fisttpll and (bad) or outsb xorb repz callq push scas mov rcll rex.XB fiaddl jge rex.RX rex.RX out adc in shrl jle lods mov stc rcrl (bad) mov rorl add loopne test test (bad) mov movabs sub (bad) jp cwtl and (bad) mov sbb or (bad) jns nop mov xchg test add xor hlt xchg outsb jno pop add jae and sub rex.WR retq out flds cli (bad) faddp cmpsb or rcrl std cmp or (bad) (bad) cmp repnz mov (bad) sbb rex.WB mov mov mov int3 (bad) fcmovnbe cld (bad) movabs (bad) ss stos mov addr32 cmp out mov sub pop (bad) fwait jmpq rcrl and cmpsb enterq (bad) shll movabs fistpl jp loop add and test stos rex add jo push mov shl mov (bad) out or cmc jns rcrl or fsubl sbb lods in outsl cli jb (bad) xchg cmp pop incb fidivrl jg adcl xchg (bad) lret (bad) xchg (bad) pushfq movsl int jle add mov xchg push rex.WRX jo lret add and push pop jg fs int3 sub mov rcrl rorq mov int or rcrl mov iret add mov loopne adc or mov (bad) cmpsb fdivrs (bad) adc mov cltd (bad) lahf jmpq (bad) ja (bad) loope jno sbb int adc (bad) fsts xor (bad) test stos pop cwtl retq jmp (bad) xchg (bad) movabs (bad) add rorl jmpq shrb xchg (bad) and adc scas add (bad) jae sub rsm rcl frstor mov rorl adc negb ror xor mov pushfq xchg jne sub rcrl rex.RX adc pop test xchg movabs bswap (bad) jo pop sarl add xchg in cmpsb mov rorl xor sbb xchg insl push shrl cwtl jrcxz stos pop clc insb jl stc movabs lods adc lods (bad) jmp rex.B (bad) pop insb ror or movsl incl jmp out leaveq mov pop in cmp movabs sbbl lock sub cmp mov scas rol jrcxz rex.WX pop jg mov cmp callq rcr rorl push fnop (bad) lret lret rex.W xchg movabs loopne adc mov lahf rex.WRXB callq jbe rcll (bad) loopne (bad) lret rcl xchg stc rex.RB sub and and imul (bad) fs mov mov enterq or rcr jae cld xchg jb mov adc (bad) movsl or rep adc sub lret mov (bad) movabs (bad) divb ds pop cli xchg pop sub xlat lret push pop loopne outsl cmpsl andl out test es (bad) fwait mov rex.WR rex.X (bad) mov movslq adc repnz xor mov sub divl rex.WRX fsubrp adc stos js movsl mov movabs adc vlddqu xor cmpsb (bad) je int3 sbb mov movabs rex.B (bad) fadd rex.WRX rex.WR pop pop and cmp sbb add (bad) cmpsl sub andb test add lret fisubl leaveq and rex.WX sub rex.RXB rex.WX mov int lahf adc movabs loopne push mov adc push callq mov (bad) pop movabs test rex.RX pop mull mov jmp fiadd sub xor rex.RX test jle shrb jne rex.WRX (bad) lret enterq xor jg xchg sbb xor je fs jle movsb and rex.WRB mov es add rex.WRXB rex.WXB mov or adc stc or (bad) (bad) jge or movabs div lret loopne rex.W (bad) shrl rex.R loope sarb (bad) sbb fsubrs adc movslq test int rex.WX repnz fimul out jrcxz jg and jle mov push jnp lods (bad) es fldl rex.WRX adc (bad) or xchg loopne (bad) cli movabs icebp pop cmp (bad) jge cltd movabs and movslq and or (bad) rex.WXB mov js pushq (bad) repnz fiadd (bad) in (bad) in imul fildll pop mov push pop (bad) cmpb int3 lods jno jae xchg (bad) leaveq stc callq rolb rex.WXB (bad) std (bad) (bad) enterq xchg xor (bad) sbb sarb push sbb mov sub test jg xor xchg pushfq (bad) mov rex xchg lods jno fsubp in enterq shll movabs mov or ficom and int3 fidivrl xlat cmp jmpq stos cmpsl je xor (bad) or repnz add xchg retq (bad) (bad) add callq mov (bad) xor add add test and adc mov insb mov mov (bad) xor lret enterq rex.R rex.WR gs stos pop mov fisub adc jmp cmp xchg imul (bad) imul stc outsl std out jns pop rex.WRX cmpsq xchg rex.B int rex.X int mov jns pop adc callq jmpq (bad) jns or sub mov rex.WRX rex.W rex.RX rorb lock pop cld fs rex.WB rex.WB or cmp out adc mov fldcw pop lock or (bad) (bad) (bad) rex.WRB rex.RB fcmovne jp rex.WRXB mov or sarl rex.WX retq rex.WR mov adc lret imul (bad) mov mov mov and fsubl gs rex (bad) jp icebp or jl fisttpll movsb pushq out jae jmpq cmp test (bad) mov rex.WB int add jo mov enterq callq (bad) pushfq mov loope hlt stc cltd (bad) (bad) rex.XB lods movabs mov mov mov loope int3 cwtl movsl fldcw cmpsb movabs and mov (bad) callq icebp xchg in sti rex.RX adc rex.B jno clc out add sub (bad) out jrcxz sbb repnz adc jp xlat mov nop sub sub lods rex.WR lock (bad) mov in xor mov (bad) xor jae jne imul rex shrb rex.XB rex.WRXB enterq sar sub rol (bad) test jmp lods mov cmp xor outsl mov mov shll (bad) sahf enterq movabs mov push push in xchg dec outsb loop adc repnz xor mov jbe in rex.WRB add mov callq sarl pop push ror xchg rex.WB rex.RX movabs xor adc or (bad) cli sahf xor xchg not rex (bad) (bad) push xchg adc retq xchg (bad) jne cmp js mov xor (bad) shll mov scas popq (bad) jp lods pop jl sub (bad) movabs sbb rex.WXB (bad) (bad) or int outsb mov movslq (bad) (bad) (bad) sub pop movabs rex.X adc test jne mov rex.WRXB (bad) rex.B mov push rcrl sbb nop andl mov fsubrs push test mov adc (bad) icebp rex.W pop retq push xchg sbb div jo rex.RB addr32 sub (bad) movsl and (bad) rex.WX adc mov test mov rex.RB sbb (bad) rex.WX loop (bad) or (bad) jl rex.WRB adc test sbb loopne xor sub int3 pop sbb (bad) cltd jrcxz repnz stc in rex.WB imul add lret stos subl jp repz imul rclb jno rex.B or out rex.XB in popfq cli (bad) fsubrs jge fidivr fwait jnp mov sbbl (bad) lock and roll insl sbb sub rex.R rcrl fucomi insl icebp fidivrl rex.W add lret mov or movsb fldl imul (bad) (bad) add fcmove subl outsb (bad) xor xor iret fwait mov rex.WX pushq cmp rex.RB (bad) mov jmpq xchg mov mov test adc mov xchg (bad) in adc fldenv fstpl repnz or rex.W ss nop cwtl fpatan adc mov add xor mov add (bad) repnz std mov (bad) rex.WB rex.XB rex.WRXB pop mov lret (bad) jno fmull and (bad) add rex.RXB flds adc sub sub (bad) xchg rcrl in cmp fs or mov (bad) sub jrcxz (bad) vmovaps (bad) adc and rcrb xor and mov push retq sbb movslq sbb add jae sahf fwait mov pushfq mov lret rex.XB (bad) mov xor out addb adc sbb fisttp sbb push jbe in add repz (bad) cmp mov movsl imull or retq out rex.WX rex.WRX (bad) and iret push xorb push mov mov adc ss movabs or mov and mov cmp in pslld mov jno jo cmp imul and mov pop fsubs rex.RXB repz jnp jno xchg and repnz cmp sbb sub cmpsl sub xchg rex.X movabs sbb adc pop sarl jo cmp cwtl outsb test rex data16 mov cltd jmp pop rcll and (bad) movabs mov sub ss (bad) xchg imull mov mov in lret jb pop adc mov mov leaveq rex push mov add (bad) cld mov roll lret (bad) (bad) xor test gs xor xchg in mov cmpsb vpmaxsw rex.X rex.WRX rcrl adc movslq (bad) movabs and shlq (bad) pushfq clc pop movabs xchg shrl pop out cmp (bad) mov push and lret out repz add cmp pop test cmp push xchg cltd push loopne in pop sbb rcl push xchg (bad) cmp enterq add mov popfq ja (bad) pop out shrl xchg xchg in cmp mov (bad) ficompl or data16 (bad) (bad) xchg or mov and (bad) outsl (bad) add jle movabs mov rcrl clc sahf movabs je imul iret lret pushq mov sbb jmpq push mov rex.WRX negb xchg (bad) cmpsb jbe pop test add sbb fcomps cmp rcl mov (bad) shrb (bad) push outsb shll rex.XB ja pop lea repnz gs cwtl push pop imul (bad) ffree movabs or xor pop jno callq scas rcll shll fiadd imul insl jrcxz jmp lret pop (bad) roll (bad) clc sub loop or or shrl insl (bad) jb xchg hlt rcll (bad) (bad) (bad) movsl lret push rex rex.RB rol rcrb ud2 jae pop movabs add xor out rex.B push jmp or rolb sbb sarl (bad) scas out (bad) hlt pop rorl pop outsb sbb and icebp rcrl lods fistp fsubrl negb adc xlat test sbb push push rex.R fisttp push movsl (bad) test fldcw mov jne stc jns imul fs repnz or cli cmp xor or fwait sbb mov outsl outsb rcll lea lods roll (bad) iret movabs jb jrcxz cld xchg rolb retq (bad) mov vminsd out (bad) int3 xchg (bad) fsubs (bad) xlat rex.X xchg (bad) vfmsubsd movslq outsl cmp jmp or je (bad) movabs xor rex.WXB (bad) jmp insb fwait rex.WR pop rex.B jbe lahf (bad) adc ja or rex.B (bad) fdivrs mov xor int3 cmp movabs mov (bad) and sahf (bad) add rex.WX rex.X clc cmp lahf movslq and rex.WRX mov int xor test movl ja enterq imul mov js sbb addr32 cli cwtl (bad) xorl fisub imul sbb mov pop jbe cmpsl sbb add rex.WR or push mov fchs callq test xchg or movsb sbb out (bad) je (bad) fistl and adcl (bad) mov jg test mov cmpsl add leaveq rex.WX shrb sbb icebp (bad) mov jno test add loop test mov cmovle (bad) (bad) sbb xchg mov jle rcl std (bad) sbb pop (bad) (bad) (bad) sub out cmp (bad) je (bad) test fstpl jns mov mov jl sbb jo mov sbb ja rex.WRXB rol sub stc pop mov xlat outsb roll lods (bad) loopne mov (bad) sarl jae pushfw faddp or popfq or repz shrb (bad) rex.WB mov mov rex.X sbb add lock or (bad) jno (bad) (bad) scas fsub in adc fwait xorl repz xchg xchg mov (bad) sarl adc sbb push jo sbbb cwtl (bad) scas test and loope adc out (bad) xchg movabs and jmpq rcrl (bad) adc jae (bad) cld or repz pop xor movabs addr32 popfq mov rex.WR lock lret cwtl out rex.R rex pop int xchg mov (bad) push stc loopne fistp rorl stos and rex.WB rex.RXB js mov mov addr32 enterq cmp xchg xchg (bad) push (bad) (bad) ja add shrb leaveq stos lret loopne or jae movabs (bad) mov xchg xor fadd fidiv stos (bad) movabs (bad) mov stc add jb in (bad) loop jl push xor add rcll test lea (bad) loop (bad) movslq fs rex mov (bad) out cmpl mov cltd movsl fisttp push mov callq mov sub add mov mov (bad) and rcll adc sub data16 or fadd shrl mov jmpq (bad) enterq ror clc cmp xchg test jns rcll cltd imul sub loop sub (bad) mov pop sbb pop in (bad) pop mov fimull clc (bad) push sarl jp sub cmp decl movabs or cli push (bad) mov sub (bad) fwait jl cld movsb sarl sbb mov cmp cmc (bad) jmp sbb add mov (bad) (bad) scas mov pushfq icebp or cmp mov cmp (bad) rex.WX fistpll (bad) gs (bad) xlat insb (bad) icebp (bad) imul cltd stc mov (bad) mov jb rex.B lret lahf mov and adc xchg push pop movabs or rex.X rorl callq mov movslq rex.WB mov movabs stc mov adc push and rex.X cwtl enterw out (bad) icebp test imul rolb and or rex iret loopne (bad) (bad) (bad) sti int (bad) xor xchg jrcxz (bad) or iret outsl pop or fistl (bad) pop cwtl (bad) out (bad) (bad) movabs jae fidivl mov push mov int3 add mov mov js jae sbb or movabs sub rex.WB xor movabs (bad) loope fs (bad) (bad) jrcxz add mov (bad) mov cmp callq mov (bad) mov or rex.WR or pop movabs stc mov rex.R fwait add shr and cmpsl xchg rex.WR (bad) (bad) (bad) and sbb (bad) mov xchg rex.WR sub stos icebp xorl mov jmp cmpsl (bad) mov mov (bad) outsl repnz loopne pop xchg mov xlat xor lret sbb cmp rex.WRX (bad) insb sbb loopne (bad) cmp sub rex.WR sub pop and pop enterq (bad) mov (bad) icebp xchg and ds add sti lods out lret fisubrl (bad) stc je cmp mov and enterq jrcxz add cmp adc (bad) int3 pop (bad) sub imul push (bad) outsl (bad) fs movsl iret or add movabs in xchg fidiv movabs rex.WR lret (bad) jle fwait mov fdivl div out add sbb xchg out jmpq rex.WRX and (bad) push xchg mov (bad) mov xchg xor mov sbb mov add loope xlat pop shr xor pop sub fistpll (bad) lret pop mov add ja fbld and adc ss rex.WRX jae js out rex.WRX (bad) jno pop rcrb rex.WRB ss jg rorl movabs out movabs xchg flds adc jae retq mov sub rex.XB fild data16 faddl pop xchg popfq cltd (bad) (bad) rex.W (bad) mov rex.RX mov xlat push sbb xchg pop rex.WX lock rex.R subl (bad) jg fnop push repz push add test or adc lock test std (bad) movabs lret rorb or (bad) addr32 enterq rcrl rex.X (bad) (bad) psrld (bad) lock sub repnz push jbe xchg cli add push sbb (bad) and test jae cmp xor mov adc adc rex.RX enterq rex.R xchg or (bad) rcll mov stos (bad) mov cs fstpl addl jl jle adc pop sarl and (bad) jmp push shrl in ds mov xchg mov xlat push cmpsb pushq (bad) mov pop and sbb rex.WRXB mov (bad) pushq pop mov adc notl loop (bad) (bad) (bad) mov cmp movabs add rex.X ds int pop out loope add rex.XB lock shll movabs leaveq mov callq sbb (bad) imul rorl xchg in ja (bad) sahf test (bad) outsb dec xchg out and cmp and ja mov callq lods pop movabs (bad) repz sbb pop (bad) rcll (bad) shl outsb (bad) (bad) jg xor mov (bad) (bad) xchg gs test jo mull fmuls lods repz push xchg out xlat out pushq cltd (bad) (bad) jno cmp orb xor (bad) mov incb (bad) pushq stos hlt outsb rcll int3 cmpsl ja rolb add leaveq rex.WRXB (bad) fildll stos fistl rex.B xchg xchg movabs fldl movabs sahf scas (bad) leaveq add subb rex.B sub rex.WRX rex.WRXB pushq movslq fsubrl repnz js movabs in sub jg (bad) pop notb iret test test rex.WRX add fwait add xor paddw xchg sbb or outsl (bad) (bad) sbb imul (bad) (bad) data16 cwtl rex.W in lea std jae adc (bad) pop and callq cmp mov xchg sbb (bad) gs stos sub clc or rclb xchg (bad) push movabs mov mov cltd sub sub jno (bad) adc fwait rcrl add scas shrl rex.WR lahf and faddp movabs movsl in out xchg adc loop push or add pop int3 mov roll repnz shll (bad) movsl test addl int3 shr xlat rex.WRXB fisttpll in adc cltd pop xchg roll sti loope pop pop (bad) mov xchg cwtl (bad) xor or or mov sbb add push adc roll rex.R gs sub retq stos (bad) (bad) pop mov int mulb (bad) mov movabs sarl in rorl mov lret pop jrcxz (bad) sub rex.WXB imul sbb fsubs xchg mov push sub (bad) out (bad) iret in rolb rorl (bad) mov test sub hlt or or nop (bad) jmpq rex.WRX rex.W (bad) pop mov cmp rex.RB add lods (bad) insb fdiv jge adc (bad) (bad) sbb sbb mov and sub rex.XB test ja or shrl (bad) movabs retq sbb ds fs add and rex.WXB and negl fst ja cld push (bad) mov sbb (bad) and add mull jo (bad) (bad) xor out test rcrl loope loop cwtl pushfq adcl (bad) (bad) adc loope rex.WB mov enterq and jae mov ss mov mov notb rcll rcrb rex mov addr32 repz (bad) jno pop sbb shl fwait in rex.WXB pop sar xchg enterq retq sti adcl retq xchg movslq movabs ss add adc fsubrs movslq and shrl test add retq add (bad) sub rex.B test push jae xor pop test fiaddl add cmpsl in sbb cmp (bad) jb fldl (bad) jge (bad) rex.W rex.WRX sbb int3 (bad) mov test lods cmp rex.B mov (bad) in movabs test (bad) add enterq rex.WRX mov rex.WB int3 and mov jrcxz xchg xchg hlt mov sahf jb rex.WRX (bad) sbb (bad) pop loop popfq (bad) test ljmp retq mov adc push sub mov movabs imul mov (bad) and out outsl pushq movabs shl add jl mov mov mov jno xchg cmp test int cli sub cmpsb rorb (bad) xchg repz rex.WRX repz mov mov rex.WRX pop callq mov stc leaveq rex.XB leaveq (bad) pop (bad) xlat cld leaveq rex.B int3 mov clc shrl push adc scas repz xor rcl jno shll in sub sbb xor ss fisttpll (bad) (bad) cltd mov in (bad) mov movabs sarl clc (bad) jae data16 rex.RX adc mov (bad) xor pop pop and push and mov (bad) jne rex.RX fstps rex.W fsubs fsubp test (bad) or rorb shll (bad) xor movsb xlat jne cmpsb loop pop js rex.WRXB in (bad) flds mov (bad) pop fstpl shl movabs cmp jge rcrb (bad) scas rex.RXB push adc mov mov jrcxz fsubl (bad) out sarl (bad) (bad) roll jrcxz push xor loop sub rol sti xor xchg mov in mov sarl push pop scas lret adc mov push loop xchg ror nop push rex.WXB retq pushq (bad) (bad) movabs icebp sbb movabs ss add (bad) and add rex.R cld jmpq jrcxz mov cmpsb movabs jnp ds add addr32 cmp (bad) jbe jo loope cmp cmp xchg hlt movabs cmp rorl retq and (bad) (bad) pop rex.XB add repnz sbb out movabs sti pop out imul (bad) (bad) scas add sub imul (bad) pop and push mov fistp mov pushfq insb test (bad) movsb cli rol mov cmpl (bad) pushq jrcxz rex mov (bad) lret test add movabs loope add (bad) (bad) negl sahf outsb (bad) retq loopne adc std add xchg es loope shrl movsl sub fist enterq xchg cmp (bad) push pop iret adc rex.RX test insb (bad) fidivrl adc and leaveq callq shrl lea fucomi scas or mov jne xor movabs mov ror xchg mov lahf xchg int mov popq xchg nop mov xchg testb xorb jne sbb movabs stos shll xor pop sar (bad) insb movabs push nop pop cli in sub mov jne (bad) outsb (bad) lret (bad) rex.WRX jno xchg andb xchg fld bnd add rex.B xlat jp (bad) and jnp scas addr32 push pushfq lods rcll stos xor icebp pop clc shll jb mov outsl jrcxz (bad) ja fld (bad) add adc (bad) (bad) fwait cmc ficompl stc sbb and rcrl pop insb (bad) stos data16 xor retq sub jnp pushq (bad) cmp adc (bad) mov insb iret orb outsb shrl sahf mov in cltd test retq cmp roll sub sbb xchg callq js fisub insb push rex.WRX (bad) js cmp lcall push movabs xchg or sahf cld movslq push (bad) (bad) rex.R (bad) out jno cmp shll push add test cs rex push xchg cmp ficoml rex.WRX repnz movabs pop push (bad) mov and clc mov (bad) addr32 and mov jle or xchg xor push insl rcrl or (bad) (bad) rex.R incl out sub outsl subl jl in cld mov mul mov jmpq (bad) (bad) mov sub iret int3 cmp or rorl leaveq int3 (bad) push (bad) push sub inc (bad) cs jmp stos sahf add popfq lea rex.R (bad) iret (bad) insb lods jmpq pop sbb push cmp insl divl sarl or push (bad) pop (bad) mov pop scas or sbb mov shrl rex.WR jge (bad) nop rcll push cmp stc (bad) mov (bad) shrb callq (bad) and and mov fstps insb rex.WX cmc cmpsl (bad) lret stc rex.XB sub jbe xchg (bad) leaveq mov ror cmc mov cmpsb mov fldenv cmc or mov (bad) sbb push add lods lret pushq add push rcrl rex.WX rex.WRXB jae xchg mov rex.WRB fmuls callq sub in mov retq (bad) imul push test (bad) jb roll cld loope add in movsb in (bad) popfq movabs rcll sub pop mov test ficom js pop jl mov sbb pop (bad) jnp in ror repnz (bad) testb or movabs mov loop notl (bad) rex.WX mov pushq jge je and repnz sarl rex.WRXB (bad) (bad) jb (bad) jmpq xchg sub (bad) or lahf iret pushq jp (bad) and loopne xchg movsb fisttpll roll out (bad) or rorb sbb (bad) adc rex.RB jo mov ss xchg cli stos sub fild flds or xor jno mov movslq cmp cmpsl pop (bad) loop scas (bad) sub data16 (bad) test fsubrl imul cld cs sub mov movsl sbb mov cmp rex.W std jmp sbb fs fild repnz sbb shl gs xchg icebp jae bnd mov (bad) outsl mov adc (bad) cli outsb pushq (bad) (bad) fwait stc fiaddl pushfq sbb cld and sahf jp mov add adc sub (bad) pop repz xor rol xor jae shr or sub outsb mov xchg rex.WRXB sti xor int shll gs (bad) fnstsw stos jns add outsb rex.WRX xchg or fs loop,pt fildl (bad) (bad) rex.WR adc xchg test push stc orl rex shrb sbb rex.RX rex.W xchg jp imul sbb sbbl (bad) invd (bad) mov (bad) adc fistl (bad) shll js cmp imul rex.WRB gs (bad) rex.WR rex.RXB rex.W repnz fsubp push or mov rex.WB lret xchg shr mov jnp (bad) mov movb sub fsubl movabs rex.WRX (bad) retq in (bad) ds xchg or sahf pushfq movabs mov je lods push mov iret data16 cwtl push add mov icebp std xchg mov test enterq incb divl adc sub retq xor pop testb or xlat cmpsb leaveq movslq rex.XB std rex.RB stos push rex.B rex.B or and (bad) (bad) movslq sbb cmp iret xchg mov pushfq (bad) add andl jno out mov fs sahf cmp cwtl rorl (bad) cld (bad) out rex.WRX (bad) sub (bad) and (bad) adc std movslq sahf or orl leaveq jns (bad) movabs outsb loop (bad) push loopne in pop rex.RXB (bad) mov callq cmp rcll jmpq std iret rex.WXB mov (bad) rex.B ds xchg pmulhuw fnstsw sub xchg adc (bad) in lret jle mov or xchg jno sbb (bad) xor xor jl lahf mov lock sahf ds (bad) (bad) imull orl jge fwait cli pop repnz (bad) mov stos insl movabs imul sbb js xchg mov (bad) or xlat mov rex.WRX movslq out (bad) stos ds and pop or popfq xor hlt sahf shll xchg rex.WR cwtl or fcmovnbe out (bad) mov je add sar in ss ds faddl sub (bad) or jge (bad) and rex.R xchg jbe (bad) cmp hlt (bad) rex.W xchg retq cmp int push (bad) fs or rex.W xchg and movabs (bad) xor (bad) retq sbb int3 insb subl repnz (bad) mov mov pop and mov mov mov mov push and or sti mov xchg adc (bad) jrcxz out movabs (bad) push shrl fucomip cwtl jns out stc loope jge pop adc rex.WR movabs insl int3 movabs rex.RX (bad) and mov sbb in add (bad) jge (bad) ror add (bad) andb loope addr32 (bad) rex.WXB (bad) add sub (bad) mov rcll mov shll lods lock movabs push insl sbb sub (bad) insl fld pushfq (bad) xchg je rex.B rex.WX pushq push lret js jge add imul out orb out or xchg cltd test fld loopne cmpb mov (bad) fsubr fcmovu and rex.RB rex.WRXB fcmovnu popfq loope or sub mov jno imul es mov (bad) mov rex.RX fisub idivl icebp enterq pop add sbb rclb pop (bad) imul (bad) mov cld (bad) and sub (bad) mov sub sub mov mov (bad) push scas xchg lret loopne xchg callq xchg andl xlat cmp je jno (bad) outsb xor mov and (bad) sub or xor data16 shll jle fmull loop shrl cltd xchg imul (bad) pushq in cmp (bad) mov lock rex.WXB shll and out (bad) (bad) pop add (bad) sarl divl (bad) xor xor js fld iret stos (bad) and pop cli sub and jge sub (bad) rex.WR fs shrl (bad) cwtl iret insl data16 add sbb shr mov movsb cmp (bad) (bad) mov adc loopne adc out ds (bad) jge enterq pop push jg (bad) or cmp (bad) mov mov test mov (bad) rex.WXB sbb sti stos mov mov push jge jb pushq xchg test cmp and mov jl xor hlt (bad) cmp rex.WRX jmp (bad) repz pop callq cmp (bad) retq mov xor es ror rex.RX roll fdivl xchg (bad) mov pxor jae sub rex.RB lock int (bad) imul negb push movabs rex.W adc rcrl enterq icebp sub sbb (bad) (bad) leaveq xor adc rex.RX (bad) in icebp int3 xor rex.XB stc es fsubs cmp pushfq adc (bad) iret sub lea popfq xor stos insl or rex.WX rcrl fs shll movabs outsb and jle cld sarb lock mov (bad) mov or add rcr (bad) mov mov xchg (bad) or sub scas jle rorl pop jl icebp push mov jrcxz mov lods xchg cwtl cmp std cmpsq nop roll enterq sti cltd or mov mov fldl sbbb add retq (bad) jge pop (bad) out rex.XB sti pushfq shl rex.WX lock rex.RXB sbb out sub roll xor and push (bad) sarl callq loopne cli flds rex.WB cs adc pushq rex.W or retq cmp rex.RXB mov sub (bad) sbb lret mov out (bad) in add add cltd loopne xchg mov retq mov jrcxz xlat (bad) fdivrp imul pushfq lods xorl cmp sub rex.WB (bad) rex.WRB sub cmp sub retq add xchg lods in adc sub lret addb (bad) push test mov int3 pop out or add repz shrb lock and mov and xchg loopne xlat (bad) iret mov add (bad) repz rcl xor sub cmp push stos add add pop or (bad) mov jge and pushq add mov and repnz jno (bad) sbb xor (bad) xchg jg and (bad) xchg jbe rex.WRXB rex.WXB pop (bad) lock fiaddl adc adc mov xchg cmc loope mov retq fdivl (bad) imul test hlt cmp cld (bad) (bad) mull fnstenv stc pop testb in (bad) retq sub jns (bad) (bad) or xchg xchg cmp iret and fsubl pop xchg fs adc rex.WB rex.WXB es enterq pop fadd mov cmp (bad) pop add mov int fwait jnp pop rex.WRXB int xchg jns pushq add rex.XB ds iret enterq (bad) loope (bad) xchg jg pop mov push lahf fiaddl jnp in ds xchg mov cmp rex.WX je movslq xor jle movabs cmp icebp rex.R jne mov mov ror sub mov mov (bad) jnp (bad) jb (bad) notl rex.XB roll sarb cmpsl sbb out cmp (bad) mov rex.WXB popfq adc (bad) in add jrcxz cld pop or maskmovq idivl (bad) mov test (bad) jns shrl (bad) (bad) fistpl in cmp imul rex.R (bad) jbe mov push imul (bad) psrlq rcrl push (bad) jno hlt (bad) or jmpq or sub rex.R sub sbbl out adc imul (bad) shll shlb sbb add sti cmp callq adc mov jns shrl repnz shrl rol (bad) callq rex int mov (bad) loop and mov rex.WX (bad) or cmpsb jne (bad) and or mov loop cmp add imul pop sbb and mov (bad) add mov (bad) ffree pushq imul fcompl mov sbb lret (bad) sahf add push lret xchg callq cmp fsubrl adc or mov sub rex.RXB xchg and sub xchg int3 rolb outsb movabs fist pop mov in mov sub repnz add (bad) callq add sahf (bad) mov in sbb out or (bad) mov mov test and rex.XB addr32 cli xor in fsub xorl shrl pushq lock xor enterq fldl mov ja ds cld sub (bad) callq and (bad) mov imul stos and xchg pop sbb mov roll vunpckhpd rex.X loopne jg outsl ror cmpsb sarl rex.RXB and movabs mov jne mov in (bad) hlt fwait xor nop movabs iret stos ss movabs rex rol sbb or mov cmp rex.WX jle callq out xchg out retq or pop outsl loopne or sar add sarl (bad) rex.W rcrl rex.B int3 fbstp xor icebp jo stc and jg and in mov sbb xor cmp cli sti iret (bad) insb pop shll pop jns (bad) sub xchg lods push pop roll data16 rex.WRX outsb imul (bad) std (bad) je flds xchg mov rex.WRB xchg lret shrl out jno or es or retq sbb mov xchg retq sbb mov xor or lods (bad) pushfq je jl mov or sarl (bad) pop enterq mov rex.WR mov rex hlt rex.RX cmc xchg rex.RXB xor or rcrl shll push loope push (bad) and jb rex.RX lret testl add jmpq and mov (bad) fstl shrb rcr and and sbb mov xchg movabs rex.R and jmp mov rex.WRB mov lock fildl scas xchg jns negl (bad) je frstor js je (bad) cmp add rex.WRX push rex.W xorl sub or adc lret jmp fs rex.R fildll out movsb loope (bad) jo movabs adc cmp fstpl pop imul (bad) mov idivb rex jp cs pop gs mov ja mov jle xchg cld xor test adc outsl std lock (bad) pop cmc imul rex.WB sbb rorl sar sub xchg adc rex.WX scas jmpq fwait cmpsl (bad) (bad) or in lods out jnp rex rex.X jne,pn repnz cmpsl cltd jb rex.RXB xchg icebp rex.WRB data16 (bad) leaveq (bad) adc test sbb xchg cmp (bad) rex.WXB (bad) mov and sub insb rex.R mov mov push or rex.XB rex.WRB sub jno imul jp scas andb xor (bad) imul rex.W xor or jmpq fs rex.WB push fnstsw int lods data16 xor mulps cld sub cmp insb xchg sarb (bad) jne rex.RXB jbe rex.WXB retq (bad) rex.WR (bad) retq imull subl cli (bad) xor xor rex.WX (bad) xor rex.RB outsb fadd js sub pop sar jg fidivr movslq mov (bad) sbb enterq rex.WRB gs pop or adc fld (bad) scas jmp callq lret sbb (bad) xor adcb stos xlat xchg lret nop sub adc orl movabs push xor loopne sub fdivs pop vpsraw and and cmpsl push shll adc int push stos lock add jle bnd loope (bad) (bad) pop xchg rcll iret and add cmp xchg fcoml cmp (bad) out and (bad) movabs enterq fwait mov iret cmp and rex.B rcl shrl mov rex.RXB repnz mov loope xchg sbb lret (bad) hlt push jle in stos rol pop jb callq ror jg callq (bad) outsl or mov data16 and mov jo pmaxub movabs pop cmc (bad) int3 mov imul roll or jmp rex.WB rex.RX addr32 fisttpll movsl mov test xchg mov fmul in rex.WXB sub jmpq pop xchg pop rex.R adc leaveq loope insb (bad) sub sti pop sub adc (bad) ror (bad) test sub rex.RB sub js (bad) (bad) rep sub fdivs rcll sti xor jb out mov rcll sarl add adc divb and retq (bad) fildll test push (bad) mov xor cmc mov xor cld ficompl rex.RXB adcl jno push rcll and rol pop icebp and xchg sub test add sub pushq (bad) hlt (bad) rex.W fld divb (bad) mov xor (bad) mov insl sbb loop cmpsb (bad) mov std mov mov movslq rex.WRB stos pop and rex.R rex.WB push xchg and (bad) and jne repz icebp push and (bad) test sbb mov add (bad) mov leaveq mov fcmove sub callq rcll mov clc or xorps mov (bad) shrb jno callq ss mov and or clc jb (bad) rex.WX roll rorb rex.W pop or (bad) xor xchg push int3 stos js add data16 xchg sbb mov xor int3 lret xor rcr (bad) nop enterq movabs rex.WRX rorb shll jo scas shll nop sub mov es push fyl2xp1 mov in movabs rex.WX rex.WR jge cmp lret xor mov xchg icebp and lret (bad) jmpq (bad) sbb rex.WRX shlb fs mov and stc rex.WX add pushq and mov (bad) jns add (bad) mov and pop fstpt (bad) pop lcall jle sub loopne or shll adc mov out mov rex.RB sub rex.RXB scas jno and cltd rex.B and jns mov mov pop movabs gs rol jp mov enterq jle es (bad) test and cmp (bad) fcompl (bad) repz cmp movslq ror jb,pt (bad) pushq rcrl insb (bad) xlat (bad) sarl int3 retq cltd test adc sub mov retq stos or sbb (bad) cmpl ds (bad) mov mov addl imul retq adc nop push push (bad) mov pop mul and xchg and push lods fisubl pop pop mov xchg rcrl rex.WX mov lock xabort retq data16 rol iret add (bad) testb rcr and sbb (bad) adc mov imul and jns push mov sub rep ss (bad) int3 jrcxz xchg notl lea rex.WRX mov jns repz shl out pop sbb iret stos mulb mov fdivrl (bad) fmuls xchg stos jnp rorl ja rcll movsl xchg (bad) loop outsb sarl and add roll int3 rex.RXB rex.B jrcxz rex.WXB popfq add gs or imul pop (bad) negb scas sar (bad) lods push lret mov sarl (bad) out rex.RB testl push pop sarl xchg shll sbb in (bad) xchg (bad) rex.WR mov xor out mov rex.WRB rcrl (bad) adc xchg and nop and loop (bad) rex.WRXB addr32 xlat movabs (bad) xor clc jmp rex.B (bad) (bad) mov (bad) sarl lods sbb test (bad) mov movslq ja push or callq (bad) rcrb push repnz hlt sahf (bad) add xor adcl fisubl rex.R imul cmc addl stc (bad) rex.RXB (bad) jo loop jp rcll sahf mov lret repnz rol push movabs (bad) movabs and push sbb cmp pop sub callq hlt or std cmp movslq fld js mov rex.WB add (bad) xor (bad) out (bad) (bad) sbb jns rex.WX mov shlw lock loopne roll (bad) scas (bad) addr32 loop stos ffreep push popfq fimull (bad) je es add sbb jb jns rex.B int (bad) jl rex.B fiadd int movabs cltd sbb ror movslq roll fdiv mov mov loop fwait jns and loope mov xchg callq (bad) rex.RB rex.WR sbb mov (bad) pop and or stos (bad) pop (bad) (bad) mov mov mov add rex.XB shrl in mov icebp (bad) iret rex.RX (bad) push xchg movabs scas (bad) pushq xor xchg sub add (bad) lret (bad) cmp movsb leaveq repz (bad) test add (bad) and movabs pushq (bad) fnstsw shr sbb movabs loope je cmp iret clc xchg (bad) mov in sub sub jns sub rex.WR shll and xchg outsl adc fidiv xor xor sbb jbe (bad) rex.WX sbb rex.B rcrl or movabs adc insl fistpl xor sarl (bad) xchg movslq icebp loop repnz (bad) je mov xchg jbe cmp rex.RXB sar xor test add (bad) jg xor and shll cmp cltd pop add mov gs (bad) mov (bad) mov (bad) push jo (bad) xor push or push rcll out adc add adc in data16 jnp sbb cmp jmpq clc pop (bad) (bad) es and add fldenv (bad) mov rclb xchg (bad) neg sbb xchg cli mov mov rex rex.WRX fadds mov push (bad) sbb sub xchg xor cltd rcl int xor xor sub mov shrl ja rex.WRXB (bad) (bad) negb out nop rcll nop scas push jnp loope lret jmp pop (bad) ja iret fwait rex.WR vorpd add in jge stc movabs fdivrl push sbb adc (bad) cltd sub out rcll clc (bad) xor stos or outsl sbb cmpl mov movabs test and push add mov movabs test add testb lret scas es movabs insb (bad) rex.B jbe stc mov jmp callq (bad) xchg repz add (bad) rex.RX callq (bad) nop rex.WB lretw ja pushfq adc xor add in mov mov rex.X (bad) (bad) (bad) jp rex.WX (bad) sub add cvtpi2ps repnz xlat (bad) shll leaveq (bad) (bad) (bad) testl mov fidivrl cmc sti mov xchg push (bad) callq testl and rcrl xlat jle mov (bad) rclq in (bad) (bad) jne sub fidiv rex.WB cmpl rol scas rcrl cmp (bad) rex.WXB sahf (bad) mov (bad) fild rex.WRB (bad) xor (bad) insb fistp shr mov pop and add (bad) mov (bad) rcll std lret jne in orw (bad) shlb (bad) lahf adc dec cwtl and movabs popfq retq pop sub shll and movsl push rex.RX cmpsl or lock jbe jnp (bad) pop movsb pop jae xchg add lret movsb int and movslq cmp jrcxz js sub movsb xlat (bad) jp movabs (bad) (bad) sbb xor test mov rex.WRX and mov jno sub push (bad) jl add (bad) sbb add fsubrp (bad) rcrl xlat mov enterq in rex.RX sbb movsb sub (bad) in mov rex.R rex.WX orb and mov jp or jrcxz mov mov adc lahf mov int3 sbb jl jo testl loope fnstcw imul (bad) ja (bad) (bad) (bad) xchg jmpq fsts fs repnz jo add test hlt (bad) iret in pop mov xchg stc and enterq movb rex.WRX (bad) rex.RX incb rex sti rex.XB ss mov mov add xor in jmp mov pushq rex.B std (bad) mov add lods (bad) sub int movabs xchg xlat icebp retq ja add sub test (bad) mov mov repnz (bad) mov rex.WXB cmpsl mov fidivrl mov repnz push faddl sbbl fnstenv test sbb xor loope loop rex.WXB push lret rcll stc sbb repnz rex.R mov sbb (bad) movabs movabs or sub mov lods int3 pushfq push cmpsl add xor js mov rcll cmpsb int3 mov or xlat out fldl sbb repnz je xchg leaveq mov sub jno jp (bad) je sti clc pop retq mov in (bad) (bad) or mov ror test popfq testl vfnmsub213sd hlt sar sub rex.RB int popfq push flds pop js xor cmp sarb callq (bad) (bad) mov add rex.WX sub cli jmp sub or out loope rex.WX rex.WB callq fwait (bad) rex.WR ss in (bad) sbb push and jrcxz xchg rex.WR push (bad) pop imulb (bad) pop fidivrl movabs loope (bad) bnd and add mov (bad) rex.X (bad) sbb icebp mov leaveq and fcmove fwait cltd loop mov movslq ffree rorb lods (bad) pop (bad) mov (bad) movabs cmp xchg pop shl stos rex.WR rex.RX xor es fcmovb retq sub movabs xor pop movabs rorl add stc (bad) std lret or (bad) mov fs or rcrl add rcll out shlb sub loopne rex.RB push mov loop movsb rcrl add and cmp and jmp add sbb std and (bad) jno pop pop cli xor mov xor rex.WRXB (bad) mov rcll add and (bad) (bad) shll cli mov sub sub pushq cmc pop insb gs (bad) std scas (bad) shr push xchg retq sbb leaveq rcrl rex.B pushq out test cmpsl mov rcrl xchg mov fwait (bad) rex.RXB gs scas sarl int3 std add and sarl (bad) and (bad) repz rex.WXB cwtl xchg adcb rex.WRB xor cmpsl cmp jbe jrcxz shrl stc pop sbb ss cmpsb mov jbe rex.WXB jb (bad) xor (bad) addps cmp out iret or (bad) shrl (bad) xchg outsl sbb cmpsb xor outsb (bad) rex.RXB (bad) jno cmp mov pop and rex.WR or cli cmp pushq (bad) and mov jno movsb (bad) vandpd and iret xchg rex.W addr32 mov jns jns shrl sbb (bad) roll cmp push cmpsb stc rex.WX push jb (bad) fwait (bad) mov fsubrs mov je imul cmpsb pushfq mov (bad) vpcomb lahf std sarl pushq roll callq push enterq rex.WX xchg (bad) xor adc rex.WR rcrl insb mov imull outsl sahf imul rex.X rex.WRB shll push rex.RXB push popfq in mov or js lea pushfq mov rol or xadd mov rcrb (bad) je movabs xor rex.B rex.RX mov (bad) mov add pushfq jae sub pop iret push rex.X cmpsb xlat int3 cmpsl mov out rex.WX pushfq loope lea movb jb pop out test fsubrs (bad) leaveq or (bad) rex.WX cmp cmpsl jge enterq adc outsb (bad) push or jno mov scas adc (bad) stos stos xchg rex.WR std rol (bad) (bad) push retq out mov (bad) pop (bad) fcom movabs movsb movabs jns xor movsb sub cmp push push lock adc (bad) (bad) pop insl rex.RB sahf fildll or mov add sub pushq xchg add (bad) jl and xor push xor xlat scas (bad) and mov xor retq and jns rorb push jmpq push sbb pop mov in adc int3 sub rcrl and cmp inc scas mov adcl pop pop cltd movabs (bad) fdivs shll and rex.W divb int3 add test jg rcrl cs rex.W repnz movabs fistp and (bad) icebp pop rex.XB or (bad) sar in pushq jne,pt jmp xchg rex.B pushq in or sub xor fscale sbb jl adc lock cltd mov rex.RX cwtl (bad) movabs lods pushfq movabs or push stc mov lods sahf in xor divl add cmc add rcrl rcrl cmpsb cmc adc loope (bad) push (bad) xchg lahf fadds out int xor cltd retq mov (bad) jno pop sub mov rex.X scas outsb (bad) or movabs (bad) mov rcr xor jne xor movsb (bad) cmpsb rex.WXB push roll cmp shrl mov es cltd rex fist (bad) scas movabs (bad) fiaddl rex.WX (bad) roll mov xor cltd rcrl push lock shrl rex.RXB (bad) fsubrs (bad) lea cmp jno or (bad) repnz mov adc xor xor retq lock push and pop int sbb in (bad) shll rex.WRXB rex lret push jae add rex.B out xchg shll in xlat fsubs and mov rex.WX and (bad) mov lret (bad) and (bad) mov pushfq cmc jmpq shll mov (bad) shlb cmp cmpsl fidivr shrl (bad) mov pop addr32 retq (bad) mov rex.WRXB sarl pop loop cmp rex.XB pop mov xchg xlat lock add (bad) lods vunpcklpd sahf mov sub xchg test rex.B cmp push sub repnz mov jnp xchg fucomip cwtl (bad) mov sahf jbe iret sbb (bad) (bad) pop sbb sbb cwtl and rex.WRB (bad) ss mov (bad) icebp and stc (bad) mov xlat rex.R cmp cmp icebp popfq loop xchg int3 imul and jmp rex.RXB repnz ror add loop test pushq pop sarl jno push repnz (bad) pop xchg mov scas movabs in shlb or jo (bad) sub rex.WB mov roll dec rex.WR not fnstsw add fist and retq cmovae sahf rex.WRX lret (bad) cmpsb je fsubr push (bad) sub cmp cmp rcl mov xlat (bad) ss lahf jp shll mov iret test cmpl out (bad) shrl rex.XB push repnz push pop sti sarl cmpsb and nop out inc loope add leaveq sub movabs jb rcrl rex.RB out push int3 or flds mov mov icebp je loopne or jno jo int sub lock scas xor xchg stc xlat xor jno pop (bad) in or lock adc (bad) mov rex.RB sbb mov and orl addl cld sub ficom lret xor loope (bad) adc out adc movl mov sub and cltd or in callq mov pushq js xchg (bad) cmc jrcxz (bad) add divl je rex.WB (bad) jrcxz rcl push mov rcrb setb es (bad) rcrl imul movabs test jp movabs xchg shll sbb clc sbb (bad) test movabs (bad) (bad) adc or in in adcl (bad) xor xor movslq pop loop rex.XB jmp jrcxz iret rex.B ss (bad) jp sbb jl push (bad) push adc roll (bad) neg fidivr addr32 (bad) mov pop cli ja (bad) icebp shr mov mov sub mov loope mov xor mov xchg push rex roll sbbl jne mov (bad) xlat (bad) ds scas lahf lret pcmpeqw rex.B jle (bad) lret pop (bad) sbb mov stos outsl stos adc movabs add fldenv push lods prefetchwt1 std and xchg addr32 (bad) cli pushfq int movabs icebp vmwrite xlat (bad) cmc insl (bad) (bad) xchg (bad) gs int jnp lret addl fwait cwtl pushq shll push rex.W rex.WB clc pop shrl and rex.WRXB (bad) testl cmp sub rcrl sbb cmc mov (bad) mov faddl int3 movabs gs (bad) insb lret rcrb (bad) mov adc rex.WXB (bad) out retq shl sahf shll pop xchg (bad) (bad) in mov rex.X sbb rex.WR in xchg cmpsb lock or in gs cmp sbb hlt (bad) sub (bad) lock xchg (bad) shll shrl rex.WB mov jge add hlt pop out sar jmpq in (bad) iret sub (bad) out insl rex.RX cltd enterq sub (bad) adc movabs orl (bad) or psubd lock add adc in loop in out cwtl (bad) hlt pop and xchg in (bad) (bad) (bad) cwtl shr xor add mov pushq sarl xchg sbb rex.WRX cmpsb or mov xchg push fisubrl and xchg (bad) sahf jns xchg out (bad) int xor cmp sbb stos lock roll fs loopne sahf or rex.B fsubl mov (bad) enterq jmp jge xchg roll mov rex.WB and loope or fldl xchg out adc xchg subl xlat (bad) adc icebp or adc (bad) or rex.R rex.WRX cmpsl cs (bad) sub int3 pop push (bad) stos rex.B data16 cmpsb nop mov pop rex.B mov (bad) jnp (bad) xchg and sub hlt int fist mov lret pushq sbb callq fist cld xchg or mov int rex.X push stc lock add jbe cs callq cmpsb (bad) and vpunpckhdq shrl test (bad) mov lock sub and mov xchg adc out adc repz mov movsl adc (bad) (bad) (bad) lret fist cmp loopne loope fwait mov sub xchg (bad) rorl cmpsb lahf sbb (bad) repz xchg jae mov roll sub ror out (bad) fsubs jo movabs cmp (bad) (bad) lock jmp sarl sbb movabs or xchg rex.RB repz movabs out xlat rex.W cltd or pand addr32 sbb (bad) rex.WR sbb xlat jp addr32 in loopne mov insl cmp enterq (bad) add mov push and retq (bad) sub (bad) data16 push sub pop (bad) or add rex.WR mov mov (bad) (bad) jns cli cmp loope movabs repnz in jne cli out and mov cmp push rex.B repnz pushfq rex.WRXB jmp ja fsubrs xchg scas testl lret pushq int3 pop (bad) movabs rcrl jl pushq pop rex.WR push rex fbld add mov (bad) xlat lret mov mov pushq mov (bad) pop cmp sub mov out imul xor repnz insb loop rex.RX rex repz mov (bad) int rorl (bad) jp rex.WRB shrl xadd movsl and xor icebp (bad) jmpq push outsb pushq rolb jle jl fucomp mov scas pop (bad) movsl (bad) xor ss rex.WR int3 add pop rclb adc hlt (bad) adc shll jb add mov movabs xor imul cld push leaveq or (bad) neg adc pop roll (bad) cmp and in mov shll sub retq lods sub lret push rex.XB rex.WXB addr32 pop sbb jno add fdivl rex.R and xchg (bad) xchg clc xlat out iret fld fcmovu cmpl scas cwtl stos clc xor rol xor sbb outsl rex.W xchg and shrl mov (bad) stos test stc shr stos and adc rex.XB (bad) add int3 movabs jp or (bad) sbb xchg sbb andl (bad) xlat mov rex.RX jrcxz and dec test negl enterq (bad) fcompl add push clc lret shll sbb xchg mov icebp cmpsb rex.RX iret pop jno cld sar iret mov (bad) in jne ror cmp adc and jb test sbb sar sar xchg and shrl (bad) iret pop rex.WX rex.B adc mov sbb adc repnz pop (bad) mov cwtl test cmp mov mov imul rcll rex.WX rex.X test retq xor jbe cmp push sbb out cmpsb rex.XB roll jp test vmovmskps jns fs push stos rcrl and cli shll retq xchg (bad) sti in js adc nop cmp (bad) int lea (bad) sar xor lret add xchg retq push push faddp rex.WRX sbb xchg sarl sti cmpsl (bad) scas std stos jmpq xchg jnp xchg lret (bad) adc sbbl add ja jae and sbb repz test (bad) cmp mov fldl or mov mov je rex.WX rex.RX rol movabs sbb jnp and fcomps add movabs fildl jge push mov addr32 or (bad) (bad) jns lods jge (bad) (bad) add iret sub rex.WR movabs lods fisub subl scas and sti push mov fucom rcl std rex.WRX or test movabs imul rex.R callq mov mov jbe ljmp cmp (bad) mov rcr ss adc sub movslq sahf (bad) fisttpll rcrl fs loope outsl jge and (bad) negl movslq pushfq cmp std rol sti pushq mov add lahf shr push sub add mov movsl (bad) lret jo callq rex.X mov sbb (bad) retq or (bad) cmp movslq xchg out rcl xchg imulb pop std (bad) out test lea out (bad) push or cmp mov (bad) roll cmp pushq (bad) cmp cltd repnz je,pn rcll jp lret in mov (bad) xlat imul mov (bad) jg mov jmpq (bad) add push ds mov adc xor (bad) mov (bad) jle (bad) out sbb adc retq and xchg shll rex.X cmc in rex.RX popfq in movsb mov mov rex.WXB mov iret mov sysret sub out rex.WRB (bad) pushfq xchg cmpsb jbe sub je movabs ror rex.WRB push rex.XB mov popfq out jrcxz sub sub movabs icebp or pop mov add xor jo lods cld insb sub (bad) mov je (bad) and add mov mov insl (bad) lret jae cli fldenv test stos in cs out insb sahf jmpq jns (bad) mov movsl rcll movabs callq sbb in xchg movabs mov lret xor jnp xchg or scas cli in and in and cwtl repnz sbb adc rorb push stos shll out xor rex.WRXB jge add (bad) roll or stc outsl loopne (bad) lock imul lret rcl movsb fbstp (bad) (bad) xlat mov (bad) adc movabs jg (bad) sarb add (bad) mov loope loop test adc (bad) (bad) sti mov jge add push scas (bad) mov xor mov rol jne fiadd pop xchg (bad) cmc sub pop xchg fwait movabs scas xchg out xchg adc (bad) cmp notb rex.WXB xor lcall sub movabs mov in lea jae (bad) rorb (bad) jno test faddl adc xor mov mov out movabs fs or (bad) xchg sbb fwait ror retq mov and cmp mov mov ror rex.WXB (bad) sbb push jg add (bad) cmc (bad) cmp pop and (bad) xchg retq add sub mov adc mov (bad) imul iret xchg rcll fcmove add add mov fsts in jp mov incl in (bad) add loop jne mov (bad) int3 (bad) adc fildl (bad) shlb xchg movsl lahf jbe sub and out frstor jrcxz pushq (bad) mov rex.WRX repz xor (bad) (bad) rex.WB rex lret jmpq push (bad) xor movabs imul push out scas and callq in ss js jns in rcr mov jae rex.WRXB adc adcl cmp xchg sbb stos (bad) scas imul and shll (bad) lea rex.B rex.WXB push (bad) jge stc mov (bad) cltd iret (bad) mov rex.X loope and mov test ss outsl rcrl jns or add mov rex.WRX je and int3 pop xor rex.RXB adc adc (bad) rex.B callq cmp (bad) xchg movsl mov push shlb (bad) mov xor rol rex.RB (bad) movabs rex.R push out insl push cmp outsl or adc jg add cmp add jno jrcxz shrl loopne pop pushq lahf cmp add mov xor test (bad) fist (bad) lock (bad) xor mull ficoml xlat imul jge (bad) lock stc ja and shll je loop int in or or fcmovbe movabs lret outsl push test movabs iret in (bad) mov stos movabs addr32 fucomp movabs sbb pop movntq idivl xchg outsb movabs jb orl rcll pushq jmpq (bad) or rex.XB (bad) test mov cmp pop add pop or xchg lea lret out scas push dec cmpsb fdivrl (bad) loopne cmp (bad) mov in cmp mov xchg enterq (bad) or lahf xchg pop or rex.R addr32 sbb xchg mov rex.WXB cmp adc and (bad) out rex.WRX rcll jne fmull (bad) and push shl sbb pushq es add (bad) jbe insb lea (bad) jmp (bad) (bad) xor cmp xorb rex.R lock retq or (bad) jge add rex.RX sub jp or and mov imul clc roll std lods pop test ror push loop scas cmpsl or jns faddl fisttpll mov (bad) add movsb pushfq outsb lods rex.W or stc cltd mov pop push and sub adc (bad) (bad) adc shrl jl (bad) xor mov jo mov adc add jns or mov icebp rex.WXB (bad) adc movabs rcl mov retq (bad) (bad) jle mov callq (bad) pop mov cmp rorb sub add loope rcrl jge pop jb insl loop sbb sysenter pushq mov retq fdivrl or out outsl shrl movabs mov adc adc repz jns rcrl callq xor movsb xor loope jrcxz (bad) rex.WXB rorl cmpsl in (bad) cmp jbe rex.X push int3 mov lods iret (bad) cmp xchg test test cmc sbb (bad) jne pop pop outsl mov (bad) cmp js jmpq (bad) rcll leaveq (bad) mov (bad) fidivrl (bad) pop int xchg (bad) (bad) xchg adc movabs mov sub hlt (bad) xchg lods (bad) jae add divb adc cld (bad) (bad) xchg adc (bad) (bad) add lahf adc sar (bad) pushq shll add rex.WRX (bad) (bad) rcrl in push or adc rex (bad) (bad) lock xor rex.WRXB movabs jge rcrl std ja leaveq (bad) cltd fs pushfq lods (bad) incb mov pop (bad) imul rex.X jbe rex.WRB stos rex.WB push xchg (bad) rcll (bad) fdivrl xchg rex jo (bad) addr32 sub add sbb sub in sbb jg clc movsl rex.WXB in rex.WRX int (bad) jb scas cmpsb cmp rorl fstl mov negl add (bad) hlt pop xchg or fcmovb mov (bad) repz (bad) icebp pop rex.RXB (bad) rorl jmpq rcrl xorl lea add sti js mov adc (bad) sbb (bad) mov fsubl jg (bad) push pop (bad) callq jns mov enterq rex.B xchg xor jae and cwtl fwait add mov jno mov jne movabs add and insl rorl movsb repnz (bad) sarl or or sbb push addr32 (bad) pushq mov movabs pop rcl xor test push fimull jbe jno jp (bad) cmp jmp scas callq sarl (bad) push movabs movsb or (bad) push push stos jrcxz add push test mov repnz jb xchg movsb rex.W rex.R stos movabs pop sub (bad) (bad) and and lret sub xchg (bad) mov shrl (bad) cltd adc movabs cltd addr32 xor and insb popfq rorl mov movabs rex.WRX mov adc xchg (bad) (bad) loop jns rex.X or (bad) (bad) roll fsubrs jb xchg test (bad) movslq (bad) sub jae shr icebp add xchg enterq mov or rex.B (bad) fsubr je cmp xchg or adc insb in cmp movsb lods int3 test jmp jl movabs sub cmp rex.WX rex.B mov adc es sarl cmpsl movabs jle insl mov xchg jp pop lcall jno out (bad) mov (bad) rex.WR rex.RX (bad) mov jo rex.R adc or jns mov rex.RXB (bad) lock (bad) mov xorl jno rcll (bad) rex loope int cld mov movabs (bad) lretw ss in enterq lcall sbb and mov cmc (bad) push mov lock push and movabs (bad) rex.WR out rcrl fs movabs push mov in (bad) rex.WRX fsubr (bad) jb outsb add mov faddp scas mov fmull add jo out pushq cli or (bad) pushfq sbb loope pop xchg cmp (bad) or retq scas pop sahf push xchg cmp rorl stos mov lods (bad) rcll fs (bad) (bad) rolb cld shrl rex.WRB pushfq (bad) mov data16 rex.WRXB rcll push ds xchg rex.WRB (bad) movabs cwtl iret xchg sarl and sub (bad) jo xor (bad) xchg pushq je sbb (bad) (bad) pushfq adc rex.B sti repnz scas loope outsl rol (bad) rex.RX es (bad) sub push jp mov imul mov test rex.XB insl fs fsub in rex.B xchg loop (bad) mov xor mov (bad) int3 js rex.RXB int pushfq mov cmp jnp imul mov add cli add add roll rex.RXB rex.W jl push pop jg and or jrcxz (bad) rcl mov in add (bad) jmp sub jb stc xlat rcll pop loope sbb sub (bad) lods mov loop repz or rex or cli (bad) lret cwtl fsubr stos (bad) mov test es push mov orl xchg mov nop insl or and sbb nop rcl fwait cmp cmpsl imul movabs (bad) cmp (bad) pop ss int (bad) (bad) or cmp rex.B fs jle sbb xor sbb jo pop push mov (bad) and test (bad) mov pushq shrl test xor out mov movsl and (bad) add mov ja vmovss adc adc jns (bad) xchg xlat rorl xor fstpt roll sub (bad) xor out (bad) rex.WR fnstenv int mov (bad) fwait mov roll cs ficom mov scas sbb mov xchg sub out (bad) in pop xchg jbe cltd outsl xor rex.X add out repnz retq pop (bad) xor shrl (bad) data16 rex.XB (bad) (bad) adc lret es mov int3 cmp cmpsb pushfq xchg (bad) and shrl std rex.WXB cmp (bad) (bad) lret out fsubrs (bad) movabs (bad) mov xchg jae lret outsb insb rex.X cmp or sub cmp loope bswap movabs xor mov movabs pushfq roll movsb pop xchg add xrelease lcall mov (bad) xchg std sarl (bad) (bad) (bad) rex.WRX mov movabs sub (bad) mov in divl retq test rex.WRXB push (bad) out iret add data16 and add fldcw in xchg sbb ds or (bad) (bad) fistpll fimull loopne (bad) test fwait retq clc loop sbb xchg movabs js and loop rex.B pushq and ja pop shll sbb pop push jbe bnd or movabs xchg and add xchg rex.R (bad) loop mov jp jge shl outsl lret shl retq xchg jb movslq jo sbb xchg retq jb out cmpsl mov shlb and (bad) rcrl adc push push es and push fmull adc pop (bad) mov rorl ficoml cmp (bad) (bad) jno in add movabs cmpsb pop je xchg pushq add repnz jl rex.RXB lock jno fildl (bad) sub add nop push fdivrl sub add add andl movabs test fildll icebp loop roll adc sub cs rex.RX adc (bad) cs rorl pop mov out lods rex.X movl mov icebp mov pop cmpsb iret jo rex.X rex.WRX rorb or xchg movabs test loopne lods lahf jl jne mov rcl pop (bad) rex.WXB jno movsb mov test xor xorb cmp push cmp jrcxz stos adc movabs (bad) insb cmp movabs imul add lods sahf (bad) in add push and (bad) test out retq adc in (bad) rex.XB or push cmp or ja rex.X fcomip shrl xorl rex.WXB xor (bad) (bad) out mov mov (bad) sub jrcxz scas pop mov sub cmp (bad) or (bad) rex movabs imul (bad) cmp (bad) sti xchg sarl outsb jo add (bad) (bad) shrl (bad) pushq ja add int3 jmpq mov push add mov sbbl int3 cmp shrl rcr rol xor cmp rex.R movslq rex.RXB mov rex.XB cmp hlt push and dec (bad) sbb add add xchg add in xor fmulp cmp pop out lock clc rex.WXB and rex.WRB test rex rex.B mov lret pushq xchg rex.R rex.WRXB or fwait add rcr or movabs (bad) lret cmp adc or rex.R rex.WX push sbb addl enterq cwtl imul (bad) retq (bad) mov movslq xor imul add movabs sub xchg je mov in (bad) cmc (bad) lods mov sub fwait sub (bad) rex.WRXB rex repnz push sahf (bad) jae mov mov in add ja sarl add (bad) add callq pop insl xchg jae movsb fst rex.B mov mov xchg repnz pushfq lock (bad) xchg (bad) mov movsb sub (bad) clc sub push rex.XB xchg movabs movabs mov and fistpll loope test pop retq add xchg mov (bad) rex.B mov fcmovbe jl jp or jbe jnp mov seta (bad) xchg (bad) jo pushq loop (bad) adc sub rex.WRB repz pop movabs (bad) lahf mov (bad) cmp nop lret (bad) leaveq fdivs stos (bad) rex.WRXB lahf movabs cmp xchg xor jg jno add sbb add test or and movslq jne xchg in (bad) mov sub test pop fsubrl sbb cmp (bad) and push mov adc sbb sub (bad) movabs add xor fwait movsb adc out push (bad) jns mov in gs callq mov movabs movabs jbe sub jmpq (bad) loop add mov faddp xor xchg stc mov insl rex.RXB adc add xchg (bad) iret fnstsw and enterq mov stos (bad) jnp xchg shlb add rex.XB iret shlb or int sub out and int add rex.B nop repnz add int insb add rex.WX rex.R rex.WRX rcll cmp shl sbb xchg rex.X cs jmpq xor rex.B repnz sub adc (bad) int push xchg icebp roll test scas adc mov mov pop ja xlat movabs roll lcall xchg sub rcl xlat mov xchg jl jno shll adc push sarl jle cltd sub (bad) (bad) cmp test add roll addr32 (bad) xor pop lock push int3 jmpq fiaddl stos sub sbb xor (bad) fwait (bad) mov pop fcom or std cmp sar and xor shl in (bad) rcll shll nop out idivl (bad) sbb imul subl shr xchg (bad) sbb jns mov xchg mov ror jnp in (bad) rcr sbb (bad) cmp icebp jmp cmp push pop xchg ja cmp mov jl mov jnp cmp adc (bad) in movabs sub testl fsubs jrcxz in pop fdiv or and (bad) (bad) repz mov fcoms out addl add sub loop icebp (bad) lods pop lret mov test jno pop loopne test sarl (bad) rcrl movsb mov (bad) out mov fbstp pop sahf push cli xchg lock add cmp out retq movabs imul (bad) rcrl jns (bad) jo sbb or callq (bad) and sarl add sbb ror lea scas rolb (bad) or fisubrl lods (bad) fbstp sbb pop rex.WXB rex.WRX cmp mov icebp and push pop int3 add and outsl xor push sub out rex ss or fld xor fnop adc fadd push rex.WR in pop xchg jo (bad) int3 int3 lret mov movabs mov (bad) jbe stc (bad) rol cmp mov (bad) (bad) (bad) lea loope add rex.WR (bad) sub icebp movsl pushq mov rex.RX rex.WRXB and (bad) retq or cmp sub cld (bad) repnz (bad) jmp loopne jle fsubl icebp (bad) add lahf mov mov fs addr32 xor addb ds imul xchg mov leaveq retq rex.WB ffreep out (bad) add int std rex.RX jo add cmp sub (bad) add xbeginq lahf (bad) add jge fimul in iret imul stc xlat mov sub xchg push sbb repnz repnz sub fist loope and shll ror cld leaveq adc sbb rex.B (bad) mov mov decl jno pop jb out rorl movsl (bad) (bad) cmc mov jbe scas xchg insb fcomps pop movabs sarl sarl xchg out rcr cli rorl icebp mov repnz test cltd int3 movabs cli adc xchg ss (bad) shll add mov xchg movabs push rex.RB lret dec jge and jae xlat add movb push (bad) (bad) movabs (bad) mov in rex.XB xchg jae cmp icebp enterq and rex.XB (bad) pop fistpl callq (bad) fcmovbe fdiv rex.B outsl adc fdivrl mov rol mov rex.B rex.WB rex.R pop cs je (bad) sti in xchg rex rex.WXB xlat mov movabs jno xlat xor (bad) subl cmp sbb rex.WRX sbb pop rex.WRB rex.WB vcvtsd2si and test out or addl test fldln2 sub stos rcl imulb (bad) or retq scas imul ror imull jl jle cmpsl xor sbb test adc xor cmp (bad) pop sub rex.RXB fnstsw rclb rex.RXB (bad) xchg jmpq rex.RXB xor ss cmp mov pop pop loope div jo movabs (bad) rex.RB xlat (bad) mov inc repnz in jnp (bad) insb fidivrl cmp (bad) rex xor rex.W in mov stc loop and callq movsb xor repz sbb pop cmp lock adc (bad) hlt (bad) out out lret pop clc (bad) lret add or cmpsb (bad) test stos (bad) push sbb (bad) (bad) callq (bad) ss rex.B rex.WRB fbstp repnz mov rcr jns retq test sub lods frstor out orl (bad) loopne (bad) add out retq jmpq scas (bad) fstps rex.WXB (bad) jae xchg push cltd sub es movsb sub (bad) pop xor rex.W cwtl shrl xchg mov or loope (bad) imulb fsubrs sarw (bad) jmpq (bad) and (bad) movabs retq xchg pop fstpt (bad) and or outsb sarl callq rex.WB mov imul mov pop iret lahf int3 pop push and repz lods std (bad) sbb (bad) sarb (bad) adc mov cmpsl rex.XB mov xor sbb jp retq in sbb (bad) mov shrb movabs push push or (bad) jle xchg xor rol xor xor rolb and (bad) pop scas int3 push out sbb pop (bad) enterq fcmovb ds mov push (bad) gs ror (bad) repz loop (bad) or lret out adc xchg mov push out in out sub sub fstpt stos (bad) add (bad) (bad) fadd rex.RXB ss xchg insl rcrl hlt fsts adc and imul rex.B repnz cmc rex.X ss sbb fcmovnb jmpq rex.WRXB rex.RB rex.XB (bad) (bad) test pop scas fsubl mov loope jg test mov or cwtl pop adc movslq (bad) (bad) xor test cmpsb testb rex.WX (bad) int fimul jle mov lret xor ja (bad) outsb jno addl cmpb jrcxz fcmovnb sahf and test rorl cmp icebp push hlt ja lahf jmpq sbb and xchg int jno mov mov xor and movslq repz (bad) in cmc fsubs rex.R rex.RXB lret lret rol add (bad) pop cs (bad) (bad) adc (bad) test xchg in jg shll movabs movsl shrl sti cltd movabs (bad) sub mov rex.XB rex.WRX jp in rex.RX mov cltd lock insb mov retq cld xchg (bad) jmpq test in mov in ficomp pushq mov sbb rcl cmp (bad) (bad) and lret out or (bad) jg xchg pop and sbb xchg std (bad) nop adc cmp lock sub std or sbb movl sub rcl fnstcw shr and fs (bad) push popfq (bad) push rex.B out (bad) (bad) xchg jge bswap mov sub sbb sbb cwtl loop test negl sbb (bad) (bad) mov or fucomp rex.WXB xchg pop sub xor rcll xor out lret jp scas (bad) xchg js (bad) (bad) and loop and je rorl mov jb movsl rex.WRB out add cmpsb sbb pushq add xor repz (bad) mov (bad) xchg in shrl loop lret adcb (bad) pushq (bad) xchg fucomp int3 jg movabs push sub mov and mov xchg ss cmc pop outsl (bad) je pop rex.RB lock lods shll adc repnz in es pop pushq (bad) fistpll lahf icebp xchg jns outsb fwait mov mov add roll jae movabs shl jbe sub fmuls xchg add sbb movsb in rorl adc lea int jmpq hlt sahf sub in movabs enterq jnp mov mov rex.W insl pop movabs sbb xor (bad) pop mov fcomps rcrl (bad) xor xchg sub fstpt mov test (bad) pushq rex.B ds (bad) and sub imul mov je or pop cli mov pop cs xchg and outsb (bad) add pop mov shr sti and pop mov test inc pop std js retq mov test xchg or rex.W rex.XB pop or std pop (bad) (bad) push shrb adc clc cmp add sub sbb mov adc std jae adc mov add mov pushq fcmovnb xchg jmp mov outsl movsl rex.RB (bad) (bad) (bad) sbb xor in mov int jl movabs stos (bad) rex.WXB jl (bad) (bad) mov fistpll andb rcr rex.RB in incl ficompl jno sarl add jns jnp cmp pushfq out (bad) sbb stc rex.X push add movslq iret (bad) (bad) shr or fdivrs pop es insl loopne jnp add rex.WRXB xor lret jo lahf pop push (bad) retq lea xchg cmpl sbb sar fs jno mov rcrl jne (bad) push cmp (bad) loop jrcxz cmp sub mov adc repz push push insb (bad) popfq (bad) cmp sub xchg testb jae or (bad) jb retq mov cmp cmp movabs add mov mov (bad) in add popfq flds and xchg mov int3 add xlat or push mov fdivrs mov jb fiaddl rex.WRX (bad) repz lods jno rex.WRXB (bad) loop adc rex.RXB xchg enterq jrcxz (bad) and jne (bad) rex.WRXB cs jae sbb decb mov or add enterq mov mov mov xor psadbw lret or sarl fnstenv rex.WX jns cmp sub mov enterq mov es (bad) xor pop int add test sahf testb jmpq scas (bad) scas cmc (bad) cmpsl jne sbb (bad) (bad) xchg (bad) sbb (bad) mov movslq xchg (bad) sbb cli pop rex.W rex.B mov (bad) sarl sbb lock (bad) ja mov iret rcr in sbb and xor adc (bad) imul out and callq rex.WRB rex.WRXB rex.W (bad) xlat movabs je movslq (bad) int3 stos jnp rcrl rclb sarl sbb sbb jns mov fisubl xchg jno cli xor mov divl add xchg jbe shll enterq popfq mov rex.XB cwtl push cld (bad) xchg xchg mov xchg retq shr sahf sub adc add jmpq add xor pop add shll sti cwtl xchg stc or push add add rex.WRB add std test ljmp (bad) xor and push loop and jnp (bad) jnp (bad) pop mov lea lahf cltd jp imul mov adcb xchg lock outsl hlt test fldt test jne insl scas fwait (bad) and rex.B out int retq (bad) and mov rex.W push int mov sbb cmp adc mov loope jle sbb cmp scas imul fistpl loopne,pt mov (bad) push fsubrs or pushq and jbe fucomip or rex.RB cld and (bad) lret (bad) add rex.WXB out div pop pushq popfq cld (bad) or rex.W (bad) rex.XB (bad) mov ja (bad) movabs retq in adc (bad) cld adc sbb fld rex.WRX fisub rex.WRX (bad) mov jrcxz xchg lret (bad) pop test xchg loope popfq adc rex.B add (bad) sbb mov sub test sub (bad) mov fdivr (bad) movslq push jb fldenv sub outsl (bad) ss xchg ds xor ja xchg xor push mov (bad) rex.WXB rex.X stos (bad) mov iret jno mov repnz rcr enterq sbb (bad) jp mov lock (bad) sub sar pop adc sti icebp cmp rex.WRXB mov scas (bad) xchg repnz pop cmc rex.R sub xor movabs mov add (bad) fist cmp fldt or movsb clc push (bad) cltd jne mov xchg sti roll mov cli ror rex.XB add rorl in cli roll out (bad) or (bad) cs mov xor (bad) movabs fld jne adc ss xor mov rcrl rex.WXB jrcxz rex rex.RB (bad) pushq rex.R js sbb mov jno lret out jb sbb mov (bad) mov movabs or xchg rex.WR xchg (bad) push jns sub (bad) rcrl cmp xchg mov pushfq repz rex.WR outsb rex xor or out sarl movabs (bad) (bad) ja pop int imul pop (bad) push (bad) cmp (bad) (bad) adc xchg push sbb movabs cmp hlt test rcll jmpq sbb stos mov (bad) fcoml add outsb pushq (bad) es cmp shrl cmc rex.XB iret ficomp sub xchg cmp frstor lahf lret iret mov imul retq rorl ljmp mov cmpsl (bad) xchg (bad) (bad) in movabs mov lret ja,pt add int movabs mov and int (bad) (bad) mov int3 and push lods or push cltd or xchg jno imul ror rex (bad) sti mov test (bad) (bad) or (bad) test pop rorq lret lret shl out (bad) movabs scas rol (bad) (bad) mov xchg in clc xor rex.WR (bad) popfq cmp movsb or lods push stc (bad) and jl and adc fdivl loopne sub sub mov sbb shrb in jp sbb loop pushfq and test rcrl test movabs adc int3 push xor iret cwtl add xchg leaveq repnz sub lods rex.XB mov out jns pop xor rex.RX adc and (bad) pushfq xchg (bad) rex.RB andb loop pop bnd adc imul cmpsb cs mov xlat inc rex.WRXB in jbe int3 imul rex.X (bad) xchg rex.W add loopne pushq gs adc or jo xchg test jne insl and insb add sub shl mov or retq cmpsb std pushfq adc nop rex.R jnp cld in mov xchg cmp (bad) shl add pop mov rorl sbb int3 adc repnz movslq xchg movabs (bad) shrl xor mov xchg (bad) iretq jmpq fdivl push std js cmp fstps or in movabs sub add rex.W loopne sar xchg out (bad) sub xor stos popfq (bad) out and sbb (bad) mov sbb scas adc sub add loopne mov cmc push outsb jns rex.WB cs (bad) jmpq icebp add shll in sub lret xchg cmp mov and icebp sahf in jb sub mov mov outsl or jl (bad) faddp pushfq pop xor xchg cmp add callq jle andl sbb and outsl (bad) add sbb sub push lret in out movslq xor pushfq in rol fimull repz out mov (bad) add shlb cmp mov roll fnstcw icebp add rol push out (bad) test rex.WX xor adc rex.WR cmp (bad) xor stc rex.WRB fisubr pop push (bad) or movslq enterq push flds cmc (bad) js adc ja movabs push rex.WRXB rex.WRXB retq scas xchg (bad) cmpsl or or jno,pt int3 add mov xor rex.RB mov jns cmp in test (bad) sti push addr32 stos (bad) lock or xchg test lea rcrl pushfq repnz nop (bad) xchg pop movsl shl insl or lret mov lahf xor shll std shl sbb xchg adc or rex.WX shll (bad) xchg retq cld xchg (bad) int (bad) xorb rorl sbb fldt or rex callq fldl movabs sbb jae iret cmp icebp or movabs mov xchg nop jg outsl cli (bad) imul xor and cmp pop out in or rcll sbb xor xlat mov rcll push mov pop fld (bad) js lock xchg xorl mov test cli outsb movsb xor (bad) xor stos push mov or jo rorl leaveq movsl scas xchg int mov mov or or enterq hlt add shll test mov jl xchg rex.WRX rex.RXB and pop xor mov mov divl sar (bad) push or (bad) sub sti out (bad) mov pop jl adc mov rex.WRX es jle notl (bad) (bad) stos out (bad) mov rex.WRXB addr32 ss sub jbe shll or retq cmp cmc cmp icebp shll (bad) jg (bad) (bad) or (bad) xchg push adc outsb pushq mov add or cli mov adc mov outsb rorb jle fimull cmp push loopne cmp sahf shrl and and out shrl adc (bad) cli (bad) xor jge add xchg sub movabs sub cmp sar sbb cs mov sar add xor mov xchg shrl es rex.WRX imul cmpsb mov (bad) xor mov push mov mov jb in movabs shl mov mov mov roll sbb callq mov sbb (bad) sub mov shl cltd lods insb roll (bad) xchg rcrl xchg jbe (bad) (bad) (bad) (bad) xor test (bad) (bad) sub stc insl or loop push jl movabs xor (bad) xor stc loop (bad) sbb (bad) in xlat hlt (bad) rex.WB pop retq test adc and lret rex cs loop negl rex.WX (bad) and mov fisubrl adc (bad) pinsrw xor fsubrl (bad) xchg in (bad) or xchg mov sbb loope lahf (bad) clc xchg xchg outsl mov adc adc pushfq pushq fwait or (bad) jo int3 sbb (bad) shrl (bad) push movabs sar mov sub push mul (bad) xchg shrl (bad) mov mov imulb stos (bad) in jb rex.B fnop scas imul fidiv or sub callq mov js leaveq cltd lock push add jrcxz xor rex.W add add push (bad) bnd lods push (bad) mov (bad) je cmpsb nop movslq pop repz gs int3 mov mov mov push xor (bad) shrl std clc mov adc movsb lret cmp pop idiv sub xchg cmp or mov bnd xlat cmp scas in fwait add (bad) jbe shr repz (bad) shll fcomi xor adc sbb mov cld ficom shld rex.XB fdivs pushq sbb outsl rex.WRB push xchg (bad) bnd and std cmpsl pop movsb cmp rex.W (bad) sub fsubl test test test (bad) rol fild movsl (bad) mov jmpq (bad) rex.RX rex.WRB ds sarl loopne lret (bad) jp orl mov xor movabs clc sahf mov leaveq rcrl cld push stc pop (bad) rcrl (bad) push js rex.XB enterq jg rex.B or jle fadd lret data16 std jp shll (bad) movsl pushq mov movb mov fisubrl cmpsl mov and (bad) xchg cwtl mov sub fcmovb rex.WXB mov rcrl out ss mov add es cwtl (bad) repnz (bad) xor (bad) and fcmovnb or rex.WRB pushfq pop enterq xchg movsb xor scas std in (bad) add jnp in (bad) sbb lahf iret jmp rex (bad) imul lods xor movsl (bad) int3 pop jp pop fwait xor rex.WRXB movb or outsl rex.WXB jne rex.R add or fprem xchg jp (bad) (bad) sub lods or inc xor lret int push cmp (bad) shrl jmp mov (bad) rex.B fs int3 lahf pop clc lea movabs xor sub pushfq mov rol (bad) sbb and (bad) mov int3 lret jno xorl rcll testb mov sahf mov jmpq and movabs jns subb gs xor subl mov or int push rex.WRXB xchg retq cld nop adc rex.WX xchg mov mov lret (bad) xor adc (bad) mov jge adc xchg cmp es test jne xchg pushq jo add lock (bad) (bad) xchg lods mov mov mov cld or cmp or push xor rorl shl test cmc rorl cmp jle fs hlt and shl push rorl mov sub rex.RB rcrl imul retq and rex.WRXB (bad) xor iret subb loop out clc cltd rex.WX roll icebp jns sub sub stc cwtl rcr add adc fdivl cmp (bad) leaveq movslq xor jae rcll retq rex.R rex jne sub icebp jg ja or mov rex.WRXB es movb loop rex.WB push movslq jge sub mov (bad) xchg push pushfq icebp xchg lret lea rex.WRXB mov stos cs jns mov pop xor out sub sahf out rex.RX jns lret mov divb xchg popfq cli int3 int stos scas vpshuflw sub jne jmpq popfq negb (bad) (bad) outsl movslq cmp pushq ror (bad) mov in cmp popfq (bad) xchg movl jno test adc jb add cmc (bad) mov out retq mov and (bad) mov mull or out cs xchg andl cld rex.WB cs lods rex.RB mov outsl leaveq adc fnop mov adc clc movabs repz cmp lock mov icebp leaveq and or jae imul movabs sub shrl jne (bad) je rex.RB (bad) or mov (bad) (bad) sbb mov incl or jo fsts (bad) adc and popfq (bad) add push (bad) ss and mov movb (bad) xchg js push mov rcrl test (bad) divb mov shll (bad) and cltd repnz mov (bad) xchg sarl (bad) stc rex.X shl adc mov (bad) loope rex.RX xchg popfq insb rex.RB mov shll pop xchg sarl (bad) (bad) int3 cmp and test xchg movl mov fucom push xor std retq xor scas sti (bad) (bad) stc mov std xor rex.WRX rex.RX adc lock (bad) retq sar xchg outsl or sarl mov (bad) sub (bad) rex.XB (bad) sub sbb leaveq rcrl (bad) je imul mov sub (bad) jle (bad) sub mov lea idivl test xchg (bad) int shll (bad) rex.RX fwait (bad) lock mov fisttpll xchg mov in mov rex.WB or fildll (bad) int3 movabs lret mov ds test (bad) rex.WR jrcxz mov push movslq adc xchg (bad) sub pop lahf rcll repz (bad) xor (bad) or pop rex.WR cli or pop jrcxz stc rex.WRB xchg and cli nop rex.XB or sub sub sbb xchg mov push rex.RB add pop fnstenv or bnd and rol (bad) pop rex.WRX add rex.W out pushq je loopne mov movabs retq pop out rex.RX cmpsl roll movabs sbb xlat xor scas movabs (bad) mov (bad) xchg xchg fnstsw xchg xchg xor movabs jnp add push xchg es cmpsl mov repnz fwait addr32 xlat jp xchg leaveq pushq mov or xchg cmp or sub add cmpl xor (bad) (bad) mov jp (bad) fucomp jns outsb mov add and sub sub add ss xor (bad) retq out xorl pop jmpq mov and popfq outsl fisttp decl in lock sub add clc sub leaveq push mov enterq ficom sti movsl or cld (bad) mov xchg jrcxz outsb cmpsl xor scas leaveq clc mov (bad) int pushfq test incl jmpq movabs rex.RB in add test xchg pushfq lea sti int pop psllw repz cwtl (bad) mov pop jns mov pop and sbb rex.WB (bad) callq add enterq rcl pop repz and lret (bad) lock mov add mov fiadd test in add rex.WR pushq cwtl rcr push negb mov (bad) shr (bad) (bad) loope xchg sub rex.RB (bad) lret (bad) mov ffreep cld add jrcxz retq (bad) movabs add (bad) test out fwait pushq or int3 rex.WRXB push faddl pop cwtl icebp sbb cli rclb (bad) (bad) mov test imul outsl xchg ljmp xchg cltd xchg add pushq adc movabs in pop in cld mov cmpsl sbb (bad) (bad) mov (bad) icebp mov (bad) in movabs xchg mov in add in jb xchg retq cmp rorl jmp (bad) and stos rex.RX fs test insl lock jo fs xlat rcll adc push lret sub pushq hlt andl callq test repnz (bad) jno std addb add fcomp sub (bad) sub (bad) movsb pop xor push (bad) push flds fimul mov (bad) xlat je sbb and (bad) fcomps xor add jns cmp (bad) rex.X (bad) push shll sub (bad) rex.R lods cld or (bad) rcrl rex.RB (bad) divl mov lock pop in (bad) icebp cmp add test cltd push (bad) rex.XB (bad) pop cmpsb or (bad) (bad) adc in (bad) xor sub cld pop mov cwtl fistl shll push adc ficompl push xchg sarl int3 out add (bad) xchg (bad) jbe movsl jrcxz outsl callq add loop cmp (bad) cmpsb mov js rcll es fnop fwait rolb lock leaveq sub pushq jl pextrw lret stos (bad) callq (bad) loope roll and movabs (bad) pushfq imul movabs mov lods (bad) sarl xor testb sub push pop fwait imul push addr32 rex.WX or movsl and popfq ficoml (bad) jmp je or (bad) sar test sbb cltd rex.B jp,pt jbe rex.W pop rcrl pop mov loope std int fnstsw xchg movabs sbb outsb rex.RXB xor movabs xor out rex.R (bad) repz mov (bad) stc cmp sbb imul movabs leaveq test rex.WXB xchg or out rex.WRB and retq int3 (bad) shr movsl (bad) test rex.WRX fwait jbe rex.B sarl (bad) fistpll xchg sbbb je xor fsubrl movslq rex.RXB and (bad) shrl fisubl cltd push push rclb and pop cmp repz sub push xor repz jge mov fisttpll jg fldl cld add xor f2xm1 mov cltd fmull xor sub pop and retq out stc (bad) out sbb rclb int (bad) and (bad) or nop popfq mov sub mov bswap leaveq out xchg retq rex.WRX pop sub or int3 xchg xor rex.RXB push rex.W fnstsw xchg jae rex.WB xchg sbb pushfq sbb sub mulb sub mov (bad) (bad) cs ds push mov pop outsb shll leaveq out cmc cmpsl and callq jbe (bad) rcrl movslq sbb mov add push pop lock xchg add callq (bad) jb cmp adc data16 movsl cmp mov retq movabs gs sbb roll sub jne fcmovb xchg mov add xchg rorl pop mov (bad) cmp sbb test cld xchg push retq sbb roll or repnz (bad) lret sbb mov (bad) jrcxz sbb repz fwait rex.WRB rex.B jl test sbbb jnp add mov imul rcl mov jg (bad) out invd stc (bad) cwtl movsb jmpq iret jo addl movb sub test (bad) out (bad) movabs xor mov jo sbb cmp sub xchg addr32 push rex.WB (bad) shll (bad) cli rolb cwtl test xor lods (bad) xor mov xor stos jp or int3 (bad) adcl xchg pop xchg (bad) (bad) sbb (bad) pushq mov jb ss adc roll sarl vcvtsi2sdl cwtl out rex.WB rex.RX in js add (bad) callq gs rex.WXB (bad) xlat pushq sub (bad) ja (bad) rcl mov xor rex.RX (bad) mov (bad) (bad) sti fnstenv or adc (bad) rex.RX test jge jo (bad) sub cmpsl and out lods add fscale xor outsb fnsave mov in cmpsl (bad) xchg and movabs mov mov icebp rol xor push cmpl ss (bad) loope add rorl sbb (bad) insl rex.X sub (bad) rcr adc xor rex.RB shll (bad) repnz cmp xchg sahf iret enterq fcomip sbb rex.WX xchg xchg loopne mov ficoml jg insb pop pop lahf enterq sti rex.RX decb retq jns and (bad) rorl nop push rcrb out rex.WRX adc (bad) mov adc roll jnp iret imul mov adc rcl int3 mov rex.WB sarl in jae sub rex.WXB (bad) xor sti cmc sub ror (bad) lret stc retq fs js xchg or out xchg or lret push sarl fsubrs mov (bad) (bad) and movabs adc sbb ds pop rex.X (bad) test jb stos iret roll hlt cli pop jbe fsts cmc lods movabs add (bad) lock adc test sub test stc pop xor pushq mov sub lahf adc and jno ds jmp rex.WX data16 (bad) test mov xlat (bad) hlt jl (bad) cmp fs cmpsl fwait add outsb rex.W out cltd (bad) icebp repnz rex.WRX cs rcr (bad) sub jne sbbl push cld out sbbb mov lret or fcmovne movabs rex rex.WRB (bad) popq outsb (bad) stos (bad) lret sub jne rex gs xchg push rclb clc movabs (bad) rex.RB adc mov ficompl xor lahf jp (bad) shll subb or or js mov mov mov fucomip jno mov imul push hlt enterq push int3 add add rex.WRXB jb xchg xchg xchg movabs jge out (bad) callq (bad) push (bad) rex.WRXB or rex.WRB int3 mov rclb outsl and mov cmp (bad) push int (bad) or or xlat cmp roll test fadd sbb imul rex.R test mull mov loop (bad) (bad) stos push rex.WRXB movabs test (bad) fsts sub cs jl add (bad) fcmovbe and xchg adc and ja mov (bad) retq mov rex.WRX pop out cmp sbb fsts js xchg sahf je mov pop cltd rex.R repnz int3 jp loope (bad) jp cmc (bad) iret cld sub (bad) fwait xchg add int3 mov mov repz add movabs mov xchg mov xchg test insb test (bad) adc sub mov xor addl movabs rex.WB rclb ffreep mov jns stos rex.WR icebp lret sub xchg not (bad) sahf rcrl repnz rex.X test rex.XB and xchg (bad) rcrl sti fbstp jg cmp test (bad) stos sbbl sarb out (bad) xor loop in or (bad) (bad) fwait (bad) or cmpsb or jmpq outsl mov jb rorl repz sbb or (bad) insl pop xor inc mov sbb (bad) sarb rex.WRX push pop ffreep sbb xor jo roll xlat cmc jg insb (bad) lahf icebp test pop lock fidiv mov pushq movd sub push (bad) and stos xchg cmp sti int3 xor mov insb pushfq (bad) xor add rcll shr rex.WXB rex.WRXB idiv lret cmpsb pushq movabs repnz gs loopne rorl mov loop (bad) xchg and (bad) jno rex.B mov push (bad) (bad) int3 sub rex cmc int3 iret in (bad) fadds jae mov loop jrcxz rex.B (bad) add mov mov stc xchg rcrl (bad) repz mov push fisubl rex.B js xchg lahf out loope xchg incl iret adc (bad) (bad) (bad) je fdiv repnz rcll xchg rcl (bad) xchg movabs (bad) xlat insl sbb subl rex.B sub mov rex.WRXB je (bad) mov fs sbb mov hlt rcl fnstcw and push sub mov je ja (bad) (bad) mov jae movslq mov sbb sub xchg adc sahf ds and fidivr (bad) shll rex.WB rex.RX or add (bad) lods je cs adcl movsb add mov sbb xchg sbb add and mov scas negb push loop cmpl rcll xchg out roll rex.XB fimul int enterq jmp rex.B repz pushfq (bad) leaveq sarl add sbb xchg (bad) sbb and mov rex.WRXB mov loopne sbb rcrb callq rcrl test sub pop rorl mov and loopne shrb add add rex es shlq lods push in or shll movabs sub rcr (bad) mov (bad) shll addr32 and ror repz roll jle rorl or add ror lret lods (bad) (bad) insb cmp insl xlat (bad) sbb add (bad) es fs xchg test in jmpq (bad) xor xchg jrcxz nop and retq jae rex.WB addr32 (bad) ja cmp rex.B callq pop rex.B add (bad) rex.WR jb cmovnp (bad) int3 cmc sbb ds mov jp and (bad) int3 loope (bad) (bad) lahf (bad) subb (bad) fsubrs pushq xor mov fcomps loopne and (bad) jns shl jne mov cmp lret (bad) mov (bad) callq xchg lock jp add retq stc cmp rex.WX pop sbb fdivrs rex.RXB lock mov jnp out scas enterq (bad) and movabs movabs retq out (bad) rcl orl mov popfq outsl rcr mov xchg test xor test and stos iret cmp mov (bad) imul add mov jb xchg int sarl data16 add xchg (bad) je test and (bad) (bad) repz cmp add pop adcl mov test lret loop in stc or shrl rex.W xor repnz (bad) rex.XB mov add rex.WRB idiv adc mov (bad) cmpl xor mov xchg cmp xor cmp fcmovb and fs (bad) out add mov add (bad) outsl mov (bad) add rex.RXB (bad) lea fstps callq add scas (bad) clc push cli shrl (bad) sub mov or shrl out mov (bad) add mov cmp mov adc cmp movsb xchg add (bad) add add (bad) mov rex.RB pop jo xor mov (bad) adcl xor cmp (bad) rol mov out or adc (bad) lret movabs xchg outsl push shll mov ds retq mov test add retq push xlat sub subl ds jg rex.WRX rol jbe rex.RB movsb rol cmp xor shr addr32 popfq in sarl add loop rex.RB rex int3 rorl movsb fnstcw add xchg outsb (bad) mov stc xchg fisttpll setnp repz rcl js pop (bad) nop and cmp jl add and sub (bad) movabs lret fwait int cmp sub sub shrl pop and mov pop and shl movsb lret add (bad) xor jmp repnz (bad) adc rex.RXB xchg mov or fldenv out test (bad) (bad) sbb ss loop or sarl lods icebp sub sbb (bad) rex (bad) mov xor jne xadd and movabs (bad) (bad) add (bad) mov mul jns es (bad) int3 rol jb (bad) sbb and jbe sti or leaveq pop sub adc test xchg pop rex.WRXB retq ja test roll adc rorl (bad) sbb iret add jl cli cs xor (bad) sub roll sbb (bad) push ror int jns faddl (bad) in mov push in sbb rex.W decl mov fdivrs int movabs (bad) (bad) mov mov out sahf pushq pushq fs mov (bad) pushfq mov out fldcw iret mov adc (bad) push shll (bad) repz stc jne repz lret (bad) imul (bad) xchg (bad) callq mov mov roll mov stos int3 adc (bad) or idivb jrcxz xor shl (bad) xchg rex.W push (bad) rcl cmp push fadds mov fwait movabs retq imul mov or jnp (bad) movabs mov mul lock clc xor mov cwtl test (bad) std cmp jae xor seta pop movabs push rex.RX int (bad) add or (bad) (bad) cmp push icebp mov pop pushq sbb mov or and mov (bad) test rex.RXB and add icebp or cwtl xchg rcrl xchg int3 (bad) pop cmp rcl (bad) je (bad) xchg in sub pushfq enterq (bad) rex.W pop (bad) xor mov jbe lret repz (bad) leaveq mov or rex.RX rcr sbb (bad) xor fiaddl jmp roll (bad) shrl jl sub adc (bad) fwait xlat rex.WRX add adc (bad) xor sbb test (bad) pop xor lret push fldl rorl jl test xchg xchg icebp and pop mov test stos retq pop out fbstp rolb (bad) xor out ss and jnp (bad) mov cmpsb fld cmp and cld jnp lret sbb and (bad) lea xlat fidivr stos lret mov pop jnp fwait cs jmp mov jl insl movabs (bad) sub cmc je rex.WRX push retq or imul (bad) insb rex.WRB jbe mov rex.RX add cmc loope fbld (bad) xor pop and movslq xchg mov (bad) cmp cmp lock rcll add rex sub pushq rex.WRX rex.WXB (bad) pop cwtl mov out movabs xchg scas (bad) jo (bad) or sub rex.WR shrl mov icebp xchg (bad) jl (bad) rex.WRX rex.RXB sub shrl fmuls stos mov rcll in pop loope cmp scas rex.X add mov out sbb cli xchg movsl pop repz orl xchg lods rex.W rex.X adc popfq std pop pop sbb incb (bad) mov rorl (bad) push pushfq pop add in movabs stc movabs lret leaveq sub jae add movabs rex.WB cs add mov mov push out (bad) rorl or add mov adc add sarb sub fcmovnb rcrl sahf add mov xchg cmovl sub (bad) fistpl (bad) out test or out test (bad) loop mov adc imulb adc test mov out lock loop add adc (bad) mov jne imul (bad) or xchg cmp mov mov mov (bad) movsb addr32 rex.XB (bad) rex.B in push fistl shl (bad) pop mov (bad) insl sbb rex.R mov xchg sub shrl std gs fstps (bad) cmp rex.WXB addr32 (bad) fildll stos and imul scas (bad) sub add add roll mov (bad) cli jno test sarl sub outsb (bad) sti iret sbb pop outsl rex.RXB pop (bad) test xchg jnp shll push lret int sub (bad) (bad) rcr test rex.XB xchg cwtl movabs ss rex.WXB int3 rex.WRX clc xchg and (bad) jmpq in cmc jno or rcl pop test mov (bad) lret (bad) jae cli adc (bad) repnz and (bad) clc cmp or cmpl out movsb movabs push sahf pop fs or push xor push test (bad) in (bad) (bad) idivl (bad) xor repnz cwtl (bad) and sar pushq add movabs pushq addl (bad) fisttpl rex.XB lret outsl xchg divb rex.R mov faddp fsub (bad) mov (bad) fwait rex.WRXB jrcxz outsb jns in fs scas mov (bad) xor movabs mov cmpsl adc adc (bad) repz (bad) mov mov fbld test gs or pushq mov cmp sub (bad) stc pushfq divb loop (bad) (bad) cmp sub mov mov es lock rorl test fidivrl fsubs pushfq lods xchg hlt adc (bad) shlb xchg movsl insl or cltd jmp sbb mov in retq cmp and mov sbb (bad) or xlat xor and mov add test mov (bad) sbb sub loope sbb mov jo xchg retq mov fadds cmpsl mov add xor leaveq mov jo pop jmpq xchg xlat (bad) rex.WRB rex.WR (bad) fstl fdivr xor and ja pop (bad) mov repnz movslq cli cmpsb push movslq mov rex.WXB shlb adc or sbb mov in scas movabs xchg mov (bad) clc mov (bad) decb mov mov rex.RB (bad) repnz gs add subl insb repnz cmp cmp (bad) push jb js rex.XB (bad) lret and mov or movabs sub rex jns (bad) pop (bad) add test int lea pop xacquire jno (bad) test adc (bad) rex.WRB fisttp out (bad) sub rex.WR sub inc xorl retq movabs adc (bad) cli jmp lahf mov mov (bad) cmp (bad) pop mov test sarl mov lret movsb scas jg push cmp sarl rex.W (bad) es or es pop add jmpq sub rex.WRB rex.RB es movabs rex.RB pop movslq xor fcomp test lret in push (bad) cmp loopne lret repnz jno cltd movsl test neg je rex.WRXB rex.WRXB lock jmp jl movslq lea and mov (bad) push mov loope fmull adc rex.X nop cli xor cs movabs cmp pop verr sahf movslq (bad) (bad) adc xor jno shrl shrl std or add shrl out mov in lret rex.WRB andl fs lods sbb in jge (bad) ror sub std (bad) fwait cs sbb sbbl (bad) testb cltd (bad) cmp adc (bad) jae cmc fwait shr (bad) jae xor jns cmp ror hlt scas out jle roll ljmp shrl (bad) fucom lret (bad) pop (bad) xchg movslq fxtract mov int3 sbb icebp xor rex.B rex.RB ja fsubrl cli insl rex.XB in jbe jb jns sbb or (bad) mov push adc cwtl (bad) iret hlt mov repz push loopne (bad) cmp and out roll add jl xchg (bad) sbb out imul pop (bad) (bad) xor (bad) fdivl sar rex.W rex.WRB (bad) push xchg mov push insl cmp (bad) xchg sub std test cltd mov sub rcl in (bad) (bad) mov lret pop repz jrcxz scas loope and and xchg mov (bad) retq or rcll shlb or sbb clc (bad) xor rex.XB rex.RX sub cmc retq shll mov stc add loop imul cmp sahf mov movsb lret test rex (bad) pop mov int3 faddp cmc (bad) stos mov (bad) incb rolb and test (bad) ja xchg sahf (bad) pushq and imul jo std mov mov adc xchg scas ror and rex.X rex.B xor add icebp adc pop shrl popfq (bad) lock adc divb rex.RXB add mov in xchg roll int (bad) icebp in sbb or shrl insl loopne xor (bad) pop out iret adc lock imul and mov pop push xor cmovnp and movsl movabs pushfq (bad) mov jns stc rex.XB jno movabs xchg imul (bad) pushq insl and imul fldcw rex.WRX callq cmp outsl movsb (bad) ss mov lock fsub (bad) mov xchg xor xor rex.WR (bad) xorl (bad) mov cmc int3 rex.WRXB ss rex.RX xchg movabs xor movabs out (bad) fmul (bad) repz add fmulp mov pushq es (bad) cli xor fucom or test (bad) mov fwait rex.RXB rex.RX xchg vxorps sub and (bad) xchg sub mov scas and rex.WX (bad) rcll add pushfq fmuls enterq leaveq jmpq mov repz loope insb enterq (bad) xchg cmpsb fdivs add retq fdivs fxam add (bad) rex.XB rex.WR jne xchg mov xlat movslq xchg cmp xor jp stos icebp pushq jne jmpq callq movslq (bad) jrcxz fstpl xlat mov mov sbb xlat xor xor insb lea lock rex.WRX sbb (bad) fistl push sbb (bad) pushfq rol fxch roll repz int3 cli mov push rex.WRX push outsb rcrl (bad) nop (bad) xor insb xchg mov mov test movsb rex.RXB out jmpq (bad) rcrl orl lock movabs test and callq rex.WB pushfq loope and xchg mov xor fnsave mov (bad) rep xchg adc rex.RX loop fisubrl loopne (bad) ja (bad) xchg sub (bad) testl sub stos jbe testl add mov jbe (bad) add sbb repnz imul rex.WR xor sub rorl callq int3 push iret rorl xor mov adc addb outsl scas cltd shll rex.WR rorb int pop mov fistp cmp (bad) imul mov fcomi rex.RX adc push jne loope rex.WXB sub (bad) fs mov (bad) xor fildl pop mov mov (bad) movslq (bad) pop (bad) ja int (bad) mov add or pop xchg (bad) stos in add jns sbb rolb outsb push mov cmp test pop pop rex.WRXB push mov leaveq adc rex.WRX mov (bad) scas sub (bad) pushq jmp sarl rex.RXB rex.B iret adc rex.WX mov sbb add jg (bad) test (bad) loop sbb iret nop out mov xorl jrcxz (bad) rex.RXB hlt (bad) movabs lret fmuls ror jle lods xor callq sbb xor test or rex.WRXB jmp jb movabs icebp imul test xchg rex.B fmull xor pop pop iret (bad) and and adc out test out mov fimul rcll shrl movsl test xchg sbb (bad) fnsave add adc xchg (bad) in rex.WRX push (bad) lock fs testl gs add stos loop iret ss (bad) fs test jrcxz mov pop sti jb (bad) cltd pop cmp push jbe out add sbb stos xchg (bad) (bad) cli rol push jl (bad) (bad) cmp je and movslq xchg rex.WRB jo cmpsl sbb sbb jns mov idiv leaveq mov fs (bad) enterq out pop mov push sarl sbb mov mov je xor push xor mov loope fsubr lret stc mov (bad) mov clc icebp (bad) xorl or retq (bad) mov mov (bad) rex.B (bad) (bad) (bad) int3 sar lock xor jg pop test movabs (bad) or fidiv (bad) fcomi jmpq repnz rex.WRX jmp rcll sub mov cmp and push mov jmpq adc jae (bad) lahf mov (bad) pop and and sbb clc out notb stc mov test movabs lahf fist callq adc (bad) lret int3 mov rex.WX std rex.XB sub (bad) (bad) jno rex.WRX data16 scas movb gs rex.XB (bad) xlat sub (bad) ds loope sub es movabs sbb rcr (bad) pop or js scas add lods shl rex.XB (bad) (bad) movslq mov (bad) xor out (bad) in push divl pop and shrl (bad) xor enterq test mov int3 sarl test mov int (bad) js movsl movl jne lret rex.WR (bad) push in jl sar outsb sbb add (bad) rcrl jnp ss mov out nop (bad) (bad) mov out adc jle fwait (bad) xor (bad) fwait pushq fbld cmp hlt mov mov rolb sub adc jae (bad) jp (bad) pop cmpsb (bad) pop (bad) (bad) loop idivl (bad) (bad) or rolb sarl sbb rcl pop enterq add rex.B lret (bad) jg push enterq retq mov fcoms cmovno (bad) int3 shrl cmp push sub adc rex.X rcll test movabs rex.RB fstpt xchg jmpq xor (bad) lret jl xor (bad) adc (bad) callq xchg (bad) negl (bad) lock rex.RXB fisub push rcrb and cmp mov (bad) (bad) mov andl lret push rorl xor or cs sub (bad) mov sbb repnz sbb cltd sti je (bad) jnp adc xchg out push out mov ja divb mov sub jmpq shr insb mov add or rex.WRB (bad) xchg out lret mov jns (bad) (bad) sub jne imul loopne mov std pushfq out rcll pop movabs iret sub shrl mov (bad) pop and adc (bad) or scas jne outsl or mov ds gs test or mov scas int3 repnz mov scas repz ss sar adc xor jle mov (bad) (bad) and pop in retq int3 mov rex.X sbb in out (bad) rex.R imul cmp int jrcxz int adc loope movabs (bad) or pop mov sub xlat or (bad) rcr clc pop callq cwtl sub lock sar rex.W rex.WX lods add mov (bad) fcomi cmp (bad) (bad) (bad) iret (bad) cwtl pop fbld rcrl (bad) loope xor jae sub test cmpsb in rex.W test repz xor orl sbbl (bad) adc mov rex.RX rex.RXB rex callq and add shl jne insl cli and pop sub out mov mov fcoml mov jnp (bad) cltd add (bad) add imul (bad) idivb fisub (bad) sbb (bad) sub sbb push sbb fstpl rex.WR sbb push lea xchg loopne jne add fnsave cmpsb test or icebp mov fnop pushq fdiv in (bad) rex.R add leaveq int3 fisubrl mov addr32 es je xor fsubl cli xor (bad) enterq push fs push repnz retq sub adc adc (bad) mov faddp repz jo push fistpl or fcompl pop rex.WX leaveq test xor (bad) mov add rorl mov fdivrs add cld pushq icebp xchg xor (bad) lret mov and sbb sub pop xchg add cmpsb rex.WX jae mov jo mov fbld mov out jrcxz xorl adc lret int3 push sub in (bad) bnd mov mov pop (bad) lods push mov movslq vpmaddwd jrcxz test fidiv push retq jle and in out loope fwait xor rex.RB movabs add xchg rol jmp (bad) js bnd cmp faddp in xchg xor xchg stos sbb cli icebp scas xchg (bad) pop fdiv in (bad) movabs sub ficom pushq sbb jp movsl (bad) int3 fmull in not repnz (bad) and (bad) rex.W imul faddl (bad) (bad) rex.WRX repnz and jrcxz repz cmp fsubr rol mov xchg (bad) mov cs (bad) loope xor shr fmull rex.B std fstpt (bad) jns cltd cmp stos sub sbb idiv or (bad) push (bad) cltd (bad) ja rex.RXB add jbe je mov test movsl rex.WRXB and std repz jne sbb rorl int3 rex.WRXB movsl in mov mov and pop cli lea (bad) (bad) rex.RXB sbb rcrb sub ror pop mov xchg test hlt iret test jmp sar movabs lock ficom iret and mov xor jmpq (bad) lahf (bad) pop rorl (bad) add sbb xchg and or jnp scas movabs pop (bad) jae add iret roll mov fist test shrl (bad) int cltd (bad) out mov loope (bad) xchg (bad) sbb and sti xchg clc sub movabs fs fcoms out rcr (bad) stc cmp xchg xadd in nop (bad) loopne,pt pushq test (bad) cmc int3 cs mov and (bad) jl add pop rex.XB movabs (bad) (bad) sbb sahf (bad) cmp or xchg out add roll push callq add (bad) sub pop jl pushq repz roll (bad) mov (bad) or jge (bad) iret or adc cltd out pushq int shrl movabs cmpsb cmp or adc push scas movsb int lret jae sub fwait rex.B (bad) mov in push loope pop rex.RX mov icebp jno int3 outsl cs cmp mov movabs loop popfq and (bad) or mov (bad) lock xor rex.XB (bad) rex.B jl lret cmpsl jns adc roll in bnd xor cmp movabs insl lret mov repz (bad) test xlat shll rex.R xchg jae (bad) (bad) add in js sbb mov stos mov rex.XB sub pop add iret add mov movabs jno sub testl push bswap (bad) imul in pop adc lahf addb popfq rex.WRB mov out (bad) add popfq add or (bad) leaveq (bad) decb sahf jnp cs rex.WXB repz loopne icebp add mov repz retq or callq (bad) (bad) callq in push mov hlt pop movabs outsb mov cltd rex.XB imul int3 fadds insb in cmc (bad) cmp lahf loop icebp clc jno adc rex.WX movabs lahf xchg (bad) mov lss (bad) pop push rex.WR loopne rex.XB pop add pop (bad) loopne rex.WB xor rex.RXB lret in fs test rex.XB xor (bad) cmp and (bad) test jl sub out callq (bad) jae or icebp (bad) mov push sub iret (bad) sbb frstor fs ds rex (bad) mov pop adc es add sub adc orl js sbb out icebp (bad) es loop repz (bad) (bad) lods xchg out xchg mov jbe rex.XB rex.WRX rex.W jb jle mov in pop sub outsl lock (bad) pextrw adc fsubrp out cmc cli in (bad) cwtl clc push jne cmp xor xor jae push jno cmpsb add pop xor mov xchg adc sub mov retq or repnz fs lret jrcxz rep add lret in imul mov in add mov sub (bad) rex.XB cs gs add mov adc add movabs and pop jg rcll in insl js neg imul popfq mov jae rex.XB rex.WRB ffree xchg pushq lret mov adc (bad) (bad) outsl loope add fsubr sbb movabs rex.WRB mov adc (bad) xor retq movsl imul xchg callq lea jmp (bad) (bad) jmpq jle rex.WX or add xchg and xchg sahf push pop loop pop movsb add (bad) xchg pop test jns and push rex.R (bad) (bad) sbb sub and jno std imul shll xor jns pop sub stos mov shll (bad) jbe push lahf jp enterq and fstpt rex.RX (bad) jae scas test xchg retq lods mov xorl loop mov mov ja mov add adc test rex.RXB rex.R rex.WRB rol sub rex sbb out cmpsl or cmp fs push jns cwtl in (bad) lret cmpsb rex.WXB rex roll (bad) insb mov jge pop setb ds retq callq mov jns add rex.B mov roll rcrl mov jnp incb fs jge fadd pop mov (bad) rex.WRX cmpsb mov data16 jno (bad) cwtl (bad) shll mov jo push movslq ss (bad) pop adc fcoms xchg sbb in (bad) (bad) mov (bad) jrcxz cwtl lods and (bad) cmc fwait (bad) (bad) mov push ja jns lods movabs shlb orl xchg ss cltd sbb pop shrl mov mov icebp icebp ficoml (bad) frstor test adc fxch sbb adc (bad) rorl idivb fbstp or mov rex.RX lret add scas movsl (bad) imul mov (bad) fwait (bad) and incl mov (bad) jmpq lret sbb faddl movb (bad) in (bad) fstl fisub cmp (bad) orl jmp (bad) or mov lret repz sbb callq mov rex.WXB mov jge fcmovb pushq sbb (bad) cmpsl rex.R rex.W xchg jp (bad) cld (bad) movabs test or int3 mov nop in push in int mov fcmovbe pop sub outsl movabs fs jge push mov rex.WR rex.RXB rex.X cmpsb sbb hlt mov xchg repz or (bad) and rex.WRXB and test adc (bad) movslq jb cwtl xor adc mov test std enterq lahf movslq sub sub mov retq rex.WRB or scas add jp (bad) pop (bad) rex.WX (bad) or (bad) rcl cmp rex.WR rex.RX sbb rcrl adc xor sbb loope rex.WR and mov rex.W ds in mov cmp rcll mov (bad) shrl rex.WR mov in mov lock or push int3 faddp (bad) push rex.XB movq popfq sbb rol or add test xorl movsb shll std (bad) push fwait rorl lods cmp test imul rcl cmpsb loop pop (bad) mov cltd mov movsb sub std outsl rcl sbbl fbstp rex.WRXB jmpq xchg btl push (bad) icebp (bad) repz cwtl shr sub rolq xor ja (bad) icebp subl mov decl (bad) jne andl rorb (bad) (bad) mov or xchg cmp (bad) fbstp jp (bad) movabs fwait jbe pushq lret xor rex.W (bad) (bad) std movsb ja (bad) rorl repz rex.WRXB sub in sbb movslq (bad) popfq (bad) iret (bad) (bad) adc pop out (bad) sbb pop sbb enterq out lods sub repz rex.WRX jae xor (bad) cmp adc testb rex.WRB lret jle jle mov (bad) xchg outsb pop mov mov pop movabs xor cli push cmpsb (bad) mov rol lock scas nop fdivs rol fldt sets cmp int loopne fcomp rex.WB lret rcrl (bad) adc xor shrl int3 rol xor cmp nop add push (bad) test xchg xor shrl xor lret movabs test add mov (bad) leaveq cwtl stc or movabs icebp cltd roll sub ficompl (bad) mov mov sbb rorl subl mov cmc xor rorl mov (bad) xor xchg sbb mov rorl leaveq jno rcll (bad) add push mov sub lods fldt rcrl (bad) add (bad) add clc cli rex.X rex.RXB retq mov outsb rex.RX je imul jg in cmp mov lock adc rex.WRX rex.W mov loopne movabs xor sub mov ror push retq outsl sub ror adc (bad) pop (bad) movabs xchg adc pop shr sub cltd iret (bad) mov popfq rex.B rex.RXB fwait xor (bad) (bad) mov rex.WB sub mov mov (bad) es add push push rolq loopne (bad) jne (bad) (bad) stos int sub (bad) ror rex.RB xchg mov rex.RX div pop roll roll jno rex.XB push cli cmp xor cltd cmp gs push scas or data16 int3 or xchg fs hlt lods (bad) adc add (bad) lock add repnz mov and xchg mov shrl mov std push jb mov sub (bad) and (bad) pop xor push (bad) mov add lock movsb fstps insl push loop test rcrl xchg mov (bad) fs callq rorl or je pushq add (bad) roll push lret fldcw (bad) push (bad) shl loop xchg jnp shr je retq or mov addl pop push and in pushq and faddl out sub out rex.WR mov insl add imul sbb jno and pop rex.B push es and out rex.WRX lea (bad) (bad) and xor int3 rex.WRXB mov (bad) in (bad) ja movslq ss xchg ds mov out jno gs test lretq sub or (bad) in rex.WB cmp (bad) cmp js adc repnz popfq icebp (bad) rex.B rex.W or (bad) in add std nop (bad) stc popfq (bad) rorl jle ljmp fbld push imul sub add loopne xor ficoml push sub ds repz sti sahf jb (bad) or mov in add add mov sahf mov in pop data16 ss shlb sbb iret retq (bad) adc sbb movslq in rex.WRX fisubl imul mov rex.WXB lahf fmull mov xchg and cli sub rol jmpq cmp lret rcrl (bad) mov ss loop pushq (bad) or popfq (bad) or (bad) cmp sbb jb add mov jno leaveq imul rex.RB (bad) xchg lea push imul std rex.RX adc push jae sbb icebp push xlat (bad) loop mov (bad) (bad) sbb std jnp pop out es push mov adc add js xchg fs insb xor rex.WB in add rex.WRXB and or mov fwait add sub and insb pushq or adc fadd cmpsl lret xlat (bad) rex.WB in iret std xchg movslq mov rcl mov sub scas (bad) jae sahf jno push jnp sar rclb shll push and lods (bad) andb pop push (bad) retq and or (bad) (bad) insl (bad) jnp cmp (bad) sub int3 (bad) repnz fdivr (bad) movabs jl stc jbe imul sub movslq mov (bad) fcompl cmp pop rex.X mov (bad) loop (bad) fstpl mov rex.XB ss (bad) xchg xorl sbb repnz imul loopne xchg push je xchg (bad) add jb (bad) ficomp sub cmp (bad) (bad) mov retq addr32 cli movabs adcb (bad) enterq enterq callq cli sbb mov int3 cltd fildl adc rex.X lods movb xor int3 xor cmp cmp (bad) rex.W mov cmp callq xor in test repz cmpsl cmp imull imul sub (bad) adc fistl movslq rex.B fwait cmp rex.X scas rorl (bad) rex.WRX cmpl andl in adc test add add add mov rex.RXB movsl cmc sbb and xchg add pop jl fadd add lods (bad) push mov retq int jno jle rex.X sub xor xchg rcrl retq rex.WRB lret mov (bad) pushq mov cmpsb pmaxub rex.X movabs xchg movabs rex.B lock cwtl clc (bad) ror test (bad) std ror jae mov mov add xor (bad) xor rex.W add sbb rex.WR rex.WRXB stc mov (bad) (bad) (bad) add fild enterq adc fsubr pop (bad) sub ds (bad) xchg popfq movabs rex.W push jmp or lret (bad) mov (bad) jbe rcll rex.RB in (bad) xor shrl add sub cmpsb test fimul lahf push jmp xchg sub sbb pop stos movabs int add push push vmovhpd iret adc adc or fwait (bad) pop rex.XB pop lods xchg (bad) stos and rex.RB fwait mov retq shll jb hlt shll add (bad) repnz sti mov movslq cmp pop shl roll pop and in rex.X in (bad) icebp fbstp (bad) and (bad) rex.R sbb (bad) mov out push jmpq cld pop data16 test cmp rex.WB sarl xchg or outsb cmpsb movabs or rex.R cmp (bad) (bad) (bad) rex.WX clc pop lods xor nop jno jb or sub cmp add rex.WR repz lret shll (bad) add and test xchg rorb xchg pop pop mov movabs ror adc roll leaveq cmpsl pushfq pop decl mov in (bad) insl xchg (bad) or cmp retq mov mov pushfq xchg iret push ss add iret add fild loop out rorl add jns jge scas movabs sbbl pop ror sbb mov pop fistl bnd (bad) nop repnz cwtl cld (bad) cs xor loope cmp jne rcrl (bad) xchg repz or lret rex.X adc sarl push fwait imul (bad) out fdivs or imul movslq jns pop fsubrs flds jl or fisubrl jno (bad) jnp push jle adc rcr scas mov rcll rex.B rolb int3 lret xchg sarl add (bad) mov push (bad) pop xor mov jl (bad) rex.B add add scas in jnp loopne (bad) pop rex.RXB (bad) mov imul rex.WR xchg push std out (bad) pushfq nop loope (bad) adc movsl and (bad) idivb faddp mov movabs sub (bad) mov clc (bad) out int cmc cmp adc movsb xor (bad) lock (bad) sub rcrb (bad) repnz rcrb push stos std in imul rex.R jrcxz sarl lahf addr32 rex.W cltd (bad) push and sub add pop jnp xor shlb or mov (bad) cmc mov jrcxz cwtl in xchg rex.B lock (bad) mov rep (bad) gs xor int mov notl cli xchg roll rol stos roll movabs add (bad) sbb pop cmp test icebp (bad) cmp retq roll mov (bad) shll rex.WRXB ss mov mov mov rcll rcrl rex.W lret test mov xchg stos mov sub retq jb loope jne fiaddl movsl lock cmp push ficoml loope fildl sbb sbb xchg movabs roll or mov pavgw and (bad) (bad) xor pop push sub pop pushfq test (bad) js lret mov sub rex.WR not cmpsl callq rex.WX xchg shll adc xor insb rex.X (bad) xchg mov shll movabs pop xor (bad) (bad) pop fldt add jno xchg outsb (bad) movslq sbb rcrb adc jmp sbb sub xchg ffreep rex.WRX addb fsubr movsb pushq clc sahf jo rex.XB xor mov subl popfq jno (bad) not (bad) fucomi or mov sbb orl fnstsw (bad) sahf jg (bad) push sub pop rcl lods xlat cmp movslq push rex.RXB (bad) xor sub cltd add sti add (bad) (bad) or mov cmp mov jmp push fisubl imul xor pushq and (bad) clc stc in adc sti rorb sub rex.WRX or cltd cmpsb roll out cmc lret (bad) xchg (bad) lret vsubss add pop cmp retq (bad) popfq pushq callq sbb fidiv mov (bad) add jbe sbb (bad) jae stc mov jb push fildl movabs clc movsb fmul adc rex out outsl jrcxz or (bad) rex.WRB repz cmp stos xor (bad) (bad) or rex.R movslq movslq adc (bad) test cmc (bad) (bad) shll out addr32 and js test mov (bad) sarb sahf lret rcrb es or sub mov rex.WR roll stos or pop cwtl jg (bad) cmpsb mov nop xchg shll data16 sub sarl fildll fnstcw sahf pop push lret sarl std jb (bad) lahf rcrl (bad) adc insb (bad) push test mov add test retq push (bad) lahf mov addr32 out pop and (bad) retq sub movabs jle jmpq fs sti (bad) lret iret outsb sbb add (bad) (bad) jb movabs mov xor rex.W rex.B andl sbb (bad) rex.B cmp (bad) icebp xor rcll je xchg jl stc iret (bad) add loop test push mov mov and fldenv rorl in jge fcmovb shll rex.WB xchg adc (bad) cmc pop rex.WXB (bad) rex.WB es rex.WRX repz ss leaveq (bad) or (bad) or icebp bnd add lret rex.WB sbb loope jae (bad) xchg xchg push cmp (bad) imul mov (bad) fisubrl fldcw mov mov fwait rex.WXB add std in jmp (bad) imul mov push test jge xchg scas push callq movabs mov rex.WX jno repz add sub mov (bad) fadd sbb jmpq xor jo callq add pushfq cli or adc ss and cmc (bad) mov push mov rex.RXB lods cmp cmp (bad) in mov (bad) add mov xchg sbb cmp sub in lahf rex.WX cwtl int3 repnz adc scas (bad) rex.WRB push jp rex.XB rex.WXB mov push loopne movabs stc fbstp repnz push mov xchg sbb mov or movslq rex.XB movabs popq push (bad) (bad) xor mov lret mov roll adcl xor jno loop je add imul in add fsts (bad) xchg sbb rex.WRX adc sub mov sbb (bad) cld iret and rolb (bad) ds int3 jbe xlat or sbb sarl push cmpsb in xor retq (bad) and shl adc sahf (bad) jrcxz (bad) leaveq (bad) out mov push jne pushfq cmc popfq pop in (bad) mov sbb and cmp clc (bad) outsl and (bad) imul cmp mov loope rex.B mov mov jo cmp movabs out rex sbb lret fisttpl out cmc mov rex es rex.WX movsl mov test adc (bad) (bad) or jne fwait rcrl (bad) (bad) mov scas jrcxz (bad) lahf adc sarl or retq and add xchg (bad) pushfq clc roll sub loope test out outsl xor repnz rcr rex.WX addb cmc (bad) rex.B and and enterq sbb in mov (bad) fcompl popfq fcmovnb rex.B or (bad) lret popfq xchg jns (bad) (bad) (bad) fsubp pop (bad) and loopne sub rex.RX sbb repnz xchg (bad) xchg sbb and adc in jl jge (bad) adc cmp in add sarl (bad) (bad) and cld js pop and xchg (bad) jnp addr32 sub sarl cmpsl (bad) sarl or cmp in out (bad) rex.RB jle xchg mov sub jmpq sub rex.WR movabs (bad) rex.R add movsb push xorl and mov rex.RB sub xor cmp xor xchg rcrb ds mov rex.WR or or sbb (bad) fistp and mov leaveq cmpsb cmp test lret cld movsl push add jb test pop add xor test jbe ss xor (bad) or xorl mov adc (bad) rex.WRB repnz cmc mov xor rex.WR rcrw and mov rex.WR je pop xchg mov movabs out enterq icebp xchg fsubrs cmp xchg mov add repnz stc pop pop sbb xor xlat jbe (bad) add rex fidiv fldlg2 xor lret (bad) outsb retq mov rolb xor xor out fisttp pop callq outsb pop (bad) rex.WB xor rex.WRX loop (bad) pushq retq lea adc fwait js (bad) fdiv mov adc jno jg (bad) fidivl rex.RX mov sub rex.RXB popfq flds lahf mov xchg gs sub pop rex.RX rex.WXB rex.WRXB subb rex.B pushq nop lock inc xchg mov (bad) (bad) insb cmp and adc rcr (bad) stc mov xchg (bad) std (bad) xor (bad) adc xchg jo (bad) xor movsb pop or int (bad) imulb or (bad) ss mov mov jp iret loop sub mov jo and pop iret in out cmp push xchg lret sub add add iret rex.WRB pushfq rcrl push data16 sub rex.WRX repnz mov scas lahf mov jg in cmp rex.RB sbb mov xchg shrl imul (bad) outsb sub rorl loop shr or rcrl jmp (bad) nop rex.WRXB (bad) test jmpq rex.W rex.RX rorl imul (bad) (bad) (bad) fiadd rex.XB xchg push decb pushq rex.WX lret fdivp lahf hlt rol sub xchg shll push (bad) cmp mov lret iret jge push movabs rcr es sbb outsl (bad) jb mov outsb sbb (bad) lock adc (bad) sbb jnp xchg mov push cli rex.B test (bad) rolb stos lods mov (bad) jmpq pushq sub sarl rex.WR sbb movsl mov mov xor sub lahf (bad) (bad) (bad) and adc add sbb rex.WRXB enterq stc add (bad) xor pop rex.RXB popfq pop imul rex.B sbb sub fwait pop xchg (bad) rcrb loop gs or pop mov push out inc pushfq int stos lahf es (bad) sarl andb fidivrl cwtl test movabs cmp in xor xor or mov (bad) outsl lret rcrl test movsb sbb mov nop sbb cmp shl jne lahf (bad) cmpsl (bad) rorl addl mov mov rex.R loope in sub xchg add rcl stos imul int3 xor (bad) sbbb rex.WRB rex.XB pop sbbl in shll and cmp out jbe xchg stos (bad) rex.W xor retq int in cmp pop (bad) out (bad) shl repz test push xchg (bad) mov vmulss lret stos xadd mov fwait (bad) mov rex.RX (bad) mov mov pop cltd (bad) xor jnp ja lods pop mov loope (bad) je jmp or mov (bad) pop jp mov movsl loope mov (bad) leaveq (bad) out or fisub retq (bad) or stos cli and xor and sbb jns shll cmp (bad) or fisub adc jmpq (bad) (bad) mov rex.WX rex.RXB pushq (bad) xchg nop (bad) push rex.B jns shrl movabs mov xchg mov shrl jbe pop imul mov add rex.XB xchg test cli movabs cmp movslq imul adc cli and (bad) mov sbb push leaveq fwait decb pop shr callq add (bad) cs push push movabs jl jne rorl fimul xchg sub cmpsb sub mov rorl cmpb idivb adc repz iret movsb (bad) insb (bad) movabs and (bad) leaveq rcll mov (bad) sub lret rcrl mov sub jb pop lea lock cmp pushfq (bad) mov callq and imul sub rex.R jbe retq rex.WX imul (bad) or out rcll adc adc out popfq (bad) mov (bad) fcmovnu lret cmpsl (bad) push mov (bad) jb stos pushq pop and shll cmpsb repz and std push fs xor pop (bad) shl rcrl in fstl xor subl push (bad) cmp movslq add outsl out insl loope xchg and push xchg sbb xor mov movsb insl (bad) stos loopne imul in loope (bad) adc sarb mov sahf mov sbbl loop ja cltd retq rex.RB in cli in int3 and rcl lret mov push (bad) mov shll jl (bad) lret sub and cmp rcl xor xchg lods in sarl lahf jo jae outsb mov js popfq test sub rex.RX add or mov add sarl add sti pop lret cmp adc (bad) scas push icebp mov (bad) repz xchg push decb retq or hlt lea adc lret pushfq (bad) cmpsb rex.B rcll jmp out rex.WB shll add mov rex.WR sar rex sbb sbb movabs mov test fdivl pop scas pop shll jrcxz pushq lret rex.XB rex.B stos add jno (bad) sbb jl lock jns pop xor jrcxz lods sub (bad) (bad) jbe iret adc rex.X and xchg int3 sbb icebp iret (bad) and ror test rex (bad) cmc jns rorl or retq (bad) add rex.B cs xchg xchg or std roll sbb outsl (bad) mov mov rex.WX pop xchg retq (bad) loope fwait sarl out in movabs fsubl js mov (bad) retq xor ficomp jl js roll (bad) rorl sub in adc and ss enterq xchg (bad) (bad) loope rorl (bad) enterq shll push in rex.X rex.R mov xor mov out jmp js xchg jp jo in and cmpsl or sbb (bad) leaveq jrcxz roll mov mov lea jne or mov (bad) hlt movabs sahf pop stc mov (bad) test (bad) sbb rex.RXB mov xchg add stos and xchg cmc ror mov movabs mov xlat (bad) js jne (bad) sub xchg movabs cltd movslq imul lcall repnz enterq pop add fild rex.B and test rcrl cmpsl pushq mov in cltd std rex.RXB adc scas sbb sub (bad) (bad) jbe lods (bad) cmp mov mov and rorl jo retq rex.X xor sbb data16 insl movabs mov cli sub sahf rorl xchg (bad) mov movl movabs vpsubb xchg (bad) test cmp (bad) fsts rex.WB jl adc jno mov cwtl rcr popfq add add (bad) jno data16 cmp mov mov xlat mov mov dec imull cmp cmp lods retq xchg xor pushq xchg xchg int3 rex.WRX sub sarl outsl data16 rclb (bad) imul (bad) xor adc jle adc and xor outsl add mov sub lret rex.WR rex.RX rcrb (bad) fidiv rex.X mov sahf adc mov adc or pop int3 jne (bad) je fist rcll and mov (bad) test (bad) (bad) add xchg cmp imul scas push xchg cwtl pushq (bad) movsb int3 mov rcrl (bad) add cmc add nop negl lahf (bad) cld jg andl cmp (bad) shll repz rex.X rex.RB fdivs fmul push test mov rex.WRB fcomi adc push movsb scas clc ja (bad) (bad) mov test rex.WRXB loopne mov scas (bad) sbb jecxz repnz (bad) sbb (bad) (bad) (bad) mov iret mov mov cmpsb jo lods mov jrcxz push imul xchg test xchg cmpsl or mov rex.WRX addr32 sub or sub jp icebp pushfq pop rex.B loopne cwtl fist mov (bad) rex.WRB stc xor adc mulb jge rorl mov rex.RX sbb popfq repnz rex.RX test cmc fcmovbe mov (bad) mov sti xchg mov or cmp (bad) rorl sbb rex.WXB out orl push cmp mov test add xchg fnstenv add add (bad) fbstp mov jrcxz rorl pop jl fimull stos add retq or cmpl jno insb fldt fstps xchg or or ja cmp mov cld rcr (bad) and push mov callq repnz ds (bad) scas mov (bad) ss callq mov mov repz stos cmp mov rcll sbb (bad) mov (bad) and iret (bad) push add (bad) adc ja addl (bad) lods cld pop cmp (bad) xor jns frstor callq rex.X xchg imul loop out jb pop rex.B jmpq jno rex.XB out sbb rex.WX (bad) xor pop std (bad) or lret cmpsl jns and rex.WR ja (bad) out iret and (bad) rex.B ss fcmove (bad) (bad) movabs test (bad) (bad) add (bad) mov idivb retq nop data16 rex.X movabs rex.RB mov pop cmp loop adc (bad) cli pop rex.RB int or out hlt sub xor jnp mov lret movslq cld add pop xchg movabs sti mov sbb xchg and imul rcl cli pop jbe mov ja jl xor sbb roll mov rex.X (bad) sbb rorl push sbb rex.WX xlat rcrb movsb xor movabs rex.RXB fisub out lock test sub (bad) or (bad) fidivl mov rex add add cmp (bad) mov adc (bad) cltd pop jmpq shlb xchg repnz (bad) and xchg xor mov ss gs fwait (bad) jo xor pushfq and xor mov or (bad) xchg enterq mov rcrl leaveq adc (bad) xor adc push int test stc (bad) out test (bad) shrl jnp mov in jp (bad) add pushq addr32 ja,pn roll (bad) enterq imul xor in out shl lock imul jge pop shll cmp push sbb (bad) movsb icebp rex.B mov out (bad) in push xchg (bad) cmc jrcxz add push or rex.WXB xchg (bad) stc gs idivl add in nop (bad) mov cltd lods in (bad) jo pop ds out fidiv (bad) repz fmull mov (bad) leaveq and int3 pop (bad) and and sub outsb shrb mov movabs and sub mov xor mov sub test callq jae push stos (bad) movabs (bad) mov or adc retq and pop leaveq sbb in ficoml mov jle (bad) test pop stos (bad) lock repnz cmp xor lods mov mov repz mov add fptan (bad) (bad) pop cmc incl pushq sarl mov repnz (bad) jne pop movabs iret addr32 cmp rex.WR or add cwtl fistpll cmp js rex.XB or retq std cs push shll (bad) mov es movsl mov cmpl pushfq (bad) jl (bad) out pushq cmpsl push pop mov test in repnz add (bad) inc hlt xchg pop loop rex.XB and movabs (bad) out insl jns (bad) sub (bad) es cmpsb and jp (bad) je xor cmp rex.RXB neg (bad) sbb test rex.W (bad) popfq xchg cmp pushq enterq iret fidiv cli jge (bad) loop push movsb (bad) xchg xor movslq (bad) fs xor std jle xlat jbe loope xor popfq fisubrl mov (bad) mov rex.RB cmp in jo in mov lret and cltd (bad) (bad) mov (bad) jbe xchg fwait sub mov and pop ds (bad) test sarl add retq hlt lret or lods movabs rol scas sub rex.B (bad) xor xor je xchg shll xchg lods in mov cmp xchg add iret fisubrl retq add scas (bad) rclb pushfq push jmp jns retq (bad) rol movabs fdivs enterq in rex.B rex.B or cmp (bad) cmp xchg rorl cwtl imul mov insb mov lock movabs sub or jl (bad) jrcxz (bad) cmp sbb mov mov jno sub push es roll sbb faddl loopne mov mov (bad) callq rex.B rex.WRB (bad) test lret movabs sti add retq fistl mov test loopne (bad) rex.X movsb fdivrp lock ja rex.RX sti (bad) ficompl cmc addb rex.RX cmp out cmp sub (bad) fldcw in mov mov sub and stc rcl cmpb pop imul andl retq fisttpl pushq rex.WRXB (bad) lahf push icebp push rex.WXB or cltd or cmp mov rex.W ds (bad) and sbb rex.XB (bad) cltd (bad) push jmpq in (bad) add (bad) sub xlat xchg rclb icebp imulb cmp rex.WRXB fbld fs jmpq movabs js enterq hlt in rex.XB repz fstpt clc neg sbbl adc jo insl test (bad) jne cmc mov pop sbb xchg (bad) xchg (bad) fisub addl out and movabs loop cmp (bad) adc movslq sub (bad) fwait data16 mov xor out enterq jo or xor or ficompl (bad) (bad) and pop mov xchg movsb fsubr hlt (bad) mov loope mov addr32 sbb lods (bad) std js ss mov retq adc and rex.R and (bad) jns rex.RB sub and (bad) xchg (bad) rex.WXB ss and adc test test cmp (bad) add idivl sub jae cmpl sub outsl (bad) lret or icebp and int xor out movabs repnz pop adc movsl test cmp cs pop insl es jae (bad) jrcxz (bad) (bad) stc movabs pop pushq pop adc cmp xor mov rex.WRX movabs cmp rex.WB test callq fistl adc negl pushfq pop sub outsb adc mov or rex.X int3 sbb xlat pop and adc rex.WRXB sbb (bad) and pop stc adc adc rex.RX (bad) movabs mov add hlt mov cld in movabs insl push shrl (bad) xchg cmpsb rol roll jmp popfq jnp rex.B and fwait rex.W rorl movabs shll (bad) shll lods or (bad) scas sub jne sbb movabs rex.RB in fldt mov mulb sub push mov (bad) leaveq push jle jno sub (bad) (bad) sub clc mov mov adc scas cltd rex.WX sub popq cltd (bad) rex.WX adc xchg stos roll push push xchg mov test sbb shlb jmp mov rcll movsb outsl movabs pop lret cmp popfq pop mull rex.WRB rex.WRX fistpl rex.B pushw clc outsb mov vunpckhps add add mov rex.XB jae and jl add callq xchg sub cmp (bad) hlt loope xchg loop leaveq mov in mov fisubl decl rex.WRB (bad) pop out jge jbe (bad) jnp xor (bad) sarl lret jae ficom (bad) sub retq jrcxz scas rex.WXB sbb jns lock pop cltd shrb rcll rex.RX divb mov enterq fisub rex.B (bad) cmpsl movabs insl test cli pop scas or or add xchg (bad) jp imul out in jne stc callq sub fwait sbb xchg xor cmp jge (bad) rex.WRB xchg add pushq pop std or (bad) scas jle test (bad) stc retq mov iret test lea test pop movabs rex.XB push xlat mov pop sbb xlat or test xor push rorl (bad) jo sar pushq frstor xchg and cmc jno xchg xchg rex.RB or (bad) add lret mov cwtl xor movabs mov (bad) fwait rex.R stc (bad) sub pushq and (bad) rex.XB or and adc enterw xor add pushq pop pop rcll xor shll iret jns jge js testl xchg loop movsb or mov jnp xor jp rex.RXB or mov fs (bad) sbb cmp rorl pop xor add sarl lret rex.R add movslq fcoml jo cwtl adc rex.RX pushfq rex.WRXB retq stc rex.WRB imul pop fcmovnb pop (bad) decb (bad) nop ds xchg loope sahf sahf fsubl pushfq xor add sarl data16 pop lods adc test sti mull rex push or js xchg pop imul sub shr jp popfq in mov xchg mov pushfq adcl rex.B fistpl rorl rex.RX int3 pushfq xchg andl rol stos xchg and rex.XB rcrl incl and jp fcmovnb std adc xor jg rex test rex.WRB test sbb xchg loope cld (bad) jns rol add (bad) (bad) (bad) (bad) out (bad) (bad) mov (bad) and mov push or test pushq rorl xchg nop rorl insb (bad) (bad) sahf sbb fsts pop ds lods movsl lock (bad) mov and fidivl loope loope mov mov outsl (bad) and (bad) in (bad) sbb mov imul cwtl mov hlt (bad) or sbb decb add (bad) (bad) cmp push cmp pushq callq add mov retq imul shll sub cmp rex.WR mov (bad) imull retq leaveq (bad) jmp jns repnz imul gs xchg and mov rcrl ss rorl or mov shrl test pop (bad) fdivl int fdivrs xchg pushq sub cmp jb cmpsb pop (bad) sub or and test add movslq cwtl mov and fsubl (bad) repz add pop adc es scas jrcxz or lret xchg cmpsl pop xchg pushfq outsb callq mov rex.RXB (bad) adc add (bad) cmc movabs jns (bad) and push pushfq cmp adc (bad) sbb rex.B mov xchg jmpq cld adc sti rex.B sbb movabs callq stos enterq push xchg rex.WR mov js push jb mov add mov mov cmp add xchg (bad) ljmp (bad) xor cli jmpq lock rex.R sub out (bad) mov cwtl mov xchg shrl and cmp add sti mov (bad) imulb cmc jo rcr shrl sbb push in mov jb add (bad) outsb (bad) mov test cmp adc in mov iret jge movabs and icebp (bad) (bad) pop es mov and jb repnz (bad) mov jnp fstps data16 xchg movslq sahf pop fnsave jle xchg cmpsb imul adc rex.RX mov movsb mov or rex.B (bad) int xor (bad) cmpsb movabs (bad) imul sbb js xor jnp (bad) adc and rex.WRB mov mov (bad) std adc sarb lock or push mov or push jne push or sub loop repnz (bad) iret icebp pushq jb sub rex.X rex.WRB pop and fstl movswl (bad) movsl movslq mov sub (bad) (bad) xor (bad) add (bad) jb (bad) xlat (bad) sahf mov ja vandps insb (bad) cmpsl or adc add js test xor (bad) sub cli ds rorl or (bad) jb test ds jrcxz pop shll retq rex.RXB rex.X lahf add fadd mov movsl jnp pop (bad) (bad) mov adc pop jmp rcl loope enterq rcll mov rex.R mov rcll push test loope rex.WRB adc xor push xorl or cmp fsubrl add (bad) mov rex.R adc sbb lods loopne psubsw rex.WX or cltd lret fdivrs push rex.WRXB jmpq rcrl (bad) sbb push clc (bad) out rex.XB (bad) jmpq rex.R addb fldenv jge rex.B push jae callq stos mov sub fxch sbb sub sbb stos (bad) cltd out outsb jmpq shrb sub fwait repnz mov mov mov xor jnp or cmp (bad) and xchg (bad) roll rex.B lock (bad) rolb (bad) pop jo (bad) pop mov jno or loopne pop adc jno mov fistpl jns pop (bad) jns push adc and jae iret (bad) je rex.R movsb push push (bad) cmp pushq or mov sbb roll (bad) imul (bad) fsubrl movabs movl shlb movabs mov pushq stc and (bad) sbb (bad) adc loope cmpsb adc jno xchg jg test rex.WRX jns sti jno mov pop mov lock rex.XB mov jp sub js rex.X and jge int3 jns (bad) sbb pop mov (bad) in sub rex.RXB jmpq (bad) movslq cmp mov rex.B sbb (bad) lret cmpsl add cmp rex.RB and cltd sbb xlat sahf jns xacquire lret rex.B repz hlt (bad) fucomip rex.R (bad) or retq sub and rex.WX cltd cmpsb add xchg icebp pushfq (bad) int3 int3 pop je push sub rex (bad) mov js adc subl push or (bad) (bad) cmp callq movabs mov cmp and (bad) andl pop jmpq in sbb rex.WB cmp push jmp (bad) outsb jns fiaddl lods (bad) repz xchg int and rex.RXB or rex loope outsl movsb scas (bad) rex.RB (bad) rex.WRX mov leaveq cmp repnz mov add add enterq rex.W cmc in rex.RXB add cmp rex.WR nop test push and (bad) scas rcl fnsave fdiv (bad) roll in jp rex.WXB add loop push fucomp jo sub pop loopne movsl mov lods fildll and rex.WRB movabs xorl test (bad) fsubrs (bad) cmp xchg adc and sahf negb xchg movabs mov (bad) loope (bad) idivl imul rex.RXB rex.WXB int (bad) jb add add shll mov adc add (bad) rex.WXB cmp mov add rex.RXB rex.R pop movsb rex.WR sub sbb jmp pand add or jbe rex.W sbb and xchg lock lret bnd je addr32 vpunpcklwd frstor icebp adc leaveq pop (bad) (bad) (bad) xorl add push or rex.WX cld movslq rex.RB mov lret sbb in out outsl out push rex.W rex.RB insl outsb out mov callq in pop mov mov rex.WB fs fs (bad) lahf mov xor jno add movslq (bad) je (bad) (bad) icebp int in xchg (bad) in (bad) adc xchg mov test sbb mov sbb or imull faddl movabs fdivrl rex.XB hlt leaveq (bad) stc pop xlat out (bad) int rex.WR jmpq (bad) adc jg jle (bad) add (bad) mov mov test lods mov outsb sbbl lahf loopne jo in sbb sarl jne fs rex.WRX mov jmp and (bad) fldt rex.R subb cmp sub loope fildll lret and and pop rex.X and or jae push rex.R xchg clc sarl pushfq (bad) es callq push lea mov lret xor rcl mov (bad) and xlat cs (bad) mov out sub ja rex.XB (bad) jne cmpsb rex.WRX cmp pop loope push rex.RB rex.WXB lahf xchg mov cmpsb shlb sub (bad) cmp rex.WRX pushq std sub iret mov fsincos jb rcrl (bad) rex mov (bad) (bad) cmpsl sbb movabs adc (bad) callq lods ud2 (bad) add leaveq fldl sub rex.RX lods rcrl (bad) fild pop cmp (bad) ja (bad) rex.WX rex.RXB rex.X movabs mov xchg rex.WR jle (bad) rex.W movabs idiv cmpsl sub cs lock xor lea callq add (bad) and sbb or outsb rcll sbb adc movsb add fcoml in addr32 cmp (bad) outsb xchg retq jno xchg mov cmpl and (bad) xor mov xchg rex.WRXB nop out in mov callq (bad) gs pop (bad) (bad) rex.W fcmovnu and push mov rex.XB rex.WRX adc rex.WX sbb int pop loopne jne test sub cmp fcmovnu lea xchg pushfq (bad) clc repz jo cmpb rex.WRXB adcl callq repz outsl xlat (bad) jge mov (bad) pushq fwait rex.WB movsl nop retq sarl sar add or lock divl in or iret out (bad) out and (bad) mov adc xor scas (bad) idivb roll sbb sarl popfq mov gs lea int xorl xchg xchg movslq (bad) (bad) cmp in cmp xor and mov and mov or jns jge lahf pop int3 sub (bad) in mov movsl (bad) lock loopne addl mov (bad) or cs (bad) mov xchg mov retq rol sbb adc movsl hlt push icebp xorb mov (bad) jno (bad) (bad) sbb lret sbb lahf repnz cmp mov rex.WB and sbb and scas test fwait sub pop movabs jbe fild rex.B insb rex.XB test add jle pop jmpq and negb rex.WXB sarl rorb xchg pushq xor lret movl xchg ja adc in (bad) hlt callq ficompl pushq add xchg rorl adc sub hlt rex.RB (bad) movabs cltd nop add addr32 iret rex fwait (bad) jle (bad) jnp (bad) (bad) xchg fwait sbb xchg rex.WXB (bad) pop (bad) cld sbb cmpsb rex.B mov shll shrb repnz mov in rcl rcll cmp gs mov rex.WB cmp shrl cmp xchg outsb (bad) mov movabs sbb xchg adc enterq hlt repz rex.WXB pop (bad) loope retq pop rorl cmp movabs lret lret popfq mov mov (bad) mov mov (bad) (bad) neg lahf rex.WB xor rex.R jno and cmp jae and cmp xchg add sti (bad) (bad) movsl (bad) int3 xchg sahf addr32 adc imul enterq jo (bad) int cmp rex.WXB mov int3 jp shll nop lock addr32 (bad) xchg js lret jmp mov rex.WRXB rex.WRB (bad) cmp cmp xchg xchg fldenv jae cltd test mov add sbb (bad) rcr shll test sbb ja movsl roll stos int3 lea mov lret inc jg pop fisubl mov loopne (bad) nop or (bad) jmpq lret fsubs fs roll testb (bad) xor movabs jns adcb cmc and (bad) mov cmp pop jmpq roll (bad) fidivr lret rex.RX fisubrl stos gs lret push int jbe (bad) (bad) in lret (bad) icebp ficoml insb (bad) js movabs mov adc mov pop je (bad) (bad) out pop push sarl in bswap (bad) cmp mov movabs sbb xchg sub and insb and or mov xchg fwait cwtl xchg repnz (bad) movabs rolb adc cmp or adc movsl add (bad) add jb add rorb ror loope mov (bad) or scas (bad) add negb or sbb push lret idiv sub loopel jne neg xchg fimul rex.XB xor push xor addr32 mov add rex.WB test rex.W fsubs xchg mov test std fucomp retq push movsl sbb movabs (bad) xor sub cmp mov imul scas fsts pop xchg repz rex.WXB fnstcw adc (bad) lods xchg jmpq jo mov (bad) jae ficom fisttp test or insb pushq cmpsl repz repz iret sbb xor flds fidivrl rex.B sbb retq sbb xchg enterq jns retq xlat or ja rex.WR repz hlt sbb lret test sub or rex.B data16 rex.WR cwtl mov xchg adc clc js (bad) icebp xor cld jne fmulp mov pop add xchg sahf (bad) imul sbb lret gs sub int3 cs retq neg sarb retq bnd (bad) popfq lods lret cltd fcompl fdivr pop push pop cmpl sbb (bad) cmpb jrcxz pop test rorb movl lret retq mov xchg mov xchg callq lret fcmovnu (bad) jne rex.RX fbld or rcl cwtl pop push lock push jle loopne (bad) sbb int3 jp xor sbb pop jl rorl cmp rex.WXB rex.RB fs rcrb xor pop cli pop in gs test jnp iret xor cmp (bad) mov sbb mov rol rex lods ror movabs icebp (bad) mov retq sub xor rex.B sarl push (bad) jle cmp pop stc (bad) jo xlat movabs sbb pushq rolb rol cmp xchg int jnp cmp mov fsts repz cmp xorl cmp (bad) idivb rex.X pushq iret pop cmc out rcl scas or xor scas pop enterq (bad) add (bad) xchg mov and enterq insl jrcxz sahf mov mov stos and jb (bad) mov in (bad) shr (bad) mov (bad) out and and jno push insb rcll std and rcrb jmp (bad) sbb pushq mov jae test rex.RB movabs rex.W icebp rex.B pop mov rex.RX mov xor loop rex.WX (bad) jo add mov ror (bad) xchg add jrcxz loope rex.WB shl jg insl rex.WR rcrl pop mov mov (bad) jle xchg mov imul scas xchg rex.WX ficomp movabs lahf cli mov pushq (bad) vcvtdq2pd sub (bad) (bad) xlat adc sarl xchg movslq mov movabs or leaveq mov sub (bad) rex.WR sbb sarl cs shr pop sub decl rcl xchg add in cltd mov mov rex.WRXB iret sahf hlt movb shrl adc (bad) mov jrcxz and addl icebp cmp retq jb mov jno clc movabs lock (bad) and (bad) pop (bad) xor (bad) (bad) loope mov fs mov mull (bad) cli rol mov in pushfq int3 sbb gs sbb sub (bad) add imul xchg pop sub push push scas adc pop cmp fcmove rex.W sbb xor movabs sahf mov sti lahf jne rcrl in jp shll lcall cltd insb in sub lods fildll mov jmpq insb int3 fisub loope sbb jno pop pop (bad) mov xchg shll (bad) repz adc sub cmp xor push (bad) loopne lret or sub adc (bad) shll xlat sub mov lea pop (bad) and loop mov rcrl fcomps jle mov cltd push (bad) lcall shll sbbl data16 add mov (bad) jne lea xchg add add pop and pop cmp cmp sbb jns int sarl lods rep mov cmpsl nop in shll retq sbb jns notb adc rex.X sbb sub (bad) roll insb xchg mov sub (bad) movb rex.WX cmp mov out in (bad) or sub push andl jp sub fcmovnb mov out (bad) cmp pop rex.XB or (bad) add rex.WRB enterq add rex.WX xchg pop jmpq (bad) lahf int cmpsl test sbb or cmpsb and lahf (bad) pushq rex mov add rex.R fxch scas and mov (bad) sub xchg (bad) pop imul xchg push loope (bad) (bad) (bad) repnz outsl cli xor enterq add jb (bad) (bad) (bad) jno rcr jbe (bad) rex rex.R repz mov add in rex.RX fnstenv mov ds xchg rex.WRB (bad) xchg enterq mov rex.WB add pop mov (bad) xor adc rex.WRX rex.WB repnz out adc mov mov lahf int3 (bad) add fcoml jne fs or mov rex.WR push lock test (bad) rex.WXB and (bad) mov int3 xchg adcl loop clc mov iret or rorl or sbb sbb or sbb stc pushq and (bad) pop pop mov retq es fs pop fisttpl xlat sub repnz sub out xorl rex.X adc (bad) std sarl and js sub add and sub mov jbe rex.WXB jrcxz sbb outsl lods push push movabs adc (bad) mov rex.X sbb push add cmp add jno es jb insl (bad) loope sbb test lock fldenv rex.B out fs js jnp loop (bad) mov outsl stos sarl jnp pop mov jne (bad) cli sbb ds pushfq adc jrcxz mov rol stos sub jbe adc mov (bad) lahf mov (bad) (bad) mov pushfq pop shr mov es (bad) push outsb (bad) mov add movslq movabs stc movsl mov xchg rex.XB pop out push (bad) or lods push jmp rcrl xchg test pop (bad) scas cmpsb cli ftst mov movabs or movabs jge ror (bad) test rex.WRB and (bad) mov shl or fld movsb pop rorl test (bad) insb or imul or iret xchg xchg sub pushq js or (bad) xchg sub cmc add (bad) stc xor adc (bad) sub jbe rorl push and sub (bad) sbb movsb pushfq xor xchg sub shrl fstps and cltd xor lock mov fistpl outsl pop sub rolb and push (bad) (bad) pop pop push roll mov addb rcl cmp movsl movabs popfq (bad) in (bad) mull push fisub (bad) sahf pop mov mov nop push cmp (bad) in rcr mov outsl (bad) sbb rcrl xchg or fisubrl sbb pop movabs mov (bad) mov rol int out rorl jle (bad) push gs pushq sub movabs (bad) in mov push out clc mov add xchg (bad) lods (bad) mov leaveq (bad) lea rex.WX in and mov mov (bad) cmp (bad) retq adc mov add sub jg mov sbb or or (bad) jle or (bad) mov (bad) repz pushfq in pop rolb jno scas rex.W imul push rex.B sub pop jmpq cwtl inc adc enterq rex.B pop cmp (bad) jnp rorl roll or fldcw popfq shll fwait out jae rorl fistpll add (bad) lret (bad) scas repnz (bad) xor std mov and and jp (bad) push clc movsb (bad) rcrl or rcrl leaveq rcll sahf mov xor xchg test push push fs pop es and repz push sub sbb pop out xor xchg and pop (bad) (bad) fs pop jmpq mov rex.WX mov test (bad) and movsl fucomi rex.WRX (bad) xchg adc mov rex (bad) vpslld out ss mov sbb (bad) (bad) lahf push xchg pop cld pop scas mov lret (bad) adc pop cmpsl rcrl loopne pushq rcrl rcrl gs add pop mov adc xor lock (bad) fst xlat xlat shrl pop add jg cmp repz rex.X fwait in mov add rolb sarl cmpsl (bad) repnz iret test mov (bad) rcll repz stos (bad) flds punpckldq stos or jle pop test xorb sub outsb xchg repnz jg mov in rex.R mov cmp sar hlt mov repz (bad) push sub test (bad) movabs mov retq (bad) fbstp mov jp mov add rcrl (bad) mov xchg stc sar je and mov popfq pop mov adc (bad) mov (bad) movsb roll mov and (bad) pushq and in (bad) mov xchg (bad) cmp rcrl ds roll (bad) rex.WRX mov lahf movsb (bad) adcl lods add cli xchg sarl xor in mov jrcxz fldenv jl jns shrl xor decl sbb nop xchg addr32 add (bad) je,pt scas jle (bad) add mov jo shrl jmp (bad) testb movabs addr32 fwait shrb push test pushq pushq pop (bad) mov iret sbb xor add rorl sarl xchg xchg insb (bad) jae adc jno rorl add sub mov adc add cwtl icebp out sbb or loopne sub (bad) (bad) push out sub in fucom jg rcrl jb jnp shr jg jbe (bad) mov lock sub add push cmp cmp popfq loop fldl (bad) jne xchg rorl out xor cmpsl (bad) shrl outsb rex.WRXB rorl scas sub lret sbb movsl jb lea cmp (bad) rcll pop sub in mov incl out rex.X and xor addl fadds js cs mov xor jle (bad) shrl cwtl add movabs (bad) (bad) mov and sub adc xor faddl js (bad) loop add cwtl in (bad) ds enterq shrl adc fisubl xor rclb ror (bad) jp movabs out fstl (bad) scas jl sub mov xor (bad) scas mov callq (bad) sbb xchg cltd cmc shrl rex.WXB mov rcll add jns std iret push sbb rex.XB rex.WXB add ss test add sub movabs retq rcll popfq movabs (bad) sub rex xchg (bad) movabs leaveq (bad) or (bad) test (bad) imul and or add sarb jns shll leaveq movsb rcll (bad) pop movabs lods mov add mov addr32 cmpsb add loope retq sarl (bad) jnp mov xchg rex (bad) lock xor rex.B mov (bad) stos int imul (bad) or addl lock (bad) (bad) (bad) roll std rcrl rex.RXB sbb loop ja sub cmp mov xchg sub fs sbb xchg (bad) jo sbb and mov (bad) loop (bad) rcll (bad) outsb jmp mov (bad) icebp push mul int lret test rex.WXB rex.RB (bad) (bad) rorl and fs shl addr32 test sbb (bad) in js push pop sub (bad) (bad) mov lea rorl fsubl icebp cltd movabs xchg sbb (bad) rex.WX (bad) and sub (bad) jns rex.WRB ror out or gs (bad) jno (bad) rex.WRXB (bad) icebp iret es adc loope mov (bad) xor rcrb or loop (bad) jb ds imul (bad) xor outsb nop hlt rex.B cli rex.R fdivrs add (bad) rex.B jno jle mov jb outsb iret (bad) jmpq fsubl imul pop (bad) mov rex.WRX (bad) fadd shrl int3 pushq xor fisub cmpsb fidivr (bad) jg pushfq fiaddl jbe (bad) jp mov mov or callq loop jge sbb or push sbb push enterq mov and sarl imul lea or addr32 adc xorb push cmp outsb movsb (bad) sub test mov sub rex.RXB (bad) add cmc adc and movabs jl mov test (bad) pushq and gs push rex.WRX fidiv (bad) (bad) and notb pop cmp (bad) (bad) outsb stc add mov fwait cmpsb movabs movslq orb push (bad) lea sti (bad) jo and sarl pop (bad) (bad) mov rex.XB lret (bad) (bad) sub cs adc xchg insl (bad) xor cmp in pop (bad) stc adc lea or (bad) pop mov (bad) enterq lret ss retq rex.W sbb imul add pushq add sub gs rcrl mov cmc xchg cmp xchg (bad) sarl add xchg shrl lret cmp cwtl loope hlt enterq (bad) sbb test xchg mov pop pop scas mov adc sbb mov mov mov mov (bad) mov (bad) and cmp cmp addl cwtl cmp (bad) pushq in (bad) adc sub rex.B cs test rcll jne (bad) nop sub mov gs int push sub push rorl shrl notb lods (bad) je callq push movabs popq (bad) lret shl sub jno shl (bad) divq (bad) stos mulb (bad) rcll cmc (bad) testl adc rex.WXB (bad) (bad) nop sbb out rcl mov ds rol movabs (bad) jno (bad) add lret push enterq fdivr pop fnstcw test sub iret fsubrp sahf adc jbe (bad) (bad) retq rex.B mov fs (bad) cli (bad) sub jp movabs pop rex.XB (bad) gs iret sub shll (bad) cmc pushfq out or cmpsl movabs lods rex.WRXB sbb push loope and ds ficom or xchg mov jge mov int xchg ffree mov cmp shl jns mov cmpsb sub movslq movabs (bad) jnp rex.WRX xor (bad) rex (bad) xchg fbld (bad) or movabs clc (bad) and push jo xchg repnz cs sbb std or xchg test or roll xor (bad) lret sbb xchg mov mov jbe,pt cmpsb movabs (bad) mov rex.WRB adc add sbb (bad) (bad) repnz mov (bad) sub xor rex ss mov and fs loope or (bad) jge jp sarl leaveq faddl fucomi popfq xor mov sub movslq (bad) stos sub ja (bad) jns (bad) rorl cmpsl cmp adc xchg sub cmpsl (bad) (bad) pop push sub (bad) sbb jns ficompl sub sbb add ja rex.R adc jae add mov lods mov rex.XB rex.WRB retq mov cli sub out pushq (bad) roll movabs lods mov (bad) rcl mov fst movabs xchg rol sub out or icebp jne cs push test (bad) fbstp push cmc cmp or pushfq (bad) and rex.W gs ds (bad) out icebp pop rex.RX cmpsl (bad) fld rex.W orl (bad) jp and rex.XB mov sbbl (bad) xor and fcmovnb mov in adc out rex.WR sub stos and outsb rex.WRXB xor mov mov ror rex.R (bad) and and ffreep jae je and (bad) scas movsl int3 pushfq cwtl movabs imul in popfq cli adc add sti cmp add movsb roll mov add cmc movsl mov sub (bad) xchg insl rex.X (bad) xor (bad) sub push (bad) adc adc pop retq (bad) cwtl fdivs repnz jnp movabs rex.WRX negl push roll (bad) or xchg movsb divl rex.X rex.R movabs rex sbb (bad) cli retq rol sub mov cmp vpaddd xchg movabs cmc cmpsl mov jns pop rol mov or (bad) cltd (bad) shr jnp cmp pop pop mov shl enterq callq cmp sbb (bad) jne rex.B sub (bad) cmpsl (bad) sub xor adc insl pop (bad) repz in add sbbl (bad) jge mov xor mov vucomiss rex.WXB jl outsl hlt push (bad) cmp rorb rex.R xchg lods xchg sbbl subl retq loope or mov (bad) xchg adc mov and rex add rex.WXB pushq mov shr mov clc jbe sub mov cmp shll psubw push mov (bad) fsts push movabs pop or push imul xchg xchg (bad) (bad) ja mov sbb pop add push test loope lret pop (bad) rex rex.X (bad) jrcxz int3 rex.RX cs rcrl push rex.RXB (bad) adc (bad) pop cmc shrl mov repz adc xchg movabs fwait xor (bad) cmp testl (bad) (bad) fnstenv xchg cmpsl stc sub rol jne cmc mov roll jnp iret inc movabs mov out pop std mov out (bad) sarl (bad) vmovq and (bad) (bad) (bad) xor negb test cmpsl movsl rex.RXB fist cli xchg sbb iret lahf out shr pop xchg adc rex.RXB rex.WR adc jo shrl adc jnp insb (bad) gs movsb (bad) mov adc push jmp xchg loop (bad) jb mov (bad) outsl mov rex.WRXB in rcrl stos mov sahf jl sbb movabs xchg sahf fisubr mov fstl push rcl (bad) jl or rol cmpsb add (bad) or mov std int jb xor (bad) pop fsts mov or jns retq outsb (bad) loopne rex.XB pop push or rcrb (bad) outsb lods mov xchg or rex.W rex.X lahf mov push cmpb or iret add repz fisubrl (bad) sub cmc add or jmpq push enterq retq hlt addr32 xchg mov (bad) cltd sti in cmpb (bad) lock xlat pop cwtl mov (bad) int3 cltd jo movabs imul iret rex.WX (bad) jl jae rolb push stc xor (bad) xlat (bad) cli lods lret or and rex.B (bad) fcoml (bad) stos data16 decl jle cwtl lahf sub stc (bad) pushq repnz sub cmp (bad) (bad) add (bad) cmp jp je pop test test (bad) fcmovne add rorb shl mov es add ja (bad) in pop rex.W push mov cli cmp rolb nop in jns pushq push rcll sbb (bad) pushfq jo (bad) rex.WRXB fs fisttpl sub pop shll lahf stc (bad) cmp (bad) fsubrs shll rex.XB or xchg cli cmp (bad) shrb xor shll jp shrl rex.RX (bad) xor repz (bad) mov lret (bad) js fnstenv mov (bad) or in cmp adc in rcll imul popfq movsb ffreep rex.XB mov (bad) loopne or fidivrl fldt rex.WB test mov jo cmp enterw sbb add loopne jns repz popfq and mov pushfq gs xor xor mov retq loopne rcll rex.WRX movabs adc mov (bad) cmp and xor rex.WB repz sbb int3 rcrl lods test faddp mov std push (bad) rex add xchg mov cmc rex.RX sub and pop pushfq mov lret (bad) jmp movslq faddl sarl lock shll rex.R sub mov cmp pop mov fs cld (bad) (bad) adc sub add (bad) je cmc pop pop xor movabs out vfmsub132ps loop adc (bad) jo fistpll movabs add in (bad) rex.RB pushq leaveq scas jle lock (bad) test rex.RXB fbstp sub jns fisubrl fwait callq and mov fstpt jmp ficoml mov sub sub out xchg lea sub (bad) xchg jns stc rex.RXB adc cltd stos or xchg (bad) out mov add xor xlat lret in int3 mov fstl repnz movabs rex.B rex.WR jae fbld lret pop xor rex.WRXB clc jrcxz in (bad) jmp paddusb xlat (bad) hlt lret (bad) add cmp pushfq sub jno,pn mov mov shr add add insl shr loopne or orb and fmull jmp or xchg add sbb scas mov (bad) lea cmp mov (bad) movslq bnd (bad) jnp in test (bad) (bad) jbe rex.B mov rcll adc pushfq in jbe mov or xor mov or repnz sub stos stos add sub mov roll or adc xchg (bad) jl imul test (bad) popfq rorl movslq iret xor sub mov push pushq int (bad) jnp mov sarl jl roll (bad) rex.WRX jno rex.XB ds jno (bad) (bad) fs icebp cmp rcrl (bad) jp pop xchg movsbl rex.R fwait jmpq cwtl data16 cs (bad) cltd (bad) (bad) jns retq cwtl lods loopne cmp sahf test repz sub lret sahf sbb (bad) repnz clc jno and in push rex.XB sbb nop cmpsl (bad) repz stc (bad) movabs xchg std (bad) movabs test in pushfq imul rex.WR movabs and loop hlt loopne cwtl insb (bad) jle lret lret jno (bad) movsb mov cltd add and adc lret xor jle xor sahf retq jmp movb loopne rex.RXB sbb pop rex.WRXB movabs mov pushq jg xlat adc xchg test xchg mov (bad) in and (bad) repz (bad) ficom add int xchg loop sahf adc rex.RX repnz rex.B mov mov rex.B ds adc adc loopne sahf push jnp or out sbb lods cld xchg and in sbb pop xchg sub xchg xchg sbb pop pop pushq enterq stc push xor xchg mov outsl add out push movabs roll fstpl std faddp lods cmp push and add mov callq jno pop loope jle sti cmp jmpq xlat rex.RX (bad) mov sarl add and mov xor jp mov (bad) rex.WRXB xor outsl pop shll loopne adc adc loop iret loope rex.WX lret sbb adcl fwait roll out rex.R mov lahf pop xchg rcll or sub (bad) int loopne and lea adc cmpsb (bad) loope add loopne jle rex.B jrcxz jo (bad) mov jno std mov xlat xor fwait add add xor imul cmp icebp jns fldl2t (bad) sub (bad) mov outsl jo lods rex.WX stc pushq (bad) xor cmpsl mov jbe push jl roll std icebp jnp repnz cmp mov outsb shlb (bad) jb sub int (bad) mov mov and (bad) and es xchg pop sbb mov idivb in and jg sar popq int3 out fbstp xor rex rex.WXB sti adc jle insl (bad) sub rorl (bad) leaveq lcall shll cs loopne fldenv or insb lret (bad) (bad) cltd mov (bad) jmp fstpt (bad) rex.WXB addr32 rcl std sti rex.XB test out in (bad) movabs jno add pushfq faddl (bad) xor test xchg out (bad) xchg cmpsb mov (bad) lods push and or xchg imul rcll jg push repz push sbb fcmovu cmc mov xor stc test (bad) repnz xchg xchg fcomi pop rol (bad) push sub (bad) (bad) cli lea out xchg jg leaveq (bad) repnz (bad) jo rex.WRXB lahf and jle rcl (bad) mov pushq icebp (bad) popfq cli (bad) scas adc int (bad) add (bad) bnd movabs div insl lea push js (bad) popq mov sub mov fbld add or sbb fldl mov stos add leaveq jge jo and shl (bad) (bad) pushq movabs gs (bad) jne rex.WRX xchg mov lret repnz (bad) js mov loopne sub sub mov adc mov loope int3 (bad) loope movslq (bad) (bad) cmp lret movabs jmpq bnd rex.RX hlt pop lods (bad) pushfq out incb loopne rex.RB or (bad) sub xor rex.RX fcmovnb mov add sbb or (bad) rex.R (bad) push xchg and lret mov mov ds (bad) movslq jmp (bad) sub (bad) rex.WRX cmpl xor rex.R xchg (bad) clc iret rcl addr32 lock loope add scas mov add add repnz sub rex.WXB out pop sbb (bad) out movsb sub jbe push shr cmp (bad) add xchg sarl leaveq loopne cmc jne cmpl adc rcll test xchg (bad) in jo mov cmp int (bad) je sub loop xchg std lods movsb retq pop addl movsl add loopne cmpsb sarl sub mov movslq add sbb (bad) out fnstenv rex.WR rex mov mov add jne nop rex.WRX ffreep addb fdivl xor (bad) adc cmc add fcom pushq rol xlat push rex.WR gs ds push (bad) (bad) cli mov xchg sub sbb jns sub pop shr xor (bad) test add stos xor rex.B fsubs test xchg mov (bad) (bad) lahf ds pop rex.RB stos rex.W cmp icebp sahf iret nop xchg shll sbb (bad) xor adc xor cmp (bad) add (bad) (bad) jbe cli rex.X test lods rclb shl (bad) sti xor rex.RB test test shll fistpl xchg sub push adc movsl mov int xchg cli mov jmpq and shrl mov rorl rex.WRXB add movabs sub cmp lret (bad) (bad) cli adc jb std xor rorl mov (bad) push (bad) xor imul (bad) (bad) in repnz sbb mov shlb outsb stos rex.WRXB jge mov (bad) rex.WRB loope (bad) sub add in imul mov mov push shl (bad) mov adc pop add xor rex.W mov insl gs es jbe xlat int3 callq pop (bad) popfq push loop ffree fidiv pop mov leaveq (bad) sub mov push sahf fs lret fcoms ss (bad) xor adc mov jl xor cs cmp add ja (bad) stos rcr xchg pop outsb retq lret movabs shrl mov sub add adc mov scas (bad) retq cmc (bad) rex.WRX sbb add movabs (bad) jmp jnp fldcw cmp xchg shrl mov push mov sub rex.WRX and sub idivb enterq retq je test popfq pop in (bad) adc shlb and pop icebp imul xchg roll nop adc jp (bad) jo push movslq fcmovu pop (bad) xchg add hlt pop cmp sub repnz testb nop andl xor enterq sub mov ja test cli mov cs push push (bad) pop adc pop mov imul gs add (bad) insb mov (bad) in mov xchg mov rcl out mov js push movsl (bad) xor push cmp lret addr32 (bad) mov rcr cmp pop mov (bad) (bad) hlt xor movabs imul (bad) sub sti (bad) (bad) stos jmpq xchg rol pop and jns adc sahf scas jg add (bad) adc mov pushq hlt cmpsl xor rex.WRX sarl cwtl mov cltd mov (bad) push movslq mov cmp je adc xor rex.RXB rex.RX lods movabs cqto fisttpll mov xchg and outsl shrl xchg cmpsb or movslq adc push pushq outsb rex.X fisttpl mov insl or ficoml stc jrcxz and rex.WX cmp roll rex.XB xlat xor (bad) out add (bad) and (bad) mov hlt lahf in xor rcr fwait xchg movsb rcl imull fadds xor add mov xchg jns rorl jmp mov sti (bad) mov or lahf xchg rolb rex.RX add (bad) rex.WX rorl (bad) js pop push out (bad) mov sbb or fsubs adc movabs cmpsl rex.W xchg mov (bad) pushq movabs loope or jno cmp xorl mov es and stos (bad) and lahf loop or push (bad) movabs (bad) lret mov rex.B gs jp (bad) mov xor rolb jbe (bad) (bad) sbb sbb mov jge pop or mov push cmpl retq movslq push (bad) sbb xor pushq nop je int3 xor or loope jae div rex.RX push int3 mov xlat mov movsl xor loopne leaveq or sub js fildll lods sahf jno jmp rex.RB mov or push ja sbb je retq neg rcr rex.X mov xor mov (bad) rolb sub (bad) (bad) mov fsubp mov ficoml jmpq mov loopne cwtl (bad) loope nop cli lods pop rex.WR jne stos cmp xchg fldl insl pop movsl mov mov (bad) xor callq mov rcll popfq (bad) lret movabs sub cmpsb rex.RX retq jae xor pop pop sbb xchg or sbb loope or sub retq retq cmpsl add data16 rex.R mov movabs enterq jnp cwtl int mov add (bad) movslq loop sahf (bad) out fsub movslq clc cld rex.WB flds shll xor sub rex.WB subl rorl decl mov sub (bad) lret (bad) or adc xchg test xchg or (bad) subl loop lock add add cltd cmp imul (bad) sbb add and stos pop ss sbb rex.RB faddl es or rex.RX sub enterq adc cmc rex.WR (bad) test sub xor cmp jae rex.WRB lock pushq repnz mov outsl rex.WRX int3 sub jno (bad) out or lods out (bad) push mov jno movabs loope in xchg out loopne and lahf loopne repz test jbe sub ficomp cltd imul shll jrcxz adc (bad) mov (bad) push and leaveq adc sbb jbe (bad) jmpq add or jno xchg or cld cmp and adc push rorl orl jno rex.WX shll fs sub (bad) mov (bad) sbb (bad) jle rcll out sbb shll (bad) enterq rcrl pushq mov sub rolb js rex.RX shl push lods pop loope rex sub lock rex.WXB adc and ror test test xorl cs cmp loope add and stos mov or rcrl movsb or xchg rcl cmpsl pop (bad) rex.RX and mov gs (bad) (bad) rex.WB ffree loopne adc adc fwait (bad) fidiv xor gs (bad) sbb and lret (bad) (bad) jmpq (bad) outsb (bad) (bad) mov movslq jp vmovdqu retq mov fldt rex.WR clc loope rol es (bad) and inc sbb sbb iret shrl (bad) rex.R popfq and or jmpq jne lret lret movabs movabs stos callq push clc in xor mov sbb test pushq (bad) outsb and rex.WRX add xlat rex.RX rorl fdivrs outsb mov mov mov jp xchg insb (bad) (bad) add pop sub icebp rcll (bad) cmp mov xchg pop cwtl shr (bad) rex cmp xor in rex.RXB popfq rex.B sub mov mov sbb (bad) or (bad) cwtl jmp push (bad) jb cmp sar xor fs (bad) (bad) jg sbb xchg lods jge pushfq xchg pop (bad) shrl add imul push scas int3 pushfq rcrl cld (bad) in out (bad) out xlat fstpt out (bad) sub rex.WRX rex.R pushfq roll mov push je rcl push push iret push enterq (bad) pushfq push lret (bad) in outsl rex.R push (bad) sahf sarl je mov in imul (bad) and xchg movabs mov rcl rex.B sbb fcmovne int subb movabs push vmovaps (bad) adc cld (bad) (bad) stc fildll sar jl jne and rex.X vpsubusw (bad) sub jb and test jbe fs fldt in in push int push callq es or orb rex.WRB insl rex.XB test (bad) es xchg sti movslq adc rclb cmp (bad) (bad) out sarl or movsb add int ljmp (bad) add (bad) repz pushq rex.B pushfq xchg adc fdivrs jae push jns movabs mov rex.B cltd rcrb vfmsub231ps je xchg popfq add xchg (bad) mov push mov cli mov insl cmc movabs jo,pt add xchg addr32 and outsl lea pop jmp fldenv int test rex.X (bad) enterq in or mov xchg rex.R jl and sbb push push orl cmpb ror mov add add add add test (bad) (bad) cltd mov movabs in (bad) push rex add mov fmull ja sub push out rcr (bad) xchg rclb sahf shrl outsl (bad) (bad) jno scas (bad) fcmovne enterq in (bad) pushfq or movabs scas ss (bad) mov mov (bad) out (bad) fcoms xchg add xchg xchg sarl jbe adc push cmpsb rcrl mov movsb (bad) enterq xchg mov fstpt leaveq adc (bad) pushfq lods add jae data16 scas movabs push mov and test repnz (bad) retq mov mov repz sbb (bad) xor push (bad) repz or mov xor addl enterq scas imul push add loope enterq pop mov xor fs iret clc pushq retq out push and roll jbe add in subl roll mov test sub jb test rex (bad) (bad) js je rex.B pop push mull pushq add adc jno iret movsb (bad) scas rolb shll (bad) cmp fdivrs sub mov (bad) lods sub xchg lods cmpsb out sbbb cltd fisttpll (bad) pop xchg shr (bad) enterq (bad) cmp add scas mov mov jp xchg xchg rclb rex.WRX jns mov and in ja rex.WB movabs add (bad) rol notl pop and callq pop xor add in sbb jle add roll in mov rex.X enterq cli out jmpq rex.XB (bad) add iret xchg std pop ds insl retq rex cpuid cmp (bad) test sub jp sahf repnz sub scas push sbb rex.R out adc fmuls xchg (bad) xlat rcrb mov mov and fs (bad) rex.WR cs mov fs (bad) mov pop sub retq mov (bad) mov fmul movabs sub xchg lret add jno mov (bad) faddp cmp (bad) lock (bad) xor (bad) add rex.WRX pop outsl push (bad) mov (bad) jp (bad) (bad) sbb insb icebp rcrl gs pop movabs add in popfq mov shrl (bad) enterq push (bad) add lret rex.RB repnz insl xor rex.R sbb mov rolb lahf jle rcrl iret std add xchg nop (bad) negb mov push pushfq rex.RX fstl (bad) cmp rorl stc pop (bad) add add fsubrs add cmp lock sub fldenv rex.WX lret push movabs out callq rex.X mov sub sbb rex.WB sarb shrl lret loope jmpq lret fidivrl shrl push pushq (bad) es add add (bad) lods mov outsl (bad) jne cmp jrcxz push cmc xchg sti (bad) mov loop add xchg or rex push pop sub or mov (bad) xchg adc jns xchg add std mov psraw orl cmp lods (bad) scas cmpsl rex.WR add rep fdivrs xlat int sbb (bad) repnz mov out imul retq jg and retq test (bad) int3 (bad) ss popfq insl div jbe (bad) mov adc (bad) (bad) rex.WR rex.W roll clc movsl (bad) jno sub adc lret test sub cmp int rex.R rex.XB jae sarb pop or mov loopne nop mov shll sub xlat test ficompl lock out lahf pushq fcmovbe divb add xchg fstps (bad) fucomi sub dec cwtl lret push enterq (bad) (bad) add hlt imul push js in retq cmp push add mov rex.WR mov rex.WRB fwait retq rex.WR mov pop xor add cmp sbb mov add add jmp shrl jmp (bad) rex.WB lret pop xchg rex.B (bad) out add xor (bad) cmc add repnz int3 sub faddl test rex.WR sub sub shll or pop sbb ficom jo (bad) rorl lods mov movsl xchg rex.X incl (bad) rex.B sub xchg stos testb ds test scas (bad) lret push sub repz sub icebp jae cmp callq pushfq mov std scas pop movb add mov cwtl icebp es (bad) adc rclb cmc stos (bad) add add xor (bad) stos jbe mov add shll out add mov (bad) cmp shrl test and sarl rex.W fcmovb mov test jns test pop rex.W rex.RXB cld jnp fwait incb xchg shll and mov lea leaveq int cmp lahf add rex.WRX jmpq add and sub enterq cmp adc cwtl xlat rorl enterq iret movabs and enterq mov jle jb (bad) in or jno rex.RX (bad) loop cmp sbb fisttp out (bad) push (bad) loope mov cmpsl rex.WRX (bad) jle repnz movabs sahf xchg pushq int3 pushfq shll fwait sub pop sub (bad) (bad) iret lret hlt mov (bad) xchg jmpq cmp callq (bad) lock or cmp sarl in jns fs xchg mov push mov (bad) scas roll js out shrl std rex.X loope outsb (bad) cmp (bad) jb fs rex.R push out test cmc xchg mov (bad) jno addr32 shrl cltd mov (bad) movabs in jrcxz sbb and out jge sub mov addr32 add sbb add shrl sahf movslq imul pop rex.W push sbb cmp (bad) adc jbe cltd xlat movabs xor stos mov adc sub rcl repnz imul sarl imul sub fistpll xor lea fdivrs add (bad) mov lea push xchg jno xchg mov rorl push in enterq fidivrl sbb cmp callq rorl (bad) (bad) ja rex.RX and jo jrcxz jl ffreep (bad) mov (bad) mov sub cmp cmpsl iret negl (bad) lret push add enterq jne outsl or (bad) gs ror in add loope rex.WX (bad) fistp sub and (bad) insl ja leaveq xchg jg ja sub test test (bad) scas (bad) (bad) movabs xor (bad) stos adc pop xchg (bad) jrcxz out add pop cmp xchg adc test loop push jmpq add out enterq jo int3 pop (bad) fsubrs movsl or cs fistp outsl pop sbb add imul (bad) (bad) repz cmp (bad) xor repz loope rcrl fildl sub jae and scas test mov movabs fcmovb rex (bad) (bad) sti cmp rex.WXB rex.R cmc rex.WXB (bad) pop and test movslq (bad) (bad) xchg xor in mov clc sub (bad) hlt negl mov rorl sbb add fbld in rex.XB gs jp sub es or rex.RXB outsl xchg jb lock int3 rex.B (bad) lods and shrl jp (bad) std rex.XB (bad) outsl (bad) adc pushq test addr32 rex.R out mov pop gs cld cmp je out pop cmp and (bad) sar rorb roll (bad) insb repz push sbb adc test test rex.WRX cmp addr32 loope push imul ds (bad) shl out iret adc xchg cltd (bad) lahf mov ja loop rcll add pop add add in or in lock enterq (bad) push (bad) lods sbb incl xchg push popfq shrl (bad) repnz sub xchg (bad) fwait jno jge xchg int3 movabs clc xchg rorl or and sarl lods jp insl rex.WRXB roll xchg out rex.WR xor lods rex.WRB test (bad) cmp xor rex.X lea push out shll pushq cli rcrl icebp xchg rex.RXB jp (bad) int3 fadd iret sbb movabs sub cmp adc mov mov jp rcrl sbbb test popfq add outsl lretq xlat int sbb popfq mov in push cmp lret pop stc test (bad) mov add adc cmpsl (bad) (bad) (bad) rex.WRX rorl xchg add rex.X pop and add callq int3 nop mov add scas js mov outsb mov cmp fdivp rex.WX mov fwait (bad) cmp in insb (bad) (bad) jp sub pushq xchg or add sub rex.R rex.W adc sahf loopne add add mov lock mov (bad) (bad) rex out (bad) inc cmpsb imul (bad) int mov cmp cld xor xchg adc stos jne or (bad) es jmp (bad) enterq rex.X mov (bad) xchg int3 add rex.R fildll (bad) icebp cli je rorl mov (bad) jmp rex.WR loopne mov iret rex.RX fidivl xor icebp rex.WX out je divb (bad) (bad) (bad) xchg rex.WRXB loop (bad) cmovp rex.WRX out enterq pop mov shrl shll rex.WR lret fwait jae xor cwtl movabs sbb js loopne pop pop rex.WR xlat (bad) outsb div vshufps push movabs subl mov retq js and rorb sbb popfq rol rex.XB jnp add xor lock xlat cmp repnz outsl xor and rex.B shrb rex.WR sub fiadd rex.WRX jnp xchg in int mov ja out ficom xchg popfq imul stc push mov (bad) sar mov (bad) and or retq mov sarl cmp int3 (bad) add scas icebp cmp (bad) (bad) mov fbstp and jae rcl and fs js push rcll (bad) xor sub subl rex.WX ja (bad) movabs int3 movslq sarl jne repnz jno jmpq std mov xor shll sbb adc (bad) shrl (bad) (bad) mov rex.WRB (bad) in mov adc cli push cs test fsubs jno adc cld imul xchg scas in sbb add xchg rolb flds roll (bad) loop rex.W cmp (bad) mov (bad) movabs cmpsb push (bad) popfq loopne sarl callq xchg xchg fsubl xor (bad) and sbb adc xor jne adc movabs jg mov popfq (bad) rex.WRX int movabs cmp test adc push sahf mov rolb sbb (bad) test shrl test callq and (bad) data16 jbe sbb retq xchg xchg mov fldl rex.W (bad) sti stc mov xchg fildll (bad) (bad) push loopne enterq xor xor (bad) or (bad) out (bad) rcr cmp sub (bad) and in loopne sbb sub mov addr32 clc add (bad) mov retq icebp and pushq fst (bad) cmp xor xchg clc xchg (bad) (bad) notl push shrl xor add and int loopne sub icebp movabs xchg lock (bad) cmp sar push (bad) repnz je xor icebp mov movabs mov rcl insl jne cld pop scas add fwait lods mov xchg rex.RX movabs loope out (bad) movslq mov (bad) lods (bad) xchg adc jb adc in insb push rcrl jno sbb cmp stc movabs mov (bad) rol pop sub (bad) xchg (bad) roll faddl and sbb iret mov and movabs fwait rol outsb fnstsw retq mov mov add insl (bad) or rex.RB rex.B xor and cs callq (bad) jmpq cmp (bad) frstor (bad) int sub pop xchg or loope pop test xchg clc sbb (bad) or mov rex.WR adc xchg movabs movabs retq rex.R adc pushq in cld (bad) and fwait sarl jl movabs insl movslq (bad) out rex.RX and out mov insb retq int sub add sbb rex.WB lret fiadd and rex.WRX shl nop cmp sub std fistpll cltd push (bad) jbe xor xchg or adc xchg sti repnz js roll jl add (bad) lret cld pushq movabs cmp iret test lret jp mov rolq or rex.R rex.WRX cli xchg insb rex.WRXB xchg loop mov shrl mov cs retq rex.W rex.WR (bad) mov out (bad) mov repnz jb stos and pop callq rex.RB mov shlb (bad) pop (bad) lock sbb jl icebp (bad) push rex.X int3 rdtsc mov xor jp outsb sarl mov mov pop gs lret int3 pop mov xor fidiv (bad) enterq or cmp insb mov sti fs cmpsl pushq fidivr mov rex.R enterq xchg mov sub callq cld cwtl retq mov rex.WRB cmp (bad) jg mov adc out (bad) repnz xlat cmp cmpsl (bad) shlb sub (bad) outsb rex.WRB jbe rex.WB out addr32 or add jne xchg ss (bad) js (bad) lret or loopne pushfq jmp gs mov outsb or (bad) and fcmovnbe jge int3 cmp (bad) (bad) xor jge mov xor rex.XB sub in out (bad) fst and pop sub pushq push add pop hlt xchg xor xchg mov cs shll flds rex.WRX repz test cmpb sub sbb xor fistp or mov loop sub enterq pop addl xcrypt-ctr cmpsl pop (bad) repnz add test (bad) sub sub rex.WRX rex.WB pop movsl xchg xchg lret movabs rex.R pop (bad) or rex imull imul out fadds sub add add (bad) insb addr32 add sub or std (bad) push (bad) insb jns cmp xchg notb rex pushq cmc pushq and ja int lock rex.WXB enterq sub cmp cmp mov loop adc rex.WRB add rorl fdivrl rex.WXB movsl jmpq mov sbb pushfq loopne mov in push int3 (bad) jae sbb add push test adc and jno pushfq push (bad) cmp fadd mov clc pop rex.XB rex.B lock pushfq jb cmp xchg enterq and sub popfq and jb enterq vshufps cmc rex.XB xchg shl js xchg sub jle sub add repnz xor push clc mov xor mov fstp movabs xchg movabs inc callq (bad) xchg pop mov and movsb sub xor (bad) (bad) (bad) and lret cmpsl repz jg cwtl push (bad) repz jrcxz roll sub rcll (bad) ficomp xchg push jns (bad) jbe sarl pushq out mov add sbb inc cltd pop rex pop (bad) sahf (bad) rcrl add rex.RB cmpsb xor test mov xchg insl repnz xor rex.WRXB ja (bad) (bad) sub es rex.RXB xchg and or (bad) cwtl pop shrl (bad) jb xlat scas hlt stc test sahf pop push int rex.WRX pushq stos test repz sub fimull pop shll jg movabs (bad) mov and pop add xor addr32 js (bad) jle mov xor nop roll adc std out add fimull sub lret pop (bad) sar shl rex.WX (bad) (bad) jg mov cmp lret (bad) push pushq sbb bnd (bad) clc lea (bad) rorl xor gs (bad) mov jae pop (bad) (bad) and cmp ja mov add scas sub xchg mov fsub xchg cmc test xchg cmp (bad) subb jrcxz cs (bad) and (bad) jno cli enterq pop add cmpsb adc fucomip mov (bad) roll cli jns imul mov sbbb int insl push movabs jg xchg (bad) mov jge mov cmp mov push rex.R rex.WRX movsb xchg add iret pinsrw (bad) cld imul (bad) rex add lods and rex.B lods jge adc fiaddl movsl mov repnz jns jp add rcrl hlt cmpl xchg mov xor sub adc sub test test js ja fdivl test sbb es lret adc cltd push mov and movabs and mov mov add nop add in push xor testb hlt test repnz cmpsl std xchg movsb (bad) add adc fdivrl sarl cmp rorl rex rex.RXB xlat jp lret movabs (bad) rorl mov mov cmpsb mov cs loopne (bad) xchg cmp fs stos pop (bad) out (bad) ss shrl rcll (bad) imul or jge pop (bad) rex.WR rex.RXB iret fs jno add cmpl (bad) in pop imul rex (bad) cmp (bad) (bad) cwtl in sub andb ror jge pop or (bad) (bad) rex.WX mov lsl (bad) test (bad) (bad) ficom pop and (bad) jno add fcmovnb jb (bad) stc pop and mov or insb fsubl and rex.WR fadds add icebp es or xchg adc (bad) pushq push cmp rex.WRXB rex.WX ror pop pushfq mov (bad) pushq rex.WR cmc (bad) and mov (bad) sti (bad) mull rex.RB roll rex.XB in repz xchg add out (bad) callq je mov (bad) rex.X cmp or (bad) xchg rex.WB fwait addr32 or sbb fmul rex jae sbbl rex.WRB lret rorl cs (bad) callq int loop insl rex.WX (bad) xor (bad) imul (bad) ficomp movabs push movabs shl xlat gs rorl (bad) divl bnd leaveq shr lahf add movabs lods shrl insb movsb cmp repz enterq cs rex.WRXB rex.X rex.WRXB (bad) or (bad) pop ss cltd mov rcll icebp pop pushq rol and rex.RB mov rol push loopne test rex.RX (bad) mov rex.B fidivr rorl cmpsb add add xor pop mov mov shrl push add mov shll callq movabs xchg xor jl stos rex movabs jne gs xor andl lret in retq adc pop (bad) ss (bad) rex.W fdivl mov rex.W stc rex.B bsr xchg (bad) loope mov xchg insl xor out jno (bad) dec test cmpl mov xchg mov jp test jbe rex.WB (bad) out xchg ss in out lret xchg repz (bad) xor mov fs adc (bad) lret pushq pop movabs jns imulb retq shrb rex.WR fwait jne add (bad) mov mov (bad) testb push adc fstl movslq (bad) or (bad) xor (bad) pop xchg add loop fistpl int sub (bad) pop xchg pop mov pop std out or jae orl or cld rex.WB xor push popfq mov mov add enterq (bad) (bad) mov lcall rex.WRXB movabs jno jno,pn jae sarl adc fdivl add sub movsb (bad) repz fadd jbe (bad) mov cmp fs stc fwait (bad) lods and mov sub cmp push js cltd iret (bad) xlat mov rex.RX push sbb js out leaveq add sub adc adc mov pop jg push cmpsb rex.R or icebp adc movabs fstpl pop mov mov pop sbbb pop (bad) loop mov cmpsl lahf stc (bad) pop pushfq pop and rcll (bad) sbb mov imul mov rex.RXB fwait cmp sub sar add ss (bad) xor je hlt xchg and js rcll rorl fidiv pushq jns neg loope (bad) movabs (bad) retq loop lock scas movabs pop rorb and pop pop stos cli and sub cmp (bad) pop rcll leaveq mov (bad) testl adc rex.WR rex.B rex.WRX sarl scas leaveq push mov jbe cmpsb xor shl cs jg ffree std fwait xchg cmp repz mov push cmpsl movslq (bad) cmp xchg pop mov sarl cli rex.B rex.WRXB jne (bad) and divb add xor scas outsb sub int int add mov xchg out rex.WXB rolb rcll sub outsl (bad) xchg (bad) scas pushfq lods cmp jp rex.WXB outsb icebp cmp (bad) lods mov jnp fnstcw jne xchg outsl rex.B scas mov decl add (bad) or test fdecstp pushfq comiss adc xor mov shr test jl in stos mov pop adc mov push (bad) and xor pushq jge add (bad) push movabs jno xchg fcmovb adc rex.X sub xlat and push fmuls mov xchg xchg (bad) cmpsl lret cmpsb (bad) push (bad) rex.B lock pop pop mov in adc sub jnp rcl (bad) xor scas fs mov (bad) pop repnz pop jne jbe shrl add mov xchg mov (bad) xor (bad) cs jg out icebp sub cmc (bad) outsb or xchg rex.R cwtl movabs icebp ja rcll movslq lock push adc cltd cmp jae shrl rex.WB or roll xchg add sahf iret pop rex.W xor jb sbb cmp shlb retq xchg (bad) xchg sub xchg (bad) pushq rex.WX fsts movabs test adc and sub rex.RX data16 (bad) mov retq rcrb cmp out add pop mul jno shlb (bad) mov adc or pushq sub addb rex.WX xchg jns mov test rex.WRB add (bad) (bad) movsb shl xor pop rep cltd outsb (bad) iret xor mov and pop shll shrl shrl and add movabs pop shll movabs rcrl (bad) stc (bad) lret rex.RXB push in pop rex.RX sbb rex.RX adc push out out lret iret sar movabs cmp rex.WXB mov adc push rex.WR addr32 adc insb (bad) (bad) mov fdivrs (bad) rex.WRXB xchg (bad) int leaveq (bad) lock rex.RB jle pop add mov lret adc xchg roll adc pushfq callq rex.WX xor outsl push loop (bad) jl andl mov rex.X test fidivr lahf xor cmp (bad) xor adc fisubl cmp pushq fsubrs idiv and adc lods shrb out jns or (bad) (bad) (bad) negb stos callq nop rex.XB cs jo xor out lods fcmovnb sbb es movabs cli hlt lods (bad) rex.X mov adc (bad) int popfq fcoml push (bad) xor mov mov (bad) push and mov cmp outsl (bad) jns mov (bad) pop (bad) shrb fldenv in fdivrl and jno mov adc repnz push imul xlat xor add (bad) xor jo fwait or insl push push test fstpt xor sbb loopne mov pop sbb rex.WR retq adc sarb fs loopne (bad) je add or (bad) (bad) cmp movabs xlat rex.W rex.XB rex.WXB idivb push sbb lahf xor jb lock fwait jne out and pop sahf gs data16 rorl (bad) sbb (bad) jns test lea jge cmpsl rex.B sub add ss sbb and callq cltd mov xor sbb jrcxz push gs out rorl xchg cmp rex.RB stc rcl mov cmp mov and mov (bad) (bad) loope data16 add movabs hlt outsb fldcw icebp or sbbl cmp xor (bad) or pushfq pushfq jp (bad) out mov mov lcall roll xchg (bad) lahf (bad) sbb cmp rex.B push mov add test cmp xchg pop (bad) sarl in rex.WB adc fcom out iret jl stc clc rex.X rex.WR rex.WRB xor mov mov rex.WRX rcll add test (bad) lret push or add (bad) pop mulb adc movabs clc (bad) sub add sub and mov fldt jno add xchg xor add (bad) sbb fdivrl cmp in add rcrl jle cltd pop cmp retq jbe xchg jl,pt ss push mov ja (bad) mov jb pop outsb (bad) test sahf js repnz or (bad) data16 es icebp imul (bad) lods int adc adc in sbb adc add or shrl cmp adc pop sarl insl sbb xchg mov (bad) rex.RXB mov xchg or divl jl (bad) in or gs ja rex.XB shll adcb add in sub (bad) rex.B jno repnz pop andl repnz rex.W out (bad) (bad) sbb clc scas int divl ror in pop (bad) cmc cld ror retq idivb or and outsb push enterq pop rex.WR shrd ffree and shrl xor sub and cmp lea or (bad) xchg jmp rolb and sbb rex.B mov sub notl lret int fildl movabs mov imul adc nop adc int add shll and lea (bad) sti (bad) movabs and sahf shrl callq int3 lret sarl xlat lea in (bad) jge shr stos add (bad) (bad) sbb jno (bad) movsl push add insb mov xlat mov fwait decl (bad) adc imul lahf rorl (bad) in xor movabs rex rex rex.RX jno imul pop ror icebp push scas fidivrl (bad) imul sarl icebp or (bad) or pushfq (bad) jnp mov mov adc nop adc pop (bad) jns or and and fcoml mov adc leaveq (bad) sub (bad) pop (bad) (bad) cmpsl pushfq rex.RB je pop (bad) imul repz sahf mov (bad) (bad) (bad) (bad) lret cmpsb xor rex.RB out roll pop pop xor loope (bad) fnstsw sarl (bad) xchg (bad) (bad) popfq pushq rex.XB sub imul jae outsl jrcxz flds xor js push mov leaveq push cwtl fcmovnb (bad) movsl (bad) enterq (bad) mov (bad) and iret jo movsl fwait iret cli lock mov (bad) movsb fdivrs je loop cmpsl cmp fbld push and outsb (bad) stos or cmp xor (bad) mov sbb or repnz jle movabs sub retq ds pop scas (bad) test outsl adc add mov jne mov sub in sti cltd test add (bad) testb xlat or int (bad) (bad) xor (bad) rex.WX cmpsl iret sbb sbb (bad) (bad) jo addr32 mov sub rex.W pop (bad) sbb sub test cmp xchg mov addl rcrl out rex mov adc cmpsl nop loope xor (bad) sub hlt jge (bad) imul jle sti mov cs movsb mov xor repnz (bad) and je movabs shll push adcb fnstcw lods and pop iret rex.WB cld (bad) mov in (bad) adc loope movslq movsl (bad) sbb faddp jns adc clc jge ror mov in pop adc lahf cmpsl movsl or loope cmp fistpl (bad) repnz sarl xchg in shl mov ss sti or imul xor out int3 rex.WRB retq gs shl adc js loope (bad) fwait (bad) ss xchg (bad) mov fstpt in repnz (bad) in rex.RB sub xlat movabs vmaskmovdqu cmp and rex.WXB shll (bad) jns mov (bad) ja movabs int3 (bad) push pop and mov sbb rcr cwtl loop sub out (bad) pop movabs lock mov rex.R lret stos mov cmp enterq adc imul icebp (bad) pop mov rex.RX xlat movslq (bad) cwtl pushfq loopne (bad) pop ds jb jmp add lea int test sarb testl (bad) (bad) retq (bad) test adc sbb xchg stc loopne (bad) ds mov add int3 lods xchg movabs mov div xor push popfq rcll int3 cmpsl add jo push (bad) rex.RB (bad) fldl or cmc or movabs imul add xchg (bad) fldt vpand lods mov rex.RB or rex.RXB rex.WRB xchg cmpsl rex.WRB test jmp xor jae sub xor in xor (bad) or rex.R out and push mov cs (bad) (bad) hlt mov movsb adc cwtl sub pop rex.WX (bad) rex.XB rex.WR sbb test int3 fsub mov mov pushfq (bad) and and iret enterq (bad) adc clc out icebp std rex.XB test jno cmp lret mov movabs sbb or retq es rex.WRX jno sbb cltd cmpsb and jmpq sar push push (bad) lock adc cmp (bad) push (bad) sub sub outsl or rex.RX sbb and lea mov testb add pop pop incl lods in out test push shl sub (bad) mov outsb rex.RX shrl retq mov and insl mov loop sarl jmp push enterq xor lret icebp cmp adc xchg je (bad) xor clc mov sub push add mov test notl pop loope cltd (bad) xchg jns mov mov sbb cmpsb pushfq lock fldenv mov xchg scas loop cli xchg in cs or mov xchg push (bad) fisttpll (bad) mov sub sti jl or pop cmp (bad) push rex.WXB pop cmp cmp (bad) repnz rex.XB callq adc out push add or addr32 fdivrs rcrb movb nop jo (bad) add push rex.RB add jnp mov xorl rex.WR jl loop adc rex.WX (bad) rex.WRX repnz sbb sbbl (bad) testl add pop fisttp (bad) repnz fnstenv (bad) fstps ja xor int (bad) movsb je pop (bad) jb xchg cmpsb push jle insb (bad) cmc and sbb out add cmp loopne (bad) pop repnz repz push pop rol or (bad) fisubrl (bad) add mov pop and (bad) lret test retq cmp loop mov lods mov (bad) mov movabs jg leaveq int mov (bad) repz lock repz (bad) pushfq add insb jge add test loope xor in sarl xchg shll add (bad) (bad) test in cmp fldenv rex.WR fs pushfq (bad) mov loope mov add jne std xchg stc add push sar test jle adc xor and imulb or xchg jg js jns sub ja mov rex push (bad) nop stc test (bad) jg push mov outsl mov cwtl (bad) lret pop (bad) (bad) mov lock shrl (bad) adc jne xor rex.B and rex.RX mov lahf gs imul cld fwait pushfq add sub mov jg jne stos mov (bad) enterq lea xor rex.B rex.RX mov cmp retq (bad) sbb (bad) divb (bad) push jbe rcll cmp (bad) lock or fcoms (bad) sbb xor mov (bad) mov or leaveq outsl mov add inc test sub and mov rex.WB add cmp out (bad) mov mov mov rex.WXB mov fcomip add sbb shlb jl add outsl xchg scas pushq mov ficom (bad) or cmp callq (bad) enterq cmp lret (bad) xchg and xchg repnz loope repz mov lods cli (bad) and rex.WXB (bad) out adc or sub adc lcall fcom sarl (bad) pushq loop push push vpextrw (bad) lret rex.RXB rcll rex.RX in and fcompl mov fs mov xlat and pop lahf repz enterq (bad) (bad) shl xchg stc (bad) cwtl roll (bad) roll movabs (bad) lods stc cmp mov sar xor test rex.X popfq mov roll jge cmp out push rex.WXB pushfq lea sub mov shr (bad) xor mov rex.WRB or movslq cmp movabs or mov es fcmovb jl out shrl gs mov rex.WRX test (bad) cld and (bad) repnz lret mov ds lahf push (bad) outsl (bad) mov jg add mov mov cmp movabs cld (bad) mov mov (bad) jns (bad) push roll in fnsave cmc (bad) push rex.RXB rex.WRX fwait (bad) jno out mov pushq sti mov sub or pop (bad) (bad) cs out (bad) sub (bad) jmpq lret cwtl hlt insl pop add (bad) mov push pop mov lret mov repz adc sub mulb sub pop rol in xchg mov int3 mov movsb sub adc (bad) in or (bad) push rex.WRB rex.WXB pushq (bad) rex.R fcoml mov or or jrcxz lock (bad) callq jne iret int cmp sbbb test xorl pop pop pop test fsubr pushq pop callq or (bad) sub mov xor scas and rex.RXB push xchg push mov adc jb jne adc pop repz mov mov int movabs mov or and (bad) xor mov xlat (bad) xchg hlt ds movb (bad) rex.RXB and sbb cmp add scas rex.WX imul je pop loopne jne stc icebp test cld xchg cmc mov clc outsl (bad) (bad) testl rex.RX repnz xlat sbb (bad) cltd xor or movsb adc pushq leaveq movabs retq (bad) jne movsb pop fdivrs xlat rex.XB mov jmp test (bad) out sahf frstor (bad) rex.RX cld cmp loopne cmp stc notb add jrcxz mov push rex.WRX (bad) data16 add (bad) xor cmpsb jge jae cmc shll (bad) jle testb pop outsb cwtl test (bad) cmp shll cmpsb fsts (bad) outsb rcl (bad) (bad) xor sar xorb (bad) lods lret (bad) xchg lods (bad) mov sbb stos movabs imul jle pop (bad) iret cmc pop loope orl (bad) push cmp jmpq add xor xchg jb (bad) sbb scas ror cmp rex.X cmp (bad) repnz mov roll rol adc xchg mov fwait cmp jbe (bad) (bad) xor popfq clc (bad) (bad) lret shrl cmp fsubl mov sarl mov (bad) mov sub pushfq ss stc rex.WXB cwtl mov cmpsb imul rex.RX scas jbe in cmpsl cmp int addr32 (bad) mov mov sarl sbb (bad) xchg push (bad) or out (bad) lea fnstsw and sbb sub rex (bad) stc in test (bad) pushfq (bad) (bad) rex.RXB rex.XB rcll (bad) test loop jg mov (bad) jns or xor sub hlt rex.XB sub test testb imull xor fldl push or pushq rcll cmp (bad) out mov cmovne mov shll je push ljmp mov (bad) int3 ficomp test movsb es adc add push (bad) xchg jb scas insl rcr rex.WR rex repz xchg or sahf jrcxz jo adc ja movslq jg sub add adc sbb rex.W rex.WX mov push cwtl inc rex.WXB rex.X rex.WB gs rex.WRX jge fldl (bad) cmp jmp cmp sbb sub clc (bad) scas (bad) fistl (bad) xor push rex add movsb hlt jle mov xchg js rex.WRXB lret movsl (bad) jl adc jle push cmp clc ds (bad) loop faddp pop mov rex.WRXB mov shl (bad) cli lock adc and xor (bad) xchg js sarl shl (bad) test jns lret jno rex.WXB rex lret fsubp xchg es loope jp mov test shl mov jbe rex.RB repnz cld fmul (bad) pop (bad) lock stos jne rex.WRX rcrl cltd rol (bad) push mov and (bad) (bad) in (bad) repnz add cmp movabs out rorl data16 jmpq sub add shrl mov in cmp rex.R callq loop sub jns roll (bad) repnz out movslq (bad) push or jg stos jp mov mov (bad) rex.RX rex.WXB pop mul mov lret sbb test rex.W cmc pop movabs adc pop jnp fstpt test xchg in loop pushq in scas add movabs rex.WRB rcr (bad) sar icebp lods push mov (bad) (bad) xor add jae or rol mov jno rex.B xor (bad) mov stos (bad) rex.WRB (bad) inc and mov iret cli mov rex.WR or rex.X (bad) (bad) stc movslq (bad) adc adc (bad) outsl xchg retq ja and rcll xchg movsl sub js test or rex.WRX enterq fidivrl movabs (bad) and add xor sub xchg sbb sarl iret (bad) or mov lret jle adcl test shll push test cmp stos js sbb addr32 fs movabs add lods (bad) (bad) icebp jnp pop fs loopne fdivrl jns xor jbe jb pop test lock addr32 push movabs not (bad) (bad) mov flds cmp shll fnstsw subl (bad) jno test test push lret sub je (bad) cmp testl adc push (bad) (bad) cmc (bad) movb pop out add xchg rcrb (bad) mov rex.R mov push cmp and pop and cmp adc loope rol rex.WRB rcl mov mov cwtl roll popq pushq (bad) lods adc in fistl rex.RX roll cmpsb enterq int3 rex.RX rex.B sub and fdivrl data16 add jb (bad) scas movabs cli pushq mov lahf sbb cmp and mov rolb fidivr pushfq mov (bad) rcrl cmc pop sti shrl in (bad) sub jge (bad) sahf rorl (bad) (bad) sahf cltd mov (bad) or movabs movb cmp dec xor rex.WR fwait cld fldenv vhsubpd fs rorl psubsw cmp (bad) (bad) rex.WX (bad) shll ja shrl or inc in iret orl mov (bad) cmp add cmc int rex.RXB rex.RX in mov push (bad) jnp push loop int3 cmp pushq xor mov mov in fcmovnb clc (bad) xor out sarl addr32 sbb jmp push sub (bad) in (bad) ss insb lods mov rorl fstpl in imul xor rex.WRXB (bad) and push rex.RXB jg adc (bad) lret shll mov in shrl xchg cli (bad) insb or sti rex.R lock jmpq cs mov (bad) mov pushq (bad) rex.XB adc and mov cmpsb (bad) adc and shl mov mov jo rex.XB sar cmpsl sarb adc mov shr add retq outsb (bad) rex.WRB and enterq (bad) xchg push and in lock fistp xor push ror jmpq out retq (bad) rex.WX addr32 push sbb std xchg rex.RXB rex.RX imul push cmp (bad) movabs out cwtl mov jbe leaveq mov in mov rcll (bad) lods pushq mov jmpq outsl mov test jno (bad) push std lea retq mov mov rex.R sti out lods (bad) mov and and nop repnz fwait add jne pop mov adc (bad) sub mov lret jbe rex.RB mov shrl cwtl loope fnstsw fisubrl insl lret (bad) loopne stos (bad) jns mov sbb movabs nop scas (bad) pop cli (bad) sbb lret mov and popfq or sar pushq cli retq mov push (bad) (bad) in sti mov ds repnz sbb (bad) push movabs (bad) xchg nop jle or (bad) jns push and loope loopne cmpsl rex.B rex.WRX jno sarl lea shlb push icebp or (bad) mov push jne (bad) mov callq fs (bad) adcl callq test clc (bad) negl rcll test xchg sbbl (bad) gs and movabs xor rex.RXB or int3 scas (bad) mov jle pushq mov jno (bad) fcmovb rex.WXB cmp and jle xchg mov fsubrl insl in (bad) or sub movabs jno cld xor fstl adc shll movslq mov sub adc lcall (bad) icebp (bad) mov out mov xor lea push (bad) rex rex.WRXB mov shrl pop adc rex.WRB fldenv cs xchg rex.WRX rex.X ds pushq mov popfq mov add cmp (bad) xchg jg and xchg (bad) roll (bad) testl in addr32 int3 shll adc sarl popfq cmp rex.WRXB mov (bad) pop shlb add (bad) mov sar sub imul rex.WRXB stos mov sbb jmp (bad) outsb jbe rcl (bad) add rcr jae (bad) loope add mov mov lahf outsb insb sarl jmpq add jl movslq cmpsb fistp rol (bad) xchg mov sarb pop lret faddl movabs jns cwtl jg fadd rcll mov out jl add imul clc sub xchg pop xor mov push pushq jnp jne (bad) sbb movabs adc nop fisub mov gs xchg adc xadd popfq movsb (bad) stos (bad) mov repnz jbe lea pop int sbb rex.WX and out sbb scas adc (bad) (bad) pop xor jnp fldt rol retq rex.WX mov (bad) sub sub fucom lea mov loope pushq (bad) xor (bad) or xor add sub retq xchg (bad) cmpsb out pop (bad) (bad) shlb xor int and cmpsl sbb or or leaveq outsb (bad) and and out (bad) and sbb push retq or rex.B cltd addb (bad) xchg pop rex.WRB rex.WR rex.RB movabs fsts movsl jne mov loope xor cmp enterq imul frstor (bad) rex.RX sub and cmp cmp (bad) cmpb lahf rex.WXB int add cld (bad) cld push (bad) (bad) outsl movslq xor or jge (bad) add (bad) rcl stos int3 outsl (bad) fst lea (bad) cwtl (bad) jmp movslq or rex.WX (bad) retq jb and icebp rcrl iret add cmpsb data16 cmc or fnsave (bad) lods fcmovu sbb (bad) cmpsl (bad) and pop nop push jle rex enterq or add jmp jno sub sub ja enterq add sbb cmc xchg xlat xor (bad) xor shll mov (bad) sbbl cmp iret sar ss xor mov lret pop (bad) jp cmp hlt rex.R mov (bad) testb movabs rex.WX cmpl and fldenv lock (bad) pop sahf sbb repnz add rex.RB (bad) (bad) mov sub fldenv xchg xlat add loopne rex.W (bad) movslq xorl lret fmull mov pop adc in rex.RXB fistpl mov push add jno add (bad) clc out rex rex.WR lods mov xchg sbb add (bad) or add cwtl xor xlat cmc js callq jns cmp and movabs jno sbb fidiv (bad) sub movabs jno mov lock pop mov repz xchg hlt jg jno test (bad) (bad) rex.WRX in cmpsl adc mov (bad) jno or adc (bad) in movabs jp je insb mov add sbb xchg adc adc sbb rex.XB repnz and sub xchg leaveq (bad) iret and loope js ds stc jp mov sub (bad) xchg adc mov rex.W hlt cmp sahf enterq in rex.WRB lret push add rex.WXB sbb pop js xor lock fs pop pop js movslq and mov sarl out jmp movslq loop setl pop xor repnz mov enterq repnz or (bad) or xlat or icebp out sahf rex.RX push push loope jle iret pop data16 xchg xchg add cli and jrcxz xchg (bad) enterq jb movabs jns xor (bad) orb xchg adc (bad) rex.W (bad) test fsubl rex.WXB and add (bad) fmuls (bad) (bad) rex.RXB cwtl (bad) sbb jle xlat (bad) adc rex.R (bad) leaveq (bad) mov rex.WX rex.RXB out rex.WR pop (bad) stc enterq outsl add xchg (bad) rex.WR or mov popfq mov fldpi pop es (bad) jno orl mov retq sub rex.RXB xchg int3 push cld pushfq fistp (bad) pop adc xchg decb mov imul data16 rex.RB xor or in jb cmp mov lret movsb mov sub loop (bad) rex.WRXB push pop enterq and iret (bad) jb cwtl lods mov cld roll ror stos adc xchg sub roll pop or sbb xchg (bad) out jb (bad) mov jne push test movsl or out insb lods roll sub lret (bad) iret (bad) pushq push cmp out test pop iret (bad) push (bad) and add fnsave mov rcrl (bad) movabs mov rol sub push rex.XB mov enterq pop insb and lret xchg out icebp xchg in not xchg mov (bad) mov loop rex.WX rex xor jmp iret (bad) xor mov xchg jo mov fwait mov sbb cmp jmpq add lret jns (bad) push cmpsl shll mov (bad) movabs adc ror (bad) (bad) rex.XB (bad) add lret shlb movabs pushq add (bad) mov rex.W jbe callq hlt (bad) cmpsb (bad) roll xchg in rex.WX rcrl xchg sar rex.XB jle stos shll sbb xor pop in testl (bad) ds jne (bad) popfq js or loop nop mov sub rcr jne (bad) rex.WX sub sbb notl out rex.WXB cld (bad) xor (bad) fsts scas jle rcll imul sbb push cld add mov (bad) jbe (bad) sbb rex.WR (bad) xchg adc hlt xchg cmp cs lods mov (bad) cmc divl (bad) in (bad) rclb jl (bad) mov push lret rclb fldt or fistp (bad) adc sahf xchg leaveq jg (bad) mov (bad) mov loopne shrl adc pushq push sbb faddp movslq push push (bad) or rorb rcr jbe ror jns notl (bad) xor sub and lret fnstsw outsb (bad) xchg lahf rcr enterq or divb push (bad) rcll sub cmp xchg fldcw and (bad) (bad) pop (bad) roll jmpq shrl xorl push rex rex.RXB loope inc xchg add xchg xlat fdivrp mov rex.X pop leaveq add or shrl out lods movabs rex.WRXB mov and fisubl (bad) fwait jl movabs in sub (bad) iret (bad) jo xor xor mov rcrl roll sub jle pop mov rex.RX pop leaveq (bad) xchg movslq stos hlt test rex.RX movabs mov roll jrcxz and scas rcrl sub rcrl jne lahf (bad) imul mov jge rcrl and xchg (bad) fwait idivl (bad) pop mov icebp mov cli enterq mov popq add ficomp xchg rorl stos cmpl jmpq add lahf icebp (bad) (bad) (bad) or (bad) push in adc pop es repz std and sbb add fdivrp roll pop adc jrcxz loopne push (bad) fisubr fcoml in clc (bad) rorl (bad) mov cmpsl hlt sarb int3 test addl sbb int3 cltd (bad) ficomp cs movabs fsubrl (bad) and push (bad) rex.WX repnz (bad) mov mov adc mov loope sub rex.WRX sub (bad) retq rex.RB rcl or sub (bad) rex.X and cs or in loope add jno movabs lret pop loopne sub imul mov (bad) jrcxz xor hlt add rcrl mov xchg test lock sub (bad) jo jbe retq mov loop (bad) icebp movabs rcll (bad) mov mov add cmpsl lods pop js adc and fistp mov adc popq add pushq test mov int3 mov notl rex.WB addr32 movabs adc (bad) sub neg cmp hlt mov xchg repz movsb retq mov sub push (bad) mov or xchg or sub jae and loope lea (bad) push rex.R cmp cltd (bad) movabs push sub in pushq rcll retq gs pop cmp add shll or in (bad) pop sbb sarl rol sti jo (bad) sbb (bad) jbe add sarl fisub mov xlat cmp xor (bad) and ror sub shl cmp test callq add mov add (bad) rex.R add xchg (bad) mov or sub outsl (bad) (bad) in adc mov (bad) iret rex.XB cmp lret movabs retq cli lahf fdivrl notl mov cltd xchg mov fxch iret rex.WR (bad) (bad) and (bad) ja fs (bad) movabs iret movabs pop lret cltd lret add rex.WX insb cwtl rex xchg cmp sub mov cmp jmp jb cwtl and jl sub cmpl xchg gs cmp jo xchg mov movabs loope or cs roll mov (bad) (bad) stos mov (bad) jge rex.RB (bad) add insl sbb (bad) xchg jg or pushfq and loop ja jbe shlb ds cli sahf or fild xchg sub (bad) iret sbb mov pop (bad) rex.XB shr sub movabs movabs test roll (bad) sbb pop jb xor sbb clc iret (bad) (bad) insl jge stos iret (bad) scas sbbl test ja xor lods (bad) (bad) sbb adc push jb xor shrl test and and xchg (bad) push (bad) es sbb xchg retq pop jo nop add (bad) mov loop push rorl gs repnz xchg (bad) rex.RXB cmp sahf mov js (bad) xchg mov rex.RXB xchg xchg jnp imul (bad) lret rex.WRB or flds in rorl movsl out int xadd jge pop cmp jno fcomps rcrl xor cwtl pop cvttps2pi rex.RX push cmp ja add xor retq imul clc and rcrb mov sub std lea out (bad) (bad) rcll adc sbb repnz mov sub insl mov mov (bad) xchg xchg mov and sbb mov mov nop cs shrl (bad) test rex.RX cs cmp int ja (bad) mov iret movabs ds shll pushq (bad) jno (bad) rex.WR jns retq add (bad) roll add and push gs mov add sbb push rorl out sbb sub jp add jl pop pop xchg push shl test pop scas jns (bad) cld push cmp sub or adc (bad) adc (bad) je,pt shl rex.XB and pop (bad) fcom pushq rorl out adc sahf adc loope ss rex.RXB es insb pop (bad) cmp icebp nop sarl test adc movb movsb add jle rex.R sub jne movabs (bad) jae rex.RB cmp add (bad) cmp (bad) cmc or mov movabs mov xor adc stc sahf rcll pop test add jo xchg lahf andl adc sub cmp rcl (bad) (bad) pop loopne test jnp cmc or popfq pop sti popfq pushq sub (bad) js pop mov (bad) (bad) je xchg lret (bad) add adc push movabs and iret loope out cwtl add icebp jmpq adc (bad) xlat and insl rex.X lods (bad) mov jne cmc pop (bad) jno pushq (bad) out (bad) sarl fildl mov cmc int3 (bad) jae cmp fmul sbb cltd rex.WRXB movsb movabs (bad) out lret movsl divb lea icebp imul (bad) sub (bad) (bad) movabs loope int adc sbb sbb (bad) mov push jb in (bad) adc rol loopne (bad) jg (bad) cmc rex.R add flds cs (bad) enterq adc rex.XB lock xchg rex add add callq (bad) xchg cli (bad) xchg mov (bad) sub (bad) pushq xchg adc stos loope and pop pop jns xor xor sarl cli stos shlb pop rex.RXB fyl2xp1 mov (bad) lret mov sbb outsb push (bad) jbe adc (bad) lock jl add sti (bad) rex.B orl cld sub adc insl in movabs imul (bad) cmp cmp addl (bad) out ds pop push roll addr32 adc loopne repnz int (bad) iret jge mov xchg mov (bad) (bad) and rex.B in mov push sbb cli (bad) xor push (bad) fwait mov lret cmc sahf mov jp (bad) (bad) insl pushfq (bad) je jl or and out sbbl mov xchg test jmp add lret mov sti shll xchg mov cwtl rolb add callq ja orb adc nop loope es mov stos rcrl popq out lock int3 enterq push mov ficompl (bad) fucomp push xchg stos popfq mov scas imul xlat rex.R lret xchg mov in add (bad) movsb adc xor lcall movb (bad) ja out (bad) cwtl cmpsb nop (bad) (bad) iret in rorl and leaveq icebp xor jbe dec pop rcll cmp shll or imul (bad) mov jno cltd movabs rex.WR jmpq jne jl andl in (bad) nop rex.B or sbb mov movabs and mov push xchg adc cmp imul (bad) hlt push in xor (bad) (bad) rex.RXB (bad) pop rorl (bad) cmp mov rex.RX mov (bad) icebp mov lea rcrl jg cwtl movabs jno (bad) push pop add sub cmp adc jno stc xchg (bad) stc rex.R xor test (bad) movsb push mov out xlat ja movabs scas or mov pop loope and adc rex.X fidivr stc add mov (bad) push cmp sbb or mov cmp lock rorl movabs mov mov add test xlat xchg shll shrd push jl (bad) xchg or push lret not rcrl jle push and jl mov rex.W push xor (bad) rex.WRX mov (bad) rex.WRXB mov or mov (bad) cli outsl imul rcrl rex.RX and xor clc loope outsb rorl sbb (bad) mulb sbb add and callq add jnp (bad) rcr std push xchg adcl push shll cld pop out (bad) and (bad) negl fldl shlb test and hlt test lea lret (bad) ficoml xchg jle imul mov (bad) (bad) enterq sub callq push lock fwait cmp (bad) rex.RX sahf (bad) rol jns mov shrl (bad) out fnstenv mov fwait push mov or gs (bad) shr or ja (bad) (bad) rcll jmp lods ror push add enterq mov test repnz data16 xor (bad) iret rcll rex.WRXB mov (bad) cltd mov rex.R rcr stc or (bad) adc jno mov push movabs xchg mov rex (bad) push mov shrl adc rcrl rex.WX xchg int adc pop pushfq adc sbb sarb movabs bswap sbb or xchg (bad) (bad) ror mov rcll cmp (bad) jrcxz jns (bad) push lret xchg cld outsl rex.WRX int rex.RXB roll in (bad) sbb cmpsb jno (bad) movsl int jnp (bad) cwtl sbb add jle jne fdivrl (bad) je fidivr pushq or icebp rex.XB lret pop push xlat (bad) in adc sub xchg cltd push ds push cmpsb sahf sbb jno in add (bad) int3 je rex.R (bad) fldl2t out mov add (bad) cmp pop sbb jo sub pop xchg fwait xchg (bad) add iret (bad) sbb (bad) retq push mov sahf ficoml xor fwait stos sbbb mov mov imul xchg xorl ljmp xor shlb ror loope (bad) movslq fsubrp fnsave pushq pop shr roll movabs rcll xchg sub xchg sbb add or int mov xor test add sahf pop add and sti imul loope (bad) outsb lods (bad) rex.WR out add roll (bad) nop rorl rex.WRB mov rcll lret xor test push rol xor (bad) rex.WB orl adc mov callq (bad) fadd (bad) jbe icebp mov rex.RB (bad) mov sbb lock mov in fs loop idivb ja mov (bad) callq stos (bad) (bad) push movabs (bad) xlat add rcrl fistpl sbb rcr xchg mov cmpsb pop xchg push jno rex iret mov push outsb test mov rex.WRX (bad) rcl rorb lea cmp (bad) xor cmpsl sar clc pushfq movslq sub jg ds in rex.WRX int cmp rex.B outsb add mov notb or mov xor mov movabs fnop repz xor adc pushq mov stc and pushfq movabs rex.RB mov push sub jrcxz push xchg movabs mov enterq xor movsb loope in lret pop lods (bad) push add add out iret frstor hlt mov mov (bad) sbb or (bad) add stc (bad) sbb xchg or xchg and movsl shll rcrb (bad) sub movabs and push imul sub (bad) movslq sbb jge,pn push (bad) enterq imul pop ror adcb (bad) pop and jmp pushq add xchg jle adc testl sub popfq add fwait push push shll js rex.RB fcmovbe icebp jbe mov jmp stc (bad) pop test pop and data16 out fcmovnb fldenv (bad) pushq pop cmp and cmp jnp fldcw and mov lahf (bad) lret cmc gs bnd sub mov push iret push cmc pop (bad) movabs or lret push movsb sarl (bad) mov pop ss jnp push cltd (bad) or movabs in cwtl callq lret data16 add out loope jnp scas (bad) ss retq rex.RXB mov cmp data16 mov (bad) sbb xchg (bad) mov push cmp fs (bad) fcomps out out fwait lock pextrw sub je or lret (bad) mov retq jne xchg (bad) xchg movabs or cltd fdivrl fcoml mov mov int fmuls mov ror push xchg xchg outsl (bad) or rex.XB adc retq retq rex.WXB (bad) (bad) mov rex.WX test cmpsl iret movabs rex.WRB jb fld pushfq (bad) mov sub leaveq (bad) (bad) (bad) idivl add (bad) jb xor add rex.RX sub movabs (bad) (bad) clc pop movabs rex.B addr32 add jno adc jge test fstpl loop ds rex.B and cmp (bad) rex.X imull test out iret mov sub rex.WX rex.RXB (bad) (bad) imul or add pop and sub sub jns or in outsl adcb pop rorl push mov rex.XB rex.WRX addr32 mov retq (bad) leaveq rcrl callq shrl mov in cmp rcl or xchg adc push jo ds test (bad) (bad) adc pop pop add addr32 (bad) std negb cmc adc test (bad) out and pushfq (bad) pop adc rex.RX lods lea insl xchg adc idivb rex.RXB xrelease (bad) cltd xor rex.WRX (bad) and insl in pop jbe add loope mov xor and mov lock repz lahf push or add es scas and (bad) stc xchg and jle cmpsl in int3 rex.WXB rex.WRB mov cwtl jmp div rex.RX mov in xor cmc nop loop js rex.WB fyl2xp1 add stos jg xor sub (bad) sub sub sub mov or or (bad) rex.W vcvttsd2si xchg mov neg push xchg add and cmpsb or jnp js rex.B sbb (bad) pop rorl mov cltd or add (bad) adc sub (bad) add or loop insb xor rex.RXB cmp loopne movsl outsb xchg rex.B sub add fildll rex.RX sbb and cli sub fidivr lret retq andb rex.B cltd jmpq repnz rex.WX rex.WRXB pop mov fwait pop (bad) sarl lret sub add iret scas rclb ficompl add mov roll (bad) sbb shufps and addl xchg rcll jns stos cmp sar lahf mov sarl mov rex.X rex.WR push int add in mov (bad) rex.RB (bad) rex.WRB push rex.WR clc jl push xchg pushq (bad) movb cmpsb push push sub adc sbb addr32 rex.WR shrl shll push xor mov or and mov cmpsl mov enterq jmpq cmp cmp cmp xor sbbb (bad) pop int sub mul (bad) sar mov callq sbb sbb divb jge loope (bad) pop add rex mov rex.RXB (bad) add sub rex.RB fnsave adc sbb popfq rex push and sub add and out mov (bad) sbb and insl mov hlt add or rex.RX out (bad) scas add sub movabs rex.WX imulb cmp gs rex.B outsb (bad) js (bad) loop rex.WR cs outsl cli (bad) xchg xchg (bad) xor loop (bad) lods stc (bad) xchg movabs test xor add sarb lods pushq movabs lods scas rcll rex.W repz loop rex.WRX add (bad) sbb popfq fcoml (bad) xchg mov mov add (bad) callq enterq rex.WB (bad) mov (bad) (bad) rex.XB (bad) pop movsl movslq adc sub test jg stc (bad) int3 sub xlat test jbe fucomip xchg lret sub fadd cwtl movabs add sbb outsl pop push mov rex.RX cs fbstp orl in sarl mov rcrl push (bad) sbb je repnz and rex.RB push rol fldln2 mov jno stos xlat adc push sub add shll mov mov mov loope addr32 (bad) mov in int3 (bad) (bad) jnp mov jns shrl rex.X sbb fadds addb movsl add and cmp sub rcrl xchg sbb add mov sub fldcw movsl adc clc sub xor sub cltd xlat cli and add mov jl movabs rex.RXB lret cli movslq and (bad) mov jbe xlat rex.WXB rex.WRX xor cmp (bad) mov rex.R test cmp or outsl cmpsb jno (bad) cmp ds (bad) imul xchg (bad) pop cmc mov sbb mov (bad) adc fcomp rex.WXB pop jmp sti fs sub rex.RX fwait push fistpl or fsubl fsubrs test mov (bad) rex.RB fcmovb push jae sub push rex.RB rex.WR jmpq xor rex.WRB add mov test sub vpaddsb mov mov psubd pop mov enterq rex.R jge mov repnz stos cmp (bad) inc (bad) rex.RXB ds (bad) adc mov rex.WRXB (bad) rex.RXB (bad) test pushfq jmpq (bad) jrcxz pop (bad) enterq outsb jb stc (bad) (bad) cmpsb test (bad) cmp xchg sbbb pop adc jge rex.B std ror fisttpl rex.WRXB rex.WXB insl retq test push jge rex lea jle and or pop xchg or movabs and and repz test jo (bad) and mov ds mov insl xchg int mov sarb and movabs addl std (bad) rex.WXB scas in cmpsl sbb movabs xor lock mov outsb retq rex.RX adc mov mov xlat enterq xor (bad) movabs loopne es rex.WRB stos nop pop cmp (bad) xchg fdivrs cwtl (bad) mov stc stc sti pop pop mov andb and enterq movabs lret jno mov push test andb loope stc std (bad) cmp push sbb or and cmp (bad) mov sbb add clc add jbe (bad) mov mov and (bad) test adc jl test repnz jb push rcll cmp mov rex.WRX ss adc rex.WX sub scas int mov sbb jrcxz jle or sub jns and (bad) enterq fs ja fsubrl lock stos cmp loope lock cmp enterq ficom callq jno sbb repz cltd incl cmc repnz lret (bad) jrcxz xorb in movslq xor fcoms push movsl fyl2x xchg test int3 xor cmpsl push mov lock (bad) jno add mov (bad) out jle pushq (bad) in and cmp out enterq cmp retq iret rex.RB cs xor icebp push test scas rex.WRX push mov (bad) fildll test test (bad) xchg icebp faddp xchg sub lahf scas (bad) xchg in sar jmp rol jne mov fnstenv orl ror movabs data16 and cmp rex.WRX mov test hlt rex sti pop rex.WR (bad) cmp loope jns cmpsb loop mov incb push add (bad) retq rex.RXB jno adc rex.X cmp xchg and mov rex.RXB pop jae sub movabs add shrl test jno callq jne insb add sub (bad) (bad) mov stos (bad) mov xor xchg jg push shrl (bad) gs imul and jrcxz movabs outsl mov sbb lret xor ds or or fcoms fs movabs xchg fdivrs (bad) jmpq scas xchg lea pause in (bad) in (bad) sub (bad) jrcxz mov rcll icebp rex.B mov mov cmpsl (bad) loope (bad) mull (bad) mov (bad) sti (bad) mov mov mov xor xchg clc add and xlat test ss rex repnz xor out xchg repnz (bad) cmp mov mov cld add (bad) es mov xor mov ja gs jo mov repz rex.WX push xchg add or pop ror in fwait roll out jns insb lret mov jg fidivl add in sbb rex.WX sti (bad) loop mov movslq repnz in fwait (bad) sub (bad) ds (bad) push repz and sub (bad) (bad) movsl mov adc imul int3 stc lahf jo bnd add test jno sbb mov outsl fcoms mov or in (bad) sub xor or movsl popfq adc loopne scas and mov fimul push sbb or sbb push mov xor fidivr sbb (bad) rex.RB (bad) leaveq (bad) rex.WRX loopne leaveq rex.RXB rex.RB (bad) (bad) cltd fcmovb cmp out sub rex.RB jrcxz iret test push repz rex.W pushq ror fcom out (bad) stc push (bad) lock mov scas xor fistl sahf scas in xor mov in xchg (bad) mov pushq jbe rex.WRB shrl js jbe sbb movl cmp (bad) rcr cltd (bad) jno stc test xchg push mov jns movabs (bad) (bad) mov lea jle rex.WR repnz imul push rex.X jge jae or (bad) mov movsb sub push and in (bad) fld add fiaddl pop jmpq sbb push lods repz rex.RB mov fwait lods mov mov (bad) (bad) push imul pushq mov int movabs rcrl jg rex.WRB (bad) loop sub pushq jle sub add mov loop retq xchg sbb mov mov out (bad) jle rex.WRX xchg xchg push repz mov insb rcll lods test stos retq push fwait (bad) movabs jae cmp mov xor and push (bad) jbe,pt (bad) xchg icebp lret in (bad) rex.B movsb std add add push cmp cs xchg pushq (bad) addr32 mov repz repnz (bad) sarb mov (bad) shrl insb and xchg xor xchg rolb cltd cli mov pushq cld mov faddl (bad) and xor pop sbb rcll int insb (bad) (bad) cwtl imul movslq outsl je fld rex.B push adc jno retq jae cmpl rex.X std mov (bad) lock pop xor add adc mov divl mov rol push cmpsl test frstor (bad) idiv pop (bad) sarl xchg adc cs insl fild rex.RXB fiadd (bad) fdivrl cmpsl movsb mov std int in mov adc (bad) clc js sbb mov insb popfq fwait lods fildll ds sub in cltd (bad) (bad) adc push test sarb jae or gs or movabs cltd sar ffree sbb (bad) jge test mov cld movabs pop mov push push xor mov rex.WR callq js sub push test jge pop pop add (bad) (bad) mov in pushq mov adc (bad) (bad) gs lods rex.XB pop out xor rclb add rex.WR shrl cmp xchg rex.RB rex.WRXB mov jmp or xchg push rex.WB test movsb add rex.RXB addr32 ja or test cmc lret test (bad) jmpq and outsl retq jne ja add rex.WRB sbb repnz sub iret push and pushfq (bad) loope jo add jg std (bad) xchg jne xlat (bad) insb xchg subb fs movabs test rcrl callq rex rcrl cmp lret (bad) sub sarl pop and andl sbb stc out xor add mov sub jb sti leaveq cs cmp test xchg int3 mov (bad) jne ljmp add sbb mov pushq (bad) lods xor sarl cmpsl mov std stos sbb rex.B mov shr jmp and mov in (bad) rex.X decb xor mov jb nop (bad) out sahf repnz imul xchg lods sar insl mov rex.WR rcll cld mov retq jb cmp sub rorl rex.RXB (bad) stc pushq mov fmull and sbb mov stos or mov pop mov iret std jbe and (bad) int3 xchg mov (bad) rol pop xchg movabs rex.RXB add mov shr adc shrl stc sbb rcrl outsb fist rex.WRB xor loop ja fmul movabs jno int test pop sti (bad) lock (bad) neg (bad) movsl cmpsl movsl fldl xchg ss xor and in je mov in (bad) mov (bad) xchg (bad) rcl lret pop (bad) and fidivr mov (bad) popfq repnz out add cmp rex.X fdiv jmpw out rex.B sbb (bad) mov add pop iret add outsl jae adc out rex.RX fsubr (bad) jge rex.W lahf lret cwtl xchg packsswb movsl pop cmpsl movabs out xor rclb mov lock icebp (bad) stc or (bad) loopne sbb jge cld movabs cmc rex.WB leaveq callq jp add ds mov out ja xor (bad) xchg sbb pop add test loop mov cmp leaveq (bad) cmp fcomps (bad) rex.WX (bad) repnz mov rex.XB fld push xchg addb push (bad) jo std sub cmp sub or (bad) sbb jrcxz sbb xchg mov rex.WB rex lahf lret mov jge (bad) xor push rex.WX cld pop insb (bad) lret enterq adc jb xor mov pop (bad) mov xchg (bad) cmp (bad) cltd xchg xor sub push pushq fadds or rex.B rex.X lret mov jno movabs rex.R out rex.B xchg hlt mov (bad) rex.WRX mov push in scas fldenv adc mov rcrl ljmp (bad) scas or mov jne mov (bad) lock cli mov (bad) pop pop add iret push and rex.WRXB rex.R push mov push or rex.WB fisubrl cltd rex.RXB mov jge add loope sub rex.RB rcr mov jl adc (bad) repnz (bad) cmp int xor cmpsl adc rex.WRX cltd push mov jns xchg std add mov movslq xor lret (bad) (bad) xor icebp (bad) mov fisttp or imul rex.RX cmp imul (bad) xor jle cmp sar shrl pop xor xchg jnp fwait test lret shl adc (bad) fptan mov xor cld (bad) test jo movsb and mov (bad) xor cmp add iret push (bad) rex.B stos pushfq xchg cmp callq loop sti scas adc test and mov jmp (bad) jae xchg add (bad) (bad) mov mov fstps xchg shll and mov cmpb pop pop roll (bad) (bad) jbe lret mov (bad) cli rex.RXB (bad) out (bad) ja (bad) add test (bad) callq ror mov callq xchg cwtl lods test insl adc repz pushq push loop sub lahf movl (bad) (bad) stos sti mov decl cmp rex.WB jbe and scas xor rcll pushfq push mov rex.WXB jl jmp (bad) nop push out jge mov push mov cs and (bad) mov lahf mov mov imull xchg shl (bad) imul pop rex.W cmpsl gs rcrl rex.RX movabs pop movabs adc callq shll out mov iret lock jnp shr cmpsl mov cmp lret cmpsb pushq retq in add xor (bad) xor fiadd rorb or mov (bad) xor shl (bad) out jbe decb or or xchg xchg fmulp rex.RB push add rex.WRX (bad) fs cmc lea rex.XB fisubrl shrl icebp popfq sub test mov lock rex.RXB test xor (bad) lret pop out mov mov pop mov mov (bad) xor unpckhps xchg (bad) mov (bad) or mov xor cmc lahf sub rex.RX insb add out mulb stos test push or int loope or movabs testl xchg push (bad) fnstcw ss (bad) xchg and push mov mov jmpq cmpsb leaveq rex.WRX pop rex pop and (bad) (bad) push mov jno,pn xchg int and lods movslq roll mov rcrl cmp leaveq push sldt mov ss jbe and cmp and fisubrl sub shll sti mov rex.B mov movabs (bad) repnz outsl iret cmpsl (bad) idivb pop xchg jrcxz out (bad) cmc es (bad) rex.B cmp push pushfq sti (bad) rex.WRX cmp rex.R xchg loope mov rcll (bad) fisubl mov lods push (bad) jo adc jnp fdivrs cmpsb int rcrl pop add out roll (bad) clc adc pop (bad) cmpsl outsb mov adc and (bad) movslq fwait test pop xchg fs and (bad) mov jnp movabs rex.XB pop lea xor out sbb mov outsb sub xchg loope iret cmp add rex.RB pop fsubrl mov xor fbstp xchg jno imul callq pop cltd out rex.WB rex.XB rex.WXB stc or add cmc rcll cs stos fdivs lock push int rclb (bad) mov out mov (bad) jno loope ficom idivb (bad) (bad) test push shlb add mov outsl or xchg add rcr addr32 sbb loop in rex.WRB lods jbe (bad) mov mov rol sub xor incl lea clc mov xor sub repnz jmp movslq rex.WRX pop pop movabs add test (bad) adc xlat loop jne add rex.X hlt jno (bad) xchg test or cmp (bad) jg retq xchg (bad) je test movabs scas sbb mov adc sub (bad) rex.B rex.WX rcll rex.WRXB ss rex.WRX (bad) jl jae rorl (bad) sti xor (bad) xchg testb rex.WXB push jne subb ror fwait movabs lock roll pop rex.WB jmp sarl scas pushfq or movsl lods outsl lahf jp hlt fcoml dec (bad) adc (bad) lret outsb sbb fcmovb cmp adcl mov jo mov shrl sub add lock or adc add (bad) adc sub xchg fimul rex.WXB and (bad) mov cmp (bad) loopne mov (bad) mov sbb setbe rex.RX rex.WX loope popq xchg cmp test rex.RXB shrl or icebp rol jp (bad) (bad) xchg rex.WRX ja xor push test sar fs add mov xchg punpcklbw imul cmp xchg and jb push or sub lock xorl nop pop or rex.WRB rex.RB (bad) mov push push leaveq adc (bad) mov sub fsub jae adc rex.B (bad) mov fsubr leaveq cmp stos mov sub (bad) or (bad) not push rex.XB (bad) (bad) addl ror rex.W jne int xchg lods movabs pushq out sarl rcr rex.WB sbb rex.RX rcrl leaveq and sbb loopne addr32 rex.RX cs sar imul add or pop and mov adc sti mov mov rcrw (bad) rcr add xchg movabs retq xchg adc (bad) (bad) cmp rex.WB mov sbb pushfq je clc sahf xor es cli in adc scas scas shr mov movb cwtl cli cltd test mov rex.WX movabs pushfq and push add lea jmpq stc pushq cmp (bad) (bad) (bad) sarl push (bad) shll fsubr or out add (bad) int3 lock mov push fcomps jae movsl mov movabs cmp (bad) and (bad) sarl mov add add (bad) add jno xor push xor pushfq (bad) mov mov add push cmp rex.WX xchg int cli mov jae fwait rex.WB shll insb pop retq (bad) mov push xor je rex.B loop xchg rex.W rex.RB (bad) and cwtl in nop rcrl (bad) fisubr (bad) mov mov shll add (bad) jrcxz out jmp shrl lock dec mov mov sbb (bad) ror (bad) loop rex.WX shl pushfq scas stos jne or insl loopne retq pushq movabs clc sbb repz ds sbb add xorl (bad) sarl outsl jge (bad) rorl icebp cld scas push xlat pushfq ror rcr xor roll (bad) mov nop lret cmc fisubr mov pop stc lahf clc sub pop or rex.W scas jg cltd rex.XB movabs divb mov andb add (bad) lahf xor and addr32 repnz insl xchg rex.R mov (bad) movabs rex.WB sub xchg iret sbb divb je sub mov int3 (bad) fstpt jb add xchg mov mov rex.XB rex.B callq and cmp push push mov (bad) mov mov or lret cli (bad) mov (bad) xchg cld fwait jbe rex.WRB retq cltd xchg (bad) and lret (bad) or loope icebp xor add leaveq jo fsubrs or adc repz subl rorl popfq int3 fildll cmp sbb jae cmp jne test xor retq (bad) sar mov adc cwtl jno mov sbb js shrl jmp fstp movabs mov mov lret xor in loope out lods iret roll sub scas fisubrl push pop (bad) xor stos cld test (bad) cmp push roll pop stos rcll xor rcr sqrtps adc nop (bad) in cmp shll rex.R rex.WX (bad) jg (bad) xchg jno mov jrcxz pop (bad) push enterq (bad) rex.WR rex.B (bad) in mov push xchg sbb add xor movabs rex.WXB (bad) and stc jrcxz imul rex.RX gs jmp pop (bad) iret cmp mov (bad) cmp xor lock (bad) out adc xchg (bad) (bad) mov or adc vpsubsb (bad) cltd subl jg xchg fnstenv in retq cld sbb sub mov (bad) rcrl adc lret scas rex.B mov icebp jno iret mov rex.WXB (bad) lea ja or adc push cmp or sbb (bad) xor nop or jrcxz jnp and (bad) imul movabs mov (bad) (bad) out sub rex.WXB mov (bad) (bad) (bad) (bad) leaveq cmp and jno cmp adc and (bad) xor rol jne rcll cmp insl repz roll pop loope jb retq hlt leaveq lods test rex.WXB shll (bad) jno rex.WB pop and cmp cli js mov insl and lea clts xor fnsave rex.R xchg (bad) push xor stos lret cmp mov rex rex.WX fisttp iret adc (bad) cmp std (bad) test add test shrb pop (bad) add movabs push out pop rex.R mov (bad) retq rex.R (bad) (bad) mov (bad) (bad) sbb pushq hlt orl lret shl (bad) movabs cmp (bad) pop mov rex.WRB xchg sahf (bad) adc pushq rcll rex.WRXB push shrl repz add (bad) outsb xchg (bad) pop or jp add cmp rex.XB jnp rcll icebp (bad) sbb (bad) shrl xchg movabs rex.RXB rex.WR rorl fs (bad) icebp movsb (bad) mov je and in cwtl test mov (bad) sahf retq (bad) rex.WRX (bad) mov loope enterq ss cld xchg mov fwait shl or loopne (bad) enterq rex.WXB mov fimull lret (bad) lock cmp in repz xchg retq clc testl rex.WR lock addr32 repz roll iret callq clc push cli rol (bad) mov pop add rex.RX (bad) pop (bad) fiaddl cmc rex.WB rex.R cmp jae cwtl shll je xchg rcrl cmpl rex mov adc loope pop mov pushq xor es vmovhps sub fcoms (bad) or int3 add sub in xlat out repnz (bad) fdivrs push and shrb xchg imul mov push gs movabs add repz rex.RB std fbld rex.RX xchg rex.B add std cli pop or sub imul roll (bad) repz rex.WRXB push scas adc mov fbld pop rex rex.WRX shrl sub xor mov rex.R push add std rex.X add (bad) repnz je test roll cmp mov (bad) (bad) jbe pushq outsl rex.RX addr32 std mov xchg and rex.WRX sub addb sbb mov (bad) fsubrl clc cld roll sbb jbe rolb rex.XB outsb movabs sub and ffreep mov jne popfq sub es (bad) in (bad) add add notl xchg add pop stc shll (bad) outsl int mov add pop xchg mov iret retq adc add lods addr32 lock mov je rex.B cs sbb xor enterq pop scas (bad) xor scas test shl rex.XB retq out jmpq xchg mov jae fimul mov adc xchg pop push and cmc (bad) imul rex.RX (bad) (bad) out cmc shlb mov ja iret jrcxz (bad) mov push repz lahf pop es out cmp xchg js adc lea xchg test roll add (bad) movabs lret sbb (bad) rex.XB pop jmp push (bad) shll adc movabs test (bad) (bad) ja or mov push lock add fs (bad) cmp js jmpq mov (bad) callq sub mov lea movabs pop repz loop fstpl cmp or lahf in (bad) jno lret (bad) jl jno pop cmp (bad) adc fcmovb sbb cmp cltd sub (bad) stos lea and xor (bad) je int sbb jne xlat pop cmp xchg jnp rex.XB mov test fisttp pop mov fnstcw (bad) cmp rcrl xchg mov mov rex.W es xchg stos jnp fdivrl std fldenv (bad) or xor nop data16 int (bad) movabs xchg retq (bad) loop mov test (bad) imul xchg cmp or fisubl (bad) and pushq sarb pop cmp (bad) rex.X jp out fist sarl cli sbb rorl xchg mov in cltd movsl xchg fucomi jno shrl addr32 jae (bad) repz fisttpll fbstp jp (bad) jge fldenv (bad) test and mov sbb cli xchg mov test pop cmp outsb xchg and cwtl (bad) shrl (bad) xchg rorl cs mov shll (bad) (bad) es or int3 jne scas mov repnz mov (bad) mov faddl xchg mov adc in fsubrp mov (bad) in mov (bad) test shrl shll lahf sub shrl cmp and ja shl leaveq sarl (bad) push mov sbb iret cmp jne mov shll sub rex.WX in rex.RB push (bad) vpunpcklbw fsubrl (bad) bswap sub (bad) (bad) mov xchg xchg movabs cmc sarl rex.RXB sbb xchg and xor mov mov push pop shr jp addr32 movsb (bad) cltd leaveq push movslq sub mov cmp int3 cmpsb pushq out mov mov xor (bad) enterq adc add adc or stc rcr cli pop in nop pushfq sbbl sub std rcrl iret movabs enterq fcmovnb cltd rex.RXB sbb fcmovnb jmpq (bad) ss (bad) push lret (bad) jmpq add or rex.WRX popq jp or pop mov divb pop sub data16 add mov orl sarb jbe cs rex.WXB popfq int gs fwait jge mov cmp rex.RX sbb jmpq (bad) push leaveq pop jnp or (bad) fxch stc xlat shr rex.X push mov (bad) frstor (bad) rex.B cld jle rex.RX (bad) rex.WRB fstps add cld lods adc push ds insb fcomps iret rex.RB sbb sar xorl fstpt (bad) fs push mov fistp (bad) fwait iret xlat test mov jl lahf loope int3 int xlat test lahf jae push or ss mov jmpq sbb push xor mov (bad) jle js loope loopne pop mov enterq loope rex.B (bad) ja int lahf out (bad) cld fiaddl icebp (bad) cmp fldl2e movabs pop mov rex.R int and (bad) xchg in rex.B rex.X push mov stos insl rex.RX (bad) (bad) lock in jle sbb imul mov xchg mov icebp sti (bad) int mov rex.RXB cmpb nop callq jge mov cmp (bad) mov push (bad) addb adc (bad) rex.XB fs cs lret add ja jno add and (bad) loopne sahf sbb (bad) jb rex.WRB fs or scas and mov xor (bad) fldt (bad) (bad) shll mov (bad) or (bad) movabs addr32 gs movabs rolb rcrl or out (bad) mov (bad) xor vxorps push ja (bad) fcmove jl lods (bad) adc push out adc mov jmpq mov rex.WB cmp add xchg jbe int3 ss out rex.RB rex.WRXB mov imul sarb movsb loopne sub xchg sbb and mov rorl cld out pop enterq push adc (bad) xchg imul lret loopne adc xchg jl (bad) push (bad) mov xchg pushfq or (bad) rex.B jmp clc mov xor retq adc (bad) rex.WRB rex.XB (bad) xor xchg and (bad) mov rex.R fcmovb pop gs js sub rol (bad) xchg rorl adc loop stos shll callq shll sarl mov mov callq xor retq pop add jae ja iret sub xchg xchg (bad) div pop (bad) pop mov clc or xchg cmpsb mov mov (bad) fadd loop rcll jmpq sub insb rex.RB (bad) enterq in test addr32 test rex.XB pop rcrl mov popfq sbb sbb (bad) adcb sbb push and loop (bad) mov leaveq (bad) (bad) neg data16 pop cmp sar out or (bad) cmp (bad) sub rex.W rex.WRX xlat push rorl xchg add add lret in cltd cmpsb add xor or sub mov and rorl or (bad) jne (bad) pushq mov jns mov jns (bad) pop push (bad) rex.RX rex.RXB rorl sub retq stc sub mov repz push pop mov ss jl fdivrp and in add js jmp mov (bad) sub rex.WX in sub mov (bad) cwtl repz data16 jbe mov enterq xlat xor (bad) sbb sbb mov in rex.WRXB rex.WRX cwtl leaveq mov enterq xchg fnstsw rex.RX jno rex.W mov rex.W jno sbb rex.RB sub callq (bad) or xchg enterq pushfq push sti outsl push (bad) fcoms lret push cwtl (bad) jp rex.WRX add push rex.RXB rex.WR push movabs pushfq cwtl rex.XB and and movsb and enterq imul (bad) (bad) pop (bad) (bad) xchg iret cmp xchg mov mov push add xor shll mov jnp test xchg jg adc sub cs movsb or sbb rex.RB gs not cmp repnz (bad) (bad) xor (bad) mov stos mov lret jno iret jno push movsl inc xor test cs jne xchg adc (bad) jo in add push sub (bad) clc or pop lahf mov hlt outsl lret jmpq rex.WXB je (bad) movsb (bad) jb rex.X jae (bad) sbb and shl std mov (bad) (bad) mov out xchg mov xchg loop jle add xor (bad) rex.W pushq adc decl movabs loope xchg (bad) leaveq cltd (bad) rex pop pop scas insl shll (bad) mov roll lock xchg sub sahf subb jl fild cmp outsl rex.RB int3 lret test insb rorl movabs movabs in fidiv add (bad) imul and (bad) sub add jg pop ss sub mov (bad) and in rorl in sub mov imul scas rex.WRX jnp retq pop je cmp and test loope fist es ja andl out lods loop or (bad) fs rex.WR pop (bad) ss callq mov sub fadd cmovae mov out mov (bad) stos test mov callq mov in in mov lea cli mov cli add fild cmp adc (bad) jmp or movabs xchg mov movslq repz xchg or xchg ffreep fstpt (bad) insb cmp enterq (bad) repnz adc cmc add div pop or in repz (bad) nop out xor pushq out callq retq rex adc cltd sbb retq shrl fisub cmp rex.XB addl neg xchg lods jge jl repnz scas (bad) movabs lea mov mov out push retq fadd test adc (bad) mov jg lods (bad) sbb cmpsl lret insl movsb jae lock stos sbb callq sub (bad) shll enterq (bad) repz mov lahf push mov popfq cmpsb add xor rorl sbb sbb scas cmc test movabs sub movabs xchg callq (bad) (bad) adc mov xorl or (bad) in (bad) imull pop in push or mov cwtl mov lret enterq (bad) adc adc (bad) in test rex.RX push ds cmp pop iret pop (bad) movabs mov test sub (bad) xchg shrl fidivr or fiaddl rex.RB xor sbb (bad) add sarl outsb lods (bad) push and callq jo or jrcxz mov or pop xor push adc sub (bad) insl fs cli sub shl xchg repz out lret imul rex.B rex.WR sbb cwtl (bad) xor fistpll rcl mov (bad) xchg hlt jae fadd rex.WR pushq vmovsd (bad) movslq jno shlb (bad) rex.X lods fcmovb xor ja xlat (bad) (bad) cmpsl clc rex.RX (bad) (bad) icebp in leaveq leaveq add xlat (bad) fildll and sub rex.XB gs and jmpq rex.B rex.RXB repnz adc add sbb pushfq fwait in mov mov add pushfq loope shr adc (bad) adc mov out (bad) fimull test imul add cli rolb (bad) lret movabs movabs add (bad) icebp xor clc cmp imul or test rex.RX enterq jns sub sbb loope (bad) cmc xchg (bad) fsubrs leaveq xor int xchg jmp push fdivs fs shrb fcoms mov in jae jmp cmpsb rex.WB sbb int cmp icebp leaveq add rex.RB hlt in mov (bad) jg fstp and movabs xchg fidivrl (bad) int rex.WR cld popfq push test es cmpsl mov and pop std cmp sahf fcom and rorl repnz xchg loope,pn (bad) (bad) jae cwtl xor rex.RXB adc (bad) gs (bad) jge jno repz mov (bad) pop sub not iret pushq rex.WR cmp ss (bad) push loopne (bad) notb loop addl fbstp cmp sub movsl stos mov (bad) add rex.RXB xchg sbb rex.W lock int3 rex.WRX mov (bad) (bad) adc xor add rex.RXB leaveq fnstenv add sub sbb push loope (bad) mov sbb (bad) test retq imul and (bad) xchg jo xor rex.WB mov mov (bad) loop mov test test rex.WB cmpsb xor int3 stc and jno loope fstl test lock insl (bad) rex.R xlat rex.XB insb mov (bad) test adc es xchg rex.WB (bad) (bad) out (bad) (bad) fistl sub decl lret cli (bad) fsts hlt xchg cmc fist sbb repnz loopne pop sub (bad) sub xchg movslq add scas adc rex.WB rex.RXB fcomps adc rex.R or subl cli loop test (bad) fmuls jmpq rex.WB shll mov add mov callq mov xor je xor mov pop rex.WR cld (bad) (bad) or pop out (bad) mov (bad) negb test mov xchg jg rex.RX jae pop adc es jbe insb sub loope rex.WR cmp imul clc xchg xchg fucomp rorb stos fucom lahf xchg jnp roll and (bad) test in adc mov rex.B fdiv jae add movabs mov mov pushfq je vpcmov pushq push scas add fcmovnb sbb xchg imul clc jp mov cwtl test cltd addl rex.WR fidivr movabs xchg rorl insb test mov mull jnp bswap xor sub sahf push mov xchg out scas je jnp pop jge js cmc in push (bad) test jnp jnp xchg in (bad) mov or cmp mov fisttpl sti out repz sub (bad) push xor rex.X icebp movslq movsb (bad) mov xor (bad) cwtl mov (bad) pushq out xchg fisubrl repz xchg mov xlat push out mov pop jmpq jl data16 sub fstpt out pop mov rex.XB (bad) cmp sbb int3 loope jrcxz mov test (bad) push stc sbb insl in ror mov movsl pushq add (bad) fisttpl pop (bad) mov out mov xor cmp (bad) jae lods xorl sbb popfq (bad) test loope jl out xchg (bad) (bad) sbbl rclb (bad) jne or cmp mov outsl mov sbb cmp cli movabs lods (bad) enterq mov or in and rorl std sahf lret rex.R leaveq in in je lret (bad) stos xor mov sub (bad) js in cmp mov pushq fs cltd pushq sahf xor jns adc xchg fwait jbe push lods je (bad) xor add (bad) jnp callq adc rex.WB and sbb jb mov (bad) jmp xor fild test add xchg (bad) movslq adc jae fsubr jb ss mov (bad) mov movabs or cmpsb push fdivrl (bad) (bad) loope (bad) mov mov rex.RB loope bnd sub in (bad) ffreep (bad) xlat or xor adc out sbb sub rex.WRX mov loopne (bad) mov jno mov rex.RX iret imul int fist test (bad) imul and sbb (bad) (bad) imul jno int3 (bad) add sub test or je lret idiv repz rcrb rex.WRB or xor out mov neg test (bad) jp xor andb mov (bad) mov rex.WR movb or push add rex.XB mov xchg bswap rex xchg gs adc int3 rex.W setnp jp jbe cmp shrl add xchg in sahf jno (bad) (bad) hlt mov cld pushfq push xor cmp (bad) (bad) mov je movabs in out rorl fisubl and pop movabs ja data16 xor loop jg jb (bad) and jne (bad) vunpckhps in xchg enterq push rex or mov or jle lock fwait rex insl cmp lret (bad) mov in push rex.WRX rex.RX (bad) movabs test cmc fsubs rex.WRB sub sub sar adc push in adc xlat mov xchg out xchg jle rcrl push divl and addr32 xor sbb lods movabs rex.X cs jne sbb rex.WRXB nop lret rex.XB cmp add jbe mov pop shrl cld (bad) loope mov (bad) and std or test shrl cmp retq xor (bad) fldt (bad) shrl sub or sbb xchg in fidivrl cmpl cmp add retq fwait xchg sbb (bad) push rorl mov and (bad) xor cmp push stc rcll test pushq sub (bad) xor cltd movl rcr sti mov (bad) gs pop pop adc xchg loopne in fildl mov (bad) divl and pop mov movsl callq (bad) xchg data16 rcll jnp (bad) push rex.WB adc or insl or sub or cli std xchg lret ja out xchg push jns ds sub sahf xlat lods rex.RB pop xchg movsl add (bad) xor movabs xchg xchg or adc rex.X (bad) rex.XB out stos lea (bad) sti insl lods stos (bad) mov (bad) jle and pop (bad) stc jnp mov data16 rcr (bad) jg cmc (bad) sbb fimul test lods cltd xor shrl fsubr (bad) negb lret xchg and lods (bad) (bad) sub pop xchg shll pop (bad) cmc xchg loop pop retq jmp nop movabs adc movb sub sbb rex.WRX or pushq xor (bad) mov repnz callq rex.WR shll or or add fstl mov repnz ss sub mov iret out rex.X (bad) rcr sbb lods xchg pop sbb sub (bad) or (bad) (bad) (bad) push (bad) adc add or jl xchg notl mov (bad) sbb and rex.W lods fisttpl clc and fucomp mov jg adc pop add rex.B rex.RX repz xchg lret divb retq xchg pop popfq and movabs (bad) mov sub cmp adcb pop outsb (bad) (bad) jae adc pop callq (bad) cmpsb (bad) push (bad) xchg pushfq repnz mov rex.WR rex.WB xor mov jne sub xorb lods retq lcall stc jp insl xorl (bad) fcoms add sub lret stos fild jge (bad) adc mov iret cmp mov bnd movslq (bad) (bad) and sub pop add sub loop fmuls enterq mov cmc (bad) rcrb xor fild js lock (bad) (bad) (bad) lret scas pushfq and add movsl pop (bad) insl (bad) (bad) mov mov pop rex.WRXB pushq rex.RX mov push imul add cld ss rep add sub (bad) shll test popfq mov mov callq cltd movsb int3 sar clc mov mov scas fildll roll (bad) xchg imul lret rex.B mov sbb mov in mov in xor sbb enterq in lahf or xchg cli rcrl push fistpll adc rex.XB or xchg test mov (bad) mov std (bad) (bad) sarb int imul mov push mov add out pushq (bad) pop rex.WRB pushfq mov out (bad) adc out cld fld ja rex.R (bad) pop mov pushfq mov iret jnp lods popfq stc fiadd sar xchg push (bad) adc push stc cmp movsl xchg (bad) ror add pop jmpq (bad) lock (bad) inc sbb and rex.WRX pushq lret sahf pop fnstcw shrl or rex.WR fpatan (bad) jnp std (bad) leaveq fdiv fnstsw (bad) rcll sub sbb xor xchg (bad) (bad) stos jp (bad) lret js rex.W stos sahf (bad) mov rex.X (bad) push add loope (bad) (bad) mov sbb rolb pushfq push (bad) rex xchg movabs (bad) cmp mov (bad) xor adcl add sar xor mov loopne add xor rex.WX testl xchg add test jne rcrl (bad) (bad) (bad) add sub and cld jge or lret cmp add callq popfq xchg repz outsb je xlat (bad) cmp (bad) enterq ja (bad) (bad) mov push insb fist stc jne xchg or jbe (bad) mov jno pushfq pop adc (bad) sub mov sub sahf or enterq mov rex.XB movslq idivl (bad) pop shrl xchg decb (bad) repnz in leaveq outsb test or rex.RB rcll pushfq in mov sbb stc cmp mov insl xchg adc adc andl movsb and loop,pt lea cli xchg rcrq or add popq cmc (bad) cltd push (bad) jns rcrl pop stc lret add lock rex.RX mov jge shll xchg push (bad) cmp (bad) xchg add xchg rex.WXB (bad) mov in clc rcrl xchg mov (bad) (bad) cmp jg lods xor ss lea or cmp icebp shll in hlt rcll or shll mov mov (bad) movabs (bad) lods or out pop ss gs stc and (bad) mov xchg cli int jo iret (bad) movabs rex.RXB cmc ror cmp std cmpsl push xor sbb push add mull sub jo cmp loopne pop add sub pop (bad) test rex.WRXB fwait (bad) (bad) jmp mov repnz enterq rex.R xor int3 movabs rex.WR lock (bad) rex.WRXB fabs (bad) xchg sub adc cmp fildl xchg hlt xor or repnz sbb cmp sub rex.R cltd (bad) outsb rex.RXB sbb js fildl cmc mov add sub xor loope (bad) stc sub imul (bad) cmp stc xor pushq mov (bad) add push pop xor insl jl retq xor je sahf add pushfq pop int3 add lret movslq cmp loopne rex.WR cmp std or sub mov imul xchg xor cmp pop mov mov mov (bad) mul lret fistpl rex.W enterw rcr sbb xchg (bad) rex.RB rex.WRX negb fsubrp repnz lahf movabs int3 stos movabs jns cli (bad) or repnz and (bad) imul cmc jp sbb leaveq (bad) cmc mov shl loop int3 xchg test (bad) leaveq outsl (bad) fadds lcall out retq movups mov (bad) (bad) rolb (bad) rex.WRX mov (bad) rcrb jns mov (bad) (bad) pop cmp int rex.XB sti jbe cmp mov mov (bad) leaveq repz mov cmp rex.XB (bad) movb jno mov es rex loope mov repnz callq sbb (bad) cmp add and jmpq xor add lret xchg mov ss imul pushfq mov ss and cmc rex.XB je fild rex.R sub loope rex.WX addr32 xchg add xchg jns rcl jmp (bad) rolb je mov retq cmc add (bad) fcomi (bad) cmp jno (bad) mov rol xor fiaddl adc rcll jl rcrl testl (bad) icebp mov (bad) mov sbbl lahf gs shrl (bad) scas (bad) and iret es (bad) add outsl jns pushfq loope push jl mov (bad) jns rex.WRB (bad) (bad) or lea enterq sub decl (bad) outsb pop cld jge iret movabs rex.WRX xchg (bad) icebp rex.XB rex.WRB mov out (bad) mov js rex.WB rcr or retq pop jno (bad) insb kaddd fmul and rcl jle sbb xchg je xlat es lock (bad) scas rex.WX test loopne adc (bad) add push xchg imul shrl xor adc jb sarl rex.WR lret sbb mov sub cmp (bad) and loop fstl push xchg cld add rcl jo mov jbe iret xchg (bad) sub movabs (bad) (bad) push lods add mulb mov roll xchg xor xor andl mov rex.B insl jb xor push push callq add adc nop push push push fwait je (bad) lahf push stos rex.X inc subl (bad) rex.RXB bnd xchg xchg jb cmp (bad) mov adcb int scas pop test rol lea int3 jns adc shrl insl rcr fadds add (bad) rex.RXB pop icebp vaddsd add mov fisubrl scas rex.X xor addr32 sub (bad) xchg (bad) rcll mov stos fisubrl sbb rex.XB rex.R int3 pushfq sbbl scas sti pop (bad) mov jo in in sub mov (bad) in repnz ss push or add mov adc scas lret and callq roll stos xchg sbb rcll cmpsb (bad) (bad) pushq cmp movsb or adc fmull rex.WRXB pop rorl adc xchg (bad) adc (bad) jae sub jl popfq jnp mov movsl push cmc shrl outsb (bad) xlat not add add fimul lret shrl mov lret xlat pushfq je fistl xchg int pop rex.WXB sbb cmp (bad) xlat sub and xchg pushfq rclb mov enterq iret stos mov rex stos popfq sbb sub (bad) (bad) mov in or in jg sahf outsl insb fisttpl rorl (bad) rex.RB sar movabs adc rorl icebp movsb sahf mov xor mov (bad) loope adc and or loope rol out and or xor loope retq lret push mov and stos pop (bad) shll jg (bad) movabs jae cmp (bad) negb or popfq sub mov mov xlat scas and (bad) (bad) xchg stos and (bad) xor mov push or movabs adc and xchg movabs cmpsl sub (bad) mov enterq (bad) (bad) (bad) ljmp (bad) mov movabs clc jne add bnd rex.X enterq lret std loop mov retq out xor rex.WRB rcl lret fstpl insb rorl mov sub nop xor rex.WR and and mov sub or lea sub (bad) (bad) roll fiadd imul mov test mov mov fbld and (bad) push movabs sub adc movsb cwtl rex.WXB or (bad) jbe fstpl (bad) (bad) jb fdivrs sbb out sbb pop push push pop rorl loopne (bad) scas mov pop xchg (bad) jae or je push pop int3 shrb stc rex jmp fistp (bad) jne (bad) sbb jns int test (bad) movsb outsb iret and or add (bad) mov (bad) (bad) idiv rex.WB in pop xor jg fwait push mov jns roll test sbb icebp insb mov mov sti (bad) shl out jle rex.X shrl add fnsave push sub (bad) rex.WRX mov xorb pop xchg out jle sbb xor cmpsl (bad) sub rex.XB adc (bad) int (bad) jmp iret and ja mov adc out or jg sahf int pop lahf movabs mov roll scas movsl lret cli clc jmpq callq fsubl (bad) rsm jbe xor mov fxch (bad) xchg movabs je adc cs mov fimul lea mov lods and rex mov sub imul popfq xchg rex.WXB rex.WRX jae rex.X jmpq rex.R jrcxz mov xor rcrb (bad) add icebp repz rex.X jne std or mov and loope (bad) (bad) rex.B rex.WX xchg outsb (bad) rex.W rex.WRXB cwtl ficom fs mov cmpsl (bad) xchg cmp vpminub (bad) mov int (bad) rclb and (bad) mov mov fnstcw xchg xchg xlat jmp pop xor mov btc es (bad) test kxorb repnz sub out mov rex.WRX je mov ja push in mov jle es rex.WX stos mov (bad) (bad) fs movabs sbb repnz (bad) add cmp int outsb and cltd repz sar (bad) xor stos pushq (bad) rex rex movsl test rorb xor (bad) or rex.WXB mov push or mov insb callq movsl sub jge loopne xchg mov in imul sbb addr32 xchg xchg pop push andl loope jmp fsubrl rex.X stc jbe ficomp fimull mov mov rex.WRB pop test push adc std (bad) sub out jne fisttpl roll adc and (bad) lods (bad) (bad) jb lock jo test stc xchg jne (bad) sbb rclb xchg mov cmp es adc roll pop movabs (bad) (bad) push sbb shr cmc or sbb lret int fs rex.RX mov loop mov add push push scas repnz add rex.WXB rorl (bad) adc shrl outsl lret mov adcl lods (bad) (bad) mov (bad) out xchg pop mulb outsb lret (bad) leaveq jae mov mov rex.B clc jrcxz test add pop stos xchg (bad) fstpt cwtl add and mov (bad) mov mov sbb cmp mov xor rex.WR mov lret sbb (bad) test callq lahf or jbe mov cltd (bad) shrl mov cwtl mov add adc xchg popfq in data16 sub and pop movsb repnz or sbb xchg mov lock jge xchg cwtl mov push pop xchg (bad) adc outsl or lret mov (bad) icebp insb shll adc rex.RX push movabs rex.XB rex.WRB (bad) (bad) xchg xor cmc xchg and (bad) rol or jle adc pop pop (bad) adc xchg mov rorl (bad) push and add rex.WRXB rex and int3 rcl es movabs xchg add fwait in rex.WX jp jbe mov mov sbb pop sub lods movabs pop rex.R adc cmc mov cmp and pop sbb sub mov xchg (bad) leaveq (bad) (bad) sar movabs (bad) (bad) jo lock mul xchg and xor lods cmpsl movabs test in ljmp add insl jno xor outsl jns sbb mov mov (bad) jb clc retq adc (bad) add (bad) (bad) mov iret sub or shrl jb outsb push loop addr32 xchg (bad) xchg (bad) decb and pop (bad) sub rex.B xor shll rex.RXB lock rex.B enterq out cld jns jg rex.RXB out sub or and ds sarl in add rcll jrcxz cwtl shll loope rcll xchg stos mov or mov xor (bad) or (bad) xor pop (bad) push mov enterq mov rep push pop mull push sarl test jno sbb pop leaveq mov rex.WB movslq ds outsl test (bad) sbb fcoms fmull pushq jge sarl xor rex.W adc xchg push loope cs shll mov (bad) mov (bad) js or fwait mov pop add add pop fcomp (bad) cmpsb (bad) lods mov int3 scas jmpq movabs clc (bad) (bad) rex.R std (bad) clc fisttpl (bad) retq xlat xor neg or xorl jne fisttpl pop rex.B jno xor (bad) (bad) mov jmp repnz mov and (bad) loopne (bad) sbb jns and ffreep cmpsl pushfq xor sbb sbb jrcxz push in sub sbb push movsb push mov (bad) callq or jae fldt (bad) sbb pushq xlat loope jge jo mov lods movabs mov (bad) cmp sbb (bad) mulps jns rex.XB lods or and mov cltd sbb rex.X sbb rex.XB fdivrl fimull mov test ja test out shll (bad) pop lods imul (bad) jp hlt cli roll loopne je std std icebp push movsb fsts (bad) xchg pop sarl jno sarl fistpll mov mov or (bad) rcll insl scas xchg mov movabs retq jnp xor mov push out hlt fmulp (bad) jb xchg clc mov sub (bad) notl fcompl movabs rcrl outsl (bad) (bad) sarl mov pop shrd adc roll fs callq mov leaveq repnz add (bad) iret loop (bad) jmpq rex.R movabs int3 sbb je cmp mulb fcmovnbe and cmp stc clc outsb (bad) (bad) xor (bad) cltd and test lahf (bad) lret mov mov mov loopne push and mov mov int3 cmp xor enterq xchg rex.RXB scas (bad) (bad) fidivr pop mov rex stc ja test enterq iret rcll add rex.WRXB loop int loop out rex.R pop rex.WRX mov in jo ds and sbb stc pushq test (bad) loop fnstcw int rex.RB (bad) repz sub sbb repnz enterq rex.WXB rex.W (bad) fimul sub (bad) movabs fadds sbb repnz sbb movabs imul in gs out pop fidivrl ja xchg xor and pop adc (bad) (bad) rcrb (bad) loopne std fs adc shl cmp xorl (bad) jrcxz sub pop fild sub fsts or pop movabs xchg (bad) stos lret cmc lret mov push leaveq push jp int3 rex.RX out (bad) (bad) ja add xor jmpq and lret retq or test hlt jae mov xor sarb leaveq jb loopne add jno sbb fiaddl rex.WXB rorb jg loope jo (bad) test or xor (bad) mov sub and icebp jp f2xm1 callq addr32 (bad) fld leaveq xor (bad) mov fildll repz sbb cmp fistpl (bad) in idivl movsb sqrtps (bad) int3 sub add add (bad) movabs (bad) repz (bad) fisubr movslq sub (bad) cs stc clc lods int xor sbb rolb adc mov std incl repz fldenv popfq cli add shlb jne mov loope int fistpll mov mov (bad) mov mov mov sbb cmp or (bad) xchg (bad) int3 stc (bad) mov outsl or adc lods lods mov (bad) test (bad) mov rex.WRXB sbb sub mov fucomp sbb cmp (bad) pop in loopne (bad) mov adc fidivl mov rex.WB jnp add cmpsl lret repz (bad) xchg movslq rex.WR in neg test repnz stos fimull rex.XB rcrl lahf int3 loope jno rex.B loope div movslq fxch jnp fcoml sbb int3 pop xchg (bad) (bad) rex.B rex.RXB ficomp imul rex.W (bad) repz sbb callq scas xlat or (bad) repnz (bad) fildl jmpq (bad) (bad) movsb jp not fstps je (bad) or rex sub outsb js leaveq mov mov je xlat rcrl cmp roll pop stos mov jmp (bad) mov mov jg pop ffree (bad) adc pop mov add ds in jb mov mov lahf fdivrp (bad) jbe add sub mov test retq shrl insl and or ja jmpq cs ss mov test sahf rex.W fldenv cmp sub or in fucom (bad) int jae out (bad) mov rex.RXB cmp (bad) adcl (bad) ja std mov callq repnz loop cmc notl fwait pop mov shll test outsb pushq movabs loop movabs xchg jno out out mov nop cmp retq sbb rex.WX lret (bad) fild (bad) fisubr cmp test mov push faddl gs xchg sahf (bad) push repnz rex.RXB or xor xor jo ss (bad) mul mov icebp push and xor test popfq push rex.RB test or jae fsubr int3 fwait jge (bad) (bad) jmp movslq add rex.R jmp (bad) (bad) clc jmpq movsl xchg mov out pushq movslq or xor sbb (bad) add jmp mov (bad) and add movabs notb cld xlat mov nop sbb rex.WRX (bad) jmpq adc adc es sub rex.R fdiv (bad) icebp add sbb fwait mov (bad) rol mov (bad) mov sbb sub cmc xchg mov adc (bad) repnz cmp jae je,pn (bad) pop sbb hlt pop mov (bad) iret movabs (bad) (bad) cmpsl test mov (bad) (bad) je fs cltd repz add mov cmp xlat xlat mov movabs jbe (bad) out rclb nop movsl xchg repnz rex.WB fstpl cmp jl (bad) rex.RXB and repnz add sbb rex.WR sbb int (bad) or ja add mov pop mov mov and fwait pushq cmp mov pushfq test pop cmp sub adc or retq rcrl add (bad) pop sub lock loopne mov push rex.RXB rex.XB test (bad) jg (bad) jge xorl rex.W (bad) add repz cmp (bad) or sub mov (bad) rex.B mov rcrl mov sarl or rcrl jne xor jno jrcxz rex.WX (bad) imul xchg fcomps js pop out jno pop sarl fisttpll movabs jrcxz rcll and repnz mov (bad) loop (bad) cmp (bad) insl (bad) (bad) push xchg shrl cmpsl jl cmp and mov fistpl cli jne xchg loop retq movabs (bad) mov rcrl pushq rcr rex.RXB rol rex.WR rcrl sub out mov rex.WX shrl frstor (bad) (bad) xchg fndisi(8087 lods lahf (bad) xor mov scas adc xchg testl (bad) mov (bad) movslq pop cmp (bad) add add sti jb rex.B stc callq pop shrl or (bad) (bad) movabs lock andl loop callq xor retq test rex rex.X xchg int lret mov (bad) rex.WRX add nop shll jno test jbe xchg jrcxz,pn adc rex.B pop mov lods repz cwtl rex.RB (bad) add jno (bad) push cmp jnp bswap test mov rex.R repnz rex.WB and (bad) mov sbb jmpq mov clc (bad) jae mov push (bad) test mov jp mov gs rex.W sub js (bad) (bad) jb lret imul jnp push jmp xchg sub or ja xchg jle fmuls fdivs cmpsb mov hlt ficomp outsl cmp cmp pop shlb xor insl jrcxz out repz loop rorl jnp cmp mov jrcxz (bad) push rex fstpt mov lret (bad) cmp rorl push cs sbb icebp out and (bad) (bad) rex.R hlt push sahf mov pushq adc xor and fwait pushfq ds int xchg (bad) push insl lahf gs repnz add mov mov add andl icebp push jae pop mov sub or mull sahf xor xor (bad) lret xlat rex.RB ss mov repnz in stos (bad) fldcw rex.RB rex sbb mov mov mov jb (bad) lret cmp push jmp mov (bad) (bad) imul cld movslq cld jle jo stc out stc test movslq cli jrcxz fsubs movslq sbb sub stos add sahf mov pop out adc mov sbb (bad) test int3 xchg bnd addr32 lahf pushfq sub rex.RX fdivs callq pop mov jno (bad) push mov jb mov xor fidivr jae jmpq jrcxz mov loope (bad) xchg loopne mov mov (bad) rex.RB rex.B sbb rex.B rex.WX test jne sub icebp sbb int3 jrcxz rolb jnp out bnd (bad) (bad) sbb (bad) (bad) xor loopne and jns loope ficomp notb xlat adc jg fisubrl push rex.R in rex.RXB mov popfq outsl in or rex.WRB (bad) sahf mov pushq sbb jo leaveq out cs rex.W jae rcrb in and cmp xor mov rex.RXB cmp rex.RB rex.B mov es (bad) rex.R (bad) imul xchg jrcxz (bad) fsubl xlat rex.B hlt sbb xor (bad) add jle outsb hlt sarl subb fidivrl (bad) and fsubrs push mov rex.WB (bad) sbb fidivrl (bad) insl mov pushq (bad) pop add add and leaveq rcll repnz mov xchg adc clc rex.R adc movaps xchg (bad) xchg lret insl insl sbb test push scas cmp cmp and cmpsb (bad) shrl in pop loop and (bad) (bad) sub rex.X outsl xor rex.WRB xor outsb loopne inc movabs push in test add rex.RB or outsl lret (bad) je (bad) push clc xchg and mov jo (bad) xor repz mov adc or (bad) mov lea shrl imul mov loop roll xchg rex rex.WRX rex.RX vcvtdq2ps sub shl ss lret cmp jnp pushq rex adc push (bad) pop rex.B int3 hlt sub lock pushfq outsl (bad) sbb or (bad) lret test fadds and sub (bad) lea jg lahf and cs test int3 xor ss jne or cmp rex.WB rex.RXB rex.B adc (bad) mov jg je mov sti mov test addl xor cmp mov cmpsl rex stos test repnz fiadd or (bad) sub fsts loope sub (bad) jrcxz loopne add or es repz (bad) fnsave popfq add adc and movsl test adc cli (bad) test fxch (bad) lret movabs rex.B (bad) idivl in add cltd imul in retq mov repz sub movabs xchg inc or push xchg scas mov pushfq adc (bad) pop xchg idivb cwtl (bad) rcll (bad) (bad) cltd mov add adc movsb xchg scas jns (bad) sbb mov and and (bad) bnd rex.RB cmpsl (bad) (bad) lea (bad) jb ror lret ss mov out jmp push xchg add cs scas enterq comiss cltd loopne data16 add rex.RB repnz (bad) lock icebp movsb xchg clc ss xchg jnp sahf shlb jne rorl pop movsl shrl std jrcxz pop retq movabs rex.WRX xchg pop in rcl (bad) movsb cmp push or xchg cwtl movabs cmpsl or jrcxz (bad) cld mov js hlt rex.WRB shll repnz xchg in test rol adc rcrl or out rcrl add (bad) mov jne int or cmp mov movsl (bad) insl (bad) push xor xor fisubl (bad) fstl lea xchg test (bad) test xchg loopne rol jmp pop jg mov (bad) adc jb (bad) stos (bad) sbb mov stc sbb sub jmpq iret push fs movabs (bad) xchg jl addb fiadd callq (bad) gs fldenv ja cmp pop outsb add cs (bad) cli jns jae rcll insb movabs xor pop adc push cmc (bad) mov push xor stc repnz (bad) xchg xchg stos (bad) repz es roll fdivr pop add int3 xchg (bad) lods and (bad) test or sbb gs retq mov add addr32 jrcxz mov (bad) outsb xlat jle jae fldt xchg (bad) (bad) xor (bad) or div cld mov sarl (bad) insb rex.WB or mov and sbb xor in sarl push clc pop (bad) stc movabs mov or jns sarl jle not or (bad) imul jo lret add and mov pop out (bad) rex.WRXB loopne add movabs mov cmp adc rol rex.X cmp retq subl ja (bad) rex.X std push fwait adc xchg std (bad) rex.X add mov mov clc (bad) and push (bad) add (bad) movabs (bad) cmc iret in cmpsl ja (bad) (bad) jg pop rcrl or nop rex.WRX (bad) out xchg sarl mov rex.WXB rex.B xchg (bad) mov js (bad) callq mov cltd mov mov int3 (bad) stos int iret push fcoml mov (bad) leaveq (bad) pop pushq jl sub sub push outsb add loopne cltd sub xor jp outsb icebp jge xlat sub adc je cmp add rex.B pushq mov (bad) cltd sub (bad) cmp cmpl je lea jp out lahf cli xor or sub pop test movaps fcomp xchg (bad) adc vshufps (bad) or outsl or fbstp xchg pop jo (bad) sub push push (bad) cmp push lock xchg cmp pushfq fldt or rex.WX rex.WR or jo outsl xchg mov sbb (bad) rex.X imul rex.WRB lret sarb cmp loop stos rex.WRX (bad) and fs mov test stos int push insl mov (bad) mov retq pop jnp (bad) retq mov push mov cwtl (bad) fstl pushq movabs jle js (bad) sbb mov movsb test cmpl (bad) mov movabs sub jno rolb movslq jne movsb mov (bad) jno jle rex.R cmp rex.WXB ss rex.W xchg xchg movsl pop adc (bad) fdivs add mov (bad) xor cmp hlt out pop cmpsl push outsl jns (bad) (bad) push jmp xorb xor movsl push pop sti (bad) cs mov in rcr or out jne rex.R (bad) and jmp (bad) sahf imulb mov out push sarl adc out xchg (bad) jo xchg xchg rorl fisttpl (bad) jno jrcxz or ja iret xchg retq in and push adc loopne (bad) and mov mov adc (bad) pop (bad) jb sti cmp lret movsb cmp (bad) jp or rorb mov jno popfq rex.WRX callq and jmp popfq rex.XB mov or rex.WB loope int3 in mov (bad) out xor retq (bad) rex.RXB repnz loopne xlat cmc pop add pushfq sbb rex.WX stos enterq cmp frstor rcll add fcmove imul mov jmp repz (bad) add test add xchg movsb lcall repz (bad) push fs retq sarl rex.WRB rex.WRXB nop rorl cmp pop stc rex.X (bad) sbb retq jmp fist hlt movabs rex.X (bad) leaveq mov add mov cwtl repz mov xchg (bad) rcrl and (bad) rex.WX movsl mov xchg insl incl and jl mov faddp pop adc sbb (bad) lahf rolb and nop mov rex add neg stos push jnp ds rex.WXB outsl test sub xlat push scas rex.RXB stc mov rcrl movabs fnsave in or add addb addr32 shll mov test add pushfq (bad) sbb mov rcrl sub (bad) and xor (bad) add jnp pop (bad) iret (bad) jmpq js cld sub movabs pop or pushfq (bad) push xlat popfq push xchg jrcxz callq callq jmpq test fnsave xchg pushfq stc scas mov loope int outsb sbb subb in int3 cmp pmulhw mov rex.W pop (bad) (bad) fstps in and sti rcrl lret adc rex.B pop jne scas xor mov test mov (bad) shlb movsb cmp (bad) sub (bad) gs push adc sub scas test outsl and repz xchg roll add mov in mulb rex.R ror fwait adc mov cmp iret mov movabs movsb rex.RX movabs (bad) (bad) fwait orb rex.R xchg (bad) or xlat stos sti add mov insb rcll shr pop rex.RX mov (bad) sar jae adc (bad) insl outsb xor mov lock sbb in pop sub cwtl push cld push jl mov in rex.WRXB jne clc xor mov shll pop imul xchg callq pop cli or or add pop push shr pop sbb push movabs movsl (bad) push in enterq gs add rex.R pop fisubrl pop sti mov mov push movsl and jno repz cwtl movslq xchg (bad) jbe (bad) adc (bad) sub clc (bad) cmp shll mov xor jb lret repz icebp pop pushq lahf cs xchg (bad) rex.B sub pop lea push outsb std sti or and ljmp adc push leaveq (bad) addr32 pop (bad) pop add fistl xchg xor pushq and repnz icebp mov xchg push cmp pushfq push hlt je mov roll out rorl xlat stos rcrl push insb cltd movabs pop jb adc add (bad) sbb (bad) shlb (bad) jle in subl or scas (bad) sbb cwtl addl cmp (bad) rex.WR jo rex jb repnz fldcw lret rex.WR rex.XB add mov jle jg rex.B faddl or adc mov fcmovne loope (bad) rol imul (bad) jne (bad) xchg add rex.WRB hlt or sub rex.RX addr32 (bad) jo (bad) pop rex.X adc fcoms jg mov rex.WB xchg fsts cmp jnp retq add movsb insb sbb rex.WX mov test (bad) sub mov fsubs fldenv adc cmp (bad) pop rex.WB pop (bad) repnz cmp add jo pushq callq mov loop add jae (bad) and callq lret out pop (bad) pushq or xchg pop rex.XB movabs divb retq mov xchg movabs pushq rex.RX push loop rorl (bad) cmp ffree cs movabs out xchg pop mov add rol f2xm1 pop sub lea (bad) or xchg push andl loope int rex.WB sbb iret jne (bad) xchg out lea repnz rcll out lret fs sub sbb (bad) xor cmp addl (bad) push loope mov (bad) push push cmp rolb rex.WRXB insb xor outsl (bad) mov sti or adcb or or rex.R (bad) adc cmp loop sub mov movabs fs callq rex.WRXB sub and (bad) rcr pop std out jg sahf pop or imul retq jp jge scas js fcoms rcrl movabs rex.WXB jno ss scas sar movslq sbb (bad) jmp negl cld mov and movabs rex.R jne retq jl mov and incb rex.WRX mov sbb shrl or rex.WXB lahf sarl rex.WB pop cmp xchg adc mov (bad) mov je icebp xchg sbb nop xchg movabs rorl mov jb or rex.W rex.B ss rex.WB iret sbb mov mov popfq jo cmp xchg cmp sbb push sub shlb cmovp adc sarl rex.RXB mov jge rex.WRXB jnp cmp xchg loope clc rex.WXB pop adc cmp (bad) adc mov setl cmp movabs test rex.R rex.RXB cwtl cmp add mov add cmc cmp cmpsb sbbb mov and push rex.WRB mov es (bad) repz rcrl push mov and jmpq in out data16 add xchg and jle roll mov cmp sub mov lock xor repnz repz jle callq jae sbb sbb in rex.RXB mov push in sar or cmp cs rex.WX rex.RB movabs stos repnz add jp sub xor icebp (bad) jo out mov pushq mov xchg pop and (bad) (bad) add rex.X insb imul (bad) (bad) pushq sub push jle mov ror cmp pushq ror xchg (bad) rex.WRB stos shll (bad) negb sbb adc sbb xor cwtl push in jo repnz mov in lret fiaddl in pop (bad) (bad) add sbb adc test je jb sbb and mov xor scas (bad) jle loope add fldenv jne vmovlpd xor fild mov rex.RB ss rex.RXB or icebp movslq xor rex.X sti cmp test or rex.B fild rex.B mov (bad) jmp sub (bad) xor pushfq jo adc (bad) test mov mov rex.WX mov or shll rex.RX es jno lret shll sahf mov outsb rcll and rorl nop fcmovnb outsl test xor sbb fcomps sub scas or ds (bad) mov pop fnstcw rcll mov jrcxz mov adc callq sarl out mov adc and xchg movabs or rcrl or mov pop out xor shrl xchg (bad) rorl movabs xchg addr32 rex.XB and pop fwait sarl lret movabs sbb or adc and xor fnstsw adc movabs (bad) mov scas rol (bad) lods xor out shl rex add shll adc movb jp rex.XB sub (bad) flds rex.WXB add iret xchg rcll fild fsubs rex.WX adc retq sbb lods ror sbb (bad) outsl rex.WRXB repnz test rolb imul mov (bad) cmc sub scas mov (bad) mov push or xor addl (bad) out (bad) mov lret mov rex.R pushfq sbb out int3 pop mov pop mov out out add out jnp mov xor jns (bad) cwtl fstl rex.WRX xchg rex.B push xchg mov cmc pop loope movb movabs xor (bad) adc std and or xor sbb rex.WX rorl int3 add gs add insb rex.WX sbb repz sub sub cmp pushq xor (bad) cmpsb leaveq add lock jle or sub xchg (bad) adc sbb add xchg sar sbb sbb mov xchg movsb and mov mov movsb enterq stos shll clc xor in (bad) callq (bad) (bad) and loopne subl stos int rex.XB fildl loop movabs sarl (bad) sub jbe (bad) mov mov sub push jmpq pop imul mov pop xor fiadd xchg mov jno scas (bad) cwtl rcl mov pushq rex.WR add popfq sarl sub rex.B adc mov or cmp std xchg shrl lea test rex.X repnz jo retq xchg popfq movabs and xorl (bad) jrcxz mov (bad) iret out rclb lret (bad) movsl (bad) repz stos add jbe push mov ror mov mov add push js and in jne xchg add add cmpsb add mov (bad) std shll cmovs insl fs mov mov and cmp (bad) xor rcrb fidiv movabs add pushfq out ds gs (bad) movabs push fyl2x lock xlat mov push je insb pop and rex.WRX cltd (bad) xchg pushfq (bad) (bad) sbb (bad) fistp fcoms and mov (bad) and int3 callq (bad) mov rex.WR mov jno or test (bad) (bad) add xlat add (bad) shlb nop pop addb rex.RB (bad) (bad) sbb movabs (bad) std bnd ficom mov jg rex.WXB ss ja stos (bad) adc (bad) notl test js xchg xchg (bad) in mov sub (bad) pop mov fwait or sbb rcrl xchg rex.RB rex.B out (bad) test repnz lods adc jle loope lret pop sti enterq (bad) add std rex.W cs popfq in mov data16 imul mov lock and xchg mov and sbb mov lret xchg rex.RX stc rolb rex.B mov out sub rclb rex.WRB rex.XB (bad) or movabs loop adc jle movsl (bad) js sbb or rex.RX in add imul cmp sub (bad) loope cmp mov rorl stc mov push adc movsl xchg adc mov ss xor shll (bad) xchg add pop (bad) push xchg adc (bad) movabs fnstenv pop lods fsubl cmp rorl test rcrl (bad) jp mov jmpq jmp fs pop jno sbb cmc mov mov mov jbe jb cltd rex.RX pop sbb sbbl pushfq pop cmp jnp (bad) rcll xlat xor roll fcoml pop sahf sbbl (bad) imul (bad) xor iret rex.WXB cmpb stc and std movabs lods rex.B (bad) rex.WR xor push mov sbb xlat rex.B pop (bad) (bad) jmp jl add adc jmpq rex.B lock movabs sbbb (bad) out (bad) fsubl (bad) pop mov xor (bad) (bad) (bad) xchg jbe (bad) pop faddp or xor cld shll stos (bad) and int cli cwtl and (bad) (bad) es rex.WXB push rcl push (bad) xlat (bad) mov cwtl rcrl mov ja push movabs cld (bad) sub rex.XB data16 leaveq adc repz mov mov (bad) cwtl es (bad) insl nop pop sub in je fwait sub cmp push jl lret or cli lahf adc lock sub (bad) mov jno repz (bad) stos sarl mov ss out lret fwait (bad) mov pushfq xor push mov lret push leaveq (bad) mov push cli mov fistp shrl xor stc in mov and mov test stos movsl (bad) rolb xchg int in mov (bad) sarl rex.XB jg rex.WRXB mov and out jge rex.B mov shrl test xchg cmpsb mov pop pop data16 add retq (bad) icebp xchg mov je ss stc rclb sahf sub shrl out in shr (bad) movsl add (bad) sbb and rex.RXB pushfq loopne push decb (bad) sar and rcll pop (bad) movabs push movabs jno push loope loope cld add mov sbb rex.WXB add mov rex.WRX repz push icebp rcl rex.WX (bad) xor adc xchg pop (bad) sidt mov pop or pop sarl std (bad) retq lock add cmp sbb (bad) mov add (bad) cmp mov rex.R xchg (bad) (bad) xor ror faddl cmp (bad) fsubrs (bad) xchg jmp (bad) in movabs clc test enterq jns rex.WX jno and jb add adc and ss pushq xor mov adc rorl (bad) jne fs push rex.WRB or roll scas mov movabs cmpsb rorl rex.XB imul fisttpll (bad) (bad) movabs xchg cmpsl rex.WXB sbb pop (bad) and stos lcall rex.RX and shrl cmp imulb sar push sub repz rex.WR xlat imul mov (bad) rex.WRB xor mov mov rorl mov push lock fdivrl movabs jp xor popfq jns insb push jl jmp (bad) add nop (bad) (bad) incl fld jo mull lods and mov sbb nop rex.R adc add or fisubrl (bad) lret int3 rex.WRB icebp fnstsw ss test (bad) mov and test mov ss mov jae mov loop jmp (bad) mov xor rex.R and mov out jl faddl rcr (bad) pushfq (bad) (bad) rex.W (bad) xor xchg or (bad) xchg add (bad) flds fsubrs and jb pop (bad) (bad) (bad) xchg stc mov jne (bad) sahf jmp jns adc adc rorl rex.WXB push std lods sub push xor or sbb xchg rcll (bad) shl fdivrs mov lahf roll andl or insl cmp hlt jl adc in rex.WXB repnz rcrl rex.W shrl pushq hlt shrl jrcxz (bad) add push pushfq jge iret jg rorl incl callq or jp sbb or mov mov cltd mov xchg xchg retq mov int3 cmp (bad) rex.RX rex.X jg movabs (bad) imul loop rex.WR (bad) rol insl and lahf movslq xchg frstor rcrl retq mov sub vhaddpd xchg fidiv (bad) add xor xor sub xchg sub mov stos lods lret loopne or sarl es rep mov cli cmp xor push jae (bad) rex.RXB push add test rcl mov sbb sbb mov jp rex lods insb (bad) push (bad) and adc in xor movabs cmp and int3 and sar imul (bad) sbb clc or pop mov (bad) jg add callq pop (bad) jno or xchg sub sub xor lahf imul add rex.WB adc clc sub stos push in rex.B jne (bad) (bad) xor outsl callq xlat push popfq fsts clc cwtl std (bad) jg cmp addr32 add (bad) rex shrl movabs adc add test (bad) addr32 outsl stc (bad) add (bad) xor rclb sbb movabs xchg scas xchg sub xchg add rex.WRB rol and (bad) movabs nop out (bad) imull (bad) push cmp xor (bad) shll xor mov fcmovb pushfq add jbe rcrl adc cmc jge sahf xorb fidivl cmpsb mov adc roll lahf rex.W leaveq out lods jp mov popfq xchg or (bad) lret clc out pop mov mov cld movabs (bad) and pop loop roll cltd pause icebp rcll push mov lret xchg add or test fldt movsl (bad) (bad) scas xor movabs rcl es mov rex push (bad) jrcxz push shll loop,pn fs icebp jge (bad) or rex or rorl cmp test xchg cmp imul movslq sar mov sti jmpq sub test jns rcrl rex.RX (bad) es add cld jns rolb rcl mov shrl push xchg sub int3 nopl jo shrl movabs lret pop (bad) shld in ror movabs add add movabs addr32 cmp xor (bad) stos mov jno,pt (bad) sub (bad) idivb or pushfq movslq pushq sub frstor outsb cld movsl ror cmp rex.B adc data16 and movabs mov hlt popfq lahf rorl enterq test shll clc or loopne (bad) ja data16 (bad) and (bad) shll push xchg ds rolb xorl nop rex.WRX rex.R lret jge xlat mov mov add jb movslq and fwait mov mov (bad) in xor test or int3 roll in incb mov rex.WRX sti shll and fldt sbb xchg mov xchg roll sub in (bad) pop (bad) scas rex.B testb xor rex.X pop (bad) jae rex.WX mov mov test rex.B gs cmpsl mov and fidivrl adc (bad) jp (bad) pushfq jae rex.WX push push xchg jg enterq pushq jae (bad) xchg std (bad) movb leaveq jmpq shll mov (bad) pop push cmp lods add movaps outsl (bad) rex.WRB add ja and xchg mov (bad) xchg movsb retq sbb jo (bad) and stos xchg int (bad) loop rcrl xlat and adc roll ror mov stc xchg cwtl (bad) push (bad) subb or rex.XB adc pop sbb cmp movabs and push adc sarl sub adc enterq js imul (bad) fsubl push mov int addr32 nop and jae mov mov mov pushq popfq in cli cmpsl (bad) (bad) stc int and mov cmp mov fisubrl lret scas outsb retq movabs data16 xchg rorl mov adc xor (bad) adc fwait sar xchg mov vpmulhuw push divl push adc movabs pop mov rcll movabs int xchg std adc sub test (bad) (bad) rcrl mov and movabs xchg (bad) movabs (bad) xchg enterq adc inc int nop (bad) mov xlat pushq xor pop (bad) lock xchg mov or stos pop (bad) shl lock (bad) (bad) loope and mov and xor rex.WR rcll jnp popfq (bad) ja hlt in fdivl jmpq mov xchg sub xlat pop scas sub sar outsb fwait pop lea shll jno (bad) loop,pt adc xchg (bad) and shrl sbb mov mov (bad) mov sub cltd shll and (bad) mov movabs jle imul rex.WRX jge jae rex.R repnz and lahf pushq cmpsb xchg rex.WRXB lret callq fstpl rex.WR jg rcrb fnstenv test movsl rex.X imul ja mov mov mov jb push (bad) or icebp and fidiv (bad) in insb lahf out rex.B dec xor sub mov rcrl adc add lea sub pop ds stos movabs xlat outsb xor xchg rex.B mov (bad) adc cmp scas sub cli (bad) lahf rex.R pushfq test (bad) ja xor imul cmpsb cmp loop movslq lahf movabs rcll sbb jno js (bad) lahf lods (bad) (bad) rex.RXB jmp adc cltd retq (bad) (bad) sub add iret mov and (bad) sub adc sbb mov jge movsb mov sarl xor stos callq and jmpq out rex.WX rex.XB insl adc fbstp in movabs mov (bad) push jmp out mov and (bad) lahf (bad) adc jae mov sub mov mov pop mov decb lahf loope imul xor pop push adc sbb rex.RB mov pushq mov int lahf and ja (bad) rex.RB xchg jge add rclb gs (bad) (bad) cli movabs outsl xchg roll (bad) leaveq mov or and jmp xor std pop xchg rex.R add xor sbb (bad) jno adcl ja or out cmp retq mov data16 movabs sub cmp jb and mov movabs mov xchg rex.WB adc pop stc hlt jge mov movsl rorl and popfq xchg leaveq sarl mov pop movsb cmc cwtl rex.WRXB cltd fiaddl rex.R pushfq cmp shrl push mov sbb pop adc push movl jge jbe repz movabs jae rex.WRXB (bad) movsb lret (bad) add pop cmp cmp jo retq test rex.WRXB rex.X pop xor adcl (bad) mov push movsl retq popq in lods shlb cmp push xchg add ss es fnstenv (bad) out nop jae popfq rex.B mov (bad) jnp sbb pushq rcll (bad) jo or jbe (bad) imul sbb pop es sub mov (bad) and xchg (bad) rex.WRB pop fwait xchg (bad) lret rex.WXB mov rex.R lret (bad) (bad) fnsave movabs out jb pop loope mov lock rclb (bad) rex.WB roll adc pushfq enterq sbb (bad) sub stos movabs je rex.R rex.WRB (bad) rex.WR (bad) (bad) pop iret out jle add shr loope rex.RX nop add xchg rcll in (bad) mov xchg adc rex.WRXB sarl sbb lret fistl mov cmp sub push (bad) xchg pushfq (bad) ffree imul and jnp ds insl insb push (bad) mov addb retq xchg xor fiadd (bad) clc lret sub adc test shrl leaveq cmp rex.RXB repnz (bad) push andl add repz (bad) rex.R cwtl jle outsb rcrl popfq repnz in rex.WRB imul flds xchg addr32 sub (bad) jmpq (bad) movsb add pushfq movabs (bad) fildl stos shr rex.WX movslq adcl test movabs xchg popfq shrl (bad) stos shl rex.WRB cs add xor xor retq jmp (bad) icebp jb and (bad) rex.WR fs roll lret (bad) jno mov sbb jg lock out rcll (bad) push jmp lret jns loop callq xlat sub or test test xor mull int3 movsb adcb mov push mov std int stc or outsl test jnp sub out add mov mov mov loopne subl (bad) ja pop stos pop movsb pop push sbb addr32 (bad) or rex.B mov pushq jbe (bad) mov movabs cmp pop mov mov xchg shrl push test retq callq pop mov pop mov adcl test xchg movsb or jbe mov and and jle mov imul movsl (bad) rex.RXB and scas (bad) mov (bad) xor ds (bad) popfq in (bad) mov mov roll adc sbb mov pop js rex.XB shlb mov fstpt and push (bad) loopne movsl callq (bad) adc retq sbb xchg (bad) cmp in xchg jbe scas xchg (bad) outsl add rex.WB iret jle rex.XB pop sub jnp pop xor in (bad) lret rex.X out outsb pop rol cmpsb xchg rolb (bad) mov nop fsts dec outsb cmp int3 icebp and sbb insl jbe push out add rex.WXB mov movabs in fsubrl sub stc xor xor rex.RXB repz (bad) gs xor xlat xor (bad) rorl test jmp loopne mov cmc rorl sti cs cmp (bad) pop in retq stc sahf pop shll roll adc (bad) cmp notl or or mov rex.WXB pop xchg cmp sbb or callq cmc roll ja (bad) rolb rex.XB mov fidivrl scas (bad) mov jrcxz cmp (bad) stc repnz in rex.RXB insl cmp mov push mov sbb fldcw (bad) in nop (bad) rex.R adc rex.W rex.WX jb mov sub (bad) xor stc xor addr32 sahf add rex.WXB sub adc stos movabs int and mov xchg scas (bad) std (bad) rex.R cwtl mov xorb push sbb push add push addr32 lret add (bad) or test xchg shlb fistl (bad) sbb rex in add adc shll loopne popfq mov xchg icebp (bad) movabs roll or loopne (bad) insl cmp mov or (bad) mov insl (bad) andl (bad) movabs addb leaveq retq or xchg lahf sbb mov (bad) out movabs (bad) pop callq movabs cmp pushfq push (bad) (bad) sbb mov sbb mov je sbb mov mov mov mov int3 xchg (bad) int in xor mov scas (bad) jns,pn xchg sbb or outsl mov movabs test and xchg es mov adc jne jmpq movabs jp xor cmpsb lods (bad) (bad) fiaddl fstp je cld pop or or rex.WR jp rcrl add push rex.W shll out imul cmp mov add (bad) cwtl rex.B xchg fs repnz xor (bad) mov cmc repz movq sbb jp leaveq in (bad) test jns rex.W (bad) (bad) sbb pop pop callq std xchg addl and (bad) mov add mov clc loopne jrcxz pop mov lea mov (bad) mov rex.W sub (bad) ja (bad) add cmc mov (bad) mov icebp xchg adc rex.R test push lret sbb sub (bad) mov (bad) hlt in int shll (bad) xor mov adc imul insb cmp and sub add fdivr int3 xchg jo outsb (bad) (bad) cmp sub push add repz cmp out sbb adc fcoml (bad) mov imul xchg mov rcl mov pop out data16 mov test cmp mov sbb mov fwait cli jno or fs int push mov (bad) outsb pushq pushq (bad) lock sti mov and rex (bad) jbe in movabs fst es stos repnz je mov in enterq xchg insb or sub xlat stos or or mov ja (bad) mov xor adc out roll enterq sarl jmpq rex.WXB (bad) adc rex.WX rcrb or jbe add and js out hlt mov (bad) lret fwait (bad) stc jrcxz (bad) sbb out outsl jrcxz cmp or and stos mov rex.RB add shll popfq mulb clc (bad) cmp (bad) stos pop out xchg (bad) mov xor mov int3 rex.WB (bad) incw sub xor int pop sbb mov cmpsl rex.WR cwtl pop sub (bad) cmpsb cltd cmp imul std pop xor lea roll xchg pushq rex js fldcw jmpq rcll rex.WB mov cmc cltd rcl pop (bad) push retq test pop and (bad) cmpl mov je shrq xor lock mov or add cmpxchg out xor mov scas adc (bad) xor repnz mov jbe out mov or or rex.WRX shll or test incb mov (bad) je ja push cmp sub mov or mov xor sub js movsb enterq jo rex.WRXB add adc rcrl cmp (bad) or loope jl in out in jmpq push cmp rolb (bad) mov sti sub (bad) xor imul (bad) add shrl in rex.WXB sub mov movsb rex.X fstl jns loope test rex.WXB lahf test and cmpsb movsl pushq cld (bad) pop jne pushfq rcrl jl pop cmpsb lret mov shll and or rex pushq (bad) fbstp xor add movsb (bad) shrl add add push test jo (bad) movabs jnp mov or movq jge fs xchg jno repnz scas mov mov push (bad) in (bad) leaveq and (bad) scas ja jge pushfq mov adc std out lods jae iret xchg rolb push neg (bad) (bad) mov in sahf in add pop clc mov movabs and push test rex.XB movabs fwait loop insl imul add or movabs nop push or jb rex.WX callq loope rex.X rex.WRB fisttpll out fdivrl pop lahf rex.B rex.WRB lods cmpsl negb pop rex mov adc fstpl callq nop movabs rex.WB mov rex.RB (bad) pop xor (bad) adc rex rex.WXB rex.WRXB mov cmp rex.X rcr js jns shlb xor nop xchg (bad) lahf jae fistp (bad) mov (bad) (bad) cmp imul rol mov mov movsb add add retq jae pop test pop icebp imul and (bad) addr32 ja fwait or movsb and ror vpmaxub movabs mov pop int lods (bad) scas pushq add jae (bad) out sbbl jmpq loopne sub pushfq rcrl mov movabs sbb in xor pop mov push (bad) movabs subl pushfq loop rex.WRB mov rex fistpll jb out fistpl in (bad) cltd (bad) rcrl push sarb lcall imul xchg pushq xchg movabs jmpq jp xchg (bad) rex.WR es rex.B rex.XB jrcxz nop (bad) scas sbbl (bad) jbe ds out mov add roll or cli mov rclb rex.RB and (bad) jne and mov pop je adc push callq and hlt jle roll loopne pop movsb pop sarl movslq (bad) insl xchg rex.RB (bad) ja fcmovbe (bad) sub xchg sbb xor stc popfq decl xchg rex.RXB shl stc fist movabs mov jne test div sahf xor adc pushfq loope and cmc movabs mov xchg stos rex.WRB (bad) lret rex.WB (bad) frstor rcrl push rex.WRX pushfq fmul in repnz es sub pushq and loop (bad) inc adc adc cmpsb rex.R rex.WX jno test rorl xlat mov mov (bad) push (bad) (bad) jne mov shll cmp callq (bad) iret js (bad) (bad) mov jbe sarl out xchg and rex.WXB xchg mov xchg (bad) sub sarl fsts or sarl stos pushfq lods enterq rol (bad) rorb pop xor jo lret fdivrl rcrl popfq lock pop test (bad) mov mov rcrl mov sarl icebp sbb test and bts (bad) imul psubusw fcmovb callq hlt or ja xchg inc rex.WRXB in testb adc or clc sbb mov icebp (bad) (bad) rex.RXB add fistp xor test fwait repz (bad) xor mov adc pop mov in rex.RB fadd jnp or movb (bad) lock sbb test add mov loop rex.WB rex.RB jae test (bad) sub push (bad) add add in push jge lret (bad) cli rex.WXB cwtl push or sbb sub adc (bad) mov in xor (bad) cmp sar js mov xorb lahf scas (bad) in and mov adc cld mov or movsb xchg or rex.WRB nop gs shrl lods cmp add leaveq (bad) orl rex.R rex.R jrcxz (bad) movabs (bad) mov (bad) mov xor jns out jge add and jg movb mov rex.RXB and rex.WRXB movabs jae add adc push sbb mov (bad) scas test pop cli add jp pop jb and jns cmp mov adcl clc (bad) ja jp jae ficoml (bad) (bad) or (bad) add push rex (bad) adc (bad) rex.WRB or rcrl rex.R add or rex.X (bad) out scas push icebp vpsubd stos add retq shll sub mov or sub repz rex.WX rex.WRXB in jmpq add xor (bad) (bad) rex.B xchg js mov fld rex.WRXB rex.RB mov rex.WRXB repnz sbb or jmpq cmp mov retq (bad) pop rex.WR and mov add sub (bad) lret sub lock test push (bad) mov (bad) xchg addr32 callq enterq sbb icebp add mov adc movabs out push int rex.WX sbb sbb pop shrb sub std fnstenv (bad) (bad) in shl out rex.RB movsb adc sub fs test rex.RXB imul or movsb add clc xchg jae cmp mov cmpsb (bad) adc pop lea add jmpq rex.RB fsub pop mov rcrl (bad) test in xor (bad) xor (bad) cmp jg and inc mov mov xlat pop jbe movslq es rex.RXB and xchg stos jb sub pop mov push adc rex.X and cmp (bad) rex.RB rex.WX jne (bad) popq mov or push std clc rex.WB pop rex.RB loope xchg rorl xchg jrcxz cmpsb (bad) (bad) pushq mov jns add popfq loop (bad) mov xchg in mov xor xchg lahf rex.WXB (bad) pushfq loopne rex.B rex.XB rex.WRXB rdpmc pop mov cwtl (bad) (bad) cmp mov (bad) adc sti jg movabs xor cwtl in jl (bad) cmp mov add cld and (bad) mov test movabs mov fstp rol rolb rorl loop rex.X rcl (bad) insb rex.WB test shll rex fwait lret pushfq and repnz lods mov iret lret jle (bad) jno fstl xchg int3 je (bad) push adc xor (bad) outsl (bad) popfq xchg (bad) rex.B addr32 roll add rex.RX rex.RX xorl movsl rcll rol test mov add xor decl add adc rorl mov rex.WRXB mov lret stc fidiv mov mov add icebp cmp fistl rex.W rcl sbb (bad) jrcxz jl repnz xor cmp mov (bad) adc insb jmpq jl xor movabs (bad) cmp fstps (bad) mov (bad) loope outsb loopne addl rex.B cli lahf xchg mov (bad) jno sub sub jl rex.R rex.WX out rcrl add sbb out rex.RB sarl xchg in retq enterq (bad) xchg (bad) sub jbe sub pushfq insb (bad) xor adc lock jo mov (bad) sbb xor rex.RXB mov (bad) callq pinsrw add loope xchg mov sbbl rcll cwtl test and movsl mov push pop jns sub lret rex.RB xlat adc adcb sub adc add lahf jl sarl stos rex.W imul mov loop test sarb sbb jbe fsubr flds jrcxz test sbb retq xchg retq rex.WR in scas pushfq loope add add int xchg lods push (bad) faddl xchg lahf sub rex.WRB xor incl pushfq movabs sbb jrcxz out rcl cmp and sub (bad) (bad) cmpl retq (bad) xor jp loope (bad) sub sarl in rex.WRXB enterq loope cmc lret ficomp andl rcrb add shr rcr rex.WB sbbl jmp rex.R clc and mov sub mulb (bad) mov cmpsb rex.WR rex.R movb adcl loopne mov fmull cmp jp xchg fwait enterq push lods and je rex.RB (bad) (bad) push (bad) xor adc gs pushfq es iret xchg and (bad) xchg (bad) repz cs push jrcxz or mov retq jge enterq sub (bad) xor mov (bad) in lahf (bad) (bad) (bad) xor (bad) add cltd je test je xor cwtl sarl pop faddp test push pop or retq sub (bad) cld (bad) (bad) sub (bad) jb sarl callq ss imul xor and jg jge sub std adc movabs idiv sub repnz nop mov rex.WB rex.RB adc (bad) imul pop scas rcll rex.B rex.B sbb xor jp sub or in lahf lods (bad) (bad) rcrl mov push movabs jmpq and vcvtps2dq rcr loope xor divl cmp sbb rcr and loope in hlt lret loope pushfq retq lods jns cltd or jae pop cltd sbb shll mov (bad) push sti sub rex.B jb (bad) sub mull bnd or leaveq adc mov rex.WB rex.XB (bad) movabs rex.WR sub int (bad) hlt sub jge pop pushq fsubs addl rex.RX (bad) adc movabs jge je test jg mov rex (bad) roll pop jrcxz cltd (bad) or (bad) rex.XB rex.RX xor cmp add adcl int rcll xchg cmp jrcxz lahf fwait pop andps (bad) pushfq (bad) rol or lods rex.WRXB sub movabs pop xor or insl mov xchg push xlat push in mov rcll jns pop loop xor rex.W iret je enterq es add (bad) movabs (bad) fbstp icebp cmpsb insb out icebp (bad) iret leaveq jmp sbb cs repnz sub iret movabs ror fs lock leaveq (bad) (bad) int3 jmpq fldl cwtl rcr cli in pushfq (bad) (bad) rex.B xchg add lret data16 xchg loope mov xor adcl (bad) sub mov (bad) mov xorl jle in rex.B xor (bad) (bad) lahf sbb (bad) (bad) (bad) ja lods (bad) (bad) rorl or rex.RX pop xor mov cmp clc jnp repz std hlt scas sarl sbb sbb ss out jl add in retq xchg rex.X cmp sub mov and sbb lret cmp ss sub int leaveq nop (bad) pop jrcxz ds loopne jmp fcomps leaveq rex.WRX rex.B (bad) rex repz jae fildl jl and cmc push (bad) (bad) sub xchg ds loopne (bad) jae push adc pushfq lock xchg lea xchg jmp jle jge adc jnp jle jne mov test rex.WB mov outsb movabs clc movabs rex andl fs add movslq hlt (bad) stos sbb mov mov push pushq (bad) (bad) and cwtl rex.WR rex.RX xchg lea cmp gs rex.RB xor sub pop xor mov shrl cmp movabs pop (bad) scas sbb add cmpl shl rex.X cld cmp (bad) (bad) fwait jle outsb push or iret movabs sbb sbb sub mov or pop leaveq scas test mov rex.XB loop (bad) xchg xchg pushq (bad) (bad) retq jmpq (bad) jmpq adc xchg (bad) imul scas negb shl rex.R gs adc jae jb test cmc test clc cmp jmpq jle je and push cmc setne cmc sbb mov cmp sub jmpq xchg idivb fild rex insb sbb mov cmp push sahf rorb test cmp jge fild movabs bnd and xchg out in mov jl loop jmp jle lea push lret sub nop loop (bad) (bad) lret cmp adc (bad) mov pop ficoml pop (bad) (bad) (bad) cld xorl (bad) (bad) callq sarb cmp (bad) rolb retq cmpsb (bad) icebp lea data16 add adc hlt xor (bad) retq repz push mov xchg (bad) adc jge imul int or sub jl out jb (bad) jl ds stos enterq fs iret pop leaveq pop lock (bad) cmpsb and xchg mov xor pop cld je jmpq push fild pop cmp jl xchg jmpq or mov movsb sbb (bad) (bad) jmpq test mov (bad) and pop (bad) jnp in jg shrl adc imul sub (bad) in ds lods and in lods sub or rex.W adc movsb scas in cmp outsb movabs callq xchg mov (bad) (bad) (bad) sti in idivl (bad) (bad) (bad) (bad) in in nop cmpsl (bad) and nop mov fidivl add add imul rex.W loopne mov (bad) fnsave sub (bad) and jrcxz (bad) cmp out roll (bad) leaveq lods fidivl xorb or int3 pop (bad) (bad) mov xor jae jmpq movslq (bad) mov idivl addr32 or mov movabs jo scas pushfq mov push (bad) rex.WB sar (bad) jne add (bad) repz jge (bad) movslq scas je movsl fcoms in cmp jnp fcmovu movabs nop jg icebp in or mov xlat (bad) xlat ficom and pop rex.WRXB hlt mov adc rorb (bad) out cltd int fildl (bad) (bad) (bad) sti rorl (bad) rex.WRB (bad) (bad) (bad) (bad) loopne sbb mov outsl lahf jp sbb mov jp or sub (bad) pop icebp js xchg jmp sti rex.RX mov enterq push je (bad) (bad) (bad) (bad) out push (bad) sbb int jp mov xor cmc (bad) pop lahf or insl lods test cmp cld xchg xchg scas mov (bad) (bad) cmpsl mov out cmp xchg mov stos mov (bad) mov xchg jne jmpq jmpq add rex.RXB gs imul add neg clc test btc push dec mov inc sub stc seto not sub movsbw lea movzbw lea bswap mov movsbl mov movsbw movzbq mov lea bswap lea mov not movzbw lea jmpq and or cmpsb fldlg2 adc es test (bad) rcl retq out fidivrl xor (bad) movsl imul adc fld stos cld movslq jg fwait cwtl rex.WRB movslq hlt (bad) insb xor or mov mov (bad) mov movabs scas lea xchg sub movabs sbb (bad) (bad) (bad) cld rex.RXB in test xlat shrl (bad) jae clc enterq push cli imul add push int3 rex.RXB rcr (bad) (bad) (bad) fnstenv push cmpb fstl addr32 push push cmp rex.RXB rex.R jb cwtl cmc rex.B mov (bad) jno push xor (bad) adc pop out imul add jmpq jmpq ja cmp (bad) lock sub add rol jmpq callq bswap add not shld mov clc jmpq jmpq jne shrd bsr mov rol sub adc and mov jmpq fdivl retq xchg scas (bad) pop sub jne adc (bad) mov jno imul mov sbb fdivr xchg out xchg out mov mov sbb fsub fcompl (bad) jmpq rex.WXB shrb sbb int3 xchg pop repnz in adc xor (bad) (bad) (bad) (bad) outsl or retq and popfq mov (bad) movsb fistpl add (bad) cmp out movsb (bad) xchg mov add sbb je insl mov add xor jle sarl xchg sbb leaveq negl (bad) cmp (bad) xchg in jl mov movsb roll sbb cmp rex.RX mov mov rex.WRXB sub pushq fnstsw or pop xchg (bad) test jl mov fdivrs pop lods mov (bad) xor mov pushfq mov xor jae cld test loop and cmpsb rex.RX mov andl and popfq or rorb jle mov (bad) jo mov (bad) (bad) fdivs (bad) push fmull sbb xchg jbe (bad) (bad) (bad) sti rcrb (bad) (bad) (bad) movslq add push push (bad) (bad) (bad) jmpq ds or hlt (bad) hlt in insb (bad) cmp out mov rex hlt or hlt pop rex.RX pop js out jge loopne add xor (bad) rex.RXB (bad) pushq adc mov movabs bt test jmpq jb test clc stc cmp jmpq pop or fisubrl sub (bad) (bad) out int3 (bad) (bad) or callq xchg rex and imul mov je lea repnz shr adc or or rclb mov cs add mov (bad) rex.W jmpq imul and ja jb sbb (bad) (bad) sti jl mov decb clc out mov roll adc xchg sbb mov sbb push xchg cmp ja jg fdecstp cmpsl mov add popfq (bad) (bad) (bad) (bad) fcom ss cmp jae xor sbb sbb jae pushfq mov cmp mov sub sbb cltd or (bad) repnz rex.B lock mov cmp repnz stos (bad) mov and adcl rcr scas in fadds negb (bad) pop jl xor push rex.RB jne cwtl (bad) (bad) je rex jrcxz xchg in bnd rex.RX std jae rex.WRX cltd pop adc pop test retq sbb adc rex.WB rex.WXB mov mov (bad) repz fiaddl and shrl or and test jp mov std (bad) (bad) sbb mov xor rex rex.WRB mov loop cmovnp (bad) stc rex.RXB (bad) and pop int loopne xchg (bad) insl cld mov xchg sti mov cmp adc adc mov mov and cmpsb mov scas loop xor jae loopne movabs rex.WXB or movslq in incl adc shld mov bts sub shl not bswap stc mov cmp clc bt cmc sub stc stc cmp cmp pushq bt stc cmc cmp jmpq jg in rex.WB rex.WXB pop gs lret mov shrl xchg pop test or cli and rex.WB lock mov js xor adc mov (bad) mov mov mov lret rex.WRXB in roll xchg adc add (bad) (bad) (bad) inc lahf cmpsb cmp sahf rex.WR pushfq test add pushfq test test pushfq sti add add addr32 mov xor xchg (bad) jb mov out pcmpeqw in test mulb mov add or mov jb fadds movsb (bad) and push retq or or mov cmp cmp jmpw in (bad) callq jmpq shrd adc mov test add test stc mov stc bt stc stc test jmpq callq jmpq int3 lock add andb xchg fisttpl (bad) fcompl mov insb pop adc mov rex.WX push or flds (bad) and rex.R add sti cwtl (bad) rex.WRB xchg in (bad) (bad) (bad) std pop rex.WRB nop (bad) add add (bad) out sub jmpq sahf cmp (bad) insl and xchg loope jae rex.XB push loope push xchg fild mov movabs xchg retq mov (bad) mov pop xor pop testb jmp jnp jne (bad) push (bad) push out cmc (bad) movabs fdiv clc ja (bad) (bad) xchg loope movabs mov pop loope push js (bad) scas fs push jns (bad) std xchg mov loope sub sbb jae ficompl pop in pushq cli (bad) jae sbb (bad) jns and xor loop and leaveq xorl push add movabs rex.WR xchg rex.WB outsl jnp sbb (bad) subl leaveq xchg jp sbb divl sbb xor sbb or xchg jae sbb je xor cwtl sbb pop pop jl stos test and mov (bad) rex.WRB loop and (bad) test hlt sarl divb adc cmp sbb lods cli (bad) iret sahf rex.RB sbb sbb xchg and jge adc fiadd sbb sbb lahf xor xchg mov pop adc or scas sbb push callq jb xor nop add sahf (bad) (bad) mov lret sbb loope pop xor (bad) rex.WRX out rex.RX cwtl or sbb pushq retq jb cwtl push jg std stos sbb outsl lahf xchg rex.R es sub xchg cmp pop lock (bad) cmpl sbb clc (bad) and or (bad) test outsb test gs adc jmpq pushq (bad) and jrcxz je (bad) mov and andl movabs (bad) test iret and add push pop cmc out add imul add out pop ds xchg lods retq cltd rex.RXB xor jb (bad) and or (bad) mov xchg pop (bad) sbb push bnd scas xorb je (bad) mov mov (bad) adc add or imul fwait rex.WRX je,pt pushfq sbb lret sub (bad) xchg and cli jne or mov clc cmc bt add jmpq add rex.RXB gs outsl fs imul add mov mov callq rex.WXB lock add jp mov mov outsb push xor (bad) cmp movsb mov in xorl pushq shlb add sbb jp cmpl mov xchg movabs sti fs jne mov cmc pushq (bad) loopne fldt movsl and js sbb js push movabs test (bad) mov ds or test jge (bad) or add rex (bad) (bad) (bad) fstps xchg repnz fisttp (bad) rex.RXB xchg (bad) xchg jle jnp jle mov or rex.WXB jle (bad) and mov (bad) rex.R fist cmp mov test movabs loopne dec btr mov btc sub xor bts push cmp dec push shr ror push shrd push lea shrd sub mov bt clc test jmpq jne gs xor fs insb add in rex.WRX repnz jmpq jne jmpq xor jl jnp push sub fwait (bad) sbbl push mov (bad) std xor movsb cmp rex.RX adc or jrcxz fsts clc imul loopne (bad) cmp adc jo lea movsb (bad) xchg lret jb lea (bad) nop sbb rex.RX movslq xchg (bad) mov sbb rex.RX test xchg movabs int xchg loope (bad) rex.WX int gs push movslq (bad) sti popfq insb push xor (bad) (bad) (bad) (bad) cs sti and cmpsb scas add iret sahf lret imul cmc (bad) (bad) (bad) ljmp cmc in (bad) stc (bad) jge adc movsl pushq xor pop adc mov add jmp retw movabs rex.WRB sbb mov rex.X xchg push cmp subb je jns adc mov addr32 movabs imul add pushq jp push xrelease iret sub gs mov test mov jg and stc fcomps jae sbb jmpq setl xchg jle jne fwait mov sar xchg jae andl (bad) retq adc loopne cmp (bad) adc jrcxz rex.R pop mov jne (bad) movsb lock mov xchg lret mov lret rex.WX (bad) (bad) sti shrb (bad) (bad) (bad) (bad) or cmc lock and push sub jp movabs xchg jl rex.WRX movabs lcall cld mov or or scas sahf rex.WXB int3 gs jne jl nop enterq retq sarb mov xchg mov rex.XB cmp pop loope inc stc (bad) mov cmp or dec shr sub bts dec or test mov stc sub jmpq lret xchg or divb sub stos adc (bad) xchg movabs push add (bad) in xchg sbb js retq movabs (bad) js add (bad) sar rex.WRB sbb cmp jo sbb cli push hlt (bad) mov sti ja pop (bad) (bad) (bad) decb push icebp loopne (bad) (bad) lahf xchg (bad) cwtl mov (bad) jnp imul (bad) int3 jo negl rex.WXB int3 pushfq fisttp rorl mov lahf rex.WRX sbb (bad) (bad) (bad) jmpq cmp jns rex.XB jg clc sub jrcxz icebp pop icebp movsl fnstcw adc (bad) sub adc jl (bad) jne fwait mov rex.WX jno mov rex.RXB mov jb (bad) mov imul push rex.RX gs gs outsl jb add movsb notb test add popfq sti rex.B loope sbb xchg cltd push rex.R mov pop fs nop adc js xor xchg rex.W imul sub mov cmp test rex.WX movabs adc data16 push fmull cld adc adc (bad) (bad) (bad) (bad) movabs rex.WRX sub (bad) mov mov insl repnz add jle push (bad) repnz outsl adc mov stos sbb movsl cmp sbb xchg jne rex.XB rex.WRXB cmp add (bad) mov insb jl (bad) lock and in fbstp xchg movsl movsbw lea pop setnp pop not pop movzbl not pop jbe mov not mov pop retq and pop adcl cli imul push xor pop mov repz js test cmpsb lret rex.WX add in hlt (bad) pop (bad) ja rex.WX out (bad) cwtl fs (bad) mov rex.X js push mov push cmp (bad) repz and mov loop (bad) adc frstor (bad) sbb (bad) in fs add (bad) (bad) mov (bad) (bad) (bad) sti stos jbe (bad) idiv (bad) (bad) (bad) cmp js (bad) out (bad) not jne testb mov (bad) bnd mov imul cmp jmpq cli or lock rex.WR movabs cmp lods mov push movabs rex.RX (bad) jmpq callq rcl cmc sbb cmc add neg bswap mov bt cmp cmpb jmpq xchg (bad) jae (bad) stos mov rex.W add rorb pop adc loope rcrl lods rclb movslq movabs (bad) mov (bad) (bad) (bad) (bad) repnz lock pop shrb rex.WXB adc push cmc (bad) adc (bad) mov cwtl add shrb (bad) xchg out rex.RX (bad) xchg xor lock adc rex.WXB fwait mull outsb or rex.W rex.RXB push xchg push retq lret (bad) rex.RXB cmp xchg mov rex.WRX cs popfq mov loop sar (bad) (bad) decb (bad) (bad) (bad) decl pop adc (bad) mov pop cmp repnz ja rex.WB xor nop (bad) or add xchg mov pushfq mov (bad) movslq movsb mov pop cli icebp mov out movsl pop jo ss and rex.W je int3 mov jbe lock packuswb or out movabs mov clc pop or or es fwait cmc (bad) jrcxz sub xlat add (bad) (bad) data16 jnp nop in and mov rex.WB sbb mov or out or rex.B (bad) (bad) decb movsl stos xchg fidivr (bad) mov retq sbb movabs jge cmpsb add xchg retq jae adc fbstp sub movabs xor (bad) push loopne cmp xchg adc rex.WRB rex.X clc (bad) cmp cmp jrcxz rex.X mov insl or rex.RX (bad) movabs jne xor adc shld setns xor bt mov xor sub or shl add sar rcr seto mov clc test jmpq je and push rcr rcl mov cmc data16 lock movzbl lea jmpq je xchg clc add data16 testl inc mov je btc bsf shr add stc shl inc bt add ror shld mov stc clc shr stc cmc cmc cmp cmp jmpq xchg mov add xchg shrb jbe rex.WXB sbb jo pop repnz rex.RB (bad) (bad) (bad) (bad) enterq (bad) pop (bad) notb idivb push add movabs jle callq xor jae rex.WRB fmuls mov push popfq rex.WRX (bad) (bad) (bad) sti (bad) out add and (bad) (bad) (bad) nop cmp sbb (bad) rex.RB rex.WR rcll xor rorl rex.WRXB insl pop fchs mov and push (bad) (bad) scas loop xchg test sub scas (bad) (bad) mov stos rex.WRB push mov sub cmp and stos nop stc adc lods lahf mov rex.WX mov jno jae stc cmc add jmpq callq neg mov shl btc mov jmpq rep not pop jmpq jmpq jb cmc cmp cmc cmp jmpq callq jmpq jmpq jmpq add jrcxz icebp nop scas (bad) sbb mov jg or xor (bad) mull cmp enterq es cmpsl jae and adc in (bad) (bad) rex.W and xchg (bad) loopl scas divb test (bad) jnp and (bad) mov int rex.WRB adc shufps iret out lods repz add test int rex.WXB rex sti gs outsb popfq xchg rex.WXB fs je jmpq pop (bad) (bad) (bad) sti jns loop in (bad) (bad) decb outsb sub mov or cmpsb cmc and (bad) (bad) (bad) decl test (bad) or sub add repnz in repz sbb insb lret (bad) ljmp movslq int3 stos jg sub rex.WXB (bad) rex.WXB and shr scas and add subl jmpq mov shll mov leaveq mov rol inc add mov bswap mov jmpq jne bt mov cmc add clc test clc movzwl bswap rcl mov jmpq je jmpq jne btc mov xor lea ror inc sub cmc mov js sub bt cmp cmc pushq cmp jmpq je mov jmpq je test clc jmpq bt cmc jmpq bnd jo cmp (bad) fistpll add mov punpckhbw mov mov sub sti (bad) (bad) mov (bad) cmpsl sbb scas sbb movabs fistl rex.WRX add xchg pop andl add lret (bad) xchg (bad) (bad) (bad) incl fwait add mov mov push retq test or cli push sbb enterq fsubrl mov cmc sbb popfq push nop cld div (bad) push jae xor pushq lret cmp insl adc rex.RX scas and rex.WRX and (bad) jmpq clc ror cmp clc xor bt add bt jmpq test bt push data16 (bad) (bad) add rcl mov clc clc test jmpq jmpq out ljmp xchg mov (bad) popq and enterq cmp cmpsl mov pop je pushfq rex.W cmp movslq xchg sarl lahf mov (bad) je lea jae outsl or mov xor (bad) add mov repnz rorl sbb iret mov cwtl push xchg movsl rex.WRX (bad) pop (bad) scas cmp outsl or xlat pop push jo sahf movabs cld sub cli sbb (bad) (bad) (bad) mov mov adc add add cmp mov xor scas xchg adc mov (bad) clc movabs andl mov cltd mov movsl (bad) (bad) rex.WRX movabs clc bt stc bt imul cmp cmp add jmpq stc cmc add cmc sub jmpq mov push movsb adc movabs mov addr32 fwait ja es pop xorl sub cmp xchg movabs int3 push (bad) (bad) repnz jnp mov lahf rex.WRXB xor jns sahf push rex.WX leaveq and mov jg (bad) retq jmpq in (bad) div movabs pop cld icebp adc rex.WRB or cmp rcll cmp mov (bad) sti scas (bad) mov (bad) incb sbbb pop pop (bad) cmp (bad) jno adc jg subb sub mov xor (bad) loope cwtl lods ljmp and fisttpl jno in mov callq mov negl jne (bad) pop sub movabs mov fwait mov ljmp (bad) mov and lea and stos push push xor (bad) jno test lock pushq cwtl sbb rcl adc (bad) lret ds (bad) clc loopne rex.RB jns rex.RXB jbe sub mov iret mov int3 fisubrl and mov and sub enterq rex.XB test mov jrcxz add (bad) push mov xor imulb (bad) (bad) (bad) cli sti rex.WR insl (bad) (bad) (bad) std mov test ds jl lahf rclb stos add cmpsb adc (bad) (bad) (bad) jmp and icebp adc sbb ss fidivr sbb fs adc (bad) xlat jns jb (bad) xchg jmp jae xchg mov stos mov fcmovu jge cmp jbe rex.WRXB mov mov and xor (bad) push jp sub test icebp push (bad) jp test movb cmc bt cmp test jmpq callq bt stc cmc bt or jb je xchg mov xchg mov not xchg movzbw lea lea jmpq in (bad) rclb movsl insb mov repnz (bad) adc (bad) sahf lret cmp fs rcl push movsl repnz push or mov imul pop sbb sub (bad) pop mov fs je sarl mov xor mov xor scas enterq or fldenv (bad) sti or (bad) std fwait mov in icebp pop jl rex.WRX rex.WR fistpll jbe and sbb sbb outsb xor or and cmc repz push (bad) mov (bad) (bad) jmpq add jl fidivr push (bad) push ja pushq scas lret (bad) gs mov icebp (bad) pop std (bad) out insb (bad) jne movabs push pop cmp leaveq mov mov push pushq bt jmpq sbb pop ds out out sti lock cmc rdtsc or (bad) adc cmp jl pop mov lret (bad) add in jae cmp rex.WRXB mov popfq scas movl pop or stos jmp jrcxz (bad) adc lods cmp xchg or (bad) (bad) (bad) (bad) cld mov (bad) (bad) (bad) decl movabs sarl mov sub pop callq (bad) (bad) sub jmpq pushq jae sub mov rclb sti push sub add add cmp or pop rex.XB sbb lahf movabs lea mov push mov cmp or rex.XB sub (bad) mov rorb (bad) repnz movabs test shr (bad) clc inc mov mov movsbw sub shl btr mov cmc jmpq jmpq lahf rex.WX out fsts rex.RX in xchg (bad) testb or (bad) (bad) stos movabs pushq pop sub jrcxz (bad) and movslq and jbe mov and and xchg sahf out callq gs xchg xor cmp (bad) cmpsl leaveq sbb decb (bad) sub cld movabs sti mov sub (bad) (bad) incb test rclq cmp movsl punpcklbw pop mov hlt (bad) pushq (bad) jle (bad) callq icebp lahf rex.RB (bad) xchg (bad) out pop out ja push mov imul mov pushfq cmp mov mov xchg faddl mov clc pop ds xor lods andb fidiv push cmp xchg (bad) cltd mov or and mov push (bad) gs stc add test stc movzwl bswap and mov clc test add test test mov cmp test jmpq or rex.RX fimul out fildl pop xcrypt-cbc cmpsl (bad) (bad) jle or mov (bad) (bad) sub (bad) or (bad) stos cwtl rex.WB jae out (bad) jno sahf mov or fwait ja (bad) (bad) (bad) std in rex.RX mov movabs jno pushfq adc in sub mov cld sbb or (bad) (bad) std jge cmc cltd jrcxz (bad) (bad) push cmp andb cmpsb cmp frstor sub adcl jge xor in cmc xchg rex.WRX lahf mov pop (bad) insb add add or (bad) icebp decl movabs in imul test cmp cmc add jmpq (bad) jnp (bad) (bad) mov (bad) sub js (bad) adc cwtl push sahf es lret sub cmp jae mov sub shl fwait rex.WB cmp rex.RX add mov outsb gs jl cwtl xor sub xor push repnz push adc xchg sbbl (bad) mov sub notl in add shr fistpll or stos xor add (bad) rex.WX cwtl icebp insl mov (bad) (bad) xchg (bad) sub rex.X pop push xchg jmpq xlat rex.RB movabs decb (bad) (bad) (bad) (bad) sti loopne mov movabs (bad) retq pushq adcl addr32 outsl lret jp popfq popfq mov rex.WRXB jns xlat mov out (bad) sbb hlt addl vandnps (bad) mov push jl lods mov push (bad) repz test clc cmp movsbl bswap mov lea lea mov pop jl ja jmpq popfq rex.RB rex.WX loope cmpsb hlt rex.W out iret rex.WX add add sbb retq rex fcoml (bad) sub and jae push test outsb add sub sbb out cmp icebp and movabs xchg jns imul orl mov (bad) xchg jg cmp (bad) (bad) push xor push rex.RB orl jl cmpb movabs cmpsb mov insl (bad) rcr mov (bad) nop and sbb mov mov jno rex.WRB (bad) cld pop cs mov (bad) (bad) (bad) callq cmp insl movsl roll rex.X clc or add pushq imul clc (bad) rex xlat rex.W jb outsb rex int pop clc (bad) pop iret imul or and lods and imul and mov (bad) (bad) fimull addl add mov push mov rorb callq add adc mov mov pop xchg jmp enterq (bad) mov mov cli cmc and rex.B xor push xchg push cmp cvtpi2ps sbb fs mov mov fsubl es sub mov movsl jle rex.RXB rex.WR adc xchg divb test ds (bad) and outsl (bad) (bad) test xor movabs clc pop fdivr sub jae sub test hlt and (bad) (bad) std ja rex.WRB add or iret xor push (bad) imul stos cmp xor repz (bad) je fstl xor mov pop mov adc test cmc stc movb bt cmp stc stc test jmpq jne clc cmp test movb jmpq jmpq jne shr add sbb ror mov cmp test add test movzwl adc shl shrd rcl mov clc cmc cmc cmc add jmpq push push push rex.WB cs rex.WR rex.WR fucomip jp in dec sub xor cld add mov add mov sub test cmpsl mov (bad) retq stos xchg adc (bad) (bad) xchg outsl pop scas (bad) notl ja xchg cs jrcxz cmp addr32 rex.WR retq sti movabs cld clc or jle (bad) (bad) rex.RB or (bad) mov xchg div loop and (bad) cld fs (bad) fdivrp (bad) (bad) (bad) hlt in pop sub add add je push je lods enterq push sub rex.RB jrcxz leaveq gs rex.WR xchg ficom jrcxz rex.WXB add jge rex.WX add mov and jae add or xor mov pop scas loop xchg add push (bad) stos lods rex.WXB cmp xchg rex.WX cmp movabs leaveq add and add or or scas mov xor sbb outsb rex.WX scas push fwait lret (bad) mov adc push mov push (bad) iret rex.WRX sbb movsl pushfq mov lock in or loope in (bad) data16 and xchg (bad) imul fdivs rex.WX (bad) (bad) (bad) sti in xchg xlat (bad) (bad) (bad) (bad) jne jp xchg mov (bad) idivb callq icebp rex cmpsl sub lret (bad) (bad) (bad) lcall mov mov push mov add lret addr32 (bad) js in sub fistpll nop add push es jbe rex.WRB and icebp jbe mov xlat mov pop mov rex add sub (bad) retq (bad) (bad) rex.R and fsubrs add movabs sub sbb ds jo or pop or rex.WRB jne idivl pop js (bad) nop ficoml fist (bad) jg xor (bad) clc movabs retq jle add jge sti add cmp fistl callq icebp movslq and lret sub (bad) (bad) (bad) cld push (bad) test sbb (bad) (bad) (bad) in insl fcoms gs (bad) insb push adc movabs add gs sbb jp mov rex.RXB mov mov callq push adc icebp jmp (bad) pop int rorb push imull leaveq pushq cmpsl lret (bad) pop adc (bad) (bad) lea jmpq callq bt jmpq setae sub shr sub add movzbw dec add test sbb not movzbw mov inc rcl mov cmc test bt bt repnz jmpq rep movsbl jmpq rcrl jne pop (bad) rex.B rex.R rex.R repz (bad) roll mov cmc std jmp mov (bad) int iret std sbb mov rex adc (bad) fistpll (bad) je mov and cmpsb rcr (bad) add mov adc jo mov pop adc adc xlat cmp scas not (bad) push jo (bad) rex.W jle,pn mov (bad) (bad) sti icebp jns nop test (bad) (bad) incb cmc rcrb mov mov outsb add add push cmpsl lock outsl add (bad) int3 popfq rolb rex.WR (bad) repnz (bad) mov stos mov pop cmp cmp js loopne and movabs loopne enterq cld out mov pop movsl fdivrs sub clc or jmpq jmpq je movzbw xchg lea jmpq callq clc add not sbb shr adc mov bt cmpb jmpq jb stc cmc cmc cmpb jmpq add xchg (bad) xorb xor nop rex.WX lods sbb mov lret test xchg sarl ds ss and lgs cmp sahf ja rex.WRX icebp mov mov rex.RX rex.RX adc sub outsl addr32 outsw pop xchg adc xor (bad) (bad) (bad) sti cwtl (bad) (bad) rex.R (bad) (bad) (bad) sub loopne (bad) stos fcoml adc (bad) or rex.XB fmuls lahf xor or push add mov mov (bad) movabs rorl (bad) stc fldl or sbb pop (bad) (bad) cmp roll shl loopne (bad) jl (bad) test and push (bad) mov or mov repnz rex.W es mov pop pop cmpsb loope clc stc jmpq jb jmpq test sub jmpq insb lret (bad) imul loop rolb xor add movsl rex.WR addr32 sbb adc xlat mov mulb addr32 std or (bad) (bad) std mov jne jge vmaxpd callq rex.RX jg mov jb (bad) movsl jne xchg mov lretq pushfq out or adcl std and cmc or (bad) callq jbe mov mov or mov xchg (bad) cmc popfq and addr32 lock xlat jne enterq adc xor xlat mov cmp mov (bad) pop mov and (bad) lret adc rex.WX outsl movsl rex.XB outsl or movsb (bad) (bad) jle sub mul out sarb movabs out mov sbb pshufw adc nop in xchg rclb jb rex.WXB jne mov pop adcb test stos (bad) (bad) (bad) (bad) (bad) sti push testl std out push xchg out and fisttpll and loope jle (bad) (bad) inc and cmp movslq loope movsb shlb test (bad) (bad) retq sahf add lock (bad) pushq sbb movslq adc sbb cmp cmp gs mov (bad) and movabs cmp jmpq sub cmc cmp jmpq jne xor sbb clc cmp mov js add stc test movzwl jmpq jmpq jmpq in rex.WRB xchg mov jmp in int movabs movslq xlat mov mov fmuls repz sbb or and insb push push cli retq mov (bad) sub data16 (bad) mov cmp mov cwtl cli mov or cmpb sbb jnp mov cmpsl sbb jrcxz (bad) (bad) retq negl or and (bad) insl divl and adc nop (bad) jbe jnp mov cmp (bad) fwait mov loopne mov push mov roll (bad) xchg scas out es (bad) or scas mov out add cmp in xor cld loop add and (bad) xchg in or rex.XB enterq and sub (bad) cld rex.WRXB (bad) mov (bad) xchg js and loope or pop or sbb int3 rex.B lcall and add jg (bad) insl imul scas test push xor rex.WR pop push push (bad) cmp stc rex.WR mov or loopne (bad) (bad) (bad) sti xchg rex.X ss (bad) (bad) (bad) and ljmp add je jge (bad) (bad) (bad) (bad) jmpq mov pop xchg cld movabs cmp sub (bad) xor andl mov sub or push ds mov mov je and rex.B (bad) (bad) sub loopne (bad) movabs mov xor xor cwtl rex.WRX cs cmpsl adc adc (bad) jle data16 push popfq fsubrp jne mov lret add xor (bad) and movslq push icebp pushfq cli xor (bad) mov xchg movsb iret add pop pushq xor add add jl mov or mov xor out jge xchg mov fnstenv rex.X out rex.WX sub rex.XB push (bad) loope leaveq pushq jge mov (bad) stos and cmp (bad) and retw rcr rex.WRXB (bad) addr32 pop (bad) stc fisttp (bad) pop jp movsb cmp mov (bad) jrcxz repz (bad) (bad) jg adc jmp vpsubw xchg xor fmuls shlb push (bad) (bad) push cmc push lock xchg ss mov cmp add mov or repz mov data16 add sbb sub jns (bad) fs push (bad) int (bad) pop mov jne (bad) (bad) test add (bad) mov mov or mov and push fs (bad) test stos movsb xor fisubr (bad) and sub rex.WX mov fs xor sub test pushq jmpq xor adc movsb sti and push cli int rolb cmp xor js lea (bad) xor incb jp (bad) leaveq sti (bad) adc sbb cmpsb and or jns jb sahf icebp je mov pop pushq cmp movabs fs sub (bad) (bad) jg int rex.B mov movslq mov (bad) (bad) out (bad) (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) jp cmpb add xor stc push sub ds (bad) xchg (bad) (bad) (bad) (bad) cli rex.RB outsl pop xor (bad) jne insl sbb pop rex.WR add out pop pop test imul mov jge repz adc mov imul stc mov movabs xchg mov jmpq fimul mov mov shld shl add add lea lea mov jmpq jb clc clc cmp jmpq jne bswap sub bsf mov xor inc rcl (bad) lock add xor rcr neg mov bt jmpq clc stc imul cmc test add jmpq stos rolb cmpsb pop int3 lahf and (bad) jle (bad) cmp and lret mov adc mov fwait lods sbb rex.WXB shl adc imul pop movabs cwtl iret and (bad) jbe xor (bad) jb popfq and lock (bad) cs jno (bad) cs lret loope retq jns rex.RX sbb sar (bad) cld xor mov sbb icebp and (bad) (bad) icebp adc (bad) cld (bad) push sbb xor xchg jg jg movabs adc sub add lods fnstsw pop (bad) ja mov (bad) (bad) mov push pop mov jae stc sub (bad) xor mov sbbl pop fist cmpsl mov imul (bad) rex.WRB stos cli fild rex mov (bad) (bad) (bad) sahf movabs xchg rex.WRX xor repz jo lods (bad) jle and (bad) movabs retq push rex.B cmp xchg (bad) (bad) (bad) decl mov movabs lods (bad) mull sub (bad) mov cmp pushq xor jge jbe test adc add jnp cwtl push (bad) mov lret fdivrl outsl lret ss jbe and lods mov push callq sbb push xor add (bad) and ficompl (bad) in fnstenv jge (bad) popq (bad) cmp mov mov test (bad) pop jns pushq xchg jp (bad) xor (bad) movabs add pop pop pop cmp (bad) clc xchg movslq mov jo lahf sbb (bad) (bad) decb rex.WRX sub add add mov (bad) je mov mov out lods (bad) xor and sahf andl sbb sahf lret (bad) mov shlb rex.W mov lret (bad) xor or sbb and mov or (bad) icebp jp rex.WRXB addr32 cltd jmpq jl (bad) or movabs or and in adc js and stos movabs cmp (bad) adc mov mov mov lods xor xchg mov xchg mov adc pop xor jmpq pop and out movabs lcall rex.WX rex.WX repnz pop push es pop ja sub (bad) (bad) (bad) sti jbe movabs sbbb (bad) (bad) (bad) incl (bad) leaveq (bad) lods movsb lret sti (bad) cmpl jmp jmp rolb scas jg and mov and mov sti mov fsts rex.WRB rex.RX sti hlt movsb mov repz mov rorl mov repz mov (bad) fdivl and (bad) pushq rex.X repz repnz pop xchg cwtl scas hlt lret or (bad) mov ss lret rex.XB rex.WRXB or mov int3 clc stos sbb movabs in sub addl mov xor mov jo (bad) mov xor fdivrl adc jrcxz rex.X (bad) (bad) (bad) (bad) sti mov (bad) (bad) decb cmp add add or test movsb nop add mov jle ja in retq loopne rex.WX and push test cmp sub adc sub outsb sbb jrcxz lcall mov imul jmpq (bad) sbb ficom lret mov mov cmp cmpsb (bad) mov (bad) pop sub add roll mov rcll (bad) mov std push cmpsl pop loopne fsubl mov (bad) movslq (bad) (bad) (bad) cld mov sub callq leaveq (bad) retq jns es in cmp cs and (bad) rex.RX mov or cli push (bad) rorb add add and (bad) loope lock adc mov movq rex.RX popfq rcl jnp in or (bad) negl rex.WRB leaveq movslq (bad) xlat jl cmc insb adc xor cld (bad) pushfq add sahf xor (bad) pushq rex.RB rex.WXB jmpq scas stos xor je adc sbb (bad) fidiv push push cmp jnp lahf rex.WX jo push xchg xchg rex.W loopne mov push (bad) mov sbb adc sahf (bad) (bad) pushq (bad) subl div (bad) popfq scas (bad) cmp lcall testl repnz (bad) ds jo pop insb push mov pushfq mov pushfq mov rcll adc push add (bad) mov and (bad) (bad) cmp rex.RB jge out xchg push jo sub (bad) (bad) cld callq (bad) (bad) (bad) std scas sbb in test add (bad) pop jrcxz icebp lahf mov xchg add cmc and mov test mov repz fnstsw (bad) sub inc rorb add cld pushfq xchg in lods leaveq sarl cltd xchg (bad) shlb addr32 (bad) out popfq xchg (bad) (bad) cmpsl out rex.X subl int and sbb jmpq and xchg mov jmp roll int jnp int3 test jmpq (bad) mov and popq rex.WX sti and (bad) mov push pop repnz mov jg jno push retq loopne (bad) mov mov imul xlat cmp jmpq je jmpq add and rex.WRX rex insb jg cmp cmp mov push rex.WRXB mov mov shr int (bad) adc flds and movsb lret pand mov movabs jae fimul insl cmp psrad (bad) mov (bad) cmp xchg ss hlt divb and cmp (bad) xor (bad) fwait (bad) es test (bad) (bad) cld pop jg cwtl jge (bad) (bad) (bad) in adc (bad) adc adc addb add add push (bad) adc xor or cmpsl divl cld insl cmp mov (bad) add jne popfq jle (bad) (bad) jge (bad) adc stos or (bad) cmpsl mov jnp fldcw add mov insb in jge lret pushq jmpq (bad) mov rex pop cmp cltd jmp add xchg (bad) cmp retq loopne ss xor mov adc outsb js pushfq rex.WR jle sub mov enterq outsl pushq test shl add mov rex.WRX lock xchg (bad) xor (bad) cltd (bad) pop sub (bad) int mov sbb (bad) (bad) (bad) (bad) cld xchg (bad) (bad) jmpq adc rex.B fistp pop (bad) rol xor fildl rorb outsb jmpq add in pushfq jg movabs (bad) mov in cmc rex.WRXB cmp callq cmp (bad) push cmp movsl mov stc xchg cli sbb or lret lods xchg (bad) insl jno xor cmp (bad) jmpq cwtl stos push or callq cmp mov xor xlat or add xchg imul addr32 sbb repz rex.WB mov repz mov or lods lret jb rex.W movslq xor xchg jae out xor lock rcrb retq callq rex.W (bad) sti rex.WRX leaveq sbb cmpsb in sbb (bad) (bad) cld (bad) (bad) fldcw in (bad) (bad) (bad) dec popfq movabs sysenter pop addr32 iret sarb add add pop movabs sub mov sub rolb stc in lods enterq rex.B mov divb fs cmc test nop xor outsb movabs add rex.XB rex.XB (bad) je rex.WB jae (bad) outsb movslq jae shld test mov test shl neg mov setae rol mov test test stc clc xor jmpq je mov movabs jle lret sbb out movsb (bad) ja push cwtl jno retq scas adc lahf rex.RX rex.RXB cs jge cmp fldcw mov movslq nop (bad) orl (bad) cmpb fidiv push rex.R int add add jrcxz pop jrcxz (bad) rex.RXB (bad) (bad) (bad) sti je addr32 incb idivb sarl out mov cmp fsubrl movabs retq jne push lock (bad) lods jg (bad) mov jo rex.WX (bad) (bad) lcall xchg rex.WXB rex.RXB enterq movsl outsl add (bad) sub enterq outsb (bad) pop and mov xor add push adc push repz movabs movsb xchg mov outsl rex.WRB lock std std xchg xchg outsb (bad) mov retq jle push jne retq and pushfq mov (bad) add cmpsl lock xchg js rex.WX mov push pop lret in (bad) adc test movabs in in xchg (bad) jbe mov xchg cmp pop clc cmp cmp (bad) add rex.RX gs gs jb rex.X data16 rex.B rex.R push xor cs insb add test fcomi ljmp in in pop (bad) icebp decl test in jmpq jmpq not sub movsbw lea and movzbw mov clc sub test cmc clc stc pushq cmp cmp jmpq jp mov pop push rex sub cmpsl rex.WRXB (bad) lret loopne mov stos pop cmp repz add (bad) (bad) lods jns sub add cwtl lea (bad) loopne (bad) rex.WX cmp cs loop (bad) sarb mov setg pop retq mov jmp jnp shl sub (bad) insb (bad) mov adc add pushq xchg in movabs xchg fucomi fcomps out (bad) sub or in sbb (bad) (bad) (bad) std ja movsb (bad) add add or testb xchg lods rol mov rex.WRXB xchg test jg (bad) in in push xor retq imul mov jb movabs cltd cs add push xchg (bad) cmp pop subl (bad) adc (bad) add cmpb add test jl (bad) stc out rex.WX ds add sub lahf leaveq ds pop pop rex.RX rex.WRXB nop pushq push xchg rex.R data16 push repnz mov test out sub push out (bad) add push (bad) (bad) (bad) decb (bad) rex.WRXB movsl in mov (bad) pushfq jg mov rex.WRX add sub movq sahf insb xor pop js scas lret movslq xchg cmp (bad) (bad) incl mov rex.RB jae retq fld test shlb xor rex.XB xchg mov (bad) jmpq mov movabs sti jno jns mov (bad) xchg fildll (bad) iret jge js or jae xor (bad) jb adc push rex.WRB sub mov (bad) mov (bad) jne loopne mov jb cmp in es movslq mov movabs jge (bad) mov pop push pop add jp xor rex.WRX movsl out (bad) mov (bad) (bad) decb (bad) mov mov sahf mov push (bad) sbb out rex.WRX mov (bad) scas adc rex.WRB (bad) (bad) mov sbb test xor outsb adc rex.W (bad) or lock jae cmpsl nop add test decl mov movsb leaveq add lods stc add push sets mov clc shl sub movzbw setge mov lea jmpq not lea jmpq mov mov pushq lret jmp jae stos iret or int pop (bad) and jrcxz xor push push cmpsb rex.WX adc pop gs mov push mov je lret cmp fbld (bad) movsb test data16 and (bad) (bad) sti rex.B rex.WRXB (bad) std rorb xor add sbb mov (bad) sbb mov sbb jae std add (bad) ja or enterq xchg sub mov subb (bad) stc (bad) (bad) (bad) dec movabs fimul fwait push cmpsl xchg sub pushq and or xchg xchg mov scas rorl sbb xchg push or jb and int3 mov outsl or mov jbe jbe shrd mov or add clc dec shld mov shrd btc shr dec add xor movl or sbb movsbw mov cmp bt stc cmp jne jmpq mov jmpq and cmpsl pop xor fwait lret lods (bad) (bad) push je (bad) cmp add shlb lods add retq sub fist (bad) add int int (bad) mov movabs (bad) test or (bad) loope lret js addr32 incl (bad) (bad) (bad) mov (bad) cwtl imul xchg sbb callq cmc ja sub (bad) mov xchg scas sbb (bad) decb (bad) (bad) (bad) decl decl xchg rex.RX sbb mov fistpll push cmp or lret xchg fwait stc rex.WRXB rex.R lret push sti xchg cld or mov nop adc cltd and in pop std stos mov jne insb fs lret (bad) xchg fidivrl adc jp imul rclb adc ja xchg pmulhuw movabs (bad) (bad) (bad) (bad) sahf (bad) movsb int mov (bad) fnstsw int pop jle repnz nop jmp out rex.X imul and (bad) std push hlt mov mov add add adc cmp fist mul cmp xchg xchg jo fstp xor or orb pop jge test fmull (bad) vmread adc fstp push jl (bad) sbb jo out stc pop pop rex.WX out pushfq sub push sub adc or fiadd xchg fisttpll adc jg jb (bad) add int3 (bad) enterq test jns jae mov clc lea lods lret (bad) rex.R xlat int3 outsl retq in rolb push adc (bad) (bad) adc or rex.RXB rclb or (bad) xchg cltd sahf jl (bad) sti mov fisttp loope (bad) in je loop (bad) adc iret (bad) mov fist and add jne loope pop adcl jnp rex.RXB jbe stos pushfq out fisttp rorb addr32 (bad) lahf mov push (bad) pushq rex.XB mov outsl cwtl orb movabs js mov iret out movabs adc lahf push (bad) (bad) out movb mov ja and mov movabs in adc fmull out (bad) xchg fiaddl rorl jmpq movslq xlat cmp jae fs push je mov test loopne fldl2e (bad) or jnp jmpq stos (bad) mulb iret mov and fisttpl or mov (bad) (bad) xor stos retq (bad) outsl (bad) (bad) repnz and scas mov mov (bad) cld cwtl sahf mov punpckldq mov pop xor adc insb cbtw loope sti pushq nop cmp and rol movslq mov mov lret enterq repnz (bad) push pop cmp cli int (bad) js sbb pop jmpq je stc add clc clc clc cmp jmpq callq bt add ror mov add sub mov cmc clc test stc cmpb jmpq xlat mov adc ss in (bad) and cli add push and movabs add rex.X cwtl lods xchg (bad) xor fcomps xor out in stos adc mov adc mov rex.WB scas mov sbb stos (bad) pause cmpsl ja loope add or subb xchg jl sahf jmpq lahf rex rcr sub enterq adc (bad) cld rex.WB and (bad) (bad) (bad) (bad) fxch test xchg sub rex.WRB rex add add add out roll std (bad) sbb rex.XB mov adc sahf test in xchg push retq test lods sub jo ss jg mov jns orl rex.WRB outsb adc rex.WB scas jg xchg adc movslq sti lahf iret and jbe rex.WXB add rex.RX jnp (bad) or mov cli xor (bad) leaveq jmpq xor rcl add mov mov cmp in int sti cwtl xchg mov addr32 jg mov stos fdivr scas add cmpsl (bad) (bad) (bad) sti cli pushq (bad) (bad) decb (bad) (bad) mov add cli loop leaveq mov fiaddl mov rep hlt movabs (bad) jno hlt loope sahf sti retq movabs fwait mov mov jne rex.XB shlb pop rex.X add (bad) jp add and test in decl (bad) push or jmpq jmp add cmp clc cmp jmpq jmpq out rex.WRX push test ss cltd xchg mov rex.WR fcoms add (bad) (bad) mov stos pushfq cmp in xchg (bad) mov rex fs mov (bad) ja add pushq rex.WRXB and mov and repz add out xchg out faddl rex.WXB (bad) (bad) (bad) sti jo outsl std (bad) (bad) (bad) (bad) incb xor pop rex.WXB lahf xchg or stos xchg cltd mov scas mov (bad) and fs lret jns or jne mov sbb int3 outsb clc scas (bad) movabs jmpq jns rex.RXB (bad) pushq rex.WB mov (bad) mov in sbb mov rex.B or jge in (bad) test movabs icebp popfq sarl (bad) cmp nop mov mov jnp adc cmp sub cmc bt cmc ror cmc sub ja cmp xor clc cmc rol test jmpq test test jmpq enterq rex.R mov xchg rex.WRX rex.XB movabs (bad) and mov mov xchg push scas (bad) push xchg mov sbb add test rol fidivr rex.WRB (bad) sub outsl rcl faddl xchg movsl lock (bad) (bad) cld js movabs js (bad) js rex.RX mov iret push scas push add rex.WX retq mov in fild xor in lods push adc (bad) (bad) movabs xchg jrcxz fs mov test (bad) cmp adc sbb imul enterq imul lmsw fwait jmpq rcrl (bad) jae fnstcw adc int ds cmpsb or xor cli push stc outsb or (bad) (bad) pushq loop mov (bad) jl out jg and jo push sub test notb xchg pop pop pushfq (bad) hlt cmpsb and ficoml add insl (bad) gs (bad) rex.WXB ss jae (bad) es std movslq rex.RXB jmpq enterq or fdivs repnz fildll movabs and push scas rcrb (bad) rex in mov movabs mov pushq rex.WRB jbe (bad) (bad) (bad) cld adc (bad) (bad) (bad) movabs xor add and scas rex.WRB cmc movabs js rex.WB (bad) out incl rex.WX testb pushfq cwtl in sbb or xchg push retq or sbb (bad) lock ds lret insl loopne (bad) mov jge cld sbb xchg (bad) or es add loop cmp lods sbb or (bad) movabs sbb mov in add sahf and and ss cwtl jmpq sbb repz push shlb mov xchg (bad) jmp lahf (bad) out jp xor cmp leaveq rex.WRB sbb (bad) mov (bad) std (bad) in and (bad) callq iret (bad) test sahf out mov rex.X (bad) mov pushq js (bad) data16 xchg or (bad) sbb sbb push (bad) rex.WRXB rex.RB sti (bad) movslq rex.WRX rex.WR (bad) insl popfq mov jle int3 mov jae je bt cmp jmpq je stc jmpq add cmp clc stc bt cmp jmpq callq bt cmc or jmpq outsl jle mov adc in lock jae jb mov rex.RXB or or (bad) and icebp xrelease fimull movsb (bad) cmp jbe ja fwait rex gs cltd in (bad) cwtl sti push xchg insl lret adc mov (bad) movabs fidivrl jrcxz jnp jo (bad) (bad) (bad) decb sbb mov in rorb xchg mov sbb in rex xor scas (bad) (bad) mov pop rex.WRB mov jg xchg in or rorb mov (bad) lret adc cmp or test fdivs decl test movsbl jmpq cmc jmpq jmpq mov sub (bad) sbb enterq cmc push or xchg movl clc xor (bad) ds fsts rex.RXB out jb (bad) xchg jo movabs loope or je test ja xchg pop addr32 adc push jg (bad) adc (bad) stos movabs rclb xchg xchg push insb rex.WB fiadd (bad) (bad) (bad) sti movabs xor sub icebp and add test and (bad) jmpq and xor (bad) movabs (bad) jo rex xlat jnp and movsb xchg vcvtss2si mov xchg in js cmp lods andl in rex.R (bad) jb orl mov adc sub scas jmpq rex.RXB rex.WB cs lods (bad) retq cwtl (bad) clc (bad) rex.WR rex.B rex.WXB lahf lods push (bad) push mov adc fisttpll sbb loopne adc pop cmp push rex.WRB cmp retq (bad) xor (bad) sahf (bad) (bad) (bad) rclb mov mov xor add icebp and movabs outsl lods (bad) (bad) (bad) (bad) and rex.RXB xchg mov xchg repnz je loop push lret sub roll cmc cmp iret jmpq cmp stos (bad) push movabs repz (bad) (bad) jmpq mov xchg pushfq xor cmp jl data16 stos cmp add jl retq gs fwait mov rex.W (bad) push cmp push (bad) jl (bad) xchg std xor mov (bad) or mov and decl shl not rcr sub add shld mov mov mov inc shl mov bt stc repnz jmpq add rex.RB jne push jb movslq jae outsl fs gs xchg xlat add mov rex.WRXB in adc (bad) mov (bad) cmp sub sbb sub stos sbb imul shr mov push (bad) lret rorl rcrb callq rex.W or movabs adc retq adc (bad) or xorb mov push mov (bad) (bad) decb (bad) (bad) (bad) callq mov sarl add cmpl lock mov retq sbb mov out jl sti lahf icebp (bad) (bad) or icebp (bad) mov fsubrp (bad) (bad) nop out rex.W (bad) rex (bad) add xchg mov jg push fnstcw (bad) mov push (bad) rex sub mov callq imul mov adc (bad) push push xor jge js jmpq jmpq or mov (bad) jne xorb cmp (bad) fs xor pop test xchg push mov push and add jb sbb jrcxz movsl (bad) rex.XB fidivl ja out cmp ds lods incb push jo adc mov pop rex.X out mov mov adc push and rex.WRXB out movabs fidivr pop movl adc cwtl or or pop pop (bad) movabs pop mov (bad) vmaxpd (bad) (bad) std ja cmp add jnp jno (bad) jae cltd (bad) (bad) (bad) jp rol pushq int3 push (bad) nop (bad) rex.WB (bad) shrb sahf mov xor lods xor jge (bad) jp add (bad) insb rex.RX gs movsb jmpq jmpq jmpq mov shr ror lea ror sub adc sbb sub bswap mov cmc sub bt cmp test stc pushq jmpq imul bt cmp cmc test add jmpq clc cmp sub clc repnz jmpq jmpq jmpq not mov ror btc mov stc mov stc mov bt cmc jmpq cmp jne jae dec mov stc clc bsr mov sub cmp rcl dec mov jne xor clc repnz jmpq jmpq cmp lea lea lea mov not pop jmpq je not lea lea bswap mov movsbw movzwl jmpq cmc push movzbw test shr dec mov test sub jmpq add jmpq test mov mov mov xor or (bad) xor xchg push rex.WRX stos jle (bad) popfq cmc (bad) rex.RXB in add in retq stos mov negb mov ds insb (bad) fwait repz push loop push or jb push pop rex.B jp fbld popfq movsl (bad) (bad) (bad) sti jne and (bad) xor pop stc pushq sahf jp mov sub xchg add sti notl xor add sbb lods insl (bad) fdivrl rcr callq (bad) pushq insl cmovns (bad) imul stos sarl (bad) sub addr32 insb sarl (bad) rex.R xchg nopl lods lea test fdivl ds mov xchg lea bswap mov movzbw not lea mov bswap mov mov lea jmpq xchg xchg mov movsbw not mov mov jmpq cmp lods roll fmulp jl pop stos (bad) mov jne adc lock (bad) test rex.W es mov enterq jl mov int fwait rex.WRB ja jl std xor cmp sub jp rex.WXB rex.RX (bad) (bad) xchg (bad) rex.WRXB gs pop pop jg callq push pop xor pop jnp insl ss repz rex.WX and fyl2xp1 out fdivl rex.X jge insb (bad) rex.X idivl (bad) (bad) (bad) sti movabs xor mov enterq xchg es jp cmp (bad) (bad) pushq imul notb pop xor mov cmp in xor loop movsl cmp es outsb (bad) adc jnp jmp xchg (bad) xor icebp jrcxz (bad) xchg xor test lahf imul out (bad) mov rex rex.RXB or and je clc mov cmp cli (bad) or rex.WRX enterq pop jbe adc adc sub mov lea mov xor jrcxz mov push xchg (bad) (bad) jmpq test rorl mov jb sahf loop cmp repz mov (bad) (bad) std out cmp mov repz cltd rcr (bad) lods test add out add add add push fs decb pushq xor and jne fldl (bad) mov mov mov callq scas fwait clc scas test (bad) sub sub enterq sub mov faddl adc ss pushfq stc scas leaveq pop icebp hlt movabs or jae add (bad) xor (bad) notl add shll lahf stc (bad) lahf (bad) adc or movabs (bad) lea cmp rex cld fildll jb rex.XB jns mov jmpq imul (bad) stos pop rol cmpl int rex.W lock add (bad) sub (bad) or callq rex.XB rex.B addpd lret mov jae icebp mov pop sub shl xor addr32 sbb in roll push (bad) mov (bad) pop mov fistpl rex.XB hlt lods mov cmc outsl mov adc or jge adc jle movabs jne movsb (bad) rex.WB iret jg loope mov callq out mov cmp sub (bad) (bad) (bad) sti in (bad) xchg jg (bad) (bad) (bad) je add fxch test (bad) pop (bad) cs jle stos movslq jbe add stos push push push mov or push in movabs lock fwait pop xchg cmp (bad) js (bad) loopne (bad) fs gs (bad) (bad) jmpq scas sbb rorb (bad) (bad) in or add jae (bad) xchg cli addr32 pop push cmp jne sti pop sub shll ja cmp mov push stc (bad) mov (bad) mov imul lea jmpq loop nop fmull sub cmc (bad) scas test ds fnstsw insl insb pop movabs cs push push rex.X rcrl (bad) lahf mov mov repnz test or cld cltd leaveq sbb movabs out fidivl mov cmp outsl lahf xor cmp (bad) (bad) lret movabs movsl and test or push fwait (bad) (bad) (bad) sti leaveq stos push cmp (bad) (bad) (bad) (bad) pop rex lock movabs sbb movslq imul (bad) (bad) (bad) (bad) fimull lock addr32 adc jb (bad) insl or (bad) push cmp (bad) pop xor and (bad) jmpq pushq lock jp and (bad) mov fsts je sub movzbw test movzbw push adc bts rcr movsbw mov clc jmpq ja and sub shrd add dec mov neg mov cmp cmc cmp cmc repnz jmpq pop add (bad) lock mov push mov mov jne rex.R (bad) cmp (bad) lock insl rex.WRXB adc sbb jle mov cmp (bad) mov jns or xchg sbb movabs fidivr and adc and mov rorl xor (bad) icebp mov (bad) (bad) (bad) (bad) inc lods (bad) jns push cmp cmp fdecstp add movl test ss mov xor pop fs ds xchg sahf (bad) mov out jo rex.WRXB scas xorl cmp pop adc add sbb rex.WR in movsl (bad) add (bad) mov mov test icebp incl cmp push and movzbl mov sub bt sub movzbw movsbl lea jmpq jmpq jb jmpq jae cmp cmp jmpq je cmp test cmp cmc add stc bt clc cmp jmpq jmpq je clc bt clc test sub test cmc jmpq jmpq (bad) rex.WX rex.WX data16 retq xchg stos int3 stos pop mov out outsl pop (bad) fs sahf rex.X or cmp or (bad) rex.W sub mov pop rex.WX mov js movb gs sub outsb movslq enterq sti mov (bad) (bad) (bad) (bad) push pop cmp stc out lods pop cmpsb jno mov (bad) or xchg mov mov callq movsb callq xor mov callq xchg sarb sbb pushq (bad) (bad) pushq rex.B fwait ror movslq and cmp sbb test (bad) jmpq (bad) xchg rex.WRX rex.XB (bad) and and fdivs rex.WXB imul push pushq rex.RB lock (bad) (bad) hlt (bad) movabs or push cmp lahf (bad) (bad) (bad) nop pushq jl jle (bad) fsts rex.WRXB cmpsl rex.XB (bad) mov jno (bad) rex.WRXB sub (bad) sbb pop lock fnsave mov pop sbb sbb or loopne cmp retq movabs sbb retq (bad) std movabs adc mulb push sbb (bad) (bad) (bad) decl adc cmp xor sbb sarl fcmovb mov int3 lods cmp test xchg rex.WR rex.B rex.WXB and cmp xor retq loopne adc (bad) cmp rex.X adc testl xchg (bad) rex.RX sbb jmpq sar cltd jrcxz xchg rex.WB (bad) int jmp in (bad) jne out callq rex.WRX pop lods movsl imul (bad) mov add push in stos (bad) adcl (bad) sbb xor mov sbb lods sub adc push hlt movsb push (bad) insl sbb pushq out (bad) (bad) (bad) cld or int sub fwait imul or rclb lods mov mov xor data16 add add or (bad) cli xchg je pop in pop faddl out clc pop rex.RXB mov pushq rex.X rex.XB sarb cmc xor and add outsb enterq in sbb (bad) nop xor mov scas cmp (bad) rcr iret ja int3 (bad) shrb lret (bad) (bad) mov imul and sub loop mov hlt ss lret jl sbb (bad) mov xchg jmp mov (bad) je popfq pop ja mov movslq outsl pop xchg (bad) pop (bad) roll jp rex.WX cmp out add sub mov jns (bad) lret add (bad) lahf jns movabs data16 (bad) (bad) cld adc (bad) (bad) (bad) movabs and roll add add imul js rex.R rex.RXB pop cmp fistp xchg mov rex.B mov or rex.RX (bad) or and (bad) jbe (bad) mov sbb (bad) nop test cmp add rex.RX movabs add mov mov out mov rex.WRXB std add neg add (bad) outsb pop mov lret ja cmp pushq leaveq push out mov in (bad) lret jp add loopne retq (bad) clc mov xor int rclb out retq cld push mov sbbb or and add jrcxz testl xchg rex.WX (bad) rex.WXB sub (bad) add imulb lret xchg mov sub rex.X and rol (bad) add insb enterq cmp xchg int adcb xchg imul in (bad) jmpq callq jmpq jne jmpq in not adc adc jl js pop movabs push (bad) (bad) rex.WR or rex.XB retq mov adc sub push mov (bad) std (bad) and xor and test and rcrl rex.WRXB xchg (bad) repnz int jns pop xor mov shrl loope pop sbb (bad) (bad) std outsb mov (bad) (bad) jmpq mov repz push add pop add (bad) test movslq mov mov mov (bad) sub add cmc (bad) retq repnz (bad) cs js (bad) test push jrcxz and bt movb cmp stc test jmpq pop pushfq (bad) vmovhpd nop cmp mov mov insl push xchg int add lods fistl out adc mov (bad) addl (bad) loop loop rex.B out xchg lock and sahf xchg cltd out lahf xchg lret outsl std pop adc in in icebp adc cmpl movabs jb sub or (bad) (bad) std or jp fidivl pop xchg outsb addl sub (bad) (bad) std cmp mov cwtl ja or ror pop add add or and pop rex fs (bad) outsb mov movsb out imul (bad) repnz push roll jg int sub loop xor add or js fistpl scas mov jno sub xchg (bad) or mov lret xchg adcl enterq test bt jmpq callq test test cmp jnp jae stc cmp jle jae clc jmpq cmp cmc cmc test jmpq and rcr pushq sbb mov cmp xchg cwtl xor sub clc in add mov (bad) sbb sar sub repnz xchg int popfq rex.WX neg sub (bad) scas push test sbb cmpsl test sbb callq xor cwtl (bad) rex.XB out xor fbld sahf ja (bad) (bad) (bad) cld movsb movabs xor cmpsb int3 mov adc mov loop adc mov insl (bad) cmpsb in mov mov ss add add movsl lock int3 xor mov sar xchg or (bad) cmp test (bad) and jg fld mov (bad) rclb lcall sbb repnz pop adc jrcxz or mov push mov xchg imul adc jmpq fadds fmuls test sub sbb bt bsf add bsf bsf shrd mov bt cmp mov jmpq pop ds (bad) rex.WRB adcl out jg add clc movabs (bad) loope es mov (bad) rcrb push sbb lret sbb adc (bad) fs adc (bad) xchg rex.WRB movsb clc (bad) (bad) jne and pop test out add jge xchg pop cmpsl cmp outsl mov mov cld cmc rex.WRXB movslq cltd fcmovb fwait rex.R or jb leaveq movabs jae and test movabs adc (bad) (bad) sti mov (bad) (bad) decb hlt sub add or xchg ja rex.WXB sbb cmp movsl cmp roll cmp pop rex.WRX fnstsw test push retq scas xchg lods movabs loope rex.X ss xchg jmp (bad) movslq jrcxz fisttpll sti xorb pop xchg fimul (bad) out xchg clc mov mov rex.RB (bad) loope (bad) shrb lret mov in mov movabs int xor rex.RB mov sub mov adc jl cs ss sar cmpsl (bad) ja enterq xchg mov rex test (bad) jno and (bad) (bad) decb mov out (bad) lods in adcl and adc pop adc rex.RX mov movabs jmp flds (bad) (bad) (bad) in add mov rex.RX jrcxz retq xor xchg xorl rex.WRX mov sub test clc xchg rex.X pop popfq rex.WXB pop cmp mov mov (bad) xchg imul retq (bad) int out decl out sub cmc ror stc bt stc clc sub clc jmpq shrb (bad) movsl sub es mov push repz xchg ds in mov (bad) sar xchg rex.WRXB push (bad) fs rex.WRXB or sub xchg insl mov movsb (bad) and pop test cmp loope (bad) data16 ffreep out adc jnp mov jmp jg loop xor scas loopne rcrb push movsb movabs xchg cmp xorb insl (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) xchg add xchg (bad) jle stos (bad) xchg add add (bad) add (bad) movsb out rex.B ss sbb or (bad) mov sbb in add fisttpl rex.R cmp xchg mov in in ja or mov xchg push loope jne out icebp (bad) jmpq je not not inc push stc rcl mov bsr inc sub jmpq sub stc test repnz jmpq shrd add dec mov jmpq ja mov shr sub lea bt btr add lea shld rex.W notl (bad) lock xor dec and mov clc bt cmc clc repnz jg jne cmp bt movb jmpq jne bt bt cmc jmpq cmpb jmpq (bad) mov std jmp callq and adc sbb (bad) lret (bad) (bad) jmpq xchg sahf cmc in callq je es hlt add xchg rex.X (bad) jl insb in xor rcr rex.WXB test loopne movslq (bad) (bad) leaveq lret out sbb clc (bad) mov mov push xchg (bad) sub sbb (bad) sbb out movabs (bad) cld sbb add (bad) (bad) (bad) (bad) lods popfq scas or (bad) xchg sub add test add add sub adc icebp rex.X jmpq sbb add rclb divl pushq sbb mov xlat test adc hlt rex.XB adc or mov jne and scas mov cltd pop (bad) push ss and sub dec mov inc mov mov xor inc rol mov jmpq jmpq adc btr add bts lea mov cmc jmpq test jmpq test cmp jmpq je or seta neg bts add bsr mov stc add cmp bt mov or (bad) icebp (bad) mov test clc jbe cmp cmp jmpq clc stc xor cmp cmp clc repnz jmpq je neg movsbw stc sub push neg rcr mov mov cmp sub lea mov movzbw lea jmpq cmc cmp movsbq lea mov movsbw pop jmpq callq jmpq test bt test bt test jmpq jne sar mov xor bt sub cmp mov cmp test cmc test sub stc bt stc pushq stc cmp jmpq ja jae jmpq outsb xchg push movsl jo,pt xchg push sub movabs rex.WXB pop mov xor jne xchg int mov gs std push rex.RB popfq sbb xor rex.WRB test fst jb enterq mov add add pushq jle mov fsubrl (bad) xor jbe xor and leaveq test jge (bad) mov mov ss mov or sbb ss and and rex repnz (bad) (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb push mov xor out loop (bad) (bad) (bad) dec lahf (bad) xor mov (bad) sub (bad) rex.WXB (bad) adc add std (bad) and mov sub es (bad) mov movabs mov sub fdivs fdivrp lahf movabs xor rorb rcl sti add clc stc mov bt cmpb jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq jmpq jmpq jb test jmpq cmp jmpq jmpq jmpq clc clc cmc mov cmc bt mov shld cmp xor sar mov ror and not mov not dec dec push xchg shl mov bt stc rol lea push cmc push sar bt push adc rol bts push rcl push bsf mov stc mov movsbw mov test or jmpq jmpq jne neg jmpq test clc add jmpq jmpq je test sub jmpq jmpq movslq std (bad) mov mov (bad) and stos mov ficom jmpq sub movslq iret rex.WX xor lock jo std movabs rex.WRB rex.RB rex.WRX sub xor xchg rex.RB movabs rex.RB fs cld xchg out mov xchg lock (bad) out (bad) (bad) and popfq (bad) (bad) (bad) sti test (bad) (bad) decb ja adc rex.WRB add or (bad) outsl xlat int push cmp fidivl movsb cld rex.WR sahf mov icebp test rex.WXB outsb in loop or test cmp (bad) popfq (bad) mov sarb cmpsl rex.WR rex.WR lret sbb in adc jo jnp rex.WRB cs or rex.RX (bad) pop ss jg rex.WRX (bad) fs (bad) jp (bad) rex.W jbe push push movsl add in int (bad) insb std jl adc lea mov in pop retq data16 or and sbb (bad) sti jno mov (bad) (bad) (bad) (bad) incb pushq retq shrb (bad) rex.RXB jns (bad) (bad) incl adc push or orl cmp sti lock mov icebp retq push rex.WX mov jrcxz data16 fdivl push cmp adc sbb sub enterq (bad) lahf rex.R sti mov test in decl test mov adc bts ror mov jmpq ja rol (bad) lock lea sub rcl add sar add btr bt mov xor and clc mov cmc repnz jmpq jmpq not jb lods jmpq jb test test cmp jmpq test cmp sub stc jmpq jmpq jae stc bt cmc cmp cmp jmpq jmpq jmpq ja bt jmpq (bad) mov (bad) push movabs sub cmp sub add add jo test (bad) xor rex.WRB mov pop scas sub jmpq pop (bad) cmp shlb int3 outsb pop andl (bad) sbb test cmp lret cmp je gs mov adc rex.RXB xorl (bad) cmpsb mov (bad) (bad) dec cli (bad) (bad) (bad) cld (bad) jbe movabs insl cs out jge jb movabs scas repz int3 add cwtl in cmpsl mov lods sub ja mov xorl cs jp add add or fist stos mov repnz imulb and loop jge (bad) rex.RX cmp es rex.RB mov loopne pop rex.B (bad) repnz (bad) push and (bad) in jg adc (bad) add pop pop (bad) insl sbb mov mov rex.R es rclb sahf mov adc outsb or insl sbb movabs push jle shrb (bad) sub mov (bad) add push push test imul or scas iret stos or cltd jmp nop test sbb mov retq (bad) and (bad) (bad) cld (bad) mov (bad) (bad) (bad) cmpsl pop incb xor icebp nop jo movabs (bad) in negl cli cld add add add adc xchg push (bad) stc mov pop cmp lods (bad) or rex.WB jg loop mov jl mov jo movabs (bad) and rex.WB mov movabs (bad) shr cmc stc cmp jmpq jmpq jmpq mov shl shrd mov jmpq jmpq push rex.W rex.WR push rex.WB cs insb add cmpsb sbb cmp js (bad) xor jbe cwtl add xor cmpsb sbb xor xchg add pop rex.WR sbb sub xchg rex.WR mov jle scas stos (bad) (bad) imul in roll sahf cmc loopne push xor or lret cmc (bad) notl popfq cmc in sbb fstpt out ficomp lods (bad) (bad) movabs gs movslq enterq cld imul (bad) (bad) cld (bad) cmp (bad) shlb imul add add jl push js lret movsl outsb or insb sbb xchg data16 xchg add adc (bad) retq and (bad) jo fwait sti (bad) and mov cmp outsl and hlt es mov movabs icebp jmpq rorb xchg (bad) jmpq jmpq rep lea mov lea movsbw pop jmpq jmpq jmpq outsl insb xor cs insb add jmpq cmp rex.WX leaveq movslq or xchg movabs (bad) xchg rex.RB scas jg mov jrcxz negb (bad) mov int3 sub lea (bad) jmp adc xor (bad) or jrcxz cmp pushq rex.W (bad) xor jmp sti in mov (bad) (bad) rex.RXB (bad) (bad) push rorb (bad) cli (bad) int3 add (bad) rex.W xor jne xor callq (bad) cld add mov (bad) xchg loope shrl fwait mov add adc lods lret (bad) lea outsl test mov (bad) sbb out mov (bad) (bad) fnstcw mov loopne cmpsb scas insb or push or outsl xchg mov loop rex.RB xchg scas sub mov movsb (bad) scas (bad) sub callq loopne xlat (bad) (bad) rex.XB callq sahf repz mov xlat (bad) rex.RXB ljmp or (bad) (bad) and mov adc in mov jp stos mov adc mov or sub mov pop lret in movslq rex.B xchg mov cmc in lock nop in (bad) sbb pop mov or cmp ds addl (bad) (bad) cld add int3 sbb (bad) (bad) (bad) (bad) xchg pop rex.WRXB mov adcb pushq adc rex.R (bad) cltd stos fsubrl jl (bad) rex.X fcom mov adc mov add add (bad) sarl xchg jl cmp retq jge adc fcmovb mov pushq (bad) xor add movabs sub mull in retq movsl mov mov movsl cmp cmpsb (bad) mov cmp jno adc ss in test (bad) fist (bad) or mov rex.X repnz sahf jmp (bad) or (bad) xchg insb stos or xlat iret out rcll xchg rex jno (bad) movabs jmpq movabs rex.WRB rex.WRB fucom rex.RB adc xor (bad) sti std sub (bad) (bad) std (bad) sbbb sub idivb push xchg movabs loop test add pushq test sti xchg testl fistpl xor loop mov callq (bad) scas (bad) mov add fdiv mov (bad) lock std test push jno pop repnz movsl frstor movslq lock jmpq rex.RX jg mov retq hlt (bad) xor xchg and and jmpq rclb and pop push (bad) in fidivl mov (bad) rex.X (bad) imul stc insb push test rex.WX pop mov (bad) jmpq test add out (bad) notl or jg add pop push lock push imul jg (bad) (bad) (bad) sti neg fwait scas (bad) (bad) (bad) decb stos callq retq out add add or std rex.X idiv cltd (bad) jns sarb rex.B leavew cmpsb mov mov cmp xor (bad) jae scas mov add adc or and sti sahf mov cwtl adc andb push scas mov cwtl sub (bad) xchg (bad) std leaveq popfq outsl or xor adcb xor (bad) mov xorl out sahf mov jrcxz lods cmp adc and (bad) or decb callq cmc test fcmovb mov ja (bad) (bad) outsl rcl ss enterq rol test test (bad) (bad) sti mov (bad) (bad) (bad) decb mov xchg xchg mov rcrb (bad) (bad) (bad) dec cs movsb roll jmp subw mov sub outsb add lea cs movsb rol pushq pop xchg add cmpsl popfq mov xor rex.WR mov cmpsl jp sbb in xor (bad) retq rep stos xchg sub outsl pop adc retq (bad) stos and adc pop push rex callq cmp mov pushq rol cli fidivr jnp out rolb cmp insb rex (bad) (bad) rex.WX mov push rex.WRB and scas adc in and cmp push sti (bad) (bad) (bad) sti cmp (bad) (bad) std lret (bad) push movslq mov cmp cs lcall pop and cmp loope pop sbb (bad) (bad) (bad) (bad) mov (bad) jbe rex.WRB rex.RB rorb adc rex.WX mov sti imul mov mov nop lretw notl jns cmp sbb pop (bad) jnp (bad) test jae add mov dec btr mov movsbw mov stc xor cmp test repnz jmpq repnz jmpq neg shrd mov bswap btc rex.W testl rcr add rcl mov test jns test stc sub stc repnz jmpq je bt cmp add stc clc bt clc cmp jmpq test movb cmp clc test jmpq jb clc cmpb jmpq je clc movzbw bsf push btc mov bsf dec neg cmp sub not mov jmpq jmpq je neg btr not jmpq jb bt cmp jmpq adc xchg movabs (bad) addr32 jge movsl cli push (bad) and mov in insl push rex.WXB iret cli and ja xchg (bad) ja rex.WRXB imul fs mov (bad) stos gs mov out or std push rorl jno add sbb jns (bad) xchg iret stos (bad) callq mov mov outsl xor popfq sbb or (bad) mov nop or out sub adc movabs test and sbb xchg mov test pop (bad) lods scas and (bad) fbstp adc mov (bad) sub mov sub rex.X xor cmp (bad) (bad) std pop (bad) add data16 repz movabs (bad) sti loopne (bad) es (bad) (bad) (bad) (bad) loopne pop mov sbb adc rex.XB mov repnz rex.X fwait adc mov (bad) jae icebp pop repz push cmp cmc cmp push roll sub loop jl sbb pop mov sbb scas (bad) and repnz or or sti sbbl rex.W mov jle repnz pop xor pop (bad) adc pushq mov (bad) je repz repnz loopne (bad) pop (bad) andb (bad) rex.WRX cmp rex.X sub mov jne xchg jae (bad) jo ss (bad) and xchg cli or movabs sti or xchg xor decl (bad) and (bad) (bad) cmp jno cmpb jnp jmpq stc jmpq add test (bad) rex.RB mov lret xchg (bad) outsl pop pop cmp cmpsl movsl ds outsb fcmovbe (bad) mov cld xchg mov jb or add je sbb hlt sbb cmp shll (bad) pcmpeqd adc push cmp add cmp loope xchg cltd mov sarb sbb out (bad) shrw (bad) rex rex.XB rex.WX (bad) fbld pop fucomip jno (bad) test (bad) adc (bad) (bad) (bad) cld add (bad) fdivr (bad) (bad) (bad) xchg out fildll mov movsb push (bad) loope mov fdivrl out stos movabs or pushq xlat (bad) cmp insb and rex.WRXB leaveq test push jne mov rex.WX retq pop int rolb clc xchg stc adc in rex.RB scas fidiv or jl mov pushq mov rex.WB xor (bad) fildl lahf mov callq test (bad) lock lret sbb stos jge adc addr32 jmpq rex.R rex.WRXB (bad) adc mov callq (bad) movslq rex.WX mov rex.WB adc rex.W out fnsave cld rex.WRX movabs pop adc (bad) (bad) sti rex.RX movabs (bad) repz jl sub sub adc movabs rex.WRB rex.RB jne pand xchg (bad) (bad) fsts retq retq sbb movsb cmp (bad) (bad) push rex.WRX mov out sbb jns mov je (bad) (bad) out negb adc clc insb es jnp loope (bad) adc sbb scas xchg cld out retq repz pop enterq mov rolb rex.RB sub add cmpsl lea in out lock xchg mov xchg rex.WRXB mov leaveq repnz stos add sub add mov data16 (bad) rex.WRXB pushq mov mov rex.RX outsb (bad) (bad) test scas (bad) (bad) (bad) (bad) cld roll push sar (bad) callq push push and push rclb rolb mov retq movb stc add popfq cmpsl data16 js jo add add push sbb mov test movabs rex.R rex.RX add sub mov imul stos addl (bad) pushq cmp loopne mov scas sub (bad) out incl stc test neg cmc bt add cmc std cmp popfw jmpq jmpq jne inc add xor xor or mov stc add or add add mov mov stc clc bt stc test jmpq stc clc movzwl cmc mov cmp clc add jmpq mov jmpq neg movzbl test xor test cmc stc test add jmpq clc add jmpq push jmpq jmpq jne adc neg mov bt and jmpq jmpq jmpq cwtl cmp cmc cltq cmp stc sub jmpq stc clc stc sub bt stc stc imul jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq push jmpq rcr and bt dec xor bsf shld data16 icebp (bad) (bad) cmc add jmpq popq jmpq jmpq dec jmpq push jmpq mov jmpq push jmpq shl movzbw neg mov bt cmp shrd add jmpq mov jmpq jmpq jmpq pushfq jmpq je stc stc clc bt addl cmc cmc sub clc jmpq jmpq pushfq jmpq push jmpq shrd bts or rcr mov mov add jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq push jmpq push jmpq cmc ror cmp bt cmc stc add jmpq jmpq jle not jmpq mov jmpq seto push mov movsbw mov jmpq jns mov jmpq push jg push jmpq pushfq jmpq bt sub clc cmp shr jmpq mov jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq shr sub movsbq jmpq rcl mov add (bad) lock jmpq jmpq jmpq dec jmpq jl popq jmpq pushfq jmpq push jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq mov jmpq push jmpq push jmpq push jmpq inc stc clc clc cmc ror cmc clc bt jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq push jmpq cmc test cmp jmpq push jmpq test add jmpq jmpq jmpq bt jmpq jmpq xadd mov lea mov clc add jmpq jmpq mov jmpq jmpq cmp bt add jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq pushfq jmpq jmpq push jmpq mov jmpq jmpq jne jne mov jmpq jmpq jmpq mov jmpq popq jmpq jmpq jmpq mov jmpq pop cmp cltq cmp jmpq jbe push jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq mov jmpq mov bt test bt add ja callq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq pushfq jge popq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq popq jmpq pushfq jmpq cmc shl jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq je cmp bt stc clc cmp jmpq movsbq not setae seta mov jmpq mov jo mov jmpq push jmpq stc xor jmpq mov jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq xor cmp stc bt sub jmpq jmpq popq jmpq pushfq jmpq push jmpq push jmpq mov movsbq mov jmpq test xor xadd mov clc dec mov jo cmp cmp sub jmpq add jmpq mov jmpq push jmpq add btr mov shr setns mov clc sub jle divl jmpq jmpq jmpq jmpq es mov jmpq jmpq jmpq jmpq jmpq push jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq pushfq jno popq jmpq stc clc clc add jmpq jmpq jmpq clc mul jmpq jmpq push jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq popq jmpq push jmpq jmpq movsbw push jmpq add xchg not mov cmp (bad) hlt adc mov test jmpq push jmpq popq jmpq jmpq popq jmpq push jmpq jmpq push jmpq push jmpq push jmpq jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq mov jmpq push jmpq popq jmpq jmpq popq jmpq push jmpq jmpq mov mov jb mov jg mov jmpq popq jmpq push jmpq stc jmpq push jmpq push jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq jmpq push jmpq popq jmpq jl push jmpq jmpq dec bt lea cmc clc clc xor test sub jmpq seto pop lea lea lea pop retq pushfq jmpq pushfq jo popq jmpq jmpq jmpq bt cmp clc sub jmpq jmpq mov jmpq push jmpq mov jmpq cmpl jmpq push jmpq mov jmpq sub bt clc shr jmpq mov xor test btr shr lea jmpq push jmpq push jmpq je clc stc bt test sub test cmc cmp cmp jmpq push jmpq pop retq push jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq popq jmpq jmpq jmpq jmpq jmpq push jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq popq jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq cmc not clc cmp cmc test add cmc cmp stc add cmp test clc xor jmpq jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq push jb push jmpq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq jmpq push jmpq js push jmpq jmpq mov jmpq stc stc cmp stc sub jmpq jmpq xor jmpq jmpq jmpq push jmpq mov jmpq jmpq push jmpq lea lea dec mov not jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq pushfq jmpq push jmpq jmpq jmpq bt jmpq push jmpq push jmpq jns push jmpq jmpq push jmpq add cmp movzbl mov jmpq jmpq jmpq push jmpq mov jmpq push jge push jmpq divq jmpq jmpq jmpq decl jmpq bsr and rol lea cmp bt jmpq cld cld jmpq sbb dec mov rcr mov cmp stc sub jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq push jmpq push jmpq mov jmpq cmp not mov test jp test bt sub jmpq stc sub jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq push jmpq jmpq cmp jmpq jmpq push jge push jmpq mov jmpq jmpq push jmpq push jmpq mov jmpq jmpq xadd adc jmpq push jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq jmpq jne je clc cmc cmc jmpq popq jmpq jmpq push jmpq push jmpq shrd bts jmpq rol mov jo xor jmpq lea jmpq push jmpq jmpq lea push jmpq pop bswap mov mov pop bswap mov jmpq movzbw pop jmpq push jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq push movzbw cmp or sub and jmpq add jmpq push jmpq push jmpq mov jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq jmpq push jmpq mov stc cmp bt sub cmp movl clc or jmpq clc add jmpq jmpq cmc cmc bt imul jmpq mov jne pushfq jmpq push jmpq push jmpq jmpq jmpq jmpq clc and jmpq jmpq push jmpq jmpq jmpq mov clc mov stc bt sub jmpq sar mov cmp cmp stc add jmpq jmpq push jmpq mov jmpq add jmpq jmpq shld jmpq jmpq jmpq bsf mov bt stc jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq xchg bt stc bt cmc cmp jmpq jmpq je setne jmpq mov jmpq jmpq jmpq jmpq mov jmpq push jmpq pushfq jmpq jmpq pushfq jmpq rol btr bt mov stc clc xchg stc xor jmpq not jmpq push jmpq shr movzbl dec clc add bswap jmpq jmpq jmpq sub jmpq not jmpq push jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jbe push jmpq mov jmpq mov jmpq jmpq jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq push jmpq jmpq add jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq divl jmpq jmpq jmpq jmpq jmpq push jmpq sub jmpq push jmpq mov jmpq bswap pop movsbq not pop xchg not not pop bswap movzbw jmpq pushfq jmpq popq jmpq jp popq jmpq jmpq jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq jmpq jmpq stc cmp xor cmc cmc cmc stc sub jmpq jmpq jmpq jmpq push jmpq pushfq jmpq mov jmpq push jmpq test jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq js mov jmpq mov jmpq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq push jmpq jmpq jmpq push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq mov std jmpq jmpq cmp test cmc sub js mov jmpq push jmpq push jmpq jmpq bt clc stc stc xor jmpq jmpq jmpq callq mov jmpq jmpq jmpq push jmpq jmpq bt add jmpq jmpq jmpq jmpq lea jmpq push jmpq ja jne je jmpq dec test jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq jmpq add jmpq jmpq mov jmpq push jmpq jmpq add ror mov cmc sub jmpq pushfq jmpq jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq mov stc cmp sub bt movl clc or jmpq jmpq movsbq btr and sbb jmpq mov jmpq jmpq push jmpq jmpq jmpq mov jmpq push jmpq jge popq jmpq push jmpq jmpq jmpq mov lea std std push movsbw jmpq push jmpq jmpq push jmpq jmpq mov jmpq jmpq mov jmpq movsbw lea shr stc mov jmpq jmpq push jmpq popq jmpq jmpq test jbe bt add jmpq jmpq push jmpq push jmpq jmpq movzbw bswap mov jmpq mov jmpq jmpq popq jmpq jmpq clc test sub clc bt cmc stc shr jmpq push jmpq pushfq jmpq movzbl jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq push jmpq push jmpq dec jmpq bswap movzbl pop lea bswap xchg pop lea not bswap jmpq push jmpq push jmpq jmpq mov jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq not jmpq jmpq push jmpq jmpq je test bt cmc bt cmp jmpq push jmpq inc jmpq jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq lea inc rcl jmpq push jmpq jmpq jmpq push jmpq lea mov jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq push jmpq bswap mov cmp mov jmpq jmpq jmpq push jmpq jmpq jmpq jmpq test clc add jno not jmpq push jmpq bt cmc btc mov cmc jmpq push jmpq (bad) hlt (bad) test rdtsc clc cmc sub jmpq push jmpq jmpq jmpq jmpq jmpq jmpq clc bt cmc cmc sub jmpq jmpq not jmpq div jmpq pushfq jmpq jmpq bswap cmc shld sar mov test sub jmpq jmpq push jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq lea jmpq mov jmpq jmpq push jmpq je movzbw jmpq jmpq cmp cmc cmp sub cmc jmpq jmpq jmpq mov jmpq jmpq push jmpq mov jmpq jb lea jmpq push jmpq push jmpq jmpq jmpq jmpq pushq setnp movsbw jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jp push jmpq jmpq mov jmpq push jmpq popq jmpq cmc xor cmp cmp jmpq push jmpq jmpq jmpq push jmpq push jne push jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq rcl movsbw clc mov add jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq inc stc bt ror jmpq push je push jmpq mov jmpq jmpq push jb push jmpq mov jmpq neg lahf sar not mov cmc test xchg jmpq push jmpq jmpq cmc bt clc mov jmpq mov jbe mov jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq popq jmpq push jmpq mov jmpq push jmpq rcl add and sub mov jmpq jmpq mov jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq jmpq push jmpq imul jmpq push jmpq mov jmpq push jne push jmpq mov jmpq jmpq mov jmpq clc jae add jmpq popq jmpq jmpq jmpq jmpq shrd cmp ror clc mov cmp add jmpq push jmpq callq jmpq jmpq jle pushfq jmpq push jmpq mov clc and test cmp jmpq jmpq jmpq popq jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq jmpq jmpq jmpq mov jmpq jne push jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq pushfq jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq mov jmpq jmpq lea jmpq pushfq jmpq push jmpq jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq add test cmc jmpq rcl stc btr mov cmp test add jmpq push jmpq jmpq push jmpq jmpq push jmpq ja push jmpq push jmpq jmpq push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq pushfq jmpq jmpq rol rcl clc mov cmc clc jmpq popq jmpq jne lea xorb jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq jmpq jmpq lea jmpq mov jmpq mov jmpq jmpq mov jmpq cmp cwtl cmc cltq jle sub jmpq jmpq jmpq pushfq jmpq jmpq imul jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq push jmpq mov lea mov jmpq jmpq bsf xor bt mov jmpq xadd ror mov jno bts neg mov jmpq push jmpq jmpq jmpq push jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq push jmpq push jmpq cmc cmp add cmp test bt jmpq jmpq jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq push jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq push jmpq dec jmpq mov jmpq jo pushfq jmpq popq jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq cmp sub jmpq jmpq add jmpq jmpq mov not not mov jmpq mov jmpq push je push jmpq jmpq jmpq popq jmpq clc add jmpq push jmpq popq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq pushfq jmpq mov jmpq jns popq jmpq je cmc bt jmpq popq jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq mov jmpq push jmpq push jmpq pushfq jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jae push jmpq popq jmpq push jmpq push jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq push jmpq inc cmc lea bt clc bt not jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq jmpq not mov setle mov jmpq push jmpq jmpq mov jmpq push jmpq sub jmpq push jmpq jmpq jmpq push js push jmpq push jmpq jmpq jmpq jmpq push jne push jg push jmpq pushfq jmpq jmpq clc bt add cmc cmc cmp mov jmpq lea lea lea jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq mov jmpq jmpq mov jmpq ja jmpq pushfq jmpq mov jmpq jmpq jmpq jmpq pop jmpq jmpq pop not jmpq mov jmpq cmc mov jmpq push jmpq bswap mov jmpq seto pop movsbw movsbw pop not jmpq not lea push setns not mov push not lea push dec jmpq jg push jmpq jmpq mov jmpq push jmpq clc sub jmpq mov jmpq push jmpq jmpq not jmpq push jmpq push jmpq cmc cmp jae jne sbb setae and xorb sete bswap pop jmpq push jmpq je lea mov jmpq jmpq add jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq push jmpq dec bt bt cmp lea cmc clc stc xor test sub jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq dec or movzbl bt not xor cmc rcr sub jmpq jmpq jmpq jne pushfq jmpq jmpq je test cmc stc cmp cmp jmpq jmpq cmp jmpq bt sub jmpq jmpq push jmpq jmpq mov jmpq push jmpq push jmpq movzbw mov mov mov jg sub stc imul jmpq push jmpq jmpq jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq jmpq jne shl mov xor movzbl mov cmp cmp jmpq jmpq push jmpq mov jmpq jmpq cmc add jmpq cmc cmc stc and jmpq popq jmpq jmpq push jmpq push jmpq mov pushfq mov push cld mov jmpq jb mov jmpq popq jmpq mov jmpq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq push jmpq push jmpq mov jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq clc shr jmpq jmpq jmpq popq jmpq push jmpq jmpq je jmpq jae push jmpq jmpq push jmpq push jmpq push jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq cld cld jmpq jno popq jmpq push jmpq ror cmc add jmpq push jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq push jmpq push jmpq lea stc stc stc jmpq jmpq jmpq push jmpq jmpq push jmpq inc test clc neg jmpq jmpq mov jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq jmpq push jmpq jmpq jmpq lea shl shr mov clc add mov cmp cmp bt jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq push jmpq jmpq jmpq jmpq cmc test jmpq push jmpq push jmpq jmpq cmp jmpq push jmpq push jmpq lea dec movsbw bt jmpq rol jmpq not jmpq jmpq jmpq push jmpq test sub test shl jmpq jmpq jmpq mov jmpq bt mov stc cmc cmp sub test add jmpq clc sub jns bt sub jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq cmc cmp sub jle mov jle lea jmpq jmpq jmpq popq jmpq sub jmpq push jmpq jmpq push jmpq jmpq push jmpq pushfq jmpq push jmpq push jmpq jmpq popq jmpq jmpq mov jmpq jmpq jmpq mov jmpq popq jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq movzbq movzbw rcl cmc rcr mov jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq push jmpq mov jmpq mov jmpq je clc bt clc test addl cmp cmp sub cmc stc jmpq jmpq bt test add jmpq jmpq push jmpq jmpq popq jmpq jmpq jmpq push jmpq push jmpq push jmpq test bt and jmpq push jmpq jne movsbw test ror xorb movzbl pop jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq lea jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq push jmpq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq jmpq jmpq mov jmpq jmpq popq jmpq jmpq push jmpq jmpq mov jmpq stc sub jb mov jmpq mov jmpq push jmpq sub bt clc stc bt imul jmpq jmpq push jmpq xorb not lea lea pop jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq popq jmpq movzbw mov not mov jmpq jns sub jmpq jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq mov jmpq jmpq test add jmpq jmpq jmpq mov jmpq jmpq or pop shrd shl popfq lea pop bswap pop jmpq add bt test bt xor test cmc stc test cwtl cmc cltq bt sub jmpq popq jmpq jmpq jmpq jmpq rep shld pop shld clc btc cld pop std std popfq jmpq push jmpq jmpq cwtd mov sbb dec test movzbw mov jmpq mov jmpq jnp mov jno mov jmpq push jmpq jmpq push jmpq jmpq popq jmpq jmpq add add pop add movabs jmpq add (bad) out add (bad) and xor add and pop add shr add (bad) pop pop add loopne push add loopne pop add loopne pop add and pop add (bad) in add (bad) test add (bad) in add (bad) xor add add callq add rex xor add shr add (bad) jmpq add and add (bad) test add add pop add shlb add xorb xor add add add xchg push add add push add rex push add or add adcb add add jl add and add andb add add add jbe add add add push add (bad) (bad) pop add or add rex push add and pop add shlb add and add add add loopne push add rolb add sub add or add add push add movabs jrcxz add (bad) icebp pop add loopne push add rolb xor add shlb add pop add movabs add xor add (bad) (bad) push add (bad) lock add loopne push add add add (bad) and xor add loopne pop add (bad) jmpq add movabs add xor add movabs xlat pop add (bad) xor xor add movabs test xor add movabs mov xor add loopne push add add push add or add loopne push add movabs xor add add add add sbb xor add (bad) xor xor add movabs add add add pop add add add add pop add add push add loopne push add xorb xor add movabs lods pop add sbbb add cmp add (bad) or xor add (bad) notl add add mov add and push add rex push add rex pop add (bad) out add shlb add and add xorb xor add ror add and push add rolb xor add shlb add add lods pop add (bad) icebp pop add ror add loopne push add shlb add pop add (bad) icebp pop add and add xor xor add and add or xor add (bad) adcb add add test xor add adcb add add sahf push add rcrb xor add and add shrb loopne pop add movabs xor add movabs test xor add rclb xor add add add push add loopne push add add push add movabs xchg add add add add pop add (bad) xor add add add add sub add rex push add (bad) xor add add jl add loopne pop add (bad) test add add add lcall xor add (bad) adcb add add sub xor add and pop add (bad) icebp pop add loopne push add or add rcrb xor add add push add movabs lods pop add rex pop add (bad) icebp pop add rorb add add pop pop add loopne push add and pop add add add (bad) notl add add push add and push add xor xor add add pop add (bad) adcb add add add add add add add add push add xorb xor add and add pop pop add (bad) and xor add loopne pop add add push add (bad) (bad) pop add and add add add mov add (bad) and xor add rex xor add loopne pop add rclb xor add loopne pop add rex xor add and add and add (bad) icebp pop add and add (bad) (bad) push add movabs (bad) pop add add add and add add add mov add (bad) jmpq add (bad) or xor add loopne pop add and pop add loopne push add (bad) and xor add movabs lods push add ror add and pop add and add add add lret push add add push add and pop add adcb add add lcall xor add (bad) out add add push add shlb add add rex.WR add (bad) and xor add (bad) cmp add rorb add add add add xchg push add loopne pop add (bad) test add and add (bad) notl add add lcall xor add shr add and pop add (bad) notl add add pop add add add shrb and add loopne pop add cmp add xorb xor add and pop add movabs mov add and add and add rex push add (bad) (bad) push add loopne pop add and pop add (bad) (bad) jmpq pushfq jmpq mov jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq jmpq jmpq popq jmpq push jmpq jmpq clc cmc sub jmpq pushfq jmpq clc clc bt sub jmpq jmpq push jmpq lea movzbw movsbw mov jmpq cmp jmpq cmp jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq cmc add clc jmpq shld mov cmc cmp bt cmc sub jmpq push jmpq jmpq push jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq movzbq movsbw push movzbw movabs jmpq jmpq mov jmpq push jmpq popq jmpq jmpq jmpq sub jmpq jle mov jmpq push jmpq jmpq jmpq popq jmpq bswap movzbw mov jmpq jmpq lea jmpq push jmpq jmpq pushfq jmpq jmpq mov jmpq not jmpq jno pushfq jmpq dec cmc clc bt xor jmpq addl bt push bt test stc clc sub jmpq jmpq jne stc sete jmpq jmpq jmpq push jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq push jmpq mov jmpq mov jmpq clc test stc jmpq je setae not movsbw mov jmpq jmpq jmpq mov jmpq push je push jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq push jmpq push jmpq popq jmpq mov jmpq push jmpq mov jmpq push jmpq jne inc jmpq jmpq popq jmpq jmpq lea jmpq pushfq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq cmp jmpq not seta mov jmpq jmpq jmpq jmpq pushfq jmpq or mov cmc inc rcr mov test jmpq jmpq mov jmpq add jg mov jmpq jmpq cmc bt bt sub jmpq jmpq callq movzbw movsbw jmpq push jmpq pushfq jge popq jmpq pushfq jmpq jmpq push jmpq lea jmpq jmpq jbe btc rcl lea stc lea test bt bt cmp test jmpq mov test rol movzbl cmc jmpq mov jmpq jmpq push jmpq cpuid clc stc sub cmc jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jle pushfq jmpq push jmpq cmp sub test test xchg test stc stc cmp jmpq mov jmpq inc stc cmp cmp neg stc clc sub bt add cmp js bt sub jbe mov jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq jmpq jmpq pushfq jmpq sub inc mov cmp test add jmpq jmpq push jmpq cmc cmp jmpq push jmpq jns popq jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq popq jmpq jmpq cmc mov test mov shld mov stc cmp jmpq jmpq push jmpq popq jmpq jmpq jmpq jmpq jmpq push jp push jmpq or neg bts mov shr jmpq jmpq push jmpq jmpq push jmpq jmpq mov jmpq jmpq jmpq push jmpq push jae push jmpq push jmpq je stc cmp jmpq 