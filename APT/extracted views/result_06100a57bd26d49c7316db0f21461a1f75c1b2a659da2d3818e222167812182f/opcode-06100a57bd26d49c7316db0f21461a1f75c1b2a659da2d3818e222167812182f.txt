xor add add add add add add add xor add add add add push add add add add xor mov add adc pop jmp and inc add or scas mov add add and std push adc scas add add add add push adc and push add add incb adc add push and or pop adc add add add push in adc and add add add sub add or add add adc sbb adc adc push and adc pop and adc adc jae add or or or or sbb add or add adc jb add jo or (bad) adc cmp lds adc add adc add or add add add add add jo sub push sub adc add enter add add add add jo and pop and mov incb push incb adc or or and add add jo pop (bad) or add add into add jo add shll push add mov inc adc sub add add add add adc and add add add inc sub add or pop and push pop es or add adc add pop and test incb adc or ret test mulb cmc pop add or in sub adc adc and add add incb adc or or adc and or add insb adc sub xor add add add add add je add sbb pop add or add adc sldt push add add add or add add add add xor add add add and add xchg daa mov add add add add or add or add adc adc pop sub add or and lcall test cld xchg dec pop rclb adc add add mov jb incb push incb adc adc sub lret dec xchg ret inc adc add add inc sub add or add and inc jg mov add add push add and pop adc and add incb adc adc sub and or pop adc add xchg arpl add adc and push mov mov or push or and or jge add add sub add add add push add push add sub add adc add or add push add adc pop adc sub push sub xor inc add add add adc and arpl add and pop sbb js and or adc add in dec insl jns mov incb adc adc sub add add add sub add add adc and imul add xor push incb adc adc sub pop pop adc adc add ficom adc add push outsl push add or sldt or add add add lods sbb add pop and or jae arpl adc and (bad) call or adc adc and and push incb adc adc sub and adc add sbb out sbb sub adc sub and add add add and add add add inc sub add or or lea add add adc adc and lods sub sahf adc pop and add jae add or or push sbb add or add adc and stc in cmp inc incb adc adc sub dec add add adc add add das jge adc add add add add add sub add push outsl adc add add add add xor add add adc and roll icebp mov pop cmp and (bad) cmp add or add add adc add sub add or add adc or add or sldt or add add pop in and add adc jne pop add add jo push and add add and adc and xor mov or pop sub add add adc adc add add pop adc add add add sbb adc add adc add jns add or add add add or add je add sbb dec or add or add add push pop outsl push add or add adc push adc add or add or add push pop pop adc adc adc adc adc sub pop pop adc add mov add pop adc sub sbb add adc adc add add add add add add xor add add or add add loope add or call jb add jo pop scas or jb or add add std push movsb jnp dec jecxz adc and pushf push pop adc and jg add fwait mov pushf adc sub add add or sub add sub sub add xor add add add add adc jb add jo sub push sub adc add inc add add add adc jae add or add add or or sbb push pop or add pop popa shrb add or add pop pop or pop mov add or sbb add adc add add add adc add xor add or add add add push add add add sbb add jb add jo sbb push add or add or push adc or add add sbb add cmc add add and and add shl outsb rorl and in (bad) incb push incb adc add add add add add push add or add add or add adc add sub add or add cmp add or sub add pop or add xor mov adc add add add adc sub add or add add adc ja adc adc and xchg add add incb adc add push pop pop adc add or adc pop pop adc add ficom adc add pop outsl push add or sldt or add add add add xchg xlat test adc and cmp dec and lds adc pop push adc and or push adc add add adc add add stos add adc add or sub adc add sub add push add adc add add add add incb sub pop add push sub add add and add add add sub add or sub xor pop adc add add adc add add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jnp add add outsl daa add or add add add outsl sub add add jnp add add inc outsl sub add add jnp add add outsl sub add add jnp add add outsl sub add add jnp add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add xor add outsl xor add add jnp add add popf add add aas jae add or add or add add add inc add jo xor add add add mov add pop or or add or add add add outsl cmp add add jnp add add push add jo adc add add jnp add add add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add incb sldt push jae add or add or add add add add or add or add add add sub add outsl sub add add add outsl add or add add add sbb inc add or add add add outsl inc add or add add add jnp inc add or add add add outsl das add or add add add outsl inc add or add add add inc add or add or add add add or or add add add inc add or adc or push jb add jo push pop jb add jo push sbb add jo push sbb add jo push sbb add jo push sbb add jo push sbb pushf add jo push sbb jo push push jb add jo push pop or add jo push pop or add jo push pop or add jo push pop or bound add push pop or jo push pop push jb add jo push pop (bad) sbb add push pop adc add jo push pop adc add jo push outsl inc add or add add add cmp add and xor add outsl xor add add jnp add add es jo xor add add add sbb adc add or add or add add add outsl dec add or add add add outsl cmp add add jnp add add outsl cmp add add jnp add add incb adc add jae add or add or add add add incb add cmp add outsl dec add or add add add incb add add jae add or add or add add add outsl daa add or add add add outsl dec add or add add add outsl sub add add jnp add add dec add or add or add add add outsl dec add or add add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl dec add or add add add inc add or add or add add add jl inc add add add or add or add add add cmp jo xor add add add mov add pop adc or add or add add add outsl cmp add add jnp add add dec add jo adc add add jnp add add outsl dec add or add add add outsl cmp add add jnp add add outsl daa add or add add add outsl dec add or add add add outsl sub add add jnp add add push add or add or add add add outsl dec add or add add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl dec add or add add add push add or add or add add add dec and add add add or add or add add add push add jo xor add add add push pop pop jae add or add or add add add outsl cmp add add jnp add add pusha add jo adc add add jnp add add outsl dec add or add add add outsl cmp add add jnp add add incb or cmp add outsl dec add or add add add outsl sub add add jnp add add push add or add or add add add push add or add or add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add push add or add or add add add mov rolb add jae add or add or add add add jb add xor add add add fs sbb add or add or add add add outsl cmp add add jnp add add (bad) add jo adc add add jnp add add inc outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl sub add add jnp add add push add or add or add add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add xor add outsl xor add add jnp add add xor add and add add add or add or add add add mov jo xor add add add xchg add add sbb add or add or add add add outsl cmp add add jnp add add sahf add jo adc add add jnp add add inc outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add incb adc add jae add or add or add add add outsl sub add add jnp add add push add or add or add add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add push add or add or add add add dec and add add add or add or add add add stos add jo xor add add add mov add pop adc add or add or add add add outsl cmp add add jnp add add mov adc add add jnp add add add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add pop add or add or add add add sub add outsl sub add add add outsl add or add add add cmp inc add or add add add outsl inc add or add add add incb add outsl inc add or add add add outsl das add or add add add outsl inc add or add add add pop add or add or add add add or or add add add inc add or lea add add push push jb add jo push pop jb add jo push sbb add sbb add sbb add sbb add sbb scas add sbb jo push outsl inc add or add add add and add and add jae add or add or add add add bound add xor add add add xchg add add or add or add or add add add outsl dec add or add add add outsl cmp add add jnp add add outsl cmp add add jnp add add incb or add jae add or add or add add add outsl daa add or add add add outsl sub add add jnp add add adc add or add add add outsl sub add add jnp add add outsl sub add add jnp add add pop add or add or add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add pop add or add or add add add pop and add jae add or add or add add add jbe add xor add add add xchg add add es add or add or add add add outsl cmp add add jnp add add sahf add jo adc add add jnp add add add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl daa add or add add add outsl sub add add jnp add add outsl sub add add jnp add add outsl sub add add jnp add add outsl sub add add jnp add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add outsl xor add add jnp add add pop add or add or add add add xor mov add jae add or add or add add add mov add xor add add add cwtl add add sbb add or add or add add add or add or add add add mov adc add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add outsl cmp add add jnp add add pop add or add or add add add outsl pop add or add add add sub add outsl sub add add add outsl add or add add add outsl das add or add add add pusha add or add or add add add pusha add add xchg add add add or add or add add add sub add outsl popa add or add add add scas push add xor add add add outsl bound add add jnp add add push sbb add or add or add add add or add or add add add ret jo adc add add jnp add add outsl arpl add add jnp add add outsl add or add add add outsl cmp add add jnp add add outsl add or add add add incb adc add jae add or add or add add add data16 or add or add add add sub add outsl sub add add add outsl add or add add add fadds add outsl inc add or add add add outsl inc add or add add add cli add add add or add add add outsl das add or add add add outsl inc add or add add add add or add or add add add or or add add add inc add or dec lea add add push push jb push add push pop jb pop add push sbb pop add push sbb pop add push sbb or jo push sbb or jo push sbb jo add push sbb jo push push jb or jo push pop or or jo push pop or or jo push pop or pop add push pop or (bad) or jo push pop or jo push pop push jb or jo push pop (bad) or add push pop adc or jo push pop adc or jo push pop adc or jo push pop adc pop add push pop adc inc or jo push pop adc jo push pop push jb or jo push pop pop jb or jo push pop sbb or jo push pop sbb or jo push pop sbb or jo push pop sbb pop add push pop sbb fimull add push pop sbb jo push pop push jb or jo push pop pop jb or jo push pop and or jo push pop and or jo push pop and or jo push pop and or jo push pop and or jo push pop and jo push pop es or jo push pop daa jb or jo push pop sub or pop sub or pop sub pop add push pop sub or jo push pop sub test add push pop sub jo push pop jb,pn pop add push pop das jb or pop xor or jo push pop xor or jo push pop xor or pop xor push add push pop xor rorb jo push pop xor jo push pop ss or jo push pop aaa jb push add push pop cmp or pop cmp or jo push pop cmp (bad) jo push pop cmp (bad) jo push pop cmp jle add push pop cmp jo push pop jb,pt or jo push pop aas jb or jo push pop inc jb or jo push pop inc jb or jo push pop inc jb (bad) jo push pop inc jb push add push pop inc jb (bad) jo push pop inc jb or jo push pop inc jb or jo push pop inc jb adc jo push pop dec jb (bad) jo push pop dec jb or jo push pop dec jb or jo push pop dec jb push add push pop dec jb or jo push pop dec jb or jo push outsl inc add or add add add mov loope add jae add or add or add add add jo add xor add add add addb add adc add or add or add add add outsl dec add or add add add or add or add add add outsl cmp add add and repnz add add or push add imul add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add sub add add add add push add add jb adc jo xor add incb or add jae add or imul or add sub or add insl add or sub add xor add add adc and rclb scas mov or orl or add incb push incb adc adc sub mov or pop or or adc add xchg jg add add incb adc adc sub cmp add add and add popf sti pop xor adc and xor pop adc pop lods adc and add add or sbb add cmp add adc add add sbb test stc lret loopne add and mov aaa or or and add or or rorl adc or ljmp and sar or add or add adc ffree mov sub and (bad) (bad) (bad) (bad) (bad) out jmp (bad) (bad) (bad) (bad) (bad) (bad) out jg push add or push add push sub add or sldt or add adc pop add pop outsl push add or sldt or add add add push and dec in ret incb adc or lods and repnz lret add or daa call outsl cmp or cmp and add add add inc sub add sub add or or adc sub add or sldt or add adc pop add pop outsl push add or sldt or add add add or sub pop dec jmp inc mov adc add adc and sub adc and stos add pop adc add or pushf pop movsl pop incb adc or in add add add add adc adc add add add add out adc add add xor add add adc add add or jb adc jo and push push es or or push test add add and push push incb adc adc sub pop dec adc das adc add push and pop and sbb and or popa dec add adc sub add adc add xchg add add add adc and push inc sbb or fcmovu jge loopne icebp add test outsb stos or and add inc adc and pushf adc dec movsl lds adc and add adc and sub sahf pop test adc and push xchg xchg jae jg adc adc pop push sub add adc and sub or add adc adc outsl jo add outsl jno add sub add or and add add or add add xor add add add add add ljmp pop cs mov and add add add (bad) inc xlat push adc mov add add incb adc or or and outsl pop add add xor outsl pop int3 mov add inc xlat (bad) jecxz xor add or push add push and fsub aas incb adc or (bad) inc fildl add pop pop xchg adc and sbb and dec rorb xor sub and add add add inc sub add sub add or or adc sub add or sldt or add adc or adc outsl push add or sldt or add add add or sahf mov mov incb adc or mov add add add scas add mov add adc add or add adc and stc repnz or fmuls add or push sti xlat int push and or and mov push incb adc adc sub mov pop mov and add add add inc pop or in test push lds add add jo add outsl jno add sub add or add stos stos push adc add push adc and or incb push incb adc adc sub and int3 add pop adc add xchg popf add adc pop and or std adc and das clc rclb adc and or inc incb push incb adc adc sub pop push mov adc adc pop push sub add adc and push fstpt add add or or jo add outsl jno add sub add or add cltd add add or add push sub adc add lds add push add adc jb adc jo and pop and add add add incb adc or or and add adc jo pop and jl arpl add add xchg inc push test popa mov adc add sub add incb adc or and add add or add add add adc jb add adc adc adc or add adc add adc sub adc and or pop adc add pop and add incb adc or in stos add add or das mov and or add mov xor daa add or add add xor add add add add adc and xor add jmp add or push and xor or and mov add jb adc jo and cld add or das push xchg mov add add add adc sub add or add add adc add adc add sub add or and movsb test orb add sub adc adc and shr cmp jmp inc adc and (bad) (bad) (bad) (bad) (bad) out jmp (bad) (bad) (bad) (bad) (bad) (bad) out jg push add or pop sub add and xor inc adc and fdiv cmp or or add add add add adc add or adc add sub add or add adc or adc outsl push add or sldt or add add and add adc and mov add or or and add incb adc add or data16 add or sub adc add add add xlat add adc add push add je add sub xor add add adc and pop imul mov int cmp and inc call incb push incb adc or and add fidivr and add add add inc pop or add adc add sub add or add adc jo add jle add add push pop sbb pop sub adc and adc pop add pop pop sbb add or or call add or rclb pushf add or cld adc and add adc sub adc add mov add adc and pop test jb adc jo and add add add add sub add add add push and and add pop sub add mov lldt pop add pop and and add add or or add adc sub add mov add adc and add or or cwtl fistl bound add add adc sub add add adc adc sub add or pop add or and lldt or add adc add or add sbb add add adc jo and add and or push add xor xor ret sar shrb add or adc sub add or pop add or add and out jge jle incb adc adc sub add or cmp and add incb adc adc sub in mov add stos add add add rcll adc int and adc and cltd leave aas sub add sub add or push and out movsb cmp mov add adc and sarb add or add test add mov or add mov add incb adc adc sub add add cmp adc sub add or or or adc adc sub add or add adc jo or xor add add adc and sti (bad) decl pop icebp or sbb lahf jo add out cmp cmp add add add add mov mov incb adc or sbb and add add add jmp add add add add push add or add and add adc and std sub inc flds adc jb adc jo or lock repz mov adc and insb push cs inc inc adc and add add add inc sub add or or lock xchg cld inc dec mov add or or add or add or pop add or sub xor add add sbb add add lret add add pop (bad) or mov and (bad) decl jo add jbe add add push and mov lret pop adc and push adc lods mov and add sbbb adc and dec ret mov or or jmp je mov add or or add or add or pop add or sub adc add mov add sbb and sbb or and stos xor or inc test sbb inc or and or incb push incb adc adc sub mov movsl mov or jbe add add sbb and int3 dec add add xor add and mov (bad) adc adc and imul push (bad) incb push incb adc adc sub (bad) (bad) (bad) (bad) (bad) out jmp (bad) (bad) (bad) (bad) (bad) (bad) out jg push add or pop add test adc mov pop or or ror or adc sub adc add mov add adc and sub add and ljmp and add or or add or inc pop xor or test add or add add add les push incb adc adc sub and adc and mov add adc and add adc sub adc and into or pop adc add pop and add incb adc adc sub icebp or or adc jo or adc jo or add add xor add add add add adc and mov cmp and add add add sub add or add add or and mov and pop add incb push incb adc adc sub pop or sub add pop pop or add adc or add or pop add or add add pop mov fcmovnu adc scas adc jo push and je and pop adc and sarb pop movb add incb adc adc sub add add add inc and add add add inc sub add adc adc adc add dec push inc add or or (bad) jmp add add incb adc adc sub pop pop adc add adc pop adc adc sub add sub add add add adc or add or pop add or add add add mov cmp add or inc push lcall add adc cmp call or cmp dec add adc sub add add add add add dec add adc add add scas add add adc add push add je add sub xor or add and add add out jb int3 mov (bad) inc or and das pushf flds push incb adc adc sub add add inc popl add add add and sub add or or adc sub add or pop add or add adc or add or pop add or add add add lds xlat loope add add add xchg call push rclb adc pop push cmp inc incb push incb adc adc sub add add add add jp add sub add or add add adc adc push and add sub add sahf adc adc jae add or pop adc adc push sbb add or add jb adc jo or stos lcall stc (bad) call or push adc pop rcll jb adc jo or sub adc add add add dec add adc add adc add jecxz add and add add out and mov push or mov and or or and or pop or je add add push adc sub lock adc dec add (bad) in jb lods jge (bad) adc add or add lea add add movups push and iret inc add mov add sahf adc adc jae add or pop adc adc push sbb add or add adc xor xor ja add incb adc adc sub add adc sub adc and xchg or pop adc add or xchg or add add push adc sub popa xor adc pop and or ljmp add or sub or add mov add adc jb adc jo and jmp test popl or pop dec imulb or add add ljmp adc cmp jb loop adc and mov sbb adc adc sub add or push sbb adc adc push and in adc sahf adc pop and add sahf adc adc jae add or or or or sbb add or add mov lods add adc and ret push addr16 movsb add or mov or add in add add add adc and cmp fs push add jb adc jo pop and add and pop xchg mov adc add add fdivl incb push incb adc adc sub add add add inc sub add or add and mov add add popf jns add pop pop xchg adc jb adc jo or nop dec pop stos (bad) dec pop mov and rcll jne push pop mov add push adc sub inc subl lcall add add add or adc add loop xchg adc or sbb add add incb adc adc sub pop pop adc sub add or pop adc add adc or push add or pop add or add add add add add adc add add adc add add add add outsl jnp add adc lea add add add or sub adc add dec add add add add pop push add mov pop insb or adc and add or add add jge rorl adc add push and pop add pop pop adc or push or mov add xor add add and pop or and daa daa add and cmp add or and jl add xor add add sbb push and and repz ss add or adc jo or fisubr sbb (bad) in adc sub add adc add testl add add scas clc sbb or adc mov cmpsb pop jge or push fisubl add add cltd imul adc dec add add add add add outsb add or add add adc lea add add push adc push and pop add dec mov push adc or push adc outsl add add xchg sub add add in xchg cmp (bad) adc adc sub xor pop and mov and or inc mov sbb adc and mov adc and add lret int3 inc adc adc and cmpsb inc jecxz leave mov add movups sub add add add inc and add add add inc sub add adc or or and adc cwtl popa faddl add xor add add add add adc and and and add pop or adc aas and mov or popa cltd imul rol cmp add incb adc or sub add add add push add or add add or add fadd sub add add pop adc ljmp add xor add ja addr16 add push and mov sbb or adc and or add add adc adc and mov push incb adc or sbb and repz cmp sub add or or jbe add add push insl add adc sub add je add sub sub add add sub add add add push sub add add add xor add add add add adc and push add sub add and or push and push add add or or dec sub sub add and pop and dec sub add or or pop sbb and or dec in es and push push loope xor adc sbbb sub add add add add sbbb sub add or or add push and in call pop and add mov adc sub and cltd leave aas sub add sub add or or or adc add sub add or add or rcrl outsl jmp incb adc adc sub mov sbb and pusha add adc sub adc add movsl add add add adc and sbb and jp mov and mov mov or add xlat add incb adc adc sub and loop add add add adc adc and add add incb adc adc sub and adc add lock std jnp fs add pop and jne add or lds add or push mov sub adc and lcall adc and mov adc adc sub add xor add add sub add add cmp add or rcrl add and and jg add mov adc add add add add int int3 int3 int3 int3 add push add or add add adc add sub add or pop xor add add push and pop and add add or pop xchg mov shrb lods add or mov addl add xor add add adc jb adc jo pop inc or out inc dec push pushf sub add add add or or incb push incb adc adc sub add add add fwait sub mov add add add and add add add inc sub add or add and add stos xor pop and das fcomps or imul (bad) repnz sub add adc add scas add add add add lods xchg in mov push and dec push incb push incb adc adc sub add add add add jp add sub add or add add push sub or push add add add add add or add or add adc add sub add or add and cmpsb insb flds add or or push add mov xor add sbb add add push and aaa sub mov jb adc jo or ja or cmp fild adc sub add xor add add add and cmp inc in cmpb push and aas in jo cmp add incb adc or and and add add add and add add add inc sub add or sub add add popa push push arpl and add adcb add add add add outsb add or add add or add scas mov add or or or add or adc adc sub adc or les add addl and add add mov add incb push incb adc or or adc dec cli or pop adc and sbb lret xlat adc adc sub add in lldt push add push and xlat adc incb adc or call pop xor xor jp sub or test pop add or push or dec dec outsl cmp adc sub add xor add add add add adc and add or or push and add pop or push and add incb adc pop xor pop and add incb adc add and or and mov xchg push cmp or loope or add add mov aam adc in mov loopne mov add or add add add add inc and add add add sub add adc adc adc adc add sub add or add adc pop add pop outsl push add or pop add or add add add adc mov or cmp pop pop add or push adc sub add cmp or adc pop push incb adc and sbb adc jo or add adc add add adc add add xor add add das add adc and add or and add add incb adc adc sub addb pop or and add or movnti or ficom add and add rclb add call push pop dec adc and cli (bad) call or repz or adc and jg jl addb add je add sub add je add add add add xor add add add add adc jle add add sub add sub adc jo or add sub xchg add jae add or push orb add jle add add sub pop sub adc add or add xor add add add add sub push sub and add sub add adc add or add xor add add add add sub push sub push add mov add sub inc add push sub or add adcb add add mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add (bad) add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp xchg mov (bad) testb mov iret pop mov sub enter enter aam pop mov loope or out mov mov xor iret (bad) pop xor add xchg mov sub inc xor aaa lock sub pop cmp (bad) sbb pop cmc fmuls and dec movsl mov push dec loop adc xor jbe push inc jp or jge add add add add add add add add add add add add add add add add add movsl add add add test add rolb add xchg add add add cmp add add add add sbb add push add add add dec add add add add add add add add pop add sub add add jo dec add jb jno dec add dec add push add data16 imul add add add xor jbe dec add outsl add jno inc add ja jp push add imul push dec add push add xor inc add add jb imul inc add insl add dec add dec add inc add inc add add sub add dec add jp dec add jbe xor xor dec add arpl jo insl add xor xor dec add cmc pop add sub add xor inc add push add arpl dec add add add inc add insb add push add xor pushf jp add cmp inc add add jne inc add jns push add add inc add add jo inc add dec add add sub add outsl add dec add add add imul jp dec add dec add add ljmp push add add jbe push add add popa add jns dec add insl add jne xor inc add arpl xchg (bad) add sub inc add add cmp jo push add jb push add add add inc add xor push add cmp add sub inc add add add js push add add jno pop add add inc add dec add fist add sub jno jne push add inc add add xor add push add dec add jae outsb add dec add add dec add xor push add inc add pop add dec add dec add push add sub dec add outsl add jp add jno pop add popa add add jbe jp insl add js xor xor add dec add inc add inc add push add pop add cmp imul add inc add bound outsb add push jnp add sub dec add dec add jbe inc add dec add add add push add insb add pop add lods add sub push add pop add push add xor outsl add imul push add add insl add data16 lret add sub inc add jb insl add xor add inc add jb dec add add cmp push add xor add push add add cmp add push add jo jno push add add push add push add push add xor add push add dec add pop add inc add outsb add add dec add xor inc add push add dec add mov push add add jb ja push add add push add xor aaa add dec add add add sub jo push add bound inc add inc add dec add add add add jno inc add dec add or add sub jae dec add inc add inc add arpl xor inc add pop add add xor add mov add sub inc add jbe dec add push add push add outsl add js pop add arpl pop add add push add add sub xor dec add push add add dec add dec add jbe add push add jne inc add dec add imul cmp data16 pop add add dec add push add jae popa add inc add dec roll push insl add jb popa add add cmc fild add jo dec add add add add imul add popa add add push add add add add sub cmp xor cmp inc add inc add push add push add add jo xor jbe arpl inc add stos add add jne jns push add pop add add add inc add inc add add inc add push add push and add js jbe cmp data16 add add jb add arpl jns push add add inc add xor jae clc add and mov push inc dec or pop dec dec dec inc inc dec das jae insl add xor or imul add pop cmp push xor or adc pop dec and push pop inc sub xor cmp xor xor cmp je cmp daa inc dec jnp cmp inc jno push sub and or sub aas sub add and xor pop sub sub sub push aam ror (bad) rcl ret std clc repz pushf scas loope call bnd in mov mov aam fnstcw (bad) mov (bad) (bad) (bad) int3 lods lods xchg int fcmovnb mov cmpsb mov lods mov in test fwait sahf xchg cmc mov mov fwait xchg mov test mov test mov mov mov test arpl inc inc push es pop pop dec inc fs dec pop inc pop push inc pop pop pop cmp dec arpl pop jb arpl add dec fs jge jnp arpl jo jo insl inc push jae push js adc or or push sbb pop adc cmp sbb adc sbb xor adc daa or cmp das and or sbb add sbb aad ret out leave fcomp fsubp ret scas jecxz rol (bad) cmc fcom leave iret iret fxch mov shl loop hlt cld sti repz call loopne (bad) out out loope xlat repnz out icebp in popl xchg xchg mov (bad) sarl lahf xchg popf mov mov mov stos lods stos mov xchg cmpsl andb xchg mov scas mov scas test lcall inc push jbe pop inc sub dec dec inc push pop je pop push push inc cmp dec push cmp arpl push imul outsl addr16 jne push jl js arpl pop outsl imul pop adc add sbb and push add pop sbb sbb or xor adc add and dec add and cmp xor xor sub sub int3 mov fmulp fcompp scas sti fadd xlat rcl mov fcmovnu fmul mov hlt in mul into jecxz fdivr out out mov rorb mov iret fcmovb lods scas cmpsl loopne mov aad (bad) mov add cltd pushf xchg addl cwtl mov scas mov xchg mov loop stos mov mov (bad) xchg test mov mov dec and dec push daa push inc inc dec dec inc das jg push inc push inc pop inc dec cmp push pop push dec imul push inc push inc insb inc dec inc inc pop insb pop pop dec inc cs push inc insl jp push pop aaa jnp push dec dec dec pop dec dec outsl fs add arpl inc pop dec jns bound jl adc js jns je sbb insl insb add gs push inc aas or sbb adc sbb sbb ds sbb and ss xor cmp sbb aas cmp pop sbb sub (bad) ror lret shll fld (bad) mov rcl ret ror (bad) leave ror stc add repz repz loope xlat hlt out loope cli (bad) stc in repnz ljmp xchg adcl popl sbbl lea mov xchg mov mov mov mov test ficomp inc push pop pop pop inc dec pop pop dec inc xor push ja dec dec push pop dec dec pop dec add ja ja fs gs pushw jge push fs jle dec outsb bound push dec or pop add adc sbb xor add adc pop adc or adc rdpmc and push xor sub add and and cmp xor aaa daa sub pop das cmp add iret (bad) (bad) (bad) rol lret test iret fcomip call xlat xlat mov fprem1 xlat (bad) (bad) (bad) sarl repz repnz cli ljmp sti repnz leave out std jmp xchg lods xchg test fwait xchg lahf xchg xchg lcall movsl subb mov int nop rolb movsb mov mov mov push push inc and push pop dec pop sub jl ja inc jne pop push jns push pop insb push dec push push jne inc jnp pusha push or jp bound jbe data16 pop pusha push jp js push add add push or and add xor sbb dec jnp cmp and xor es and push adc or push pop add call jmp cltd cwtl cwtl stos in ljmp jecxz xchg jecxz (bad) sbb fdivl fadd aam mov int movsl lods xchg sar in int3 hlt lock test xchg mov (bad) iret idivl iret into call hlt (bad) xchg mov mov mov mov cmpsl popa and dec inc inc inc inc dec inc pop arpl dec push inc popa push push inc push pop pop dec cmp push pop pop gs insl jo fs insl push or pusha outsb ja jg jp pop jne jl outsl pop jb jae add or or or or add add adc adc add push or push push sbb adc inc add and and and cmp and and xor or sub sub xor pop in ror ret ror (bad) fucomp lret loope fcmovbe rol mov rol call iret lret loopne mul test call hlt stc mov cmc in (bad) sti loope sti enter cmc (bad) push lods test mov xchg sbbb cltd cltd clc scas fwait xchg cld test mov cmpsb mov mov xchg rorl fimull push pusha push push inc pop es dec pop jne dec inc dec pop pop xor push inc arpl push pop dec cmp inc dec pop xor xor inc dec pop push cmp cmp push ja push pusha fs outsb dec outsb jb jp adc add cmp sbb or pop push and sbb add ds sub cs jg push nopl jo push sbb sbb add sbb imul or (bad) xlat (bad) mov lods clc call mov cli jmp repz sti loope mov (bad) lret rcr mov mov sarb leave lret movsb movsl mov ret lods lods test mov mov mov addl xchg mov fwait xchg mov test xchg cmpsl mov mov mov test dec push inc jl dec inc dec sub dec jae inc dec pop xor inc push push push pop dec pop pop pop pop push add ja inc jo data16 pop insl popa jnp adc jo pusha fs jbe sbb fs and or nopl ds adc add and sbb adc sbb and and and xor sub and and add xor insl mov (bad) leave (bad) fcmove stos in leave (bad) ret xlat mov fcom rcr mov (bad) out repz loop test (bad) sti std out out leave cld out out cld hlt mov lock cld pushf cli sti jmp stos xchg xchg mov mov pushf popf mov adcb lcall mov stos mov xchg test mov cmpsb mov mov lea and inc push ja inc dec pop dec inc pop pop xor push inc push pop dec push jae cmp push dec insl add jo push bound arpl jp jns jne inc jo jnp jp sbb push pop push add pop and sub push outsl ds inc inc dec jbe adc adc sbb or cmp daa sub sub and ds xor das xor aam out jecxz iret ret test iret fcomip ljmp jmp mov lds rcr mov xchg in iret jecxz sti loop jmp xchg ret lock aam lock call xchg xchg call scas popl cltd nop mov mov mov lds cmpsb loop mov cmpsl mov mov mov pop inc inc and dec inc inc dec dec jg pop dec das jl push push xor jg jg push aas push fs push jle jge data16 ja aas inc jbe pusha jp push bound js insb or or fs or sbb and inc inc inc je xor dec dec dec jnp xor dec je inc add sbb jbe jl or sub daa cmp and cmp pop sbb cmp repz lret iret fldcw xlat shl (bad) (bad) aad into fmulp into mov loop test loop std jmp jmp jmp sar std loopne icebp repnz (bad) leave clc out clc sti icebp loopne adcl scas (bad) fwait adcl cli pushf cltd mov scas les cmpsl stos stos test mov mov mov xchg je addr16 inc push push inc dec insb pop dec inc pop outsl pop push inc xor bound or cmp gs push xor add ja outsl imul inc jbe jne pusha dec inc jle jb je jae pop xor and cmp cmp push push cmp xor dec jb and jbe pop pop adc adc jle cs and sbb daa cmp cmp push add xor adc cmp and pop or mov aad jecxz (bad) clc fcomp mov (bad) rcr sar aad out fld lret ret leave fcmovu mov mov mov ret ficom scas test mov movsb test lods test scas mov xchg lahf adcl lret lret rolb (bad) mov cltd stos mov mov mov mov stos inc push push and inc inc pop dec sub pop pop inc inc pop jno push push push pop dec push pop push cmp pop dec pop inc jo pusha pusha push js inc dec jge jne jge jl jnp sbb push or sub pop or xor push sbb adc add sbb jge sbb daa xor and cs and adc ds sbb out mov xchg xchg sahf test fwait cwtl mov rcr (bad) mov out mov mov fidivl (bad) (bad) in call lock aam jmp int3 cltd xchg xchg xchg test addl stc mov xchg mov lods mov xchg mov loop mov cmpsl mov pushf mov mov lods mov gs push inc inc dec sub inc dec inc inc pop pop pop push pop jne push dec pop dec pop jb push bound jbe addr16 jnp inc dec arpl jne jae js push push push push ja add adc add or pop or push sub sbb sbb aaa or aas adc inc or and sub adc cmp cmp adc cmp xor xor mov lret rcr ljmp jecxz rol fcomps neg aam mov vpsrad in cli stc mov in out (bad) loope cmc repnz fldln2 out cli push repz mov mov (bad) xchg movsl lcall stos movsl (bad) lcall lcall (bad) mov mov mov mov stos ficompl dec dec inc dec push dec dec inc dec dec pop inc inc inc das jae pop pop push push inc pop push push pop or inc dec je outsl sub insl push bound jge pop jae jbe popa pop js jl sbb jp adc cmp or pop xor sbb adc sbb xor sbb push adc pop push sub inc or aaa and sub and and push and xor repz mov clc (bad) fcomp lods dec rcl sti jecxz hlt (bad) in out mov mov mov leave rcr mov mov mov ror movsb mov fwait int ffreep rcl xlat jecxz orb orb mov stos mov mov test nop xchg (bad) mov cmpsl mov mov xlat pushf xchg xchg fistl outsl jge adc es jp sbb outsl add xor push inc jne pop dec push pop js insb fs bound inc pop dec inc pop or push ds and push push dec daa and sbb push inc das sub das or add push add das adc insl or add aaa or push add sbb push push sub or inc es aaa sbb das sub cmp das and sub sbb daa xor xor sub adc repz int shl lret int3 fcmovu (bad) scas jecxz rol rol (bad) mov in mov mov (bad) (bad) fnstenv clc in cld sti jecxz sti out xchg (bad) cwtl fcmovbe les mov mov scas mov fnop (bad) icebp mov idivl mov lods xchg test int stos movsb mov mov mov jno imul insl imul je jno or push cmp cmp add jb js outsl imul adc je jge push jb jnp xor xor or sbb adc sbb sbb sbb push jl sbb pop add sub or das das sub cmp xor and adc sub mov repnz (bad) (bad) lods (bad) (bad) out out rol not fst into mov ret out in mul jmp (bad) icebp stc out mov call loop cli out xchg (bad) out leave stc out out lock addl mov repz addl scas mov subb scas lahf mov rcrb mov test dec dec inc inc push dec inc inc sub jno inc push pop xor inc push push cmp dec dec dec dec add add arpl insl imul push sub sub gs or xor je or or js insb aas pop inc pop xor push inc pop pop push cmp dec push pop adc pop push sbb jnp aas and or or sbb push or and sbb add push or sbb xor or push jnp jne sub and cmp sbb cmp sub das add cmp iret into leave mov int in (bad) fmulp leave fstp (bad) (bad) jecxz fcom xlat into mov repz aam xlat mov ret mov repz lock push ljmp cmpsl mov cmpsb mov in test popf nop lcall cltd xchg cltd mov lds int3 mov mov mov mov lods mov xchg and jp adc adc js arpl pop sbb jl inc bound dec pop push jo inc jge,pt add pop xor xor dec push dec push cmp aaa adc addr16 jl jae outsb dec jae js jnp adc cs das and inc dec dec jae adc cmp add adc bndldx and sub adc adc push add or gs movhps add xchg movsl loop negl icebp lock addl mov jmp sar iret in (bad) (bad) loop ljmp xchg (bad) icebp cmc dec stc out in (bad) (bad) (bad) stos lea popf mov sbbb xchg xchg mov mov lds mov mov mov mov popf mov mov fidivr dec push insl inc push insl inc pop inc sub jno inc pop jge inc jge dec push cmp add pop inc imul emms je dec inc jge jno push jg pop jb jno xor add insb and xor inc jae add push adc adc jg push inc push or sbb jno push sbb jg bound pop sbb addr16 or outsl outsl xchg mov xchg xchg test call fcmovbe in ret (bad) mov aad rol fidivr out enter jmp rorb repnz clc lock loopne out stc lock lea (bad) fwait lcall lock pushf sbbl xchg xchg test cmpsb stos cmpsb cmpsl mov xchg cmpsb mov mov lcall mov push inc es js pop pop pop inc pop dec xor inc inc inc pop inc pop cmp jp jnp arpl push bound pusha insl jge pop insl jle js arpl jne jle jg outsb inc dec jl insb pop push adc sub push sub adc sbb cmp adc and push push push jge push xor add and xor cmp daa dec mov aas and es sub add cmp sub into rol movsb repz lret (bad) stos (bad) faddp faddp aad mul test jmp fsub (bad) lock repnz loop cli mov stc in loop aam rcll cld jecxz out clc ljmp mov popl xchg xchg repz xchg xchg mov (bad) mov mov nop mov test mov mov mov mov inc push pop push push and dec dec dec sub dec inc inc xor dec push dec pop jbe jae add add jle jle outsl imul push pop je jb pop push jno push bound adc adc insb or sbb cmp and adc push js pop mov or ss cmp inc add and sbb sub aaa daa or aaa cmp sbb xor shlb lock stos jmp (bad) fld xlat rol fcmovb (bad) lret aad fucomi stc repnz jmp mov out clc ror sti in sti icebp loope repz cli idiv std repz clc test xchg mov icebp mov xorb xchg xchg xchg (bad) mov stos mov scas stos mov mov cmpsl aam movsl mov sahf mov mov inc pop push and es adc jae jno xor insb add or cmp insb pusha xor add aaa xor inc inc push cmp dec and adc push dec sub sbb sbb bound or add cmp sbb sub adc sbb xor inc bndstx or adc add push addr16 pop xor add aaa ds cs xor lret in jmp lods repnz xchg mov out mov icebp in (bad) lret jmp in ret fimull mov clc stc loope cltd ret rol scas shl mov in test mov rol mov cmc mov sti mov (bad) mov les xchg cli cli int iret (bad) sahf (bad) loop aad xchg fadds fiadd jnp pop daa jp sub jb pop xor xor imul jne addr16 dec imul push inc inc push pop push push sbb sbb push push unpcklps push adc adc pop sbb sbb add adc jns sub dec jb push sbb ja inc push adc add push add sbb add jmp movsl repnz negl icebp popf (bad) mov jecxz clc ret fcmovne rcr fcmove leave cli (bad) in loop loopne shr sti in out clc ret cmc repnz (bad) hlt in std in xlat (bad) call mov scas mov movsb scas pushf mov sbbl xchg popf mov movsl cmpsb lods (bad) stos cmpsb scas scas int3 stos mov mov mov mov mov inc dec dec inc inc inc dec sub inc dec dec dec pop push jo dec pop push gs pop dec pop cmp pop jbe ja push fs insl push push jno jno arpl sbb push jne pusha sub push pop add push sbb push add or sbb and adc sbb jg xor xor sub cs sub dec cmp aas ss xor ss xor jmp ret aad ljmp aad (bad) sti aad rcr (bad) mov shl ret out ret icebp in out ret in jecxz jecxz jecxz (bad) cld lock fucomp push call lea xchg lea mov cmc mov mov rolb (bad) mov into mov cltd mov mov fldl dec inc inc es dec pop jne dec inc dec inc push push xor inc imul pop ds popa insl ja add fs jge gs insl arpl jns adc jb je jnp inc jno jl adc cs push or and add add and adc push jp adc adc and sub inc add or cmp daa xor xor ds vshufps call fnop rcl fst (bad) mov mov shr call in out std cmc cld std in lret stc idiv (bad) clc popf fucomp test xchg xchg mov popf nop cltd xchg divl xchg xchg call mov stos movsb leave lods scas mov (bad) mov mov stos mov stos jg jb push inc dec daa jg dec jnp inc dec das pop xor push pop pop inc pop cmp pop push pop gs fs jge arpl jno jbe jno push push sbb inc cs push xor push push fs pop pop push xor cmp inc inc jbe xor dec inc jl sub jb inc or sbb dec add adc jl sbb push popa popa push rdpmc and pop adc out cli xchg xchg test loop sahf lcall mov rol out rcl (bad) lret out out jmp iret mov int3 aam mov fxch into mov enter leave fadd lods lods loopne scas jecxz scas mov stos mov ret mov cmpsb leave into cld stos lods incl xchg xchg (bad) xchg xchg lahf movsb mov movsb mov mov and jnp push daa outsb jl sbb add ss cmp arpl or pop aaa xor dec dec dec inc inc inc inc inc inc inc inc inc inc push inc push popa jae jne jns insl jl mov add adc add imul sub add adc sbb sbb cmp aaa xor push adc push adc and sub add pop or sbb push pop adc adc in out loopne repz in stos out out jmp lock loope mov sti loope rolb cmc (bad) cld std clc loop clc cli ljmp loope fucomp push call lea sahf call popf stos cltd xchg lahf xchg popf mov mov mov lods test mov movsb enter test into mov mov stos mov fistpll jge adc outsb sub inc pop pop pop push xor pop inc pop jne push pop cmp jb jbe push push jns inc dec adc jbe jno jge sbb inc push adc push pop add imul outsl and jb sub jbe cmp jge adc and add sub add sbb push add add pop add pop adc xlat out lret lock hlt in loopne in xchg out mov (bad) fcmovne fidivl stc clc clc out jecxz jecxz out mul xchg (bad) fistpl stos loopne mov out cmpsl mov fucomi mov xchg cwtl mov xchg popf stc scas mov hlt stc ret lcall mov mov mov xchg lahf test in fstpl and jns sbb imul inc inc push dec xor jg arpl or xor aas or jp jno jbe jno js ja ja push sub arpl sub push pop imul cmp jns and and inc sbb sbb dec or cs es cmp xor aas ds sub cmp jmp jmp rol fcmovb rcl (bad) mov out in (bad) loop xchg ljmp aad sarl sti out (bad) idiv idiv popf ffreep loopne mov scas scas mov fldlg2 stos mov xchg xchg mov xchg lea mov mov test stos test mov mov movsl mov mov mov push push inc and push sub je push cs inc inc push pop jno pop push cmp jbe push dec pop xor inc push cmp or dec push es adc dec and sbb imul push or sub push push and sahf stos lods movsb mov mov mov scas mov test mov mov mov xchg xchg mov mov jbe push outsb pop jle jp jae adc bound jne ja jb pop pop and inc push inc push pop sub inc dec pop inc xor pop inc push push inc cmp dec dec push pop imul daa and inc xor add and cmp push push sub xor sub xor sub fs add sbb sbb ds or or int3 test idiv lock in int (bad) out loope lock int3 not cmc call (bad) (bad) cld (bad) int3 fadd test vcmpss cltd mov lret (bad) (bad) mov ret (bad) mov stos subl test iret mov cmpsb mov mov mov nop adcb call mov repz cli stos scas mov mov dec inc dec push inc dec pop inc inc inc push pop bound jbe pop jbe jge jle dec jbe inc inc inc imul dec dec sub inc dec dec pop inc js xor inc push pop pop jae cmp push adc or pop sbb or add add cmp xor xor cmp sub and adc adc push addr16 push pop or push add jb adc adc jl or leave out repnz test repz (bad) (bad) (bad) cld clc cli pop in (bad) out stc in fcomip jmp iret ror mov mov scas out (bad) (bad) aad fcom lret ret fcmovnbe out (bad) lods scas mov test cmpsb mov mov mov mov mov test mov addb xchg cld mov insl outsl add jae js outsl inc insb ja gs outsl jae sbb jne jl jno push popa dec dec push push dec inc sub pop jb pop inc pop popa push push pop push jae push pop push dec push push push xor xor pop xor sbb sub xor and or cmp cmp xor add cmp pop aas add or pop pop sub pop sbb and sbb cmc (bad) (bad) repnz repz out loopne cld (bad) icebp cmc (bad) int3 fdivr div cwtl lret (bad) call rcr (bad) shlb ret lret aam repz ret fcmovnu rcr int3 mov int3 fisubr stos (bad) xchg pushf mov stos xchg movsl cmpsb mov mov mov lods addl fwait popf cwtl mov popf adcl cli mov bound imul insl jp jle outsb imul data16 push insl jne outsb outsb js jno dec and push push inc inc pop insl inc inc dec dec inc pop dec push inc pop pop pop aaa push pop pop dec pop push pop and sub adc sub sbb ss cmp pop cmp sub and pop adc add or xor sbb sbb adc add or or mul in in enter in cli in xchg (bad) lock loop ljmp std int3 (bad) icebp xlat (bad) cmpsl jmp (bad) (bad) (bad) scas repz ret fstp rol (bad) (bad) fmulp fmul fisubl movsb mov lods lret mov andb negl mov xchg mov xchg xchg popl (bad) fwait mov fwait mov xchg cwtl cwtl mov popa jno arpl dec insb outsb jle jp je jge jno bound jo outsb push push push inc dec or dec dec outsb inc inc add pop inc pop pop push inc ss dec dec push push pop dec aas add xor sub es sub cmp ds xor and das cmp jo (bad) (bad) or adc sbb add or add pop cmp pop sbb jl sbb ffreep out in ljmp in call icebp xchg (bad) cli bnd (bad) out ret (bad) rol (bad) rol (bad) neg fcmovnb fxch rcr aad xlat lret mov lods movsb mov lods lret mov stos nop mov lods test test mov mov xchg cwtl lahf mov pushf cltd test (bad) mov inc imul fs pop push jo jb jl jns pop outsb outsl outsb je push inc and push inc dec dec inc push push pop push pop inc jne inc inc push pop dec dec pop cmp das and cmp cs das or cmp xor ss adc and xor aaa and adc adc or or sbb sbb adc adc adc adc or (bad) div imul in cld in mov jecxz fsub jecxz lock aam jecxz lock out call rol into (bad) leave fcomip fcmove into into ror (bad) icebp (bad) fst ret ret fnstsw dec mov stos mov mov mov mov mov movsb mov mov test lods mov xchg xchg xchg mov lea test (bad) xchg clc mov cltd xchg outsb dec insb pusha pusha jne or or or ja push adc xor js jb dec and js,pt jp push sub jle popa das jg xor push aaa push cmp dec cmp adc inc or dec or dec outsb dec jp jb adc push pop pop pop pop jl or popa or push gs addr16 imul adc jne ja jns jnp jge jg sub xchg (bad) std (bad) repz loopne std xchg out in cltd repz repz lock mov movsl xchg enter les fdivs iret mov mov mov scas (bad) cmpsl leave stc lret dec loope out out aam movsl xlat jmp cli fldt loope jecxz in out jmp out fadds cmc (bad) (bad) (bad) stc fwait sti nop std mov add imul or jno addr16 jle jge outsb pop push and push and inc sub dec das inc xor adc inc aaa dec cmp pop cmp sub dec xor dec cmp dec xor push sbb pop push pop or pop xor arpl sub imul outsl add jae jne ja jns jnp jge jg sub xchg mov mov (bad) cld (bad) loop notl into cltd lcall leave mov cli cmpsl clc test (bad) scas (bad) mov mov mov mov mov int mov cmpsl ret test leave movsl lret mov sarl stos fnstenv fist mov mov pushf jmp in sub nop cmc fwait notl out mov add push insl or pop or inc adc jo insb sbb jge insb pop inc and je dec daa inc add pusha add push bound jp push or push data16 popa adc push sbb jge imul dec and es sub pop sub jae,pn bound dec xor ss cmp cmp sub sub inc and and dec push dec add push push pop push push cmp pop das pop sub pusha adc cmp push pop outsb add jb je jbe js jp jl jle and in test xchg mov mov mov mov nop jecxz notb lcall enter lret cmpsb cmpsl mov shrl mov mov mov les cmpsb les lret mov sarb fdivrs ficom in iret mov in mov (bad) lock repnz hlt cmpsl notb cld mov mov jae jp push push push or push smsw jbe popa push arpl jo jne jp insb and sub inc es sub push sub and pop xor inc ss cmp pop cmp cmp cs xor dec sub xor and push daa push xor pop xor pop and pop imul data16 ja insb add jo jb je jbe js jp jl jle sub in test xchg mov mov nop into xchg loopne hlt xchg stc cwtl std lcall enter movsl test fildll mov mov mov aad fdivrs ret frstor mov sarb (bad) mov (bad) sarl in out call in (bad) test hlt xchg negb cld (bad) test add and or js push adc push pop or jne imul push and es sub sub dec xor cmp jb sbb imul jo inc pop and xor dec adc cmp push and push es aas pop cmp pop ss pop jae bound fs data16 push insb or sbb dec and js jp jl jle xor out testb mov mov xchg loope loopne negb mov movsb les shrl mov (bad) mov enter rcl les test (bad) mov mov cmpsl (bad) xlat fucomi fcmovu lds loop in out call mov lcall out xchg clc nop cli mov pushf (bad) popf add data16 push pop or data16 push (bad) pcmpeqw jp pushw jbe jnp ja js insl and push and es sub sub cs adc pop xor ss cmp push cmp ds inc push inc xor and dec das dec and cmp inc ds xor pop sub pop cmp pusha add fs push insb add jo popa sbb sbb jl jle sub in test mov mov mov xchg lock xchg fwait stos lcall (bad) mov lret stos into lods aad lret mov mov lods idivb icebp mov lods les lret mov stos rcl shl aam shll fidiv in out call in in fnop icebp in hlt lcall cld pushf (bad) fwait add add jge bound or cmp adc jp jnp push sbb ja js pop sub data16 es sub inc xor xor ss cmp pop cmp ds inc das inc and and push sub push xor xor cmp pop ds das pop add bound push add add jb je jbe js jp jl jle and ljmp xchg clc mov mov nop jecxz out loopne out (bad) lcall aad ret cmpsb lret test movsl ljmp mov mov mov mov leave mov mov mov mov xchg lret movsb into mov aam (bad) mov aad fidivr in rcll out fwait lock xor testb xchg decb jl insb or or push pop adc jne popa push pusha sbb imul and inc es sub pop sub cs xor outsl xor ss cmp pop cmp ds inc xor inc push inc xor dec cmp and push add pop sub pop xor pusha cmp or jno insb or jo jb je jbe js jp jl jle sub out test clc mov mov nop notb cli cwtl ljmp mov (bad) cmpsb (bad) test stos into lods repnz (bad) mov mov mov mov cltd cmpl rolb enter int3 mov sarb fcomp shrl loopne loop in stc xchg call xchg test cwtl repnz hlt cltd not clc (bad) cli popf cld (bad) rolb push xor gs push das adc jge xor sbb sbb push aas and and and es sub sub sub cs xor xor xor ss cmp das dec cmp ds inc and arpl xor dec imul inc xor push ja jbe cmp pusha adc xor and dec push insb pop outsb adc jb je jbe js jp jl jle andb cli mov mov nop mov xchg mov loop scas pushf loopne mov movsb test (bad) lods lea xchg mov mov out ret mov in cwtl int3 test pushf sarb (bad) mov mov lods fdivl loop in out call mov mov icebp stc (bad) hlt mov xbegin std std fild add xor add or or or adc adc adc sbb pop sub push pop and and sub pop cs xor inc xor ss cmp xor push ds inc sub jb inc pop add dec cmp push and push daa pop sbb pop jae punpcklbw bound adc push insb add or jb je jbe js jp jl jle and out testb mov aaa lods sub cltd xchg sub ror xchg inc sub mov stos scas lods mov mov lods mov mov mov mov lret ret rcl (bad) rcl (bad) aam ljmp (bad) (bad) cmc xlat (bad) (bad) fdivrp (bad) iret iret int in jecxz clc loop call in cld (bad) hlt (bad) repz cli not div lock pop add push add add or add adc adc sbb adc or or add daa pop and and aaa pop and sub and xor cmp xor cmp inc inc inc inc pop inc dec imul push pop dec push push push jbe inc pop inc pop pop pop dec sbb arpl imul push insl imul jne push jl jge sub test cmpsl mov scas mov xchg mov lods pushf lahf andl test lods mov mov mov mov mov ret lret enter (bad) fisubl call mov (bad) fcmovu (bad) nop loopne (bad) out in stc call out div std div repnz div repnz sti lock sbb add add or sbb sbb sbb pop sbb sbb sbb and and sub es sub and sub aaa adc xor sub ds xor ss push (bad) inc pop lret int dec push push inc rcl pop pop push pop pop dec fcmovne pop jle jno sti gs fs lock insb outsb imul imul pusha jno jae jns jg faddl xchg or cwtl or sbbl cmp xchg cwtl cltd mov cmp mov add sub lods lods lods mov mov mov mov mov mov int lret enter arpl aam out ror rcl rcl fcmovnu lret cli (bad) rcl fld loopne repnz loop jmp in imul imul hlt repz clc stc icebp (bad) cli clc (bad) in out sbb add push or pop add or add sbb or push adc pop adc push pop pop sbb cs sub xor daa aaa and pop and push xor cmp and xor pop dec push dec dec push inc inc dec dec dec push inc push push pop inc pop push push push pop inc push push pop pop pop inc inc imul outsl jo bound outsb imul jbe jbe jp jnp pop jns mov mov test lcall nop xchg mov mov test lods movsl mov mov mov mov mov (bad) lret mov lret leave int3 fdivr fadd jecxz (bad) (bad) (bad) rcl fcmovnu rcr out jecxz fs call loop in ljmp div stc cli out (bad) cli out jle add add or es aad or add push xor sbb pop adc ds and mov cmp das daa cmp adc xor sbb cmp and push ret mov inc push enter dec pop pop pop add push push push dec dec pop pop pop dec or loope data16 xchg outsl push insl jg xchg je jb and push jle addb xchg lea idiv mov out jmp hlt into int xlat mov rcr mov rcl (bad) rcl loope (bad) fld lret stc leave aam (bad) cmc call lret iret lret fdiv aam rol call in fcmovnu iret pop lret mul in in (bad) test xchg sbb sahf mov fwait imul push imul push jno jg jbe push imul push ja dec inc inc dec insb inc inc dec imul pop inc aas or adc adc pop inc inc inc inc adc sbb and adc xor and push xor xor sub arpl outsw imul outsl addr16 popa aaa sbb push or sbb (bad) mov mov xchg loop sti jecxz loopne in lds mov cwtl xchg rclb xchg mov rolb mov mov repz (bad) mul stc in loop into iret (bad) icebp rcl lds (bad) fstp (bad) (bad) loopne mov in out call jae in lock (bad) repz cmc div clc stc cli sti cld std (bad) incl add add or adc adc push pop sbb sbb sbb push inc arpl pop inc imul sub dec inc pop push push sbb pop pop ss cmp cmp sbb inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jo fs ja jns sti fs jg addl mov xchg xchg xchg xchg xchg xchg enter pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas fdivs mov mov mov ret ret (bad) (bad) dec leave lret int iret rcl rcl aam (bad) xlat fcomp fcmovnu (bad) (bad) jo loop inc gs sub ljmp icebp repnz jbe notl clc cli sti cld std (bad) incl add add pop xor or pop or push cmovbe push adc inc pop push sbb push sbb insb and imul xchg sub (bad) xor xor xor aaa aaa cmp cmp cmp aas aas inc inc inc inc jnp inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop and bound xor imul outsl sbb pop jae jne ja jns jnp jge jg addl mov (bad) std (bad) cld xchg repz loopne call pushf popf sahf lahf mov cmpsl cmpsb cmpsl test lods fsubrl (bad) mov mov mov idivl stos (bad) xor lret int iret loopne loop in out in fnstcw fbld in out jmp stos out xchg icebp xor xchg stc mov mov xchg ljmp insb add or jp arpl adc ja push sbb sub and sub dec sub inc xor pop aaa push cmp cmp insb inc je push dec jl dec dec adc push push push pop push ss cs cmp pop push popa add sub imul outsl xor jae jne ja jns jnp jge jg add xchg mov mov lea xchg xchg xchg ficoml std popf repnz jecxz int aam fbld lret lods (bad) scas les fnstenv into mov stos ret mov out popa leave ljmp shl shl aad xlat nop fxch fcmovnu fstl jecxz in out jmp test cltd icebp sahf repz cmc cwtl negl std (bad) incl insl add jb jnp jle jle outsl punpcklbw push adc cmp jge bound jns push pop sbb and sub dec sub inc xor push aaa push cmp cmp ds add inc sub inc cmp dec ds das dec and push pop push push push insb pop push pop pop pop push pop adc arpl adc imul outsl add jae jne ja jns jnp jge jg subl mov xchg out in std cltd negl fldenv ret cmpsl fisubrl shrl mov mov mov nop mov sub sti divl stos mov jmp sti cli mov mov mov (bad) lret lahf cltd popl lcall fld ret repz cmp jno popa push jb pusha arpl xor data16 jge jnp xor jl dec push dec inc push or adc inc add adc pop push pop pop push pop dec dec insl pop dec dec push das das jg jne jbe jbe inc imul and xor sub xor and sub or pop inc pop inc pop inc pop dec push pop adc adc cmp cmp or adc push hlt call div stos cmpsb mov xchg out loopne clc icebp idivl in mov sahf (bad) (bad) (bad) lret fadds faddp (bad) rcrl iret rclb into into in out cmc mov cmpsb movsb test (bad) cmc div clc stc cli out mov xchg xchg addb mov (bad) mov fwait xchg popa jb outsb insl data16 jnp insb jg outsb popa bound jo jle arpl cmp add push inc push push dec pop pop dec dec push inc pop pop pop jp dec pop push sbb dec pop sub pusha and or xor and cmp cmp adc xor daa imul sub jg popa insl imul inc inc inc push inc sbb sbb adc and sbb push adc sbb jne mov cmc loop cld clc loop hlt mov lcall loop in (bad) cmc cli repnz ret ret lret rcll mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound add push fcoml outsl jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb and js ss jge jg and inc dec inc inc dec and dec dec push pop push push push push push push pop negb pop std pop pop mov stos cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov scas mov addl mov and pushf jmp nop jecxz sahf loopne icebp in xchg out loop out cltd xchg repnz clc call (bad) std hlt repnz mov mov mov (bad) enter mov mov rcr lock fcmovu (bad) cmc push fisub daa xor or es and and and loopne xor xor cmp adc aas aas or add adc sbb push add sub pop push insl sbb pop pusha adc push dec imul or stc and jns je jb popa jb push dec sub inc inc dec pop inc pop inc pop xlat inc pop pop inc enter pop dec ret pop pop pop jbe mov mov (bad) es mov pushf mov cltd mov mov mov mov rorl mov mov loope xchg xchg xchg (bad) lahf out loopne jmp cwtl lock loop loop in mov ljmp clc jecxz in enter add stc (bad) lret loope leave (bad) enter in iret iret (bad) mov (bad) enter add fprem1 and cmp daa sub and add cs cmp xor xor ss cmp sub cmp jns,pt in xor push or pop or cmp or push movups adc adc sbb mov or pusha pop lret imul or jo pop jb jne sbb js jno adc jle dec inc sub inc inc dec dec es and push push pop push cmp push pop push dec xor pop pop push cmpsl into add add pop scas mov xchg mov pop mov mov lods mov out sub xchg (bad) mov test lcall std jecxz in out stc fwait jl in popf (bad) out lock hlt fstpt lock jbe std (bad) (bad) ror ror rcr lret pop fld movsl dec int (bad) mov (bad) (bad) ror leave shl jne fbld xor xor sub pop pop xor xor xor add dec jp je pop pop or jns or jle adc jns sbb adc gs outsl dec pusha bound or pushw cld insl insl fs pusha ja cli jne jge dec xor push jl jns inc push inc push inc sub dec dec pop dec aas int3 push push and push push push cmp pop dec pop dec pop mov mov cmpsb test mov scas rcrb test mov mov sbbl insl insb xchg lahf dec (bad) mov xchg lea out out into imul jmp (bad) out lock rcl cli div repnz shr std (bad) cmc push rol out (bad) (bad) (bad) enter int3 and iret (bad) rcl (bad) out fsubs (bad) xor pop and push sub sub pop cmpsb push das inc sbb xor push add jne cmp jae jp jne push or or pop or add adc jns sbb adc addr16 outsl dec pusha bound or pushw cld insl insl arpl cld jae jg inc jp push or inc inc inc inc outsl inc inc push jnp arpl dec inc pop push jp push push pop mov pop jno inc outsb pop mov shll lods cmpsl movsb (bad) lret mov pushf mov mov xchg push mov mov xchg xchg and nop loope xchg xchg xchg nop in xchg lcall div cmc int3 dec out loop jecxz xor repnz (bad) in clc (bad) (bad) rol jmp (bad) icebp jnp lret int3 fmul out rcl frndint jp xlat ror ror aam outsb fisub sub sub sub and int3 sub xor ds xor cmp dec push jnp jb add and ds add popa jg push xor sbb sbb or shlb imul add sbb pop je ja outsl push lret je jle inc inc inc push dec xor fs dec dec push inc inc jnp push push pop dec ret dec pop dec dec pop ja mov mov adcl rcrb mov mov xchg bsf orl mov cmp mov mov pushf popf xchg mov lock mul clc in push cli (bad) jmp add repz out in (bad) mov clc in bnd shr jne enter int les cld aam xlat (bad) int lret cmc insl fisub sub xchg and push sub es sbb das out and xor sub adc adc adc ss or pop into xchg adc sbb sbb adc push push pop fs insb add insb outsb imul ja jle jo js push jle inc push dec ss popa dec dec dec dec and push push push inc pop cmp pop pop push dec push xor pop pop pop jns mov scas scas pushf mov mov mov mov popa xchg movsb stos mov bound adcb mov subl jmp call in out (bad) (bad) repz div idiv mov sti cld jae inc rol (bad) rol (bad) enter int3 int iret rcl rcl aam aam fadd fcomp fmul (bad) and and and jne sub cs and xor cmp pop adc dec adc ds push sub add je je jp or adc push cmp push aaa popa popa bound jae aad imul jnp lea jne fs imul push dec push dec fisttp cmp aaa dec cmp dec dec push push inc inc jl push push push dec pop dec pop sub pop mov movsl lods mov xchg shrl fist mov popf les iret xchg mov xchg xor mov loopne xchg xchg cltd mov pushf call mov loope in repz push jmp lahf inc xchg lock loop rorl cld imul gs mov (bad) enter mov stc rcl aam ret (bad) lock (bad) lret gs and and daa cs add stos sbb xor cmp or cmp jle jb add inc or push and push push add popa arpl xor sbb sbb or shlb imul sbb insl outsb imul jl loop push jp jnp jp lcall dec dec and arpl push inc push daa lea pop sub pop pop pop dec mov adc ficompl scas mov cmpsl movsl pushf pop mov mov and test (bad) orl mov call xchg xchg xchg xchg not lcall lock sbbl jmp clc clc movl test xchg mov std std (bad) stc aad ljmp cmpsb in int3 lret (bad) mov std xlat xlat fcomp mov fstp fcomp xor dec lods and inc enter adc into into int and inc or cmp adc das xor add add sbb fcomps add add out in or aaa outsl popa bound bound pusha inc jge outsl jp jo pop jb ja dec pop push jb jg dec inc imul xchg dec dec dec data16 dec push push push push push aas push push pop ret pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods stos scas scas mov mov mov mov mov mov mov test mov nop fwait cwtl loope ljmp lcall jmp push out loop jecxz pop in out in std in dec mov clc stc jmp in mulb enter jae mov loopne adc rcl rol shlb fstp fcompp dec sbb and or cmp xor cmp xor lret cmp ds push push aas jo add add imul push and sub and and sub inc xor xor cmp adc ds or add jae push add push sbb jle mov pusha cmp adc jns sbb adc outsb sbb jae push test sbb imul add bnd pop ja js or inc inc inc inc sub inc inc inc popa repz dec inc data16 pop jnp push push pop dec pop dec pop je pop pop stos lea cmpsb test xchg rcrb mov mov add test scas xchg test xchg test fwait lcall loop jecxz out lcall out lock icebp jmp std hlt and rol out ret aam test leave lret fadd fadds ret ffreep ficompl out and sub es and sub repnz and xor xor cmp in cmp ds pop xor sub add and or add adc adc push pop push pop sbb sbb and bound fs outsb outsl jb jb imul jnp jl jg inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec aam push push ficom push pop pop pop push pop pop pop mov movsb cmpsb cmpsl iret test scas scas mov mov lahf mov push mov add mov loop adc cwtl lahf lea loopne nop in in iret jmp ret cli loop loop (bad) idiv repz lock adc pop fcmovb (bad) int jae int3 lret ret (bad) mov std xlat xlat fcomp test mov and and cmp and lods das inc sbb xor inc jl cmp cmp mov add jp mov jl (bad) movups pusha pop imul pop pop data16 push xchg in sbb imul or jne jno ret jnp jp jns xor inc xor inc inc dec dec cmp xor addr16 push push push jl push push pop push dec push cs pop pop (bad) mov rep movsl lods mov hlt flds mov (bad) push lret xchg mov xchg jmp lcall xchg xchg test fwait lcall xchg int3 in out xchg ljmp jge hlt ljmp clc fst cmc sti cld imul cmc call sbb sbb in loop int3 int (bad) mov (bad) enter add fdiv daa or and pop add daa sub and sub cmp xor ss cmp ds incb add dec add or add adc adc push pop push sbb sbb push pop cmp addr16 insl outsl pop jno jae jne data16 jnp jbe insb inc push push inc push inc sub dec dec inc pop dec fs push inc push cmp push push pop push pop push jae pop pop push mov movsl cmpsb lods adc stos cmpsb test mov mov (bad) outsb popa mov mov push mov cmpsb mov cwtl cwtl cltd nop nop pushf mov lahf loopne cmp in int3 out stc ljmp mov div jmp (bad) sti je (bad) ljmp dec inc (bad) mov lret out rcl fsubs lock fcmovnu cmc icebp fbld sub daa push int daa and push pop sub inc xor ds cmp xor cmp cmp scas add push or adc pop sbb xor (bad) movups sbb sbb or push jae jae jb pop cli jns add jl pusha jnp arpl inc fdivrs jl outsl outsb push fistl push dec push lret dec dec pop inc pop inc inc dec outsl into inc pop cmp pop pop push dec push dec push dec cmp mov cmpsb test lods mov mov mov out mov and aad (bad) rep test fisttpl sbbl xchg cmc adc shr repz int3 mov out cli out rol movsb imul (bad) hlt cmc lock shl ljmp ret (bad) mov (bad) fwait int3 int (bad) xlat ret fld dec (bad) leave int iret int iret xor lods xchg sbb fcom pop add sub cmp pop add xor xor cmp push adc adc push push or sbb jle mov pusha cmp adc jns sbb sbb or popa push je js jp jecxz push lods (bad) lea dec pop push jae jle dec inc push inc inc dec cltd dec dec dec popa push jge dec or push ds push inc sub pop sub pop sub mov cmpsl cmpsb test mov scas shlb (bad) mov adc mov addl or xchg xchg mov jmp push pushf in mov loopne in lret in in jecxz cmc cltd push push repnz sarl xlat rol (bad) mov ret lock vmovq fimul adc int fsubrl and and push mov sub cmp aas daa mov es cmp ss push pop add imul add mov adc pop sbb or pop push jae jne cld or imul jo js mov jg jnp outsb je push dec sub push xchg pop pop pop inc data16 push and push pop pop pop dec push dec push inc iret cmpsl mov cmpsl test (bad) into lods lods movsb xchg mov mov mov xchg mov xchg mov mov mov (bad) nop (bad) sbb cwtl cltd fwait mov jl (bad) mov out cli out std loope pop out loope out into je stc cli in out repnz repz ror aad pop (bad) (bad) loope lret int3 (bad) out rcl fsubs mov fcmovu (bad) jg (bad) aaa divl sub sub cmp std cmp cmp aas test lret xor cmp ss jo add or add mov adc dec sbb push or pop jno adc sbb dec imul popa ljmp jge ja lods outsl jae jno push jl mov es dec dec inc pop ret push push inc inc inc inc dec inc push (bad) dec dec xor mov mov lods es mov mov inc mov mov mov and mov (bad) test lds lcall loop xchg xchg xchg xchg mull fwait fwait xchg mov mov hlt idivb clc loope cld ja popa lock clc jmp lcall imul out gs inc ret mov mov int (bad) (bad) rol add out fldcw (bad) and jp,pn pop cmp cmp mov aas and and cmp cmp adc adc rcrb sbb fcoms push or sbb bndstx popa popa fs je or imul popa jns inc jne jo imul jns push push inc sub inc dec pop pop cmp lret js push push push cmp pop pop dec dec xor pop mov jae mov mov push push dec mov mov test inc inc inc pop xchg cmpsl stos mov stc arpl xchg xchg sahf dec xchg xchg mov mov pushf (bad) lods mov out out out clc jmp out out (bad) repnz div clc stc cli sti (bad) (bad) dec ret out mov (bad) lret int into lret loope shll (bad) xlat mov fcmove scas xor or movsl sub and sub xor cmp inc xor aaa dec xor xor xchg xchg jae add pop push mov pop add jg adc push push adc ja sbb push or or ja jbe dec fs idivl add ja js imul jg xor lret inc xor dec cmp dec aas js push push pop jge push pop push dec push dec push xor mov mov enter mov mov mov movsb cmc in lahf jg mov xor mov mov fwait mov mov mov loope jmp (bad) aas jns xchg in out in mul jecxz and xchg cli icebp aam (bad) dec arpl rcr adc xlat fld fstpl rcl sti adc add ja (bad) fist sub sub xor cmp inc mov sub jb cs push xchg cmp sub adc push pop add and add add sub or push insw inc inc push data16 jle data16 pusha jge popa pusha scas push push insb addr16 hlt push dec push dec push dec outsl jp dec inc pop inc pop inc aas fcoml pop inc pop and dec pop dec pop mov mov mov cmpsl mov lods scas das out icebp jmp mov mov test mov shll daa mov mov mov popf sahf xchg repz bnd jmp inc mov outsl fcomi sarl xlat add ret aam sahf fld fcmovnu fistl pop out rcl fnstcw (bad) fistpl xchg out and xchg push pop sub and aas cmp and dec xor push sbb cmp sub sub sub adc adc jp or sbb mov adc sbb data16 jb or push imul jno je jp mov js push jp jge adc inc inc inc push dec sub dec dec inc pop pop pop cltd inc inc inc inc inc inc fsub addr16 cmpsl movsb mov scas mov aam test mov mov lahf mov mov xchg mov orb xchg cmpsl mov xchg xchg xchg xchg sahf cltd lcall jecxz jecxz in out jmp ljmp cmc mul mov cli sti div mov vshufpd and lret (bad) mov cli rcl aad push (bad) ror fxch fisttpl sbb sub and lock xor inc push sbb inc pop cmp cmp or mov or and adc push sbb gs nop sbb sbb pop dec std bound (bad) imul gs jp scas data16 jo loope jl ja sti enter inc inc inc dec cmp dec push push push inc pop jge push pop pop dec pop push das inc aad rorl aad and scas mov mov mov mov mov addl mov sahf cwtl mov test lcall mov in loope loopne in add out mul sti loop lcall mov je mov ret ret (bad) test int les ret add ror ror xlat jecxz and fdivrp add cmp pop lds das cmp sbb xor cmp cmp adc cmp sub add sbb or rorb adc cmp push or pop sbb sbb sbb bound fs push arpl outsb imul sti je ja jns push xchg jle dec dec xor insb inc outsl dec dec dec dec cmpsb dec dec pop and push and pop sub jne das mov dec cmpsl test fdivs daa lods fiadd pushf lcall mov addl mov xchg xchg cltd lahf dec (bad) xchg cwtl cltd mov out jmp cltd cwtl out shr jmp lahf inc xchg lock fild cli std out stc (bad) (bad) sarl mov mov out rcl aam outsb aam ror (bad) test or and and pop sub sub xor daa mov dec adc ds push jae popl daa or das and mov xor xor dec adc cmp push test add adc or and push bndldx cmp addr16 pop pop push or or sbb adc outsb js inc pop insl outsb gs inc jae jb jg jo push jp jnp jbe inc sub push inc cmp dec push push push cmp push push push pop dec push xor pop pop push jle xchg mov lods movsb jno outsl cmpsl xchg pushf mov mov push mov xchg addl mov mov popf xchg xchg lahf popf xchg mov lcall lret loop shl out call in out mov cmc cmc idiv clc stc cli hlt cld std (bad) inc rol (bad) (bad) leave leave lret int fcmovbe rcl (bad) aad int3 call fstp mov and push int3 and sub sub and xor cmp cmp add jbe mov js or or and adc cmp adc sbb outsl dec pusha bound dec dec addr16 insl push inc jno jb pop pop jbe jb pop jp jnp jns test inc sub dec dec pop inc pop imul push dec push jb pop pop push dec movsb rorb mov imul mov mov mov cmp stos dec test (bad) (bad) adc (bad) loopne xchg xchg xchg xchg cmpb scas mov in repz and out clc in test in out in xorl cli std std mov stos cmc mov int3 int leave mov std xlat xlat fcomp int3 repz (bad) adc xor sub cmp inc in xor or xor ss cli aas aas or add iret add or jl (bad) movups pusha adc sbb adc pop pop pop lods arpl popa sbb imul pop and jbe outsb cmp jnp jge outsb inc test dec push inc daa (bad) dec dec inc aas dec dec push and push push pop dec (bad) int pop pop pop dec movsb into mov (bad) bound ljmp mov mov adc mov test sahf popf movsb fisttpll lods test xchg mov jmp out iret (bad) imul stc loop push in in in clc loopne in (bad) (bad) out roll rol iret aad rcll fcmovnb fcmovnb ffree cld sbb (bad) aad sarb lret fnsave or and sub sub sub xor and inc or ds push outsb xor add adc and or push aaa popa icebp out out int3 sbb or sbb jae push pop push jae or outsb sbb insb sbb jb bound imul jg inc xor inc xor dec inc pop mov pop scas push or push aaa (bad) pop pop push dec push ja mov pop pop push ja mov mov test mov mov mov orl mov xchg cwtl cwtl xchg mov inc fwait pushf popf mov lods loope loope in (bad) call in out fdivp icebp repnz hlt cmc div clc stc cli stc cld std (bad) pushf rol out (bad) lret (bad) into iret rcl rcl aam (bad) mov (bad) out (bad) fiadd and das and sub sub xor jecxz,pn xor pop xor daa xor mov dec pop add add add jns orl cmp adc adc sbb xor arpl adc cld in sbb je stc arpl jns jb je popa pop int3 or inc out dec pop dec pop cmp inc dec aas js push push push inc fildl pop pop dec dec dec jbe mov sub cmpsl test (bad) lods lods movsb or mov mov lcall xchg icebp xor mov cltd nop xchg xchg xchg cltd nop adcl sahf lahf loope sub imul out out cli fxch repz jmp (bad) jmp ret std (bad) not mov dec les int3 roll into iret rol fcmovb fadd (bad) rol add (bad) fistpll sub daa sub cmp dec xor cmp ss xor ds dec test add add or or pop or adc lcall adc mov jne mov in push insl iret jg fs push jne jge pop jp jbe jns inc imul push pusha cltd dec dec inc pop dec xchg inc mov inc push jle pop pop push inc dec jne pop mov clc jl lods mov scas scas mov mov push mov mov xchg test jbe andl test push adc loopne in int3 cmc out loop ljmp aam cld hlt cmc cld cld clc shr sti cld mull inc shr fadd mov leave lret int push rcl rorb aad rcr fcmovbe (bad) ffreep adc and and sub sub das cmp xor cmp push aas cmp push push cmp sub add cs add jg (bad) bndldx adc adc fs sbb in je fs jns jl mov outsb imul jp pusha pop movsb jbe jae jge cvtpi2ps inc xor inc inc inc push lds dec dec pop inc pop pop inc inc (bad) push push push cli dec push dec dec jne pop mov xlat and test (bad) stos lods lods test cmp cmpsb mov mov sbb lods push xchg mov fsubs (bad) and and and es sub sbb sub cs xor xor cmp and sbb add or or adc add and or pop pop adc or lcall adc outsb or arpl addr16 scas je cltd jbe jb jp arpl push dec inc inc dec dec inc outsb push dec dec inc xchg dec dec dec gs dec bound in push push pop es pop dec jne pop mov movsb cmpsb mov cmpsb cmpsb test movsb bound hlt mov mov mov mov (bad) orl mov daa xchg xchg xchg lahf fwait mov (bad) int3 push jnp jmp ljmp cmc imulb fmuls hlt stc call shr dec leave leave rol leave fstps ret aad xlat (bad) push push into repnz fst lods mov es cs cmp mov pop push cmp xor xor aas add xor sub push pop add or sbb push add ds pop sbb sbb sbb arpl ja bound jnp dec lea popa inc jbe imul jbe imul je xor jle dec dec dec dec and pop and pop pop pop pop xor mov xlat test stos lods lods test lock mov mov xor mov xchg and mov jnp xchg lahf stc jge cltd nop mov xchg in fiadd xchg lret in out xchg jmp out in les cmc xchg stc stc cli std xchg mov dec in repnz fnop test (bad) into lret mov fcmovnb fdivrl rcl lret dec scas and cs xor inc sub sub inc les xor xor fnstenv aaa xor ja ret ret pop sub push pop add and or push movups adc adc rcll adc sbb sbb cs xor fs addr16 cli imul jo jae jb imul jge jg inc pop arpl inc inc inc aam push imul jae push push push les jnp pop pop pop cmp mov mov mov out mov mov test cmpsb test mov sbb in mov xchg xorl xchg push loope jecxz jecxz div mov repz outsb lock repnz repnz fcompl (bad) inc pop (bad) (bad) in (bad) enter rcr rcr dec xlat int hlt jo xlat fadds (bad) (bad) std outsb fbld and pop mov xor das xor jns ds mov inc lahf add sbb sbb sub mov test add sbb inc out fs outsb jbe dec mov outsl in ja push imul jno pop gs pop dec fiadd bound dec dec dec xlat dec push outsw ficom push enter js pop pop pop rcrl xorl (bad) mov scas xor sub daa mov xchg xchg xchg (bad) adc xchg mov pushf add jg cli sar fdivs hlt fxch dec out lock outsb cmc jmp (bad) imul loop fistpll ret fcos xlat rclb hlt out dec rcl rorb lret sub fcmovu inc fcmovnb in jmp and adc subb sub sub or clc cmp cmp cmp aas pop sahf add push push dec adc xchg or push push mov sbb sbb mull arpl arpl dec mov imul ss fnsave jne jno ds sti jl jle inc pop or inc pop add xlat dec push add pop int dec pop dec daa lret pop inc push inc push rcrl mov call mov mov xor sub daa mov sbb jo mov xchg xchg or (bad) (bad) mov xchg xchg cwtl add adc sti mov mov int3 pop out out lock hlt in lods ljmp frstor loopne fidiv fmuls rolb repz aad xlat inc ffreep test inc fadd inc ds mov subl sub dec scas xor cmp cmp mov add cwtl add bound mov and mov push mov xor sbb adc ss cmp push mov cwtl add insb pop sub cs adc adc xor mov gs inc ret push push push dec into jno jae jae push addr16 out arpl popa pop faddl xor inc dec aad push cmp dec push push into push dec and pop pop pop (bad) pop inc sub cmp test mov xor das mov int3 test and inc mov fwait stc cmpsb push mov pause in xchg mov mov xchg cwtl cltd push popf and push loopne loop loop out jmp into outsb lock repnz fwait imul sti jecxz (bad) stc loopne ret (bad) pop into jmp shrl aam (bad) enter sti pop fstp fistpll push mov daa sub inc mov or sub mov adc add sbb add (bad) or or outsl xchg push xor jno pop cmp add fs ljmp insl dec loop outsl jo sbb jb xchg ja jge jnp bound dec inc inc dec dec inc outsl pop dec dec inc xchg dec dec dec jp push push and jo pop push jno pop inc insl test lods cmpsl cmpb scas mov mov cmpsl test mov (bad) test mov pusha mov mov out xor popf cwtl mov loope jmp stc in cwtl dec dec in sahf (bad) icebp icebp repnz faddl div ljmp rol ljmp mov (bad) (bad) std xlat xlat fcomp int3 push lret fidiv es sub push loope xor sbb xor cmp pop cwtl add add xchg js stos or adc push sbb aaa adc or outsb js insl jge hlt sbb pop je ja or jl push jle inc inc pop insb ss inc dec es dec dec pop dec push inc pop leave outsb (bad) push sub pop pop pop sub or cmpsb mov lods stos xchg lds mov pop sub xchg mov xchg xchg lahf xchg lea sbb out neg into (bad) cli cli repnz cmc idiv es cli sti (bad) std (bad) call icebp mov dec leave lret mov iret rcl (bad) sti inc aam fst icebp or (bad) fld daa scas xchg cmp dec lret sub add sub sbb sbb xor ds sub cmp loop ds sub add pop xor or mov inc adc push pop adc or pusha imul (bad) addr16 iret insl insl fs jle cmpsl fistpll push jp jge push out inc inc dec inc adc orb cmp stc push and push push push jo pop pop push jne pop mov xlat cmpsb cmpsl mov lods movsb ffree hlt mov pushf mov mov xchg add addl mov nop xchg cwtl cld xor lcall loop jecxz inc out jecxz test out in sahf push repnz jmp cwtl push clc cli icebp sti xchg push inc lret in stos outsb mov int les mov iret and neg faddp adc sub and cmp sub lock xor sbb daa add cmp and add mov add nop add or mov mov push pop pop sub xor sbb dec jae gs mov jg insb outsl push jno jae jne data16 push pop jl je inc imul ja outsl inc dec dec inc inc dec pop push push pop lea jge pop jb pop pop push jne mov test stos test mov mov mov stos mov mov xchg andb xchg test jnp xchg popf mov fwait fwait xchg xchg mov in xchg xor dec ljmp icebp repnz xchg clc (bad) fnop stc in (bad) icebp inc lret leave ret in aad mov out iret lret loope rcll (bad) lret lods fisub sub je es push pop das das cmp sbb xor adc inc dec add adc push add add or jg int3 loop adc adc sbb adc jne jne jbe out imul inc outsb pusha arpl sbb jbe jae jo outsl jne mov inc dec sub pop pop lcall popa mov les push push dec pop xor jns mov stos nop cltd stos stos lods stos mov mov (bad) xor mov mov (bad) orl cmp mov xchg xchg popf lahf mov xchg xchg or xchg int out out cld ret mov ret xchg pop (bad) mov sti sti cld sti xchg or aad test mov clc rcl rcl ret incb out int lods pop mov push or es cs fsubrs sub sub cmp fnsave xor inc xchg cmp push add adc add cmpsb or adc adc or jae pop pop push ja fs insb jge cmp inc arpl xor js push jp jge adc push dec sub xor dec and push push push inc jg pop pop push dec outsb dec push rorb or test lds lods movsb (bad) mov pushf mov mov mov mov (bad) test lea nop fwait std popa xchg xchg pushf xchg xchg mov fbld hlt in jmp cli call not or cmc test call (bad) stc int3 rol rol shrl movsb cmp into (bad) (bad) ret mov mov (bad) aad xor xor xor sub and cs xor pop fdivrs cmp push enter adc sub push add push sbb sbb push adc adc sbb cmp push gs mov insb or push push jo jne lods gs push push dec push push inc push inc push daa cmpsb dec dec inc and inc pop inc addb dec dec insb mov (bad) mov mov mov mov lcall mov lods test mov mov lcall xchg lahf lahf ljmp imul clc in ret in out in mul cld jecxz in jmp dec cld sti call (bad) iret (bad) into fadd shll ret rol (bad) fbstp into fmul xor push and subb es ss and ss xor cmp add fiaddl adc movups sbb cmp push pop adc sbb sbb push pop and arpl addr16 outsb outsb outsl push jne ja jns jp dec jl add inc inc inc cmp lods dec push push jp push push pop dec cmpsb pop fidivrl inc mov mov test mov push mov mov mov cmpsb mov mov xchg cmpsb lea xchg movsb xchg xchg xchg pop cltd lcall xchg in dec in into out jmp out les fcomip mul lret (bad) repz (bad) cmc lret shr (bad) (bad) enter (bad) int3 iret loop rcl push aad (bad) cmpsb cmp fcmovnu scas mov and and sub cs test xor pop sbb xor aas sub add push fildl pop or or pop cmp adc pushf adc sbb sbb mov adc fs dec jns push outsb outsb add jno je stos pop push pop ja jp jo lahf jg inc xor dec dec dec dec fs dec dec jnp push cmp push push push push jno pop pop push sbbb mov (bad) cmpsl test xchg mov mov mov mov (bad) test fwait mov mov ljmp ss in mov loopne in mul out ljmp jmp (bad) rcr clc clc stc lock aad inc lret sbb (bad) (bad) (bad) enter into iret push rcl ret (bad) xlat fsubrl neg and and aaa and sub sub cs das add sbb xor adc cmp xor add add pop xor or mov adc adc mov sbb sbb je bound bound (bad) push outsb jo push pop jl jne jl push push jl mov inc push jne inc xor dec dec pop and push and sub sbb push icebp mov movsl mov mov rcrb cwtl mov mov lock test scas mov mov xchg in xchg cwtl cltd pushf mov popf sahf xchg jmp cmpsb xchg decl xchg shr jmp (bad) lock adcb cli std aam (bad) dec jmp ljmp in iret rcl cli std aam fsubl hlt (bad) fbld or push sub sub push lret xor cwtl aaa dec adc cmp push adc add jno stos push ja or or and cmp adc sbb jge pop mov insl ss pusha popa fs dec gs sbb lds inc outsl outsl jo pop pop je jl push cmp push push inc inc inc inc insb imul cmp in cmp push jnp push push pop jo pop pop push jno sub mov stos lods cmpsl fmull pop mov fwait mov mov nop xchg mov mov cmp cmpsb int3 incb xchg xchg xchg xchg mov jmp enter loop leave out jecxz xlat in in in xchg cmp hlt test idiv stc cld rcl std (bad) cmc mov jb mov mov int3 int (bad) cli xchg mov lock fcmovnu cmc lock sub mov sub cmp push xor sbb dec and aas add sub cmp push movhps cmp adc sbb insb push sbb popa bound and (bad) imul imul sti (bad) js push jp jge push outsl inc inc dec insb jns inc inc gs aas js push push push jge push pop push sub mov cmpsb cmpsl mov fbstp mov mov lahf xchg mov push mov test andb mov mov xchg out cltd cltd lcall xchg add out jmp out in cmc xor cmc xchg xchg mov mov (bad) mov loope lret int3 (bad) mov sti aad (bad) (bad) lock fcmovnbe cmc loop and push inc push sub sub push add xor inc jg ss adc cmp cmp or inc ja test jns or adc data16 pop push sbb xor push insl inc jbe jo insl push inc jno jb pop pop jbe jb xor jl push jle inc inc imul dec inc dec bound dec dec inc jbe push push push push daa ja pop sub pop pop pop ja mov cmpsl cmpsl scas (bad) aam lods lods stos test int3 add mov mov (bad) test jge xchg mov jecxz xchg xchg xchg sahf mov fwait pushf xchg mov loopne call loope adc jmp ljmp cmc cmc div rclb sti not sar ror mov sub lret das into iret aam xor aam mov movsl cmp sbb daa sub add sub add xor pop daa xor push cwtl aas add adc jbe or js and and or add dec (bad) xor xor inc inc mov dec adc ds push sub js or hlt or add adc gs test imul pop dec int outsl dec dec push insb outsb imul fs jno jp push jl jg imul push xor (bad) mov push push sub pop pop pop xor mov cmpsl lods fistl scas mov mov mov (bad) xor mov rolb xchg xchg xchg xchg mov mov popf popf cwtl mov loopne xchg lcall out jmp (bad) fisttpll add std hlt andl mov jbe mov enter rcr cld cli (bad) xlat (bad) icebp movsl fcmovu (bad) sub xchg daa pop add sub push xorb cmp sbb cmp cmp jl add add or packsswb (bad) bndldx adc fs sbb sbb je arpl or imul jo,pt js (bad) jne ja jge pop jbe push push inc inc inc inc insb push inc inc popa leave dec dec dec push push inc push and jmp pop pop pop mov fldenv lods lods movsb rcll mov movsl mov pusha or mov orl mov loopne nop xchg cltd test ljmp dec loop out int out jecxz xchg in in call (bad) mov div cld xchg sti cld stc xchg pop rol mov mov in iret rcl cli (bad) aam std aad push fcmovnu (bad) fdiv jno and sbb das pop or sub xor xor mov inc loop add add mov jns or adc cmp pop pop push jbe sbb pusha std pusha popa gs mov sbb imul jo js pop jne jge push jnp jp xchg dec inc xor inc aaa pusha dec dec dec dec gs push pop jp push push pop jg pop pop pop fdivrl mov test scas les movsl into push mov mov lea mov addl popf out mov fwait xchg xchg popf xchg cltd mov pushf popf xchg inc loopne loop in out fsubr ljmp icebp jecxz push cmc idiv xchg add sti notb f2xm1 (bad) in arpl enter int les ret cli (bad) (bad) jge fcmovbe mov (bad) sub and cmp sub and xor daa xor mov cmp xor fimull add push push gs or add cmp add adc push pop pop sub xor sbb dec jae gs mov insb insl outsb outsb pusha jno jno dec jbe sub jnp jge fs inc ret inc int3 dec dec pop pop dec mov jae push push inc ds push and pop pop push push jne pop mov mov (bad) (bad) test lods mov mov mov mov mov xchg orb mov add xchg xchg xchg (bad) mov mov out lock nop leave jecxz in in cmp call xchg or icebp mul loop,pn jp stc cli cli out stc ljmp loope mov mov aam pop ret (bad) xlat fxch ror aad int3 xlat xor pop lds sub cmp xor xchg and adc cmp pushf or adc dec add add push or adc push lahf pop adc adc push or or pop fs js jge icebp jg addr16 bound pusha jmp jb insb loopne jne push arpl pop fldenv pop inc pop aad jo push pop inc push inc push inc lret dec pop dec stos mov cmpsb lods js stos stos lods test add mov mov test sbbb mov mov inc cmpl repz sbb xchg iret jmp (bad) lock sub repnz mul lret (bad) repz (bad) cmc lret shr (bad) (bad) enter int3 int mov rcl rcl aad xlat fcomp ficoml and cmp sub sbb cs xor xor inc cmp cmp add or and sbb and (bad) bndldx adc xchg adc adc (bad) adc xor push pop push dec jae gs mov xchg insb outsb gs test mov jns pusha adc jle dec popf pushf dec insb dec inc inc inc popa pop dec dec inc nop dec jp push dec data16 pop pop pop push push pop jne pop mov movsl mov lods mov cmpsb xchg mov mov mov mov (bad) addl test push xchg xchg xchg cmp cwtl mov pushf popf subl sar jmp xor out lock call cli stc cli jbe std out (bad) rol mov mov (bad) enter mov stc rcl aam sar (bad) ror out subb and daa add sub pop jl xor xor push cmp ss dec xchg mov jb add adc or or adc adc sbb push xor or or push clc outsb jo sbb jl test jnp jg nop sub inc inc inc pop popa sbb inc pop jl and jnp and pop jae pop pop push rcrb cmpsl cmpsl test (bad) test add mov mov ss xchg mov xchg cltd sti cmp lcall loop mov out loop mov in out in (bad) fwait test test div clc (bad) in shrl pushf mov in (bad) mov enter in iret rcr mov (bad) (bad) fcmovu hlt repnz sub push mov sub sub cmp inc xor xor cmp or leave add imul pop jle adc jns sbb adc (bad) lock pop pusha arpl cmp gs dec imul outsl jo fs sub adc js push jp jge push outsb inc inc dec ss cmp dec dec dec pushaw push push pop pop es in sub pop pop pop sub movsl (bad) mov stos stos lods stos xchg jg mov xlat adc sub adc mov xchg xchg xchg out loopne call fwait mov repnz mov fwait (bad) in out out neg fdiv hlt incl std std (bad) stc call iret mov jnp mov leave mov shll fstp fcompp or and cs inc xchg xor cmp pop mov lods cmp or or sbb or rorb sbb fs xor sbb adc pusha popa jge inc dec imul jge outsl jp jb je jbe fs jnp jge jae inc inc je inc inc add dec dec inc dec dec dec inc push push push dec fs push adc pop pop dec pop mov mov mov mov mov mov mov mov orb pop mov mov xchg sahf sahf xchg mov inc popf sahf lahf lret loop in out jmp loop lock repz div stos clc stc cli jne std out cld ret ret (bad) stc lret fsub iret into rcrb (bad) stc stc rcl lods aas fcomp ficom lret and or pop int daa sub mov das outsl adc xor ljmp sbb pop cmp and or cmp adc sbb sbb sbb sbb push or bound gs jnp jnp nop fs insb (bad) ss jbe jl js icebp xor inc inc push inc push dec push inc pop lds dec dec dec pop addr16 push push pop inc push dec pop aam pop pop pop dec jbe mov cmpsl cmpsb lods subb mov mov mov mov xchg mov shlb xchg xchg cwtl xchg mov cwtl (bad) xchg adc int out jecxz jmp in cld in repnz jmp adc aad push pop ret aaa ror fcmovu leave aam or (bad) ffree (bad) rep lret fmul pop fucomp bound daa xor daa pop iret sub cmp mov insl push out leave aaa cmp xor bound add add pop add rcrl fnsave mov add sbb push push int3 or adc lds inc gs inc ja jns push imul jnp scas imul stos pop test ja pop sbb push dec pop pushf pop dec pop dec pop pop jle inc push inc jle pop pop push jno pop inc insl test lods cmpsl cmpb scas mov mov test mov mov out jnp lods mov orl xchg inc lcall in stos in out call adc jmp psllq shr nop lock xlat ret (bad) enter inc mov add rcl jmp fcomi (bad) aas adc or and add sub and xor xor xor ss aas cmp cmp adc jg push pop or mov push adc adc adc outsl sbb push gs outsl dec and pop xchg add add or repz push adc adc sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp mov pop clc dec inc icebp dec mov dec pop subl cmp and cmp inc add inc pop adc dec add sub cmp push pop js jge jns jnp jge jg les xchg pop fnop mov xchg xchg je xchg xchg xchg cwtl xchg fwait pushf int lahf mov movsl cmpsb cmpsl push (bad) test scas mov mov mov divb mov rol (bad) (bad) int3 leave lret int iret rclb rcl aam (bad) xlat fcomp fcmovu (bad) sahf pop loopne repnz cmc out call std out out lock repnz div clc stc cli sti cld std (bad) call add push pop or push movups adc adc push pop sbb sbb sbb push pop and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop jns pop push pop pop pop pusha popa bound gs dec push and outsb outsl jo jb je jbe push or jle xor addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall rcl rol movsl cmpsb cmpsl test stos stos lods sub mov mov mov mov mov ret (bad) out scas cmpsl mov rcl rcl jne xlat fcomp fcmovu faddl loop in out call in out lods lock repnz cmc div clc stc cli sti cld std (bad) call add or push or adc inc and sbb and push sbb adc and sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec inc popa push push jne push push pop pop pop dec pop das pop pop pusha adc fs dec imul gs jnp bound ja jae jnp jge jg mov addl mov mov xchg xchg xchg xchg call in movsb mov scas aam test shrl mov mov mov mov dec rol aad test mov ret aam ret test rcr fst mov loope jmp loop in icebp popa out out icebp loop loop jecxz pusha clc stc mov hlt jmp jae adc pop jp or jl pop push or adc sbb aaa and and xor and (bad) sub and cmp and cmp dec pop cmp dec das dec inc inc dec push mov inc popa dec dec pop pop push push inc pop cmp pop push dec push dec push fs sahf popf mov xchg push inc addr16 jns jl jne ja jns insl (bad) jl jne mov test cmpsl mov xchg xchg movsl xchg ds lcall xchg mov cmpsl stos test mov mov mov mov es mov cmp aad fxch out int3 lret rcl fcom mov iret and iret fxch fcmovne call out loop ljmp loop repz negl in add in sti adc imul pop dec pop sbb jg sbb push or xor aaa and sub sub sub sub xor daa add cmp cmp dec push dec dec fistl pushf rcll inc or push fnstenv cmpsl pop push push jo pop imul dec data16 imul outsb outsl jo jb je or jns or xchg (bad) orl pushf pop sahf lea xchg xchg lahf xchg jmp out aam lahf ror mov movsb scas aam test mov frstor addr16 mov vshufpd leave lret lret mov rcl (bad) rcl cmc (bad) fcmovnu fstp fnstsw loope sti in in xchg out jmp fwait cmp out cli subl ljmp incl or add add pop or or es adc adc pop pop cmp sbb and es sub sub sub push aaa xor cmp aaa ss push das cmp ss stc cmp inc inc dec xor and dec pop and fisttpl pop pop inc xor pusha imul pusha inc addr16 insl outsb outsl jno jb je ja inc inc jp jge jle mov xchg mov cwtl loope xchg xchg out (bad) lcall ror mov movsl lods aad stos stos fcmovnb mov mov mov mov mov ror ret sbb loopne enter out into iret rol rcl aam xlat xlat loope fcmovu fstp (bad) jecxz loope lods in out jmp cli out lock repnz mov clc stc (bad) stc mov std pushl add add cs or add push add push push sbb xor push pop es daa and pop and sub sub cs xor sbb add cmp cmp cmp inc inc inc daa push dec dec inc call pop js push jl dec imul popaw bound jno dec push pop push jne jb jae jbe js push je jge jg xor xchg mov lcall xchg ljmp lahf mov movsl (bad) (bad) mov stos mov mov popf movsb mov mov mov leave rol fadd mov leave lret lods int mov (bad) movsb mov fldcw aad pop jecxz in enter jmp xchg in sahf (bad) repnz repnz in idiv stc cli stc mov add add je or jp adc adc sbb pop pop sbb or sbb push pop and and add cs sbb xor ds ss pop cmp inc xor inc arpl pop dec dec cmp pop inc stos push pop pop jne pop jae pop pop pop pusha popa pusha adc imul pop xor pop insl je jl xchg jae jne push (bad) addl sti movsb (bad) mov xchg in mov pushf xchg xchg lea cmpsb cmpsl scas test lods scas rcrb ljmp mov iret int3 call leave lret mov rcl shll into repnz fstp fnstsw jecxz aam in iret ljmp out sbb repz jmp or cmc repnz out mov sub push pop push or or adc adc push sbb pop and push jle and sub cmp das and sbb xor xor dec das adc cmp cmp xor inc inc xor outsb inc dec dec dec dec dec dec cmp push push and push push jl add pop sub inc pop pusha imul outsb dec popa imul jo jo xchg jno pop push jnp jnp jns pushf test xchg mov xchg xchg xchg ljmp lahf mov movsl (bad) (bad) mov stos mov mov mov mov mov mov ret (bad) out mov lret leave mov (bad) rcr fdivr (bad) lock fcmovnu fstp fstl int out ret out in sahf (bad) out icebp repnz loop idiv lock sti aam (bad) incl add add add js or or jl adc bound or sbb adc push pop or and and das sub das xor inc outsb aaa xor cmp sub aas xor dec inc inc insl push inc dec dec dec dec dec aas leave dec push and push push jge add inc pop pop push pushf bound dec outsb push insl push loop jne pop jp jp jbe fstpt icebp mov clc mov cwtl jno popf lcall cltd nop jmp mov cmpsb lahf imul lcall mov mov leave mov ret (bad) mov mov rcl shll ret aad pop jecxz in enter leave ljmp sbb cld clc rorb pushl sbb add adc or es loope push xor sbb push push push xor daa push and sub cmp das and sbb xor adc adc cmp dec sub pusha inc inc dec dec inc insb insb dec cmp dec ds push push pop inc stos push pop push je pop je pop pop push inc arpl inc push push insl or jae arpl js jl push jge jg mov andl lcall loop xchg xchg xchg mov fwait popf sahf fwait cmpsb into movsb mov test scas xorl mov cmpsb mov mov enter into ljmp into (bad) rorb push (bad) icebp (bad) (bad) loopne jecxz clc clc out jmp in in (bad) fdiv repnz hlt fcomip imul leave clc sti mov (bad) decl add adc gs add adc sbb adc or sbb sub and sub cmp sub xor pop cmp aaa xor les pop cmp aas dec dec outsl inc inc push dec insb dec dec pop inc addr16 dec gs popa push push lds push push pop pop dec pop pop sub popaw adc gs bound add push inc jb jb jg or jns hlt js lock jmp xchg xchg xchg jecxz mov lcall mov cmpsl scas mov mov movsb mov mov test rcl rol call int3 lret mov fcmovnbe sti cmc aad (bad) (bad) (bad) cmc hlt fnstsw jmp repnz int call in out out jmp div fdiv div repz cli ljmp add cli add add or push punpckldq gs sbb pop push pop or and sub and and sub and cmp push aaa ds dec dec inc push dec dec cmp dec dec inc pop push push push mov sub pop pop jbe movsb popaw adc gs inc dec push data16 push jle mov jge jg je js scas (bad) orl mov lcall mov pushf popf inc lcall movsb aad scas stos fildl mov mov xchg mov mov int3 (bad) dec xlat leave lret shr inc iret rcl sar in xlat (bad) mov fcmovnu xlat (bad) (bad) shl jecxz in cmp iret ljmp fdiv repz div hlt loop jae add add sbb pop or or and adc push push ja sbb push sbb and and sub push mov sub xor xor cmp cmp jno inc leave inc inc inc inc dec dec pop dec dec pop push push push pop push inc test dec pop dec pop jno pop pop adc arpl popa imul pop jo je jp or jge or jl subb mov lcall xchg xchg xchg xchg xchg cltd lcall mov scas mov lahf lods scas movsl xchg lcall nop mov test (bad) aad aam cmc (bad) enter mov out rcl fptan (bad) (bad) xlat repnz fcmovne in fstp lret jecxz in imul ror in out lret clc pushf (bad) cmc idiv mov cli sti div clc fisubrl add push and push cmp adc ss sbb ss or and and add add sbb push sbb or add adc sbb push adc or add push sbb cld add add cmp cs xor xor and cmp adc sub xor fs dec dec pop jns push push push jo pop pop pop inc insb pop pop leave pusha popa bound ja inc push push addr16 jno jns jb push jp jp inc jge jne jg nop (bad) xchg subb lea xchg sahf cli mov cwtl xchg xchg call mov mov (bad) pop mov stos lods cmpsl scas mov mov mov mov cld mov jecxz fcmovb (bad) loopne lret int (bad) std ret ret xchg xlat fcom repnz (bad) aam push loopne loop in loope out (bad) in cli (bad) lock repnz (bad) idiv daa cli sti (bad) std (bad) (bad) adc add add push das xchg (bad) or nopl pop adc adc sbb sbb push pop sub and sub cmp add sub jbe xor cmp xor dec xor aaa inc xor ss inc cmp cmp inc dec aas inc push and pop push es aad pop pop pop dec push dec insb ja (bad) jne jno insb lret jnp je imul jge bound addr16 jno push data16 xchg lea xchg (bad) sti push orl xchg sahf xchg fcompl mov movsb movsl lods xchg cmpsb stos stos ret in scas mov mov mov mov enter vshufps lret mov rcr (bad) dec (bad) repnz (bad) fmul in lock into out xchg jecxz jmp in in in std sti out cli hlt cmc repnz loope lock std cli jmp call or (bad) sub movhps pop add cmp or or push and pop outsl es and or sub cmp xor and and cs aas push arpl dec dec dec pop jl dec inc push push push inc push push inc push es pop pop pop push jne dec bound fs push insl jg push jg jae jg ja push jp dec ja sbb test clc lcall xchg xchg sahf sahf test pushf lahf mov cmpsl mov js stos stos scas test pushl mov mov mov (bad) int rcr shl ret mov (bad) (bad) cwtl fcomp rcl (bad) fldenv lcall xchg cmpsb in out in jecxz loope fst idiv (bad) jmp hlt jb add je push pop or jo adc es adc sbb adc pop adc sub push adc and es cmp sub aas sub sub adc xor cmp xor ret aas sub pop imul xor dec inc push jp push push push inc inc dec inc jbe das jmp xor sbb jle adc bound push ja jg pusha insl push je push xchg mov xchg cmpsb add xchg test xchg lcall mov mov test lods mov mov vmovntdq mov aam (bad) (bad) shl out lret fmulp mov rcl (bad) ret std xlat fcomp int3 and sti int3 jmp xchg fwait mov out jmp cmc in mov clc repz loopne pop sub add sbb push push jne adc push add add aaa sbb sbb add xor and sub or sub xor sub and sub ss cmp inc inc push push dec push push push addr16 push push inc pop push inc push dec movsb pop dec mov jns outsl pop dec popa push insl fs je jb je imul push push addb stos test (bad) cld rclb mov cltd lcall movsl mov cmpsl mov mov or test xchg out mov rcl fcomp xchg loop int3 int fadd aad fmulp rorl iret into iret int pop jecxz push std lret sti stc popa fucomip out icebp loop mul out jecxz call stos incl or adc jle pop or push push add push popf jge push aas xor sbb or sub push pop jns sub push xor and xor ss cmp sub inc dec push push push push push inc popa dec dec dec pop push inc dec jg push daa jg pop sub or and dec cmp jp xor jle pusha pusha jl sub js pusha insl inc dec jg jge mov cltd popf sahf mov adcb into xchg mov lahf cmpsb mov mov mov fcmovnu std scas scas mov stos sahf out nop call test ret xlat fsub iret lret faddp iret rcl inc fld rolb aam push loopne sbb repz leave jmp out xchg push icebp mul repnz idiv (bad) jmp hlt jb or je push pop or jo daa sub sbb adc pop adc xor sbb push add push sbb jns sub push cs xor push sbb cmp ret roll push pop push dec cmp sbb inc push das inc push push pop fsts pop pop dec pop sbb arpl push jmp insl outsb imul pusha insb jne outsl pop jp,pn jbe es mov mov test xchg mov mov cmpsb cmpsl mov lods scas stos stos dec mov dec mov lods test mov into ret (bad) dec (bad) enter aad jecxz aam (bad) ror enter fcomip repnz enter std ret stos lock out out lock repnz hlt cmc testb cli pop (bad) std (bad) xchg add add push mov or sbb push push pop adc xor and and es xor xor cmp or ds inc inc push inc inc push inc pop les dec dec inc dec push jns push push push push jge pop pop dec insb pop pop dec pusha popa bound gs sbb imul jo jle ja jae push addb xchg xchg mov mov lahf mov pushf lahf in mov movsl cmpsb lods test test test scas scas mov mov (bad) mov mov sahf ret (bad) iret mov leave lret out into iret adcb incl (bad) idivl out sti jmp in out out adcl idiv repz stc mov add push add jl insl movups adc push jmp and sbb js push adc cs sub es xor cmp sub sub xor inc inc dec bound popa dec gs dec push pop push push push jg inc push pop pop dec pusha popa jae sbb insb jge add jns jo jnp push jbe sbb jae jg test jmp clc xchg lea mov lcall mov lods test stos mov into scas mov mov popf mov xchg mov mov (bad) (bad) clc enter int xlat rcl ret shrl (bad) icebp fcmovnu neg shl (bad) jecxz out int3 mov xlat ljmp sti xchg hlt cmc hlt ja stc cli call std decb add int ljmp or push arpl popa addr16 cmp push outsb outsb jle insb push jae push dec push push inc dec jnp dec dec dec pop add pop inc push pop inc pop pop pop adc dec push das das jg push push imul and and xor and cmp ja or add add or or push push pop pop push inc adc inc dec inc inc sbb cs or in lods (bad) loopne call jmp sti (bad) icebp (bad) repz in call jmp mov cmpsb cmpsl test stos stos cld in ljmp mov add push add (bad) (bad) fwait mov mov mov mov movsb (bad) mov mov addb mov fst movsl xchg xchg leave ror ror xor and push jge outsl bound jnp jo aas xor arpl jo push jns dec jo inc dec push inc adc inc sbb adc sbb or pop dec inc dec pop push adc xor imul cmp sub and xor push xor pop pop pop pop pop pop pop pop pusha popa bound and aaa sub outsb xor jb mov jns ljmp icebp mul call in (bad) out jmp mov loopne hlt std lret (bad) cli clc clc in mov int3 rol lret xlat lret test (bad) (bad) popl xchg mov lret mov cmpsl (bad) stos mov cmpsb out popf mov cwtl mov (bad) mov mov (bad) xlat aad (bad) rorl mov lahf frstor mov mov imul arpl js imul adc sbb dec pop pop dec popa gs jae test pusha jnp mov in arpl imul xchg in and lahf sub scas xchg out addr16 test mov stos pushf add pushf xor lods outsl mov sbb xchg lahf jge fs push lret xchg jne sbb rorb ss inc lret mov aad das lret dec out scas jp loope dec outsl jecxz mov repnz jmp fiadd cmpsb xchg stos test scas cmp mov mov mov mov ret (bad) leave leave lret int rcl rcl (bad) aad mov (bad) xchg fstp ficomp loope pop in out ljmp or icebp repnz stc cli push cld std (bad) push add add add or or push mov adc sbb loop sbb and and inc sub inc das outsl xor pop xor pop cmp push aas das inc sub inc inc inc inc push sub dec cmp push push push xor pop cmp pop sub fs addr16 imul outsl add jae jne ja jns jnp jge jg addl mov mov nop out (bad) xchg pushf xchg xchg cwtl test fwait repnz ljmp movsl iret cmpsl fisubrl (bad) scas (bad) mov mov mov mov mov mov pushf les lret int fbstp aad xlat mov mov fcomip loope jecxz and mov xchg out cli lock bnd cmc lahf (bad) mov fwait sti sahf std xchg jmp jo pop add outsb or jne jp pushw jbe jnp ja js insl and push and es sub sub cs xor push aaa push cmp pop cmp daa inc ss sbb dec cmp dec and push and push push push inc cmp pop ds add add push or or push jb je adc jns jnp jge jg and xchg mov nop repz cli xchg sti xchg repz cld lcall mov lret test shrb mov mov mov fstpt fisubl lret scas into cmpsb sarb (bad) movsl fadds fidivr in out sub jmp in mov (bad) icebp repnz negb cld sahf decb add push xor or sbb outsl vmwrite jl push adc jg sub and dec es sub add sbb push bound jp js insb push push adc push je jbe jne and and dec and push daa pop sub dec sub pop xor push aaa jp cmp es ds inc xor inc and and dec adc cmp push and push adc pop dec xor pop adc arpl imul outsl cmp jae sbb js jp jl jle (bad) (bad) (bad) xchg jmp mov mov (bad) in cmc xchg jmp ficoml lcall shll aam clc test lods mov (bad) mov mov mov mov mov mov movsb (bad) mov mov into nop (bad) mov mov fdivs fidivr in xchg out jmp lcall cmc lahf notl std lahf ljmp add add jg insb push jge adc gs dec sbb jle jp jbe push and push es sub dec sub jb,pn xor aas dec xor pop cmp pop aas and inc inc inc jbe dec jns dec jl dec jg push bound gs push push pop pop outsl popa pusha push bound addr16 push pop outsb jno jae inc je inc jns dec pop jl jge in sti xor lods test scas scas or mov clc mov mov addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall (bad) pop in in out sub push jmp and mov addl ficompl mov mov test mov mov cli fcomp (bad) (bad) fcmovnu fstp fbstp and push in jo sub xor aam xor xor xor cmp cmp add add add push pop cmpsb adc or adc adc push pop sbb sbb sbb push pop fs bound gs imul and rolb cwtl xchg mov cld rorb xchg xchg xchg mov lcall jmp cld dec (bad) call in sahf (bad) icebp icebp repnz (bad) div repnz mov (bad) jmp (bad) mov in iret rcl cli cld aam fadd fnop mov (bad) aam xor and push push and pop aas add sub xor xor xor cmp and sub add je adc jp or adc push cmp xor adc adc insb je loopne outsl jo popa imul jp push jl jg jecxz pop push cmp dec dec call jl push pop inc dec inc dec sub pop pop je pop pop stos add cmpsl test or mov pop cmpsl lods movsb lods sbb xchg fwait pushf xchg es pushf cwtl sbbl mov xchg sub enter inc div rorl out stos lock hlt aad xor clc xchg sti cld stc mov rol aad xchg mov fisttp out rcl fld fisub fstp fcompp xor cmp cmp cmp cmp nop and and cmp cmp adc sbb push pop add adc adc add sbb jns shlb jnp jne loope outsb outsl jno imul jns push jge jle loop pop push push dec push dec pusha jmp dec inc out pop push dec and inc push and jb pop pop push std mov mov xlat or scas scas mov mov stos cmpsl mov (bad) test xchg popf cltd cli inc sahf mov das lahf xchg (bad) cwtl mov clc ds lcall mov in inc div mul cltd idiv out lahf push loopne in (bad) fstl clc repz push cld std hlt pop rcr (bad) mov rol mov rcr int3 rcl aad (bad) int (bad) stos aad fsubrl sub daa mov xor cmp inc xchg and adc cmp pushf sbb adc adc ja sbb adc pop adc adc add add add lds outsb jbe adc inc insb outsb outsl jbe js jl insb pop inc jns jno bnd imul dec dec inc cmp dec aas js push push push jae sbbl and rorb mov test mov scas mov inc movsb mov sahf mov mov movsb xchg mov or mov cwtl mov mov orl in out dec clc icebp cld xchg (bad) hlt xor hlt test idiv stc cld mov decb ret (bad) enter xlat aad jnp shll sarl rol hlt (bad) and xor ds sarb pop add sub sub pop xor sub sub add mov adc or or movhps push pop adc sub sbb rclb dec insl arpl push jns imul inc jo insl inc push pop jns js jno push insl jle dec lahf inc inc inc outsl pop pop dec dec dec dec dec dec dec dec push push and push push and pop push pop pop pop push pop mov movsl fisubl lods lods shrl mov mov xor mov mov test mov nop xchg in xchg xchg xchg xchg mov mov jmp in in pushf mov or repz mov sarb cli sti (bad) dec fisub int3 roll enter lret enter stc aam leave in icebp aad (bad) aad or and cs es sub cmp das sub sub xor inc push cmp xor cmp sarb add add add or or jg adc push adc sbb jo popa bound or addr16 jb dec pop jle jae jle pop push jge jg inc pop jae inc mov dec dec pop xor push push and push daa dec jno pop pop push dec outsb stos mov cmpsl mov lods fiadd mov mov xchg ja orl mov fwait adc cltd cwtl lcall aas ljmp jecxz xchg cld in out jmp (bad) repz fisub mov jmp mov aam mov leave clc (bad) rcl fdivrp ljmp fstp lods repnz and and daa cs cmp and and sub dec adc cmp cmp and add and push bndldx sbb sbb xor sbb adc jno jnp dec gs js jno cmpsl outsb outsl jp aad je pop jbe jns push push jge jne mov dec insl mov inc call in inc pop dec inc testb sti dec push inc dec cld dec test mov mov movsl mov mov mov cmpsb mov xchg mov mov mov stos cmpsb inc nop xchg cwtl loope mov fwait lcall mov cmp ljmp out cld jle cmc div jmp jmp ljmp ret shlb fnsave jb fcmovne cld out xlat ror ror aam stc fbld and sub cmp xor sub cmp dec or aaa cmp idivb cmp pushf or push mov stos sbb push sbb mov sbb or add or (bad) je js jge jp jb adc jb (bad) fs fstpt jno cmp inc xor inc ss jbe dec dec xchg lods inc dec push jns push push pop jle pop pop push sub inc pop das mov mov xchg mov stos mov mov xchg stos mov xchg repnz mov xchg lahf xor xchg sub cmp (bad) out dec clc loopne sahf cmpsb repz adcb fcoml div (bad) aaa sti cld (bad) mov rol inc cli (bad) loopne lret adc ret aam shlb lret fbld sub daa and daa add sub es mov xor xor cmp adc ds or enter sbb pop pop pop add adc ds sbb sbb or popa bound je jg outsb jnp sbb outsl outsl jo shlb insb pop inc js jo insl ja or insb inc inc inc dec jmp inc push xor push push lock pop jge push pop push dec pop inc inc (bad) jne mov lods mov cmp scas mov adc mov mov scas mov mulb mov sbbb call mov lahf loopne inc repnz stc xchg xchg cld jmp repz fsubr repnz out out xor cld lea fmulp jmp (bad) cmpsl outsl lret inc xchg iret rcl mov jne rol shrl xorl cmp push (bad) sub and cs cmp and dec cwtl sub and sub sbb pop or sbb or pop sbb mov insl enter (bad) je js jo ja insl push popa push test imul fs pop inc inc inc out dec pop pop cmp pop pop dec inc sub cli dec push inc dec das inc inc mov mov stos mov rcrb cwtl mov mov mov stc mov sub xchg xchg pushf test mov loopne in loope loop jmp in out out sbb repz repz xor cli icebp mov pushl ret out call xchg int vsubsd rcl aam (bad) ror repz fstp aad xor xor and daa pop add sub mov cmp sbb xor cmp sub and and dec sub add add or and xchg sub and ss es xor dec test cmp add sbb or scas or sbb addw add imul outsb jg fwait jnp sbb jge jne inc jno jns fs or outsb jnp fildll pop push push inc inc inc in inc push cmp pop dec pop jge push pop push xor sar mov cmpsb cmpsl mov cmpsl fdivl movsl mov mov mov mov mov cs test xchg xchg nop xor out xchg mov sti ljmp dec cld in loopne pop in test out loop loope inc arpl leave fcmovnbe mov fmulp mov fmul stc into rcl (bad) je rol into test (bad) xor cmp pop (bad) sub cmp das xor and sub inc add cmp pushf or sbb sbb ja or or scas pop add push sbb sbb sbb imul adc inc pop outsb outsl jbe add jne testl jp inc imul dec dec inc cmp push dec aas js push push push jge push pop push inc (bad) jbe pop pop mov mov mov lods mov lods lods test mov mov mov ret mov test clc mov (bad) (bad) sub stos xchg xchg xchg cmp sbbl inc out loop daa jmp out out icebp icebp (bad) jae cmc div shr cli sti mulb mov rol (bad) es mov rcr les stos das int lods cmc (bad) and xor and aaa sub push xor xor sbb cmp ss add sbb sbb sbb sbb adc popa cmp adc adc xor push sbb data16 adc addr16 insl push inc jno jb sbb jbe jb imul cwtl addr16 xor inc inc inc in inc push arpl dec inc inc pop inc pop inc push jle pop pop push stc dec push inc sub mov mov mov mov mov mov mov iret xchg lahf xor (bad) test popf cltd lea cwtl xor mov xchg shl jecxz inc imul repnz push clc in popf dec (bad) sti ljmp jmp jmp leave (bad) in fcmovb enter (bad) sarl (bad) fdivp jl fcmovnbe mov fbld sub dec (bad) sub mov es xchg xor xor cltd cmp add push cmpsl pop or add jle add or pop sbb mov insl outsl ja adc je js jno ja insl push arpl frstor or imul addr16 pop inc inc inc out dec pop pop cmp pop pop dec inc dec jl push push pop sti dec push inc dec sub mov scas mov stos test mov stos stos mov adc xchg ja mov test scas xchg lea xchg sahf aaa xchg popf out mov loope in hlt in iret dec jmp out out neg cmp hlt incl std std (bad) stc call in sahf (bad) enter out into into ret fcmovb fadd cmpsl mov fsubrs fdivrs sub and cmp pop add inc mov xor cmp or mov or or or adc adc outsb sti push pop adc arpl jbe jb pop insb insl fs arpl jb aam js fsubrs popa or pop inc xor inc inc inc ljmp inc dec dec fistpll push push inc push dec push dec ja,pn pop rorb add mov test mov adc stos mov cmpsl xchg mov (bad) mov xchg mov cld das lahf test lahf xor xchg test in mov push int3 stc out out dec sti loope lahf es lock pop stc cli icebp xchg pop (bad) dec dec popf ret (bad) les imul lret (bad) shll bnd fst mov and sub pop pop ds mov cmp aas and sub aaa ds sub and dec xor add adc and or lods push sbb add add addr16 add add fs jne jns sbb jg outsl bound push push lahf bound loopne dec pop push cmp dec dec out pop inc push inc and push and dec and add mov lods lods test mov mov lahf mov mov addl mov mov out mov popf cwtl mov loope jmp call out popf sti in repnz div (bad) pop jmp jmp int ror lret (bad) int loopne leave into jecxz int lds fxch cmpsb call lret rol mov xorb aas push insb xor es mov xor sbb xor cmp dec mov sub add or or or adc sub pop adc sbb adc adc sbb push xor fs imul jo jb je jbe js jp jl jle inc xor inc aad inc dec dec dec dec dec int3 dec dec push pop push push push push push push pop ret pop pop pop fistp mov and cmpsl test stos stos lods lods scas scas mov mov mov mov mov ret mov addl mov and mov test loopne in xchg ja call in call aad cmc repnz jmp ror cld std hlt cmc rol mov out push lret lret clc rcl xlat jbe int3 ret jp ror fcmovb lret (bad) es aaa xchg cmp mov xor xor and and sahf cmp xor add add or and push movhps int3 pop cmp push pop adc or sbb rcrb popa bound dec push insb inc jle jo lods jae jne ja js jnp jge jg ret dec dec inc inc dec push jp dec jmp dec push dec push push inc daa test sub pop pop pop inc scas sub mov mov fldl adc mov xchg mov test mov lea in mov sahf orb out testl hlt decl icebp out push cmc in (bad) loope lock out pop sti loop jmp (bad) (bad) mov imul outsl int (bad) rcl (bad) repz lock fcmovu (bad) cmc into fbld sub and and add sub and xor call cmp cs add add add test add or or mov push pop or sub sbb adc mov bound dec data16 jbe out insl outsb outsb jge add js jnp fbstp ds inc inc out pop pusha jp dec inc inc pop dec jbe,pn push push jge push pop push clc push inc and mov mov scas mov or lods movsl adc cmpsl mov sbb mov cwtl test lock nop xchg xchg xor xchg mov pushf popf cwtl mov jmp out jecxz cli jmp out out (bad) repnz (bad) rcr clc clc stc lock aad inc lret sbb (bad) (bad) enter int3 int iret rcrb rcr fcmovbe xlat fld ljmp and xor pop add sub sub ds cmp sbb add add js or push test pop or mov lar sbb or arpl lds arpl push gs jne jg aam addr16 fnstcw jae push inc inc out outsb in dec inc arpl dec dec dec pop push and pop pop pop pop xor pop pop stos cwtl mov test mov fistp mov mov data16 mov addl push xchg (bad) xchg xchg lahf dec xchg out lcall xchg lret in lock ljmp sbb cwtl ss cli icebp and (bad) lock jmp (bad) push leave mov int3 int out rcl (bad) fsin fcomp fnop repz fstp aad and sbb and aas xor cmp xor jle cmp in adc ds or adc add fadds and or sub add adc sbb les sbb xor pusha and arpl addr16 dec outsb outsl jo jb je jbe js jp jge jle inc repnz inc inc arpl dec nop dec dec dec inc dec dec push pop push push push push push push pop mov pop pop mov test stos stos lods lods scas scas mov mov mov mov mov mov mov test mov nop xchg xchg cwtl xchg lcall fninit jecxz cli out stc fwait cmp in popf (bad) out lock hlt in cli js idiv clc icebp cld ljmp ret shlb mov int3 int insl xlat leave (bad) jno int3 ret ret into jns (bad) lret cmp xor sub daa cmp xchg xor xor sub cs and push adc adc cmp push sbb sub repnz insl fs pop je ja outsb adc or insb inc inc inc dec test inc nop inc js push push pop jge push pop push test sbb pop stos roll movsb movsb aad cmpsb test lods mov mov lds aam mov stos mov mov nop xchg xchg mov inc xchg mov pushf popf xchg mov loope jmp call vpxor sti (bad) hlt cmc cld sub (bad) mov cld mull repz in (bad) (bad) enter out into shl hlt cli (bad) aad fnop icebp lret xlat add and or and pop daa sub sub sub cs xor xor xor ss cmp ds add add add push pop or or or push movups push pop sbb sbb sbb push pop pusha insl bound xchg addr16 imul jno jb je jbe js jp jl jg inc dec inc inc inc dec inc inc dec dec dec dec dec dec dec dec push inc push push push inc push push pop push pop pop pop push pop pop mov fisubl stos mov rcrl nop xchg mov mov test mov mov cmpsb mov mov out cwtl lcall jmp xor in loopne dec into jmp (bad) lock fildll stc cli icebp call enter mov ret leave mov leave (bad) pop (bad) rcl aam ret int3 icebp mov or and dec repnz std sub and and out xor push cmp cmp mov ds add pop adc adc das sub or scas sbb sbb popf pop adc mov sbb or or shrb adc addr16 insl outsb outsb fs push jne jge pop jp jbe outsl jp inc push inc push push pop lret dec dec pop dec pop dec inc inc into inc push inc inc lret dec pop inc dec rorb adc mov mov nop mov mov sub int mov xchg lea test mov (bad) xchg hlt cmc cmc cmc int3 cmp (bad) cltd ljmp repz loope stc sti out call rol loop enter lret shl rcl fmuls (bad) jmp repz (bad) sub or and sub sub sub sub xor xor xor xor ss cmp cmp aas aas add add add push pop or adc and sub cmp or inc sbb xor xor xor ds or add or or movups pusha arpl adc sbb push mov outsl popa adc inc insb outsb outsl jbe mov pop fdivrs jno jp test inc dec dec dec inc push inc (bad) (bad) and inc aas mov pop pop cmp js push mov mov cmpsl mov lods mov xchg cltd mov mov test mov addl mov lahf xchg xchg xchg (bad) movsl xchg xchg test sahf mov shl jecxz mul xchg nop out fwait (bad) in out out idiv subl std mov sti cld imul sti rol mov loope mov leave leave lret movl mov (bad) cld fldt xorb xor sub mov xor cmp pop and inc push cmp cmp mov das or push test mov jge add mov mov (bad) je js pop inc imul pop pop (bad) jae jg stos js jo push inc jg inc push dec push dec push xor outsb dec cmp dec dec dec inc faddl push inc inc dec jno pop pop push dec shr mov js test xchg sub (bad) mov fldcw mov cmc mov jmp xchg mov std mov mov cwtl mov lock iret in loope clc jecxz shr jmp jp idiv out pop clc cld xchg jae dec (bad) cmp movsb ret test fdivl iret xchg (bad) mov ret xchg xor iret and es mov push add sub cmp adc inc adc cmp cmp mov add add imul bts sbb lods add adc adc shll push les pusha add insl outsb gs dec in je or jns or jle push imul mov dec dec cmp inc push and add movsb pop cmp xor shr mov test mov jge mov mov mov mov (bad) mov scas mov mov lds xchg xchg pushf clc jns lcall (bad) loop in xchg lods cli call in in adc repnz shl repz sar mov (bad) mov (bad) mov icebp (bad) (bad) sub lret fdivrl fldz jl sub pop int3 lret ljmp push push adc sub inc push out cmp aaa xor xor sub ds add sbb pop jle sub pusha cmp adc add or or sbb imul jl mov outsb gs repz je jge pop jns jp mov xor inc inc inc pop cmp cmp push push inc pop inc pop aaa push dec push iret mov mov movb mov mov cmpsb mov mov inc (bad) xchg or jbe ljmp xchg pushf stc sbb lahf shll cmc out in fwait shr popf clc (bad) mov (bad) mov cld mov fdivr (bad) (bad) inc rol dec rol (bad) leave fisubl insl sarl mov (bad) aam xor sub es and cs cmp xor adc scas cmp cmp ds add lar or sbb (bad) add adc data16 add push sbb add je adc add jbe cmpsl push ja push jle push sub pop dec aas cmpsb push pop dec push daa jo pop pop push xor mov xlat pop subb scas fistp ficoml mov iret stos xchg xor icebp iret cwtl xchg mov loop (bad) nop fwait mov in je cwtl xchg mov inc div xchg xchg shl out (bad) in lcall mov hlt ljmp sub (bad) hlt cld std hlt in int rol (bad) iret sbb loopne lret lret lret (bad) lds (bad) (bad) fcmovu lret fbld and aaa xor cmp sub es xor lgs cmp sub dec inc aas add insl faddl inc or adc push popa and sbb or popa fs imul add jb jle jns push js jge insb jns into inc inc dec push mov dec dec inc pop mov xor fstl inc cmpsb pop add pop stos mov mov test aam lods lods stos fstpl popf out mov lods mov rep test popf mov std test mov cltd enter out inc (bad) mov loopne daa in in in loope ficoml cmc cld cwtl and lds rol rol (bad) (bad) mov rcr les fcomp test lret (bad) and xor es add xor inc pop (bad) xor cmp sub jmp pop jae push add cs in or pop popa cld xor addr16 imul insl ss test insl dec js sbb add outsb je pop inc js jo popf jge jne push inc xor inc aaa dec cmp push dec cmp pop cmp push push pop jle sub pop pop push lcall mov fcompl mov mov mov cld mov mov test (bad) orl mov xchg xchg xchg addb mov lahf loopne hlt outsb repnz out std inc xchg in out in jge repz hlt loopne es cli icebp lds inc rcl mov vshufps mov add mov mov sbbl mov popl xchg jno mov xchg mov lcall loope jecxz leave out (bad) call out out (bad) icebp repnz cmc div clc stc cli sti out sar incl ret call lret int into rcl rcl (bad) clc (bad) xlat mov repnz and and sub mov cs mov xor pop sbb aaa aaa cmp cmp cmp add imul or aad push clts adc adc sbb xor pop xlat pusha bound push addr16 outsb outsb jb jb inc inc jbe adc jp jecxz jle push inc inc inc inc inc inc inc dec dec dec dec dec jl dec out push push jecxz push push push pop pop pop push pop pop pop mov xchg cmpsb cmpsl les scas scas cmpsb mov mov mov mov mov mov cmp xchg orl xchg or lcall loope jecxz in out jmp out out jne repnz div idiv cli sti repz (bad) inc rol hlt repz enter cli into iret (bad) rcl aam (bad) xlat fcomp fcmovu cld jmp fbld adc daa daa sub sub sub xor xlat add aaa push cmp cmp ds push add add or mov adc adc push pop pop sbb sbb sbb bound pop data16 push je outsb outsl data16 jae jne ja jns jnp inc jle testl inc inc dec dec dec inc dec dec dec push push push push cmp push push into pop pop pop mov mov cmpsb cmpsb test stos stos sahf nop scas scas das mov mov mov mov fwait mov orl mov lcall popf mov mov loope in or out in cli jmp sti loope in loope or cli icebp in stc std nop xor ret rol cmp lret in iret rcr (bad) movsl and fnop enter mov and sub sub and xor and and xor cmp das cmp cmp add push adc push push mov es add sub sub add inc sbb xor xor cmp aaa xor jb add decb or add adc sbb jns sbb adc or pop pusha imul addr16 xchg push data16 pop lea jle jb lea jno cmpb push dec popf push pusha outsb dec dec dec inc pop inc pop inc addr16 push push pop mov jge pop inc imul test cmpsl mov xchg mov mov push pop mov mov rolb mov test call fwait mov loopne call loope aaa out jecxz out in loope repz sub fnop stc in (bad) icebp inc lret leave ret in aad mov out into rcl rcl aad idiv (bad) aam fstp les and add sub pop (bad) sub inc mov cmp cmp or das add cs or or and adc push cmp push aaa popa popa bound dec bound imul jl jge je pop addr16 jo jl jle pop jae imul dec inc dec bound dec inc xchg push push push jns push push push dec pop pop pop pop pop pop sbb mov cmpsl mov lods lods scas mov mov mov xchg xchg mov mov pop test mov loop xchg xchg xchg xchg ljmp lahf loopne lea std jmp pushf sbb icebp (bad) fcomi cmc div out out out shll mov ljmp in iret rcl (bad) std mov fcom cld repz fcompp dec sbb and push or sub sub xor xor aaa ds (bad) cmp add imul pop add or and push and fs or pop pusha imul data16 sub push inc jno jb arpl pop and add inc inc outsb insl insb inc inc inc dec es dec inc cmp bound jnp push push push sub imul cmpsl rorb movsl (bad) (bad) test push scas mov int3 stos mov mov xchg xchg mov xchg mov mull decl mov xchg xchg nop in lcall out lea in cltd hlt jmp pushf pop (bad) icebp (bad) fcomi cmc div out out out shll mov cmc les int3 fstp fsub xchg rcl fdiv stos into (bad) xlat fdiv mull push dec adc daa sub cmp and or inc pop cmp cmp add add pop add das and or add adc enter sbb cmp adc push addr16 insl inc cs jno jae jne ja jns in jge jle inc inc inc dec inc inc inc dec dec dec dec push jl dec xor push jne push inc jg pop pop push dec jne pop mov test xchg lods lods test mov mov mov call mov mov xchg mov mov ljmp lahf loopne lret in stc (bad) rcl in jmp xor fscale repz (bad) fsubp clc stc lock fcomip out lret (bad) ret leave loop int3 int adc rcl stc aam (bad) (bad) enter (bad) fiadd and daa xor sub dec sub cs and and push inc mov cmp cmp aas push add jne xor jnp or movhps adc insb adc aaa adc jae push pop push push gs addr16 add insl outsb gs jo pop ja je jg jnp push jle pop jae imul dec inc dec bound dec inc xchg push push push jns push push inc push pop pop js mov cmpsb lods movsl mov cmpsb xor mov mov mov stos mov or mov mov xchg xchg pushf pushf cwtl mov fwait pushf xchg inc lahf loopne enter out jmp in out popf pop clc repnz div (bad) rcl sti cld (bad) mov vshufpd out lret (bad) in iret rcr call test fcmovnu (bad) div and sub sbb push add sub sub inc fdivrl cmp cmp or cmp or and adc push jo,pt insb and imul pop dec dec arpl rcll inc insl insl outsb imul dec ja jae cmp xchg ja xor inc inc inc outsb imul dec aas js push push push jge push pop push sub gs ja,pn mov cmpsb cmpsl mov fldl fwait fwait mov mov mov mov (bad) test mov test xchg xchg xchg mov lcall xchg lret in iret (bad) jmp out out cli xlat sub fdivr div repnz sti cld mull (bad) mov mov in mov enter rcl fisub repnz fstp lods push sbb push or es add sub pop insl or inc sbb push cmp ss gs add fmull sub push pop add sbb or rorb cmp adc xor sbb sbb adc mov data16 push insb mov dec jne jle je ja js jnp sub inc inc inc push je inc or dec dec push dec dec pop cmp push push pop pop push inc test pop cs (bad) movsb movsl lods mov lods cmpsl test mov mov mov cmp xlat fistpll xlat addb mov mov test sahf dec xchg xchg cwtl mov mov loop in notl jmp adc mov xrelease lahf cld std hlt stc xlat scas movsl ret (bad) iret shl leave lret int (bad) mov sarl icebp (bad) shr or daa add sub es xor xor add ss cmp and add push add stc push dec or or movups jge adc sbb pcmpeqd sbb sbb popa bound in aad pop punpckhdq imul jo js je imul ja jg push inc inc dec fwait inc inc dec arpl jl dec inc push push push jnp push inc dec inc aam pop pop pop dec pop mov mov xchg lahf cmpsb xlat subb stos cmpsl ret (bad) mov mov int mov xchg xchg incl nop loope xchg xchg xchg nop xor cmpsw sahf out enter loop mul repz (bad) shr popf (bad) out lock hlt push in ljmp cld (bad) inc arpl (bad) fnstenv loop int3 int insl rcl mov lock fcmovnu jg fstpt sub pop and sub cmp sysenter inc push cmp cmp sub pop add pop or test or add sub push pop push mov insb mov gs lret je pop adcb pop jb jne aad jge je pop inc jg imul dec push pop cmp jo aas js push push push testl popa pop ja,pn mov mov xchg lods fldl adc push xchg addb cmc xchg mov sti movsb mov xchg mov ljmp lock repnz cwtl fld1 cltd ret in call in inc enter sti sti cld sti pop out (bad) (bad) mov sti (bad) mov enter outsl (bad) iret enter aad (bad) (bad) fcmovu jle fcmovb cmp sbb push push sub sub cmp dec or aaa cmp cwtl sub aaa sub mov or or add sbb adc xor sbb xchg test repz jae aaa push gs pusha scas jne push dec movsl js xchg dec inc push inc ja bound push jle inc push push pop pop push jge push pop push test pop je nop mov cmpsb mov xchg mov xchg mov mov out mov test xchg mov popf push xchg mov imul jmp fucom test in in in xchg repnz repnz insb cwtl (bad) stc cli icebp xchg mov dec in (bad) lret stos xchg mov pop (bad) ret fcmovb (bad) sti (bad) aad fldl (bad) int3 or xlat into sub in and lock cmp sub xor sub adc aaa cmp xor cmp or add push sub sbb push movups adc je sbb sbb sbb sub push cmp bound gs dec inc fs insl fs popa jb jle jbe js gs pop push jno inc dec dec inc insb push inc inc inc xchg dec dec dec addr16 dec inc push push push push push push push pop pop push push pop pop pop inc nop movsl mov mov xchg scas fistp (bad) in mov mov (bad) mov test aam mov cwtl insl lahf xchg xchg in fstps lahf out out loope sub call in out jecxz fprem repnz lcall repz repnz lret lret loop (bad) cmpsl (bad) lret lret mov aam shll (bad) mov fcmovnu (bad) aad xchg bound push or sub es pop scas jb inc sbb mov dec adc insl stos add or add or fisttp (bad) adc sbb sbb pop pusha addr16 outsl outsl out add jl outsl jp jae je jnp pop imul outsb js inc inc push inc lret sahf dec dec inc inc and dec pop inc push inc push cmp pop push dec push dec push sub mov mov enter mov cmpsl mov mov xchg mov mov mov popf xchg push lea fwait mov fstpl cwtl (bad) clc jecxz out cmp imul vpsubd (bad) stos out lock loop,pn lcall xchg daa (bad) dec pop (bad) ret (bad) into cmpsb mov int3 (bad) adc fcomip cli (bad) aad (bad) (bad) icebp lret xlat add or and pop add daa sub and sub cmp xor ss inc cmp add add push push or or or adc adc sbb sbb push sub bound imul imul jo jb je jbe js jp jge jle inc inc inc inc inc inc inc inc dec dec dec lahf dec dec dec lret push push push or push pop pop pop pop pop pop pop pop pop mov movsl cmpsb shrl scas mov mov mov mov mov lock leave mov movsl (bad) (bad) nop xchg std mov pop fstps loopne xchg clc in in loopne cmc jmp out xor ljmp and ror leave in aad mov int shl hlt cli (bad) aad fnop icebp lret xlat add and or xor es sub sub push sub xor add sub cmp pop cmp das inc aas add pop cs and or add adc enter xor sub push pushf pusha popa bound sbb push inc inc adc jno mov ja jg out jl js cmp inc cmp inc dec pop mov add dec dec and push push push cmp pop pop pop (bad) pop pop ficomp mov xchg test test mov mov and mov mov (bad) int xchg mov (bad) nop xchg xchg mov mov xchg xchg lahf enter out cmp out ret ljmp cmc (bad) repz aad (bad) (bad) cli in shll (bad) stc ljmp enter ror fmulp rcr or aam cld (bad) repnz enter ret and and and aaa pop push sub sbb xor sub cmp loopne add sub xor push push or and and cs cmp das xor ss ds lahf cmp push mov test pop or dec or and outsb push adc adc call sbb pushw cld arpl addr16 bound jp jb fs jge jns jnp jge dec inc inc incb inc dec inc dec pop bound dec dec and push pop cmp push push push pop sub sbb mov shl test (bad) stos lods lods test sbb les cld mov mov xor xchg mov sahf (bad) xchg in xchg cwtl cltd pushf jmp enter loop dec out jecxz in sahf popf stos out sbb repz repz stc mov std std (bad) stc scas push (bad) mov enter in iret rcr (bad) std into stos (bad) fcomp test cltd (bad) and sub stos and sub aaa cmp xor adc ds or add add adc or insb push adc adc cmp imul mov imul jb aas jae jne ja jns cmp push push push mov inc cmp dec dec dec gs push push push rcll sbb pop jno dec pop cmpsl cli mov test lods addl scas test xchg mov mov mov test (bad) lea nop xchg mov fcomps mov xchg mul out cmc in sarl hlt (bad) repnz lcall call loope ret nop mov cmpsb pushf lret int3 (bad) out rcl fdivrs fmulp fdiv enter out and daa sub add sub pop and sbb jl dec push add add sub aam and push bndldx add adc enter dec sbb or insl push insb insl pusha outsl arpl insl outsb imul sbb push jge jne push push bound dec dec inc inc dec addr16 push push pop mov push jb pop dec pop pop pop pop mov test mov test popf cmpsl mov (bad) mov movsb sahf clc mov xchg out mov mov addb xchg xchg xchg cltd pushf subb fcomps popf mov pop cld fidivrl idivb loop in ljmp rol lods mov (bad) int (bad) fmul push mov stc faddp pop sahf fcmovu fdiv int3 leave mov xor xor cmp cmp cmp push cld dec jne xor sbb in cmp aas add push or or sbb push adc adc adc jae jae xor outsl enter sbb cmp pop jne jbe fisubrl bound jg push inc push inc aaa ds dec cmp dec dec dec addr16 push pop testb adcl sub dec push mov loop test aam lods lods stos (bad) hlt mov mov lcall mov addl lret jo mov nop out fstpl popf cwtl mov loope jmp call cmpsl out lahf fdiv repnz idiv repz cld std cli and mov (bad) int3 mov fsub adc fld out jnp fcomp movsb rcr fstp mov dec stos es and sub inc mov dec jno aaa cmp mov cmp push cmp add jge add pop or sbb outsw sbb adc push je sbb or je js sbb daa outsb pop pop jo jae arpl js jo (bad) jl addl cmp dec dec and dec dec inc dec mov and dec jne pop mov mov cmpsb testl mov cmp sarb mov mov xchg (bad) mov xchg lahf stc mov cltd nop cltd adcl in in jecxz add out lock fdiv cmc cld ja stc cli jmp sub inc jmp test movsb jmp into (bad) mov leave cmpsb rcr fcmovnu scas mov and and sub lods and scas ss xor xor and xor cmp dec add pop or and or adc leave insb adc sbb add pop pusha popa adc sub inc push inc outsl jo bnd jne stos jl,pn jnp bound pop mov aaa inc dec dec dec cmp sbb and push push push jo pop pop push fstl mov movsl cmpsb movsl mov push stos xorb ror mov nop mov xchg mov test mov mov lcall cltd ljmp into loop out gs out in aaa or in out in out fld in mov div cld mov rol jmp (bad) dec ror enter rcl ror icebp out test scas fcoml and push or sub stos and cs lods xor sub or inc xor add add pop push and pop adc push into outsb adc pop sbb xor add pop pusha adc push dec imul outsl jp jp je stos and jns pop dec popa ds inc inc inc aaa int3 pop dec cmp dec dec dec addr16 push pop aam push push pop test pop pop pop inc test cmpsb mov faddl lcall mov mov scas mov clc (bad) mov (bad) mov mov sbb push loop jecxz lds call in out hlt and hlt test idiv stc cld rcl std (bad) cmc inc leave ret sbb (bad) enter out (bad) (bad) mov rcl xlat cmpsb inc test test fcmovnu (bad) div and sub cmc mov sub xor add dec cmp cmp cmp aas push sub invd or (bad) mov push movlps pop and imul sbb outsb aaa popa popa bound dec data16 jmp adc jno add push jp jbe jbe inc inc lahf or inc inc push cmp xor dec push and push and pop jae pop pop push and mov sahf mov mov int3 loop enter mov orl mov in fwait xchg xchg xchg in int jmp pushf sahf lahf out int in out call out out out repnz add clc std mov test rol in ljmp int3 leave adc rcl ror mov fcmovu fsubrs or and and pop sub and scas xor and xor cmp push add pop or and or adc leave insb adc sbb add pop pusha popa adc popw inc push inc outsl jo bnd jne stos jnp,pn jnp bound dec pop aas dec inc inc inc xor push dec cmp dec dec dec js push push pop aad push pop pop xchg pop pop pop mov lods cmpsb cmpsl lods fildl lods fldl fwait fwait mov mov mov addl (bad) inc (bad) xchg xchg mov sbb jecxz in stc popf fcomi xchg jecxz in ljmp hlt div (bad) rcl sti cld idivl rol push push (bad) mov (bad) mov (bad) mov iret rcl mov (bad) (bad) fcmovu hlt repnz sub sti subb sub xor xor xor outsl cmp cmp add test mov or or adc xor sbb push xor or or push jp outsl xor jmp jne jbe fidivr jbe or dec xor inc outsl dec dec dec dec and dec dec pop jge push fadd push push pop ss pop pop push ficomp mov cmpsb cmpsl (bad) mov cwtl divb mov lahf xchg mov mov addl mov sub xchg xchg lahf push lahf cwtl cltd sahf (bad) sbb sahf lahf in push jecxz in loop jmp out in fdiv repz (bad) idiv call nop ljmp cwtl in mov int3 int int stc mov aam mov repz aad sub and sbb add sub sub xor cmp aaa aaa xor les adc ds push outsb and add imul adc push adc jne sbb popa bound insl data16 inc xor insl outsb imul sbb js push jle jge adc inc dec sub inc inc push push xor dec push push ljmp cs pop push jne pop mov movsl mov stos lods test mov mov (bad) mov mov xchg mov addl mov dec xchg mov mov xchg lcall loope jmp ret imul in out out lock repnz cmc out clc stc ljmp ror (bad) (bad) (bad) iret leave pop lret int3 int iret rol mov (bad) (bad) and popf and and sub je sub daa and and inc cmp bound js cmp cmp sub add push add or cmp adc add xor arpl outsl push xchg addr16 push pop jl jne fs push jl mov (bad) inc inc inc sub dec dec inc dec fs push dec pusha jbe pop push push push push pop jae pop pop push jle mov mov test icebp lock mov mov sahf mov rcr addl mov loope xchg xchg pushf pushf lahf fwait loope pushf popf lcall in xlat jmp in fsubr lock fdivp cmc cld cld cli (bad) stos sti cld stc aam rol repz (bad) enter int3 fdivrl fsubs rcr fstp fidiv dec adc es sub sub aaa push xor inc cmp push or pop pop add add adc adc add sbb push sbb gs or fs jns jb pop insb outsb gs je sbb je jge jp scas jl je inc push inc sub inc inc dec pop dec pop dec pop dec pop pop push (bad) cmp push push pop push xchg pop xor mov movsb cmpsb lods je mov (bad) hlt mov mov mov mov addb xchg (bad) sahf xchg leave cli xchg lahf xchg xchg cwtl cltd subl in repnz fwait (bad) jmp out popf (bad) icebp icebp clc (bad) std std (bad) repz xlat sti sti notb lods repz aam mov (bad) rcl aad out xlat ror ffreep mov (bad) sub daa cmp daa daa and sub cs pop add aaa xor cmp sub add pop pop add aam sbb adc sbb pop pop adc les adc and popa dec leave imul jo jo cmp adc jp jl jl dec inc sub dec dec push jnp dec iret dec push push push push inc inc pop sub push push sub scas lods lods mov mov mov mov mov lods mov mov mov loope xchg xchg cwtl fwait xchg cli inc xchg cwtl xchg mov loope call imul (bad) sti out bound fyl2x icebp clc clc sub out xchg into sti sti div xchg (bad) and jg inc push arpl dec dec dec dec dec into dec inc jno jbe pop jp pop pop pop pop fcompl jg test lods mov stos mov mov mov cmp mov scas addb cltd test mov xchg adc xchg cmp lahf loopne vpalignr out ljmp jecxz cmc rcll sti cld std jle shl call (bad) enter dec int out mov movsb fsubr aam xlat fcomp pop fcmovne std push stc pop cs and cmp in or xor mov sub rcrl add add test lcall adc xor sbb jae push inc and daa push out outsl popa push aaa push ss jbe jns jnp jge pop sbb dec or dec dec lret insl xor adc push push push push push fcomps jnp jp pop repnz cmpsl mov mov mov xor cmpsl xchg addr16 adc addl scas cmp mov scas mov cs pushf popf sahf lahf out ljmp jmp clc iret fisttpll idiv stc jp ljmp ret mov leave fsubr sbb hlt fbstp aad xlat (bad) (bad) negb repnz and daa daa data16 cmp cld xor xor xor push cmp ds add add sub xor pusha or fisttp and jo sbb sbb nop dec mull fs push insl testl mov insb jnp push xchg outsl sub xchg inc inc inc inc pop push pop dec rorb je push push push push push dec push pop or pop sbb mov push mov jne scas mov mov mov mov sub xchg mov or (bad) dec cwtl cltd lcall lock loop in out jmp aad xor repz cmc cmc idivl in mov rol ret mov iret fnstenv rcl xchg (bad) enter mov fbld and sub sbb sub xchg sub daa dec cmp cmp aas cmp sub mov pop or or dec push adc and fwait adc sbb adc and arpl addr16 je jg outsb jo jb ja xor push imul inc inc inc add addr16 pop rorl dec dec dec push push push dec pop push insl push (bad) pop pop pop pop pop pop pop out pop mov test stos stos scas lods call mov mov mov daa (bad) test mov aaa nop xchg xchg xchg xchg xchg xchg ficomp aaa sahf loopne loop out mov stc pop in out out lock icebp repz call cli cld std (bad) inc rol int3 (bad) std ret jno lret int iret xchg (bad) ja inc (bad) insl (bad) fcomp fcmovu (bad) cwtl fsubl add daa sub sub push xor xchg and aaa cmp cmp xor add add scas adc pop int3 push adc adc pop adc xor ficompl pop pusha popa popa arpl data16 daa jnp push insl outsb outsl jae je jl dec jae js jnp jge jg inc out loop mov dec dec dec dec dec or push inc xchg pop pop pop pop sbb jg mov mov stos test xchg stos imul pop movsb add (bad) addl inc cltd outsb mov xchg rclb jle pushf popf sahf lahf jecxz in in out jecxz call in out mov push in adc stc cli sti (bad) std mov (bad) aaa (bad) mov leave leave lret mov shr sub daa sarb or xlat fcomp fadd aam (bad) (bad) and cld and es sub andl or xor xor xor cmp cmp loopne add add or (bad) or adc sbb and in mov pop arpl push fisub mov insl insl addr16 inc jb je test jns jnp jne dec cli inc mov inc dec dec dec inc insb jl dec scas push outsb mov push push push pop inc push pop minps mov repnz (bad) mov mov mov movsl mov xchg mov mov fwait xchg orl push xchg mov xchg sub fwait pushf popf lea out dec add jmp or lock icebp rclb div clc stc jmp jmp ret bound (bad) (bad) fcmovne (bad) stc int3 fxch int ss aam (bad) jmp iret (bad) xchg and and aaa and sub rol das xor and add and cmp sarb cmp add add or adc pop pop scas sti sbb sbb nopl jne popa push mov push pop outsb jnp jae sahf je jbe imul jl jge inc inc inc inc les adc pop dec dec ret push push push inc push sti gs push pop pop lods pop pop mov xchg cmpsb mov stos cmp lods scas scas mov mov mov mov lea mov add xchg xchg cwtl cltd mov ljmp out jmp in xchg or repz cmc in and cli out idiv adc rol xlat lds hlt enter inc xor iret rcl rcl loope ret rcr dec fcmovnu fstp fbstp and pop and sub sub mov xor das cmp push add pop pop or sbb cmp push sbb adc adc sbb sbb adc fs es push pusha outsl push arpl jb addr16 inc js jbe dec jae jg inc push inc (bad) jno push inc dec push pop dec dec dec dec inc push jmp push pusha dec pop pop pop pop dec pop insl xchg xor test lods jbe mov mov mov mov mov xchg test push mov mov xchg xchg xchg xchg test xchg lahf adc mul adc call imul out lock loope add or call std (bad) call rol (bad) rcl (bad) lret lret int3 int iret cmpsb in mov (bad) fcmovne frstor cld (bad) daa sub cmp mov xor sbb cmp cmp add adc cmp pop or sub sub sub sbb sbb aaa cmp cmp or daa and add push adc and or or and adc adc push and cmp push push push cs pusha popa bound pop push addr16 push outsl jo jb inc in imul jle inc sbb pop inc xchg jnp dec dec dec dec push inc push add push lea pop pop pop pop pop xchg dec push andb test mov test scas lea mov mov mov call mov xchg xchg mov sbb xchg mov inc cmpsb pushf sahf lahf loopne loop (bad) xor ret ljmp (bad) lock push repnz hlt test in (bad) sti negl call enter aam int3 pushf sar rcrb fmul (bad) jmp (bad) repnz es adc cmp add jo xor xor and jle add add adc or adc adc inc or sbb push add sub imul inc or jbe aaa jbe jns insl jl dec xor add pop dec icebp jnp push js push push push push aad inc js insl sbb pop pop mov mov dec lahf out nop scas lods scas scas mov mov xchg mov lock mov aas adcb mov mov stos lock aam (bad) ficompl sahf (bad) fmuls mov call js dec (bad) mov iret mov out cli arpl fsub mov (bad) (bad) enter int3 mov inc fwait rcl rcl ret (bad) jno dec fstps and and xor jnp sub das xor xor cmp cmp cmp cmp or cmp dec add or or or or pop push adc sbb sbb pusha arpl fs outsl jb jb jb je jbe pusha jno inc js jl inc inc inc inc inc add push pop push sbb dec dec push push push adc inc or pop pop mov andl test mov mov mov sti mov aam test int lea xchg xchg xchg xchg xchg cwtl fistp ret loop in out lock shr (bad) in out lock repnz mov push out out (bad) std (bad) inc ret mov enter into int3 rclb lret (bad) fcmovnu (bad) fnstcw sub sbb dec and sub sub sub sub pop ss cmp cmp add add push add dec or adc adc adc push adc adc and push pop pusha popa bound and ja jbe outsb insl outsb outsl jo jb ja push mov js jl jle inc pop inc pop fs inc cmp dec dec dec dec dec dec dec pop push push pop pop pop pop pop sbb mov movsl cmpsb cmpsl test stos in scas lods mov xor mov mov mov addl mov add (bad) nop xchg xchg nop xchg rcll adc loop movsl out (bad) fs call in lock in aam ljmp std (bad) inc or or push (bad) fildl int3 into fsubrp ds inc (bad) movsl xchg fcomp fcmovu fdivr in cmp and sub sub push sub mov xor ss cmp pop add add push mov push sbb adc adc sbb push pop pusha bound addr16 push or insl outsb imul je sbb jnp jnp mov pop fadds and dec dec dec dec inc jne inc int3 push mov push push push pop pop inc push pop push mov mov sbb lods mov mov mov mov mov mov test mov jmp mov test xchg xor popf sahf mov (bad) jae dec in sub jmp sti out mov idivb idiv stc cli std in cld lods shrb (bad) mov (bad) mov rclb rcl aad rol rcr mov jo dec dec and and sub adc das xchg cltd inc xor xor xchg or cmp cmp aas add sbb push push push stos or or or push sbb xlat jg,pn mov sbb pop insl imul push xor rep ret je jbe jp jp jl jnp inc inc inc rolb inc inc dec fimull dec dec dec inc pop push push push push pop pop push pop pop pop pop push pop pop pop mov movsb cmpsb mov xchg mov repz (bad) mov mov addl xlat orl xchg cld xchg cltd mov lahf loopne loop jmp jb jmp jmp repnz pop clc idiv clc cli daa repnz (bad) std shlb fadd leave lret out ror rcl stc fcmovnbe (bad) rcr jmp fcmovnu (bad) xchg das and and sub sub sub sub cmp push aaa cmp cmp add add add add rcrl adc adc pop pop sbb sbb or cmp data16 imul jo jb data16 je outsb push popa push inc inc inc inc mov dec dec popf pop dec dec dec push scas inc push push push push push dec pop pop pop pop add mov movsl cmpsb cmpsb test mov xlat mov and daa scas mov xchg addl mov xchg int xchg xchg xchg cwtl leave mov mul loop in lock in ljmp pushf in aam div clc stc cli cli cld mov inc rol rol mov jb lret in iret into or aam rcl fcomp cmp fdivr frstor iret xor and sarb sub sub xor ss cmp ds pop add add adc or or adc push xlat nopl sbb or pusha pusha bound push insb outsb imull jb je jns js jp fs jge mov inc inc push dec dec dec dec inc push dec push push push (bad) pop push push push pop adc pop pop pop subl mov and and sbb mov cmpsl mov popf test mov xchg xchg xchg cwtl mov xchg clc jecxz out mov jmp hlt in (bad) cmc repnz out cmc div clc xchg loopne cld sti decb les lret int into rclb (bad) and (bad) fcmovu mov fbld and leave cmp sub fisubrl xor xor sub cmp cmp daa cmp push add push in adc or or adc stc or add sbb push cli jge bound inc js push insl outsb insl jo insb jae jbe cmp jp jl pusha jg inc inc das pop inc inc inc dec cmp dec dec cmp push push push cs push pop pop pop lret inc pop pop pop mov movsb cmpsb push mov stos stos lods pop mov mov mov stos mov mov jp mov sahf addl push xchg lea xchg xchg xchg xchg js cltd lcall loopne mov call out out mov hlt jle idiv sti cli arpl std (bad) inc or (bad) push xlat leave lret sbb iret rcl rorb lret aad rcr xor fcmovnu (bad) or and and push daa sub sub xor sub loopne cmp cmp and add add or or push push xor adc adc or sbb push push pusha cmp fs dec imul jo jb push jne jbe bnd jg out inc inc inc inc push inc dec dec dec adc dec push lea push push push mov pop pop jle mov movsl cmpsb cmpsb test mov nop mov mov ds and shlb (bad) push xchg (bad) nop xchg xchg jle xchg xchg xchg cwtl ret mov xchg shl loop mov out jmp mov in out out lock repz div outsl out cli cli cld scas fdivrp rol cltd in mov adc into and rcl rcl (bad) not fcomp fcmovbe cld fstp fisub jb and es sub sub xor xor xor cmp cmp ds add add sbb or push push adc adc push sbb sbb ds pusha arpl inc gs imul outsl jno jb es ja jnp and jl popf pop inc inc inc inc stos push dec dec dec dec pop outsb dec push push push pop je push push pop or pop pop pop add movsb cmpsb xchg lea xchg mov mov scas cltd mov lahf mov movsl test mov xchg xchg xchg divl push sbbl jecxz loope xor jmp iret out lock cmc div clc or (bad) je rol les (bad) enter in int int or (bad) cmp (bad) fcmovu xlat (bad) fbld and jo and or sub cs adc xor xor adc cmp ds xchg sub or or sub adc push push sbb push lods inc popa bound fiadd push outsb outsb jo push jae je xchg pop jns jns xchg pop jg inc inc mov inc inc inc dec ret dec dec dec xlat dec push push push push cld jne pop pop pop xchg pop pop mov movsb cmpsb lods mov lea stos mov mov and push mov pop cltd xchg lea xchg xchg xchg xchg ds push sbbl call out out cmp icebp repnz das aad clc std cli daa jecxz (bad) cli shrb call add iret rcl rolb not (bad) aam add fcmovnu (bad) stos add and and add sub sub xor ss cmp cmp sbb add add or or push enter adc xor sbb sbb cmp inc arpl cltd dec imul jo jb push jne jbe push pop jnp jl ds inc inc inc add dec dec dec xor dec dec dec push (bad) ja push push push bnd pop pop pop idivb mov movsl cmpsb cmpsb test mov xchg mov mov movsb nop mov mov mov addl mov xchg lods mov xchg xchg cwtl fdivrl (bad) loope loope add call in out jmp adc hlt lock jb inc ret ret (bad) enter int3 leave into insl not rcl aam lock fcomp ficompl cli fstp frstor jmp and es push sub sub or xor xor adc sbb sbb add add and or or or xor jg sbb sbb cmp pusha arpl inc gs imul push jno jbe lret js jp pop jge jge test inc test dec dec dec dec mov push inc jl push push pop inc jb pop pop pop jp mov mov subb mov mov push xchg mov xchg mov test xchg mov xchg xchg xchg sahf mov mov inc int3 jecxz out inc (bad) jmp shr repz (bad) div clc cwtl aad cld cld (bad) xchg out rol les lret int int je rcl aam and (bad) (bad) and fbld and test and xor daa add xor xor sub cmp cmp and and add push (bad) and and sub das and xor ss cmp sbb sub add add cmp or or adc pop adc push sub bound gs push jb outsl jl lahf insb je ja jb jp jl jle inc inc inc inc push jne inc dec dec push jnp dec dec dec jne push push push push js pop jns pop push pop pop cmpsb mov mov stos movsb lods in mov mov mov mov mov addl mov xchg xchg cmc mov inc xchg and jecxz out (bad) call in out out xchg (bad) repnz xchg xbegin loop inc rcrl (bad) cmpsl stc lret int call rcl rorl lret (bad) aaa (bad) (bad) (bad) sub and and sub sub cs xor mov aaa mov cmp add jno push pop or mov or or xchg and adc adc sbb rolb pop addr16 (bad) jl gs insl loope jo jno jle jbe js jp jl jg das jno inc inc inc xor dec dec dec int dec dec push push aam push push push push xlat imul mov mov enter lods scas insb scas mov mov pop test mov mov mov test mov xchg xchg xchg mulb std stos pushf popf popf lahf cmp loop loopne or call int iret lock repnz cmc div lcall iret rol ret dec fcmovb (bad) lret aam int iret mov aad out (bad) fstpt (bad) and mov and and popf sbb sub sub xor aaa cmp xor cmp aas aas outsl xor add add or stos cmp mov pop lods sub sbb popa pusha arpl jp imul outsl roll jae jne inc js jle ret jg inc test inc inc inc xchg push dec dec dec dec mov push xchg gs push pop pop push jnp jge pop mov movsl leave xchg test test or mov xorl mov addb xchg lea xchg xchg xchg jecxz cwtl cltd cltd fwait dec lods sahf lahf in inc shl in out fldl2e jmp in xor lock cmc repz div stc stc jne cld std cld dec loope jecxz (bad) enter mov shll xlat or fcmovu fcomp js and daa and sub sub das das pop sub pop sub cmp cmp ds add pop xor sbb prefetch adc adc mov sbb sbb sbb add inc addr16 push pop outsb outsl jne or push jo clc dec jp jge cli dec inc inc inc inc xlat jbe inc dec dec imul dec dec out gs push push push xchg pop pop pop mov mov cmpsl cmpsl push popf stos stos lods lods rcrb xor xor mov xchg mov xchg xchg and and stos loopne jecxz adc out ljmp out ffree repnz cmc rol stc sti sti test (bad) inc rcrl stos dec lret int push stc rcl rcl pusha jecxz xlat (bad) fs (bad) (bad) ljmp adc sub sub sbb das xor xlat add aad cmp aas cmp push add xor pop or add or adc adc sbb sbb push pop bound push fs imul pop jo jae clc inc jbe jp jmp jg jbe inc inc inc loope dec dec dec dec jecxz dec dec push push in fs push push push popf outsb pop pop pop pop xchg push jl cmpsb cmpsl test lea mov mov (bad) mov test mov cmpsl mov stos mov xchg xchg (bad) jmp jnp loop in dec fucomip jmp out out icebp icebp xor hlt cmc hlt divl sar std std jne rol ret pop fcmovb (bad) leave leave xor int3 int iret or rcl xlat aad enter fcmovnbe std (bad) and fcomps and daa daa mov sub xor call cmp and cmp add add or or sub adc adc pop and sbb sbb data16 imul jae jne dec js js aas inc jle inc inc (bad) inc inc inc ret push dec dec dec dec (bad) push push push push push add pop pop push bound pop jl mov mov sti xchg scas scas mov mov mov cmpb addb xchg lea xchg xchg xchg repz cwtl cltd cltd fwait lock sahf lahf in ds in jecxz add in cmp lock lock int3 div sti stc lock std (bad) call faddp ret mov dec leave leave lret mov rcrl aam aam inc (bad) fcmovu fstp add and and leave cmp daa sub and sub das das mov xor cmp dec add aas add (bad) cmp or or pop adc or pop push sbb add sbb bound adc imul jae cs je jb repz jp jge cmc pusha inc inc inc inc fcompl inc dec dec je dec dec dec dec mov push push push mov pop push jge pop mov movsl cmpsl cmpsl jns stos stos lods lods mov mov (bad) mov mov mov (bad) addl mov xchg xchg das test inc mov jbe loopne loopne adc out jmp in in out repnz cmc cmc cmpsl int3 clc fsincos sti inc (bad) (bad) ffreep roll (bad) (bad) add lret int hlt rcl xlat roll out (bad) xlat fcompp add fdivr (bad) lds and sub lret sbb sub sub adc das xor adc xor xor adc push add add add cmp pop or push (bad) adc adc sbb sbb and pop arpl pop gs push push push jo jae cmpsl dec ja jns test jg jl inc inc inc xor dec dec dec adc dec push push test push push es pop push mov mulb call mov mov mov mov mov call sbb fiadd call nop leave xchg clc xchg cmpsl xchg inc cwtl test sahf fsub fninit adc fsub loope loop test scas out push lock cmc stos stc mov sar test rcrl lods lret in (bad) int rorl xlat sbb out fistp adc adc sub xchg das test inc xor xor cmp mov ss or mov test or inc adc adc push sbb dec pop jl push aaa gs addr16 imul pusha insl jo js data16 jno jbe jns jg jl jg inc dec inc test inc jge orl sbb push pop push (bad) push push pop leave pop in pop inc pop cmp pop cmpsb dec test pop scas out mov mov mov mov mov in mov test mov add rol pop sbb iret jmp shlb xlat stc jae aam cld xlat fcomp fcmovnb (bad) (bad) and inc and es sub sub and xor xor sub cmp push or pop pop add or and sub sub xor daa xor xor aas push or sbb add adc or sub adc push adc sbb pop or addr16 (bad) jmp insb addr16 pusha ja inc je jge push inc jp ja mov dec sub inc dec inc xchg inc dec and push pop js push push dec push pop pop pop gs inc push pop scas mov cmpsb test cmpsb lods scas scas mov (bad) mov xor mov lods addb mov mov mov inc xchg xchg xchg imulb cltd xchg shl jecxz mul imul clc in test in out in hlt ljmp cld loop enter ret jmp aad fxch movsl icebp int (bad) (bad) rcl rol (bad) rcll mov fstp aam (bad) cmp es adc daa and inc adc cmp pop xor jae cmp out cmp add or add sbb or or pop imul adc adc push sbb jle sbb sbb push addr16 addr16 jns sbb jo jns push pop jbe jae jb jns stos inc inc dec sub inc inc dec pop dec cmp dec inc pop push inc push inc push cmp push dec pop inc xor mov lret test test movsl mov (bad) mov mov mov test jmp xchg popf mov mov sti lods xchg xchg xchg inc inc xchg xchg mov xchg (bad) movsl loop out cmp loopne (bad) jmp out out out lock repz div mov jecxz sti repnz (bad) inc ret ret movsb test lret int3 dec int3 out rcl (bad) ret stos test (bad) fxch mov and jl push push jge sub pop cs xor xor ret cmp add pop add jle or jae adc push adc push pop sbb jnp sbb xor pusha jp pusha add push outsl jns and ja jae pop jns,pt jno push sub mov jle inc inc pop dec pop pop dec jbe push push push inc push inc push int pop xor lods mov fwait cmpsb test mov lods stos rcll mov mov mov mov rolb mov nop fwait mov xchg cwtl xchg cwtl loopne popf sahf fwait enter out lds call in in lahf iret repz (bad) lea sar (bad) cmc call ret test jecxz int3 into (bad) (bad) rcr xchg (bad) ror rolb (bad) pop and and jle es sub pop out xor xor jns cmp adc cmp pop add push fisttpl and push or push add pop adc sbb adc push add or or pop xchg xlat push (bad) or bound push addr16 bound inc fs jb ja (bad) jg dec push dec push dec movb and pop inc pop mov pop push pop push dec pop je pop pop stos jg mov mov mov mov sbb pushf mov mov mov adcl mov cmp mov cwtl cltd lcall lret loop in out call loop out icebp icebp repnz sti div clc loopne sti cld (bad) inc into ret lret leave leave lret loope iret ror rcl aam xlat xlat fcom fcmovu (bad) (bad) and adc and and sub sub cmp xor aaa or xor cmp add cmp sub cmp add pop sbb sbb xchg pop or adc sbb pop jne sbb lahf pusha or bound push imul jno js mov sarl jnp adc inc dec inc cmp inc inc inc pusha dec dec inc gs push pop jle push cmp pop push pop and pop pop pop mov cmpsl test (bad) icebp lods lods movsb xchg mov mov mov aad mov aad addl popf mov xchg (bad) lods xchg xchg lahf xchg in int3 cltd lcall stc lret in loope xlat jmp out shr lock loope loop icebp iret lret sti in cmc out clc pop lret add lret mov cli rcl aad (bad) lock fcmovnbe lret and fbld and push es and inc adc inc xor cmp dec bound cmp xor das add or sub sbb or sub adc sbb push sbb popa popa push bound insb addr16 sub pop jne jbe push dec jp jbe es dec xor dec dec dec dec ds dec dec and push push pop inc and je pop pop cmpsb mov mov movsl cmpsl mov mov nop scas mov mov repnz mov mov ja xor (bad) test mov test pushf test ret nop leave jecxz in icebp push jmp jmp out arpl clc stc cld pop in imul jmp (bad) ljmp fnstsw out rcl aad pop rcl fmul ror (bad) enter and xor xor cmp and sub inc adc cmp cmp mov add add unpcklps or sbb popa pop dec push xor sbb sbb sbb fs inc insb outsb outsl jbe repz jbe jns adc jge jne push dec pop negb dec dec dec in pop pop dec push and push push pop aaa push pop pop push das mov mov movsl mov fildl sbb mov enter into xchg addl mov test xchg popf mov sahf out enter loop imul jmp in repnz mov cmc cld cwtl nop stc cli std pop in cmc jmp xlat aad sbb (bad) int ret fidivr clc rcl rcl ret pop rcr fcmovne enter nop and sub xor std aas sub sub cmp (bad) aas push add inc add or or adc xor add pop sbb ds sbb adc push adc gs or push xor pop jae je pop inc js jo and jle xor inc inc dec dec cmp dec sbb pop inc daa jnp pop sub pop pop pop dec sub mov mov mov scas movsl mov mov lret mov (bad) orl sahf mov sbbl int jmp cwtl mov loop in out mul lcall (bad) icebp icebp repnz push in jecxz out in shll (bad) mov lahf (bad) mov enter fiaddl rcl rol ffreep ffree stos fcomp fldt xor or es and and das inc sbb xor and das ss xor sbb adc sbb sbb pusha cmp adc mov adc sbb sbb cmp dec addr16 insl push inc jno jb sbb jbe jb imul shll inc xor inc inc inc in inc push inc aas cmovg sbb pop hlt inc push inc sub ja,pn mov stos (bad) or stos mov movsb cmpsl movsl fwait insb mov mov stos loope iret test (bad) addl mov loop iret xchg in xchg xchg cwtl lahf cmp (bad) leave cmp in imul cld fwait mov out lock hlt in jecxz idiv in out out jmp dec inc lret in xlat lret fistp fld ffree ffreep pop in in sub or cld repnz fst rorb xor and sti es daa or and sub and xor call in das cmp cmp pop mov sub dec adc sbb outsl inc push pop sbb shl loop or dec addr16 imul jo jb je jb js jle jl jle inc dec inc inc inc inc inc inc dec push dec dec push lods push push push pop push push pop push pop pop pop inc outsb push mov xchg cmpsb cmpsl mov cmpsl fcoml in mov fwait mov mov scas (bad) lea xchg repz fldl mov (bad) lcall pop fwait in mov lahf loopne cli outsb repnz out in sti out cli out dec (bad) hlt out jg cmc div pop call sti jmp (bad) (bad) (bad) into fmul fstp push (bad) mov lods xlat fcom lret (bad) dec repnz xor mov and add sub push or xor sbb adc cmp adc jbe or or adc add sbb imul dec sbb adc inc insb outsb outsl jbe add jg data16 outsb outsl push pop jle dec push xor sbb outsl dec dec dec dec push rcrb push inc pop inc pop inc and decb shlb mov mov lods scas movsl cwtl ret mov mov out lret xchg mov into addl aad std cmpsb mov xchg xchg popf xchg sahf nop inc mov call out jecxz sti in in in lock repz mov idiv stc cli sti cld std (bad) inc cmc ret ret (bad) icebp mov int3 ret ror sar repz (bad) mov (bad) and or and sub push js das xor xor xor xor inc insb cmp cmp push je add ja add or or push movups adc push pop sbb xor sbb bound xor insb inc push insb (bad) insl or jb jo pop cmp jns (bad) jge jge pop inc inc inc outsl inc inc dec sub aaa sbb push push jp push push pop and pop pop and pop pop movsb mov movsl sar stos stos test xchg mov mov mov out mov mov (bad) fldl rorl xchg xchg jmp mov fwait pushf lcall loopne into lods jmp in out in lea div clc fwait clc stc xchg mov (bad) fcmovne lret xchg into iret aam rcl aam aam mov fdivp xchg and sub and sub sub cs xor xor ss cmp adc cmp add jns push pop or or or or imul adc ds sbb adc sbb bound dec addr16 imul je or jno and jnp jg jno cmp inc inc inc outsb or inc and dec dec inc inc lret jp push push pop inc jo pop pop pop and mov test stos stos lods stos scas scas mov mov lahf sarb mov test pushf lret pop mov xchg xchg xchg iret rclb popf sahf lahf repz jecxz in out jmp out out mov cmc div popf stc cli sti mov (bad) incl ret inc mov faddp jmp int iret ret aam rcl mov fcmovnu int int3 and dec push daa sub sub sub and pop cmp aas sub cmp and sbb das adc xor pop adc add xor or cmp jno jae bound jns dec insl outsb das jo ja addr16 popa pop jns cmp addr16 inc imul dec push pop das inc pop dec inc push inc push push push sub jae pop pop pop mov mov test mov movsl mov fidivl xchg stos mov xchg (bad) cwtl orl xchg xchg (bad) nop andl pushf cltd lea cmc out in jmp popa jmp jmp jmp ret (bad) lods div cld ljmp lret ret rol stos dec mov int3 mov int3 int int (bad) rcl sar cwtl (bad) fcom idiv (bad) movsl andl and jo sub cmp cmp push lods cmp cmp cs add add xor ucomiss and sub sub xor sbb das or add add insl or and xor adc adc sbb mov loopne jne bound sbb imul jo jo or jbe jl je add jle inc imul inc inc cmp dec dec dec dec gs push pop es push push push sub pop pop pop jbe pop pop ret fmul movsl cmpsb mov lods cmpsl fidivrl fdivl mov lock fisttpl ficoml xchg popf mov lcall in jecxz out mov jmp out out hlt fldcw hlt repz jmp (bad) sti pop std (bad) (bad) stc rol (bad) in xchg (bad) enter iret int xchg xchg xlat rcl aam (bad) xlat fsubrs (bad) and and es sub sub sub pop sub xor xor aas cmp cmp jp add add add and adc inc adc sbb sbb xor bound sbb imul jp jl ja and jae adc push pop inc cmp inc inc inc inc pusha sbb inc dec sbb pop push jl push push push jno pop pop pop js mov scas mov lods lods test es xchg mov mov mov repz hlt xchg mov xchg nop mov lock pushf cltd pushf mov loopne jmp ljmp out stos (bad) cwtl repz icebp hlt fbstp out inc inc test (bad) xchg mov lret int3 leave int3 out rcl fldenv pop mov (bad) hlt fistpll dec and and arpl sub pop xor das xor sbb sub ds cmp add pop adc or or add adc cmp sbb push xor inc arpl dec dec pushw cmp xor sbb jno jle loope jnp je js pop inc inc inc sub inc dec inc bound dec dec inc push push je push jle cs pop pop pop sub mov mov (bad) cmpsl test les lods scas test mov mov nop xchg mov mov mov mov cmpsl (bad) nop xchg cltd mov cltd sahf mov lock jecxz jmp call in in stos lock rcr repz std (bad) icebp test (bad) inc mov ret (bad) (bad) aad fcmove mov int3 int dec mov stos mov fcom repnz aam and or xor das sub cs or xor and xor xor cmp add imul add nop and push add mov sbb push or mov popa fs dec fs adc outsl adc or push and jl pop inc push xchg dec inc pop dec jns xchg inc imul jnp push push pop xchg pop pop dec pop pop mov std cmpsb test push scas aad mov mov in mov mov mov scas mov subb daa mov iret xchg xchg lahf mov mov clc pushf pushf jecxz loope out fldl2t jmp in out out div repnz push cwtl cmp cli std sar cld nop add ret stos add enter into mov sarb fnop mov fstp fldenv dec in and or sub sub sub clc xor xor cli cmp cmp add cs or or push or adc push adc jbe sbb or jb das addr16 add mov jg adc jge jns popl inc push dec mov dec dec and push push cmp xor movsl cmpsb lret test test jge scas test jbe mov mov jle mov jmp xchg xchg movsl (bad) (bad) nop fwait mov xchg pusha cwtl lcall in outsl leave in out out clc in std sahf std mov adcb jecxz fsubrl sti in mov aad fbstp outsb fmul aad mov (bad) rol stos push test lods jl daa cmp push test cs pop nop jb pop xchg and aaa dec fwait sub xor aad add adc repz or or sbb je data16 push adc jge outsl adc bound imul sbb jecxz jo jae pusha popa pop or pop jge jne dec ss inc inc sub inc jbe push push push inc pop cmp or dec movsb mov rcl lds stos cmpsb ret mov ffree mov mov leave xor mov orl mov sahf xchg jecxz repz in mov mov insb and mov leave in out in nop repz xchg mov std hlt rol ljmp enter int3 int jecxz cli xchg ret pop mov test aam add roll aas add sub sbb and cmp arpl xor push push pop or js insb or adc push add popa or popa push cwtl mov jnp sbb outsl jno jle jl inc ja js aas jl je sahf popa dec outsl dec dec xor dec dec and dec dec inc mov pop and pop xor pop pop stos jge mov mov scas orl mov arpl test xchg and adcl test inc (bad) mov lcall loope jecxz in out call out out lock repnz div pop stc cli sti std cld (bad) jmp ret (bad) enter into int iret push rcl sar aam xlat imul fcmovnbe fstp fbld and and adc sub adc sbb pop cmp xor cmp out add push add imul add or add sbb stc adc adc sub or pop jae arpl addr16 imul jo js push je jge jg push jge je push inc inc iret push inc inc inc pusha mov inc pop dec addr16 jge push pop push push push push dec insl pop cmpsb mov mov mov lods scas scas mov sahf es mov test test mov xchg lahf xchg lcall jmp out out cld (bad) (bad) stc (bad) repnz repz std (bad) out (bad) lret ljmp enter ror out rcl (bad) (bad) aad push xchg fcmovu (bad) sbb and xor or es and jo sub and xor and adc adc push add add or and push movhps add add adc dec ja arpl cmp imul ja in out out loope push jp ja jnp fwait inc inc inc arpl dec dec inc inc pop pop jns push push pop mov pop jp (bad) ja mov mov lods lea mov mov mov mov addl fwait orl xchg (bad) stos xchg xchg lods popf lahf mov loop movsl in idiv jmp out in loop shl hlt hlt (bad) mov cli (bad) cli jno inc ret ljmp enter (bad) mov rcl xlat mov iret and into frstor dec xor es sub sub ss and ss cmp cmp push insl adc push push (bad) or nopl (bad) adc mov sbb pop sbb pushf jbe gs imul push leave jns je pop pop cmpsb jns jge jno imul inc inc bound add pop cmp push push push jle pop pop pop jae pop pop push iret ret mov mov (bad) outsl scas mov fcompl cwtl stc mov xchg pop addl popf add lcall mov lcall loop repnz pop call sti lret (bad) push repnz out loopne ret cli not out inc lret sbb rorl (bad) enter out into iret rcr rcl aam movsb xlat les int fstp fidiv adc and and sub cmp cmp das sbb xor cmp inc das push add pop fild add sbb out push or adc aas add xor push pop and bound or clc insb insl fs xchg je jo push js jno jl lcall push popa pop jge dec aam push push adc inc dec push jb pop pop push xor mov fstp test scas mov mov mov mov mov mov jge movsl xchg lods lea xchg sahf mov and push popf sahf fwait jmp in loope jmp shr cld jmp jne repz (bad) std xorl leave aam into int3 aam loopne lret loopne mov hlt xlat xlat (bad) repz icebp iret in fstp or and bound sub sub push enter mov cmp xor push sub add rorb or sub and (bad) adc push sbb sbb push push imul imul jge insl outsb outsb pop push jb jle jb js or jge adc inc inc dec insb nop inc inc dec inc dec push push gs dec push push je jl push push pop jg push (bad) push jbe mov lea stos stos xchg mov mov mov xchg mov ret xchg mov jno mov test mov sahf lahf ljmp iret mov ljmp icebp clc in loop div jmp shll (bad) cmc fcomps ror aaa lret stos loopne fxam (bad) sti rcl (bad) in xlat nop (bad) fistl or and sub sub aas jno sub and xor sbb cmp and aas or add (bad) add sub sbb push daa cmp adc cmp push pop push aas sbb cmp sahf pop pusha dec mov arpl push imul insl fs jo insl inc push pop jns js jno push insl jle dec lahf inc inc inc outsl inc inc pop jns dec push dec dec dec pop push push inc push push xlat push pop pop inc pop jbe pop inc xchg test lods test mov scas mov cwtl mov test mov test (bad) addl mov mov addr16 cwtl lahf mov lods ljmp out fsubr jmp xor out repz repz loope and sub shrl aad loope lret int3 lret jecxz (bad) fmull or repz (bad) ror fdecstp iret and sub and xor sub push and das xor add sbb ss xor cmp sub ds cs or or add push inc adc adc adc popf sbb bound xchg data16 bound cwtl insl outsb imul jl outsb outsb pop test jle push xor inc inc dec push push cmp dec inc and dec push pop pop cmp push push pop dec orl pop pop pop mov lret test lods mov test mov mov mov lahf xchg mov mov mov mov nop mov xchg xchg xchg lcall loope jecxz in out stc ljmp cmpsl repnz cmc div jecxz stc sti nop std (bad) decl mov ret enter into leave fstp mov (bad) mov fcmovnu (bad) aam mov and xor xor stos push sub and cmp xor xor adc cmp cmp cmp or pop fstl and xor xor push aaa sub and cmp sbb xor adc cmp cmp xor faddl add sub sbb or or push xor adc sbb adc sbb sbb jae gs arpl push addr16 xchg jo je mov jno or jbe or inc dec push inc inc inc dec dec cmp dec push push push cmp push push pop je pop sub mov cmpsl cmpsb test lds lods lods movsb movsb outsb cmpsb lcall fdivrs mov test mov stos mov sahf xchg mov inc popf sahf lahf lret loop in out out ljmp icebp repz clc stc cli mov std out xorl mov enter rcr fcomp mov (bad) aad pop fbld sub es aaa and sub es arpl xor and and cmp dec push pop ds sub add add push or gs or adc push add js sbb adc aad adc dec fs or push inc outsb outsl outsl inc push pop jnp jbe jae push imul inc inc inc imul dec dec push dec or push pop push push push push dec push pop pop adc les stos stos mov mov mov mov repz loop cmc scas xchg fwait mov xchg and cli cltd ljmp lock lock into popf call in out in testb daa stc cli icebp out cli aad rol lods and (bad) jmp leave (bad) (bad) lds (bad) (bad) fcmovu lret fbld and aaa xor add jo jno je jbe js jp jle ds inc inc push inc inc push inc inc dec dec pop dec dec pop dec dec push push push push inc push push push pop pop pop pop pop pop pop pop hlt mov cmpsb cmpsl test test scas mov mov mov mov mov mov addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc fsqrt sti hlt std (bad) inc rol (bad) (bad) shr lret test into iret rcl rcl aam (bad) xlat imulb (bad) xchg fldenv and sub sub cs xor xor xor ss cmp cmp sbb ds jae,pn jno add or or or adc adc sbb sbb sbb push pop pusha popa bound gs inc sbb pop add outsb outsl jl jb je jne js jp jl jge inc inc inc inc inc inc inc inc dec dec dec dec or dec or push push push push pop pop pop pop pop pop pop pop xor cmpsb cmpsl loopne stos stos scas lods stos scas or mov sub mov mov mov addl mov (bad) nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out jecxz div sbb div stc stc cli ljmp enter (bad) mov mov ret icebp rcl aam (bad) push fcmovu lods into fcomi and and xor sub cmp add xor cmp aas cmp add add or pop add push add push pop adc adc sbb jae jae popa addr16 jl jle push jp je gs jno jb jge insb dec push dec push dec push xor pop inc pop inc sarl pop push push push inc pop dec push dec push dec dec push ror into test mov movsb lds mov mov mov mov mov xchg xchg in lea fwait cwtl sahf cmpsb mov mov lcall loope cmp sahf jmp cli in in in lock in rcl stc idiv repz sti aam (bad) dec pop ret out mov lret loop int3 int in ror loope std (bad) fcom rcr hlt int fildll jmp and es (bad) pop cmp sub scas xor ss and cmp cmp aas add (bad) add or mov push unpcklps adc or xor pop sbb adc sbb push dec jnp push outsl jb jb or jl pusha jnp ja jg pop jo insb dec inc inc inc inc dec arpl inc mov push jle push push dec imul mov cmpsl cmpsb cmpsl lods (bad) mov lods cmpsl test pushf mov mov mov addl mov xchg xchg (bad) ljmp fwait pushf xchg mov loopne rol int3 ljmp cld in out in icebp repnz div jmp clc sti (bad) (bad) inc rol mov cmpsb xlat lret int3 (bad) in ror loopne cld fcmovbe xlat rcl (bad) int3 fstp aad and and and sub and xor ss push cmp xor push cmp add pop xor or or xor adc cmp or sbb pop sbb bound pusha addr16 dec imul arpl jae jne ja jns push push pop jg dec push inc pop dec dec dec inc dec dec pop push fstl push dec jnp jo pop pop ja pop jne xchg mov cmpsl mov mov mov scas mov mov mov xchg cwtl addb xchg mov sahf sbb xchg mov sahf lahf lret popa leave jecxz out cwtl int3 call out (bad) enter (bad) (bad) mov cli sti lock (bad) out mov cmp iret enter dec lret aam rcl aam push fnop (bad) int3 pop aam fbld mov xor pop sub aas xor xor cmp dec mov jae add push sbb adc pop adc push or fs jno bound jp imul jnp jno gs pusha jbe jl cli insl jl jp rclb inc push (bad) pop dec dec dec pop int3 push dec dec push inc rorb push push inc fadds pop pop dec fiadd mov cmpsb cmpsl lods fstpt xorl xchg mov mov fwait test mov xchg xchg (bad) adc call pop ret loope out gs in cld imul out jmp push repnz idiv std mov out ret cmc mov mov out rcl fdivr out (bad) fstpl fcmovu fdiv fbld daa mov push mov pop cs xor xor xor mov cmp adc cmp add xor cmc hlt jae push mov push xchg cmp sbb adc shll adc push addr16 insl push pop jno ja jle ja push inc jnp ja pop inc inc dec ret push inc inc cmp dec cmp popa dec push push inc shrl push push sub pop sub pusha pop mov movsl mov lods fisttp stc mov mov push mov mov rolb mov (bad) nop xchg test rcll pop mov popf lahf xchg out nop lods out xchg inc out (bad) cwtl mov in sahf dec imul addb loopne xchg std mov (bad) gs sarb insl xlat int jp aad jne les jge aas push sahf es and das cs xchg ss xor xor sbb or sub push pop add or or push ud2 and adc adc pop adc sbb pop pushw pop arpl mov insl insl outsb imul pop ja js or inc inc inc inc sub inc inc popa jno dec inc inc dec inc bound push jge push pop push ja jbe jnp popf mov cmpsb cmpsl mov lods fiadd cmpsl mov cmpsb mov mov int test xchg lea xchg xchg lahf test cltd popf out mov loope in cmpsl out loop in cli ljmp in mov div daa loopne cli sar out (bad) scas xchg (bad) iret sbb (bad) fmul out fmul mov or repnz fstp mull and add add sub xor inc cmp aaa dec adc cmp push js add fisttpll and or or sbb and int3 adc adc xor sbb jb outsl mov imul outsl jb std jae ljmp jle add in inc dec inc inc inc inc dec dec or movsb dec inc pop push push push inc gs push ja pop pop pop pop pop dec mov (bad) movsb mov push mov lods mov lcall mov xchg mov orl mov xchg xchg inc xchg xchg xchg xchg cltd lcall loope in loopne scas call in out jmp hlt hlt loopne mov cli icebp sar (bad) mov ror fcmovb mov in lret hlt add rcl cli (bad) aam sarb mov (bad) sub push inc and push add sub sub das xor cmp xor inc adc cmp cmp aas add bound jbe add js or or popa inc adc sbb xchg push pop sbb pop sbb jno pusha popa push pop inc push aam jo pop jb jne add push jl jg js,pn inc dec outsb jl dec inc pop dec pop dec pop arpl jp push push push cmp pop push cs pop pop rorb aam stos test scas test les aad mov test scas leave mov mov xchg mov inc fwait loop sahf lahf in leave in xchg lock mov fsubp (bad) fcomip repnz (bad) div (bad) (bad) mov cld notl inc out mov ljmp rcl (bad) sti test (bad) (bad) loop fcmovu frstor sbb and daa pop adc sub das xor sbb push cmp cmp aas push sub push or add sub or popa cmp adc adc sbb adc sbb adc arpl dec push insl outsb gs (bad) jae jno dec js jo push add inc inc push inc inc dec push dec popa push dec dec inc pop push inc inc dec js inc dec inc inc ret dec pop dec pop xor mov movsl cmpsb lods cmp stos cmpsb mov mov pushf in mov scas mov orl lcall sahf mov mov lcall loope out (bad) out lds jmp int repz fldln2 mov stc cli call movsl (bad) dec pop int in lret ret jecxz int lds shrl (bad) (bad) (bad) cmc xchg and pop add xor sub xor push xor ljmp adc jl add or test or movhps jge adc sbb adc adc adc bound sbb push insl adc jno jns and or jnp jnp adc inc dec push dec push dec fs push inc rorl dec push inc dec inc dec inc dec lret dec inc dec dec rorb cmp cmp mov mov cmpsl lods movsl scas es cmpsb mov popf mov sbbl or xchg in mov lahf loopne repz loop loopne mov out in std (bad) hlt cmc cld fucomip stc cli icebp and and rol icebp (bad) mov lret loope mov rcl xlat stos lret (bad) xlat fmul repnz fst leave push and sbb sub add pop push cmp inc sbb das das adc ds add sub and push jns sub pop jae cs and aaa cmp sub push pop ds or add sub or or adc addr16 push pop adc pop or or pusha popa push addr16 pop outsb outsl jbe sub je add jno push pop inc inc dec inc sub inc inc aaa push dec dec dec bound scas push gs push push and pop pop push das add stos mov mov mov (bad) test mov scas mov int3 mov stc lret mov mov xchg xchg jmp xchg cwtl (bad) fwait mov jge cltd in pushf popf lcall mov cli jecxz orl clc repz add (bad) mov ret (bad) iret mov enter lret fisubl aam mov xlat shlb lods push sub push or inc sub es adc push xor cmp and cmp cmp cmp add imul add sbb insb out movd adc cmp ret jnp pop push jb or bound popa imul jns add jne jno adc jbe inc or inc inc dec insb addr16 inc dec popa imul outsb das mov push push push jo pop pop push test xor mov cmpsb mov lods cmpsl xchg fnstenv mov mov aam xchg out lea (bad) subb cwtl cltd pushf call popl test in mov repnz in loopne sahf cli sti testb call loopne lret (bad) lret rcl shrb test fcmovnu scas leave or and xor sub ds and xor cmp ss pop aas add adc daa add inc sbb push add jp pop sbb push in das push pop data16 outsl adc js jl jns pop jb jle sbb jns jno jno jo inc dec imul xchg dec cmp dec dec dec inc cs push push push insb (bad) push pop pop sub push pop ja,pn mov cmpsb cmpsl mov cmpsl mov push mov mov mov addl mov movsl (bad) (bad) nop xchg mov in xchg lcall leave int in dec icebp jmp out out cli andl clc stc cld rorl mov ret into inc in (bad) enter int3 int faddp stc mov sub rcr fisubrl xor sub inc dec cs cmp cmp aaa xor sub xor pop add or and push movhps adc push aaa push xor or dec sbb insl outsb jo push pop jl jne jl push push jl mov inc sbb inc inc dec decl test push push push push hlt push add pop pop pop mov cmpsl test stos lods cmp mov mov mov addl mov (bad) nop jbe or cltd cwtl cwtl cltd fwait subb in in (bad) iret fsubr ljmp fpatan repz repz clc stc lock std (bad) cmc int dec jmp into fmul fnstsw stc rcl aam je fmulp test (bad) (bad) and pop shlb pop add nop and sub sub cmp cmp adc jbe or or lods push push or pop adc sbb jbe gs jae pusha inc dec jnp jge hlt jl js add jne data16 or xor dec outsl inc push dec push dec pop pushf pop dec pop dec pop pop (bad) popa sbbl push (bad) dec jnp scas mov mov xchg test mov mov lahf mov cmpsl mov mov subl mov adcb and cltd mov out gs out call in out jmp mov repz push fild cli ljmp (bad) mov fild int3 int fcmovnb (bad) aam fadd push xchg fcmovu (bad) notb ds or gs and jg xor sbb ss xor inc cmp sbb push and or add or push rorl das xor adc cmp push pop adc sbbl dec outsb bound outsb dec js push mov outsb outsl pop jno jb jne ja jb xor jge jo inc inc push je inc (bad) dec dec dec pop dec dec pop xor push dec adc or and and stos mov movsb movsl lods lods mov test sahf mov mov lods xlat lds cli addl xchg lea mov flds sahf xchg enter out out int xchg (bad) call sahf mov hlt (bad) fimul xlat jmp (bad) fdiv (bad) test leave lret mov iret fcmovu aad cld stos (bad) xlat (bad) icebp cmc fcmovnu xlat aad aaa imull sub add sub pop or aas xor cmp xor xor cmp ds xor push add or sbb adc pop addr16 sbb imul insl jne bound dec data16 sbb imul call je ja or jnp ja jnp push jno inc sub dec je dec dec push push inc pusha add ficompl push xor pop pop stos mov mov test scas scas mov mov mov mov addl and mov cwtl test hlt fcomps icebp out fucom out jmp fsubs icebp clc jg cmc div (bad) jno sti not ja ror loopne (bad) enter xchg out into iret rcl rcl inc xchg (bad) iret lock fcmovu (bad) cmc push fbld sub sub sub cmp aaa or xor or push mov addb sbb bound pop adc pop add or imul pusha bound or addr16 insl fs pusha jle bnd jge test ja jno js dec sub fwait pop dec pop dec je dec dec push push dec adc push push push push fcomps push xor mov mov stos lods cmpsl (bad) mov mov mov mov lret xchg mov pop addl cwtl mov cltd mov xchg mov lea call imul loopne gs out in (bad) repnz cmc div push std (bad) inc rcll fucomp dec enter inc int lds std xlat xlat fcomp repnz (bad) aam and xor sub sub pop movsb and pop sbb xor xor push daa cmp xor cmp adc add xor sub push pop add or sbb push add ds sbb sbb push pop pusha popa bound fs imul jo jb je jbe js jp jl jle inc inc inc dec inc inc inc inc dec dec dec dec dec dec dec push push push push adc ficomp pop push pop pop pop pop mov movsl cmpsb cmpsl test stos jl lods scas js mov movsb mov mov mov mov (bad) nop test mov lcall xchg sahf cwtl xchg clc push cltd lcall mov jecxz out mul ljmp xor repnz in es jmp dec (bad) fist fld ffreep in rcr mov iret add not aam push xor cmp and and out and in sub cmp pop popl add cltd or add push push push sbb sbb scas adc sbb adc sbb xor inc dec imul jge outsl jp jb je jbe dec jnp or imul imul inc dec daa fisttpl inc inc data16 pop cmp push push pop push pop jb pop pop push push test movsb mov mov mov shlb mov mov mov xlat out mov test xchg xchg aas mov cmpsb adcb xchg mov sahf adc lret in in call out out lock fdiv in div clc stc cli mov std icebp lock (bad) hlt mov fmulp int mov rcl xlat (bad) aad enter aam fst aam or and clc daa sub add sbb js,pn xor xor cmp adc inc add add pop cli add lahf or add test adc push xchg sub sbb sbb jbe pop arpl cltd outsb dec push push cli outsl jo sbb pop js gs pop push jno inc dec dec inc insb push inc inc inc xchg dec dec dec addr16 push pusha pop push (bad) push push push inc pop pop dec sub pop pop push stos rcrl scas movsb aad cmpsb test lods mov mov sub mov stos mov mov and mov test andl decb xchg xchg lahf test pushf popf xchg mov shl loop (bad) call in ljmp jecxz call ret inc mov out int3 leave lret (bad) rcl rcl cmc stos jmp call leave or and and pop sbb sub or sub das es sbb xor cmp cmp adc sub push pop push das adc bndldx push adc ds sbb sbb xor bound dec pop js inc push imul jge add jne jno push jp jbe sub inc dec fs pop insl jnp dec inc cmp push push push push jl push push push inc jb pop pop push ja mov mov mov scas fistp popf cltd mov mov and pop addl (bad) mov xchg test mov pushf popf xchg xchg xchg cltd in jecxz int out out loope cld in out jmp (bad) repz fisub mov (bad) jmp (bad) mov in iret rcl cli cld aam fdivr js fcmovbe hlt jl fildll sub icebp sub sub xor xor aas and and sub dec adc mov and or test and adc pop pop add data16 sbb (bad) jb jl dec push data16 shlb push fs fsubrs pusha ja push dec pop push out dec pop inc pop call pop repnz pop dec pop inc hlt inc push inc push dec decb lods fisttp mov orl jmp mov xchg mov mov mov mov repnz lods aad xchg lea xchg xchg xchg stos pushf popf xchg cmp jecxz out shr jmp dec jmp call call loopne ret mov rol lds lret loopne lret enter clc jne rcr (bad) ror int lock fmul (bad) xor es add sub sub xor xchg ss xor test add adc sbb aaa or add in add arpl sub sbb mov adc fs jl jo outsb imul mov imul push fiaddl dec sub inc inc dec les dec dec dec and dec push pop lock pop dec pop and decb stos mov mov test mov mov les cmpsl mov mov nop mov stc sub mov aaa xchg mov std repnz int out out dec cli loopne cld popf sub repnz call cld std clc pop ror fst mov rol mov imul mov lock fcmovnu int3 fcmovne and cmp sbb and pop add sbb xor cmp push ds push daa cmp add push jns and es lret push add sub cmp xor xor and dec adc cmp sub ds or push pop or or movhps cmp lcall movlps xor adc insb leave jge jns pop jno ja jb ja push jnp jl or pop inc xor inc inc inc daa loopne dec inc out pop inc dec and dec push and pop stc dec push inc and mov mov faddl adc mov scas mov xchg and test (bad) cmpsl xchg xchg xchg xchg test xchg mov sahf lahf out out lret jmp out sar jmp xor (bad) in rcl stc idiv repz sti aam (bad) dec pop ret out xchg enter int3 int iret rcl mov rcr (bad) fcmovnu fst fbld and adc and cmp test xor cmp cmp push xchg cmp scas add cs or add or push xchg cmp add cltd scas sub (bad) sbb dec insb fs insb push addr16 jo pop jae jne inc jno lret jge jg push xor inc inc dec dec cmp push dec cmp dec dec push push pop push inc daa sub sub pop pop pop dec sub mov mov shrl add mov mov xor mov xchg xchg mov das lahf mov in xchg cwtl cltd pushf mov popf sahf xchg call out inc imul std (bad) (bad) sti lds lock aam inc cmc idiv jmp jmp call mov ret rcr (bad) lret int leave (bad) (bad) mov (bad) (bad) fcmovu jle fxch and aaa das cmp xor and and and stos xor sub pop mov add and adc sbb les push pop sbb sbb lods pusha popa push xchg bound imul push add jne jno hlt insb jnp jl ja dec push xor dec dec dec dec out pop inc inc inc push jnp push push pop cli dec push dec pop dec pop dec mov das cltd movsb movsl cmpsl mov mov mov mov mov sub xchg sbb (bad) incl loope xchg xchg pushf lcall xchg mov call out loop out ljmp repz ljmp (bad) repnz in (bad) idiv mov rol stos add vcmpps fcmovb fdivr (bad) aad fldl (bad) icebp (bad) shr or daa add sub es xor jae xor xor cmp cmp imul add or or or adc adc adc gs sbb arpl sbb adc pusha popa bound gs imul jo clc jb jne ja jns jnp jl dec inc inc add inc pop inc dec pop dec dec fs dec dec pop push inc test pop push push jo pop pop push dec les mov lods movsb movsl lods aad test (bad) mov mov cmpsl mov mov subl mov nop xchg xchg xchg xchg xchg mov pushf pushf test in cld out clc clc in (bad) call inc repz lcall call jns ret rol into cmpsb jge int3 (bad) mov rcr fcos (bad) (bad) (bad) hlt data16 sub daa and dec nop sub and cs sbb ss xor aas cmp push mov add insb mov pop sbb sbb adc add sbb adc popa bound dec clc addr16 insl push inc push push leave ja jae jb mov dec loope inc outsb xchg inc inc dec pop pop pop inc jns push push pop inc inc dec inc dec dec je pop pop stos mov mov lret test mov test out test lds xchg xchg mov push add in out jmp (bad) icebp sahf repz mov sti lret jmp lds lret stos int iret mov aad xlat mov (bad) and jne add inc sub sub jl ja getsec insb cmp push cmp add pop pop jno inc or or inc adc pop dec sbb fs pop arpl xor imul or jae jne ja jns jnp jge jg inc add push inc add dec jb cmp push outsl push imul pop sbb pop shlb out (bad) test subl cli mov int3 mov mov mov sti (bad) loop stc xchg in xchg out int3 cltd lret popf negl mov jmp sub icebp cltd rep cmc lret test std test mov add lds lret clc int iret cltd (bad) mov movsb aad xlat xchg fsts fist and dec and pop sub push das jl pop xor jne jo dec cmp dec aas add jae inc pop dec or subps sub addr16 daa sbb sbb arpl gs imul outsl sub jae jne ja jns jnp jge jg inc sub inc ds cs sub dec push pusha cmp push add pop push pop sbb mov shrl scas xlat mov mov mov mov mov cmpl mov rorl les in lds stos pushf in out loopne loop in out call fucomp stos lock mov clc mov (bad) cwtl (bad) mov test movsb (bad) in enter int3 dec mov aam (bad) sbb fisubl and pop and es sub sub jnp,pn pop xor dec bound pop cmp inc ds add pusha add push dec or or push inc adc adc push push sbb sbb pop push imul add push insb aas outsb aas jo jb je jbe js jp jl jle inc sub inc adc or sub ds and sbb push xor pop sub pop adc int ret test stos shrb (bad) mov mov mov leave mov roll mov nop clc xchg in int repnz mov cld pushf lock mov aam test shl xchg call stos out fdivp mov (bad) hlt (bad) divb cld nop incb (bad) repnz test mov mov rolb out fdivs fimul popa adc jl inc sub cs or push xor ss push cmp push ds add inc add aaa pop or outsb or push imul adc pop push and sbb push sub bound xor push aas outsb pop jo jb je jbe dec dec jp jl jle inc cmovb inc and dec and dec and push sbb das pop and pop xor mov cwtl cmpsb lcall imulb in mov mov mov cli mov icebp test mov (bad) fisttpl fist hlt fwait repz mov xchg aam mov jmp mov repz cmc mov sti mov shll or lret sti int iret sti roll xlat ljmp fistpll inc and push daa inc sub das dec xor dec xor jns or outsl aas ja pusha add push pop imul or addr16 and push adc daa sbb dec pop xor arpl inc addr16 imul push jno and ja jns jnp jge jg inc daa inc jle inc dec pop sbb dec cmp push cmp push cmp pusha pop jl pop inc loope shlb shrl scas fnstenv mov in sarl testb mov clc xchg notb xlat fwait lods popf cld lahf mov leave jecxz in out jmp cltd out xor repz cmc mov sti mov mov ret add (bad) stos leave cld lret sahf int iret xchg shl shr aad xlat mov out loope fiadd gs jae pop sub xor add cmp dec aas dec add add addr16 cmp jns dec or adc adc pop sbb sbb push arpl imul add jae jne ja stc lret adc sub inc adc add dec cmp dec jp gs sub push pop sub pop add movsb loop repz stos enter (bad) mov mov mov mov mov test mov into xchg mov mov mov leave xchg fstl iret pushf scas sahf std loopne loop in out call mov stos lock repnz hlt mov cli cltd cld mov mov test add (bad) mov stos lret cmpsb into adc rorb fsubrs fisubr and sbb adc sub jle push xor add add je inc outsl add addr16 push popa or dec or push dec adc sub push jo and es sahf sahf or arpl gs aas imul jae jne ja jns jnp jge jg inc je push inc sbb das dec or dec sbb push adc push sub ss and and out lds loope fsubrl xorb mov mov les testb mov xchg (bad) xchg ficom (bad) fwait lods popf repz loopne mov out jmp mov repz cmc xor mov xchg ljmp (bad) popf leave cli lret stos int iret in rcl loop aad xlat (bad) fsts fildll dec and daa dec sub sub sub xor inc aaa add jo pop cmp aas add sub inc or or and cmp pop inc sbb dec sbb pop arpl imul outsl and jae jne inc sbb jnp jge jg inc cmp inc sbb add dec adc pop dec xor push cmp add pop cvtdq2ps pop sub mov fwait cmpsl test sti stos loopne hlt scas divl mov in jmp into adc xchg mov (bad) notl mov fwait in cmpsl lahf mov test and (bad) in (bad) out lcall divl std stos (bad) std rol test test mov shl shll fnstcw fistp and dec and jns inc sub jnp bound imul insb add pop add or dec (bad) adc adc daa sbb das pop or arpl adc imul jae jne ja jns jnp jge jg inc cmp inc ja aas dec ja jno dec jle push xor insl push outsl push push pop sbb leave mov ret test stc scas stc mov mov mov mov mov cmpl test xchg mov mov (bad) fimull icebp xchg clc xchg ljmp lahf mov in out jmp (bad) out fcomip fpatan fwait cmc pushf negl std mov mov lds lret mov cwtl iret mov aad xlat in (bad) repz and gs pop sub pop sub dec xor xor pop cmp aas push add push add aaa or inc mulps adc pop pop jo jbe pop sbb pop arpl imul outsl and jae jne ja jns jnp jge (bad) jno inc sbb or dec and push adc adc pop adc mov loope loopne (bad) popf mov mov mov mov mov repz enter rorl mov lds mov loopne loop in out call mov repnz ret clc cwtl cli test sarb scas enter int3 cltd into (bad) rolb (bad) out fmuls ficom push adc jae sbb adc jne inc xor ss cmp or jbe push add pusha push jg mov and and insb sub pop das pop xor jge pop aaa pop cmp gs add jae jo inc or (bad) adc addr16 jg jnp jp xor arpl or outsl xor jae jne ja jns jnp jge jg inc adc inc jnp dec enter adc push pop push adc pop jbe cs pop pop sbb out cmpsb call lods shrb mov mov mov idivl mov cld xchg mov mov mov mov nop aad cmpsl xchg rclb pushf negb mov mov ljmp lcall clc mov mov mov ret test lahf enter int3 cltd into mov aam (bad) loopne xchg fidivl and push and imul sub outsb cs data16 ss cmp cmp jl jno ja jp jno insl or insb or push jns data16 inc push jg sub jae xor sub fs push push add sbb jb je jbe js jp jl jle inc and inc adc adc dec dec int3 cld and push ss add pop or pop ss fsubs fsubl fsubrs call mov mov in out icebp adc testl repnz lock (bad) xchg mov fwait cli popf les shl mov (bad) jmp cmpsl out cwtl icebp xchg mov lcall std movsb lcall lds lret cmpsb int iret out xchg roll flds fbld pop and sub pop sub xor pop aaa jns pop cmp cmp add jne pop or arpl push adc pop sub bound imul aaa and imul outsl jo inc add cmp xor jl jle inc outsb inc ss pop inc add dec cmp add push push push cmp pop push pop das pop cmp mov xchg cmpsb xchg test stos std lods lcall mov mov mov mov rolb mov nop cli xchg mov cwtl stos lcall mov cmpsb in out call mov repnz mov cmp xchg (bad) stos (bad) lock xchg (bad) xchg enter int3 mov rolb fsubr fiaddl and je jb imul push cs xor ss cmp push cmp jge,pt dec add imul and cmp adc jp insl sbb dec sbb push dec pusha sbb fs adc push insb push outsb push jo jb je jbe js jp jl jle inc cmp inc or add dec dec sub add push orps pop or pop sub mov xchg (bad) cmpsl lock ljmp mov mov mov iret mov lret test xchg mov mov (bad) cli (bad) icebp xchg sti xchg cmpsb xchg fstl out popf enter lods jecxz in out jmp popf out (bad) icebp xor into stc stos sti fwait std enter stos ret scas (bad) cld leave scas lret dec or roll xlat lahf fldln2 fstpt and pop and pop sub dec das pop xor add cmp add outsb aas jbe cmp dec add inc or or ja jae and sub jg push sbb pop arpl and imul and and jne ja jns jnp jge jg inc jp sbb dec jp add dec add push aas push cmp pop push pop and mov xchg cmpsl int3 test ret scas mov std mov mov idivb ret test xchg lea xchg test repnz mov movsb in out call fsubr fcomi mov (bad) hlt mov cli int cmpsl (bad) movsl shlb dec mov mov rclb (bad) (bad) fmuls ficom and bound insb sub addr16 xor jp ja push cmp jo insl js,pt outsb add push push or or push pop adc adc push pop sbb outsb sbb push pop pusha add adc push sub jo jb je jbe js jp jl jle inc push push inc jno xor dec sub jp adc push das push xor pop subps pop adc movsb in shrb scas xchg mov jmp mov mov mov fistpll flds mov mov xchg ljmp lcall xchg loop in out call mov mov mov lahf hlt mov into clc (bad) cli xchg cld xchg (bad) cmpsb shrb mov hlt lret adc iret loopne mov xlat xchg fnstcw fisttp and push daa inc sub fs dec xor jo imul insl aas inc add push add push or or jge es jge xor add push gs imul outsl pop jno jae jne ja jns jnp jge jg inc jae jbe sbb cmp dec jg add push daa push and sub cmp pop xor mov in lret stos loop ret mov mov mov mov mov jmp call test xchg mov mov (bad) stc pop xchg ficoml jmp popf lods lahf mov mov fxam out fsubr mov lods in mov repz cmc xor mov mov (bad) sar sahf lds lret mov rcll xlat fcomps xchg fsubr fisubr and es sub inc sub ja,pn je dec xor ss cmp jg dec ds aaa add xor xor dec or inc push js inc adc pushw je jp xor push imul adc push push add jo jb je jbe js jp jl jle inc add inc outsb inc or dec pop dec or push sbb push cmp pop adc pop pop pop xor (bad) cmpsb loope (bad) in (bad) mov mov mov mov lea rolb jecxz mov xchg mov cwtl jecxz cmc pushf iret sahf sti loopne loop in out call xchg out mov hlt mov sar cli iret cld (bad) (bad) mov xchg ret lods (bad) lock int3 movsb into test in mov out mov in fiaddl and push and es sub pop sub cs xor inc xor ss cmp push cmp ds add add push or insb or push dec adc and popa push pop sbb popa sbb push jle adc and push cmp jo jb cmc sub ja jns jnp jge jg inc jae jae or dec cmp dec push push cmp cmp push adc pop insl pop outsl pop shll cmpsl pushf test iret scas xorb mov mov (bad) mov jmp les jecxz out (bad) rcll ficom aam (bad) lahf xchg loope jecxz in out jmp xchg out (bad) icebp stos repz xor mov xchg jmp lds lret lcall rcll fnstenv fildll dec and inc daa popa sub sub dec xor pop aaa jl inc cmp aas dec add add or jnp and push pop sub pop sbb sub or arpl and imul push jno jae jne ja jns jnp jge jg inc jb sbb xor dec sub cmp popa dec pop push sbb push daa push xor pop or pop xchg mov iret cmpsl ljmp ljmp mov mov mov cld mov mov icebp xchg mov mov mov xchg fcompl cli sahf lret loopne loop in out call mov mov (bad) repnz (bad) idivb cld mov mov (bad) hlt (bad) lahf enter int3 dec adc rclb fdivs fisub and es jnp jg pop cs xor inc xor ss push cmp ds add xor or jg insb adc adc push jno pop sbb pop push xor bound fs dec push push outsb cmp jb je jbe js jp jl jle inc inc jae inc xor dec or dec push dec push push addr16 sub sbb pop sub insl pop or lock mov in scas xchg mov mov test mov mov hlt mov loop rolb fmuls xchg in in xchg cld cwtl jmp rcrl fsubp in mov mov out mov mov xchg hlt lcall cld lods (bad) stos rclb xchg enter int3 mov shr aam (bad) xlat jmp in mov dec and push es sub pop cs xor inc xor ss or or ds add fs push cmp or or push cmp adc push pop sbb inc sbb push inc pusha sub fs push insb pop outsb pop jo jb je jbe js jp jl jle inc push inc and adc dec pop dec cmp jle gs and popa pop sbb pop cmp mov int nop test stos xchg lods jmp stc mov mov mov mov mov icebp mov ljmp mov mov xchg scas xchg xchg cmpsl lcall out sahf mul lret in out call mov xchg test movsb hlt cwtl idivb cld leave (bad) test cmpsb ret clc mov mov xchg int3 or shlb (bad) mov mov lcall and es sub js pop cs xor or ss pop cmp pop or imul dec or jae push dec adc adc push pop sbb pop sbb push and push pop or push cmp jo jb je jbe js jp jl jle inc and inc jne cmp dec or jb insb push push gs pop pop pop xor mov lret test stos out lods jmp into mov mov mov mov mov mov mov mov mov mov mov xchg mov lcall mov test scas out call lahf out lahf lock div leave xchg cli mov test cmpsb shlb xchg mov stos int3 movsb into cmpsl rclb (bad) mov mov sbb ficomp and sbb sub sbb cs xor inc xor ss cmp pop cmp ds add insb add push jo push or jle dec adc push adc push sub and sbb bound fs push insb adc pop jo jb je jbe js jp jl jle inc adc sbb xor dec jbe dec jg push sbb push sbb adc pop xor mov ret test stos enter fdivl cli mov mov cmpb test xchg mov mov mov mov nop ficoml cmc cwtl rcrb loopne loop in out call shr (bad) lock ret mov clc (bad) cli pushf cld int3 decb les lret xchg mov aam (bad) clc fcoms fsubp and and dec sub imul pop xor ss cmp jbe pop ds add inc add push dec or adc adc pop sub inc das push xor inc xor jns jo push aas add dec add inc or pop (bad) adc pop adc daa sbb sbb or or imul outsl inc jno jae jne ja jns jnp jge jg inc sub inc adc sbb dec jno jae push pusha cmp push adc pop adc pop cs xlat mov shll lods subl sarb mov mov fild jecxz enter cli xchg fcoms lock fninit fsub shl movsl jmp mov repz les sar xchg (bad) jmp xchg test movl rcrl xlat xchg fnstcw fild pop and and push sub gs jnp pusha xor aaa jns push cmp aas outsb add push add dec or or inc adc adc xor ja dec pop cmp arpl sbb insl cmp jno jae jne ja jns jnp jge jg inc sbb inc jnp jne dec jp dec daa dec and push adc or pop das pop adc mov lock loope fwait stos in in scas aam enter (bad) mov mov enter fiaddl out mov (bad) rcll ficom ljmp jecxz in out jmp out ficom cmc mov mov mov ljmp lds lret lahf int iret mov mov popf aad xlat mov mov fbld adc gs adc inc sub or arpl pusha cmp push aas ja imul add cmp cvtps2pi adc sub sbb fs or gs sbb imul and jno jae jne ja jns jnp jge jg inc jg inc je inc sub sbb dec jbe daa push imul cmp pop jne and mov lock fsubrl ljmp mov xchg mov jmp sub lds jmp hlt (bad) mov xchg rclb into popf std lahf xchg loope jecxz in out fsubrs fwait icebp (bad) repz cmpsl testl shll lods leave mov mov rcll xlat in (bad) xchg fisttpll and daa outsb sub das add pop xor pop aaa jns ja jns push aas sub push add popa pop xor cmp (bad) adc push adc je insl sbb or gs imul outsl add jne ja jns jnp jge dec jno jb jo add dec or dec sub push add push xor pop sbb mov mov xchg lods xchg scas mov cli mov mov mov mov (bad) mov jmp mov mov (bad) cld (bad) (bad) xchg notl fistp mov sarb test out mov cmc (bad) divl std mov ret xchg lds lret mov shr rcl push loopnew cwtl fimull and outsb and es sub sub jge,pn pop xor ss dec cmp jbe jne jne dec add push pop or xor push adc pop adc push pusha sbb push sbb push pop pusha dec bound sub push cmp jo jb je jbe js jp jl jle inc or inc cmp dec pop dec or push and pop sub pop sbb mov aad lahf test stos cltd lods fldt xlat mov mov mov mov mov mov aad mov xchg ret xchg jecxz leave lcall movsl loop in out call mov repnz hlt enter stc mov mov mov pop mov lret mov shlb fsubrs fidiv and es sub add cs xor bound ss push pop cmp data16 inc add push xor push push push xchg and pop dec sbb push sbb push arpl sub sbb outsl and jne ja jns jnp jge jg inc sub adc inc cmp dec sub dec cmp push add push mulps sub pop nop mov (bad) cmpsl fildll xlat scas out les stc mov clc mov in test xchg mov mov lea xchg loopne fcoms jmp loope jecxz in out jmp mov repz cmc xchg (bad) int mov mov (bad) pushl lds lret xchg movsl iret mov xchg rcrl in fstpt and inc and inc sub inc das add push push add sti lods loopne mov mov cwtl xchg mov mov xchg lcall rolb xchg lods stos mov sti sarb xchg fwait lahf xchg mov insl inc adc jnp dec pop dec pop addr16 push xor push inc push inc jno or pop jne addr16 push dec inc inc inc pop dec dec push adc push inc inc inc push pop push pop pop inc push dec and and and data16 sub ds ds cmp xor xor cmp inc adc add prefetcht0 sbb push or sbb adc push pop or sbb sbb pop cmc hlt jmp movsb in loopne loopne stos stc jmp lock loop repnz jmp std stc mov ror fcmovnb ret mov (bad) rcr rcr xlat xlat aam (bad) cltd fcmovnu fmul int3 sarl stos movsl cmpsb stos mov scas mov movsl mov mov mov mov (bad) (bad) popl mov xchg lahf xchg mov bound es popa outsl jg pusha imul push bound jl outsb outsb jno push inc push inc inc push inc pop pop inc dec dec inc push dec push push inc dec inc push adc pop dec push dec push inc and and cmp and daa and sub jne xor sub and xor pop inc add add add adc or pop push sbb adc sbb add pop sbb adc add hlt cmc lock in (bad) loopne jecxz stc loop cld hlt in out clc idivb leave (bad) lret xchg fmul (bad) faddp enter int mov int3 fnop popf int mov mov mov mov mov mov clc test lods lods sbbl xchg fwait sbbb xchg mov cltd xchg nop fisttpll jno jp jb jnp insl pusha insb imul xor push push push dec add push push inc pop pop pop inc or data16 bound inc inc pop sbb outsl inc dec dec push pusha adc pop cmp xor push add push adc and js or push sub inc adc add or or sbb add sbb sbb add sbb pop adc repnz out stos jmp jmp lock sti cli clc sti clc out repnz iret ror rol fptan (bad) stc jmp mov fst rcl (bad) iret enter shll lods movsb mov lods mov test mov lods mov mov (bad) mov lahf lea addl cwtl popf mov mov gs js insb js imul insb pusha addr16 imul jns push inc push pop push push pop push inc pop inc dec push dec inc inc pop push dec inc adc push push push inc dec inc dec push pop push sub and xor xor cmp and cmp js,pn sub and sub sbb adc adc dec xor xor or cmp cmp cmp psrld (bad) mov ret ret in enter out (bad) rol rol (bad) (bad) int3 fdivrs int call cmc repz in enter ljmp mov jmp mov addl scas mov (bad) mov lea cwtl movsl mov (bad) movsl mov xchg mov test mov mov lods mov stos jg inc push push jae push inc pop dec dec sub pop arpl inc gs inc pop inc pop pop cmp pop push jl outsl insl insl insl imul outsl or jge push jo jl jl jbe jo jle sbb push arpl or add aas cmp push add adc sbb adc adc pop sbb das and xor aaa and push adc es xor xor or ds xor lahf leave cld sti out (bad) int3 ljmp icebp (bad) fcmovb (bad) (bad) test jecxz cld fsubp ljmp in mov jmp repnz std lock icebp repnz (bad) xlat repnz imul test addl (bad) xchg repnz mov movsb mov mov mov xorb fnstcw mov inc dec inc inc and sub inc pop pop pop inc push push pop push ss jno push pop push pop aas push je ja push outsl inc insl arpl jne push jbe inc outsl addr16 push jno or adc cmp push pop or add add sbb sbb ja push sbb sub adc cmp and sub cs ds cmp and xor cmp cmp sub or (bad) ror (bad) cmpsl fcmovne fdivp stc fmulp fstp rcr (bad) mov (bad) enter cli aam fcmovbe call out in fucom out fabs leave stc std test lret loopne out stc lock test (bad) mov sbbl idivl xchg xchg lcall xchg scas movsl lods lret andl xchg mov mov mov pop push push inc dec jae inc dec sub jge inc inc push pop pusha pop pop push cmp push pop dec push push add jo jb gs or bound adc addr16 fs jl outsl jne jo add adc fs and push push push or or and xor sbb adc sub xor adc sbb cmp dec sub pop and and sub and das cmp jo iret int mov iret enter loop ret rol xlat rcrl enter lret out (bad) div lock std sti out mov hlt cli ljmp stc (bad) in jmp clc call movsl mov call mov pushf addl (bad) popf mov mov test movsb scas mov nop cmpsb cmpsl cmpsb mov ficompl push push dec inc push push inc sub dec pop dec dec dec push pop push jb inc inc pop pop dec dec pop cmp pop pop jne gs je jg imul dec jnp arpl popa popa jae pop jbe dec jne ja or and adc syscall sbb push sbb or sbb sbb adc or inc or xor xor sbb sub and and cmp cmp cmp (bad) lret shr (bad) (bad) rol (bad) (bad) mov (bad) aam xlat (bad) shl xlat out imul jmp stc in sti sti cmc xchg shl out sti cmc hlt loopne hlt repnz idiv xchg xchg adcl popf cwtl (bad) mov addl lahf (bad) xchg (bad) mov lods lods test mov stos mov cmpsl mov mov test push inc and dec inc dec pop imul inc dec inc inc push xor pop inc push push pop dec push push push insl gs arpl jno push js insl gs push data16 jnp bound jnp add and adc or push insb sub sbb sbb pop or or sbb or or sub xor and cmp and and adc aas and sub sub mov int3 lret ret (bad) fcmovne fld int fstp (bad) int ret rcr into enter in (bad) in jmp repz mov repnz call (bad) repnz loopne xchg out clc imul stc popf std std mov cwtl xchg adcl mov cmc xchg subb lods xchg mov xchg scas mov mov mov mov mov mov dec inc inc pop imul imul gs pop push je push pop push pop push push pop jp,pt bound insl imul insb jle pop inc inc outsb arpl addr16 jo jle outsl inc dec insb jae adc xor cmp sbb adc and pop pop sbb jns push push push or or and aas and aaa sbb ss adc sub and sub cmp cmp ds mov aam test sti std cld cld rol xlat fucom fmulp (bad) repnz aad lret lret in xchg cli lock dec call jmp cmc out xchg ljmp lahf nop xchg cwtl mov xchg mov (bad) mov mov test (bad) xchg std lcall lods (bad) xchg mov lcall mov lods mov lods scas mov dec pop pop inc push inc sub inc sub push fs push pop aaa jne dec dec push pop push aas push js ja push jp bound jnp jle jbe adc push das das xor or or add pop inc or add sbb pop sbb pop sbb push jnp adc sub sub inc add and aas das cmp cmp xor sub pop sbb xor aad not leave cmpsb xlat (bad) lret faddp scas ffreep rol out fnstenv ret sarb imul xchg sti std jmp stc jmp (bad) shl jmp loopne repz clc jmp decb test cwtl mov fwait xchg pushf repnz xchg sti scas test xchg mov into mov mov fnstenv fisttp inc dec dec and dec inc add dec pop push push inc pop pop pop aaa outsl push push or js pop gs push imul popa outsl inc arpl pusha gs push insb jbe insb jo jne push jo add sub xor sub sbb jne sbb pop adc sbb add and daa sub dec push push or xor cmp ss xor xor xlat iret clc (bad) (bad) lret ret rcr lret enter aam (bad) mov fcmovbe fxch mov mul loopne out test ret jmp loope (bad) (bad) cmc icebp repz rcr enter cli xchg test xchg out lods stos sahf cwtl (bad) lods sbbb xchg xchg mov lcall mov mov int mov xchg mov test lods test mov jb dec dec inc inc push sub dec dec dec pop das inc inc dec jo pop inc push push push pop dec cmp push dec je imul outsl push popa push inc inc dec inc dec dec dec popa dec inc pop dec pop das jns pop pop inc push inc push dec cmp dec pop dec push gs jnp imul jns jl jle inc pusha jno push jo insl inc pop outsb jb insb add adc and or outsb cmp add adc push cmp adc xor and or cmp sbb and adc push add or sbb sub (bad) rol ror aam out int3 fsubrp ret lret (bad) fadd mov rcl int3 xlat fmulp fmul (bad) repnz clc decl (bad) loopne xchg lret loopne out stc lock mov xchg mov addl idivl mov mov stos mov mov mov cmpsl mov notb mov jae push push dec inc inc push sub pop pop dec inc add pop inc pop pop push sbb push dec push push pop dec push fs insl data16 outsl imul pop jl jo pop pop jl dec jge jnp and or addr16 or cmp adc push pop jne push or or xor das es sub sub sub cmp aaa and cmp or sub das pop cmp aam out aam aam fldt faddp ret mov ret aam sti iret enter cmc cmc out test icebp (bad) cld std clc loop clc cli ljmp out jecxz ljmp loopne movsb popl sahf lods xchg xchg xchg mov mov stos stos lods stos mov iret cwtl mov mov mov scas mov push dec push push push dec push push push dec pop pop cs inc gs inc push pop gs pop dec pop dec dec cmp insb addr16 push push jge dec push inc jnp jp jb jp jg push add adc or daa or push nopl sbb push daa sbb adc sbb adc or xor and sub dec sub add and daa push xor sub sub xor pop mov aam int fisubr repz ffree mov rcr (bad) int3 fmulp fcomp std repnz cmc lock (bad) in out in (bad) mov lock loop aam jmp in mov xchg sahf movsb sbbb test (bad) addl xchg lea rcll out scas mov int mov mov mov mov test popa push pop push push jne inc dec dec pop dec insl inc pop inc push dec inc xor push dec cmp pop dec pop dec insl je pop outsl imul push push jo adc push jg imul jl pop das adc or or or outsl and push xor jnp sbb sub sub sub and xor and cmp sub add sub xor cmp aam lret mov fcmovbe fcmovu ret lret rcr mov (bad) aam cli aad lds loopne in incl clc call std loope xchg shr call out lret in mov xchg sahf call lahf (bad) cmpsl cltd (bad) xchg xchg mov (bad) xchg lea movsb mov mov mov pushf mov mov mov mov push dec push pop pusha dec push pop push sub inc dec pop push jns inc inc pop inc dec jge dec dec inc cmp jno jbe push pusha insl jge dec insl jge insb jns imul jo dec pop js jp je pushaw push adc adc push add push adc sbb adc pop daa adc add sysenter cmp inc inc addr16 dec daa dec aas dec sub push aas push ss and pop and pop xor mov xlat cmpsb cmpsl (bad) stos les mov mov mov mov aam faddl testb mov mov nop call in negl mov in out call mov popf lock repnz clc pushf cli xchg cld xchg (bad) xchg rolb stos enter int3 sahf into mov aam (bad) mov mov shll jge adc daa dec cs xor push xor ss cmp cli xchg das pop nop cmp popf push test or sub adc push xor pop push or sbb popa pusha pusha inc fs insb dec imul (bad) hlt clc push jo insb push insl push push push push inc pop dec push adc dec pop pop pop dec dec pop dec pop inc add adc dec dec adc mov cmpsb mov mov (bad) mov mov mov mov fwait mov addb mov ret mov test mov lahf (bad) (bad) cld lock (bad) ljmp outsl imul hlt jmp jmp (bad) (bad) call (bad) fld xlat (bad) scas into iret mov fmul rol xchg (bad) aam fld fcmovnu and xor add or xor adc cmp cmp aas sub test or or or adc pop pop push push pop sbb adc sahf xchg imul data16 outsl imul jne jae imul push jle arpl dec inc inc fs pop dec dec dec dec dec inc inc pop dec pop dec dec dec push inc aas push pop push inc pop pop pop push pop mov cmpsl mov mov mov mov mov fistpll mov mov xchg xchg enter mov mov mov cwtl cltd lea loop loop in loopne ljmp stc lock repz out call stc dec leave lret int ret fisttpl (bad) (bad) mov scas lds (bad) lret fcmovnu and mov sub sub and push cmp aaa adc cmp aas cmp cmp xor push add push and or syscall or xchg xchg adc sbb lcall gs addr16 pusha push pop jns imul push sub outsb dec cltd repz inc and push xchg dec jns push inc sub dec aas dec cmp push and push or pop xor pop das pop xor ret cmpsb shrl ret scas (bad) (bad) fwait mov icebp (bad) out test xchg mov mov mov mov nop call sti cwtl cmc lcall xchg loop in out call (bad) out popf lock repnz hlt nop test std sti sti cld std cli inc (bad) xor les (bad) int3 int lret int3 leave into iret rcl (bad) rcr aad rcl (bad) fcmovnu fstp fbld and and push or xor xor ss cmp cmp add add or or adc push adc lcall popa data16 arpl push push jne jae xor push imul jge adc inc inc inc pop dec dec inc dec dec inc dec dec inc insl push push inc adc pop pop dec jno pop mov mov mov mov mov scas mov mov cld mov scas out addl mov (bad) fwait cmpsl (bad) mov xchg sahf mov in loop out repz movsl call out in (bad) cmc repnz sti push std sti ljmp rol (bad) xchg ffreep (bad) ret int3 leave int3 xlat int fcmovu rcl xlat aad rcr (bad) (bad) cmp and and or das and and ss xor xor sbb sub add add or add sub sbb push sbb jo adc outsl insb jb insb gs jnp jl push push cmc or jnp imul outsb cmp cmp leave inc dec dec inc pop pop xor das pop push push dec pop push dec dec inc push push pop pop mov test xchg mov mov mov lahf mov mov xchg test fwait cmpsl mov mov mov xchg xchg xchg cld std out in hlt shr leave ljmp jecxz lock clc hlt sar repnz aam out ror (bad) ljmp leave (bad) iret in (bad) fcom rcr aam (bad) xlat fadd fcmovnu fstp mov ss inc push imul push dec dec pop pop inc inc pop gs inc pop inc inc xor cmp lsl or imul je unpckhps adc adc add sbb pop je fs jbe or inc cmpsb int3 inc inc pop pop pop pop insb insl inc outsb jo dec inc inc inc dec inc inc dec push dec sbb push je jne imul js das jns xor bound push push pop pop pop insl jae jno (bad) xchg mov test stos stos lods lods cmpsl scas mov sti (bad) rcr mov mov mov mov mov mov int3 into aad mov mov mov scas fisub rcl mov in in lret ret mov (bad) fidivrl int3 iret mov repz sti cld sti idiv out xchg rcl cld xlat xlat cld cwtl pushf lcall popa adc insl sbb adc pop outsb sbb add or cmp xor xor dec cmp dec cmp cmp pop aaa sub pop das push push pop push push and addr16 iret jp daa jno jae ja ja gs jl sub lds inc pop adc stos xor pop pop sbb shl loope insb imul add rol rcl stc out (bad) imul enter faddp out std lock (bad) lret fcmovne vmaskmovdqu int3 call (bad) (bad) jmp xlat enter (bad) int (bad) fdivr hlt in jmp mov stc cld lahf loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods dec imulb mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg enter fcomip icebp sar mov mov addb or cmc (bad) imul stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int into rol rcl aam (bad) xlat pop (bad) fcmovnu fstp fbld and and sub sub cs mov xor xor ss cmp cmp cmp ds add add push pop or and cmp es sub sub sub cs sub push xor cmp jnp push add dec add push or inc orps pop adc cmc in sbb arpl gs imul dec jno jae jne ja jns jnp jge jg inc inc inc inc inc inc inc dec dec dec dec or dec push push add xor pop xor pop cmp mov leave cmpsl test stos stos mov out (bad) mov mov mov fistpll jmp call mov xchg xchg xchg xchg lds cmc popf lock xchg movsb jecxz in out jmp mov lahf icebp repnz div idiv stc lret std into push (bad) bnd lock (bad) int iret rcl xchg sarl fnstcw fist and and es or sub sub xor inc xor inc cmp pop aas insl add add push pop or or xor push adc jp jge pop sbb insl pop add arpl imul outsl jo jb cmp jns jnp jge jg inc xor inc inc inc js inc dec dec dec or push ds xor push cmp pop aaa pop iret mov cmpsb cmpsl cltd test subb mov mov mov idivl loope hlt xchg mov mov (bad) rorb xchg xchg xchg rcrl negl test xchg out jmp (bad) out pushf icebp repnz stc mov cltd std cltd jmp lds lret mov sarl xlat fstenv fist dec and dec daa pop sub sub xor xor cmp push cmp dec add popa pop imul jl jno jbe jno jnp jns push pop pusha popa bound gs imul outsl add jae jne ja jns jnp jge jg inc cs and inc sub dec sub dec sbb push sbb push cmp pop cmp mov lret test movsb scas mov loop (bad) mov mov mov lret and xchg (bad) lret (bad) fcoml in stc cltd call lahf aam ljmp jmp fwait out xchg icebp xchg mov stc mov xchg std xchg ljmp (bad) clc leave in cld int iret loopne rcl in aad xlat (bad) fldt and inc and or jp dec das inc xor pop xor cmp or add xor sub cmp or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl leave lcall (bad) jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub and (bad) cwtl mov loopne xchg xchg xchg xchg sbbl (bad) xchg (bad) xchg div outsb jl in inc stc loope inc aas out out cli loopne out pop jns mov sti sti cld sti call ret shr mov lret push into iret rol xlat ret rcr outsb mov fstp aam or and cs and sub pop inc xor cmp jmp adc cmp ss or adc add fadds mov or aas sub pop adc sbb adc adc sbb push xor je addr16 pushf pusha insb jg jo jae inc jae sbb jp jl outsl or inc inc dec dec aaa pop xlat dec cmp dec dec dec addr16 push push es push sub pop pop pop dec dec mov mov sub stos fildl popf mov mov xchg xchg push test mov sub xchg xchg cltd pushf in or sahf cltd xchg add jecxz int out out ret in call push gs xchg stc stc cli std mov insb pushl ret out jge leave int3 fmul les aad (bad) shrl cmc (bad) and or and pop cmp sub xor dec adc cmp push test add add stos lcall or adcl cmp xor jno adc gs jno cmp data16 and pop jae jb jg jno jle dec jl jns dec push dec sub inc dec pop inc pop dec and push push inc pop es push sub pop pop pop xor mov leave sub mov mov mov test xchg popl cmc outsl mov mov mov xchg lahf ljmp in ss out scas (bad) icebp repnz cmc testb stc cli (bad) cld std (bad) rol rol (bad) (bad) enter int3 int leave rcl shr aad (bad) call (bad) fnop and and adc es sub sub sub xor aas inc daa movsb cmp cmp xchg add pop or add jle lcall adc sbb fcompl adc outsb jbe outsb sbb imul jb jne pop mov movd push inc inc data16 popa dec dec dec dec cmp push push and push push pop jo pop pop push dec pop pop (bad) hlt into mov test fsubrs jo mov pushf (bad) mov mov mov mov aam xchg mov (bad) mov xchg xchg popf mov les pop loop in loopne jmp lds fnstsw (bad) jmp mov (bad) mov vshufpd stc lret lret lret (bad) mov (bad) (bad) (bad) mov push and and mov sub xor xor daa aas push mov cmp jecxz dec sub add jp sahf or movups jge adc or sbb jae dec add outsb push inc push imul shl jae pop ja js adc js dec sub cltd pop insb bound inc pop pop and jg pop pop push (bad) pop pop jne mov (bad) cmpsl test xchg mov mov mov mov (bad) lahf test mov lea xchg pushf xchg xchg xchg test popf sahf out loopne repz imul loop mov ret cmp fcomi cmc div rcr cli (bad) cld std jae rol leave ror ror lock lret fcmovnu enter rcr mov leave rcl lret push jns and daa sub cmp inc (bad) das das cmp cmp and push dec or add adc sub pop pop add popf or es adc adc es sbb leave jae jae jae jne jns jae lret jle outsb bound push mov js into out push jae dec push inc pop es dec adc roll xchg pop inc push jbe pop pop pop add rcll lods stos mov mov push test in mov mov mov mov mov mov test xchg adcb pushf mov cmc mov mov pushf popf xchg mov loope jmp repnz cli jmp ret xlat (bad) cmc idiv repz shr cld std hlt and rol (bad) (bad) clc int xchg int3 int mov pop (bad) push insb lret pop aad and xor mov pop fsubrl sti cmp daa out jno xor sub cmp pop setbe pop or loopne cmp cwtl push pop sbb xor sbb sub dec outsb bound outsb dec js push mov outsb outsl pop jno push jns jp jl outsl or inc inc dec dec aaa inc inc dec cmp dec dec dec aas pop and push and pop jae pop pop push rorb mov test (bad) test mov lea mov mov int mov stos test mov movsl (bad) (bad) nop xchg mov mov (bad) cltd mov ds hlt in rol ljmp push xchg clc cli sti cli aad inc lret ljmp enter leave (bad) dec mov (bad) (bad) fcomp fdiv repz aad mov and ss movsl fwait cmp mov cmp cmp mov cmp sub sub or or or add bound adc add or push sysenter or jo jne jne jns inc xor js jge or je pop jbe jns insl push int3 jg dec cs inc inc dec push dec pop inc and push popa fs pop es push sub pop pop pop sub mov movsl cmpsb lods mov sahf mov mov mov cmpsb mov xchg mov mov lea popf pushf lahf sahf (bad) pop and xchg cwtl lahf mov clc loope lret in out xchg jmp ljmp repz lock xlat sti sti cli in repnz ret (bad) mov cmpsb clc lret enter pop rcl ffreep ror bswap fmulp fmul iret push call xor add sub es xor cmp in cmp ss and sub or sub push sub xor xor imul cmp xchg add pop add sbb or adc adc scas add or nop pop pop pusha pusha push gs jge inc loope outsl jp mov arpl jmp jl adc inc dec dec inc push outsb enter arpl dec dec inc and push and call push push pop jbe pop inc xchg test lods test mov scas mov cwtl mov mov xchg mov icebp imul mov test aad xchg popf ljmp lahf loopne lea in inc stc stc std xchg lods in out in adc repz div clc call pop rcl fidivrl mov in iret rcl mov jne leave ret movsl popf fstp aad bound daa sub inc popf sub and cmp daa and add cmp cwtl push or or fs add mov prefetchw test push addr16 sbb outsb arpl jbe xor ja push jnp jl adc inc dec push mov pop dec cmp dec aas js push push push cmp pop push dec movsl pop dec mov or movsl (bad) (bad) test scas scas mov dec mov test mov (bad) test mov je lcall popf or lcall cmc sbb repnz xchg in hlt (bad) (bad) repnz out out mov inc rol aad (bad) mov push lret int3 into iret (bad) jae (bad) int3 cmpsl or test fdivrs xor push sub sub sub inc xor sub sub sub adc adc add movups or and sbb imul outsl jne dec cmp insb js jl js bound fs stc iret dec mov jecxz xor inc inc inc sub dec inc fs dec dec pop inc pop inc push inc and lds jae pop pop pop mov mov movsb movsb mov mov test mov mov xchg xchg sahf xchg xchg sbb lea lahf test fwait pushf xchg lea push in cmp shl in out out stc repnz out fucomip stc cli icebp and (bad) aad rol into aam mov push lret int3 into iret (bad) mov cli mov ror fisubr or and dec pop sub and pop sub xor xor outsb adc cmp ss or add add lcall or adc sbb push pop add sbb insb popa mull dec gs sbb imul outsl jo sbb pop push insb outsl jne in inc xor inc inc dec dec and pop pop inc push inc pop cmp pop push xor dec mov mov cmpsl test fsubrs sbb mov mov stos xchg xor test mov loop (bad) nop fwait std mov xchg jmp push pushf in mov loopne in (bad) in loope clc loopne arpl out in jmp cld fucomip stc cli icebp and out cli in (bad) rol stos add fcomp sbb fadd ret pop (bad) jmp lret or xor xor ss xchg sbb aam aam cmp pop aas xor cmp cmp cmp xor adc ds or add or cmp and push bndldx adc add push sbb ss bound gs push insl dec insl jo addr16 jne ja js jnp jge jge inc pop inc inc inc xor dec or dec push push push push push push out pop pop ficompl pop outsb pop mov movsl test stos lods lods pop scas mov and mov mov (bad) addl mov xchg cwtl cwtl subl in xchg psubsb loopne (bad) call lret repz incl std std (bad) stc mov pop ret mov mov (bad) int (bad) rcl faddp faddp (bad) icebp test (bad) (bad) or and xor or inc adc xor xor aaa ds dec movsb cmp push add add imul pop add sub or sbb popa adc sbb int sbb prefetcht0 xchg dec popa bound jae dec push imul jne jno push jp jbe das jg dec outsb push push inc xor xlat dec cmp dec dec dec js push push pop jge push pop push push dec pop das mov mov movsl mov mov mov (bad) bound mov mov (bad) mov mov mov scas xchg xchg lahf stc sub cmp loop loop leave out jecxz mov shr out fcmovne cmc idiv xchg inc sti sti (bad) (bad) clc pop (bad) mov ret shr leave lret mov iret fcmovu stc nop lret leave (bad) ljmp (bad) push test and daa sub add sub xor sbb sub add cmp push cmpb or movsb add or sbb push adc sbb xchg scas adc imul arpl mov gs addr16 movsb fs bound jp jns icebp notl jae dec enter pop push pop inc gs inc push inc pop pop inc pop int push sti pop sub pop pop mov movsl lods add mov lods subl add mov xor xchg test xchg pop xchg cltd fwait (bad) mov test repz xchg call fwait mov loopne call xor jecxz loopne cmp in cli jecxz lds out jmp in call rol jecxz ficompl fcomp sarb ret (bad) movsb rcr stos repz fcompp lods xor and xor cmp push sub push adc xor mov sub sub sub sub add or add fildl add add imul push dec pushw fs jp call je ja pusha imull jge insb popa push arpl dec outsb dec dec inc jmp fcompl push push push testl jge pop push add test lods lods scas mov mov scas es lahf movsl test stos xor xchg sbb test mov xchg popf mov xchg icebp ret cli jns (bad) out loop sti cli loope arpl lock repz in loope jne sti cld cld pop out loop ljmp leave lret xchg iret rol cli lcall leave enter int3 xor xor xor add sub xor cmp adc cmp xor lea add add pop sbb addb adc rcll adc pop popa ja mov pop insl push jge jns data16 jb push addr16 outsb push jle loop arpl xchg inc inc inc push xor dec inc jns push push pop outsl push pop pop pop dec push dec rorl mov xorl lods scas or arpl icebp mov pop addl mov add mov mov mov sahf inc lock (bad) int3 xor out rcl in out ds icebp clc fisttpl (bad) cli sti imul lock into mov (bad) les int3 movsb push int3 into vpsubd frstor icebp fcmovnu (bad) mov and sub es xor es add sub push xor xor out xor cmp cmp sub or adc pop sbb adc push sbb add push jbe,pt sbb movlps je fs jns jl jp and jo shlb popa pop mov inc jge jne nop inc inc dec insl cmp inc bound inc and push push inc inc inc orl dec pop mov xorb lods lods or xchg movsl lcall xor test pop addl mov test cwtl cwtl cmp loope call out call out in lods or in out jmp inc ror mov addr16 mov enter mov inc (bad) inc jp stos repz fcompp dec sti and cs daa sub cmp xor cmp and and and sub je xor daa adc or or add sbbl adc add push xchg push sbb pop mov mov insw inc push push inc mov or push jns jno push jg inc push push push xchg push push push inc pop (bad) pop dec dec dec pop jne ja inc inc ficompl dec js ja mov sub test stos mov mov mov mov test test sahf mov (bad) out push fsts fwait fwait xchg cmpsl ret push cmc lock rcrl in jmp leave pop repz in into push clc cli sti in repz vshufpd adc lret (bad) loopne (bad) mov (bad) (bad) fcomp fdivl pop and and xor and cmp cmp and sub es inc cmp cmp daa adc push adc sbb sbb popf pop adc mov cmp adc pop popa bound mov bound imul jo js outsb outsl pusha scas push push push imul arpl push movb dec dec in inc je jnp push push pop inc jns adc dec mov mov movsl mov scas mov movsl lods cmp mov lahf stos xchg push addb mov (bad) (bad) lcall (bad) ljmp iret loopne call call les repnz repz jmp std mov rol lds (bad) ror mov (bad) hlt (bad) in (bad) lock fcmovu (bad) into (bad) dec or and aaa sub sub sub xor push sub cmp xor add insl flds push sbb rclb sub notb adc cmp in pop push pop jnp arpl jbe inc jbe arpl inc int3 jo pop jb jne sbb jp jp jno iret inc inc dec push push pop push pop inc cmp dec dec pop pop inc inc inc inc inc pop inc inc dec dec jo das pop pop mov mov jno mov nop and stos mov movsl stos pushf xor cmpb mov sbbl test popf mov mov loopne rol int3 ljmp cld in out in icebp repnz mov clc stc clc sti cld std fdivr rol ret (bad) lds lret int3 int iret rcl rcl aam rcl fcomp add (bad) fsubs and and xor sub inc xor inc cmp dec xor mov aas add adc adc xchg sbb sbb push add or mov pop add jnp or pushl jg or jns jbe add jg insl outsb or gs cmc xor jge outsb outsb push push pop cmp push paddq push push bswap inc inc dec dec (bad) enter inc jle dec dec inc mov mov mov mov out push mov nop mov scas xchg push addb mov xchg pop aaa xchg out cltd cltd lcall loope lock mov jmp out out lock repnz fidiv clc stc lock out hlt call aam rclb dec (bad) leave lret fcmovnu mov rol fdivrp not enter aad mov and sub xor and and and and and sub push fcoms mov and xor xor xor cmp xor cmp jecxz cmp pop or mov sbb adc adc mov or pop add sbb sbb ds sbb adc or pop out (bad) push rorl pushw addr16 bound jge std ret jge rorb cmc lret push push inc inc push inc pop inc (bad) cld pop xchg pop pop inc pop jns inc push inc pop dec adcl leave push dec lods mov aaa lds mov mov mov mov insl scas outsl aaa icebp mov xchg xchg xchg xor test lahf push (bad) nop test orl repz jo sbb call cld loopne sub jecxz repz jmp in cli out into push sbb aam (bad) (bad) pop loop int (bad) out rcl frndint cli (bad) xlat rcl lret aad or (bad) xor xor adc add and and xor jmp xor cmp and sbb xor add or aam or and adc adc sbb sbb sbb pusha jp arpl addr16 jbe insb jo jb je jbe imul jne push xchg (bad) inc outsl decb inc pop xlat inc xchg inc jns push push pop and sti pop sub pop pop pop stos mov cmpsl scas subl mov mov cmpsl mov mov xchg addl mov (bad) mov xchg cwtl lahf lcall loope jmp fcmove ret in in lock repz ljmp idiv stc sar cld out cli shrb (bad) fnstcw lds lret in fcmovbe iret fsubrs push and daa pop cmp cmp pop fimul xor cmp adc ds or mulb or adc pop adc sbb aaa insb push popa popa adc je dec enter jg js js arpl ret imul inc fnstcw inc push dec push dec aam pop fisttpl dec pop inc pop inc inc xchg inc adc push push pop dec push dec push inc mov mov fidiv jle mov fidivr gs sti mov scas mov les popf test lahf (bad) test lcall std repz in icebp stc loop pop les out out cli mul jmp (bad) ficom mov decb ret (bad) enter int (bad) out rcl (bad) (bad) fmul ror rorb sub hlt xor xor cmp jns rcl sub push xor xor inc cmp cmp pop sub movlps or mov add aas jge cmp adc push insl jbe stc push jno icebp jg jg popa jbe jle pop cmp js push jp jge or sub inc inc inc es dec dec pop inc pop jle,pt push push inc pop dec pop xor dec scas rcr pop movsb aad cmpsb test lods les mov mov test mov mov nop mov (bad) mov lods mov popf and xchg xchg sahf cwtl mov inc pushf xchg mov loopne rol int3 ljmp cld in out in icebp repnz sti cld mov ret ret les (bad) enter int3 ret rol loop aam (bad) xlat fsubs jo and and sub pop and xor xor cmp xor cmp adc insb mov ja or add push jg adc push jp pop sbb adc xor push mov insl jnp jge pop mov imul ja jp ja push outsl inc inc dec popf inc inc inc insl dec push jp dec sub push sub inc es pop push dec pop dec pop xor jnp cmpsb mov sbb aas icebp mov mov mov gs (bad) pop (bad) addl mov out dec xchg xchg nop sbb xchg push cs popf popf xchg mov lock loopne pop xchg xor out hlt jg and and in sub rcl lret iret dec jg pop lret mov rcl (bad) vpaddusw pop outsl cmpsl add push cs xor and movsb pushf push repnz xor test ss cmp sub xor add push add or pop add push pop jle adc pop push pcmpeqd sbb add in and gs jns sub insl jle popaw jnp std ret pop stos jbe jae jg insb je into negb inc inc dec pop dec push pop dec pop push mov pop inc pop inc pop aaa imul dec push dec movsl into jl movsb scas mov (bad) xchg stos stos cmpsb cmpsb test add xorl arpl lods test push sahf test fwait sbbl pushf popf xchg inc loopne enter aam shl jmp out (bad) loopne repnz sub div sarb (bad) inc rol (bad) repnz int3 fmul iret rcr rcl aad out fsubrs (bad) xor and sub inc leave sub es ds sub sub outsl loopne add push add rcrb faddl sbb adc adc pop adc lcall pop push push hlt gs jnp jnp data16 dec pop jle jae data16 jb push jl mov inc pop ja outsl inc dec dec inc inc dec pop push push pop lea jge pop dec pop pop pop pop pop mov stos cmpsb cmpsl test mov mov popf gs mov xchg test orl scas mov fwait xchg mov dec cwtl cltd lcall in loopne in out stc lcall icebp lock test stc stc mov (bad) xchg (bad) inc lret std lds int jecxz iret fisubl (bad) (bad) fcomp fdiv repz aad sbb add pop pop adc pop add sbb mov cmp cmp aas push sub push or or movups cmp rcll pop adc sbb or arpl dec scas push sbb pusha jb addr16 mov mov inc dec sub push inc jno dec dec dec pop inc js push push pop inc push inc pop sub pop sub movsb mov cmc cmpsb cmpsl mov stos test mov mov mov mov test imul nop xchg xchg test test lock loopne jmp jmp in out out loope cmc loop lcall xchg ss dec xlat ljmp enter mov iret rol aad (bad) jae cmpsl lock fcmovnu lret (bad) (bad) and sub sub daa aas sub xor ds aaa cmp adc xor add pop add or push sbb pusha fistl adc add jne sbb jo adc ret popw inc push inc aas jo js inc arpl jg jg mov inc sub sub dec dec pop inc adcw imul dec dec pop mov movsl lods jnp scas fcom or mov fildl stos mov mov xchg jae sbbb xchg (bad) clc fcompl mov loopne rol int3 ljmp cld in out in icebp repnz sti cld jno inc in ret les enter int3 int iret rcl rcl aam (bad) and sub add sub xor cmp pop fidivrl cmp adc loopne adc ja add pop sub or push jg adc push leave push sbb adc sbb gs insl inc jns imul imul pop js jns jo push outsb jg dec pushf inc inc inc insb inc push dec dec dec dec add int inc push push push push push pop pop pop in jmp dec push mov mov stos in lods mov mov mov arpl mov pop addl pushf push sahf mov leave subl lahf adc mov sahf negb jecxz in repz mov sti loop outsl imul sbb repz repz sub stc lock sti divb rol mov movsb (bad) mov lret out rcl fdivrs ror or adc es es cs das add sbb xor adc cmp xor add add add push adc or push or push pop adc add ja addr16 js insb xor loop fs and insl addr16 imul pusha popa in bound inc pop pop fldl pop pop (bad) dec push push rorb push adc push roll pop pop inc outsb js push mov lea stos lods lods test mov xchg mov mov mov mov xchg cmpsb lea ret xchg popf cwtl cltd mov out cltd loop out in call mov out cli and repz out (bad) clc stc lock (bad) iret sbb loopne lret in iret rcr or sar (bad) xlat (bad) jmp repz (bad) sub or and sub sub sub sub cs xor xor sbb cmp add or sbb jle insb punpcklbw adc adc jns sbb adc or insb fildl popa adc gs inc inc push xchg outsl jo jae popa das jbe jns jmp jl adc inc inc dec sub inc inc dec inc bound and adc push pop pop aaa fstps push xor pop mov cmc cmpsb cmpsl mov ret mov mov push mov arpl addl mov nop fwait dec in inc xchg xchg xchg lcall cltd lret cld (bad) ror call (bad) lock sub hlt cmc fdiv call sar mov (bad) (bad) clc int out int popf rcl ret rol xadd push fcmovu fst fnop and mov add sub or and xor cmp in cmp adc xor push push or sbb pop and or and adc pop and pop pop push out outsl or ja add jp divb jg mov push sbb dec pop push imul leave dec dec inc push jl push push push dec imul push jne pop mov sub jl lret movsl cwtl xor pusha test shrl mov stos jl test mov adcl xchg lahf xchg cmc loop jmp cmp xor mov ljmp loop (bad) idiv cli call cwtl inc lret fldl into cmpsb in int3 (bad) flds rcl rol rol ror iret inc lret pop fisub sub sub cmp add stc cmp ljmp xor adc cmp mov add adc and add push cmp jo lret add add jb xchg imul cmc jo jns ja pop jno lods jbe insb js adc mov inc dec push js fs dec dec pop pop push jnp push push pop xchg pop jbe pop dec nop stos mov repz mov pushl lods sahf ds fistpll addl je lea loop xchg xchg xchg xchg ljmp lahf loopne lret in jmp rorl lock std aam (bad) (bad) jmp (bad) mov cmpsb (bad) mov enter mov cli rcl aad call (bad) lock fisubrl and pop dec sub das xor sbb xor sbb pop cmp push add add enter and or or add cmp push sbb popa adc gs inc bound inc jle sbb pop je ja or push jl push jle inc inc imul insb pop pop cmp dec ds push push push fbstp push sub pop pop pop jbe mov xlat mov test (bad) stos lods lods test push aam ret pushf mov mov xchg mov mov sahf mov lea xchg pop cmpsl sbb test enter loope call in imull out cld (bad) jmp test repnz out clc (bad) ja dec rcl rcl rcr (bad) (bad) fcmovnb ffree mov (bad) aad mulb ficoml fstp fisubr and cmp cmp inc outsb xor aaa cmp pop cmp add adc adc adc jl movups add sbb pop jo xor pop pop push jp fs jge or ja jne addr16 jae mov jnp je iret sbb inc xor inc dec dec dec and dec dec dec ds cmp out push push dec dec dec push dec rolb mov movsl cmpsl mov stos mov xchg (bad) mov mov mov mov rcll test mov mov stc mov cltd pushf nop lea mov mov out cld (bad) std cmc sahf fcomi hlt repz out call loop aam or (bad) (bad) inc or int fmul rcr sub aad add int repz iret leave ss test es cmp cmp mov and sub (bad) mov mov or sbb arpl adc sbb sbbb divl arpl jge jl popa fs les ja push push jle inc push dec push push push dec pop (bad) adc dec aas adc dec inc push jg pop pop push dec dec inc lret jbe (bad) mov mov cmp mov mov mov mov adc mov xchg xchg mov arpl mov mov ljmp fs in sahf and jl stc lock ret dec mov in iret iret fcmovb enter call fcomp leave xlat aad repnz or and add add das das cmp mov das mov cmp dec add add imul pop push das sbb sbb adc adc push pop sbb sbb cmp inc dec imul jge outsl jp jb je jbe jp pop jnp ja jg pop jo insb dec inc inc inc inc dec arpl inc mov push jle push inc push pop pop push mov jl cmpsl lods subl mov mov cmpsl mov mov (bad) stc xchg mov mov popf xchg xchg lahf popf xchg mov lcall lret loop aam out call in (bad) in mov repnz mul lret (bad) repz (bad) cmc lret shr (bad) (bad) enter int3 int mov shrb std fcomp vpsubw rcr and sub or es and sub sub cs xor cs ss sub inc out aas add add sbb and pop or add or sbb adc push cmp push push arpl pusha popa dec fs dec inc imul pop popa jb jle jbe js jp dec jg bound inc dec inc inc push inc xor dec dec dec arpl pop push push pop push pop jb pop pop push andl stos xlat jae lods stos test popf mov mov mov addl mov mov xchg xchg xchg lcall loope jecxz in cld fsubr ljmp icebp jecxz sbb idiv repnz rol cld std hlt rol (bad) call (bad) into fcmove adc rcl fadd rcl (bad) enter add (bad) and es dec xchg daa daa cs sub xor cmp xor cmp cmp adc insb mov push add rcrl add or xchg adc adc adc gs imul pop pushw (bad) bound jbe js sbb outsb pop pop jo jae sbb jbe jg jle jns js jecxz inc xor inc inc dec dec and addr16 push push pop push jle pop pop push jbe dec pop ja mov scas mov stos mov faddl stos mov xchg xchg jecxz (bad) (bad) xchg xchg sbbl inc xchg mov ljmp in ss std call lret or call repnz std (bad) loopne in int3 (bad) (bad) enter int3 (bad) adc rcl clc ror aad xlat fmul fcmovbe (bad) (bad) shlb and and and xor xor ss sub adc push mov add adc add and (bad) or es adc sbb jnp push pop adc push adc outsb outsl mov imul inc pusha jno jns jne pop js gs pop push jno inc dec dec inc insb push inc inc inc xchg dec dec dec addr16 dec inc push push push push pop push dec jne push push pop pop pop dec nop mov cmpsb icebp test mov scas mov mov mov mov dec mov pushf movsl inc xchg lods pop (bad) nop xchg push xchg mov push popf xchg jle clc lds call int out lock outsb cmc ljmp in popa clc loopne fimul fcoms shl push (bad) into (bad) call (bad) aad fcmovb rol ds adc ds xor cs scas xor and and sbb sahf add or and enter mov xor paddw xor test mov cmp ds add add add push sbb mov or mov or sbb sbb icebp bound stc popa jnp xchg insb icebp imul jmp jp arpl cmp dec push les dec xlat inc pop push xor pop dec jae push push push les inc push rcll das mov mov lods xor mov sub mov mov mov adc xchg subl xchg xchg mov lcall loope call call in (bad) out lock test (bad) div repnz sti jecxz fcmovnbe iret rol iret (bad) enter int3 int in ror jecxz aad xlat fcomp (bad) fcmovnu int3 lods dec and sub push int daa and cs cmp push xor push cmp cmp adc add push push add sbb jle or or jb xor sbb sbb pop pusha imul add inc push outsb jo adc jl in jns push jge jle push insl jp dec inc fs inc cmp aaa push and push push push jo pop pop push das lcall movsl mov fildl xchg mov stos push xchg (bad) or mov push lahf scas movsb (bad) mov jl xchg popf xchg mov fwait pushf xchg inc popf call in aad shl in out out fsub repnz sub idiv sar jmp std (bad) dec shll ror (bad) enter iret int iret rcl mov aam leave int in fcmovnbe scas divb and and pop sub and inc das inc sbb xor inc rcrl adc xor fcoms sub pop add sbb cmp les sbb push pop jg inc dec imul arpl jnp insl fs jno pop je ja js jp jl dec dec inc push dec inc inc inc pop ja dec adc dec dec push dec push inc dec dec jl push push push sub pop mov movsl cmpsb lods fidivrl ret stos faddl rolb (bad) lahf mov mov xchg mov addl lcall xchg sahf mov fwait subl jmp call in out (bad) repz cmc div clc stc enter icebp inc rcr mov xchg lret int3 fdivrl fldcw aad test fst int3 and push and sub inc sub sub das sbb push cmp xor cmp dec hlt push push pop push and or es adc cmp adc sbb sbb sbb adc imul sbb jo jae pop pop ja jae or push mov dec push inc xor and arpl dec dec and push pop inc push inc pop dec pop xor pop pop push mov mov lods lret test mov cmpsb mov mov mov mov mov addl sbb sahf cwtl sbbb cwtl xchg cmc push popf popf xchg xchg mov call in out daa popf out cmc cmc cld cwtl insl clc cli icebp in push push (bad) lret inc lret jecxz rcl pop aad fdivr mov notb xor xor sub sub es pop mov xor xor cmp das xor add jne,pn or and or sbb jle data16 sbb sbb data16 or addr16 jb jle jle pusha jle dec mov jnp jnp mov insb dec inc inc inc pop inc arpl dec dec dec and jle pop pop push test je mov mov lods test mov mov mov mov mov addl mov popf xchg xchg xchg lea pushf popf les in in in lcall out lock mov xchg stc cli icebp out clc out cli mov test (bad) enter int3 int mov (bad) rol (bad) lock fcmovnu (bad) rcl lods sbb and daa cs mov sub cmp movsb pop xor cmp or or mov pop or gs or adc sbb adc adc sbb imul fsubl push insl outsb gs push jb jle jg push js jge jne ja dec push xor dec dec dec dec pop ret pop push push push inc inc inc jle pop pop push jae pop pop push iret xchg mov mov mov fiadd mov mov les test mov test (bad) call pushf lea mov (bad) int3 lahf out loop cwtl jmp out (bad) icebp icebp hlt loop in jecxz jle sti mov (bad) inc (bad) aam rol mov fstp jecxz int (bad) rcl fidivr fmul aam push fisub sub sub es and adc rcl lock cmp xor aaa sbb xor cmp add push fnop adc pop sbb adc push ds sbb adc push sbb dec popa bound dec push insb inc jle jo lods jae jne ja jns dec jl jl inc inc ss inc inc pushf inc dec dec add dec dec pop dec push push push push push push push push pop pop pop pop pop pop ds mov movsl mov test movsl stos lods lods mov mov xor mov cmpb test scas xchg lea mov ljmp lahf loopne lret in ljmp (bad) popf icebp icebp hlt fdivp loope sub (bad) std xchg jb (bad) cmc fcomps lods pop (bad) out mov adc ljmp shlb cmc into fbld sub and (bad) daa aaa sbb add sub sbb xor cmp cmp cmp cmp aas das add add add push push or aas adc mov pop sbb imul push adc outsb imul js adc add js jnp push idivl inc push inc inc dec push dec pop dec cmp push push push push jge push pop push jb pop pop push ja mov cmpsl cmpsl test scas sbb scas movsl cwtl cmp lds lret xchg mov repz mov adcl mov out xchg repnz loope hlt call clc (bad) clc sahf data16 jmp sub les inc ror ror stos fcmovnb enter int (bad) xlat mov mov (bad) lret xlat enter and dec mov sub xor das das cmp xor and xor push and add insb xchg add or or popa cwtl adc sbb sbb cwtl push sbb aaa inc or popa push sub inc imul fs jns inc jne jo jb jle cli jl jns xor dec sub dec dec pop inc inc gs jp push push pop cmp pop pop dec push sub into mov cmpsb mov stos stos mov mov movsb mov stos mov mov mov add push xchg push xchg stos mov xchg popf out jne lahf ljmp cmp std shr in out lock cld hlt cmc cld cld clc shr sti cld mull inc shr (bad) lds lret int3 int iret rcl mov aam mov fcmovnu fst fbld and adc and jb sub xor sbb xor inc gs cmp cmp add jbe push or jl ja bound adc sub rorb dec insl arpl adc imul jo lods jae pop jbe addr16 pop push jae jle dec inc push inc inc dec cltd dec dec dec popa dec dec dec pop push push push push push push fs dec push pop pop pop inc outsl mov movsl (bad) cmpsl test mov test mov mov mov mov xor xchg jmp (bad) cmpsl xchg xchg xchg xchg mov xchg inc (bad) mov jmp nop or out loop cli jmp out out neg bnd rcr idiv cli icebp idiv (bad) out rol sbb enter int3 int iret rcl loopne aam (bad) fcomp shr fldl and cmp add sub pop ret inc xor xor cmp dec dec dec aas jo add add je outsl or or and enter adc insb mov imul mov push outsb outsl outsl inc push pop jnp jbe jae push imul inc inc inc imul dec dec dec jl push inc pop push push push dec addr16 pop add pop pop push pop mov cwtl cmpsb cmpsl mov fldl fwait mov lret mov addb scas mov (bad) (bad) xchg fwait dec xchg xchg xchg call ljmp out ret ljmp icebp repnz push fsubp clc stc lock rol rol (bad) enter int3 fld iret rcl leave jecxz aad xlat fcomp xchg fmul rol sbb and push jno sub sub xor aas inc aaa cmp cmp dec ds or jb jne push or or and (bad) bndldx adc pop adc push xchg pop insl fistl bound dec data16 push imul jns lahf add jbe jns adc jl jne inc dec dec outsl dec push inc pop lahf pop dec pop dec pop dec fsubp pusha xchg pop daa dec and pop pop pop sub mov stos lods stos movsb jno xchg lcall lret mov addl mov nop fwait cltd xchg mov inc lcall loope jecxz in je cld in in in cmc fcomip icebp mov idiv call clc cmc call stos inc enter mov rcl aad jecxz xlat test fcmovnu (bad) lret and sub es and das cmp cmp and and and sbb add adc adc sub or sbb adc sbb sbb imul inc push bound add je gs je jge jnp loope inc dec push inc insl add dec inc imul push push pop inc push and je pop pop cmpsb mov mov xlat push aam flds mov mov mov stos mov mov mov addl mov std adc xchg xchg sahf imulb mov mov jecxz out mov jmp ds out cli loopne pushf sbb idiv rol sti sti notb lods in (bad) sarl iret iret rcl mov rcl pop iret (bad) hlt rcr fildll xor push push and and add sub lock aaa sbb xor pop adc aaa cmp xor cmp or add push sub or push movups adc adc or sbb insl arpl push imul insb insl xor pusha or jne jl push or jbe jns xor dec dec aaa push xor bound dec dec fsts push jl push push push push push sub sub mov xlat cmpsl test (bad) fldcw rolb (bad) lahf mov int3 mov addl mov lods xchg xchg sahf lods lods xchg cwtl cltd mov ljmp out rcrl icebp icebp hlt loop xchg clc (bad) jmp xlat iret rol xlat int3 out xlat enter enter rcr outsl mov (bad) fnsave or dec and and sub jmp daa daa aas push (bad) cmp cmp xor xor out jne jae add pop push dec xchg and and aaa das cmp pop or pop pop xor xor sub dec jp add add pop push mov or or lahf adc push cmp pop xor imul popa jnp jnp imul outsb jo arpl jb icebp jns jl push jge jne insl inc inc inc push dec dec pusha iret dec dec dec gs push pop cmp inc push sub pop mov movsb cmpsb mov and fwait mov mov stos mov nop mov cwtl sahf mov jb jo push xchg xchg xchg dec (bad) mov xchg lcall loopne in cmc out loop ljmp icebp clc lret div lock xchg cld (bad) (bad) inc rol mov (bad) int mov repnz rcr jmp aad (bad) fcomip stos fcmovu (bad) cmc push fisub daa sub dec es add sub sub sbb xor cmp das xor add add adc or push add push add sbb or mov pusha imul jo jbe iret push insb jl jle push outsl jb jg loop jns arpl jmp jg cs inc dec dec push pop pop pop pop lcall (bad) push push pop dec aaa iret pop pop push xor pop mov mov mov jg mov lods movsb shlb and mov stos addl mov mov (bad) adcb mov lcall out icebp in int out out ret in in fdivp repnz in test (bad) stc mov std std (bad) stc scas repz ret ret aad inc lret lret (bad) (bad) (bad) push ret (bad) jmp hlt pop (bad) es xor or daa cmp xor inc fidiv cmp sub or add in add or or adc adc sbb sbb ret push pop pusha dec bound and addr16 in outsb outsl jo jb je jbe js jp jl jle inc inc inc inc inc mov dec jmp dec dec push pop push push push pop push push pop pop pop pop pop xor mov cmpsl test stos stos lods mov mov mov mov mov bound test mov (bad) nop into xchg xchg test in cwtl xchg xchg in pushf sahf xchg repz nop in in ljmp out out lock jp cmc lock stc cli icebp lock mov (bad) mov vshufpd mov mov xlat cmpsl cmp lret fcomip loope fildll or and sub sub add cs cmp mov xor cmp cmp cmp adc add sbb and push nop sbb adc pop adc outsb sbb pop pusha addr16 dec pusha outsl jns mov outsb outsl jo arpl ja jle mov inc cmc inc inc inc push inc push dec cmp dec dec push push cmp pop dec pop dec push jge,pn pop rorb leave adc mov enter sahf mov mov mov or rcrl mov (bad) mov xchg lea loop cmc out mul shrb ljmp fcomip cmc lock lock std clc xlat mov ret jmp (bad) into fadd mov clc rcl rcl mov fmul (bad) mov fisub sub sub or cmp add cs cmp xor cmp sub sub add (bad) sub or sbb and add adc adc or sbb ret sbb bound dec push insb inc jle jo lods jae jne and (bad) ret xchg cmpsb xchg pop nop fstl hlt lahf cmpsl sahf call in out js mov in test imulb clc lods cld insb not ret or enter into xlat into fcom cli (bad) mov xor pop (bad) fisubrl and sub es sbb jnp pop sub daa xor dec cmp xor cmp ds xchg add push cwtl or or adc sbb ja rcll cwtl sbb bound subb push (bad) outsb imul lds cmc jp jp ja jle inc xlat dec enter in test and push mov mov in push or push mov das pop inc test mov push stos inc stos test xchg xor repz test (bad) out mov xchg mov addb test and int popa loopne call push loop out insl in push in cmc (bad) repnz (bad) fprem mov scas std out sub repz in (bad) into (bad) jnp (bad) iret (bad) lret popa rcl fistpll mov gs fnsave adc sub sbb daa sub dec cmp lea cmp cmp push cmp push add imul inc adc adc sbb adc sbb je das push jnp xor fs xor push outsl push imul scas jbe jne jg jl jp inc ret inc rorl inc stc dec inc dec xor dec cmc pop ficom push pop push or pop jecxz in xor xsha1 cmpsb dec movsl or sbb btr mov push xchg test (bad) pop lea test lcall fwait scas lcall xchg loope jmp loop jmp in call (bad) lock notl cli xchg repz cli push ret push int rcrb (bad) mov insl iret push rorb fisttpl (bad) fmuls es in mov mov (bad) and sub cmp inc xor ds cmp xor or or or push test mov sbb pop dec pop test pusha cmpsl gs push outsl jns (bad) jo jno gs jb jnp imul cmpsl jge push movsb inc lods inc ds movsb dec stos dec int mov inc push iret push lret dec mov pop mov lods mov mov adc jbe mov mov pop xchg ds xchg xchg lea xchg adcl fimul lods lock in out in jmp jle mov repz hlt lock test out inc (bad) jecxz int3 (bad) xchg (bad) loope ret int int3 sbb push aad (bad) (bad) lds jnp lods iret sub xor and and cmp xchg xor xor leave xor xor ret cmp or sub pop push mov add add jns test push adc mov push push sbb into ja pusha mov jnp push insb xchg arpl cmp jle jns jae jp inc pop push es out fldl dec fisttpll inc push rcll inc (bad) push icebp pop dec int3 pop fistp mov movsb test test mov mov mov stos sbb adcb xchg sbbb mov cmp subl cwtl test enter cmpsl in std aaa in lods out popf in mov jmp stc scas std daa cld jg scas lret add sub xor in ret mov (bad) int (bad) xor and and mov lea das adc mov cmp cmp pop xor cmp add jg push or or sbb adc add push cmpsb sbb sbb xor popa outsb gs push movsl pop jne data16 pop jae insb dec jp jns push inc sbb push or dec inc dec jns addr16 testb push mov pop cmpsl dec imul cmpsb mov cmpsl mov mov fdivs sahf mov mov xchg mov adc push nop xor (bad) lahf pop xchg xchg mov mov mov mov call mov stc movsl hlt mov cli lcall enter (bad) popa fidiv mov fisttpl rolb fild and outsl aas sbb sbb imul mov push pop pop arpl push cmp sub ss xor inc ss mov push add xor lcall push cmp inc adc adc add sbb jge insb imulb shrl outsl jecxz aaa jns jo insb cmp jle data16 jg inc dec inc imul or sub ljmp push mov popa push negb outsl pop cld pop pop mov mov xchg lods clc stos mov mov mov mov inc xchg mov xchg pusha xchg xchg ret nop or sahf mov xchg xchg jbe inc (bad) in call jmp xor and imulb call and cld or inc sub test rol enter pushf ret loopne out aam ljmp ret gs and jnp jbe dec aaa les fsubrl pop sub cmp aas mov pop xor add xchg pop mov cltd or or pop inc or pop xchg adc pop dec jge arpl fldcw fs outsl cld jb bound jns jne addr16 cli jg popa push dec adc inc push inc push dec inc dec sbb loopne loope add inc mov cmp jge pop movsl ja inc mov dec scas jp loopne xor or das mov mov sbb pop mov xchg mov xchg popa mov xchg pushf int3 loopne loopne cld shl xchg in adc mov mov repz cmc xlat out std cmp fcomps cs jmp pop lds into cmc aad fimul xor fstpt fcmovnbe and stos and das jns pop ds cmp dec and xor cmp adc sub push sbb or cmp ret add pop xor (bad) imul inc dec outsl ljmp ja insb mov push add jl dec lret dec push inc sbb dec cwtl dec jae dec pop (bad) push xchg jl inc sub mov dec repnz pop jno mov cmpsl (bad) stos shrl adc push mov mov mov mov cmp (bad) popl pop (bad) push (bad) es rclb sahf or pop iret repnz out in jmp pop jmp adc hlt lock adc stos std mov pushf ret (bad) ret and push lret mov enter (bad) mov fst test xchg fiaddl in pop xlat cmpsb and aaa (bad) and adc adc jmp insb and ss cmp sub aam imul pop or sub sbb xchg pop in dec add mov popa fistl cs add les jb jb jne inc or jl dec clc imul inc jno inc and push jnp dec sub jge push xor cmp imul stos xchg cmpsl or add out jle pop mov add dec xchg add cmpsb mov mov mov xchg test scas mov lods loopne loopne fcomi cld lret out repz repz pushf loopne stc add decl rep (bad) push ds push enter lds out ret pop jmp int3 mov sbb and push adc xor aad insb cmp dec xor mov or push add es rcrb pop adc aad loopne xchg sbb outsb mov push lods je jns jo jl jno jbe jbe jg jge dec adc cwtl inc ljmp pop imul sbb bound or push jmp mov stos movsl lods icebp test shrl pop mov arpl push xchg dec xchg pop cmpsl rclb jb inc stos stc loopne loope rorl in loope sti imulb cld movb loope pusha clc mov ret jle test lret mov sarl xlat mov (bad) pop (bad) and dec and xor cmpsb xor xor add xor xor mov add add sbb sbb or cmp push adc loop repz adc mov jl jle addr16 pop inc jno insl cli jo jp jb jbe jbe js outsl lahf jne jl js pop xchg inc les dec cwtl dec (bad) je dec jmp jo rcrl js push pop negl imul mov ja je inc mov push mov fdivrl mov imul xchg bound js xorl rcr aad or mov (bad) cmc jo mov aam push negb lock cli sar adc pop scas fnstsw fistl lret inc lock lret and push ljmp mov mov ret mov in sub jl jmp sub adc push paddsw outsb cmp add cmp cmp pop mov inc cmp add cmp out dec xor or push loope sbb arpl pop dec js outsl inc jns jb imul pop push jecxz push jge jle pusha ds dec inc adc dec dec popa dec sbb dec sbb pop push xchg push (bad) push pop pop xchg pop int3 pop push pop xchg mov jne push stos mov lods cmpsl mov mov mov mov mov pop mov test test mov nop popf xchg push lcall int dec out in out jmp (bad) pop sti stc repnz cmc inc std (bad) clc (bad) div decb daa iret lret les imul lret es (bad) shrb and fst pop fldcw rcr sbb and and shrl sub cs xor cmp cmp cmp add rorl push add into add mov push xlat push push sbb push shll insl push mov andl popa data16 jo jnp jbe jp jne jl jl dec dec inc cmpsl inc mov dec dec pop inc dec mov push movsl push pop dec push pop ja lahf pop push mov lods cmpsb xchg stos adc (bad) mov out mov mov mov mov mov (bad) addw popf xchg ret fwait or (bad) repz loop in (bad) cmc into call ret out fsub inc in (bad) (bad) out clc xlat cli shr push loopne rclb les lret ds lahf (bad) mov js pop (bad) mov inc fisubl mov and mov mov sub das lods xor ss sti cmp add pop cmpsl or push inc adc adc sbb push mov movsl data16 push push outsl add jb je jbe js jp jl jle inc addl out inc test dec loopne (bad) dec outsl push lret push adc pop sbb pop out shll test sub mov mov mov mov jg jg sub sub dec mov push mov nop xchg nop cmp lcall and inc out out call das out lods repz xor (bad) repnz cmp fdivr push (bad) cmp iret pop (bad) movsb iret xor or insb leave movsb rcrl (bad) jo cs les frstor rcl ret dec and es and daa daa sub das (bad) xor cmp cmp sub xor into ds les nopl decb or add add adc ss in sbb sbb pusha loope sub popw push jb jmp popa (bad) insb data16 jb js jle jl jp inc mov rolb dec mov inc fist pop ret pop lds push mov dec mov jg (bad) test lods movsb mov mov mov fdivrl orb mov mov nop fs xchg test in call (bad) sbb aam sbb cmpsb cmc add repnz cmc div clc (bad) sti cld std incb rol les (bad) lret fmulp int3 rol ror aad xlat pop flds (bad) popa and es fs mov in sub xor aaa dec xor cmp cmp add jb mov ljmp sbb adc push insl adc push push mov popa aas sbb jnp jns jg jp je jbe jno jae dec add in out inc clc inc cld inc mov pop mov mov stos push pop push dec push in adc pop mov mov mov shlb test cmc xchg adc push cltd cli fwait sbb xorl inc div cmc mov fwait icebp repz repnz call xor clc loope jecxz in out fnstcw fnclex fsubrp fcompl pop aam lret push into xor sub cltd roll loopne stc aas enter out (bad) xor xor movsb das lcall daa shlb and and sbb push push or or adc adc sub pop sbb pop sbb push inc jg bound add push and jo insl and mov jp jl pop adc inc inc addr16 dec dec dec dec dec dec push push push pop push pop push inc pop push pop outsb pop push pop adc mov mov test out scas mov mov mov mov mov scas mov int3 lahf adc xchg lea xchg xchg repz xchg cltd lcall adc iret call gs in rcr cld icebp repnz cli idiv ret lret xlat lock (bad) mov les dec (bad) movsl int3 iret into (bad) sarb rcr fcmovu lret fsubrl and es sub cs xor xor xor xor cmp cmp cmp das add or or or push push adc adc pop push pop sbb sbb push punpcklbw jae sbb push insb popa outsb insl jo jb je jbe js jp jl jle inc dec inc fldl inc dec cmovp dec or push pop push clc push inc pop dec pop cmc pop dec pop pop mov movsb cmpsb in test stos mov mov mov mov mov mov mov (bad) addl mov xchg xchg xchg sets sahf xchg loopne iret in out call in out (bad) icebp in repnz hlt fdiv ljmp (bad) std shr fadd (bad) (bad) cmc leave call iret out rcl rclb aad (bad) sbb push fidivrl fdivl sub and sub sbb int3 sub fidivl int lock push ds xor clc adc pop cmc sbb mov sub cmc mulps xchg add cmp push imul adc insl pop outsb (bad) jge jb jne jbe ja jp jge jle dec inc inc pop inc sub cmp dec or dec lahf inc push push adc push stos dec pop pop pop pop ret mov add ds stos in lods push scas sbb mov mov mov sbb rolb mov lea mov xchg cmp fstpl loop movsl in out imul ljmp repnz ret fsqrt cli mov loope ret inc inc lret iret cwtl iret mov xlat rcl xlat (bad) xlat test (bad) fstp test clc ds and and sub sub xor xor cmp xchg aas shll add test pop sub mov add sub popf sub or xor xor cmp cmp add mov nop and or or adc adc sbb sbb popa and (bad) imul dec jb xor je push jg cmp jl pop inc inc inc inc addl dec dec dec test push push adc push inc dec pop pop sbb pop push mov lods test rorb mov nop mov mov roll mov mov jae xchg xchg rcll cltd cltd ficompl out mov lret loope stos ljmp mov jge jle stc stc cli cli add push enter ret xor iret leave mov iret into fcomi fcom xchg rcl (bad) loope (bad) sahf fcmovu fimul and push sub sub stos cs xor cmp mov add add addl or adc cmp sbb sbb push pop pusha popa bound xor imul jo jb je jbe jb sbb jge jg inc inc inc inc inc inc inc dec dec dec dec dec dec cmp push push push push push push push pop pop pop pop pop pop pop pop stos mov cmpsb cmpsl stos test scas scas mov mov mov sub mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out cli icebp dec repz cmc div cld stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl out aam xlat fstp (bad) fcmovu fcmovu sub and daa and sub das cmp xor aaa cmp cmp cmp push add or or or push adc adc sbb pop js arpl jle jb jb ja jbe insb jno jae jne ja jns jnp jge jg inc pop inc gs pop inc push push dec outsl dec push dec je dec push jno dec push jle inc pop jnp inc pop mov mov (bad) lods test test nop mov mov test mov lods xchg lea xchg stos xchg lods xchg cmpsl cltd mov lahf mov in out jmp aad mov mov mov mov mov mov decl lds ror lock ret aad call rcr loopne and and and sbb sub sub sub adc xor xor test jne idivb jno pusha cmp incb push repz or or push ljmp push loop cmpsb or sbb push lcall jbe push mov fs push insb jp pusha push inc les inc lret dec loop dec dec dec sbb add add add or sbb jmp cmc jmp in out ljmp mul cltd ffree fistpll ror aad int3 aad mov rcr (bad) fcmovnu fcmovnbe ret fcom fcmovu rcr ffreep fcmovnbe (bad) xchg test in mov sbbb mov mov mov mov movsb in movsl mov cld xchg mov mov icebp fs inc push dec dec inc daa jnp pop pop dec inc add pop xor inc inc push push cmp dec dec pop push cs arpl bound insl addr16 pop je jnp jl inc jno arpl insl arpl ja insb jno or adc inc or add add add jbe or push pop push sbb adc xor daa and je addr16 and cmp and jp cmp pop xor sub cmp insb xchg pop iret enter fcmovb iret (bad) lahf lahf or fnsave (bad) rorl sarb hlt in mov mov iret (bad) in cld out loop mov loop cli (bad) call adcl sbbl (bad) repnz xchg xlat test xchg mov in xorb mov iret (bad) mov mov xchg mov mov pop push push dec jae dec inc pop dec inc pop inc xor pop inc dec fs dec pop pop push cmp outsb sub dec jnp jnp bound bound adc js ja jae jnp dec adc add sbb or cmp cmp jae adc xor jl adc ss aaa inc add and jnp sbb and cmp sub sub cmp (bad) (bad) loopne rol aad sti rol (bad) leave (bad) (bad) (bad) lock fcmovnb ffreep rcl mov repnz in add imul in sti (bad) in call repz (bad) repz ljmp int3 xchg xchg xchg xchg cltd sahf test pushf mov mov lea fwait rolb mov cwtl mov iret xchg mov andb mov push gs push inc and inc pop inc dec pop add inc inc push pop je dec push pop adc imul jno push js pop imul jge jno bound imul pop data16 adc or or add or cmp add push pop sbb and sub cmp xor sub and and push sbb cmp rcl ret iret out aad lret xchg fcmovnu rol rol fcmovnu (bad) rol into rcr fmulp mov lock loopne (bad) out out lret cld out in notb divl movsb mov xchg addl xorb fwait xchg sahf mov mov xchg mov loop mov mov mov mov cltd mov pusha push dec push push inc dec inc dec js dec pop dec xor jo pop inc inc dec pop dec cmp pop dec outsl jb gs push outsb jnp imul jge jae push jbe jl jb sbb jle jns add add or sbb sbb adc add sbb adc sbb adc sub xor or and sub dec or pusha push push or push adc das cmp out std nop movsb mov (bad) fadd fsubrs not (bad) cli fcmovb ret fcmovu mov ret out out repz icebp jecxz mov out call int3 (bad) (bad) cld clc icebp repnz stc stc cwtl (bad) (bad) out ret enter loope xchg mov lea (bad) cmc mov sahf test mov mov movsb mov lods lret mov xchg mov mov mov inc push dec inc dec daa popa jbe sub sbb jle insb add pop pop dec pop jae fs inc jno jne imul or pop jl pusha jp push js jle imul add cmp add add sbb jbe add push push adc or xor add daa sub sbb xor es adc cmp (bad) shll fsubrs cli rol (bad) fcomp fdivrl mov std cmc jecxz cli out ret in jecxz jecxz xchg shl loope cli std int jmp aad icebp test xchg mov cltd (bad) jmp (bad) mov xchg hlt mov adcl (bad) mov mov test test int mov mov mov andb dec push push inc dec inc dec sub pop pop inc pop push outsb insl jp inc inc push push pop pop arpl insl jbe inc imul bound fs jp pusha bound push sbb dec jbe add add push or or sbb outsb cmp add adc add or sbb or or and es push sub cmp es and xor and xor sub cmp (bad) (bad) ljmp iret stos out ret fld fcmovnbe fcom test leave leave fstpt loope test std out loop call mul sti in repnz fisubl (bad) shl mov (bad) mov int3 cmc mov cmpsl lret mov icebp ret lcall clc dec mov xchg mov in fiaddl and push pusha jae pop sbb push or add imul xor dec push dec pop xor or push cmp push pop push push dec es adc sbb inc sub xor push push pop pop outsl cmp and dec jbe das es inc jl xor jbe inc add sbb dec add dec or push adc outsl outsb pop adc add mov nop cmpsl loopne cmc popf fwait lods div out xchg call jmp int aam mov xchg int3 into aam mov movsl mov scas lods lcall loope test call sahf lcall mov mov scas icebp icebp les lret cltd xchg clc out fwait mov xchg scas scas mov add pusha imul jns add push (bad) addr16 or push jb ret xor inc inc inc sub dec dec inc xchg xchg inc imul push pop inc adc pop pop push test pop mov movsl lods mov fisubrl scas mov fstl mov movsb cmp cld mov test (bad) orl mov sahf (bad) (bad) mov nop mov cmc mov popf cwtl xchg icebp cmpsl (bad) into in loopne stc out test in in push repz pushf jp idiv out pop clc fwait cli xchg jo ror cmp inc leave lret xor nop jmp stos (bad) xlat fcomp test fcmovnu scas leave or and xor xor sub xor cmp sub sub mov add rorb or adc pop pusha imul push (bad) push insb adc jo add jne popa push sub jbe cmpb inc inc inc aaa test dec cmp dec dec inc inc scas push xor inc push sub inc pop sub mov mov xlat je test mov scas rcrb push mov mov repnz into fwait xchg mov loope nop xchg cwtl mov nop in mov (bad) sbbl out mov call call (bad) hlt xchg enter xchg push rol in inc out and leave (bad) icebp bound xor push ffreep push sub (bad) fadd mov (bad) aam (bad) cs or and add sub and xor xor pop sarl cmp sub add push add imul mov add adc push or push pusha imul outsl jns jge add je gs jl insl jp icebp inc inc dec push mov dec dec inc pop mov das push fcoml pop inc test rcrb push mov mov cmpsl test mov test in mov scas mov lods mov repnz test pushf mov test sahf cmp sub loop inc hlt mov loope es out (bad) lahf fsts hlt lcall ffree push inc mov mov leave leave mov iret fcmovb sub stos (bad) fsubrl enter and xor daa inc add cmp pop xor inc pop (bad) xor adc cmp dec das cmp pop add pop or gs pusha sti xor pop sbb pop pusha imul jns sbb add outsl jae pop inc ja jae lcall xor inc ss cmp push dec cmp jl push pop cmp jno fdivl pop pop push gs pop pop pop jp mov push mov shr mov outsl push xchg lahf mov mov scas addb xchg (bad) lcall xchg xchg xchg sahf (bad) pop lea lret in icebp mov (bad) xor icebp clc lret div jmp std call xlat inc decb mov cmpsb out aad les (bad) fldcw xor or and cmp push das das cmp js sbb aaa ds cmp mov aas or cld add push pop or sbb pusha sahf adc sbb jmp dec adc sbb or bound pop mov sbb push push inc imul jne popa dec cmp jg bound xor inc inc inc pop lret dec dec pop and inc push lock cmp push cli dec xor pop mov mov stos mov adc mov mov (bad) sub mov (bad) xchg mov fisttpl in adcl jmp mov lahf loopne hlt sbb stc in cwtl mov adc repnz shl repz fdivrp mov cli mov (bad) cmpsl sub lret (bad) jmp lret cmc shll stos repz fstp aad shlb add and or fs xor cmp sbb cmp sub je je adc and sub leave sub and cmp inc (bad) xor cmp pushf enter sub mov add unpckhps or push add cmp push pop adc push xor adc dec gs dec imul outsl jp out je pop jbe jns push push jge jne adc insb cld inc inc dec pop add mov push push push push inc sbb je pop pop cmpsb mov sbb test jge mov lcall lret in xchg mov addl mov xchg jecxz xchg xchg xchg sahf mov jmp enter loop aam call in call (bad) test idiv stc cld ljmp ljmp leave lret jbe iret (bad) ret pop cld (bad) cmpsl lock fcmovnu int3 nop lods shrb es add sub push xchg xor xor jns ficompl cmp cmp dec adc add or orl sbb in adc jp pop sbb or jo popa bound fwait cmp in insb addr16 jb dec pushf je jbe push push jns xor adc push jnp pop dec ds imul push dec fimull pop pop dec xor mov add or bound fldt mov lods rcll jmp xchg mov xchg xchg out xchg xchg call popf xchg mov loopne repz loop push (bad) ljmp sti in cmc xchg ficompl loope mov loop ret mov out lret lret int mov fnsave sti iret ficoml add insb xor sub xor adc xor sbb je add ss or push sub or cmp adc sbb cs bound inc mov imul pop popa jb jle jbe xor jp adc jl inc inc inc outsl add dec dec and aad adc dec fidiv pop pop push dec cmc mov int3 xchg movsb cmpsb mov subl fistpl stos out rcll xchg test or mov fwait test cmc nop clc push cltd lcall mov out icebp sbb mov add in out xchg loopne repnz std hlt jmp mov loope mov lret aam (bad) rcl rol mov js mov iret fadds or mov inc xor pop cld xor cmp cmp xor ds or cmp or movd (bad) punpcklbw cmp adc or bound jb ss or add imul jno insb jnp xchg inc xor xor push dec cmp dec dec inc aas mov push pop jae push sub sub mov movsl cmpsb lods (bad) dec stos stos cmpsb mov mov mov lret mov (bad) orl mov les xchg xchg popf idivl fwait xchg mov loop out fisttp pop push xor (bad) push stc cli icebp bnd repnz icebp inc lret rcll ret jecxz int3 into leave mov ret call repz (bad) (bad) and cs pop outsb sub sub movsl push leave xor cmp arpl pop or cmp das add add and or pop pop pop jg adc adc pop adc sbb push or sbb outsl jno push insb add insl outsb gs jo jge clc ja jae test inc nop inc inc inc cmp cmp dec cmp popw push push pop inc adc sub pop sub pop pop mov movsl cmpsb cmpsb mov stos or fbld fldcw mov cwtl mov sub mov sahf mov add popf sahf fwait xchg in jecxz xchg repz mov jmp nop push icebp testb shrl add mov mov aad mov (bad) xlat mov leave fisubr notl and sub es and cmp pop lds das inc aaa inc js xor cmp push fdivrl aas or adc jbe and js js adc adc jnp push pop adc or outsb or pop adc sub push dec pop imul jp pusha sti pop xchg jbe jb aam addl push dec inc inc pop daa or nop inc jne pop push push pop inc pshufw push sbbl mov mov mov fldl movsl cmp scas scas xchg (bad) mov leave test mov nop xchg or ljmp pushf xchg lea fsubrs outsl mov jmp out out repnz loop lcall cmpsb xchg sar rol (bad) aad test rcr mov faddp sarb int3 and fnstenv xor and cs movsb sub cmp xor pop mov (bad) cmp ds add add je wbinvd jp and push bndldx and adc sbb sbb in je fs jns jl into jl js jbe bound insl jo mov jp fisubr dec imul dec dec inc and insb ret pop daa dec pop pop pop sub mov cmc cmpsb cmpsl mov mov pop movsb mov mov mov inc mov xchg into fwait xchg out mov inc mov in nop ljmp lahf loopne lea in in sar cwtl add in sahf jmp test (bad) idiv repz sbb std hlt (bad) les into mov in iret rcr mov icebp leave fsubrl fcoms aas and daa sub inc lret and and cmp xchg mov mov xor or cmpl adc sbb lret aas pop sbb adc inc punpcklbw mov push xor popf push jb pop je ja outsl imull jge imul inc inc dec push les dec dec dec pop xchg push push pop push push push push dec add pop xor mov in test ret mov movb test aam mov fucomip stos test (bad) jecxz (bad) (bad) xchg fwait or mov mov negb jecxz push adc jle repnz jecxz hlt test xchg je cld imul add sahf sti sub (bad) fmul lret out iret mov aad shr lret fildll or and cmp sub sub inc aas inc es and daa xor adc mov das les or scas sbb daa mov adc jnp push pop adc and popa bound push inc cmp jns jo arpl add push jg,pn dec push mov pop dec cmp push dec and inc push and dec pop sub mov movsl cmpsb lods (bad) dec stos stos cmpsb mov mov mov cld movsl mov mov orl lods mov test les xchg xchg popf idivl fwait xchg mov lret loop lods cmc jmp out in adc repz shl jge sbb sti test add ds aad mov enter rcr mov mov add rcr and xor xor sub jns sub outsb and fistl cmp cmp add add jae or sbb add adc cwtl sbb bound or loopne outsl outsl jo stc sbb jne jge dec jp jle push outsb and jae inc inc dec push sub gs dec dec pop dec inc xor pop dec cmp push mov int movsb movsl lods mov stos lods les lods scas movsl cmpsl dec mov mov cmp mov addl mov loopne xchg xchg out mov lcall in cld ret in iret jmp pusha clc out lock in loopne pop call pop out scas fld jmp (bad) push movsl rol in iret rcr jo mov (bad) mov (bad) aam sbb ss sub pop cmp popa xor ds ss sub cmp dec shrb add sub or and or movlps pop sbb cmp sbb cmp jae push jnp,pn sbb imul jo js gs lahf pop jns jge arpl imul dec dec inc insl pop dec cmp ja and push dec push sub pop pop push xor mov aam subb scas rcrb push mov rcrl orl add mov sahf (bad) pop loopne xchg cwtl cwtl cmc fistp (bad) lret jmp out sti mov sti in in in lock adc stc lock ret inc jmp test fadds mov rcl rcrb (bad) xlat ror mov fisub daa sub inc dec or sub cmp xor and cmp sub add adc pop add or add repz push jle adc add sbb je sbb pusha cmp mov push imul pop and dec ds jns pusha addr16 xor inc inc inc push les dec pop and inc push testb pop clc dec xor ja mov leave mov lods cmpsl or fistp fldcw mov mov addl popf movsb fisttpll xchg ljmp mov loop repnz xchg xchg out sahf cmpsb repz sbbb out mov fdivr (bad) out clc mov ffreep mov hlt (bad) enter int3 int jmp repz shrl cmc in fbld sub and sub cmp aad sub das xor aaa cmp push fidivrl jo sub jbe jp pop or movups jge adc sbb or adc into lahf popf pushf mov jg imul jo js stos jp pop ja jp outsl push push outsl inc inc dec popf inc insl sbb dec dec and pop outsb and push jge push pop pop xor dec sub movsl mov orb cmpsb mov xorl (bad) xchg mov xchg in test test cmpsb lea std sbb data16 popf hlt adc loopne loop push adc jle repnz jecxz hlt test push cli sti cld sub rol call loopne lret (bad) mov aad int3 repz (bad) (bad) fcmovu (bad) push enter xor xor mov inc cmp sub clc xor push and or pop or gs or add sub push pop sbb outsb or bound jae pushw jns imul js add jne jge xchg push adc xor pop inc xor cmpsl inc dec inc insb pop dec aas pushf push es dec push sub pop pop push xor mov aam (bad) fsubp mov rcrb push mov mov repnz into fwait xchg mov loope nop xchg cwtl mov nop in mov ljmp leave shl in mov call pusha (bad) or icebp clc leave pop or or imul jbe jmp inc fisubrl sbb (bad) out jecxz int (bad) cli ret aam fmull fdiv fs fcmovne lods int and and daa cs cmpsl cmp and sbb xor cmp cmp add cmp sahf and and sub sub cmp xor mov xor ds add adc aaa push or add push and adc add sbb or popa outsb jne or push outsl imul arpl hlt jnp ja addl inc dec pop mov adc mov inc push push push and pop pop sub or xchg out mov fiaddl stos cmp mov mov fsubrs lods shrl jmp subb pushf loope cltd mov xor divl icebp inc loopne call out xchg cli jmp jmp (bad) in movsl div repnz add (bad) in (bad) inc mov aam mov out cwtl leave lret xor scas cld mov lret xlat test cmp (bad) clc into and push aaa and aaa sub das xor pop (bad) xor cmp sub rcrl cmp pop add pop or gs pusha in xor pop sbb pop pusha imul jns sbb insl push push add inc ja jae lcall sub jge mov mov pop pop shll pop inc (bad) sub pop pop pop xor mov stos orl lret mov mov mov mov stos int cmpsl (bad) rep test popf mov mov adcl mov loopne call out sbbl stc out into mov jae push inc lret mov (bad) (bad) mov int3 into leave fcmovnb mov ror fmulp mov neg fbld sub dec dec or daa cs sub mov int3 xor pop mov lds pop cmp add or sti add add or sbb adc cld adc push imul sbb adc xor jno sub outsl push jb outsl add jae jae cli outsb jns jp adc push inc loopne sub inc ljmp dec push pop lock cmp xchg pop pop push decb add cmpsb cmpsl mov lods scas shll mov xchg jmp mov cld xchg test mov lcall insl xchg cmc mov rolb loope jmp cmp ljmp icebp (bad) fcmovnb cmc idiv xchg sbb sti neg out cli mov in mov mov aad mov lds repz shrb aam xchg cmp and sub or sub sbb inc xor cmp push cmp add push and mov or push aaa cmpsl icebp out out int3 add sbb sbb adc push popa bound and bound popa outsl jo popa sbb ja cmpsl jp jns xchg jg dec sub pop inc ja dec dec dec xor push push and push daa dec jno pop pop push dec pop or mov mov mov mov lret mov addb mov mov std mov xchg xchg sahf cmp lahf loopne inc bnd inc out jecxz xchg hlt arpl lock repz in loope push sti mov (bad) inc (bad) pusha rclb rol push fiadd mov jne dec ret repz fstp aad xor daa pop mov mov xor nop and dec cltd sub sbb pop xchg push jnp pop or lods push orb cmp mov inc pop pusha pusha or lds jne push ja outsl add arpl imul js jo aam jle loop rcrb xor cmp pop fcoml pop js push push push testl dec pop cs mov mov cmpsl test or sbb es mov mov xchg negb xchg sub cmpsl mov push mov cmp jo negl dec clc jp cli lahf div lock std xchg push sti cld negl (bad) mov fcmovb mov enter outsl fistp jne rcr (bad) mov stos hlt (bad) fbld xor dec push daa sub sub xor xor cmp adc cmp sub add or fmuls or jb push unpcklps add add dec sbb adc pop movsb push pusha popa adc imul loop jno jb in out or push jl push jle inc inc loope aad cmp dec dec ds pop dec and push push push and inc pop sub pop pop pop iret or aaa mov dec mov fldl adc mov lods rcll test je mov mov aaa xchg mov lcall loope loop je jbe fwait ror popf (bad) out lock hlt push in loope (bad) icebp rcrb std hlt pop rcll mov (bad) (bad) mov fcomps in into iret fidivl inc into cmpsl sub fsubrs imul and sub pop cmp mov xor xchg es cmp sbb pop add or (bad) push adc adc push sbb push outsl add pusha adc jb jp dec int push add outsb outsl jp arpl imul insl jns fldcw popa jb imul fsts cmp dec aas repnz ret dec pop dec jle pop pop pop stc dec int3 inc dec rorb mov aam mov mov mov mov scas test cmpsb (bad) push mov mov (bad) addl clc push (bad) (bad) sub ljmp or loope inc cmc je lock in test in in in loope in jmp fcom (bad) mov sti sti cld sti pop out push jmp out (bad) enter ret in iret rcr mov std (bad) xlat fcom add enter xor and push push and pop aas add sub and pop fnstenv aaa xor jle cmp sbb adc xor and or push push push daa add adc lret pop xor sbb pop jns pop bound arpl push outsb outsl data16 jae jne ja jns jnp jge jg inc inc inc pop inc inc inc inc dec dec dec inc dec dec dec push push push push rcll xor pop pop pop pop pop pop mov mov cmpsl test stos stos into scas scas scas pop mov mov mov mov mov mov sbb xchg dec mov xchg xchg xchg xchg xchg cwtl cltd lcall loopne jecxz loopne out jmp out out repnz repnz div xchg clc cli sti jno (bad) call rol (bad) (bad) enter and into iret addr16 (bad) jno (bad) xlat xlat (bad) fcmovnbe fstp fisub and and and daa dec sub sub and das xor xor cmp mov ds mov add cmp pop pop or or or adc xchg sbb pop je sbb icebp pop push pop jbe bound gs imul outsb outsl (bad) jo jae jle ja jns jnp jge jle inc inc inc add inc and dec dec incl dec inc push push push push push push push pop pop pop pop dec push pop pop pop mov cmpsb cmpsl cmpsl test scas scas mov mov mov mov mov addl mov mov add cltd lcall loope jecxz jmp out call out out out repnz cmc div clc stc cli sti pop repz decl rol scas aad mov int into rcl rcl jns (bad) xlat mov fcmovu (bad) fbstp and and sub push cmp xor add cmp cmp cmp add ja push pop or or push push clts adc adc sbb pop nopl xlat pusha bound jbe addr16 jb jb dec popa jbe adc jp fldcw jg inc inc inc inc inc inc inc dec dec dec dec dec pop dec dec out push push jmp pop pop pop push pop pop pop mov mov cmpsl les scas scas cmpsb mov mov mov mov mov mov addl xchg orl xchg cmp lcall loope jecxz in out jmp out out jge bnd div idiv cli sti repz (bad) inc rol movsl fadd (bad) movsb enter xlat into iret (bad) rcl rcl aad xlat fcomp fcmovu repnz (bad) xchg and and aas es daa sub sub sub xor cmp ss pop cmp cmp ds push add add or clc pop push setbe adc outsb or pop push sbb sbb sbb bound jns addr16 push pop jae outsl data16 jae jne ja jns jnp popa jle testl inc inc dec dec dec inc dec dec dec push push push push lds push xor pop pop mov mov cmpsb cmpsl test stos stos repnz scas pop mov mov xchg mov mov mov mov mov mov (bad) lahf xchg xchg xchg fwait xchg xchg xchg lcall lahf mov loop mov out jmp out out lock bnd div dec clc cli sti (bad) fdivrp dec rol lret vshufps lret out into iret mov icebp (bad) xlat into (bad) fcmovnu fstp fbld and and es lahf sub sub cs aas xor xor xor cmp and ds add add or or adc sbb push pop popf sbb sbb popa bound gs push fisttp outsl adc pop jbe jbe jp jl jle inc inc inc inc out inc inc int dec dec fs dec pop push push push pop push push push pop pop pop pop ss pop int3 mov cmpsb cmpsl mov lods scas scas and insl daa jb push sub xor jp add cmp dec aas je push push add or adc jno inc push push sbb outsl sbb push addr16 push bound pop push push cmp jb je jbe js jp jl jle inc xor inc adc dec daa dec and push js cmp pop cmp pop mov les loop fisubrl cwtl mov mov mov hlt mov test lret mov mov nop call xchg rcrb sti sahf lods loopne loop in out call mov lods lock repnz mulb cld std iret lods (bad) lock pushf (bad) nop enter int3 (bad) into in test (bad) pushf fdivrs fwait and and adc dec sub push sub cs mov pop xor bound pop cmp jnp outsb aas je push jl xor cmp pop and insb es sub sbb xor je push ss inc cmp dec ds pop add jb pop or gs push and jns inc adc push jbe imul sbb push jge push bound xor push sbb sub je jbe js jp jl jle inc add add or jnp dec and jns and push ss xor pop sub addr16 int3 movsb shlb rep fldt jmp mov aam iret and ret xchg mov mov mov mov xchg rclb pushf aad fsub scas loop in out call in ffreep lock negb cld mov test xchg ret xchg (bad) mov int3 xchg (bad) rcrb (bad) fdivrs (bad) mov and pop sub das pop xor jp dec aaa dec cmp pop cmp add aaa pop daa or xor adc jle outsl pop dec sbb push sbb sub aaa gs addr16 imul outsl inc jno jae jne ja jns jnp jge jg inc jno jne sbb adc dec push dec push dec adc push es adc pop cvtdq2ps pop xor mov cmpsb lock stos fisubrl mov mov mov mov idivl loope jecxz repnz mov nop rclb lcall lds test pushf out call mov repnz hlt mov cli (bad) cld xchg (bad) cltd rorb enter int3 mov xchg movsl shlb fdivs fisubr and sub sub cs xor pop xor ss jb or add inc add push pusha or inc or push jl inc adc jp inc sbb sbb push imul and push sbb pop jo jb je jbe js jp jl jle jno inc and xor dec pop dec sub cmovle sbb push pusha push adc pop push pop sbb mov in lock stos ljmp cmp fidivl in mov xlat (bad) movl mov nop test xchg mov pushf cli sahf mov aad out call mov repnz hlt mov cli mov (bad) mov scas les lret mov shr aam out fmuls ficom and es sub insb sub sbb jne pop xor ss cmp push cmp ds push add add push pop cmp or inc push imul push push push sbb jae sub jge cmp fs push push push outsb push jo jb je jbe js dec dec jl jle inc daa inc add cs add dec sbb push adc push add pop sub mov lcall scas cli mov mov mov mov mov fdivrl ret xchg mov mov nop hlt xchg rcll cmpsb pushf popf scas test in out call fucomip lods lock nop hlt mov cli mov (bad) test dec scas lret lock iret loope shl aam (bad) mov in fidivl and jb push es sub addr16 cs xor sbb insb ss cmp push add add add jns dec push push or pusha or push jns push adc pushw inc sbb push sbb push sub fs and insb or jo jb inc pop jbe js jp jl jle inc cmp inc push inc insb dec sbb dec fs push push cs and pop push pop push mov movsl xchg ret stos lcall mov mov mov mov enter roll lock mov nop rclb test negb cmpsb in out call mov repnz notb cld enter movsl ret clc (bad) cli enter int3 mov mov aam (bad) scas fdivs fidiv and es gs cs xor pop xor ss cmp dec cmp jl,pt jae sub xor or or push adc jbe insl push inc sbb jne dec push push pusha pop bound sub push push outsb and add je jbe js jp jl jle inc sub inc jne add dec add cmp push outsb push push add pop sub fs cmp mull icebp lods imull stc mov mov mov (bad) mov mov or mov xchg ljmp cltd lods fwait movsl popf fistp shl nop out jmp (bad) out test cmc mov lret sti (bad) std stos push roll cltd leave (bad) lret dec xchg mov aad xlat out (bad) fild inc and or sub fs pop xor popa xor pop cmp jo pop add xor insl or data16 adc pop adc inc sbb sbb adc aaa packuswb imul outsl ss jae jne ja jns jnp jge jg inc cmp inc jno sbb add dec daa dec xor push push push imul pop popf mov shlb fisubrl (bad) mov mov mov mov idivl enter repnz (bad) stc xchg call icebp cltd negb stos loope jecxz in out jmp fucomi mov xor cmc nop (bad) int3 stc (bad) sti cld int3 (bad) pushl (bad) mov int iret sahf sarl xlat sbb fcomi fucomp fisttp and pop daa imul cs push xor add add popa cmp or outsb add dec pop jge dec or aas cmove pop adc pop pop inc sbb and adc gs addr16 imul outsl inc jno jae jne ja jns jnp jge jg inc sub adc inc and and dec jae insl push push bound pop pop or pop clc mov int3 cmpsl loopne shrl mov mov mov mov mov (bad) mov test mov (bad) jmp notb out rcrl rcrb mov mov fsubrp fsubr sub out xchg iret repz cmc test stc test pushl mov popf leave in (bad) int iret mov mov xlat mov mov xchg (bad) and and jo sbb add aaa add jnp imul add add dec or imul push adc sbb sub daa pop push popa pop arpl gs cmp imul outsl sbb jae jne ja jns jnp jge jg inc imul dec ja dec jl dec popa push and push outsb pop cmp pop insl pop int3 mov loop cwtl test fsubrl lds xchg movb xchg mov mov (bad) fmuls lock clc xchg stc cltd fistpl lcall out jmp shr lock mov mov stc mov mov mov out rcrl mov sahf lret fwait int iret mov loopne mov fprem1 fstpt and adc jbe add sbb jns sbb pop xor jnp push aaa jge push cmp cmp dec add add pop or jns sub and pop jbe das sbb jb push popa adc or imul cmp jne ja jns jnp jge jg inc jg jns inc jbe dec jge jge add push sbb push cmp pop insl pop (bad) mov shll lods enter aad mov sarl mov test mov (bad) out cld xchg ficom rcrl (bad) lahf shl movsb jecxz in out jmp mov repz stc ret sti (bad) lcall (bad) mov int iret test xchg mov fnstcw fbld push and daa insb sub jns inc das pop xor push xor or or aas add ds cmp or jns dec adc push sbb push pop and arpl gs insl or jae jne ja jns jnp jge jg inc xor inc and dec sbb and push and push jge xor pop popa pop pop outsb loope (bad) fisubr cwtl scas in (bad) mov mov mov mov sti mov ret xchg mov mov mov mov fwait rcrl fwait jecxz in out jmp (bad) out cwtl icebp (bad) repz stc (bad) sti mov rol xchg lds lret mov sarl xlat cltd (bad) fbstp pusha and jg insb sub sub rdpmc xor inc aaa pop cmp jo push add or cvtps2pd inc adc adc sub dec sbb pop arpl push inc imul outsl sub jae jne ja jns jnp jge jg inc jbe adc inc sbb jge and sbb add push imul pop adc pop (bad) mov jmp ret test fwait scas (bad) mov mov mov mov mov out mov lds mov xlat xchg call xlat cltd sti fstpl mov out jmp (bad) out (bad) icebp test lods cmc xor cld int3 mov ret nop lds lret clc int iret test movsb sarl fldenv fbstp push daa imul cs sbb push pop xor insl cmp cmp inc add pop pop or or pusha adc js jnp dec sbb sbb xor gs addr16 imul adc jae jne ja jns jnp jge jg inc jnp ds sub dec jnp or push push bound push outsl push sub or pop fldenv (bad) cmpsl lds (bad) scas loopne (bad) ret mov mov mov xchg mov mov (bad) hlt (bad) (bad) xchg lret xchg ret xchg out ficompl ficompl mov xchg out jmp fucomp mov iret repz cmc test stc mov mov rcll mov int iret mov aad xlat mov fucom fbstp and and adc pop sub pop xor add or or (bad) jno dec add jno jbe or jbe arpl jl push adc push pop ja dec sbb pop pop cs push arpl imul outsl xor jae jne ja jns jnp jge jg inc inc jb inc pop inc sub push dec and dec bound push and push or pop ds daa pop xchg mov jmp ljmp scas lea hlt mov mov in mov out test xchg mov (bad) cmpsb xchg fist mov (bad) fwait lret lahf mov shl mov mov (bad) jmp mov repz cmpsb idivl std xchg decl lds icebp int xchg xchg sar rcrl (bad) fbld push and and sbb popa sub sbb aaa (bad) bound or inc add jae js jno sbb imul sub dec cs xor jns push ss add pop cmp ds xor dec add push push or xor push pop adc adc push inc sbb imul bound push push outsb push jo inc aas je jbe js jp jl jle inc add inc add dec cmp jp cmp push adc push pop xor pop sbb bound mov cld lods into scas jmp mov mov mov lds ljmp mov mov mov nop call xchg rcrl sahf aad xchg loop in out call mov mov hlt test cwtl clc xchg cli (bad) cld std cmpsl mov lock xchg (bad) mov mov popf int3 movsl into sti shl rcrb fdivs fsubrp and adc adc or sub jns,pn push xor jg data16 push inc js,pt pusha add add push dec or or pop push dec adc pop adc push pop inc and pop sbb push outsb pusha push bound fs and push insb adc pop jo jb je jbe js jp jl jle inc sub inc push inc add jno and push fs bound add pop outsl pop aaa pop adc std cmpsb call lods hlt scas xchg mov jmp mov mov mov clc mov cmc test xchg mov mov nop rclb cwtl aam repz fistpl scas in out call mov cwtl lock repnz mov (bad) mov mov movsl les lret or ljmp fidivrl and and es inc sub cs xor pop xor data16 push cmp addr16 jns push add push popa or jno inc push insb adc pop adc push das sbb sbb fs jo push bound fs push insb push outsb sub and je jbe js jp jl jle inc ss sub add dec jnp cmp push adc imul imul mov int3 test stos pushf lods in scas aad fidivl (bad) mov lds ret xchg mov xchg (bad) xchg loope scas cwtl iret lcall mov out call lcall hlt (bad) testb test mov mov mov mov xchg enter int3 mov shr aam (bad) xchg fcoms fsubp and and es sub sub push xor je cmp js jne imul fs jo pop or je aaa adc adc push pop sbb jg pop push jnp or add push outsb sub jb je jbe js jp jl daa dec inc ss sub dec add dec cmp push adc push sub pop xor sub movsb shll sahf lods (bad) scas loop xorl mov jmp (bad) mov repnz mov mov nop mov xchg xchg test lret loopne loop in out call mov repnz clc mov mov rorb cli enter int3 mov test cmpsl rclb fdivs fidiv and es push sub jnp inc xor push inc or add cmp push add push or dec push cmp pop adc inc push jp jp sub sub bound push ss push insb insl aaa ss jb je jbe js jp jl jle inc add inc sub dec add daa dec es jle and jl push pop xor jo mov imulb jmp fidiv (bad) mov mov sti mov movb in mov mov nop ret xchg jecxz (bad) cwtl lods lcall cwtl loop in out call ret lock (bad) lret lret nop cld lret (bad) cmpsl shrb call int3 mov mov aam (bad) mov mov fidivr and sbb adc sub imul inc cmp dec cmp add addr16 push jno inc or push push adc push push sbb es inc jae push bound or push or jo jb je jbe js jp jl jle inc and inc xor dec sbb sbb push fs add daa push arpl pop push pop ss sbb mulb popf lods sti scas fwait mov mov mov mov mov mov lock enter lds xchg jecxz mov lcall mov xchg in out call mov repnz hlt ret clc (bad) cli mov (bad) mov in les lret cmpsb into xchg xchg shlb fmuls fimul and es dec sub sbb pop xor inc xor add pop cmp cmp ds add add push jno inc or or push popa adc dec adc push push sbb pop sbb push jl add data16 adc insb sbb and je jbe js jp jl jle inc jbe sbb jle jl push dec cmp push push add pop ss pop pop pop sbb jmp lret test stos cld lods shrl mov mov mov (bad) mov int mov mov mov mov nop ficom aad ficompl into loopne loop in out call test cltd lock repnz hlt enter mov mov xchg incb les lret test movsl shl rolb stos fisubrl and push and sbb sub sub cs xor xor ss cmp pop cmp jge,pt pop add arpl aaa or or or push aaa adc adc push push sbb sbb push sub bound fs dec push pop outsb cmp jb je jbe js jp jl jle inc jl inc jne inc and dec and cmp push push push adc pop insb pop push pop xor out call lods cli scas fdivs mov idivb fidivr jmp out xchg mov mov mov mov xchg movsb xchg jecxz mov stos pushf fcompl fsubp fsub out scas ljmp (bad) repnz idivb cld mov mov les lret mov (bad) mov call jmp faddl and jo je dec sub gs inc xor pop ss cmp cmp add add push push cmp xor or inc adc bound pop sbb sbb jne js adc fs adc sub insb or add jb je jbe js jp jl dec sbb inc sub sbb dec add push sub push insb push cmp pop push pop ds or in cmpsb icebp test stos xchg lods nop scas scas scas loop loop stc mov mov popf mov icebp test xchg mov mov aad xchg cld xchg loope mov clc lcall (bad) loop in out call mov repnz hlt aad (bad) clc fsqrt mov shlb mov lods lret mov cmpsb sarb lea fdivl and inc es sub sub cs xor inc xor ss cmp pop cmp ds add ja fs or js push adc xor sbb cmp bound fs push insb or jo inc and xor jp jl jle inc and inc add add dec cmp push xor xor daa pop sub pop sub mov fbld cltd lods lcall mov mov mov icebp mov lock xchg mov mov mov mov nop lods xchg scas xchg xchg push push mov iret fwait call loope jecxz in out jmp popf out mov cmc xchg idivl std mov xchg shll std leave test iret mov aad xlat mov xchg fildl and pusha and add das inc xor add pop aaa jno or aas jno push sub push divps push adc push pop sbb jle jle jne push popa push arpl gs insl sub jno jae jne ja jns jnp jge jg inc sub and inc jne dec adc dec jg bound push and pop or push pop push pop mov shlb std lods imulb ret mov mov mov sarb fldl in mov xchg lret xchg loope call popf fistpl in dec ja mov lret je aas fsub or movsl lods loop sbb popf mov xlat into fld ret (bad) fmulp xlat into ror rol ffree (bad) aad ror xor aaa and sub xor xor ss sub xor aas cmp or and sub or sub sbb push pop sbb sbb sbb add inc pusha gs jne js insb dec outsb data16 jns je jbe push jno jle jl insl jge inc inc inc inc inc inc inc inc dec imul inc inc push push pop sbb xor cmp mov cmpsb cmpsl lods mov scas mov mov mov mov mov mov nop popl mov popf mov addl mov icebp idiv out loope (bad) (bad) cmc out std lods mul loope hlt in cld (bad) sti jmp rol mov xlat lret enter int fstp aad rol mov xlat fmul xchg fcmovnu int3 lret and and xor cs cmp and xor cmp sbb push dec dec dec pop dec ds add add or pop pop push inc jae dec jge arpl jae jge js sbb adc pusha data16 sbb adc outsl fs jl arpl jge or and or sbb xor inc inc inc inc dec dec dec push push dec outsb dec push dec push push push pop push ja push pop pop pop dec das pop mov shlb test lods mov mov mov mov cmpsl mov mov lcall mov nop xchg orl xchg xchg xchg xchg lcall xchg xchg orl mov xchg xchg xchg cmpsb test xchg (bad) rcll mov mov movsl mov mov mov mov adcl ja outsb inc pop pop inc pop push outsb insl jp inc inc push push pop pop arpl adc add pop adc nopl adc sbb pop push adc pop sbb sbb sbb ds popa arpl fs outsb imul jbe data16 sti jae imul jle bound push ret inc dec inc dec dec dec dec dec inc dec dec push push pop push push push push imul inc pop pop pop movsb mov cmpsb cmpsl test scas sahf test scas stos test mov mov and mov ljmp out lea xchg xchg xchg fcmovnu cwtl cltd cltd popf mov cltd sahf loopne mov loope mov ljmp popf cwtl hlt cmc cmc icebp in std cld (bad) in jle (bad) mov lret leave lret int rcr (bad) aam (bad) push jns cli fcmovnbe fsin fisub sub mov sub or xor and xor xchg adc daa or mov cmp es xor xor xor sub xor sbb add add add or fcoml adc sbb sbb popa pusha insb fs pusha sub mov lock pop jp js push scas imul rcrl push (bad) sahf pop leave xchg pop int3 xchg pop iret lea mov mov test test dec and and fwait scas mov sub test scas mov scas scas mov xchg mov cmp pushf mov addl jns mov xchg xchg test fs popf pushf popf orl mull out jmp in call in repz sti cmc loopne (bad) sti enter aad into ret lret xlat aam out into rol push (bad) (bad) cmc xlat (bad) lret (bad) (bad) shll and sub push sub stos sub mov sub xor cmp daa and ds sbb or or mov das xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp rcr (bad) ret clc stc (bad) sti mov (bad) push xchg ret mov lret (bad) into iret repz cmpsb mov fcomp fcmovu sbb (bad) xchg and pop jo daa nop arpl sub addr16 xor cmp call inc outsb insb add or or or push movups adc push adc lods push adc fwait arpl jae imul outsl sub jae jne ja js jnp jg jg inc inc inc bound inc jno dec dec push dec dec dec jo push push push push push push pop pop pop pop rcrb mov movsl cmpsb cmpsl scas test scas scas popf mov mov mov mov mov mov orl mov xchg xchg xchg xchg adcl sahf lahf loopne (bad) mov and jmp enter xchg repnz cmc push (bad) dec clc fdivr inc cld fwait (bad) out add (bad) daa enter int int (bad) hlt ror xlat mov (bad) fldlg2 fnstcw and and inc das mov cmp mov aaa idivl lahf cmp cmp sbb xor inc add or je adc sahf adc push adc sbb rcrb cli sbb popa fwait pusha shll gs insb push or jno jne jns jg jge jg inc stos inc inc inc imul dec dec or dec push push xor push call pop mov mov scas test test std mov mov mov mov mov das mov repnz (bad) (bad) roll cld popf xor cmp xchg jecxz in out (bad) out loopne into in in cli icebp int3 cli mov lock stc cli std jge jo gs pop int3 mov leave popa ret enter mov rcl sub jge rcr xlat cmp and sub jo,pn sub cmp mov cmp aas mov add or hlt pop (bad) push adc movsb adc pop inc adc adc bound outsb (bad) data16 imul outsl lods jp jae jne jl jns jnp jbe js inc push dec push dec inc inc and fisttpl loop cmc push pop push scas pop into push pop pop dec push stc pop push pop mov movsl sbb jp add sbb mov mov addl in lea xchg xchg xchg aaa cltd cmp xchg cmp inc in out out jmp in sbb jnp cld repz xor stc xlat jmp std lock cld (bad) mov (bad) lds lret cltd (bad) ret jno rcl adc fldl iret test and fidiv cmp dec cmp xchg xor xor cmp lahf cmp sbb insl adc sbb test stos sbb or or iret add push or cmp xchg sbb add gs jne jns imul jg jno popa pushl ja imul outsb jge insl lret inc dec inc cmp inc push dec negl inc dec dec mov push push push inc inc leave pop inc pop fs sti pop mov mov cmpsl sbb sarl leave mov iret cmpsb mov mov push (bad) (bad) test xchg repnz mov arpl nop xchg jle cmp lcall out jmp hlt out mov mov loop in loopne fwait call mov (bad) rcr (bad) jle sbb or enter scas (bad) fcompp cmc int3 jns (bad) ffreep ss xor and sub xlat cmp sub sub mov fldt es sbb rcrl and jnp adc adc push push push js gs addr16 jb push insl inc jae jo jae imul sbb jg inc daa inc inc inc enter dec dec push dec sub push fs xor hlt inc aas pop pop pop inc inc adc push cmpsb scas test test jae add sbb mov mov xchg xchg das mov xchg xchg xchg sub test ljmp jecxz in sti sahf jmp dec out div add push cmc lock fstpl clc cli std cmp jle (bad) imul into leave lods out loopne iret mov aad cli pop hlt (bad) jo out repnz xchg add push sub xor aad push sbb cmp aas ss scas add add adc jae mov cmp push adc xor mov xor popa fs dec push popa outsb imul jae jne pop fnstsw jnp dec sbb inc aam and mov dec dec jge inc push push pop addr16 pop pop pop jle pop push pop pop call movsl ja dec stos mov pop lahf dec lods mov mov mov mov mov loopne mov (bad) mov mov loop call mov sub cmc (bad) push in out fcompl ljmp repz push idiv stc add std clc inc clc lock loopne cli iret int3 lret mov imul (bad) mov dec xlat rcl pop jecxz fcmovnbe (bad) in and and inc daa and add dec sub jle xor cmp rolb add add ds xor sub adc leave sub adc sbb and sbb pop pusha popa sub imul outsl xorl ja jns jnp jge jl inc adc inc inc inc dec dec pop dec mov push push push push push push push pop pop (bad) pop pop pop pop pop movsl mov cmpsb cmpsl arpl scas mov mov mov mov lods mov jmp mov mov lea xchg xchg pop xchg rcrb sahf lahf aas cli loop mov jmp jmp repz cmc xchg idiv stc cli sti adc rcll enter int3 int int shrl xlat std stc fcmovu test sbb and and mov dec sub xor push cmp mov add add fwait add push or movq adc mov jne xchg sbb sbb jmp mulb push outsb outsl in jae jae jne jbe jns pop jl daa jge inc fiaddl inc inc inc je dec dec in es lret push push push push push push jne pop (bad) pop ss sti pop mov xchg stos add mov nop mov out mov mov mov addl mov nop xchg setno xchg and xor pushf jecxz in out jmp jae mov dec repz div sbb cli sti movsl std cmp rol (bad) (bad) enter mov and fcmovnbe rcl cmp xlat sbb (bad) and rorl and lds daa sub das and xor insl aaa cmpsb aaa xlat cmp cmp pop add and and push and sub sub das das xor sbb xor xor cmp cmp cmp add pop push lds call or and fsts push pop sbb sbb pusha mov mov addr16 xor mov je jbe push jns and test inc inc inc inc jbe dec aam xchg dec dec dec dec push push push pop fs push lret pop pop pop pop pop pop mov cmp lods lods scas ret xorb mov mov sbb pop test mov lea test add inc loopne jecxz in out fsubr ljmp repnz dec (bad) idiv fs and (bad) cld rol or lret in int iret iret rolb loop aam (bad) psubusb fcmovnu fstp ficom and es sub cmp pop das xor out xor aaa xor or add add cmp or push out adc adc sbb inc sbb push push popa arpl cmp push insb adc jb dec jne jp,pn jp jge jg inc mov inc inc fadds ret dec dec dec ja push push into push mov pop pop pop addr16 mov cmpsl movsl test lods scas xor mov mov fildl push sbbb addl mov xchg xchg xchg xchg xchg out xchg cwtl add jae ds popf loope loop fucom out ljmp out lock repz lods negb clc push sti lock std (bad) movsl sti rol (bad) sub jo ret int3 scas cmc iret rorb xlat (bad) (bad) scas out fiadd and cltd adc sub cs xor ss add cmp les (bad) add add add cmp or prefetchwt1 adc push dec sbb sbb sbb out arpl sahf push insl outsb ret dec jno jae mov jns jp jl inc jg inc inc mov dec dec dec mov push test xchg push push push push pop inc fs pop pop pop cmpsb mov movsl cmpsb out test scas imul mov mov or jo dec lea lods xchg xchg xchg xchg outsb cwtl pop fwait fwait pushf popf sahf dec fsubp loop in out jmp adc out lock repnz xor idiv stc cli in std (bad) inc cmp add enter int3 int rclb rcl aam (bad) mov fsubl sbb and and sbb sub sub sub das push xor ss xor xor cmp cmp cmp add add add push push or cmovo sbb pop push bound add adc or jp addr16 pusha or je or push sbb jb jb je js jl jle jle inc cmp inc enter pop dec fmuls dec pop push lret push and inc push negl pop dec pop cli pop sub shlb scas mov mov mov mov mov lret orb xchg lcall xchg jno loop xchg mov repnz loopne ljmp (bad) lock test in (bad) decl stc test rol xlat ret mov (bad) enter into fmul out xlat stos rol aam shrl (bad) and sbb sub sub and je dec xor cmp mov pop xchg adc add sbb (bad) or adc mov pushf mov nop bound loop arpl fs shrl outsb cmp scas ja jo hlt mov clc jp cli mov bnd rclb popf dec (bad) dec sbb push inc push mov ficoml mov lahf pop dec pop inc test mov jle mov lods mov mov mov mov mov lds incl mov (bad) xchg int loopne lahf mov xchg pushf cltd lock stc insb out loopne repz jle inc sti cmpsl jb out pop std mov imull leave xchg inc pop (bad) enter or leave test lds ret out sub and cmp es aaa (bad) and fildll shrb xor cmp and sbb or add mov or adc or add adc push je (bad) fs inc call dec loop imul jbe pop idivb jl pop add addr16 (bad) fs dec lcall jo pop push push mov and pop fs push pop mov mov mov lods mov xchg cmp mov push adc mov or scas add xchg xchg xchg fidivrl into mov clc (bad) lods call mov out mov aad idiv cli lret fildll (bad) jmp les fiadd fadds rcr fidivr add and es insl add and jle lea xor push adc cmp push pop add dec or or push cltd cmp adc push pop sbb pusha mov data16 and mov adc outsl cmp and mov jae decb les dec push gs dec push je sbb push jle adc jo push scas cmpsl mov mov mov clc mov bound hlt mov or lret xchg mov aam (bad) sahf xchg xchg int3 mov cli mov xchg fwait sahf clc leave test in mov scas out ljmp (bad) fstpt (bad) mov std cld xchg mov mov ror jecxz ret inc stc cwtl (bad) aam lcall cmc sbb or and loopne pusha and sub pop data16 xor sbb fist jb cmp lret sub add push bndldx es or or pop sbb adc cs outsl aaa loop dec test call cmp xor jge hlt sbb das cli add rcl mov bound fs pop pop rolb pop stos jo push pop pop cmpsb mov lea mov cltd cli mov lock mov xchg orl fcomps xchg lahf lcall and lock jecxz insb repz or jb fucomip out js shl in stos jle in fcmovbe xchg inc fucomip fnop lahf dec in loopne ficomp les lret mov mov jno push push xor cs push ret and xor sbb sub cmp or cmp add xor add out cmp or jne,pt and stos and fsubrs fistl dec sahf (bad) push sbb fs cmpsl arpl ret gs sub jbe dec dec popa push push dec or inc xor inc inc dec popf jb dec dec dec scas push mov pop ret push pop mov movsb cmpsb add add add jne mov push addl addb xchg (bad) popa xchg mov xchg xchg cli mov sti movsl jae out fistp rcll lret mov cmc hlt insb int in cli pop movl (bad) sub pop lret test iret rcl rcl int3 fst test fcmovnu mov fstp fbld daa cmp es and sub cs ss sbb cmp cmp adc add add daa pop or or add or adc adc ss adc cmp sbb fs cmp outsb out jno jae xor loope jns fstps inc inc add dec dec dec rep dec dec dec push rclb push in push pop mov pop pop pop sbb cmpsb cmpsb inc mov scas das mov mov mov xchg mov mov mov lahf cmpsl test orl mov xchg xchg xchg xchg nop xchg rol loope jecxz jecxz out ljmp out lock repnz loop jnp cld cli sti cld std (bad) jg xlat loop int (bad) jns lret int3 int fnop out fadds rcl and (bad) fcmovnu lret ficom and add sub sub xor xor xor cmp xor sub adc push pop xchg push add adc adc push cmp ret push adc bound push imul insl outsb out jo push sti jns jb js dec jnp jge imul inc add dec dec dec pop dec xchg pop pop push inc push push bound pop pop dec pop dec push shll movsl cmpsb daa test mov mov mov mov mov cwtl cld mov mov addl scas mov mov sbbb subl loop hlt shl call in out stc lock mov ret sti cld jmp das rorl ljmp lret lret fsubrl sti rolb aad xlat fmul fisubl out icebp and and cmp sub xor xor cmp mov or jl add add add adc stos inc or adc das adc sbb sbb jno fs dec daa imul arpl jb je cmp jns push out insl inc inc ja sti adc pop dec call push sub push inc pop pusha dec cmp gs jnp mov cmpsb cmc mov jne scas mov mov mov mov shll mov (bad) into xchg jge mov mov test xchg aam pop add lcall jae mov call dec clc arpl mov mov div clc out cli dec ljmp ret les shr jle ljmp rclb ret divb lock and xor sub (bad) mov cs xor xor jp jge push lcall jo pusha pop dec push mov or or push je sub pop sbb sbb pusha cs iret (bad) gs sti jnp outsb and (bad) jae jne popa js insl idivl and inc inc inc inc push inc rcrl dec add cmp push inc push call pop ja pop pop pop mov lahf mov stos lods lods scas mov mov mov adc mov aad subl lcall xchg mov cwtl mov leave loopne dec jecxz in imul pop repnz mov repnz in mul sub mov rol ror (bad) fistp ret fbld into out rol fcmove int fmull fstp into and shrb subl sub es lds outsb xor popf aaa cmp cmp xor daa (bad) or add push xchg sbb arpl adc adc add pop inc push pop pusha popa (bad) (bad) jno popa or outsl jo jb push mov data16 jp jl jle inc push bound dec dec dec dec dec int pop jo dec dec pop xor pop pop pop fistpl jno test cmpsl test stos mov mov mov mov test jno scas mov addl sti xchg mov xchg test jmp sub loop cld in in jmp in out out lock clc call sbb cld std (bad) stc enter lds lret lret (bad) xchg int3 in mov fcomp fcmovu fdivrl ret push and xchg and sub xor and mov xor es mov add cmc adc daa pop and popf es sub sub fidiv or dec xor aaa ds daa and inc aas xor add add pop or pop mov adc adc adc sbb pop pusha popa fs js addr16 insl outsb outsl jbe stos outsb daa jne ja mov js popf pop inc inc cmp test dec dec dec push inc dec add push push push push push fcomps jnp inc jp fisub cmpsl mov mov mov xor cmpsl xchg shlb (bad) jl andl mov dec mov or out pop pushf popf mov std or sub jmp in call (bad) jle pop xor stc (bad) cli cmc dec loope int ret or mov leave int3 ret or and pop (bad) ss aad xlat (bad) adc sub push fbld in and fbld mov xor xor cmp mov add ds and add out std or or decb push sbb arpl gs insl jae and jae mov ja jns jnp (bad) fistpll inc mov inc dec dec je jne fisttpll push push push push push push dec push pop popa pop lret pop mov cmpsb add lods lods scas scas mov hlt mov xchg out and mov pushf mov mov mov ss xchg xchg cwtl cltd cltd ficompl inc jecxz in out jmp xchg pop icebp repnz cmc cmc idivl lock inc rol mov icebp iret pusha int iret rcl rcl xchg (bad) jae adc fcmovnu fstp fbld and add sub sub sub adc (bad) aaa cmp cmp aas cmp cmp mov push pop or or dec push stos adc stos adc pop sbb bound gs dec pop pusha shrb jno jae jne outsl jo inc jg jge jg inc inc inc add pop adc dec dec dec dec push push adc push jne pop sahf pop pop pop pop pop pop pop out mov cmpsl test stos stos scas lods test mov mov mov mov sbb test int3 mov xchg xchg xchg xchg xchg xchg ficomp dec lahf loopne loop out loopne loopne shr cmp out out lock icebp repz push call cld std (bad) inc roll leave lret int iret xchg ror repz fmuls xlat push pop fcmovu (bad) fcom lret add es and sub sub in xor cmp xor mov add inc sub adc adc xchg clc sbb loop jne pop push mov jno jnp push fdivrl jns mov inc dec shll dec lods inc inc mov dec dec dec push pop push add push dec nop pop pop pop pop pop pop loop repz cmpsb cmpsl test lods stos push mov je mov mov mov push mov test (bad) nop xchg xchg xchg xchg lea fwait pushf popf sahf lahf jecxz movsb loopne cli and pop jmp in out mov repnz stc cli sti (bad) std mov into aaa lds add leave lret aad int shll rcl aad xlat pop (bad) (bad) (bad) fst aam and and cmpsb daa mov and das xor xor mov cmpsl pop popf sbb xor add and adc (bad) or lds wrmsr adc lods aaa nop sbb sbb ds jbe mov addr16 push dec insl js mov je mov jge pushf pop jnp inc inc xor dec mov sbb lcall mov pop mov movsl mov scas test scas scas mov mov repnz test mov mov addl mov lea mov fwait pushf xchg cwtl cltd lcall jecxz out in out jmp dec lock (bad) push hlt cmc div sti stc mov repnz ret (bad) mov aam mov rcl rcl aad iret rcr loope into (bad) fbld and and cmpl daa sub je xor mov and cmp cmp cmp and or sub or or or sbb inc adc adc fstpl sbb sbb sbb jg jl addr16 imul push mov jns imul mov inc inc inc inc insw jle push dec loop push push push push push push addr16 pop inc pop test pop pop mov adcl scas mov test xor mov mov cltd test dec mov mov movsb xchg (bad) xchg mov cltd fwait fwait sarl inc sub in out jmp repz pushf and repz cmc div scas (bad) (bad) loope pop das rol ret (bad) jecxz int3 xlat lret into iret rcl rcl mov and (bad) or fstp fbld and adc cmp mov sub sub das das pop adc cmp cmp cmp cmp add add sbb jl pop add adc xchg adc push pusha popa bound gs (bad) dec inc fs insb outsb outsl jo bnd push scas push dec jbe jp jge mov rcl rol cmpsb mov scas jmp xor xor daa daa and cmp das das and cmp xor cs adc add movlps push pop or sbb adcl pop jbe ja sbb push or sbb fs jo imul push popa jb jo pop jo or jge jne jb push inc aaa pop pusha dec cmp dec dec dec push fldl push push inc cmp dec pop stc dec xor cmpsl add imul mov cwtl jge mov pop cmpsl fcoms shlb orb xchg cltd mov nop loope mov mov in popf sahf fwait xchg pmaddwd xchg repz mov jmp mov sahf loopne cmpl fucomi cli mov in mov (bad) mov aam mov fidivrl lock (bad) fsubrs or es and sub or xor inc aas inc jae cmp (bad) aas or add and or jge jge or arpl push pop adc sbb cmp adc andb pop into xchg xchg xchg mov jl sbb jb jns add dec jp jge cmp dec sahf popf dec pusha outsb dec dec dec inc pop pop gs dec push pop mov imul pop push dec dec mov int movsb movsl lods mov fldcw rclb mov mov xchg pop mov xchg nop jmp sbbb xchg adcb lcall loopne in hlt loope jmpw sti adc call (bad) loop cmc cwtl call call stos dec mov fidiv xchg hlt and rcl lods ret aam shlb lret fbld sub popa xor push aaa push sub sub das sub and sub cmp add add lds or scas pop pusha or cmp adc sbb or mov mov pop icebp addr16 insl push jge jb bound ja jae test outsb jg inc xor pusha sbb inc pop mov xor inc push daa sbb mov mov (bad) jno movsl (bad) mov fndisi(8087 mov fldl fcoml mov sahf test leave push lcall test scas mov mov test mov out jmp xchg call in into clc out cltd clc (bad) testl lock sbb (bad) mov and (bad) int addr16 xor rcr das (bad) (bad) aad mov add sar or and cs cmp sub repnz xor and and sbb dec adc adc adc push and push add adc add (bad) sbb adc jo pop sbb popw mov imul push cmp jae add xchg js jo dec jge jge pop push pop sub dec inc pop push and dec push inc push inc dec cmp pop pop push dec inc xor mov lret test mov and mov mov aaa mov mov test aad arpl xchg xchg nop out nop cwtl jmp sahf xchg not cmpsl repnz stc shr ret in call repz out out out std pop in xchg jmp lods fadd out or leave shrb xlat xabort rcl fidiv mov (bad) mov fbld sub mov es push cmp sub pop and xor sbb cmp sub cmp adc push or add jle pop popa pop or addr16 sbb push cmp sbb mov arpl popa adc inc pop outsb outsl jp xchg jae jg data16 xchg pop jl js or insb ja inc inc es dec dec inc push je and pop sub pop stos into inc mov lods fstpt (bad) lods mov pushf xchg mov cmc out pusha addl push lcall xchg mov lods lcall jmp cmp call (bad) lock sub fmul div (bad) ljmp out mov vshufpd inc fmul int3 int3 fcmovu (bad) stc test aam rcrb fcmovu lret fbld sub mov xor sub inc lock cmp inc or sub fnstsw aas or add adc cmp or adc or je sbb sbb jns dec fs gs add insl outsb gs jo sbb jbe jb test jnp icebp inc inc dec push mov (bad) dec dec inc pop mov punpckhbw inc pop pop pop sub pop das mov repnz in mov scas fistp scas cmp shrl in xchg xchg andl lcall pop cwtl cltd nop cmp loope mov in in into sarl in in nop push icebp testb shrl add mov mov (bad) mov iret fcmovb sub mov mov (bad) fsubrl sub movaps sub xor inc sbb xor cmp fnstcw cmp sbb dec call ja sbb jns cmp adc xor gs sbb outsl push add dec push fs or jl sbb jae cmp dec jl je mov push xor stos dec dec inc jbe mov scas popl and pop pop jbe dec sub imul cmpsb lods je movsl mov scas fwait movsb mov mov mov nop lahf xchg imulb xchg mov cwtl add addl lahf loopne hlt lret cmp out shrl jmp cld repz (bad) icebp repnz sub div ljmp (bad) mov and (bad) std leave lret rcr sarl faddp leave mov fcmovnu fcmove fxch ds or and sub ss pop sub and aaa pop mov leave cmp push mov cmp bound add fbld jl dec test sub cmp (bad) xor xor xor cmp outsl add or jp sub movups or or je sbb (bad) je jg inc cmpsb imul pop push jbe fisubrl push fistpll jne pushf inc inc dec arpl dec dec dec xor and and jle pop pop push dec mov mov cmpsb xlat mov cmpsl mov frstor mov mov icebp push mov clc rclb xchg cltd sti je xchg xchg mov mov test in iret fucompp ljmp xlat jecxz xchg (bad) (bad) mov mov repnz stos and mov (bad) iret mov aad (bad) ljmp fildll pop xor es and adc (bad) lock inc inc pop xor aaa sbb dec dec or add push fnop or pop sbb adc lret push aas push sbb sbb je popl adc insb jge jnp outsl jno addr16 pcmpeqd outsl divb jl jg push jl inc dec dec pop imul dec dec push lea pop inc das pusha push pop pop pop dec xor mov cmpsl stos mov lahf scas mov mov mov mov rcll lods xchg mov decl cmp cmc mov popf cwtl xchg icebp out insl in in lock jmp test out in (bad) xchg repnz (bad) mov ret cmp cwtl icebp es mov iret rcl mov (bad) lock fcmovnbe lret in lcall push movaps sub xor and and lcall outsl sbb enter stos sbb add sbb pop sbb jne sbb adc pop mulb sbb push insl push jns and jle mov imul inc xor inc inc dec pop mov sub pop dec and dec push and mov pop push jl pop das mov (bad) mov (bad) out mov stos lods cmpsl rorl mov pop lahf mov mov addl lods popf mov jno xchg loop out mov pushf xchg icebp jle loope vpavgb sahf cmpsb repz sbb repz lcall fucomp test stc push cmp cmp (bad) mov stc into iret sar faddp lods mov mov (bad) aam (bad) cs or and add sub and xor jb xor and dec rcrl ds sub add add mov or or sbb es adc add sbb xor sbb adc loop bound inc adc push insl outsb arpl dec cmp jbe add lcall inc inc push pusha push bound jns dec dec inc pop push jg push push inc push inc jae jb pop pop push dec jnp mov mov cmpsb mov cmp mov mov aam mov sbb ljmp mov mov nop xchg xchg in test popf fwait in mov cmc xlat mov int pushf (bad) lock jle cmc div jmp jmp ljmp les test lret int3 (bad) insb fidivr aad fnstsw mov jg (bad) dec cld and add mov sub push cmp sub xor inc and cmp xor add push jno adc ja and or sbb adc jge adc sbb std sbb adc pop jns sbb jno push inc inc jno jns xchg jbe jb imul pop jg inc xor pop inc outsl jp dec inc and push es jno sub adc ja,pn mov cmpsb cmpsl mov mov sar mov lahf mov mov cli jmp xchg jae push cltd sub xchg mov test sahf sahf (bad) movsl loop out cmp call in out lret repnz sub fistpll fucomi (bad) mov in mov (bad) enter inc fcmovne iret rol mov scas (bad) xlat ror push xchg (bad) (bad) or and cs sub cmp xor xor and cmp inc push loopne add jo push pop or sub push adc sbb xor push sbb or popa imul insb data16 add jo js mov sbb jns jno cmpl int3 inc inc dec push mov ret inc inc scas push or mov dec pop pop pop sub cmpsl mov cmpsb cmpsl mov test ret mov mov xor mov xchg out xchg test xchg jmp lcall xchg cltd ss mov xchg cmp vphsubdq out mov call jp out lock loop hlt icebp test stc stc mov aam (bad) dec xlat cmp mov mov fsub adc fld sub mov mov fisubr dec ret and add sub pop aas sub das xor aaa cmp push fidivrl jo and pop or movups jge adc sbb or in sbb jg adc push addr16 insl fs popa je addr16 jne jo xor or dec jg dec sub popa pop xor jne scas lods lods mov sub pop jno dec fcmovbe xchg mov test mov xchg popf sahf cmpsl mov xchg cld mov xchg lods xchg cmc gs mov movsb mov test mov pushf popf xchg mov jecxz repz cmp jmp out out loope xchg stc cli icebp out xchg mov rol mov ret mov fdivr sar in (bad) rcl enter (bad) fnstenv xor dec push daa daa and add das das ss xor mov les cmp aas add adc push sbb or sbb adc add sbb hlt sbb push popa jo bound dec popa sbb cmp jns xor ja push ja push jnp jl fs inc inc inc push sub pop dec call dec repnz cmp push pop push clc dec xor insb mov leave (bad) or scas scas mov mov leave test mov mov test hlt fwait mov xchg jecxz mov mov std mov icebp in test in mov jmp jmp and repnz test std (bad) cmc scas and ret into jecxz ret in lret mov shll fnsave sti iret ficoml add insb xor sub xor adc xor adc dec cmp add ss or push sub je repz push das mov or pusha popa arpl je adc push sub jp lods jl pop jns js imul lahf inc imul inc inc pop gs addr16 aas mov push push push push inc aad pop pop pop dec dec dec mov mov in test stos mov mov mov fwait int3 (bad) mov mov mov cwtl mul insb lea xchg xchg xchg lcall int in cmc loopne les in fcompl cli jmp std hlt call dec (bad) fbstp enter inc iret rcr lds push (bad) ror and sbbb and and ss sub pop cmp popa xor and and cmp add or sbb sbb mov jge add add rcrb or addr16 inc int jo sbb push inc out jp jl outsb jg inc xor inc ss pusha sbb inc pop mov cs push push push daa mov jae pop pop push mov mov mov fadd dec scas mov xchg mov mov mulb addl lods popf mov addr16 loop out mov pushf xchg icebp jle loope vpavgb sahf cmpsb repz sbb repz lcall fucomp clc mov call mov (bad) mov (bad) mov cmc lds shl jne and (bad) aaa xor adc daa sub sbb xor pop ja xor pop adc cmp sub add or or or sbb adc push cmp aaa jbe sbb or adc arpl or adc outsb jo pusha push pop xchg jbe jb dec push adc inc inc dec push je imul jge fs push push pop inc cmp pop pop push dec pop xor mov cmpsl mov mov mov cmp mov mov aam mov sbb push xchg mov movsb xchg xchg loop mov (bad) cltd in add xchg lret in out repnz jmp in std and in push in loopne (bad) pop ljmp ret aam faddp loope lret int3 (bad) insb fidivr fistpll std in (bad) and and push sub sub add cs cmp int3 xor ss cmp aam cmp sub push add or sti pop addr16 sbb jle adc pusha jle adc xor sbb insl prefetcht1 sub adc push addr16 insl fs popa je fwait push jne jno xor or dec jg dec sub popa pop dec cmp and dec push and fs pop push xor jns movsb (bad) mov movsl (bad) mov faddl fstl mov xchg stos les test jg jl mov mov cwtl dec dec lcall (bad) lods mov loopne call out out stc fscale (bad) popf sbb hlt div (bad) out ja cld std (bad) jmp aad mov inc or int out rcl fsubr push aam xlat leave jmp movsb (bad) fbstp aaa pop push insb sub sub push inc into das xor inc push xor xor or or cmp adc insb sub add push sbb arpl (bad) movhps add jnp pop pop push adc sbb xchg push pop push pushf popa arpl call xchg outsb or jb arpl hlt jnp ja addl inc cmp dec dec ds dec and add inc imul cs jns rorb mov stos mov mov mov sbb jb orb scas inc mov cmpsl xor xchg xchg xchg mov sahf loope loope out call ret in in push lock hlt cmc repnz out cli mov aad inc lret aam lds mov mov repnz shll int lods xchg cmp and sub or sub adc jl cmp push cmp add push and add sub inc or adc sbb push cmp sbb jne arpl adc jne sbb insl outsb gs nop jb jle or fwait jp jbe xlat cmpl dec dec addr16 pop xor fs push push cmp push push push test mov mov cmpsl mov lods scas test fistl mov scas test mov out addl mov mov jbe xchg cltd xchg fwait fwait lcall jecxz mul neg xchg ljmp fcomip hlt repz out xchg je cld imul add (bad) lods dec (bad) (bad) ss stos int inc into iret fcmovb sub mov mov int3 and and pop xor add pop cmp pusha xor cmp push jae cmp and add add mov push pop or dec xor test inc cmp cmp aaa ss xor xchg es and adc cmp insl sub aam or sub cwtl adc adc adc sbb insb or dec pusha popa push ja imul pop and jg mov push adc pop inc xor pop dec cmp push and dec push es pop pop push xor cmpsb (bad) dec andl (bad) mov mov mov stos mov lock enter scas mov insb mov out mov rolb loope jmp loop clc xchg les out out cli lret pop or ljmp in test ret into sbb fldln2 loope lret int3 (bad) fnop shl cmp aad ror xor (bad) clc divl and sub and sub adc push cmp adc inc sbb sub sub push sub push or or sbb into adc sbb or outsl arpl bound jbe pop and imul (bad) jo js inc jne jne inc imul jg inc dec push jp push inc dec pop dec pop jne gs push push pop inc insl cmp pop pop push dec pop xor pop mov mov mov test mov mov xor jle fnstsw negb movsl mov xchg xchg popf mov cmpl gs ljmp out push in loope lcall xchg in (bad) xor ror aad (bad) loopne lret outsl fbld fidivr cld jecxz fstp fistp and and sub add and and xor sub outsl add or data16 jns adc jg lock push xor adc cmp insl sub dec push bound insb addr16 jle add add push dec jle dec mov push dec cmp sbb jl push push push ss dec movsl (bad) mov movsb aad aad mov fildl push mov mov pop mov jle jge xchg xchg push repnz sbbl xchg cwtl xchg inc inc xchg mov call out jecxz jmp test out mul leave loop loope sbb stc mov std std (bad) stc (bad) dec aam (bad) (bad) rcl fsub mov int3 (bad) fadds rcl rol std or fcom jecxz fstp fmulp sbb and dec clc sub and lods adc and xor cmp sub xor xor or add jl adc adc or je sbb sbb gs gs jg push outsl jp mov jae stc js jo (bad) jg jbe iret inc inc dec push mov dec dec dec xor push push and push daa dec jno pop pop push dec insb in cmpsb sarl test stos stos mov mov (bad) aam lods mov test fwait in test xor cltd nop hlt inc popf sahf xchg (bad) fnstenv in cwtl imul jmp out lahf out mov or xchg sti cld stc mov xlat (bad) mov in xchg mov fbstp lods loope (bad) mov mov std int lods or and cmp pop add sub and (bad) xor cmp and inc rcrb cmp dec jne add xor or sub jge adc addr16 or imul jo popa bound je adc imul jb add je jl cltd jns jno insb call mov in mov pop int jp push push jle inc aam arpl pop xor pop pop push jl lods xchg xchg cmpl divb mov mov xchg mov popl mov stos stc mov lea in cmc loop imul out jmp stc jecxz hlt xchg (bad) xchg je cld imul add sahf lret lods dec (bad) fbstp enter into iret shrb movsb cld (bad) stos int (bad) (bad) sub adc and sub sub mov and cmp sub sub push mov das les or scas sbb push sbb ficom adc mov ja mov ret push addr16 imul pop and test insl jle inc xor sbb inc pop mov das jl inc push es dec push sub mov dec movsl (bad) jo movsb aad mov faddl fstl mov xchg test mov lahf xor mov mov test mov out ljmp lahf loopne lea in in sar cwtl inc in sahf call test (bad) idiv repz sbb std hlt fstps into out lret (bad) fcomi loop int3 int adc stc (bad) rcl rol xchg leave cltd into test or and and stos xor sub aas cmp push push xor cmp cmp adc cmp xor (bad) add add or rorl sub adc cli sbb push pusha popa pusha jo je or push addr16 add jb addr16 ss push jnp jp outsl ds insb inc inc inc dec push inc daa (bad) dec dec inc pop mov push fcoml pop inc test rcrb push mov mov cmpsl test mov inc mov mov movsb mov mov xchg mov out addb cmp lods mov movsl (bad) (bad) nop xchg mov (bad) xchg xchg xchg mov mov mov repz hlt mov out shll in out (bad) lahf call idiv pop call (bad) cmc scas sbb ret into jecxz push enter fmul into lret mov ret incb and mov push lret push add sub cmp xor pop and cmp fnstsw pop jno and ja push js adc adc jnp push pop adc or outsb cmc cmp adc sub push dec pop imul jp arpl mov or xor push push jb inc dec sub dec ds dec and sbb es pop pop push xor and inc cmpsb cmpsl mov push jo mov mov fwait mov cmp mov (bad) orl test mov dec xchg mov (bad) fimul (bad) into out jmp out out icebp in out (bad) div repnz jbe cld std (bad) jmp into cld inc (bad) enter mov mov lds fcmovnu fmul pop mov and sub es sub outsb cmp pop xor cmp jo sbb cmp sub add adc or sbb adc add pop adc sbb adc jecxz jg push in arpl cltd push arpl insl outsb gs jo dec lcall jl or inc inc xor adc jns pop dec cmp ja and push push push inc aam pop pop pop dec xor mov mov scas or jl mov push movsb fldcw mov test jmp lods mov mov xchg xchg in cltd cltd ljmp negl lcall cld in popf clc (bad) mov or xchg aam jmp mov and (bad) iret loopne int sbb int3 mov iret shll mov (bad) aam xor lret add aaa sub das xor pop (bad) xor cmp sub lds cmp pop add pop or gs pusha pop cmp data16 pop sbb pop and sub inc dec je cmp dec dec jp cmp dec dec inc push adc ja adc cmp ds and cs add sbb add mov xchg cmpsb lock negb lock addl in cmc (bad) imul in xlat fmull mov rol int3 mov faddp mov mov mov mov popf lahf xchg xchg addb cmp scas (bad) mov test dec (bad) mov xchg test mov push and outsb daa outsb arpl sbb add fs pop push pop dec dec or jnp dec jae add add push and jp pop sub inc dec dec pop pop add jl dec inc ss jno jb arpl pop cmp outsl jg imul jnp jo popa pop dec pop pop sbb insb pop add push add and imul dec inc je cmp inc dec jp sub inc dec inc push xor sub cmp dec adc or and cmp sub xor mov aad int (bad) lret enter aam (bad) fcmovb mov jmp test mov xlat mov mov rcl cmpsl xchg (bad) (bad) lods scas xchg (bad) in lret out stc out out mov xchg mov mov mov rol stos movsl mov cwtl lcall sahf xchg std std cld iret mov mov mov je push inc inc inc es sub jae push sbb addr16 aaa jl or ds je inc push imul or push orps jbe insb data16 pop pop pop push push push push xor xor sub daa xor imul cmp xor daa es inc js or jg das ss aaa and and and sbb and sbb push pop cmp aas sub aad mov out jecxz ffree cwtl sahf loopne lret vpmovmskb lock fxch in ror (bad) fcmove xor mov aad cmc in out (bad) loop ljmp cmc (bad) ljmp fldl xchg mov jmp xchg stos xchg xchg mov lahf xchg cmc mov mov xchg mov mov sbbl sahf mov nop jae and imul jge push dec inc je push push inc aaa jl or js (bad) inc jae add xor or cmp push jge jb inc ja jge dec jle pop insl pop xor add sub imul or add pop sbb jns sbb pop and movaps add xor and cmp cs sbb shll aam in rcr leave ret lret jecxz aam mov lret std lock jmp iret (bad) (bad) rol xlat enter (bad) int (bad) in cld clc ret cld cltd leave out std jmp nop xchg mov cmpb pushf popf lahf cmpl clc mov lods lcall movb stos mov mov mov mov mov fimul push inc push pop dec dec sub push popa inc dec popa inc push inc push aaa jnp je jns push inc dec inc inc push add dec push pop push addr16 daa adc pop inc push inc dec inc jb and sub and and and outsl xor cmp xor cs sub add or add or sbb adc add pop push adc or adc (bad) repnz in jmp cmpsl jmp in jmp hlt lock ljmp stc out in mov rcr fmul rcr into ret lret iret ret xlat aam mov lret fcom ror fidivrl test movsb mov mov mov mov mov mov xchg (bad) mov subb mov mov mov mov mov inc and push inc push push dec dec sub jle push outsb jnp jb ss dec jae pop push outsl popa addr16 insl jg pop inc pusha bound arpl popa jle ja bound ja jg outsl jnp adc add or add add push add sbb add cmp and xor and cmp sub and xor daa sbb or xor xor shlb ret vpsubb fmulp mov (bad) fcmovnbe xlat ret rcl aam into fnop lret lock jmp std fdiv in clc xchg (bad) in cli (bad) call test mov mov mov mov mov mov lods rclb (bad) mov into lahf xchg xchg xchg mov mov sahf addr16 jbe jb imul sub outsl push jno arpl cmp jnp popa jp inc inc push push inc pop push dec dec dec or dec dec push dec push push inc inc push inc dec pop pop pop dec dec push xor bound and xor sub cmp xor and daa xor cmp and cmp cmp cmp adc add (bad) or adc adc add adc push pop adc sbb div cmpsb loopne test in (bad) out addl out mov mov mov int fnstenv lret mov loopne repz cld not (bad) idiv cld xchg mov adcb mov in mov ret (bad) hlt mov iret sti mov mov nop mov cmpsl scas cmpsl subl mov mov fimull jg adc push arpl sbb sub dec pop arpl inc pop inc dec jl dec pop dec push dec dec outsl jae push jge jb gs pop outsb outsl js fs ja jae imul push sub aaa sub or sbb sbb push or adc jns sbb cmp adc daa and aaa das xor add and daa sub xor push pop sub and sub hlt xlat iret leave lret rcr shrb fstp ret rcr out ret mov in ljmp out lret call icebp (bad) lock repnz out sahf (bad) mov test mov xchg repz cwtl xchg mov mov mov mov test mov xchg mov ficomp dec inc push pop outsb inc pop inc sub push pop pop inc push jbe pop cmp je push add xor imul imul push js gs push adc pop or or imul sbb and sbb push sbb adc sbb xor daa add and daa and push add cmp push cmp cmp cmp aad cmc vpsrlq test lock loop clc scas jecxz mov in ljmp jecxz mov int3 rcr mov fcmovnbe mov icebp loope repnz cld std cli call cmpsl xchg lea mov mov xchg fwait xchg test pushf xchg lcall add (bad) (bad) dec xchg xchg (bad) loope out mov lods test inc push and dec inc inc pop pop addr16 dec pop inc dec jae pop pop push push inc pop push push cmp pop pop jo insl jnp imul imul bound jl adc pusha dec pop js insb jbe push jl jp push pop pop cmp pop adc sub nopl sbb jae and inc dec dec jp cmp and inc adc adc jnp jle pop sub xor cmp addr16 adc xor cmp lock fcompl ljmp xchg in (bad) mov in call jecxz jecxz jecxz (bad) in aam loope loop in repz fincstp in test out mov in lods lcall lcall test mov les cltd xchg (bad) cld not test xlat xchg mov mov mov fbld and push imul inc inc push pop push jg pop push aaa dec dec push pop jge dec dec add jno jno jne pusha arpl addr16 jb jbe popa jg jbe jg push jge adc das or push push and aaa cmp je and or (bad) or push inc sub sub cs adc push and and cs aaa and leave test in lods clc jmp aad rol mov mov loope std cmc jecxz clc sti in mov fxch nop push in out jecxz div dec out icebp jmp stos mov xchg movsb jmp mov faddp leave repnz mov test mov mov lea stc leave mov mov mov lods test inc push jge jbe es dec pop jne pop inc pop pop push inc xor inc imul dec imul push push cmp cmp pop push and adc inc dec sub das sbb push push adc pop invd sub add cmp cmp inc jbe cmp dec dec dec jge cmp jae jno and xor or and push add cmp xor cmp cmp or rcl int3 rol (bad) in lret (bad) std fadd (bad) aam (bad) fstp fsub fcmovnbe lret in mov mov mov int lret mov fcmovu shlb rcr enter fwait (bad) (bad) rcl (bad) mov mov fnop shr lods mov xchg hlt mov cli mov mov test enter mov mov mov mov lods ficomp push dec dec inc popa inc dec inc sub dec pop jge inc pop pop push ss dec push push pop jg dec add inc add pop pop pop or pop push adc pop pop dec dec sbb jl jl adc or and das aaa das inc inc inc je aaa cmp dec dec dec jl and je or sbb jle adc push adc imul imul cmp push sub (bad) cmc aam into rol (bad) (bad) (bad) (bad) mov rol jmp fcom leave (bad) mov ror xchg ret into (bad) out out push xchg rol rclb leave out std out ljmp xchg mov mov hlt xchg xchg cwtl xchg mov xchg mov stos lods mov stos mov mov scas test inc dec inc and inc push ja pop dec pop inc dec inc inc inc xor inc imul push push jae jne jl pop outsb push gs addr16 jb push push outsb push adc pop cmp adc pop add push or add push je adc daa sub sbb sbb or xor xor sub aas or cmp sub es add push invd push add adc mulb cwtl lahf popf lods in rcr rol sar rol rcl fidivr shr iret in jmp hlt mov in clc decl shl notb cmc sti leave out test scas mov mov mov mov mov subl mov lods movsb mov test scas test int mov movsb mov mov mov mov and and es dec pop jne inc dec pop pop xor xor addr16 jae js dec outsl data16 pusha pop pop inc or imul jo jp jnp inc pop jbe jne sbb arpl or add adc pop or outsb sub add sbb or or inc add adc and and das bound ss cmp das xor (bad) (bad) cld out rcr test in lods (bad) fcmovne (bad) sar fstp fcmove mov in int out loopne repz loop fisttpl (bad) int3 cmpsb mov out dec clc ljmp mov aad fucomp mov test mov hlt mov into into cld test popf icebp lock orb xchg sahf xchg fcomps lods mov pop imul sub dec jge inc push push pop xor pop pop pop je pop pop cmp dec insl pusha pusha jle insl push and dec inc dec push inc inc inc dec inc outsb inc inc inc push inc push jnp pop push pop dec jbe dec dec jl,pt outsl pushw insb imul jge jge pop jo jno bound insl pop push jl pop sub arpl das sub sub push outsb sub cs inc dec jne aas js and dec dec jg or ja or js dec add push adc add push add mov xchg xchg popf test cli scas out jmp xchg ror aad rcl cli in lock fxch fimul fndisi(8087 stc repnz div xchg rol cltd (bad) xlat ret xlat loope mov shr scas mov icebp mov xorb mov mov mov test mov mov (bad) test fstl jl adc daa push sub outsl push pop push xor dec popa pop fs dec push push pop cmp push inc add push inc push cmp or push dec dec and adc inc pop dec jl jg je jp and or and adc sbb cmp push sbb adc aas adc xor daa and inc and and and and dec adc adc addr16 pop sbb call out icebp loope hlt sahf fwait lcall out jmp stc clc jmp (bad) fmul rcr mov mov mov mov mov ror lds mov rcl aam lods mov mov (bad) in test mov stos (bad) ror mov mov addl mov or in aad mov lahf mov scas inc push dec push dec dec outsl outsl jle arpl sbb outsb jl add jns or aaa add push add cmp cmp and and sub push pop inc cs push bound cmp imul pop dec jno and jne xor dec dec inc jl xor jae or add push add push sbb push or gs sbb add gs pop ljmp cmpsl loope cmc cltd xchg cltd scas jmp xorl div ret add mov in jmp repz xchg rcl cwtl fcompp les xchg xchg mov out mov mov ror imulb vpaddd repnz xchg mov stos scas mov (bad) rorl out mov in and push je dec inc imul das jp xor imul insb inc imul jb jp or push inc inc pop dec and insl inc dec jns insl jbe punpckldq pop pop push or xor adc sbb add xor adc sbb add sbb jg or sbb adc sbb or push insb pop push sbb pop in std xchg popf xchg cmpsb icebp loop stos hlt std sti icebp popf mov jmp repnz out sar imul mov into iret (bad) cli ljmp (bad) shr (bad) icebp sar icebp loopne mov xchg mov popf nop pushf xchg xchg nop xchg mov xchg cltd (bad) xchg xchg nop scas scas test mov mov mov mov stos iret xchg mov mov mov lods mov dec and and jg pop inc inc pop sub inc dec push jb inc inc inc ss push push pop inc cmp imul jbe imul push jge bound pusha adc inc pop sbb dec push pusha add push or pop sbb add or sbb cmp aaa jle or push or ja jge or adc push or or pop or sbb insb insb addr16 in sti xchg xchg sahf test clc hlt popf sahf sahf scas loopne in (bad) xchg call mov shr cmc out in (bad) call lret repz call cli adcl (bad) lcall mov mov cli mov std stos test cmc lds sti dec xchg xchg xchg roll out fstps popf data16 adc and sbb sbb pop push pop xor imul jne push imul jl cmp pop jns arpl push jl insb push gs arpl pop jb outsl add pop arpl or sub pop or pop inc jno push add xor pop cmp pop adc sub sub and cmp and dec add pop sbb and pop add add adc add loopne in negb rcr rol shl fnstenv sarl lret ret mov mov fcmovu (bad) lret lret mov scas scas scas loopne scas mov fcmovnu fucomi mov mov repz nop xchg sahf mov fwait xchg rorb mov test mov mov mov mov scas mov and inc inc inc sub inc dec push pop xor pop push jbe pop dec pop cmp dec pop jno insb add push jae jns or inc punpckldq dec jge push je ja jle imul pop add cmp adc packssdw pop adc adc add sbb pop sbb adc sub sub sbb cmp dec aas cmp adc and xor sub push add pop syscall loop cmc repz cli xchg xchg fwait test popf sahf test test jecxz (bad) or fdivl rcl mov fcmovne mov rcl lds test movsl xchg lea addl clc test mov mov lock mov loop xchg xchg xchg mov in fstps in adc pusha imul jbe sbb push sub dec pop outsl ja pop push dec inc dec pop push cmp push pop push js ja push jae inc push inc push and and push dec inc pop inc sub sub dec push pop es bound add adc or or or adc sbb pop jnp sbb and xor sub sub sbb and das cmp sbb cmp adc adc les rol in faddp ret leave (bad) (bad) rcr cld ffree inc mov xor decb loop cld nop loop (bad) (bad) lock ljmp int xchg xchg (bad) nop in (bad) test xchg addb (bad) mov nop mov out mov mov xchg mov mov cwtl cmpsb mov dec dec es inc pop inc pop pop dec inc push dec xor inc ss pop jns push dec pop je js push popa bound insl jnp pop insl popa jnp push imul jnp jl jp js insl add add addr16 push or add or pop inc inc inc inc inc dec push dec sbb push dec and jnp jl jne gs sub jg jnp arpl bound gs outsl imul ret nop xchg xchg xchg test cltd fwait aam xchg test mov mov out out mov out mov repz movsl stos mov scas lahf rcr aad aad test lds fimull xchg rcr into fwait lcall repz repz stc loopne test in mov cli mov in jmp inc inc inc inc adc adc adc sbb dec push push add add or add pop push or sub xor push push cmp sub es and sub and sub das pop dec add push dec add pop push pop pop dec adc adc dec inc inc push sbb and jae imul sub jg jl bound aaa arpl xor ds push insb nop mov xchg rcrl xchg mov addb mov mov mov mov mov mov cmpsb mov lock cmpsl lods cld cld stc lods test cmpsl adc fcmovu addl fstp lds xchg rcrl repz (bad) lods (bad) scas lods scas (bad) stos stos std mov mov clc loop loope idivl sbb inc adc inc adc sub sbb push add pop sbb push or wbinvd or xor xor xor cmp imul imul and aaa and das sub push add pop push pop inc pop or or inc push inc adc jbe sbb sbb jo jae imul das sub sub imul imul cmp (bad) (bad) shr fcmovnu lret (bad) scas cld vcmppd mov aam fcmovne sar lret call xchg out cli loop in cli out inc idiv hlt out imul lock cmc out fsubr jmp mov mov xchg sbbb lahf fwait xchg lea xchg mov (bad) test int iret mov loop mov fldenv fbld inc and jle sbb jbe add inc aaa jne dec cmp inc add addr16 dec or cmp adc jg and push sbb inc sbb adc gs imul push outsl jo adc jne ja jns jnp jge jg inc je or inc and dec sbb push and push adc pop pop pop push mov aad in (bad) hlt mov mov mov mov mov in mov faddl lock lea xchg movsb xchg rcll iret popf (bad) lahf mov les jmp in (bad) out ret icebp mov (bad) cmc xchg (bad) int mov push rorl enter int3 enter rcl fisubl fldcw fist push and push daa pop sub pop sub pop xor push aaa dec cmp cmp bound and add or push jne pusha adc adc jae jb insl pop push popa add add imul or jae jne ja jns jnp jge jg inc or inc jl and dec cmp push jnp push dec jge sub pop sub mov aad int fsubrs fnsave mov jmp cmc mov xlat add xchg mov mov (bad) in (bad) loop std xchg out stc xchg (bad) cltd out fwait rcrb jecxz in out jmp mov repz xor stc mov cltd std nop pushl mov mov int iret rol (bad) shll fldcw fildll inc and adc push sub sub add pop xor add or cmp xor cmp ds adc jo jns jns jns jl punpcklwd push add jno jae jne jl jns jnp jge jg inc inc push sub dec ds sub push xor push push pop xor pop aaa pop lds int shrl scas cmpsb (bad) mov mov mov mov mov mov jmp (bad) xchg repz xchg mov mov (bad) out (bad) loopne loop xchg lcall lcall xchg in aas lods call mov mov mov mulb mov ret (bad) (bad) mov scas lret mov (bad) mov cwtl (bad) test cwtl ficompl adc adc insb sub cs push xor outsl cmp ds add push sub dec or and and sbb je pop das push popa xor push aaa pop cmp jb dec aas dec add insb add xor cmp inc cmove bound push adc dec sbb sub arpl imul and jae jne ja jns jnp jge jg inc sub jl or dec jae jne and push and push push imul pop pop loope xlat mov into test fisubrl (bad) mov mov mov repz mov mov out in aad ficom stc fwait aad enter mov cmpsl in out jmp sahf out xchg icebp mov test mov xchg rolb xchg enter int3 stc into mov aam (bad) xchg mov mov cmpsl fsubrp and dec and es sub sub bound data16 xor ss cmp jns jb dec add push or pop or push inc adc sub sbb pusha push bound fs data16 push insb aas outsb and jb je jbe js jp jl jle inc outsb inc jb jne es sbb dec js gs xor push add rcll into pushf fcomps shl and call fldz fcomip lcall clc (bad) cli sti int (bad) xchg (bad) repz mov lret movsl into cmpsl shl shl aam (bad) sbb cltd fimul push data16 push sub pop ja jp jl jb pop cmp push cmp ds add add dec push dec or xor push dec adc inc adc push inc sbb es push pop loopne and packuswb imul cmp jno jae jne ja jns jnp jge jg inc or inc and dec or dec adc push adc push outsb pop and pop xor mov repz popf test fldcw fbstp lret mov testb mov mov xchg ficoml lcall out (bad) loope sarb cwtl jmp in shr icebp xor xchg stc mov mov shrl dec nop lret or iret in shr rcl in xlat ljmp fbld push and sub pop sub pop xor pop aaa push cmp cmp cmp aas add add inc or cmp js inc adc jp jne pop sbb cs push popa or adc imul and jno jae jne ja dec sbb jge jg inc xor inc or dec sub dec pop push and push sbb pop add pop push pop mulb fwait cmpsl xchg test cli scas (bad) mov mov mov mov mov (bad) mov mov cmc xchg mov mov lea xchg cmc xchg xlat xchg lods cltd rcrb loope jecxz in out jmp test (bad) icebp (bad) repz mov sti popf std lods (bad) clc sar (bad) hlt mov stos leave xchg mov shll xchg fstps fistp and outsb and inc sub jp push xor xor xor pop cmp pop aas outsb add add inc or and push adc jb sub pop sbb ja cs xor gs addr16 insl push outsl pop jno jae jne ja jns jnp jge jg inc adc inc sub dec adc dec or push add push gs pop add pop xor fisubl nop cmpsl int out stos imulb (bad) mov mov mov mov (bad) mov enter jecxz mov pop xchg mov xchg rcrl lret loope jecxz in out jmp (bad) xor repz les sti lahf std scas decl lds lret fwait int iret mov xchg shll fldcw fild pop and and inc sub sbb pop xor js popa aaa add ja jbe or js pop add add data16 data16 push cs add inc xor ss cmp insb cmp ds add add add push arpl aas or jns jl pop adc pop push outsl sbb sbb push and push add push pop outsb sub jb je jbe js jp jl jle inc adc je sub dec sbb dec or jb insb push push xor pop adc xor sub into cmpsb imulb int3 scas xlat mov mov mov mov mov mov mov mov mov nop notb fistpl cld sahf in loopne loop in out call mov repnz hlt enter pushf cli enter iret rcrb (bad) enter int3 xchg into lods rclb (bad) mov fsubl and sbb sub sub jg,pn xor dec add insb cmp or or add push push xor jno dec or push jle pop adc es pop sbb pop sbb push js adc data16 sub insb pop outsb pop jo jb je jbe js jp jl jle inc jl inc jne inc sub dec add push xor push and add pop or mov xchg cmpsb iret test stos clc lods fsubrs mov mov int (bad) (bad) mov roll int mov mov cmpsb xchg aad iret xchg stc cwtl enter les fsubp fsub out nop ljmp pushf repnz clc leave cli cltd cld cmpsl (bad) cltd rorb repnz int3 stc into stos (bad) mov (bad) aam (bad) ljmp fisub and outsl sub sub sub cs xor pusha xor ss push cmp dec outsb add dec add push jo jno js jp inc adc jb jae jg dec sbb js sub bound add push and cmp jb inc or jp jl jle inc adc inc adc dec sbb dec dec add push push push aas push addps pop pop and cmp movsl es lahf stos cwtl lods les fdivl aam hlt mov mov mov mov rorl (bad) fstl mov fwait sti popf hlt lahf and xchg out jmp fucomip lcall imull std xchg pushl lds lret mov xchg iret mov mov xchg aad xlat mov cmc fldt pop and and outsb sub sub sbb pop xor pusha cmp jbe push add ss or pop (bad) adc adc adc jbe sub and or imul jae jne ja jns jnp jge jg inc inc ret lds dec adc aas push or push insb push es sub pop sub mov lock stos out lods loope stc mov mov mov mov mov lret xor mov mov mov mov mov nop mov xchg into cwtl std lcall mov mov mov (bad) mov mov xchg mov mov clc mov dec (bad) mov lods (bad) (bad) enter int3 sti into fwait rolb (bad) loopne pushf fidivrl and insl and es sub sbb cs xor push xor ss or or imul inc add push or or jge aas adc jle jbe and sbb push dec pusha adc pop push daa outsb and jb je jbe js jp jl jle inc and inc or dec pop dec cmovl dec sub push pusha push xor pop fs pop insl sub mov out cmpsb (bad) lds fbstp mov movb xchg mov notl stc xchg movsl cwtl stos lcall cltd loop in out call sub lock idivb cld sar cltd test xchg (bad) std (bad) test int3 or shl shlb fdivrs fidiv and es sub arpl xor pop ss cmp cmp ds add push add push dec or pop or push data16 cmp and sub sbb pop xor add and imul outsl inc jno jae jne ja jns jnp jge jg inc sbb inc add dec cmp dec ja es and push pop push or sub pop adc shlb in cmpsl popf test hlt scas loop xlat mov mov mov mov lret sub xchg mov mov (bad) jmp xchg fcoms in fwait pushf lods out lahf mov xchg mov xchg out jmp stos out (bad) icebp mov negl std scas ljmp (bad) scas leave (bad) lret icebp int xchg mov aad xlat loopne jmp cmpsb fldl and insl daa dec sub insl sub jl pop xor (bad) gs push add dec pop pop or cmp push arpl and dec sbb or gs addr16 insl push outsl adc jae jne ja jns jnp jge jg inc and inc xor dec jl cmp dec and push adc pop pop add pop or mov nop test std scas leave mov mov mov mov mov (bad) mov aad faddl aad out (bad) xchg movsb xchg ficoml ficomp lods loope jecxz in out jmp xlat out lahf icebp iret repz les sar mov cmpsb shrl mov mov mov sar roll (bad) fbld pop and and dec sub jg add xor dec aaa jns insb cmp addr16 jo push xor or cmp jne sub jnp sub popa daa arpl gs xor imul push outsl and jae jne ja jns jnp jge jg inc push inc add dec dec jp dec or cmp push sbb pop sbb pop aas pop (bad) mov (bad) cmpsl fwait test ljmp mov mov mov mov lds mov pop xchg mov xchg rcrb lahf mov nop jecxz in out jmp out fiadd cmc mov sti mov xchg jmp lds lret test lods iret stos rcrl xlat lods fnstcw fbld adc push and jnp inc sub inc xor data16 pop cmp aas push add dec add pusha or xor sub adc dec sbb push pop pop popa push arpl gs addr16 imul outsl cmp jne ja jns jnp jge jg inc jg inc vunpckhps dec adc cmp push add outsb pop or pop sbb mov mov in lods std scas cwtl mov mov mov mov mov cld mov call mov mov nop lock notb lcall cmpsb loop in out call movsl out movsb lock mov mov cld mov sahf rclb (bad) dec dec stc lret xchg mov test cwtl shr aad xlat mov out fisttpl and and dec daa jns js jbe sbb imul sbb pop cmp insl cmp push aaa add pop or inc sqrtps jae pop adc xor push addr16 adc arpl imul outsl push jno jae jne ja jns jnp jge jg inc push inc push inc adc dec dec jp dec ss sbb push addr16 push pop adc pop fisubl (bad) cmpsl (bad) test fldcw stc mov mov mov into mov mov incb enter movsl xchg call xchg mov ret fwait stos popf rcrb mov (bad) out jmp out fisub xchg negl std cmpsl push rcrl cmpsb leave in mov (bad) mov fwait aad xlat mov fdisi(8087 fucom fbld adc adc jae imul xor getsec or dec cmp pop aas dec add bound cmp imul and push pop pusha sbb insl sbb and gs addr16 imul aaa outsl adc jae jne ja jns jnp jge jg inc jg inc (bad) dec jp js je add push ss xor pop adc or and movsb in cmpsb int lret stos fsubrl mov mov mov mov idivl testb stc mov xchg loope in std cwtl negl clc loopne loop in out call sub lock mov mov cli cwtl cld iret (bad) mov mov mov pushf lret xchg fwait (bad) mov in loopne test test fidiv jl pop sub sub sub cs xor inc xor or cmp or ds add xor or push dec adc daa adc push jp pop sbb push push insb pusha push bound adc push sbb jo jb je jbe js jp jl jle inc es or xor dec adc dec jp es ds adc push pop fs pop pop outsl push mov xchg cmpsb xchg test stos fldcw mov mov mov mov xlat mov lret xchg mov xchg (bad) xchg mov lcall stos loop in out call lcall hlt test xchg clc mov stos cld sar rol add mov lods int3 sahf into cli rolb (bad) scas fmuls fidiv and es sub inc sub adc or xor ss cmp cmp ds add xor jb arpl jg insb or push inc adc dec adc push inc sbb dec sbb push push pusha and fs or push insb add jb je jbe js jp jl jle inc push inc sub pop dec adc dec dec jg push add push xor cmp or pop outsl pop imul cmpsb out test stos (bad) mov mov mov mov cmpb test xchg mov mov nop rcll cwtl into lcall xchg mov call shr (bad) lock ret mov clc lret cld test ret mov cmc enter int3 mov adc sarb fdivs loop sbb and jle pop sub bound pop xor bound outsb cmp push cmp jo,pt outsb add push or xor js sub cs daa inc sbb js push push outsb pusha adc push fs or insb outsb pop jo jb je jbe js jp jl jle inc es jle js inc leave js dec jl and push or push xor pop or pop sbb mov fisub lret lods aam les (bad) mov mov stc mov mov fild leave (bad) loope mov xchg icebp xchg mov ret popf clc lahf nop loope jecxz in out jmp fsubr (bad) icebp mov xchg cmc (bad) mull std lods incl lds lret xchg cld iret mov std roll (bad) fist and inc daa jg sbb je dec das inc xor xor pop aaa jns jb imul fs jno imul outsb sub dec sub cs xor xor jnp pop cmp dec cmp outsb add jp push or or push inc adc ja pop push jbe and imul js cmp add push movd cmp je jbe js jp jl jle inc push jae xor dec cmp jo jb push arpl cmp and pop cmp adc movsb ret test stos ljmp mov mov mov mov fidivrl xorl mov nop out lds lcall xchg (bad) in out call mov repnz hlt cmc (bad) xchg clc mov (bad) test les lret hlt into (bad) (bad) mov xchg aam (bad) mov fsubrl and and es sbb sub inc jl,pn inc xor ja add dec cmp imul dec add push xor push or pop push push adc je sub sub sbb dec sbb push sub bound and push adc jb je jbe js jp jl jle inc outsb inc cmp jp je dec jge dec jg cmp push adc pop or pop xor mov out nop test stos lds mov mov mov mov mov (bad) into test mov mov mov nop fsts out cwtl scas lcall stos loop in out call shr out (bad) mov mov clc mov pushf cld test enter test test xchg enter int3 popf into test aam (bad) lcall fsubp and adc jo push insl sub xor pop xor ss pop cmp add push add push pop or or dec push xor sub adc jne jg inc pop sub arpl sub sub jno jae jne ja jns jnp jge jg inc sub inc jno jo adc dec gs adc push arpl push push adc pop pop pop ret mov xchg cmpsl ljmp (bad) stc mov mov mov jmp sbb xlat xchg mov mov (bad) in (bad) hlt xchg movsl xchg fsts lcall mov movsb in out call fsubr fcomi mov (bad) hlt mov cli int cmpsl (bad) movsl shlb or lret test lods sarb mov fcoml and es sub jge popa cs xor xor pop ss push dec cmp je,pt pop add inc push push or or aas push cmp arpl and push push sbb sub sub pop pusha cmp xor push pop outsb pop jo jb je jbe js jp jl jle inc adc inc add jp je dec adc xor push and pop sub sub shlb lods fwait scas lret mov mov mov mov mov fdivrs test rolb mov nop lret xchg loopne loope loope ret lcall xchg loop in xlat (bad) call cmpsb out mov hlt xchg notb enter pop mov enter int3 or (bad) mov out aam (bad) xlat pop pop stos fucomi fstpl outsl and adc jns js jge add inc xor push cmp adc add pop pop insl or js pop cmovo inc adc sbb sbb sbb add or imul outsl xor jae jne ja jns jnp jge jg inc or inc or dec popa dec or dec cmp push addr16 sub sub fildl int fldenv stos int3 lods call mov mov mov mov cli mov iret test xchg mov mov nop jmp xchg out cwtl fcomps lret loop in out call stos out fcomip fwait repnz clc lret cli xchg cld int3 (bad) mov les lret stos into fwait sarb (bad) mov fsubrl and and es sub insb sub cs xor push xor ss cmp jb or jnp jno jns outsb push insl or bound push inc adc jl gs push sbb sbb push push outsb pusha add fs data16 push insb pop outsb adc je div sbb jnp jge jg inc pop inc es sub dec add dec ds sbb push aas push sub adc pop push pop or mov mulb fildll cld mov mov mov mov in mov enter in enter fimul (bad) xchg fstl in popf lret lahf lret loope jecxz in out jmp stos out lahf icebp mov idiv enter std (bad) ljmp movsb (bad) sti leave mov iret call aad xlat mov out (bad) imul adc sub push xor dec aaa jno push cmp inc aas add popa add push or dec movaps pop adc push pop and sub pop or arpl imul push jno jae jne ja jns jnp jge jg inc daa inc or inc sbb dec jno dec jle push gs and push adc pop xor pop shll shlb lods int3 scas hlt mov mov mov mov mov cmpl test mov (bad) cli pop xchg rcll scas cltd icebp ficompl mov mov mov cltd jmp shr int bnd xor xchg std mov (bad) shrl or lret stos int iret call mov xlat lods fnstcw fistp movsb daa data16 pop sub add pusha xor ss cmp cmp push adc imul add push push jg ds push inc adc push pop push jp pop sbb dec push pop pusha push bound adc push outsb add jb je jbe js jp jl jle inc push inc xor das dec add dec pop dec add push add push push outsl pop push sbb outsl mov xchg cmpsb (bad) test stos cli lods fwait scas (bad) mov mov mov mov mov lret cmp testl mov nop loope cli xchg ficom rcrb loop in out call mov repnz hlt (bad) testb (bad) test les lret (bad) into cld rcrb test ljmp and inc and es test sub sbb aaa pop cmp (bad) pop aas push add add bound bound or cmp jg pop adc adc push pop add adc gs add sub insl or jno jae jne ja jns jnp jge jg inc and inc js xor dec sub push adc push es adc push pop minps lret mov lret cmpsl out cltd stos fldcw (bad) mov mov mov mov lock out test xchg mov mov (bad) call xchg (bad) xchg out xchg ret fwait mov icebp lahf mov stos jecxz in out jmp (bad) mov cmc fwait negl enter fwait ret scas lds lret pushf int iret xchg rcll xlat mov jmp lods (bad) fisttp push and ja adc pop sub inc das dec xor pop xor pop cmp imul push add inc or cmp inc adc dec adc push jg sub sbb arpl and imul outsl sub jae jne ja jns jnp jge jg inc inc ret inc sub cmp dec bound push ds xor fs cmp pop jbe xor movsb enter pushf stos les mov mov mov mov out mov jmp loopne int3 mov mov mov mov nop mov xchg out cwtl lcall in loopne loop in out call fsubrp mov hlt (bad) negb cld lods (bad) mov test stos enter int3 mov rclb fadds ficomp and es push dec sub imul jp insl cmp je jnp push add dec add push jg jp cmp adc je and and inc sbb push jge sub add push cmp jo jb je jbe js jp jl jle inc add inc inc movl dec gs jg add push xor cmp pop or mov int3 cmpsl lds shrl mov mov mov clc mov loopne loop mov (bad) fimul in aad std cltd rcrl movsl loope jecxz in out jmp sub xor test leave std xchg add icebp (bad) icebp leave mov dec test mov aad xlat mov fstpl and daa dec sub sbb push xor pop aaa adc jg dec cmp insb add sub inc or inc or arpl pop adc push sbb cs and gs adc imul sub jno jae jne ja jns jnp jge jg inc xor inc daa inc dec js dec daa dec and xor xor push or jae or pop outsb pop fldenv loop std test ljmp (bad) mov mov mov hlt mov lock xchg (bad) fisttpll loopne lock aam scas fwait int out lahf (bad) loope jecxz in out jmp mov repz cltd (bad) (bad) stc aad lcall ret jmp stos (bad) mov int iret xchg shl sarl (bad) fndisi(8087 fstp out or jb jge push daa pop sub pop sub push xor push aaa dec cmp imul add dec pop xor jge xor and pop adc sub dec sbb push arpl gs imul and jno jae jne ja jns jnp jge jg inc inc jb inc daa inc jo adc dec sbb push adc push or sub pop or in mov int clc test ljmp mov jecxz repnz aam loop out xor out xchg lea xchg in xchg out xchg fstpl out lahf mov in (bad) test in sub icebp mov (bad) into stc stos sti mov cwtl ljmp lds lret cmpsl int iret out movsl shr aad xlat fsubr mov fildll imul and push pusha jae ret outsl outsl jbe ja je or jns push jbe jle push dec push dec dec xor js sub loopne pop pop and mov dec test scas and data16 mov mov mov stos mov (bad) addl pop push les xchg xchg nop adcl fistpl xchg out in stc (bad) lcall repnz clc loop in cs sti cli icebp aam cld dec jmp fisubr (bad) into mov int3 mov movsl rcr fnop repz (bad) ss and lods inc subb xor daa cmp xor pop cmp add add add or pop pop push popf inc adc fstps sbb xor in sub fs fisubr pusha inc push insl outsb gs fidivl jb cmp js imul inc dec push inc xchg leave cmovs dec dec rcrl push push inc pop push flds push pop pop jb pop pop push ja mov in cmpsl test (bad) adc mov mov mov mov (bad) addl mov nop xchg xchg mov mov fwait fwait xchg mov aad loope lret pop in in shl jmp out jmp hlt repz clc stc sti call loope ret ret (bad) ret int lds (bad) ror push push fcmovu fst enter and test es sub xchg sub cmp sbb xor cmp cmp adc sbb and or add push cmp adc jns sbb sbb adc push outsl jbe incl inc outsl js jp fs addr16 mov inc inc inc inc inc add dec inc cmc shlb pop inc pop pop inc pop rorb xorb pop pop pop mov decb adc xchg enter mov test sub xchg mov mov jb hlt jp xchg xchg out xchg xchg xchg out cltd pushf xchg mov loop call pushf add ljmp mov data16 repz adcb rol xlat ret enter leave int (bad) fcmovnbe aad fmulp dec insl mov (bad) aad aad and sbb sub sub xor ds cmp adc cmp or xor jle pop or xor repnz outsb daa sub add sub fnstenv xor xor cmp xor cmp cmp push add or add cld adc push push xor data16 pop pusha adc gs jle sbb addr16 popa jb js inc dec je xchg jns jg insb jp iret or inc insl push inc dec inc dec xor push push push pop inc push sub pop push jne pop mov movsl lods scas mov lods scas movsl int mov mov int mov mov addb sbbl xchg xchg fwait test lcall jecxz or in loope in call pushf div repnz fdiv hlt div lock insl (bad) sti cld dec jmp out iret lret ret jns cmp and xlat fsub adc (bad) fsubl and and inc pop sub cs and cmp ss lea add or push jbe movups push sbb push sbb bound jae adc imul push outsl jp jp je jg out into adc add and dec dec dec aas dec dec dec pop dec cmp push push push pop jo pop pop push dec insl adc mov and xchg into pop mov mov mov test mov cld xchg xchg xchg cltd mov mov cltd pushf xchg xchg mov lea in in lcall add loop and clc stc clc stc cli mov std ror (bad) mov (bad) mov mov rcl (bad) rcr fnop ror dec lods fldenv and or daa es sub cs ds xor stos mov add add jns push pop or jno or or adc push adc adc adc sbb or arpl mov outsl jns mov insl pop loope jae ja lahf js jle vmread push inc xor inc dec pusha dec dec dec inc inc pop fldenv push push push pop jge push pop push push dec lret pop mov movsl lods scas mov fldcw mov mov mov mov mov addl test push mov jno popf lcall (bad) xchg loope jmp out in ret (bad) push div cld icebp jmp sub inc ret ljmp and lret enter rcl fadd shll repnz fst (bad) ss and das sub and xor cmp xor xor and or add push sahf jp or or adc cmp push sbb jae pop pop push lcall imul je ja je outsl sbb jbe jo inc dec push jo inc cmp inc pop dec cwtl rcrb push push jl push push push pop and shll aam stos stos mov mov mov mov xchg mov test repnz mov std mov xchg xchg popf xchg orb lahf sahf xchg enter out int in jecxz icebp jp addl or div jmp stc out sti ror cld jae cmp call mov iret rcl rcll into xchg sahf (bad) fcmovu fildll cmp and and sub daa xor cmp pop fwait aaa aaa ds aas cmp inc add or push pop push or pop and add sbb sbb pop outsb sbb push push pusha gs insl fs imul jnp push jbe inc dec pop sub inc inc inc iret pop inc dec aas dec dec dec pop dec cmp push push push push jno pop pop push dec insb xchg mov leave or scas scas movsl into mov mov rclb mov mov mov loopne nop xchg xchg mov mov lock loopne in loopne out xchg jecxz in out in icebp clc icebp (bad) sbb idiv mov stc cld not out ret jmp mov lret lret fadds ret fadd fsubr out and lods and dec push and sub add das cs ds pop cltd cmp cmp cmp ds push sub or or adc push cmp xor push sbb bound gs dec inc fs insl fs bound jg ja jns jnp jge dec inc inc lds aam dec pop dec xor ret dec pop adc pop pop das pop pop pop stos mov cmpsb lods subb lods mov stos fcompl mov mov mov mov orb or mov jmp xchg xchg nop mov lcall jecxz push in loop sub ljmp cmc jl js div stc icebp rolb std hlt xlat sti rol rcll dec or enter into lds cmp fcomp icebp enter in and xor test daa sub push (bad) sub sub cmp or xor and stos cmp pop add sbb invd or and add sbb adc sbb push adc outsb jge leave imul insl jo insl pop push push jo js push jne jge imul inc inc int3 es dec dec ret push push inc pop push push rorl jb pop pop push xor mov mov lods mov mov mov js mov mov (bad) addl mov loopne nop xchg xchg sbb xchg xchg cltd mov lahf in repz push out jmp in pusha mov (bad) hlt js div stc (bad) xor cld not inc rol aam pop (bad) leave loope lret out rcl fadd (bad) in xlat fcom mov fstp fsubs and cmp sub sbb xor cmp xor mov aas add sub pop or add wbinvd mov adc adc or or popa push jecxz gs push insb insl fs jo jne jge sti sub jp jno mov inc dec push enter dec popa repz dec inc lcallw pop inc ficompl pop ficomp mov cmpsb cmpsl test lods scas movsl cmpsl addr16 cmc mov mov mov mov mov lea mov sbbl xchg cwtl xchg cmc xor loope loop in mul stc out ret in in mov repnz mul cli ffreep stc cli icebp in hlt (bad) (bad) rol lods push cmp lret enter xlat stc jmp xchg fcomp fsubs aas sub mov es sub das cmp add mov dec enter push nop aas aas push sub add xor or orl adc pop add cmp xchg pop sbb sbb nop popa bound push push insb insl outsb outsl jo sub jne jge add jnp jns adc push inc insb jle inc inc (bad) or dec dec pop dec inc push jp push push pop fcomps pop pop pop daa lods pop pop movsb mov test lods lods out hlt cwtl jbe mov or pop mov lods mov addl mov popa mov xchg mov adc in loope out je lcall bound lock repz in fbstp clc cli icebp aam (bad) dec (bad) dec mov (bad) jno lret sbb iret fcmovb fld rol pop popf fcomp fcomi gs aad xor xor (bad) aad push shrb xor and cmp sub mov sub pop xlat (bad) add pop jp or bndldx or add movsb add add jns sbb outsl in and adc addr16 je addr16 je cmp mov inc inc sub inc inc dec jae dec dec dec dec xor push push push daa push push push push daa push pop pop push jbe mov sti movsb faddl stos scas movsl mov mov mov inc mov mov mov imul mov xchg xchg cltd mov mov xchg enter out int in jecxz out std loopne test sbb div dec xchg pop cli cld negl rol (bad) mov mov xlat mov (bad) (bad) fnop int sbb int and sub outsb sub cs fsubrl xor aaa aaa xor inc sarl add push adc je or add or sbb push pusha sbb push sbb push xor jae jne jmp adc push lahf jb jg dec push js jnp push xchg jg inc xor inc dec pop and dec dec dec inc inc push push pop inc adc push push pop pop and mov je jecxz cmpsb movsl rcrl stos test mov mov mov mov icebp test mov (bad) xchg xchg cwtl mov mov cwtl fwait xchg mov jecxz out or jmp out out cli push lret cmc div adcl clc hlt out stc push dec test (bad) (bad) mov fcmovb in into rcr shrb fildll iret xlat push daa and cs cmp pop and cmp xor aas cmp xor cmp mov add add push pop or gs or adc adc sbb xchg pop push pop bound nop arpl push outsb sbb insl fs add jg jo jns push push jae inc dec push inc inc dec outsl inc dec dec inc pop dec pop inc fist push push push cs xor pop pop pop mov mov ret mov mov leave pop mov mov rsm mov lods lea adc jbe lea xchg addl mov pushf in loope out popa ja test ljmp repz in lahf test cli stc lock (bad) (bad) cmc call (bad) mov scas fcom rcr std (bad) fcom repnz fst int3 das aaa xor ss sub sub cmp ds inc xor xor cmp das sbb jno push add or and or sbb jge adc pop sbb pop or jno in or fs sbb adc jo pop jns jne jne nop jp js jae inc dec push inc inc dec outsl pop dec dec inc and dec dec push ja inc inc addl dec dec dec insl rcrl shlb int scas test cmpsb test mov xlat pop mov mov xchg mov nop xchg loope xchg xchg pushf mov mov pushf lahf ljmp lock in jecxz out in sti (bad) hlt cmc cld sub call sti cld loop (bad) into ret into (bad) out fmul lret int iret cli rcll xlat fcomp fcmovu (bad) mov and and and pop cmp adc xor movsl aaa cmp das xor aas inc aam add lea and push or sahf pop adc insl loop sbb je sbb adc jae imul pop js mov dec mov imul test inc inc inc movl mov push push push sub (bad) adc pop and rcll cmpsb xlat subb scas mov movsl fistl aaa out mov nop test (bad) out mov and test cwtl mov out out int out jecxz (bad) out in in mul imulb xchg inc clc mov cli cld std clc call (bad) (bad) rcr sbb rcl jbe ffreep int3 int mov add and aaa and and movsl pusha sub cmp out xor cmp push xor cmp sub cmpsb sub add add lods aaa and and aas cmp sub xchg and and xor push cmp xor adc push pop sbb cmp or sbb sbb add add mov sbb arpl sbb or or dec imul imul jo js jb jb insb or jl push jle inc inc push leave push inc inc dec pop inc pop inc pop cmp in and push push push cli dec push dec dec dec jbe mov out cmpsb cmpsl test lods movsb xorl pop mov mov mov push scas test mov mov jge xchg xchg xchg jecxz lcall in lret xchg in in dec clc out cld cmp ljmp or or sti adcl dec mov ret (bad) mov frstor rcl (bad) mov (bad) fdiv (bad) shr or daa add sub es xor xor xor push xor cmp ds adc jns add add adc sub pop adc sbb adc adc sbb push xor sub push outsb insb adc jno ja ret insb push jle pop nop jle inc inc int inc inc inc cmp dec dec dec ret dec inc jnp sub (bad) sbb lods mov (bad) cmpsb cmpsl mov popl mov mov imul fiaddl xchg mulb nop xchg sbb cltd cltd mov fwait pushf cltd xchg add out loope nop call out out in ret (bad) fdivrp (bad) out das div cmc int3 daa stc aad rcl mov lret lret iret iret jecxz sti fcmovnbe (bad) fst fptan lret (bad) aam and and and push and mov sub cs and mov cmp cmp cmp add sub or pop sbbb adc push pop sbb xchg scas sbb ss pusha popa fs xor pop das sbb pop dec jne jge scas notl jge push dec inc inc dec xor inc push inc inc dec fs dec pop push sub xlat adc pop es pop mov sub cmpsl test (bad) adc cmpsb fs aaa mov mov test (bad) orl mov mov movsl xchg xchg cwtl setp loopne call movsl call sti clc jae out outsl repz out imul jecxz sti out arpl fcmovu pop ret fnop pop iret aam push lret rcr push xlat into fcmovnb dec shrb fdiv loope fildll sbb and cmp sub and ss cmp xor adc pop imul add push sbb add mov adc xor pop pop push or sbb std outsl outsl jp or addr16 xchg jge je push inc xor push inc inc inc pop fs ds sti dec and dec push push pop sub and push mov test xlat (bad) lods lods scas mov mov aas les mov mov xchg mov xchg loopne xchg xchg popf out cwtl fwait xchg mov popf loopne hlt shr out lea out icebp mov repz clc out (bad) repnz dec lret aam (bad) int leave lret (bad) inc shlb (bad) xlat leave stos push pop fsubrl and iret and and pop add sbb xor sub das cmp adc adc add add sbb sbb pop pop cmp xor sbb adc jo dec insb fs imul insb insl fs ja jae push push push jbe jnp jbe push push inc inc dec lcall dec dec dec dec dec push sbb push inc pop push push pop inc push pop std pop pop mov lea cmpsl mov stos lods ret push mov mov mov mov addb lahf rcrl nop xchg xchg xchg xchg push imul dec popa pusha pop add imul in scas out in out out lock repnz or (bad) jmp ret cmp cltd into fidiv lret xchg xor mov sti fcmovnbe (bad) fldl adc call and sub das or daa add xor add sbb ss xor cmp sub ds cs pop or or or nopl adc adc push sbb sbb push pop jno popa jbe dec aam push imull pop (bad) jb jg jg jecxz movsl imul inc dec xor repnz outsl dec dec dec dec inc gs dec push pop mov jg push inc imul pop pop push stos mov lods jns test mov mov test mov mov mov xchg jbe (bad) loopne xchg xchg xchg xchg in cltd cltd ljmp shl out out into imul jmp idiv div out inc inc testb ljmp int3 rol gs fnop fiaddl rcl rol rol rol iret inc lret fcomip cmpsl (bad) sub es ds or xor sbb ss xor mov cmp dec adc syscall push das jp or push shrl push push dec add sbb sbb sbb push inc lahf sahf popf adc lcall xchg xchg xchg mov pusha jne jb jae jp jp jl jle mov xor dec dec pop mov pop dec inc scas push or push inc test sub pop mov scas js mov mov mov enter lcall xchg mov stos mov mov push nop xchg xchg mov cwtl cwtl lcall pop loop in (bad) jecxz xchg ljmp fincstp repz repz call aam (bad) dec scas loop (bad) iret rorl leave lret (bad) fcom fisttpll push aam fst fcmove ljmp sub or xor and sub cmp stos cmp sub cmp in sbb xor add pcmpeqd pop js and or add adc cmp adc and xor sbb push push push aaa jo bound gs push outsb outsl jo jae,pt jp ja addr16 pop jge jne pop jb inc popl dec aad dec pop cmpsb dec push pop pop and pop pop pop pop push dec pop andb cmpsb test aam lods lods movsb cmpsl fild mov mov (bad) or or test mov subb mov (bad) fwait icebp in lea in hlt loop stc loopne in jecxz fdivp repz jecxz out clc sti cli jmp rol lret mov int3 int3 ffree lock rcl pop xchg xlat fcomp leave fmul (bad) lods push or push or aas cmp ds and xor xor and cmp sub imul or add pop pop sbb or sysexit fistpl pusha addr16 pop dec addr16 jp jp jl add jb bound popa imul push dec imul pop fs pop dec pop cltd inc push inc pop inc addl push dec dec insl mov mov mov mov scas scas cwtl mov mov mov mov das addl in lea xchg push lea mov in ljmp std ljmp fsubl div roll rol rol aam rcrb fcmovb fcmovb fnop incb rcr sarb lret shrl or and dec adc cmp xor and sub sub mov add or das pop or add sbb sbb adc cmp sbb sbb bound stc addr16 bound jo jb jne je and jno push pop jge dec push inc dec pop dec dec dec dec dec dec inc push sub push pop sub pop pop push je pop pop stos mov movsl test stos stos lods stos scas scas mov mov lahf jl mov xchg sbbb lea inc inc pusha cs xchg xchg xchg add xchg cwtl cmc leave loop jmp xchg lea sbbl mov ficoml lods test out in mov movsl icebp stc loopne (bad) loope jecxz cmc xchg mov mov push push inc dec or ja dec inc inc dec dec push fs pop push pop or pop addps or push xor and outsb popa and jle popa ja cmp je jne jnp add push add insl outsl outsl jo jb je es cmp sub ja adc inc inc xchg inc inc dec pop add dec add push xor push aaa push sub pop pop pop pop pop andb aaa test stos stos lods test dec mov or mov mov test mov nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall popa loop in stc pop out pop loop int3 push out mov pushf test mov xchg fbld mov movsl lods jmp cmpsl mov hlt mov xlat (bad) (bad) stc (bad) and and and arpl sub sub cmp xor xor cmp sbb add add or or push movups xor adc jbe sbb sbb or ds pusha popa pusha arpl addr16 imul je (bad) ja jns jnp jge jg inc inc add inc inc push dec dec pop dec dec dec dec pop push push inc push push push push push pop dec pop pop pop pop pop pop mov add stos stos lods lods into scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std fdivrp ror ret (bad) (bad) enter int3 (bad) rcrb (bad) xlat fcomp fcmovu fdiv stos mov and push daa sub or sub adc xor xor xor ss cmp cmp cmp ds add add sub push or jb adc adc sbb sbb bound gs imul or adc jns ja jns jnp jge jg inc add inc inc inc dec dec dec dec dec dec dec dec push adc push push push push pop pop pop pop pop pop pop pop mov jno cmpsl test stos stos lods in scas mov mov mov lcall mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz jmp mov stc cli call (bad) cld mov out fadd mov lret out int lods rcl aam cld leave fisubl hlt std and pop and push das sub sub xor cmp sub add add add decl or push lgdtl popa push adc sbb sbb sbb adc arpl pushaw pop je imul sti jo jb sbb jbe jle jle jl jp outsb inc inc inc dec insl dec inc dec dec pop dec pop dec bound push push pop cmp push push pop dec pop jno dec pop jbe mov movsl mov lods mov mov mov and add sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound mov pop (bad) sbb push adc adc add push add bound arpl data16 push imul (bad) jne imul popa popa arpl push xor inc inc inc pop leave lahf inc inc inc dec dec push pop dec pop pop pop push ja push push push pop pop pop pop test mov cmpsl test movsl cmpsb mov movsb mov stos mov mov mov (bad) cltd subb pusha pushf adcl sbb lea lock cli push jmp lock lret mul jns (bad) (bad) out jg ret loope rol (bad) int3 int3 leave lret (bad) ror into into fstp xlat rcl fcomp (bad) (bad) aad (bad) fisubr sub add cs xor cmp aaa cmp sbb cmp push pop pop add add pop sbb das sbb pop xchg ret sbb pushf enter imul pusha popa arpl addr16 ja jne imul jge jp cld in pop inc inc push ret inc inc dec pop lret dec inc pop rorl inc aam pop pop push push inc dec fnstsw faddp mov add mov (bad) mov mov mov aaa (bad) mov enter orb xchg sbbl cltd fwait xchg adcl out imul bnd (bad) stc out jl in inc dec lret (bad) dec inc iret jmp fmull (bad) rcl lds pop push rcr (bad) pop push xor xor mov mov mov sub sub and and sub sbb sbb or arpl cltd mov lahf mov gs push pusha addr16 fs imul jge cmp imul imul push ret notb iret push leave lock lret inc inc pop inc (bad) repnz inc imul dec (bad) dec (bad) mov pop mov sbb push mov or xor aaa jbe cmp cmpsb mov adcl mov xchg adcl xchg cwtl mov push in out cli push loop repz xor js icebp fdivr push rolb roll rol enter add iret rcr xlat aam (bad) push or (bad) aad pop jg cs sub sub xchg and das xor cs aaa cmp ds and cmpsl adc adc or adc (bad) clts adc or cwtl ret pop push and add jle js popa push arpl jno pusha repnz jo ja clc xchg jg jl arpl inc dec inc inc pop enter inc dec push inc and dec pop dec dec sub push pop pop inc movsl mov jp and mov scas mov mov daa mov cmp aas push xchg add lea mov cltd or pushf mov adcl xchg mov loope bound mulb cmc aad clc imul (bad) repz es jmp (bad) out jge in std fst inc adc sti fcmovnu dec push fyl2x rcr dec add out iret (bad) push add in enter int3 pop hlt xor xor cmp scas fidiv and and call adc rcrl xor sbb xchg movl or or loop jbe push bound jge movsl pusha dec data16 mov sti test inc arpl xchg push jns push (bad) pushf pop ja int3 cltd pop jb roll orl dec fmull lods mov add mov sub mov aaa dec mov cmp lods add jno pop jb or or adcl addl mov pusha sbb mulb cmc imul sbb jo out je imul jns out in jl (bad) rolb roll rcl dec xor (bad) ficom rol push add push sub pop sub xor repnz test sub lods cli cmp shrl sub aas sbb cs add test add push push mov push add pop add fwait sbb nopl aas pusha je loop fs pusha jl ljmp jb divl imul ja push shlb pop pop enter pop pop rorb rorl imul pop dec fimul mov (bad) mov mov mov mov cmpsl mov xchg mov mov add xchg mov or sbb mov out in push gs enter out ljmp cld repz lock icebp std jmp clc ret iret roll int (bad) int3 mov out rcl fmul fcmovbe not (bad) rcl (bad) fnop shrl sub repnz stos stc and sub daa mov and cmp and sbb adc xchg add aaa push add sbb adc sub push adc dec outsl jo push out jp pop jns int3 jl inc arpl je negb decl pusha inc push sarl addr16 pop enter dec dec inc popa push push push inc push pop pop pop dec insb pop pop pop mov mov scas stos lods mov mov in mov mov cmp mov test xchg mov lcall cltd fwait xchg test out in out out loope ljmp icebp repz cld clc div lock out jg enter ror ror dec daa (bad) mov (bad) rcl (bad) push add (bad) fcmove pop xchg (bad) xor sub movsl enter and cmp xor xor cmp mov adc or adc add das pop adc push pop sbb sbb jb sti insb gs insb popa push xor outsw bound jae ja addr16 jl jp jl jl inc inc inc inc inc inc inc inc dec dec dec dec dec dec push dec inc and push es and cs xor das pop cmp mov cli lods mov test mov jmp cwtl mov stos mov xchg pop fistl sahf movntq xchg mov xchg mov jecxz mov pushf out in fs leave jmp out not icebp cli sti jmp sti sar cmc clc sti in jg fcmovb into (bad) inc inc leave (bad) (bad) fyl2x fcomip (bad) int push push fmul fcomp (bad) pop and (bad) cmp add das sub adc xor sub mov cmp pop test adc adc or or pop sbb adc outsb jge pop jns jnp jne ja jno jae jae pusha dec ja fs jnp push aaa inc inc push cmova pop dec dec pop lret dec pop fs push push pop pop inc aad inc push pop pop pop push inc test mov and mov mov mov mov mov mov (bad) test mov xchg add mov mov popf test in in in mov out out int3 jecxz loope out in jmp repnz (bad) cld out inc add inc add rol (bad) shr ret push jb ffree (bad) loopne pop jle aam (bad) xor sbb cmpsl xchg or ds xor cs add adc push add sbb push add xchg (bad) sbb sbb pop sbb bound addr16 insl imul je push insb insl jae jns push jle ret out inc inc inc dec push adc push dec pop pop int pop jb inc xlat testl pop jle mov test lods mov (bad) mov mov mov mov mov xchg mov cli xchg loope lahf lahf cltd sahf xchg xchg xchg xchg in loopne out sti xchg in in out std cmp hlt cld in out ljmp pop rol (bad) mov call aad enter out int3 xlat rcr fcmovnu lret mov fcmovnb (bad) and and add stos sub mov and pushf es (bad) push push and pop test mov sbb xchg mov adc adc add or and jle ja xchg pusha je jae push insl jb jb jbe jno jo jb fs jl inc pop dec inc inc inc inc pop je jbe dec dec dec inc rcr push pop push push dec push push dec fcmovnb dec arpl mov movsl scas stos mov cmpsb cmpsl mov mov cmpsb xor stos cmp mov xchg lea xchg mov xchg cwtl cltd mov adc loopne cld in out lock repnz cmc jmp cli in repz loope jecxz std std out ret int3 leave (bad) mov (bad) fimull iret ror (bad) aam aam enter fstp (bad) xlat and and xor cmpsb scas das sub sub scas mov xor cmp cmp cmp or add add or or or sbb add adc sbb adc adc sbb js jae in data16 push addr16 insl jno jl bound jne jg inc pop dec inc inc inc inc push push dec dec pop xor adc push push aad push pop dec fistpl pop dec fbld movsl mov cld test mov mov mov mov mov xchg mov (bad) (bad) xchg mov xchg xchg xchg xchg xchg cltd cltd sahf movsb pushf pushf sahf popf out out cmc gs out clc push call cmc mov hlt cmc repnz stc cli icebp cld clc cld out fadd lret rol lret rol ror (bad) call ror rol lret (bad) leave fcom fstp rcr (bad) xor sub xor sub sub xor xor mov cmp cmp and cmp and adc roll or xchg fild xor pop push lcall popf lods arpl arpl pushaw jnp mov imul ja divb jp (bad) xchg outsb js dec pop push (bad) test (bad) jno lret jle int3 jae jo inc shll fldt push mov cwtl mov mov mov mov test push mov mov (bad) cwtl mov mov xchg xchg xchg lahf mov or icebp jecxz cli in loopne call loopne div ljmp or (bad) out jl mov faddp fadd iret enter ror mov rcl into ror (bad) (bad) rol (bad) (bad) xlat sub aas and and and sub xor xor cmp cmp aaa xor pop sbb sbb test xchg cmp cmpsb lahf and aaa xor lods xchg sub mov sub and mov sub add push pop adc adc add add add add lods sbb sbb popf cmpsb sbb jo fsubs data16 stos outsb data16 jl mov js data16 mov sti mov je push rcll lret pop inc pop iret pop inc inc push push push dec push pop push push pop pop inc pop push push jle mov add scas mov stos nop mov mov cmp mov cmp mov lahf lcall lea lahf xchg cltd mov ja test out cld jmp dec repz in insl push in hlt (bad) div out ljmp pop out roll fadd out rcr push in int3 (bad) enter rol push jbe ror (bad) int int test sub and xor xor scas mov xor sub sbb cs cmpsl pop add sub (bad) scas pop or sbb push xchg mov adc pop add inc fs (bad) jg jno jnp jg lret push jno gs cli fdivs jns addr16 dec push dec push gs push lret push push dec push pop dec inc (bad) (bad) dec pop jbe pop dec inc dec fdivrp push jg mov mov mov mov xor mov mov ds (bad) nop mov lcall popf adc adcl negb mov mov xchg in out hlt out imul lock jae jb fcomip fcomi enter into std int hlt (bad) test lock repz (bad) int iret xchg rcll xlat lahf fsts fildll outsb and push sub jl arpl xor pusha aaa outsl cmp gs pusha add bound insl or or js jg jp jne je jae outsb pop adc arpl adc imul or jae jb push fs jns jns push push ret mov dec push push leave mov pop pop shll pop inc gs inc push pop dec dec ficom lods test sub mov mov mov aaa insb stos xchg add xchg add xchg xchg or cltd or addb fwait test dec (bad) mov icebp addr16 loopne jmp (bad) jmp add out and jmp or out jle rolb roll fcmovnb fimull xlat fidivr out (bad) push and fcomp enter fcmovnu add xor and cmp sub sub cs xor and mov adc adc add adc mov adc push add sbb sbb pop sbb adc outsl popa imul js js andl popa hlt mov jb jb insb (bad) lods push ret scas dec push jnp dec inc inc inc dec dec dec pop rolb inc (bad) test push inc push scas scas mov and jge mov mov mov scas aas xorl lea cltd or inc pushf (bad) lcall mov nop lea lock mull cli aam (bad) in jmp add out and jmp or out jle into (bad) int int iret aad fmuls fcomip (bad) int aad (bad) (bad) push ljmp int3 pop cmc das daa add movsl push or sub xor mov adc cmp sub jmp adc rcll pop mov add adc sbb cmp or popa jae inc push popa fs imul xorb mov jnp cld test dec dec push (bad) push dec pop leave sahf inc inc pop jae shll pop push push push push push dec frstor mov mov xchg mov mov mov mov mov mov mov lcall lcall inc mov sbb (bad) in mulb out in stc insl sbb std jo out jne mul js hlt jmp inc push int3 int xlat inc adc rcl enter (bad) repnz fcmovne rcr fcmovnbe aad std (bad) xor aaa cmpsb repz aas scas sti ds cmp cmp cmp add pop (bad) add cmp or or or adc adc adc add pushf leave or in push bound mov jp jle jbe jns popa jae js push push ret push (bad) pushf inc inc pop pop int3 mov pop pop pop pop dec push push push inc push inc push push test stos mov jno lcall stos (bad) mov mov movsl cmp test add xchg add mov xchg addl lcall dec xchg xchg xchg pushf jecxz fucomip stc jmp jmp out icebp loopne in div icebp cld out out out imul out jg rcl pop rcl inc ss fisttpl (bad) (bad) fcmovb push add ljmp iret pop imul stos (bad) lods into and daa mov sub sub (bad) push add adc inc or adc sbb sbb push sbb or sub inc data16 ljmp jge pusha lock cli aaa jns jae pop inc push push rclb push inc pop dec inc pop pop into sbb inc inc rcrb push pop pop pop jns dec pop dec pop pop mov and cmpsb stos test mov mov xor mov mov cmpsl mov popf lahf lahf mov (bad) lcall (bad) xchg mov cmpsl xchg std lock ljmp lcall jae cmc out and jmp or out jle into iret int3 int xlat inc adc dec push fyl2x ret int (bad) fmul rcr rcl (bad) aam (bad) fisubr and and sub cs sub cmp xor sub sub adc sub cs (bad) or or mov add add sbb sbb or or or and push data16 addr16 js out xorl (bad) mov sti test insb call push ret push (bad) (bad) pop lret pop inc push push inc pop rolb pop inc gs addr16 dec (bad) push mov mov mov mov mov lods mov mov mov test push adcb xchg xchg xchg inc test xchg xchg loop in icebp fs fnop loope mul lock in lock jmp in jmp add (bad) loop (bad) inc xchg ror rcl rcl int int rcr lret rol aam (bad) ret sub cmp and adc es cmp aaa xor cmp cmp xor cmp adc (bad) cmc add xchg pop add push mov push add or adc adc sbb sbb loop jbe outsb outsl popa outsb insl bound addr16 imul addr16 js jp ret and pop inc push lret dec pop jo dec push push inc rolb aad push pop pop pop inc inc pop inc movsl mov stos stos lods mov movsl mov mov mov mov xor mov mov mov fwait mov mov xchg xchg inc mov jp mov bound ljmp cli outsl mov jno idiv clc loop jp stc repnz (bad) iret rolb int ret iret (bad) out into ret rcr rcl ffreep fadd (bad) aad xlat daa and sub sub sub and daa xor xor and and and or pop adc fstpl sbb lds sbb xchg ret adc adc loop fs mov arpl ja jno data16 mov jns jae jno inc inc pop push pop pop inc dec dec inc inc inc inc dec outsl push inc push pop pop push push pop dec dec fldt mov mov and mov mov mov mov mov mov mov orl popl lods mov xchg xchg addl mov jecxz in loop call out out cli hlt clc repnz out clc clc lock cli cli std (bad) enter into (bad) aam enter (bad) fstp dec and push ds rcr fxch pop fnop fstp xlat xor mov xlat and sub lods sub xor mov xor xor xor xor cmp or or or push or (bad) in adc push sbb adc sbb fwait leave pop sbb pusha jae or jnp call jg andb dec outsb push fs jns pop push jg push les pop int dec push push push push pop pop dec push inc pop pop inc pop inc push pop jg stos mov add cmpsl lods mov mov mov mov scas cmp xchg add lahf mov orb xchg mov sahf lahf xchg popf mov mov or fs hlt jecxz jmp add jo (bad) aad (bad) call jl in loopne rolb aad inc cmp fisttpl (bad) jne fdiv xlat ffree (bad) pop sub lret int3 pop subl cmp and mov xor mov add sbb push test lar or mov pop xor push sbb sbb setle fs in bound bound imul jge jl jo addr16 jne jns inc pop pop pop inc inc inc dec dec push dec dec dec inc push push pop push jae pop pop pop pop jns pop push pop pop pop stos stos stos stos mov mov test mov mov mov mov popl fwait or pushf or fwait test jecxz sahf mov out lcall call stc sti imul in loopne sar cmc hlt (bad) jmp mov inc lret (bad) (bad) int dec mov (bad) fxch ret fmulp rol rcl rcl fsubrs sub sub cmp cmpsb xor aaa cmp aas cmp adc xor sub ss or pop or pop or or pop push sbb push xor sbb push adc add push arpl jp je fs imul pusha icebp repnz data16 lock jl je dec inc inc inc dec push dec dec dec dec dec dec dec push inc dec push pop pop push pop pop pop inc gs push push push push push pop movsl mov xchg stos lods scas scas lods test test mov mov cmpsb cmpsb mov mov mov mov push xchg mov cltd xchg mov jb lcall mulb jmp cmc clc imul repnz jecxz daa cld out ljmpw clc div sar lret int iret ror leave int int3 (bad) rcl fcmove fcmovu faddp lret sar (bad) into mov sub daa sub sub sub xor xor ss cmp cmp cmp xor pop or test or sbb pop push sbb push push adc adc adc push or sbb sbb or add sub or pop add add or jp jl jle inc inc inc fstpl inc push dec dec dec push push push push push push push push pop pop pop pop pop pop pop iret mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov cmc fmul cld ret (bad) roll mul loop in out mov mov mov xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or and and sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) leave leave fcmove int3 int iret rclb rcl aad xlat fcomp fcmovu (bad) (bad) and and and push daa sub cs xor xor xor ss cmp cmp cmp jbe add pop and add or or push movups ficom and dec sbb dec pop and gs addr16 imul jno,pt jae jne ja jns jg cmpl inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push insl push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods ljmp mov mov mov sarb ljmp mov xchg xchg rclb fwait out popf repnz and mov xchg ljmp cmc fdivp hlt cmc div stos stc mov mov xchg ljmp lds lret test mov rcl aad aad (bad) fucomi fucomp fist and and sbb sub add xor xor jb pop aaa push cmp js pop aas jae popa add outsl pop js jle gs adc adc ss sbb sub adc pop pop es or add imul outsl sbb jae jne ja jns jnp jge jg inc jb push jbe dec dec ss popa dec dec dec sbb push and push sub pop cmp mov ret cmpsl test stc stos hlt lods sti scas jmp mov mov mov cmc mov fldl les ret xchg rcll aam rcrl movsb jecxz in out jmp movsl out mov mov mov stc aam cltd std xchg movsl rol (bad) (bad) lret lret or iret mov mov mov fldcw fisttp inc and daa sub or sub stos das sbb xor pop cmp push aas popa add inc add outsl or outsl (bad) adc adc inc pop inc sbb inc sbb xor cmp imul cmp jne ja jns jnp jge jg inc adc inc or dec cmovnp dec or push push push adc push push pop adc mov pop sbb mov mov leave lods scas scas mov xchg call mov loope lock xchg mov mov (bad) out call cmpsb xchg mov stos fwait mov scas lahf into loope jecxz in out jmp popf out xor repz cmc xchg notl test movsl (bad) mov mov scas (bad) cmpsl leave movsb lret int3 int iret (bad) shl sar aad xlat neg ljmp and and sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli jmp std repnz (bad) jb (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc fcmovnu in (bad) out loope shl in out fsubr jmp in in fsubrp icebp (bad) repz hlt test std int (bad) xor add add push pop dec pop inc dec or adc adc adc xor xor sub push and and and pop sub sub and das adc xor cmp pop outsb dec dec sub and inc sbb dec dec in dec dec jae add jg push dec pop pop pop jg or and bound dec data16 imul add jno jae jne ja jns jnp jge jg addl mov xchg xchg xchg xchg xchg xchg lret cltd lcall mov cmpsb cmpsl ljmp scas scas mov mov xchg mov mov mov mov ret mov (bad) lret leave lret int iret rcl rcl aad (bad) xlat lret (bad) fcmovnu fstp (bad) loope jecxz in out jmp out out repz repnz cmc div stc stc cli sti cld std clc decl add add add or cs lar das adc add push sbb push sbb xor push and daa cmp cmpsl sub xor scas xor xor xor cmp cmp add inc jg inc inc jnp jno inc dec add add push mov pop gs adc pop pop add sbb insb imul es jbe sahf jo jbe ja jge jnp jge jnp addl pop mov xchg fwait xchg (bad) xchg cwtl cltd xchg fwait repz int3 popf cmpsb mov mov scas stos lods push stos mov mov mov mov mov pushf (bad) in into lds lret mov call aad rcl xlat dec (bad) (bad) (bad) in in jecxz loop loopne jmp call hlt cli cmc sar stos sti cld sti mov add push add pop or xor or adc or ret sbb daa sbb sbb and sub push and adc inc cmp dec inc sti dec pusha inc pop dec lahf inc sbb dec mov pop push inc pop jle dec pop dec push or popa daa insl pop gs loopew push imul popa xchg jg jae jp jp jns je jo jg mov mov mov sahf xchg nop orl orb scas movsb mov scas test test jne aas mov fdivrs fidivr movsb rol cld fsubrs fiadd mov fcompp cmpsb lret fcomp push (bad) out in idivb cld out out lock repnz stc sti sti std std jg adc call pop or or push or bswap adc adc adc sbb or adc and and and cmp sbb fsubrs xor xor hlt cmp cmp dec inc lds xchg dec mov dec dec push pop push inc push mov pop push pop jp loope jb jnp nop insl imul pusha jno jg jne ja jns jnp jl jg lea xchg (bad) aad adcl mov movsl mov cmpsb cmpsl mov mov mov inc mov mov mov (bad) lds (bad) pop (bad) sahf dec cmp dec rcl dec rcl aad aam (bad) fildl fimul (bad) loope loopne in out in aaa jmp in stc jmp icebp hlt repz pushl (bad) stc out icebp jne clc lcall or xchg or and xchg clts adc adc leave adc rcll and enter cs daa stos das sub and xor xor cmp push xor inc inc push push js loope dec dec jnp push push push push imul pop pop adc pop pop pop xor gs push imul mov popa jno jge jbe ja imul addb xchg lea xchg mov xchg xchg cmp or movsl movsl cmpsb cmpsl test sub and xchg mov mov mov mul (bad) (bad) dec leave jecxz jo lret iret mov aad xlat inc (bad) fcmovnu fisttpll std loopne loop jb dec in jmp out out lock fs not idiv stc jp cld std (bad) call add or or mov test adc sbb popf sbb and daa sub stos sub xor xor ss mov cmp inc inc inc inc movl dec loop push push push push aad hlt push arpl pop mov pop pop pusha popa jecxz stos pusha xor popa imul jbe jne ja push jp jl (bad) jg xchg orl mov out cwtl xchg aam xchg xchg cwtl cltd sbb stos mov cmpsb cmpsl sub movsb scas movsb popf mov mov aaa mov mov sahf xchg rol ret inc lds sarl into iret rcl inc sarl roll (bad) rcr fcmovu (bad) pop fbstp loope aas in out (bad) in in outsl out dec testb clc stc jp insl fnstsw clc (bad) add pop or pushf or adc ds push pop mov ret sbb and movsb and jae cmp xor ds cmp cmp shll dec cs pop dec dec dec dec dec into dec (bad) jno pop and dec push pop pop pop pop fcompl jg push addr16 imul pop gs jae jae jne ja jns sbb addl adcl xchg xchg xchg adc pop mull add test sahf lahf mov lds lods lods scas scas xor adc mov mov sti (bad) enter dec int scas push fisubrl xchg aad xlat fcomp pop fisttpl dec aam jecxz jecxz in out jmp and repz cmc jbe imul add add nop pop add (bad) and adc adc sbb mov and add xor add push xchg adc push inc and adc adc push scas sbb dec sbb sub mov sub scas pop sub xor cmp ds inc jle cmp inc fwait jnp dec dec dec int3 dec daa pop es add or pop int fsts pusha bound push gs shrb outsb cmp inc jae jne in jae les jle mov (bad) addl fmull xchg add lcall aaa stos pushf mov mov stos lods lods scas sub in mov lea cmpsb or loopne fwait (bad) vshufps enter into ja rcl rcl sbb xlat fcomp (bad) (bad) (bad) loopne loope in out in jmp ljmp cmc div clc sub sti cld cld incb push add add add or or or adc pop pop sbb sbb and and and sub cs cmp xor xor aas aaa cmp cmp cmp dec inc inc inc inc pop inc dec dec dec dec or push push push fstl push push pop adc pop pop pop pop inc imul addr16 insl outsb imul jae jo cld jno jp jl ja addb test mov xchg xchg pop lahf xchg cwtl pushf lcall je mov mov jecxz scas mov mov mov aad mov lret (bad) int3 (bad) enter (bad) int (bad) (bad) ja rcl (bad) pusha rcr fcmovbe fsub (bad) loopne loop out in in xor jmp in out cmp icebp repnz hlt cs idiv clc cli das idiv (bad) std add or add push roll or or add adc adc pop adc adc sbb push pop sub and and sub jae sub cmp xor ss cmp xor push dec inc inc inc dec cmp dec dec dec dec jge push push push push outsl pop push pop pop pop inc pop pop pop pop pusha leave imul imul jo jb jg jbe js jl jl jle mov lea mov cltd xchg xchg xchg xchg imul xchg lahf mov movsl cmpsb movsb test test add mov mov adc adc (bad) mov ret (bad) (bad) (bad) jb leave lret sti rcr (bad) rol aam (bad) stc fld (bad) fsubl loopne loop in out call fsubr push icebp mov idivl std scas (bad) scas add add push cld or push or or adc or jne dec sbb sbb push push xor and and sub dec movsl cs xor outsl xor ss dec cmp mov inc cli inc xor dec adc dec les push xchg push ficoml lcall pop mulb data16 fs sub push insb aam (bad) jo jb jo jbe js jle jge jle test (bad) cltd mov js test xchg mov popf mov fwait mov shlb (bad) test scas xchg lods je (bad) mov mov mov mov mov mov (bad) sahf lds (bad) into movsl lret mov rorl xlat es fcompl sub repnz jecxz in loopne jmp jg data16 push jl leave decb clc push add add pop or shrd aad cmp and mov and es das jne push sbb (bad) xor mov js xor insb aas xchg inc adc dec jl sbb inc jbe ds pop push inc push and and inc pop sub inc bound addr16 cmp (bad) jno jo jne jle jp jp je jl sbbb xchg rorb xchg mov test mov and mov lods xchg scas es mov aad popa mov xchg ret pop ret mov enter iret inc iret inc fcoml fimull ficompl out lods out out jmp shr xchg repz repz (bad) divb stc inc sti test xor adc add mov rorb mov lahf or mov lods pop and and mov and and sub mov xchg das je dec xor xor xor (bad) xor lahf inc dec inc decb dec pop dec hlt dec cmp push ljmp pop sub je pop jo push data16 push push outsb jb,pn jae je je jns jnp jle jg sbb cmp xor ss stos xchg loop sub out fwait loopne and sbb push test adc cwtl mov mov mov mov mov xchg mov in les (bad) out add int loope adc sbb sti (bad) insb fistl fdivp fsubrl xor iret loop out loop call ret out je es hlt data16 cmp xlat cli jo xor add add push jl mov or pop pop notb jmp and and js mov int3 xor jl jne hlt cmp aas cltd inc loope addb xchg in dec lods dec mov push push push xchg push icebp pop jns cwtl pop sti pop pop mov arpl scas outsl leave jo ja jne jbe jge jnp jl jns andl pushf test mov mov nop cltd xchg xchg xchg xchg xchg xchg cwtl xchg lcall stos mov fsubrl movsb scas mov mov mov mov insb mov pop (bad) sbb and scas leave mov shl (bad) fst aam fcomp fcmovu fcmovnu xor or loope mov or out mov mov lock hlt into div clc clc cli (bad) cld clc (bad) std add add pushw ja jae hlt or clts adc and sbb es and sbb lds sub cmp xor aaa je imul cmp aas jp (bad) dec inc inc inc inc add inc dec dec dec dec push push popa pop push push push push sbb lcall pusha (bad) push sub pusha push insl outsl jo,pt jns je ja js jno jl jg and (bad) test orl xchg xchg xchg int3 cwtl dec xchg lcall test cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret vshufps lret int int rcl rcl aad xlat fcomp fcmovu fdivr (bad) loopne loop in out call in out out lock hlt cmc div clc stc cli sti cld std (bad) incl add or push pop or or or push movups adc adc push sbb sbb push pop and and and mov sub cs xor cmp cmp cmp ds inc inc inc inc inc inc inc dec dec dec dec inc dec inc dec inc push pop push push push push push dec pop xor inc pop aaa pop inc pusha or fs addr16 pop sbb add and or adc push lock jmp in jmp in (bad) mov imul jmp repnz ret lret rcr fmul ret cmp rcr rcl int call lods out xchg scas leave mov mov mov mov mov loopne xchg fcmovb mov lahf test mov xlat mov (bad) jb jno jno bound dec arpl jnp jo push inc cmp ja jg push jae push dec push push inc dec pop add dec pop inc pop inc push push inc xor push inc dec push push pop dec adc cs xor and das cmp sub adc cmp cmp sub xor push adc or sbb push outsb and sbb adc jne sbb push or and stc repnz in out repz in in loope std hlt cld out shr (bad) in cltd leave cli repnz fdiv fmul (bad) mov iret int3 (bad) into ret int3 ffreep xlat mov xlat (bad) fcmovne jmp fxch (bad) mov mov mov lods mov mov mov fcoms mov (bad) xchg lods xchg test cltd sahf pushf repz pushf xchg sahf xchg mov ja dec imul jp jb ja pusha push js jne push pop push inc push dec push and insl dec pop push inc push inc pop inc aaa pop pop dec fs dec dec and and es sub and or and and aas das add cmp adc push push push sbb pop add jno sbb sbb adc jns or sbb jg out out cld lret lret out (bad) in in cld nop fdivr in fcomi out in cltd rcr cmc out out lock ror movsl loop fcmovnu (bad) lods clc loop loope (bad) rol les fcom xchg test mov mov test lahf mov cmpsb mov fdivrs lods mov test (bad) call in mov popf fwait mov mov add imul jnp arpl push jge jno gs push jae jo push imul and push push dec pop inc dec gs inc push pop push xor jnp pop dec push pop jb push pop inc adc sub and and xor sub cmp cmp ss aas add pop push sub pop sub or or sbb push pop adc adc or or adc adc cld div ret in repz call icebp loope in xchg cld clc out cli pushf fincstp in rol (bad) xlat movsl hlt ret (bad) (bad) scas loop rol fadd fcmovbe ret xchg out rcl (bad) (bad) mov scas mov lret sahf test cmpsb mov mov xlat fwait stos mov stos (bad) stos xchg fcmovnu ljmp test sahf mov xchg mov imul push inc dec or jle imul popa jbe adc dec jp jbe jle inc inc inc push and pop pop pop push imul pop inc xor pop pop dec push pop push push dec pop dec sub sub sbb cmp sub add cmp sub aas push cmp adc sbb inc cmp pop add sbb adc adc push push jge adc call jecxz fdiv cli out mov jmp (bad) call stc cli sar hlt push clc sahf int iret (bad) lret repnz int3 loop ret lret xlat (bad) jmp (bad) aam xlat lds scas mov mov mov stos mov mov mov test ficomp mov (bad) lahf mov adcl popf stc popf sahf mov jb dec pusha jg pop push popa jg push arpl jns arpl jne inc push jo push push inc dec dec push pop daa jp inc pop inc inc dec push inc pop inc pop pop pop push push dec cmp dec dec pop sub xor sub sub and aaa and cmp xor pop sbb xor clts and add sbb ds add jb or push xor adc loop in out loop repz (bad) clc clc call div loopne in cwtl fdivrp out (bad) repnz (bad) ret cmpsb hlt fmul leave ret call (bad) mov rol sti int3 enter lret scas mov mov lods movsb mov mov mov mov mov addl mov xchg popf pushf addb (bad) cld mov imul push or imul jbe cmp push jnp jne jns dec push push inc pop outsb inc pop sub gs push push fs outsl jnp dec imul adc jns outsb sbb outsl pop jae jbe dec dec dec inc dec push jno pop inc dec dec inc dec das jbe inc inc inc addr16 pop cmp push pop cmp daa add sub cmp cmp cmp cmp cmp adc ss xor add push arpl sbb push or or adc or xor sbb jnp adc or adc repnz mov out (bad) (bad) out call xchg (bad) (bad) clc out cltd fdivp std icebp icebp clc repnz rcl enter int fxch lret enter repz mov (bad) fiaddl stos test mov test rclb scas movsb lods mov mov xchg xchg orl xchg mov addl je inc ja ja gs outsl js inc imul jg adc sbb js jle inc jb dec inc inc push pop sub inc pop inc dec push pop bound push push inc dec cmp push pop push pop inc (bad) adc xor sub cmp sub add cmp xor sub cmp popa adc or add and add sbb add jns or push sbb enter imul out loopne in std cld loopne hlt loope (bad) lock ljmp rol iret (bad) movsl cmc rcr fnop into (bad) sti rcr (bad) rcl (bad) hlt xlat fstp call test mov scas stos mov mov movsb mov std xchg scas mov movsl (bad) xchg xchg popf movsb xchg xchg lea mov (bad) sahf xchg xchg cli mov inc add push pusha data16 or jle jns ja jne jae push js jb js push inc push dec dec dec push daa jg inc dec inc pop pop push push pop inc pop inc dec aaa imul pop push adc aaa xor cmp and cmp add and or xor ds das add add pop or pop sbb xor or push adc jle repz jmp in jecxz std int clc (bad) out sti (bad) clc hlt cld lcall rol mov out rol loop ret lret xlat (bad) jmp (bad) mov fmul jmp rcr fidivl mov mov mov mov mov mov jecxz mov mov xchg pushf andl stos mov push push popa imul or push jl push outsb jle sbb push inc dec inc and inc push inc sub pop dec push dec xor pop pop pop ja push pop cmp and and sub cmp cmp cmp cmp xor cmp sub xor punpckldq add aaa sbb or pop push cmp sbb jae adc daa or or adc sbb leave lds out out mov stc in (bad) fdivr std clc loope (bad) in out repz cli sti leave ror (bad) movsb test clc fcmovnb ffree ror aad rcl rcl (bad) fnstsw lret movsb ret mov (bad) enter mov mov mov lods stos scas (bad) mov mov xchg lea ljmp xchg mov mov jo pusha push jle insb pusha jg adc je js sbb jne ja push inc jno push push inc dec jnp pop pop dec inc pop inc jne xor pop push pop push push pop pop and xor adc cmp dec mov and push push sbb cmp xor or arpl add adc or sbb and sbb or jecxz in ljmp out loop loop push (bad) sti repz call out in (bad) aad lret rol fldt iret lret icebp (bad) fst ret ret (bad) mov int mov mov mov lods mov mov mov mov mov (bad) xchg jecxz nop xchg xchg lea mov xchg mov inc addr16 insl je imul ja adc data16 jae jp jne js imul dec push adc popa inc pop jge pop dec dec dec insb pop pop inc push dec inc ss dec outsb push dec pop pop pop add sub and cmp cmp and xor sub or add add and push add pop outsl add sbb ja sbb push cmp repnz and loopne in sti mov stc jmp ljmp hlt out in cld jmp lahf not lret xlat (bad) cmc aam lret int3 fnop loope ret rol mov int rol out lret ror enter mov mov mov add add add (bad) (bad) incl add add add add add add sbb add add adc push xor jno inc arpl xor popa insb push push ja push add add adc inc xor push xor pop fs jae jbe dec push add add adc inc push addr16 push insb aaa push inc xor inc arpl add add jns inc pop imul imul js gs jae push add add push ja js jb outsl inc imul popa pushw pop add add jne push dec jae dec gs imul push or add adc inc dec addr16 cmp dec jb push jae jne outsb xor push or add adc addr16 dec inc jns inc pop jb imul push outsb push push or add adc inc inc imul jae inc js dec dec inc dec inc inc gs push or add adc push outsl inc jp inc jno imul imul add adc dec dec js dec inc jbe xor arpl jp xor push or pop jae outsb inc js push arpl inc pop pop dec addr16 push push push push add add cmp inc bound xor push outsb push sldt add aaa ja inc xor popa outsb inc pop pop push dec imul jns adc add adc aaa pop cmp push dec jo push xor inc push jns js push adc add adc push cmp push xor push jns jns dec jne inc dec arpl adc add adc dec push jne inc push dec inc jo dec jbe push push bound adc add adc xor dec inc jb dec dec dec outsb push push pushw insl gs adc add adc cmp ja xor pop push jae aaa inc dec insb imul adc jbe data16 bound push push addr16 inc imul push add add jno push js cmp js jae inc cmp pop jae push pop add add dec inc cmp jno xor gs popa cmp je jns sbb add adc cmp cmp inc push push xor push gs xor inc outsl push sbb add adc jo dec bound inc dec dec dec xor ja inc xor inc push sbb add adc inc gs addr16 pop jb xor push jae push sbb add adc xor pop push ss dec dec dec outsb jbe push push js inc jns push sbb add adc pop ja data16 cmp dec push popa push inc ja sbb xor inc outsl ja inc jp jp popa imul push push add add inc push jbe jae jns dec outsl jne pop arpl jne or mov arpl je dec cmp jne inc add cmp or jl pop emms adc push adc dec sbb jnp and sub gs imul or jae jne ja jns jnp jge jg inc jg jns inc jbe dec and cmp sub push ss push push push pop adc pop das pop lds fbld in ret scas in aad mov idivb mov into add jmp fimul mov ficoml in loopne jmp lahf shl mov out jmp mov ret icebp (bad) repz nop testl (bad) mov test jmp lret mov (bad) mov call mov in out fcompl lea push and push es sub cs xor jg jge cmp insb cmp ds jnp inc add push xor popa or inc push push adc push adc push inc sbb sub push jbe sbb adc push cmp jo jb je jbe js jp jl jle inc and ja aas inc adc dec sbb push sbb and pop cs and pop stc xchg mov repz stos fsubrl mov mov mov mov aam int3 cmpb lret mov mov mov xchg clc xchg in xchg fstps (bad) sahf lock loop in out call mov f2xm1 mov (bad) lret jp lods std mov hlt rorl xchg stc lret fwait int iret (bad) rcll xlat xchg fstps fild and and jo dec sub dec xor addr16 dec cmp imul xor popa or or pop adc jae dec sbb pop sbb xor adc imul xor pop jae jne ja jns jnp dec add cmp inc adc inc and dec sbb push and xor push adc pop cmp pop lret mov ljmp lods scas sahf (bad) mov mov mov mov mov int roll xchg mov mov (bad) enter aad notl std fwait mov rclb sahf jmp popf out (bad) icebp xor int3 stc mov jmp lds lret stos int iret in rcl loop aad xlat test (bad) dec and inc sub pop das inc xor xor xor pop cmp jg cmp xor pop dec or pop or and pop push sbb sbb dec pop adc arpl gs outsl pop jno jae jne inc adc jnp jge jg inc adc inc sub dec push dec jge push push pop push xor push or pop das pop sub mov fwait cmpsl test loopne cwtl lods cli scas jmp mov mov mov fistpll cmc test mov (bad) hlt (bad) fist stos xchg movsl cltd lcall loope jecxz in out jmp mov repz cmc mov sti movsl std (bad) decl lds lret int3 dec xor mov fsubrs fidiv and es sub dec sub cs xor pop xor sbb dec cmp inc ds add add push push or push arpl sub addr16 push outsl sbb ss push jp add fs pushw push add jo jb je jbe js jp jl jle inc cmp inc push dec sub cmp aaa push cmp daa push cmp pop xor mov (bad) cmpsb enter les mov mov mov mov lea mov mov mov mov mov nop scas xchg enter sti cwtl lock and in out call sahf out fwait lock hlt fwait notb cld sar mov mov mov enter lock iret mov aad xlat stos fldcw fild pop and dec daa inc sub add dec xor push aaa add push cmp dec aas insl add push or je jp cmp adc push pop or arpl gs addr16 imul jae jne ja jns jnp jge jg inc sub aaa inc and dec cmp dec je ds cmp push arpl pop xor pop iret mov test pushf lods sahf scas xorb mov mov int3 mov jecxz mov mov (bad) out loopne lock sti xchg notl rcrl jecxz in out jmp shr int3 icebp (bad) xchg xchg cltd stc xchg sti ret jmp (bad) movsl leave mov iret loopne jecxz loopne mov mov sahf fisttpl and push and dec sub bound jne jae or out pop cmp ds add add add push ja push push jl adc jns jb and jge jb jno adc pushw push push outsb pop jo jb je jbe js jp jl jle inc insb inc xor ds and dec and push and ss xor pop cmp mov enter fnsave fdivl cmpl xchg mov mov mov mov xchg hlt xchg stc cwtl ljmp loopne loop in out call (bad) out mov sahf repnz hlt lcall cld int iret sar cli les lret xchg into iret push sarb xlat repz fbstp jo arpl dec sub jge jns ja add adc pop cmp jae jae push pop or mov dec adc and jbe inc sbb jno pop popa add gs addr16 imul outsl xor jae jne ja jns jnp jge jg inc pop inc sbb jle add push dec sbb dec daa push arpl push sbb pop sub cmp mov lock ljmp scas (bad) mov mov mov mov mov mov mov lds iret (bad) clc (bad) rcll lds aam clc lahf test shl popf in out jmp cmpsl out xchg icebp lcall stc iret sti scas std int3 (bad) stc rcll icebp leave lods lret dec mov hlt std aad xlat neg test fisttp sbb sbb pop sub inc das push xor xor inc aaa push cmp or jae jno arpl xor insb and pusha es sub push ja pop xor arpl ss cmp cmp add cmp add or or pusha adc jne insl sbb dec sbb or or imul sbb jno jae jne ja jns jnp jge jg inc adc inc and dec pop dec sbb push and push adc pop imul sbb mov fsubrs enter loope lea cld mov out sub mov mov (bad) mov xchg scas xchg jmp into fwait negl fwait jecxz in out jmp mov leave icebp mov leave cmc lret idiv jns cmp (bad) xchg (bad) lock xchg mov test test mov shrb fcomps fisub and es data16 pop jg,pn inc xor xor ss cmp data16 jno dec push dec or or outsl push adc popa adc push inc sbb and push inc pusha sub fs push insb sbb jo jb je jbe js jp cld cld push jg inc das inc jne and dec cmp dec sub push add push or pop sbb mov shll fldcw divb fidivr sarb hlt test xchg mov mov (bad) lds stc xchg rcll (bad) popf int nop loope jecxz in out jmp pushf out mov cmc popf testl mov (bad) (bad) enter int3 mov shlb fsubs ficomp and es sub inc sub xor or ss cmp pop cmp ds sub imul or adc dec adc push jp insb sbb push jbe push bound add push inc outsb aaa jo jb je jbe js jp jl jle inc inc ret inc adc and dec or and push aaa push and pop cvtdq2ps mov lds fldt xchg call mov mov loopne iret xchg mov mov (bad) (bad) (bad) ficom fcoml fcomps mov out jmp xchg lahf icebp movsb repz (bad) stc mov scas std mov test lods ret les mov int3 cld into test aam (bad) mov lods fisubrl and dec and es sub push sub cs xor xor ss cmp cmp dec ds add xor push push jge jns bound push dec adc fs push je imul js punpckldq cmp push insb add jo jb je jbe js jp jl jle inc sub inc add enter push dec and push xor push push and cmp pop sub pop cmc mov leave cmpsl jmp lods xlat scas fdivl out mov mov xchg jmp lret xchg lea xchg ret xchg icebp cltd lret fwait int3 popf in lahf test mov stos in out jmp (bad) out (bad) icebp popf repz nop mull std leave decl lds dec mov popf sarb xchg fsubrs fisubr and es inc sub adc dec xor pop xor ss cmp or add je cs jno dec or and push push adc push inc sbb bound push pop pusha xor dec fs popw push push outsb inc jo jb je jbe js jp jl jle inc pop inc adc dec and dec dec into into sub push cmp push ds sbb pop aas pop ret mov repz shrl out scas mov fidivl clc mov fildl mov (bad) int3 (bad) stc xchg les in cltd lock repnz call jecxz in out jmp popf out (bad) icebp cmpsb repz mov lods stc xchg sti xchg std mov mov cmpsl ret mov scas (bad) xchg leave mov hlt int iret rclb stos aam (bad) mov fcompl and push es sub sub cs xor or ss cmp dec cmp outsl add jbe pusha push xor push or inc push adc adc addr16 dec sbb dec sbb push daa pusha sub push push push outsb and jb je jbe js jp jl jle inc es add or dec add push and aam cs or pop insl pop cmp mov lds stc lods xlat scas jecxz fnsave fstpt leave mov rolb fisttp aad rcll cld cltd enter negl (bad) in out jmp (bad) out fcomip pushf repz cmc scas notl mov stos (bad) mov xchg lds lret popf int iret mov aad push pop mov fsubrp and popa and es sub pop sub jp,pn dec xor pop ss add pop cmp ds add imul or imul jnp and sbb sbb push dec pusha sub fs or push insb or aas jo jb je jbe js jp jl jle inc add inc pop inc and dec js sbb cmp push add pop pop fcmovu and or int xchg mov fisubrl fldt int in xlat mov fnstsw repz xchg mov (bad) xlat xchg out out ficom out fistpl aam sahf out jmp test repz stc scas sti fwait std xchg ljmp lds lret mov rcrl xlat mov scas fcmovnu pop pop cmpsl and dec and es sub pop sub cs xor xor ss cmp push cmp ds add jp imul imul adc push push pop sbb xor dec push dec pusha sbb add push and sbb jb je jbe js jp jl jle inc or inc xor dec sub and push cmp aas pop sub pop sbb and fisubl cltd test fsubrl (bad) mov mov mov sarl out incl clc (bad) (bad) (bad) notb std xchg out cltd (bad) fwait stc popf cmpsb lahf scas loope jecxz in out jmp popf out mov cmc mov sti mov mov mov (bad) std leave mov iret test mov xlat mov nop fstpt and mov sub sub cs xor push xor ss cmp outsb cmp ds add inc add push or addr16 push adc imul sbb cs outsl pusha cmp fs push push cmp cmp jb je jbe js jp jl jle inc and inc je adc dec js add push addr16 xor pop aaa pop cmp mov movsl es lahf scas (bad) mov mov mov mov mov jmp stc adc xchg (bad) loop out loope rclb fwait cmc popf mov lcall out jmp fucomi mov mov mov stc pushf sti mov pushf pushl (bad) cltd leave sti lret mov rorl xlat xchg fnstenv sbb jp or stos push sub cs xor xor ja inc cmp pop cmp ds add add push push or push jbe jge fs push and push sbb and bound fs pop push add jo jb je jbe js jp jl jle inc and inc jno sbb dec and push ds xor add cmp pop sub in lcall stos stos sub (bad) scas loop fbstp cli mov fnstsw roll in int mov repz jmp clc xchg loope call popf hlt lahf xchg loope jecxz in out jmp test (bad) icebp xor cmc nop divl std test ret mov leave mov iret movsb shr rcll fld1 fisttpl and adc inc sub jbe,pn xor pop xor js dec cmp ja je push pop jno pop or dec movaps jno insl adc imul das popa sbb gs add imul pop outsl adc jae jne ja jns jnp jge jg inc sub inc jnp dec adc dec push dec and push xor push push and cmp pop sub pop cmc mov leave cmpsl jmp lods xlat scas fdivl (bad) mov mov sarl mov int fmull fmull movsb xchg mov fwait lods popf fistpl pushf in out jmp lods out (bad) icebp xchg repz cmc xor stc scas sti test lods ljmp lds lret mov shrl xlat mov out fcomi (bad) and fs inc sub jne sbb js inc xor pop aaa pop cmp cmp inc aas push add xor or insl or bound inc adc jne pop sbb sbb adc imul outsl or jae jne ja jns jnp jge jg inc pop inc je jne xor dec sbb dec sbb push imul pop xor pop (bad) mov (bad) cmpsl lret test sti scas leave mov mov mov mov mov sarb mov ret mov rclb xchg rcrb fcompl mov mov mov in shr lock repz cmc fwait (bad) leave stc pushf sti mov shll popf leave mov lahf int iret xchg shr (bad) mov scas xlat mov lods (bad) and and daa pop sub pop sub popa xor push aaa pop cmp pop cmp jbe push add or or and jb push pop push jnp jg imul popa aaa arpl imul outsl or jae jne ja jns jnp jge jg inc and inc add dec gs or dec aaa push and push daa push sub pop push pop or mov fisub popf lods enter (bad) mov mov mov mov (bad) mov lds repz (bad) stc (bad) sti xchg rclb ret fstps mov mov jmp mov test mov (bad) iret stc mov cmpsb mov (bad) scas leave mov mov shll xlat mov fstpl and dec daa pop sub gs dec xor aaa add arpl js pop aas add arpl cmp inc or inc adc sub sbb push jb push bound push sbb jo jb je jbe js jp jl jle inc sub inc adc dec cs daa dec js cmp push and pop xor xor cld cmpsb jmp lods sti scas fdivl fdivl mov (bad) roll mov mov mov nop fcoml mov sbb out mov (bad) jecxz in out jmp (bad) out test (bad) repz stc xchg sti mov sarl mov int iret test popf rcrl flds fildll jne adc pop sub sub pop xor aaa dec cmp cmp inc add push pop bound push jb jae data16 sbb cs xor xor mov inc cmp push cmp inc add addr16 imul or punpckhwd inc adc push pop and jns gs or addr16 or and jno jae jne ja jns jnp jge jg inc cmp inc add dec sbb dec aas dec adc push pop push imul imul int3 mov mull ret scas lret mov mov mov mov mov cmc test xchg lret (bad) in mov xchg lret cltd lods fwait movsl popf icebp lahf (bad) loope jecxz in out jmp cltd out mov cmc mov sti mov mov xchg (bad) cmc ret mov leave movsb lret xchg mov rcrl (bad) fcmovnu pop pop cmpsl and dec and es sub pop sub cs xor xor ss cmp push cmp ds add jp imul cmp adc bound je jo bound push jo push bound data16 push insb push outsb or jb je jbe js jp jl jle inc xor inc add dec adc dec add push aas push add gs add pop outsb pop pop scas shlb mov enter divl loope lret mov repnz aam mov loopne jmp mov nop lret xchg xlat xchg mov lcall loope aam xchg mov mov out fwait lock notb scas dec shrb mov int3 pushf into repnz rcl in (bad) mov ljmp and and sbb sub pop cs pusha xor ss cmp cmp pop ds add ds aaa jge popa or adc dec adc push pop sbb pop sbb push pop pusha sub push push inc outsb sub jb je jbe dec sbb jl jle inc pop inc or es cs cs sbb push push sbb and xor pop cmp mov cwtl cmpsb lcall scas (bad) mov mov mov mov mov int3 mov icebp test xchg mov mov nop leave xchg fsts lcall mov mov call sub lock repnz hlt (bad) mulb cld lods (bad) mov cmc mov xchg enter int3 cmpsb into test mov mov fsubr ficompl and push and es sub jge sbb dec xor push xor pop pop cmp jl push ds add inc add push dec or inc or push dec adc adc and inc sbb sbb cs inc pusha and fs addr16 add sub and jb je jbe js jp jl jle inc pop inc cmp cs dec jae sub push cmp push push pop imul push mov ret test stos (bad) lods int3 scas fdivs xorl mov mov roll mov (bad) xchg cmpsb xchg cmpsl xchg les sti sahf stos loopne loop in out call cmpsb out test cltd repnz hlt fdivp nop clc (bad) cli (bad) cld std iret mov (bad) test mov or mov fcoms fsubrp and and dec es sub push sub cs add jns inc ss cmp dec cmp ds add inc add push dec or or inc push insb adc jno and dec sbb dec sbb push and push pop fs push insb and add jb je jbe js jp jl jle inc and add or dec sub push insb push push or xor pop or mov in shrl fisubr les mov mov rolb mov mov nop sti xchg leave xchg icebp xchg int aam loope lock mov mov xchg in out call in fistp hlt mov mov enter xchg decb les lret mov stos sarb (bad) mov fsub (bad) mov and pop sub jbe push xor jo push cmp inc add pop inc or dec or sub jg push pop dec sbb inc sbb add adc imul outsl and jae jne ja jns jnp jge jg inc or inc jno jo add dec push push add pop aaa pop or pop leave mov hlt cmpsl loopne (bad) stos cli lods aam out (bad) mov mov mov mov mov fldl fisttp mov xchg hlt xchg negb cld lahf cmpsl loope jecxz in out jmp sub icebp mov (bad) mov (bad) sti cld int3 mov mov xchg ret lods lds lret mov sarl xlat loopne xchg fistl and inc and pop sub sub inc xor aaa push cmp jns jae add xor pop or inc rcpps inc adc dec pop outsl sbb and push arpl add imul outsl aaa jno jae jne ja jns jnp jge jg inc cmovae inc adc jle add dec jae insl push push bound push daa push sbb pop cmp pop fldenv in shrl scas cli mov mov mov mov mov leave mov test mov (bad) leave pop xchg ret xchg fcoms mov lahf test (bad) jecxz in out jmp mov repz cmc imul cltd stc mov fwait std xchg ljmp lds lret mov enter aad xlat mov mov mov mov inc and inc and sub pop sub pop xor sbb pop cmp push cmp pusha add outsb pop insl or jl and je jle js push add push jne inc pop or or addr16 push imul outsb je jno jae jne ja jns jnp jge jg inc insb inc and inc and dec pop cmp cmp push es xor pop je cmp pop int3 mov lret cmpsl lret test int (bad) fidivl lret mov icebp xor incl loopne loop nop sahf rcll cltd (bad) fwait lock repnz loopne and sahf jmp fucomp ret pause cmc lcall std xchg mov lods ret ljmp lret int3 mov (bad) mov mov lods fsqrt fcomi (bad) fild push and dec daa or jge inc sub add imul cmp aas je add push pop jno jns js imul adc adc adc sbb push sbb pop arpl gs or imul sbb adc jle ja jns jnp jge jg push inc sub add inc cmp dec aas dec and push es je xor pop sub xor mov iret cmpsl (bad) test clc scas stc mov mov mov mov mov enter cmc and hlt xchg mov (bad) loop out loope notl repz out loopne xchg jecxz in out jmp out fidivr cmc movsl divl std into (bad) out roll lcall iret test aad xlat mov fdisi(8087 fucom fbld adc jge or adc sbb inc sub push xor pop aaa (bad) add add or push add add push or xor sub adc pop sbb push pop and gs or inc imul or jae jne ja jns jnp jge jg inc jg inc je inc addr16 and dec and push pusha push add push ss adc pop xor mov (bad) cmpsl in iret stos aad in (bad) mov mov mov xchg mov les mov jmp mov (bad) cld (bad) fist cmpsb xchg rcrl lahf mov mov fxam (bad) call in test mov xchg repz stc nop sti (bad) std lods pushl lds lret (bad) int iret cmpsl shll xlat in (bad) mov lods fisttp js arpl dec sub inc das bound inc xor push aaa insb cmp pop cmp inc add popa pop xor cmp mov js push adc bound push popa adc gs addr16 imul outsl cmp jae jne ja jns jnp jge outsb sub inc ss sub dec es jg jl push dec push push cmp push cmp push pop xor mov fbld xchg lods jmp enter fnsave mov scas xorl mov lea xchg lods xchg icebp xchg movsl cltd cmpsl fwait pushf lods jmp iret loope jecxz in out jmp mov xchg mov test mov sti mov xchg ljmp lahf (bad) mov int (bad) movsb rcrl xlat jmp in fildl and push and jns push sub jp add pop aaa jnp pop cmp cmp dec add inc pop pusha or arpl and pop sub jne xor and imul outsl dec jno sub jne ja jns jnp jge jg inc add inc ja addr16 add dec add push arpl push and pop arpl pop insb pop (bad) mov out cmpsl cli test in scas stc mov mov mov mov mov enter int3 xorl mov mov xchg rcll fwait lock rcrb xchg in out jmp mov repz cmc (bad) stc (bad) sti sar cmpsb repnz mov clc lret mov rcrl xlat mov xchg fldt and or sbb adc inc das push xor inc xor or push cmp inc add dec or pop movaps jnp arpl pop sbb sub sub adc imul outsl sbb jae jne ja jns jnp jge jg inc adc daa inc and dec cmp and dec popa push xor push add pop sub imul mov lock fldcw xorb mov out subl mov (bad) fimull loope sti xchg in cltd out fwait in popf fistp in lahf out jmp mov repz cmc xor stc pushf sti lahf std mov movsl shrl xchg dec dec cmpsb iret popf shll xlat mov call fist and imul bound push aaa pop cmp add outsl add jbe or or pop (bad) adc bound outsb sbb sbb dec arpl add imul outsl jo push jae jne ja jns jnp jge jg inc and inc aas inc jle add dec daa push aaa push aas push sbb pop push pop adc mov mulb (bad) lds fidivr cmc mov mov xlat xchg (bad) (bad) in cmpsb xchg ficomp iret lahf mov lods jecxz in out jmp stos out popf icebp cltd repz xor stc cmp std sar mov test mov test xchg int iret fwait roll xlat popf (bad) fistpl and and push daa inc sub insl sub jno xor imul adc add gs pusha and push and es adc push sub pop pop xor xor ss cmp push cmp ds add inc add push imul dec push adc adc dec push push sbb es push pop push sub fs popw push sbb jb je jbe js jp jl jle inc js jbe xor dec cmp dec jo jb push or push and pop sub pop add mov xlat test stos icebp lods lcall mov mov mov idivl mov jmp mov mov mov nop (bad) xchg mov cwtl out lcall stos loop in out call cwtl out (bad) lock repnz (bad) test mov lcall ret mov lret mov lcall (bad) xchg fsub (bad) (bad) out mov jnp dec and adc pop sub cs xor pusha xor ss cmp imul lldt je pop push jo dec or or push mov adc push dec sbb jp jne outsb pusha adc xor push pop outsb pop jo jb je jbe js jp jl jle inc inc jae inc je or cmp dec cmp sbb and add pop push pop or mov lret cmpsb (bad) test stos fisubrl mov test mov mov test loopne les repz xchg leave xchg jecxz clc cwtl aad mov int clc loopne loop in data16 lods jmp in lahf out pushf icebp cwtl repz cmc mov sti test xchg (bad) jmp bnd mov leave test std int iret adc (bad) mov mov (bad) fnstenv fildll pusha and adc inc sub je sbb xor jns imul add je cmp imul or inc adc dec sbb imul and addr16 insl push outsl xor sub jne ja jns jnp jge jg inc xor jl imul dec aas dec cmp jge add pop pop fucomi push pop mov mulb cwtl lods fwait scas cmc mov mov mov mov mov sarl repz xchg mov mov mov mov nop (bad) xchg ljmp lcall fsub cmpsl in out call cmpsb out xlat lock repnz hlt (bad) idivb cld mov ret mov movsb enter int3 stos into test aam (bad) mov sahf (bad) fdivrl and push outsl sub add jg ja pusha xor outsl ss cmp cmp dec imul dec push jo xor ss aas adc imul pop sbb inc sbb push jo and and push aaa outsb push jo jb je jbe js jp jl jle jno inc and ds add dec add push adc pop cvtps2pd adc mov jmp stos ljmp addl in mov xchg loop rorl mov nop test std xchg rcll repnz ljmp fs mov jmp in lods out popf icebp xor cmc mov sti mov mov ret mov leave scas lret xchg int iret mov aad xlat xchg fstps fbstp pop and dec daa inc sub pop sub dec xor jno inc cmp jns adc add popa pop or pusha or push adc pop pop push sbb jg push pop adc or gs addr16 imul sbb jne ja jns jnp jge jg inc and adc inc cmp dec push dec and add push imul pop push pop insb pop les loope lcall scas cmc mov mov mov mov mov fstpt mov mov in (bad) cli xchg jecxz rcll fstps (bad) jecxz in out jmp mov repz test std stos push (bad) mov mov leave dec mov scas iret mov aad xlat sahf fnstcw inc and jne push daa sub pop sub pop xor inc aaa push cmp inc cmp inc add fs cmp jle pop or das adc bound push sbb sub jne push popa pop arpl or imul outsl sbb jae jne ja jns jnp jge jg inc add inc jb sub sub dec es pusha push push push bound push xor pop cmp pop fldenv into cmpsl in test scas sahf fdivs (bad) mov mov std mov mov jmp mov lea xchg in xchg fstl mov rcl jecxz in out jmp cltd out ret repz cmc (bad) (bad) mov mov xchg std xchg jmp lds lret (bad) int iret in rcl loop aad xlat out fldcw fistpll jno jne push daa outsl sub sbb imul xor jb inc cmp aas add ss jno dec or inc maxps jns es dec sbb sbb adc adc imul jae jne (bad) leave add jl jle inc sub inc pop inc insb dec sbb dec add push aas push sbb das pop outsb pop or sbb movsb repnz fildll aad lret mov mov mov mov fdivrs out test xchg mov mov xchg clc xchg rcrb sahf enter mov mov aam mov mov lcall hlt mov cli mov rcrb mov int3 or rclb (bad) mov fsubrl and sbb sub das pop xor jg pop aaa dec cmp cmp insb add or or vmwrite push pop sbb sbb jbe or gs add imul jae jne ja jns jnp jge jg inc and inc and dec and dec popa push sub push add pop aas pop outsl pop das pop lds cmc cmpsl loopne shrb stc mov mov mov mov mov sarb out test xchg mov mov (bad) rorb xchg (bad) xchg out cltd cmpsl fwait mov loope jecxz in out jmp mov fcomi mov imull std fwait lcall lds lret icebp int iret rclb mov fcomps fidiv and imul js push xor ss push cmp jg push add add bound dec or jp cmp jge inc adc jp inc sbb push pop pusha adc es push pop outsb and dec jb je jbe js jp jl jle inc push sub pop dec dec add ja or gs cmp pop xor sbb lock jmp lds out pushl hlt mov lea mov lret mov (bad) sti (bad) xlat xchg loop ficoml cmc fwait (bad) popf icebp lahf stos loope jecxz in out jmp (bad) xchg sahf repz (bad) (bad) mov test push rorl dec mov iret cwtl shll xlat out flds fistp push and push daa inc sub sub inc das js pop xor pop aaa jle dec cmp aaa add jne dec or cmp inc andps inc adc gs pusha sbb sbb pop arpl gs pop imul outsl sbb jae jne ja dec cmp jge jg inc or or inc js gs add cmp push and push arpl pop sbb pop cmp mov fwait cmpsl xchg test scas cwtl mov mov mov mov mov hlt mov repz xchg mov mov mov xchg (bad) xchg repnz jecxz jmp sahf (bad) loopne loop in out call mov repnz clc mov (bad) stos rclb (bad) mov mov shrb (bad) mov xchg ficoml and and es sub dec sub pop sbb inc xor pop ss cmp jge addr16 inc add inc push inc or dec or push aaa adc cmp push sbb es push pop loopne pop arpl gs addr16 imul outsl add cmp jne ja jns jnp jge jg inc xor inc cmp dec sbb push add push xor pop xor pop xor mov nop cmpsl shrl (bad) ret mov mov out mov repnz mov (bad) int lret xchg movsl xchg xlat xchg loopne fcompl fsub loop cmpsb in out jmp lods out test cmc xor stc lods sti lcall ret scas lds lret or iret in shr rcl in xlat mov xchg fldt and and daa outsl sub inc sub pop xor push aaa dec cmp jp push aas ja aas add add dec or jp push adc dec adc inc sbb cs pop popa and daa gs add imul add ja dec cmp jge jg inc and and inc sub dec sbb dec or push aaa push push push push sub pop pop pop lret mov fwait cmpsl xchg test fldt out (bad) mov mov sarb lret xchg mov (bad) repz in mov cltd cmpsl fwait pushf lods stos lahf lret loope jecxz in out jmp (bad) icebp movsb repz stc mov mov rcll scas leave (bad) lret icebp int (bad) cmpsl shll xlat mov sbb fstl and imul sub jbe push das xor jge bound jle pop cmp cmp mov add push push or pop or push pop adc jnp insl push and sub push push pusha adc cmp push insb and jo jb je jbe js jp jl jle inc adc inc pop inc or sbb dec sub and push xor pop ds sub xor ljmp lods (bad) scas leave mov mov mov mov mov idivl flds mov mov mov xchg lock lds lock out mov mov mov ljmp int3 repnz cli xchg cld mov mov (bad) repnz stos into mov aam (bad) nop fcoms fisubr and pop insl sub data16 sbb add jnp inc ss push cmp add add dec push insl or or push push adc push pop inc jne inc sbb push dec pusha bound push daa outsb cmp jb je jbe js jp jl jle inc xor inc xor dec cmp dec sub push popa push push pop sub pop push or fbld subb (bad) mov mov mov sti mov testl mov nop aam cmc xchg loop lock (bad) lcall fsub jecxz mov xchg call scas out popf lock repnz hlt xor clc sar leave cld mov ret xchg movb sahf into mov in shr aam out fdivs ljmp es push sub pop cs xor inc xor ss cmp cmp or or inc add add push pop cmp dec and outsl daa pop sub insl sub jg push xor dec cmp aas xor dec add pop or xor and aas adc jae push sbb and adc addr16 imul outsl sbb jae jne ja jns jnp jge jg inc inc jb inc xor dec jns ds or push xor push jge adc pop ja sbb mov nop test fldcw mov into mov mov jmp xor iret xchg mov (bad) loop aam lock xlat xchg rcrl mov (bad) loope jecxz in out jmp sub icebp mov mov stc cmp std mov mov xchg ret stos lds lret icebp int xchg xchg roll xlat neg (bad) frstpm(287 fisttpll and dec sub das push xor xor dec cmp fs pop add add add xor cmp adc pop adc push sbb jl cmp arpl gs addr16 insl pop outsl sbb jne ja jns jnp jge jg inc adc inc and sbb dec jle and push and push imul pop push pop adc mov out cmpsl int leave stos sahf lods test (bad) mov mov mov mov out xlat xchg mov mov xchg ficompl negl shl movsb out jmp cltd out pushf icebp mov (bad) (bad) stc (bad) sti sar into stos (bad) mov hlt (bad) mov sti lret (bad) int iret jmp aad xlat mov (bad) and and pop sub sub push xor jne insl cmp pop cmp inc add imul inc or jne pop adc imul sbb bound gs push imul ss jae jne ja jns jnp jge jg inc or inc add sub dec js cmp push outsl push push fs adc pop insl pop xor mov call stos fwait lods sahf scas (bad) mov mov mov mov mov mov mov mov (bad) cli xchg aad fist scas fwait lock icebp lahf aad (bad) jecxz in out jmp mov repz cmc lret idiv enter std xchg incl (bad) mov int iret loop adc aad xlat jmp mov fisttp and gs sub sub push aaa or adc inc cmp jb xor jge inc or adc pop sbb push pop push popa push arpl gs sbb daa imul and jae jne ja jns jnp jge jg inc jg inc sbb inc es add dec pop dec adc push add push pop pop add pop aaa pop shlb mov les aad divl ret mov repnz lock mov (bad) fcoml lds mov (bad) loop in out call mov repnz clc nop cli mov scas (bad) scas shr xchg les lret mov shlb fdivrs test bound jp dec es sub add cs xor bound cmp inc ds add push add push sub cmp jns inc push cmp adc jb data16 pop sbb push sub push cmp dec push das outsb add jb je jbe js jp jl jle inc sbb inc jge jbe pop dec push dec or jb insb push push gs pop sbb mov jecxz repnz stos sti lods cwtl scas jmp mov mov mov into mov mov mov mov mov mov nop fcoms in cwtl rcrl test aad cmpsb in out call fldz fcomip xor hlt (bad) (bad) clc mov (bad) mov xchg mov xchg (bad) (bad) or int3 test mov mov mov fcoms (bad) adc outsb and es sub inc sub cs xor inc xor ss cmp push cmp adc outsb add push push push or or push xor adc adc push inc sbb jno insl push push pusha sbb fs push insb sbb jo jb je jbe js jp jl jle inc pop inc sub xor sbb dec or and push add pusha pop jb xor mov mull stos popf pushf scas out mov mov mov mov mov fidivr mov cmc xchg mov mov mov mov xchg lds cmpsb pushf popf scas test in out call fldz (bad) lock idivb cld movsl (bad) sahf (bad) mov xchg les lret lock iret loope rolb fcomps fisubr and or popa sub dec jge,pn jne jno addr16 cmp pop cmp add add imul push pop or pop push pusha adc inc adc push jno jl push sbb push jle dec bound or push sub push jo jb sub or jl jle inc sub inc xor dec and dec and push sbb push cmp pop xor mov jmp stos repnz ret scas in mov mov mov mov mov sarl in testl enter aad fcoml cld pushf test cld loopne loop in out call xchg out xchg lock repnz clc mov (bad) cld sar icebp cmpsb ret hlt movb mov mov loope mov fsubr (bad) fsubrl and and es sub adc xor push xor ss cmp dec cmp ds add pop add push jo outsl or push adc cmp outsl push jg jge sub push and bound or push cmp jo jb je jbe js jp jl jle inc cmp inc sub dec jg or sub push outsb push push addr16 pop add pop aaa pop sbb (bad) cmpsb lock stos lret scas clc mov mov mov mov mov enter rolb sar mov mov mov nop ficom ret cwtl fistpl fneni(8087 cmpsl loop in out call test fdivp (bad) repnz notb lret rolb stos enter int3 sahf into mov jecxz mov fsubr ficompl and adc push es jg jp inc xor pop xor ss cmp imul add pop push jno jl push or push xor sub adc push jp push sub push pop pusha or sub push insb cmp jo jb je jbe js jp jl jle inc sub inc or dec xor dec sbb push cmp adc pop cmp adc cmc cmpsb in popf stos xchg lods lods lahf (bad) mov mov mov mov mov idivb ret xchg mov mov mov mov nop mov xchg cmpsl cwtl out lcall movsl loop in out call cltd out mov hlt mov cli mov mov xchg (bad) mov xchg les lret lock repnz jecxz aam (bad) fsubs fidivr and adc pop sub pop xor pusha xor ss cmp or add cmp add pop or aas push ja push adc adc push je jb dec sbb push dec pusha add fs es insb add jo,pn jb je inc sub jl jle inc xor inc push inc pop dec push dec cmp add push adc and and pop cs cmp cwtl cmpsb cmpsl cltd (bad) stos jmp mov mov mov mov mov fidivr roll mov mov mov nop cld xchg ret xchg stos cwtl cltd stos std pushf jmp fnop stos loop in out call lods out movsl lock cwtl hlt test mov cld test xchg shrb cli enter std mov mov in mov out lcall fimul and outsb sub insl sub cs xor jg jo jbe add push cmp cmovns dec add arpl xor cmp xor push cmp bound push adc push je pop sbb sub xor push bound add push push outsb outsl sub jb je jbe js jp jl jle inc adc inc adc dec add dec or push pop push add pop or pop sub shll (bad) lods lds aad sahf mov mov hlt mov in test xchg mov xchg lret xchg and test mov cmpsl xchg subb lea xchg xchg xchg in lahf cwtl cltd pushf fwait repz icebp loop cld out jecxz pop xor cld jmp hlt out cltd in clc stc lock and (bad) and out ret sbb (bad) into cmpsl or xor cs frstor leave ror aad xlat xor dec cmp hlt and add sub xor ds sbb cmp cmp or add and and and sub sub sbb mov xor cmp cmp cmp add add push pop or add rcl add adc adc sbb or arpl gs push insb push jnp jo js je pop ja dec js dec jge jg inc inc push inc inc pop outsl push dec dec inc inc pop dec addr16 push push pop test push inc jno pop pop push jbe mov movsl cmpsb mov mov mov mov mov test scas mov movsl orb xchg lea loope popf vcvttpd2dq lcall out lock loope hlt in jecxz clc jmp not rol push das (bad) mov into int out int lds (bad) or enter int3 fnstenv and ds cmp mov cmp sbb xor add push sbb or or push sbb adc push sbb aas sbb sbb nopl xchg or jae pop pop data16 js adc jbe xor pop test cmpl push dec jp inc inc inc dec pop dec xor dec dec dec sub push push dec or dec pop pop pop jbe mov movsl cmpsb lods mov in scas scas mov cltd mov mov mov mov cli ret sbb xchg pop sti mov cwtl lcall out int nop repnz in clc call (bad) out lock repnz jns idiv sti rcl cld std hlt in int ror cld push mov leave fcmovnb inc out iret rol ret fadd (bad) into enter cmc clc fbld sub xor cmp xor xor and cmp and adc adc dec or or jp xor pop adc or or jae or addr16 lret jnp jge ss js jle gs pushw push pop jge jne push push imul insb pop pop pop pop aaa add push dec or jg push push dec dec dec push dec dec and mov mov mov rolb mov mov mov mov xchg lcall movsb mov sbbl mov (bad) sbb div div (bad) cmc adc cld neg repnz fcomip idiv jmp into jmp xchg ret (bad) sar enter into iret aad rol aam fsubrl scas (bad) (bad) push dec add and sub sub and in je xor cmp xor cmp sub pop adc or or adc add adc or or gs jb jmp push mov mov imul pop push jae jne jno push jp push jge jg push inc inc inc inc push inc or dec dec dec inc popa push push jne push push pop pop pop dec pop and mov movsl cmpsb lods mov lods scas movsl into xorb mov mov mov stc mov lahf (bad) cmpsl adcl sahf mov mov lahf loopne xchg shl in popf rol jmp out sbb jmp test clc stc lock cmc cld nop in ret popf ficomp int3 lret (bad) rcl inc aam (bad) xlat (bad) int (bad) fistl and and and ds cmp ss int3 xor cmp ds adc cmp xor xor add jle adc cmp push add cmp adc mov pop or push imul jo insb adc push loope outsl jo sbb push js jo and je dec sub sub inc data16 push push and fnstcw pop pop xor jns mov cmpsl scas mov test mov mov stos mov mov addb mov (bad) nop fwait xchg xchg xchg out xchg cwtl lahf out pushf popf lcall loope call out out jmp mov repz icebp cltd mov stc cld (bad) icebp std (bad) std mov ret iret les ror aam shrb mov fcmovu fcmovu hlt fbstp adc and sub cmp push and xor pop push xor cmp jnp add add sub sbb movups insl sbb sbb jno pusha popa arpl data16 imul jno bound or jns jg jns inc inc inc inc inc push dec cwtl inc outsb dec pop inc xchg dec dec gs inc push push push push push push dec dec pop pop dec pop pop pop mov movsl cmpsb cmpsl mov mov mov mov mov mov mov mov (bad) test mov mov xchg xchg cwtl cltd xchg fwait mov loop fsubp in loop ljmp icebp fdiv out div jecxz cli sti sti std (bad) out rol leave (bad) (bad) mov lret ror shlb fdivr fcomp lock in (bad) adc and das and sub sub xor sbb xor (bad) ds push or or jge or push or push bndldx cmp adc xor sub bound gs push adc outsb imul jb jle jg outsb xchg (bad) jl jle dec inc outsl push inc cmp dec dec and push pop push js imul and insl pop pop icebp mov cmpsb mov mov lcall mov mov mov mov mov xchg xchg cltd xchg popf hlt fcompl in in into (bad) call (bad) (bad) out lock loope fcomip out sar cli sti out stc call (bad) enter (bad) into iret rcr rol aam hlt xlat fcomp cld fcmovnu cmpsb mov pop inc and je sub sub xor xor aaa cmp cmp jp add jne or add rolb sub cmp adc push enter sbb sbb popa jno push and jle push jg insb outsl bnd jae jne data16 jp imul dec inc insl add sub dec inc push pop push jl push push push xor cmp dec mov movsl cmpsb lods rcl stos lods test lcall fnstcw mov test out cli ljmp (bad) mov std jmp cwtl cltd sahf mov loop mov clc jmp in (bad) lret lock hlt aad stc (bad) lock sti out int jmp rol lret (bad) enter int3 int (bad) (bad) aam ffree fsubs int3 ficomp and or add xor aas xor cmp cmp adc add or add sub sbb or add adc adc insl cmp sbb adc sbb popa arpl data16 push insb outsl adc insb dec sbb js jo push jno cmp inc inc push inc sub dec dec inc addr16 dec xor push push push pop jle push jb pop pop dec insl pop pop loop mov mov stos roll mov ret (bad) mov mov mov nop addb xchg mov xchg loope nop xchg cwtl mov cltd lcall shl jecxz out int out ret ljmp icebp repnz mul clc sti or jecxz ret xlat (bad) out xchg lret out enter rol in xlat rcr fcmovne fstp into and pop adc sub jg xor aas push xor cmp cmp or add adc or or adc adc add xor sbb push rclb gs insb mov insl inc insl jge outsl jo jae arpl jge jns jp dec jg dec inc inc inc push inc inc push dec dec xor dec inc jnp push jns push jle pop pop push pop pop pop pop and mov cmpsb cmpsl mov lods scas scas movsl mov mov mov mov xchg sahf mov fsts sahf xchg xchg lcall mov popf mov in in mov fldz out div lock pop sti icebp cli sar jmp iret out mov (bad) lret cltd into iret aam mov xlat repnz fldenv dec adc and es ss xor xor dec arpl cmp sub or add add push add or daa dec movlps adc adc sbb sbb data16 gs push insb inc outsl jb and je mov jns jns push sub inc push inc cmp inc inc dec dec ss dec dec dec and push push push sub dec mov mov (bad) test scas daa cmpsl lods scas lods (bad) mov mov xchg push mov test mov test ror lea xchg cwtl xchg xchg xchg out stos mov mov scas test (bad) loop in jecxz test ljmp (bad) repnz (bad) int3 call mov (bad) (bad) lock lret int iret repz xlat enter lcall and fadds es or sub movq push xor xor cmp imul and pop add add pop xor pop or or adc adc sbb push sbb bound data16 imul outsl push jno jae jne ja jns jnp jge jg inc inc inc dec inc inc inc pop dec dec dec dec dec dec dec push push push push push push push push push pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test lods scas scas mov mov mov mov mov cmp mov mov mov (bad) lahf xchg push xchg xchg nop xchg push ss lcall jecxz in dec in out jmp call clc repnz add sti fdiv push hlt mov les rol into jae lret (bad) jl aam lock fstps rcr fisttp movsl and sub xor sub push aaa mov xor cmp add or or (bad) (bad) sub adc sbb xchg push pushf adc popa imulb outsb pusha movsl bound push fdivrl jae je jns jns jge jbe jg dec rorb cltd dec in dec dec cmpsl dec testl pop push push movsb pop jecxz pop pop inc pop and and scas test test pop mov dec mov in mov mov subl addb cwtl xchg inc xchg rolb sub in pusha call jecxz,pn jmp out in icebp repnz div clc stc sti sti std std (bad) call shll leave leave lret lret dec int3 fmulp cmp mov xlat rcr fcmovnu int3 fstpl dec xor and and cmp mov inc aas or xor jg push sub sub add add sub adc ja aas sbb bound or imul jo mov sbb jns jnp jl jg inc das push sbb inc gs inc dec pop dec push push popa push bound dec pop pop loopne xor mov pop mov test scas scas mov mov fistpll xchg xchg test in mov mov lret (bad) fwait nop (bad) xchg fcomps mov sahf lock out in mov jmp in (bad) out dec loope repz stc stc cli cld std aad rol ret mov add enter ret into iret mov aad xlat enter (bad) jecxz je and and daa sti sub sub jns jle cmp and xorb cmp bound sbb pop add pop or jge and and sub adc jno jle outsl cmp fs cmp cmp sti cmp or inc add dec cvttps2pi mov adc push pop sbb sbb loopne arpl out imul in das insb push jae bnd clc and jg (bad) pop inc jle adc dec pop lret jb sbb lcall pop pop or mov lcall scas sti cs mov mov xor mov mov (bad) mov mov adc lea xchg out stos xchg xchg mov mov loop loop jmp push in mov lock mull stc lods jl cld stos ret mov xchg dec adc xchg iret fwait dec (bad) rorb shr fisttpl fisttpll daa and inc and sub xor and xor xor mov pop aas cmp stos add add or or push adc adc pop sbb sbb push jp addr16 in or push outsl imul dec jno je js jnp jp ja jge inc (bad) inc jl inc inc inc jbe dec dec les push push push cmp push push pop and pop add test shrb mov mov mov mov sarb test test (bad) mov xchg xchg sub lcall mul mov call jecxz pushf repz in mov mov ljmp rcll call int shlb (bad) lcall fnop and into daa cmpsb and test jnp (bad) xor aaa mov outsl mov imul insb or adc adc sbb push push imul add push imul jle ja push ja jns std je js inc inc inc sbb inc dec iret inc gs pop dec dec push xor push push push rcll pop sub pop andb fisubr fisttp xor mov mov mov xchg lea jecxz xchg xchg sbb cltd lcall icebp loop in (bad) out jmp jecxz lock repnz aam div clc outsl cli pop icebp jp cli shlb push enter iret enter rcl rcl inc (bad) test dec (bad) fsub cld fbld and mov mov sub xor xor cmp or or or pop mov push pop sbb adc arpl arpl out clc dec pop push jno jae cmc jbe pop xor mov data16 inc inc inc ret inc aam adc dec push dec dec dec dec push rcll je pop mov pop pop jp pop pop mov mov mov mov xchg mov sahf mov mov movsl test xchg inc sahf insl xchg mov jg xchg xchg xchg cwtl pop lcall vpavgw in popa call (bad) out xchg icebp repnz jae inc call test inc rol les lret int iret rclb mov fdivrs std fcmovnu fstp pop sub and or daa sub sub cmp add cmp add add add push xchg cwtl sub adc push sbbl and (bad) cmp outsb push insb popf inc outsl jo jb je jo jl jp jl jle inc xlat bound add dec dec dec int fnstenv pop sbb push ret js pop pop pop fildl lods cmpsl mov cmpsl test stos dec lods mov (bad) mov mov mov mov mov std mov addl fimul xchg xchg xchg xchg adc fcompl loop in cmp xchg jmp in out out lock sub test mov fnop sti cld std (bad) jns sub mov (bad) (bad) mov leave lret dec (bad) insb aam rclb (bad) pop aam fcmovbe and jecxz and and and xor sbb xor ss cmp xor jp aas add add add add or push movups adc adc sbb sbb sbb addr16 imul push insl outsb test jo jbe js jp jl jnp dec sub inc inc dec dec dec lea inc lods push pop push push push push push push pop lahf pop js cs push mov movsl cmpsb popa lods xchg mov scas mov mov mov mov mov mov mov mov mov rorb (bad) nop push xchg (bad) lahf ja int cltd lcall ret loopne out call sub sar mov lods hlt cmc div clc stc cli cmp les mov (bad) push ret stos rcl rcl aam (bad) adc repnz mov and and and sub cs xor and cmp and cmp sbb pushf add and push mov pop sbb push xor sbb sbb push mov sbb dec addr16 inc bound sbb out pop jne ja (bad) jp jae jle inc in imul cwtl dec mov and jnp push push push rcll push xor jne mov cmp stos stos lods lods scas icebp mov jmp mov mov mov addl mov xchg adc fcoml pusha loop ret in in call out in lock (bad) repz div jg stc cli (bad) cld out stc inc (bad) (bad) enter int3 int3 into sub rcl rcl xor xlat fcomp fcmovb int3 fstp (bad) mov and es and or sub cs xor xor xor cmp ds add or sub or or push push adc sbb xor push pop sbb sbb sbb adc pusha arpl outsl gs imul jnp jb je js pop jns jnp jge jle cmpsl dec inc inc inc inc rolb dec dec dec pusha inc dec push push push cmpsl push push push push pop into push pop pop pop pop jb mov test test stos xchg es inc mov mov mov lea orl xchg push xchg xchg cwtl popf lcall cmpsl jmp jo jmp call inc repnz div clc inc cld cli cld cld decb ret ret mov (bad) enter lret into sar rcl aam (bad) mov (bad) fcmovu mov and and and sub sub xor xor cmp cmp cmp cmp push add push sub or or push movups adc adc adc addr16 bound and push insl dec outsb jo jg je jbe jbe jp jl jne inc inc inc mov inc inc inc dec fiadd dec dec bound push push push ret js pop jbe pop pop pop mov cmpsb cmpsb outsb stos test stos lods andb mov mov mov mov (bad) (bad) test mov lea xchg xchg xchg xchg mov pushf or into out in in jle jmp out out es fdivr idiv sti cli adc std (bad) cld shlb in mov leave lret loopne iret rcl shlb rcl (bad) aam dec aam (bad) fisubr and ss sub sub xor xor ss cmp cmp add xchg add or cwtl adc sub pop sbb push outsb insl bound adc insl push jge pop jo jg je jbe jne jp jl jae inc or dec push inc push dec cmp dec adc ds inc push xor inc pop xor push dec pop mov and (bad) movsl scas stos cmp mov mov enter lods mov mov mov mov orl xchg out lahf lcall std loop jmp out call icebp out inc decl icebp icebp clc cmp sahf clc outsl (bad) sarb pop (bad) hlt (bad) pop int lret mov rclb sarb rcl sahf fldenv (bad) or adc (bad) xor and and das (bad) sub inc les jle xor fidiv aaa push sub cmp push xor add mov or push or sbb adc sbb pop or adc data16 push imul jge push jno jae js ja jns imul cmp dec dec push inc rolb dec inc dec enter cs sahf push and push test push pop pop mov mov aad xchg test cmpsl lods lods cltd scas hlt mov mov mov es xchg adcl pop mov xchg inc xchg nop test sub pop jecxz in ljmp add out icebp or sbb hlt (bad) mov adc cli std mov ret xchg shrl leave xchg iret and pushf iret push aad fdivrl (bad) fisttp and xlat sub sub (bad) xor adc cmp ds add push mov add sub or adc push and fstpl adc bound stos outsb push outsb sub jo je jbe jp jp jl jl inc adc inc dec inc adc dec inc dec adc push andps push pop pop cmp pop push pop cmp int sbb sbb mov mov mov mov sub (bad) pop test mov test lcall lcall push loop out out call aad loopne stc repnz cmc loope (bad) clc mov (bad) mov lret ror mov js ror int int (bad) mov and fld (bad) fdivl and or sub das or xor xor xchg sbb inc cmp cmp add add add push adc (bad) and adc adc adc adc sbb sbb xor sub addr16 fs pushaw insl inc push insb xchg push jo jb jno jbe js jg jl jle inc outsl inc and imul dec cmp loope adc out sbb pop add mov les lret scas repz mov mov mov mov cmp les push xchg lea mov mov xchg and sub das loop jecxz in jecxz jmp cs je sahf divl cmc xchg notb sbb pusha cld xchg sti sbb mov les inc into jg (bad) shr xlat hlt (bad) in fcomi fnop fucomip fsubp and and daa addr16 das push adc outsl xor aaa push ss cmp ds add push ds or prefetchw movups pop adc push push sbb sbb push sbb bound push insl outsb daa jo jb je jbe js jp jl jle inc or inc inc inc or dec lret dec les push jl push push and pop fstpl pop rcrb mov push stos je inc scas stos mov mov mov mov mov mov (bad) lea mov nop mov xchg sbb sahf popf xor jmp mov inc call inc div hlt div pop cld stc cli sbb push cli inc ret les (bad) int3 jno lret int3 pop lret rcl mov insl rcl fdivrs gs fidivr and sub sub sub sub cs xor xor ss cmp cmp cmp add push add push push or and daa and sub and daa das xor and aaa cmp cmp add add add and sbb adc adc adc sbb sub popa push arpl fs imul insl jno jae jne ja jns jnp jge jne dec stos dec mov adc dec rorl dec sub push jne jmp pop pop sbb pop inc push mov movsl xchg mov mov repnz mov mov xchg mov (bad) (bad) lds mov xchg xchg xchg xchg fstl lcall loope loop in jmp jmp aad repz divb cmc div clc stc cli sti cld std (bad) inc rol test leave lret int iret rcl rcl std xlat xchg rcr (bad) fcmovnu fstp fbld and and cmp xor xor ss cmp cmp adc add add or or or adc add push sbb sbb arpl jle jno mov je outsb push jne ja jns cmp cmp sub add ja or push or push push push popa push push cmp and pop sbb pop or ret shr ret (bad) (bad) sti (bad) xlat (bad) mov (bad) lret aam leave nop call test out jmp out cld ljmp out icebp cmc dec cmc lock push cmp pop das pop outsl pop imul cmpsb shrb cs cmc mov mov icebp mov cmc test mov (bad) decl fistl rcrl and jecxz in out jmp (bad) icebp stos repz cmc iret (bad) mov scas sti mov rcll std leave scas lret mov mov adc shr aad xlat ljmp fbstp jno adc sub sub mov xor ss cmp bound ds add imul push or dec or push push adc inc adc push and outsl sbb inc push jns or pop fs sub push insb push outsb push jo jb je jbe js jp jl jle inc and inc add dec or dec add push sbb push pop push outsl pop adc pop adc mov imull (bad) scas (bad) mov mov test mov mov sarl repz xchg mov mov mov mov cwtl cld lcall fsub fsubp in stos call popf out mov movsb repnz hlt mov cli stos cld sahf (bad) mov les lret mov shl aam (bad) sbb mov cmpsb and jne push inc sub sub outsb sbb ja addr16 ss cmp add aas xor ja xor dec or jb ja dec adc cmp sbb sub je dec bound or push push outsb push jo inc and sub pop js jp jl jle inc and inc add dec jb push dec and push or aas pop outsb pop pop pop cmp mov fsubl (bad) lods cltd scas loope fnsave cmpb mov roll fimul xchg scas xchg xchg cmpsl lcall repnz fsubp stos loop in out call mov repnz hlt mov cli popf cld test ret clc mov mov into mov aam (bad) mov fdivrl and jb outsl sub sub jns push inc xor inc ss cmp cmp ds add insb add push cmp xor or and pop adc push js pop sbb jg jno push bound fs data16 push insb inc outsb pop jo jb je jbe js jp jl (bad) incb inc sub inc insl inc addr16 sbb dec sub xor push add pop xor pop xor int aam xchg movsl leave cmpsl loope lahf stos stc lods cltd scas ljmp mov mov xlat mov iret test xchg mov (bad) rcll in xchg stos cltd leave fwait rcrb xchg jecxz in out jmp (bad) mov popf repz sti (bad) inc lock lds lret out pushf iret adc mov fildl sbb adc insl daa dec sub dec sub xor cmp jo inc ds add push add push inc or fs push insl adc jo and insl sbb sbb ja jno bound sub push cmp jo jb je jbe js jp jl jle inc sub inc add dec or pop push xor push cmp pop imul cmp mov mull (bad) lods jecxz divb fbstp nop mov loopne movl mov xchg les ret pushf test mov mov and lahf ljmp xchg xchg hlt pushf divb cld int sahf rorb mov icebp lret int xchg pushf shr aam (bad) mov fdivl and and imul dec cs xor ss cmp dec cmp ds add add push push aaa or imul adc push push and imul gs bound pop addr16 add insb and jo jb je jbe js jp jl jle inc ja jp jo sub dec adc cmp push xor push imul sub mov call lods fldt jecxz jecxz mov aad mov xacquire mov les scas cwtl std lcall stos loop in out call mov test xchg repnz hlt (bad) mulb cld std iret mov (bad) test enter int3 loop mov aam (bad) mov loope xchg fsub fsubrp and bound imul sub sub cs add pop xor ss cmp ja jo or jno popa add push xor or outsb push pop adc adc fs inc sbb insb sbb push and push push and push das outsb sbb je jbe js jp jl jle inc and inc add dec sub cmovl dec jb insb push push gs pop imul mov in cmpsb shrl hlt scas xlat mov mov mov mov mov aam enter mov mov mov mov mov nop mov xchg rcrb (bad) sahf cmc loopne loop in out call fsubrp fdivp xchg repnz hlt enter mov pushf cld lcall les lret popf into test adc movsb fdivrs ficomp and sbb sub push outsl outsb xor js ss cmp bound ds cmp ss push push or xor push insb adc inc adc push sub and sbb adc adc push insb add jb je jbe js jp jl jle inc add inc xor dec je jbe dec jg push and xor pop xor sbb mov (bad) cmpsb lds shrl mov mov mov cmpb test xchg mov mov mov mov nop loope ljmp lcall (bad) loop in out call shr (bad) lock jb (bad) test std mov ret hlt lds hlt int iret loop mov in pushf xlat out (bad) fildll inc and and push sub push aaa push cmp dec cmp xor inc add dec or adc jo push pop push dec sbb pop pop and gs addr16 imul jae sub ja jns jnp jge jg inc das inc push inc jbe sub dec sbb dec add push xor push adc pop push pop add stc mov shlb aam subl out mov leave mov movl mov out xchg out xchg rcrl out test shl stos in out jmp mov mov mov not stc mov inc lock ret jmp xchg (bad) (bad) mov iret mov aad xlat sahf fldl2t fisttpl or daa pop sub sub adc or xor jb pop cmp dec add push pop pop or or cmovns arpl pop adc jnp dec sbb pop arpl addr16 imul outsl add jae jne ja jns jnp jge jg inc je add dec sbb dec sub push outsl push imul pop pop pop push pop xchg mov xchg cmpsl fsubrs subl lea xchg mov mov mov xchg into xchg rcll (bad) popf stos lahf mov in out jmp mov repz test std mov mov (bad) lods leave mov iret xchg roll xlat lahf fldcw fist and pusha and sbb pop sub inc xor xor add inc cmp pop add popa pop dec or or das adc cmp sbb push add and gs and imul push outsl xor inc jae jne ja jns jnp jge jg inc or or inc add dec cmp dec and push adc das pop adc sub pop mull ret test scas sub mov mov mov (bad) mov repz xchg mov mov nop cli xchg repnz (bad) xchg fstpl fistp shl mov ljmp nop repnz lods testb (bad) rclb mov int3 lahf into sti (bad) mov mov fdivs fiadd and es sub push sub cs xor jns js inc cmp je push ds add add push push or jge ja jbe jge jne and push sbb dec sbb push ja sbb fs push insb add push jo jb je jbe js jp jl jle inc es sub dec daa dec daa dec and push sbb cmp pop xor cs or aam xchg test stos fisubr mov mov mov mov mov int mov mov mov mov nop (bad) xchg mov cwtl jecxz ret pushf into sahf mul test enter mov mov out test mov negb cld sar mov test (bad) les lret (bad) into movsl rolb (bad) mov mov in fsub fidiv and es sub pop sub cs inc xor inc ss cmp jbe,pt jns addr16 push data16 push xor dec adc adc pop push je dec sbb sub sub bound fs adc push insb inc outsb or jb je jbe js jp jl jle inc pop inc add jne adc dec pusha dec cmovle or push cmp pop sub pop or mov leave cmpsb hlt test stos out ljmp mov mov mov aam int iret (bad) ret xchg mov mov mov mov nop (bad) xchg hlt xchg fcoms scas pushf int3 sahf mov aad out call aad xor repnz hlt mov mov cld mov stos rclb test mov into mov in shr aam (bad) mov fcompl and imul sub jp outsl cs xor je jnp jg pop cmp dec jns,pt inc add inc push aaa or and pop and jo pop sub pop xor jg dec cmp fs jno cmp or je js jbe arpl push jo jp dec sbb push pushaw sub fs cmp insb sbb jo jb je jbe js jp jl jle inc js jno push inc push dec push dec add cmp adc push sbb pop adc pop sbb adc xchg cmpsb ret test stos out jmp mov mov mov mov in lea (bad) xchg cmc mov nop ficoml icebp cwtl rcrb std loopne loop in out call mov repnz hlt fdivp xchg clc mov mov rolb nop enter int3 dec cli rolb (bad) mov lods fisubl and and jno insb sub bound cs xor ss cmp je pop or dec add dec push je js pop or push pop adc pusha adc push inc sbb dec sbb push ja pop bound fs xor push insb add jo jb je jbe js jp jl jle inc das inc xor sub dec add sub push adc adc pop sub mov ljmp lods in scas (bad) mov mov mov mov mov enter roll fisttp ret mov nop mov xchg mov pushf fistpl and out call fwait out xchg lock nop hlt mov cli xchg cld mov ret mov test or int3 cltd into mov aam (bad) mov ljmp and push and adc insb sub sub cs pop xor ja jne jnp jne dec ds add cmp push sub or or push jge das adc pushw jb imul sbb push jb add inc or push push outsb dec jo jb je jbe js jp jl jle inc xor inc jle popa dec daa dec sub aas push push jne cmp pop sub pop pop jns iret mov xlat test stos xchg lods lea (bad) mov mov mov fwait mov lock xchg loopne ljmp xchg in jmp sahf icebp loopne loop in out call (bad) out pushf lock cltd clc fwait cli mov (bad) inc shl lods les lret jmp mov aam (bad) in fdivr fidivl and sbb es sub jnp sub cs xor xor adc push cmp dec ds add add jo imul or adc arpl push pop sbb jbe js cmp bound fs popw push add jo jb je jbe js jp sub xor inc or dec outsl dec and push and push add pop das pop cmp mov andl lods (bad) fnsave mov roll cmc xchg (bad) aad nop repz loope stos xchg fcomps repz std loopne loop in out call sahf out xchg sahf repnz hlt (bad) negb cld (bad) inc shl lods les lret jmp mov aam (bad) in fdivr fidivl and sbb es sub stos mov inc xor ja data16 insl cmp push cmp jb aas add push movntps xor jp je imul sbb sbb add gs addr16 imul jno jae jne ja jns jnp jge jg inc fs sub inc cmp dec ja push push daa push es arpl pop xor pop shll andb lods fisubr fidivl lret mov (bad) add mov mov nop fcoml cmc cwtl ljmp loopne loop in out call sub lock repnz not clc xchg cli cltd cld mov pop cli ret stos (bad) movsl enter int3 (bad) into jmp aam (bad) cmpsl fsub (bad) fdivl and push add inc sub pop cs xor xor cmp dec cmp sbb outsl add jbe ja xor sub adc arpl push sub das and jge adc xor push add jo jb je jbe js jp jl jle inc das inc and aaa dec jb jno insl dec dec insl insl push xor imul pop cmp les out enter xchg mov mov mov mov fwait mov lock xchg (bad) divl xchg stos xchg stos cwtl movsb lcall fsub fsubp fsub (bad) aam (bad) in shr (bad) lock repnz hlt enter (bad) cli (bad) cld sar sar inc clc (bad) cli enter int3 lock repnz shr aam (bad) ljmp fsubp and push and sbb adc push sub adc or push xor or add ds add insl add push pop push or dec push cmp jp inc adc push das sbb jge dec push push pusha sub xor aas push push outsb sbb inc jb je jbe js jp jl jle inc add inc adc dec sub dec daa push pop push or push pop sbb pop cmp mov shll loop (bad) scas (bad) pushl (bad) mov clc (bad) cli test xchg mov mov mov mov nop mov xchg mov pushf in (bad) loopne loop in out call mov repnz hlt xchg mulb cld (bad) sar ret cmc mov or lret xchg into mov cli rcrb fsubrs ficomp and es sub cs xor push xor pop inc cmp (bad) (bad) pop add sub cs jo dec or pop push inc adc pop adc push pop sbb push sbb push push pusha push bound pop addr16 ds insb movd add je jbe js jp jl jle inc xor inc es jno jp cmp aas push popa push adc push pop imul pop and movsb ljmp lods xchg (bad) mov mov mov jmp (bad) mov loop mov mov cmpsl xchg xlat xchg sti xchg rcrl stos sahf aad (bad) loop in out call mov repnz hlt mov cmp cli (bad) cld std iret xchg scas ret xchg (bad) cmpsb enter int3 movsb into mov aam (bad) (bad) fsubr fimull outsl and adc sub sub cs add xor jno dec cmp or add cmp or outsb push push adc and push and jo pop sbb push and push sbb adc push insb pop outsb sub je jbe js jp jl jle inc ss sbb pop dec push dec pusha dec cmp push insb push push gs push js adc sub xor movsb xchg cmpsb les (bad) fidiv mov fadds test iret mov mov nop movsl xchg in cmpsl xchg ret cwtl mov rcrb loop in out call stos out fdiv xchg repnz hlt enter lcall rorb mov lock pushf into mov aam (bad) mov fsubr fsubrp and and sbb sub inc sub sbb jl push xor ss cmp push cmp data16 add push insb or pop or push cmp adc push sub and sbb xor sub push inc outsb cmp jb je jbe js jp jl jle inc ss ss and dec je jbe dec into into xor sbb push pop pop aas pop push pop imul movsl jecxz jecxz fsubrl (bad) mov mov mov mov mov sarb mov movl rclb out xchg ret fstps nop jecxz in out jmp mov enter mov mov sti mov sarl mov int iret shl mov nop aad xlat repz fucomi (bad) fist and and imul push sub pusha xor push aaa jle push cmp add cmp add dec or ja pop adc pop popa sbb dec sbb push arpl add imul adc sub jne ja jns jnp jge jg inc sbb inc aaa inc addr16 jae add dec sbb push add push adc pop pop insb pop repz into cmpsl cld test imulb std mov mov mov xchg into test mov xchg ficoml lcall stos lahf mov (bad) jecxz in out jmp (bad) out mov xchg repz cmc xchg (bad) (bad) stc enter lret ljmp lds lret popf int iret test xchg rcrl fldcw fildll and pop sub dec das or jne push xor adc aas push add insl add jge inc or js inc adc sbb cs adc gs addr16 or pop insl daa outsl sub jae jne ja jns jnp jge jg inc or inc xor dec ja dec jl dec xor push insl push adc pop cmp pop add in mov shll sahf lods fisubr sti mov mov mov mov add testb (bad) aam les jecxz scas cltd rcrb movsl loope jecxz in out jmp shr lock fcomi test stc mov ret idiv shll enter mov cld iret cltd (bad) mov cmpsb aad xlat in fldcw fisttp pop and daa inc sub inc sub jl push xor cmp cmp inc add dec pop cmp jg bound arpl dec adc dec sbb sbb sub add addr16 imul jae jne ja jns jnp jge jg inc adc inc push inc and dec sub dec or push push bound cmp pop bound pop lock ret test (bad) fidivl lret mov loopne testl divl xchg stos xchg stos cwtl movsb lcall fsub fsubp fsub (bad) aam (bad) in shr (bad) lock repnz hlt enter (bad) cli (bad) cld sar sar inc clc (bad) cli enter int3 lock repnz shr aam (bad) ljmp fsubp and push and sbb adc push sub adc or push xor or add ds add insl add push cmp imul or push xor bound arpl push jns cmp push pusha or add push insb sbb jo jb je jbe js jp jl jle inc and inc sub dec sub dec sub push aas push daa push js and xor pop cmp mov aad fildll ret mov mov mov mov mov fdivrs in test xchg mov mov mov xchg jmp loope mov pushf (bad) sahf lock loop in out call xlat out xor nop (bad) int3 clc (bad) cli sahf cld test mov in ret mov cmpsb enter int3 stos into mov aam (bad) mov fdivrl and es sub adc cs xor xor xor ss cmp cmp cmp add arpl jno cmp pop cmp and and popa daa jge outsb sub jg inc xor ja inc aaa add dec cmp add add pop pop or xor inc adc sbb sub adc add addr16 imul jno jae jne ja jns jnp jge jg inc inc jb inc adc dec push dec or dec push and push and pop cvtdq2ps pop insb pop fsubs ljmp lods fldcw mov mov mov enter lock rolb out mov mov nop sti xchg std xchg call out pushf aad std loopne loop in out call sub lock repnz hlt mov movsb clc leave cli mov lret (bad) mov xchg (bad) hlt (bad) xchg enter int3 (bad) into adc sarb fdivs ficomp and es sub cs xor xor ss cmp insl ds add add push arpl jp inc or push pop adc adc js jle push sbb pusha pop bound fs pushw push xor sbb jb je jbe js jp jl jle inc and inc add dec jg aas dec cmovle push ds adc aas pop xor pop or mov out jmp lods shrb mov mov mov in fiaddl mov (bad) mov mov mov mov xchg std xchg fstps fcomps movsl in out call scas out (bad) lock (bad) hlt ret mulb cld (bad) rolb mov mov into mov aam (bad) xchg fdiv fidivl and adc imul pop cs xor sbb inc ss dec cmp inc ds add xor push outsl or jg insb push inc adc dec adc push sbb jp sub bound xor adc insb and and jb je jbe js jp jl jle inc sub inc ds and dec pop dec js arpl push aaa push aas pop cmp pop fs cmp shll pushf lods cld scas call mov mov mov mov in or cmc test mov nop out fstl lcall mov xchg in out call fwait out fcomip lahf repnz mov xchg clc (bad) cli xchg cld pushf decb cld (bad) scas enter int3 mov sarb fsub fcmovu in test and jo sub pop sub cs xor gs ss pop cmp imul cmp jo xor ss aas inc adc push adc push push sbb das sbb push sub fs push insb pop outsb cmp jb je jbe js jp jl jle jno inc and jb pop dec and push adc push insb push sub pop and push mov ret cmpsb mov nop scas xchg mov xor cmc mov mov mov out mov loope mov ljmp (bad) hlt xchg clc xchg stc xchg loopne lods cltd cmc fwait aad test mov shl xchg add add add dec inc add add add add or add jbe xor xor add add add add add and add or add push je imul add add and add add and dec inc add add add and outsl bound add add add push adc add add add add add add add dec add add add add add add add pop add add add add add add add add add add add pop add add add add add add add add add add add add push add add add add add add add add add add add xor or jp xor or mov xor or mov xor or lret add add add add add add adc add add add xor push add add add add add add add add add add add add add add add add add adc add add add add add add add add add add add add add add add sub jns xor push add add sbb add or sub add add add pop adc or add add add xor or in or add add or add add arpl outsl or add stos or add add or or add add or or add mov add add or or add or cmp pop or jae dec or add add int3 or jmp add push aam or sbb add dec push or addr16 dec push or jne aam or xchg push mov add add add add add add adc xchg add add add add add add add add add add or add add add add add add add or add add add add add add add adc sub xor popf add add add or or add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add sbb adc inc or adc push or adc add add add xchg popf add add sbb add add addl add xor add add xchg mov add add add addl add sub add add addl add xor add add xchg pop add add add add add add add add add add add add add add add add add add add add add add and addl or lock xchg insl add or dec add add addl or pusha add add addl or add add add add add add add add add xchg fiaddl inc add add sub add add add add add add les add add add add add add mov add add dec cmp add add add lods cmp add add add sbb xchg rorl inc add mov add add mov add add aam add add xchg pop or adc test add add xchg adc inc add faddl add add add in add add xchg or adc mov add add add cmp add add xchg inc or adc push inc add add xchg dec or adc sbb add add add movsb inc add add xchg jbe inc add push add add sbb add add add insb dec add add xchg addb add je add add xchg mov inc add cwtl dec add add xchg mov add add add cmp add add add inc dec add add xchg add or add add add xchg daa or pop add add add add xchg aas or pop add dec add add xchg dec or pop add dec add add xchg addb add add dec add add xchg add add dec add add xchg mov add add add xchg ret add add push add add xchg leave or pop add add add add add push add add xchg in inc add add add add add add add add push add add xchg and inc add add add add add add add add add add add add xchg or or push add add xchg or or add add xchg or or push add add xchg or or sbb loopne add add xchg addb add add push add add xchg sbb add add or add add adc add add or add add adc add add or add add adc add add or add add adc add add or add add adc add add xchg add add adc add add or add add adc add add or add add adc add add or add add adc add add or add add or add add or add add add or insl add dec add inc add addb add xchg dec add xchg add dec add add add jns and mov dec add inc add addb add push add or addb add ja inc add add add add lret add popa add add dec add add pop add add add add add xor add add add addb add xor add add add add add (bad) add pop add add add add add add add add add add add add add add add add add add add add pop add add add add je mov add add add add add add add add add add add add add pop add addb add add add add push add insl add addb add add add add stos add mov add add movb mov and add lods add add push lds xor xor lret add add add mov mov add add pop add add add add add add add push push mov add mov add push mov flds loop je add icebp push mov or incb mov or adc mov add pop pop mov or sub mov add cmp mov and inc pop mov flds push pop je add popw mov add je mov or xchg mov dec add add add add add fadds cmp fiadd pop add clc pop pop add add add mov or and add fild pop add add mov mov add add mov add add add add add mov add lock add or cmp addb add cmp add loopne push add add pop add add add add or jns add add pop or or or add cmp addb add in or add add or add add cltd or add add add add add add add add or addb add add add add add add add add add add add add add add lods add add add add add jns add add add add add add add add push add jns add jns cs add add lods add add ret add rolb add rolb add rolb add pop add rolb add add mov scas add add add pop add jmp cli add add add add add jge lea pushf add add add add add add add add add add add add add add add add add add add add or add add or mov or add add or add add add add add add add mov add add addb add or add add add add add add add add add add add add add add add add add add add add add add add mov add add add add jb jae outsb cs add jb jae outsb add jae gs cs imul inc outsl jb jae insl jae outsl jb imul gs add jae gs cs jb ja outsb add jb jae outsb cs jb jo jb imul outsl jne arpl jb,pn jae jne arpl add jae jp cs jb jo jb imul outsl jne arpl add gs jb xor inc outsl jb add insl jo outsb outsb je add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add arpl outsl js add arpl outsl js arpl bound outsl js add insl bound outsl js insb popa bound xor dec popa bound add gs xor bound je outsb xor je outsb add je outsl outsb add je outsl outsb aaa add insl bound outsl js add arpl outsl js add arpl outsl js xor je js inc outsl js xor push gs inc outsl js arpl bound outsl js xor push popa outsb outsl insl add je add outsb push insb imul xor add arpl add js add outsb jae insb add imul jae inc pop js push push imul dec fs dec inc add ja inc outsl jne insb add jae ja dec imul inc jae gs bound push jns je insl cs gs arpl outsb add add insl bound outsl js pop push gs inc push add outsb je jb jae jae outsb fs add jo imul add imul inc outsl js pop push gs arpl dec outsb fs push add insb insb popa bound xor inc js add jb add push jo pop outsl inc inc push add xor xor jns add arpl je outsl outsb add popa outsb add je dec gs popa add jae popa addr16 outsl js push push imul jae insb je push addr16 inc jno push inc push add outsb je outsl insb add je push gs add jb xor outsl popa add jne add je imul outsl jb dec jae outsl push inc pop add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add je bound arpl fs jb popa jns arpl bound outsl js pop inc jb jo outsl ja inc insb outsl jae add gs xor push gs inc push add popa push dec pop push arpl outsl js pop inc insb imul gs jne gs push imul jae add insl bound outsl js pop inc insb imul pop push gs add jb outsb add outsb arpl add je outsl js xor gs inc push add jae push inc push dec push jne add je outsl outsb ss push gs inc push add imul insb add jo jae add jo jae outsb add je inc insb insb outsl ja jb jo jae je inc jne outsl push imul pop inc push insb imul je outsb je insb imul add je inc push add je inc push je je add arpl je je add jb outsl jb add je inc gs jne je inc jne jae jb jae je inc jne jae jb jae je inc outsl arpl inc outsl arpl je insb add je inc outsb popa bound add je outsl outsb inc popa jae add je inc insb popa je je insb add popa je je insb add jae gs inc outsl insb outsl jb add je dec outsl je jb arpl inc outsl insb outsl jb jae je inc outsl jb inc outsl insb outsl jb push outsl imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs inc insb imul pop push jae push imul jns gs popa arpl outsl insb outsl jb jae je push imul inc jbe outsb je popa outsb fs gs popa fs inc insb imul pop inc imul jae je inc popa arpl outsl insb outsl jb jae je inc jb jo outsl ja dec imul je inc jb jo outsl ja push je insb add insl bound outsl js je insb add je inc jb jo outsl ja push imul pop inc outsl outsb je outsl insb inc popa jb inc popa jb add je dec je insl dec imul je dec je insl jae dec bound arpl insb insb arpl outsb add push arpl fs popa outsb add je push outsl jb gs fs push gs arpl dec outsb fs push add fs push gs inc push add je inc jne outsl inc insb insb imul gs inc gs imul pop inc outsl jb gs je insb add jb gs je insb add je dec popa jbe outsb fs insb jne push pop inc jb imul imul imul pop push imul je dec outsl dec outsl jbe push gs add je dec outsb jne gs add je dec gs jb outsb add je push gs arpl jne data16 je dec outsb jne addr16 push popa insb gs outsl insb fs jb add je dec outsb outsw add fs inc jb jo outsl ja inc insb outsl jae add je dec outsl dec outsl jbe dec outsl jb jp addr16 push arpl insb insb inc popa jb addr16 dec outsb popa arpl gs outsl jb gs addr16 inc jp jb add je outsl js popa jae add je inc arpl gs popa jo imul pop dec popa js outsb addr16 add je push gs fs outsb insb jns dec outsl jb jp outsb je insb inc insb imul add je push jae push jns je insl push popa jae ja jb inc push gs push outsl jb push jb jo addr16 inc popa jb dec jb outsb add je inc jne je outsb push push add je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add fs dec outsl popa add jae insl gs popa jns jne add jb outsl jb dec popa jns jne add imul inc outsl insl jo outsb outsb je jne push push dec dec add imul push js add outsb add dec pop push outsl push add dec je inc addr16 dec imul outsl jne imul outsl ja jb push imul inc add outsl jno pop popa add dec dec imul inc push inc add inc inc push gs popa imul gs fs imul inc pop dec dec ja push add dec inc inc jns pop add data16 outsl jae insl push dec push imul jns imul inc dec jns inc jae outsb add dec dec data16 add inc push jns dec pop add dec dec fs dec addr16 dec add popa fs gs inc outsl outsb jae insb gs gs outsb outsw add push jns jno inc add outsl dec arpl jo dec inc outsl dec add imul arpl pop insl imul dec jo dec jae dec outsl add outsl jae push push dec dec jne push inc add fs arpl outsb js jp jns push push push push dec add push push outsb imul pop inc outsb je jns outsl imul push outsw add je outsl fs popa jae add jbe imul popa fs gs imul pushw imul add bound data16 push arpl add gs pop inc data16 dec imul push bound pop ja dec inc add pop addr16 inc dec inc dec add outsl addr16 insl add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add imul push inc je jb bound add jns dec dec inc insw add push outsl dec inc arpl jns insl dec fs gs push push dec outsl dec dec inc add pop insb inc push dec dec imul pop jo jno push add je dec popa jae popa insb jne add je popa insb jne dec jb gs jne je gs inc dec outsb pop dec dec imul dec dec popa add popa pop push push push add jae jne arpl add jb jae outsb cs jb jo jb imul outsl jne arpl popa outsb add jae jne arpl jne je jb add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add data16 outsb arpl jno popa insb jae push jns add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je inc jae gs bound addr16 push gs jne arpl popa outsb popa addr16 addr16 inc jne je jb add je inc jne je jb add insb jne add imul jae bound je jb bound add imul jae bound je je add insb je jb add insl jo insb gs outsb gs je fs je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul bound addr16 outsl outsb push jae jb outsl fs je jb bound add jae gs cs imul imul gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs push gs imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add popa jne je outsb jae popa outsb arpl push gs imul add outsb arpl outsl outsb imul arpl add popa jne je inc jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound jb fs popa jb inc je jb bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound gs jb jo imul imul jae gs bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound imul imul outsl insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add jne addr16 bound je jb bound add jne imul jae add add adc inc add jne push add push add add push add jns push add imul add add add add add cmp add push add add add add add add add add add popa add add add add add xor popa add add add jae cmp add add add xor xor popa add add add add xor jae xor add add add xor add xor xor data16 adc jne add outsl add arpl jno dec add cmovnp jae js dec add jno pop add pop dec add add bound outsl add outsl add add add jne imul add arpl dec add popa add add inc add inc add jne inc add pop add jae pop add popa add pop insl add jb add popa add add add js popa add dec add add inc add push add jns add arpl push add inc add js xor add inc add add jb add add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add push add inc add add add add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add push add inc add add inc add imul pop outsl add jb insb add cmp insb add push add dec add inc add data16 xor push jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul add outsl add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add add jb insb add cmp insb add push add add add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add push add inc add add inc add imul add inc add add outsl add jb add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul push jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add push add inc add sbb jb insb add cmp insb add push add dec add inc add add add jb insb add cmp insb add push add dec add inc add data16 data16 arpl dec add imul jb pop add push add inc add add inc add imul add inc add adc push jb insb add cmp insb add add outsl add jb insb add cmp insb add and push jb insb add cmp insb add push add dec add inc add data16 data16 adc outsl add bound outsl add outsl add xor add bound add add or add je add bound add add adc add add outsb add jae add bound jne je je outsl add xor add bound jne add punpckldq jne je je outsl add add or insb add arpl imul punpckldq jne je je outsl add aaa add adc add outsb add add add daa dec add push add push add inc add dec add add push jns dec add inc add inc add pop dec add push add push add inc add dec add add push jns dec add or add jo add add push add push add inc add dec add add push jns dec add inc add inc add bound xor inc add dec add inc add pop add inc add dec add push add pop add push add add jae cmp add dec add push add push add inc add dec add add push jns dec add inc add inc add add dec add push add arpl add jo push add inc add dec add add push jns dec add inc add inc add bound xor inc add dec add inc add pop add inc add dec add push add pop add push add add jae cmp cmp inc add add add push add push add inc add dec add add push jns dec add inc add inc add bound xor inc add dec add inc add pop add inc add dec add push add pop add adc outsl add bound outsl add outsl add cmp add arpl push add inc add js cmp add add imul add js xor xor add insb add popa add adc add je inc add js xor xor add add je add imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add add outsl add add pop imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add add push imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor add imul add xor add data16 push add add imul add xor add add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add sub push add xor add data16 push add popa add pop add jne insl add push add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add and outsb add add data16 push add popa add pop add jne add outsb add add data16 push add popa add adc push add xor add data16 or push add xor add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add pop imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add sub push add xor add data16 push add popa add pop add jne insl add add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add add outsl add adc push add xor add data16 add imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add add imul add xor add data16 push add pop imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add and push add xor add data16 push add popa add pop add add imul add xor add data16 push add popa add pop add cmp outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add pop imul add add imul add xor or outsb add add daa imul add xor add data16 push add popa add pop add jne insl add aas imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add arpl push add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add add outsl add cmp push add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add inc imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add xor outsb add add data16 push add popa add pop add jne insl add push imul dec add add popa imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add push add xor inc add add add add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add add add outsb add add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add aaa imul add xor add data16 push add popa add pop add jne insl add push imul dec add add add imul add xor add data16 push dec imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add xor push add xor add data16 push add popa add pop add jne insl add push imul dec add dec imul add xor add data16 push add popa add pop add jne insl add push imul dec add add inc add add push add jo inc add add add adc insl add outsl add outsl add xor xor add inc add jb insl add add rsqrtps push add add inc add add imul add ja dec add jns add inc add inc add add dec add inc add jns add bound bound outsl add pop add imul add sbb push add add dec add add add arpl add push add ja jae push add add add outsl add add js add pop add dec add inc add inc add dec add adc push add popa add push add pop add add dec add bound pop add sbb data16 pop add dec add push add push add adc add data16 add push add add inc add add pop add push add add pop add pop add inc add push add dec add jo add add insl add push add jno jns add data16 pop add pop add inc add sbb dec add dec add push add dec add jo dec add pop add sbb dec add data16 add outsb add push add dec add add arpl push add inc add add jae jns push add add push add add bound jp push add adc imul add dec add bound push add add ja inc add outsb add dec add jp arpl inc add add dec add push add outsb add inc add outsb add inc add add inc add jp dec add pop add add push add add sbb push add imul add popa add data16 jne push add sbb inc add jne inc add insl add pop add dec add outsb add sbb jns insl add add push add add push add push add adc push add push add imul js add inc add jae popa add imul jb outsl add add je imul add inc lret popf push call pop push sbb mov mov pop jg aad cmp push adc add adc add adc add adc pop or or or pop push or sbb or add or add or pop add add add sysret or push push or add or xor add adc add sbb cmp add add adc add or pop or add inc add add add pop add add add pop pop adc add adc or or or sbb adc add add push adc push or pop or or add add adc push push add add adc push add sbb add add push add or or or add adc add add add pop add push push push adc push pop or or inc or add add add add add add add add add add gs imul and add jno and add jne and add jge add adc add addb or and add orb orb add sbb and add adcb adcb cltd add sbb and add andb subb lods add push push pop or or or or add add pop or or or push or push pop or push or or add pop or add or push or add or mov pop or or or adc adc adc or pop add push add push or or or push or add add adc push or push pop or or add pop or push add pop push add pop or add add or femms or or or add add pop or or or or add push push add or or or or add mov pop or pop or or push add pop adc or push or or add pop adc push or push or add sbb add pop or and or or femms or or push or and or sbb or add or push or add mov sbb sbb add add or pop pop push or or add pop or or pop or or or or or or add pop or push add or add add add add pop or or or or push or pop or add or push or add or or or push pop or add add add pop or or add add or or or or push or adc adc add or and add add add pop push or or or or or add pop or pop or or add or add push adc push adc adc pop add sbb add adc add add xor push adc pop add lds lds add add add or adc and add adc add add add add add lds push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add push adc pop add and add adc add adc add add and add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add add add push add push jb jo outsl outsb inc js gs imul ja add add or add add or add pop outsl jb jae outsb add pop add adc jo jb addr16 and xor xor add sub add xor cmp popa xor xor sub sub sub xor cmp xor add or add xor xor xor xor add and add andl add add add js add mov add add add xor add add add add outsl jb js dec popa imul jb gs insb add add add and 