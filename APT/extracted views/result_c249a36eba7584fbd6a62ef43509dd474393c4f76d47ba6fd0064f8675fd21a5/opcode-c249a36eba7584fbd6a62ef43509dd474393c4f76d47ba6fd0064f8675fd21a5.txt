shl movsb inc out (bad) loopne fcmovnu (bad) idiv sub pusha adc daa sub xchg xchg dec int3 dec lods ret out in fsubrs sbb mov xchg (bad) dec mov and xchg test pusha mov sbb cwtl or out jbe roll dec popf pop jns and xchg arpl stos push aam mov xlat clc push adc jb cli xor and xchg jmp lea inc test jno lret jb dec loope mov xchg cmp mov xchg inc andl xorb mov xor inc inc (bad) in les cltd insl mov aaa push and cmp hlt popa popa inc iret nop lods xorps add mov jbe pop mov mov push push fbld add inc mov mov arpl push leave cmc out lret jnp add addb leave xchg mov inc mov pop pop popf pop in jbe in push movsb adc into push in cmpsl cmp imul icebp add pop ja call jge pop push or imul lods jg mov cltd movsl cmp int cld into adc hlt adc call xor in sbb pop mov inc inc pop loope mov js lock push jmp out cmp adc das xchg xor mov push xchg or test jns sub iret (bad) stos out fwait inc xor jb xchg and or fcomps adc out sbb inc push addr16 shrl aas addl fldl daa shrl fs lods fisub ret xchg arpl rcll ja inc js dec out sahf sub ret dec xchg xchg fisub xchg and data16 divb pop and pop jb out jno fstpt test in pop xchg mov jbe icebp (bad) and inc fcoml jbe lcall orl sub out daa sub sub and inc sub cwtl ficom ret mov cltd push lods cmpsl pop xchg lret movsb and inc pop jnp add fsubrs or cmp pushf cmp outsb xchg js push jecxz int3 jns inc cmpsb enter mov (bad) dec and mov call (bad) leave test fiaddl jl cld in lods fistpll mov outsl xchg jnp mov imul movsb push lret pop repnz add cwtl movsb stc cli bound sub sub mov adc lahf sbb mov (bad) or xchg xor subl xchg (bad) out loope push pop out mov push loop clc push push jns repz jno push pushl std (bad) int3 icebp arpl and pop sub cmp mov ljmp mov adc cmp (bad) and fimull ds sbb aas add xchg push adc pop add push out out adc jp sub sub pop flds lahf cmp vminss cmp push in sbb or int adc or jae cmc fisubl int3 stos dec cs inc jb or and xchg jb jp cmpsb test xchg cmp (bad) mov fwait or or inc push das mov sbb (bad) mov mov insl movsb inc cld (bad) scas cmpsb push sub push fstp dec adc jmp mov sub rcr ret cwtl inc mov dec xchg pop les lock push and inc and pop xor loop lods mov movsb and add lods dec (bad) cmc fmull sti push js movl movsd sti xor pop adc loope pop enter cmpsb js sub sahf loop std push push and pop dec mov xor (bad) (bad) rorl rcll out les xor mov pop xlat mov loope pop ja xor rcrl fisttpll xchg outsb xor inc jno add jns cmp sbb jge push mov pusha xchg test jb test cmp (bad) push pop push cmpl fwait lods test cmpsb xchg mov lret iret mov rolb pusha add (bad) std clc aas sar push int3 dec cmp data16 add jge in jge pop pop push dec add pop fsts (bad) mov in adc frstor or aad mov or test xchg aas (bad) jge sub inc xchg and or xchg enter rcll mov popa and pop mov sub dec test mov aaa mov mov dec movsb scas or fisubl sub dec popa xchg sub xchg data16 sbb cmpl mov sbb xchg pop inc pop (bad) (bad) cld mov arpl push cltd pop mov std pmuludq dec inc mov jecxz and lahf push lret pop jg mov jo dec xchg and fcomps inc xchg lret lcall (bad) lret (bad) out push mov xchg mov ret mov cmp fnsave stc mov movsl add sbb fcmovnu mov adc (bad) jmp stos jecxz adc push xchg mov mov jge je cmp jnp jge test in cmc (bad) hlt cmp stos mov movsb cmpb sub jbe sarb inc add inc gs pop mov push lcall sub shr cmp stc mov ja adc xor push jp (bad) or dec xor fchs jmp test aas dec addb sbb out ljmp sbb jp iret mov ret xchg pop pop (bad) es imul pop xor xchg mov in dec loopne movsl mov out fistpl pop shrl mov stos push cs pop mov mov and repz sti lock and jg or test outsb dec pusha sti ss (bad) incl xchg fcmovbe addr16 pop mov add fisttpll fldcw hlt inc xor imul (bad) rolb daa loop cmp mov test fdivs in lret xchg bound dec loope insl sub mov out and pop inc mov js iret add test (bad) cmp jne imul xor test or adc out push pusha sub mov in pop fwait push adc imul jecxz adcb xchg ret adc js fwait imul mov lods clc cld xchg mov xchg scas or into hlt cld into fs mov ja mov test mov das ret dec jle icebp mov sbb mov xor test int3 adc xchg mov aaa add pop or mov push xchg testb push adc out xchg cld xor or (bad) out xor cmpsb push cmp xlat mov (bad) outsl aad push pop sub xchg mov gs mov jb cltd loope mov xchg and mov sahf enter rorb repnz fsubrp xor lahf pop mov mov xchg and push daa lahf rcrl pop addr16 js push inc xor nop mov sbb inc mov loopne or dec sbb movsl repnz mov or jno mov repnz mov int mov inc xchg and cli xor enter push push dec insl je imul ss push popa push cmp sub lds je mov lea in sbb ljmp pop arpl pop sqrtps mov pop and push dec je and pushf jge gs mov cmp cld cmp sahf enter pop (bad) or jl jbe and lds mov and lds pop sub lret dec mov outsb fidiv push or mov add cs aas jo in popa jp xor in mov or not (bad) add and sub dec inc fwait (bad) dec dec mov fsubrs lock (bad) jns rcr dec xor push or mov push jbe das ljmp pop pushf pop lcall mov leave ret sub fildll sbbl inc inc test js sub sub cli les lods lret jp rorb add xor push data16 pop cmp sbb insl push enter add sbb mov inc fstpt cld ja adc lret lods fcmovne xor mov std std test cmc aam adc negb xor jl in out xchg lret fs mov pop jne adc js or sub lods xchg ss xchg xchg movsb sarl sub inc into cmp xor xor out js xor ret push pushf insb cltd outsb dec ret fs iret aad fldenv mov rorb pop and popl sub dec cmp (bad) out sbb jo xor mov pop add jge push xor add add or and (bad) pushf adc scas cmp inc cmpl scas pop inc mov xor push sbb or or (bad) loopne adc aas fnsave mov enter push cmc sub xchg fwait xor mov lahf mov ret icebp out repz (bad) psllq in scas cld dec jecxz push or insb push call arpl mov cmp or imulb aad stc (bad) or push jl xchg jo test inc out jmp pusha pop and shlb sub push ds inc ds mov xchg cmc (bad) push sahf dec push out xchg ss movb (bad) divl and mov push xor mov cli xchg sub (bad) shlb in jmp and scas out inc (bad) repnz mov mov sti aam adc mov mov dec lea sbb ljmp fs jg add shrb sbb sbb inc xor test push int3 cltd pop scas jns lret dec repz imul cmp stos cld sarb dec rolb fwait fs xchg xchg dec cli push out cld jg fadd pop sbb call jnp jge addr16 orb xchg addb orl pop out (bad) call dec in push sbb ja sarb sti add aaa je aam (bad) stc xor out and dec ds repz cmp ficoml in xor xchg mov jo mov ret jmp ds roll shlb and sub lea les adc (bad) je je sbb xchg pop daa cmp inc pop sti cmp pop lret inc lea (bad) daa fldcw movsl inc test popa xchg adc stos xchg push outsl mov movsb aad xchg sarl mov pop adc push sub sbb sub pop in adc stc jbe (bad) add xchg in and mov fimul pop adc pop xor xchg pop mov xchg fisttpll dec loope dec iret ja pop pop inc pop sarl xlat hlt pop es lods sbb sahf iret inc sub push jae sbb insb ret or or mov adc xchg pop aaa inc and or imul lret aaa or outsb push das es mov push mov and lret xorl mov and fisttpll push out push cmp mov icebp icebp popl movsl push pop fucomi add ja inc jg cwtl pushf into sub push mov adc add mov cmpsb adc push sbb test sub or iret push sbb jno push adc xchg in icebp out mov adc mov aaa add inc sub lret push popf mov xor sub ja jno loopne mov out or jg sub data16 test mov (bad) jge jo push jg pop sahf loope sbb xchg insl mov mov or sub jl repnz mov inc mov sbb mov rolb test outsb pop (bad) popf xchg push dec pop mov jo dec (bad) mov push iret test jbe xor mulb mov ret jecxz cmp movsb (bad) jmp cmc outsl adc mov sbb lods aam sti lret xor fisttp inc out add xor hlt mov js subb xchg scas jp push fimull jge testb int3 cmp push and xchg push sub adc mov aad lea sahf dec ret inc aaa sbb jg mov ds push sahf and cmc and and or sbb in add pop loope enter std xchg sbb sub xor mul stos inc or xchg jo xchg xchg adc out xchg jl movsb jl push pusha fwait mov push (bad) hlt sub mov scas add (bad) jnp cmpsb push push lcall stc pop inc leave sbb (bad) std testb add push jns cmp pop fs insb mov imul cmpl pop pop jb imul cmpsb xchg popf xor push ret push dec sub dec pextrw jno in xorb (bad) and or push test inc fsub int push push cmp xor and and jnp cltd test scas mov (bad) dec pusha push and sbb aad outsb add mov ret xor inc out adc mov rol negl or pop xchg jle mov jecxz imulb dec mov inc jb and lret rcrl das sbb fcoms xchg rclb rcrb daa adc negl rcll inc mov gs mov inc sti jmp dec add mov daa push dec xor mov pop (bad) pop sbb dec cmp scas jg aaa jns jmp hlt sub mov adc and stc inc sub sti mov push movsl testb push mov arpl sbb int push sahf gs mov push mov mov inc sub dec mov xchg pmulhw and cmp scas in adc subb push jae and pop (bad) push cmp (bad) hlt hlt dec xlat jns adc push jne cwtl out push (bad) xor pop dec sbb popf je imul mov jno rol repz mov and mov stos (bad) jge or add movsl cmp lds mov xor (bad) sbb test push (bad) jg pop xor and sbb (bad) notb lods sarb fdivr out lock movsb in (bad) sbb fdiv mov lahf jno dec cltd jbe mov cmpsb sbb xchg aad jbe and mov lret add add fidiv pushf int mov fwait outsl mov cmpsb stos mov sub rorb inc lahf sarb or mov fldcw cs jnp imul scas mov aam enter (bad) or mov idiv and and mov test mov mov pop xchg in mov into mov mov je xchg xor mov ret sahf fdivr dec push pop sub mov cmp mov cmp imul sbb aas iret dec sub cmp gs sbb dec (bad) mov div xchg jge sbb sahf add fidivr dec sbb bound rcr push testb push xchg imul sahf sbb rcl out test (bad) repz ret mov nop add outsb ja in pop inc vpmaxub add into sub lock pushf mov orl call adcb flds jo inc (bad) cmp icebp push jl out sub call dec lahf mov cmp out and cmp scas push mov int jl adc mov into (bad) push lret aad xor and sub add out fs add jmp sbbl fs jg or mov imul in cmpsb ret sbb scas add xchg inc mov jbe sbb cli jmp roll leave cmp xchg sub adc sbb pop ljmp jne push lea xor xchg ja mov shlb mov fldl2e ss xchg cmp sub pop mov pop cmp rcll push cmp sahf xchg adc outsb inc leave rolb les jle push out jge (bad) out xor popa xchg dec js (bad) lea xlat mov mov mov or sti inc aas in fisub cwtl cmp xchg mov test int sub (bad) xor push mov jne add or sbb mov loop shrb movsb incb and inc mov call dec xchg (bad) push mov andl cs lcall dec out dec stc jp or loopne jg jbe roll push (bad) pop dec xor nop dec fs ret mov sbb scas test shrl scas sub push loope jle lods (bad) incl pusha dec scas movsb insb (bad) jb test jl or jne jb add sti sbb mov outsb imul add xchg mov sar mov push push cmp iret add jbe pop dec jle insb int adc mov push lret and adc aad outsl add arpl mov sub and dec xor lods stos fcomi pop test or js ja sub xchg movsb negb jg push dec sbb pop lods mov jle fbld jecxz enter jbe mov test mov pop sbb iret int3 stc ret sub xor xchg sub in mov jnp insl enter jle loopne jbe popf insl adcb sbb shll xchg enter jne push xor mov xor aam sub push add es sbb roll adc leave mov outsl sahf add and and inc stos adc das dec cmpsl sub cmp stos jl sub aam cmp (bad) fcomps je (bad) jge outsl mov fsts in insb mov mov aam ljmp adc cmpsb test cwtl (bad) int daa mov xchg iret aaa jmp adc rcl push out push jmp fdivrp mov pop xor jo fmull sub add leave push inc dec daa (bad) ds pop icebp xor in iret mov cwtl jle sti lods inc das enter insl adc hlt lock jb dec push pop dec loop mov insb popf loopne xchg pop or dec pop test bound decb inc xor sub jb xor mov pop mull aaa pop daa dec xchg sub push gs jge outsl add ror xchg scas push lcall lods add ja mov push lret hlt lods push dec punpckhwd outsb push test fiaddl dec or jp movsl out flds inc aas (bad) aam ljmp dec mov clc jbe sub push rorl pop xchg scas inc out int3 enter and movsb mov sub sub aam sarl frstor cmpsl lds cltd mov sbb jmp jb cmp pop lcall cmp data16 xchg mov nop cmpsl cmp mov dec inc add mov xlat cmc scas sbb out pop xor orl sahf ror mov loop test loope es push xchg repnz or mov jbe repz in adc and cmp sub scas mov dec or nop adc in sahf ret mov xchg (bad) xor xchg add lds cmp mov sbb mov sbb sub (bad) pop popa ret push out int jge loope outsb insl sbb lea arpl pop insb shrd cmp inc push mov gs sub xchg push fsubl sub and lahf mov dec xchg push hlt dec test repnz repz sub je ffreep sub push and popf imul xlat popa das xchg mov xlat in out xchg es pop daa cmp rorl lds push (bad) bnd ds cmp dec dec and push (bad) rcll (bad) lock mov dec and mov pop and mov mov mov xor in and scas mov arpl add aam or rclb (bad) repnz out xor jl push sti xor repnz xor pop jl sahf jp pop sbb sbb sub mov jno inc add insl (bad) sbb xchg mov cmpsb pop icebp rcrl xchg fincstp pop in or (bad) or inc mov push sti enter sub sbb mov leave mov mov test mov (bad) jmp xchg jae and pop je in ljmp jne xchg stc lock int loop inc fstpl xchg xchg inc adc cmp mov sbb fiaddl scas sub cli xchg add sbb mov xchg test inc shll cmp inc jnp outsb cmc jge roll mov std (bad) dec jae mov or pushf leave mov icebp push fimull test xor dec lds nop in mov les data16 and in ljmp (bad) (bad) fcomp pop xchg ja add (bad) dec push push jp jl sbb (bad) mov mov mov in pop push fcmovnu fidivrl dec movsb pop sbb push mov (bad) adc push adc into jp fisubl mov ss fnsave xchg cmp push in sbb jmp push cmp lea pop scas sbb xor into cltd mov sti push dec icebp jae jbe mov icebp sbb rorb mov stos cmp (bad) imull cld shlb stos ret cmp push inc fcmovnu adc test clc and loopne jle jno sbb cmp push pop jmp cvttps2pi notb dec adc jecxz repnz push push inc fs in cmp sub pop lods push xchg mov inc imul loopne test stc loop imul scas andl jmp repz test jl dec inc add mov and xchg lret hlt js sub cmovne pop mov or push or test or (bad) mov stos repz or lret or cltd pop xchg stos lcall push out (bad) into daa add js mov mov dec shrb arpl pop fucomi enter hlt adc hlt adc lcall sub iret mov adc mov gs dec xchg jo jp pop and or pushf pusha add pop sub out dec mov loop lods add cwtl jo aaa fisttpll test fist out xor addr16 cmpsb pop testl aas cwtl mov add jmp push stos hlt xor jb sub adc jbe aas clc imul fwait dec xchg mov pop rol xchg iret push mov out inc fs lods xchg pop jecxz jmp (bad) xor cld (bad) les inc xchg ret mov pop add popa adc leave sti cmp cmp push inc adc inc ljmp xlat out es mov inc or fimul ja and adc cmp add pop pop pop (bad) aam iret nop dec push sbb add stos js jl sbb jne cld leave and adc mov cli mov out and push into sbb ds or ja lock lea xor cmp aam hlt popf xor mov aaa xchg xlat out sbb je xchg adc push mov es aaa mov (bad) mov lods mov das inc jbe pop inc sarb pop loop roll push push int mov mov and insl or cmpsb mov das inc mov jae psubq mov pop call xor mov (bad) mov stc (bad) sub push mov mov fdivs add or or stos jmp push pop sahf (bad) mov inc add push shrb cmp push adc inc mov fistpl pop adc inc movsb add gs add mov daa and repz or sahf pop mov xor pushf scas xchg cmp out stos or and hlt push inc mov pop push clc jmp xchg arpl push sbb popa (bad) aaa and int xor adcl mov ljmp sbb mov sbb lods inc xchg pop daa mov into jle outsl xchg push sbb aad jg pop lods xchg jno sarb add mov movsb lret es lea adcl push or adc pop inc inc and cmpsl enter xchg hlt sub pop fmuls loopne enter jle inc std cmp push js mov adc adc call inc xor cmp test js sbb mov lock cmp mov mov xchg and jnp icebp mov test int cmp shrl shr and popf enter add inc xchg push sahf gs push and dec mov into and jno iret loop sub daa sub popf push sub bound jbe inc in mov dec sbb dec cld aas and push add sub nop mov xchg xchg push jne or in adc lds fistp dec in mov lods out adc nop sbb or add push fcomps lahf push sub loope lret xchg xor out mov iret mov adc andl rolb fiaddl cmp aam movl pop mov xchg lea fidivr jnp adc jmp test mov in or and fwait addr16 cld js cs xchg inc je and sub mov loopne stc test pop pop ret ss mov sahf push lock add adc push arpl sbb outsl in fdivrs (bad) fsts sar xchg (bad) jle dec xchg add test add mull adc xchg dec hlt popf cmp and inc sub fstpt xchg rorb pop push xchg gs jp imul xchg dec fsubr rolb cmp das insb dec mov scas loope repnz mov sub out adc rcrl xchg jge mov lahf nop fmuls or xor mov adc jl jmp es and mov aad outsl dec push (bad) fdiv mov imul enter andl rorb mov cli in mov pop ret push bound or pop popa sbb popf or test subb mov int mov xchg push xor sub out jg aaa cmp or cmpb mov mov fisttpl mov test (bad) cs lea in in call push inc pop dec dec mov mov out out ljmp outsb js mov mulb into outsl scas add xor push inc and jae jp xor (bad) jmp sub out enter out xchg test xchg fimul lcall scas and out and xlat pushf inc lock xor es dec add jb icebp int (bad) push cmpsl jp dec jg popa movhlps cmpsb mov pop stos xchg ds and ror insl out loopne andb scas xchg pxor or pop mov mov movsl pop out insb or neg xchg xor cmc xlat sbb add jl addr16 lcall push jmp cmp push in (bad) test adc pushf in push mov or mov jge mov das ljmp mov cmc fcomip movl call (bad) data16 or loopne loope xchg or lcall leave sti daa outsl sbb add mov xor dec or push div sub xor stos xchg fistpll inc cli scas jnp dec or pop sub ficom lret insb and lcall outsb scas or in adc adc cli sub lret jp push mov (bad) nop in std dec or and and adc sub out and movsb add nop jbe lods add fs or fs pop mov xchg stos repnz pop push sahf or jp pop sbb loope std shlb cltd stos cmp out mov enter cmp pop jecxz aam sub push jno and ss stos cmpsb out lea (bad) mov pop fwait or es and out stos or iret jecxz ljmp repz outsl (bad) adc push jns adc sub (bad) nop les xor push (bad) out and lods call test cmp or or push jae xchg cmp stc adc popf add hlt fsubr daa imul (bad) jo push imul inc loope dec add adc inc pop inc pop in stc andb movsl and (bad) mov sldt xor mov pop push mov cwtl xchg jnp call lret (bad) lock ficom das xor (bad) cwtl and mov xchg mov insb pop test jp jae (bad) mov xchg movsb jp test xor movb out pop push test das sub in movsl pop ljmp mov std mov xlat stos push cmp dec push adc and std sub cmpsb popa xchg cmp jmp sbb jae jns jg cltd imul insl popf pop rcll in mov loopne fwait outsb rcll and xchg fcompl test mov das fiadd stc fneni(8087 enter lret lods and push sbb imul pop daa lea mov mov repz cmpsb adc leave test push xor xlat add test out hlt aad sti push fs add (bad) icebp pop mov (bad) jle int cli (bad) fdivs orl cmc popf xorl push lock ja popa leave pusha mov ja sbb popa cmp sbb adc pop test subb mov dec xchg xor jb movsl xchg sbb mov mov cmp dec add or out cld test push push inc push int3 push pushf out pop sbb xor mov push push jno out out inc gs int roll ret jns btc sbb cmp (bad) xor daa js (bad) nop pop push add lds nop out jno sub jo adc xchg lds popf (bad) jno mov sub mov cld pop (bad) stos xchg lcall adc dec inc cmc mov push dec bound push mov shlb sbb dec pop mul cmp dec and rorl lea pushf xchg sbb shrl scas inc fnstsw dec and sub loop movsb mov xor loopne push (bad) xor xchg adc mov pop lret jne sarl jge and into adc daa std push push mov pop (bad) ja pop or inc dec stc (bad) mov and out outsl rcrb test or bnd mov shrb xor mov push test aam or xchg pop test dec jle sub addr16 popa pop mov pusha iret fdivr dec push mov pop test jle add out icebp test push mov and pop mov ljmp ljmp pop ljmp mov adc out cmpsl dec (bad) xchg movsl mul roll scas push sbb xchg and fidivr popa xchg loope or mov int mov pop dec ret loop push notb adc je lods jge push jbe movsl xor sarb and jmp and popa (bad) sbb push jecxz nop stos add in and aaa xlat mov push outsb mov popa jle popa xchg ret mov push cmp add push jo inc push xchg fdivl push nop sub shrl movsb mov sub mov out enter mov sbb loop movb mov xchg jg jae dec cmp add adc call sarl das and fdivs mov adc and pushf xor lret lahf loop adc rcrl (bad) xchg mov aaa mov mov mov pop sahf je cmp cmpsl jge jle aas dec pop fsubl xor xor sarb fildl nop je stc andl insl mov icebp cmp ficoml xchg sbb loopne adcl jg jp scas cli int3 setns js jnp xchg cmp lret data16 inc add push dec das roll xchg call popa pop or imul jmp cmp dec loope repz dec sbb sbb sub negb lret mov jl push dec sbb lea add inc rcrl js cmpsb nop inc lret dec sub sbb and sub cmpsl cli out test aam sub xchg rclb mov shll lods xchg jecxz mov push popf xchg mov pop mov jle adc in popf dec in cs mov lds pop inc inc jl sub dec scas pop outsb mov inc test scas fcmovnu imul adc inc imul in fidiv aad ss inc popf mov test push and adc mov mov xor mov (bad) adc daa xor mov cmp push js lods and inc xor lds jnp das xchg iret ljmp jge push jmp scas rcrb xor push mov pop mov sub loopne gs scas xchg mov rcrb jle xlat mov daa rcrl cltd xchg mov out in int3 lahf in inc out je daa rcl jno les orl incl dec mov push mov arpl leave push out (bad) in (bad) push fildl inc aaa push xor jmp mov mov jne push cmp lcall pop push jo fwait push in push repz jne shld mov push roll xchg or xor xchg test pop xchg out add in lock mov push lcall (bad) sarl xor test out xchg adc in cld xor xchg mov sahf sbb inc add push pop dec push fbld ljmp cwtl inc mov cmp imul loop mov bound lock adc jg xor mov aas stc jecxz cltd repnz mov xchg orl mov daa push enter pushf repnz pop arpl incl pop aas les xor and mov stos adc cmp repz push mov ljmp (bad) test add loope ja cmp inc movsl xor cmpsl (bad) in (bad) out test nop dec popf add pop mov and icebp sti mov test add (bad) lea test mov (bad) lea stc ficomp or sbbl or pop das mov mov xor into lods int loope xchg xchg cmpsb fnstenv mov push pop mov ds cmp add mov xchg pop mov inc jp loopne cmp fisubl test sbb dec roll cltd pop and adc popf mov xor xchg sbb stos fnstenv aam ja add mov enter cmp lret lret sbb js mov pop sahf add cmp insb jae aad mov mov jno out dec add negb test sub insb (bad) xor xchg cmpsb movsb ss jno sbb mov mov sub ficoml dec push mov xor fimul mov or test push mov cli lret inc push cmpl pop mov test xchg stos inc sbb cmpsl nop add inc add aaa mov out sub and pushf faddp (bad) jns movsb dec lret repnz mov inc test push popf dec fmul movsb mulb and dec (bad) in fwait jg ja out icebp sbbb inc daa cmp mov ficompl imul pop mov test rorb repnz out data16 out sub cmp iret sti and add imul pop xchg sub loopne rorb fs push add shlb lods hlt test jmp je imul lret push stc fwait mov inc cmp mov imul setb xor loopne or push mov jmp ja stc rorl daa les (bad) aaa mov mov sub mov xchg xor gs add inc push mov push pop repnz iret and clc sub cmp mov push aas pop je sbb repz or or in mov in jb adc add sub adc test or jnp add das std inc mov out ror push push movsl cwtl rcr lret ja xchg xorb cltd or jae mov xor xlat mov es aas push ja scas mov ss test mov cwtd cwtl push je push sub lret (bad) lods lret add repnz arpl mov jmp mov (bad) push mov push out mov loopne cmpsb xlat lds subl jmp cmp imul nop pop imul int3 add push movsl mov rcr push jl dec xchg dec push jmp ficom push out cmova cmp loop lds pop mov push sbb lret int3 imul mov lds pop mov imul stc into insb adc jle mov cmpsl ljmp cmc adc push jo add mov lods inc fisttpll (bad) xchg mov lock movsb mov and sbb sbb mov mov mov jmp jne fdiv aas add jmp mov fild fs ljmp mov out lods pop push adc xor nop (bad) cmp in addr16 jl xchg and mov jno cltd mov sarb xor cmpb (bad) mov xor and add test or mov jb cmp jecxz sbb aad in or out clc lcall enter enter push out mov push inc push daa cld in out stc lret mov or sbb mov sbb in jg pop lods test mov mov mov sarb add jp test bound inc sub jle push stos mov sbbl pop sbb mov xchg pop pusha sbb loopne into cmpl aaa into movsl je sarb mov rclb ror jno mov inc dec sub iret xchg push xor imul and push aas dec fcompl jle lahf sub sbb mov lea or int3 push rcr cmp add btr mov sub cld add mov jne ljmp leave adc xor das mov jno fwait data16 push mov stc clc pop std popf stos and sbb xor test negl and sub and int lcall cwtl bound pop cs outsb mov sub and sbb pop sub add jb mov cs xor dec dec sub cmc sbb or (bad) out outsb add cmpsl xchg in mov push mov cmpsl or ret sbb pushf jp cwtl out clc out ss mov jg cmpsb sbb inc dec (bad) shl ret cmc cmc push notb fsubrs jne inc sbb push mov lods leave lods or push popa iret jecxz dec test jnp pop and mov ss rclb in mov mov xor pop test inc mov imul std sti or lods ds in mov test lahf jns push xchg iret out fildll cs or jnp add das test push sbb mov or aas and imul cmc lret lahf dec dec mov aam (bad) ja inc or xchg mov mov jnp xor in add sbb mov pop cmp mov imul jo inc mov xor mov push je (bad) mov in mull mov push pop add lcall adc pop mov jbe pop (bad) test mov and xchg sub mov int jmp cld adc mov dec and xor mov inc push mov fwait (bad) pusha outsl lods mov or pushf in repz (bad) rorb cmp push test mov orl nop lods fnstcw div mov in mov lods or sbb out push pop push dec xchg loopne out mov scas (bad) xchg mov icebp mov and sub push pop out sub push jbe dec iret rcrb mov jecxz mov pop lahf inc or cs inc push mov dec in dec pop lcall sub mov mov nop call jmp sub stos mov outsl xchg or icebp icebp cwtl mov jecxz pop aam sarb xor mov lahf xor call out xor xchg mov addb push scas push push sahf fldcw push enter shr repnz loopne decb in inc jne push dec push loopne push stos jno or push cli (bad) xor clc sub popa jns jge jbe mov mov xchg shl or xchg push fdivrl lret aad (bad) popf pusha sbb cmp push and adcl cld (bad) sub sub cmpsl xor mov sbb mov data16 jns in decl xor sub rcl cmp ret cwtl adc out inc pop xchg dec jbe jne pop punpckhdq mov scas or xchg int xchg ficoml shl pop aas sub xchg jbe repz cmp pop mov js jo imul (bad) jecxz clc and pop fsubrl cmp mov sbb jnp adc sbb outsl xchg add fwait in pop scas add jl mov mov inc arpl dec rorb sbb mov sarl cmpsb add enter ficoml dec dec out js test jbe sub aas dec pop mov xchg xor push call in and clc les pop cld lret adc push xchg sbb sbb aas and lahf xor ret leave std leave cmp into dec aaa sahf aad stc push aad cld pop aaa scas imul in add call data16 adc lock mov sub sbb loopne lods or mov imul stc adc mov mov cmp icebp xchg cmp popl push dec (bad) sti fiaddl jns and mov mov jnp popf ret inc xchg mov mov xchg xor mov and xchg stc mov sbb stos lret jbe test ficompl sbb loopne js aaa repz add xchg (bad) ret push sub cmpsb nop mov lahf mov cmc test xor nop xor rorl flds aaa and (bad) mov lcall lods cmp lea cmp hlt stos lock jne sbb jb mov inc xchg inc mov xor aad jmp mov (bad) leave mov dec das cmp fstpl jp ljmp mov adc mov (bad) xor movsb pop repz (bad) mov inc fwait push or push and jge sbb xor or std aas jl mov cmove testl push mov clc xchg bnd or xor sbb test mov push dec add adc ss push mov rorl xchg mov repnz push dec jmp (bad) dec add pop jnp mov jae jno dec (bad) fiadd xor repz adc or sub inc scas ss orb jnp inc mov sub loope ficomp xchg (bad) lret cmp test mov jmp pop add repz sbb inc push test add shll scas jbe ret inc jno sub xor jno push xchg push xchg insl mov push out mov ljmp jg ja jecxz inc dec lock ret mov in inc cmc cmc xor fldt mov mov add aad into pop adc xchg loopne adc (bad) lods pop xchg (bad) push xchg ja xor nop and sbb in negb out cmpsl add cmp push cli in lcall fstpt mov mov fcmovb mov mov adcl mov mov mov and scas adc movb dec andb and ret and sahf sti (bad) lock xchg (bad) xor xlat popl dec (bad) sub ljmp sbb jns fwait loopne pushf aam lret fildl xlat ja shrb out sbb sbb sbb and mov push mov fwait jmp out cmp out push (bad) dec push push insb lahf inc into jp arpl std xor pushf mov jno adc shlb xchg or enter negl mov push pop repnz jge out mov lcall jo inc inc aam dec (bad) sub sbb inc (bad) push pop sbb (bad) (bad) pop jne loope fcmovnu jo test roll inc fsub enter (bad) lock mov push inc xor mov xlat imul ds mov popf lds xor stos lods les push cmp mov daa and fcompl mov imul (bad) test lods loopne test (bad) rcll in iret sub (bad) data16 flds cmp stc jle mov insl fsubrl repnz movsl xchg xor int shll ss into in and ja pop clc adc bound push rcll and cmp rolb repz sub test out xchg lret fistl or mov pop and into (bad) popf imul xchg cmp aad cmp call pop xchg test aad (bad) aas jp std lahf push adc das andb xor movsl shlb ficompl cld push mov js jno imul dec aas jle pop stos sub mov inc data16 dec sbb adc lret mov inc (bad) mov and les and add into or adcb and pushf scas mov xor in cmp dec xor hlt pop xchg scas int js fsubs cld mov gs cmp aaa fadds (bad) jns int3 aad scas sub sahf xor lds and push xorl push (bad) cmp inc push fadds popa inc mov mov out pop jl cmpsl stos and fwait in sub adc push nop cmpsl iret das into cmp sti and or movsl fs push xor mov push mov fdivrs and (bad) fsubr xchg shr dec (bad) pushf ret adc lock andl fdivl (bad) (bad) inc data16 push mov daa mov pop subl xor into cmc dec and cmpsl clc xor ss xchg add out and fmuls es call (bad) fwait pop sbb push fistp out popf push (bad) jle dec dec in dec stos xor fstl cmc stc jle inc mov rcrl gs or cmp (bad) aad push xchg xor nop fsts dec std mov nop push scas fdivl ficomp ljmp insl int3 (bad) push repnz lds sbb in and sahf sbb test popf add mov (bad) pmaddwd adc mov mov xor test add adc inc jno pop cmp mov pop orl push cli fdivr and (bad) stc jp cld in xor sub mov insb dec out xchg (bad) movsb loope ss out mov sub fidiv out (bad) (bad) fldt and pop fwait fs or and jno push daa lock inc call sbb (bad) fadds fwait and loope sbb stos dec mov mov (bad) jbe fildll pusha jmp cmp jl (bad) ja stos aas xlat or cmp lahf mov cmp jle hlt bound and and dec or sub push into sub lods pop jae shr mov scas aaa mov pop out enter shlb iret mov xlat xchg bound xchg out sbb fcos in in sbb insb imul cmp movsl sub cld and cmp dec jmp test pop pop scas mov mov icebp adc outsb jle (bad) fstpl ret cmp in ds and int cmpsl mov and divl add mov pop cwtl (bad) (bad) sub mov xchg and add xchg scas repz cmp pop mov lock jge cli cmp ljmp pop mov cwtl push inc shrb ljmp pusha sub add push int3 icebp rcrl das pop sub add sbb paddsb fldt cmp loop fwait mov cmp push nop dec mov in cmp add mov jmp mov pop adc (bad) aas sti imul jae fs ret rorl dec adc pusha mov adc mov jae lcall ret jecxz mov push adc jp mov cmp in out cltd pop inc or sti in xor and add scas (bad) jg xor pop jae les jbe jns dec xchg call test and gs dec push sbb loope rorb add push jns bound push out popa insl (bad) shlb adc out push cmp dec test out cmpsl rolb insb mov push fisttpl mov push dec (bad) jecxz xchg (bad) icebp mov mov iret cli add sub inc movsb mov test inc adc mov inc fsts dec arpl or in fidivr lret cwtl xchg mov aam icebp iret push jle xchg loopne jo add test xchg inc dec pop or push dec lock sub iret out es lock in in in leave push add fnstsw dec xor cmp mov stos xchg inc fwait push out (bad) and adc into mov insb sbb mov dec mov adc cmc push and daa dec jecxz std out test pop or loope add cmp iret mov dec fisttpll scas xchg pop sub pushf adc inc or and gs into cltd pop and test mov addr16 push add aas jno dec data16 imul sbb pop in pop mov fiadd or flds inc sti cmp mov add stos (bad) jb xor ret mov std jno and fstpt outsl das push sbb leave mov out dec pop xchg ss lock lds orb inc pop push adc cld in inc push xchg insb ret sub push scas mov push pop mov dec mov into or push mov mov jnp or xchg cmp cs aas les push push add jge arpl ret mov sti testb bsf mov popf mov mov (bad) jecxz mov outsl pushl stc dec xchg shrl ret xchg adc push jnp xor sub icebp mov cmpsl (bad) fwait push inc push add cmp push (bad) fstps xchg rcpps popa mov add lock (bad) stc lds mov push or pop aaa add xchg xor in inc arpl cmp rol lods cmp adc into lret in arpl add fisubl and cmc out lods scas ret iret inc (bad) mov insl cmp push out hlt jnp outsb mov idiv loopne fildl push or sti push push (bad) push call add shrb cs sbb sahf or popa fiadd xor dec mov (bad) jecxz jb fisttp cwtl jge loope xchg sbbl fisubr sti inc sbb stos leave cltd dec lcall nop aas cmp jne stos mov in inc ss test mov loopne add cmp cld or nop dec dec push xor mov jno xchg or fwait sub stos adc push lret fisttp cmp dec outsb sbb mov mov pop xor cltd xor xchg push inc cmp ds xchg adc gs jnp xor negl pusha lahf mov or outsb pop lcall ljmp insb out jmp xchg add dec lods xor outsb sub add inc cli leave add data16 cmp xchg push and test sti ss add rcll pop xchg push negb and xchg add lods andb pop aam das push aaa push xor (bad) (bad) fisttp push add les fndisi(8087 lods out xor in loope jb stos aad push xor mulb xor cmp movsl cmp cmpsl jge jae jmp add test xchg out push lret mov and and cli movsl adc ja cmc cmp jns cmp sub les xchg imul aam (bad) pop inc mov inc jo jmp pop xchg fwait adc add xor pop jne cmpsl adc xor mov mov (bad) push pop inc mov ds push push es in imul dec cli (bad) jb nop push (bad) aas xor mov mov cmp mov or pop mov push enter shrb xchg lock push or gs sub jns lcall stc pushf dec pop pop and stc push stc jecxz lahf mov popa in fwait js dec and int cmp je mov out notb call test mov cmp jnp jno sub pop or das cmp sub lds jg cmpsb jmp sub in jp lds out push adc out iret fsts jmp lods ficom in xor add cli mov pop jle in stc sar mov xor (bad) ljmp insb push lock gs lcall add cmp int3 clc repnz sbb in aaa nop add mov ret jnp jnp adc aam jne and enter xor dec aam mov inc jns ficompl in pusha cltd in call jbe sub xor add sbb jb (bad) fnsave xor fimull xchg pop imul ficompl (bad) aad das popf lret push cwtl jle cmp rcrl pop (bad) repz push rcll jb push mov outsl les mov push push fwait pushf aaa mov enter and popa call fild jge sub les imul das sarl jg sbb push lret movsb xchg popf ret ret aaa inc and into ss in outsb js cmp adc pop inc sub pop (bad) xor imul (bad) mov ja fistpll xchg les cmp xchg hlt enter push dec pop xchg push fsts jge mov dec insl std mov cmp imul push lea fsubr cmpsl stos xchg sbbb clc or (bad) push sub xor inc mov xchg adc xor push push imul lods and out and push mov lods std int3 (bad) pop mov jmp imul das lret out test pop decl inc mov jp subl pop out rep and inc or mov dec movsb sbb aaa mov inc jl push xchg ret mov fsts enter mov iret movsb (bad) cmp mov pop pop mov loope push loopne incb in jecxz ss popf add repnz movsb pop cmp (bad) out sbb mov push or pop movsb sbb adc inc in mov push mov fistl jle xor int3 in xor icebp scas aad dec out aam ljmp dec push call aad dec dec push jno call xor and test push cltd add dec lods add cmp fucomi add cmp in dec inc lret int3 movnti and dec shlb aaa jg testl pop dec clc mov mov mov addr16 push inc mov push aas std cltd jg xor or pusha ss loope mov call movsl sub push (bad) ja pop push out push sti dec inc xchg inc cmp xor sub cmp outsb repnz imul in stos jo shr aas xchg scas pop pushf mov mov ljmp lods mov push aas pushl jae test pop jae pop inc int cwtl mov in dec sahf mov dec sbb cmp cli add aad adc or outsb fistl repz xchg and dec enter aad jl jae sub scas ljmp sub sbb mov lret in jp movsb push ds cld data16 push lahf lahf sub xorb movsl cli lock out mov sarl jno mov xchg dec cmp mov add mov inc nop sbb inc push mov xchg pop xchg sti add das rclb adc test push push rcrb leave sbb ljmp xchg xchg aaa or cld les xchg add clc jge outsb fsubrp xchg cmp pop or sub xor nop xorb stc aas fs xchg lahf (bad) ja xchg mov aad sbb fimul cli pop cli fidiv pop fs aas rcrl int3 lcall cmp test cmc sub fldl mov fcomp test nop sar insl in insb dec icebp mov dec push mov not cli lea pop dec hlt pop call inc dec out imul jmp fldt or cmp xchg dec cmpsb cltd popa add shrl jns jge mov hlt stc mov gs imul es pop lret cli mov stc jg or inc dec es jo sbbl pop and add pop mov pop gs sub push (bad) divl jb movzwl jmp jnp cmpl lods lock fist (bad) (bad) xor cmc lret rorb iret imul xchg addr16 and (bad) cmpsb dec mov outsl jge jns inc popa js push pop fsts fs xchg dec loope dec lods (bad) fistl mov stc dec es sub (bad) mov adc mov xlat mov dec scas hlt mov das and push or mov mov aas xchg fstp push aad in mov jns jb xor inc mov jb out jmp mov add hlt pusha xchg or rclb rorl std pop or or movsb aam jmp mov fs adc inc push add outsb jb mov add xchg pop rorb addb adc lds cltd inc jge add cmp fdivl je (bad) mov mov lea pop jp pop xor in xor sti inc pop pop movsl mov mov lcall jmp add mov xor pushf push dec (bad) mov aaa dec jo push popa or cmpsl cltd (bad) or insl ds mov cwtl out push mov push dec dec or xchg jno sub iret lds frstor pop int3 jmp lcall inc jae push jmp lds and xor jecxz xor sub imul pop in xchg insl (bad) adc push xchg loope cmp daa or in hlt cmp popf jecxz dec xchg or rolb mov or and dec ret mov sub jno adc mov pop push sbb dec imul adc shl adc popa mov jo scas pop push enter inc outsb rorb pop lea xchg cli loop dec mov cmpsb pushf repz pop push stos adc mov sbb mov cmpsl clc popa pushf adc push fadd xor js jns addr16 loopne mov call push dec fstl pop dec hlt sub jne push sub mov jmp lret xchg jb jnp (bad) mov inc daa pop scas push or and mov hlt test aas mov fdivrl repz shl push stc or cmpsl cmpsb mov dec es setns or fwait loop or es cld rclb mov (bad) dec mov ljmp sarl jns cmp (bad) loope mov outsl mov push loope xchg aam shll ss adcl mov imul mov rclb cmp or repz out jb push push test jb cmpb imul sbb inc icebp outsl or jle fwait dec pop jo dec andl sbb sub sbb loopne fwait (bad) adc jno cli out nop test (bad) addr16 inc inc pop cmp push scas pop nop mov push addb jmp xchg xor xchg incb jmp jp arpl lock and in icebp dec inc xchg mul fcmove or dec or imul xchg pop (bad) loope (bad) and (bad) bound mov fstl pop stos push xor jno iret out lea ret idivl icebp daa insl ja adc pushf into fnstenv pop pop (bad) mov (bad) nop cmpsb pop pop fs nop push sub jge call cwtl daa lods test mov adc das andl xor mov xchg inc sbb dec xor or sub pop out mov sbb jmp inc fdivl outsl jo movsb cmp movsb lds mov mov jbe cmpsb add add and mov xchg inc or add sbb xchg mov mov dec notl jnp inc adc sarb out rcll xchg mov add into jmp cmp addr16 and lods cmp cs sti les sub adc mov arpl push mov (bad) mov dec (bad) jmp cmp or jle insb rcr push mov push jo mov ljmp inc jp sbb mov inc popa lahf lahf push ljmp mov cmpb jae cmpsb fsubs test scas int3 lret outsb (bad) jno divl shlb testb icebp jecxz leave xchg inc bound iret pop add jmp lret sti adc lock inc mov test je pushl fcomip int jmp xchg sarl cli push dec pop jg and xor push shlb lret sub mov pusha add cmp mov jnp cmp lahf lcall fdivrp pop cmp cmpsl shll iret jae mov cmp mov cmp push sbb sub pop dec xor and aam movsb outsb and shll mov jnp xor sbb es jge cld dec daa icebp das arpl lret push mov mov out dec into pop mov mov cld ffree in ja or int call call movsl pop xlat jbe mov adc out pop (bad) ret fidiv lods sbb sbb call test xchg fs or xor fwait xchg scas aaa test shlb inc divb mov lods clc jg inc or ror outsl pop xor cmp xchg xchg lret push push in adc push lock repnz ret jl out popa pusha aas (bad) hlt in js xor iret jp out loopne mov jns cmpsb icebp inc out sub push (bad) lret xchg jl mov test ret push dec ret xor test lods test sbb lahf sbb add xchg inc push xor popa enter imul lock push inc stos xchg sub sub adc mov pop sti xor adc loop ret lret pop pop imul jno mov add and iret xchg mov mov negb shrb dec adc test adc fs xchg pop mov dec jo or idivl cmpb inc aam mov mov icebp dec mov or or movsb stos or jns jmp (bad) in sahf pop jg fs std mov lahf fsubl repz sbb insb fmuls pop mov dec sub in mov mov add pusha xchg or lret sbb sbb (bad) test stos add push inc push lods jmp faddl or incb stc aaa lret stos add gs or mov mov (bad) pusha lret adc mov int3 mov jo sbb jg sbb (bad) push ret mov out int mov mov outsb mull out or adc pop imul cmp mov fld jp scas daa sub iret cmc and mov lods std or ljmp jle movsl imul cli lods push xor mov adc cmp mov xlat jo mov out mov jb and mov addr16 dec movsl cmp movsb sub pop aas xchg jmp mov addl xchg lret (bad) in mov mov mov outsl and outsl inc lahf cwtl inc cmp or test adc sti jmp lods movb fucom xchg mov out mov and seta dec ljmp negb (bad) fstpt pop and xchg sub fistp repz push out sbb (bad) scas cmpsb inc cmp mov add pop sub movsb int3 loop int3 stc pop or lock lock add add or mov dec xlat aaa and cs aad push fistpll and ds dec dec loopew xchg inc inc xchg iret add rol sbb loope xchg addr16 (bad) out lea pop or lds mov lret cmp or (bad) cmp pop (bad) lahf out mov clc les fs ss in push fucomi fs lods adc inc cmp out ret xchg cmpsb sub in subps test (bad) mov pop adc xor fsub dec and and add mov jg xchg inc ficomp shl psrlq clc sub mov xchg lea and cmp stc sti fidivl pop jb adcl cmp fdivl test hlt in loop mov cli lcall leave aaa cmp lret mov xchg mov sub (bad) pop pop jecxz arpl aas inc roll and mov inc cmp push in sbb push xchg or ret and adc cmp mov mov push sbb es shll lahf mov xchg aam pop cmp roll lds jne xchg xchg pop pop dec aas push sahf outsl or (bad) (bad) inc aaa sbb or imul popa cmp mov push test push cltd and push test cmpsl out movsb adc cwtl hlt sarl (bad) ret push sub cmp (bad) fadd xchg mov (bad) lds pcmpeqb or sbb mov call sbb stos pop sub adc pop in cld repnz add stos (bad) jae xchg loop pop test xchg push in mov xlat fwait add fistl jo scas inc out movsb mov test dec sahf fidivr sub xor fildll dec insb (bad) test fimul repz dec adc xchg push sarl mov inc das sub or ljmp into jecxz pop dec sub xchg mov adc lcall sub iret dec sub push inc or daa data16 iret std push mov loope or pop test fdivl dec stc and rol push mov push popa inc adc inc adc jne cmp aam (bad) call and pop or jnp scas dec xor xor shlb cwtl and cli mov jne addr16 iret dec pop dec cwtl test or call arpl negl or mov jnp xor das in adcb out arpl dec mov flds (bad) cmc imul mulb pop (bad) outsb xor xchg movsl ret sbb sub fimull pushf test hlt and jge cmp (bad) iret or xor add inc and pushf bound rcrb mov add popf push mov dec jbe faddl js mov pop push das push sbb jg cmc and loopne cmc aam xor fbstp sub dec repz test ret jmp add jmp (bad) shr cmpsb mov stos mov out push lock out cmp fdiv popf pop push (bad) mov mov movsl lret out fwait clc enter mov popf adc jne push jg or vpsllq push push outsb add jecxz mov daa or stc dec push scas int3 popa dec aad pusha and mov inc sub call adc sti jb sub or mov xchg pop xchg call sbb dec (bad) and or btr jl push negl cmp loopne xor sarb push lss adc lods jge loop jmp ret pop iret jb das popa js pop sub sub cwtl aam jbe fistp push mov je jnp ret clc outsb cmp add mov pop push (bad) adc push movsl add (bad) adc adc adc sub mov mov xor sub pop xchg inc inc jg mul lcall jne mov xchg xor lock add (bad) jmp (bad) sbb dec adc jne lock cmc mov pcmpeqb cmp dec jae dec push cmp loope cmp pop xchg pop sbb dec dec jmp sbb in dec sbb test or popa add or dec (bad) out sbb mov cmp je cmp mov enter rcrl pop popf stos loope lods jmp aam lds in adc (bad) scas inc test fucomp shll fsub divb sbb cmc icebp out or xchg les stos ficomp outsl or aaa add add xchg fadds adc pop hlt loop aad int pop data16 cmpsl mov arpl (bad) adc shlb dec ja icebp jo dec push push mov sbb mov test sti mov (bad) mov enter std mov fs mov cs sbb pop aad jae leave sub movl push icebp les out sub xchg lahf push in xchg in pop push add or pop dec cmp ss loopne push cmc lahf mov pop in fst data16 call bound idivb xchg movsb and bnd sti mov jnp sub fwait jp test push pop jns xor pop lret cli push lcall inc push sbb sub aaa xorl lahf push shrb jp (bad) stc aad sbb fistl mov mov faddl fsts sub sbb shl sub stos and gs fwait lea inc lods js (bad) (bad) int clc (bad) adc cli fimul ret movsb data16 or xchg cwtl adc loopne rcrl scas shrl ljmp add inc xor pop inc sub stos sti enter jecxz lret xchg mov out mov fsubp adc push dec pop dec sub jl dec in pop cmpsb sti cmpsb xor lods rorb push cmpsl cmpsl out mov xchg (bad) xor out test jae mov jl int3 xlat mov lods and aaa pushf arpl stc inc insl dec fist int jge push cmp loopne inc mov pop repz sbb pop inc gs pop in fnop rolb xchg mov push sbb jbe adc sbb inc add frstor (bad) and mov push mov ljmp insb push inc mov sub fwait cltd (bad) push cs lcall and sbb mov js xchg (bad) sbb jb jne int3 push pop push sbb dec imul sub idivb loopne insl dec add and iret cmp out push adc mov xchg mov adc je cld xlat mov aad ds sub test adc or repnz out lods loop dec or (bad) push dec mov or pop stc fsubrl es shll jmp movsb cmp cwtl cltd inc pop xchg mov sub cmp push pop pop fcoml test lahf or out (bad) out sub decb in lods xchg in das lds (bad) int3 movsl and enter lret dec mov loope xchg ja adc jbe add fcmovnu push (bad) loopne adc sbb dec outsb stc pop sub lret loopne and cmpb jns mov ret nop nop cmp jne call mov dec stc es enter push scas fisttpl into out call mov xchg pusha push add pop mov sahf or inc cmpl xor sahf insb fnop sbb (bad) pop push mov (bad) xor ss into (bad) and lcall mov addr16 loope push sbb dec xor mov cmp int3 mov (bad) or pop (bad) xor aas mov or xor xchg movsb lret dec out mov fmull test frstor cmp faddl pop cmp dec mov mov or mov jl enter jge das xchg ficom inc jle pop sbb inc dec mov mov xchg mov nop (bad) cmc or cvtpi2ps rcll out and jge adcl add and add xor mov push and mov sbb cmp adc cmpsl mov aam fdivrl jne fildl out in std xor mov or cmp sbb jmp sbb (bad) cmp scas cmpsb (bad) pop in dec aas scas jge stos ljmp mov lods cld es mulb fidivrl fs in jne push sub jno dec dec jbe aas pop or test xor (bad) or (bad) test dec data16 pop jnp and in cmpsb pop out sub sahf jo (bad) iret push cmp add or mov lds int or faddl scas scas scas mov (bad) xor push push jle mov push scas mov out and push fstps es fisttpll push and aas and push sub mov pop dec mov shrb pop test sti jne cltd xchg ljmp out cwtl in jmp jmp lahf cmp (bad) into xchg out mov push xor rclb jb and jle ljmp mov fadd jb jmp mov push mov inc (bad) lods movsb in scas hlt xchg inc pop sbb adc pop push cs pop (bad) je push in jb push or outsb aad push test cmp xor int3 js jno fstl shll scas mov xor rcrb sub jne in jp pop xor cmp jnp movsb fadds xchg iret jns imul dec mov inc xor add loop push sarl inc pop imul sub das dec sbb sbb adc jae push and jecxz pop lcall rolb fnstsw add out jb adc (bad) stc pop in lods in xchg (bad) adc test rcrb jp xchg jbe repz stos xor xor std mov insb enter jo out cmp outsb mov repz int or loopne std pop outsb (bad) loope and sub sbb arpl jae,pn clc or mov outsl push push repnz push xor jae xlat mov aaa jno sbb xor es out push out out idiv (bad) lods fldt cmp sbb dec iret sub and mov test adc (bad) push mov lea outsb jae das rcrb popa cmp int mov mov push aam (bad) pop dec cmp adc aaa inc sahf mov cwtl mov and jb mov jp mov jl decb jae mov xchg sti imul fdivl scas dec ja xchg jg lock jl outsl mov bound fdiv jecxz or xlat push popa in loope jg xor shr adc or xchg insl jno data16 sub (bad) fdivp xchg jnp add xchg jl jns sub lea or jno adc cmp sub jecxz int jae pusha and inc jo sbb xchg cmpb mov scas ljmp imul mov clc fstps sub enter pop cmp pop jmp clc or xchg mov mov fsubs mov call adc cld cmp jmp movsl clc xlat fdivrl stc or cmp aas mov and mov daa cs sub jnp mov xchg fisttpl call loop mov out arpl enter xchg popa (bad) cmc dec clc jne jmp mov and lods jb sbb jne pop pop xchg jae das add pushfw call dec xor nop stos pop out in mov push aas (bad) (bad) leave in (bad) sbb add inc pop mov sahf lcall clc jg mov push inc inc fnop mov cmpsl (bad) test or aaa add roll or jbe loop clc lret sub outsl hlt insb or sbb pusha mov push (bad) scas xor pop sbb sbb jle es jne lcall (bad) sti cmpsb cli dec push inc rcr idivl pop push insl pushf jne xor jno inc clc mov cmp pop xchg jnp mov and fistpll dec sbb sarl push mov out xor out stc mov dec xor mov mov push (bad) arpl jae roll (bad) (bad) jae sbb and enter push stc fdivrl out or iret sub (bad) sub jecxz jle rclb in test call call push les insb mov sub xor sbb jecxz jb adc outsb sahf (bad) hlt andl fstl xor add mov adc adc in xorl ret add cmpsb adc mov pop adc adc fisttpl mov scas xor hlt leave test xor (bad) mulb lret fsqrt stos lahf adc inc inc xchg in fsubs pop add call mov lret fisubr jo fucomp sbb lock bound ljmp lods roll fsts or mov (bad) (bad) pop ficomp repz subl aaa push ds lret loopne (bad) mov daa xchg sbb mov pop dec pop cmc cmp sub jg loopne iret push and insb jmp imul fsubl cmpsb lea loopne inc dec add loop (bad) mov fdivrp hlt mov (bad) and aas loope bnd (bad) or dec and sarb movsb push jne adc sbb imul inc dec jmp test pop xchg xor and mov mov jb movsb mov int3 pop adc iret sahf push inc cwtl aaa int3 xor mov mov inc or or movsb pop pop lods stos pop mov jmp jo iret jo sub bound and fstps insb jecxz ret jg xlat jp sbb or into add iret lods daa call push sarb sahf xchg test push or mov inc daa xor mov loopne rcl xchg pop jp cmp xchg sbb push pop insb ret outsl adc jecxz push fistpll imul sahf mov push sahf or add and add mov inc push fs add icebp inc daa cmp xor (bad) icebp sbb jno push add repz and mov inc lock pop sub aad jno cmpsb mov inc sbb mov je pop pop fwait or cmpsl pop or or out cltd pop mov ret pop mov jne push ja mov lock adc repz frstor fs fdivp xchg mov or adc xor in pop fbld inc xor sbb les test loope fdivl sbb dec add outsb test sbb push xchg leave push cmpsb adc out faddl notl push out testl fcompl movsb mov out mov pop cmp jnp xchg call pop jno gs or out std movsl mov pop push inc mov adc lock popa out out int3 imul mov pop mov jmp adc pop push cld inc imul mov mov mov pop loope sub cld repnz rolb mov int3 jae mov js or mov add jecxz lds pop imul enter ret dec jmp mov sub ds test inc adc sbb jg jo repnz mov cld xchg cmc ja test (bad) insb cmc ss bnd mov ret inc out and push incl dec aam cvtpi2ps cmpsl sti out cs int sbb push repz push (bad) adc jbe (bad) mov int jmp jecxz push (bad) fs addr16 hlt jb dec inc in (bad) cmp cmovnp stos (bad) adc inc jno pop xchg sarl es call mov aaa divl je iret dec adc pop sub push aam sbbb jmp out js lret sahf ds clc mov dec (bad) int3 pusha lods add adc aam mov mov scas lea sbb std imul scas cltd jl shrb dec fwait sti dec call xor pop jb mov cltd cli psrlw inc movd dec mov stos std and ss mov test pushf sarl lods sub orl (bad) cmc movb xchg mov xchg xchg cs push leave sub les xchg clc push mov jp test repz mov clc cli push xchg inc jne cmpsb negl dec sub push stos or test sbb mov into cmp lds pop mov lea sbb or pop push push aaa pop mov (bad) pusha sbbl ds xor sbb stos jo aam int3 je adc mov test or push (bad) push cmpl iret cmc jae add or push xchg out sub sub sarl xchg (bad) mov insl and dec xor add push out sub sbb imul and mov mov iret cli je aas mov xor mov xchg mov lods popa (bad) xor mov xorl out dec mov insb mov sarl pop std (bad) stc push xchg cs ljmp bound dec aas jg das inc or xchg out push faddl push fimull inc cs aaa xchg rcrb mov xor sbb and sbb (bad) sbb loopne iret pop push fcompp aaa inc sbb lcall outsb call jl adc mov imul into fidivl sbb (bad) xlat (bad) das xor sarb push aaa add sub shr flds mov lcall sti xor insb adc call xchg and pushf push loop adc ljmp hlt out imull dec or or shlb fs scas std sarl xor popf movsb cmp adc push (bad) inc ficoml mov int3 shrl leave sub popa test std xor icebp push adc xchg adc sbb mov loopne fldcw (bad) xchg xchg push stc ja icebp mov (bad) pop sti push inc jns into sub idiv jl cmp jnp adc aas push jp add loopne repz cmp sub xor cmp xor inc mov mov lcall jg cmp jb mov lret sbb ss ja xor add ror (bad) jno fs pop test or jnp pop in (bad) xlat insl mov dec dec aad fs mov inc fisubr pop cli mov ret and push ljmp ja repnz js les dec mov push ds cmp nop sub sti (bad) mov adc cmpsb fcompl xchg sahf pop or sub icebp scas es cmp fs push push pop aas inc fcmovb loopne sbb sub sbb jge pop or add pop xchg mov mov into loope pushf cmp dec mov and and mov scas xchg pop (bad) aad add pushf mov lods push jmp (bad) or aaa jo mov imul fwait je test incl outsb fsubs cld dec xor sub lret mov xor mov cmpl pop fisubrl fs hlt add jge add pop nop js adc je cli enter jnp mov daa push sbb jnp ror call repz push pop push loopne inc mov iret pop jne pop xlat scas xor int fnclex lcall sub jge inc add sbb mov or je push sahf xor out cli stos lcall stos mov (bad) jne mov jmp in fcom sub or cmp and cmc (bad) and xor xlat jne out inc or jno mov js xor imul shrl fild cs cltd xchg cmp aam ljmp fwait xchg push loope xor inc add xchg ljmp xor mov mov sub mov push dec std or push imul jp pop stos es inc cs sub sar or loopne bnd dec stc xor pushf inc xchg and popa push je pop cli pop dec into in (bad) jnp std es lret xor daa mov leave jp adc sbb adc adc out mov lods not xchg inc add pop push add cmp cmp lea sti inc test inc cmc out mov std into nop fmull out ljmp outsl cmpsb je and inc scas scas negl and mov iret add aam pop sti adc outsl sbb push pop leave and jno xchg sub lods in and lds sbb jg in out fcoml and fdivrl sarl jo add gs cmp clc xor in xchg in fucomip je repnz mov aam fnsave add xchg sub popf push pop dec xor bound icebp push cltd mov roll pop jg ss inc or clc into in mov cmpsl push sbb cs les jp xchg repz pop inc cmp mov mov mov push call sbb add and mov div mov cmp fisttpll or cwtl mov xchg bnd bnd jle xlat aas mov and (bad) outsb xor jle pop push mov aaa jns and rcrl cmpsb mov jne fisttpll adc imul mov mov fst cmp fnstcw insb out fidiv mov adc add test popa enter fdivrl in in jns push sub push cmp sbb cmc cmpsb lret popl or pop mov mov loopne mov test cmp daa mov call pop xchg mov and (bad) jp (bad) xchg mov shr xor dec or fdivs in xorl std xchg push bound aad jae orps sbb push mov mov mov outsb ret inc or sub shll dec popa aaa cmp sbb jbe daa stos jnp dec jge ds jmp aaa std je lods jb adcb mov fnsave push xor cmpsb inc movsl jl inc mov dec (bad) aaa dec mov sbb out xchg rcr inc add mov (bad) and sahf test lcall add xchg clc sbb neg sbb or add lret outsb into xor mov dec das jecxz push fsubl cli adc imulb ljmp in add cmc outsb scas jecxz dec neg xchg das aaa cmp cld rolb push dec out rcrb rorb sbb lods (bad) jg mov add and dec dec mov ret std rcll mov loopne aad (bad) adc inc in aad sub bt outsl mov daa and cld or and cmp xchg cmpsb push and mov daa push movsb int sub sbb hlt mov sbb cmpsb call xor jb xor inc addr16 xchg add and test push movsl and inc mov pop or jnp (bad) push out sub jg int3 sub mov popf (bad) xor ljmp mov in outsl lods aam xchg push outsb and jmp fwait loope or xchg add movsl mov sub pop fwait cld mov sti inc pop xchg movsb pop fsubp adc inc mov lret mov loop aam arpl mov or int3 pop clc push test mov arpl adc (bad) dec push and (bad) sub jae sbb jl jb stos dec xchg mov in data16 dec in or inc cltd pop mov leave xor repnz movsb je repz jae ss fucomip loope (bad) mov lar hlt xchg (bad) shrb inc push adc rol pop decl push mov mov insl mov and (bad) icebp icebp aaa cmpsl repz imul inc pop insl fildll shrl mulb sub out (bad) cmp idiv ret cli packsswb and pop out fs jns movaps jl test ret ret dec adc hlt (bad) push cmp inc mov ror insl lcall aas je adc jmp scas mov ret mov loopne stc add pop mov ret incl push or mov cltd mov mov xchg das je pusha jo add stos stc sbb fwait inc sub mov fisttp pop ljmp out leave inc les inc inc das stc or and cmp ret xchg and movsl push inc xchg mov cmp leave cmpsb xchg or sbb dec inc mov sub fsubl out icebp (bad) (bad) mov into icebp sbb addr16 rcrl xchg push pop cmc in fildll push pop and pop (bad) pop xor pushf xchg mov pop add push aas dec ds out ja sub nop mov or in loopne rcrl xor adc imul inc cli ret mov out mov jno std xchg (bad) cmpsb and sub or out mov xchg jp push mov sub ficom push pop es push stos scas inc pop sub std pop and lock je jb jbe mov or (bad) int3 cmpsl xor jle nop sti aas adc dec xchg mov inc ror ffree (bad) adc into (bad) jmp lahf test xchg (bad) insl mov inc xor jo mov cmc jg (bad) mov movsb das stc les inc pop insb xchg out sub jp inc add xor rolb test inc aaa and cwtl ret movsl mov mov push (bad) hlt mov stos adc cmp (bad) enter push movsb ret inc sbb (bad) pop fucomip rcrb aaa in lock (bad) jne (bad) fild mov dec push cmp popf mov nop loop mov xchg xchg outsl or inc add stos cmc imul and adc fimul add adc addr16 out cltd sbb lcall (bad) mov gs icebp mov in push and pop gs mov adc shr push mov jns data16 sbb outsb sbb sbb adc stos out (bad) insb cmp inc mov push or aam movsl xchg sti cwtl push dec ja loope notb mov popf jg outsb insl enter xor xor sub divl sbb insl movsb jg loope popa push aad out jae dec sbb (bad) jle,pn or daa mov cltd jge rolb and mov and sbb push arpl sub sbb repz fnstsw dec fst sti xchg in outsl add fisttpll sub test xchg fucomip mov test pop out and imul (bad) pusha push nop cld push and cmpl in adc sub inc ds mov push mov stos dec jp loop shll pusha mov movsl test mov popa lods jg cltd ja jge jg stc sbb mov (bad) bound pushf andl mov mov jns or leave jl (bad) jb sti incl out xchg stos and mov lret cmpsb push in push outsb add dec push push in scas push or hlt pushf push jmp pop push add movsl lret dec les scas mov rorb jne xchg sahf sbb es cmovae push cmp mov movsl cltd in xor cmpsl rolb rcrl scas rcrl cmpsb je inc hlt and lea pop (bad) ret ja mov into add xchg sub sti pop arpl pop test js movsl loope mov add insl dec repnz pop add jae pop xchg popa stc in out loopne xchg sbbl bound cmp inc bound push mov inc sub lret push das mov hlt sbb cwtl cmp lret jbe out aaa movsb dec add mov ret jne inc jae,pn cmp idivb dec pushf add popf imul popf outsb pop call stc mov ret shrl xchg sbb xchg dec mov cmp mov pop mov xor dec or inc xlat xchg mov jmp in jae cwtl sub call cmpsl cmp sub mov (bad) dec and and and iret xor fs jp in mov hlt test movl sub mov aad inc int3 (bad) fdivs sbb aam loopne popa cmc cmp pop fwait das sub cmp push cli sub cmp pop mov xchg push jno jmp sbb ror sub xchg inc mov lret lret sub jnp mov and mov and dec test jmp xchg mov enter or jp or fnstcw xor xchg mov pop iret add jmp dec enter rcrb aaa jns jge loope pop (bad) xchg mov fiadd inc mov xchg jne sub jbe js mov inc mov push lret jns sub xchg je in cmovb aam test mov or out sbb dec xchg and scas mov xchg xchg hlt popf mov and mov mov xor ror out inc (bad) repnz xchg mov adc lret jecxz adc jae loop xor stos cmp inc mov mov xchg pop or and cmp or cltd pop xchg (bad) jns shrb cmpsl sub mov ja call jp data16 movsl xor (bad) or sub mov shrl pop test stos inc aam (bad) enter cld mov mov aad xchg popl (bad) loopne cmp ficomp iret pop pushf xchg ja add arpl pop mov movsl inc mov sbb aaa sub ss shl sbbl cmc mov sub dec jno shll jecxz mov xor lret push and mov stos and lods push test xchg pusha cmpsl mov bound mov jl xor xchg jmp dec push in sub out pop push sqrtps inc cmp rclb pop push cmp adc and in pop mov (bad) test lret rcll enter mov in xor insl and mov pop push push xchg mov lcall pop mov cltd dec push cmpsl inc ss lods fwait out arpl jo es pop pop dec int ss rclb push inc dec jmp and sub push aad repnz dec and rorb cmp dec mov dec xchg mov insl andl mov sub add sbb mov insl fs jns incb sarb in scas clc (bad) and push cwtl sbb adcl insb add pop frstor xor xchg mov sbbb call jne dec insb pushf imul adc fidivrl sbb xor add insb and push aas pop shl xor fwait xchg fbstp lret cmp in (bad) out jns jl add pop in test cmp or pop scas sub cmc sti sbb mov lcall out cmp fsubl daa inc sub push lcall and cmp inc inc out iret xor jp out fs loope mov (bad) popf or push adc fstp mov mov lret test xor inc or push (bad) lea sub jg inc and arpl or jns std (bad) add push cmpsb sub movsb push sbb fnsave xor clc push mov stos (bad) mov repz and or push sarl cmp idivb cmp outsb (bad) (bad) push outsl mov int3 mov lret dec fsubs lods pop mov dec jl mov push cwtl add frstor xchg xor int3 out xor add aaa es clc popf in int3 push xor ss mov push outsl test mov clc jae in clc dec outsb scas jns fildl inc nop add (bad) cmpsb cmp aam rorl pop bound cmp and into cmpsl push xchg inc fstps mov in mov repz lods push pushf stc ds insb and leave lock add fsubl sbb sti sbb mov in mov bound jge mov mov cltd mov jg mov popa mov sahf xor in pop inc mov jp rcll jae and mov jl insb or push loopne xchg cwtl mov mov inc lret cmp dec std dec dec dec das lahf cmpsl js jmp push inc xchg dec shl ljmp vpsubusb loope stc dec les (bad) adc jo push sub (bad) enter and inc jnp jecxz js cmp pop pop adc fdivs adc adc clc xchg aas dec mov cmp jns cmpb lock jo sbb add fadds js mov push dec std loopne repz pop jae ljmp push imul pop dec imul pushf imul stos cmc cmp jne jns (bad) sub fcoml fstpt cltd (bad) sbb sub or lret mov xchg cmp test ret push adc (bad) cmp sbb xchg icebp out leave insl mov mov les stc push (bad) hlt or dec push movl lahf mov mov (bad) inc adc test push rcll stos lret jmp and scas and out out mov fildll fdivrp out imul pushf stos lea clc xchg (bad) xor and cld and push out subb add ret ret hlt dec pop and xorl jecxz mov data16 push xlat inc push push pop call loope xchg mov add push (bad) pop mov and inc push xchg data16 aad gs fmull or xor and enter hlt insl push test sbb pop and imul repz addr16 lret ret js pop fisubl or mov mov inc mov shl or push cli stos test arpl dec gs inc sub aas hlt jp mov lea xor sbb cmp xchg or push cmp repz sub jl add idivl packuswb xchg inc cld push ret mov jecxz adc push mov testb push popf (bad) and push push cmp pusha (bad) pop jo or (bad) arpl pop mov adc popf cld test inc cmp jnp cmp outsl lods movsl sbb inc ljmp sbb and out (bad) cld stos (bad) and cmp adc adc rcll fdivrs test mov dec jl imul popf jge in (bad) xor (bad) aas lcall jle push add add or sarb out and loopne mov push in xchg jmp or aad in push insl mov movsl sub icebp iret and popf pop mov and jno sbb bound mov xchg adc std jae sahf or sbb inc rol add xor aad mov mov dec inc adc cmpsl mov imul sbb cmp add fld sub cmp xchg adc das pop cltd push in dec add dec xchg scas mov xor sbb adc jl mov pop fistp outsl push hlt iret aas or jl jle lret add mov jbe aam aam movsb fcoml mov cmc xchg (bad) sub xor int cmpsb (bad) int push and (bad) jae mov or cmp out stos xchg (bad) jno mov mov loope dec aas aam insl jecxz (bad) mov sahf mov or inc rcr push push jp dec jns jge jno mov scas icebp movsl aas mov pop lods fdivrl inc js cmp inc sbb repz outsl xor sti cmp xor cmp push scas out and adc dec push adc out xor outsl mov add xchg sbb mov xor jecxz into test or push (bad) lea xor sub pop sbb pop fs add push mov (bad) xor jp adc add dec test in sub lds movsl xchg addl jo rcrl dec pusha push addl daa dec fdiv jmp leave mov mov push mov jp pusha ss or jmp test movsl sub or lods jb adc ret clc and mov ss loope cmp fidivr aam sub push mov test outsb jbe mov test inc and ljmp ljmp pop sbb test pop and movsb jb xchg divb or fstl pop ret xchg andb bndldx adc xor in sub xchg lds ficom out jo adc adc mov rcrb sbb in xor xchg into lock xchg icebp icebp push mov dec decb pop aam xchg xchg mov xor cmc dec shl and and lods scas push test outsb ret xchg outsl inc mov jo loopne das sub jnp stos xchg dec gs push push out cs aam stos lods pop negl add jl push push div inc lds cmp sub and dec jnp and cmp inc push add sbb test mov add sbb ja dec push mov sbb xchg xchg test into pop scas dec mov das jg mov (bad) rorl jne rclb and and mov movsl jb push out pop push jno out jle lahf ss mov add ljmp jnp sti dec pop and sub sbb stc mov pusha cmpb (bad) xor test clc je mov mov rorb xchg divl mov std and fcmovnu xchg mov cmp cwtl gs mov inc jno fisub sub mov cmc push test mov aad insl mov jmp adc repnz sub ja sub mov in mov cmpsb (bad) popa in flds jl test je fs sub scas push (bad) mov add mov jecxz jmp jne pop mov and scas je fistpll test xor mov mov call ror ja mov mov fmul pop mov mov mov xor or mov or mov ds in xchg pop add lret mov std (bad) jmp ljmp es mov adc pop cmc lods dec and in fdiv xchg sti out punpckhbw pop data16 mov xor push les sub xchg mov aaa leave xchg in fcmovbe lds leave cmp cmp xor pop inc aas cmp rcrb mov inc adc fwait lock out mov mov lcall and decb pop cli mov lcall xchg out imul xchg mov dec in adc rorl imul mov sbb std push xchg inc cmp push insl mov cli jno sbb mov cmp dec into sub dec cmpsl lret call xor inc mov push cmpsb mov sahf cli imul push xchg lret inc lcall insl out add xchg pop dec jge mov xchg mov xchg xchg add mov pop (bad) xchg xchg repz pop outsb xchg cmp dec sub aaa je sub cmc es dec cs addr16 sbb jnp enter mov sub jnp dec dec test cli dec imul (bad) es or xchg arpl push pop inc aas push push cmp jge sti test xchg push push fucom jge scas fbstp rcr inc popf cmc int3 addr16 repz jl fistl scas sbb xchg sub popf into mov scas inc pop xor repnz in call mov fwait mov jae iret xchg and stos icebp mov scas in xchg mov push mov outsb das rcl mov sub xor (bad) lret cld and cltd dec test dec (bad) pop cmp pop incl popa add int3 pop xor jp addr16 xor sub adc rclb mov xchg push call sub sbb mov jbe pop rcr dec lock cwtl bound sub icebp jno,pn test dec cli outsl fldt int3 adc push insl arpl in scas xchg fwait imul cmp and dec not push push mov mull mov add push sbb dec fistp (bad) xchg (bad) fimul inc pusha jbe outsl push xchg lret inc jb dec aas sbb mov movsb lcall fs test loope adc pop cltd into shlb mov cmc cmp popa pop push out inc sbb cwtl jnp push add jmp xor rorb mov lret lods adc cs xchg mov mov js popf enter in cmp mov mov test aas call mov lea push orb mov mov push leave inc mov adc sub or mov adc outsl add mov or jb (bad) xor jns in cmpsl cwtl and xor enter pop (bad) inc cmpsl jne popa js sbb inc icebp cld push mov push push dec xor or pop daa fcomps test repz bound hlt xlat xor cmp or mov push mov cmp sub jns pop or loope add insb inc mov int push (bad) incb movsb out fsubs mov cmp jp dec cld fwait outsb mov (bad) lahf inc test sbb fisttpl fsubrl jne push xchg pop data16 fldl xchg sbb jo inc movsb jne (bad) mov mov mov push dec cmp loopne pop into dec push cmpsl mov cli mov xlat adc out push fiadd dec push imul push in push dec fimul cltd fisubr insb or sub test pop jle je in lahf cmpsb mov dec mov lods dec sub clc xor imulb mov mov aaa js shl gs xor mov pop cmc aas aaa cmc mov xor cltd xor fabs notb aas out jl fdivs sbb shr cmpsl push push pop xor inc ret mov test pushf cs lea fsubs dec sbb (bad) sub pop pop sbb rolb inc push jge loopne jo int3 mov sub sbb jmp ret and daa jb add test nop pop ffree cmpsb ja call push push aas pop sbb or mov or icebp dec lods jns xchg lds cli pusha shll in push fs mov rclb ja push adc cltd outsl ret mov icebp xor pop or (bad) icebp push or enter adc (bad) icebp test int3 and mov xchg insb sbb cli lds xchg std push lahf cli (bad) jnp mov les jae xor (bad) int ficoml dec mov (bad) sub testl push ja add sub inc mov mov jbe xchg mov push and sub inc roll xor mov cmpsb int3 pop cld cmp aas adc mov rol outsl popf in js,pn test arpl rcrb push push cmc sbb insl and jecxz jge xor lret dec (bad) xor je outsl fstl in test sub jge shrb jmp aad ds test aas outsb in xlat dec leave push shll inc ret pop cmp dec cmp inc xchg aas in xchg inc cli andl and mov es pop dec shrb sbb aad xchg push outsl lds pop fildl nop lret les jp mov insl add popf (bad) out icebp jbe int pop fs dec adc lcall loopne je mov jb int mov movsl cmp inc xchg adc int3 test pop xor dec add sti lret mov xchg mov pop push or pop inc mov push out and out sarl push mov xchg movsb (bad) data16 xor cmc mov jae mov push in loopne xor in repz dec cwtl xchg icebp fstp xchg shrb pop enter sub lret movsb mov idivb mov enter je mov adc fsubl rcrl js push mov mov int3 scas inc jbe mov inc pop sbb push dec or popf xchg or add jbe xor jp and mov pushf call daa data16 mov jno decb push inc sbb ss push lcall ja outsl test xlat aaa pop add add or stos jl ret mov mov inc (bad) mov andl shrb cmp fstl push adc outsl arpl ret ljmp call sub sbb dec cmc out add cld add rolb lcall dec lret lret les rolb popa das mov pusha fsubl cmp (bad) repz test mov cmp and xchg or cltd pop xchg mov pop (bad) aam orl test jns ffree push lahf cld sub xchg jnp add sub mov out fmuls scas ds xor loop test inc mov mov mov xchg sbb jae sbb stos mov push mov sbbl xchg mov and je mov dec test mov out (bad) aaa sbb pop or leave mov aad xchg jp clc mov jae and pop push stc pop insl mov cltd movsb sub lret dec stos xor test cmpsb mov fwait mov shrl pop add push imul roll inc (bad) or (bad) xor inc jg pop mov dec sbb pop cmp fsts dec add mov xor in outsb push dec mov inc popf xchg jbe out fidiv xchg and inc inc decb sbb (bad) and (bad) cmp and push push push mov enter sahf stc or adc add sub (bad) jmp inc cmpsb add xchg lret or mov outsl inc pop or les inc je jns inc aam orl mov lock mov into jns pop push mov mov (bad) shlb outsb fwait cmp jb jecxz and sbb mov pop fsubp and and inc cmp hlt (bad) (bad) add jecxz sbb rcrb out cltd and jl and xchg pusha xor mov pop sub cmp adc inc dec sub sahf dec insb dec imul aaa xchg notb icebp lock pop test lahf mov sub ja mov sub mov push inc repz data16 mov or dec nop int (bad) lret or mov xchg dec fldcw loopne stos shl clc lahf aad jb cs jbe cwtl inc mov sub fidivr adc into pop sub lock push jge stos shl aad stos setp jg ficoml adc add jae lea fnstenv xchg jge (bad) pop mov imul jns data16 jne out and sub leave leave int3 lret cld scas push frstor repz jns nop (bad) shlb mov cmp dec sbb sti adc push mov cmpsl inc sbb mov pop movsl mov lahf or sar addr16 and jb stos sbbb sbb std adc push add jnp cmp add push sub pop add mov jno inc imul jge insb mov adc pop mov mov clc xchg add jo add and pop mov mov je cs ja test mov xchg je pusha notl mov mov movsb mov fs addr16 pop les lds andl xchg ds pop mov pop rolb lcall popf mov out jg out icebp cmp std adc daa call les or sti pop data16 xor repz insb push mov inc (bad) lods mov add (bad) jl rorb jl in cmp jl decb fsub out les fcoml adc je mov inc (bad) xor imul pop dec pop cmpsb sub inc cli loopne in aaa lock push les jle fcmovnbe imul mov adc loopne lea loope mov jo jg and jle and stc add cltd xchg fwait dec xlat (bad) ja jmp sti lods mov not mov mov cwtl mov fstpl mov (bad) std fcoms pop and cltd mov push adc dec lcall xor jb lret sub pop jg push loopne pop cli jecxz add insl mov daa data16 in or push fimull and in push mov mov in enter mov mov test push or (bad) sub jl out mov or xor push push (bad) iret pop dec jle jb add jp xchg (bad) testl mov jns jecxz fisubl adc inc lds sub or test pop xor add imulb push arpl rcrl xchg scas outsb fdivl mov xor ljmp mov cld sbb je (bad) ds mov lods pop data16 xlat out sub xchg dec or out lret pop inc enter scas adc ljmp test fucomp sbb push (bad) ds xchg movsb dec xchg gs (bad) push into adc fwait xor cmp (bad) dec mull push fisttpl mov gs mov aas adc test add loopne in push push pop popf enter in (bad) cld popa fildll in hlt cwtl fsubrs jne aam cli in inc cmpsb xor jecxz aas (bad) sub adc test inc mov xchg (bad) hlt ret mov fildll repnz mov test mov loopne adc loopne cmpsl fmul fcoms cmpsb jae in mov push jne scas (bad) adc cmp cmp cmp mov push das daa aaa mov aad out dec push dec mov add push add sbb je pop fnstenvs mov xchg mov aam add cmp nop or push aaa stc stc add or (bad) aaa mov dec movl cwtl cbtw add cld mov push push pop scas pop daa cli jmp sub mov jno pop test adc cmp enter xor xchg repnz aas loope es jb adc fistpll mov ror push inc jne mov sub inc sbb push pop push ret or fwait jns outsb xchg int3 scas stos pop sahf ljmp sti and adc mov pop in lret adc xchg mov gs and push add jo mov pop fs stos xor les shr (bad) fsubr add stos int3 lods (bad) jb int arpl cmp pop jno pop xor jp fs pop rorb addl cmp sub je adc mov add addr16 inc pop jecxz flds and lret dec add inc insl loop dec lea sub insb xchg add insb cmp shl mov mov pop sahf jmp inc les sbb daa inc pop stos les sub jmp ret inc mov (bad) (bad) sub stc aam xchg cmp call loopne adc xor (bad) repz notb in cmp sarl int3 movsb inc pop nop test sbb pop or xchg push icebp outsl sub int3 dec jne mov push jle (bad) ret or and aam jmp push cmpsb movsl xchg (bad) mov and inc aam xor inc inc dec sub ds es jnp mov jge pop aad xchg popf dec daa pop je sbb inc insl push dec cmpb lods ficomp inc pusha out inc insb jecxz xor inc addb adc xchg (bad) fcmovnb jb cmp mov adc pushf cmc add stc xor lahf outsl (bad) mov call in fdivrs aad in inc mov hlt or out aaa or sbb cmp lret cld setns sbb call (bad) mull lock out hlt (bad) xor cmp sub dec and jg fisubl jnp popa mov xchg subb mov add and push mov in mov gs dec add popf lods les mov rorb mov adc mov jbe (bad) out je not mov cltd outsb lahf xor inc fmull rcrb xchg xchg pusha adc inc jb xchg clc dec xor push inc jge in xor inc inc pop (bad) push xor mov jbe das jmp repz mov jnp movsb sbb scas sbb sbb adc adcb jbe cmp std and dec add jl aas inc push push push stc lea add xor lds mov and mov fs lods aad cwtl adc insl adc and out pop adc daa sbb lds das (bad) mov out sbb ds push dec sbbl jnp push mov push xchg jecxz jnp into jmp sbbb push cs or fcomps stos lea pop xor test add out add insl data16 dec mov in mov sbb rcll xor lahf jl jne sbb dec adc stc lcall ja dec into fsincos iret shlb fisttpll pop je (bad) mov push incl add imulb jp fisubrl (bad) mov out mov mov fildl inc cmp mov fidiv mov aam push dec imul mov xchg cltd jmp aaa push imul lods testl sarl in aad ljmp or bound loope jp add popl or or pop movsb out pop enter cld jmp or shrl (bad) adc pusha xchg loope ljmp cs adc nop (bad) in into jnp in arpl mov jle xor bound push inc xchg movb push push les push mov lods lret stos ret inc pop push je das loopne inc pop cmp adc xor dec mov je jmp jmp out inc inc or inc fwait test pushf push ss sub cmp insl jnp mov xor mov adc or js xchg cmp cmp fcoml jmp mov push sqrtps or pusha cwtl push jg dec shrl bound (bad) aam std xchg sub stc mov mov push push mov out xchg stos inc in cwtl imul sbb cwtl push xchg fildl sub test add xor cld mov jb pop push stos jg in jns je stos divl iret adc add test fstl jae cmpl xchg (bad) add test xor gs push or rol push mov out or (bad) out inc sub inc lods in hlt jno ret outsb cltd popf push push push mov pop loope popf mov mov xchg sub pushf xchg gs jecxz gs stos mov pushf dec mov mov insb sub mov lret lods push adc mov mov (bad) lods cli pop cmp jns shll js hlt andb inc push add in pushf cmp pusha pop mov hlt (bad) int or ja rcrb ret push stos in xchg xor dec cmpsb inc ja jl mov test and lds es and adc mov or jecxz js pop jb mov call sbb cld sar sub adc dec in fist mov mov inc ror mov dec xor cmpsl mov and (bad) (bad) dec (bad) xchg rorb lods stos push orb loope out mov lret shlb mov mov dec in fwait add dec scas ss in std xlat inc inc iret ds lea inc push aam cld jle sahf test test mov rcl adc add hlt std daa inc cltd clc icebp and add or xchg lret ja jbe mov shll in and mov mov mov jp (bad) repz dec mov sbb insl add mov scas out jb in pop jb or mov popa lds mov pop jbe test adc into fild (bad) pushf jp jge lcall push ret push cltd and ret sub xchg mov push xor jmp sub pop bound mov mov sar gs test push call pop stos insl add fs jo add (bad) and pop es lock movsb pop scas xor push aaa inc out xchg xchg cmpsl jb xchg add insb or lret xchg iret cltd decb jns movsb mov stc mov bound fucom pop mov (bad) jno rcll push aas sarb sub dec inc pusha lock mulb mov ss xor (bad) into lods fwait sub clc ds mov add sbb fcoml dec push cld (bad) mov loop call lods sbb mov push adc lds and push imul loope sub xor lods jl sub jg sub imul je dec adc (bad) mov mov clc iret call mov mov (bad) pop imul add mov (bad) jno nop test (bad) mov xchg cmc fs sbb (bad) leave out inc in (bad) ficoml aad stc inc push stc outsl pusha test push fisttp mov pop insl xor gs pop push lret xchg movl jge push icebp cltd push movsl popf xor gs mov rorl mov test cmpsb jle xor push sub int3 pop test arpl push jno xchg repz incb outsb sub ret adcl out data16 pop jmp or mov push add xor mov dec or scas andb sbb stc pop lock mov xor sub pop cmp jb arpl mov sub cld lock aas mov in sbb mov mov out inc pushl in jmp dec imul or sub les mov scas into mov cmpsb jle shrd or incb sbb mov xlat mov cmpsl addr16 mov mov mov ja cltd lahf iret and xchg sub test xchg lahf jae pop cmp je call int dec or mov push gs sbbl pop mov jg shlb push lock aad cmpsb sti xor pop adc lcall mov leave pop pusha js jns aas mov pop stc xor jl repz dec sbb xchg and add xor test (bad) fidiv stos ss inc rorl push and adc jp push dec or sub les mov add gs sahf xchg sub movsl add inc push inc push push xchg cmp pop mov or stos movb or push in mov andl inc inc or mov mov arpl jecxz stc insl mov pop dec mov test dec repz xor dec xor clc mov mov xor imul push xchg fisttp or inc mov xchg (bad) jo dec (bad) mov sahf push cmpsl or rclb lret push fisubr dec aas xor jp loope adc dec push movsl int adc or mov nop xchg xor sbb call xor loop in cmp pop neg dec sub cmp push dec (bad) jecxz fisubrl clc or dec xchg lahf sub test xchg jecxz push fcoml test dec pop xorl mov (bad) mov push ds xor adc sub mov aad rcrl lods out loope imul sub in and in fs sub fstpl adcl (bad) int3 inc orb lea lahf push xchg mov sarb or add jo jb int insl cli loope aam int rolb movsl sti or fadds inc je das xorb dec call push add xor (bad) adc push sbb jle int fs test addr16 cmp popa or in push mov in push int int3 jge popl mov inc add cmc push cmp scas fiaddl jbe pushf pop sbb mov scas jmp mov rcrl add add test dec cmp jl inc rcrl inc pusha dec pop movsl lds mov pop xlat sbb int add popa pushf mov xor xchg pop fs push jge fidivrl add popf les test cli test dec ja in dec stc dec sub rclb sbb mov cmp lds mov int3 (bad) insl jbe rcrl into sbb (bad) fldcw (bad) sub push mov mov movsb sub and cli sti shrb out cmp jecxz jne and jmp add popf mov out mov mov pop mov in push ret or inc test sub jo or jp add push out sub (bad) jae loop ss int mov dec sbb into dec cmpsl divl ljmp ffreep sbb cmp pop leave mov int inc push sbb dec push mov mov out xchg (bad) icebp insb dec mov lds les lret (bad) scas ret call add pop pop adc outsl sub pop insb mov jb mov push cld mov and sbb lret lret sarl mov sub fistl bswap imul lock push sub pop fildll mov xchg mov xor gs mov cmp dec sub loopne sbb or mov shrl push mov setbe inc cmp fcoml icebp mov in cmp outsl lock fs inc pop int mov das adc aas or leave out insb push int js fmul mov push xor stos dec popa and inc pushf ja push and pop clc and test fldcw out cs call jp jge and scas push in inc (bad) sbb cmp lret mov adc mov dec push jl ficompl mov out sbb cltd adc or scas adc pushf add inc rclb fsubrp adc dec xchg in ljmp jmp into cli sub xchg jns test movsl test adc not notl shrl rcrb push daa outsl pusha adc test mov mov mov mov sbb and ljmp xor xchg cmp dec xor push cmp cmp lods and out mov outsl (bad) icebp sbb ja mov iret sbb sbb xor fisttpll mov mov push mov das push rclb xor mov dec jno jns push cmpsb dec aad sbb (bad) (bad) pop cwtl xchg fisubrl insb ljmp mov fisub jns mov (bad) in push cmp fldcw mov out pusha push push js push mov test sbb pop push insl push stc mov loopne push bound jmp lea in in sarl mov sub cmp insb mov out inc or std das data16 adc (bad) clc or icebp divb mov jp jbe roll jle dec lea push inc lret cwtl jl fnsave mov (bad) sub stc and jno add lret test lcall fcomi cmp movsb aas arpl dec and addr16 push aad sbb jo add inc pop cmpsl lds push xchg loopne test mov (bad) idivb sub cmpsb mov or pop xor lcall xchg stc mov ret cmp or stc ror jo,pt cmpsb mov mov outsl mov (bad) cmp outsb push and je and fldl pop cltd jo leave or fstpt add lods or out lcall lods and gs sub mov lea nop mov push dec outsb inc fsubs jne das flds mov pushf pop decl lea cwtl (bad) jg sub pop mov leave les lods shrl mov (bad) dec dec das imul faddl loope jecxz mov or in add aad adc cltd cli inc cmp scas movsl inc in xchg out imul in jo int sbb fstl mov xchg lock xor ja int fimull mov cltd sub or imul mov es or inc mov insb jmp shlb loop push cmp xor (bad) fnstenv (bad) and cmp stos gs cli sahf add daa cmp ficoml outsl fcomps pop (bad) dec jge mov inc jae mov adc lds lods xchg call push pop (bad) out push movsl gs lds fildl (bad) adc rcrb push sbb sar ss arpl neg (bad) arpl popf and ret push imul cld out dec xor mov xlat cld adc clc nop in mov inc lcall popf push (bad) hlt out mov ret call and sbb daa jle jl mov enter dec in out mov xchg push (bad) out push cmp or arpl nop add pcmpgtb mulb dec lock bound pushf imul mov xchg ljmp lods mov xlat mov lods mov adcb xor push mov mov test xchg dec imul ret cs cmp gs cmp push sbb xlat (bad) fldl add and (bad) (bad) jns mov (bad) aad adc cmp cmpsb ret inc mov in imul lods xchg and insl sarb iret sbb cli mov inc out fistp int3 or shl cmc mov mov xchg jg adc cltd das lods xchg in jle mov outsl cwtl in inc lret pusha pop lock xchg iret inc and cmp xor aad pusha (bad) xor adc jg cmp xor cmp add pop pop rolb mov mov sahf cld fidiv out xchg jb adc push aaa dec sub sub mov xchg or cmp jmp addl dec dec lahf pop ret sar decb xorl push (bad) push nop in xor nop xor sbb les rclb pop or pmaxub inc adc or ret or incl inc lahf sub scas inc mov and mov jmp int3 lahf jg movsb jmp pop xchg les js pop jg sti leave xchg loope jl test scas xchg or jbe pop add xor mov jae movsl or or test (bad) push int3 pop and fnsave insl pop arpl and jo or add scas lret cmp sbb stos imul stos pop add xchg (bad) push xor pushf adc sahf int3 outsl cmp sahf dec add into dec jg cltd repz xchg stc and icebp xchg sub cmp fs xor int insb and cmpsl insb mov xor ret sbb mov jle mov push aas jno push pushf loope sub test je outsl das add mov sbb in movsb sub push iret fidivl jmp push dec jge jmp dec pop adc bound inc push test dec icebp xor push es add or sti mov fldenv outsb (bad) mov add inc cmp jge dec (bad) lods dec aaa inc js sbb mul stc xor mov xchg inc test xchg inc lahf jnp (bad) adc int3 mov shl mov push xrelease das lcall xchg imul jo outsl sbb add cmp imul xor or lea ljmp mov rclb sbb push fcoms pop cmp adc push and in insl push xchg mov fmull repz cmc icebp (bad) lahf out hlt mov pop clc (bad) je loopne sti or jae stc les inc sub sti cltd xlat stos xchg (bad) (bad) in inc sub sbb (bad) inc ljmp and mov orl lret jl js out mov fsubs fcoml adc aam dec pushf pop pop xchg in scas jnp jp pop cs mov push jecxz in sbb and pop insl ss les je movsb mov sarl push inc dec hlt cmpsl sar test fsts into jae pop dec xchg popa add es je rcll mov xlat sub sbb std xchg popa inc cmp mov cli mov push lret addr16 pop jae mov dec add and xor xchg pop leave (bad) mov shrl sub mov fcmovbe fmull stos fisubr (bad) adc es cltd into imul cld mov stc sti mov rorb sti outsb mov xor js xchg dec imul add loop mov (bad) mov insb jmp jmp and dec std fstpt fimull inc fxch leave lea faddl test and enter in aam sbbl pop daa push xlat inc sbb cmp xor jecxz mov pop shlb imul pop pop sbb sub lds les rorl repnz pop iret fist cmp cli mov nop cmp xchg mov mov aaa add movsb push sar dec xor inc dec (bad) rclb rol (bad) pushf mov je out push jae fcmovu pushf scas dec inc daa push and push xchg jl mov sub idivl adc push pop mov mov (bad) insb loop push push ljmp inc cmp mov arpl mov push lret inc add lahf movsb adc lea mov cld lds jb push loopne xchg add xor add dec std push stc scas lods xchg adc cmp or (bad) pop mov mov push loope add jge adc cmc cmp cmp cli neg sub sti popf jae xchg (bad) shrb inc dec xchg int lea dec inc push jge,pt shlb enter lock popf ljmp fdivl sbb (bad) mov jns (bad) popa sbb pop (bad) cmp out adc stc sub dec scas enter jne icebp in je sub push ds sti jae fstps loop and (bad) test pop (bad) je or push das sbb add (bad) and jo pop add cmpsl idivl sarl addb mov insl aaa cmp jns clc shr (bad) dec xor xor mov adc push cwtl jnp cmp insb fsub cld ficompl or pusha push fdivl fisttp inc pop jp (bad) fiadd or sub repz inc push sub pop out inc adc inc scas ficom (bad) pop popa sub imul int3 fs jnp stos jne sar ret xor cmpsb pop lods jmp inc (bad) lcall lahf lret cli xchg push arpl loope jae and test pop mov (bad) out lahf xchg jl adc push out sarl sbb mov mov mov pop (bad) jns insl jmp popf inc subl movsl mov js xchg lock das outsl mov adc dec insl cltd notl xchg sub pusha push out push pop shrb cli cmp das jb lcall xor gs ret cltd aad or xchg mov mov cmp xlat test inc lahf adc out shrb push adc inc cmp ret clc (bad) out xchg cmpb push (bad) push add out inc cs pop or repz je lds les cmp lods shrb fstl int3 fdiv pushf cmpsl inc dec bound or lret and lret rolb mov ret mov or sbb mov faddl jecxz mov icebp xor or cmc dec cwtl arpl pusha call cwtl outsl mov pop adc les cmp popf xlat jns mov sub shlb mov or mov sbb es (bad) jl adc test movsb lret mov inc loope xchg push jnp jle in add icebp in xchg (bad) fisubl (bad) shll lret and cmc pushf or aaa rolb (bad) jbe xchg call push loop pop popf pop test jmp mov iret imul cltd jnp mov jbe xchg dec mov cld out jp repnz adc push loop xchg jb mov aam xor jae inc dec sbb jle push stc arpl mov mov sti pusha aas sub icebp clc divb mov roll loope cmpsb pop mov dec cltd movsb inc push cmpsl adc daa inc inc out insl or std mov xchg dec arpl sbb push imul inc dec (bad) cld adc stos out cmp dec rolb gs cmp sub mov push mov add pop or ret mov in ja and (bad) pop jno mov and lods adc push fwait out jle aad scas das scas (bad) mov and icebp sub mov rolb add inc jle mov loop or mov add sbb cmp (bad) scas lcall fsub pop or mov mov lock or pop call sbb mov cs pop adc push adc pop mov enter push dec lcall push mov sbb cmpsb pop ss inc sbb cmp pop dec cmp lods jp mov sub inc mov push mov xor pop js popa roll (bad) hlt insb xchg add adc jno mov cltd in daa xor cmp lret gs inc xchg xor mov movsl jg fisubrl (bad) call mov stos sbb push imul mov lret leave cmp pop push shrl clc loope (bad) adc push mov fdivrl pop push in and lock movsb and adc jae lret cmp out cmp cmpsl or xor dec fcomp mov movsl sbb push imul repz test loop imulb aas pop sti and sahf int add ds (bad) jbe dec int3 dec int3 pop adc repnz sbb inc pop mov push add addr16 in push inc popf pushf test or dec hlt sub fiadd outsl lret jmp adc add inc push xor dec cmc add jns aad sbb lahf das fsubr nop sbb mov and push arpl fisttpll in mov jle pop cmp das sub push jmp jle sahf in out and push stos pop mov imul cmp add push lret and inc dec test (bad) pushf and xchg test push xor sub rorl shrb xchg push (bad) xchg or dec mov out push imul pop push dec pop stc inc leave popf mov daa cmpl movsl (bad) pusha mov dec add outsl rcrb cld xchg arpl mov loopne fsubl xchg add icebp jg mov mov in push pop mov cmc inc pop (bad) push sub cmp ret data16 mov scas in bound (bad) iret and out aaa cmp lods mov dec pop pop inc sbb jmp outsb lock test and jae sbb pushl lret (bad) add stos jne es xchg mov mov test test in (bad) and mov imul lods addr16 les aam scas or shlb insl test mov inc push pushf rolb sar or in ja (bad) scas lahf or mov xchg punpcklbw stc lods stos cmp pop mov sub ss pop enter lds jecxz clc mov lods jo mov mov push adc gs xor xchg dec insb pop jae std in xchg mov xchg cmpsb nop xlat sub jbe out mov stos cmc add rclb inc sti lret fwait mov imul push cmp ret out xchg fidiv mov fisubrl mov sub in cmp sub in cmp fstpl ljmp fldcw outsb fidivl dec cmp xor out or xchg mov mov pop (bad) or ljmp pop xchg outsl inc pop push repnz dec (bad) in mov push mov test out mov loopne aad pop mov jno and fnstcw mov mov or das or mov mov mov mov push imul xor mov adc movsl add dec cmpl in test leave jne cmp fs sbb bound sti dec test fsts inc std rolb or fisubr adc xor jge sbb jp je fsts jmp leave add ljmp mov lret mov call xchg out insl cmpsl stos pop add xchg dec xchg mov inc cltd and dec enter fcomps mov cs outsb (bad) xor test push xchg addr16 adc (bad) or mov mov mov lcall mov negb cld add and enter cmpsl jbe pop lea mov sub jmp xchg push (bad) repz bound testb (bad) mov jnp or aam inc rcll pop pop repnz push sahf pop pop ret repnz inc xchg (bad) or mov and push rcrl and push aad pop jno push ja das in jecxz mov xor cwtl push or lods jo out test nop adc dec scas (bad) fldcw jp (bad) dec icebp inc fwait pop ficompl outsl adc dec push xchg jmp rclb push mov popf data16 pop or mov out enter push jmp mov out mov sbb ljmp add push icebp xchg mov test mov pop lods add xor cltd sahf int jle in mov cmp cmp aam (bad) pushf ds sub stos sub lcall and outsl lods icebp les hlt call dec stc adc repz call mov pop fimul adc adc sub stos mov mov ljmp lcall mov loopne add jmp orb aaa mov into call cli jns xchg fucomp mov iret jp lock xor mov mov icebp repz jae incb push cmp out mov loopne scas adc (bad) mov pop cli outsl adc bound stos sbb clc sbb adc mov sbbl scas pop in cmp adc xchg or lea mov cld lea pop loop (bad) mov outsl nop nop lahf js in inc jp mov popf leave mul sahf mov adc inc dec add movsl lods js icebp ss sahf fucom and jmp lods int test sub mov cmpsl rolb sbb das (bad) (bad) adc cmp jl mov push mov addb sub test push mov lea push mov add test xchg pop das mov push add mov dec add sub imul (bad) divl (bad) scas call rclb stos xchg lcall jp push je in xor cmp sub lret (bad) stc pop or (bad) lods dec cwtl and adc bound add in loopne push das jp push xor dec xchg mov (bad) repz or sysenter test in roll dec sahf and cltd repnz js cwtl add les int3 adc imul (bad) cltd push bound mov iret jmp mov mov outsb pusha xor mov leave mov gs movsb call push std sub outsl dec cmpsb sub jl std push test cmp mov lret pushf outsb and in add je out inc ficomp push aad daa fld gs loop add movd (bad) popf mov jns,pt (bad) jmp dec sbb dec mov adc and lods jbe in push ret push cmp pop (bad) cmp ret les mov jg mov es ljmp jbe jbe and jecxz xchg mov xor inc fist daa mov inc mov jmp xor adc xchg daa jno cmp pop push sahf popa inc jne mov leave cmp cmp mov inc out lret fbld incl mov std sbb add push js mov push enter (bad) std (bad) jbe (bad) or pop or xor add cmpsl ss or daa xor dec sub ja push ret outsb mov jle,pt lahf adc lret mov ret shrl mov sbb push out (bad) or addr16 mov cmpsb add dec loop loopne and cmp loopne sahf outsl aam popf enter push (bad) mov hlt xor push mov xor xor jno arpl pushf out pop cli xor loopne test sar xor xchg das mov xor fnstenv add and push jae (bad) fidivrl xchg cmpsl test xchg dec (bad) jno nop int3 mov sar fisubrl cmp add cmpb adc (bad) or mov lds or xlat mov lods dec cltd and clc test mov imul jo lea xor or loope fisttp out gs out je lods mov jo xchg and iret cmpsl mov fdivp mov outsb in lret push and and ret xchg xchg je sarb mov mov xchg and dec arpl jnp adc in lea rorb bound add nop pop mov dec sbb into frstor outsl clc pop or push fmuls divl push push mov cmpl mov xor movsb dec leave xchg repz cmp imul mov pushf cmp stc sbbl daa push es mov ret pop sub push out sbb xchg dec add or sahf std stos dec push (bad) loope int3 mov xchg mov (bad) pop pushf or out push lods dec inc js or hlt int pushf popa and xor loop lcall pop aas mov adc and vsqrtpd adc push test (bad) loopne gs repz or adc (bad) sub dec roll inc call cld push fstpt inc sbb out subb xor adc rcrl xor sub icebp adc pushf scas cld lcall cli sub push and inc xor imul pop jo in xchg dec call das pop int3 in stos lods mov dec sbb mov dec cmp cmp icebp cltd test ja and jo mov imul std mov out jmp mov scas inc mov inc divl xor in mov int3 pop push and cli mov cld pop jg leave push jno notl test stos cld cmp insl int push in jg stos inc mov inc jmp pop pusha in xchg push push jae pop cmc clc scas jno dec xlat ljmp inc add mov in sub xor int3 xchg stc push movsb cmp and mov cmp mulps pusha xor xor push push cmp jge ret fidivr bound in push push dec repnz cmpsl push xchg inc mov xor ljmp cmp ret insl cmp hlt popf adc lret ss test std shrl cmpsb repz and call nop in push repnz jp sub and dec stc std fwait pop (bad) dec lock adc sbb mov arpl sub fwait or (bad) repz sbb hlt or hlt leave lret mov push sub adc cs gs mov cmc (bad) xchg sub fsubr cmp inc scas xchg aaa jno push sub (bad) je mov test js add pop jns mov repz cmp jo stos stc inc and outsl dec jge insb out cmp mov nop mov xor test fs lret xchg das mov cmp (bad) fwait and js push or mov loopne ret pop loop adc xchg out pop mov ja adc push mov fldl lds mov fisub mov cld xor sbb (bad) sub leave pop inc call loope jno cmp xchg or pop jno pop dec sbb adc xchg hlt fs ds (bad) aas (bad) jbe xor and or pop cmp adc lods dec scas adc lock jmp adc aad mov inc cs mov add popa adc jmp inc mov mov push fimull push adc enter adcl (bad) mov (bad) lock movsb xchg mov fs and pop cmp dec inc inc fwait jb mov aad dec fildl es ds sbb out test xlat dec or hlt fadds mov (bad) dec lcall pop mov sbb cmp pop jnp mov xchg mov sub shlb pusha xor lret push js pop jae inc in bound or xchg sub push and stc out fnstsw or dec clc int3 aad sbb cltd inc adc pusha ljmp pop xchg in arpl les cmp add insb or sahf xchg pop inc mov aaa and sahf mov or into iret xchg loop sbb cmp pop adc cwtl outsb lds mov adc (bad) frstor add lret scas xor inc xor mov lcall icebp xor iret aam jl jo vpandn push mov (bad) pop jns inc push sbb cmp cs xor icebp into (bad) jae int push xchg adc icebp push fwait rol push fistpl sub mov inc pop int fistl (bad) je inc sbb lock ja push mov or mov dec xor xchg add add mov test outsw imull into ds pop std loop sbb lahf dec (bad) insb cmp movsl mov fwait imul mov push or clc gs js adc xchg nop mov xchg add sbb jbe mov push cmp sub xorl dec jbe out call sub mov adc inc jo das xchg sbb sub stos loope inc and push sub (bad) xor xlat mov aam mov std xor in adc loope mov rcr dec in icebp or test inc xlat and inc cwtl inc push (bad) xchg (bad) mov adc dec lret andl mov mov xchg (bad) cmpsb mov jbe out inc pop dec cmp mov daa jb mov inc test cmc mov mov imul sbb mov and mov push (bad) dec and imul mov mov std xor or arpl mov xchg add fcmovbe xor and sbb mov mov cmp (bad) mov mov jo push or outsb cli imul mov inc push out aam outsb inc popa mov std and xchg mov xchg add add inc hlt div inc pop inc inc jmp mov (bad) fsubl adc sahf sub lock or sarb pop or (bad) jg mov jmp mov cltd and jbe sub mov push push sbb repnz clc imul fwait xor iret xchg xchg mov jbe test rcrb or add jne jl xor mov mov and cmp das or notl fdivrp test in div and sti sub outsb jg lahf lahf cli fwait push or mov xchg ja std xor mov adc es cmp xor jns loope int3 (bad) pop push xor mov mov imull int movb push test enter mov fnsetpm(287 cld xor arpl sbbl xchg out hlt test sub das (bad) stc pop cmp sti ret push test and mov test cld mov loopne pop bound stos push sbbl stos or inc inc mov xchg lret into sbb pop jnp xor xorl jb dec fldt cli add or mov rol sbb out push xsha256 enter fbstp cmp test mov outsb inc stos in les ljmp test mov clc mov add pop and mov outsl sub in xlat ja mov repnz jge aam add mov pop (bad) enter pop xchg shr xor add push stos test inc sbb pop test imull mov movsb das sbb jae test jg pushf pop les movsb aas js sbb les and sbb mov mov cmp or jb test dec lods jns hlt roll mov es rcrb leave mov int mov mov aam cmp mov sub test ljmp ss pushf cld mov inc inc (bad) dec and sbb shr or or movsl es lds mov in sub add int mov or dec cmp mov popf cmp fnstenv inc (bad) sbb dec adc ss xchg cmp mov movsl cltd fnstcw dec ret pop and cwtl inc push repz jp loopne adc neg shl pop cwtl mulb in add mov repnz fcmovnb int3 mov cwtl test xor xchg push cltd loop xor mov in push dec cmp out mov fild sbbl jp mov xchg outsb mov (bad) cltd aam ds jnp push mov sahf pop mov lock vandnps fistpll fstpt dec test push (bad) mov cmp and sar push inc rclb pop dec ret pop cwtl xor dec sub insl lds push pushf lods ljmp outsl stc loopne es loopne xor adc packsswb ror cltd andl or arpl pop or xchg jecxz adc cltd fisubl dec jg fisub mov adc daa loop or lret push fildl loopne fdivrs test movsb pop mov outsl nop lods shrl or in xor inc mov mov jnp lds sti jp clc xchg jne and in jns xor sbb push ja pop lds daa pop (bad) jo mov hlt loope clc ficom or fcmovnb inc xor sub dec test int aas and outsl mov mov mov mov fidivl inc and push test push push sub and int3 xchg adc iret xchg loope sbbb inc cld lcall daa push cmpsb push loopne mov mov inc push dec inc outsl xchg mov repnz cmp test mov lock shlb fist fidivrl jg inc fisttpl test andb cltd add mov int3 mov movsb stc xchg out and cmp or sub sti ljmp push push (bad) cmc in lods adc jno mov xor out jb bound ret call inc sbb mov mov mov test push add jecxz iret ret in cmp cmp cmpsl push ret mov xchg or mov jmp push add pop inc dec push iret mov cmp cmp jae aam mov cmc mov sbb movsl pusha push stos and les ja jns fsub mov in xor pop outsl mov leave pop movsl jo insl push out rolb mov pop mov aaa mov mov mov push mov xchg jge sarl lahf dec mov jl jae sub flds inc push jmp adc (bad) sahf lret xchg mov aas jge orb ret adc (bad) lret push insb and call xor xchg xor popa (bad) popf jp mov (bad) push mov sbb pop and rolb and mov hlt js leave ja mov push fnop nop inc sub push leave lods (bad) add sar or fisttp xchg sahf sti dec mov sub cmp fdivr adc cmp out and pop and add movsb mov push pop fcmovu push xor inc outsb sbb test iret popf dec imul je sbb int or jle (bad) push incl mov push push ja jmp std mov mov outsb outsb cmpsb adc jmp and xor fstps dec out and fbld popf or mov aam sub daa mov lcall xchg movsl xor notb lret mov mov mov xchg push cmp stc (bad) arpl jl xchg dec dec xor movsl popa mov (bad) (bad) mov (bad) cmc movsl add inc pop mov sub test (bad) dec mov mov sti or pop lcall decl mov pusha xchg mov xlat mov mov outsl ja xor pop pop ficoml sbb adc aam sti cmp jle xchg outsb roll add push das arpl addr16 (bad) daa fs stc push cmp std rol mov daa push jecxz imul test or adc repnz mov aas (bad) icebp sti sbb mov cmp bound cmc pop pop push repz xor aad lds dec out lds in sbb sub xchg sbb xchg ret mov add adc push cli mov xor stos xlat lret test dec inc int xor int mov (bad) mov and cmpsl adc cmpsl popa cmp (bad) icebp leave das adcl cmp mov es cmp sbb ljmp and cmc xchg sbb imul scas (bad) adc adc or fildll ret jb insb sub dec cs pop fwait adc pop jae jns adc sub enter inc adc adc fnsave (bad) mov and js cli mov pusha (bad) cld jo pusha xchg mov sti pop aaa pop lods xchg mov (bad) or lds mov in add outsl arpl jl add rorl jne outsl mov push dec jp loop fcomi js fsubrs mov push add dec sti adc or ret and cwtl ds stos fnsave add repnz and cmp ljmp lock cmpsl xlat mov or xchg xor iret dec inc sarb insl (bad) push fnsave mov jne add in sbbl adc xor or fwait call mov adcb xor imul mov or inc scas sub push imul leave pop dec lock divl and mov xchg ja xchg pop or or dec adc mov pop insl or ss lods flds xor cmp sti push std inc sbb inc insb out inc dec scas jno aas push xor xor dec fdivrl int xor jbe shlb mov loop mov lcall mov dec dec ret lods jg cmp and xor cwtl out xor mov cmpsw sub vgetexpss repnz push inc mov pop outsb push or adc pop ja and lahf das mov dec xchg ret scas pop push scas scas jne adc or mov ljmp dec inc or add in jmp mov cmpb lcall icebp adc sbb ficoml int3 (bad) testl fwait mov (bad) movsb test lea mov dec xor outsb out jecxz lock insb loopne jae mov mov push jae in mov lock add imul int mov mov test mov test mov adc xorl loopne shll and rcll sti jae inc mov mov in add jae mov stos outsb (bad) cltd xor add (bad) repnz pop hlt inc (bad) mov push xchg jno mov (bad) mov test inc mov popa nop movsl push pop cmpsb (bad) andnps mov inc test fdivrs xchg into dec in lods dec fcompl xchg xchg call mov xchg jb orl pop pusha inc aad mov lcall mov xchg mov out imul mov sbb xchg das mov sbb push mov mov lods stos cmp push mov ja (bad) ljmp push leave cwtl ljmp imul push pushl lock xor (bad) dec mov jl pop push xchg mov movsl aaa ret dec or inc iret popa jmp in xor cmp sbb cltd cmp test add or push and leave movsb mov nop adc rorb out icebp (bad) xchg adc add cmpsb push aam out adc xchg push fs cltd andb les pop popl lods jl fsubp mov mov xchg or mov sbb push gs sub notb xchg or rcr ror mov outsl (bad) in pop sub cld push sub xchg xchg mov hlt jno dec imulb mov ja add test (bad) repz loope cld notb movsb or scas idiv inc in rcll je sub cmpb push and addb sbb dec jns mov int fcoms daa mov push mov iret (bad) xchg push inc sub enter lahf stos jmp js add out je dec dec mov sub cli add pop push clc mov repz or aam add addr16 cmpsb arpl sub cmp fistp (bad) jl imul xor scas hlt das push inc sbb adc daa sub add dec mov sarl jle push pop mov dec xchg mov pop push push out mov out xchg ret js fdivl inc les popa pop loopne cld insl insb sti jnp and test jecxz aad out jne mov test shll in mov sti das xchg loopne cmp fcomps push cli ja adc inc mov adc jle adc imul aaa pop repnz and sub imul or dec add lods roll cmp lock sahf outsl ficom jns test xchg pushf xchg mov loopne aam sbb pusha cmpsb or sbb jp test ret pop in or xorb jo lods hlt push roll andl ret mov sub ss arpl leave add xchg pusha adc and mov divb xchg aad insl sbb fwait cwtl add and pop or and dec mov inc sbb xor mov inc icebp mov mov (bad) jg mov push mov bound fcmovu leave xlat add (bad) in aas aaa pop outsb (bad) iret repnz fldcw popf sbb stc sub test lcall inc push pop mov fild cmpsb sbb push jmp sbb jg push jne fidivrl inc mov testb and xor cmp pop mov clc fdiv mov iret out (bad) mov lcall rorb out mov xchg shrl mov movsl adc or scas imul jb cli in push dec (bad) cltd enter xor sbb xor js xor pop pop int3 lahf cmc jno outsb xchg punpcklwd cmp aaa and (bad) dec ds scas or (bad) or xor addl arpl dec xchg pop ljmp sbb jmp rcrl pop cmp lret les cmp mov adc adcl jle mov movsl jmp fwait or (bad) repz xchg pop orb fisubr (bad) in or mov mov (bad) cwtl mov dec mov add xor test loope push push lds inc jmp outsb and outsb fidivl cmpsl inc rorb xor pushf xor (bad) nop pop cmpsl je ljmp pop in mov mov and mov and cmp movsb xchg adc jle ret add icebp scas mov aas (bad) xor adc in xchg popa (bad) adc cwtl shrb iret fsubrl aad add sbb mov add lods sub jge add cmpsl scas mov inc inc and dec mov movsb sbb jbe fs mov fistl out sub shrb dec push shrl ds cli xor or cld cwtl mov arpl push pop outsl add int pusha fimull jns pop mov fdivl jp repnz jge dec mov and dec or xchg inc xchg mov std mov out sbb cmp mov pop (bad) mov mov mov sarl inc dec dec push sti jne mov pop mov clc loope out push fwait imul jl sbb mov and fldl push enter mov ss mov lcall adc push jb cltd mov lahf push rolb ss pop xor std fdivr cwtl les sti sbb push aaa fdivrs std xchg pop push inc mov jns std pop mov push lret pop pop insl lea aam hlt lods cs push add xlat lods push cmp cmpsb repz jnp add fstpl loop mov sbbb bound mov xor idivb jb push inc in mull repnz add rcl mov ret jp outsl inc mov mov test fcmovnbe popf mov inc inc cmp inc ror loope pop jb fwait loopne insb push mov sub pop hlt mov inc push or push lods in pushf cmc out mov mov mov sbb arpl (bad) repz jbe (bad) jmp mov cmc jnp push adc jmp push fs in mov sub add ss inc mov jo scas dec pop int3 sbb xchg pop das mov cmp fcmovnu aas and jae push pop xlat mov jle add scas iret stc cpuid inc (bad) lcall loope mov inc sub imul jge mov lock inc call ret cmp ret inc pop hlt cs cmp in imul sub lahf movsb scas bound and jg insb loop inc mov mov xchg icebp sbb aam jmp hlt dec cld outsl movsl push xor mov imulb xor cld pop sahf jbe loopne sbb and js pop test (bad) push cmp jae daa test loopne lods and add hlt xor out outsb and outsl sub les int3 pop xchg dec fwait cmp adc rorb stos jo dec decb or cmp fsts (bad) iret mov leave enter cmp pop ja es pop sub pop repnz scas mov jbe iret dec cmpsb mov pushf outsl mov int std sbb (bad) dec adc out sub sti iret xchg call xor or mov shrl sbb mov dec mov (bad) adc mov or jge int3 sbb xor test and jbe outsb jo mov inc mov pop andl or inc cmp dec xchg jg pop icebp cmc push xor imul pop imul mov cmp subl pushf mov mov cli movsl sahf mov imul ret arpl cmp or js dec flds jne pop inc jns mov fistpl and push or in loopne mov mov repnz or sub stos mov out pop push sub rol int3 mov test dec adc imul mov icebp std shl in into fsubl and insb dec test jg cwtl cmp pop sbbb dec cmpsb add js scas lods xchg int3 push popf loopne jle loope or outsb jbe loopne mov push xchg cmp mov cmpsb popa inc cmp (bad) fs push cmpsl cmc inc add dec dec mov pop das movsb push pop insl jl lods push and test push mov idivb pop cmp sbb xor cmp sti mov mov rep or js stos sbb cmp int3 lods dec jne addr16 test rorl push sub or push and dec sub and jbe enter out (bad) aam fidiv hlt sub aas mov (bad) sub repnz sahf jecxz fs pushf mov jne sarb adc push (bad) jnp ror clc rcll mov fcmovnbe in cmp les mov out jb dec push sbb mov dec push enter fs loopne aaa xchg cmp (bad) fcomi xchg pop bnd mov ret jecxz popl dec test jb inc enter jp movsbl push sbb dec adc jnp dec outsb lods rcll jnp cli scas adc mov out aas or or mov pushf sbb jl out arpl inc sbb adc arpl mov jnp aas dec rcll pushf sbb (bad) fdivl or jnp out roll pop xchg push es repz pop push enter nop dec add daa addr16 (bad) push fldt ss mov and pop mov aad imull std jge cmp push lcall push lods cltd xlat jg (bad) repnz add in cmp (bad) jo sub jb movsb jno into mov push pop and xor xor (bad) fdivrp and fwait std cmp aam fdivs enter mov xor add cld jae repnz xchg pop lcall js jle adc mov lods mov decl xchg test aaa cmpl add cld shll imul jle xor inc cmp (bad) inc mov (bad) (bad) push lds adc idivb scas icebp adc (bad) (bad) xor push mov clc out shl cwtl dec std lret outsl cmpsl outsb jns pop in inc ss jno fnop xor (bad) repnz mov mov adc xchg (bad) test sahf (bad) xchg push cli into mov xchg rcrb xchg adc jb xchg push sbb inc scas mov test notb or xor bnd dec pop into addl push cmp in cmp (bad) js addr16 ljmp in ret sbb mov push and aaa mov mov mov mov mov mov push push movsb lds lret pushf popf loopne gs out mov cltd mov es ss out xlat mov ds cmp and push sbb arpl (bad) jmp call int lcall dec mov adc idivl cmpsb rcll mov loope and sbb scas je xor sti inc pop fistpl test inc cmp cld (bad) xchg movsb stc test inc mov fs stc je (bad) dec sub push add jg daa (bad) jecxz in addb cmpsb clc xchg dec push cmp (bad) sbb negl xchg ljmp dec push stos mov lret stc and add loope rcr mov mov mov adc push test push xchg jg push adc out and sbb or jle or push mov test andb mov imul jp add (bad) sarl into sub mov sbb push fmull mov in cld cmp or loope adcl jle cmp or pop imul loopne sbb adc mov sbb test neg cmpl aas movsb outsb rcrb mov std lods es xchg mov in jl test fs xor push mov jge fwait and lds ds push mov fdivs push xor or push xor jne jb scas dec sub jae inc scas imul xchg mov aam jmp push fsub push jne jo mov ret xchg test dec repnz and iret leave fs stc iret fsubs mov xlat mov add (bad) in cmpsb xchg xchg into dec push xchg les je mov lds outsl test jb nop sub scas push push faddl arpl mov inc ss imul mov leave aas dec xlat jno fistl jns nop cli push lcall sub xor test xor popa xor bound lahf mov bound push jne push xor shrb repnz sub adc xchg dec sub insb lock mov cmpsb fwait mov xchg xchg gs mov and repz xchg and jbe dec push je and xlat xchg inc dec (bad) iret xor (bad) inc xor push or jecxz dec in in pop fistpll repnz addl outsb inc pushf mov dec lret popf aam outsl into sbb popf into ja adc cmp cmp loope push loope xor cwtl add in dec js push push jo adc or les sbb pop in pop testb das sbb mov icebp (bad) (bad) pop add add stos imul cli jno subps dec sbb xchg inc jno jl ret push or or imul lea iret adc test (bad) arpl ss or cltd jno out and push jb mov ret enter mov sbb mov ds (bad) aaa push cmp test outsb nop jle push mov fs es test push fsubrs or mulb ret sbb xchg sbb std inc mov punpcklwd int3 rolb lcall ficom sub imul push dec paddusb push push and ret and inc sbb jns ret cmp test outsl aad negb pop daa das movsb jmp sub push sarl mov xor pop outsl out jl out pop in sbb add adc jbe pop nop pop and or rolb pop les lahf popa pop jno cs pop jle xlat dec sbb outsl out lcall sub jno aam jecxz lcall xchg lock mov jle lock lock mov pop mov mov loopne jle xchg push inc out lahf sbb pop push sbb mov xchg mov jecxz test inc lea (bad) jg xchg sbb mov je jns mov stos pop (bad) fisttp js mov test push loope imul stos and lods add sbb mov jno sbb out and insl aad inc (bad) dec mov xor jge mov and mov lock mov cmp ret call imul push mov int jle sbb xor fisttpl inc mov popa xchg cld rcr nop jb push (bad) cltd inc iret and jns popa cmp cwtl jl addr16 mov lods cltd cmpsb out test mov pop fnsave out push ja pop lahf pushf in imul mov call pop in (bad) mov (bad) lods fs xor iret push ds fdivs rorb mov out and dec mov jmp loope mov in add sbb cmpsb xchg pop iret bound shrb jl and pop loopne mov jb jns sarl and xchg mov (bad) (bad) and inc jb (bad) rcll test (bad) mov cmpsb cli mov int3 stos or and lock out xchg pop imul adc movsb sub jmp cwtl jae jns and cmp mov outsb mov fidivr in dec pop push push dec fucomp js cmp (bad) cmp pusha cld cmp add int3 cmp push jbe pop jne out and clc test popf jo sub lock adc call and inc add insl jne mov cmp mov sub sti sbb clc add fs (bad) dec pop cmp (bad) jns (bad) bound jne loop es lcall lret jne sti cs bnd fmuls dec idiv stos cmp mov cltd dec das cli es adc popf mov cmpsb cmp mov dec bound ss jne sbbl xchg push ret sbb jle mov in and clc cmp test mov (bad) imul push inc mov pop jae jo xchg ljmp mov (bad) mov cmp js push mov push mov mov pop mov lcall movsl (bad) xor inc popa mov dec dec fistpll inc mov std jno das push imul cmp test lret rep xchg or scas pop cmc fldt sbb (bad) add mov push cs mov mov lea and inc or push dec jmp fsubl fistpl loop add jmp sarl ret shrl ret cmpsl mov push and or pop adc dec jl cmp or in outsb jmp call mov es xchg cmp sar pop jb adc xchg and in mov aam mov das cmp mov (bad) cmp lahf pop inc das xchg sub aam pop dec dec notb sub fcomi mov rorl je sbb cld sub or inc sub loopne (bad) cmpsl cmp or cmpsb pop test ss rorb pop mov cmpsb cld push sbb lret dec mov push fsubrl aas or mov scas fcompl mov mov frstor dec and jae cld js sub inc sbb fisttp rorb aad xlat add pop sub jp mov inc sub iret sub dec aam (bad) xchg pushf mov or add adc xchg inc mov or stc add mov jnp lahf mov pushf sbb cli pop jbe mov and ljmp mov loope fstps and loopne mov mov mov in lea ds push mov fwait mov xor or insb add ljmp cmpsb inc pop mov mov (bad) or push ds (bad) pop loopne outsl mov or les and mov mov add loop cmp or sahf jbe hlt sub lahf lds cltd aas jne and mov js lods sarb adc inc mov xchg test aas and pop pop ret sub xor clc sbb negl gs sub insb es nop lret testl or push sahf in aad jno (bad) into mov cmp in scas adc ss bound sub mov aam cmp bound push jae (bad) lea push or and repz cli dec mov pop neg cld pop mov mov inc and pop push cmp loope (bad) mov adc pop pop (bad) int3 pop add out jp mov mov (bad) aaa lds call es movsl adc pushf scas imul ja fdivp outsl lds int out fwait rolb dec sbb ret insb push je scas mov mov xchg stos pusha (bad) pop subl cmpsl pop popf (bad) test push fstenv ficoml mov cmp sub pop pop inc and sub cmpl jg cli hlt mov jle pop adc mov mov mov cmpsb addr16 daa xchg repz mov dec sbb sub add sbb daa cwtl cli test scas push xchg dec gs int dec mov push es mov or sbb mov fst mov fisubr jmp nop push out hlt pop sub mov dec push subl pusha out mov push mov ret ss xor loope sbb loopne cli loop stos lret sub sahf dec mov std (bad) mov mov inc sahf cmpsb lret xor push mov cmp sub inc fiaddl call sahf add or inc pop xchg dec (bad) mov sbb ljmp sub sbb pop xchg lret es repnz jg,pt repz enter jle shrb scas push push imull stc mov scas movsb es aam aas cwtl inc or hlt lcall push rorb xor gs data16 sar cmpb sbb clc movsb cmp cmp lods push inc out paddq add inc jecxz and sbb xor inc insb loope xchg fwait jne (bad) jg dec test (bad) mov aam mov ss fidivr test xchg ljmp sbb daa or sahf mov lret and inc je out and js xchg mov dec sahf inc or loope popf xchg mov add bnd cmp pop hlt addr16 xor aad and xor rcrb lret or mov mov mov xor pop jne mov (bad) push adc pop add shll pop sbb aas aam mov popa pop push xchg bound adc scas adc sub (bad) loope sbb push push add mov dec add out loopne adc sti mov cmp enter mov imul movsl xor pop push movsb call xchg xchg fisttpll cmp mov push mov xlat cmp cmp mov cwtl inc pop pop mov (bad) lods jl stos into movsb sarl sti inc push pop inc fstpt sti sub aad push (bad) ljmp push ja xor in xlat cwtl dec divl idivb cwtl popf mov and mov je sub shl dec in dec fist mov sbb mov jb cmpl rolb mov fldenv lods jl cltd pop or mov cmp mov or push push xor xor lods jbe inc xor push test sbb pop movsb (bad) or int3 mov pusha movsl (bad) call daa or inc data16 fmull scas jae test push andb clc cmp pop aad and xchg pop hlt hlt adc sub stos mov cmp adc dec std lret jnp test insl mov insb cmp xlat inc cmp mov inc push mov xchg fwait xor add push cmp mov std in xchg push push pushf nop cli jg les mov std jge dec push cmpl (bad) sti mov roll jge mov lret test sbb jp mov test pop arpl dec jbe rolb stc cmp stos cltd sub sbb inc in xor dec mov sub push call pop dec mov or sbb call loopne mov (bad) inc pop enter inc (bad) mov cld dec mov outsl or cmpsb scas jge decb cmp adc pushf cmp sarb popf mov lea test outsb cmpsb int jne bound les dec inc sti sahf pop push pushf jbe dec jnp cld mov and mov mov call rcr insl fistpl je push aam hlt dec stc in push mov mov lods mov outsl call and subl sub mov dec mov push clc inc mov or mov dec adc dec or cmp mov icebp pop fs push daa insl ja mov (bad) stos enter pusha push (bad) sbb movsl sbb cmp adc xchg sbbl jnp sahf pop sbb dec aam ja mov push fisttpl xchg dec outsl mov das sub xor imul pop ret jmp inc (bad) (bad) pusha sarl test gs lods in shr andl fbstp mov mov push jecxz andb negl std js xor sub sbb fist xor sbb xchg mov dec ja sbb mov or loop sahf popf dec fidivr cmpsl popf in cmpl dec xlat or movsb loopne push in cmp adc cmc std jae loope aas insl lret data16 outsl insb pop imul mov add xchg sbbb fsts lahf fiaddl shlb sbb xor cmpsb clc pop stc je andl mov xchg or lret sbb inc cmp and jg repnz push and mov xchg xchg sbb xchg dec and (bad) dec and push mov xchg sub popa in lret dec iret in pop (bad) scas sbb cmpsb dec sub arpl stos xchg and jg mov cmp mov push or jl insl daa sti cwtl imul dec mov pop xchg inc fwait and pop dec xor xor int aam cmp lock dec gs ljmp dec inc sbb inc out cmpsl adc or addb sbb push dec mov pop movsb je xor idivl repnz hlt mov fcmovbe call fwait jno fstps pusha lock dec mov jb or lods clc imul inc pop and cltd nop data16 mov or mov sub pop cli mov loope in dec scas imul push out and std popa lds sbb movsb jns,pn xor pop fcompl mov cwtl xchg popa ja jnp jo das mov push add jbe ss lds mov push cmpsl mov fstl sub inc fbstp call jge imul clc pop enter pop cmpsb negb dec jle mov push lcall (bad) xchg repz mov (bad) push stc lret jge dec inc es push ret jecxz xor fildl adc (bad) pop fcompl mov sarl add adc push pop insb push outsl scas movl add outsb jno stc or popa (bad) xor pop fiadd iret xchg dec cmpsl fcmovnb enter jns fsts (bad) mov cwtl xchg mov loope sbb cwtl or xor add jo in bound pop xchg xlat pop xor pop int fsub sahf mov sbbl (bad) int3 imul sti fisttp ret xor cmp (bad) pop inc lret and cmp stos dec daa add in xchg jns mov mov fwait cmp adc adcl ret inc xor add pop dec push jae jnp sbb xlat mov xchg int3 popl sbb mov out sbb xchg fnstcw popa in cmpl xchg mov pop lds aas mov js sbb xchg cmp and inc ds jge dec js pop add xchg mov jno push pushf (bad) inc jmp js push sub lods (bad) mov lahf ljmp (bad) (bad) jl int3 out dec addr16 out pop or fnstsw xchg dec and mov fs les jge push mov mov mov dec rclb pop insb push testl out or fisttpll lcall cltd jecxz (bad) popa int pop pop pop imull loope adc dec or cmp mov pop test cmp xor ja sbb sbb out and adc das cmp imul imul xor test bound fisttpll mov jb cmp (bad) xlat mov mov mov pop pop outsb in push add sbb add cwtl addr16 test jg sbb jmp inc (bad) jo aas xchg addr16 inc mov mov and xor fadd ficompl mov or lock arpl inc sub test std mov cs clc loope inc mov lret das and mov (bad) loopne push or cmpsl cmpsb pop jnp dec add in testb xchg iret adc jle sub and jbe mulb cmp pop jo inc and adc fadds leave ljmp notb mov add or aaa push and movsb cld hlt sub and pop add and (bad) jge sub aas pop das pushl sbb add jbe andl inc push ja jnp mov out adc iret jp pop pop dec push ror sti inc outsl mov (bad) cmp cmp test call push push movl jno xor push arpl movsl lds aad aam (bad) iret lcall call ret ret xor lret sbbl pop (bad) shl cmp test movsb jno pop sbb add jb bound mov out inc jl dec bound sbb adc or int3 loop scas int3 into sbb adc insb idivb push in loop (bad) in ret daa and pop or and mov xor xchg xchg ljmp jge add push jge dec roll movsl mov nop sbb mov in and pushf xor movsb outsb xchg jb xchg xchg movsl xor mov rorl mov (bad) jae mov negb leave test xchg test pushf mov add mov xchg aaa addr16 sub movsb xchg lret or addr16 (bad) pop (bad) sar xchg or test jo mov push or sbb das out mov test clc fwait lcall icebp add dec inc ds push data16 xchg popa push xchg or lcall repz je out out jmp cltd and pop rorb es inc out movsb das cwtl add stos mov push jnp outsl in dec or jae sub mov xor mov or inc subl push mov es cmc fcoml imul rep fwait mov loope or aaa xchg sbb es mov call pop mov leave hlt cmp jb jns push or cmpsb in mov xchg nop mov pop cmpsl mov or (bad) repz cwtl cwtl test mov jl gs insb jg lock dec mov xor enterw addl mov push mov loopne out pop (bad) dec pushf iret call dec mov adc rorb xchg fldl dec xchg and cs shrl lcall dec shll outsb loope add stos xchg int and adc mov inc test dec in out jbe xor dec mov add lods xchg inc (bad) neg fidivr dec ja fmul push jl add js push addr16 push adc mov hlt inc (bad) jo es daa arpl cmp pusha into mov aam xchg pop test pop loopne mov inc fsubl (bad) into out cmp mov xlat lods xchg inc (bad) xchg add popf js xor in fnstenv inc insb fnop inc xor adc jge out mov or sub cld dec iret mov outsb xor ja fadd dec sub cli pop jns adc and xchg xor cmc push mov data16 or insb data16 adc test js and xchg test fld pop out add nop jne mov cmp shrb jne rolb push or mov mov xor pop mov pushf xchg mov in push cmp aad xor or xor popa imul pushf mov and imul pop xor jb mov data16 loopne lock sbb stos in into arpl mov cmp or pop aaa xchg xchg inc popf cmp sub xchg mov out jl bound xorb sbb int3 cmc aaa sahf adc mov mov aam out into xchg mov leave pop cmp lods push bound jns sbb shl sub adc clc jp in (bad) cmp xchg jmp cmp push mov jo gs call leave imul mov lret mov outsb or push ror xchg imul lret (bad) negb or jp xchg stos adc (bad) outsb adc adc push cmp stos enter daa aaa adc (bad) in adc sub xor cmp lods ret mov cltd sub or and inc mov cmp in sbb dec lret std sbb out mov shll xchg jp add out pop negl mov sub inc sub and icebp js push and cs pop hlt (bad) enter add inc mov dec push sub cmp push inc clc test mov xchg (bad) ficom dec insl pop and sub leave inc and pop mov or test push jmp faddl das mov cmc xchg adc add add add adc enter mov cmpsl test ljmp shrb push ja lahf push push repz ds or test and mov sub sub aam dec xchg jmp and imul ret ljmp xchg sarb xchg ret sti xchg out in jl rclb mov mov lds xchg int3 ds xchg mov pop cltd bound cmp adc lods fcomps push ds (bad) imul push inc inc in daa mov cwtl jo stos dec daa pop (bad) fwait lock push out mov outsb pop fmul xchg aas push mov lcall test cmp insb mov addl mov iret inc inc and adc sub pop cltd pop nop lods sbb out pop xor push push lret in lds xchg jmp pop push arpl test fcoml jns outsl or popf xchg icebp mov push lock inc mov repz rol es test mov cmp movl jne imull xchg sub daa cmp pop daa (bad) lock push cmp ja cmpsb xor fiaddl xor adc (bad) icebp dec outsb dec dec movsb ret pusha pusha xchg call or pusha push inc stos xor cwtl lahf sbb popf sbb fmull mov inc sahf add jae pop cmc enter scas pusha push mov mov pop std movsl in (bad) mull (bad) mov rorl xor aaa push cli xchg jo int leave adc js jno push or loop mov pop jecxz jae lret sbb jl mov sub sti adc out loope int3 mov in xor sub ret mov js sbb add jo mov cltd fcomps stos jge and icebp xor imul jb jne rol je dec aam or xchg aam fs jg in xor mov fimull enter jno out xchg sbb inc dec repz loope xchg scas lock rolb into or test jl or je pop push dec repz jl pop pop stos test add and jnp leave fstpt xlat cmpsl jmp pop inc nop add in mov gs (bad) cmpl inc or push add xchg adc sbb cmp lcall push fstps jo stos mull mov lahf les shr pop push orl sub pop ljmp pop adc aas clc imul arpl mov adc lret aam sbb int stos fistpl fdiv mov ljmp cmp in imul sbb jnp repnz jno jp xchg dec fldcw xor sub mov jo test in test or sbb inc stos rcrl idivl sbb mov pop fwait xchg push sahf add inc cli (bad) inc push lods push adc das push jge sbb add push (bad) pop shlb pop or lods out push lea push xor and mov mov and in xchg push mov inc mov in sub sbbl popf push lret fisttp sti adc sub pop inc push rcll pop or mov fsubrp shlb shll mov add jl icebp hlt pop push arpl in gs pop scas cmp fmuls imul test mov ficoml in dec adc inc aam push pop cltd jb pushf les add jecxz xchg adc mov and pusha push sti mov jle sub and ficomp cmp cltd add cmp sub inc aaa outsl out addr16 and sub stos loope int3 or push mov and (bad) pop (bad) repnz sbb jmp xchg ret adc jno mov dec nop dec sub fisttp (bad) aam mov pop orl ret lds cmp pop aaa test stos nop roll jl rcrb push gs (bad) jl xor sbb mov (bad) repnz jg and xchg inc test sub pop mov data16 (bad) arpl mov loop mov ficomp ja jge lret cmpsl hlt das inc out pop sbb push mov mov ss (bad) mov hlt pusha sahf ret pusha jne mov mov jae pop dec mov test nop (bad) xor pop sbb loopne sbb inc jp jne cli icebp jbe mov adcb loop push or adc push aad push push mov sbb cmp lods fnstenv push and cmp loopne cmp adc idivb movsl mov testb push inc lods mov rcrb lods pop cmc dec mov fs add mov imul push pop fnstcw jbe nop faddl mov js rclb xor adc jecxz jmp xchg adc das push pop aad cmpsb dec mov adc orb pop adc sub (bad) hlt andl inc adc xor jno jno xchg pop stc sub fcomi jmp push (bad) push mov fs je cltd (bad) out mov mov adc or cmpsb lock jl dec fsts out pop add cmpsb jmp cs jle jmp pop stc push adc mov xchg xchg arpl add push flds xlat mov push jo xor inc mov inc or sbb jmp jp aaa mov sbb or jno dec daa stc inc lret repnz lcall aam push fisubl jecxz lahf push leave push (bad) stos xor int or pop shlb daa jle mov jnp rorb dec xor or inc mov sbb scas dec rolb inc clc and push (bad) xor pop xchg pop and or sub mov adc imul cmp enter aaa sub ret adc das mov in mov mov pop push add lcall mov js push sub xchg add inc sub mov cmpsb push mov ss imul inc cwtl pop das popf jmp cmp shlb pop jp (bad) cmp sub mov push seta scas lds notb ja push adc outsl hlt mov add mov sbbl cmp test push dec or dec inc xchg icebp or mov xchg mov push cs push sbb adc loope call (bad) repz push cmc cwtl jae pop xor sub popf rclb mov ljmp push dec push pop pop imul ret mov pop mov push dec xor mov daa test sbb test es xor adc cmp and sub adc mov lahf xchg jno dec sub shrl loope jmp lcall pop push or mov into adc mov sub test dec add lods dec lcall mov mov sbb iret repz fdivs dec gs stc nop call popa (bad) adc push sbb jo add sub ret xor inc das mov stc and in fisub jg into jp sub adc cmc jb mov cmp mov notl dec cld lcall in lahf fadds push jb xchg inc movswl ret cmpsl lock ljmp adc mov mov movsb jo roll sti add fcoml (bad) stos inc push jp and xor test scas xchg adc roll cmpl add pushf pop orb lods mov cmpxchg mov rcl leave cwtl popl xor pop sbb mov mov sub les pop push mov cwtl clc add sub cltd imul mov repnz mov or pop call loopne add mov addl out sub add mov pop sbb inc adc fcoms rol (bad) (bad) pop (bad) cmp stos cld mov outsb cmp lock orb sub pop dec or xchg repnz pop sub jl or xchg adc jmp xchg mov cmp fnstsw daa dec mov in addl mov cmp cltd jle jp lret or repnz dec mov sahf in hlt mov es dec out fsubs inc je pop mov or or mov jae adc sub adc movsl addr16 or int js or dec dec push fdivrs and xchg fcmovb (bad) aaa sbb dec iret ss out pop mov mov push pop and xchg test imul dec add jge sbb (bad) lret int3 sbb sbb iret mov push jns push dec pop lods dec mov dec (bad) inc or leave bound nop faddp (bad) (bad) sub clc jle (bad) cli push adc aad (bad) les stc push out mov fcoml in and mov outsb cmc outsb xadd xchg sahf pop mov scas sbb or popa outsl xor lret sti es mov rcrb les lret push sarb and dec bound test push xchg pop stos mov shll or lock push xor xchg mov mov cli aas mov out push or push (bad) les pushf and xchg jns push mov rorb mov rcrb mov inc sbb push add lret ret cmp out stos lahf jp pop xor sbb jno push nop adc int3 mov or shrb jmp fcmove fisubl xor jo hlt adc into mov xor jne adc rcrb out cltd push push cld fcoms push adc in inc insb fildl xor jne pop lods test out mov xchg stos popf sbb sbb and push (bad) (bad) sub or dec (bad) jno xchg jge mov cwtl clc jp push (bad) scas rorb sub add jg stos pop mov lods mov push es add mov ss xor pop repz (bad) mov xor sahf cmp jnp (bad) loope mov pop push shrl or ds scas fildll dec rcl in insl mov add adc iret push cmpsl push imul xor adc out out jns,pt push xchg inc xchg or xchg lock push in push pop sbb pusha mov mov aaa lcall mov or xor mov jns mov jl mov sbb lods mov es icebp (bad) and sub rcrb jmp sub dec mov into ret push std inc daa adc add mov mov (bad) aad enter stc jge icebp enter pusha ret (bad) sti cmp je repz and mov mov push cmp jnp cs and js fs inc sbb and dec xchg mov int into mov add ret outsb imul mov test jl cmp xchg adc out mov cmp out pop pop adc add out outsb loop xor pop (bad) in dec adc cltd or pop fadd inc inc mov pop leave lcall push insl popa lock ret jbe add jl leave xchg call cld xor push aad add call or test ret jmp outsb pop enter lods sbb std out lret pop ljmp js xor mov arpl push scas ljmp jecxz jne xlat pop push dec testb xlat or negl jb (bad) sub sbb sbb ljmp sbb push andb mov shlb mov addr16 sbbl (bad) push (bad) mov lds mov (bad) adc aad xchg shll inc bound stos sub hlt aad mov fwait pop xor push jle adc and enter icebp push xor ja pop fstps inc loope cld nop sbb loopne (bad) loopne lods pushf xorl adc addr16 inc rorb sub outsl aam js pop test adcb pop or cwtl ds jo stc mov xor or adc dec pushf mov out mov stos sub (bad) push loop aas in (bad) out push rol jo (bad) jp daa mov ds cltd aam jno stc xchg cmp adc and jl std add aad xor ja enter sbb std mov mov addl lret mov dec xchg dec xor imul mov and stos adc in push loop outsb ja fidivrl jge es sub mov push xchg fwait adc adc add jno int3 sub out lods daa xlat adc mov mov mov shrl pop xor cltd sub inc lahf (bad) ljmp into bound subl cmp lea and mov push cmova (bad) cld push mov xchg sbb sbb xor jg repz lds inc fild cmp push js (bad) ja mull fistpll lret xor iret xor or ljmp lods jns fnsave xchg les clc cld cmpsb mov or stc dec mov xchg xchg test mov xor aam stos call jmp mov mov xor dec stos sub enter mov mov adc fcmovnbe add js addr16 and insl clc mov mov (bad) or push ret mov sub or ret mov xchg test mov mov scas cmp jae cwtl cwtl and ret scas das movsl aaa jbe mov enter pushw add pop mov inc mov adc lock ja jl in add add (bad) jno jne cmp and in pusha mov push cmp (bad) mov jno ss xor push fdivrl jmp jl hlt inc add sbb ljmp lods push pop insl mov or jl mov dec cmp add inc aam sbb cmp shrl pusha sbb enter xchg and (bad) daa sub fdivrl mov bound pop push addl add push xchg mov mov add push bound pop cmp std mov inc (bad) loop ja sbb ds adc stc adc xor cs pop cmp sub fnsave inc imul lahf aad pop gs adc and dec jnp pop test clc and cld in adc out gs (bad) insl je push outsb dec xchg push dec les pop mov xchg inc fimul scas enter jecxz xor ret mov inc test xor dec sbb xor or (bad) mov xchg jns xchg mov sub lock push outsb xor ficoml scas fs xor lds sbb imul int3 fucomip dec cmp movb (bad) mov or pop add ret fiaddl pop pop xchg lahf add aas fidivr repnz sbb add test lods mov and fsubrp popf sti scas xor sbb sti std ret imul cmp mov test and and sahf jge stc xor inc leave cwtl add lahf stos jb in int3 rolb pop je hlt mov (bad) xchg clc mov mov mov aam adc cmp pop adc pop (bad) push call test (bad) fwait gs mov or (bad) jbe je push jle stos orb push cmc repnz sub mov cmpsl adc pushf repz int jns xchg stc or (bad) adc ja mov dec lds repnz inc xor xor mov add cmp jnp test xchg andl ljmp mov or divl mov push and insb (bad) dec cmp fisubl xor inc push fnsave cwtl or insl xchg aas fwait sub push in dec adc test pop cli dec jno icebp dec test test cmpsl push xchg xchg cmp mov icebp mov (bad) mov sbb stc adc out xor jp xchg rorl adc dec push push (bad) push mov in aad sub mov pushf cli or (bad) stos fistpll dec leave call iret out mov imul and xchg mov sarb sub sub cmpsl cwtl sub loop fist psubw dec (bad) fsubr ret jbe push add data16 imulb in das nop xchg ror daa stos cmp adc divb icebp dec pop imul pop mov adc add push into adcb (bad) cli pop imul hlt insl in shll in ret imul and jne icebp ja mov in fisub imul test sub into inc cltd je jmp cmp cmp mov orl nop jmp lret add dec sbb pop jp jl cmp or call add ud2 flds jmp and adc in mov aaa mov stos xchg fidivl jl jmp add inc out or dec push adc bound or dec sbb bound and cmp lea sbb decb cli pop xor loope mov mov mov sub fdivl jb bound jl pop and sbbl setnp add and push dec fldl (bad) lcall loopne cld xchg mov jmp ss loope pusha aad jg xorb loope lahf inc push fimull xchg push lds sub das das mov lahf fstpl inc mov adc lret (bad) arpl xor xchg jle push jmp or fldcw sarl dec add ret mulb adc pop jp mov mov pop nop or and fwait outsl hlt sti sbb mov mov jp cs push lcall cmp mov mov enter jmp (bad) jb repz popa test mov and outsl repz sbb jb outsl pop add mov lcall cmp xor sub loop mov psrld mov mov rcr and and outsb je xor jb jb inc popf jno incb jns out (bad) dec jp mov sha1msg1 sbb into jle pop adc add inc (bad) cli adc popa pop xchg pop add out push std pop lock andl pop fisttpll leave loope out cld push cmp and hlt outsl addr16 cli pop lock out sti sbb cmp je or lods (bad) inc mov jae push shll test (bad) add xor mov sbb add mov ret addr16 push scas out mov mov cmc sbb mov inc and xor test push push and jae mov mov and add inc stos xor jae and jecxz xor xor std hlt fwait adc mov das jns push xor push test fdivrs aas jecxz call mov pslld or cltd lret fstps adc cmp cmpsb call fcom jecxz and push add enter cmp xor sbb (bad) mov xor (bad) icebp push lahf outsl pop inc (bad) mov ficompl sub sahf mov and inc fwait lods xchg and and cmp loop push mov repz lock insb inc sub xchg adc mov sub add pop repnz bswap and or nop ds push dec scas nopl push adc outsb jmp dec repz sub lods dec jmp fsubrl adc add xchg jle sub int3 lret adc mov xchg aad sbb test and (bad) cmc aam pop inc sahf (bad) dec and lret arpl adc jle mov cld or jne orl int sub imul adc mov sahf lods clc push adc xchg inc pop shrl (bad) jl adc jle fdivrs cmp dec ret jp adc pop inc jmp sti (bad) imul cmp ret sti (bad) pushl add lds leave cltd inc arpl mov loop push mov inc mov lret mov (bad) or in xor pop ja jne lret ljmp movsb test lea scas dec mov into adc dec jo lcall rcrl repz inc pop stos add arpl outsl fcoml mov enter insb imul (bad) insb push mov mov ja xchg loop add fs cs xchg xor inc add ss insl pop dec dec cmp xchg mov push or push imul jns fwait jmp cmp xor (bad) mov lret push loop cwtl or ja mov call and mov dec sbb mov (bad) jmp pop dec mov jns sbb or or fildll in xor sub ljmp and mov pop add aad dec inc pop pop insb sub mov xor sub and jbe (bad) rcrb mov movsb push cli je scas lahf push loop (bad) pop or sbb jb jmp push xchg dec insb adc sub mov sbb mov xchg push jp mov jle xchg xchg mov push mov sub in inc les xchg adc les mov xchg cmp (bad) mov int3 sub mov sbb dec push lods mov xchg or movsl jo in xchg ss mov mov add jo cwtl and mov pop cmp shl add dec mov popa fnstenv xor enter mov mov rorl mov rolb sub ficom inc jo fimul out in pushf rclb jae in push repnz stos repz sbb lock sub dec aaa lods jmp jns sub xor (bad) in call mov lods int3 push sbb xchg adc les je dec (bad) out jecxz jl cmc inc movsl lahf mov enter and in push mov add xchg mov and mov sub xchg xor out sub popa and sub mov dec fs clc cs pop out mov mov sbb (bad) mov sub rol in pop adc dec lcall jae dec sbb nop cmpl adc pop sbb mov xchg stos loopne inc sbb mov push cmp lea ret pop lahf daa mov lret adc das sub mov imul push movsl mov into jbe mov sbb mov ja (bad) clc std movsl vcmppd or pop cld rorb (bad) leave jmp push sub call mov movsl mov jp imul dec add jl cmp pushf mov jmp inc xchg clc dec mov jb lret or aad dec push pop dec imul mov jecxz add stc shll pop cmp fs lahf fmull xchg xor mov (bad) mull das das stos insl lahf xlat xchg lea cmc pusha push addr16 mov icebp or shrb sbb loop xlat movsl fdivrs pop dec outsb dec les xchg mov and and imul bound cmp xorl stos inc inc dec cld sub inc xchg xchg mov lock clc xor dec push cmp xor inc jle pop test xor sub mov push xchg test (bad) jo loopne js ret sub mov mov mov xor pop push (bad) mov sub cmc pop cltd push cmp lock jne pinsrw add jnp loope dec jmp (bad) lcall add push or outsb pop movsl outsb and mov mov or xor (bad) pop pusha cmp fild xchg xchg sub cmp ret int cmp cli dec mov stos scas rcrb dec or mov mov jle jbe sub loope xchg or adc daa or or and iret clc jmp lods popa or mov mov mov xor mov int3 out nop aad xchg fidivl xchg pop fldt out std pop inc mov sbb or cs jnp push mov clc call or jo jmp loope mov adc (bad) xor (bad) lods or bound push cltd and sahf mov mov adc ja lods mov fistpl and xchg std jnp fwait or lahf mov mov add out mov clc clc or shrl ret jge ja and inc push out push enter lods fstpt cld or jns scas cmp mov (bad) adc mov popa adc (bad) cmp lock mov mov sbb inc (bad) jne,pt hlt mov or movsb ret mov cmp into jbe pop insl nop mov jge test stc negb mov cmp or movsb movsb std outsb sub cmp adc stos inc lret scas push mov sbb outsb sbb rcr lods jb mov inc fimul add or das repz cmpsl sub push (bad) aad jle pop lea fwait adc add sub sbb add jne aaa sub adc inc xchg dec test jle mov lahf jnp movsb in les insb jns outsl aaa inc lds cmc lret ljmp gs and cld loop adc adcl jg insl jno adc jo stos ficom jo gs jle push int xor sbb ror sub pop cmpsl xchg fcom ficom mov jo (bad) movsb and enter (bad) mov cmp and ljmp sarb iret je inc cwtl mov push or sub fwait call jb and sub loope enter in jbe fldenv dec jmp or jmp pop pushf pushf inc jbe and adc pop pop push (bad) cwtl jne (bad) sub push xor inc daa jb cs pop jo mov incl stc xchg push xchg stos mov (bad) jne pusha xchg inc sub iret shl mov (bad) adc jbe inc jbe cmp cwtl je inc loop cmp sub test mov mov mov enter cmp xchg adc jae cmp in ficom addr16 push jge cs in in int inc test push test dec (bad) jl adc xor divl cmp jno sub addr16 sbb in aad adc popf pop fwait or lds leave loope cltd mov (bad) lock and mov lcall mov pop lcall add pop test add test jns adc jmp (bad) sbb test js ficoml push jle dec mov rcrb outsl sar mov add call out je mov shlb outsb sahf add cmp cmpsb stos test jbe enter push jno xchg loopne pop push adc xchg popf pop (bad) out rcr lea xchg rorb jmp ret jo (bad) xchg ret inc or in loopne mov sub int3 pusha (bad) mov stos sbb lret jecxz push push pop stc push add push xchg pushf leavew xor xorl insb inc jnp pop insb in adc sub pop sbb mov xor mov adc adc mov sub cmp (bad) mov sub fisttpl mov (bad) lock clc xchg mov sub mov push dec (bad) divb outsb xor lea xchg and jno dec jns inc mov jo pusha test lods xchg (bad) jns pusha jb sub aas lods pop sbb lds xlat jmp insb adc out (bad) sar sbb push sub arpl or sti add add push pop fwait sahf (bad) pop mov daa ljmp dec cmp sbb mov pushf add iret insl sbb xchg outsl cmp push es lahf repz jb sub adc and xchg xor xchg daa in push out xor cld lds adc mov insl dec cwtl fs stos xchg das jp jne iret scas aas lret imul rcrb jb es iret lret adc out mov and jp out jecxz mov pop xor add pop pop rcl mov lret dec cmp popf or xorl pop movsb inc sarl cmc je bound cmp insl inc int jb xor lea jnp sbb jp inc pop xchg and sti xor repnz shlb nop cli daa mov mov daa mov lods loopne insl es sbb pop lods jno mov cmp jbe push les cltd push xor or test dec ds xor xchg xchg push jae sbb adc mov push pop vzeroall xor sbb jns and cmc leave jne and ss imul cli sub xor nop movsb sbb mov inc aas xchg lock adc lea mov faddl ret mov or add rolb adc push xchg and je sub daa enter pop and jne jno cmpsb or fwait aad pop bound pushf mov sub js push imul sub push lret push out cmpsb jp jne dec pop add ljmp cwtl pusha into addb stc fcmovbe mov divb xchg adcl inc xchg push jle ljmp cwtl pop sub inc inc test insl fimul or mov negb movsl aaa and repz push push sub jmp mov xlat rcr int3 inc stc loopne rorb lods jl push cmpsl (bad) lret (bad) mov jl push sbb test gs xchg roll out out pop call lock int3 jle adc xchg pop add scas push pop push xchg mov ss pop pop cmpsb movsb cld orb aas je xchg cmp or pushf adc and push rcrb ret jae mov ret rcrl test (bad) sbb sbb xor jecxz test in or cmp inc cmpsb cltd xor outsb cmp mov cmp or fsubl (bad) xchg pop sbb lahf ljmp cmc xchg add jbe in sbbb xchg or loop orl stos std cmpsb out jnp xlat std pop add mov mov sahf dec fucomi shrl (bad) sti push mov nop cmpsl and xchg scas popf pop mov nop or adc push std jbe pop ss xor xor fimull dec outsb ficompl xchg popf jno lret mov push testb out jns xchg fild jge mov inc mov cltd sti cmp lods mov arpl popf adc or int aam mov idivl xor pop sub lock push push js js jmp movsb sbb push mov arpl (bad) ficom cmpsl mov inc push in aad arpl mov test add int3 and push pop jne xor icebp jbe mov push push xor jg,pt jns mov ficom test mov sbb mov jg and js add xor ret xchg adc cmpsb imul shrl adc in push test out cmpsb dec pop xor daa add and ja pop fcmovnb data16 inc nop sub dec fneni(8087 pusha cmpsl ss pushf push sbb cmp sub mov add bound ficompl mov fwait pusha sti sbb sub xchg sub fildll cli (bad) xchg sarb scas pop je push xor pop mov push mov popa cmpsl ljmp sub repnz push xor ss das push mov jmp int loope loopne mov inc gs incl ljmp mov in dec fimull out adc addl ffreep push hlt jne xchg into vmovups dec mov lcall xchg lcall negl push jecxz dec mov sub int3 sub data16 bound sbb ja lahf es jle loopne mov mov push stos aad add add mov aaa (bad) xor dec jge movsb add ficompl pop (bad) cmp jnp rol sbb sbb loop cmp pop jno mov sbb sbb pusha or sub add jl xchg adc bound jp mov test mov nop adc mov mov adc idivb cltd int mov out mov pop out sbb faddp (bad) repnz pop xor outsl and mov pop push jmp mov lds and test jg push sbb (bad) xchg andl jns lret out jmp and adc mov jbe sarb mov jb movsb ja enter fisub add xor xchg aaa sbb dec scas jmp push adc mov scas xor push and mov je dec xchg xchg xor pop and xor cltd cli mov mov sbb pop add dec xchg cmc mov and enter test mov pop and or push aaa jnp enter inc popa rorb xor sbb cli add xor scas lods cwtl pop jp addr16 mov mov add data16 pop push shrl cmpb sub mov aaa push adc lcall aam mov fiadd ljmp jo (bad) mov fstps mov es xchg xlat daa mov inc xchg jns fs movsb add mov or (bad) pop add cwtl sbb mov es lods pop in jge loop mov cld lret xchg pop test mov sbb addr16 push adc add loopne insl test mov adc push inc sbb cld or fs popf (bad) cmc pop fmull test or push cmp xchg dec test pop push imul repz push lea push and mov insl push mov and ficompl js xor xchg ja push cltd cmpsb mov nop test cmpsl push mov cltd xchg fwait push mov jae imul sahf jmp sbb mov fwait jp add sti (bad) mov xchg mov in pop pop rcr flds je hlt ljmp mov pop lret sbb mov js iret push jne jge mov mov test xor jne jp dec out sub cmpsl xchg imul ret shll push dec aad add ja inc mov rclb pusha roll addr16 jns clc (bad) clc mov jae clc xchg cmc bound in lock das pop into push clc daa mov imul arpl mov fmull cld and or sbb es jmp ja bswap cltd inc mov sbb dec push fdivrs pop cld mov mov mov jmp outsl std adc mov repz xchg stos stos inc cs je cmpsb (bad) push inc lret and sbb pop mov (bad) sbb bnd lods std stos mov jb xchg rcll xchg sub xchg sub jecxz sbb sub mov pusha in (bad) xor rcl pushf cmpl and les add adc leave or cmp jmp (bad) out add data16 adc mov push push push mov and pusha jae jbe add icebp jo,pt mov sbb mov hlt aaa scas std jns test xor les cmp jno mov and inc add cs lods xchg loop movb sbb lahf adc sarl cmp sti pop shrl clc arpl xchg and push dec jg rorb repz or push xor ja fnstcw fildl mov insl std mov cmp dec test cmpsl lods mov ljmp and inc mov inc movsb (bad) push cmc mov xchg dec xchg lret push mov mov jg push push (bad) hlt cmc stos pop jo pop or cmp loopne outsl ljmp add push adc jb sub xchg jecxz (bad) cmp xchg incl fldl pop insl icebp inc das arpl ret or jns and inc cmp sub in dec inc out out in leave insl rcrl fmulp lods mov jne jo aas mov push xor ret sub rclb jp xor das fisub jbe mov stos sbbl lret mov and cmc fdivrl das add ja lcall movsb xchg int3 notb cmp lods outsb cmp stos pop and xor pushf push insb jnp test repz sub sub jno icebp lcall aad insl aas xor inc sub xchg jg and clc xor pushf insb or add inc push in dec pop imul inc jb sarl or pop pop cs (bad) push (bad) push std ljmp pop add mov push pop xor jns call push xor lock add cld not es xchg xor mov nop mov mov xchg dec sbb adc popl iret dec xchg (bad) sti xchg ds idivl xchg sarl mov xchg mov jns xchg sbb bound jno mov insl orl inc xchg jp mov les sbb ja lret or in ja into outsb push fldcw dec popa adc lds popa loope pusha flds pop cmpl sbb add sbb pop int cwtl pop jno sub insl fnstcw lds (bad) sub aad xchg js jle imul fistp push jnp or neg xchg fstps stos add xor xor jl out imul mov lahf mov (bad) (bad) jnp fiadd jnp es cmp add orb xor mov or popa mov sbbl loope shl adc divl shl ret out (bad) add mov shlb fidivr jle aas fwait pop or jmp addr16 sub mov fsubr push cld std adc nop in push loop fucomp divl lcall in dec cwtl (bad) into stos out add xlat sti mov or pop add ljmp xchg imul test mov outsl mov add sarl push jbe pop cli mov add ja jge rclb push fs out stc pop ret insb aas loopne mov dec mov and mov push dec jae cmp adc stc or mov mov std sub jecxz rolb push out and ss sbb mov das mov and lret out adc mov pop lods mov pop xchg (bad) mov loope test icebp call test xchg clc fdivl mov loopne pop mov sbb cltd gs mov or or mov (bad) pop sbb jle divb add andb (bad) jne aas jns lcall pop aas cmc mov stos cmc jmp adc xchg jg lahf (bad) imull leave sbb arpl jecxz,pt xor jle cmpl dec mov mov dec popf jb pop jno nop push inc dec ffree or mov divb and icebp inc mov cmpsl arpl xor ja inc or fs imul sbb outsl stc in cmp ljmp push pop insl aas xchg nop cmp mov lahf jb rorb push sbb addl xor std xor add mov add inc dec je movsl lahf push and cli insl lahf sar mov jo jge mov inc cmpsl mov inc lahf int mov bound movsl jne jl push push adc gs or mov lea lods dec pop mov mov dec divb sar ret adc mov or aas add jecxz sub jle xlat negb mov sub xor sbb add outsb add lahf fldpi hlt scas xchg jle decb mov loopne dec dec cmc loop mov test jp push arpl fld1 mov jle xor xchg mov mov testl jmp pop push and lods dec cmp sbb xchg pusha lret (bad) fwait inc (bad) sub add aam fisubr jmp inc sbb fstps and sbb ret mov imul xlat pushf (bad) mov daa out mov inc aam and and inc adc movsl mov jle jp test dec and imul mov outsl jno arpl cmp cmp jp jae push out lret aaa (bad) insb int lods cltd lret xchg jbe add (bad) push inc shrl loope cmc cmc mov lcall jge cli sar jmp lds out fcomps in loope loopne enter das mov add lret ja sbb jl sti pop or cmp inc out cmp cmp mov xchg mov dec or jecxz sub lret lret adc and int3 push dec mov iret or sti inc sub stc pop xchg mov mov into jl cmp in rclb scas mov (bad) repz pop clc bound or es cmp cmpsl cld dec pop fdivp sarl das sub or pop jp and daa pop mov aas lods jo lret in (bad) lods and or (bad) cld pop rol or popa cli lahf dec inc sti lahf cli sub add mov (bad) jae roll cli sti pop cmp jge outsl jl or mov das loop sbb pop mov test sub (bad) aad maskmovq sarb xor loopne or cli and imul xor mov xlat bound je mov sbb push pop bound adc loope adc or and jmp mov mov xor jg das cwtl xchg sti mov push outsl pop mov jb,pt aaa mov and dec pop outsb jbe enter inc sub cmp push aam push mov adc jno (bad) push (bad) aaa test push test jnp out lret and std dec push dec fisubrl sub gs jb mov mov addr16 lock (bad) xlat mov lret lahf and add cmp pop push adc pop ret stos xchg nop cmpsl xor hlt test push jae jno outsb xor in in into rcll adc imul mov mov mov fsts xor in out ljmp mov cltd out xchg adc and pushf cmpb sub xchg out test fwait cmpsl mov enter out pop out (bad) push push cmpsb sbb stc cmpsb pushf bound dec adc mov dec jo shrl in lea mov (bad) mov mov div mov inc mov cmpsb jg push aam iret fs nop lahf pop jae mov dec sbb ret push orb xorb dec sub incb jae aas mov sub and popa xor xchg ficoml ljmp insb lods add or std mov sbb pop sbb in fildll sti cwtl out jo (bad) inc and (bad) mov add add mov insb xor inc (bad) pop repz movsl push mov pop (bad) in mov adc add data16 addr16 push call jo jecxz dec out lcall xor (bad) xor mov (bad) sub mov test jnp test out sbb fwait and adc (bad) xor ret je mov cmp push dec negl xchg or les fstl xor pop dec (bad) out push inc loop xchg in out xchg adc stos je xor pop jl lea in cmpsl popa cs inc rol sbb mov and inc add (bad) (bad) test cmp loopne push in xchg or cmp aad dec and fistpll imul js insl je mov test inc stos xchg add pop sbb sub sbb shll imul out jbe cmpsl pop pop jge cltd and lock adc push xchg popa push fidivl xchg lret push xchg pop clc inc xchg (bad) inc mov cli sub or mov test adc outsb cmp (bad) jb jns sbb (bad) cmp imul int mov add jecxz mulb ffreep jle push mov xchg and mov push mov jl std jne mov mov inc rol arpl inc mov out test aam cmpsl cltd lret mov shrl push push je and sub jp sub xchg stos adc pop pop adc pop (bad) xorl fisubl add rolb je pusha mov mull movb ljmp (bad) fdivrp daa test mov out push stos in jbe pop cmp test fsubr shlb movsl push in gs lods sbb fiaddl push rcrl es or ljmp push das push jne sub or fs testl cmpsl mov aaa inc xchg and mov adc arpl in or push mov sbb jl mov push push ljmp dec adc sbb add lods xlat inc aaa test icebp rcrb add std (bad) sarl lret mov call cmp push pushw shrl ss (bad) pop lea push stos xor jbe mov data16 fs lds rorl sub or aad dec rorl int3 push inc das out pop xor xchg jns mov and xor mov ss imulb leave pop (bad) push pop imul sbbl and jp adc cld popf inc adcl outsl out in sub pop mov fucom jno or mov imul cmc pop mov inc sbb add xor and repz add dec dec movsl and (bad) bound mov es fistpl mov ss jno bound mov inc imul add sub rclb mov fldl sti hlt mov (bad) jae jnp enter fdiv mov aam sub add in jg andl popf (bad) lcall fldenv stc lods aam inc cmp ret lcall cs lret (bad) aas aad mov xor imul mov add fcoms cs push jo inc jae sub test xchg cmpsl inc loope push out sbbl xor cmp push adc mov lock out adc push shrb das fnsave jle loope in cmp test xlat orl nop test mov inc aas cmp sbb dec outsb fdivrs mov push fs dec addr16 xchg push mov dec aad push pop sub jnp adcl dec xchg iret xchg xchg fadds test lret xchg mov mov xor inc ja xchg cltd (bad) push mov mov mov (bad) popa clc jnp adc sbbl out mov pop fcoms test inc cmpsb data16 sub movsb adc xchg push adc adc out sbb xor sbb push sbb mov mov out xchg cmc mov dec pop cmp mov cmp cmpsl stos adc pop mov pop sar out and mov js adc inc push cwtl imul (bad) enter lret cmp mov inc pop ds cmpsl xor or stc dec aam sbb popa movsb loop adc test push push das cmpsl std andb cmp out mov outsl jmp mov push scas mov (bad) (bad) mov mov mov stc or addr16 iret iret push mov jmp ds imulb scas mov out loop fnstenv cmpsb out mov add ds sub or pushf data16 inc test dec jo cld adc mov stos mov pop jle xor or lods dec imul xchg push aam jno and rol jp lret js adc xor or mov ss sbb (bad) mov fstpt push mov mov push inc adc and adc mov cmp shlb ret mov push jg sbb (bad) icebp pop das xor xor xchg ds push int ljmp ficom pop mov out es mov mov outsb ret dec dec outsl repnz ja outsl cmp push push sub cmp cwtl addr16 les pop aaa xchg repnz xchg loop xchg out mov (bad) lcall xor lret scas movsl aas xchg inc jnp pop dec mov sbb mov cld in or pusha cmp sti pop cmp jbe dec dec mov pop mov mov and pushf cmp scas (bad) dec jmp jg out divl leave dec sbb mov push jne push int je xor sbb (bad) push mov pop call inc push or out outsb outsl lock les mov jne mov not insb xchg or or adc or dec clc adc xor mov (bad) hlt mov sbb addr16 ret mov jle ja and inc adc cwtl es jge stc data16 (bad) daa inc fcompl sti popf (bad) imul sahf int3 xor mov cmp outsb mov pushf inc xor loop (bad) notl dec dec push cltd es mov repz xchg jae dec mov ds mov xchg xor xchg push xchg mov adc and aaa cmc jecxz stc addl call add sub mov mov mov xor sarl aam cli xchg sub inc xlat nop adc scas or rolb and and dec jnp sbb sbb adc lret rcrb (bad) jp inc scas or xchg stos sbb lahf daa push clc sub test mov repz into cmp pop jbe cmpsl inc and mov pop je,pt test icebp (bad) (bad) rcrb wbinvd inc outsb cmp jp (bad) sbb ss inc leave mov or jge xor outsl xor dec mov mov sub cmp sbb mov in (bad) mov jns and lods and mov sub adc repnz jp (bad) xor adc push cmc jnp repz imul pop gs sbb pushf adc test pop adc lock mov imul rcrb xchg push xchg jne xchg mov mov shrl cmpsl clc inc in call std sub fsubrp jmp aas test add push lret call and lcall or xchg aad sbb rorl fs dec cmpsb inc enter ja adcl mov (bad) xor and fmul inc scas push xor sub xchg jmp mov and adc xchg cmc fsubs mov (bad) lret ljmp pop mov push dec out mov adc (bad) xor cmp iret dec pushf mov add mov mov arpl lock add mov or js ds or ss pushf and in and cld pop out clc pop adc sbb (bad) push xchg push out xchg or popf in lds lret mov imul lds lods xchg nop and jmp test ja js add int3 fstps cmp mov lea pop testb xor push in fdiv imulb inc sub add inc push aaa movsb sub adc mov ffreep mov mov fdivrp xchg lret les pop (bad) dec xchg push mov push js movsb repz movsl scas mov push roll add inc mov (bad) cmc lcall insb lods dec push sti sub push mov data16 adc hlt add xor xchg jo sub testl sbb mov mov ds (bad) mov or je mov adc mov cmp aad sub aad ljmp insb inc loope pop mov popa lock cmpsl add test fucomi dec and and (bad) or aam int sub add jo jb rcrb shlb call daa js mov pop mov add imul pop add sar inc push aas es insb dec lock sub push inc fistpll fdivs push rorb cmp es adc inc in lret movsb pop fnstenv and rol negl pop dec or cwtl das (bad) adc add std arpl adc incb mov aas test dec xor mov xor push enter xor sub or adc sahf add dec flds mov (bad) movsb xor mov lea xchg add xchg adc imul test cs xor pop fdivr mov jne subl js xor in int3 cmp std add dec xlat xchg fucomip sbb js insl mov jg and mov sbb fcomps pop and outsl lcall popf stos adc or test jno add gs jge daa divb cltd sbb mov rorl insb push sub mov stos inc and mov in jb das ret adc sbb add adc iret pop cld stos xchg in out es outsb push (bad) xor inc mov (bad) enter push or (bad) iret loop pop or mov jb xor div and lret les pushf jg inc loopnew js out mov add fistl push xchg bound xlat insl mov gs mov adc add push fwait sub add lods cmp pushf pop mov pop stos gs mov xchg pop out (bad) xchg push sbb adc pop push stos dec xor sub add xchg mov or das mov insl (bad) jnp xlat or mov iret test div lret push xor ljmp push cmp test or pop push stos push xlat aad aas xchg xchg xchg sti ret jecxz mov mov mov push xchg dec mov dec sti jl jae push push jge inc gs and inc pop cs aad ds (bad) scas sbb xor cmpsl (bad) ficompl iret lahf loop xlat sbb stos fwait pop imul jmp imul pop jmp push out popf push adc leave outsl frstor sbb add inc and inc mov add loop stos inc adc inc pop dec xchg ret adc loope add incb sbb pop lahf loope jae pushf or sbb xchg pusha aad inc imul cmp mov lcall pop mov and pop lods mov int3 mov or insl out outsb das mov pop jmp cmp push mov loop loope mov mov pop mov and lea arpl push stc insl std aam pop dec bound jle xchg sub jb and push adc sahf movsb cmp cmp inc aas adc xor imull rol pop mov gs dec test pop mov mov push subl movsl adc sti mov xchg xorl push movl lret lods cmc mov into cmp imul addr16 cmpsl inc lea ds pop rorb push js and rcrb pop push mov inc stc mov jmp sub pop add repnz push sbb mov dec sub popf push jb mov adc cld std xor mov jmp (bad) jo push nop imul mov and or ret mov fwait pop pop sub dec cmp add jle adc sub push sbb (bad) push repz cmpsb test cmp (bad) mov dec inc inc pop and add and aad or icebp popa lahf in out pop pop xor int in std outsb push lahf or pop mov and rolb push loope xchg fisttpll mov in push sahf sub clc arpl pusha pop icebp and pusha imul test xor pop sbb movsl dec nop test cld popf cli rolb xchg cmp ss popf mov mov mov ret mov sbb (bad) stc push scas or jae push sub or daa mov shrl jo fdivrl sbb divb cltd (bad) lock xor popf das mov stc jnp xchg sahf shll jle test outsb (bad) dec (bad) adc jmp mov roll push out inc test xchg scas std aas or push stc rorb dec adc and dec ret pop sarl aam push nop xchg in mov mov xchg into jmp dec pop jmp int sahf (bad) pop xor das push add push cmp push ss sbb repz dec mov imul pop dec push sub push rorb insl push add cli dec pusha jb jp add fist aaa test sbbl adc imul or out int out pop dec dec fsts roll xchg xor in je inc repnz jp push and call cmp jns imul (bad) in movsb mov xchg sbb inc inc arpl push pusha shrb mov repnz ret sub in repnz pop cmc enter cmp (bad) or popf xchg or cmp rcl jg cli mov fnsave stos dec icebp push add mov ljmp out sar mov jmp test jns iret leave aad xchg jae (bad) cld cwtl or cmp or out jecxz pop sbb fisub dec dec lret loope cmp and sub sub jbe and inc loopne sub add push xor inc aad bound sub loop (bad) dec lock sub fisubl mov (bad) mov add lea in ret daa mov cltd pop jle adc imul xor out mov jge in xchg mov xor out dec (bad) aam dec pop mov adc and sbb int inc xor repz in jo mov sar push or jo or jns and inc jl leave sahf fisttpl hlt pop shlb sub xlat adc xchg push add dec add jle pop stc pushf jno arpl into cmp dec and daa mov ja std pop and jno,pn adc pop xor test xor xchg dec aad xchg xchg lods push (bad) (bad) data16 mov aam rolb sbbl and pop adc sbb loop icebp dec mov xor fisttpl push lods pop cli or dec pop mov xchg lods mov inc pop in arpl aas dec xchg lock pop cmp fwait cld xor jae jg shll ljmp in bound flds mov icebp das clc js lds je mov stos or and adc or add aaa and and xor in scas and mov push pminub and adc cltd insb xor mov mov frstor dec mov cmp in and stos xchg ss rcrb jecxz in out data16 jns jo and (bad) shll bnd fiaddl mov adc adc dec jo addr16 push mov fldl cmp movsl mov xor cmc jmp jmp mov pushf stos push mov jle ret and cs pop cwtl hlt (bad) xchg sbb sbb enter cmc mov xor je fsub add cld das jmp cmp inc xor das jns sbb xchg imul loope xor sbb in mov jae dec xchg in xor jg outsl (bad) lahf add sbb mov mov sbb fwait and aas cmp dec stc jbe mov push inc (bad) mov outsb xchg cli into cmp repnz jbe adc push out or dec mov rorl (bad) mov jmp out inc (bad) jge sub jge movsl and dec out and mov mov cli sub mov cmpsl (bad) xor push cmp rol mov orb clc das int3 mov cmp loopne cwtl dec adc sbb fmulp sbbl jp mov cmc cmpsl sbb sub js fs jp adc test (bad) xor inc ret inc addr16 loop cld in (bad) cmc push jno adc cmpsb ret repnz cld rcll cli fmull add je xchg gs sar jg sub lcall pop leave sbbb xlat or test mov call test mov test inc and jge dec mov daa test push sbb or xorb mov mov mov test addr16 add data16 mov dec jg (bad) movb shrl cwtl popf aam push cwtl push xor cmp sbb cmp cmpsb sbb mov mov and jns push fs lret in mov lcall jns into xchg cmp or push addr16 rcrb hlt mov (bad) stc mov pop push inc dec fnstenv loopne push sbb imul pushf add or xorb nop pop idiv and inc das rcll fucomp cmpsb adc xchg shll lret movsb mov fucom mov pushf sahf adc dec xor and (bad) xor das sahf push pop pushf roll in jae lret xchg es iret pop sahf (bad) ss sahf pop lock push fisubl ljmp into dec add fimull fs lock dec push mov add nop stc inc into add out mov xchg or ret fwait cmc cwtl inc lcall ficompl push gs push adcl adc divb mov mov rclb nop (bad) dec ljmp dec ds adc cltd and push cmpl js adc xchg or out push lahf add dec (bad) mov mov and sub adc ljmp xchg adc clc pop (bad) jo dec cltd iret popf shrl pop (bad) ss out push mov push inc lock mov dec cmp shlb js push es inc jb or mov sahf es pop lock jl aam callw adcl neg mov jle dec fsubl imul cltd leave pushf adc and shrl sub mov pop (bad) jo mov rdtsc js push stos adc je xchg add or adc nop mov sbb (bad) xor fs aam bound xor cli push sbb daa jecxz (bad) sbb sub xchg js insl enter mov cmp mov cmp pop cmp xor aad inc mov add lret imul and dec out pop push inc push sbb les popf or add loopne add ljmp cmpsl pop lea sub dec cmp mov arpl xor pop pop mov imull dec push pop ss ret aam cltd sub fwait push xchg popa repz in (bad) sub cmpsb fsubl sub iret push cmc mov in scas push add mov lea movsb into mov aas pop mov dec push leave cmp dec pop leave sub jp push and push fiadd jp add dec sub xor movb test sub push xchg lcall out xor xor lds sub int stos gs cmp add dec insb mov fs stos inc jo inc sti pop rep mov int3 insb inc push adc std or mov mov sti push loopne icebp push mov adc sub mov xor (bad) xor lret (bad) add xchg jl loope ljmp leave or lret sbb lahf mov scas xchg xor std (bad) pop sbb sub inc mov mov adc adcl into cmpsb dec dec lds stos cld jecxz sub push add pop sub test mull loope add insl push test call jb in and gs xor mov inc hlt dec xchg inc cmp xchg je ret dec jb enter iret ljmp das xchg add push imul shrb (bad) mov xlat xor cld xchg cld daa mov idivl mov into repnz pop outsl push cmp shrb fbstp pop jno divb and xchg stos pop or push push adc shrl mov jno mov push mov cmpsb sub mov jmp fcmovnbe sub std int3 pop fsubl ffreep imul aas jo cld pop dec fstpl in adc (bad) xor aad shl fnop and inc inc lcall sbb stc stos in aas mov push lods push (bad) fcmovne lods xchg adcb scas mov inc fisubr push add sbb and and imul data16 test jg sbb push jae repz mov std (bad) mov adc gs sub dec lods mov push sti (bad) rcr push adc or cmpsl addr16 ss and rorb iret pop push mov push sarb or pop cmpsl (bad) mov sbb sarl stos out mov stc dec (bad) js and int insl cmpsl loope jmp and idivl xor sub pop int3 xor mov mov aad adc addl lock mov mov mov pop cmpb sti jg loop adc fldenv nop fisubl pop inc loope out stc fisubrl pop mov inc xor push inc cltd roll int3 xor decl aad and in add (bad) lret dec into mov andl out addr16 scas xchg movsb fidiv mov das and xor lcall add repz and sahf out ljmp push jne sub sbb and pop and mov cmp cmp mov pushf lods fisttpll mov out jmp push mov mov cmc mov sbb or push rol insl sahf mov roll dec test std push rcrb push insl jns inc insb pop mov rcl out or push adcl div in arpl lods daa and enter daa sub sub arpl mov xchg jnp mov sbb jmp aaa aad mov cmp inc out sahf pushf inc sbb gs jns push sub mov lods add aam xor inc push push out dec or jnp outsl int3 dec iret or loope in lahf stos mov fldt test adc popa popf jge cmp xchg mov inc sarb mov mov icebp mov cmpsb pop xor pop sarb cmp pop incb pushw mov add repz stc xlat lock (bad) lods adc xor dec popf mov test cmpl add bound add add in adc pop test push jecxz cmc jmp mov or jl imul xchg daa inc mov sub out mov jo lea fcoms xor loop or rorl scas dec imul aaa inc rcll aas mov cld in or pushf or push es or sbb mov xor inc lret push push inc pop leave mov clc daa cli or (bad) mov (bad) jnp movsl ss andb xor mov int3 (bad) les dec in inc xchg push aam mov lret lods cmp daa cwtl es iret xchg popf jne popa test fdiv scas jg add xchg es in testl (bad) mov push pop es js inc insl adc es mov pop fadds xor xchg (bad) icebp clc pusha mov jae mov sahf xchg dec jo rorl add sub outsl push (bad) xchg jecxz or out pop and cmc xor cmp mov fs lret cli aaa adc add xor mov iret ret or popf ds and stos cmpsb cmp aad test sub push sti pusha push mov xchg cmp xchg add popa pop jae ret jmp insl test xchg mov mov divl push sbb popa outsl rorl jecxz daa cld movsl dec ja sub xchg xchg pop xor adc jae jge add jg std call das jnp mov stc fldenv mov fidivr mov mov lea sub call xchg push adc push mov mov xchg inc pusha stos pcmpgtb dec jne setae add push popa pop mov addr16 test repnz rolb insl repnz xchg add jb lcall push cmpsl sbb jnp lret mov icebp push push lods fnstenv repnz inc and mov repz cmp ja xchg sub add or pop xchg in inc jle retw push fwait xchg daa bnd imul push sbb mov scas loope ror mov sub sub or adc movsb mov roll fldlg2 adc dec cs mov in inc fmuls and rol jmp add sahf (bad) dec pusha das lods dec jmp jno xchg cmp imul dec fistpll (bad) add cli fcoml fnstcw dec dec adc xlat popf sti scas mov fs cltd adc xchg iret push push mov mov xchg mov mov cld in pop jl xor and sub dec loope mov test inc bound mov sub dec (bad) lods jo xchg adcl popf pop rorl adc mov xlat int inc adc push push mov mov lahf fs lea or mov xchg cmpsl (bad) out push inc inc sbb sub (bad) lret jmp pminub or mov orb das jnp fidivl jl lods sub push pop mov cmpsl clc out sub je mov dec bound cmp sahf gs rolb jp jbe dec mov push mov pop in push cmp push xchg ret in stc cmpsl mov loopne scas dec inc lock cmp push test push mov dec fmull (bad) cmpsb pusha xlat sub dec loop lods (bad) adc out push sbbl fild ss lock cmp xor aam icebp ljmp mov clc adc movl leave mov loopne cmp shll repz lds inc add push cli xor nop sub popl pop inc xor arpl in fidivl or dec mov mov jge outsl adc add or lea gs addr16 aaa les in mov mov aas mov movl pop dec jo (bad) mov push in lods lods aas sarb popa mov sysexit mov lea jo sbb add (bad) in inc inc xchg lahf sbb (bad) int ret jmp inc or bound pop inc mov pop mov stos dec jp add loope aam movsl lret outsb (bad) jae out out std fldcw mov (bad) pop mov mov popf xchg pop (bad) sahf aas fldcw sahf jb inc (bad) out pop push mov mov fs dec sbb shrb dec xchg std xchg adc cli fiaddl sbb mov cmp (bad) loop std repnz cmp out dec (bad) push adc dec push and push sub xor push lret adc lcall jno cmpsb jge xchg inc repnz add jmp mov adc xchg stc cld add and adc push cli sbb (bad) jo add inc dec or push mov rcrb push (bad) fcoms pop pop cld sub cltd (bad) pop ljmp push lcall scas push popf lcall fcom aad push xor push inc dec into fdiv push mov add dec sub xchg ret adc cmp inc add popa loope jnp loop in (bad) adc jp cmp mov mov or jp (bad) push rolb call jae imul movsb loop rcrl push je bound mov sub ljmp push lods fcompl outsb dec jae xchg int sub into lock inc pop inc push mov mov frstor jmp sub xchg notl fldt dec nop sti mov mov and insb mov imul adc and daa in add (bad) push popf push addr16 (bad) pushf ss jo sbb fs xchg or in repz pop inc pop test mov add cmp pop sbb call cli test popf mov fst mov sbb push xchg addr16 lcall and fucompp pop xor ret (bad) pop aam mov call or and push clc mov lret pop into movsl shll ja push clc jge adc jl inc fcompl mov fs insl repnz cld bndstx mov cmp sub outsl in rcrb xor cmc xchg mov sahf in sahf inc xchg sub xchg add (bad) mov outsl xchg push bound mov in inc fnop fs and bound xchg sbb adc std lods mov or mov add (bad) aas inc lcall adc xlat and idivb sub in mov arpl lds movsb dec pop mov ret push popf mov inc sbbl cmpb fst stc jno lds int3 dec add pusha pop push arpl mov mov and call (bad) aam mov jne mov dec mov loop or stc fcomi fs xchg fmuls sub loope int3 dec push ror cld adc dec (bad) ret repz sbb in mov hlt cmp mov sbb xchg js popf mov pop mov mov add hlt jmp xor sbb pop dec xor (bad) addr16 jl jl cmpsb je fnop loopne sbb push jl adc push inc (bad) insb repz add insl xchg ss sub jg pusha cmp lock and jns and in dec cmpsb in cltd cmc jmp pushf lods jecxz aad icebp mov paddw sbb les mov jb das movsl insb iret and (bad) aaa (bad) lret xor jbe inc fisubl sahf pop inc outsl scas mov ja push adc fcomps mov in lds or enter sub fnsave pop xchg data16 jp sub jo xor rorb test jle add inc jmp lahf (bad) dec dec xchg loopne add adc out imul mov sbb imul out jg icebp xchg movsl out popf and notl pop fimull leave xchg repnz mov (bad) push scas pushf cltd into in mov push pop xlat add (bad) mov das sub cmp loope sub mov cmp xor lahf lds add and roll andb out mov cld (bad) and mov sbb sbb lret sub outsl in xchg jle lret hlt add adc mov mov adc sub aam and in neg push fnsave fsts std lea fs mov xchg xor and ds lods data16 std jne xchg pop adc inc ljmp fcmovu sub pop push jo mov push jg and in aaa (bad) push jmp jmp aad shrb mov fs jo addr16 and stos or call popa lret cmovnp js or jl imul add inc iret xchg call mov aad sub cmpsb adcl push mov mov sub cmp sbb inc dec and arpl mov test fist and cmp int3 pop xlat lcall sbb sbb mov fadds inc mov mov roll push clc rcrb mov xor push push outsb scas cmpsl daa cs or mov adc std testl adc stos pop push scas cmpsl outsl (bad) mov mov decl enter or pop in lods pop ljmp fsts mov fldt in out lods divl fstpl out popf (bad) xor mov mov jecxz cmp cmp bound daa push push add jae (bad) popa das mov imul dec push sub cmp lret mov xchg xor cmpsb insb mov cmpb inc loop lahf xchg xchg xor test icebp fstl mov pop pop in dec add ljmp aaa fwait push dec mov test push push lods stos lods scas cli out mov lds mov push cmpsl xor mov in mov and lds fs push jae cmc ret sub aad pop lds lcall push lcall loop pop mov xchg adc xlat sbb xor jg dec js sub inc stc fs mov pop mov addl or lods ja jle into dec shll sbb dec mov mov and cmpxchg jmp adc add fistpl pop sarb movsb imul fiadd popa je mov cltd les bound push adc repnz in mov mov out xor mov xchg jl sub lods dec std cmp shll cmp sub adc sbb (bad) mov and push fdivs ret dec ljmp xchg push nopl ja cmp push sbb xchg inc loope inc mov push lods mov cmp cmpsl pop inc pop inc scas dec xor xor mov jle gs xorl outsl dec mov out cmpsb cmpsb mov push jae ja (bad) jp sbb out test ret in lea scas mov les xor mov sbb ret call cld jge test mov jns push (bad) pop push rcll jge movsl lret mov push ljmp jmp lock ljmp je dec outsb mov call dec push lcall ret mov pop cmp and push rol dec cwtl jle lock into xor dec std jl xor mov pop aam jp,pt scas lock imul mov xchg dec insb push js cmp mov jg mov and in clc int3 pop dec cmp nop arpl dec (bad) hlt inc xchg decb out int mov fwait movsl pop shll pushf cmp xor push aaa (bad) pop sbb frstor fcomps aas les call push mov push jmp popa notb push adc mov push push cltd pop xchg aam xor or pop fcoml sbb mov or (bad) mov ret xor lcall sub popa xchg popf test pop jnp das fstl sbb dec mov paddd cld add or aam fidivr rcr push jo enter mov adc and sahf jo jmp adc adcb cmpsl sub popf pop sbb sub push out dec sub popa int3 sub insb lahf sahf stos test (bad) dec inc mov testl add arpl mov addr16 fs stos aad sub inc or mov cmpsb and push lods xchg (bad) int3 call out (bad) xor push nop mov iret pop sahf (bad) (bad) out inc xor outsl jnp xchg push pop popa stc push mov mov les out or fildll jge add cmp mov flds mov and mov aas mov adc push push pushf leave cld stos test shrl cmp add aaa pop fcmovnb sbb xlat mov jno dec lahf in aas insb lock mov jp and icebp shll inc in push and insl cmovae (bad) int3 mov or (bad) mov jl sbb mov ljmp sub push stc inc mov (bad) fmulp cmp orl imul sub pop imul adc jnp ret lock cmp outsl lea mov (bad) je add outsl xor pop cmp fmuls aas mov or sti jl inc xchg and stc test test xor (bad) stc (bad) jbe dec mov mov inc jno ljmp fsubs into inc xchg sub jae cli pop inc subb jle lods sub or inc nop (bad) stos dec aam adc fwait mov fistpl dec mov dec dec scas in add mov in pop loop sahf jnp pop lcall fild into (bad) movsl rorl mov out add sbb scas sbb ret or clc jns lcall nop mov loope (bad) push sub (bad) push or inc out xchg fcoms rcrl jb inc imul mov push sub cmp mov mov add cmp cltd stos jae xlat push in rcll xchg mov or (bad) imul xchg imul lds sbb jl jmp test jo push and jb pop loopne imul jbe cmp add ljmp push ja add dec jo dec popf orl mov jb out jns inc test adcl pop sbb das jo inc mov pop aas sub mov fs (bad) iret sbb stos mov sti xlat addr16 dec jmp imul (bad) jo adc add popf jne out fmull hlt add mov test cmp pop fldenv xchg mov out stc arpl sub and pop mov scas insl call sbb xlat add sbb mov push jg jecxz call shrl ljmp ror xchg cmp sub test and cmpsl dec jns and cmp xchg lock mov jnp sub fadds lods mov jge xor pop ss mov out (bad) cmp call and inc std and jb lcall push mov add ss mov loop lcall xor or bound dec xchg enter lods arpl es popa cmp sub xchg adc lret fs cmc pop in cmpsl cld jns scas push (bad) jo jg shl hlt cli jge dec shlb (bad) fbstp sbb mov test stos sahf jno inc (bad) sub jo pop (bad) sub dec outsl movsb int3 cmc adc pop or sub sbb inc dec or and pop out test inc sbb loopnew pop movsb stc mov loopne add enter push out xor rcll shrb pop lret sub xchg jb inc lods xchg inc and mov fldcw je sbb insb push push ja dec data16 (bad) jne cld pushf push push loopne or mov ud1 dec scas inc fdivrl pop divl aaa test mov imul (bad) fisubr mov scas aaa aaa cmp sub loop mov stos pop sbb mov lock jg cmp data16 push hlt inc push sti ret ljmp xchg gs out rcrl jo adc test (bad) scas adc (bad) out push js cmp push dec pop mov jb inc push cmp lods jle scas mov hlt rcrl push dec pusha outsb cltd sub arpl int andl ret pop int3 jo cwtl jnp arpl jge movsl xchg jne and lea jns sbb scas enter popf sub inc mov std int add pop roll pmulhw xchg dec sub adc sub into push das out inc jl mov xor and dec sub fwait push cmc inc mov inc jnp ficompl xchg mov icebp inc scas fs pop (bad) rorb pusha jno js fcompl (bad) outsl sbb push pushf out push lods les inc cmp adc mov ljmp dec lret dec xor adc push (bad) dec inc xor cmpsb faddp imul mov mov cmpsl mov mov add or addr16 test inc in jbe push dec lahf jns ss gs inc sbb pop mov repz mov mov xchg pop popf xor push cmpsl or pop jno push pop sub test lods ss pop sbb test xor mov pop jo adc dec out add add pop inc shrb fwait inc stc test push sub mov mov or mov xor das loope xchg jl adc mov movb (bad) idivb lea test outsb jecxz addr16 daa out leave fwait dec stos push push or sub das roll cmp cld cmp inc (bad) scas sub into inc pop scas jecxz test leave jg outsb xor cmc add pusha cmpsl fisubr fisub mov mov aaa jae shl in adc cltd mov xchg xor jge xchg dec inc add cmp les push mov loope mov inc and xorl test enter jb lret and in xchg mov cs and lahf cltd jno pop push in mov arpl xor test sub add repnz dec int3 loop test or sbb cs js les (bad) lret push fwait push stos loop out sub jnp ret sbb fs out movsb xor and lods in xchg shrb mov inc pop repz test jne xor fsubs adc insl mov test cs push cltd outsb and and adc lcall push push pop jle push clc push mov push dec div xor mov ret mov fidivr inc je or cmpsl js inc cld pop cmp jmp xchg push int adc or stc cld fwait out add popf shl lahf pop mov add add push and cmp (bad) ljmp pop xor ja sahf icebp iret call mov jo jo cmp mov inc xchg mov mov loop push rol mov int in dec jg pushl jne roll das je rclb data16 push mull add mov jnp mov xor push lods mov cmp dec pop dec pushf lods sbbb imul mov jo idivl add push mov or push (bad) out aam pop push insb fildll test (bad) movsb mov inc sub sti mov mov cmpxchg loope (bad) mov add sub aam add xchg or loope test adcb (bad) dec repnz jnp stos orb fsubs or das mov out loope inc (bad) jg cmp xor out or push jb mov add incl adc fwait xlat add mov aaa mov adc jns cmpsl or aam xchg je adc in jp ljmp adc das mov pop jnp xor sbb clc in sbb outsb pop jp enter out inc lods outsl dec iret test cmpsb mov adc lods lret mov xor adc push test sbb mov in lods pop mov int (bad) popl (bad) sub and cmc in mov imulb or add mov jno loop mov mov push (bad) pushf inc or lea ds push or add push dec (bad) jmp mov push inc push in cltd add push or sbb cwtl sti and leave (bad) push cmp adc and das jb jbe dec (bad) or push or cmpsl mov xchg leave sahf dec mov (bad) (bad) xor mov sbb mov sub cmpsb ss sti sub stos mov fs xor call ficoml push xchg mov lods movl (bad) cmp push mov cmpsb sbb cli mov js jb adc test iret imull inc outsl pop pop jmp scas mov jne jno mull orl ds mov xlat sbb push mov ss inc pop pop sbb and mov lcall sbb or adc lahf ss fidiv lret adc invd push std jbe jo je imulb cmp shrb lock sbb loop jns push lods or shll mov cmp loop xchg add addr16 cs fnstenv jmp stos iret es les fiaddl mov ficoml (bad) int3 fnop dec cmp loop mov push les cmpsl jne add arpl sbb (bad) incl gs ret push adc sarb or mov adc in dec loope sbb pop add cmpsl add leave rcll aam mov insl int3 ret (bad) inc inc popf lds add sbb pop cmp fist sbb mov sub mov mov sub dec add inc dec inc mov mov fcomps call popa jecxz jne cltd sbb decb sbbl pop sbb sbb sbb add and add incb out mov into jle xor scas sbb fdiv (bad) lret push push or sti add xchg cmp call in (bad) rcll xchg shrb (bad) mov arpl clc add cmc xchg pop xchg sbb sbb iret popa leave test (bad) std out push adc and (bad) xor scas pushf xor aaa arpl cli xchg adc aad jo imul popf xchg jecxz sbb data16 fidivl outsb jns cmp sbb mov pop xlat push outsl movsl add cmpsb test dec cltd pop iret pop xlat je mov adc jnp xchg fwait or jno cmpsb mov lods nop es and jg add xchg (bad) (bad) loop call inc cmp sub sti inc xor fnstcw push mov js push jne jle aam add fstps jg aaa sbb orl je in loope dec mov pushf lahf mov addr16 sub mov inc mov pop push xchg mov lcall xchg imul mov loopne ret mov decb in sub into pop cmp mov mov into mov pop imul fnsave sbb jecxz mov cmp sub fld add fmulp inc pop sbb lret inc jno sub inc fmull pop (bad) mov dec inc push mov inc jns (bad) mov nop jmp sbb lods xchg adc out aam push cltd push (bad) jb xor lret xchg or jo hlt add sub stc fadds popa mov pop fs mov jb btc jb test (bad) jbe mov daa lea jp inc aas ja mov movsb mov jno cmp xor pusha or sub insl sbbl xor push mov fcoms (bad) aad inc loop and pop mov and inc jnp push fldl and mov into dec or je sub or andb xchg xchg jo dec add fistpl pop jp popa fisubr sbb out fs pop and out cmp sub and mov xchg mov mov mov gs jg dec test in push ficomp daa mov push and mov test cwtl pop adc test andl je jne dec pop pop rol jge sti stc mov ret cmp rorl mov jae in subl test add dec imul add push nop cltd jl lret sbb cltd xchg push xchg ja push roll std cmp movsl adc daa sub jns call bound test xor out je pushl xlat fnsave imul pop sub repnz daa lds mov das jbe and (bad) pop mov data16 xchg add add hlt xlat mov inc fdivl mov mov repnz das (bad) shlb cmp movsl mov dec fisub fcoms mov mov lahf fdivs mov into xor incl pop movsb adc pop adc fist push pop mov sub cld and mov aam repz cmc add pop test repnz push mov mov pop xor mov adc xchg test in or mov out dec decl inc aad mov add lret nop xor push arpl adc out and cmp scas out or out out fdivrs sub jmp or or std mov ds fwait nop mov notl sbb pop incb jle (bad) jmp repz ja adc adc daa cmpsl mov jns jecxz mov sbb cmp push addr16 (bad) push iret in incl push test dec xchg or rcrl dec scas push xchg mov sbb push movsw out imul jmp sub push enter mov inc (bad) cmp xchg hlt push mov add loop fs loop into movsl xchg loopne push push data16 lret fidiv insl clc stos add cmp addl jmp mov (bad) pop sub stos sub das sbbb fstp (bad) clc mov pusha cltd sub sbb sbb scas mov jg cmpsb sub fnsave push fwait pop jae xlat or call addr16 roll pop fadds addl adc or stos or negl test cmp cmp scas lret inc sbb adc or divl jo adcl lock xor sub ret push add cmp sar push inc pop das xor (bad) rclb cmp jge orb mov enter cmp xlat in (bad) and add ficompl es sbb jbe cmp nop jecxz fnsave std mov sub fmull and sar push jle movl nop jecxz mov push fbstp lret push or (bad) push xor aad les jl sub cmp cwtl lahf and xchg mov jne roll xchg repz out pusha sti bound dec sub std (bad) std in xchg add mov and call mov adc leave data16 stos or xlat jecxz push adcl ljmp call or into inc xchg or loope push je mov dec adc pop out push mov leave adc call cs (bad) fs jo ficompl cmp cmp sbb pushaw out mov lock mov aam fs inc mov les lea pushf insl pop ljmp arpl mov (bad) or cmpsl pop out push out sbb or mov shrl outsl xlat dec (bad) insb mov test mov stc cmp xchg nop mov push movsl test gs xchg adcl jg xchg pop out fiaddl (bad) jae (bad) int mov call (bad) sbb cmp test mov (bad) mov outsb cmc bound dec cli sub imul xor and and clc and cld outsl add fwait push mov outsl lcall add xor lahf and push rcr sti push adc repz aas pop jge lods inc mov push add cwtl sbb sub or out mov test xchg loope jg push mov ds les or pusha jns lods ja xor cmp mov int3 aas js jb mov inc shrb lock popf xor sub inc leave jbe rclb jmp clc ds fisttp sub pop test sub xchg cmpsl std aam add rcr mov adc lret std pop (bad) (bad) je into rclb mov inc dec rcr fldl aas xchg sti cmc pop sub in jle xchg push mov ss popf aam sbb std mov sbb mov fisubrl adc clc dec or imul cltd adc lret push pop cwtl in mov push jle insb mov inc ret sub inc lea push adc shrl pop cld mov xchg lds (bad) or cwtl fimull xchg mov push cmp cmc cs sub mov xchg cmpsl push aaa jg push sbb stc xchg xor sub mov mov mov sbb adc jns add or pop inc test enter jmp jae cs test in and jnp ret adc daa ror pop jge push sub es xchg in xor lahf mov div lea repz ljmp adc or aam mov adc lea jne push adc ss cmp xchg mov add jle stc xor int es cmp mov xor mov push mov xchg fldcw mov pop sti std (bad) and icebp rcll stos js or in xor and aaa mov mov enter sub fisubr xlat and ja dec mov adc stos je loopne jmp neg into idivb cmpsb and bound mov fbld cwtl mov sbb sub adc arpl pop pop scas cmp add repnz test cmpl cmp jo into mov jb inc (bad) or popf mov mov arpl out push movsb add stc (bad) adc mov or scas and mov push movsb or xchg lahf xchg xchg mov cs inc mov inc dec and adc fwait sbb jmp inc xchg (bad) pop mov in sbb pop add jp gs pop in sbb int3 and pop push or push fimul cld sbb aam outsb test fldl push loope inc in mov and cmp jmp adc xchg (bad) jne cmp loopne addr16 aas jmp bound outsb adc mov mov or mov or cmp cmpb or divl int sbb pop pop dec (bad) mov sub and adc pusha js outsl mov cmp mov cmp dec (bad) (bad) out xchg fidivl xchg mov jle aaa fidivr loope jle mov in fdiv in mov mov sti push xor popa jmp test fcomps xchg lcall push adc push xor orb rcrl (bad) jmp and inc enter pop andl aad cmp movsb fnop cmc cli iret sbb dec xor sbb lds ret mov inc xchg rcrl mov sbb cmp out ret les cmpsl mov (bad) jae xchg add notl inc scas mov sbb and divl and fld sbb (bad) outsl test fsubs fisubrl je mov ds lahf int3 leave add (bad) jno aad hlt mov (bad) pop (bad) fidiv dec inc cmpsl ja into sarl mov push cli ret inc push push outsl mov inc xorps stc or stos bound insl pop inc outsb pop mov repz xchg cli daa in fdivl outsl sbb pop ficompl pop test cli pop (bad) sarb ss scas mov cli or mov adc sub and in jmp dec jo arpl cmp lds xchg (bad) lret xor sub lahf iret push add sbb aas andl inc int3 or push xor sub popa out xchg xchg stos ret lahf maskmovq testl adc xchg cwtl or rclb arpl mov sbb xchg push xchg movsb xchg push xchg jno add mov push mov push push test repnz arpl mov stos icebp cmp push cmp sub dec push scas cwtl dec dec mov mov push or xorl pushf in sbb js push adc mov sbb lock cmp std loope push fwait cmp out mov sbb or mov and clc xchg pop xchg in in and bound aam sbb cmp cld cmc mov xor loope hlt or int hlt dec mov insb sar jbe mov sbb dec add jnp mov scas cltd cli fisttpll aam sbb pop sahf or sbb sbb dec mov lods in pop pushf popa sbb adc fmuls inc stos ficoml xor mov inc push push jle fist push into in inc xchg or mov fst (bad) adc or das imul push jae int xchg mov movsl dec cmpsl sub or adc push cs mov ret mov pusha xchg adc aas mov cmp or sbb mov xor and xchg and push xorb divb je mov pop mov push das add pop movsl xchg jle mov jnp int mov scas sarb imul pop (bad) in sub lods xchg test fsubl adc xchg fiadd cltd add jne sub xchg ficoml pop adc mov dec adc inc push and mov fldenv add test imul insb mov shrl movsl mov mov mov imul sbb popf cmp sarl xlat mov addb push loop test movl cmpsb sbb test mov (bad) (bad) int3 fisttpl dec push mov mov mov pop jb lahf xchg jno jge shll cmp in jmp fadds mov imul xchg mov sub lds cmpb dec movsl ret sbb fisttpll jmp sub fsubs imul inc aam or (bad) divl mov mov stos push and mov pop inc inc outsl adc in pop and cmp mov fcomps lods adc adc or sbb mov scas movsb fwait in mov outsb cmp sub mov adc dec push adc sub paddusw xor mov dec movsl movsl stos iret ds jo sahf add jb das lret repnz cmp scas cmp mov into sbb mov (bad) mov popf rcll mov pop mov inc cld lahf inc cli pop mov mov (bad) and dec mov out jbe jb xor addr16 out mov xchg adc int xchg push push push cs fldenv sub mov add data16 fsubrs inc pop bound mov adc mov aam cmp cmc mov lods push in cwtl pop pop (bad) stos sub cs ss ja data16 mov les xchg push mov ror sahf aas cs repz mulb sub cmpsb fildll mov push and cmp out jbe and mov push and lods loopne popf sbb imul mov mov mov movsl sti mov clc or sub xor (bad) hlt and int3 add add push sub jb xchg jl dec mov fsubp add jecxz stos mov mov push xchg sbb lcall leave test aas insl shll imulb lods mov inc imul and lds and testl xchg xchg fmul loope aam in (bad) cli adc dec or sub repnz int sub enter or pop fdivp cmpsb mov mov outsl pop iret mov adc std (bad) push or movsl jp mov lods pop jbe movsl xchg jno sbb sbb adc inc outsb jno mov mov push cmc (bad) pop iret hlt ja pop outsl xchg (bad) xlat out inc sbb in mov ficomp mov jo fisubrl test test ret sbb pusha aam stos ret out or add xor push push pop dec data16 mov mov lea fwait aas in mov lods leave mov ljmp add cmp pop sub sub adc in adc in dec jmp std cmp fisubrl fs adc pop adc stos xor ror push int rcrb push inc or inc test ja add shlb in stos push push repz repz fnstcw xor sub adc in inc clc (bad) mov lea out je bound jno into test data16 adc and sub cld jle add int cmp mov inc pop lea popf jmp pusha aaa addr16 scas xchg mov lret inc cmc or (bad) xchg es push mov outsl push push cwtl imul test bound cmp or enter sahf sti or sbb or popf xor cmpsl hlt inc fsubs xor sbb cltd cltd ret adc push jge cmp loopne in jg (bad) pop push sbb ss jae push fcompl ret sbb pusha push aad fbld and aaa add xchg inc sub mov in out scas sub mov repnz jne (bad) aam int pop orl fdiv shrl xchg mov dec mov in call sbb mov dec (bad) lods js mov jne outsb sahf and xchg lods cmp mov mov and outsl mov and icebp mov cs jne mov jno ss or das mov jp dec pusha testb mov scas xorl scas adc and mov inc dec imul or lock inc push test aad mov jle sub les fwait or test dec addr16 add adc out loopne setbe fild jmp les test jp jge out xchg pop ss mov in mov dec movsl mov cmp arpl inc aam and xchg mov (bad) fisubrl bound into insb xchg loope outsb stos adc (bad) push push ret loop jo inc jne arpl dec andl jl ret adc adc dec (bad) repz lcall mov mov daa movsb stos pop inc cli leave and xor nop add jne mov call shll or fisttpll lret rolb aad call addr16 pop ror sbb addl mov adc shlb or push xchg mov jge,pn pop imul mov mov pop clc mov rcrl out mov xchg and xchg daa (bad) jnp sbb pop imul leave pop or insb das faddl ja and xchg pop sub ret fs lods and movsl add adc or out je std in jnp dec cmc (bad) mov lcall out js or dec xor gs dec add aam inc popf jp sub sub dec lahf cmp insb (bad) scas xchg popf nop mov jbe mov mov xchg sti shrb cmp pop cltd xor mov pushf cmp ljmp xchg out push sub mov add push or jl outsl in daa out in fnstsw dec xchg mov aas out and cmc movl and rolb adc mov jne js test in mov xor cmp cmp movsl sti test bound test cmpsb fs iret adc xchg fs mov outsw xlat push fmuls test (bad) cli movsb inc test lcall sub leave add mov movsb std (bad) mov jg mov push mov cwtl jae aaa test lea and xchg mov adc xchg ljmp (bad) into jle mov push sbb iret das js xchg or stos call and insb fstps rolb jne jl push repz pop cmpsb (bad) ret jmp pop icebp pop aas add clc mov inc int3 mov push xor out inc xor fcoms push clc aad sbb jp imul ss lock pop pop pop (bad) out push adc movsl das cmp push sub (bad) ret insl and mov jp movsl mov outsl inc fistp mov (bad) std scas lods mov ja mov divb inc mov and ja je rcr mov push add psraw mov cltd in (bad) dec inc cs shrb bound gs mov jge mov and jns jl pop je adc push jno test xlat xchg mov dec and push inc dec xchg imul mov mov mov stos notl mov dec insl inc stos sarl adc or adc dec insl jge and fisttpll fs or adc aam inc and inc and mov pop cmc pop das ret mov push cld xor xchg stos insl push adc or sbb (bad) inc add cmc add jecxz xchg pop xor cmc jnp push xor cmp fstps cld dec jmp pop movsb and jns mov dec js hlt ljmp inc push lds jge adc push es adc push test dec or mov jp mov pop or mov stc popf hlt cmp in fmuls mov lods jecxz mov jle clc jmp jo add enter div in xlat mov ja loopne and insl cmp fstl fstpl jg sbb popw inc jl pop pop in lds mov xlat sarb mov pop lahf mov push aaa pop xchg mov dec out cli test add inc sub xor or (bad) or or and and aas inc mov add fisubrl bound push jmp (bad) pop mov fsubr (bad) icebp xchg lea stc mov test mov and in pop push (bad) test out or cmp inc push mov mov inc xor jp add xchg xor cmp movsl mov cld iret sub push sbb roll ja fisubr add into iret shrl bound lret pop add dec mov or jbe data16 imul fstps pop sbb cmp push icebp push inc xor pop dec add or imul xchg pop pop iret jne mov icebp into or lock mov mov js sbb fistpl addr16 popa pop xor subl sub paddb cmp cmpsl loop into clc add mov hlt cmp and add jmp dec pushf cld xchg jnp sub iret ds out push jnp jno sub jmp cltd hlt mov mov inc xchg xchg mov dec jne and fnstenv pop inc ror fsubl mov div arpl (bad) cli fwait jmp je (bad) or sbb lds xor and or inc jecxz xor mov insl les cmc mov and inc xor sub dec push push lahf mov out cwtl xor fstpt out repnz out mov arpl clc imul pop adc xor repz aad movsl mov stc imul and scas test loope (bad) jp lret movsb icebp (bad) push aas mov adc mov cmp in adc sbb adc cmp adc push mov cwtl mov and std pusha xor push xchg in (bad) fsts push nop cmp sub loop push mov sbb aaa xchg and popl cmp inc nop (bad) iret in fwait lahf push jb push jne sbb or fwait add out aam sub in fisubr loope inc mov in mov sbb push sbb mov sub pop mov pop dec mov stos jbe rol repnz or cwtl popa (bad) xor adc stos fwait cmp inc out das outsb pop cmp mov aaa or ss rorb xchg sbb jge out arpl in (bad) mov jg fisub adc movsb mov sbb adc data16 mov fldl xor or mov scas adc or jns mov inc imul cmp scas (bad) xor ja add loopne aam and jp and sub sbb loope mov or mov sub imul mov enter inc pop (bad) fdivr aam sbb mov adc mov lods in add cmp xor sub das xchg int3 or or xchg cmp pop aam jmp idiv xor jle lods dec xor add aad bound (bad) jecxz adc aas (bad) mov add inc clc nop scas popf pop loop jge movsl dec add jmp dec pop push vphaddubq jns push out mov fwait inc scas mov nop (bad) cli pminub sahf inc mov jmp sub repz aas ds stos mov mov cmc insb xchg stos lahf (bad) into push push mov mov nop lahf mov jge test xor dec fs outsb mov in pop das mov and rorl ds ret sbb imull xor and int imul test xor adc int3 (bad) shl mov adc push xorl out jp add cltd (bad) dec cwtl dec mov jle sbb bound je pop push int mov cmc push (bad) cmp cwtl lea jp and popa mov jl in jno std dec dec bound insl mov sahf cmc pcmpeqw xchg lock sar sbb pop sub les mov (bad) popf insb faddl mov mov inc stc xchg mov mov jge mov pop sarb inc daa sti mov cwtl cmp xchg repz shrl cmp data16 xlat pop jmp jle sub ret test dec lea xchg mov pusha pop mulb xchg movsb jb mov aam je pop jle mov xlat inc and push cmc jno lds mov sbbl push movb or lods sub outsb fs mov pop lock dec adc pop test xchg daa js imul xor stos es add out lahf fwait jg sarl ffreep outsb and je push push ficom std je mov cmc push mov out and insl mov sti mov lods clc pusha leave xchg mov dec and fsubl data16 idivl fstl enter in add xor mov movl aas adc xor or stos xor lahf pop push cwtl jmp cmp int3 pop arpl lock (bad) jp lcall mov pop fcompl out sub ds xchg cwtl shrb repz repz hlt dec icebp pop mov and mov out jmp push in (bad) jae mov jno push mov inc jnp xor cmc cli sbb mov xor and fstl in call adc stc sub sarl js mov pop sbbb xor aaa inc or fdivl push mov out into xabort mov mov xor cmpb mull xchg int pop push sbb ret xor inc mov sub jbe pop pushf mov gs sub dec loopne xchg fstl pop mov mov int3 sub jne (bad) lea dec mov in inc mov mov sub sahf lock push loop repz cmp stc add xchg test cmp jg jnp dec push cs adc adc mov adc out sbb daa int3 jl fnstcw sub add in shl je add mov test icebp ss xor xor push mov stos out lea cmp sub andl ret pop cmp icebp xchg jnp hlt bnd dec imul dec xor mov xor sub lock lods cmpsb lahf pop pop pop daa aas out jle jne adc fidivl jle into andl sbb cwtl inc fstpl jecxz mov cmpb scas xor push jecxz (bad) jae jl aam sbb das or xor jp mov lsl mov push popa sbb outsb ss push sub aaa cltd lock je dec out pop jg xor lahf add ffreep fdivl xor addr16 pop in mov fiadd inc mov pop dec loopne ja lds add xchg test idivl loopne or (bad) push pop mov stc and ljmp fmull lock ja dec mov ror push (bad) mov mov inc add cli pop std dec inc mov lret pop inc inc out dec mov cmp mov ss and mov pop data16 hlt xor add xchg sub inc add xlat adc jns push dec into pop mov adc movb lahf cmp pextrw adcl cmp push out jl jb add add jg lods push mov push in test push mov (bad) sub pop pop xchg lret pop mov ret sbb xchg jmp out xor in xchg (bad) test jbe out ja xor in fisubrl and lds imul out sub mov xchg movsb jmp xor dec ljmp fcompl je clc xchg mov (bad) fildl xchg xchg repz xor inc popf pop (bad) enter xor sbb mov fistpll push jnp push mov nop outsb mov lock push pop js movd adc and sub mov mov arpl mov mov aam cmpl and pmulhw inc dec and push insl adc mov jo fnstsw mov dec pop scas sub push jo dec std fstp or mov loopne cmpsb cld fisubl int (bad) sub mov andl mov fbstp jne mov fist dec fisub es push test hlt mov (bad) in jae in mov nop push addr16 push repnz cmpsl shlb popf hlt xchg push mov lock ds mov and stos into loope imul pop push inc (bad) adc jmp (bad) idivb imul add popf mov scas loope scas int sub sti loopne mov add es arpl mov xchg in push xchg adc jp or xor and mov jge mov sub mov or mov test lahf push call mov pop push mov push (bad) xor popf rclb fdivr inc push (bad) xor movsl aad repnz cmpsb mov push (bad) mov lock mov std in inc scas dec fwait xor sahf jmp insl dec out push inc ja aaa mov sbb mov insb add enter dec sub arpl and xchg scas inc sbb popw ret inc mov pop sbb repz fimull addl js and mov in fild imul xchg (bad) std repnz and pop out xchg imul loop testb ffreep dec cmp add cmp aam (bad) sahf pop (bad) adc pop pop fisub mov bound adc inc out add repz dec push sarb xor lock mov aam je loope adc jbe fadds adc test mov mov pop xor out stos std mov out mov mov and les lret push mov jns and pop sbb dec mov cmpsl stos les add mov mov inc xchg pop mov jb push cs loop sbb lods mov bound jg inc rclb cld rclb dec fwait bound sub add stos mov jo (bad) das xor sbb ds push ja cmp jo push push add mov xchg xchg sbbl (bad) xor shrb add stos or pop sub cltd test dec pusha push nop sbb sar fst imul lea lock rclb inc jecxz jge daa arpl lret or and xor inc ret or adc ret repnz cmp xchg outsb mov jae int3 xchg in sbb xchg sarl lcall cld out test mov mov sbb pop pop mov add dec outsb xor decl fisttpll (bad) inc sbb cmp mov push dec loopne mov jg and and lea adc xor cmp iret lcall fnstenv add out xchg mov fildl repnz cld inc sbb sbb mov dec jl pushf push mov repz mov (bad) jae pop hlt in pop std sub push gs pop inc lahf test in or icebp out ret cld (bad) xor (bad) push gs sbb lret fs inc and sub imul dec sar mov or stc inc test cmp rcrl sbb dec jge scas pop hlt dec jge popf jl add pop rolb roll (bad) mov test inc js and inc push adc xlat insl lods fucom lods pop xor (bad) int3 pop dec mov into (bad) xchg in sub cmpsl sub and (bad) fisubl mov enter les jmp add jnp daa jb in and inc in stc popa cltd mov mov pop fldenv xchg xor xchg cmpsb btc lret pop dec mov loopne dec sub push imul add sub frstor inc or jg inc mov lcall mov mov lds or add movsb adc inc and jnp shll jne mov and scas mov jnp gs mov cmp scas insl mov dec add cli mov pop jns (bad) cmp lds gs loope prefetchnta ret repnz shlb call mov (bad) out mov jb outsl lret sarb cli xchg xchg dec mov inc in push and push dec sbb dec xchg dec cld adcl mov pop outsl fbstp jl gs fwait insb in into and sub mov (bad) (bad) div movsl imul nop xchg mov lret fs cmp mov dec (bad) std cwtl xlat loopne mov out jg int3 in xchg or mov add fs dec cmp cmpsb cmc dec mov rclb pop out add adc lds mov mov xchg je cmp (bad) add mov in jne lods push inc leave sub sbb je xor or cmp mov jmp sub xchg stc ficomp mov jmp jo movsb (bad) or int outsl bnd pop and (bad) xor adc push (bad) (bad) mov aam (bad) jl mov (bad) pushf sub into das inc movsl insb push xchg cld int3 enter xchg cltd arpl je aaa (bad) bnd xchg mov and loope cmpsl sub (bad) les (bad) pop dec lret iret add movsb adcb mov icebp xor xchg je push scas and push gs repz clc clc push jae add mov xchg mov cli out dec sbb leave inc add or lock (bad) mov adc pop mov imul fs in and pop ret pop push xor add pop pushf and ss push push or mov cwtl (bad) dec inc stc inc ficom js and pusha xchg and divb stos mov or pop enter out adc dec and (bad) dec clc pusha int3 jb xor rcl loopne (bad) mov adc aad divb mov or rol pop and mov stc adc xor mov daa std add cmp pop push pop cmp aad push xchg in add rorl divl push (bad) movsl clc mov lcall cs (bad) scas mov adc lea movsb pop test into je lods cltd add or push xchg sbb test mov inc mov and outsl sbb test dec pusha fcompl xchg cmp rcrl mov lcall dec push mov (bad) popf or xchg scas lret and in ja dec jmp mov push (bad) lcall pop jecxz lret push jl add bound icebp inc aaa sbb out into xor adc gs mov jle (bad) mov pop pusha pusha in push scas cmpsb cltd in xlat sub jb lock xchg push xor xchg xor xchg xchg mov push shrl pop add in aaa (bad) mov mov sahf or mov inc imul mov mov adc imulb js xchg cmpsl mov (bad) notl push aad xchg sbb popf aas (bad) mov push movsb out mov dec add push scas ja mulb pop mov pop jmp cli test jge inc add les mov push inc negl insl cmp add (bad) sub jns,pn xchg outsb in xor clc into fwait ret orl sbb xor xor inc xchg nop cmp jne xor cmp sub test (bad) pop rolb in lds loopne pop lea mov mov xor dec (bad) aaa mov aaa add adc cmp out into hlt dec out lods inc mov push (bad) mov xchg mov fistp icebp je and and cmp mov jo js push in inc cmc sarl cld (bad) aaa adc addl lcall popf movsb aaa outsl xor add clc jl or or cmc arpl jno mov sub push stc jo or adc add jo dec clc jecxz dec mov pop xor lods mov pusha mov jge inc and mov adc call mov ss call cltd into push loope push pop nop loop pop push dec jb push fsubr popf stos ljmp adcb and addr16 pop push mov dec pop adc add xor aas xchg jge lods add (bad) mov push or imul cmpsl nop lahf jge mov lahf xor ds fistl das stos pop (bad) push mov cmpsb xchg xchg jecxz ja mov dec mov pop js fs pop sar in hlt sbb or pop mov cs stos jp or rolb int popa and in cltd test (bad) mov movsl inc mov push arpl adc jns orl dec fiaddl popa shr lahf inc pop push into add int mov xor stc mov fiaddl sbb mov mov fldcw mov mov mov (bad) jno or lret (bad) ss pop push leave cld mov test add mov xor xchg rcrb push rorl arpl in push inc test test sub mov rorl mov jecxz fwait orl fcmovu adc cmp jmp scas repnz and (bad) test stos hlt imul push mov inc call push push xchg or jo adc xor mov outsl inc jp and pop (bad) pop pop jnp jae xor push or jmp in js lds in and xchg xchg sbb mov cs adc mov mov fucomp hlt into ds (bad) cmp bound imul adc add cld in outsb cmp xor xor mov adc inc adc scas orl adc les ds (bad) stc adc rol cmp sbb dec pop and lea or or adc lods jns jp add ljmp add adc ds pop add mov push fistpl inc adc adc inc das cltd jae dec iret dec push inc pop inc (bad) add and push (bad) lret adc in out outsl xchg js jge sbb xchg hlt lcall ss push push data16 mov pusha test jmp adc imul (bad) in cmpsb sbb test pushf push xor cmpsb sarb sbb and mov orl int scas jg mov sbb pushf mov movsb push fimul mov gs ja pop scas and arpl pushf inc addr16 jl dec cwtl dec mov jno,pn push push leave (bad) mov push xchg add and sbbb pop mov shlb cld stos mov popa jne (bad) test sub or mov mov (bad) cmp movsb add push mov dec mov sahf js mov (bad) call jp call test in cld add mov lahf xor push div cwtl jns imul mov sti xor jge sbb or fisubrl inc cmp or int lods out jp stc std inc and push jg (bad) loopne or sub mov cltd sub leave js loop shll out fstps mov push pop jb test mov iret clc jnp loopne notb inc insl ss inc jo dec add pop (bad) int std xlat xor mov andb dec cmpsl loopne insl ss dec xchg or repnz (bad) push movsb cltd pop cltd add jo imul sbb or pushf fsts idivb popa xor ret and mov arpl cli xor jl mov push sub pop ljmp lds mov jo push push xor incl or (bad) jne (bad) ret pushf scas or out fldenv inc mov xor sub pushf inc cmpsl add es arpl push aaa mov jo mov fist ds test jecxz imul cmovne mov lret lcall out add mov sub cltd jle inc movhps cli mov dec lahf mov mov xchg pop ja daa movb adc fdivl in rolb imul sub popl xor ljmp dec (bad) (bad) (bad) stos (bad) or sbb cmpsl mov cwtl cmpsb ljmp mov pushf imul inc or inc nop or mov jmp loop movsl stc ljmp int int3 lret xor sbb test sbb add push mov mov add sbb push mov jle mov nop dec xchg pop mov pop incb cld push (bad) lahf int3 lds lcall es add ficom mov dec push inc movsl incb (bad) int3 leave and jp lcall and out adc popf pushf xchg std push pop push lret cmp fdivrl adc xchg push fs cmc divl mov repnz add in movsl call push test lock fist cmpsl fiadd cmp mov leave and cmp loope (bad) and or jmp test repz ss jp push cwtl mov xor pushf mov inc add xor dec movsl inc bound test std lods adc jg (bad) aas sbb into cmpsl mov shl cmpsb (bad) (bad) das xchg jno pop jl (bad) cmp dec into jno sbb test jle inc in cmp sub sub sti and or and mov sub sahf les sbb mov cmp add out dec ds dec xor xlat mov pop jmp pop jg adc pop std (bad) lret out stos dec pop or cmpsl adc sub add loop jmp jnp je sub sbb jg (bad) cmp mov push adc pushf xor cmc pop out pop aad loope out and xor add add pusha xchg pop call mov sub sbb scas (bad) and lret push and push out push push adc incl out lods inc lods clc push loope bound jo mov mov or stc out cs sbb out lods imul xchg negb fidivr scas dec scas rorb mov pop sub cmp lret aam xchg stos cmp fadds sub ret and in (bad) popa adc aad pop insl mov lock movsb adc popa inc neg aas xor push adc aam mov aad cs stc das test xor xchg sahf dec jbe clc fwait imul xor lcall ja xchg data16 mov sub testl dec ret inc pop stos sub pop pusha into je sti test fstp mov imul mov jnp fsubr and test pop roll jb in mov inc sub addr16 sbb cmpsl xchg or mov add cwtl sub outsb dec sub stc mov stc add pushl inc push jle ljmp and sbb mov (bad) mov iret stos cld loope and rcll cltd loopne xchg pusha out stc cld mov outsb jge fs xchg rcll xlat fiaddl mov popf sub pop sti subl fildl out xchg xchg es adc (bad) push movsb xchg add dec or pop mov repz cmpsb mov jno pop jp shlb pop pop fisubrl pop cmp jne rcrb fisubl sarl or enter enter mov fimull and loop adc mov test in clc stc xchg pushf fisubr adc push sbb and add inc dec pusha call lret movsb lcall add xchg mov dec pop ds insl jnp (bad) cmc cli xchg cmp dec sarl dec xchg push iret outsl stos ficom inc in daa adc sub jg dec stc xchg stos mov cli push loope test into mov les fcoml imul xchg negl pop push cmp js jmp and jb sub xchg xchg or lret scas adc ljmp dec repnz das into mov add test movsb sbb aaa or push jae cmpsb les lret fwait repz sarl jmp int mov sbb sbb sub and mov stc xchg mov sbb les sub loop push fs aad fnstenv dec add cmp mov lods mov pop cmpsb sbb mov cmp les and sub orl int cmp fs fcmovu jle add dec cmp push sar adc dec jle inc ljmp sub std imul (bad) mov pop dec sti fistpll xor xor mov shr out mov cmp pop mov and dec ljmp xor fcompl cmp mov rcrl test xor jns add cmp lret addr16 sbb cmp cmpsb je fcom and lret pushf scas and aam pop loopne jbe rcll insb imul dec cmpb popa push fnstsw sub std xor mov clc dec (bad) jbe rorl mov mov insb jecxz pop push imul int dec fnstcw cs push in sbb inc sbb lahf shrb jbe push outsl lods sub int3 (bad) mov xchg dec int mov jl popa sbb cld jbe sbb mov loope jg shll fstp adc outsl dec rorb mov movsl lret repnz dec test (bad) jl inc push pop data16 cmp push cmc cmp cmp stc xchg hlt data16 popf jle (bad) inc dec (bad) rorl pop or mov jle inc add mov sti adc in cs hlt dec and stc movsl int ljmp sub adc aas (bad) or adc and rclb push (bad) xor jnp mov sarl dec mov push xor call sub icebp adc push rol int3 ficom movsl arpl cmp adc pop and lock add scas add dec or aam push mov shl xchg adcl add xchg xchg jecxz aam mov (bad) pop mov dec iret and dec mov lods loopne pop test cmp push int iret imul cmpsl mov orl mov movsb adc adc mov add daa std sub push into jne inc add sbb scas adc lods xor jg jnp xchg (bad) std enter test and xchg mov test jp sub (bad) pop addr16 test iret rcrb mov xbegin xor dec bound inc movsl pop xchg mov mov sti pop add out movsl xchg push lea int3 xchg ds xlat sbb push mov pop (bad) leave or jo outsl pop jae sub shrl in ja adc mov xor add popf fwait and inc jnp push jl mov push jg icebp inc mov push xor scas repnz aaa idivb (bad) (bad) mul addr16 sbb adc loopne mov adc fdivs jnp add pop push mov mov inc call icebp sub hlt into loop int push int3 ja cld lods dec ljmp dec lahf or gs (bad) in dec lock cmovnp push insb dec popa push sti inc enter cld mov pop xor adc jae popa mov inc lock icebp bound js frstor sbb mov idivl lods sbb lret inc mov je fisubl (bad) pop cmpsl test mov fistp or ja mov jecxz mov jbe sub jb negl inc lods test popf sahf push mov mov (bad) aam xchg int3 mov inc adc sbb cmp adc or jo (bad) jmp xchg pop cmp scas stc dec cli in (bad) movsl std stc or (bad) or movsl xchg adc stos (bad) insb xor jns lret cmp mov or xchg out cltd imul xor popa aas add or jge sbbb cmp inc int fisttpll repz pminsw xorb in dec ljmp lds lret stos push frstor pop jg arpl loope outsl das pop test ds iret jns aam push mov mov (bad) lret inc mov adc nop xchg lods orl xor in adc and xchg sub push sub out and and dec in jae incl or dec out mov and push mov ret jle ja lcall daa add loop in mov out jb xchg adc push jne inc outsl fiadd imul shlb adc adc pop push flds add mov mov dec in add mov mov ss fist fisubr rol pop inc sahf ret mov (bad) and inc pop mov dec mov je xchg push pushf dec add dec adc popa in jl push aaa aas jl lea test xchg (bad) xor cmp lds aam and pusha sub mov sbb cmp popf (bad) cli outsb movb xchg in and xlat pop movsb xorl push fwait lods xlat shrb int (bad) fnstcw sti inc cs sarb mov cmp (bad) jb xchg xchg scas rcrb add lcall mov inc out cmc test seto clc bound adc push dec mov fsubl cmpsb lret jo sub mov stos ja test push dec inc mov cmc jge imul cwtl inc or and test loope,pn cmp pusha cmp stos sbb pop pushf rol (bad) (bad) pop hlt adc mov xor push jnp jmp dec pop in push adc push into cmp sbb xchg aad out mov adc jb sbb xchg std aad dec sahf scas fist ja fisubl cmp aam aam xchg aaa outsb mov sub xlat test enter bts mov pop lret mov sbb mov pop icebp jns int mov push adc dec lahf cwtl gs aad push dec (bad) xor outsl push and cltd add sbb push xlat scas or mov jne pop cmp jnp pop cmp xchg scas in cli (bad) aad cmp xchg cs (bad) enter adc out mov lret mov insl es fnsave jge jecxz xchg leave sub cli mov sub xchg sarb orl addl clc pop mov mov xchg clc dec or inc mov lret in mov rol xchg jns fstps sbb push imul inc ljmp shl das pop sti pop popf nop mov pop arpl dec adc and nop (bad) mov sub stos sbb (bad) jecxz xchg lea sbb pushf jmp and inc scas faddl mov push mov nop xchg xchg cmp adc mov mov cld push cmc rorb loopne test fimull xor xlat sub push or in movsl mov inc (bad) into movb push int3 icebp rclb and sub push jg pop cmpsl aad cltd movsl stc xor cld gs call push rclb (bad) dec sbb bound mov popf mov push sub lds aas mov sbb add cmp mov nop sbb loopne xor hlt icebp inc lds out fisubrl jno or inc mov cltd enter in les jmp xor push pusha sbb lock repnz dec mov out mov divl adc add xlat mov in mov test sbb inc icebp fcomp xor insb add cmp push push outsl mov pop stc in mov sub dec inc popf sbb cmp popa gs jmp jle popa cmpsl dec xchg sbb jae sub push mov iret xchg stos inc loop hlt in lods cmp int xchg rolb sahf int cmc jnp jmp adc sti xor iret sbb addr16 mov (bad) enter stos pushf outsb bnd rorl mov jecxz sub imulb (bad) mov int3 (bad) or pop lahf mov clc insb mov in cmp arpl incl (bad) jmp pop dec lods lcall push dec (bad) pop push shlb popf and cmp cmp push xor dec mov and nop nop xor daa outsl xor popa mov push scas jl nop cmp stc enter push jmp xchg ret push imul leave insb hlt push xor xor mov pop jmp test mov and jge loopne mov and cmpsb xchg subb aam sahf push push outsb inc mov jb jle jne sbb lea icebp popf test icebp mov pop cmp sbb dec test mov adc and mov pop mov push mov lahf call (bad) js test call sbb xchg (bad) rolb pushf xlat mov cmc pop (bad) cs lahf pop mov add fwait bound fist jmp mov lret imul pop mov fistpll dec outsb dec (bad) (bad) insb push lret loope roll in push inc lds mov popa lcall pop test scas mov (bad) jp inc jge xchg dec jae lcall jp lods fildl cs dec dec flds cmpsl jp and xchg push xorb aaa mov movsl fdivrs movsb aad lcall jae pop dec pop cmp and pusha sbb xor aaa xor ds jl mov repnz mov add aas pusha call test mov sbb sbb scas inc loope inc cmpsl cwtl mov inc repz pop pop sub jg dec mov xlat pop pop cli popa sbb fld cmp pusha imul jmp mov and xchg ror xor loopne imul ds aam xchg rcrl lahf sub cltd bnd jp nop in int sub loop into jmp popf xor (bad) dec sbb inc (bad) rep call pop repz ror pop shrl dec in leave int inc sbbl push leave cmp push cmp sub aad movl or mov inc insl aad scas add xchg dec cld mov fwait push je cli mov rcll push fwait adc sub roll (bad) clc push or pop xchg jne mov orb popa xor jecxz pop scas mov shlb loopne js mov (bad) mov loop mov lret fsts inc push aaa mov add cld dec cmp cmovno aam out fadd insb add imul pop ds add push push mov fisubr ret imul cmp bound inc xchg mov dec stc inc pop lahf adc fildl or dec test bnd jl icebp aam scas aaa hlt bound addr16 leave out or jmp cltd dec outsl mov push mov daa pusha (bad) ja sub fwait pop inc leave add (bad) imul mov jge lahf ja and jl inc pop aas rcrl cmpsl insl popa (bad) cs add rcr (bad) ret nop inc add pushf in shl xor cmp adc outsb popf mov jmp sbb in pop arpl mov int3 sub push cmp ret lods ljmp mov mov push fdiv rclb pop shrl push clc mov pop rcrl inc and sbb pop leave popa es les xchg or insb sti ds and shll mov ror arpl mov idivb les dec push mov sbb mov sbb mov fadds fisttp (bad) cmp and sub xchg and mov mov cs and mov fs loope ja adc jae aam shlb imul js mov xchg mov cli adc loope dec xchg pop inc nop (bad) cmpsb jnp mov stc add cmc insb ja mov dec stos pop sbb mov and jg and shrl je repnz mov xor repz das aaa lock mov cmp add pop data16 cltd addr16 scas push aad push or aam xlat fldt outsb shrl pop pop add adc test lret dec test ja subl fistp mov jmp sub mov mov jb push out xor es add cld fildl pop sbb popa sti cwtl cmp push cwtl aam call dec out cmp or ret xchg cmpsb (bad) or mov or mov (bad) inc mov (bad) je or fcompl sti cmc scas stos xor inc imul sahf loop lods cltd cli sahf cwtl pop test outsb adc push pop mov adc lcall add cmp cltd addl jno cmpl dec jns fcomi mov fldt dec lods push mov and std es rclb (bad) lret das nop xor imul (bad) out pop mov sub mov cmpsb xor xor js and mov stos cmp jmp fnstsw mov std push mov ficompl test pop movsl mov mov push pop cs jp push jle sub dec leave xlat iret mov test adc push int mov dec test adc sub cmc scas emms sub or std add enter jl xor out orl clc mov mov lock xchg mov sub incb push or fwait dec add xchg (bad) lahf stc mov adc sub pop fstpl cmp mov push iret cli adc cltd out hlt popf jns cmp cmp xchg mov into hlt or outsb xor push aam jno pop pop divl adc int3 push fsubl sbb (bad) je mov jle mov es negb add scas push sub cld mov cld jne out inc mov cmp loope clc imul cmpsb jnp imull pop sbb sbb mov leave rorb sub movsl dec mov inc fwait push xchg jns mov mull mov xlat dec jp adc pop mov mov mov jne adc adc nop das pop jp mov test frstor ljmp push jecxz adcl pop or dec aad pop into mov jns repz cmp (bad) jge sbb test ret mov or and sub cmp and mov adc xchg daa adc and outsl adc std popf push cmc and and outsb daa enter sahf pushf dec enter fdivrl add fcmovnbe push fsts mov mov xchg scas mov ja ret jb lret mov idivb jg pop insl inc in xchg ret cmp pop (bad) cmc sbbl lcall bound jmp jo out jae xor js dec sbb mov fidiv imul leave dec (bad) mov inc scas scas (bad) fisubr mov adc jb push mov adc sub pop mov sbb mov movsb test dec shrb ljmp inc test lods and dec push xchg mov (bad) stos (bad) and mov addl mov adc fcompl movsb xlat das repz rclb pushf mov aaa dec in lahf sahf sbb adc mov das and rcl subb mov out hlt in dec in pop xor jbe sub mov test loop cmp sbb mov aas lret mov adc loopne xchg dec insl fstpl mov ja int fwait jge jnp sbb ret push mov divl out pop repnz std (bad) mov leave scas sbb mov int cwtl ljmp ss pop and test fisttpl inc mov addr16 test cmp test aaa aas or mov pop lret rolb pop pushw and inc jle test add jl xchg dec (bad) cli pop add sti push lock dec mov jg addr16 mov les cmp cmc lock and test cmp pop xor push fstpl mov fimull sti rcr insl lret fldcw push and mov enter call (bad) shrb sbb push inc scas dec xor cs jne xor mov jbe add jae sarl fnsave test mov jp cmp sub into cld mov fcomip xor repnz insb in cvtdq2ps pop sub sub imul les fildll test arpl inc in cmp dec pop sub lock sub jo mov or inc in out cmp aas lods lea insb push pushf ljmp push adc jmp shll cmpsb pop insb cltd sbb jno out adc and inc insl xor movsb sarb mov (bad) sub das mov loopne sbb (bad) mov int and out (bad) popl lock sarl jecxz push mov cmp enter mov dec dec int3 push popa fdivs cld test das es fimull int add cmpl (bad) adc xchg cmp push fadds stos mov fisubrl push movsb adc pop fisttpll mov ret push or inc (bad) into (bad) mov out inc orl ret repnz jl fldl cmp jno,pn fidivl fcmovnbe jmp sub mov lock cmp sbb cmp dec sbb arpl pop aam lods leave cmp mov xchg sti and pop push add lea mov mov pop jb dec fcompl movsb cmpsb outsb out out stos movsb fnstenv les lcall jl aaa or hlt dec cmpsb fs movsl push push jnp inc cld sub push aas lock add popf notl pop cmp outsl push out cmc (bad) in sub mov pop push call adc sahf mov cwtl std add mov arpl xor sbb mul test adc cwtl pop int3 call loopne lret (bad) ljmp jmp xorl xchg mov add imul mov dec push jp or xor lcall push push fsubrs pop push lea (bad) rorl sti aam mov xor (bad) or dec ret lea cmp adc cmpsb mov (bad) js sub (bad) ds sbb push cmc mov (bad) add in adc iret cmpsb mov push inc int repz xchg and leave int mov xchg pusha mov jg scas mov push sub add in stos and stos out mov inc es stc jmp clc (bad) lret add jb bound cmp xor dec mov dec xchg mov jecxz (bad) pop and imul jb outsb cmc ds inc mov add pop jge lods sbb xchg repnz push and mov push mov pop dec scas xchg dec lea loopne mov xchg pusha push nop es push cmp push je je mov scas std scas mov test mov mov sbb std jge,pn rcl loope or fwait lcall insl adc stc jmp in rcll xchg sbb mov adc jg repnz fisttp iret imul out push (bad) rcrl adc sub movsb dec add insl sbb adc sbb test dec xchg movsl or jp popa je mov out and lods int3 cld lds jns decb clc scas mov adc (bad) mov aaa es and mov inc sahf iret out mov ljmp push jo enter into stos adc cmpsb fstp cli mov adc popa inc xchg pushl call repz jecxz out pusha rcrl xchg aas jmp fnstcw mov jg xchg push aas sarl pusha xchg xchg xchg int push xor cmpsl push mov pop imul and xchg std fiadd inc inc jp fwait out dec les jg jns aas (bad) ss and mov jne in arpl xchg fbld mov jg outsl mov int3 add pushf rolb (bad) loope mov in jbe aaa in rdpmc mov cmp andb leave adc jb ret repnz aad xchg addr16 dec jl (bad) imul or int3 ds mov ja lret or lcall out ljmp jmp adc sti in add sub dec lahf jle push mov mov cmp mov fisttp push add or stos popf dec bound mov test nop sti pusha ss inc add jp aas or lds test inc sbb sbb mov xor mov inc jb mov dec jge mov popf jae insb idivb dec cmp mov daa loopne repz stc roll adc js or imul lock shlb add add jbe test mov dec fist dec dec mov mov stos pop fpatan pop lock out imul scas pop loopne fneni(8087 push or push ret jmp lods cld pop sbb imul jle mov mov (bad) cmp cltd pop push cmp jbe mov loope je xlat repz in imul pop dec fistl sti jle mov lahf fidiv sub mov (bad) lcall aam mov lret movsl sbb mov push sub shlb scas imul sub push into mov (bad) lret inc push scas out mov inc push xor dec pop fiadd stc push (bad) icebp pop subb cmp rcr adc pop out xchg in jno mov and fadd push loop,pt push ret pusha adc out dec add sub sub inc mov sub aad fwait jp fdiv push sub lea pop test int sbb push push insl scas mov push sbb cmpb scas data16 push jnp dec mov (bad) scas mov xchg sti xor imul inc iret fisubr (bad) pop lret je mov push sbb das test inc shrl fdivr lret lret adc fild xchg mov sbb mov sbb sub pushf (bad) pusha mov sarb and add loopne test cltd or ja stos sarb jl mov loopne dec test notb push inc mov fwait and or fnstenv rolb xchg rdmsr mov pop daa clc fwait test jbe inc lahf xchg push mov stc fwait stos mov rcrl out dec dec fs mov sub ret fwait mov mov xchg negl xchg mov xchg xchg jl ficompl and mov test movsl inc adc xchg repz pop dec xchg ret into leave div jb xchg int3 jne mov and and fwait stc sarl sub pushf movsl enter pop clc fnstsw push add jle (bad) std aas outsb and or and pop orl push in cmpl xor or cmpsb mov imul mov insb aad or lcall ss pop imul sbb sarb xchg aad sub mov or outsb add aas pop jp aas in add daa or daa cmp lods pop aad inc jp int xchg (bad) imul jns dec add ror push pop lret mov mov shll or jb stos sti fpatan test xor push xor scas sbb or mov dec pop loopne pop cmp pusha jl mov pop int out sbb fwait in jae lea sti inc dec sbb xchg daa add push push jns push loopne icebp aas push sbb pop lock loope fbld jle sub fdivs add stos push cmpsb xor ljmp std in hlt lea lods ficompl sahf xor and mov xor aaa ljmp (bad) sbb pushl and jg or sub jne or dec aad loope jne pop out pop push fsts enter (bad) push cmpsl jl mov fs std adc into jmp jae lods adc jno es stc sbb push shl sbb repz jmp jb or mov sub inc inc data16 pop lea xlat push cmp jp out mov iret cmp jge xchg sub lret sub rorl (bad) (bad) ljmp stc insl sub mov call jne push lahf repnz lea add adc push push adc movsb ss lods sub push ljmp jp sbb or pop sarl cmp or insl (bad) xchg add fs pop inc andl add adc rcl mov pop fsubr ds loop test xor pop and cmpsl test and sub orl xchg idivb (bad) xor mov jp test jnp mull lock or lcall adc inc arpl iret mov out add in stc mov mov insl push cli (bad) cmc fcos divb and addr16 xchg sti (bad) jp fcomps xchg aam or xchg aad mov lods add push push stos (bad) fisttpl fcmovb mov ret lds push inc (bad) xor out imul mov mov pop push repnz and cli rorb arpl insl xchg int arpl push clc test cwtl adc daa aas pop mov cli idivl test dec xorb enter jbe in enter ret push sahf mov cmpsl mov fsub fildl and icebp sub mov push ljmp xor fmulp push inc xor xchg or iret leave and add shll jecxz repnz int in adc push das lock mov mov iret imul jge loop pop in vmwrite add xchg jp std test xor mov ja int rcll lock fcoml jnp inc fcoml packssdw cmp (bad) in imul stc insb out insb std xor int mov cmc outsb fwait jmp pop add xor in sbb adc loop xchg mov daa pop mulps lods enter mov ret xor sbb mov in push dec jne inc pop push xchg mov int3 sub mov (bad) sarb js xor jno ljmp mov xor and xor rorb (bad) jne loope jle and add adc (bad) mov inc (bad) addb cmp cmc pusha jb movsl stos arpl rorl aad mov adc movsb pushf xchg xor fisubrl mov jns push (bad) inc cld push adc pop adc xchg pop lret adc pop ja fs push xchg outsl lea stos mov stc add arpl cmc out mov sti (bad) mov pop or adc push adc sbb test ja xor pop inc push mov sbb push jo and mov addr16 jns fdivr jge jmp imul aam aam sub xchg pop dec rcll in loopne aaa inc push mov adc sbb mov insl mov xchg jle aam add cwtl push push mov test xchg pop shll lock gs in not dec insl je rcll pop inc (bad) xor xchg fbld call dec jb push repnz rcrl mov and sub and jecxz pop pop fmul cmpsb or sub adc (bad) dec pop idivl nop pushf sarl push int stc mov bound and mov cs stos xchg test xor or and nop ss jo out pop jbe int3 out adcl xlat sbb cmpb leave xchg xchg mov jl mov popf jne mov pop and movsb in lods jg lds push sub sbb jnp xor scas cmp ja sub cmc xor mov pop nop mov aaa xor push (bad) xchg mov in pop int3 movl loopne sar add mov enter pop push adc mov inc lret incl dec fwait sbb jle dec or add jnp hlt dec imul or leave cli xor inc mov repnz loope jl lcall mov insb dec (bad) (bad) mov push adc scas movsb jp shr inc xor mov lahf sbb dec cltd leave (bad) jecxz cmp xor inc sbbb mov dec push adc xchg ds dec mov idivb cmp dec aaa adc cmp sti sbb push inc xchg into lret mov mov mov pop rol cltd inc adc cltd push dec das leave std daa sbb jns inc pop jmp das add outsl pop out mov sar imul loope,pt arpl ljmp dec lret pop or test sub popf mov aaa test or adc (bad) inc push cli divl and mov pushf pop dec xchg stos (bad) add push cld imul lcall or push mov sbb pop outsb sarb fidivr pop push mov xchg (bad) call push cmove sahf mov jo popf test cmp inc dec pushf inc xchg inc sbb or aaa add push insl test stos mov in inc fmull je mov (bad) xor jno push sbb scas push mov pop cltd dec sahf imul dec out lret (bad) cmp sbb in cmp add pushw push mov std ljmp in pop mov and and fstp add pop xlat dec arpl test fnsave xchg out outsl or out (bad) testl cmp push icebp cmp add sbb shrl xor push mov and enter push insb mov imul mov test in inc pop jno scas popa sbb adc pop adc gs adc test push push das mov outsl fimul jecxz xor enter push lret lret in sbbb rcll fisub dec adc jg push mov jl sbb sbb imul inc lods mov mov pop mov mov loop in mov nop add cltd fisubr ficompl pushf jecxz shrl jno inc js pop cwtl shrl ljmp push cmp xchg ljmp adc and int3 fs mov sub popf cmp loope rolb mov mov mov dec in lds mov callw cli mov cmpxchg test test push add mov mov or (bad) (bad) push inc jne mov add cmp add movsb aaa and call add clc aad into add out sub pop divb sbb je or mov push push add pushf (bad) xor int3 and cmp scas test cmc daa push and aam pop fsub adc das int dec mov int jecxz add jmp fsubl mov mov int3 mov mov movsl xor inc pop inc jo jmp add adc push jo cs jge es mov sub adc xor int3 inc mov pop xlat inc (bad) stc popf dec imul pushf invd dec adc lret aaa jmp imul in lret cmp nop push shrb jmp ret jecxz pop in cmc mov xchg or mov repz push xor xchg sti std mov lods pop jns sub std and bound test orl dec popf jg ljmp push lods icebp cmp push (bad) push fdivp and test mov loope pop stc mov nop iret mov and clc mov std ret inc mov clc mov jnp adc clc lret and cmc mov mov pop push ret loope add push lret dec jge pop pop (bad) (bad) and mov xchg scas insl lods mov popf lods outsb enter sti (bad) popa fstp shr adc jge jecxz out pop push enter ret sub push fdivs dec mov imul inc jae les ds test sub dec (bad) jl inc test (bad) jp repnz icebp jmp decl add add (bad) arpl ret ss daa push stc xchg dec mov and push lea xor pushf or inc jnp lds les imul loop in xchg mov inc fstps repz xchg aas mov and test aas ror movsb frstor xchg cs mov arpl in jns and adc xor push out into mov icebp (bad) jp test aam movsb sarl fwait mov (bad) aaa and into or cmpsb repnz (bad) inc jle shlb insb ja dec pusha jae push outsb (bad) je fwait push test mov jne xor es xchg lahf jmp mov push mov imul mov inc in (bad) mov fdivl fwait mov mov rorl out int3 rorl jle popa fiaddl push inc daa lahf adc xchg or call pop add mov pusha inc xor movaps add inc xchg add sarb add jo sub xor lahf xor cmpsl popa or aaa nop test push cwtl hlt mov js xor mov or insb sub push ljmp mov pop inc out (bad) cmpsb mov sbb cmp lret subb pop leave orl cwtl cmc xchg movsb test mov jge mov xor sub in daa xchg dec ds add mov push push out mov pusha fimul lods sub pop loop,pt xchg xor inc mov std jecxz pop lods bound outsl adc int ret subl sbb mov les jecxz aas xchg add adcl adc out or add pop xor xor aad pop (bad) cmpsl sbb hlt lcall push js mov jp hlt loopne jge sti cmp and in mov mov pop lret adc lods adc out cmp push out pushf mov pop pop sub imul inc cmp cmp adc xchg inc ret mov rcrl popf cmp rcll pop xchg in scas pop jnp jbe dec push sbb out addb push push xor in mov and inc push ljmp mov mov mov sub hlt popa cmp cltd cli out jge mov out xchg movsb lret movsl cmpsl icebp jb inc and je (bad) push jmp inc js or pop stos sub xor or test aaa cmpb push sahf cmp ss adc or mov adc cmp clc dec push iret pop cmp sub lret or (bad) mov cmp loope insl push sbb aam or aam jle arpl mov xchg movsb and mov ret mov idivb inc pop ss insb out (bad) aaa insl jg popf mov adc push clc or lahf sahf push mov xchg cmp popa xchg mov and in lock arpl sbb sahf jg mov test lock sti dec push inc inc fildll jl cs sti ds das cmp loopne cmp fwait mov sub aas jmp pop xchg mov stos mov cs sbb cltd fsubrs (bad) mov insl popa lods push xlat lds ret jp movsl mov je cli test xchg arpl sub pushf in xor pushf sub popf inc cmp scas fistp xchg leave popa mov idivb push ja pop lds jbe leave shrb xor stc push je or test mov shlb out pop cmp inc sub sub aam jae rorl je push pop loop stc sar btr or insb adc push xor lret aad out arpl pop add mov push xor jnp mov negl xchg pop mov pop push mov mov pop adc lsl pop or mov add inc lcall add inc fistl xor popa in out aaa je fisubl les mov lods movsb cmovp or aam es test loop loopne adc mov pop outsl xchg shlb popf loopne mov adc xchg outsb int mov sub shll push mov jbe sbb mov lcall gs hlt mov xor (bad) sahf aaa loop fisubr hlt and cmpl or sub ret sub fdivs or jge cmc int3 test inc pop adc (bad) sub lahf ja les sub sbb shll cmp jmp mov sti into xor inc insb mov xchg and (bad) lea int lea iret dec dec cld add pusha inc mov ljmp rcrb adc es std xor sub and int3 insb int aam (bad) mov and and arpl push stos cmp sti test push cmp test pop jp mov mov cmc add xchg aad adc inc stc leave movsb push mov cs ja stos mov mov jge cmp lcall loope mov sar (bad) clc mov mov (bad) cwtl sti jge push adc push fstl sub lock mov inc test sbb add and mov xor jge push flds jne nop mov dec mov mov cltd sub pop push jg sub popf or (bad) sub jo mov divb sbb fs mov or test pusha jo pop dec mov xchg xlat pop cmp xchg (bad) mov jmp ss xchg icebp xor adc in mov dec int3 insb (bad) movsb xor mov and sub (bad) adc and outsl sti or jb pushf fist lock cmc jge add xor xchg or fwait adc ja cmp pop aaa daa popa mov cmp mov push sbb lock push xor mov das repnz dec in sub inc sub iret xchg fstpt xor add pushf aam sub mov stos sbb std or mov mov and roll (bad) out fwait enter pop fwait lock ret and scas clc mov dec std sub pop push and fmull hlt inc push jle aas lret and sub pop (bad) and ret (bad) xor int3 lds xlat xchg imul or mov adc rcr sub xchg in inc mov arpl xchg xor clc es sbb add inc into jns and push mov jb xchg mov mov ja (bad) sahf loope sti (bad) loopne dec cmp xchg mov js aas test lcall aaa int jbe hlt jecxz jae mov push fldz lea push repnz je sbb xchg push ret int inc (bad) add sub xor mov or xor daa mov inc sub add aaa lcall fdiv sub and mov outsl inc mov call xorb add adc mov fisubrl popf inc into jl add xchg cli addb std pop stos mov or lds ds mov inc popa adc loop out jnp fwait call inc or jo lods fldt inc sbb mov ja mov push sbb in out xchg or pusha fmul stos xchg or dec sarb sbb mov mov lcall adc imul cli pop xchg ljmp jge out xchg fsubs push arpl imul stc xlat ja sub icebp testb push xchg cmpsb push inc mov xlat jae sbb stc dec and add pop dec ljmp addl pop sbb mov insb imul (bad) (bad) add sbb mov dec mov hlt xchg cmp cld addr16 cmp push repz ret sub pop in loopne inc or jbe mov icebp or outsl icebp rep dec and (bad) lods jae jns mov (bad) (bad) push pop xchg ja mov test in insb xor popa es adc mov lret jb sbb fiaddl jne or cmpsl mov inc push dec push dec xchg mov cmpsb and sbb dec std ja jecxz sti daa clc lods popa (bad) adc or imul fdivrl dec or mov push cs mov test rorb not negl adc repnz mov sbb and and repz pop mov in mov in cld and dec mov or push lock gs dec xchg add adc xor jl popa stos xchg movb push lods sub xchg stc lds xchg imul mov dec divb jmp adc (bad) iret jbe adc jne (bad) loope insl popf dec mov add mov jno and and imul lods adc shl pushf sub test ret mov leave sahf xchg lock pop fidivr mov pop out out icebp xor pop jecxz mov aas test test outsl adc inc movsb sub call xchg in pop xor mov rcrb sbb shrb imul outsl cmp rcrb mov scas sub sub xchg loop aaa dec xchg pushf stos frstor xor aaa adc jmp mov sarb mov sti stos outsl in (bad) pop das dec rep push jno fwait clc add sbb (bad) mov outsl adc mov mov mov add fistl int3 pop push cwtl ds sub scas cmp jp arpl or mov loope jo pushf dec test or mov lret outsb out jb sub mov daa in add mov pop mov out mov sbb aas nop out cmp cmp fisubrl lds inc arpl jae pop enter test rol xchg aad xor push push call mov imul or iret movsb jbe repz outsl dec aam jno orb dec mov movsb jle or and dec jl es mov jp push loop es xchg (bad) stos cltd in jno (bad) pop mov inc push (bad) fcmovb pop in call int add mov in mov stos scas mov xor dec (bad) sti push stos je iret adc andb pop fstps fimul mov outsl sub mov mov stc pushf scas std pop (bad) cmp in les pop sbb leave dec or xchg fwait out push fwait mov ss rorl cmp cmpsl aas scas and ret inc insl mov and pop and popl inc decb in imul cmp pop lods lods scas test and lea ret lds mov lcall and or lods xor add pushf xor push sbb dec push adc popf loop sbb mov out or mov movsl incb data16 cmp mov jl data16 xor xchg sub push ret (bad) inc (bad) add adc (bad) nop mov push mov leave mov repnz mov por cmp cs std movsl cmpsl nop adc int into testl cwtl ror je or mov xor pop add jo es pop mov leave in sub xchg aas fs out (bad) mov jl repz jmp mov push mov fsubs je push and arpl cltd jmp adc jnp xchg sub in pop icebp movb jne push add or cmp xchg leave lods rcrb sub sarl sub divl stos decb cmp lods mov pop popf add sbb xchg or ficom inc push inc xor cmc mov (bad) hlt dec mov ds cmp and inc aad cli push cld in push iret insb out out xor push jle std push mov hlt pop (bad) jmp xchg xchg jg call fnsave inc jmp push addr16 jb sub je lea xor jns mov dec and enter sub xchg int dec cli cmp cmp pop dec sbb mov pusha sbb xor jle out dec imul lahf bound push shll inc es push cmc stos push xchg fsubrl or add ds sbb xchg mov jno fadds in lret cmp lods insb mov mov idivb nop scas aas dec mov mov push lret jo arpl addr16 rorb cmp xchg stos xchg outsb mov sarb cmpl (bad) push cmp mov inc cltd xor xchg ljmp jge rcll outsl in or mov out xor dec or pop pop cmp rolb jg push dec shlb sbb inc nop rcl sub fwait xchg pop arpl sbb movsb in and stos mov pushf pusha push cwtl (bad) popa jmp stos xor movsl push lds mov outsl and insb jl fs mov gs mov mov and xchg imul mov dec pop xor mov ja lahf xor xchg ret loope push lock sbb (bad) sti bound xor xchg sub repnz adc movsl or sti (bad) sbb rorb (bad) enter mov or enter mov xor inc rol ljmp cwtl add test movsl add aaa mov cltd loopne or int (bad) and repz or xchg sbb and inc jns xor (bad) jne fstps ret ss and ret jns cmp test push fs sbb adc aas mov push lock jge mov add pushf std out jmp fucomip cs js loopne mov fs adc scas ret xor (bad) mov pop lcall cwtl lretw test rolb sbb jl adc test and sub push mov ret insl (bad) (bad) jno sub les mov aas subl push fisttpll test jecxz popa add adc xchg or dec inc push pop push std andps inc sub pop fwait leave add sbbl data16 jmp pop sub jno mov call pop jmp mov xchg leave hlt mov icebp mov push leave out jbe cmpsb call inc sarb addr16 jnp lds subb push dec ljmp out es jns movsb loope mov sub xchg or jbe jno and xchg jbe test push data16 mov cmc xor jmp sti sbb aaa cmpsb mov stc pop js in and in movsb scas or (bad) stc adc push pop mov icebp daa aam push daa fstp rol cmp (bad) nop ljmp (bad) mov movsb movsb xor sbb cmpsb (bad) cmc sbb mov fimull popf arpl add push dec sub (bad) test orl fsubr mov mov insl xchg sbb xchg push pop dec dec mov cwtl push jns cli sarl pop into xchg xlat xor adc es shlb ljmp push dec or inc xchg jbe or lds mov rol fwait fwait (bad) fsts adc bound or mov cmpl inc (bad) test push xor bound lds jp sub (bad) jg jns jecxz aad stos dec test hlt ss aad mov decl jb das sub jo inc incb dec inc lods dec mov mov push pop mov hlt cld out sti xchg sbb jne (bad) outsl xor in cmpsl imul sbb xchg iret loopne (bad) xor push stc jecxz outsl xchg and cmp sub fnstenv push mov push lret or pop cmp js fwait loope dec andl fldl std mov and pop sub out inc repz inc test js arpl xor test pop sbb insl cmpsb (bad) repz ret faddp and out mov fdivl les aad daa jge dec mov jge jmp (bad) rcr repz stos inc sub (bad) pop movsl mov xchg dec loop adc out cli in xchg pop ds movsl jle xor popf outsb fiaddl test adc xchg dec dec jp fisub sbb mov mov adc jno mov mov push ror xchg repz pop sub mov (bad) push sti mov cwtl add mov inc add push fldcw adc scas (bad) comiss cmp cmc movsb sbb rol xchg jne std test adc push loop mov xchg inc lods xlat addr16 inc lds daa (bad) xchg mov (bad) cltd mov ja mov ja jbe testb lods jmp dec popa sub aaa ss cmp jmp push inc lods stc xchg hlt lods sti iret cmp stos mov cmp xor xchg jmp lcall mov cmpsl fadds add jno enter mov mov mov inc movsb adc sbb lods cmc xorl in xchg arpl pop scas jmp sub repz xor pusha or push (bad) sbb aas xlat outsl sub sbb sub push dec add xor cli xchg outsl cli cmp dec push jecxz repnz (bad) mov mov cmp sbb jg adc mov xor adc inc cltd mov js push test fwait adc jo lock dec iret pop ja sbb test and lock scas loope fyl2xp1 ret mov jnp push bound cltd cmp pop enter les and std mov jmp push (bad) xor pop sbb dec mov stos cmpb sbbl sub inc fmull push push adc in adc popa pop jle ljmp cmc mov pop das cmp adc adc adc (bad) mov adc sbb xchg mov jp std outsl sub add test or in andl (bad) xor and xchg sub pop cmp sub push jns xor xor outsl adc sbb inc mov mov mov aas (bad) xchg inc ds nop cmpsl js add int adc and cltd dec inc arpl mov mov jnp,pn ret bound int cwtl scas call push fisttpl push outsl jno aas shll repnz inc lds lret sbb add test cli mov mov mov (bad) dec popf xchg test mov jns inc mov push sub cs pusha jl xchg pushf ret push lods ds test (bad) mov mov pop mov xchg cmp test sub aad inc push xor ret or push or inc fs adc jl xor (bad) fs sbb test scas test and test push cmp inc cmp jb sbb mov pop pop and mov mov xchg adc fnsave or (bad) xlat fiaddl lods xor pop rolb inc or jo cmpsb aaa mov cltd jbe sub jecxz scas mov ret mov mov jb jo mov or ds in sub lcall into cld loopne imull sti aad mov test sbb push fidiv mov jle mov bnd mov (bad) jno mov jmp adc shrl lea mov and xchg (bad) mov or leave popa pop dec and stc xchg repz jns mov outsb enter in lret stos (bad) xor scas xor jnp sub mov nop mov or popf pop int3 xchg sbb sub sbb sub in or fmull cmc addl push cmpsl sbb sub cmp jo cli push or ja mov imull pop dec int3 addr16 faddl mov add mov (bad) in hlt xchg xchg aad aam or ret fnop imull xor popa aam out stc test pop shll jnp push push push (bad) jmp mov xor iret stos mov rorb repnz fs (bad) ret mov fildl sub inc repnz xchg sub outsl (bad) clc dec xchg xor mov and push js mov lcall stos ret repz aaa loopne data16 mov data16 (bad) imulb cmp xor xor mov loope test mov jae fcomps or fildl cmp dec fcomip lods xor out xchg sti dec iret cmpsb idiv mov mov dec dec shll push sbb imul stos in (bad) negl sub dec aaa jo push cmpl (bad) cmp xchg add popf test clc dec loop ret arpl loop repnz sbb test rolb js or add sbbb and leave (bad) sub sti mov popa jmp test in rclb mov sub in sbb sahf lods inc aaa xor lods dec inc cmp mov cmp adc daa or xchg sbb pop in sahf pop pop dec movsb hlt xrelease xlat neg xchg mov xchg ja pop dec xchg int jnp std les or sbb nop sub xor enter adcl cwtl rcrb (bad) mov js (bad) fwait shrl loop push cs dec adc lods jo sub fnstcw cmp (bad) (bad) or cli mov scas lahf lock push movb ds mov faddl mov pusha xor sti xchg sub mov xor jmp fs sub cltd out sahf push and jne add out mov (bad) imul mov and ret mov sarb cli daa fildl rcrl pusha cwtl lret and ja jle sbb dec push mov pop pushf mul rcrl aad fisttpll push lcall push xor cmp stos jmp loop lock mov jns mov pop xor push sbb icebp out fdivs in aad shlb mov xor int xor sahf dec data16 mov dec outsb inc scas cltd fisttpll sub into mov cmp inc sub jno inc jb inc or push loop xchg adc mov xor push in add fstpt int3 fcomp xchg mov cmp ja fmuls sub pop test jno add jg mov lret enter push out inc pop adc in imulb push push xchg out push mov lret sbb ficoml (bad) cltd xchg push mov or arpl xlat bnd ljmp loope je mov out cmp pop ds rcrl test std stos sbb inc xchg pop add cmc mov add lret adc mov add mov xchg das es out shl dec insb jb (bad) mov or mov es adc (bad) mov nop (bad) adc mov push scas jae pop fs sub or mov jle jg aad int xor dec and dec pop pop add inc lods inc sub popa and sub or rorb and std and mov mov inc jae jecxz dec fcoml xchg mov gs mov jmp mov inc fnsave sub jb push adc mov jo insl adc adc jno stc nop popa jle int and jae shrl in fadd cmpsl mov ss dec mov das insl xor test cmovbe daa or mov inc jg pop cmp ja fstps negl shrl mov and xchg stos mov mov inc lret xchg add aaa inc loop pop cmp pop mov sub lcall inc jns mov jb or pop aaa xor and clc sbb xchg or mov in dec es sbb jnp pop imul jge pop xchg or xchg inc outsb rcr fldcw xor xchg jb xchg outsb aas xchg (bad) dec jnp popf lahf push aas lods cmpsl scas and ja in inc or jb test ret and int3 test xchg cltd and inc mov sbb sbb mov xor xor icebp sarb addr16 ds into mov les mov push stc jno cwtl shll push push inc mov dec or das mov sbbl sbb (bad) xchg (bad) push xchg into fdiv pop jbe xor dec popl scas sub (bad) in adc jno jb jb sub adc xor mov mov aas repnz daa mov mov push dec outsb je sub add pop mov mov ret jne mov (bad) daa pop in in add add add jno stos pop push stos ja dec or in sub rclb xchg xor addl movsl mov fsts xchg add mov jle cmpsb lcall add icebp inc ljmp and mov scas xchg stos leave jne aad cmp mov rol hlt adc adc dec mov fwait jge stos out mov (bad) xchg imul dec int push mov mov call (bad) scas das cmpsl xor stos mov lods or push mov or mov inc mov dec mov cmpb (bad) mov or and and mov xlat movsb rorb jb cmp in adc jg call (bad) mov in int3 int jge lea push call jmp rep ret aam (bad) sti or inc mov sbb pop jge cmp push mov xchg push dec and popf lcall inc pushf mov xchg xor cli push es in flds icebp outsl scas call popf lock pop rolb or dec xlat xchg out clc pop (bad) in xchg xor int push stos add fcompl test aaa xchg enter cmpsb jbe fisubrl daa cmc ljmp xor push dec cmpsb xor cli in ret sub cmp push add scas inc adc adcl add cmc sti mov push addl (bad) fisubr jmp jmp mov mov les popf outsl push sbb (bad) ss xchg aad pop push icebp xor insl adc adc xor iret push rclb push xor sbb fwait out mov rcll push shr adc xor imul sub int jecxz (bad) lahf das gs (bad) arpl jno sbb sbb mov mov or addr16 cmp test mov pop sbb sbb cmc or mov dec xor aam push push mov or jb mov sbb xor sbb xor imul inc popa ds ficoml push (bad) popa mov repnz pop mov and and stos sbb (bad) jnp jns jne sahf push mov test or dec xor mov inc mov push test outsb add jl push pop dec xchg shlb pop out and (bad) imul fwait mov lret or cmpsb test jne pop out add jmp and mov jecxz out addr16 xchg mov js std sub out sbb pop xor mov dec mov jle dec inc aaa jo sbb mov jne push negl cwtl fsubrs sbb inc jl ds or out sbb dec loopne loop aad aad sbb add not xchg loop add push lods inc lcall pusha addr16 push cmc mov inc in cwtl push dec sub enter or push imul mov and jp xchg movsl add jge out sbbb mov (bad) mov int cwtl pop mov movsl ja test mov fwait (bad) imul push stos out sbb bound add sahf push ret pop cmp (bad) sbb jmp aad jbe adc cmp sti scas mov adc ret aaa in test mov cmp sub adc cmp push repnz mov out jl pushl cltd icebp mov (bad) addl scas (bad) and push inc dec call lods mov pop in xor sub jmp push inc mov mov xchg cli xchg push cmp mov lods push push lret (bad) jns sub pop jo mov jmp aam jge push xchg jmp lret insb (bad) aad in cld setb lea gs push adc movsl push push jge imul pop das ret inc movsl add out cmp sub xchg inc push imul rcl add lret jg mov mov movsl mov jae push outsb jno,pt loop icebp and adcl loop nop fcompl pop push leave or scas in mov add jae cmp pop sub lcall lahf in push popa add outsl imul fmuls xchg (bad) xor sbb (bad) cmp sub jne jl mov pop call fwait mov sub ja std mov negb sahf cmp or jnp daa pop inc xchg push push daa mov mov adc jns push push push cmp mov mov dec fs sub adc pushf dec cli sbb into sub inc sub pushf std idivl and jns pop in int3 push xchg jno shlb adc stc insb cmpsl pushw and mov ret push repnz push and insb xlat adc lahf xchg xor sbb cwtl sbb xchg out (bad) shll jp lahf dec (bad) xor int ret mov mov test repz xor aad inc push pop adc dec jnp nop sub add add outsb dec (bad) jb and xorl xchg push jne in dec iret mov sbb stos ret aaa fstpt scas add mov mov jp add imul pop jecxz jg cmp lahf xor cmp push iret and and mov mov xlat int pop jo mov mov xchg arpl add cmpsb inc cmpsl pushf mov outsb inc sbb mov lcall add push dec push cmpsb jno cltd lods out dec cmp jno shll scas lret push fisubr jecxz cld xorb (bad) std mov hlt jo xor mov mov jp data16 ficompl ret xor jp sbb call jo movsb and ficom jecxz inc add lcall mov lret mov sub xchg sbb stos add ds dec push mov dec clc (bad) ror out addr16 ficompl stos data16 test push cli sbb ds pop pop pop and loope or jmp cltd movsb adc mov xchg xlat leave shlb jne repnz mov sbbl pop adc cmpsl mov frstor xchg add rorl xlat cs addr16 jnp outsl push xchg ds mov pushf push xor xchg jb (bad) push xchg clc and push stos cmp pop jg ja mov lods add sbb cli mov mov cmpb jmp jno arpl cmc inc fcmovu aaa mov int3 je jo mov jno xchg std je push jno sbb inc fcompl (bad) dec jbe jge xchg add mov fisttpl stos xchg fsts and (bad) push je aam push and lock inc push dec mov mull jno ja dec in into xchg fnop add pop jns aas lret mov test movsb adc cmp adc jne gs xchg loope mulps pop sub in mov idivl fist stos dec jo mov (bad) sbb dec in xchg jo mov mov fnstcw pop pop mov out ds std lret test sub xor rorl mov bound shrl cltd (bad) jo rclb outsl jg popf cmp inc fiadd popa add sbbl push or xor pusha adc fmuls cmp add jg shrl adc cmp and mov jbe pop fwait jecxz sub mov mov (bad) test pop pusha gs xchg xchg call mov adc into sub aam cmpsl dec and mov xor and jecxz fnop or call inc fsubrl test rorb dec push movsb roll mov xor mov adc out pop out mov jae shlb (bad) sti roll insl mov call xor inc stc arpl aad in adc (bad) pop dec aam mov cmp dec cmc push in mov out out cmp popf and gs mov leave and fsts add cltd add sbb cmpsb mov xor fwait movsl insl int3 xchg pop pop cmp fcoms test adc fs int je sub dec (bad) or mov cltd pop lcall inc nop and dec rclb xchg or pop lret (bad) hlt ret movsb jns push fistpll mov inc sarb scas push and shlb xor dec jl sub pop fs repnz dec fstl jecxz jb test es dec jmp sbb mov popa push mov sub bound or dec loopne test movsl dec mov sbb not mov sbb enter sbb mov sbb les js pushf cwtl lock mov inc lods movsb int xchg inc sbbl pop cmpsl lahf xor gs (bad) fs (bad) inc or mov xchg ss outsb mov push add fildll stos lds or mov xchg mov or mov jns leave scas jg into push test popa mov cmpl mov mov mov xchg inc xchg popa sbb jmp mov cmp not xor scas adc inc sub add mov ucomiss sahf (bad) cmp mov icebp lock add nop pushf xchg scas mov popa adc xchg les and lea jns mov xor in xor outsb lret sbb mov and xor je inc mov ljmp xchg xor mov in arpl dec repz jecxz lcall (bad) xchg ret jg mov (bad) out in hlt in stos insb xchg lods data16 jns js push xchg hlt xchg inc lret pop in loop push in aam js push mov les pop movsl adc mov push pop sti cmp aad leave jecxz movsb xchg lods lock cmc cld test push lea xchg or mov xchg (bad) xchg xchg inc cmpsl jnp lods mov add bound lods mov out (bad) gs aas or mov push cltd cmp add cmp sti sar mov (bad) pop out rorb cmpsb mov pop fcoms cmp mov jae lock fsubl pop cli in mov inc std inc movsl xchg xchg xor push push sbb loop arpl scas dec cmpsl pop inc ja lret fiaddl popf sbb in repnz enter add xor lret lods add sbb sarb or mov dec xor xchg xchg mov cmc aad push pushf inc cmp push sbb inc ss test sbb stos pop enter mov mov pop or or xchg xor test loopne daa sbb rolb fcmovnu lock (bad) dec nop lret (bad) xchg mov in faddl mov add and pop cmp jbe pop adc push out sub jmp fcoms lahf cmp ret inc mov rorb stos jmp leave pop xor mov mov ss pop scas jo or dec mov mov lahf test insb hlt (bad) and rcrl jnp push mov cwtl inc ljmp and pop and or outsb ret xor xchg mov cmp inc (bad) cs leave cmp int int3 mov xchg jo test and aaa mov (bad) popa cmc or mov aaa push test (bad) mov jae jle jecxz mov pop (bad) sahf repnz loope fcomps arpl inc sub jbe and lods adc mov push jge jne int3 fmull addr16 sarl pop xchg mov gs mov rorb int3 adc (bad) leave sbb xchg bound in cmp push mov inc cmpsl stos jecxz in mov dec mov ss rcrl or movsb xor cltd lods (bad) cld lea into lea xchg mov stc and mov imulb clc cmp lret enter fwait dec and adc pop jg in test jo (bad) mov call sahf dec push (bad) xor imul push push lds xchg mov push add cmp sbb pop rcl loopne inc dec mov fldt push cmp hlt loopne and sahf pop in pop and mov inc sbb call sbb fiaddl dec mov es mov jp sbb dec (bad) in mov lea shrb insl mov xcrypt-cbc cmpsl push addr16 mov push xchg push out sbb rorb insb loope das lahf mov xorl mov stos fwait sub fdivrs outsb hlt pop jne pop pop int3 int and hlt jecxz pop xchg icebp sahf imul ljmp test (bad) dec es ss aaa fcomps xchg repz inc dec mov push fcmove adc push pop fcoms repnz (bad) adc mov shlb mov enter mov dec aad sbb les jbe sbb rcll mov negb int push lods fnstenv ficom jae icebp add cwtl mov test in loop xor in mov push cltd pop jl scas cmpl es sub mov (bad) jb sti bound out mov sahf mov fsubs inc lret cmove cmp jne cli jbe dec push mov xchg pop les xchg push xor dec mov sub jmp aam mov rcll out aad iret jne iret jecxz mov mov (bad) mov dec fldl pop fisubl or or ljmp call xchg push fwait add cmc and adc and sbb dec and push xchg mov jp cmp iret xchg lret pop jb and fldt jb mov jb sbbl stc cmp mov fisttpll jnp fistl or movsl cmc pop xlat aam pushf add cld mov xor dec into pop mov jge pop and js xor adcl pop insb sahf sub sub fwait sbb xchg dec xor cmp rorb xor pop inc lret lds iret cmp mov fs mov jbe rorl sarl (bad) call ret inc in or lds jmp cmc (bad) cld cs aas jno pop pop mov stos outsb test int3 sbb enter cmp mov mov dec fsubp add out pusha test fcomi ljmp push cmpsb outsb insl push test (bad) int inc (bad) (bad) data16 xchg adc xchg insl mov nop fiaddl fs mov setl sbb aaa stos cmp cmpsl enter mov daa jmp ljmp ljmp mov scas insb insb pusha pop push or mov lea out cmp pop or pop or pop test and xor (bad) mov sub cmp push adcb subl ss fstl shlb and or enter adc testb test shrb inc ja ficoml dec mov fsubl loopne lret push test dec pushl adc cmc and movsl fdivrp jle daa repz lahf jo movsl cwtl or leave fwait nop std add out out (bad) adc push (bad) outsl xchg testb or mov jnp push jmp dec gs lahf mov add cmp push aam mov xchg stos aam xchg push icebp stos pusha jl mov fmul pop jo jbe jle jno lret (bad) sbb push or cs and lahf mov pop mov inc mov add mov mov push test adc xchg ret outsb mov test xor std or or (bad) mov xchg mov out mov add dec sahf inc or xchg add ja push ljmp adc and push test push xchg lods lcall dec pusha flds jmp or xchg shll pop cld adc mov sbb nop mov jo xor adc inc mov hlt (bad) mov pop inc cmp pop pop lret in xchg mov jo push ljmp dec jp out mov dec rcr or scas xor or mov pop (bad) xor cmpsl adc negb xchg inc adc cltd loope je lret arpl adc iret das inc pop leave push dec xchg test pslld (bad) hlt jbe xlat mov push sub dec dec xor mov ss clc cmp xor and std repnz jne dec xor xorl jge mov push int mov aas jecxz dec gs repnz in mov (bad) lcall mov imul cmp sbb movb cmpps nop and popa inc sbb sbb mov add mov cmp xchg add repz push dec cmp rcrb fwait inc xor sub and and sbb jge (bad) mov jmp add pop scas push add mov jo push mov call sbb les insb xor dec pop sub add bound jns ret insb mov or lods sub bound mov pop pop das cmp cmp jno cwtl bnd xor mov aad pop pop jbe fldt mov aad dec fistpl int3 dec mov in dec cmp aad push aaa insl and dec out (bad) out jne push test and push adc xchg cld test jb rcr ds cmc (bad) gs lods pop enter scas xchg test xadd add (bad) (bad) xor outsb orl sbb insb mov xchg adc je into xlat adc lahf (bad) lret ss bound mov or clc push int3 pop loopne inc mov or adc mov xchg mov jle pop and push mov pop mov inc inc adc insl int mov push movsl add xor scas mov adc loope dec xchg add cltd roll repnz pop enter cmpl push mov mov test icebp sub xor movsb jbe mov je inc cmp leave (bad) push add mov les movsb in add jae or cmp fsubrp repz stos addr16 mov enter cwtl cli sub ret jne cmc lahf xchg xchg mov xchg cmpsb pop inc dec push (bad) push negl dec fidivrl inc dec mov int outsb sarb movsl inc loop mov sub test xchg sbb popf fisttpl jns cmpsb xor movsb setp in stos or cmpb leave sub mov push cmp js xor (bad) jmp cmp pop mov fcmove jbe sti cmp xchg sub mov jp test loopne inc pop dec ljmp test shll ficomp add mov stos movlps or pop cld xchg das sti jmp incw repnz test dec xor xchg out dec jg enter xchg std sahf icebp cltd adc add jae xchg popa mov pop push das cs rclb mov and push test mov mov mov das inc adc imul jmp or xchg repnz pop or xor inc ljmp leave test dec xchg mov fidivr mov lea add pusha add ja cmp fisubrl pop addr16 outsl mov lret aas pop pushf mov aaa jmp outsb arpl and inc push stos ds push mov mov test mov rcrb xor xor pop (bad) xchg mov (bad) push mov hlt sub push mov adc es hlt int3 dec pop movsb lahf lods fs aad arpl jnp cmovo arpl dec and mov nop (bad) enter loopne cmp cmc out push lock push xor mov inc mov sub cmpsb pop xor cmp scas fcompl cmpsb scas pop mov mov inc fxtract xlat aam dec pusha fbld leave js es mov and lock mov mov jmp test pusha enter xchg data16 ds mov xchg jg scas int3 divb dec or xor call jle sub js dec cmp in icebp rcl in adcb (bad) push cs daa push (bad) lock fstps cmc add test jecxz orl xlat gs push lret push and inc xlat lods scas and rol btr scas cmc aam aaa movsl pop push dec cmp or adc jne or mov pushf xor xor (bad) cs sbb scas repnz lret (bad) cmp inc mov mov popa jbe pop jnp cli hlt test lds lcall jl xchg mov scas out es mov std (bad) in rcl push inc out rcll repnz push imul lods stos imul push jno mov jecxz (bad) out inc push xchg cld mov cwtl push movsb mov dec iret addr16 jno and push cs movsb or mov xchg mov jle xchg dec test push push cmc out scas adc mov mov push std sahf jne cmp jno and mov push dec or jle sub jb sbb cli lahf pop and imul xlat sahf sbb movb mov ror leave add out push pop insb cwtl ljmp cs mov lea inc xchg test add dec sbb and mov ret dec imul test push sbb test testl mov xor bound inc pop mov ss hlt test pop pop mov push (bad) xor faddp jb mov xor jne jg cltd sub scas jmp push dec xchg pop test dec lods fbstp rcrb ds mov jge leave outsl push mov mov mov inc push push (bad) enter mov aad push dec fwait inc sub in pop cmpsl and into mov mov test adc insb fstp cmc inc push daa push stc mov push aas scas adc pop inc xchg cli insb mov xchg (bad) jno pusha dec sub rorb in (bad) sbb push out add scas test out mov inc leave mov fnsave mov dec or adc jg or cmp sub jl fistpll aad cs or mov xor inc adc imul sarl in notb mov mov repnz and xor adc fmuls xchg mov movsl ss cli and xchg arpl cmp mov adc push lods (bad) mov imul arpl dec jno mov jne inc jg adc outsl cs inc and jge (bad) jo pop nop dec lock push pop inc mov (bad) mov mov stos add xchg leave xchg cmp xor test test aaa sub cmp jae data16 jbe mov dec leave push stc (bad) in fwait (bad) cmpsb jb popf call mov adc inc ret add and adc xor stc xchg dec mov inc adc imul mov lods popa mov les mov lods xchg cld aas mov mov add sub sub or andb fcompl mov jmp fwait es (bad) or pusha or mov push icebp nop mov xor dec push fsubr mov clc rol stos mov movsb lcall call xor or inc and mov or dec insl or push push inc inc fs cmp inc in sti xchg xor lcall in fs fcomps inc mov ss loope push dec sub outsl movsb js mov mov xchg or cmp daa ja xchg cmpsb lret out (bad) out push or mov clc stc mov xlat adc and mov lahf dec xchg xchg add neg cmp fwait mov loopne jge in loope ret pop sbb xchg dec or repz ja push ljmp sub mov ss adc sub fucomi gs leave pop (bad) cmp xchg fisttpl cmc sbb stos dec cmp jb or (bad) mov mov mov sbb mov fisttpl outsl aam and sahf mov pop jg sbb inc sub (bad) and sub (bad) or imul sti mov lahf jbe call sti and mov mov call dec pop add (bad) (bad) jae or movsb push mov imul sbb xorl test movsl ja mov popa xchg aaa jo stos push fdivr sbb loope lock push fistpl insb rol test ret (bad) xorl adc out cmpsl inc pushf pop addb xor mov sbb dec add xchg into xor pushf mov xor cmc movsb dec out imul push mov mov ffreep dec fnstenv in aam ret nop xor mov bound or fbld pop jle cmovo out dec dec adc outsb jns xor push cmova adc add lods stos xor mov js dec rorb xlat add inc sub mov mov jno mov push pop adc sbb xchg inc js pop adc jnp insb pop into arpl lock pop inc sub iret mov add add jae popf pop add xor xor int3 mov push cmp xor dec orb xchg mov cmc lock test int3 clc mov leave mov lcall inc fdivrs ja aam orps inc mov out hlt xor mov pop sbb dec adc in push imul pcmpgtb clc jnp xchg cwtl mov inc add xlat push or fbstp popf xor frstor xchg or xor out jne aam inc sub jno jns test pop jb push stos loop add pop dec or sbb cmp out into (bad) in cs scas scas xchg jb sarb (bad) mov add les add idiv cmp and (bad) int3 mov iret leave mov pop or test mov cmpsb adc dec push int3 addr16 insl jp mov xchg popf aaa mov adc pop mov jne lock into push pop inc mov push dec data16 test jo mov mov mov jp mov xor xchg stos and xchg xor jecxz cmp bound xor data16 sarb ds ss addr16 lret dec xchg int (bad) inc arpl mov mov pop sub daa and mov adc jg icebp sbb cmp cld jle mov and flds cwtl daa jae xchg data16 cmc test pop mov push xor push in aas mov mov sbb xchg push fcmovb ja rorl ret insb mov push int3 sub push out loope (bad) sbb out inc push and cmp mov aad fsub add loope outsl out inc les cmp jp jp in mov jo add xor idivb repnz lock push and imul pop mov jb lods mov gs or push add aaa xchg (bad) pushf fadds jo lds xor adc mov imul stc jl mov (bad) lods cmc fwait daa cmpsb (bad) xor imul hlt (bad) mov scas xlat cmp pop mov cld dec imul mov and jbe bound icebp adc lret leave insl inc test js pop xchg loope aas adc inc cltd insb movl fistl scas aam clc cmp bound sbb arpl or jbe mov xor jbe mov dec ss pop and or cld dec dec ret daa cmpsl (bad) hlt add data16 xchg xor cmpsb les pop lods fidivl sub ja jmp frstor sahf movsl mov push mov or dec or xor sbb jge xchg cltd nop mov mov js,pt ja nop push mov xor and pusha push stos enter mov push xchg in daa pop call dec xchg lret inc (bad) pop jbe lahf ss xchg mov aam lret mov mov ja xor ss or xchg iret pop hlt lcall fcomp (bad) pop ss adc pop leave or imul jae fmul pop xor xlat fbld (bad) jbe sub push int and (bad) repnz and push mov sti sbb jnp jns dec sub inc jae push cmpsb negl mov mov das mov (bad) sarb int3 mov mov imul push add pop pop xchg jae mov js imul lcall mov inc push cmp sahf inc nop addl jl test gs movsb push clc sbb cmpsl pop jg insb gs adc mov jmp adc ret and kmovd lret xlat inc clc pusha inc cmpl cmp les lcall into fwait mov ljmp ficompl mov jo test test scas jmp (bad) push pop pushf push lock sub loop in stos jge lcall (bad) pop pop es and inc mov adc pop push sbb out pop pop dec sbb sbb cmpsb pop mov dec shr cwtl cld inc in (bad) mov pop inc jmp push bound imul jge stc jb cmp adc jp sti mov imul add adc cmp mov stc sub subl mov lods pop or jne in mov pop mov cmp testl mov mov jge xor int3 imul (bad) xor js out leave arpl xchg pop int repnz out in (bad) dec mov outsl bound cs gs sub lock fs and (bad) fst or dec enter decb dec mov mov push test inc push push ret arpl xor and aad jmp mov dec adc fwait das adc jl cli sbb (bad) mov outsl add mov mov mov xor mov jle sbb pushf cmp add stc inc sar add or cmp dec outsl lock aad mov mov cld enter dec cmp out mov inc icebp sbb (bad) dec (bad) stc push jg sub adc outsl dec aad inc xchg pop stos sbbl mov ret stc mov push jecxz (bad) cli stos in pushf xchg sub les loopne pushf mov call (bad) aam sbb in xchg cltd add pop and cmp (bad) iret mov sub movsb inc jae lods dec mov inc rcrl and mov dec stos pop out fild mov mov push call jo or xor mov (bad) je int ja xchg (bad) out xchg andl clc sub add aas mov mov dec or push adc out jge or push pop iret cwtl adc int3 jp lcall idivl mov and push sub arpl jno out push add push arpl or mov adc xlat push les (bad) mov lds sub mov icebp xchg xor aaa adc cmc negl inc fnstcw aas and test loop cmpsl push xchg incb lods sbb sub insl jmp jp repnz inc cmp mov cmp or fwait inc js and je xlat fsub cmc repnz mov adc inc call test (bad) jne add rcl dec dec xor jnp add into test addr16 insb enter into shl adc push insl sbb dec pop mov sbb repz xor push jge jnp pop jle sti mov leave push test push stos shrb adc sub sbb ds clc mov clc jmp xchg xor mov addr16 ret push insb (bad) mov dec sub cmp aad mov je movsl xchg mov (bad) pop inc fstl pop data16 into inc jbe inc ss and and inc aas leave scas loop sbb mov dec add jno or (bad) scas cwtl cmp cmp loopne ljmp mov iret out idivb pop sbb mov mov pusha aam and xchg xlat and addr16 mov mov rclb mov jp imul or cli addl cmpsl in insl pop jle in push aaa cmp inc sub neg and cmc inc outsb mov test add lret or loope pop jno and out dec std cs jp popa push sbb fidivr inc dec adc movsl fld jmp loop mov lcall push mov in mov jbe xor test iret lcall pop push or fldcw insb lods cmpsb mov outsb and dec outsl xchg aas sbb pop fwait cmp cmp xor sub sub add mov outsb pop sbb xchg fcmovu stos arpl or fucomip in scas shl test clc fstps rorl sbb lods cwtl les xor xchg mov out jg adc cltd add and (bad) out das pop lock repz loopne fstpt fwait sub fdivrl sub insl dec xchg sarb or and add popf ljmp repz push inc movsl dec es cwtl test stos mov push sub mov int3 pop in sar daa inc and clc jle push inc dec inc and pop bound fisttpl sub mov sub cmp pop iret jbe scas mov lock outsl and shrb popa dec in outsl lds pop cmp nop clc addr16 popf ret push test mov lcall idivb jp cmp pusha cltd sub inc or or mov push mov push cmp add cwtl and cltd adc adc xchg jge fsubrl sub xchg fsts mov push push je gs (bad) call fisub mov lds mov jns data16 insl leave or xor jb mov inc cmp mov jmp sub cmp mov ja (bad) xchg fiaddl sub add orl (bad) bnd jmp add cld and mov lret sub jmp pop lea daa pop mov lock (bad) sub incb xor push inc insl in in dec decl out mov push fmull insb add inc jns fcmovbe iret in stc jno fdivrs test sbb (bad) mov jae xchg daa int push js pop in xchg mov aaa mov or das push mov cmp jnp in or mov adc xor mov out adc pop cmc sub out and mov roll jg cmp fidivl mov loop dec mov dec fcomp js into jnp inc push mov xchg loope pop fnstsw xor rdmsr call sarb mov out add mov adc jp push scas pop aas je gs jg int roll adc cmp or mov (bad) cltd sahf je int3 fmuls insb xor xor pop inc gs xchg xor into or add mov lahf int sub jg out test xchg inc sbb cld sub and ss lcall add cltd fwait popa xchg xor mov ljmp aam xchg fnstsw sub jne jmp clc arpl mov enter (bad) out adc popf adc and lock fldt lret adc lcall test mov dec lret push jmp roll sbb add (bad) jae xor mov inc icebp adc jns sbb call sub adc fsts adc dec aad and outsl and lret lods xor pop sub movsl cmp lret mov aam loopne push es xor in jle pop int3 bound mov xor imul dec mov repnz jo cmp cmc add sarl scas insb loope jle mov pop mov xor daa lods xchg inc push addl pop jecxz out jae add mov mov or int std inc sub rolb ss test push mov pop repz and (bad) aam adc add and cld and adc or enter inc push sbb decl mov mov (bad) mov imul sbb loope (bad) sahf call enter adc cmp pop sbb and and and jbe sub adc dec sbb jle jbe scas outsb mov cmp xchg scas ljmp jl divl or xchg dec xor faddl mov dec sbb sbbl pop inc xor test cmp xchg pop mov push ds push repnz jae xchg jmp dec and add adc push push pop or ss add sbb fwait loope (bad) sbb or pop stos xchg sub pop adc (bad) pop ds and pop repnz dec aam or mov push sti cmp jmp (bad) mov aad inc sbb adc jo or lahf lods jnp inc test es jb xchg test fnsave push pop push fstpl mov pop je inc mov lahf fdivrl inc mov dec sbb or test pop loope outsl xchg and sub push ss sbb adc xchg xchg jno push xchg ss or add scas mov cltd inc adc sti jae je mov lret cltd aad xlat imul (bad) xor xchg push sub hlt fstpt xlat pop out dec cmp xchg jno add (bad) jo xchg icebp fisttpll cmpsl testl mov jb stc out mov loop xlat dec test fistl aaa movsb mov fidivr adc jp cmc enter push test and add pop pop (bad) in pop push scas data16 mov inc and pop rcrb out loop dec dec xor pop xchg sbb jg adc jmp in push cmp arpl or xchg cli lahf (bad) lret ja int mov pop xor pop pop movsb jne loope jne pop in mov jo je cmpsb icebp or inc scas jg mov loop cmc and scas jb fistpll fxtract mov mov (bad) pop xlat xor mov jns xor adc loop sbb nop stc xor cmp leave jns push (bad) jecxz and scas enter and in sbb pop sbb inc stos xor and pop addl (bad) gs arpl lahf adc and loope in clc xor pop jge sbb add jnp aam push insb and sub lahf mov cmpl cmpsl pushf pusha movsl stos xor inc cmc dec inc stc mov and lahf cli jle pop call fcomps sbb sub lods aas rolb fstpt or lret scas cmpsl jnp outsb loop or xchg push insb or in pushf sub cli xchg xchg xor mov ljmp loop sbbl das xchg cmp stc (bad) cmp jno sub xor lods mov inc adc stos lods push imul sub mov pop cltd int jnp into xor mov push mov mov or ds in aam hlt mov repz cmp sbb xchg test mov and cmp int3 fnstenv inc cmp xchg call sbb pop mov sbb jl je jno repnz shr mov xchg adc sub sub jno popa cld push cld insb or pop and mov jl dec in ret outsb inc repz inc arpl lahf scas leave outsb enter inc addr16 clc les push cmp jge mov nop push inc pop insb pop out jae xchg icebp inc cmp pop xchg add sub loop daa nop push xor aas shlb rorl pop mov pop addr16 jnp (bad) xor stc cmp nop adc or mov das jne movsb in cld mov inc (bad) pop inc or mov jnp ret lock ret scas xor (bad) push fidiv and dec jne pop rcrl das movzbl jmp aas jge data16 decl stos lret sahf xchg pop mov lahf xor inc outsl adc bound add cmp or add dec sbbb cmp dec outsl loopne test jnp pop add mov outsl and out insw pushf cmpsb mov andl xchg pop out adc push sbb xchg jno jno fs js xchg add stos in (bad) call fcoml (bad) lret fldenv add xchg push and popf in ret dec or (bad) into pusha mov sub push adc insb mov cmp out stos test fildll insb dec push xlat adc nop push adc pop lret xchg std mov in roll or jecxz enter xor inc cwtl xchg ret (bad) xlat cltd push shrb add sub push fsqrt push lret add nop mov jo je sub mov xor daa test cli dec into movsl clc (bad) and xor mov das sbb lods mov pushf insl cmc jb imul fldz and insb xchg push adc inc jg icebp ret imul dec mov (bad) movsb std jne incb xchg mov mov cmpsl jl fistpl (bad) stos jno mov cwtl push sub xchg pushl movsl imulb or fs dec and ret mov subb mov push test clc imul xchg pop je dec ss xchg shrl mov push outsl pop and js daa sahf xchg mov mov repz push push xor (bad) addr16 or mov stos repz lods loopne cmp push sub mov outsl jne mov fiadd jns sbb pusha out loop sbb lds add pop pop pop xlat in out iret push (bad) push lock dec es sbb mov div cmp cmpsl lods mov mov xchg jmp mulb (bad) adc movsl int3 andb outsb bnd push mov mov lcall push push xchg cmp mov ss das and out push jge ret or add inc pop and inc push push cmpsb aas push add arpl push (bad) sbb lock lahf push xchg xchg test add push aas pop xchg add sub movsb mov aaa sbb in aas cmp shr popf add jno mull out lret cmpl dec fsubrl adc push xchg mov jmp ds mov (bad) mov push add out jp outsl into leave ret rorb and hlt rcl ficomp push mov jle fiaddl fs jns js or cmc cmp dec jnp inc mov mov ficom and cmp pop push das movsb mov std mov push fstpl fisttp xor push int lods test xor mov mov into push push and (bad) jae mov pop mov and mov mov bound xchg hlt inc sub push adc adcb xchg add mov mov mov adc cli pop arpl mov (bad) insl mov mov mov cli push sbbb and sti aam cltd (bad) jbe adc les addl cltd js jp insl test ror stc imul clc ret mov lock adc pushf dec rcr dec inc repz in ror pop xor dec stos clc lock mov gs aad push pop sahf divl loopne js je mov ret mov xchg fcmove sti mov push push ficom xor mov mov xchg aad mov fistpl ds outsl mov dec xlat cmpsl mov (bad) pop imul jns xlat nop ss xor mov data16 push stos ljmp push mov fsubrl cmpsb fisubr inc (bad) mov mov inc dec stos fisubrl (bad) jp ror mov test dec sahf shll ret adc imul and lods call sahf and and push pushf mov fiadd ja pop push sti stos out xor test adc push pushf inc int orb cli sub jl repz adc fiadd xor or mov xor ja and jo mov mov sbb stos pop repz subl xchg xchg (bad) mov or test inc dec adcb pop (bad) ja in xor xchg (bad) loopne fwait inc inc xor int3 or cmpsl add fmuls mov inc inc int3 inc jbe rcl fs xchg push hlt hlt shr or stc sub jle fstl enter jp (bad) (bad) push xchg dec mov lea mov mov daa mov fmuls jno repz push push pop mov lods gs add mov mov jp inc mov fstl pop js mov repnz add stc es xlat nop stc fnstsw insb je fs ljmp add xor ds hlt mov repnz pop inc out adc std (bad) cwtl fisub mov cwtl sbb pop lcall sub in xor imul adc xor xor dec outsl shlb popf aaa mov rcrl jmp or jle sub sbb lea daa xlat pop (bad) shrl push nop cwtl inc cwtl sti sbb cmp mov in into lret sub (bad) xchg test (bad) cmc aas add cmc adc sahf cs jno mov test aaa dec cld cmp movsb dec hlt out loope adc sbb push test lods bound in push push roll push sbb jp mov cmp scas in inc int jge cmp add dec lret inc inc mov (bad) lock add repnz jmp adc xor pop jle mov jae jmp loop xor dec sub xchg orb inc std clc mov adc xor in jg dec dec scas (bad) arpl cmpsl insl into dec pushf add sub rcrb mov lahf std mov rcr icebp (bad) push push neg inc out lret call sbb dec scas inc cmp movsl mov ss fbld inc clc mov stos add mov adc fs mov cmp out jmp nop add add add ljmp dec inc jle sbb jmp (bad) out mov jecxz jl add lds xor andb in add xchg sbb add dec outsl pop (bad) addr16 dec jns add jge insl pop sarl mov int3 and xchg cmp fs addr16 push dec xchg dec or (bad) ret je mov mov imul call call mov int cmpsb nop inc popa xor aas cltd jo in push or adc icebp lods mov inc ret shll mov mov aam daa pop add push cmp ja dec in push les dec xchg fwait jne andl xchg neg mov test aam xor xchg xchg push loop pop imul leave fwait nop pop mov cmpsl fsubp cli dec data16 pop push in adc xor (bad) aad mov sahf cwtl push pop ret ljmp test dec je into aad xchg jae cmp mov inc mov movsl dec int subb xorl imul pop adc push mov cld push sahf rorb stos pop xchg xor dec mov popf aam jg dec popa js popf imul inc mov inc sti inc dec jne test data16 fstpl and rol test flds push sbb insb call fs call int das push lods mov xlat dec push dec (bad) xchg cmpsl mov push cld not aam sub (bad) push fimul xchg sahf sti xchg les mov (bad) xchg fildl aam jg ljmp fisttpll mov ss loopne dec xchg addr16 jge stos roll add xchg je dec stos call gs int mov and jbe call mov (bad) pop or inc lcall loop mov adc cmp mov and cmp addr16 and loope sub mov out push mov stos popa pop call inc mov incl add loope and fildll cmpsl jbe (bad) mov dec int repnz lods pop fwait push ffree xor ja jnp inc (bad) fildll clc mov daa sbb stos xor in fdivl mov mov out mov clc pop dec and adc stos sub and aad icebp fs mov sbb xchg arpl in lock and and mov xchg adc int push aas movsl cmpsb flds push cmp test adc not pop sbbl data16 mov mov lcall pop jp mov lea xchg lods jne xor mov jge addr16 movsb (bad) xchg cltd stos in push add popf inc xchg sub mov icebp test or nop mov xor frstor stc sbb lret sbb adc sub pusha sbb push lahf mov gs xor fmuls or imul mov cmp cltd sub mov mov out (bad) xlat into xor push adc pop in and cmp xlat nopl push outsl lea mov jne enter roll or or sbb pop push mov xchg jmp in mov mov sti jle int adc popa pop cmp shll mov lods jbe jae fnstsw fisubr roll stos pop sub jp add pop (bad) cwtl (bad) push xchg jae int imul repz ret add xor add jle xchg and jg adc inc int sub jg sbb lahf jbe (bad) leave scas xor lcall pop sbb and fildll insl mov mov (bad) in rcrb movsl mov outsl pop inc (bad) sub sahf imul imul sub stos push xchg test inc xor jmp push mov jae rolb fistpll clc mov jno outsl mov es fsubrl das adc xrelease push push data16 loop jl lods (bad) mov jbe lods xor jns or loopne or sub cmp fdiv es mov enter sbb dec and inc cmp jne pop sbb gs mov stos pop xor pop adc add mov xchg adc and loope push jae (bad) dec xchg in mov xchg mov cmpsb and mov fistpll sbb in jmp xor mov jg dec mov inc in jmp cli cmp push ja rorl in sbb je jne sbb sbb cwtl fldt mov pop push aaa lods sbbb pop add and or roll push push ret fsubrp subl mov mov je or pop cmp hlt int3 push inc (bad) adc jno bound shrl (bad) xchg in xor clc xorl ljmp push and lret jle mov mov sub popfw imulb lods and mov xchg mov jo arpl dec sbb xchg jae rclb dec das fistl rcl mov ja jae cmp jae push cmpl sub push mov pushf call (bad) mov cwtl jp mov lret push lock cmp ss aad adc and fisubl cmp mov leave test inc mov roll push cmp sbb push push add push aad addr16 and aaa repnz push mov or mov mov add aam clc stos inc pusha dec mov cltd and aaa in adc ret jne dec mov or call mov (bad) jae jno xor or push fchs loope je jnp xchg xchg push sub xchg mov dec sbb lods leave mov cld (bad) inc out rcrl cs cmpsl mov call push into pop inc mov cmpsb je out out push xor cmpsb mov das arpl das inc lods popa dec sbb repnz adc sbb outsb dec jnp fmul sub or lds mov sub mov or (bad) in or repz mov movsl pop fstpt je pushf cltd fsub jbe movsb push or iret je fadd jbe pop mov ss movsb insl xchg xchg fsubl push inc aaa aaa (bad) dec or push les dec repz xchg cltd out test xor in inc push mov test (bad) into sarb je dec mov sub mov push pop cmp xchg movsl mov inc and stos fnstcw mov lds dec cmc jbe xor (bad) roll loope xor push jle inc test shll jge push dec (bad) pop inc dec int ds xchg push lds lea int3 cmpsb inc adc push or jne lds and cli cmp pop (bad) cli lods call xchg inc sbb sbb mulb xchg mov das jne aaa inc mov (bad) movsb mov (bad) jmp imul mov xchg movsl repz loope subl shr xor sbb mov inc bound mov bnd jmp lds mov lea xchg jns cmp movsl mov lret and sub scas decb and fwait add pop iret pop test xor jmp push mov mov xchg imul inc inc rcrl pop jbe not adc or data16 mov push leave mov xchg inc pop adcl (bad) repz cmp in in mov or lods pop lds pop adc cmc (bad) insb sub or mov lods mov pop cmpsl out mov and xor cmp (bad) sub call fwait cmp mov xchg pop aaa fwait dec loopne dec movsb clc lds enter test rsm cmp or bound push lds xchg xchg jae nop xor dec cmpsb addl pop mov ret jnp (bad) push fcoml add es and mov xchg xchg pushf les popa mov mov mov hlt sub mov and or in dec add and cmpsl sub fwait and cmp mov push arpl pop pop fnstsw jo sbb les movsb sbb es lcall mov mov xor ljmp inc movsb xlat mov ja sbb jo sbb gs pushf push mov ja pop jo mov les ret push repnz fs (bad) mov mov rcl mov push aas xchg (bad) aaa dec xchg add add add aam push popa inc jecxz (bad) sbb rolb push cs inc ret adcl mov (bad) lcall stc movsl adc xchg inc jecxz movsb sbb mov ss pop push sub movsl or cwtl clc inc daa ljmp adc mov xorl mov dec adc fs lods jl cmp adc add cmpsl popa mov jmp cs cmp or (bad) jge int3 fcomps call and stos jl mov mov movsl testb jp out mov xchg fcomi sub enter sbb xchg dec inc xchg xorb (bad) pop push mov and xchg lods sub add push pop lret jg xchg cmpsb cmpl insl push jb mov (bad) movsl mov (bad) cmp xor jle in adc out sbb and nop jne daa cmc sub sbb jecxz mov shr mov add aaa add fldenv loop sub cmp das rcr hlt cltd pushf pop xchg sbb das xchg mov jb mov js xor xchg (bad) or sbb (bad) mov mov mov jno test jp stos dec jae pop daa push lea xchg mov outsl pop sahf inc push inc daa and add in cmpsb xor dec add ja xor clc out mov dec icebp jns add xchg jae cmp cmp ljmp push call (bad) lods das dec mov lea stos negl sub sbb std add in and mov adc mov sbb lcall jae cld xlat mov adc jle fldcw mov outsl lds bound ret je test cmp jl leave shrl adc in pop shlb inc add fidivrl loopne out into sbb cmp cmp mov mov fnstsw bound data16 fcoml pop jge jae gs leave inc sbb cmpsl into stc add insb mov jns push pop daa sbb das jnp (bad) jp sub and mov sahf stos dec mov (bad) xor shll or lcall mov (bad) pop mov cmp inc je scas inc add into mov and sbb mov mov mov sub and push pop (bad) data16 mov fsubl cli push jmp mov iret scas cwtl lahf xchg inc scas push inc pop inc pop add (bad) xchg jmp cld push cld xor xor call cmp mov inc mov xchg adc stos inc out cld mov jnp xlat or data16 jge fsin (bad) push adc and std ror mov adc test push aaa push out bound and push (bad) and sbb or and cmp push scas js nop in mov and mov (bad) ret sarb lcall pop sub xor inc push mov mov mov fimul xorb xchg mov dec pop rolb dec push test notl cmp push in push rcll sub push pushf outsl hlt pop or fldt pop repz push mov pop jmp and or mov push cmp enter lret les jge push xor cmpl movsl repz daa push add pop lahf dec pop sbb xchg in fsubr in lea movsl enter fs data16 xchg and sti or xchg cmp xor and test out fs movsl shrl pop sub add jmp popa dec ds shl mov nop push mov cli xchg push push in lret (bad) dec pop imul enter nop sub fidivr add data16 imul je daa push mov sahf mov push cmp (bad) cmp jp adc jb mov cmp cs mov mov adc insb cmp decb push leave aam sub adc inc dec inc fsubl mov aam inc xor jb sar outsl test cmp and xor jp (bad) repnz mov sbb popf jo adc inc nop cmp or iret rorl xchg inc push dec adc ja sbb xchg xor sbb (bad) loopne das pushf xchg mov cmp das insl sub mov and icebp and inc jb pop inc aas inc add aad andl cmc sbb dec and (bad) push push enter inc jmp out mov insb mov in jmp repz fsts mov push arpl dec andl std jo mov aam int3 cwtl push (bad) repnz inc pop rolb push jge xchg cltd or hlt jnp pop pop mov imul bound insl mov shr jae jbe jmp notb movsl lret add mov cmp cmp outsl mov and mov fmulp mov or popf inc sub lahf xchg daa sub or repnz push mov stc je fisttpl xor (bad) in stos in jbe mov lahf xchg popf push outsb mov adc test movsb xor enter inc aad aad jmp in jae add orb das xchg sbbb add mov xchg mov pop test jecxz movsl rcrl push mov out call aam insl push in or outsl lock cltd in push adc mov shlb or pop les jp (bad) es inc and dec push and add inc dec cmp out nop cwtl (bad) jp lcall inc fnstcw jl aam divl cld xorl fcmove sbb repnz lahf test mov cli adc cmp sub mov mov dec and pop icebp pop or mov mov rclb sbb add ljmp mov ficomp push xchg sbb sub lahf das out out xchg and push xchg push aas stc mov popa mov dec or fwait out cli sub lea inc negb sub (bad) jno stos mov js,pt negb je mov ret jno ja scas fisubr pop xchg popw xchg cmpsl jbe add aam push (bad) pop test add int3 sub aad insb in lea insl xchg sub call iret pop jmp sub sub mov mov dec sub pusha jp add add rcl stos mov sbb aas push test push fistpll out fmul aad popa imul scas mov mov in call push insl add mov sti pop inc xor inc (bad) xlat cmpb jno xor cmp and adc inc dec xchg mov ja iret or or movntps int3 pop push add add daa or xchg aaa push std fldl sti mov sbb and adc xchg ja or leave xchg push inc lds fstl adc add cs outsl ficoml scas or incl mov mov push fidivrl xchg roll outsb jns test lea rcrb push iret sbb dec adc jno pop data16 mov cmp fwait cmp aas push sahf or sbb cmp clc popa and mov into sahf or dec mov inc inc jmp cli out pop lods mov scas shll pop xor xchg sub adc xor mov pop out mov adc xchg push xor dec inc pop lret into xchg test (bad) mov movsb inc rcll enter sub or (bad) jp leave jl inc add push aad (bad) jecxz and fs ja sbb repz cwtl data16 push mov jae sbb and mul sbb add movsb inc js cmp or lds cmc xchg lock sahf mov jbe insl sub push ja jns and sar in sti and out fidivrl pop push bound out sub sub and data16 inc fdivrp dec xchg pop ss cmp adc add mov or fcoms jno loop repnz cmc jno xor add out sbb add jo sub and jp lahf adc xor int (bad) cltd dec insl mov outsl insl pushf xchg fisubrl jns push hlt pop or mov in arpl and dec fdivrl pop (bad) mov mov xchg repz shl daa fucomip mov fwait inc inc in movsb cmp dec in and das jne int3 scas push popa ret push setno and (bad) mov loope cmp scas mov out hlt push dec sub scas stos and lods out jmp cmp sub pop jns,pn inc in mov js xlat enterw pop loope ficompl push pop dec mov icebp xchg sub cmp lcall dec push jmp imul mov jbe divl and ds add daa cmp sbb jmp aam xor sub bound add pop jne outsb cld (bad) cmc adc sar ja clc lahf inc ds pop pushw into mov mov jle xor gs inc movsb gs cmp fsts lret xor cmpl xchg and gs test pop (bad) negb dec fildl cmpsb cmp sub inc pushf push dec stos inc rorl lock stc push out outsb inc in (bad) mov lcall add aaa insl cld add lcall cltd icebp push sbb mov sbb movsl lock in and dec mov cmp insb and or sub xor jg pop out enter push out inc cmp sbb rorb scas cmp fstps pushf push repz mov add rolb inc leave pop mov mov sub mov dec gs or mov adc jo mov aas aas scas lea pop or enter lock cmp and add fidiv cwtl jns adc test push xchg mov pop lods icebp repz dec into pusha not or mov xlat or push cmpsb add sbb and (bad) push sar adc int pop fistpl push mov test jb leave ror cmpsl sbb push or stos imul lods les scas add out jmp fisub leave and shr add push cmc orl dec xchg stc sub into loope cld jae ds dec scas (bad) into jl (bad) cld push jbe mov mov nop je xor adc jno gs movsl lods clc (bad) add cmp test cmp xor inc jb test jmp cmp sub mov xor es out jmp jns test and call mov pushf xchg mov ret addr16 xchg ret (bad) mov cmp int3 andl xchg sbb imul add pop cmp jle mov pop (bad) xor and cltd lret enter lods dec or sbb mov jle inc test ljmp repz test jmp fs push aaa mov sti das addr16 scas lcall mov leave imul out inc js lods paddw xorl push xchg dec mov lock stc xchg and dec push xchg jo lcall mov jecxz stos mov mov push sub (bad) adc push sahf stc adc (bad) push gs xor pop stos jno cmc cmc mov dec lret pusha loope mov ja jbe mov loopne jae dec mulb js and pop fimull dec push sub mov mov sub sbb adc xchg movsb ret ja hlt mov jns loop sbb clc adc rcrl sahf insb (bad) sbb test dec push hlt cmp aaa cmp mov sbb sti dec aas daa xlat or fistpll inc (bad) mov std mov (bad) (bad) mov lcall aad jge pop aam es cmpsb lds mov push xor (bad) xor test pop adc xchg outsl ret clc and mov mov setns push sbb push mov mov xchg aas cmp fidivl orl test xor cmp outsb insl jle cmc inc test pusha cld js mov xchg out pop xchg or ficompl (bad) paddsw out jo loopne or and mov add pop inc xchg sbb dec jno push stc or push mov jg add sub (bad) pop dec mov ja je hlt push sub addr16 popf mov cwtl or xchg adc sbb add pop and mov xor xchg mov pop in pusha ret sahf std mov cmpsb lods mov or xchg pop xchg xlat ss and insl mov lret mov stos mov mov or addr16 jle xchg sbb (bad) cmc shlb repnz cmp mov adcl das insb or mov dec test js iret push movsb cmp outsb out roll and fbstp data16 icebp or jns mov dec adc xchg mov in pushf int push push popa gs pop test std mov sub inc loopne (bad) pop std xchg xor adc pop and ret movsb arpl push test cmp (bad) push xor test adcl pop (bad) lods lock xchg sbb (bad) aad mov sbb xor ret movb outsl xor mov shll cltd insb pop push ret sub jecxz lea jb dec sbb js enter fisttp jnp mov test (bad) insl outsl rcll adc dec mov add (bad) sub je xchg sub movsl test repnz insl int test cmp inc jle mov addr16 rorl mov pop mov cli xor clc in xchg js sahf mov or dec (bad) inc pop iret mov push cmp jge cli in (bad) lock repnz xchg shrb jle mov mov inc gs out jne and es mov and int3 mov dec aam xor int3 mov movsl (bad) pop inc repz in mull sub xor push sub sahf ret cmc in adc or (bad) aaa sbb xchg add jg ds mov hlt hlt lods sub mov movsl mov int3 push test std (bad) xor sub or xchg dec or stos and and sbb jns mov jnp sub xchg add sub jge lea xlat rcrb repz imul cmp stos (bad) (bad) ret inc mov repz mov adc mov scas add out mov pop xlat push mov das jae lods dec dec dec cmp bound (bad) in mov cmpsb cmpsl js in and add xlat push and out test addr16 repz jle pop in cmp dec push popa mov dec push std test sub ja rep lds jge pop sbb push mov jmp push jp pop pop outsb sti add adc cmp push ficompl xor mov xchg test xchg adc hlt mov (bad) and pop mull int3 int add (bad) or pop les mov jo add out sbb adc outsl int in mov cltd fcompl inc mov addr16 sbb mov scas mov jle int3 ljmp push mov mov xor js push jno nop int3 mov (bad) jb mov inc xchg lock cmpsb ja outsl fbld fwait into push mull sbb or das fucom pop push push and pusha loop xorl loopne scas std cltd test lock adc imul cs sbb lock mov fwait push int3 sbb aas addr16 xlat mov icebp outsb loop cmp pushf push push mov jne jmp jmp aas xlat and fsubrl or aas aad popf jmp dec sarb (bad) stos lods mov sub push xor or decl out mov repnz add pop jnp adc and pop jo testb mov push jno dec push sub aas test push popa push adc movsb xchg test sbb sub cmpsb outsb cmp and outsb dec mov sub imul test loopne,pn loope mov lret push cmp (bad) fmull inc mov out xchg fcomip out loop xor jb in cmp lcall cmp insb xchg pop ds stos aas orl push subb icebp dec dec cmp adc and add fldcw (bad) shlb mov (bad) mov addr16 das pop inc pop lock and xor inc xchg into faddp add xchg pop adc mov mov push push test imul in cmpsl sub mov push popa mov fs mov imul test jmp arpl sbb scas dec cwtl push mov push sbb xchg cmpsl jge jmp dec mov ret (bad) sarl xchg cmp loope call adc ja aas in nop stc jns jle pop jne lods sahf push fnop adc fcom or dec jecxz outsb xchg sub fistp out sbb mov ljmp xor inc stos xor and xchg jge,pt les gs das cwtl mov int3 or push sti add mov inc xor mov pop sub mov repz fwait mov cwtl lret xchg pop inc cmp ror xor dec cld fadd sub rorb lock pop mov ds fcmovnbe cli aam test cltd ss lahf in jg imul mov jp,pt cmc cltd sarl (bad) repz mov fcoms xorl stc cmp icebp lods and mov mov mov imul jb (bad) pop mov jbe pushf loope das (bad) jl lahf jb jmp cmp sti dec ret fildl add pop xchg dec lret jb or cmp ret and xchg dec dec shll int mov xchg push (bad) into inc jno,pt jecxz sbb mov or jb hlt add cmpsl bnd out repnz out mov icebp cmpsl mov mov jge subb div push call nop mov cmp sbb bound enter call stos out or aam js mov mov or cmc and sub inc (bad) jne push inc cmpsb cltd xchg test jmp mov (bad) fildll inc add movsl adc shll mov div int3 jl mov jb clc sub adc fs imul xor push gs lret mov or dec fnsave ljmp inc lods jle mov das into arpl ljmp enter ljmp push sub pop pop sbb mov aaa fcomps test jle repnz sti cli lods jge,pn movsb or loop pop inc lret in cs cld mov fidivr enter xor or cmp outsl mov adc test jge cwtl ret out mov clc lds mov xchg push out xchg outsl ror dec stc int3 push mov push popf sbb inc push or clc ret imul inc dec pop scas stos bnd movsb sbb jns loopne mov sbb jmp cmp popf (bad) adc cmp sub aam or out test pop cmp mov in and mov xchg push test cmp outsl sub inc neg insl lock arpl imul and dec cmp popa dec pop pushf xchg jb xchg repz imul cwtl sub rcrl outsb ljmp adc mov add addb fstl jno cld stos das addr16 ja je subl or pop mov xchg outsb xchg pop gs xor push mov lahf pop loope jne cmp cmp dec insl in repz xor outsb xchg lea mov pop sub xor inc add inc jp stc inc out jmp jecxz pop jle lods rcrb push and add push cmpsl xchg popa xor test mov mov push out pop into mov outsl sub mov xchg in popa data16 adc cmpsw adc scas lods jge adcl lods push stos pop adcl mov pop inc pop outsl xor mov leave scas xchg jnp push add xchg mov into das pop cs lret mov icebp jecxz jnp inc pop jb out fwait xchg push cmpsb dec fdivp addr16 mov fiaddl adc add xor stos adc jb fsub cwtl in loopne mov cmp push test sub fcmovu loop jne mov je and xchg jae sub ficomp andb pop lods mov ret xchg xchg mov push das mov jl dec lret cs or jg pop fstps xchg outsl jne mov cmpb inc cmp jo jecxz pop xlat sbb int pop add adc or or cli add bound fs xor repz outsb inc push cltd jl xor jbe in sarl fsts mull push lret mov cmp lds mov data16 ds jns movsb das (bad) push hlt lahf loop mov and jae cltd cld mov push push je pop les popf insb adc (bad) dec pop arpl and mov sbb aas push outsl fsubrl dec subl popf ljmp insl movsl or scas sar loopne jmp mov inc add pop idivb xchg mov mov xchg loope gs cltd sti popa fdivl and ljmp repnz mov arpl rorb jae mov dec mov pushf adc pop clc or ljmp mov in mov mov xor ss dec add imul clc fldt and js inc stos sbb cmp scas in call cltd pop call push sbb dec stos inc pop inc daa and push jbe negb clc cs arpl mov dec mov sbb je scas shll and (bad) jnp aas sbb sub ret or or cmpsl sbb es fidiv xor popa push pop repnz movsb lret ret aad dec adc xchg aam and popf mov pop dec into shrb and lods mov cmp pop push push rolb mov fild jae sbbl jb iret mov clc push cli cs dec jmp into pop sub cltd aaa sbb rdpmc shlb lods pop add pop loopne aam (bad) and ss mov push mov pop (bad) adc push movsl aam push fimul (bad) out int3 mov test cld add jbe mov xchg lret jbe push cmpsl aad adcb sbb dec fldcw mov scas dec daa dec clc nop ds pop and mov stos or pop outsb repz pushf cmpsb pushf sbb fidivr pop scas fdivs mov out pop dec cmpsb mov sub and in pop ss mov adcl fisub dec (bad) insb and ljmp sbb inc loope jo (bad) out dec xor stos gs repz icebp inc push inc xorl pop aaa mov adc pop dec mov pop xor fwait nop xor mov lock dec in ljmp mov outsb xor mov sbb ss xchg mov dec sub and ljmp (bad) insl scas cli mov inc push mov pop roll sub cwtl movups out (bad) xor jmp idivb mov jbe jno or out lock cmpsl or sub dec es rorl lods (bad) cmp cmp push jg out push sbb lret gs mov push pop xor mov je int xchg push orb in mov dec insb mov inc int cmp add push icebp dec pop xchg scas psubw mov push das sub cs insl nop jbe jge mov inc repz jae jno inc out mov push sarb jnp sahf mov mov push lds jno sbb mov lods adc xchg outsb popa negb iret mov ds jecxz sbb jl or aaa sub js ja mov xor (bad) (bad) lret mov repz decl cli jl into sub imulb sub jns adc pushf jb stos sahf repnz xlat push mov adc xchg jns adc roll insl enter pop fmuls std (bad) fidivr outsb mov daa xor in xchg lcall test std repnz (bad) sub ret sbbl cld jnp fnstsw (bad) rcrl cld and outsl es std pop out popl pop lea mov cmp lock sub (bad) out leave std sbb (bad) mov sbb or jno sbb push xchg cmpsb xor int3 lock cmpsl sti loope test push cmp pop mov out ja cmpsl rorb call les (bad) fwait lcall aad adc xchg jmp mov mov mov xchg jb lret loope mov dec sub mov punpckhbw outsb cld lds inc and jae jge int3 cld jle dec or fist clc inc inc sub push add test mov nop cmpsl xor scas jp mov adc cld and pop xorl sbb fnsave dec arpl aaa (bad) xor pop lahf in and lock int movsb xchg and add mov in stc add add adc cmpsl (bad) push loop lahf mov fldenv sbb push rol ja mov mov and popa adc mov sbb mov cmp xor loop stos cmp push fcompp jbe fmull jl push cmpsb cli cwtl movsl jmp dec sub or xor xchg movsb int test imul icebp insl jl sub cmc dec xlat mov (bad) and in cmp (bad) sbb jo sbb and (bad) fadds sub inc mov sub cmpsb adc mov inc sub and pop mov inc bound mov mov aam push out adcl sbb in pop pop adc inc push es mov add mov mov and jno lds pop ljmp out and dec icebp xchg adc notl cmpsl cmp inc stos fcmovne arpl mov stc inc cltd in dec inc adc ret fidivrl rolb lds push and sbb mov push mov inc adc dec or or (bad) cld (bad) fiaddl test inc or and and sar mov xor pop mov and shrb mov nop mov adc (bad) aaa jl pop inc in popl sub lret outsb cs lock inc scas cmp xchg add mov sarb outsb stos out je pop iret adc popf xor stos mov sahf and push dec jmp push aaa mov sub xor sarl jnp sbb pop sti out mov or pop loop mov cmp incl mov (bad) cmp pop sbb inc and hlt les cld xchg adc (bad) push pop jecxz (bad) sbb cmp in pushf cli xor les nop dec push outsl mov add dec mov sub fldcw (bad) sub or cwtl leave loop mov xor mov cmp mov iret sbb stc out pop in aas cmp pop loope les sub jmp loopne (bad) xor js add mull push pop lods roll call cmp insb adc repnz cld test shrl arpl lcall test xchg sub fs add (bad) mov pop lret les pop fs mov in cmpsb fist xor data16 jle pop loop pop cltd stos insl jb and dec xchg or push cmp mov xor push jge popf jmp into in mulb push adc mov shl pop and ret jmp push cld xchg outsl sbb adc jns stos int3 cmc mov (bad) adc mov adc out mov mov fwait xchg push int3 jmp shl pushf lret push push stc insl and mov mov iret add test dec notb sahf loope lcall sti add negl mov pop dec mov mov lahf clc xchg bnd call push inc adcb stc repnz outsl in inc cmp dec mov and jo adc fisubrl mov out sub daa and pop lea xlat mov lahf mov jbe xchg jae pushf xchg inc cltd mov aaa add pop adc xchg (bad) push adc int popa pop js mov xchg jg test cmpsb lock xchg xor jnp adc (bad) lods sbb pop std sbb or es call sub pop sub subl movb rcr rclb ror outsb pop cmpsl movsb sbbl loop jb add fisttp lock adc xlat (bad) rorl scas dec jb lds sbb movsl mov add hlt faddl push hlt mov push xchg add inc xor mov out pusha inc xchg sbb lods aam push sbbl lods aad stos jl mov out cmc shll int3 jns mov lods lods idivl cmp dec sbb mov test outsb imulb lahf cmp mov mov adc or (bad) xchg mov fcomp or inc and dec loope sbb add push cmp sub jbe cmpsb fisubrl hlt inc jne push push ja mov cmp sbb ss frstor cmp (bad) call lds test inc pushf sub pop mov inc push fdivs xlat pop jmp jne mov xchg sub insb jge pop inc div rcrl sbb cmp pop push leave mov mov pushl movsl test lods rclb cmp mov adc jl sbb xor or add mov ss nop dec leave and xor xor or clc test or aam dec test push (bad) mov mov inc (bad) idivb jno mov in cmpsl sbbl ja lahf (bad) movsb jle jo cmc test js push inc aam cmp mov aad in pop push (bad) adc popf push dec sub aad test invd or and or (bad) stos sarl xchg xchg xor mov and leave repnz movsb dec dec cmpsb push jmp xchg aaa xor or mov (bad) (bad) fisubr fadd jmp in cmpsb sahf outsb inc mov (bad) into cmpsb ljmp mov mov jg fdiv arpl adc gs cmpsb xchg popf dec repz cmp or mov inc cmp add out push mov lret mov loope loopne aam fcoml out pusha or inc stos mov loop cmc mov scas mov pop sub int3 sbb (bad) orl insl cmc nop jne,pt xor daa ret pushf out flds push dec cmp loop scas jbe jg test mov lea mov ss mov xchg ss inc add dec jne (bad) mov sahf push fmulp aam and mov (bad) or sarb rcll pop test int sarb xor ret stc xor sar imul pop cmp mov cmp in test (bad) xor push pop popf decl (bad) lods mov adc sub ja fwait mov jle push stos mov popf push jp cmp mov cs pushf scas pop inc pushf jp mov inc add in leave cmp mov data16 mov push pushf clc jmp inc sbb ja pushl dec push mov insb and mov pop pop xor xchg push mov lea lret and lahf dec mov lahf movsl mov cmpsl ljmp cld stos xchg mov ret cld pusha data16 xor das movsb lods sbb jle,pt pusha push stc ror enter stos sub (bad) or mov mov mov inc xlat lcall loopne mov cmpsb inc dec mov sub or scas pop add test mov pusha pop (bad) push out pushf and loopne mov ret dec in test ljmp lret jae push or add aas inc add push xchg or cmp stos fisubrl outsl aaa or pop outsl sarb scas jp movsl fbld add out and test or xor mov call cmp jae cli daa inc push lods or cld jo shl sbb sahf mov and aas outsb les mov lea push outsl cmc (bad) mov mov push out push sub or and iret mov lcall mov and push cmp rorb rorb xor push xchg daa cltd pop inc gs (bad) jb sbb xor add fs add jmp lcall sub xor out sbb testb dec (bad) in movsb stos ss (bad) mov add mull cld cld call daa fisttpll push add mov mov push (bad) fisttp lahf pushf or adc adc xlat iret adc mov call mov addr16 out lds inc pop aad cmp push push pop mov sub adc xchg jle ffreep les icebp out sub outsb jno mov xorl jp or dec daa fs (bad) adc fbstp push jg mov fcompl test stos es mov xor mov mov lret sbb rolb leave mov jmp jo jns dec into jnp xor test xlat inc popa dec aaa stc mov jg xor sahf ret dec dec xor jl lods inc jo jecxz or (bad) stos push jmp into cmp les pop mov push rcl addl movsb daa jl cld into in leave sbbb fidivrl loop mov lea or or xchg add lret cltd adc test (bad) repnz pop ret xchg outsl jo (bad) adc add in add into mov mov adc sti dec rcll dec lcall int3 dec or pop in or and mov mov sub xchg lods mov sbb adc lock fsubr cld das sti ret sub jecxz lods pop subl movsl xchg xchg outsb jmp adc je mov mov push cli mov mov xchg mov xchg rolb cmpsb sub stc divl jg je imull sti sub aaa add outsb rcrb loope dec pop push fs (bad) pop repnz cmp in inc or test add ds aad xchg call loope and movsl pushf dec (bad) stos pop sub imul inc xchg lret aas (bad) cmc rorl bound or fucomip cmp xor lods inc inc mov loopne std daa imul cmp sub icebp rcrl fdiv sub dec emms cmp or sub mov push testb pushf mov and jle mov lret dec in shlb push fildl sub jnp lea mov push inc xchg std test mov mov arpl mov dec ficomp lcall sub and ds cmp das pop xchg lret sbb (bad) xor lret shrl add push push jmp lret mov push push pop jp flds jb daa ja stos xor out sub add dec mov mov mov inc mov stos push push aaa cmpsl out cli mov mov pop shrl aaa fisttpll repz and jmp xchg inc mov lea cmc arpl test mov pop xor push shlb xor roll pop inc fsubrs cwtl (bad) cmp add jns push add bound (bad) mov mov pop dec repnz adc shrl popa insl mov insb lds insl and pop xchg negl jmp ss outsl (bad) fwait inc xchg pop les fisttpll adc cmpsl push (bad) in mov xlat xchg shrl inc mov sub add dec xor and jecxz mov jbe mov lods pop decb and stc (bad) int3 pop pop int3 in aas cs mov adc push test inc push dec dec or pushf mov xor (bad) lahf in fcoml push sbb cmpsl sahf ficomp in repnz sbb cmpsb fstp inc inc aam xchg mov outsl inc and (bad) adc sub and adc xlat rcr ret jecxz pop sub mov (bad) leave or mov and lret jle add fstl sbb cmpsb jbe data16 push mov xchg sbb (bad) orl xchg xor sbb xchg pop (bad) xchg push dec mov push leave movsb mov dec dec mov cmp popa daa popf mov (bad) lret push mov mov xchg sbb (bad) lds sbb mov scas and lcall imulb into xchg cs and mov mov repnz cwtl cmp fisubr mov test mov and mov in sub sbb mov sub movsb out or movb loope xchg notl sti stos push pop mov pop mov adc and and loopne xchg jns adc pop stos lret subl and adc sbb aam cmpsb jne mov inc mov jmp push mov pushf (bad) xchg pop mov fldcw jle dec xor sbbl push aas xor es test sbb pusha cmpsl scas push and inc sub sbb das rcr push shr pop inc ret jecxz push mov jecxz sub mov inc pop xchg sbb nop out sub and mov or inc adc fisubl cmpsl stos sbb add lea dec mov lods lods rol add xchg sub rep fisttp inc dec push imul neg and adc push fbstp mov cli pop (bad) dec sbb xchg dec inc mov jnp mov jg (bad) enter push sub mov mov jne xor xlat sbb xchg movsb fsts mov dec std fimul shrl (bad) mov es and (bad) mov cmp int fldenv ja rorb std cltd (bad) outsl in sub add xchg mov push fistpl sbb ret loopne jmp xor jne leave je xor xchg push pop mov xchg add (bad) mov lcall movsl inc cld adc out mov ret mov lea cmp push repnz movsl imul dec inc leave mov test outsb into xor dec jge add gs lcall pop inc lods inc pop mov pop mov and mov movsl loop push jnp in insb add mov push mov push push popf out mov xchg adc je les fs and mov js lds pushf mov pop cmp xchg sub (bad) mov jo xor aad sarl mov je jmp add mov (bad) dec cli xor out xor mov mov icebp jmp mov daa xchg xlat push stos pop sti xchg lret lret clc cmpsl mov or inc into or lret (bad) jecxz int xor pop jne (bad) sbb shr sbb jns lods jg mov popl cmp mov push lret aad jae aad sub out xchg pop inc add push cltd pop mov and fistp (bad) dec testl cs test mov scas pop repz out sub sahf lret jp jmp pushf test aam (bad) test aas jmp adc and mov in lock std push aad (bad) lret push ret cmp popf mov popa add jbe add scas push xchg push aad cmp inc lret loopne enter out pusha out mov fsubl mov mov sub sarb adc mov lds das mov cld mulb pop sub js mov push inc in aaa and loopne cli push pop fcmovu lea nop or mov lret fnclex into in inc xchg or cmp inc cmpl push add sbb xchg mov adc sub inc mov gs xor enter add mov je fisttpll imul scas js jae cli ljmp jnp pop pop roll test pusha mov leave into mov pop pi2fw outsb rcr mov lcall orl fdivrs jp iret dec adc adc mov push inc dec add cmpsb mov fs cltd popf lahf xor aas popf gs xor jnp xor ja jne mov sbb mov add push xchg in inc mov mov movsw incb sub out inc js out inc ja loopne push into or mov lods outsl adc (bad) (bad) addr16 in cmp scas mov lock cmpxchg scas js add xor femms jl push and push dec cld xchg mov cmc (bad) in push mov add pusha inc mov inc xor mov push movmskps std sbb dec outsl mov inc lock movsl sti and add lock adc es insb loop xor imul mov mov mov cmpsb hlt cmpsb test jmp push cld mov pop mov inc cmp nop and push adc int mov pushf lret sbbl sub fsts sbb enter ss ss lret xor inc cld loopne mov sahf icebp inc add add cmp loop mov (bad) xor enter fimul cmp repz popf sbb push dec sar jb push mov push pop (bad) push aaa outsl add data16 lret aas leave cmp shr mov arpl add repz es outsb push cmp out add and pop adc cmp stos ror insl dec jnp lret (bad) (bad) pushf cmp mov and call fistl into dec push adc fstpl adc pop sub stos xor jmp leave cmp cmpsb loopne pop movsl xchg inc pop mov pop cmp jb pop dec jb pop lahf popa dec cmc mov adc iret xor push add xor pop jg (bad) mov aaa popl iret subl mov sub cltd dec jp lret jne fidivr fwait repz ja mov cwtl jbe xchg fisubr inc in add inc fdiv dec cmp (bad) mov inc inc jmp mov daa repnz inc nop inc push inc and pavgw push mov dec lahf cld loopne ret xchg mov adc push clc lods mov sbb push (bad) mov lea test int3 in mov mov cmp add cmp js and and sbbl mov jb je insl push lock icebp push (bad) es and cmp push push xchg mov in mulb int3 mov cmpsb jb xor cmp cmp adc loope jecxz cmp je insl mov stos stc aas mov aad js shlb arpl (bad) jl,pn loopne shrl shrb out inc dec scas fwait dec insb out rol insb mov lcall mov adc test jno xchg in cmpsl push jae ret in bnd leave mov cli (bad) lock jge push out (bad) adc cs rcrl std pop xchg or push jmp stos repnz js (bad) ds adc jg adc in jge sub jbe lcall ja pop inc ret lods push inc (bad) fucom dec test xchg pop mov lahf mov or adc cwtl jns sbb scas movlhps jnp loopne in xchg iret jne jmp (bad) and (bad) in (bad) cmc xchg in icebp sbb pop scas imul bound add mov add mov push jp aad or pop (bad) in xor jmp lock test clc stos mov sahf mov aad outsl xchg cmp test xlat fsubrl adc mov cmpl mov ljmp cli lret push push jmp addr16 push clc test js mov out adc into cltd nop mov insl mov mov out into adc add adc inc lods push jle sub mov dec or adc push dec movsl jmp ret pop test dec mov sub lods dec lock or mov cltd mov xor or lcall test sbb xchg fwait inc fistpl scas adc aas mov dec add jb mov dec lcall jge es mov sbb fsubrl push cmc add fdivl les pop adc scas add int3 mov stc xchg adc into (bad) mov sub push mov pop xchg xchg cltd xchg mov es and mov (bad) mov sub sbb fwait sbb movsb push mov adc orl insb cmp loope lods es push mov (bad) xor js les leave ret and cwtl arpl inc inc add daa arpl cmp mov out sub jns push pop mov push cmc pop xchg lahf xchg cmpsb or xchg movsb fmul or fidiv xor leave out lcall pop xchg cmc pushf push ja daa mov push push fimull xchg and (bad) mov xor rol bound fstpl jns rcll push bound cmp and frstor dec lret lock cld loope mov xchg call gs inc pusha stos jnp mov scas ja add jnp fsubl push cwtl aam mov jmp xchg out out cmc jb stc jnp test sub xchg hlt adc add arpl ss call add jecxz repnz pushf pop out inc inc jp mov aas enter sbb push dec repnz xchg (bad) jg addb add xchg ret ja jb js es into pusha stos cmp adc cld mov lods xchg imul mov cmp rorb (bad) mov xchg mov sub jns into in arpl add push nop cltd pop mov sbb sub xchg and xor or rolb jecxz xor insl enter push inc and out lods xchg roll adc jle pusha inc stc jno movsl pop int cli fldcw addr16 ljmp sub push mov lahf push into dec jns mov adc sbb cmp xor addr16 mov subb out rorl push cmp movl fnop xlat mov adc int loop or dec in mov cmp loop popl insl sub jne cmp ss dec das jae divl jmp imul sbb xor insb fistpl or pop bound scas mov ds xchg out scas cmc sbb ds das enter outsl dec dec mov inc mov cmp mov cwtl scas sub iret jb (bad) leave lcall pop enter mov add xchg aad pop pushf stc mov ret jp pop jge lock adc inc cmp sbb out jae pop insb jle adc mov sahf mov in pop jg cmpsl sbb arpl cmp add out cli loope pop pop addr16 stos repnz addr16 fsubrl out inc ror aas ret cmpsl mov cmp dec inc leave hlt repz cmpsb jb pop push pop pop roll mov xchg (bad) lock mov pop xor jnp stc dec xor sbb (bad) stc repz xor sub sub push mov je mov add pop jae shrb loop cwtl sbb mov jge negl push mov out lea rol lods in dec test push int mov bound jns cmpsl mov jg push cmp sbb fisttpl movsb fisubrl jmp out or test inc cmp int3 movsl stos je sysret loope mov data16 jp adc adc mov dec subl push std insl mov push fsts mov mov push movsl xor ds add mov scas outsl fidivl aas xlat add stc pop pusha (bad) and test test in add idivl push insl jbe mov sub mov test mov adc cmp mov clc inc pop jge push lret aas pop test cmc in movsb lock data16 xchg push jl cmp jns test inc fisttpl fnstenv dec jno je imul cmp xor dec (bad) sbb gs sbb pop ret lods fldcw pushf scas cmp cltd cltd (bad) dec (bad) ds inc pop mov add pop cmp cmp sbb loop jae movl and je das rcr imul push xchg pop shrb in xchg dec mov movsb mov mov dec cwtl lret dec lcall (bad) sbb jl jp mov mov mov mov gs div nop or lcall add push in lds inc in cmpsb push rclb test and mov push mov push add push into inc dec in leave (bad) jle loopne jo xor xor sub scas cmp and push sbb add inc mov insb enter es mov or repnz pusha or mov cmpsb (bad) mov addr16 mov xor adc cwtl addr16 and dec fninit cli pop lea iret fidivr out jb lea out xchg jb pop mov mov pop pop iret mov sbb add push inc mov ja outsb out mov xor std mov scas sbb ja mov dec call in mov fimul mov sbb xor cmpsl dec jnp jp push insb push mov aad in pop aam mov mov arpl std xchg mov xor shr push scas xor loope inc adc sub lea jmp xchg mov inc push std push sub ret add clc sbb push inc mov fcomp sub xor and cmp inc jae mov ja mov movsb into loopne dec mov cltd pop push (bad) push mov inc fist jecxz (bad) inc or and or sbb sub andl insb sbb jle and les add insb inc xor pop xchg pop and loopne mov jb sbb sbb popf or cmpsl and movsb repz je mov dec push mov and mov or insl fdivr ljmp lahf addr16 push int (bad) fist in dec xor sbb mov pop es fiadd mov fiaddl push in adc iret in cwtl movsl xlat inc xchg loope pusha fs lret out jp push cmpsl scas push sub cltd outsb pop mov call leave adc mov leavew movsl ss push inc sbb push (bad) pop mov js mov enter cmp sbb and pop cmp out pop test push jne push mov dec mov loopne or xor cmp (bad) or dec dec add scas jnp (bad) shl rolb (bad) lea out or jmp add and add jb mov sbb loopne sbb lods mov ds xor invd inc andl (bad) mov jle out mov cmp xor inc test sub pop stos mov sbb cmp and push pop es in clc adc scas push cmc adc je lcall mov lret enter (bad) adc fdivs cmpsb xorb mov or pop test sbb std test mov in xchg sbb adc mov (bad) sub inc adc push xor add cmpsl xor out jne js jcxz pop xchg sbb push and dec or mov push adc jae les notb xlat (bad) mov pop xlat mov bound or inc js and push or add lcall adc adc repnz dec push inc inc mov iret in dec add xor or jle enter cmp or push mov ja cwtl sarb adc add pop in movsb into add push (bad) repnz stos loopne jle cmp (bad) sbb add push jnp ret cmpsb mov stos add mov mov hlt iret ficoml mov mov (bad) push and jmp push sti addr16 or in mov lods sbb repz xor mov jmp sub push (bad) mov sub js lret gs pop (bad) cmc mul xchg lods sub fwait in or rep pop inc adc cmp mov cmc xchg (bad) add inc pop jmp mov inc push and mov jmp stc dec lods cmc outsb cmc out xor js fdivl stos mov xor in test add int3 or nop jp cmp push test ja push and fdivrl xlat lds sub jnp fsubrl movsl pusha (bad) sub fwait les (bad) pop nop mov push cld sarb aam inc and mov out mov dec sub pop push dec cmc mov pop xchg mov adc stc repnz js cli test shr jb ficoml fwait scas call fwait (bad) clc lahf pop pop and scas loope mov lret arpl jmp mov jp mov xor pop sbb (bad) dec xchg scas iret inc jmp loop out stos ds push pushf xor xchg cmp jo mov pop mov sbb push xlat pop jno sti mov aas add sar repnz adc adc pop shr push push dec add ds adc jge mov out dec es ljmp ja xor mov bound adc lods leave push sti enter mov cmpsb gs out sti psllq icebp aam jge or test stos mov mov sbb pop push dec add mov out (bad) shrl and notb in and (bad) xor xor cmp adc ds and xorl dec out push enter ror jo imul daa ficoml xor imul pop pop je or out mov stos push pop and adc jp pop outsb shll mov imul add popa push js ret xor (bad) xor add xchg add sarl sbb mov mov and sbb dec iret adc cld jb cmp sub jge mov add push pop adc clc or push lea iret shlb stos mov in inc aaa or ss mov cs jmp inc push jp dec scas fwait cmp ja xchg std nop add pop sub pop imul out fisub arpl les mov dec aaa dec dec js icebp push (bad) xor jp arpl mov cmp or pop jae pop div movsl jmp dec adc rolb xlat add inc xlat popa (bad) push ljmp mov dec test pmullw jnp add adc add add imul pop ficomp xchg int sbb mov mov add stos pop push sbb push xor scas xchg mov xlat std dec pop cmp sub jle test in je and in mov inc pop xor movsb cmp leave or and or jg daa push push xor xor lahf ja push adc imul in repnz pop jb xor (bad) (bad) xor outsl pusha jae and inc mov adc dec dec fstl cmpsl mov fmull pop sub jle clc mov cmpsb sbb popf loop xlat add mov sub cmpsl push lods push andl hlt xor andb xchg inc pop push movsl and insl hlt xor xchg icebp jecxz daa fwait pop icebp mov pop loop not dec hlt fstpl lods nop (bad) jb sub jge inc scas mov pop dec sbb pop das pusha pop addr16 pop in sub mov mov repz jbe and mov or adc dec loop (bad) pop hlt in rorl xchg add out mov pop pop daa sti inc jae jo jge int fidiv mov mov (bad) sbb add divb in pop pop push jmp (bad) in pusha stc jp jne aam push sub out dec jae push int3 mov cmp cmp lods dec rcl jne pop outsl cld mov popf popf shr sbb loop xor cld mov mov bound mov daa mov mov sub mov sub pop jno push pusha mov pop adc call cli out pop mov mov cmp lds adc ss inc xchg jge addr16 gs pop xchg or enter arpl add rcl push ss lcall out (bad) out and xlat movsbl mov or data16 sbb arpl sub clc xor jno jae push mov xchg mov mov lahf imulb jo out push movsl lock mov inc mov in in push lock inc nop push in jo repz sub in mov cmc jns pusha inc int3 push (bad) mov ret add (bad) fwait xor dec xor repz or mov scas inc cmpsl adc stc mov ret je lods (bad) je cmp les aaa jno bound xchg push into pop push cmpsl fsubrl (bad) add icebp repnz jle push pop out shlb loopne je ds cmp dec push adc cmpsb arpl repnz int jl and (bad) aad (bad) icebp push pop dec mov xor jl repz in mov inc and mov (bad) scas aas cmc outsl mov das jo aad mov fildll pop inc xor add imul ficoml neg and xchg nop mov lret and popa call jo pop in mov dec push data16 imul orb scas (bad) lea imul repnz jns stc adc (bad) adc mull or jo push cmpsb out xchg outsb leave (bad) lret inc dec aad mov std fucomp pusha (bad) outsb adc loop cmp mov inc adc push cltd mov cmp in xchg hlt loopne mov mov addl push scas adc js inc adc push xchg ss adc andl lcall aas in mov stos fisub out jo jo add adc imul and out fs mov or pop out movsb jae pop add fidivr test in pop sbb push test dec les inc push rorl daa sbb int jne pop pushf shr jo and or cmc js jae lods xchg jmp loope sbb ds jns jns sbb pop movsl daa and xor (bad) fwait jnp imul mov imul icebp add pavgb dec add xor cmp or icebp or testl fimul add pop and fnstcw test cmp xor add mov and loopne jl pop lahf cmpb push call and aad cmc cltd sub (bad) xlat or leave pop push mov (bad) (bad) mov dec cmp bound xor or fisttp fs lea pop inc cmp mov cmpsl mov fadds rcrb mov pop push xchg popa mov mov pop test dec je int3 mov mov fsub xchg addr16 xchg (bad) mov push movl fsubl nop nop test pop fistpll sub popa rorl pop inc pusha sbb push inc pop cmp stc mov aas cli push arpl repnz or addr16 pop pop adc negl cs (bad) sbb cmpsl xor in jecxz cwtl push sbb inc pusha aas les popa mov xchg mov add push cmpsl dec push pop push test mov fnsave and fimul jae sahf jns mov scas stc push or (bad) faddp mov icebp cmp test repz push sbb ja sbb add sarl push xchg arpl lret mov cmp adc dec xchg addb addr16 in lcall jb mov xchg add mov pop and js insl push call stos jge mov cmp sbb mov and jp jb das cmp or and sub sub adc xor pop rcrl mov sbb lret pop cs sbb mov fwait ss cmp and (bad) dec mov mov aas repnz jecxz stos movsb cmp repnz sbb loopne ljmp imul rcll out push xchg adc mov stos cmc in test and xor mov roll ds das stos mov out je lods adc push cmp and leave fstpt pop jbe (bad) test sub jle mov xchg dec xchg mov repz push mov mov aas clc popa push inc push rorl and push mov jmp mov clc (bad) test inc inc aaa and mov jns and pop and adc push inc scas dec xchg enter mov adc hlt loope add cltd movsl rolb xor mov pop fisttpll adc cmp ja ss mov sbb ja mov into inc adc jge nop pusha jnp fnstcw sarl adc sahf adc nop lcall inc xchg dec xchg pop (bad) je lds sbbl xchg mov push mov fs clc and add and mov lahf fsubl xchg cld jecxz or push scas test push ds bound dec push (bad) dec dec push xchg fimul int fwait sub ret push movups xor inc and adc gs sbb out pop out jns,pt mov bound icebp adc stos push or leave push add aaa ja push cltd scas cmpsb addr16 or pop or rorb cmpsl pop das xchg and pop or lret daa shrl push rcrb fist stos inc and iret popl daa lret mov sub fdivp add cwtl dec jb sbb in into lret stos dec or adc daa movsl cmp inc fcomi push scas pop pop sti mov sbb jmp sbb aaa ja inc cwtl mov cmp mov stc pop adc or mov (bad) xor xor fdivl sahf add xor mov enter imul add (bad) inc sub ret dec js adc sbb ss rcl jne dec aaa mov lods push mov pop or sub out and dec jo scas inc push cmp add cmc lret (bad) push pushf mov imul or pop sub adc xor and insb dec out mov or sarl lret js shrb inc add out push (bad) rcrl jne dec cs shll cli bswap xor mov pop inc js pop aas or aas scas pop push jl mov jp add cwtl xlat jne lret sub scas xchg push rclb stos sub pop dec rcrb xchg adc and pop xor xchg or xor xor es adc es ret mov pop cs rorl std pusha xchg push jge fstp adc and push adc int3 cmp mov xchg jae fisttpl out lret sub inc mov add push xor loope call or sbb pushf fidivr xor sub push mov icebp and je push andl cmp mov cwtl inc daa ss pop xor mov les ret add icebp movsb fsubrl in lods sbb andl ficomp push xor cmp repnz dec jno cmpsb sub lcall mov loopne pop ret and sahf (bad) jle imul test fwait mov mov out cmp loopne fisttpll sbb repz loope xchg sub lods leave shll jp daa xchg mov cs ret sub cwtl add and jp mov xchg sbb mov lds xor add pop push fsubl ja leave sub xor dec xor mov jg pop icebp mov xchg (bad) lahf or stos mov cmc or mov sub sahf movsl xor (bad) mulb imul and sahf push inc xchg adc fmull nop cs aam xchg xchg push push xor add out or mov mov (bad) fs out punpcklwd test jae lret pop (bad) stc mov inc sub inc into mov outsl cmc sti add insl test lret pop sbb pop sbb ljmp cmp jnp enter jp jbe movsb cs mov arpl xor lds movsl aam jae clc or push mov ds push mov nop je and pop and or or mov out pop loopew and or cli sahf xlat push fisubl push sub push lret cmp movsl out adc and pop and sbb sub mov aas or lock (bad) lcall sbb or mov lods pushf adc scas gs inc aad xchg dec mov inc pop xor lock add xorl rolb out dec (bad) mov adc std or (bad) pop add or daa push sbb mov adc push popa les xchg xchg cli nop add xchg popa add nop cmp cmp repnz adc push or ret push sbb push cs insl rclb push shll into mov cmp inc sbb and add (bad) inc inc (bad) fmuls outsb cli cs rcll insb aaa movsb pop cli loope ss xorl pusha lahf imul jmp mov sbb fild repz popa (bad) ss (bad) fdivrl add jne cmpl mov sub dec sbb popa cmp or mov scas xor jne (bad) out aas cmp pop push insb sub cmpl in pusha mov xor int3 sub inc pop push fwait mov in int3 push pop adc cmc jmp js int3 aas sbb hlt test inc jnp cwtl iret adc outsb mov xchg loopne (bad) dec subl sarb and mov mov imul data16 jmp sub pop inc dec push push (bad) lret push arpl out mov push in sub divb dec adc test mov adc bound ret xor mov cli das bound mov movsb inc daa sti inc int int3 mov cltd mov data16 and add pusha mov push bound mov push aad out loop in popa or xor aad test shrl pushf into xor shrl or pushf arpl clc or (bad) mov scas xchg push sub and ror lods nop mov mov xchg mov pop pop pop fnstcw or xlat dec movsl xchg inc pop lock and stc hlt dec insl jae imul inc (bad) mov sbb cmp lret sbb aaa bound loope dec mov (bad) mov and or popa out outsb cltd push (bad) sbb out lret sbb sbb inc sar sti cmp aad dec mov adc xchg lods xor jl iret std rolb jmp adc je std std pop sub ret nop mov mov sbb push inc xchg lcall (bad) jbe adc xorb (bad) pusha pusha in push lret mov and mov out cmp inc or mov aaa dec in mov pop cmp xchg dec ret (bad) and adc faddl sub dec mov enter jo mov inc loopne xor sbb and out das ret adc in dec movl xorl out xchg pusha pusha or int3 dec cmc rcrb add cmpsb lret imul pop mov or ror pop push jae in xchg movsb lds stc movsb lds add xchg adc test outsb (bad) sub fdivl jae sbb bound mov jp and data16 popa sub sti mov pop rorb fcomps lods inc test xchg int3 mov lods sti lea mov inc es int3 arpl fwait popf rcll lds sbb push insl sarb push adc in ret add adc jnp jle shll push jp test jo cld xchg paddb (bad) prefetch out repz lahf push push pop cmpsl imul les shrl dec (bad) sarl scas mov dec mov sub mov out mov xor popf hlt outsl aam adc push cltd jns xor and cld out ss jecxz lahf dec dec adc adc xlat mov orl jnp daa (bad) xchg xorl ret mov pop jae lcall sbb repz dec xor insl mov dec movb lret dec pop inc mov jle mov xchg jecxz les out orb rcll divl and cmp xchg test lahf pop jo mov inc add dec push xchg data16 call mov loopne stos xchg inc cmp leave movsb cwtl push cmp dec pop aad xchg rcrl cmp sub repz cli inc stos pop push inc fs mov or fnstsw push pop (bad) push mov push xchg scas dec jmp test cmpl (bad) push push or and aad sub ret mov sbb xor xchg arpl jl lock shrl fcoms pop xlat and inc ret repz dec test push push stos fidivl mov nop stos push fisub and push mov inc xchg push sbb xor fs fst mov push and mov roll cmc daa jno xchg xor ficom jo mov dec add mov mov cmp imul (bad) jbe jl test outsl mov pop in in push sub or pop xchg sbb push or push xor push mov repnz or xor push fs pop (bad) push fisubl sub sbb xchg mov inc inc gs fsubs and push pop fistl loopne arpl ret scas je nop xor mov (bad) mov (bad) and repz lcall xchg pop add cmp jae scas dec daa sub int3 pushf test xor insl pop int mov nop add cmp mov loop mov sub addr16 pop or ds push pop stos pop rorb xchg bound sub stos std roll or inc hlt xchg push lods imul mov jecxz lret or adc pushl lods gs push mov mov das mov mov lds stc rcr into and xchg dec mov mov ret fwait mov es and cs pop mov out loope fiadd hlt xchg mov xchg push or pop clc sar push jl cmp je cmp lea adc popf cs fild dec and out mov cmc cmc sub pop mov or data16 dec pop aas (bad) loopne mov push pop pushw pop adc mov mov mov in in push push xor xchg pop out lea call jbe cld pusha push push test xchg mov jl dec sub pop shrl adc imul adc fdivp inc mov fmull insl daa mov mov js pushf pop decl push mov mov jp adc sub aas cwtl stos cmp outsb loope dec or (bad) sub in cmp xor data16 or xchg pop dec bound pop and lods sbb lea sub jl fs aaa cmpsl pusha ret outsb imulb xchg pop lret movsl dec test or int3 bound sub aaa scas sbb or jns lods mov mov inc lods cmc or and mov xor arpl or push clc insb movsl pop mov inc dec pushf xor popf (bad) pop je scas stos pop ss mov pop cmp mov xor cmp popf and xor stc mov jle cmp mov mov and popf adc pop inc sbb mov and imul mov gs repnz mov js enter jns loope jle je sahf lret mov jmp jns clc addr16 stos pop enter int push in (bad) push dec inc imul pop stos push mov shrl sub in mov jae ds or mov mov push int pop push xor pushf movsb fs sbb pop xchg jmp call in sti cmp fistl mov ror clc sub cmp nop dec mov push mov (bad) xor clc inc pop into insb andl push cmp les stc or sbb cltd adc dec xchg mov ret scas cmp sbb dec clc jp les adc (bad) xor (bad) je and jb push fs test call mov push div (bad) lock subb in sbb push mov (bad) push fistpll xchg sbb fs cmc lea les sbb popa cli scas pop dec ja mov in push adc xchg mov adc ljmp (bad) aam insl adc xchg pop cwtl xchg inc mov andl push fsubrs mov jae call imul sub jno mov cmp call push mov loopne (bad) fimull test fucom cmp and cmp fstpl sub cmc and push gs dec arpl pop cmc cmp jle mov rcrl popa jg lret adc push inc xor insl mov push sti cwtl pop rorb and ds inc sbb xor xor rep dec sub (bad) xor or pop jmp addl sbb test sub fs mov push dec cmp lock dec or jne popa mov ds mov mov jno push mov pop cmp sbb int adc negb jae xchg test movsl xchg xlat (bad) mov or dec rol (bad) mov xchg and xchg sub bound inc outsl add in pop pop lods bound (bad) pop lods sbb out mov mov addr16 push push jmp out sbb add nop mov jb sbbb dec test pop test sub xchg mov insb and adc stos sbb daa icebp inc xor push fdivl or dec cld (bad) pop (bad) call adc lahf in xorl adcb out ja arpl je lcall or lahf inc push enter icebp aam scas int3 loope mov jl lds jns cld adc loop push shll insb mov jmp cmpsl icebp cmp inc push sahf sbb push mov addr16 cmp icebp add test leave cmp inc pop push inc mov pop repz or jg hlt and (bad) xor jbe daa je push lahf sahf (bad) push push insl and ja jo iret out and movsb (bad) dec fstl mov fwait add dec imul (bad) bound cmp push test pop cmpsl mov scas aam out xor sbb push unpcklps jno cmp adc cmp nop aaa and pop and cmp cwtl xchg jbe je mov jecxz cmp dec pushf xchg mov cmp imul pop cld or jge jg inc lea mov dec jecxz not ret sub mov cmpsl jns pop xor fprem sub (bad) mov push stos pop push and fcompl mov pmulhw or xchg ret push mov add scas mov xor xlat lea adc into dec jle inc pushf sbb mov push cmp call jl lods add cmpl fcompl adc outsl in pop icebp push mov cmp or push and clc imul loope pop mov iret fstps or pop add jmp add outsl in es jg pop aas or loop lock sbb cmpsb lahf cltd push stos lret or shrb out dec stos mov sbb scas loopne mov mov dec add test push jecxz xor inc jbe cltd dec dec jns stos xor add cltd aas loop rcr adc pop inc popf push mov lods into (bad) fisub ss shrl enter push dec fsubrl enter xchg pop mov sti rcr pop loopne loope xor push fnsave mov mov jne adc (bad) mov and xor call add cmpsl sahf xchg pop into stc mov (bad) cmp mov jg insb in dec icebp jno orl in and sbb fs sbb xchg aas push mov sarb mulb dec pop xor pop dec pop (bad) cmc orl mov dec mov clc int3 add stos data16 cmpsl lods enter xor xchg fmul jbe inc outsl push cmc int sbb popf mov mov sbb mov inc loop lock sahf mov push push cmp jle fildll sahf adc jg push mov mov push sub or jg inc jno inc out xchg sti cmc add ret jo test rorb out xchg or test lcall vmptrst enter ds shrl jb push xorl inc mov pop lods insb sub out xchg pushf or (bad) or fcompl jbe inc xor aad pop jb aad ss out cmp add jmp popa push sub outsb roll aam pop stos adc fnstenv ret inc adc out jmp test cld (bad) ljmp push sub push mov test mov cwtl inc xor mov aad mov ja pop cwtl fwait push cmp mov xor jno pop add out loope push fbld imul daa idivb lret cmp aam push sub (bad) inc and popa das fisub mov int3 imulb jp or out (bad) push cld aas mov ja xchg test mov pop fiadd cmpsb movl in lret push xlat mov (bad) out test adc daa pop push add jl int aas mov sti shl lret jb clc lods sub gs mov mov iret arpl xor xor mov jmp push addr16 pop mov pop mov or sbb out (bad) xchg xor sub jg int3 or jmp fmuls ss mov fwait (bad) aam inc dec das dec or call or popa in mov jne push xchg (bad) dec sbb cmpsb (bad) mov mov or loopne add pop cmp or sub pop jnp sbbb ds call push pop icebp and mov xor jae mov add fmulp sbbb aaa stc fstl and pop nop adc pushl cmp icebp popf dec test dec popa jb adc scas push bound rcrl xchg test mov push repz push xchg jnp frstor dec and lret cwtl rorl leave or fwait mov adcb jge mov jl fstl test and (bad) rcrl faddl xor (bad) enter xor test jmp iret loop xor loopne push popl push xor bound inc dec jl test mov ret mov push sub fild inc push sub pop mov mov sahf mov fsubrl (bad) mov je pusha dec ret dec xchg inc inc or sbb movsl repz sbb aam xchg repz mov ja rorl (bad) mov sbb sarl ds ret cwtl int3 dec mov fistp les fwait jge jmp dec push cmp xchg imul mov push lret notl pop or cmpsb addr16 movsl jno iret daa std jns add xchg cmp icebp jne ror cltd imul dec xchg dec cmp jns cwtl les mov jecxz sbb add iret and and je push sahf sub ds sti mov sbb mov jge movsl hlt pop adc test jmp push sbb dec js mov push sub std testb xor (bad) imul data16 adc xchg test mov and adc mov cmp inc adc pop or or lea ret mov cmp or icebp in (bad) jb dec add lahf outsl mov in leave ret cld xor cmc icebp cltd nop or push loopne adc sahf pop xchg or push jb jge nop cmp int3 mov fwait mov sbb adc in or pop xchg nop mov lret test jnp and add mov sarb js inc inc scas addr16 nop aam dec xchg sub ljmp insb mov psubw xlat cmp movsb cld pop call outsb div dec jmp and push sub shll xor in pushf lea xchg dec (bad) outsl in sbb cmp xor sbb dec jecxz jmp popf sub addr16 loope add sbb (bad) leave imul sbb push fwait (bad) hlt aaa jge fldenv push and fcompl (bad) (bad) lods dec repnz sub (bad) jne pop std xor mov (bad) lret sub mov push pop mov fistp lret into mov xchg daa pop push shrb lods cmp in out or add lea mov pop adc in ss rorb sub ret aad mov imul flds ja (bad) or dec rolb jns or out out daa outsl cmpsb jmp and mov cmp push subl lods mov aas (bad) icebp adc xchg scas sti fnstcw and mov clc lock jns cmp ds test aaa xchg or jns cmp cli add mov dec in fcmovnu cmp fwait xchg mov movsl aad or mov (bad) jns cli add leave (bad) out xchg scas pop add jl jg mov jns mov repz xor loope xor push sub mov jp imul xchg cmp and stos xor push jge inc jnp push int adc sbb test getsec loope mov scas xchg or negl mov ja dec mov (bad) push xchg lds jp int incl scas lret xchg xor sub pop dec test dec in jmp push cmpsb (bad) fimul xor mov rolb xchg lods xchg push cmpsl sbb xor cmp inc idivl xchg push push pop xor daa pop test xor jne in shrb sub cmc out jge out cltd fwait xchg mov dec pop insb sub mul xor ficoml add xchg mov push adc inc dec adc jns faddl add cmp mov adc xor pusha fdivs test cmc in mov pop mov add mov mov movsl push and bnd daa call jno push ret scas dec adc mov push sub mov std inc jge aad popa test mov pop iret dec mov push cmp inc aam xor cmp inc sahf add mov mov sbb lret jmp test stos lcall pop inc lods add or cmp push test dec cmp dec movsl dec lods push inc cwtl popa push pop inc jo sbb dec rolb sbb scas lock ret cmc out hlt xor adc imul dec (bad) (bad) jns sahf lea mov xor test pop stos jb ret mov (bad) mov add push pop mov xchg mov iret mov shrl sub into pop sub add or hlt sub dec cmp cwtl add repnz dec inc and (bad) sbb sbb and imul sub pop push pop xchg aam mov popa add mov sbb (bad) pop int adc jae enter (bad) and loope dec dec or negl lods bound inc mov mov dec adc or rclb cmp or dec push sub (bad) mov insb push pop enter (bad) inc and cmp je jb pop mov cli cltd sbbl push daa enter sbb out es in fidiv lret pushf dec in cmovle or and into push out cmp aam jg or gs mov xor test rcr or jbe dec adc cwtl lret clc lds negb or jg rcrl push inc outsl mov jg mov movsb ficomp push xchg lods loopne cmc test fistl call bnd adc mov stc mov push out movb (bad) pushf cbtw iret jae bound mov xchg out paddusb int3 rcrb inc push mov pop cmp sbb jo dec cmc push xchg push cmpsl fs mov and push adc pop dec imul push lret (bad) arpl fdivrs mov out sub xor lret mov fldt and ljmp sbb add leave sbb std xor add in pop call lock push inc das lds int jp inc push or cwtl xchg sar sahf leave and ds dec pop movsl sbb test repnz add and mov and sub (bad) push ja lret loope jo scas inc xchg in fldl pusha dec stos push jle loopne mov add cmp loop lret jle push test test fnstsw dec outsl mov test xchg addl cltd push add xchg add out roll fs xchg rcll mov xchg mov or cld jp sar dec and xchg xchg push aad dec inc mov ss adcl lods jnp dec fwait inc cs (bad) sbb mov fistp push cmp popf lods xor ret lahf cmc and lock lret cmp dec jnp jae hlt adc and jbe xor lock add dec mov movsl js cltd out fcmovnu push xor inc stc arpl add lret loop stc ret adc cs aas dec and dec insl lds pop push and aas cmp cmp xchg int or push and call es aas fprem1 xchg aam je adcl rcrl pop les test inc cmpsl ljmp arpl sub sahf push repnz and xor stc ficoml adcl negl loope lret xchg push cmp mov jle jbe mov (bad) or movsb add rcrb negl into in or pop je jno scas add sbb and pop (bad) movb inc push cmp clc mov push test inc jb fstl xchg in jecxz and jns movsl jmp push fcoms sbb add pusha jne popa mov hlt cmpsb and mov sti or addr16 das mov jb shll dec push or subl (bad) cwtl into gs or jge cs test xchg or int3 or or inc enter jno enter (bad) sti pop out xor pusha in pushf inc int push lret adc in bound jg repnz jbe gs mov bound in rclb shr call mov jo and pop or cwtl or out call jecxz jne jecxz jns xor push ss push xchg out sbb dec (bad) pop lea hlt push mov pushf or sub test xchg cli (bad) repnz out pop mov push (bad) fimul sahf pop dec lret cwtl loop add shl inc in (bad) inc lcall mov lock xor xchg mov ret lret jae call mov sarl jg sub cmp daa leave and cli dec sti sbb mov push testb negl popf push inc stos lock mov mov mov inc ficompl lods (bad) dec scas adc mov std popa rcr shlb ds push in or std inc (bad) popa jno (bad) and arpl sbb push mov mov ret mov lds rorb or push pushf mov push adc inc fwait xchg pop lret rcrb mov int3 dec scas (bad) aas iret and xchg xor sbb xlat aas nop dec sub testl (bad) ds das inc jg xchg fst fimul xchg push rorl iret aam cmp das xchg ret stos stc pop lahf xor out lret (bad) das in or (bad) mov sbb and in sbb cs ss cmp jecxz jmp pusha loopne cmc xchg lret nop sbb sub sahf negl es xor xor stos or mov cs xchg sbb in xor fwait push rolb in add ret xchg in sbb pop decl sbb popa (bad) fadds out xorl ret xor jno outsb cltd adc repnz dec out cmp push es or jbe mov cmpsl push pusha push mov (bad) icebp (bad) rcll mov insb jmp mov and rorl fdivrl xor xchg aas mov dec negl sbb bound cld leave or or cmp frndint pop pop repnz imul outsl cmp dec notl sub (bad) mov mov pop sub lret jp xlat fldl fdivrl sbb scas lea ja (bad) fsts add insb fld add dec in lea out sub gs adc lds xorl pushf popa mov cmp inc arpl stos inc adc sti mov cmpsb out popa cli lods push add imul hlt xchg jns,pn mov les xchg pop je clc popa cmp jne sub mov xchg lock aad leave (bad) xor dec sbb push lret repnz movsl mov mov (bad) cmc jbe adc xchg sub pop lock sahf cs mov ror inc (bad) mov and jp xchg fcmove sbb test jge push sahf rorl fistl xor lea test pop shrl and cli push and push mov and mov sar cmpl xor aad ret mov mov adc movsl pushf mov (bad) bound add and pop mov adc inc ret mov xor lahf jecxz push jp or mov cvtps2pd mov dec in dec dec loop ds and rolb sub jno (bad) mov mov push (bad) dec pop or cmc sbb dec mov push lea jp mov addr16 push test in cmp call mov dec loop or sbb nop jg ret test loope dec iret adc mov sbbl add push push addr16 dec mov cmp test fisubl std and enter mov (bad) sbb movsb shrb sbb xorl mov aas lahf outsb iret inc and mov inc std in cmp lret fs cmp jmp es (bad) xor mov push xor push cmp jo aad push (bad) ficompl inc movsb (bad) push sti jl inc daa sub sbbl add mov int3 fistl mov iret (bad) aad jmp aas fnstsw sysret mov pop push int3 push outsb sub pushf sub lock pop jae adc cmc nop rolb add addl xor add cltd outsb cltd iret xchg lods cltd or shr jle shr xchg mov mov lea pusha xlat stc cmp xchg jnp push adc call sub pop adc test stos jo lcall std les addr16 mov or loop lods (bad) call shr je imul je inc sbb lcall aam shll mov imul lea or bound pusha mov dec mov enter pop cmp and jno or enter (bad) jl jno mov jo outsl shll mov jne xchg jae xchg leave adc das out ljmp sbb out pop mov (bad) shll out sbb sbb pop (bad) je test (bad) icebp je lds (bad) (bad) std push lods notl fimul fstp or test psllq mov adc stos pop sbbb icebp test mov lods (bad) popa jg dec imul js adc imul movzbl rcrl jge aam orl jg dec mov cmc push jns adcb dec xchg insb and and test jnp jmp daa add incl in pop pop mov jecxz push pop js mov pop imul xor xor in jl mov pop ret in push sbb lcall into mov xor xchg xor ljmp in sub adc in aaa popa ret cwtl ja imul push jge or int adc cmp pop cwtl js jg (bad) push push jmp ja sub mov sub adc jmp movsb inc pop fld arpl clc sub cmc in mov dec push pop xlat ficoml push push das enter je (bad) jg cs popf (bad) mov xor inc inc fcmovne mov sti aad cmp cld imulb cwtl cmp xchg lret cmc imul enter sbb mov xor fnstcw sti dec sub sub nop fdivrs outsb in or out (bad) (bad) jnp lret pop addr16 dec pusha xchg adc fsubrl les sti add leave aaa mov cmp jo iret popa fisttpl lahf dec cmp in dec scas push cmp adc add dec in or sbb (bad) mov leave add and or sbb shrl xor jmp cltd pop lahf dec aam xchg or dec (bad) ss rorl mov xchg sahf dec fidivrl inc loopne sbb add push and jg loop rolb sub inc stos cltd mov icebp mov popf (bad) jbe pop dec shrl mov (bad) sub push jmp sub jl ss push inc scas test xchg loopne int3 cmove negl mov cmp or mov loopne (bad) dec nop inc lret or in sub fwait lret fcoml repnz outsl inc bound and lods pusha mov andl aaa jb adc mov pop call idiv cmp fistpll xor cmpl lods xchg imul movsb sbb lret pop clc in xchg or (bad) icebp mov fadd in scas outsb pop pop push icebp imul jb decb push or (bad) xor test sbb ds push add xchg dec sbb call int pushf mov and jg pushf shrw jmp pop shl cmp mov outsb pop rorl cmp aas fsubp mov fsubl ret adc test push rcrb sub lea sbb add lods aas fimul push (bad) pop mov frstor sti ja push jge ret lods sub movsl push xchg jl push sub sti pop or (bad) dec mov and jecxz in and aam lea out mov sub inc das and and popa cmp ja lods mov fnstenv fadds sbb (bad) divb sbb cmp arpl movsl or pop enter xor xchg jl pop jmp jle xchg loopne jp dec imul and and dec sbb (bad) lret pop stos mov and push jb mov lret add xor sub sub mov into (bad) mov outsb add les add sahf mov inc pop out mov (bad) (bad) popf dec dec pop sbb pop scas int3 es (bad) sarb (bad) scas pop outsl dec mov rorb xor cs pop test ljmp cmp xor ret out shrd mov in movntq out adc lods shll inc fidivl or pop push pop fistl popa inc xchg pop int3 mov adc or mov xchg jmp pop or ror mov arpl mov shr push or cs dec mov (bad) into mov inc jge test test mov test stos push daa push sub outsl inc loop sbb sub mov loope outsl jmp push dec (bad) fld mov xchg aam mov pop iret push cmp inc or pop mov ss daa gs popf hlt mov mov dec out adc sbb mov pop shl mov xchg dec jp stc pusha xor cs fs push movsb in mov pop fldcw and lret insb mov ror jmp repnz push cs mov (bad) xchg xor push retw sahf xor repnz shl adc (bad) jo loope or test leave loop cs push (bad) shrl jnp (bad) xor mov wrmsr jl (bad) (bad) lahf dec inc xchg in fwait xchg dec pop sti and es call repnz arpl push sub je mov jp aad mov push mov pop stos jnp or call cmpsb int jno lock xor jno jp movsl scas test and mov push mov test jnp jp nop je psubw mov popa fwait cs sub push cwtl dec inc xor and mov xchg pop mov loopne mov cmp sub cmp xor in inc mov cmp imul pop mov out mull rorb sub aaa les push gs repnz mov test xor and adc mov lods lcall lret xor mov mov dec stos and leave hlt pop sahf fwait ljmp (bad) mov pop rcrb insl add cmp stos bound insb sbb jg dec repz and loop daa jbe fs push in mov sar sbb xchg or xchg mov lods into mov repz (bad) jno ss testl mov movsl jp push sub lcall cld clc scas adc test mov iret push dec pop inc pop ljmp movsb ror lcall outsb mov xor cld adcl xchg cmp fmuls add xor xor adc aas pop repnz inc loope and imul push shrb or cltd mov xlat xchg jns lods xchg fsubs nop lea imul (bad) in mov jge mov sbb in add icebp ret ret loopne popf test add bound int3 inc lods add jge mov push insb dec out xor sbb mov mov push add movsl cmp cmp mov mov push (bad) out bound rclb pop jmp in daa xchg or in punpckhwd xchg idiv loopne or inc adc push cwtl xchg mov sub mov in xlat add jmp movsb xchg pop jnp (bad) fcoms lret inc and psrld leave xchg push mov pusha test incl mov add adc and and sbb in pop mov fidivrl sbb hlt and add mov stc inc notb xor add pop sbb nop xchg in test or pop push and xor pop fs xlat push adc inc jge inc add mov aam in jge or clc add and sbb xor mov dec gs mov lcall orb or and (bad) push enter (bad) and mov icebp xchg mov cmp out cmp scas lcall dec xorb cmp sub mov pushf xor shrb inc cli mov mov mov les out jno sti or fldcw out int or daa popa push mov cltd add cmp int pushf add loop es lock mov fsts mov dec or xor add add xor add jno not sub std pop cmpl or das leave popa lcall cmp jns inc (bad) xor adc icebp xchg or cltd pop sbb popf cmp xchg arpl mov int3 fs lods dec xor pop xchg popl adc pusha call cli inc dec out daa xor dec cmp sbb sbb sti sbb add fisttpl sbb std pop adc stos test jns imul mov pusha (bad) stos add or in (bad) je call or clc jae lods sbb js mov mov cli outsb sbb loop inc int3 mov sub icebp fsubrl addr16 cli decb pushf nop aaa fs jl pop movl inc ja push sarb sti fcmove cmp sub sbb sub cmc (bad) jne or in fmulp or or ret and adc out sub pop popf inc adc fadd (bad) jecxz jge pop or xchg add pushf pop sub jne jnp jecxz insl gs insb and sbb addb ja in loopne out mov incb inc roll inc es sbb fmull int3 or jnp push nop dec push jl push mov pop and or out decb je pop fist fist leave dec fmulp push std ljmp in jnp jno shlb je dec inc fwait jae and scas push mov or lahf cli add addr16 or xchg push loop add mov pusha cmp add xor (bad) mov pop pop ret and hlt xor fist adc dec (bad) xlat pop in push les pop into loope in or xchg cld cli lds mov jp or scas fsubrl aad shrl pop mov cmp dec and pop mov cltd into (bad) leave jb adc repz cld enter imul (bad) jp or ds cld je rcrb mov push stos dec cmp and mov stc mulb pop jae xor imulb adc cmp nop int or mov push pop mov bound pop mov xchg scas je jo call pop xor pop (bad) xor pop je cwtl inc lret sbb ljmp sub repnz sbb push ja pusha dec xchg outsb int3 into out fld inc mov or cmp dec test popa mov cld cmpsl or arpl cmc lcall jb mov test sbb cs mov pusha jge pop push sbb xlat push inc xchg scas mov jl std out adc scas jno ror je repz stc cli adcl lret adc mov repnz (bad) sbb lret fidiv push andb fwait lods imul rclb push sub jno mov push test xor scas or icebp mov ds xor xchg std scas (bad) cmp jb jno cmp and xchg hlt inc jp sbb pushf aaa mov sbb (bad) outsl (bad) mov jae xor imul cli mov pop lock mov jp xor jb mov ret stc add dec mov (bad) roll pop jp fnstcw movsl out arpl arpl sub test test add loope mov pop ljmp jmp xor psubw pop push adc repz je push mov xor test andl divl (bad) jae lret cli mov inc cmp imul out bound sub cmp inc mov push nop loope imul lods fnstcw ficom or shll add xor sbb sbbl add lret mov arpl adc jl mov jne and inc (bad) in icebp sub fs jae pop or scas scas stos sahf pop push xor outsl aas mov sti fidivr outsb lds outsl jne or add fxch or sbb adc mov adc insb dec jno dec and lds pop cltd jle pop dec or fwait mov loope mov push xor mov mov push test jecxz and iret pop inc sub aam pop aam pushf outsl sub pop and arpl inc ret shr pop xchg aad xchg push loopne aaa pop (bad) push mov add xor shrb push adc cmc inc enter jge imul adc test ja out adc nop push jmp mov (bad) loopne jo push stos ja add mov or es mov imul sbb fsubl mov (bad) xchg (bad) xor sub xchg lods add and shrl dec jle test into leave outsl add leave inc fadds push and lock sbb lea inc or lds (bad) aad push mov jge add dec dec cmc pop lahf fdiv loopne xlat sub cmp jmp cld (bad) and les sbb pushf dec lock in es mov xchg fnclex xor xor cmc push mov call sub sbb inc lcallw lock xlat push fisttp jecxz (bad) and or push imulb mov lds jecxz inc xchg mov cmpsl adc es dec or dec jge push das pushf sub (bad) imul loopne sub inc imul or mov addb pop bound into push aaa test inc mov movsb jl lret cmp fcomps add (bad) xlat mov adc sbb popa lods fcoml cmc push daa push iret inc dec popa jnp dec lds scas dec sti pop rorl lcall sub xchg clc or and dec outsl mov fwait ss sbb push add mov loope jle pop adc scas mov pop xor hlt ficomp or inc insl cmp bsf cli push ja int jle daa lret adc loopne and leave mov fistp cmpsl pop ja aaa mov fs clc and add jg (bad) mov lret mov js daa in mov (bad) sbb sti xor sub and int loope insl (bad) xchg jge lcall jbe stc mov inc (bad) cmpsl (bad) mov (bad) and mov and and mov jecxz jp (bad) mov fldcw adc (bad) fistp aaa cmp cmp out iret sti or (bad) popf sbb adc outsl sahf fdivrl xor (bad) add jnp sbb push data16 cmp mov std pop mov ficomp push popa fstl mov sub (bad) jnp pop adc pop lcall out in mov lods push pusha pushf and lahf setbe ljmp mov mov call push push repz dec mov hlt pop outsl bnd insb jb scas outsl mov out iret gs push push sub push sub mov popl nop sbb sbb fistp dec out mov pop mov cmp xchg sbb sarl push jecxz push gs lods sbb pushf popf stos cmp xor stos mov (bad) mov fimull mov sub mov xchg test sbb jnp mov mov imul fcomps and pop stos adc fwait pop stc out inc ficom adc cmp push mov push lock xchg aam sbb test jmp inc add mov das cmpsl xor mov cli ret cs test hlt push (bad) xchg inc sbb fildl aas xchg dec aad pushf mov daa fimul sub push sbb mov dec xor sub cmp push or inc aad lods (bad) sub out repnz outsb push adc (bad) stos (bad) shlb dec test aam adc clc mov adc ret in decb enter andl lea xor mov sbb and cmp sti adc lcall mov loope rcr jmp inc pop jb lahf jle cld mov push loop gs sub xor jnp fs ret pop and pushf mov mov (bad) out push inc dec lea dec inc dec pusha sbb add xchg popa jb test insb iret mov mov (bad) aam nop fbstp xor faddl jg js mov lods aaa mov or cli imull jl cmp leave cli mov push (bad) pushf je adc pop data16 dec push pop aaa push mov (bad) out and mov or cmp iret sar xor cmp inc shll xor cmc in add (bad) loopne hlt outsb hlt aaa (bad) icebp push (bad) lahf jge enter ja sub push xlat cltd into pop mov or loopne adc fidivr insl lret jns,pt pop lretw jo inc sub insl das cmp dec mov dec mov push out or xor xor mov mov aas imul dec popa pop jge and stos inc pop popa adc and jg,pn push add adc or jge cs mov enter mov subl mov loopne mov insb aaa in or outsb jnp pop adc (bad) xor jg jl test outsb xlat dec and je jl orl push push mov push addl clc lock shrb inc push loope push mov adc ret pop cwtl loope mov mov sbb lods ja jmp adc fmull pop fadds jge mov (bad) adc test jo sub push push gs inc bound xchg nop in inc sub lahf push jnp stc sub dec pop xor in dec ret xchg add (bad) and divl cmp dec xlat mov xor insb sub leave cmc adcb out dec jb mov cmp sub nop dec hlt sub mov xchg test fs pop enter rol orl xor jecxz mov cmc push mov ds mov sub adc cmp add xor ljmp jbe add mov mul xchg xor ficom xchg lahf bnd outsb sub jge sahf inc mov fistpll les arpl sbb pop lock and xchg inc mov sbb out xor jne popf mov scas sbb sbb movsl ds push mov aas insl jns gs inc xor and ja xchg pop out mov sub mov iret es push fcmovb aaa imul dec xchg sub (bad) lods outsb lods (bad) ret sti pushf ret (bad) (bad) lods lods stc xchg icebp mov or or data16 fwait push mov xchg xchg mov popa adc mov ljmp adc adc or test loopne gs fs push (bad) aaa cli es push push icebp or jae or dec daa or push shlb jns xchg pop inc xchg ljmp pop js jne lahf bound movb xlat stos jmp stos aaa push imul sbb je aad jno pop push ret push and inc and pop ret loope loope xchg fistpl mov push hlt cmp je inc dec adc lds mov jmp leave stc aaa sbb lds push arpl jae jp add mov aad pop and cmpsl push adc cld or inc jae dec mov lock loopne sti das inc and sbb enter xchg ret daa push inc mov mov push or jae cmp mov jns push xor xchg sahf sti lods mov xor sbb idiv add xor aam jnp and dec xor add push in jecxz ja mov xor pushf pop insl push mov sbb cmovae (bad) dec inc (bad) int3 aas mov mov out gs test (bad) sahf xor pop push data16 cmpb fwait xor popf icebp mov cli dec mov sarl cld push rorl aam sbb sti daa data16 (bad) faddl lret push jle xchg imul aam xchg lock ret mul mov sbb xchg (bad) mov add mov dec jo inc jno adc lds shr xchg pop xchg cmpsl clc mov fistpll xchg scas xchg xor dec dec push bound (bad) mov enter je or into mov sub inc je in js add xor incl in push out jbe ljmp mov adc cmp adc mov bswap out aad pusha (bad) xlat mov adc add in and icebp mov dec out jl push imul cs jne aaa fsts rolb lahf loopne aam rclb mov clc sbbl jle (bad) jno movsl pop pop gs (bad) dec and jmp outsl add cmp adc stos (bad) cld out mov les xchg hlt jnp pop or xchg jp inc (bad) or cmp cmpsl lret setl and xchg lods jns xchg iret test jae sarl or push mov addr16 jb add inc pop leave dec push stc jnp push xor xchg mov out mov or mov cmpsl mov adc xor sub into mov pop inc in scas outsl fldl push push xlat pop push inc dec fidiv sbb jl push mov pop stos test fstpt xchg adc add push pop ja mov mov fstps rcrl mov mov xchg inc iret or sbb or stos pushf jo (bad) add lret (bad) shrb xchg (bad) mov or leave stos jg xchg xchg jp (bad) jp imul mov mov mov testl ljmp sbb xor mov loope jnp cmpsb xchg dec mov pushf imul ja shlb adc jecxz stos imulb or lods dec cmpsb inc add es out xchg gs out or or mov in adc inc pushf jne xor mull dec je outsl jb pop mov test pop mov sbb std mov sti cld sbb sbb outsb je cmpsl pop mov bound jae movsb push movsl hlt icebp jo test push arpl cld lahf jge sarb or xor das xlat adc rclb sub ficom xchg sti andb or lret dec aas dec jp (bad) je pop and sbb stos lock mov jge iret or xchg cmpsl loop push scas sbb pop push add push adc scas mov pop push dec sbb xchg scas leave adc scas sbb pusha sqrtps cwtl cmpl jne xor jo in call lahf lods jae aam testl ret out addr16 jge imul dec andb or xchg mov mov and rcrl inc push js push lret pop mov pop dec jg imul jge cmp ret dec sbb insb jbe push pop test xchg cwtl addr16 adc pop jo ja mov call mov js jns lds ljmp int3 insl lock lock imul jae cmc lds pushf pop push push jnp (bad) into in in mov and pushf xor loopne mov cmp and dec mov mov incl ffreep into lcall pushf bound adc mov jp push imul fdivrl push inc mov xchg inc pop inc shrb or pop inc mov enter aad sub idiv negl xchg lret int3 inc jno or (bad) lock xchg fwait or test mov xor pop lret sub add add test add pop (bad) in dec cltd arpl (bad) sbb cli cltd xchg or or cmp jne inc add insl mov pop jmp loope or or inc or lret lcall inc iret repnz loope cmp fwait in mov ss repnz or inc sub or mov test sub aam fisubl icebp mov adc notl jle pop push (bad) jbe dec fwait lret mov loopne add push lret ret cmp stc xchg adc xchg sbb cmp data16 push sti fild pop or out mov mov (bad) data16 xorb inc push call cltd stc out xchg fsubl sti cmpps xchg ds jmp mov mov add or das xor stos mov adc adc pop (bad) popf mov pusha ficoml pop daa jns lret insb sub fwait adc js sub adc jae fisubr mov iret repz out shr jbe rclb test fcompl into clc pusha mov int3 and mov insb jo or out lock xor and out shl xchg cmp in lock sbb mov movl xchg cmp aad leave sbb mov mov rclb ja jmp (bad) lea cmp clc rolb out sbb in enter lock sbb mov mov push mov adc inc (bad) fidiv adc inc mov loop add cmpsl test inc pop ret rolb rolb faddp hlt add push pop adc cltd xchg movsb jg push popa push ror std cwtl std jmp jmp sub pusha out adc popf rcll lret mov or je cwtl vsubps add xchg lock mov outsl (bad) inc adc adc push dec push jp push loopne ss int3 rcll sbb sbb pop mov and lcall mov pop stos adc pop mov jg mov lret fcmovnu adc xchg test lret mov mov xlat lcall subl xchg movsl pop sub inc ss fisub push int3 stos or mov mov jge das jbe xchg out addr16 and push push push aad nop xchg cli mov add pop test ud2 adc jns rclb mov xchg jp lret pop es popf test mov test lret dec imul jp daa subl add jg add (bad) sbb pusha negb xchg shlb push adc outsb mov mov push jb jl pop inc call outsb fucom and xchg mov xchg pop in clc pop push loopne mov popl xlat imul dec test cld imul jge cmpsl popf lds xor jbe sar andb jp popf test sbb cmpsb mov lret (bad) adc fdivrp lea movsl inc lret ljmp mov fs orl lret mov cmp (bad) jne loop push mov inc xchg loop (bad) mov outsl xor mov int3 and push mov adc and xor (bad) mov add add fistpl xchg movsl movb mov outsb gs pushf out faddl (bad) les mov adc out ds or or xor xor and lods or push mov or dec mov (bad) int lock ss stos push push pop sbb jae movsl push outsb inc sbb test push xchg lret mov xor jp add jg xchg xor sub ucomiss xor jmp mov push movsl outsb (bad) out pusha fwait jns dec mov sub mov out pop or dec inc jae mov xor clc mov out ljmp (bad) cmc cmc inc repz mov sub xor movsl push shrb and mov repz ficoml mov cmp stos repnz mov add add sbb mov sti dec addb imul lds xor test jnp int or sub std mov fmull rcrb mov and lds rorb das dec fcoms xor jae cld jae xchg call test mov pop sahf mov loop call test inc add fs mov out add repz (bad) mov icebp mov iret inc mov adcl sub cmpsb out sti kunpckbw and or mov rorb decb push add push push cmp stos popa xchg dec cmc dec data16 imul inc iret xchg push hlt mov sub je hlt pop and jle cmp cmc fsubrs pop scas mov data16 mov add jmp (bad) and pushf dec push (bad) idivl mov enter fstpl shlb lea mov ja test hlt aam (bad) cmp outsb or dec xchg jae movsb test clc nop js lock dec inc arpl js dec mov sub adc xchg pop imul push xor je and enter lret rclb cs xor imul lret or clc aaa pushf imul or cmp mov jle (bad) jns arpl xchg fwait es dec jns mov sbb aam mov xchg rcrl fldt leave sub xor inc push push aad test mov sbb or xchg test jo mov pop (bad) aaa add mov fucomi lret jle aas mov (bad) in pop das loopne sub xor fwait in push adc sbb mov inc insl xchg int3 cmpsb cwtl movsl std test mov mov mov test lea andb and rclb mov cmova sbb or jbe pusha int or out jno mov sub add fdivrp pop scas and into cmp popa lds ffreep mov xor (bad) or add stos jae fldl jbe pop lods sub clc xchg lods es lods dec jg push mov mov adcb adc sti and aad outsl std xlat stos call call push jae xor mov pop and arpl dec jnp out push cmpsl imul mov (bad) mov mov xor cmpsl mov adc fadds adc pop inc or inc push not leave (bad) mov sub xor dec nop adc inc jo push mov push sub xorb adc mov mov mov and fnstsw mov lret dec cmpsb sub xchg jne dec popf add sbbl mov cmp das mov and mov cmp cmp adc and movb inc push pop inc inc jbe sti xchg lods sbb (bad) test push sbb or out dec popf test push xchg mov adc (bad) lret jno notb std add out xor cmpsb out push dec sbb push mov mov and jbe mov dec roll pusha ljmp cmpb jo inc iret (bad) mov pusha lock inc mov xchg xchg js add or mov ss push add rcl mov mov push cmpsb or (bad) hlt (bad) add out and sub pextrw pop sub outsb clc jnp mov arpl lods sbb adc mov inc push sbb mov cwtl into mov or clc je jno xor clc jge nop mov and stos pop sbb loop clc in insb es test cmp xchg pop mov aam in mov mov xchg or add dec aam jne std mov sub (bad) out adc ds cmp push or push popa aas cmp mov xor jge sbb loopne dec sti je stc adc clc add repz (bad) ficoml clc adc xlat jbe in push addr16 add push jge bound ljmp iret test gs lret sbb insl iret pop (bad) adc mov dec jle cmpb inc mov pop pop sub xchg mov fisttp fsubl or mov leave out insl sub xchg add mov jp dec cli cli push xor xor cli inc and mov (bad) xor add inc jl data16 ret pop (bad) and dec push sub rcrl jecxz fsubrl sub pop jge or cmpsl lret push int3 (bad) and inc fnstcw mov xor lret loopne and mov loop sbb psrad dec lods rorb sub and orl jmp jbe sbb fdivrs and mov (bad) mov jl xchg jae fs jge repnz inc (bad) sbb in enter lret pushf stos xor rcll aad mov and add js (bad) cmp push mov scas cmp insb cmp pop inc ret ds pop mov cltd cwtl scas jo cwtl pop jge loop in lods or out fisub divb pop sbb adc das iret mov incl pop sahf mov mov push mov gs xchg clc gs dec jg movw test scas mov gs test test faddl lret and push mov shlb push das es (bad) loopne (bad) mov xchg mov imul cmp push jae jmp movsb sbb cwtl movsb std or das sub push push dec sahf mov sbb nop (bad) ds out jmp sarb scas adc (bad) mov movsb fsts dec mov xchg sub out mov repnz hlt xlat das (bad) pop ret pop jne subl mov mov jo aad loope dec pop mov jne or xor (bad) rcll outsb dec hlt push outsb (bad) jo adc jne mov dec adc daa cld jbe call jle cli inc jo in sbb pop xor adc lret mov xchg ljmp adc ret adc sbb xor dec mov xor pushf lods mov jae and mov dec mov ja dec adc xor (bad) adc bound pop std inc pop pop jp sbb cmp ds shr dec inc cmp sbbl into cmc scas lahf ficompl xor mov inc xchg mov and pop enter xor push movsb das mov mov fistpl popf aam adc out mov or loop mov xor into pop aas pop cwtl in pop dec mov testl xchg or inc jno call push sub mov repnz jg jmp push leave movsl test popf scas xor sbb jae inc out out jg hlt pop push cmpsb push stos jmp add add xchg xchg (bad) lret sbb mov in int mov mov xor pushf in jmp bound imul fucomp add hlt aas sub jp cmp popf je cmp (bad) mov xchg mov pop rcll inc cmp mov jae shlb fsincos and lods cmpsb sub xchg jecxz or out push sahf dec and mov dec or inc xor xchg push lret inc (bad) insb ret test mov les mov xchg leave push jnp cmp mov cmp hlt dec cmp jno dec or std and adc add popf mov ljmp pop imul and fcoms sub (bad) addr16 aam xchg xlat sbb inc popf cmp outsl les movl jp mov movsl movlps add adc scas sbb fs cmp mov les sub pop dec lods mov mov lea daa mov lock ret fdivs and inc rorb mov mov ucomiss dec sbb test fimul mov out xor cwtl cli cmc ficomp mov test ljmp out movsl mov xchg inc cmp in cmp and imul cmpsl int add std xor call fwait or push imul dec adc in mov xchg lds lds xchg sub mov les mov pushf sub pop outsl or xlat into data16 jo inc mov movsb mov mov push dec cmpsl mov sti jl dec mov or inc sbb xor pop adc jbe popf fldcw dec lahf (bad) (bad) out mov into add je (bad) jno add std repz inc rcrb sarl push cmc aas bound xchg lret lods (bad) mov fstpt fdivrl pop bound add mov mov or sub enter bound push repnz gs sbb rcrl int xor std cmc mov and shrb dec lods lret xchg mov dec xchg das rcr in dec cmp fwait lods jo mov ja or out and lret movsl stos cld jp popf xchg int mov mov jmp sbb aam push das xchg addr16 fidiv pop mov inc xor inc pop scas xor xchg hlt loop mov jle pop test sub dec sbb inc mov repz or rcl in xchg fsubrs sub (bad) bts pop xchg int3 sbb imul mov roll or jns sbb jl rcrb mov loope (bad) mov push mov mov push cld test xor mov icebp or mov lea pop std aas xor pop test xchg mov stos cmp movsl mov xchg cwtl enter imul sbb pop (bad) add js mov out test jl add daa xchg aad ror push and in hlt cmp dec out pop adc ret sbb xor repnz cs mov fwait add sub es adc or pop scas fndisi(8087 nop push jo add adcb cmp push pop cmpsl popf push les stos dec cld in sbb neg lret inc movsl (bad) push (bad) xor inc (bad) in out aaa push mov jns mov nop cli mov jne je inc dec cwtl or int imul push out xchg sbb icebp jo cmc js sub cmpsb dec xor aaa iret aam fucomp jmp push cld int3 dec int3 mov rcr aad or lock push (bad) in (bad) iret mov aad jns jmp sbb notb sbb mov movsl and out movsl push ffree jmp cmpsl outsb lods test cltd cmp mov pop xchg mov iret push cmpsl insl jmp hlt (bad) lds icebp decb xor mov jbe mov pop cmc sbb dec sub xchg pushf insl cld outsl cmc es xor pop mov arpl mov jecxz sbb pop mov out mov inc pop (bad) push or leave sahf std push imul test mov sub push sub enter and (bad) or or int inc jno test xchg pop add setge rcr lock adc (bad) (bad) and pop adc cltd imul test cmpl cmpsl shl les and sub idiv data16 push hlt pop mov jo addr16 lahf sbb cmp dec scas sbb js sub imul dec cld inc xlat push mov fsub cld lea lods jl es inc test mov (bad) (bad) jae add sti push dec xchg fwait ret xchg je dec into fild cmp cmp push mov call push mov cmp loop xor pushf (bad) outsl shll ds inc xor lea adcl jge popf into inc stos fldl insl xor sub sub adc jle cmpsb cmp add int xor aas loop pop roll in lds lret push out adc push jmp jp dec popl movsl sub add mov popa dec pop xchg int mov jmp inc out test xor jle sub repnz mov dec adc ret pop test lock in mov cmp mov outsl dec lcall fnstcw bound pushf arpl ss jb jnp mov into xor ss push icebp data16 pusha pop js (bad) push dec cld push int fisttpl (bad) fldenv xlat xchg cli sub or (bad) sub jno and fildll and dec push fiadd ss pop mov pop xchg out pop jl shlb scas fidivrl push imul not dec sti ss into js jae mov lea cmc das jae cmp push (bad) xor pop push cmp xchg daa loope clc outsl dec xchg pop mov mull (bad) mov xchg and lahf fdiv shrb fisttpl insb daa pop aad pop mov sub mov or mov clc aas lahf sbb or in imul mov lahf xchg in or (bad) (bad) cli push adc lret inc xor jo mov jg insb outsb arpl aam jecxz pop sbbl jecxz or xorb inc inc inc test ja cmp imul lfs or pop outsl cltd ljmp into aas ss dec es mov mov mov xor jnp sub mov mov pop adc jnp lret and fcompl hlt xor sub scas xor inc mov jle mov movb (bad) jns dec ljmp and cmp mov std icebp add out mov fucomip mov jae pop mov add in sub aaa jno sub movsl jmp sub push mov xor frstor out (bad) hlt xchg mov divb or cmp sub lahf outsb sbb mull pop dec cmp call cmp sbb pop push insb push insl fsubp cmp fld1 jg inc push insb cmpsb int cltd imul inc ret repz cmpl cmp sbb test test out dec hlt and cmp (bad) out push pushf mov dec mov cmp adc inc bound aam fsubs mov dec cmpl outsb jbe mov inc fisub mov mov or sbb jle and xor and cmpsb lock das out out sub mov sahf sub add js test jae mov jo bound jne fsubrp out mov fwait mov pop add mov stc fadds loope in jns icebp lahf xor adcb sahf push fxch test dec clc popa out out cmp insb add ss out push sub dec push lret dec push xchg mov xchg or ret cld mov fstl inc outsl mov outsl call cmpsb cli fs (bad) jno dec xchg cwtl ficompl and push xor insb inc add int3 cmp inc leave jecxz sbb xlat or cmp push xchg push std rclb aad mov nop (bad) std stos icebp sahf cmp adc xor into inc cltd cli ret arpl dec outsb jns cmp cmpb mov insb mov push cmp mov (bad) lock out sbb mulb ja roll repz loope inc and sbb xchg mov pusha mov pop jge dec pop in mov mov jne repnz sahf xchg repnz jae shll cmp inc dec pop cmp jnp or inc inc xlat push ss sbb mov jo (bad) fsubs out in ret jg and aas xorl mov xchg insb out jge and mov adc jge test and dec sub repz (bad) pop arpl dec outsl test fiaddl lret push jnp xchg fdivp mov mov mov jmp movsl inc vmaxps daa pop cmp sahf adc mov xchg sub (bad) aam inc andl popa jbe mov fwait aaa cmc xor jb xor (bad) in add aad dec sahf int addb pop jnp fist mov pop mov fsubrs ja lock push or or cs push pop xchg mov adc cld dec loopne cmp mov sbb pusha aam inc movsb ja inc jb push sbb mov pop repz push shll mov clc xchg sbb jb hlt mov pop dec sbb cmp popa xchg (bad) hlt cmp dec mov or mov popa cmc adc or push (bad) mov cmp mov mov or lcall cs inc adc mov inc pop (bad) xor je pop outsl in xor dec nop (bad) dec xchg loop loope sahf es push ss fmull hlt rcrb sub pop dec popa outsb pop mov lret fcmovnbe cs xor mov cmp mov lcall jge jae jne fsubr xor loope rol cmpsb xchg pop imull mov dec stc add xchg fsubrs xchg mov out mov cmpsb fildll int or aad jo inc push lock dec adc je sbb fiadd fs mov inc out in clc jnp pop cmp testb jle cs mov test xchg (bad) aam in in inc lods pop add jo in mov iret adc lods or fnstenv imul adc iret or sub and xor inc add xchg sub mov pop ss in sub les jno ret mov into popa aaa sub jbe aad (bad) cmp sti push jb add jg sti lods insl mov mov lods outsl nop cs pop in js andl mov add lret cld insb xchg jge sbb mov enter or shrb jnp jo addr16 lea xor js call mov and out aaa sub add int3 fimull aad lea fcomp cmp xchg fildl sbb dec andl jle xchg mov sti mov lock popf cmp sbb push fwait lea mov (bad) mov push sbb xlat cltd or push dec fisttpll insl sbb stos repz mov loop imul and dec cmp (bad) pop xor pop pop fsts pop jl mov lock stc mov jl (bad) push testl add inc push pop push repnz in push adc and jp repz out mov push scas out cmp aas pop or int fstpt jae jecxz arpl sbb test add mov cmpsl mov or mov lret add enter rcr leave cmp xchg dec xorb dec add cli sub adc and pop cmp popa add push push cmp pop xchg dec jp xchg aam sarl mov xchg push cmpsb loop mov sub in push gs je xchg shrl pop mov jns mov mov jae daa mov mov fstpl cmpsl adc jmp jnp jb inc aad repnz ret shlb sbb jbe loopne pop sbb xor or fstpt adc add imul dec scas sahf das (bad) mov push (bad) js (bad) daa rcl cmp and aas cli mov test pop in and xchg mov mov mov add hlt jnp dec dec fwait dec dec adc push jb pop in and xchg daa sub adc mov mov popf or ds adc iret ret repz mov sahf sub jae lods pusha (bad) mov mov pop mov mov push adc movsb test dec jp jns mov mov das cmp mov lcall jnp xchg or jae mov jmp and repnz dec jae ds jge adc movzbl cwtl or jle mov mov xor movsb pop fwait pop and mov pop inc dec push enter subb xchg mov popf xchg jmp pop lock xlat cld xor sbb aad pop cld sti ret sbb lret outsb cld mov call xchg jl out test jle fcoml ficom (bad) (bad) (bad) pop (bad) (bad) jb mov xchg xchg pop and dec mov mov cli cmp imul ja shll push inc ss stos inc lods les sub inc pop jbe imul adc leave sbb adc jnp mov cs adc loopne adc xchg pop push std rcrb sub call in push sbb fcomps xchg cli (bad) iret dec xabort inc in inc xor or daa jnp jp and xlat push fdiv pop nop scas in popa imul sub xchg clc xchg jg jne lahf xor xor and jl insl and sti add imul enter xlat rclb gs (bad) sbb add mov dec or push mov daa int push jge sub mov push lret mov push pop dec mov lret popa (bad) cld xchg (bad) pop inc mov add fsubs shr cmc cmc addl push add out rcll shrb inc xchg cltd in jae out jp dec jg imul add jo lds and arpl sub sub scas ret stos or sahf cmc aaa xor nop sbb and cmp xchg xchg aad movsb sarl jno in cld dec mov sbb aam or imul xchg push lea mov rcrb dec ret inc push cmp inc das in sub inc xchg inc (bad) shr loopne xchg xrelease pop enter sub (bad) int jae sbbl sbb call sbb dec push loopne movb sbb in negl je repz inc mov push sbb hlt jnp jl clc and mov mov xchg stc or dec mov mov or mov lds xor or adc testb hlt pop clc insl in lahf adc push out add inc xchg subl add mov ja dec movsb pop dec sbb xchg pushf mov andl aad lahf je,pt cmc sub sbb cli jl push jle (bad) out cwtl (bad) sub stc sbb jno popf loop or in push sbb clc sub call or inc fistl dec mov mov xchg frstor adc jp lods call and enter scas pushf mov pop cwtl mov mov adc inc cwtl jne xlat scas mov inc stos mov pop out (bad) testb cmpsb ret pushf (bad) xchg int3 push lret inc jb sar out cld (bad) repnz in movsl sbb xchg sub stc sub sub push jnp loope outsb lods adc and or mov addr16 mov sub (bad) frndint sbb shlb jecxz and pushf je dec lahf adc in jl imul sbb and leave das pop xor out sbb fistp inc mov call xor add add jge mov inc pop jbe cmp mov lcall mov cmc fidivl xchg ljmp dec jne movsl sub jp push mov sub in jl lods or add mov xchg and dec mov into sarl scas idivb pop sbb jne iret movsl out sub adc adc sbb cmpsb adc out test outsl dec stos andl scas dec pop cmpsl repnz inc add inc rclb (bad) pop dec xor test mov pop cmp add aad movsl or jge cmc or cmp mov daa arpl jb insl int3 jbe sti mov pop jbe inc jno and cmp imul sbb leave (bad) mov ja jo aas xchg jns mov (bad) xchg (bad) divb add or ss cmc dec mov fsubl rolb addr16 mov ljmp or les lahf or sbb xchg div mov dec dec gs divb outsl out cmp xchg lods jo mov popf cmp call movsl ret or push xchg adc sub pop dec arpl jns loopne jno jmp ss sub add cld pop push movsb lods xchg in mov dec mov jl inc add mov lea pop mov mov adc jbe inc lock ret jbe jecxz dec cmp lcall dec add (bad) mov roll enter or rcll out daa or xor jns jl pop sbb pop repz arpl push test (bad) xchg xchg fxch fmuls pushf lcall rol in sbb jg pop sub xchg pop (bad) mov jp adc add dec mov and xor fwait pop jg cmp mov pop ret popf push mov in inc ret enter mov arpl mov xchg rcrl dec add dec (bad) leave inc js out aaa push jnp pop insb jl jb sbb das hlt dec dec xchg mov cmp lret push jns add mov sub arpl loope ret mov sahf mov sbb add inc sti jae dec enter (bad) or and aad mov dec leave ret pop and mov xor mov scas shll and add jae jg aad ror je push mov pop insl mov pop mov inc leave rorl fsubs mov sbb jle sub jp cmc pop xchg fsubs or outsb (bad) hlt dec or mov loopne cmp push ffreep les and dec stos cmc and enter and stos (bad) mov loope adc ljmp cld mov lods dec dec cmc mov arpl cs or xlat sub shlb pop inc mov lret jne adc das jg adc mov cmp or stos imul pop or sbb loop or cmp xor shlb and rolb lret add pusha sbb lods inc xchg adc jb rclb pop pop hlt cmp push cmc add jne or mov lock push adc push push ja loope popf out push and mov or mov inc xor push adc imul nop pop mov ss adc sub in insl (bad) mov rorb push jnp (bad) test insb (bad) add cmp sbb call fdivrp movsl repnz ss les xlat sbb jl enter sub enter adc ficompl lea sub je es (bad) add inc pop push mov or sub cmp xchg lea xchg push (bad) mov cmc lcall mov sahf fcoml pop dec xchg jns int3 jns je out or xchg (bad) sbb or dec ljmp pushf jo cmp pop rcl sbb pop mov push sub scas stos xchg icebp add cmp mov dec jbe rorb subl pushf test aam cli sbb dec lret or mov lahf sbb push xchg daa stos stos mov mov das js mov stos pop jno sbb divb inc cwtl xchg into mov pop popa xchg pop fnstsw cmp rclb aas and in int3 push cs adcl incl ret dec fdivrs stos mov sbb adc xor (bad) cmc jns enter cmp sub (bad) loopne or or sbb testb dec pop es arpl sub stc movb in gs loop ja push nop sti inc or inc pop mov xor rcrl push mov pop pop mov imul rolb xlat incb aaa cmp in jp repz xchg jg add mov fnstcw aas inc aad fst xchg nop dec xchg pop push iret xchg fs xchg jge cwtl iret mov pop push jne ss cwtl jecxz mov pop je pushf mov out dec xchg icebp dec (bad) pop repz (bad) jnp xchg add enter aas xchg lods pop int dec and lahf xchg jb xor lods je mov mov stos sahf and and adc or xchg inc jae std out cmp cmpsl rorb pushl (bad) jp or daa jp xor push mov shr mov or jmp cmp into jno es sbb mov (bad) jge or and inc xor lahf push repnz (bad) pop sahf fwait mov aas mov out inc jno and jmp push outsl aam data16 jle push mov mov fnstenv push mov cli or xor and std ss push jecxz dec cmpsb cmp lods (bad) popf mov shll es and fcom or push sbb and xchg jge mov and cmp dec cwtl fldl pop mov mov lcall scas dec insl andb sub call and jns pop dec xchg jle leave shrl pop hlt and jne pop fwait add arpl dec (bad) mov inc sbb mov push stos pop jle int3 or adc fld std lret inc loopne xor loop jo pop sub mov (bad) shrl addl loopne int3 sti mov pop and mov sub daa sbb ret aam pusha add or xchg adc shrl or cmpsb movsl xchg push bound inc pop repnz ss xchg lret adc push inc push in add scas mov imul mov mov or pushf add inc jno fbstp mov xor sbb xchg sarb fwait fwait adc mov stos rolb dec std jb icebp leave cmp jnp das fimul sub xor ss mov and clc test cmpl idivb enter loope stc stc in sbb movsb pop fimul add rorb lods cltd mov cli shrb rcrb push iret mov jmp test jmp cmp aaa or aam nop into xor mov fisubr xchg sub test or xor clc lds or test pop fucomip adc hlt mov cmp mov out aaa je out mov and add push mov cmp sub movsl xchg lret (bad) xchg into jns aad jo ljmp mov adcb mov sub and mov xorb xchg out loop mov lock aam mov push mov add push int lret out in notb (bad) fidivr adc mov pop push sub dec mov jae aas mov stc or test push cltd push xor or adc in mov shrb mov fild xor adc push mov ss nop mov cmp lock (bad) adc xorl lcall mov mov inc mov nop out popf xor lret cld imul jae inc xchg stc cmp inc in xchg sbb cmp xor cmp jb add adc dec fwait sti and or sub add js aam std hlt imul aaa ficom mov js xor sbb addl ljmp cltd mov xrelease aas jno xchg icebp sub ljmp sbb jne xorl pop test push popa add mov cmp bnd mov add dec mov jle dec and xor icebp fsqrt pop leave js push in aam stos imul aas popa push xor add call dec or add push sub jo push adc sub inc xchg and xlat dec jecxz gs xor fimul arpl push std fsub outsl mov (bad) jmp or mov xor xor (bad) adc xlat lret dec pop xor pop lahf imul mov mov hlt int cld aad out fdiv xchg out (bad) or icebp out jp add arpl jo pushf pop add adc mov js pop popa cmc movsl int sub enter pop mov mov out jecxz push sbb mov pmullw js cwtl jbe inc push addb xchg (bad) fucomi pop push mov and sub mov push adc xor enter hlt jo idivb ret imul add fs push sbb inc mov inc mov in add int cmp not xchg sbb push icebp pushf and je lock ret testb or inc sarl dec in cwtl out cmp xchg aas repnz or mov addr16 lods and in and arpl jmp jecxz mov xchg push cli pop (bad) pop out sbb insl xor add sti jae push dec ret aad push mov push or xlat cmc test pop xor test fidivr rcrb fstps xchg dec adc xor xchg inc lcall imul push dec (bad) xchg (bad) leave nop loop mov out aaa add popa cwtl js mov sub (bad) xlat adc aas lock sub sbb mov sbbl cmp jmp notb insb mov add jne sub jnp (bad) and jo fs mov aad cwtl jo push popf xor (bad) call add jle mov inc cli mov shlb mov mov push push push addr16 push data16 stc pop push xchg add test lods test mov push jo pop cmp jae sahf cmp hlt pop xchg adc lret xchg push pop aam jns je sti mov xchg and mov repz cmpsl sub mov subl push add mov es adc sbb ds push sbb push lret inc rcrl inc das addr16 pop rcrb adc (bad) xchg ja ljmp sub pop scas mov mov mul scas inc xor je sahf inc lock pop pop pop push jae rcrb fisubl jo aaa xchg cmp xchg inc jecxz or and xor iret (bad) mov scas ss or insl pop bound sub aaa (bad) lret pop dec jge jne repnz out adc xchg lcall xchg lcall adc cmp (bad) dec fs xor hlt das insl sbb je fs mov imul add cwtl mov ret adc outsl sub dec subb xorl mov jae pop mov in cmp pop cmp (bad) pop adc cmc mov add leave cmp push sbb arpl inc in lea push push sbb jge clc call pop cmp or mov xchg shrl cmp sub icebp out lret (bad) or cmp lds out push icebp clc sarb adc into cmp push pop popf mov pop fucomip cmc cmp data16 mov out jge jb jge or pop mov imul mov fldl lea ret push xchg xor push mov scas and add out pop jecxz leave add incl clc rcrb pop mov sub shrl or (bad) dec cmp rclb (bad) das mov je fisubr sbb into jne in dec lods or add jnp (bad) mov add jb inc movsb xchg xor mov sarl mov enter jmp pushf mov rorb mov out xchg (bad) xor add jae movsb dec out (bad) fstps mov dec xchg pop mov jp add inc leave call jmp add jnp mov sub lds or add aad mov add cmp mov pop push xchg inc mov mov and pop inc xchg (bad) out outsb rclb push enter (bad) loopne (bad) sbb arpl add (bad) hlt cmp jg sbb or xor hlt and adc mov stc cmp rol sbb cmp aaa hlt jecxz negb add mov aad fstl add fidiv push xchg xchg sbb lret xchg push cmp (bad) ss je rcr jnp or jb mov ror ljmp jae inc sbb mov inc push lods mov lcall or jb cs mov jbe ret lahf loope inc and adc (bad) test xor and sahf add es adc fldl mov nop cltd test sar cmp add add mov xchg das dec lea mov test inc lods repz (bad) adc cmp jge nop jmp cmp or xlat xchg scas int inc jno les mov xchg loop movb xchg pop sbb leave mov gs xlat adc jo cmp jmp aam dec aam lahf rcr push lods or cs dec in lea out lods ds hlt out les add xor (bad) jbe pop popa push loop mov add mov jae and popf jg mov out and jne add enter mov leave and arpl xchg add fsubrl xor idiv adc or xor pop add aam ss mov int3 fsubs xor inc imul test fwait js fucomip and aas or cmp pop cmp mov arpl cmp (bad) pop dec sub imul iret popl scas movsl ja popf (bad) cli jl cmp dec jns inc adc mov js add sub cmpsb mov mov sbb mov mov xor inc in test sti mov shr mov hlt xor or jae lret idiv rcrl pop aad sbb rcll xor xchg jbe gs ljmp mov dec jmp mov stos sar sbb cli test pop fwait int3 cmp push cmpsl je jbe mov mov (bad) sub push inc inc or push adc adc cmp inc sti movsb pop cmpsl scas idiv clc aam inc xchg mov sbb shll ja cmp sub hlt pop mov (bad) cmovge mov lock std leave and test mov push push mov jl pop gs xchg fmull jmp sahf scas dec push or add mov add add jo push fisubr inc add ss cmp sbb and or jo and jo dec ret sahf (bad) (bad) jns jmp outsl push iret adc inc jecxz inc mov addb dec mov adc push jbe lret pop jb pushl cmpsb jns push stc jno mov mov xor sbb push dec xor dec dec pop int3 inc add inc pop in cmpsl jp xor popf cmpsl stos or sub and mov in pop pop jl in and cmp icebp jb add pop test mov pop jmp mov cli test imul cmp std xor jl enter lcall lcall test nop mov or loopne mov fadd pop sbb stos icebp fdivr fmul stc jle cli popf and and or es inc ret mov (bad) dec pop adc or mov outsl add test repz xchg repnz aam cmp fdiv sub les mov cmp daa cmp addr16 inc sti xchg (bad) and stos pushf inc lock push loopne nop ret dec adc repz mov pop out icebp aas xchg cld imul addr16 cmc xor imul pop scas insl and mov jbe add dec roll jp mov or outsb popf fsubr andb jae dec xchg (bad) jbe subl call mov add add movsl jns jl xor and jae dec xchg inc cmp mov push loopne adc fimul dec inc pop sbb lahf adc dec loope push xor add mov nop xlat xchg cwtl in fcmovb repnz sti fwait dec xor sub inc jge or sbb push fcompl mov push mov lret dec pushl dec mov ja xchg dec add fwait pop jns mov cmp adc inc hlt and xor inc mov mov test mov inc stc daa out xchg ja xchg repnz adc decb mov or xchg cltd jbe push dec add mov data16 xchg sbb mov dec pop mov aas fsts xchg fsubr fldl or (bad) jno sbb dec or jmp dec lahf jnp loop,pt adc mov xor lods push ficompl lods xchg push mov mov push push (bad) pop jle movsl sbb out insl sub hlt (bad) xor dec add xor xchg pushf dec addb add rorl add clc fptan pop adc outsb adc ja (bad) (bad) mov enter fwait mov outsb mov or add test int mov les push adc push and leave add jmp xor lods lea xchg mov popf jo push negb xor js mov cs clc out jae push cmpsb lea add mov mov mov cltd cli cmp inc enter gs mov cmp dec popa pop pusha arpl aaa mov inc sub imull or mov call push cmp jp mov (bad) push cmpsb clc in out sub or sub inc leave enter mov mov push mov div jne in sub push unpcklps push mov jp ret add mov mov iret fucomp lret add scas add dec bound sub call bnd dec add and iret iret enter push cld jno daa repnz mov jbe xor ljmp xor pop inc xchg rcll lock rcl dec mov pop scas push je mov jle pop xchg cmp add sub pop or fstpl push jbe and inc (bad) (bad) xchg js adc jle xor and (bad) stc pop adc jns clc (bad) mov dec pop out fnop xlat shrb mov inc inc fsubs rcll arpl das mov fistpl and insb loope (bad) xchg lea push lret xor std (bad) fildl xor xor movsb sbb cmp lea jmp mov xchg leave mov movsl out or leave pop aad mov fwait les test fidivr lods wbinvd std pop dec jno adc sub mov ret nop jne dec fucomi or pop lods cmp push nop mov pop adc popl and (bad) sahf loope mov push shr sbb push (bad) adc xlat fidivrl dec je jecxz out dec mov xchg jnp push negl push insb cmc popa cmp add sbbb or data16 add push dec pop mull sbb cwtl adc inc mov pop cld outsb test std cwtl sbb or mov xchg cs push push or xor ds sub pop aas outsb mov pop pusha testb das jle mov int3 clc or cld jno xor shlb mov andnps insl jbe fcompl addl fildl add clc (bad) xchg scas arpl and xchg shrb pushf inc sbb repz sbb mov sub fisttpl jb push sub das movsb mov outsl push jae bound xor iret mov cmp adc pop outsb aad pop cmpb test jl jg cmpsb fcmovnu ret stc jns aad fisttpll mov xlat int3 daa mov sbb outsl lods notb jbe and mov lahf pop add hlt add dec aad inc or (bad) push add xor push jp arpl jae ss dec mov push repz inc repnz rcl xchg pop dec int leave or loope movsb add cmc sbbl cld sti pop ret in test xor jne,pt fwait jge jo rorb and testb adc jle test dec (bad) mov xchg and loopne lret lods sub or jns xchg loop adc insl mov push dec and and test sahf std mov mov adc jns outsb ret push xor int outsb dec adc push push pop aas js daa in (bad) mov mov dec sarb loope in push (bad) push or fbld popf mov rolb repnz test call sti jnp xchg push lds adc shlb xor xchg jns adcl or popf popf imul (bad) cmc adc loop cwtl and adc lret imul mov jbe aaa jo cmpsl loop mov cmp mov and decb insl out (bad) outsl cmc xchg sub cltd js xor aas inc (bad) mov adc test cmpsl lods sub push in stos jbe (bad) adc in lods (bad) (bad) xor sub xchg pmullw test jo outsb loop call in lea cmp cmp ja and dec out punpckhbw jl xchg sbbb mov mov psubb jmp pushl pop ljmp inc xchg inc mov add jecxz mov lods xchg das pop add push or inc sbb dec data16 and es sub and cmc cmp xchg (bad) rclb xchg lret pushf aad lock cmp xor adc pop jmp mov xchg pop xor fwait jo mov into (bad) mov pusha stc cmpsl fildll mov mov or cmp imull adc mov mov xor inc loop xchg jnp jo push repz xchg cwtl cltd mov xor push pop js mov push adc mov loop test mov (bad) mov mov test rorl subb int3 add xchg fucomp jo loop mov jnp sti sub ss aaa inc (bad) sahf pop pop cmp out mov js inc pop xchg xchg or jne add lock pusha jbe inc or jmp xor lods sub cmp (bad) cmp push or es lret adc (bad) and inc add pop pop popf xor stos xchg jns test xchg leave inc rorb loop fsubs incl and xor ja adc push pop push sti mov mov popa mov mov sub insl in (bad) testl inc (bad) (bad) pushf fistpll shld mov push dec push cwtl xlat lcall aaa add call push xchg jnp,pt mov dec imul shrl inc mov pushf in cmp bound cmpsb and mov lcall sub bound dec jne loop test cltd lret rorl or jbe mov inc sub push xchg sbb dec mov cmpsl (bad) mov mov sub testb adc in mov arpl jnp jp xor push jb dec dec fdivp lret hlt mov cmc add mov pop js sub push jmp inc sub or repnz xor int inc shrl mov stos or mov inc (bad) fdivrl push in push int3 sbbl push and mov mov mov sbb (bad) mov mov push push sbb mov xor orl sbb dec fistl cmp push std scas jo arpl arpl or cmp leave dec mov or fstp aas test pop add mov mov jp inc mov outsb mov insl inc pop mov imul cmp add mov repz push in push ss sbb leave push ret xor inc (bad) jb lcall fsubrp or mov or fdiv add sbb jmp ror inc jl sahf xchg or sub in daa cmp ljmp cmp or and jno xchg test jle pop pop cmp ret cmp xor bnd inc or (bad) cmc push push pop cmp repz push jae sub mov sar sti sbb mov jp bnd pop mov mov pop sub sub sbb mov loop cmovp push fidivrl or cltd cmp in hlt xchg clc mov xor mov pop aam xor sbb sub jb xchg pusha mov pop lds pop or scas cmpsb iret aaa cmp mov xor call jbe outsb or mov jae adc lock inc fisttp jo mov jnp ds sbb xor jp sub dec stos jmp (bad) dec ret push sub add or cmp lock xchg je mov xor pop pusha adc je inc aad popf xchg jae in scas jae enter inc push mov imulb xor lret scas xor daa xlat test cmpsb sub inc or dec jno push pop or push int inc imul pop adc (bad) inc lahf mov or clc pushf ret cli in scas adcb or mov test in push jns (bad) repz ffree loopne jns cs mov cmp arpl pop xchg pop lcall popf ljmp es enter lds cmp and idiv sahf xchg sahf rcll stos (bad) rcrl jg (bad) add jecxz fsubr repnz dec insb lods sti inc sbb fbstp push test sub pusha sbb ret cmpsb push data16 daa popf mov fistl clc stos pop (bad) jo addr16 xor test xor inc cmpsb (bad) mov or mov decl inc movsl add and jl push mov lret inc xor call (bad) jecxz daa mov and arpl sub jne test mov in das aaa enter sub mov aam sbbb enter cmp mov add insb mov subb inc jns lret inc cmp xor or jp (bad) inc (bad) jmp scas test fs loope out inc loope dec dec es imull mov dec dec and dec lret test test or lods mov sub out adc jecxz add cs fldl dec xchg push add and fs xchg jecxz out std lds in inc add add (bad) (bad) jne sbbl jae sub jl arpl mov fs mov xchg xchg hlt pop xchg jnp cmp mov mov sbb jae mov addr16 and xorl adc sub cli xor test push mov addr16 cmp movsl sub jno jbe inc ret and mov sbb sbbl (bad) stos jnp adc xchg (bad) lea add out push sub popf jl inc sub sub jne jp popf sahf imulb jns or or add add fcmovb shl jns fnstenv fisubrl andl js lods jno js fisttpll and out ret idiv mov or push idivb add cmpsb add js and lcall sbb inc sub cltd xor subl sbb mov push pop out dec popf mov sti xchg (bad) iret pop jmp inc call xorb adc pop xor into aam repz js dec out pop imul lods popl sbb sub mov jne jne lods and inc ja mov lea sahf cmp aam mov xchg insb adc loop in push cmpsb mov leave adc int ficomp mov movsl mul lcall jmp movsb dec es inc add loope xor lods mov imul into arpl rcrl out and sub mov push (bad) cwtl adc rcrl ja cmc xor mov (bad) mov mov jp cmp cs faddl xchg mov sahf bound pop cmc rcll fcoms or ficomp push jno xchg xchg in popf xchg mov lret cwtl push and cmp cmp push andl dec flds cmp push (bad) xor sub out and xor insl fstl mov movsb jge or movsb xor jns jbe mov loop pop adc imull lret cmp pop in dec fwait mov les loope vorpd xchg or outsb lahf int xchg push mov in mov out push test mov sti sbb mov (bad) jo,pt mov inc push enter pop (bad) pop cs outsb inc xor out lods cmpl mov cmp lea or pop aam aam notl adc test adc push fnstenv insb or xchg out ret ljmp cmc push sbb push lret ja add and dec fxch xor lahf sub mov sub add mov insb call into dec jge aas std (bad) jle hlt xlat mov mov aas and pop repz sub push (bad) int cmp outsb shll or and mov adc movsl xchg cli adc sub dec jle push loopnew aad or insb push adc orl xchg sbb ljmp cwtl repz dec cmpsb or inc lret xchg add mov xchg or mov test jne adcb cmpsl lcall les repnz mov xor or adc int sti xlat cmp sbb or js aaa mov arpl sti lcall sub sub dec imul and jo subl adc ror push test (bad) fstpl mov daa aaa xchg aaa xorl insl icebp pop imul sbb pop xchg fcoml movb jmp movb icebp setg lahf scas lock popf cmp stos pop sbb test inc push sbb lock sbb mov inc popa sarb and pop (bad) fstpt movsl add inc push pop loopne xchg icebp (bad) shrl jbe jnp push addr16 or xchg xor (bad) jbe sbb pop mov cs push fsts cmp cmp adc adc mov (bad) insl fwait pushf cmp xlat stos test adc dec test insb outsl or jl mov cmp push insb push xchg or inc inc repz push (bad) sbb mov cmp in or mov pop pop out rol inc xchg cmc xor or push repz lea or add mov pop jnp je out fdiv lcall pop push inc push div adc ja ds inc inc pop shrb jmp and mov pop dec clc push sub inc je arpl mov jp xchg jns fsubl jmp incb sbb test sub aaa cmpl pop pop lods scas xor outsl sbb jl jge mov into xchg mov xor adc fnsave push aam inc push inc das imul int3 adc push in inc in pop cmp loopne add (bad) and push out int sub mov (bad) data16 or enter cltd jp (bad) aad adc xchg lret sbb mov jmp add sbb adc imul daa loop imul or add imul pop sbb xor dec dec cs mov jne call inc mov scas mov dec in push cmc andl inc or mov push iret sti add and xor mov xorl push aam push test inc loopne popf xor sbb push mov xchg sub sbb pop adc iret int test (bad) push cmp pop hlt pop add fcmovu dec adc jle dec mov mov loopne cmp dec sbb and aam shlb ljmp fimull jp fs out mov sahf push push popf aaa xor jno dec add call push stos add sbb daa mov pop int imul adc mov xor or sahf or popa add and in fldl dec outsl jle mov test in push aad xchg (bad) pushf mov popa lret inc jmp mov mov pop xor cld jo sbb ret add cltd nop pop bound mov mov cmpsb pushf (bad) jae cmp aad mov cwtl (bad) lret lret (bad) fucomi daa adc sub mov push inc add popa sub inc or iret mov js and pop call aad adc push dec adc mov cmp xor in (bad) mov call lret in mov xchg xor add mov in xchg or repz mov xchg and push and pop mov lahf mov loop imul mov lds cmp addr16 jo jecxz ffreep pop sbb cli sub mov mov pop jb sbb pop test (bad) dec pop std pop (bad) cmp aam mov pop mov and pop add repnz jbe icebp xchg movsl ljmp popf inc jb cmp xor (bad) jg loope stos out xor iret jno sbb push xor int3 inc push fisubl inc test ljmp push enter pop (bad) mov push pop lcall sbb test dec in mov sub ss dec sbb notb adc xor xor adc push pop add sbb sbb stc out clc rorb test jb dec jo jbe into aam sti stos leave sub cmpsl daa hlt divl outsb fsubrl sub jle dec rclb roll xor and movsb sahf adc lods popa dec adc out cltd fwait jno in sub jae in push pop addl addr16 mov fs push fidivr jo cmp xlat jne fnstsw jmp icebp mov push aaa xlat lcall mov adc push (bad) xor push movsl lcall (bad) jns and test inc sub jp and (bad) fwait sub repnz and test movsl mov insl jns jecxz test ret jnp sub mov (bad) sbb cld (bad) in popf mov wbinvd or mov pop lods dec leave (bad) sub je (bad) lds inc xchg incl xchg jmp jp mov mov and jp sahf xor xchg fwait jp rcl das mov inc test repz mov es sbb lahf iret test in mov repnz sub inc cmp repnz xor divb add mov in fucom push inc inc js clc and enter test div in dec ret mov xor sti out jb ds das mov out das rcrb cld das mov sbbl or push movsl je pop adc sub lret add cmp cwtl mov insl pop addr16 js movsb jns adc pusha sarl push mov jb ret enter mov cwtl mov cmc mov hlt push out mov xchg sbb push mov jmp (bad) insl out das inc push jnp pop push insb ljmp xor in sbb movsl outsl (bad) (bad) mov cmp xchg mov shlb pusha inc and sub sub call adc add aaa leave xor sub ficoml fs fsubs dec cmp cmpsb ss mov mov icebp ljmp sbb push cmpsl adc imul out pop fidivrl cmpsb rorl mov sbb add xchg jg test jns ds xchg (bad) shl lret sub or test insl pop inc pop cltd or ds mov jmp push push xor mov ds aam xor sbb jecxz aas data16 stos in mov and mov xchg das or lret xchg jl pop (bad) cmc mov dec adc jne fwait int mov pop add dec aad hlt mov (bad) hlt adc arpl jns es push sbb add subl dec imul lea (bad) mov jp jl rcll call out push mov nop mov outsb mov mov cmp lock jle aad fsts sub arpl enter jnp push loop push arpl fcoms mov outsl enter push imul cwtl add adc dec dec fisubrl decl and pop mov int add jecxz dec hlt push jl sti push loopne push call divb int3 mov xchg into andb push mov cwtl jo outsb inc inc imul cwtl out mov sbb sbb mov test pop dec adcl clc test test xchg lret xchg jg xor ja xor sahf nop cmp aas jg nop aaa rclb (bad) push push add gs es sti mov or fcompl das mov xlat lcall jmp add test add lret xor pop dec add divb sub jae dec iret adc pop mov faddp aad mov sub adc adc loop sahf adc dec lds mov in push pushf bound or fwait mov imul xlat test pop mov cld sub sub sub cmp push jl add lret mov adc ret rclb cmpsl xchg loop sahf sub xor pop mov sub iret (bad) lret imul xchg shrb jp jo cmpsl inc cwtl mov add addr16 cmp dec cmp js fiadd stos and sub insb xor stos or cltd xor call rcr push inc mov pop rcr aaa pop or mov fcmovnu pop push or xchg sbb fcomp sub testl xor pop pop fs mov (bad) aas cmp ja xor std imulb int3 stos scas jp in ret cmp mov lcall mov scas mov inc add test int3 xchg add or push jle inc fistl push movsb aas inc bound les cmp mov addb jnp push jg xor gs cmp lret test mov add dec xchg mov sbb dec push jbe jae jge xor inc mov std int3 push mov mov xor aam scas xor pushf mov sub add testl push pop mov mov mov push xchg ljmp test cmp pop fadds rorb sbb mov leave test push mov adc cwtl fld sub jl inc and lret xor xchg loop popf xchg lods in adcl dec or or lods mov es stos data16 jnp loopne xchg (bad) into pop outsb mov push jp outsb (bad) sbb into or mov mov dec and stc mulb out and dec and in aad idivb mov cmp xorl lcall xlat faddl cmovl jo (bad) sub in jge out push imul or jp and xor adc in lret cmc xchg (bad) mov cmp cmpb fstpt ja inc mov test and addr16 jl fnstenv lea (bad) push (bad) pop imul jl adc inc and out jns and loope mov addl inc push xchg cmc call in test mov cmp xchg outsb mov insb mov cmp cwtl or in (bad) dec stc mov test lods xchg pushf jmp outsl jmp lret in clc out xor out mov cli dec inc cld pop int3 js loope pop popa rcl push in call arpl sub push (bad) sbb in inc aas sub sbb mov adc into cwtl pop and gs pushf or movsb sub or bsr or add add push push xchg stc push sbb jmp sbb rol mov mov js (bad) mov nop mov push (bad) mov jle xchg sbb pop aam push sub in aam fistpll leave pop mov mov movsb xor cltd pop sub jg lods cs adc jbe in xchg call lods dec push pop mov lods mov orb aam dec loope loop inc inc mov jno jb mov pop fidiv scas sarl sbb dec cmp mov add (bad) sbb adc pop mov (bad) mov cmp mov push sub iret inc pop mov xor inc xchg mov xchg xchg loop dec sahf loop xchg and mov (bad) mov inc xchg pop mov mov jge cli sbb ret or js fsubr rorl icebp cmp enter sar or rol movsb mov xor dec push mov add test loopne push cwtl and shr adc cltd xlat dec lcall mov mov das pushf add pop adc out (bad) hlt leave and fcmovnu inc inc and (bad) imulb push jbe jmp cmp lods jbe xchg jns icebp pop pop in or adc xor dec pushf and push jmp push icebp rolb dec push and pop push mov adc inc adc mov (bad) xor nop xor add jecxz orl movsb orl popl push mov jns or xor daa insb cmp mov inc test in pop cmp add add (bad) add mov mov cld push xchg testb sahf test aad lcall (bad) int3 adc sahf mov dec adc mov mov bound inc push sub dec cltd sub jg mov pop ret or jo lahf fdivs arpl cmp mov in rcll lret sarb jl mov mov add push mov nop pushf adc enter mov push lret sarl test pusha jp lret hlt shr (bad) in stos xor ds jbe sbb cltd lods loopne adc mov xchg fcmovbe push sub cmp into iret outsl dec mov jmp loop sub sbb jne jae movsl lods pushaw sbb cmp aam sub lods add sarl xchg push int3 sbb dec inc cmp sub (bad) mov sbbl adc (bad) fildll popf aaa mov int movsb jns out bound add lret cld xlat inc aam adc outsb xlat dec jl inc sahf mov aam stc aaa inc jmp icebp loopne pushf inc test cltd pop inc (bad) sbb mov mov cmc push ret mov mov adc test pop fprem xchg add ljmp add mov pusha inc xlat mov sti and and xchg stc lea add jge cmp dec mov imul mov call or dec in bound popa into mov dec popf cmp inc cmpsl insb sbb dec cmp cmp test push test mov xchg ds (bad) cmp dec arpl jnp jp aad xor loope cwtl pop or jb adc outsl imul mov popf add xor or scas (bad) xchg mov sbb cmc fdivr loopne fwait es pop insl lcall mov dec shrl int ret lods fstpt les jb (bad) repnz std xchg sbb in lods outsl add dec mov cmp psubusw ret and fsts pop insb mov xchg pop sbb in push jecxz xorl mov nop lret sub add sbb mov push pop lret sbb loop ljmp (bad) mov ret cmp into adc and imul sub fnstsw inc mov decb hlt in or test test bound sbb mov pop int3 jmp jno loopne sub movsb xchg adc mov mov or hlt sbb cmpsb pop dec cmp sub insl sbb fucom fs mov xchg mov (bad) and fsubr or mov add pop fsubs adc lcall mov xor adc jnp mov (bad) out or sub xchg mov adc sbb iret xchg push outsb mov add cs movsl xor and dec mov rcl pusha lods mov and pop lds push (bad) cmp (bad) insb lds int3 dec mov jae cwtl imull xlat int aas xchg outsb jno mov inc fist pop or stos dec out cmp das or data16 lea gs imul cmp andl xchg hlt adc xchg ret outsl loope je in mov sub addr16 xor test test inc insl movsl inc mov (bad) and and inc mov jns leave mov and aaa in jge,pt add fsubrl (bad) into loopne popa add les jae xchg cmc out popf jecxz cmp jle push xchg xchg sahf enter addr16 aas sbb sbb shrl out mov or mov push (bad) xor js cs mov mov inc push gs cmpsl dec sbb lds jmp lock adc les aas ficomp enter stc (bad) push add jae xor dec stos repnz in inc fwait outsl out cmp ja jle xchg mov push xor lock and rcrb mov sub (bad) setbe pop ss lds daa sub mov call lcall mov mov mov add shrb pop inc inc call mov dec jb fidivrl fsubrp in test xor sub imul rolb mov sbb call push test xlat xlat inc rolb call sub (bad) ds mov aad mov repz add (bad) dec sti lret clc push repz scas fdivr mov fs cmc add icebp sbb jg adc dec sbb xchg (bad) lds mov mov nop pop sbb bound push adc (bad) das nop cmp fsubs es gs cmp mov cltd mov gs xor push xor cltd xor stos cmp jle dec into inc lcall popa xchg or adc inc lret jb xchg faddl fiaddl stos insb mov xlat push dec sti pushf dec in dec icebp and iret jbe mov leave ret cmc mov jge nop adc pop jmp xor addb sub mov imul stos daa cmpsl daa mov adc pop ret pop fcoms aam sbb lret and into xor std loope (bad) cmc out inc sub mov pop sbb outsl xchg sbb loope pop data16 jecxz fidivl inc cmp cmp arpl int3 push mov xcrypt-ecb cmpsl lsl sub hlt fiadd cli (bad) jae imul lock add nop test es (bad) (bad) mov jmp repz push xor (bad) jl and push shll sub push pop xor xchg inc xor add cmpl jbe outsb or mov das cmpsb mov xor mov into cmc cltd push xchg ficomp and pop dec xor add mov ret test mov jnp lahf xchg push popa leave cmp xor jno push push ret test ficom lods movsl sub jo out scas push addr16 inc (bad) in add hlt (bad) repnz cld adc jle jns sbb sbb call cmpsb xchg cmp lret nop cmp shlb int jmp clc pop fld imulb loopne adc icebp int jnp outsb inc and mov dec cltd sub sbb add mov in negl enter je jnp push sbb int3 add test (bad) in mov mov pop lcall push std mov pop pop insb sub cltd mov mov repnz mov dec lock stos ljmp mov js add mov xor (bad) add stc pop pushf or (bad) adc cmc push adc xor ja jmp push and add pop idivl cmpsl sub mov insb inc ss or rcr fmul js rcrb mov ret mov stos pusha int3 repnz pop and sbb fdivrl fiadd add inc ret sbb scas (bad) out mov rcll rorb insb xorb inc inc rcll mov (bad) dec push or push inc jle cltd lea xchg jl inc xchg cmp aam test ljmp andl mov jge pop dec ret mov nop inc mov gs rcl adc or jbe lcall push sub pop icebp ret je hlt xor dec push iret jo cwtl fild lret mov mov add mov int cld inc rcll cld in jae arpl cmp icebp lea jae push insb inc sti inc push sbb insl lods push xor leave add xchg xchg mov cld cmp dec jp ja dec js add stos push insb fidivrl or lods lret sub xchg imul xchg popf jo pop push push leave icebp mov scas mov in lods push or sbb test sahf xchg cmp sti test insb lds addr16 cmpl push call (bad) fstps loope xchg loop push test and fwait push add out lods (bad) hlt and sbb jns mov mov (bad) xchg js loop fwait xchg mov and cmpsb cltd or leave xor mov lods out pop test rcrl dec fidiv insl cld loop push lods mov xchg and stos adc inc fucomi push ss or pop xchg neg jge dec (bad) xor out adc outsb stos test and cmp call mov jg cmp test into pushf mov inc sbb xchg cltd pop add movsl cwtl pop shrb mov mov mov mov int3 sbb jo sbb into daa shlb leave not bound stos mov into inc outsl js sub adc mov and mov push mov in es pop pop arpl mov xor sub xor into sub push arpl ret pop out idiv lods (bad) jb mov cmp aam pop fcomi mov sbb leave jge cld (bad) adc pop jl jb dec sbb jmp mov mov push bound push test or sbb fwait push sahf sti xor (bad) (bad) push mov sbb push xchg xor shlb stos mov jl xchg lret mov sbb push adc ds jne mov pop cmp xchg xor dec pop je push jae out mov cs cmpl pushf cmp xor stc (bad) pop les test (bad) mov (bad) push cmp pop sub cmp xor test rolb scas cmp mov je inc popf outsl sbb std inc adc cwtl jle mov pop pop (bad) mov stc jecxz sub pop pop dec icebp jge jl outsl jg add movsl mov in push scas out jge jae mov movsb bound insb pop stos adc std push inc lock add pop adc inc ljmp and lods mov mov cli mov adc jle push mov add repnz lcall dec jb add loop xchg sbb add test mov pushf addr16 adc sbb cld mov xor fwait inc cmp mov in sbb pop mov es jge je push jb and negb ljmp hlt out (bad) les gs arpl (bad) mov loope js fdivr repnz cmovb dec fisttpll xchg ficompl mov fwait jl dec ds pop dec mov mov mov arpl es mov popf inc fsubs cmp inc adc lret push es jp adc add (bad) xchg xor (bad) dec les pushf insb inc (bad) fsts or pusha mov jb push pop xor xor fs mov push (bad) pop rorb lods pushf pop test sahf ret adc jbe lret xchg adcb xor mov jb shll cmp mov mov xor inc fdivr dec mov addr16 mov cli inc lcall xlat lods pop sbb enter (bad) adc lea or cld ljmp sbb out pop jl stos mov lret dec test cwtl add push shlb adc subl cmp cmp push pop sbb cmp jb mov jns stos pop xchg scas inc xor repnz inc aas inc or fimull pop jecxz dec jno push sub cli cld sarb gs add rcll mov stos pop push cmp notl jg negl call cli push bound ljmp xor imul negl mov jp test cmp insb mov or lea adc mov dec cmpsl pop mov sub loope pop dec xchg add test int cs mulb loop jmp rolb inc (bad) jae dec lock mov bound rcpps mov (bad) or mov sub mov das arpl insb mov pop add and push arpl jp lcall sbb loopne cmp shrl int3 adc in aad fisub or add push push ret (bad) ljmp cmp xchg add lret lret frstor push and sub cmp hlt adc or (bad) mov push xor cmp jbe sti sbb jae out pop cltd push arpl mov mov in (bad) aad adc mov push push (bad) fstpt inc mov cli imul pop stos jns dec xchg mov xor (bad) xchg add adc inc mov in gs (bad) stos and outsb mov es je jecxz xchg jne jb cmpsb add cmp mov mov test push stc repz outsb ja repz cs pop shll aam add popf fdivrs negl sub mov and mov cs popf imul xor mov cmp xchg stos adc add outsl jae xor jl sar inc fdivrl inc xchg push sub rclb jecxz xor push sub push mov dec inc and xchg or lock sahf (bad) jg test pushf ficom cs mov sbb aaa xadd mov test cltd iret sub (bad) xor jo inc lods ljmp cs add add lcall and add cli xor js dec fisubl adc inc cmp inc pop jge mov pop push pop jno movsl idiv xchg xchg pop pop mov ds xchg imul lock mov jnp (bad) lods iret and rcrl push mov movsl sbb flds call unpckhps inc push push cmppd lock push xchg pop xor sub enter hlt ss xchg rorl or in rclb sbb jle cmp (bad) jbe xor (bad) (bad) rcrb fcoml stos mov mov outsb jbe shrb test inc inc pushf sar or and push add je pop aam int pop jg fisubl xchg add add jg in idivb aad (bad) and iret mov xor fsubs call repnz popf test inc cltd cmpl js out imul inc loop ds add cmpsb out fcompl (bad) repnz mov out (bad) nop insb in (bad) mov adc out sbb dec lcall push mov stos mov adc ficoml leave stc arpl and sub out cmpsl inc fisubrl (bad) jns in leave add inc sub cmc or mov sub (bad) xchg pop mov out add sub push pop das std lahf repnz nop pop rcrl cmp in push xlat sub cmp (bad) sahf lods mov adc add push ret jnp mov mov push insb inc add pop dec and adc cmp cmc (bad) jae xchg sbb inc aaa cmc loopne movsb gs int3 imulb sub iret popf push sarl ret mov fnstcw call lcall int3 gs and cld push test mov add and gs outsb jmp cmp fdivrs nop pop out dec (bad) fwait pop xchg jbe sbb jg test cmpsb inc in mov sub imul inc leave sbb mov icebp cmp add mov int ret pop fist jns cmp sub out inc pop sub push add mov jns lsl mov xor sbb (bad) iret dec mov sub cmp fimull add leave das dec cmp mov inc xor je addb mov lea pop daa xor inc hlt push dec int decb loop xchg adc cmp ret sbb pop xchg bnd imul rorb mov daa pop loop mov shrb and push jns dec adc inc popa out lahf and push out sbbl add dec sbb int pop fild sbb jle xchg cld jmp or es add or xor arpl ret push jl ja add jns add rcrb inc or push lea mov cmp sti push fimul mov xor adc add aam jae sub pop loope mov push (bad) lcall jmp imul pop fmuls sub push push insb call lret sbb mov in sarb xchg imul (bad) js arpl push inc adc incl cmp addr16 add aam out sub inc sub xchg jp es adc jecxz rorl pop in inc (bad) xchg xor jmp xor fcmovnu mov cs and repnz mov int3 les (bad) cmpl (bad) push cmpsb dec mov mov adc dec add cld fs mov clc cwtl jg dec mov pushf mov dec xor xchg lock shll stos mov sub pushf mov int3 fwait dec fs push push cmp mov mov and jg test popa outsb mov popf xchg cs aam (bad) mov jmp mov les sub mov or sbb push je adc mov cmovle lods pop cwtl mov sti mov test jb in inc or mov cmp mov daa and shrb lret adc pushf adc cwtl aas ja pushf xor enter scas mov mov inc ds pushf add sbb insb ffreep ret sub pop pop dec xor std push inc mov movsb shr xchg mov aas add inc loope jae (bad) (bad) repz mov push push shrb add inc jp inc sbb aaa imul adc push (bad) mov data16 nop cs jmp fs or fdivs jmp mov mov aam xchg xor mov adc jnp pop xor iret adc popf mov pop lods imul or inc (bad) icebp or sti aaa fsubrl pop fnstcw arpl mov fisubrl push fldl sbb aam out divl xor repz outsb mov cmp ja inc or jge ja push pop sbb cltd xchg push add mov popf push movsl sti out movsb jb jmp jp test sub lds arpl out mov pop adc fidiv test mov xor pop cmp les in clc jae push rcrl push out movb icebp inc stos dec push addl jne addl push mov mov ds ret xchg lods hlt out test mov mov (bad) push test repnz movups xor pop sbb jnp inc add repz add dec xchg sub xchg cwtl fcmovnbe sub lds in call xlat clc outsb insl add ja lods jne lret jo push les push sahf aad sub adc adc jp sbb fstpl dec dec add (bad) (bad) fcoms cmp inc jmp hlt lds jmp or sub lds jb adc fmull (bad) xor jne push lds outsb lock js cmp daa pop add or dec fldt cmpsl xor pop xor pop cmpsl mov cs ljmp push in aas arpl lret jmp mov rclb and shlb cmp sub jbe sub pop inc add xchg aaa rcr push div movsl push cld test jl cmp movsl fbstp jne lods jnp inc pop fildl jp fsubr (bad) lea jo xlat cmp (bad) jge popl and add cmp adc adcl ret (bad) jl int3 cmpsl xchg lea pop repnz fisub sbbb cmp mov ljmp test mov cmpsb jecxz pop in adc mov sub outsb inc sahf mov fcompl leave pop xchg mov sub test pop out cmp inc mov push aad xor pop in inc mov (bad) lret add jmp cld or lea mov and adc dec in pusha out push movsb mov mov stc pop jp dec and add xlat and je aaa mov adc dec cmp xor iret pop pop pop daa scas sbb (bad) scas mov jns cli mov cltd mov push cmc fildll push mov xchg sbb push xorl dec push inc out sbb xchg dec xor mov or (bad) repz cmp pop inc jmp loope sbb or add sbb push jge mov popf pop mov lahf xchg (bad) mov fsubl sahf rcl (bad) xor push inc or add in jp xor mov (bad) cli jae inc nop pop and xor in (bad) int jecxz mov add inc jp add fucomp (bad) cmp shrb lds add push sub inc les outsl in add cmp add mov jle inc add ret dec sub adc daa stc lret push mov in dec push mov imul inc mov fnstsw sub aad xchg call mov pop sub xor sub int3 sub leave je mov dec mov imul gs outsb aaa imul pusha loope mov jnp inc in fidiv cld mov icebp lret jecxz inc xchg int3 inc push out pop test lret imul xor clc add jae aaa (bad) sarl cmc jnp mov jmp jle jno es dec jge out mov push shl add pop out bound hlt ds or sbb jmp enter loopne cmpsb sbb nop rorl imul aam fwait pop or mov test xor push mov push jp add pop aaa outsl jns fmulp pop inc mov jge lcall inc roll lods ljmp pop test dec (bad) testl or rcl jle,pn sub mov mov xor xchg push push lds dec cmpsl push jl (bad) adc cli jae push push out nop mov push outsl ret test sub inc mov ficompl fdivp jle out sub jb ljmp fiaddl sbb lret ds rorb incl int3 or pop mov mov cmc insl jge dec push pusha in mov jmp sub xor adc scas idivl xlat cli lock jbe mov outsb pop or movsb out inc jno insb (bad) outsl and stos xchg les xchg jns sbb (bad) mov xchg dec jnp out add pusha jg out es adc icebp (bad) jae inc add jp push iret ljmp sbb (bad) mov mov xchg push enter hlt adc in rolb sarb jns lcall push loop or adc imull rcr aad pop xchg dec lods enter and inc adc pop stos jl inc sbb mov cmpsb sub lea mov stos xchg (bad) xchg ljmp scas push mov (bad) cmpsb sub leave add mov aas int3 fimul fldt cmp mov mov cmp xor aas lcall and aas lcall fsubrs popa roll sbb hlt cltd (bad) fcmovnbe mov mov sti sub jmp pop cmc adc jno mov push adc dec adc push mov aam inc fsubl sbb dec fcmovnbe xchg (bad) jno xchg mov sbb and sub dec nop dec xorb nop (bad) adc sub pop or mov rolb and hlt dec (bad) imull stc jo jp xchg out sbb lock push daa dec test pop into jl mov mov jmp sub cmp js jle jmp inc jbe sub cld insb aas inc jne jb jo push stc and inc insb mov daa ret jnp cwtl or jmp pushl add cmp push xchg sbb sbbl push pop outsl xchg orl test sbb sahf ret test rclb dec mov xchg (bad) pop jb daa ds or add sub inc cmc mov into js ljmp fcomip xchg jno dec les push pushf (bad) mov or gs or add jle das mov mov fistpll lahf ja mov sbb or rcrl pop sbb add pop sbb shrl jmp cli out enter daa mov push jecxz lcall in outsl mov and (bad) sbb jae js inc push inc inc dec xchg xchg sbb mov mov cld and cmp mov push fisubl cli dec mov pop push mov jno popa jl mulb cmc sti xor or xchg mulb aam mov inc pop add and loopne push es aaa add or inc outsl enter and cmp fbstp cwtl les outsb pop xor sar in and xchg jge (bad) jecxz lds and xchg push (bad) dec and mov dec or pop cs pop jno or insb dec pop int out fsubs inc fldl jo push fnstenv mov fimul ret push pushw ja xchg jns les push pop pop mov lret xor xchg into adc jle into (bad) int3 push sub xor hlt pop or mov add pop xchg (bad) mov orb lcall fwait mov inc hlt out scas pop cli and cmp pop pop call xorl lcall and mov das negb pop xchg (bad) test xor cmpsb mov mov jl test cmp hlt popa sbb (bad) inc cwtl ljmp enter hlt mov (bad) bound push add aaa xor mov test dec inc loope mov aad xchg jne fs lahf xor lea gs xorb sub dec sbb xlat ret daa or test jnp dec (bad) xor push std pop loop push cmpsl ret enter lret pop xchg mov adc scas (bad) mov mov pop rorb imul inc push jmp sbb ljmp pop inc ss out out mov sbb and adc jne xchg lods xchg xchg push inc enter aad sbb add test dec and pop mov clc mov xor in arpl jg cmp rcrl stos sbb xor stos pusha jbe xchg dec test (bad) sbb add aas mov daa and lds hlt add xlat test mov jo lahf popf leave jecxz lea int mov jecxz rolb loopne add and xchg mov and mov adc lret iret pop scas inc sbb adc adc scas fstps ror xlat in fildll cmc adc inc cmp packuswb pop push nop inc xchg rcl inc clc lret inc jb call rolb repnz movsl call sub inc xchg icebp lret add add test std pop loop test dec sbb xchg inc xorb sub imul xlat rcrb sub mov sbbl jl sub (bad) aas loope or les jnp repnz xchg (bad) lret and lret cwtl nop or iret (bad) push pusha and aad cld mov lahf cmp cmp mov cli push lret cmp fmuls xlat sbb imul rcl out pop or mov xor xor add enter cmp push fadds cli (bad) sub jns jo fcoml mov mov lods adc out cmpsb nop lock push (bad) sbb std aas inc pushf sar pop lret adc mov iret mov mov jb sbbl add cmp push movsb xchg cmp test arpl lds (bad) ljmp push mov test in and pop add into sbb frstor jbe ja scas into jnp fistpl or jae jns lret cmp push add loopne xchg jmp repz scas sbb das nop movsl pop add lahf mov xchg ret lahf sub hlt cmpsl rcrb mov ret mov ljmp mov sub sbb (bad) enter adc je push decl push lahf int xlat push fmull cmp fisubl pushf les aaa fwait pop lahf std mov mov pusha aas arpl (bad) imul mov pop sbb outsl es movsl shrb ret sahf adc jp idivl push (bad) icebp cmp test int3 xor mov pop mov push (bad) jnp int3 in inc cwtl ficoml test xchg jecxz xchg out into and mov cld aas mov fnstsw push sbb (bad) popf jmp int3 je in jnp mov cwtl int and xchg aaa pop fisttp add icebp mov mov mov mov adc mov jge inc xchg inc lea mov out cmp (bad) nop and jo fwait inc push ja jno push dec in mov out pop jno push lret (bad) or cmp int3 mov pop dec or rcl ljmp mov arpl xor aad test cwtl int3 scas es or aam mov repnz test fdivl test xlat test inc xchg scas js scas gs (bad) mov mov or jno adc mov mov (bad) mov aas outsb loopne in adc cmp ret cli out add inc out add cmpsb in in jle xchg sub sub jno in pop sub out (bad) mov call xchg test inc imul sub or cmp cmpl mov (bad) fwait mov mov push aas loop lret sbb orps mov adc push negb bound inc dec fs and mov scas out loop mov and scas ret jbe js test pop inc loopne insb addr16 jecxz xorps pop or jbe fstps push cmp or jmp mov addr16 int3 loope push popa or dec push enter in push fwait sahf test lret jg xchg sahf xchg lahf lret mov jne mov stos pop fmul pop movsb insb fildll test pop xor inc dec idivl adc (bad) testb jmp stos inc fnstcw and test mov insl xchg jg popf pushf imul sahf xor push aam les std adc aaa jp or lcall aam adc mov (bad) dec dec push clc fcom inc out popa jns mov xchg dec insl inc (bad) push mov and movsl jae pop xchg .byte dec add add add add add add add push add push fdivrs add add add inc add add add add add add and add and add or add orb add push add add and add or add addb add or add sub add add sub add xor add add adc add add sub push add or or push outsl adc add push xor add or cmp add add or adc add sub add or or cmp dec loopne and and adc loopne add sbb add adc and aas sub fs adc jo jl adc and les (bad) add add pop and dec adc and dec pop adc adc and rclb (bad) xor adc sbb sub adc sbb sbb dec loopne adc pop dec sub adc sbb sbb dec sbb sub adc or sub pop dec sub adc sbb sbb dec loopne adc adc sbb sbb dec sbb push adc sub adc adc and dec popa adc pop adc adc pop pop adc adc adc adc adc adc adc adc pop pop adc adc adc aaa rclb pop push rcrl pop pop adc adc pop pop adc adc or inc (bad) (bad) lcall adc adc adc adc inc adc adc or adc sahf adc sbb pop sbb adc adc sbb pop sbb adc sbb sbb adc adc pop or pop adc adc pop adc adc adc mov or xchg pop lea adc and (bad) (bad) lcall push adc xchg pop daa pop adc adc adc xchg sbb adc adc adc xchg pop adc adc adc xchg pop lock pop adc adc xchg and adc adc adc xchg and pop adc adc adc xchg and (bad) (bad) lcall adc adc adc xchg pop mov pop adc adc adc xchg pop jno pop adc adc adc xchg and pop ficom popa data16 adc adc xchg sbb adc pop pushf pop pop adc adc or and js movsb pop sahf adc sbb adc sbb adc sbb adc sbb adc adc adc sahf adc adc xchg and pop push pop adc sbb sbb or push adc push xchg adc xchg popa sahf adc or adc adc adc xchg and adc adc xchg adc xchg and pop push pop pusha sahf adc or xchg sbb sahf adc daa pop adc adc or sahf adc or push adc adc sahf adc or pop icebp pop adc adc adc xchg and adc adc sahf adc or or or or adc xchg adc jae pusha sahf adc setne mov add adc adc or adc movups adc or adc adc adc xchg adc adc or pop bound pop adc push sub or xchg pop bound adc adc or xchg popa sahf adc adc or adc adc xchg and ljmp sbb or xchg pop pop fs adc adc xchg and inc push pop sahf adc or sbb push adc adc or pop adc adc or adc adc xchg adc adc or sbb pop adc xchg pop (bad) pop pop adc adc or pop daa pop adc pop or sbb or xchg adc adc adc xchg adc setne adc xchg pop hlt pop pop adc or xchg adc xchg pop sahf adc or or or pop sahf adc adc or pop adc adc xchg pop clc pop pop adc adc sahf adc xchg and adc adc adc or adc adc adc xchg pop adc adc pop bound adc adc sahf adc or or or xchg popa sahf adc or or or xchg popa data16 adc adc sahf adc xchg sbb push adc adc xchg pop push fs adc adc xchg adc pusha sahf adc adc xchg and xchg and adc or or or xchg popa sahf adc push adc push xchg adc xchg popa data16 adc and mov fstps sbb or adc xchg adc xchg and pusha sahf adc or adc xchg and dec inc mov adc adc xchg and adc inc lds pop adc adc and mov dec pop sahf adc adc xchg and dec inc mov pusha sahf adc or or or and rolb sbb or xchg and mov dec pop sahf adc xchg pop pop adc adc adc xchg and xchg and adc adc xchg adc and xchg test adc adc xchg and out pop sahf adc or or or loop sahf adc adc xchg pop or adc or adc adc adc or or or adc adc xchg adc and jne mov sahf adc adc xchg adc or mov or xchg and sub (bad) pop adc adc or or or adc adc xchg adc pusha sahf adc adc xchg and sahf adc adc xchg adc adc movups setne or sahf adc je adc pop adc adc pop or and arpl pop adc adc adc xchg and aam jge sahf adc setne adc adc adc xchg adc adc or or or adc xchg popa sahf adc adc xchg adc xchg and sub (bad) pop pusha sahf adc adc xchg and aam jge sahf adc adc xchg adc and jb pop pusha sahf adc adc xchg adc adc adc xchg adc adc xchg pop sbb adc adc xchg sbb adc adc xchg adc pusha sahf adc xchg pop negb push adc or or or adc sahf adc or or or inc pop sahf adc adc xchg sbb adc adc adc xchg pop adc adc adc pusha sahf adc or or or cmp pusha sahf adc adc or pop cmc pop pop adc adc xchg pop or or movups setne adc adc adc or xchg pop fs adc movups setne pop pusha sahf adc xchg sbb pop adc adc xchg pop adc adc or or or ljmp adc xchg adc adc adc xchg adc or sbb adc sbb adc adc or push adc or or or xchg popa sahf adc adc xchg pop std pop pop adc adc sbb adc pop or pop push pop pop adc adc adc or pop bound pop adc pop repnz pop adc pop or adc adc adc or sbb adc adc adc xchg adc adc adc sahf adc or sbb adc xchg sbb adc or push sahf adc xchg adc adc adc or adc adc or pop sahf adc movups setne or xchg popa data16 adc adc xchg adc xchg popa sahf adc adc xchg adc or adc adc xchg pop clc pop pop adc adc push adc push xchg adc sahf adc xchg and xor adc adc adc xchg and sahf adc adc xchg adc or push pop pusha sahf adc and scas dec pop adc adc adc xchg and sahf adc movups setne or sahf adc or pop adc or adc adc or stos pop sahf adc adc xchg adc or adc or or or lods sub pop pusha sahf adc or adc pop out pop pop adc pop or push adc adc xchg pop cli pop pop adc adc adc xchg pop or adc adc adc xchg pop bound pop adc adc xchg sbb adc adc sbb adc push xchg sbb adc pop xchg sbb adc adc adc xchg pop adc adc adc xchg pop stc pop pop adc adc or push sahf adc pop negb adc adc or xchg pop bound pop adc xchg pop jns adc adc adc or pop adc adc adc xchg pop cld pop pop adc adc adc sahf adc adc sahf adc xchg pop ss adc adc adc xchg and push mov sahf adc xchg pop bound pop adc push adc push xchg and rcr pop sahf adc adc xchg sbb adc adc xchg pop lret adc pop or pop adc adc adc or adc or adc adc adc or adc adc xchg pop sbb adc push xchg pop bound sbb push adc xchg pop sbb adc adc xchg sbb adc pop or pop adc adc adc sahf adc or and push xlat stos pop adc adc or or or mov adc xchg sbb adc adc and adc adc or pop adc or adc adc xchg pop rcrl adc or or or and icebp sub adc or or or adc xchg and push xlat stos pop pusha sahf adc adc xchg sbb adc adc pop cmc pop pop adc adc adc xchg and icebp sub adc or xchg adc sahf adc adc xchg adc and pusha sahf adc adc xchg and sarb or xchg pop bound push adc adc sahf adc xchg and adc pop or adc pop or adc adc adc xchg adc adc xchg pop stc pop adc adc adc xchg pop bound sbb or movups setne or xchg popa sahf adc adc xchg sbb adc adc adc xchg sbb adc adc adc or adc adc adc or push adc pop rcrb adc pop xchg adc adc adc xchg pop bound pop adc or xchg and dec mov adc adc or adc sbb adc adc or and sahf adc push adc push xchg adc adc adc sahf adc push xchg and push rolb adc adc or sbb sbb adc adc push adc push xchg and stos sub or push adc push xchg adc xchg and push rolb pusha sahf adc and cmp or adc adc xchg and stos sub or adc xchg adc and mov sahf adc adc sahf adc stc xchg pop adc adc sahf adc adc and into jae pop sahf pop inc adc adc or push sbb push adc sub add push adc adc adc add push sub add adc push add add add add adc pop inc xor sub or or sub push pop maxps pop maxps xchg add sbb add and sub pop pop or pop pop or add iret sub add add add add add pusha popl add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or mov add rorb add and add add and jb outsb addr16 add add add push add sub add add add inc push dec inc add add sub add add and outsl bound add cmp add adc add and dec inc add add add add and jb outsb addr16 add add add add add and outsl bound add push das add add add and push add add add inc add mov add cli and add add add add adc add push add add add add add pop add add add add add add add add add add add add add add add pop add add add add add add add or add add add add add add add push add add add add xchg sbb add add add add add jg add add add add sub push add add add add add add add add or add add or add add add add or add add or add add or or add add or or add add cmp push add pop or add jnp push add add add or add rorb add add or fcoms notb push add adc push add notb push add movb add notb push add add add adc add add adc add add adc add add adc add add adc push add adc push add adc add add adc or add sub push add adc push add mov push add add adc add add adc adc add adc add add adc add add adc add add movb add add add add add add adc add add adc add add sub push add popf adc pop adc enter or call add movb add hlt add add add add add add add add adc lock adc (bad) adc sub push add arpl push add add push rclb push add pop and or jg cltd pop push add add add add add add add add add add add add add add add add add add add add add add add or sbb addb add add add add add add or add add add add or add add add add add add add add add add add add or adc inc add add add or adc inc add add add push add add add add add push add cmp pop add adc add sldt cmp pop add adc add loopne add cmp pop add adc add push adc add add add adc xor and push add adc add add add mov mov adc mov add push (bad) add add add add pop xchg add add add add push mov xor rorb add add or push insb add add push jo add mov add add add add add push cld add add add xchg sbb add add add add add add addb add xchg add add mov add add add add xchg add add add add xchg scas add add add add add xchg sbb add add add add add adc mov add add nop cmp add add add add adc faddl cmp add jl add add adc loopne inc add add add add add add cmpb add add add add add cmpb add add add add add js add add adc pop add add fnsave add add xchg scas add add add add add add add inc add add les sahf add add add add add addl add divl add add xchg sbb add add add add add xchg scas add add add les sahf add add add inc add add addl add xor add add xchg scas add add add dec add add xchg add or aaa add add addl add xchg add add addl add pop dec add add les sahf add add add dec add add addl add or add add xchg add add add movsb aaa add add adc inc or dec add add xchg add add add dec dec add add adc mov rolb add cwtl push add add adc iret or add adcb add adc (bad) or add pop push add add adc fisttpll in add test add adc out or add int3 push add add adc cmc or add or add add add or add sbb add add xchg sbb add add xor add add add add add push pop add add adc in add add sbb add add add add pop add add adc adc inc add clc pop add add adc call add pop add add adc mov push add in pop add add adc stos add add int3 aaa add add sbbl add add (bad) add add xchg add add pusha add add xchg or add add lods pusha add add xchg or add add sbb add add xchg or add cmp add add add clc pusha add add adc adc mov add or add add adc mov add add add adc lock add add adc pop add add hlt add add adc nop or add xor add add adc mov add add add adc test mov add clc add add adc scas or add shrb add add add add add add or add jl add add xchg or push out add xor add add inc cmp add add add jo add add xchg sbb add add mov add add adc mov add add mov add add add add mov add add add insl add add adc faddl pop add mov add add add add add jle add add xchg sbb add add mov add add xchg sbb add add add add cmpsb add add add add add add add add add add add add add add add add add adc pop add adc adc adc adc adc adc add add add add add adc add adc add add add add adc add adc adc add add adc add add adc add add cmp adc add add addr16 add add add add add add add add add add add add add adc add add adc add add adc add add adc or sbb daa adc xor or cld add add adc cld add add add add add add add add xchg add rolb add add push popf add sub dec add mov push mov sbb jg movb add jmp push cld add add xor lahf push or or cmpsb push add mov mov add push cmp mov push mov scas add cltd add push jae or call jp adc sub mov mov inc pop sub sub dec pop stos push and pop pop mov mov pop pop cmc add add movb add add add pop incb mov pop sub rcll xchg and fist sub sub pop add add add add add add add add add add add add add add add add push add add add add addb jg jg jg add add add add add add add add add int3 add sldt xor add push add add add add add add add add add add add add add add add add int3 add adc sbb cs inc push addr16 jg xchg push sahf push mov push lock add sbb or add or add add in loopne add add add push repz add add add add add add add add add add add adc add add add and add add add or andb add and add add add add sbb cmp sub sub negb lret inc mov jge hlt fildll sub mov fcmovne jne daa dec lahf jmp repz or jmp (bad) mov ficom lea dec and sub movsb mov (bad) and jp cmp jmp adc pusha lret outsl outsl sub nop mov lods sti sbb ja add or xchg out add add add iret adc add add jg add add add add add add add add add add add add add add add add add add add add add add or add add add add add add add add add rcll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add fadds add add dec add add add add fadds add add dec add add add add fadds add add push add add add add in add add push add add add add in add add pop add add add add in add add pop add add add add fadds add add pop add add add add fadds add add jae fadds add add ja fadds add add ja in add add jns fadds add add jnp fadds add add jge fadds add add jg fadds add add mov fadds add add mov in add add lea fadds add add lea in add add lea ljmp add add add add add adc jl jb xchg add add add add add add add add add add add add add add add add add mov push add mov fs dec add dec add add push add push adc pop push insb add push add sub add add add add pop add add add add add add add add add adc test adc inc add add add add pop add sbb pop add add add add add add pop add add add and test and add add add inc arpl popa insb imul cmp outsl fs gs arpl outsl jb loop scas loop scas loop mov xorl scas loop mov orb mov subl scas loop mov orb scas loop lods loop mov subl scas loop lods loop (bad) loop stos loop lods loop lods loop scas loop test subl scas loop (bad) loop lcall popa insb push jb je arpl gs gs xor cs insb add subl mov subl stos loop mov subl stos loop stos loop (bad) loop test orb lods loop (bad) loop mov subl stos loop test subl scas loop (bad) loop mov subb (bad) loop mov orb lods loop mov subb stos loop stos loop lods loop mov subl stos loop (bad) loop test subb mov subb stos loop lods loop lods loop lods loop mov orb scas loop stos loop lods loop stos loop scas loop mov subl mov orb lcall stos loop (bad) loop (bad) loop test subl mov subl stos loop stos loop stos loop lods loop (bad) loop scas loop stos loop lods loop lods loop mov subl stos loop (bad) loop lods loop mov subb lods loop (bad) loop mov subl loop lcall insb imul arpl jns je insl add xorl scas loop stos loop scas loop lods loop lods loop lods loop lods loop mov orb mov orb mov xorl mov subl scas loop mov orb lods loop stos loop stos loop stos loop mov subl lods loop stos loop lods loop lcall arpl add (bad) mov loope lods add jae insl bound push jns je insl cs gs arpl outsb add and add (bad) mov add and add (bad) mov add (bad) mov je insl cs imul inc outsl jb jae inc jne outsl push arpl gs outsl fs (bad) movsb loope mov loop lods loop scas loop stos loop stos loop mov orb lods loop stos loop stos loop scas loop test subb scas loop lods loop lods loop mov subb stos loop mov subl mov orb stos loop stos loop lods loop scas loop (bad) loop lods loop lods loop stos loop stos loop stos loop lcall loop mov orb mov orb stos loop (bad) loop mov subl scas loop scas loop test orb scas loop scas loop (bad) loop scas loop mov orb lods loop scas loop lods loop lods loop scas loop test subb loop scas loop lods loop stos loop mov sbbb orb mov xorl scas loop mov subl mov orb lods loop mov subb test orb stos loop lods loop lods loop stos loop scas loop lods loop mov orb lods loop lods loop mov subb lods loop stos loop lcall jb inc outsl js push push imul imul addr16 (bad) movsb add subl mov orb scas loop scas loop mov xorl mov subl mov subb scas loop stos loop lods loop stos loop scas loop mov subl loop mov orb lods loop mov xorl stos loop lods loop lcall stos loop (bad) loop lods loop scas loop stos loop lods loop test orb lods loop mov subb mov orb (bad) loop lods loop lods loop (bad) loop test subb stos loop mov subb lods loop scas loop scas loop (bad) loop (bad) loop stos loop stos loop lods loop lcall scas loop stos loop (bad) loop stos loop lods loop mov orb scas loop mov subl mov orb (bad) loop mov orb scas loop stos loop scas loop mov orb loop scas loop stos loop mov subb scas loop mov subl lcall lods loop scas loop scas loop lods loop lods loop (bad) loop mov subb stos loop stos loop scas loop scas loop (bad) loop stos loop scas loop lods loop lods loop mov subl stos loop lods loop stos loop lods loop stos loop scas loop stos loop mov subl loop lods loop scas loop lcall scas loop mov orb test subl scas loop scas loop stos loop (bad) loop mov orb (bad) loop stos loop mov orb scas loop lods loop scas loop (bad) loop lods loop stos loop stos loop stos loop test subl lods loop stos loop (bad) loop mov sbbb subb stos loop stos loop mov subl loop (bad) loop scas loop stos loop stos loop (bad) loop (bad) loop test orb lods loop lods loop mov subl lods loop mov orb test subb mov subl lods loop mov sbbb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add orb scas loop lods loop stos loop mov subl lods loop stos loop stos loop mov subl loop test subl mov subl stos loop mov subb mov subb loop stos loop scas loop stos loop mov subb gs jns add jb inc insb outsl jae fs jbe outsb je jb jae inc jbe outsb je jb jae loop lods loop (bad) loop mov subl scas loop mov orb loop scas loop mov subl lods loop (bad) loop stos loop lods loop mov orb loop stos loop test subl lods loop test xorl mov xorl jb popa jns loop lods loop lods loop stos loop lods loop test subb mov orb lods loop lods loop stos loop scas loop lods loop mov subb stos loop mov subl lods loop test subb stos loop test orb scas loop lods loop scas loop lods loop mov sbbb (bad) movsl add subb lods loop mov xorl stos loop stos loop test subb lods loop stos loop (bad) loop stos loop lods loop (bad) loop lods loop scas loop stos loop mov subl scas loop stos loop (bad) loop test orb mov orb test orb jae insb jbe inc jbe outsb je jb jae push jns gs (bad) mov (bad) test loope mov (bad) mov loope mov (bad) lods add imul insb gs (bad) mov (bad) mov loope mov loope mov push jns je insl cs jb ja outsb add jp add orb scas loop (bad) loop mov subl (bad) loop (bad) loop lods loop mov subl lods loop stos loop stos loop mov subb stos loop (bad) loop (bad) loop test subl lods loop lods loop test subl stos loop mov orb insb jne push jns gs subb mov orb lods loop lods loop lods loop lods loop scas loop stos loop mov subl (bad) loop mov subb scas loop test subb stos loop stos loop lods loop scas loop (bad) loop (bad) loop stos loop lods loop (bad) loop scas loop mov subl mov sbbb push outsl imul fs arpl push jns je insl cs arpl imul arpl loop stos loop stos loop mov xorl lods loop mov subb (bad) loop lods loop mov subl mov subb mov orb mov subb (bad) loop (bad) loop stos loop stos loop lods loop lods loop mov orb stos loop mov subb mov sbbb orb lods loop mov subl loop stos loop lods loop scas loop scas loop stos loop lods loop scas loop scas loop stos loop stos loop mov orb scas loop stos loop stos loop lods loop lods loop lods loop stos loop lods loop scas loop mov subl stos loop lods loop (bad) loop lcall jb gs popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add je imul add jae gs cs outsl outsb imul je outsl outsb add (bad) movsb loope movsb add jo outsl insl popa imul (bad) test loope movsb loope mov loope mov loope mov push imul movsb loope mov inc outsl outsb je outsl insb add outsb je outsl insb inc outsl insb insb arpl outsb add subb stos loop lods loop stos loop lods loop (bad) loop scas loop lods loop mov subb stos loop stos loop scas loop stos loop stos loop scas loop lods loop stos loop mov orb scas loop mov subl mov subb stos loop mov subb stos loop scas loop lods loop stos loop lcall mov orb lods loop lods loop stos loop lods loop lods loop lods loop mov orb scas loop (bad) loop scas loop stos loop mov orb mov subl scas loop mov subl stos loop lods loop stos loop stos loop (bad) loop test orb loop lcall outsb addr16 inc arpl popa insb imul gs imul insb imul push gs imul add je inc gs jne je inc gs jne je loop stos loop mov subb loop scas loop lods loop scas loop mov subl stos loop mov orb mov subl (bad) loop scas loop mov orb stos loop lods loop scas loop lods loop stos loop mov subb mov subl stos loop mov sbbb xor xor cmp xor xor xor aaa cmp inc inc inc inc inc inc inc xor xor inc inc cmp xor inc cmp aaa aaa cmp inc xor inc inc xor inc inc ss xor inc cmp xor cmp add and add subl (bad) loop test orb (bad) loop test orb mov orb lods loop mov subb stos loop lods loop stos loop scas loop stos loop mov subb lods loop test subb lods loop stos loop test orb lcall lods loop lods loop lods loop (bad) loop scas loop test subb lods loop (bad) loop scas loop mov orb lods loop lods loop lods loop test orb mov subl stos loop mov orb lods loop lods loop stos loop stos loop lods loop stos loop test sbbb subb lods loop stos loop mov subl scas loop lods loop (bad) loop scas loop scas loop mov subb mov subl lods loop scas loop lods loop stos loop mov orb lods loop stos loop (bad) loop mov xorl lods loop lods loop lods loop lcall lods loop stos loop mov subl mov subl stos loop scas loop scas loop scas loop mov subb stos loop lods loop mov orb mov subb lods loop stos loop lods loop (bad) loop mov subl mov orb mov orb outsl push popa insb imul imul popa je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul jne add jae gs cs jne je insl gs outsb je jb jo gs imul jo jb jae dec insb fs jae inc je jb bound add jae insl bound imul imul outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl jo jb addr16 jb bound add insl push imul je jb bound add jae insl bound imul outsl outsb inc je jb bound add jb outsb add outsb je imul je outsl insb add outsb outsl insl add jb popa insl add jae gs cs dec add insl outsl jb push je gs insl add je outsl fs popa jae add popa add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add cmp fs xor xor sub gs jne arpl jb,pn jae jne arpl add insb gs outsl jp jns outsl cs gs jne arpl jb,pn jae jne arpl add je xor push jne je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add je add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add fs add je inc jne insb jns jne insb imul insl add je dec outsb addr16 add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul outsb je xor pop push jns add outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul jae gs bound inc outsl outsb jae insb add imul jae je dec popa insl add je push popa bound fs dec outsl popa add je inc jne outsl push arpl gs outsl fs je popa outsb imul jae jne arpl popa insl gs dec inc imul insb add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 dec push jne jo jb dec outsb imul add imul inc fs je bound arpl arpl add je dec arpl add je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add je push gs add fs outsb imul gs popa jns jne add je inc insb imul add je inc outsl outsb je outsl insb jae addr16 inc outsb je jns outsl imul push outsw add jb inc insb outsl jae fs jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae add outsb je popa outsb fs gs popa fs dec outsl popa add jo imul add outsb add outsl outsb jbe jb imul jb push push gs bound arpl inc outsl insl jo jb bound xor inc imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je popa je add je dec popa insl add outsb je imul dec inc insb outsl outsb gs bound push je imul fs push jns je insl cs gs add jo outsb add je imul je jae je inc outsl arpl push gs add jb popa jns inc push outsb jbe imul outsb popa bound imul jns gs jae je dec outsl arpl imul jne gs bound push jns je insl cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl push jns arpl outsl outsb imul je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je pop inc jae gs bound inc gs js arpl imul insl bound push jne jo outsb fs popa jns jne add je dec insl popa add imul push imul pop inc jne outsl push arpl gs imul outsb jae inc jb popa outsb addr16 insb gs outsb je outsl insb insb arpl outsb add jae gs cs imul inc outsl jb jae dec popa jns jne add outsb jbe jb add jns add outsb arpl add je popa je add je push popa bound outsl jo inc insb outsl jae add add add add add add bound xor add sub add aaa add add popa add add add add add add data16 xor add add dec or mov and and and imul and outsl and sub insb and and and and and and and imul and and sub outsl and insl and imul and and and add dec fiaddl jle jmp add add add add sbb or or add or wbinvd sbb pop push sbb mov push add add sbb and add adc add or add add adc add push add push or add push add add or adc add push add push add or add add adc add push add or add sbb or push sbb adc add add add push adc adc add adc push sbb sbb add sbb sbb and push adc push adc push adc add adc sbb sub or adc add pop add or push or adc add or push push add add or or add push add xor or add or add push or add sbb or mov pop jg aad cmp adc add push add xor add add add add or adc add push add add or adc add push add add or adc add push add cmp add adc add add adc add or add push adc push adc add add add adc add adc add add dec or add adc add or add add or push add adc add push add adc or adc add push add add or add add add or adc add push add xor add push add push add or add adc add add add inc add add dec add adc add add xor add xor push adc push adc push add add adc add push add add push or add add add add adc add push add or or add add add push push add add push add push jb jo outsl outsb inc js gs imul ja add add push sub add xor xor xor xor fs sub sub aaa xor popa popaw cmp add add add arpl popa insb imul add or add add add add add adc jo jb addr16 and xor xor add add add add xor xor xor xor add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add and add subb add add pop add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add add add and pop sbb add add or or or or or wbinvd or or or or add adc and adc push add add add add or add sbb add add lidtl add add add or pop push or or sbb pop or adc or add add push add sbb and add sbb pop add sbb add add or or or or add push add add or sbb or or add adc sbb inc or or or or or sbb or or sbb push pop add or or lea or push push pop add or sbb or and add sub pop add push pop or adc and add or pop add add adc or add mov add adc pop add add push and add xor and add xor pop add or adc or add xor pop add add or add push add stc push and add cmp and add addl adc sub sbb adc sbb sbb adc adc adc push adc add or or add add push add push pop adc push push push or adc sbb sbb add add adcb or adc adc adc add add inc pop and add add add add pop adc or andl or sbb and or push and adc add or or or or or sbb add add or pop or or or xor or or or or and or and sbb sbb sbb or or or pop pop or or sbb and add cmp adc or adc pop or sbb or or and adc sbb sbb sbbb push and add adc or pop or or sbb add adc dec add add add pop or adc or add adc or pop or or sbb pop push or orl add adc add pop pop or or or push or pop or xorl add dec or or add sbb add add or orl add add push push or or or or or push add sbb pop pop or or or or dec inc popf sub mov push mov add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc xor daa push xor xchg daa push cmp daa push cmp daa push cmp xchg daa push aas xchg daa push sub fsubrl add add add add add add add ljmp add add add add dec add add add add xor add add add add add add arpl sub add add add add xor add add add add add add arpl sub add add add and add add add add add add add arpl sub add add add and add add add add add add add arpl sub add add add and add add add add add add add arpl sub add mov add and add add add add add add add arpl sub add add xor add add add add add add arpl sub add add xor add add add add add add arpl sub add add xchg add xor add add add add add add arpl sub add add add and add add add add add add add arpl sub add add scas add and add add arpl popa add sub add add add add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb fwait outsb dec dec into je out push adc (bad) out jo test cmpsb mov in dec pushf cli imul xor std (bad) fdivp imul arpl jmp roll in push or push nop sub lods sbb out in fdivr repz mov push mov loopne xor mov in ffreep jmp ficom (bad) inc or cmc xor inc stos sub jnp aam jl mov out rcrl xchg fdivrp add inc mov jae repz add (bad) (bad) adc jno clc sub xor cmp mov mov hlt ret je dec lods (bad) icebp or xor out sbb in cmpl insb cmpsb iret and ss mov and sub add lds mov xchg pop bound or or (bad) int3 ds jl cmpl popa (bad) xlat repnz aad ss push and (bad) fcmovu dec cs cmp les sub repz popa pop out xchg and and jae push push leave aas out push pop divb xchg jb fiadd fldenv cmp je mov stc dec in (bad) aaa sahf rcl add pop xchg adc sub jns mov and cmp sbb mov lds or cli ror add and popa loopne ljmp inc stos push jmp cmovbe daa hlt dec add xchg mov jle add mov xchg scas (bad) ja stos pop sbb sbb mov lret les or mov rorl (bad) cmpsl movsb test jne mov leave in ret lds out out fnsave in inc out pop aaa jge andb fdivl xchg arpl xchg xor xor mov dec mov pop mov or mov pop (bad) jo mov mov fsubrs idivl stos pop in dec and mov fwait add mov xor cmpsb pop in fild jbe cmp jb pusha bound rorl and xchg jnp cmp jle xor pop mov adc int3 out std add pop lret mov mov in adc pop popf es jo cli xchg and call call mov rorb das inc fbld fsubrp lret mov lods mov mov in and lods sbb mov adc lea inc dec (bad) fdiv pop leave bt push mov (bad) clc pop cmp push or in nop (bad) xor adc (bad) jne add cmc stos jmp add (bad) or xor lahf mov dec adc or pop push add cmp or stos ret sbb mov ljmp dec dec jle in lods sbb pop (bad) je and push fsubrl inc in cmp dec jae adcb mov imul shlb negl mov xor adc popa out (bad) adc cltd jmp sub mov jle mov push mov daa repnz cltd int mov clc pusha push xchg xchg mov push aaa fmulp movsb addr16 push or xor adcl cwtl stos sub xchg mov xor cmp dec fcoml inc mov adc (bad) (bad) xor pop xor pushf iret mov and adc cmp push ret and add mov push xor movsl subl or cmp mov mov xor jnp xchg xchg jnp cmp fs dec push (bad) xlat dec mov inc dec sti (bad) sbb adc and xor cmpsl mov scas rep or int (bad) fcoms dec cmp decl sub sbb jge ror outsb mov in cli js ds mov inc sbb sub push xor pop push aaa (bad) xchg std aaa mov xor (bad) sarb sub in dec xor or sub (bad) and push sub leave adc in inc js cmc lds push dec (bad) jp push adc mov add dec fwait lods xchg cs push inc xchg sbb xchg or bound movsb in add negl mov hlt inc fs movsb scas or mov mov mov push mov into in add inc shlb xor in loopne andb loop xchg jge adc mov or cmpsb push sbbb mov xor iret xlat pop in xor push push insb (bad) xchg hlt add dec jnp popa lahf pop test movzbl (bad) into mov testb and mov adc loopne mov xor jge stc das adc ljmp cmpsl pop pop mov jns movsl ss test mov lds mov mov sub jg jnp mov loope notb lahf pop fnstsw and (bad) mov adc stos mov mov aam mov xor push push push xlat or movsl xor mov push add dec inc cld (bad) pop pop sbb sub push push mov loope jnp push int3 int mov aas or jno pop jmp mov pop ljmp jl fwait jl xchg jbe cltd jmp inc pop leave or sti jg push push int mov cmp pushf inc cli je loopne push mov (bad) lret lcall into xor xor dec sub xchg push leave adc jae cmpsb ljmp add stos arpl sbb mov inc mov xchg ljmp sahf bnd dec push xor sub push adc mov mov fs sti push aam fidivr (bad) iret xor ret fstl or mov push or xchg sti or sub arpl das mov jbe mov ja mov lret ret mov call sar jbe pop (bad) (bad) hlt adc stc and jb fwait lods lods xor sub mov (bad) xor aad inc sub fcom jno fwait jmp mov sbb repnz sarb addr16 (bad) ds dec in int3 mov mov mov jl lock daa divl jno popf mov cmpb mov cli and xchg or mov jl adc mov in mov stos push dec aam pop sbb mov das cmp dec jne xchg not icebp sar out jl lds jnp test rol jp adc fadds jne pop jbe cwtl or cmpl fisttp test push test mov mov and jge jne lods cmp mov mov jnp rcr mov hlt inc mov xchg cmp dec push mov arpl (bad) add adc jg aaa movsb lret mov mov addr16 cli out js ja in iret sub xchg mov pop jge bound mov xchg jns xchg mov ds out push push les push pop mov push jno or pop lret lcall jecxz push in pop (bad) sub sbb dec cli jmp pop loopne sub inc gs push and lods pop insl xor jle loop outsl iret call aas iret dec push xchg inc or pextrw sbb imul pop pop jmp rolb mov xchg loope test vpxor (bad) mov dec rcll (bad) pop inc test das js push sub fiadd (bad) xor xchg fwait inc mov cmp icebp outsl aas (bad) xlat inc dec xlat les inc pop sbb sbb (bad) dec popa push cltd mov mov pop mov nop fisttpl dec or stos gs (bad) or mov int jle or rorb in mov pushf xlat int lea imul aaa sarl mov jge xchg frstor sbb in push jp lcall adc or sar incb scas adc sahf mov jge or or jg out and and xchg (bad) push cmp dec jle pop inc dec shlb arpl dec mov repz cli das cmp mov jg es pop mov lods jo and insb jp scas sub aas int jl out sub vpaddsw (bad) push add xchg (bad) pop into inc xor popf cwtl cmc mov cmc inc xchg je jno xchg push repz sbb sub xchg popa out push outsl lcall fdivrp outsb mov fmull icebp pop dec push jle lods pop and call subb and sbb lret sbbb xchg mov ljmp daa lods dec popf stc inc test pop scas adc ret pop pop xlat jae sub sti in repz sub insl pop push daa ret and in in stc call add sbb xor cld addb mov lahf adc dec arpl pop ljmp int cwtl insl test stc xchg or adcl out jmp fadds popf lahf lods push mov dec in lea pusha rclb inc xor std je mov jnp push cmpsl lock (bad) pop mov sbb xchg adc mov cmp ret adc inc ret js jp sarb test aad imul pop xchg imul lahf jae out dec aaa jle gs sub cmp mov ljmp loop popa fmuls mov out imull dec mov sbb xchg sbb xchg or ret mov push cmp jge cmpsb adc imul mov jns rcl pop mov aaa divl or pushf jo rcl scas jmp jnp sub mov adc rcl not xchg shrb jg xor out je scas push and cmp adc jmp xchg push and cmp xor stc mov aam data16 (bad) (bad) push push xchg jmp xor js adc stc jge fisubl outsb xor cwtl jl icebp jb adc cwtl dec movsl push xchg ja push add dec mov pushf and movsl out icebp lods fdivr xor cmp mov cmpsl js mov dec xchg fdivl jnp or rorl sbb sub push clc jo fwait adc in aad mov jge push hlt push xor xchg test xorl push jns clc or push mov into hlt fmuls test push mov jnp popf mov cmpsb les jmp fsubrs sub inc and mov dec cltd lahf push popa jecxz pop xchg mov sbb jle outsb hlt lret outsl js lods mov in je mov (bad) mov push lock mov aam cmp push add lret cmp fsubr aas add mov call xor mov xchg lret das in push (bad) ds xchg jecxz out lret push mov mov (bad) fdivrl in adc adc and ljmp pop xorb sti inc notl lahf and popf or push shrl mov xlat addl in test lret sti aam daa push pop add mov sub je cmpsl cli mov aam mov adc cmpsl and inc (bad) cmpsb adc add rcrb push mov xor and aad sub mov in clc in add push adc mov cmc pop int loope negl dec adc arpl and shll dec xchg push xor or ja jle cmp mov scas out adc cmp test test xor (bad) fistpl jecxz push call push (bad) push adcl hlt scas jecxz pop in loop mov loopne das jns inc adcl scas pop xlat and mov loopne mov cmp das int push (bad) aas ret adc xor cs fisttpll xchg xor or cmp sahf mov mov pop push jns (bad) sub adc out or and outsl push lods or lds lea test scas cmp cmp (bad) lret sub mov pushf jne aam les nop xchg in mov adc inc scas sbb std mov push aam jmp das mov out sti xchg adc mov (bad) cmpsl dec add pop inc leave rcrl fdivl mov enter xchg fidivr int adc fnsave jle jb and mov push push mov jae sbb insb test fidivrl dec mov loopne test add mov fwait out mov sahf aaa (bad) insb sub imul pop push jmp loop ja jmp push (bad) xor cmpsl in inc inc sahf hlt xor fwait stos in repnz insb lods daa push cmp arpl enter lret cmpsl hlt ja outsl lods cs imul loopne pop mov out jg xchg in fidivrl out fsub sub cmp incb sbb loope loopne stos fwait (bad) sarl sahf and pop and or sub repnz (bad) cwtl mov sub iret roll mov inc jo in pop inc pushf ret mov dec mov jge xor in das popa loope or xchg aad call push into lds ljmp dec inc push sub cmc mov inc ljmp jb imul es in adc sub pop scas aas push pop jmp push lock cld cltd and mov adc lods mov pop inc or adc mov cmp or sbb dec (bad) hlt or int3 adc jo ret xor dec mov sbb mov sbb inc xchg inc clc call ljmp (bad) aaa in ss fisub inc and mov loopne,pt jl ss out test popf sub xor and cmp clc ljmp jno movsl sub add mov lock out inc push jns imul push lret push push xlat es push sbb and xlat repnz jo das hlt es lahf cwtl xchg in cmc add (bad) dec mov cmp outsl dec jo xor arpl xor icebp mov lock stc mov daa fsubrs dec or jns adc inc stc movsb mov pop cmp xor aam int lahf cmp dec mov std loope pop dec push popl mov jg hlt in fnstenv jnp in fnstenv jnp in decl add jg rorl divb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb adc dec xlat aam test int popf xor daa cmpsb fwait jmp arpl fisttpl test fdivp imul movl (bad) xchg lret mov pop movsb ret ja fcmovnb mov popa pushf jne ja sarl adc hlt pop enter push jns push arpl mov jp xchg xor pop pop sub push cmp and test mov js mov push (bad) jl push jb dec push lret mov xchg insl cltd loope inc into cs push sbb test (bad) jg mov pop insl lods mov jbe pop addl dec mov repnz out and cld dec iret mov inc xlat imul dec xchg sub mov mov insb adc xchg jle mov (bad) pop movsb pop mov mov add push nop (bad) sbb xor xor adc sub push cmp xor out sbb push ret pop stc test ljmp sub fbld mov xchg aam xor xchg xor inc js stos sub sub pop pop in and in push aad int3 in test movsb mov repnz int mov ss fnsave into jp xchg and jg inc xchg hlt les lods adc testl jnp sti nop pop cmpb in pop ja pop mov adc mov dec test or (bad) jbe icebp push leave (bad) xor dec push cmp xchg iret push inc addr16 jns cld ds cmp pop sti jb pop scas (bad) sub pop push cmp or jno xchg loope and shrl scas jns iret jecxz fisttpl and push mov clc fisttp push shrb stc stos sti inc and andl ret cmp cmpsl movb test sbb call jge push outsb or cmp in jbe dec aaa movsl sbb lods add out inc pop cmpsl inc scas mov xor mov insb aas pop push jno inc mov aaa pusha mov or fild jmp push pop sub stos inc xlat jnp push jg push push jns push xchg mov sub push stc (bad) je push or fpatan aaa xor cmp push scas xor fdivr nop mov leave sub fildll pop sbb lret adc cmp mov inc rcrb pushf icebp (bad) lret (bad) inc addr16 aaa in pop test mov aam add jbe stos xlat mov and push loope xor arpl or in lock jp pusha mov pushf mov mov test lock sbb sbb mov lret test jb stc (bad) ljmp sbb mov adc push loopne popa sbb or dec mov test js xchg leave or jp or push xlat jns mov test call test push cwtl aam push test je iret sbbb call xchg test loop es rorb shll seta jo lock cmp mov aaa mov adc out add insl or movsl add push or lods cmpsl imul loop cmpl sbb pop in (bad) aaa mov sub mov pop sub pop mov lahf pop cmp (bad) ja (bad) (bad) cmpsb movsl mov jecxz repnz or mov or mov in cld shrb xor in les pop outsb pop or sub aaa push mov (bad) fcoms sbb stc push inc and out mov icebp (bad) sub and cmc inc fwait sub cmp xchg nop insb add mov int (bad) idivl xchg arpl cmp stos and enter ret shrl inc mov sub enter push or push push jg mov jl mov inc sbb sub imul xor or aas nop rcll sti cs adc push ret adc adc cld push lock movsb cmp jo mov repnz pop and mov fldenv or dec xlat push dec loopne jns sbb mov ljmp addr16 ljmp mov jmp daa adc push xchg pop imulb and inc add lock add dec mov js mov fidivl mov cmp dec inc push iret xchg xchg aaa lock mov sub jecxz add (bad) packssdw jmp add jns or pop addl aam cmpsl jl rolb (bad) mov icebp pop cli rcll (bad) and pop jp lahf cmp loopne sub (bad) cmp mov test cmp add adc inc pop lret pop je lods push jmp push scas inc aaa (bad) mov mov sub movsb repnz cvttps2pi jg jecxz dec stc aad test or sbb pop cmpsb mov mov popa aaa mov sub sub pop je jb clc stos shrl sti lods ljmp or bound sbb sti iret jg dec cmpsb lods insl loop pop xor lcall ljmp jmp sub add (bad) mov (bad) jmp adc mov push fcmovb (bad) xchg popf aaa and int3 and jmp sbb mov pushf test incb add hlt dec mov das fwait inc test ja pop call sbb jle mov std sbb in fnstenv clc push jle jp jle mov push hlt or or cmp fwait cmp lcall cltd and (bad) cmc xchg and in lods fucomip cmp cmpsl add pop add iret jne sub push data16 lret data16 jae in mov push fadds and sar push call lods xchg jg mov mov aam icebp lret loope (bad) lahf jecxz mul mov sarb adc mov cltd or mov lds clc mov adc mov cmpsl mov mov int daa mov leave push loop sti inc mov and mov rcl rorl jmp mov jae jbe ds xchg dec sbb sbb mov outsl mov mov data16 aaa pop int mov repz hlt adc or or adc push xchg or sbb test mov lahf mov insl mov test add jae pop cmc mov aas fidiv sbb adc and loopne rcll test aas dec jae mov mov cmp cs test jecxz std fs dec out ret jnp dec inc rcrb inc xor aaa pop cs fwait inc js (bad) mov lahf andl sbb loopne lods mov repz jae mov movb lea add jb xchg push xor dec imul push cmp xchg or ret xchg push mov dec mov and mov mov cmpsl mov push adc out push push sub jns inc popa pop (bad) movsb pop mov out (bad) fidivr mov lret dec std jmp jmp mov jle outsl mov mov test adc inc or xchg icebp cs sarb or or into mov mov data16 mov mov arpl mov dec int3 add cs push out je dec lahf (bad) outsl int3 adc jmp and xchg insb add rorl xchg xchg arpl mov dec in test mov btc mov push inc leave sub xor mov pop sbbl mov lahf jle sbb sbb enter cmp push inc scas fwait sbb push fsub aas dec loope cmp xchg jae sbb cmp push pop scas dec neg lret jo add mov loope jecxz mov mov fisub mov gs or roll (bad) mov sub dec (bad) int3 add mov out ret inc xor sbb dec push lds lcall fldl loope int3 inc xchg popa loopne aad jo or cmp mov cmp call stc sbb adc and ljmp or push jb incb cmpsb push (bad) cmp mov mov sahf jecxz sub mov cmp push mov and mov idivb push sub jmp mov ror pop jbe test dec (bad) fwait aam adc inc std mov mov inc (bad) adc es jns or addr16 sub jmp outsl imul sahf xlat int xchg icebp dec test sub cmc out pusha int3 movsb and pop xchg rol sbb mov pop cmpsb int3 mov xchg lret jg ja icebp jge push inc mov arpl (bad) cmc in popf cli lods sarb es mov outsb fdivrl jge xor shlb push les imul hlt adc pop mov sti into fdivr sub jge jnp sbb scas xor jb and mov lret (bad) pop jge push push bound mov js mov dec sbb mov fnstcw jb nop lahf mov ja leave testl fisubrl inc out inc mov pop popa xor (bad) lock mov loope ficom mov cs mov mov ljmp repz mov jp (bad) repnz clc ret sbb hlt add insl gs cli push lcall outsl inc mov jnp mov subl and mov xchg mov xchg or insb adc mov or aad hlt inc sahf scas lret cwtl mov divl mov pop aaa adc scas mov push sbb or xchg dec addr16 into nop push adc cmp pop (bad) icebp pop lret inc pop or sbb mov ss lea xchg jnp insb xchg pop (bad) jne test rcrb emms sbbb push in mov repz out stos xchg xor loopne and sarb pop inc mov sti xor pop dec jns divb mov les fisubl jns repnz mov shll into ds scas xchg add stos subl (bad) clc fistp inc (bad) cmc mov aad fnstsw sub xchg (bad) adc push jge mov mov push sbb add inc insl test cmp pop cld pusha das loope xor inc fwait or aas pushf lcall adc sub das call inc fsubrs aam xchg jge out out adc mov mov xchg xchg cmp dec dec fcmovnu rcll jp jns ds repz mov stos push sti jecxz jb or cli int3 adc test jo sbbl aaa push sub dec cmp fucomi sbb jge loop mov mov jb fisttp fdecstp outsb je xchg lcall add mov ret lock sub xchg in fwait addl cs adc mov lret iret (bad) fnstsw xor clc (bad) push bound push fwait jbe xchg cmp je in daa fidivrl xchg arpl imul xchg mov cmc pop js jbe pop inc cltd lds es inc mov jp lods mov mov call cwtl xor pop mov in sti and repz cmp out cmp add out scas decl cmpl insb cs inc add dec mov aad or adc mov mov push shrb sub cld insl cmp mov and stos sahf dec fdivr jmp stos sub dec cmc jge lods fucom mov fidivrl jne push imul add fwait enter loope pop andl (bad) fisubrl sarl ljmp cmc xlat xorb push push clc and inc or cwtl je and cmp ret test pop sahf stc imul mov inc add stos clc sub xor mov pop loop and fistl in dec jbe flds mov popa adcl pop lret inc fidivr out mov frstor enter lahf add cmc movsl jae xor (bad) pop inc std in mov add lret mov pop mov scas fisubr push rclb stc out lahf adc cmp add push mov mov cmp mov js xor outsb stos dec test or pop dec lahf insl mov xchg mov subb xor lods xchg cmpl lds adc (bad) xchg mov fcomps add or cli sbb dec add add cld adc cmpsl jno arpl dec fdivs (bad) pop mov (bad) insl lea (bad) hlt push mov (bad) in mov mov repz aad mov out xorb jmp rorb test add pop ds int3 pop (bad) shl popa dec jb mov sub gs movsb jmp popf xchg cs fmull mov sub sbb (bad) mov jae lret pushf int3 mov mov ret sbb in addr16 scas xor popa mov xor mov mov stc sub sub lock xor pop fsub pop push fxam sbb push (bad) divl insl mov fstpt add das inc loope jge and cmc aam add xchg test div or movsb movsb mov jcxz stc out ficompl cmpsb inc int3 add mov fucomi push out mov xor out std divl mov push hlt ljmp sub push jge in inc adc into cwtl loop es mov sbb es jne push jg outsb pop incl ret daa enter push cmpsl mov test jb movsw xlat shrl mull mov cs out and aas push lret mov xor jae sbb inc shrl add les pop sbb (bad) push lock out adc (bad) jns inc or push mov jge dec jmp in cs ds mov stos cmc pop jne out fistp adc jns lahf (bad) popf popa roll std or inc jp push nop shrl frstor push inc dec jo lahf aaa pop xor iret imul (bad) xor adc scas cwtl movsl dec inc in bound jo loop scas mov lea dec aaa mov (bad) jo lret push dec fisttpl jbe sbb mov cmc mov cmpsl lret repnz add daa ror in cli push dec idiv push dec jo cltd scas loop test aam inc (bad) mov iret sahf cmp mov iret sahf cmp mov aas add in cmp jo add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rolb mov icebp mov jno push xchg insb cmp mov in mov lahf jne in mov jmp xor dec mov mov (bad) fdivp imul movl into xchg push inc outsb cmp andb sarb and xchg aas test fnstenv xchg mov dec jns (bad) js push adc sbb jne outsb or mov int dec mov mov enter clc mov adc and pop gs (bad) scas (bad) lcall or arpl movsb mov leave sahf std out fisubr movl xchg and adc psubw add divb pop aaa lods mov out xchg inc dec push jecxz loopne cmp test or jne mov pop iret push pop dec aad xchg xor cli out leave pop out testl iret out mov imul nop outsb add fbld add lods jge aaa loope or insb test (bad) out mov scas divb pop out jg sahf xor in mov (bad) inc sbb jmp jbe mov pusha cmp adc frstor or adc inc xor arpl mov in jp enter insb jg inc ds mov or xchg sti push jo mov popf ss pushf xchg xlat in imul mov je xchg into sub dec roll cmp jne and mov repnz sbb mov xchg into stos mov in out mov cmp jnp inc mov sbb jg dec je or add push fcmovbe xchg stc sub inc imul xor test mov roll imul sbb test imul cmp cmp and nop cmpsb mov scas xor mov push cmp repz and adc push ss inc push dec inc dec and jge or sub mov xchg sub fnstcw loope sbb xchg dec mov mov inc push mov imul and jns rclb outsl mov push sbb jns in xchg in mov mov cs cmpsl xor gs sub js roll lret inc andl repnz pop js dec push adc mov test jns jne mov and add movsl mov stos sbb inc das pop inc shrb add jb xchg ljmp fidivr push bound scas adc jp test lods in insb add adc js sub in push ja push out subl cmp xchg xchg or or lods adc xor int xor pusha movsb gs jmp jp into jmp out cmp push das jbe xchg xchg pop jl mov in out out cmp cmp dec jae jecxz fsubrs xchg lds dec out dec adc inc aaa into or jnp (bad) negl (bad) iret pop push jecxz lret imul call ja xchg inc add add mov and dec jmp loop jb rcrl data16 stc incb ret loop mov jns add xor dec sub popf ja jg mov adc sub fwait mov inc test es adc xor pop iret mov in cmp std xchg sub sahf cmp pop in clc mov cmp bound cmp out adcl sub sbb or or or lret (bad) lcall icebp in push insl out lret sub pop testl notb enter in push sub dec in repz sbb roll jno aas shr mov pop js,pn in pop mov lea popf adc (bad) call add rcrb push xor (bad) push repz sbb sbb pushf nop les movsb enter jbe arpl inc nop inc lcall arpl inc mov mov jno push mov popf add or fldl2t icebp mov cmp bound scas aas sub xchg xor inc mov jns,pn in add add clc push stc mov sarb divl sti rorb es (bad) js jl mov cltd aam aas aas cmp xchg imul call repnz (bad) cld imul adc aas xchg push adc in push dec jb lea test xor loop adc sub aas mov into or adc testb adc aaa sahf fs sub iret (bad) mov lods inc or xor dec xor cmp mov cli fiaddl shrb inc mov imul lcall gs push xchg das sub insb push cs or pop (bad) xchg imul sub mov sub cmp add test pusha jmp ret xchg (bad) cmp dec js sbb push dec lock add or dec clc into pop sbb (bad) adc in je push into or add pop outsb repnz ja (bad) pop and dec lret push jno sbb dec jb adc mov mov cmpsb mov jno ss rclb jne sub jmp stc addr16 mov sub outsl jno push ret in enter jp and or test xlat and dec popf (bad) pop mov pop (bad) sub (bad) xor pop sbbl sbb xor es add (bad) scas sahf mov mov outsb sbb mov mov inc xchg push js mov dec sbb cs xchg repz sub pop xor lret mov pop jle (bad) sti pop pop jecxz js std loopne dec mov insb or dec inc xchg shr lods pop fimul out push lds lret or adc iret loopne jmp adcl movsl sub dec lret mov dec pop bound ljmp jecxz fbld mov jns hlt push stos xorl cmp insb jp jecxz (bad) mov cmp imul adc xchg outsb mov nop ret xchg mov leave or fisubr inc mov sbb adc push scas lret and (bad) push mov mov xor pop jmp leave das les out rcll add test rolb pusha sbb inc sbb fwait mov int3 push cmc add sbb js mov test inc cltd cmp outsl sub stos fsubrl xor loope push adc rcrb je loope jne mov and push and sbb mov cmp push jbe adc dec sbb mov loop dec pop mov fdivr imul imul xlat sbb or adc dec add lea mov lret mov jle (bad) xchg xor push xchg add jge into jns pop les jo sti pop and fidivr sbb imul cwtl jmp sub stc adc loopne nop adc push jmp mov sahf (bad) mov movsb in mov fisttp adc pushf cmp mov in and and int3 subb xchg dec xchg lahf mov (bad) leave cmp cmp bound gs fisttpl addr16 jg lods imul jmp gs mov notb or insl dec loope pop pop ss pushf ret (bad) leave rclb pop daa icebp addl sub mov fildll and cmp (bad) rcrl js arpl inc sahf push jp pushl lret adc inc jl sbb push ja daa jp mov add fidiv xor lret mov add mov sub sar add jge into addr16 xor pop inc xor dec jnp xor jge mov mov cmpsb or nop pop dec mov mov pop mov pop add cs push rcrl sti adc xor and call insb scas les sub shl xor movntps mov dec or shrl add dec aam xchg cld lret out xchg inc sub (bad) stc jno push add outsl jae shl (bad) xor rcrl jl xlat mov call fildl or test repz pop mov lahf loopne out sahf cmp and out pushf mov mov jp xchg movaps daa push push xchg addr16 into push xor sub jne leave cmp mov sbbl xchg fadd cmp fistpll jb les mov sub mov jge popf fnsave and addr16 mov mov lret push xor sub or inc out lret push cmp mov sub into xor jp and dec cli fdivl jne mov sbb repz into rorl in ret jno push xchg mov mov aad nop popf sub ljmp cld adc cli negb inc sub adc cmp mov addr16 sub popa or xchg fwait xor pop lock loopne test ret fdivr or int3 aad imul ficompl mov xor loop push int std loopne xchg xchg aas dec add mov push xchg stc or addr16 add cmpsb push mov push mov mov (bad) xor in repnz ret mov xchg arpl stc (bad) movsl imul jnp adcb imul jno dec repnz mov clc add scas or push sbb push and ret add mov push and (bad) lods pop cs push jnp jmp push or pop push fldt gs push sarb pop out sbb js push adc push aaa fisubrl orl shlb ret cmp mov ret jmp test pusha mov jl mov scas cmp sub notb fldcw push fidiv push mov outsl push sub loop mov jle xchg aas out or jns fwait pop lahf sub ficompl jge and popa jne outsl xchg inc sub js pop shrl seto fistl leave insb sub inc dec mov pop fwait out rcrb pop aad push jns xor cli dec jbe ret aas scas fist push insb imul pop aad cld fstps rorb or iret leave cmp push arpl add mov jmp jmp xor cmp ficom push add imul pop faddl pop call pop (bad) js xor jne xchg sub dec lahf and and and sarl adc (bad) push dec leave hlt xchg leave sbb sub insl sub cmp push popf sub pop fs ss cmp jge mov jae dec pop mov pushl xchg pushf out dec test push mov mov cmp cmc scas or cmc lods and das dec and mull test cli lock mov (bad) cmp jnp xchg outsl xor ss (bad) clc mov mov xchg test jne jae insl push xor cltd popf subl in bound xor popl scas jmp push icebp in adc cs rep jo add fisubl sbb cmpsb int imul loop jb ret outsl jmp cmc ljmp push (bad) les push lea xor sub insb sub (bad) and stos cmp out adc or in jmp pop lods jne mov imul xchg mov paddw add pushf fs (bad) pop xlat in aam mov pop mov push mov (bad) lcall mov pop jno sti (bad) xlat pusha sti ss xchg mov jge add fistpll pop pop mov pop lock xchg pop icebp cmp pop jmp and xor clc popf mov test adc xlat jle (bad) pop sub xchg push and nop call das int3 jge mov xor cltd daa or push cli lods add dec out sub test sub ja mov sbb iret js hlt imul dec rol cmpsb std jl fstl repz mov push adc pusha loope dec sbb rolb cli adc dec add jns test jnp jp jbe mov test test pop mov (bad) shll test inc pop inc jno xor loop adc stos cmp jbe inc cwtl xlat test xor xor cmpsl dec into fadd fbld in mov mov mov sub ret push popf fxch sub fnstenv cmp dec icebp gs (bad) xchg dec addr16 ljmp mov aas mov add xor cmpsl adc sahf mov inc mov pop adc xchg dec cmp es popa outsl pop push or popa (bad) call lock aad je repz idivb jle lret les push ret jecxz jo xor jg sub stos add loope and shlb sbb jnp mov fwait pop push aaa xchg pop lock fidivl dec push mov mov lahf add repnz inc xor or imul mov xor jl je movsl pop inc imul inc andl xor rcrb and lea (bad) subl fiadd push daa pop sbb loopne popa mov push fidivrl cld popl aaa lahf dec inc or mov lret pop outsl push jo push aas sub xchg fdivrs enter test loopne mov (bad) test add or pop mov mov test sarl mov mov push dec pop xchg mov xor dec test push bound mov or cli add enter xchg pop push jl or cs scas movsb inc lds repz adc adc adc jp loope xor movsb adc adc int and cwtl or xor pop ret lea push jae ljmp mov out or mov stos nop cli lcall mov sbb dec (bad) push icebp mov push pusha cmp daa mov adc and sbb push and cld dec push fs loope push mov pop sub dec in outsb jns test or adc test pop mov (bad) lret adc mov in (bad) das xchg fnstsw jnp out fnstsw jnp out std incl add pcmpgtw ljmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb ret test scas arpl into jmp xor jns jbe jo fwait fwait out into imul popf aaa xor out jge (bad) jmp sbb add pop lock out js lods pop ds sub das int3 dec dec cmp test adc push pushf push mov lcall or loop ss lds rorl das out inc daa outsb scas les daa jg dec sti insb stos cli inc lock test pop imul and or ja testl imul orl in pop out jo cmpsl adc fildl mov iret int (bad) cs inc loopne movl inc insl xor jne jecxz mov and pushf and sbb data16 shlb lahf aad popa ljmp sub data16 inc push mov ss inc in shlb push add fsubr mov (bad) cli sub mov js cmp jp dec jmp sbbl mov fbstp fwait xor jno fbstp fnstenv add or mov loopne js cld nop or out jno insb scas (bad) je jmp or int cmpsb ret sub push pop pushf outsb lods mov sub dec xor pushf cmpsb xchg push gs xchg rolb add sysenter call js and sti xor ficoml sbb inc pop insl jecxz in mov imul pop mov clc sbb sub dec cmpsl jno mov mov (bad) gs fsubrl addr16 stos jmp fidivr inc pusha push cs daa fcmove sbb mov mov dec and xor loop cmp pusha fidivr mov call and pushf cld das xchg xor xor xor and sub mov adc pusha mov (bad) sub outsl mov movsl and addb test scas jmp lahf push bound fldt iret inc sti dec mov popf push pop sti xchg rolb push stc je inc cld xchg imul mov lods call and pop mov or pop adc cmpb inc cmp ja movsb dec dec hlt mulb xchg add nop addr16 jae adc sub jmp iret fidivr push xchg (bad) notl pushf je mov mov popa sbb bswap inc xchg pop cmc adc mov dec push and jl pop popf popa dec adc pop pop pop fnstcw inc lret pop test imul xchg lahf jecxz fs adcl lret fidivrl sub xchg test lods mov pop (bad) xchg cmpsb jb enter mov xchg jae lods js and shlw adcl rol mov or imul xlat sbb xorl popl loope repz arpl insl jmp mov mov fldenv xchg cmpsl or push sahf xchg nop fwait mov or outsl es jmp hlt or fs sbb adc lods xlat cs (bad) fsubs pop loope add mov push pushf or ficompl pop jo in push std fmuls mov sbb stos out lds (bad) mov jge add sarb insb imul ljmp pop stc and jo (bad) popa sahf jle test mov jb jo loope pop pop push inc test cltd xchg int (bad) and mov push lds jp fwait inc add dec cmp stc pusha push js mov mov jno nop pop pop int3 adc xor push (bad) cltd (bad) imul int3 adc (bad) jge sub xor pop push mov inc push fwait inc out cmp and rorb outsb add add push iret sub sbb add movsl pusha das nop rcrl lahf dec (bad) out aad test outsb (bad) sub or mov or mov xchg lods test adc xchg mov movsb pop test jmp jmp (bad) clc and aaa sub negb sbb aas or ret test xchg sub mov push adc inc in pop aam pop cmp mov push sbb (bad) mov or sub sti mov xor lea movsb roll negl cli outsl testl (bad) mov mov into cmpsb movsl loopne enter mov rcrl enter gs mov mov jle movsl dec popf push shrl js jae test add adc xchg faddl lcall add (bad) mov cli movsl imul adc das movsb es (bad) sub inc aad into out test mov loop mov sbb xchg gs push cs jge inc push test xor addr16 xor (bad) mov mov pop xor push sbb jnp sar cmpsl clc ds mov sub add cwtl scas ja popf fs cmp repz fidiv push mov dec in popa sub (bad) cmp inc pop sahf dec sti arpl lcall xchg xchg xchg push sbb cs xor idivb call lods pop xchg fildl popf imul repz pop fbstp dec pop pop sbb insl gs inc push dec sub cmpsb movsl dec pop or xlat aad adc adc negb xchg jnp jb flds loope mov fs andl stc shl fsubrl jnp and pusha (bad) lret fistpll lods lahf sub cmpsl arpl dec daa xor ds cmp dec lret mov adc je insl xchg outsl push jne push repnz out inc mov rorb (bad) xor cmp and cltd push fwait cmc jl xchg add cwtl jne cmp push sub xor fdivp subb (bad) jo pop or movsl pop jg nop push test jns out aas (bad) ljmp xchg lods xchg dec cmp lea sahf and pop xor (bad) scas inc jo pop ds in subl cmp mov xor sbb jl (bad) push pusha mov (bad) jne push mov dec neg hlt sahf pop lret (bad) test ja sub cmp cmc sahf push sub aas xchg sub xor cmpsb cmpsb jns add (bad) mov jne fildl mov (bad) jbe jle (bad) ljmp (bad) pop cmp sbb cmp cmp sbb leave mov stos mov and xchg pop mov inc and les sbb xchg or int3 dec sbbl xchg test or repz or inc out stos call in (bad) jae dec mov (bad) loop add dec mov pop dec (bad) cld shrb mov rcrl adc cmp and mov jbe bound jae ret pop xor (bad) lods sbb xor or cmpsb push loope dec sahf idiv pop repz xor stos add (bad) sbb test and lds jo sahf mov add push jno stc adc push (bad) adc xchg mov adc ficoml dec cmp cmp mov lahf out add push ds fisubrl dec cmp bound outsb mov sub mov in mov push inc mov mov ret push or out arpl testl jge add push xchg in and iret fisubl inc in movsl rol fisttpl jecxz jmp jmp jge pop and gs sbb or test xor je push push mov add enter and mov jg mov int hlt and xchg and sbb aam xchg push xlat sbb mov stos and clc int3 mov inc pushf jae xchg rolb dec sarb lock outsb dec xor or cmc pop adc je and int lds mov shll outsl cwtl mov or rol dec adc ss pop js aas adc (bad) mov lret jge jmp or movl and fmull ss shrb xlat mov insl sub add sub cmp aam mov sar push or add mov insl add test push out cmc cmpsb negb xchg shlb pop xor into fldcw adc sbb movsl sub rorl dec add mov sub xor pop xor in xlat pop bound movsl and sti xchg (bad) stc lds sub dec adc outsl jp lret cld fwait (bad) mov (bad) lock and sbb push sbb ret (bad) rcl out fsubrl mov js mov sarl je xchg mov xchg xchg pop jmp mov cld dec clc pop in mov insl ss or add inc mov push fnsave inc push shlb lahf aam cwtl insl outsb idivb push adc stc sbb sbb lret xchg push jg rcr dec (bad) add mov mov jnp mov pop scas xor adc es jno dec adc je jae scas mov or ret idivl inc push mov sub jae int3 xchg enter (bad) mov xchg (bad) or push sbb jle inc (bad) ja inc in lret int sbb xchg icebp mov jp dec push sub mov mov ss mov adc out sbb jns dec and mov jle xchg arpl sub rcll repnz xor (bad) fsub ret mov and cmp addl jns mov pop mov pushf (bad) (bad) inc shll cmp jmp xor push cmp daa adc adc test test jg cli mov or lds std mov out inc xor jecxz in inc inc sub inc push xlat xchg cld fs fist insb inc sub stos jp jne in std inc loopne (bad) in cmp cmp push addr16 popa lods mov pop add mov in mov bsr (bad) inc (bad) data16 dec stos mov lock pop lahf loope gs lcall repnz xchg aaa movb dec sub gs fnstsw popf dec mov inc dec (bad) cmp add repnz dec xor test jecxz jbe xchg cmp lods (bad) xchg xchg cmp xor stc in out cltd mov aad pop mov xchg rcll sub jge (bad) xor iret lds arpl bound fstp fldenv iret and push repz out xchg movsb mov rcl jnp push mov outsb xor test cs ret (bad) aad inc mov sbb pop adc or xor clc jnp dec cld rclb mov pop add xchg stc push mov adc je xchg lahf (bad) in jg sbb out push lds pop ret out (bad) jbe push dec call mov dec mov (bad) in mov in arpl (bad) lock jno push dec adc or inc xor mov outsb or repz or push dec dec inc push fwait (bad) or dec push mov addr16 divb pop add enter pushf popa mov pop pop mov out (bad) or lret mov fcompl jns add xchg int cmp mov iret push mov (bad) ficom push fimul outsl (bad) cmc inc stos fidivl sahf out and daa sbb inc jge and leave or push (bad) pop pop fsubr and cmc inc pop add mov cmc push sub stc lods loop or xchg or mov add out jp dec mov icebp lret (bad) in int jo xor cli ljmp push lret bound call fild jmp pop xchg clc inc pop or pop punpcklwd in and nop mov sub lock inc inc sti repz add cmpsb adc test jp stos ret je fdiv test xchg stc fdivl jmp cmc mov cmc mov pop mov pop arpl mov insl fs cwtl jae bound xor movsl test int aaa and inc and data16 jg ficomp dec outsb adc xchg es jle or sbb pop (bad) sbb inc mov or mov das ja mov (bad) or fst mov lods xchg mov bound cltd push mov mov mov daa dec icebp mov leave stos xor outsb push xorl into fsubs jno dec or xlat xor inc (bad) push jle or lods jns mov (bad) jl,pt cmpsb lret outsl jnp mov jo adc int3 shll push mov jp push imul aam pushf mov mov dec fimull popa add in mov out xchg sbb pop loop fstl ljmp (bad) jp xchg pop sub stc mov and push (bad) hlt out push dec and mov jle mov ret pushf push test inc outsb into mov cli pop in or push aaa fwait (bad) xor js repz ret aad icebp jge stc jmp ret or ret mov fisubrl adc outsb dec inc push or sbb sti push jl int push incl rcrb cmp arpl mov jecxz inc mov ret jle jg push insb sub dec icebp push sub dec xlat dec or inc out push jmp xchg clc outsb arpl push mov cmp mov jbe nop cwtl (bad) icebp (bad) mov push cmp or aam (bad) loope dec jmp lcall push or adc scas fmuls pop pop aam aad or aad std pop in lret sbb int inc lcall adc stc lds les jge iret jo scas lcall lcall lock jne dec addr16 inc mov mov pop loop stc pop lcall dec mov gs pop (bad) fistl jno and jne xor dec mov inc and mov dec ret jno mov lcall inc xchg sub psubd scas mov inc fcmovne lods addr16 fbstp add jo test and cmpsb enter jg push lods xchg lods sbb xchg movsl mulb (bad) jno std sbb sbb mov jb es cli pop mov mull insb subl lcall mov enter mov out (bad) mov sbb dec sub cld mov leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz add aas decb rolb repnz inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb add lock cmp rorl dec dec dec outsb mov cmpsl cmpsb mov cmpsb jecxz rol jmp mov jg add clc scas scas sbb fs dec (bad) adc cmpsb decb sbb ret (bad) adc leave icebp mov (bad) mov and adc sbb mov dec sbb push negb cmp sbb popa dec gs sbb mov fsubrs (bad) adc mov aam mov and popf adc add push lock cmp fisubl dec jb jecxz jmp std jl pop and xlat push sub cmp out xchg sub scas data16 or cmp movsw jne cmp jbe (bad) std xchg lods pusha mov xor imul mov pop jl out add adc iret xor xor insl sbb sti and cmp xlat dec popf jno jmp lahf mov pop adc ficomp mov pop das push sti decb mov sbb mov insl pop pop lods mov sub dec mov ljmp xadd fsubrs or (bad) cld xchg add lcall test cltd jl and push mov enter add out mov sub jns jo adc jb mov mov push pushf popf (bad) mov aam loope sti xor mov xor sub mov cmpb push inc clc (bad) sti bound shlb insb test pop test xchg push jge sub nop imul daa sti sub insb mov mov mov jecxz mov pop jl mov jno mov cmp jne jg lcall xchg jb push je or adc push iret push inc adc sbb sbb mov sbb adc mov jmp mov shrb nop std jno mov icebp pop je xchg in xchg pop popa sub sahf les mov gs or mov or and imul bound jle into push popf or and and outsb dec adc mov (bad) pop or loope les mov mov xor mov imul pop dec jl clc daa xor push (bad) adc sbb mov adc aaa mov mov ljmp pushf mov jno icebp cwtl (bad) xor loope mov push pushf mov xchg push mov push cltd push (bad) inc cli add imul in popw xor lea jmp sbb add cmpsb push jno or outsb cmp rorl shll jg mov popf in sbb push scas push (bad) insl scas adc jnp in mov (bad) mov jg mov outsb lret stc cmp xchg mov pop ret scas ret mov cli mov lods jp inc mov xor js mov in cmpsl add dec xor jae add or ljmp jle out outsl jg push xor (bad) ja fucomi mov fwait in add xchg mov xchg push xlat xorl mov shll lea leave pmovmskb addl lds (bad) mov test mov xchg sbb int3 shl stos xor jge outsb lcall adc xor jo notl gs gs (bad) lods dec es aas cmc sbb lds inc mov and call dec sbb daa mov ss arpl imul add lret test push aad scas add stc jbe aas (bad) mov jmp mov fcmovb insb cmp add test push fdivrs leave rcl scas or cwtl mov dec add pop fidivrl testb and pop test sahf xchg xchg fsubr test sahf iret jg stos sti adc fidivl add mov jnp mov cmpsl mov or icebp push adc daa pop ljmp rcrb cli inc cmpsl dec icebp icebp rcrl in pop fisttp inc (bad) out xor dec int3 insb hlt mov pop sahf or adc mov and inc test push negl push xchg xchg loop repz stos setle and inc pop fmull mov fsts push popa (bad) mov fisttpl mov pop ds cmp int insb sub (bad) addr16 mov dec mov mov push jo aaa push inc adc jge push cmp fadds imul pop pop mov mov jb ss push int push cmp dec dec jge in int3 jns jmp aas sbb int ret aam sarl (bad) (bad) sub repz sbb pop xchg push sbb (bad) dec cmpsb adc jle push pop imul jecxz jne sub aam sbb pop aas (bad) sub das mov fadds icebp iret insl insl test lahf loope mov mov push sahf test or inc add pop or cmc mov inc jbe mov pop mov mov nop insb mov andl jae sbb cmp lahf sbb stos out or mov out dec fistl data16 int3 fbstp (bad) outsb dec fwait (bad) std jl testb (bad) xchg push xor test mov repnz inc frstor or std daa xchg aad ret aas outsl add mov push (bad) push div stos je dec test jge lods fimull incb fidiv pop pop fidiv jno mov pop sarb mov dec mov mov (bad) je pusha loop push mov lret ret mov aad cltd movsl mov mov mov mov adc in nop (bad) mov popf in pusha fadds pop cmp ret push out add ljmp cltd mov mov add adc ds xchg pop jbe (bad) xchg inc xor loope push insl add sbb aaa sbb popa cmpl dec call arpl bound leave mov mov push (bad) in xor mov mov push popa or jb pop sub dec add push adc lods icebp shr in add loope popf cmp inc xchg fisttp mov shl jbe and jno xchg cmp jecxz fidivrl xchg neg push test mov sbb out enter sub nop cmp jb add sbb insl leave cmp fildll shlb iret shlb imul ficoml lock into inc jge jb sub jecxz arpl iret cmp xchg (bad) cs (bad) pusha in pop out loopne jmp jg movsb les out xchg jnp inc out xchg lret xchg adc jecxz es jns or test loop mov jp rorb xchg ret test inc in in jno inc pop sub das stos mov jb jl nop cmc stc aam xor lock loopne ss and out jg scas push jecxz ss xor cmp cmp shl movsl sub stos in icebp testl jmp sub js fidivr lock pop pop pop sub into aas dec popl mov insl pop int cmpsb push jnp lods adc inc into xchg xchg scas mov fsubrs adc lahf jne mull xor push mov lods hlt mov in jecxz xlat outsl or loopne dec pusha add imull fimull add xchg (bad) mov or in daa cltd stos nop lahf pop shlb imul pop adc dec mov push ljmp pop add ja sub or (bad) jne aam data16 loope cmpsb fninit dec call pop push or test fbld mov out and lods fcompl xchg jo imul or jecxz imul lret xchg out sub xchg popa jp dec sub mov dec aas adc aam lods pushf pop push enter popa lock jp sub cs sub jg divl mov xor fnop mov sub stos clc and cmp pop xchg and and and add inc mov subb xchg js pusha arpl cwtl sbb cmpl pop sbb int3 xchg mov fdivs out xor mov mov out pop pop push and (bad) jo xchg add cwtl (bad) cmp out cmpl xchg stos aam pusha in clc aam adc insl aad scas daa mov mov mov cld ljmp xor lea dec jo dec imul inc adc ja fcoms fs cmp mov cltd enter xlat jns js aam dec xchg pop imul jge cmp fldl pushf test cmp gs push add adc mov in sahf out or jns pusha idivl sbb pop mov inc xchg stos xor out inc xor dec mov push adc pop nop and mov scas jb xlat fwait dec scas jns fcmovu bound in int3 xor in in jl or fstl rcl push popf add mov add mov lea mov xor nop lret add dec lea rcll cwtl pop pop cmc or pop lock ja cmpsl movsl xchg mov xlat mov pop pop push stc (bad) in fwait adc fwait cmpsl pop out dec pop das jo shrb adc mov push mov cmp fistl jmp fs pop cwtl test shrb push mov mov or sub inc jnp les idivb enter outsl push mov sub mov lods pusha and jmp (bad) into loopne push insb ds lods test mov mov sbb sbb mov or sbb dec bound jecxz in inc scas dec fadds not sbb inc lock inc daa aaa dec mov inc lret jno inc push inc jnp lods xchg addr16 mov lret js in ret stos cmc mov jmp mov pop rorb enter stos add dec dec testl imul mov push hlt mov sbb jb daa pop lret or mov jp lds and imulb out js cli sub sub xor inc mov rcl push jl iret test inc pop in sub xor or inc idiv jle scas stc xchg mov inc aaa push push mov std push sbb adc bound mov adc jp push daa lds movsb or aas cmp pop (bad) mov in and mov (bad) pop cmp repz in cltd push xor adc jmp clc cli out xorl pop or (bad) out ss xchg sub inc sub daa mov ret enter lods shr mov mov push jl repz iret jmp gs js ss dec mov sub inc xchg fnsave (bad) pop dec jno movsb pop rol in dec xor lods xor cmp xor sub into fwait jne lret mov fs repnz test dec xchg clc mov inc adc mov xor je xor popf and (bad) clc cmp mov xchg inc mov dec push xchg inc jge (bad) test and push mov add mov mov jmp movsb dec jnp add jno jge adc divl in loop pushf icebp push and (bad) cmp sbb mov ljmp sub pop dec inc pushf in dec push sahf repz aas sbb push mov or add add aad rclb nop test jns fidivl scas adc jae xchg adc add daa (bad) xor mov aam cmp stos xchg lcall (bad) popa mov mov popf or inc ret rcrb out lahf icebp enter mov stos pop sbb and push fistpl mov jle out push fidivrl or fs jne in mov mov insl mov idivb sahf lods inc sub pop data16 addr16 (bad) fs lcall xchg iret aad xor mov jg ds stc (bad) (bad) loope inc and mov xor je adc xor addr16 pop dec leave inc jge call xor add mov push jge add inc mov push pop jle (bad) xor adc test xchg (bad) hlt inc and into jg loop sbb dec sub adc scas mov pop out sbb fimull inc or sub (bad) xchg pop out hlt pslld pop icebp adc pop cld js movsl int lret movsl roll pop jb mov repnz aaa (bad) leave ret and popa inc pop sarl xchg int3 sbb push or leave hlt lds inc sbb test or icebp iret fistl repz cltd jle cmp xor cmp mov roll movsl (bad) mov pop outsb outsb cmc adc xchg incb xor xor out (bad) into jle dec call pop les shlb mov popa out sbb arpl movsb ds cmc push mov cwtl xor cmpsb sbb jmp sarl add ret cmp pop push lods stos lods adc lods das push pop jb lods jmp inc call pop (bad) (bad) mov pop mov xchg add sbb mov cmp faddp mov movsb es dec adc decl and pop pop clc and popl cmp fs cmp test xchg xor xor in cmp std leave arpl dec sub xor mov cs ja mov lcall hlt sbb mov lods adc call sub inc cmpsl cld dec ja sub testb xchg mov inc jl jg cli (bad) sub cmp (bad) lret insl jg pusha and iret daa and fnstenv mov cmc sub jecxz mov inc push xchg test mov and mov pop add sbb sbb sbb mov pop scas push pop outsl neg movsb pop mov pop gs cmpsl pusha cmp and cmpb lds sub mov hlt mov dec outsl mov xchg inc addl loop ret cli ljmp std pop sub adc cmp fdivs adc sbb pop loope dec enter and test mov xchg (bad) fcmovnu ret xchg (bad) in xchg cs out push fild inc push mov push es dec enter pop mov jno les bound inc jecxz adc sbb ret adc fdivp or test in out push cmp inc sub cmp mov pop or jnp in fnstenv jnp in fnstenv sti incl add pop sub repnz (bad) jbe mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop sbb mov jmp in xchg mov mov imul adc mov idiv mov add mov fsubl sub add cmp mov ljmp and test fidiv inc cltd jecxz pop xor sbb mov (bad) std aad ja fistpl cld mov call shrl fs aam jae shrb jmp push adc jo jmp jl aad sub mov pop shl and jmp sti jp mov inc or cwtl mov mov mov mov adc pop cmpsl adc jns xchg rcrl xchg or jae lcall add and xchg in orb (bad) or xchg cmp inc loop leave xchg int movsl popa cmpsl add movl (bad) xrelease mov inc cwtl jle ret pop mov ret dec jnp sbb aam aad or push jecxz xor cmp (bad) inc xor xlat test aas (bad) adc shlb xor rcr daa insl push enter scas in inc in pop nop jg stc mov jle xchg mov add sahf je adc test movsb mov test int3 mov dec in test ljmp fistpll xor sub cmp xchg ja lods sti ret dec push int3 sub lret stc in fimul pushf mov lods fstl arpl dec adc cmpsl repnz sbb (bad) lahf arpl cs movsl add mov mov imul cmp xchg roll add jp outsl and jmp ljmp ficoml clc fsubr aad pop sbb adc lds call push xor sti movsb lahf jbe rorb and push xor test aad fldenv push lds les outsb xchg inc xor mov xor in loopne sub add xchg inc std or mov dec lret xor in mov nop cmp and loop inc jmp sub add ret pop or sar loopne push ljmp xchg mov mov out mov sbb rorl inc dec and push bound inc jo pop push add (bad) aaa out and leave fsubs cmp (bad) xchg cmc mov sbb jbe xor int3 jmp add shrb ret (bad) sub in and out fldt shlb (bad) mov pusha mov lret jb mov cmpsl mov lock cmp mov sub call std bound inc in pop notb mov jmp pop daa fwait add ret push adc aad pop mov rorl jmp add mov int fiaddl or aad push movsb mov int3 sbb (bad) shrl shl xor lds aad aas in pop mov inc aad test cli mov push jge mov aad pop cmp add out and mov jb jp mov fwait iret insb xchg inc sti mov adc pop add into cmpb cld movsl pop lods and (bad) dec imul rol lret addl sub repz ss mov rolb loope sbb push pop dec in test sbb cld test dec std inc jb jecxz aaa (bad) jno arpl leave adcl fadd jo popa iret movsl fistp mov inc xchg sub aas or xchg cmpsl dec mov jmp push or pop adc cmp xor std sar sbb sbb repz and or mov mov rolb (bad) mov push adc mov shrb dec ds sbb dec js ds shrb lea dec mov arpl jnp ljmp and fldcw mov ja ret dec movsl jne push cmp dec lcall or ficoml jle jge cmpsb repnz sub mov inc and pusha aas mov and lcall aam aad loope push mov sbb and das mov test cmc pushf loop cmp push pop jmp sbb sbb and dec je inc int ret push movsl fistp ret cmc cmp mov test xacquire push adc jle sub fcomps jo gs notl (bad) jae xchg xor lea sub cli lcall rcr xor adc dec lods pinsrw push mov fistpll movsb push out dec adc jp mov icebp aaa cmp pop rorl inc push sarl data16 jmp mov sbb cltd mov push inc out aad lret inc xor loop jae scas cli in lea or cmc (bad) inc aad call jno (bad) jae mov and jb xchg dec rcrb and xor xlat xlat push (bad) shlb mov lods out adc and or and inc jns lahf cmp add pusha in mov cmpb fldl xlat pushf addr16 int3 int3 cwtl daa cmp jp sub push (bad) jnp sub push mov xchg mov pop (bad) cmpsb testb test hlt jle adc sbb loope sub (bad) cld out xchg daa xchg insl movsl loope lret popf mov (bad) clc dec cmc lret sbb in jns fisttpll int3 not stos and mov cmp fsubrl ret loope fnstcw jmp jp imul jno cwtl stos jbe mov pushf in scas jo arpl pop in (bad) call popa aad push stos xorl mov sbb inc (bad) addr16 cs jbe in negb pusha mov loop imul arpl fcomip mov mov and mov daa push push sbb je lods sbb sub in mov stc mov arpl hlt and scas out loope das ja shrb cs int3 enter lahf movsl clc andb loope fadd pop pushf mov dec jb jb jns mov push rcrl pusha nop pop movsl std xchg outsl add xchg mov jp (bad) xchg pushf pop loopne sub test lea add mov push pop ja sub xchg test sub xchg or ljmp add inc mov pushf ds cmp mov test adc cmpsb out dec in and dec inc xchg call inc dec cmp adcl adc ljmp inc dec jbe (bad) adc sbb out insl incl int3 pop icebp stc jne lahf ficoml stc mull xchg cs arpl mov xchg and mov xchg mov insl test pop daa pop daa jbe dec mov js (bad) xchg xor sbb xor sub jle in repnz xor pop popf outsl ja add repnz pop bound ja ficomp int popa ret out arpl pop clc lods mov mov add ja fwait mov imul (bad) (bad) or dec inc insb les xchg fcoms pop inc add sub in jo xchg or and iret (bad) mov pop adc out ljmp mov mov imul pop dec fcmovne ljmp pushf mov cmp les mov push test mov int add mov movsl (bad) mov icebp repnz pop add mov cmp arpl adcl sub iret shrl fadds add dec mov push stos hlt dec mov lret fwait sub je ljmp inc ja push lret movsb pop movd mov add jecxz in fwait xchg enter jmp idivb or dec insb and mov jne push (bad) mov mov and inc push movsb loope (bad) mov xchg cmp jg xor fiaddl cmp cmp lahf call sub cmp jmp stc aad jne cld inc xor dec jbe inc push push shrb cmp repnz fwait std lea xor (bad) fwait cmp adc movsb clc fidivrl cltd sbb push ljmp xor mov jp les dec insl cmp push popa stos sbb push xor leavew jle add stos in dec mov ds jmp push cmpsl xor in mov fildll pop aam push fcmovne (bad) xor call jo clc or mov sbb insl (bad) sbb pusha cmpsl test adc jmp scas jbe push out call enter mov dec roll fs dec rclb negl sbb ja inc movsl idivl sti ret push ljmp adc test ljmp roll rcr iret cmc xor add sbb inc xor (bad) fild in inc loopne sub mov shll mull outsb ret sbb popf lock lods cwtl inc add ja out scas int push sub test cmovle mov les ss jne xchg push xchg or andl sahf mov pop jp,pn fistpll stos (bad) mov mov adc ss dec nop imul or dec data16 bound jmp in jmp jge mov pushf nop dec xor cmp cmpsl pop ret popf jl test adc inc iret adc into fsubrl xlat xor scas jbe xor (bad) mov ret jg insl cmp xchg in add aam inc fwait xchg lahf icebp cmp (bad) pop mov push or clc xor mov mov movsl dec sbb mov add push add sbb into mov mov cmp xor push sub pop mov dec aad xbegin xchg inc and push sbb test xchg cmpsl xchg mov push or in cmpsb loop aaa (bad) imul rorl add outsl dec mov movsl dec out xchg pusha scas insb cmp fucompp popa int repz cmp pop xor inc lret inc popf jae mov movsl adc mov dec mov arpl add sarl inc and mov dec push push lods aad sbb pop cmp adc xchg stos lds arpl out sub aas dec cwtl out insl mov je mov movsb and and (bad) xor mov pop jl push push (bad) clc jbe jge sbb int3 ljmp popf cld lcall mov mov inc lods in xchg (bad) adc imul mov mov sbb or cmp jecxz cmp mov mov lahf test jae sti push pop in push fsubrl mov sbb dec (bad) xor loope scas pop sarb addr16 mov sbb int jmp in lods fisubl repnz sub mulb insb into insb imul arpl mov bound cmpl mov xchg sahf push adc inc mov push leave enter mov xchg jp inc inc js cmc adc xor out xchg pusha and (bad) ja sub (bad) mov jg sub sbb dec aaa es addr16 fnstsw adc cmpsl (bad) rol pushf (bad) pop lahf xchg sub outsl nop dec cmpsb sub add stos fisttpll repz xor jae mov test lret adc cmp pshufw mov (bad) cwtl or fwait aas xor ds push out ret fdivs cmpsl call es daa and mov fildl into cmpsb or mov push mov inc aam jo cs add add push or jns jo push cli lcall aaa sarl insl out sub pop pop or (bad) sub jno mov jns mov inc daa jnp add out xchg test pop sub mov inc add pop inc shlb lods add jno enter in jp or jae or dec jno xor leave (bad) mov add mov mov and in sbb pop xchg movsl xchg ss push xor pop repz cmc mov sbb jl push pop bound cmpsb push das out ja push cmp loopne js xchg enter mov push mov testl mov cmp mov bound sbb push shlb repz ret xchg cmp mov cmp sub arpl scas notl ljmp add (bad) loop inc jle leave movsl mov (bad) leave mov hlt les jns clc lret ljmp jg pusha xchg lea loope pop sbb xor lret inc hlt sarb ret pushf dec sbb cli cmp shrb repnz mov adc cld and stc sarl lea in cwtl or push cli cmc lcall xchg dec add or jecxz je lock sbb fdivr stc push dec iret nop adc (bad) jne pusha (bad) pop and aaa enter movsl push inc negl rcll testl mov sub push outsl mov inc outsb jae mov push lea mov test pusha fsubr lea cmpsl movsb mov inc test sbb cwtl popf or push lahf loopne iret loopne and push cltd int3 (bad) ja cmp pop mov jle adcb sub push ds push out in add cmp push mov lods cli mov mov imul sub push sbb and leave pushf xor mov pusha mov xor (bad) adc sbb stos cmp cmp fisubl (bad) les sbb in xchg cli or gs jge stc xchg daa jg dec pop ljmp push gs pop fmull inc hlt pop xorl cld inc xor imul xor lock jmp (bad) jo pop mov mov jl fcoms inc enter mov jmp xchg dec sti insb sub (bad) jmp aaa nop lahf and mov shrb (bad) add pop push cmpsl les cmp insb pop xchg icebp cmp push mov push das adc loop fcoms out rol xchg mov or mov sbbb push insb stc sti test scas and jp cmpsl bnd mov and ljmp insl aaa mov or inc movl jnp mov iret push fisttp push pushf in push xchg xchg xchg clc adcl push fs out or out aas leave jmp dec mov mov fwait hlt add call xor add mov clc lock xchg pop jl,pt lock xchg (bad) jg add add out xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb fwait cmp cmp fadd aam hlt jmp cltd outsb daa dec mov int jp imul frstor iret mov scas out cmp add cmp jg and cli js lods jo sbb xchg test std loopne call adc jnp cmp cli clc sarb pop sti test arpl jl pop inc ficomp cmp jbe enter pop sub aas jmp cmp pop sub fldenv xchg mov lea cmp jae test rclb (bad) jl add cs sub push jg or decl sbb loopne pop (bad) mov stos dec xor stos xor scas in and or jbe push adc in inc stos clc pop add repz dec enter test xor call jge cld or test lock adc bound jne push into outsl push and fild stos int xchg mov stos xchg dec clc jmp les addr16 jb mov fs js call ds inc ja in sub (bad) xor scas pop inc loop test mov add sbb clc dec inc jae repz pop mov lcall outsl cld xlat (bad) (bad) add xorb xor (bad) push or sbbl jno ja adc cltd fmuls cltd lahf in (bad) dec inc pop push call rolb mov scas mov and sub add mov push mov push roll dec fadds shrl cmc mov mov xor inc mov aad les mov les lret lret loop int aam (bad) add mov fsubs cmp lods cmp cmp push xor xchg mov test mov xor and test aam arpl push (bad) adc in inc mov jle leave push jb inc cmp jbe mov jmp (bad) sub push ret les mov mov rorl pop jle xchg mov sub cmp jne or sub ljmp cmc mov jae push mov (bad) icebp mov nop cmp xchg lea mov lods sub mov inc jle subl push xor (bad) nop mov mov and pusha int inc and das into imul mov das pop ja dec jl dec out ret xchg mov pusha jo dec mov jnp mov fbld mov pop stos icebp testb sbb and mov gs inc mov push adc cmp inc out sahf lock in mov pop stc mov mov add aam or cmp (bad) sti in int xchg icebp (bad) jmp popa ljmp (bad) test inc out pop xor mulb cmp jle xchg or ret (bad) pop adc mov in xchg dec jae mov fldl fwait add inc aam dec stos rol repnz addr16 (bad) sbb sbbl test push add sbb addr16 add adc out inc xchg xlat sbb push mov repz pop cmp pushf sub lods jns sub xlat in adc mov scas pop lds loopne outsl adc je aaa test test pop jns mov sbb scas push adc sarb aad jp repnz add mov unpckhps fsubs gs lods push cmc aaa push push fs push jo mov xchg iret sahf xor push lahf jne sahf mov out stc pop dec shrb push xor sbb or adc cmp popf hlt push add jno push push loopne rolb adc cmp data16 xchg in and pop add adc ret lods ljmp cmp or and addl adc popl mov dec out mov mov add ds mov shrl mov fsub aam pushf aam pop push mov cwtl adc lock addr16 rep hlt mov leave (bad) cltd cmp xchg jns jne xor sbb push in je movsl pop push xchg and pop adc jmp mov mov loop mov iret add push pop adcl sbb push sub push jb xchg (bad) je ret aam and insb push movsl sub cmpsb je xchg je sahf pop (bad) hlt lahf (bad) popl stos or jmp jbe xor iret (bad) movsl fwait inc mov mov or enter aaa cmp aad push stc (bad) dec hlt and jp test jae in xchg int (bad) mov and jns mov arpl fbld and sbb cltd xor rcll gs add inc mov mov adc xor push sbb add fistp add ret sbb lock fnstsw xchg xchg movsl or stc clc lods push and aad and cmp arpl mov adc sub orl xchg jecxz inc jo pop popf loope push mov lds stos les mov xor imul sahf jbe lds smsw dec lret mov outsb out stc add sbb and clc xor push loope add jecxz dec call popf jg enter test pop inc sub (bad) loop mov cmp mov dec test ss in inc in jmp and lea xlat mov cmp jg movsb inc jp push inc test mov dec (bad) loop pop repz mov dec mov pslld sahf push call dec mov js outsb or mov push mov push dec add sbb pop lret inc and push repnz sbb mov mov popf mov arpl push jecxz je sub jbe in inc mov cmpsl insl in pop cld lods lcall mov jecxz inc gs pop jne dec cmp (bad) arpl pop mov push pop cli ljmp js into fisubl cwtl mov popa ret adc in mov push pop sbb xor mov jnp cmp insl mov into orb pop hlt out or adc in test data16 jl jle and movsl aad push cmp mov mov (bad) mov jns fnstenv pusha push and adc pop inc fcomps gs mov pop addr16 fwait adc lods pop add fild pushf sbb jns mov fisub (bad) in test popf mov or test daa dec int3 mov sub outsl pop and jmp stos sub add add mov and fwait jbe push lods aaa add push dec ljmp cs cmpsl jmp lret xor (bad) in stos das pop cmp mov xchg push sbb mov sahf push push aaa in mov inc xor cmpsl mov add pop pop fildl push outsl ffreep cmp cmc push sub mov shlb lret add ljmp cwtl inc push fdiv fidivr jge roll xor mov aam dec cmp jnp ljmp add add popf mov push mov sbb xor (bad) pop mov xor imul and rorb jecxz pop jb cmp out aaa and dec push or push inc imul std dec in xor fldt jne pop pop push push (bad) pop mov mov cmp sub push dec stc xchg in and fprem1 lods dec ret sbb mov call sub jp pop loopne dec cmpsl jbe pop lock je aaa adc (bad) movsl cwtl (bad) add push add push fdivrp push cmp in mov test rcrl pop nop jl mov insb and jbe in scas imul sub jmp xor push cli and mov inc push xchg inc fnsave and stos aas stc add dec mov bnd xlat inc dec pop sbb and fucomi mov inc inc adc inc aad clc inc in mov add adc or push aas sub jge test fwait adc jge pop xor add lock imul inc mov insb addl fidivrl (bad) mov movsl pop in push cmp out imul aaa xor cmp outsl je (bad) in (bad) ja dec lods jg imul stc inc jl je in push sar pusha or push jo dec (bad) je xor sti sbb add icebp cmp push aas xchg out gs sub and fstpl and xchg test mov mov sub rorl in pop test aas arpl jns sbb jl cmc jae aad mov icebp cli push stc ja imul push sbb xchg lea test push fistpl maskmovq idivl jmp inc jno dec in lods fmuls dec iret mov pop out sbb test inc mov dec in mov and inc int sub push call in shrl (bad) add dec data16 jo mov push imul outsl sarb jecxz mov mov loop push ljmp mov jle or mov out and imul mov sahf outsb adc inc or mov in ret jecxz push push fidivrl jp movsb sub or out xor fcompl lret dec mov ret mov std outsb test js test out in xchg pop cwtl jecxz jnp lods jp pop pop sarl in push mov pop mov aad mov stos subb and mov call sub and pop ja stos (bad) mov mov int3 xor aas mov insb enter mov jae cld mov popa out iret out mov outsb push inc prefetcht2 mov test xor addr16 test ret and dec jns js cmc sbb es daa outsl adc (bad) js clc cmpsb sub jno stc dec mov dec add js jg leave push fs mov push test popf pop push jmp xchg imul jl fnstcw push fs mov mov fidivl nop jns jl xchg in (bad) rclb push (bad) pop or add and jmp call xor xchg mov adc into lret xchg inc jb inc sbb (bad) out sub ss mov or test cmpsl ret out pop cmpsb stos dec lcall mov inc mov or cmpsl flds shlb or ja cwtl ja in scas jge data16 inc inc lea in iret fidivl (bad) lret or jmp stos mov lds or jbe and mov jbe push inc pop cmp xchg inc orb push xchg stc pop pop adc outsl dec mov mov cmp jnp jb mov inc xchg or jo sbb and cmpsl xchg dec arpl fstps jl xor (bad) movsl push les gs int loopne aaa lahf cmc cmp sbb xlat je xor xchg cmp mov sbb fisubrl mov sub cld mov fwait xor stc pmovmskb bound cwtl mov dec movsl mov rcrl push loop daa mov jg lcall std imul cmp sub dec bswap xor hlt xchg int out call adc imul jmp pop sub (bad) les testb jne xlat and test popa int lret sbb jbe movsl imul pop mov loopne jle (bad) idivl call mov addr16 sbb (bad) mov movsl cmp jl jg jb and sbb popa jg (bad) pop out lock xchg mov mov ja aas xchg mov mov pop (bad) mov dec push push xor dec int push mov les js out mov mov jae lret dec push dec cmp dec pop lret and fldenv int3 out sub cmp fcomps sbb mov cmpsl inc mov dec jg adc mov out jecxz test adc add adc mov js fidiv or cmc fldt push pop mov lods aas out in mov adcl (bad) cltd bound or ss imul sub (bad) adc add inc aas sbb sbb lcall outsb cmp xchg aas push jp cs jo lock xlat pop (bad) mov lea dec in pop lds sbb lds mov xor in call push aas aas gs adc fnstcw xor sbb fstpl lock mov test out pop outsb stc sti rorb outsb ret stos or jnp mov pop mov adc fstps dec dec fistl insb in sbb test cmpsb push jb arpl or adc xchg or pop mov jmp lret pop or ret jmp fsubrs inc test pop jnp cmc loope fs (bad) ret dec mov or jbe xchg mov mov sbb das mov clc (bad) mov fsubs stc stc or jge (bad) add icebp and daa outsl lods add ficoml dec add fwait sub push adc (bad) cmp aaa negb cwtl or inc imul and xor dec cwtl (bad) dec lods xchg add jge (bad) xor and lea popa add push adc xchg int out movsb mov stc mov fs dec mov or push clc xor xchg push sbb pushf inc pop cmp or scas xchg xchg xor fs (bad) sbb stc or adc dec mov js fiadd gs mov jge std sahf imul inc inc mov mov adc loope frstor inc ret nop outsb les cmc movsb push pop sub jbe sbb bound mov sbb sbb xor aad ret inc xchg ret mov lock fisubl je daa les push cmpsb ja jp scas out stos xchg enter xcrypt-ofb cmpsl in lock or dec xchg inc bound jnp inc sbb xchg arpl loopne pop inc mov stc dec es sub sahf jg jp xchg xchg mov lahf or lods add jb ljmp xchg js loop mov das pop mov mov das pop cld incl add rdtsc xchg call mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb arpl cmp xor xor mov rcrl cmp lcall sti xor add loopne loopne mov leave inc insl xchg jmp dec dec into and ja test pop adc adc sub mov sbb cmpsb cltd dec lds (bad) push mov jae adc add and sbb in jle icebp pop fwait inc xchg sbb mov hlt js jle mov or xchg andl fsts push pop and (bad) xchg cli lea jecxz xchg pop hlt movsl into lds out lcall addr16 xor dec out push jbe repz flds addr16 adc sbb add xchg mov jno imul lods add pop sahf clc jge pusha stos mov in cmp jle push jo in xor push jecxz mov test sbb sti xchg out pop fwait in sub sti in dec pop sbb iret mov mov int3 or popa push or push rcll (bad) cmp ss dec cmp loopne lcall stc jne mov cld jns pop sub in lcall xor idivb into xor scas mov cmpsb bound (bad) mov rcrb shrb fs sub jne sbb add enter pop test pop hlt push dec ss addr16 mov lock cmp into push inc adc dec pop jg fs jg cmc pop push inc jne sub mov test lahf and out jl jno cltd rclb xchg or outsb or cmp jp and aad sub xchg jmp and add cmpb mov mov push repz sub cmp cli fildl cmpl adc mov test out fmulp dec imul mov sub out into xchg dec mov ja mov pop pop sbb aam add div and scas sub jge sbb pop sbb in fcomps sti mov mov lret ss mov xchg stc mov mov outsb xchg rdpmc mov dec mov or and xchg (bad) jbe sub jne shlb jmp (bad) sub stc pop adc (bad) fisubl in jbe adcl nop fsub dec cwtl in jo in ret mov outsl (bad) xor xchg sahf dec (bad) jbe sbb pop pop ret test mov xor push mov add sarl mov movl jno mov lods xchg and and mov sti sbb sahf push mov add or xchg pop mov sub pop (bad) jne sub bound xchg pop (bad) repnz sbb push lea push dec jb imul ljmp cld sbb xor addl movsl nop push mov fcmovnbe jo fcoms mov in into insb scas imul (bad) sub std out xor sbb fiaddl push hlt adc call mov mov rolb repz and sbb pop fnop mov sar jecxz sub xor fldenv dec jmp out inc mov cpuid pop pop jae fildl (bad) repz fild mov push cltd push ret inc jb std mov and push ljmp hlt (bad) sbb (bad) xchg xorb push inc mov lods clc or (bad) jno repz push jmp jo aas mov in andb cli subl xor mov hlt (bad) mov and dec (bad) icebp lods jl mov and xchg cmp aas add (bad) aaa pop mov adc lea es fwait jbe lods in cld ds add pop jb sbbl jo in dec mov pop lahf and mov xchg sti mov pusha (bad) adc icebp mov mov add aad push fdivs xchg xchg mov arpl sbb (bad) cld out (bad) push leave adc enter loop and jg das mov enter addr16 inc pop test dec or jle xchg sub shr push (bad) push or mov (bad) jmp repz sti push pop aam jno sbb fadds xor xor add fwait inc mov in xor xor popf fildll fldpi insl (bad) mov rolb and scas cltd outsl fimul scas xchg mov pusha enter jle jge mov fs mov dec xor dec arpl xchg xor stos xchg add xor jecxz (bad) stos mov jg (bad) pop sbb (bad) mov imul push divl or daa and lahf in or test test inc repz add fmul push push inc lods loop (bad) xor pop mov out dec mov movq rcrb pop inc push mov adc mov inc call push fiadd or int sub into jmp cmp xchg and jne mov push inc push pop mov mov (bad) jmp add add pop xchg dec out scas je adc cmc bound enter pushf sub inc mov jnp icebp mov mov mov dec and sar mov mov dec ss mov mov loope xchg loopne loope cmp sub call insl sbb divl xchg inc sbb sub add mov js in cmpb jo and repnz and repnz ljmp icebp jecxz aad loop xor push sub ljmp movsl or inc fimull pop dec idivl data16 sub sub lcall addr16 mov idiv js mov stc and pop adcl pop sarb mov push push cmc das outsl xchg push mov and mov js (bad) test xor repz dec iret (bad) negb or xchg sub add mov je loopne sbb push enter jb test std xchg mov sub sbb in dec add sbb xor das mov inc sub popa add fcmovnbe inc je jle mov aas push and xchg loopne outsb xchg push and popa cmp sub mov sbb mov dec pop frstor in adc in ljmp in jg jp lgs mov inc stc (bad) push rclb cmc pop inc dec push mov lret cmp adcl add mov mov lods adc stc scas xor push mov je or lcall mov mov cld arpl pop insl xchg js scas pop mov inc mov mov data16 imul xchg and jge dec aad (bad) cmp mov inc sbb mov pushf jl in adc mov repnz push adc lea stos faddl jg jmp (bad) fldenv rclb dec (bad) sbb popf sbb addr16 xchg xor sub mov xor movsb cmp shr xor gs aad push mov adc bound jo sbb push xlat aas lahf sbb lods jb (bad) jno adc lret fdivrs daa cli aad fstpl and cmp (bad) test fucomp sbb test xchg cmp test fisttp pop cmp pushf xchg les ljmp cmp dec mov hlt aas iret mov pop xor and fldt xchg mov (bad) iret lret dec adc pop ret repz lret cs jnp sub sbb inc popa jge sar xor hlt ret fmuls xchg fldcw icebp sbb pop mov (bad) adc in fstl sub aaa pop stos popa push clc cmc or add leave lods xor js mov push sbb inc (bad) ret mov mov adc jecxz and shlb mov rolb add push sbb sbb ss mov loopne jg pop mov sti es (bad) mov es pop imul cmp xchg sub sahf nop fcoms (bad) sbb fwait mov fcoms fdivl pop ret adc add (bad) out (bad) in out push stos negb adc loopne and stos sub dec sub aad mov adcb test popf or and cmp aam xchg jne movsl pop pusha call jo xor push lea ret mov hlt sti shl (bad) clc sub movsb out loopne xchg dec shll mov jg ss shlb push (bad) icebp aad mov lcall bnd lea and lahf xchg repnz mov pushf adc movsb cmp xchg outsb jae iret jecxz rcrl fdivl pop jb lcall cmp dec xchg pop aad ret (bad) in push cltd pop xor pushf aas mov mov lret jmp mov mov cmp xor dec sub fmull push jbe (bad) in pop test inc jp xor add (bad) mov cmc dec dec in sub imul cmpl test pop in fdivrl pop mov stc mov in push test in test out and je (bad) push outsb mov or push jne push mov sbb fucomi mov mov xchg orl cmp dec aad pop fs (bad) lds (bad) adc cwtl outsb das imul pop inc pushf pop pop xor fwait jg and (bad) jge or mov cwtl loopne fwait mov cmp (bad) nop jge xor neg inc sub sbb and and loope dec lret xchg xchg sub and ficomp xchg add sbb outsl ljmp out int cmpsb xchg pop adc fdiv dec pop jae test mov dec popa lods mov push sub sub and mov mov addr16 cmp ja hlt pop sbb lea imul mov fwait inc fisubrl jne inc sbb ja ljmp sarb push pop les jae loope imul xchg fs xchg add mov xchg scas inc jns pop sbb mov add sbb cltd fimul sub and lock or cltd xchg mov xor or xor arpl or push jge call add push imul xchg loop jbe stc out scas arpl hlt mov inc mov inc lock and jp (bad) mov clc dec or xchg mov jo cld (bad) stc cmp inc add mov sub pop pop mov imul pop mov std cmp ret xchg cwtl enter dec push js xchg jno stos sbb push push popl inc in adc aam addr16 sti adc pop pop nop aad xchg add pop dec xor mov (bad) adc and cmpsl xchg adc jne cmpb pop outsl xor xchg xchg pop push and cmc dec out mov daa dec popf imul pop ljmp fldcw or aas fwait sub cld cmp icebp test std mov fist pop outsl call dec cmpsb repz push repz out sub mov pop cli test sub loopne cmp adc lods adc (bad) hlt (bad) pusha and scas sub dec sahf or add imul pop xchg clc and scas dec mov pop scas je loopne lcall shll push out xor sub leave lret aaa movsb cld xor add (bad) out inc les or pop mov jne or repz jp in jo fisttpl loopne or pop cmc rcr arpl sub pushf xchg push dec add (bad) fmuls fdivrs mov in movsb addl mov or (bad) (bad) pop movsl sbb mov fcoml dec aas push popa stos xor test pop xchg in icebp push and push sub add leave xchg add fcoms sbb popl ret shl xchg or mov push pushf sub xchg into sub stos shlb insb push outsl dec mov je jmp inc faddl push pop loopne bound mov or pop pop iret cmp fimull sub add lds stc imul lods add cmpsb nop jle,pn xchg js stos and push les adc inc xchg adc lret movsl inc xchg arpl inc mov rorl cld stos in in ret pop pop sbb add test inc ret adc jg repz scas pop cmc fnstcw jo fwait mov mov mov outsb mov mov sti jle loope in xor (bad) cmp popa daa imul test or sbb xchg mov add mov stos jno cs jo outsb roll lods call or fcoms cmp xchg repz sub lds mov jmp leave addr16 xor movsl lcall stos ret push or aad jge push jns fiaddl pop pop orl mov cmp inc pop xor inc les cs or arpl mov roll pop cmc mov pop fs clc jns js test out dec pop fs add out enter mul and popf divb push jnp mov sarl add (bad) jle or or stos xchg outsl iret ret jp data16 enter repnz insb imul fucomip xchg call repz nop fisubr jno xorl sbb inc je pop int loop jne gs (bad) aam (bad) jmp dec mov leave outsb (bad) jno (bad) out push pusha pusha repnz leave not repz sub xor rolb cmc cmp mov dec adc sub cmp xchg inc (bad) jecxz or add push inc mov (bad) or mov stc iret jle inc xchg out (bad) mov popa xor in (bad) cmp mov sbb sbb pop (bad) lcall mov daa cmpb ss sub xor lds repz pusha fnstsw mov xor sbbl mov adcb (bad) (bad) hlt popa les (bad) out sub mov test cmc (bad) sti pop in mov stos lods enter mov (bad) push inc and imul stos push scas pop mov stos push scas pop mov lcall add incl fdivp cli push shll add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc sub add shlb dec ja (bad) call or lea add idiv (bad) ret sti daa mov fcoml pushl xchg jnp mov test xchg scas mov pop es mov jnp scas or sub aaa pop or outsb ds loope mov (bad) ds leave mov leave mov jne loope sbb jnp xor lods (bad) mov jb xor stos fwait dec iret in dec ds add flds cs out cmp out mov aam les inc (bad) mov lcall out test lahf mov popf mov std dec mov mov and icebp push insb inc scas sub push mov mov pop cmp cli fstl or xor push add ja cmp mov subl divl push lds icebp add push and mov add cld mov pop and lods sbb mov dec dec in rcrb adc outsl into std sub mov sahf nop and sub outsb dec jmp (bad) cwtl iret rcll test inc pop setle in mov mov test leave (bad) push and (bad) and imul pop jmp push pushf imul cmpsb lret mov imul cmp jp xchg mov cmc push stos inc lret call in clc outsl (bad) hlt fidivl mov scas sbb (bad) jae test mul in aas std fadd dec pop push dec push cltd in pop mov cmp rep pop dec mov and and lret test dec mov push test arpl dec ds mov test fcoml mov inc aas or or mov xchg rol pop lret fidivrl insb or in mov inc jl inc cwtl jecxz adc inc sub fbld aas ljmp and add add or add fstpt jmp xchg (bad) xchg pop into (bad) xlat daa and cltd aas adc jp movsl stc int rcl inc (bad) push inc lock addr16 int push nop stos pop in sbb ret xor (bad) xor push sub push xchg mov mov xor out in inc cld sbb mov pop mov (bad) pop cld pop (bad) xchg (bad) jne ja cmovne mov xchg sbb pop mov xchg lret cmp insl aaa jb cmp mov sbb mov mov out (bad) lods xchg int3 fistpl xor nop mov out inc xchg add xor xor flds test jb (bad) flds and cwtl cmp fs out inc (bad) stos ds in xor cmp cmp out (bad) xchg stc leave scas adc cmp pushf xor adc mov mov jg pop loope mov jne xchg hlt sbb mov push je mov lahf gs jbe jecxz inc mov test outsb loope aas stos add xlat je push pop jo sub or outsb xchg ret xlat dec push repz out ljmp (bad) stos fimull mov (bad) inc and jge add es test imul outsb je jle fsubr fmuls adc cld aam add dec std push push jno and jle stos mov (bad) mov repz mov push pusha sub inc push push and movsb cmc add xor sub cwtl dec (bad) cmp pushf addr16 jmp frstor or pop lods repnz inc sar out rcr cmp insb movsl sbb test mov mov pop divb call jnp jno lea int jo imul push cmc xlat mov loopne stos lock iret jb sti hlt adcb or cwtl (bad) cmpsl rclb (bad) ljmp negl cs testb xor shr cli push insb xchg popa mov dec xchg push test test nop mov nop jmp and popf enter stc inc push xchg and dec xor cmp xchg call mov into mov (bad) hlt mov jb or out and ficomp inc mov in mov jecxz xchg repnz or sub inc dec xlat notl repnz push xor fsubrp fs fs and sarb push pushf pop icebp push cltd or cwtl sub push int jne jo or sub idivl shrl adc push cmp mov add (bad) sbb rorl pop call fildll mov jl ret and gs jmp jns sbb mov lret xchg add lea sub inc jmp lods pop aaa inc out int lds daa push in into add push cmp test dec cwtl push movsb push add stos (bad) stc fidivl out adc mov add inc inc and pop inc mov fmuls pop movsb xor pop ffreep jbe lret sbb cli cld xchg lods adc xchg xor aaa imulb daa xor test test inc sahf push pop inc jmp cmp or xchg mov fldt mov mov ret dec ds xor lea cmp movsb xor rol cmp add std mov dec xor fcoml xchg lahf orl xchg push cmovae or and push jecxz add pop pop sub subb movsb je pop add and cmp loopne popf and pusha push mov jnp std jp mov adc iret mov cmp cmp data16 loope gs fcmovbe (bad) and in shr in push hlt adc int push xor or pop jae das dec test xchg gs cmpsb rorb (bad) cmp jp sub or sahf (bad) icebp out imul mov mov out mov mov pop bound inc (bad) imul lcall pusha repnz add mov mov (bad) add fisubrl mov push pop fcompl pop cmc cmp adc mov clc out adc mulb dec enter loop es mulb sbb sbb outsb push inc mov lahf dec sbb aas test pop jge lods imul in sbb rol adc and test nop sqrtps sub stos out in and lock mov dec push mov cmp (bad) dec sbb imul jg cmpsb in inc add inc (bad) movsl mov lcall fwait lcall pop sahf xor push xchg mov repnz pop inc jnp dec mov adc ljmp adc fldl fs in mov jbe xchg cmpsl (bad) daa aam imul (bad) or test push cmpsl repz pop shll inc push add pop fs cld push in cli (bad) divl or icebp mov scas jae fcmovnu mov or dec jbe pop cmp mov sub lret cmp test push cmp pop mov fsqrt and xchg cld loopne arpl push popf jbe mov in frstor push lock dec xor mov jns lods xchg fbstp mov cs ss push ds xor cltd out xchg ret mov fsts sar xchg hlt (bad) jp cmp dec dec sbb xchg push cmp into loope mov xchg push mov xor cs mov sub hlt jp ds pop test adc movsl in push les cmc adc adc add pop daa int3 cli cwtl leave out jecxz mov lods rorb mov das std not or and pop push mov cmp cmp dec sub mov adc cmc cmpsl xchg gs sbb aas sahf cmc or lods cld das (bad) in lret iret or std pop cmp into mov mov icebp xchg add movsl jle mov cmpsb mov and cwtl jg loope mov imulb out mov (bad) mov sbb cmp icebp lods rorl int inc jmp cmp mov je mov movsl push mov nop negb mov add or or sbb mov test ds xchg mov sahf std or out mov pusha stos imul aaa out jmp enter lcall xchg mov jp cmp fisttpll lret and xor and ret mov mov aad add pushf mov xor out dec lods or sub ret out push inc lcall cmp andl (bad) nop mov cmp (bad) jno (bad) push add xchg xor jge out xor movsl jp inc and cs lcall inc mov mov mov jmp addr16 out mov cmc dec mov in xlat or in or and xorl lds cmp mov dec xchg mov sbb fimul sbb cld orl cmpsb or sbb dec call test bound jg loopne xor mov xor (bad) xor bound pop dec test cwtl inc mov incb sarb daa xchg insl mov mov cmc and push xlat jge mov xchg xchg cli sti push mov and sbb ljmp ds mov fs mov adc mov mov into cmp xchg ja sub xor pop mov fstpl (bad) clc orl stos push inc mov jb adc pop mov xchg jg mov out aam scas mov mov out jmp cmp lds and inc jmp jb lcall cmpsb add pop and mov sbb add sahf jle dec mov aaa in test pusha xchg jo fisubrl adc mov push inc add std xchg inc cmp es mov pand ds push sub mov sub int3 ficom sbb lods cli cmc mov imul dec mov xor jg cmp push xchg push mov rolb mov aam aas dec cmp rolb outsb adc scas and loope out cmp nop xor das stos shlb adc add (bad) lret loope fdivrl adc fwait or xor stos add rclb jnp rcl shlb jno lods pop arpl aas gs pop inc cmp inc sbb pop pop mov lret sbbl fs pop ds fldenv cs jo xor jb fistpl test sub fsts mov mov inc cmp adc imul jmp mov les rorb dec pop mov mov mov js pop xor push loopne movsl mov pop xchg push lods jmp out pop idivb addr16 pushf bnd mov dec cmp dec jae mov data16 dec ja sbb mov fs push mov mov negl sahf mov sub or cltd jns pop sti (bad) jl (bad) repnz mov push jl leave scas xor cmp arpl jae (bad) cmp push adc test fwait mov data16 push jmp int3 lcall (bad) fidivrl mov xlat (bad) aam shlb xor ret lcall faddp push xchg pop aad dec fwait mov jae into rorb lret (bad) (bad) jge mov jecxz or inc mov mov xchg xchg and jmp jno icebp mul (bad) in cmp (bad) xchg (bad) jnp popl xchg add insl andl in inc fsts ljmp sarl mov jl not jle mov fidiv scas mov js push dec or scas mov xlat retw imul or xor addr16 push mov add in push outsl mov test mov (bad) xor lock push jg lods testl stos push sbb pop sbb mov jle mov adc mov mov jns mov xchg and xchg rcl xor pop cmc xchg mov adc lcall sbbb out mov dec ljmp nop pop sub ja out ja jp aad in sbb out lcall lret or ja adc push lcall jmp inc push cmc ss aas iret mov pop cld fs (bad) xor mov enter sti xor sbb aam push out xor sub pop add test pushf test mov fs shrb inc or mov cwtl pushf xor sbb xor dec mov mov xchg repz xor push je pop xlat jl in or imull leave pop jno pop inc adc movntq or adc mov popa inc repnz gs shrl imul and mov sub inc dec fiadd sub inc inc pop jg arpl sbb pushf xor cmp ret ss inc cltd dec fdivs fwait xor jg loopne enter sbb inc (bad) xchg inc pop addr16 sbb dec xor mull mov dec repz sub and lret int inc adc loop mov stos cli adc ljmp inc dec testb outsl pop lods inc cmpsb mov xchg (bad) popf frstpm(287 ret fisubr mov loope jecxz paddsb in fmulp push push jecxz iret cmp jno scas cmp dec ret scas inc (bad) mov aas cmpsl xchg mov icebp push fwait outsb adc or fidivl cld jo sub mov adc push mov push xchg push into rorl cli jge mov icebp loop in jle shr cmp add cli mov shr jb ds pop jmp jne sbb dec sub fsubrs adc outsl push sbbl and (bad) sub hlt jecxz insl ret jo aaa push xchg nop lret fldl fidivl fidivrl out movsl add xlat cmp mov push std cmp rcl jbe das call push les cmpsl mov mov pop das pop mov mov das pop mov mov (bad) cmp cmp test inc sub add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add add inc inc push push jl add das fiadd (bad) nop (bad) std stc call mov (bad) cli out dec aam pop loope addr16 mov and pop mov jne or cltd scas gs push dec xor int3 in aas pop jbe sbb stos mov jne jmp cwtl mov stc scas jmp mov sub imul cltd mov std dec pop xlat mov into int mov jnp dec aad lods cli mov mov mov iret sub fnsave inc push bnd xor or cli push inc loope lods jae cmp push cld xor addr16 mov jne jnp adcl aaa pushf pop popf fcmovbe das aam int inc mov test rcrl into (bad) fisub push jno push jo push (bad) ljmp hlt push push call into das cmpsl movsb jle mov mov loopne cmp (bad) jbe mov sub mov fucomip jne lahf bound imul fstps cltd (bad) pop out xlat mov mov xor mov insb iret cltd pop imul int test xchg adc aaa out sub mov mov cmpsb jmp push (bad) xlat dec int3 pop mov sub loope inc jecxz jmp mov das (bad) jl inc pop shrb ret pop xchg pusha jbe std sti sbb jl pop scas dec push mov stos pop pop iret out adc sti es mov inc fwait inc mov pop (bad) pop idivb mulb aas out xor xchg test mov arpl enter jg in fistpll not cmpsb mov imul aas out (bad) leave (bad) das jl (bad) fisubl test sbb bound cmp inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc rorl or cmp pop pop or add add dec inc scas inc pusha (bad) or or add add add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc in daa xor add add add add add and arpl xor xor add cmp sub add bound sub add add add add add add xor popa add add add sub add xor sub add add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xchg add add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add add push or mov addl or and fdivrs push scas icebp mov mov cmp add add add add inc leave add lds ds add add dec inc scas inc pusha (bad) or add add pusha popl add add add add and 