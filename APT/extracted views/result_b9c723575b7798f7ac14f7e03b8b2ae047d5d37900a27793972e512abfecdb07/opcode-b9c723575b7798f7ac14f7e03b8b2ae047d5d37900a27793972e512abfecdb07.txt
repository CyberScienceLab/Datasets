(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea ljmpw adc (bad) decl lea push call inc mov add mov mov add inc add addr16 sti out pop mov int3 rep cmp mov mov add push and adc jne add in jl push mov fs cmp push inc es push add add add xor jo jg cltd cmp rorb jbe mov add test or push push sub add mov and or rclb add mov lret xor gs add data16 cmp and push add xor divl mov push inc mov imul shr push (bad) xchg fisttpll push push push lret or outsl sti insl and add cmp dec je add xchg gs lock jmp push loopne sbb adc or mov sahf cltd test pop pop bound xchg sub test (bad) (bad) call jns outsl lcall push add add cmp mov fcmovnb and in jmp inc pop pop sub xor outsb or push push push push ucomiss sbb jl outsb lret fsub pushf sub inc inc and push mov mov das adc pop and push insl shll cmp je inc dec mov sub pop cmp push cmp scas sub cli adc and mov dec fsubr jo test push push daa fs nop sub add imul arpl xor add insb add aaa aas jnp inc push insb mov jne push sbb lea add adc push or repz call sub push out mov mov pushl mov nop test (bad) dec or (bad) xor movsl sub dec adc roll movsb dec mov mov sub push jns jne and pop sbb pop das push or and or dec fsts std mov add mov sub sub cmp add xor inc repnz xchg clc mov sbb or ror lea (bad) push push mov and adc outsl sarb push (bad) sbb shl pop pop loop jp negb pop add leave les dec ret mov push jnp fidivl lret jne popf mov mov add mov sarl test test stc and pop mov jo in (bad) push mov movsb pop (bad) fnstenv test jmp sarb xlat xchg shr inc push fs or in jmp fdivs std outsl jg xor inc sbb (bad) cmp sub mov jmp movsbl leave (bad) mov decl lea push inc cmp jb pushf repz and add out mov dec mov cmp fisttpll or xor push (bad) mov mov mov dec shl sbbb push rolb sti or add imul or ljmp xlat mov shr inc inc cmp mov jb pop adc in lock ret pop loopne or (bad) shr mov or add push mov mov cmc loopne call push dec es lock in push push push outsb mov mov add push outsb out mov adc mov inc jmp add cmp xchg aam or push mov mov popa (bad) sub lods pop ss push call (bad) jmp popf jnp sti dec notb in jb mov jne cmp or lock (bad) jo data16 mov push (bad) xor jecxz in es push repnz cmc pop sti into fisubrl xor dec push jl int3 loopne (bad) and xor sbb push fst rcr jecxz rcr sahf sbb addr16 push roll (bad) cmp jne int aaa mov int cmp mov xchg fsubs sub clc shrl int into or xchg in faddl loope sub jb insl adc cwtl std (bad) xor mov jne (bad) loopne or in clc mov push mov lret push stos adc mov mov movsl in push lock mov (bad) mov (bad) push es mov dec push sub jecxz mov icebp mov jns mov mov pop andl add add lea (bad) dec in sbb stc adc mov mov mov cmp imul add add or jne push push jne or jne imul push or jne bound add rol add cs pop inc adc xor (bad) je sbb neg insl lods mov jbe cmp jno (bad) jne (bad) xor rorl push loopne or xor rorl or or sti outsb mov dec xchg (bad) jne mov fsubrs cmc xor mov jbe mov movb adc fadd push int outsl mov and and pushl repz (bad) pop mov lea xchg inc add or test or adc add outsb push aas cmp mov jl xor setg js rorl gs inc mov flds mov rcl inc pop mov push push mov adc cmpl lea sahf adc std pop mov add inc sbb push cmp (bad) mov (bad) std xchg cmp in jg jp js imul jge movsl add shlb lea enter push cld sahf inc inc popa rclb nop (bad) icebp js pop (bad) mov in adc push addl adc insb add ljmp mov pusha mov mov lahf test movsl data16 or mov movl ss xchg das loop out jg push pop inc es clc test pop jle insl roll push adc or inc insb xlat or repnz and outsl xor ret or add push iret fstl jle cmp pop xrelease aam mov inc pushl adc je dec test lahf ljmp mov adc mov out inc jmp xchg je leave sub add hlt in cmp repnz pop cld cli push mov arpl addr16 jns std out mov jbe fcoms test cmp sub pop jne aam bound outsb add into or movsl jge mov or or add pop gs fstps sub xor outsb xor pusha pop js mov andl mov pop test push fnop add xchg fnsetpm(287 addl mov fnstsw jge sub pop sbb adc inc (bad) cmp cmpb repz ret inc stc fs lock pop out mov sbb xorl dec dec fmuls fildl push sbb push imul pop mov negl scas (bad) icebp movsl or adc gs out jmp mov cmp pop stos (bad) sti pop lods clc pusha pop bound fsubl mov inc jge fdivrs ljmp xor aam mov add pushf jecxz sbb mov adc femms mov dec or jle dec xlat push push outsb mov push adc inc mov sub call inc imul mov pop sbb pop lcall (bad) adc imul iret rcrl jne movsl add dec mov pop sbb push push sub mov or sbb das loopne jnp mov mov push mov mov mov jo push adc pop imul pop and push shl or fisubrl lea outsb mov mov cmp aaa pop jle je dec iret mov dec jle push mov adc jbe xor or lods sub aaa jne pop hlt adc lds add shr sub mov and lahf mov mov add ja lret popa out push sub imul lods enter lahf (bad) or loope and mov jno shll mov adc repnz lea jmp adc mov xchg in mov pop or in stos push push lock es nop mov mov push fs mov les or pop pop (bad) push loope pop add xchg push and sub jo push je push add sbb mov xchg pushw sbb inc sbb or arpl outsb or leave insb call (bad) arpl dec aad in push xchg loopne lahf push mov insl adc les push add lea loopne push pop xor mov add cmp adc lcall mov mov lea sbb stos repnz test push jns inc xchg mov and (bad) ja and call adc add inc pop jo lcall pop rolb push push in or loopne cmp cld dec int (bad) aad out sahf cld lret or fiadd inc add lahf iret test sar push cld fmuls shlb dec fcmovnb add sbb sub jle sbb repz mov dec leave fcompl ss pusha push mov sbb sbb out or or test and sahf push jg pushf cmpsb and xchg lds mov aas xchg add sbb pop bnd fcoms cmp jno incl aad cs cmp loope sub mov (bad) mov add test mov repz pop push mov push and and add daa fldcw insl sub push sub sub sub pop cs insl sub xor jb in xor xor lret scas aaa pop cmp cmp xchg in sarb mov imul inc inc or imul dec sub cwtl imul dec xchg push dec mov mov push imul pop (bad) je push pop pop push pop pop mov dec mov pop pop pop dec pop push pusha add bound or lret dec mov loop in data16 lret mov add push adc mov outsb inc mov clc ret mov je jo insb mov pop mov xlat lret or insb mov mov ret scas adc fisub sti je push pop or movsb (bad) sbb xor out insl data16 orl jne cmpsb sbb mov push mov xor std sbb int3 pop push sbb jo sub roll pushl xor int mov add jo jmp outsl dec sbb sbb call add (bad) clc and icebp mov outsb pop cmp cmp and dec push and mov mov inc data16 mov aam sti decb in or test pop jae arpl in sbb sbb sbb ja sbb mov sbb push mov sar push in sbb add call pop inc ret push or inc sub cs (bad) dec pop cwtl jne and push (bad) es insb xchg lods push push push mov mov movb xchg xor aad add inc add push pop int3 mov sub sti push xchg test adc in jle fstps cmp rcll outsb sahf (bad) (bad) jo sbbl cmp jl bound pop mov insl mov sbb and out in addr16 jb and hlt add adc or enter pop dec out fcmovnu iret push push mov push xor mov push xchg push test pop push mov jo lcall or pop inc mov inc sub mov xchg sbb sti or add sar lret sbb into sbb mov mov pusha in mov or mov jnp adc xor subl inc jne cltd inc xor add sarb xchg mov sbb push mov mov ljmp mov sub xchg sbb inc movsl cs movsb jnp xor lock pop aas mov js (bad) mov mov imulb cld fistpll mov (bad) and adc lahf adc std (bad) fcoml fwait leave adc in or shrb add xchg sbb jns xor mov out cmc add pop lods call push int3 xchg pushf cmp (bad) xor iret xor loopne lock cmc mov icebp pop and and sbb stos mov inc rclb dec push add enter sub or jbe push inc ret mov xchg xor mov mov mov pop cmpb jne orb mov add add or and sbb pop xor dec xchg xchg jg xchg in pop and add or jmp xchg test xor scas shl inc and add loope imulb lea iret pushf dec lds or push or add cmp jl mov in pop jmp (bad) add xchg aam push fmuls leave or es pop in xchg daa dec push (bad) xor outsb dec push lcall push sub cmpsl lock add pop lea jge je adcl mulb in loopne xchg adc dec cld jmp cmp or add dec add rorb cmp push pop shl push fxch jbe std insl push jno push insb jbe mov inc add addr16 jmp sub or imul add cmp push mov mov andl jmp outsb sub mov push mov mov lea ret and pop adc and loope cmpsb pop cmp imul add lret or aas scas outsb mov shrb pop lcall popa and dec xchg pusha cmp xor adc add push ja push xor inc jg inc and push add decb jmp addl test mov adc push fs fldcw mov cmp add bound lea push hlt push and mov loope dec fistpl cmp popl fstpl leave jae and dec dec sahf rcrb xorl mov scas outsl inc xor sub loopne enter push pop and test push inc (bad) lcall cmp in inc cli cli lret sbb in in mov mov xchg addr16 jbe mov mov mov adc push rclb (bad) adc mov mov xor sbb adc imul mov js or push aas movsb jne cli (bad) mov out push addl ja and sub push and pop xor inc js aas push bts outsl mov mov test add inc or xchg push pusha xchg inc testb mov cwtl xor sbb push enter cmp sbb push in cmp loopne addr16 sbb adc pop xchg pop cmp pop outsl cld xchg xor add push cmp xchg pop mov add push lock add pop fcom add jne dec xchg jo lods movsb mov lds test pop mov push out adc jnp add rorb adcl movb push pusha mov jnp fstpt ss mov pop mov mov push push or push dec or pop push push (bad) push xlat dec adc add js (bad) push jge clc xorl das lock dec pusha dec and cmp push std mov push adc leave popa mov pop pop pop clc xchg or adc insb adc ss mov loopne test fs xchg idivb decb add stos add xor and cmp arpl pop xchg push dec ret shl jle add mov sarb pop jb shl adc xor fisttpl movl add inc add (bad) scas sub rcl add push mov cmp addl mov pop mov sub popf push inc jo pushf loop xchg out lcall mov or loopne insl dec sbb mov jle and sbb pop push nop insb push and sub add sub hlt and and push mov mov popf out and push (bad) dec inc add shr pop cmp stos mov fcoms and cld mov mov cmpsb movsl movsl movsw push aam jnp fisub and jbe test add js jae mov (bad) dec hlt pop shr js mov push sub pop mov in mov loopne push push adc mov out adc idivb imul push inc lcall cs (bad) int3 icebp sub cld xchg enter and mov (bad) inc sub aam lahf je adc xor sbb xor gs mov mov jbe mov sbb adc loope loope fisubl sub cli mov jg add push dec mov jl mov mov sahf fdivp insb mov jge aaa sbb cwtl int test in in mov mov sub mov xor sub mov mov fwait mov pop adc inc push xchg sahf mov jmp fcomps daa mov pop xchg mov fwait jmp neg sti out imul jbe add mov mov and ja sti inc and cmp sub (bad) hlt cld inc and dec and sbb std sub incb mov or jle jge mov subl jmp mov jp xor cmpl or punpcklwd sbb adc inc pop arpl adc mov cmp cmp ja xor or cmp mov (bad) xor mov mov jmp xchg sub sub popa inc push in in sub and pop jmp insl add push jne cmp (bad) mov dec (bad) movl outsb pop mov sub and int3 dec cmc mov add fsts xchg or and or sti iret or sub inc push add or or jle jno ffreep dec push mov std lock push pop mov cld push (bad) pusha iret push test push stos xchg jge,pn in cmc in sub push xchg mov cltd sub nop frstor sbb inc je and pop enter push int in sub or loope cmc push cs mov (bad) xor mov ret push add sbb mov cmp pop or out cmc hlt add cli pop jg pop and ficompl enter xchg mov pusha inc or call ficoml test and and mov push ficom mov push sbb xor mov cld xor xchg cmp data16 dec sbb lock (bad) divb orb cltd xchg ljmp test mov add clc jbe ds das mov add mov popa rorl mov xlat test mull (bad) cmp jne push rcr add mov dec or xchg push push mov and pusha mov xchg push cmp incl jo add or ljmp rcrb or inc loop sub cmc jnp pushl dec bound adc cmp std xchg mov movsl add je or dec test jg mov jl push add sarb movb add movsb push push pop or clc movsl and clc cld mov inc jb adc mov cmp movb jecxz xor cmp jne jmp iret sbb pop mov mov add push push movsb sub adc or mov sub enter xchg push xor dec or and cs or lods enter adc (bad) dec cmc mov cmc add jmp mov sub (bad) outsb or (bad) push movl adc mov cmp xchg jb mulb mov add xchg push lret mov or xchg or pop cmpb sbb mov fildl sub inc nop sbb sub inc mov sbb push data16 or es jb and pusha incl push inc push inc inc push or loopne clc sub push fmull push scas fiadd mov leave ds mov and dec stc std clc std mov iret popl lock movsl movsb push jmp push or outsb dec (bad) adc cld hlt cld sbb daa pop in in jmp sahf call in cli lock cmp cli xlat (bad) xor in orl mov dec push std sub adc (bad) ljmp and inc (bad) jne xor rorb jmp test dec jo sbb shrb lods enter mov push shrb mov push dec aas sbb out inc repz into sub outsb mov or xchg fldcw inc or leave add clc pop into into into dec mov and lods push nop js jnp out aaa insb (bad) ficom jno sub cmp and nop into test cmp xchg mov or std icebp adc pop out or rclb add xlat inc lcall sahf pusha push inc clc cmp pop pop jp pusha mov ret jmp test (bad) lods mov sbb sahf inc lods in jo sub xchg subb inc or outsb cmpb add add es lds (bad) mov pop dec pop mov (bad) ds mov ret adc or nop mov icebp inc clc jl jle or mov loopne orl aad adc mov mov das (bad) add mov sbb je or mov cmp rclb loopne xor dec clc jne sub popf outsl int3 pop iret dec and xchg push out pop push and push or mov jnp shlb sub add insl mov outsl je adc pop ror push adc clc into pusha nop out scas add jnp push xor xor dec pop bound fmuls sti push add and mov or or add mov pop ret add xor ret mov clc sbb cmp adc jb scas ljmp push mov push xchg call cmp push orl jno insl xchg inc loopne push push push cli rcr ljmp sbb mov inc mov mov xor dec inc pop push mov aam push xlat push popa sub mov inc lahf adc sub imul lock call jmp sub jl je arpl mov sbb pop mov lret in lods int3 in insl sub push cmp pop sub fdivrs xor inc hlt cmpl mov mov pop pop imul add cs dec pusha in (bad) or cmpsl jb ret movsl fadd push popf push in cmp (bad) pop inc sub shr adc sbb mov push sbb loopne cmp movsl inc call mov pop cmpsb loopne insl inc mov xor dec dec and jmp inc movsbl testb or aad push inc mov pop idiv push push shr or or fucomi jg sub (bad) sub neg push and jmp ret or xchg jo mov jnp push add sub mov icebp inc add (bad) mov ljmp push and fcomps nopl cmp nop addr16 push pop leave adc push inc bound or (bad) jmp data16 leave sbb fstpl fcmovnb addl jp adc cmp pop add mov daa ljmp pop mov test and jmp out sub fdivp inc stos int3 aaa pop sbb roll rclb in sub in mov rolb cmp test outsl pusha adc add push push and int add push aam je mov jecxz pop or mov xchg (bad) sub (bad) fbld push leave (bad) sti (bad) sti mov pusha xchg xchg loopne push loopne into or push push sub add test hlt mov xlat push xchg push les cmp mov jg clc pop cld cmp or push pop jmp mov jl lea mov adc inc dec adc (bad) sti lea jns push push imul push sub enter cli negl movsl ficompl sbb add pop movsb out adc jb test or ret inc inc incl jb add je and jecxz and pop sahf sub inc jg sbb or jne jmp outsb pop mov pop test jge sbb pop jb mov in popa or xor cmc jbe nop mov jb int xor or dec add lock sbb leave lock lods mov roll pop or out and jne lea adc push lret jle sub mov and je,pn dec dec dec mov inc push xor inc xlat lock dec outsl mov inc add ja xchg pop pop and shlb jg daa les (bad) sbb dec or int lods push pop pop or add sarb pusha les push je adc jecxz out (bad) ds mov pop and leave xor fwait mov dec or xchg push stos inc or mov jbe adc sbb movsb rclb (bad) xorl popa push repz adc or push fsts add dec lods bound lret aas mov push jo ret mov pushl fmull mov aas pop inc cmp dec insb movsl push repnz push push sub (bad) sti pop testl jne add cmp in jg push cmova cli xor sbb push shrb and inc xchg jmp pop leave xchg and dec add aad inc adc (bad) mov ret inc (bad) jne pusha imul or or mov pusha jle inc xchg sub sub dec or dec fistp fimul jl ljmp mov xor inc lcall icebp addr16 outsb jo add inc jb fistpll incl mov xor cmp stc and shl insl insl sti add lret xor sbb cmp (bad) mov iret js shr shl add mov fucom push stc pop loopne fimul sub clc ljmp mov sub dec hlt push xorl mov pop ss mov dec push out (bad) add cwtl push jp mov add push push out push movl movsl out lods call jle (bad) lock incl into cld inc adc loop sti add lret (bad) add mov or inc jne add lcall addr16 dec cmp inc add mov mov cmp cmpsl mov fs mov rclb loopne mov jecxz in ja adc (bad) leave push mov and push (bad) sbb je inc fs pop leave sbb push test xchg lock mov lock dec sbb mov inc xor pop enter pop push add mov aaa (bad) pop sub add and js mov pop xchg lret shlb fxch data16 cmc mov and mov push and add jnp and pop mull (bad) lods sti neg push movzbl dec clc mov fisub jl and test idiv (bad) scas faddl pop jae sub push (bad) out mov sbb jmp mov enter cmpb je (bad) subb jecxz sbb subl idivb pop add addl cmp lds jge sub sub rcll dec and es outsb gs or sub cmp or scas inc movsl inc mov sub testb adc push clc mov cmp iret mov shl lea neg pop sbb add sbb inc push into adc and pop ss mov scas test mov cmp inc xchg dec scas cmpb adc fsts jmp or pop orl sbb pusha inc ret or clc (bad) xchg mov je or push stos mov pop decl (bad) stc pop mov jl pop stc sub out push stc shrb js cld (bad) cli mov insl jmp add dec std sbb scas mov push jo mov test stc add dec or test sti nop mov in add adc je andb jl popf pop inc leave repz pop imul xchg mov mov jle cmp lock jl pop out movaps lret inc add jae fimull cmpb bsf stos or jbe call sarl push cmp push jno or int stc dec sbb adc pusha xor leave mov pop push inc pop adc push gs push pusha mov loope clc leave inc mov cld hlt inc cmp adc push outsb add xchg push jmp add add and sub mov push movsb add mov mov or mov push setl inc leave push xchg lret mov and int jmp inc fild pop add daa stos inc or xchg rorb or push inc jae pusha push xchg push pop mov pop jno ss sahf mov movsb ljmp push mov jno lahf fs sbb fmuls loopne lea mov pop imul fidivrl ljmp outsb and push inc jne fldt mov lret inc dec shr inc popa jg inc or mov mov mov and cmp xor lea inc adc fcmovbe (bad) hlt cmp (bad) in push inc loope shlb xor not mov stos inc sbb xor or push cmp das xor and pop mov jmp inc (bad) aaa in or jmp push je mov cmp movsl and sub add push jmp leave pusha dec jmp jbe push add jle movl imul and jp jmp fdivs test je mov sbb sbb and mov and pop add add dec push aam (bad) pop in xchg dec (bad) mov orb js sbb fs mov push in pusha notl mov test aaa sti push movb xlat sub aam cld push push and pop pop push jbe mov ret lock xchg mov adc xchg mov mov dec xor sahf data16 push scas loop fistpll push pop adc ret cmp jecxz (bad) xchg or inc xor jle push leave xor addr16 in cld mov (bad) sbb hlt adc add fnop and jmp mov int sbb xchg jge aaa nop mov xor mov inc and inc add in mov das jne lds fiadd push mov fwait add mov call clc push mov inc lock ror shr call jns shll dec inc fwait adc jae or rclb xchg xlat js jge js mov add or movl add or push mov push fsincos (bad) leave add int3 push pop leave xor nop test ja add pusha adc clc dec je lds lock push mov scas rcll and mov orl xor test test mov push lods push (bad) aad adc push orb or add lods stc mov ljmp or lock je cmp inc add jne fildl imul pop movsbl inc jmp out aaa ja xor inc adc inc cmp jle and dec lcall pop rclb sub pop sbb jae jbe bound aas inc jne add mov jge add pop fldt or and jle inc sbbl cli fisttpl jae inc inc add js bnd mov popa stos and and pop cmp pop mov idivb sub pop push mul seto neg or push outsl test andps bound mov in sbb inc push dec cmp lock inc pop push test jb sbb out out loop rol push shrb sbb sub pop and fsub mov mov div ret or cmp inc cmpsb cs push mov mov cmp sub fbld sbb pop repnz test lcallw add clc push ja xor rorb add pop in add lea or xorl icebp clc js mov das ljmp pop inc popf adc icebp mov and mov dec add cltd mov mov fisubl stc cmpsl add xor ret fldt dec mov lock add push pop mov addl cltd pop pop mov push sbb mov outsl sbb add cmovae aad outsl jne cmp or nop pop jg push mov push (bad) jge lea cmp mov push pushf fsubs xchg mov jle cltd mov mov test out jmp inc enter push stos inc or xor sub inc or rcrb gs shll fdivl mov lea push cmp inc inc inc sbb jb pop mov in out mov addl jne shl dec imul out lea jl mov imul push xor mov and faddl or dec addl mov jge movsb mov lock icebp insl push mov jg cli and dec inc or inc test js inc ja mov mov mov or pop (bad) xchg adc loopne push xor lea mov jbe test ja test jmp (bad) das scas inc sbb mov incl jae mov (bad) xchg sbb rorb mov or pop dec inc mov ret shrb add fcomps add pop mov add inc mov in dec in mov ficompl sub loopne fdivp (bad) cmp jne mov cmp jne in inc in jb fildl sbb mov adc fdivl call call pop fldt decl sbb jbe dec (bad) dec popl jge jg inc or jne sbbl or es add sbb ds cmp insl in das mov add shrb in or push mov push (bad) or fidivl xor jnp add sub xchg sub jle jae leave clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc pop adc popa push sub fwait inc sub ljmp xor mov inc dec loopne ret pop fiaddl (bad) (bad) cmpsb or repz jae (bad) cmpsb aaa fdiv orl mov jb lods jmp idivb loope jbe cmp jae mov sti xor mov push or test mov add mov in inc sbb popa jb xor movb push mov decl adc sub pop in inc dec inc and hlt dec in test xchg xor xor fcomp adc or fidivl dec add push pop sub pop push and sub push (bad) dec in (bad) in das mov cmpsb or adc jne std in cmp pop add mov fxch xchg icebp pop lea fs mov lret pop outsl imul xor hlt mov add in in loopne pop orb fwait mov outsb adc push push repnz sbb mov mov xor inc dec jo adc jp xlat jae mov push push pop xchg or int jae inc jno mov rol jne or add push cli or ja inc jmp lea lea jnp xor adc (bad) outsb aaa push jbe cltd sub cmp cmp and push pop mov out popf lret rorb jge jae jmp in inc mov mov mov adc mov es out push lret push arpl push add add into mov ljmp push pop push add inc add cmpl mov and cmp aam mov mov js out dec aad cs js add mov mov mov sti add leave mov add or bound xchg jge inc push aaa push sbb adc push mov sub bnd fcomi pop adc roll lret repnz lret xor ds cli insl fistpl mov inc adc nop push sbb mov and incb inc or adc sub cmp jecxz jbe and jle popa xchg cmpsb pop je sbb mov loope adc or adc or fcompl mov push mov or lods hlt mov mov sub cmpl je frstor jmp add sahf sub das mov pop push lea ficom mov sbb pushf cltd sbb std mov push add xchg jg lea jl nop mov push dec lds int (bad) jp inc mov mov push pop xlat inc mov inc adc and not incb sbb adc fs sub insl pop pop jecxz pop inc shrb (bad) and sbb and outsb inc es or pop xchg addb inc or inc cmp insl (bad) ss jg cmpsl add push or inc shrb inc mov test adc push fs arpl outsl lahf mov push lea jp xor dec sbb or sub rorb pop lcall mov mov arpl leave add cld cmp push mov xchg cmp xor and and fistpl jbe scas call mov push mov fwait test (bad) mov adc pop rcrl push cmovge cmp lahf fs add fwait sub add or mov cs in pusha aam ss inc lock xor cwtl sbb pop inc js jge or aad xor ret imul mov decb dec cmp jl push sub jg inc jge inc jo dec jns push fild push pop xor jg mov fsubs cmovp test lcall push fdivrl int rorl dec movsb add push xor insb or push mov sub add adc loope or push xchg lock pop and jo or lods add push pop mov sbb aaa pop mov push sub pop into adc aaa mov repz push sub add (bad) or sbb add or decl adc fidivr add lods push fldl aam push jmp insb and mov (bad) icebp or sbb push loopne pop out push (bad) mov pusha fwait push add inc bound sbbb iret inc mov cmp jo adc inc pusha mov je xchg and (bad) mov inc push inc inc dec js jne dec ret outsl (bad) push dec or or cmp (bad) iret jbe ficoml adc push dec enter inc jo dec mov dec inc xor cmp cmpsl pusha incl add jmp pop int3 add shlb aad push out add or in fs push aaa idivl cmp xor jmp or imul pop loope mov (bad) pop orb inc mov (bad) add xchg mov fxch stos fiadd pop (bad) push push push fs add mov push out sbb mov rorb aas add test pop je xor sub divl das xchg adcb cmp cmp adc xor push out fwait push cwtl in cld and mov (bad) or testb stos adc lcall std mov add sbb jo fldt push js add cmp inc fldl ret cltd mov das hlt push repnz push scas mov shl or jl pop cltd adc (bad) xchg sub dec adc push out xor adc ret pop mov jo add xor sbb pop and push xlat outsl ror into add pop rcll pop lods lret (bad) push imul jle cli add ret adc pop cld lea dec adc add addr16 push std pop pop pusha jb mov or or inc orb xchg aam jg inc ljmp (bad) sarb and jecxz mov xchg ja (bad) pop xor xchg aad pop addl sub pop lods inc or pop adc dec aad clc mov jg ja sbb jp loope mov xchg cmc mov inc pop mov icebp cmp pop inc enter popf jl jmp loopne das xor pavgb mov jg inc lret mov and push xor les sbb pop mov xor or pop enter push mov inc mov push push das sbb stos bound (bad) cmpsl and imul sub xchg lret shlb push push push push (bad) icebp mov push jl lods pushl mov lods insl lods in test jno jno out inc test or mov sbb loopne push nopl mov or pop jg xchg stc (bad) repz mov je push xchg ret cltd test (bad) decb sub andb xchg ret inc dec jge imul or sar dec adc and and inc add mov ret mov adc or mov xor in fisubr pandn dec jb pop fbstp outsl notb fist sti (bad) push lods mov dec mov or cmp add jge je push sti mov add push insl adc fistl sbb das pop sub jle je popa add jl pusha outsl mov pop or cmp mov pop or orb lret cmp repz iret ds mov push pop sar inc adc sbb movswl add mov adc mov pop or sbb mov scas lods mov mov (bad) jne pushw dec aaa call pop mov adc mov xchg adc or push je push xchg mov push pop jmp mulb icebp hlt imul mov dec add or mov adc inc jl push add inc adc shll ljmp in sahf enter xorb jge jo fsubl add or adc int3 adc cmp mov lds and or add cltd lods imul pop sbb adc push dec push xor (bad) mov pop push sub push adc cs adc xchg dec push dec cld lsl lss xor clc (bad) push mov (bad) fidivl rcrb addr16 shlb dec pop xor call movsb push push cmp lds (bad) in pop add inc jbe add aas negl xchg and or outsb inc stos cwtl jnp sbb out (bad) into pop outsb mov or movsb pop push jno push mov mov sar add pop js mov ja orl cmp jnp push lock cwtl rorl jb lea cli mov inc push push js aas cmp jl push ljmp xlat sbb pop popf jo adc arpl or mov imul sbbb movb icebp movsl lcall pop or adc test test add fstl xor cmpb dec je and sbb rclb jle leave or aaa pop add add movb pop ret push pop xlat or into add or mov sub fwait leave mov xchg add pop lods fcmovne pusha mov shrb in jae bound mov andl mov sbb or push test and (bad) sbb mov adc pop sarb insl addl push mov xchg push cmp mov pop cmovbe mov clc sar cltd in imulb stos jg mov or outsl (bad) mov jp push pop dec (bad) call push pop ja jne das pop or incl int rorl (bad) (bad) sti push ret mov std sbb cmpsb out cmpsl lds add jb add adc pushf testb movsl into jb push sbb inc dec cmp pop sbbb push or imul adc pop arpl dec fsubr pop js pop jns xor jne mov pop cmp pop testl push push jl insb dec or cmp mov jmp inc ret subl cmp shr mov dec movsl mov sub rclb inc inc sahf adc pushf sub sub pop and sub mov and into mov and xor cs dec mov in jl sarb adc sub decb push decl xchg sbb mov or subl outsl jnp mov push lea rolb jl mov xchg xchg jmp pop push pop ljmp and mov adc aas adc adc cmp jne inc fldcw add (bad) ret or sbb sub xchg pop mov pop pop pop pop aam push mov mov out (bad) xor jmp mov inc mov arpl adc or cmp jb jb jo push sub sar add (bad) push je push lods and and dec push jecxz stos mov mov mov add mov lods cmp jne scas add hlt and pop jne push (bad) or (bad) out je dec pop add dec add mov andl ljmp cmp jbe jecxz stos inc jmp jecxz stos push std ja xor insl pop jecxz mov stos jmp subl mull lods mov cmp cmc dec mov stos mov mov and sbb lea xor or mov je xor push xchg add insl outsl lods inc mov cltd je repz pop mov test les test inc sbb jecxz cltd sbb push mov dec add jo jae cmpl pushl mov and and loopne add popa sbbb cmp lock (bad) jnp add inc adcl outsl mov gs cmpb push test (bad) jne adc or test nop decl jne or loopne jge (bad) mull shll in mov push clc mov mull arpl push mov ljmp push movsb push stos je inc out mov sub or je and push test cmp cs fcomp stos pop mov ja adc pop rcll push push adc cs stos jnp or inc bound (bad) lea test xor cmp jae dec hlt mov jbe es out mov adc xor and imul sysexit sub adc and mov fcmovbe jb dec bnd es dec enter push push sub push call xor adc or sub and enter in mov or jae (bad) lods std jbe lea dec push xlat push sbb cmpl dec push fistl and pop sbb out dec or and stos push sbb jmp subl pop inc out mov adc push lds lea adc inc mov loop pushf or or mov add or xor lds push scas xchg or cli xchg pop dec sbb adc aam xor add sub push sbb loope pop pop pop mov jbe cmp lss ss dec leave cld inc leave hlt sbb mov orl and lahf (bad) push fcmovnbe add ljmp mov loope in mov and popa aaa imul xor pop in sbb fildll push or aam jmp cmp add dec mov sbb or adc mov jmp cmp popf mov jo push loope jne sbb jecxz aam jae push in inc add inc test int insb in jb fs jne (bad) adc pop cmc jge data16 stc imulb sbb xor or divb ss jmp leave add push fldl dec push adc inc mov shrl cmp xchg cmp mov inc stos in adc test je mov or outsl sub popl xorl push sub add je xchg xchg xchg jo jle inc jle cld (bad) fildll sub pop jmp sub je dec je dec jne push or jge jne lret mov jb push insb inc mov insb inc loop or lds mov jmp sbb push jmp inc in jnp ljmp push imul jnp jmp jbe je add add fstpt mov push cmc add mov dec xchg por fidiv jne push push push xor jne mov dec out imul mov jne gs jbe mov ret and pop test mov in pop inc roll cld sub mov lea sbb inc mov cmpsl int dec cmpsl (bad) mov divb (bad) dec mov icebp aas mov cli inc cwtl jmp mov fcoms mov les adc xor cmpsb subb jae mov mov xor fscale xor lret aad add test lret jl insl jno push push rorl dec lea andl mov insl adc movsb fwait rol test push jb test (bad) or (bad) roll test pop rolb dec test cmp pop call push cmp push xor xchg fnstenv mov add or int roll jmp lds push sbb js dec lea cmp pop pop xor push fldt and add mov jae sub (bad) adc mov insl mov xor dec loopne pop dec jp dec adc sub jae push ror inc fildl int3 insl clc pop push fldl fmull mov xchg fiaddl aam bound pusha mov test in call jns enter fldl inc mov cli inc in add fmul out mov (bad) addr16 fldenv pop shlb jbe jb sub inc in fwait lods add and enter fildl mov adc or lea insl test aam out pushf jno or in mov leave jne sti fld ficom ret pop push pop gs dec xor sub ret adc pop in enter add (bad) mov das push adc out insl add mov and or adc jmp orl jnp fldt int and je sbb jno pop jp jb pop and inc jb aaa jmp adc dec shr ja data16 imul push in or fsts mov sub or outsb out sub sbb sbb scas out push or mov insl jns sbb roll or push rcl aam loopne outsb sbbl or xchg xor leave sahf popa sub adc mov sub fiadd and fldenv inc add sbb test mov jnp jne inc pshufw add mov imul sbb int3 add mov mov out dec lret incl pop inc into (bad) mov mov sbb ss add add or push sbb sbb lret dec jg mov insb dec mov jmp adc shll sbb icebp bnd or ss jne xor sub push sub dec ret mov cmp je cmp je adc lea or (bad) faddl adc jo dec xor mov leave sbb pop enter mov test mov pop insl push sbb lcall fisttp adc or add ret test insl ds mov push xor inc mov minps mov cmp je rcll mov outsl fnop lret jae adc ret cmp jb imul fisubr add pop and sub xchg mov aad mov jae in inc mov ficompl mov mov movb outsb lahf or mov dec sbb and and cmp mov xor jmp cmp cmpsb cmp sub pop ja call jmp xchg insl pop dec mov sbb mov inc mov pop jns mov movsb and roll pop cmp sbb (bad) les push ss adc test mov out fsubs jne inc stc imul hlt jne jmp or jb jne into dec xor stos push rorl movsb pop or push jmp imulb je test lea lods je add push mov or data16 sub xor sub (bad) and cmp push add jmp divb push xchg pop pop notl out adc rcr jmp aaa push mov es add pop shrb ret ret or dec fmul mov lock loope cli fyl2x repz adc and cs adc add (bad) mov push or clc lea mov mov sbb pop jmp ja jp call xor or outsl adc aaa insl int3 outsl repz mov mov mov jmp push int test int push adc mov in mov int outsl call jecxz mov and inc or out mov les add sbb jmp decl sbb jo into cmpl fmuls (bad) xchg sbb jne movsl or pushf pop sub test add ss and in cmp push ja int in add rorb adc push shr and xor repz xor lock add mov sarb pop xchg loopne and cmp jbe stc (bad) pop add jmp movsl xor or pop insb xor or stc jmp ja fwait pop push and int3 sub dec (bad) mov cld add inc aam jo xor or inc call das jnp sub dec fldl2e mov cmp mov lock rcr fsubrs std fstp adc icebp or push inc inc hlt adc rorb adc and in push sub sub fsubrl aam dec cmc popa push cmp push lea adc movl inc movsl cltd or enter mov into fsubl pop mov jno out push mov cld bound or push adc fnstenv jnp and sbb sub mov and outsl loope and loope pop push rcll pop sbb (bad) sbb insl push mov add cmp test iret scas xchg pusha mov pop arpl add int mov inc add out inc xor mov add or push adc test mov jo cmp adc test jb jne lock insb ja imul sub cmpsb ds or push add movb pop scas add ret stc xchg add sbb dec inc inc test mov popa add jbe (bad) adc add movb mov adc mov pop cmp jmp cmp leave ret ljmp hlt mov add ljmp cmp sarb or jne push push push push cmp cmp (bad) (bad) je call or or or adc adc inc movsb xchg adc xchg pop loope xor orl sarl mov cmp mov aad sub jb pop cmp jne mov dec lods pop movmskps push cli sbb jl sbb pop (bad) ret jnp sub add push push push movsb jp push addr16 test jl pop stos adc cmpb call jmp mov lahf cmpsb jb xor std jne push cmp mov clc dec jnp push mov cmp test (bad) popa pop inc push inc xchg and adc add sub mov lret mov jne (bad) or (bad) sbb inc repnz jnp mov call inc ja movl daa (bad) bound test add and add clc add lret lahf sbb pop mov pop mov std and in sbb in notl or jg das fisttp jb jns fstps pop movsl push test fs je idivl mov mov lahf xlat xchg in jp xchg fcmovnb sbb std ret or (bad) in cmp and in fsts pop fs cs sbbl mov andl cli or push xor jbe cli add adc or shr and movsb add push leave push lret cmp mov test data16 test cld decb sub adc add dec push cmp movsbl jg into mov lock mov adc adc mov or insl pop idiv pop dec adc adc ljmpw sbb (bad) je lea sub dec std sub mov dec push dec mov push cmpsb jp sti sbb mov mov mov mov dec shr inc fldt jb shl add lret data16 sub stos lret mov inc xor mov push lock adc xor or hlt jl inc cmpsl adc cmp xchg pop jecxz lahf imul mov adc sbb out mov insl ret aaa or lea or sar je sub xchg cli incl push jbe push lea shr inc mov adc lock mov sbb pop jmp mov mov mov inc xchg mov inc ja inc dec nop imul push ja add adc cmp xor push mov mov pushf xor dec div pop test inc push inc adc push xlat enter orl jbe (bad) push push push or into cs sbb jge leave lcall mov cmp sbb mov popa add adc xlat add dec and adc mov pop cmp ja lea sti pushf sti shr sub jle lahf outsl dec jecxz jne ficoml jmp aas push (bad) ret adc popa push enter sarb (bad) enter jmp xor fldl dec adc lods imulb add pop sbb ljmp mov add movb stos std mov enter adc cmp sub sbb add dec push daa or add sub fimul je lock and push fwait adcl icebp dec popf inc push sub fmuls cmpsl sub ss dec dec and pop push or add jae (bad) or sbb in (bad) add (bad) (bad) cs jmp hlt add or pushf or push sbb jecxz rclb jae mov lods outsl xchg lea jae enter add popa add xchg sbb cli cli mov lods and push push faddl (bad) orl push stc fdivp mov mov lahf cmp cmp and ret pop arpl lcall cmpsl (bad) maskmovq imull pop rol (bad) mov or leave jne jmp outsl mov hlt int inc mov cmp je sub shlb popf incl ss inc mov and int3 inc push mov inc lcall negb movsl xorb adc cs je jns test mov pop inc fdivs mov mov and cmp je inc mov push inc cmpb loope pop mov mov fnstenv inc and push test lcall imul adc sbb or loope nop (bad) push add mov mov inc inc data16 or lret add mov pop and dec pop fnstsw clc sbb mov mov inc inc dec lock push add and lcall (bad) and mov cmp add stc inc loope and and xor push pop lcall mov inc les enter adc jns sub (bad) pop and xchg popf adc mov outsb mov lret xor xlat cs nop je mov cmp addl lahf push cmp cmp inc dec fcoml fsts out xchg in mov sub cmp ja pop hlt add adc fcomps dec add adc pop lret push sub xchg and loope inc mov adc outsb sbb adc mov mov or ss lods mov inc in ja mov sbb add mov jbe fiadd inc jne mov int3 mov add xchg stos ret pop pop mov add sub xchg pop insb add jae jg test mov rcr sar and xor adc mov dec lret es mov addl shufps rolb jp adc or push mov pop or inc cmpb pop add in sbb popl sub jne unpcklps mov shrl xchg pop pop mov imul idivl inc sub inc pop ret or mov push adc (bad) jbe test enter pop inc es cmp notl sbb add push mov jmp mov pop ret pop movb (bad) arpl xchg sbb pop xchg out or add jb dec jecxz mov xor pop jmp pop add fldt cmp je add mov jmp push mov pop cmp cmp and pop clc mov js jne inc shll leave ja and adc lret repnz push mov lcall fdivp ret mov enter repnz mov adc test addb loope aaa aaa xchg es in fistp pop push jne data16 or add mov or push push push inc loopne and subl and lahf dec pusha les loopne int3 or pop or push and stos (bad) adc loop inc add sub sub mov cmp xor inc dec repz jno push add and adc orw push rolb or clc xchg inc sbb or nop and test out mov cmpsb ss inc sbb add and faddl and add (bad) pop mov inc inc inc and and jg fbld insb cmpsb mov stc and mov dec mov jns data16 inc inc mov inc rclb ja fsts adc mov cmpxchg adc mov xor out adc push fs ljmp mov push dec popa dec data16 in inc inc shr or push pop fsubrl jmp fildl push sbb pop ljmp repz iret lret mov in inc inc push inc sub fstpl call mov pop mov cmp (bad) xchg subb dec dec sub sbb ljmp lret fstps leave not jg xor in inc je iret je jns dec cmp dec inc rcrl insb inc xor mov pop clc fwait je sti or pop add or insl fnsave cmp or js hlt jne aad push add sub or fild adc cwtl rclb cmp cmp push and jne pop (bad) rolb imul loopne mov pop adc pop clc cmp jmp xchg cmp mov cmp sti push push mov aas mov out lea (bad) and add loopne pop pop test xor sbb inc inc add out add and (bad) mov mov and roll add xor push fildl xor dec sub mov add (bad) push int jbe mov lret in ja aas in push (bad) sub push cmp push je dec dec or pop push mov inc push sbb outsl or loop or jmp cmpsl rep adc data16 jg cmp test aad or shrb pop hlt fs sbb popaw fnsave and addb (bad) add aad jge (bad) notb pop pop ljmp or xor mov sahf adc add out out cmp dec jne pop jl inc mov xor sbb or xchg mov add mov out dec adc or movl sbb call add inc jmp cltd cmp std sub (bad) aaa cmp enter push or cmp inc in and iret pop roll adc and daa push or jl push add pop mov add pusha pop rorb addl mov or push push jge popf push xor jl daa sti push (bad) jbe xchg test pop add in adc push push sarb push inc lcall push or add xor loopne adc xor push and and dec and and dec inc inc cmp and and xor sub and and and sbb sub and adc enter adc enter fs mov mov mov repz jl mov mov mov mov ds iret nop mov mov mov mov mov fs movsb mov lods mov xchg xchg xchg xchg mov mov xchg (bad) enter xchg xchg xchg aam fsub xchg xchg xchg xchg in in lock xchg xchg xchg hlt clc cld add or mov mov pushf cwtl mov sbb sbb and sbb sbb sbb adc or xor sbb add add xor cmp fs xor je fs push fs fsubrs repnz xor orb enter xor sarb mov loop inc or mov inc cmp xorb inc lcall pop pop repnz mov dec push inc push inc dec dec push push push jle idivl jns je insl push outsl outsl je and inc push enter pop and pop push inc dec dec push jle repz jae outsl and inc dec pop push dec addr16 jg dec inc dec dec dec xor (bad) jbe push rsqrtps das add cmp push jle mov inc pop push mov inc inc dec inc cmovbe inc inc mov pop rcrb sub dec dec decb popa sbb inc dec push dec push dec dec dec dec push dec btr rcpps push dec addl mov std lahf dec push jb fs je xchg inc out std xchg mov push inc push gs imul jb outsb je pop in pop inc dec inc jne insb fs jne (bad) out mov (bad) pop sbb popa bound pop clc xorb popa insl gs inc push push (bad) (bad) (bad) imul pop push imul dec push pop ret mov enter inc mov push xchg outsl test inc dec dec or or add inc loopne dec inc dec mov ja pop ja push pop inc (bad) xchg insb push and imul outsl jne jae push pusha xchg push inc inc dec push popa addr16 jg inc inc push inc inc xorl xor inc dec jae dec (bad) jnp jbe add cmp insb jae adc or lea jae fwait fwait fwait imul jae je dec cs in add iret outsb imul add dec data16 xchg imul xor cs ss xor xor and xor xor and cmp cmp into add add sbb inc popa je add arpl test push jne sub cmpsl mov and movsb pop inc js insb outsl adc (bad) loopne call gs insb and lcall pop gs cmp (bad) (bad) je cmp inc aas push push push or mov xor packuswb (bad) push outsb pop jae (bad) cmc add dec pop fs add jg fisubl push inc stos push popa jae mov fidiv insb cmp inc add lods jno decl push gs fs inc outsb call or popa jo xor mov out pop jns je jo push push fwait inc push dec cmp push inc push xor xor adc jnp inc adc cmp mov fisub inc and pop or mov mov jae xor push push inc inc (bad) into jle sbb push inc jae and insl mov dec or jb push daa cmp xchg pop or mov jb mull jo cmpsl sbb push jne push fisub addr16 mov imul sarl xor outsb sub jo inc mov and lods jo sbb push gs ja mov pop mull je je jo mov mov imul pop mov popa pop cmp lahf ja idivl pusha xor add xchg fnstcw or pop das lds imul xor push mov insl lea inc scas shrb and add (bad) cmpsl movsb sub and cmp xor xor je cmp pop cmc inc sub cmp dec mov out sbb pop jae jecxz rorl xor and mov outsl jp insb pop xchg js pop imul or int adc jmp inc divl mov mov fwait lods inc mov jno insl prefetch (bad) push jnp pop inc push sub dec push inc out mov mov push jne addr16 pop insl popa push cmpsl subl popf addr16 push leave fimull pop pusha sub imul mov mov and xor add arpl jge dec addr16 insl lcall pop imul or cmp (bad) push dec arpl ja and sbbl jae das sub inc dec dec dec dec dec outsl adc push push pushf xchg pop icebp mov push lret arpl jl imul fistpll je jbe js jp outsl xor ss cmp sub push xor cmp cmp dec imul loopne mov push cmp mov jae add ss add (bad) clc dec xor xor aaa pop jae cwtl outsb leave mov jne xchg insl push cmp outsl sbb mov mov mov dec and imul lret je (bad) mov icebp pop dec stc pop sub adc push xchg pop or sub mul pop sbbl pop inc jae arpl outsl sti fistpl jae and or add and (bad) mov scas fs mov xor imul jbe inc inc jmp sub shrb cwtl insl fwait arpl and movsb pusha xor pushf jo inc outsl ret mov inc pop outsb push gs mov gs adc js imul insb aas arpl sbb lods imul ja sub jne insl or insb inc arpl or aaa add mov imul inc and pop cs lahf push mov inc inc and xor mov xor mov jns test mov sbb xlat and inc or dec pop push (bad) enter shll and sbb test or jp push arpl pop nop and stos aaa insl pop fsubr pop sub and imul sub outsl inc and xor (bad) (bad) mov insl fs clc call in loopne loop in call jmp in out in jmp and int in icebp in imul call stc push in sti cmc push out jmp in out and sti repnz and jmp aam test inc xor clc es adc (bad) outsb or cltd add roll and mov push jbe push push sub push lods mov xor inc dec pop or je pop lods imul pop jns sbb insl jae add jnp fisubr dec arpl dec outsl jbe lds mov add pop xor adc inc xlat or xchg lods gs rcr cwtl mov cmp and cmp (bad) ss jae or push add pop jmp sub es jbe jne movsl pop cs inc xor pop in sub inc pop rorl or or inc sub jp mov lock mov pop inc daa and xor pop dec xor xor aaa inc ja jmp mov sbb pop xor xor dec inc (bad) decl add xor (bad) add inc xchg or fs pop inc ss sbb mov in leave test idivl or jo and in pop (bad) repnz jb or inc stos and xor push cld aaa mov test add in imul xchg inc insl cmpsb leave outsb mov dec push cmp sub lret das leave nop or pop leave cs or addr16 mov xchg mov jmp js and loopne dec inc in nop or fbstp insb dec fbld fs mov fs and xchg or fs ret notb sbb je cltd lret sbb mov inc xor in dec rclb scas and cli fs ss jne loopne mov mov sbb mov je test add in repz nop or test xor jbe cs negb cmp push nop notb addl and xchg add andl rcll xchg add addr16 test and cmc leave test aam leave nop or jge enter fistp lret pcmpgtb xchg js ja fs xchg cmp xchg das sbb xchg cmc sbb mov inc xchg and xchg in inc sbb and call ret test xor dec popa enter xor out nop pop enter push in push leave sbb hlt adc aas adc mull sbb pop (bad) aas fsubs sbb negb cs pop add idivl nop pop jb nop cmc dec repnz aas daa dec nop pop enter dec fsts and inc push sub mov xor sub mov loop and pop ss nop or insl pop xor or insb xor fbstp in or adc xchg sub pop cmp xchg sub (bad) jg xor outsl inc xor lods push cmp pop lahf and and mov cmc repz cmp outsb dec sub and xchg or aas mov sbb adc pop enter in repnz das add or add and or fs mov ss push aaa out mov lahf xor and xchg and pop cld and xchg cs pop scas std and movb loopne pop jnp inc jbe jge movsl clc or xchg lods pop (bad) (bad) das mov xchg fsubs mov and and (bad) outsl (bad) shrb adc fild scas test jg and leave pusha das xchg jg xor xor pop pop aas xchg and jg fxch sbb paddd sbb sub lret rclb mov inc xor add es loopne out stos sti movsb mov mov pusha daa pop and pop pop iret adc xchg cmpb mov xchg into loope cmp add lock mov faddl cmpsb stos into incb cmp das push lss sbb pop sbb std and xchg and mov push pop inc xor das add and xor sbb and ss sbb xor sbb and xor push sbb popa xchg nop or dec (bad) pop pop ss or das clc das push das inc xor pop add mov mov subps and mov test pop xchg and leave (bad) dec mov fildll dec lods pop and xchg and stos mov sbb das sbb lods cmpsb fsts lahf or test nop or nop scas bsr inc push leave cmpsl sbb sbb sbb dec pop (bad) repz iret mov mov fcoms nop or inc outsl xor pop or pop inc aas add in lahf and jp nop pop jb cmc div lret hlt nop or test leave nop or sub fsts cmp hlt jge nop or cmp orb or lock or nop or leave jg repnz leave nop or or repnz xchg inc addl and or inc xor and jo inc xor fidiv and xor fldl fs jb and and out sub xchg and aas xor das mov mov sub sbb xchg pop pop and fcmovu popf fs xchg jnp xchg (bad) das pop dec xchg aas fadds mov (bad) out dec sbb inc ss das es sbb pop push and mov pop setl fwait lret pop xchg xor negb inc pop cmpsl pop rorb nop or mov or pminsw insb dec adc jns xchg divb clc inc sbb or div iret xchg adc mull jb mov or and ja and mov push scas in xchg and xchg add mov sbb in lea sbb leave test (bad) pxor out int or nop dec into jg in push fsts mov enter and xchg fnstsw enter fildll enter je xor inc xor xchg jg inc xor jae nop inc fmull div and xchg and xor fildll std enter sbb outsl pop enter push movsb cmpsl xor mov repnz push leave nop imul or pop aas inc ss cmp mov and scas int3 and sbb or or ret push clc nop or das leave nop or gs mov or pop or mov or pop mov or outsl movsb xor das mov jns das fdiv push mov pop idivb fildl mov stos pop xchg and dec outsl aas (bad) mov or pop aas repnz sbb push and mov lods dec outsl xchg and mov aas push mov pop lahf pop leave nop or stos jns or fildll sub (bad) jmp xor pop mov inc rclb test jmp add (bad) adc pop jg cmpb ljmp mov sti and inc aad aas mov movsb cmp xchg jg adc out movhps imul lret inc repz adc add mov adc inc leave (bad) jb mov inc ss and xor add push movzwl jo dec stos fs adc clc loop jb out (bad) dec mov pop mov movsb inc das mov (bad) cmp imul xchg or hlt out test push outsb jmp (bad) lcall mov mov and out nopl addb add inc loopne mov mov xor test mov (bad) xor in mov pop scas or gs xchg dec add scas (bad) lods dec nop mov or scas int mov leave loop add fld aas rorl or sub sahf adc mov sbb jbe leave scas inc enter add fwait jp ret popf pop add fwait adc pop push add mov popa arpl ficompl fidivr popa insb adcl dec cmp xor dec mov inc dec inc push push mov cmovge push mov mov jne insb (bad) pop aad mov pop and outsb popa add push enter pop push enter test mov sbb js dec inc sbb bound push insl out popf xlat pop lods pop jecxz pop lods mov outsl pop add push mov or add (bad) int cld pop push or pop lods setnp inc test addr16 and and add and adc add adc addl add (bad) add insl pop or add mov dec adc add imul add or cmp mov sub or push (bad) xor adc push leave add pop clc mov in fmul mov mov jg add fwait xlat fs xchg (bad) (bad) js jo inc sub dec arpl pop imul sub dec push inc dec (bad) (bad) (bad) jmp pop bound outsb jb inc xor imul cmp xor push inc dec decl jno imul ja (bad) (bad) jmp xor xor xor inc inc aaa cmp dec dec dec dec inc inc lcall clc dec inc push push push in push dec pop pop bound push pop push push std push arpl inc mov mov imul dec dec fnsave ss lods fcompl icebp xor mov sub jb loope ret lret push icebp popa bound neg jnp and cmp (bad) or dec push xor fidivr push cmp push inc sbb insb fs push aaa push inc arpl or divb mov add addb test js adc adc push loope mov pop mov bound decl adc je insb outsb push or pop adc jo inc xor inc (bad) scas sbb inc or jb jb fwait sti adc or inc js arpl push (bad) add jo xor jbe jae dec popa outsb fs push dec jo cs dec shlb dec gs jo insb push arpl sub add inc pop mov mov or gs mov pop or gs sbb jb movd decl jo imul (bad) bound adc imul push outsb insl xor push mov imul (bad) push sub inc push fs mov push imul insb mov inc dec push testb imul test sbb push out xchg jb mov mov das data16 jo mov add push inc loop push dec js fldt or and mov jbe dec add test bound imul ret xchg jae or inc sbb stc push enter jb adc sbb dec jae xchg mov mov mov imul adc (bad) inc fs and dec outsl mov popa or mov sub add jl fwait ret int3 xchg jo jo push imul cmp or jnp cli es push or and outsb outsw mov mov mov or ret mov ss push repz pushw adc ret ret pcmpeqw and int jp push addr16 mov jno adc xchg ret ds fimull repnz pop ret addr16 push bound test mov inc cmpsb adc push cmpsl pop mov or stos mov gs or inc sub and add sub mov out (bad) and cwtl inc jp sbb push inc icebp pop sub imul cwtl add mov push dec outsb push or lods loopne insl cmovno jne sbb jb jle xor jo jno cmpsb je test dec pop push jbe addb data16 mov (bad) ss add into add ret fmuls add or adc fstps test (bad) imul cmp sub cmpsb push nop loope fildl push mov sbb mov ds mov adc subb ja sbb fsts xor lock push and inc jne inc cmovl push js ja jbe push cmp xor loop nop and jge sub outsl js sub bound cld jns add iret (bad) push xor inc cltd xchg in imul jae cmp pop add pop push inc add dec add add inc in dec mov add add je mov repnz fldcw popf addr16 push in (bad) add pop add push pop add xchg sub insb sub push add add cmp loop rorb add mov mov nop mov mov insb or inc add je scas mov push dec lock xor lock rorb inc test push add add add and incl add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add fdivl add dec xor add xor add add add add xor add xor add add adc add jge add sbb add mov add and add xchg xor add xor add xor add xor add xor add xor add xor add xor add xor add add add xor add add add add add add xor add add add inc xor add add add add addb add push xor add add add add add add je add add add or add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea ljmpw adc (bad) decl lea push call inc mov add mov mov add inc add addr16 sti out pop mov int3 rep cmp mov mov add push and adc jne add in jl push mov fs cmp push inc es push add add add xor jo jg cltd cmp rorb jbe mov add test or push push sub add mov and or rclb add mov lret xor gs add data16 cmp and push add xor divl mov push inc mov imul shr push (bad) xchg fisttpll push push push lret or outsl sti insl and add cmp dec je add xchg gs lock jmp push loopne sbb adc or mov sahf cltd test pop pop bound xchg sub test (bad) (bad) call jns outsl lcall push add add cmp mov fcmovnb and in jmp inc pop pop sub xor outsb or push push push push ucomiss sbb jl outsb lret fsub pushf sub inc inc and push mov mov das adc pop and push insl shll cmp je inc dec mov sub pop cmp push cmp scas sub cli adc and mov dec fsubr jo test push push daa fs nop sub add imul arpl xor add insb add aaa aas jnp inc push insb mov jne push sbb lea add adc push or repz call sub push out mov mov pushl mov nop test (bad) dec or (bad) xor movsl sub dec adc roll movsb dec mov mov sub push jns jne and pop sbb pop das push or and or dec fsts std mov add mov sub sub cmp add xor inc repnz xchg clc mov sbb or ror lea (bad) push push mov and adc outsl sarb push (bad) sbb shl pop pop loop jp negb pop add leave les dec ret mov push jnp fidivl lret jne popf mov mov add mov sarl test test stc and pop mov jo in (bad) push mov movsb pop (bad) fnstenv test jmp sarb xlat xchg shr inc push fs or in jmp fdivs std outsl jg xor inc sbb (bad) cmp sub mov jmp movsbl leave (bad) mov decl lea push inc cmp jb pushf repz and add out mov dec mov cmp fisttpll or xor push (bad) mov mov mov dec shl sbbb push rolb sti or add imul or ljmp xlat mov shr inc inc cmp mov jb pop adc in lock ret pop loopne or (bad) shr mov or add push mov mov cmc loopne call push dec es lock in push push push outsb mov mov add push outsb out mov adc mov inc jmp add cmp xchg aam or push mov mov popa (bad) sub lods pop ss push call (bad) jmp popf jnp sti dec notb in jb mov jne cmp or lock (bad) jo data16 mov push (bad) xor jecxz in es push repnz cmc pop sti into fisubrl xor dec push jl int3 loopne (bad) and xor sbb push fst rcr jecxz rcr sahf sbb addr16 push roll (bad) cmp jne int aaa mov int cmp mov xchg fsubs sub clc shrl int into or xchg in faddl loope sub jb insl adc cwtl std (bad) xor mov jne (bad) loopne or in clc mov push mov lret push stos adc mov mov movsl in push lock mov (bad) mov (bad) push es mov dec push sub jecxz mov icebp mov jns mov mov pop andl add add lea (bad) dec in sbb stc adc mov mov mov cmp imul add add or jne push push jne or jne imul push or jne bound add rol add cs pop inc adc xor (bad) je sbb neg insl lods mov jbe cmp jno (bad) jne (bad) xor rorl push loopne or xor rorl or or sti outsb mov dec xchg (bad) jne mov fsubrs cmc xor mov jbe mov movb adc fadd push int outsl mov and and pushl repz (bad) pop mov lea xchg inc add or test or adc add outsb push aas cmp mov jl xor setg js rorl gs inc mov flds mov rcl inc pop mov push push mov adc cmpl lea sahf adc std pop mov add inc sbb push cmp (bad) mov (bad) std xchg cmp in jg jp js imul jge movsl add shlb lea enter push cld sahf inc inc popa rclb nop (bad) icebp js pop (bad) mov in adc push addl adc insb add ljmp mov pusha mov mov lahf test movsl data16 or mov movl ss xchg das loop out jg push pop inc es clc test pop jle insl roll push adc or inc insb xlat or repnz and outsl xor ret or add push iret fstl jle cmp pop xrelease aam mov inc pushl adc je dec test lahf ljmp mov adc mov out inc jmp xchg je leave sub add hlt in cmp repnz pop cld cli push mov arpl addr16 jns std out mov jbe fcoms test cmp sub pop jne aam bound outsb add into or movsl jge mov or or add pop gs fstps sub xor outsb xor pusha pop js mov andl mov pop test push fnop add xchg fnsetpm(287 addl mov fnstsw jge sub pop sbb adc inc (bad) cmp cmpb repz ret inc stc fs lock pop out mov sbb xorl dec dec fmuls fildl push sbb push imul pop mov negl scas (bad) icebp movsl or adc gs out jmp mov cmp pop stos (bad) sti pop lods clc pusha pop bound fsubl mov inc jge fdivrs ljmp xor aam mov add pushf jecxz sbb mov adc femms mov dec or jle dec xlat push push outsb mov push adc inc mov sub call inc imul mov pop sbb pop lcall (bad) adc imul iret rcrl jne movsl add dec mov pop sbb push push sub mov or sbb das loopne jnp mov mov push mov mov mov jo push adc pop imul pop and push shl or fisubrl lea outsb mov mov cmp aaa pop jle je dec iret mov dec jle push mov adc jbe xor or lods sub aaa jne pop hlt adc lds add shr sub mov and lahf mov mov add ja lret popa out push sub imul lods enter lahf (bad) or loope and mov jno shll mov adc repnz lea jmp adc mov xchg in mov pop or in stos push push lock es nop mov mov push fs mov les or pop pop (bad) push loope pop add xchg push and sub jo push je push add sbb mov xchg pushw sbb inc sbb or arpl outsb or leave insb call (bad) arpl dec aad in push xchg loopne lahf push mov insl adc les push add lea loopne push pop xor mov add cmp adc lcall mov mov lea sbb stos repnz test push jns inc xchg mov and (bad) ja and call adc add inc pop jo lcall pop rolb push push in or loopne cmp cld dec int (bad) aad out sahf cld lret or fiadd inc add lahf iret test sar push cld fmuls shlb dec fcmovnb add sbb sub jle sbb repz mov dec leave fcompl ss pusha push mov sbb sbb out or or test and sahf push jg pushf cmpsb and xchg lds mov aas xchg add sbb pop bnd fcoms cmp jno incl aad cs cmp loope sub mov (bad) mov add test mov repz pop push mov push and and add daa fldcw insl sub push sub sub sub pop cs insl sub xor jb in xor xor lret scas aaa pop cmp cmp xchg in sarb mov imul inc inc or imul dec sub cwtl imul dec xchg push dec mov mov push imul pop (bad) je push pop pop push pop pop mov dec mov pop pop pop dec pop push pusha add bound or lret dec mov loop in data16 lret mov add push adc mov outsb inc mov clc ret mov je jo insb mov pop mov xlat lret or insb mov mov ret scas adc fisub sti je push pop or movsb (bad) sbb xor out insl data16 orl jne cmpsb sbb mov push mov xor std sbb int3 pop push sbb jo sub roll pushl xor int mov add jo jmp outsl dec sbb sbb call add (bad) clc and icebp mov outsb pop cmp cmp and dec push and mov mov inc data16 mov aam sti decb in or test pop jae arpl in sbb sbb sbb ja sbb mov sbb push mov sar push in sbb add call pop inc ret push or inc sub cs (bad) dec pop cwtl jne and push (bad) es insb xchg lods push push push mov mov movb xchg xor aad add inc add push pop int3 mov sub sti push xchg test adc in jle fstps cmp rcll outsb sahf (bad) (bad) jo sbbl cmp jl bound pop mov insl mov sbb and out in addr16 jb and hlt add adc or enter pop dec out fcmovnu iret push push mov push xor mov push xchg push test pop push mov jo lcall or pop inc mov inc sub mov xchg sbb sti or add sar lret sbb into sbb mov mov pusha in mov or mov jnp adc xor subl inc jne cltd inc xor add sarb xchg mov sbb push mov mov ljmp mov sub xchg sbb inc movsl cs movsb jnp xor lock pop aas mov js (bad) mov mov imulb cld fistpll mov (bad) and adc lahf adc std (bad) fcoml fwait leave adc in or shrb add xchg sbb jns xor mov out cmc add pop lods call push int3 xchg pushf cmp (bad) xor iret xor loopne lock cmc mov icebp pop and and sbb stos mov inc rclb dec push add enter sub or jbe push inc ret mov xchg xor mov mov mov pop cmpb jne orb mov add add or and sbb pop xor dec xchg xchg jg xchg in pop and add or jmp xchg test xor scas shl inc and add loope imulb lea iret pushf dec lds or push or add cmp jl mov in pop jmp (bad) add xchg aam push fmuls leave or es pop in xchg daa dec push (bad) xor outsb dec push lcall push sub cmpsl lock add pop lea jge je adcl mulb in loopne xchg adc dec cld jmp cmp or add dec add rorb cmp push pop shl push fxch jbe std insl push jno push insb jbe mov inc add addr16 jmp sub or imul add cmp push mov mov andl jmp outsb sub mov push mov mov lea ret and pop adc and loope cmpsb pop cmp imul add lret or aas scas outsb mov shrb pop lcall popa and dec xchg pusha cmp xor adc add push ja push xor inc jg inc and push add decb jmp addl test mov adc push fs fldcw mov cmp add bound lea push hlt push and mov loope dec fistpl cmp popl fstpl leave jae and dec dec sahf rcrb xorl mov scas outsl inc xor sub loopne enter push pop and test push inc (bad) lcall cmp in inc cli cli lret sbb in in mov mov xchg addr16 jbe mov mov mov adc push rclb (bad) adc mov mov xor sbb adc imul mov js or push aas movsb jne cli (bad) mov out push addl ja and sub push and pop xor inc js aas push bts outsl mov mov test add inc or xchg push pusha xchg inc testb mov cwtl xor sbb push enter cmp sbb push in cmp loopne addr16 sbb adc pop xchg pop cmp pop outsl cld xchg xor add push cmp xchg pop mov add push lock add pop fcom add jne dec xchg jo lods movsb mov lds test pop mov push out adc jnp add rorb adcl movb push pusha mov jnp fstpt ss mov pop mov mov push push or push dec or pop push push (bad) push xlat dec adc add js (bad) push jge clc xorl das lock dec pusha dec and cmp push std mov push adc leave popa mov pop pop pop clc xchg or adc insb adc ss mov loopne test fs xchg idivb decb add stos add xor and cmp arpl pop xchg push dec ret shl jle add mov sarb pop jb shl adc xor fisttpl movl add inc add (bad) scas sub rcl add push mov cmp addl mov pop mov sub popf push inc jo pushf loop xchg out lcall mov or loopne insl dec sbb mov jle and sbb pop push nop insb push and sub add sub hlt and and push mov mov popf out and push (bad) dec inc add shr pop cmp stos mov fcoms and cld mov mov cmpsb movsl movsl movsw push aam jnp fisub and jbe test add js jae mov (bad) dec hlt pop shr js mov push sub pop mov in mov loopne push push adc mov out adc idivb imul push inc lcall cs (bad) int3 icebp sub cld xchg enter and mov (bad) inc sub aam lahf je adc xor sbb xor gs mov mov jbe mov sbb adc loope loope fisubl sub cli mov jg add push dec mov jl mov mov sahf fdivp insb mov jge aaa sbb cwtl int test in in mov mov sub mov xor sub mov mov fwait mov pop adc inc push xchg sahf mov jmp fcomps daa mov pop xchg mov fwait jmp neg sti out imul jbe add mov mov and ja sti inc and cmp sub (bad) hlt cld inc and dec and sbb std sub incb mov or jle jge mov subl jmp mov jp xor cmpl or punpcklwd sbb adc inc pop arpl adc mov cmp cmp ja xor or cmp mov (bad) xor mov mov jmp xchg sub sub popa inc push in in sub and pop jmp insl add push jne cmp (bad) mov dec (bad) movl outsb pop mov sub and int3 dec cmc mov add fsts xchg or and or sti iret or sub inc push add or or jle jno ffreep dec push mov std lock push pop mov cld push (bad) pusha iret push test push stos xchg jge,pn in cmc in sub push xchg mov cltd sub nop frstor sbb inc je and pop enter push int in sub or loope cmc push cs mov (bad) xor mov ret push add sbb mov cmp pop or out cmc hlt add cli pop jg pop and ficompl enter xchg mov pusha inc or call ficoml test and and mov push ficom mov push sbb xor mov cld xor xchg cmp data16 dec sbb lock (bad) divb orb cltd xchg ljmp test mov add clc jbe ds das mov add mov popa rorl mov xlat test mull (bad) cmp jne push rcr add mov dec or xchg push push mov and pusha mov xchg push cmp incl jo add or ljmp rcrb or inc loop sub cmc jnp pushl dec bound adc cmp std xchg mov movsl add je or dec test jg mov jl push add sarb movb add movsb push push pop or clc movsl and clc cld mov inc jb adc mov cmp movb jecxz xor cmp jne jmp iret sbb pop mov mov add push push movsb sub adc or mov sub enter xchg push xor dec or and cs or lods enter adc (bad) dec cmc mov cmc add jmp mov sub (bad) outsb or (bad) push movl adc mov cmp xchg jb mulb mov add xchg push lret mov or xchg or pop cmpb sbb mov fildl sub inc nop sbb sub inc mov sbb push data16 or es jb and pusha incl push inc push inc inc push or loopne clc sub push fmull push scas fiadd mov leave ds mov and dec stc std clc std mov iret popl lock movsl movsb push jmp push or outsb dec (bad) adc cld hlt cld sbb daa pop in in jmp sahf call in cli lock cmp cli xlat (bad) xor in orl mov dec push std sub adc (bad) ljmp and inc (bad) jne xor rorb jmp test dec jo sbb shrb lods enter mov push shrb mov push dec aas sbb out inc repz into sub outsb mov or xchg fldcw inc or leave add clc pop into into into dec mov and lods push nop js jnp out aaa insb (bad) ficom jno sub cmp and nop into test cmp xchg mov or std icebp adc pop out or rclb add xlat inc lcall sahf pusha push inc clc cmp pop pop jp pusha mov ret jmp test (bad) lods mov sbb sahf inc lods in jo sub xchg subb inc or outsb cmpb add add es lds (bad) mov pop dec pop mov (bad) ds mov ret adc or nop mov icebp inc clc jl jle or mov loopne orl aad adc mov mov das (bad) add mov sbb je or mov cmp rclb loopne xor dec clc jne sub popf outsl int3 pop iret dec and xchg push out pop push and push or mov jnp shlb sub add insl mov outsl je adc pop ror push adc clc into pusha nop out scas add jnp push xor xor dec pop bound fmuls sti push add and mov or or add mov pop ret add xor ret mov clc sbb cmp adc jb scas ljmp push mov push xchg call cmp push orl jno insl xchg inc loopne push push push cli rcr ljmp sbb mov inc mov mov xor dec inc pop push mov aam push xlat push popa sub mov inc lahf adc sub imul lock call jmp sub jl je arpl mov sbb pop mov lret in lods int3 in insl sub push cmp pop sub fdivrs xor inc hlt cmpl mov mov pop pop imul add cs dec pusha in (bad) or cmpsl jb ret movsl fadd push popf push in cmp (bad) pop inc sub shr adc sbb mov push sbb loopne cmp movsl inc call mov pop cmpsb loopne insl inc mov xor dec dec and jmp inc movsbl testb or aad push inc mov pop idiv push push shr or or fucomi jg sub (bad) sub neg push and jmp ret or xchg jo mov jnp push add sub mov icebp inc add (bad) mov ljmp push and fcomps nopl cmp nop addr16 push pop leave adc push inc bound or (bad) jmp data16 leave sbb fstpl fcmovnb addl jp adc cmp pop add mov daa ljmp pop mov test and jmp out sub fdivp inc stos int3 aaa pop sbb roll rclb in sub in mov rolb cmp test outsl pusha adc add push push and int add push aam je mov jecxz pop or mov xchg (bad) sub (bad) fbld push leave (bad) sti (bad) sti mov pusha xchg xchg loopne push loopne into or push push sub add test hlt mov xlat push xchg push les cmp mov jg clc pop cld cmp or push pop jmp mov jl lea mov adc inc dec adc (bad) sti lea jns push push imul push sub enter cli negl movsl ficompl sbb add pop movsb out adc jb test or ret inc inc incl jb add je and jecxz and pop sahf sub inc jg sbb or jne jmp outsb pop mov pop test jge sbb pop jb mov in popa or xor cmc jbe nop mov jb int xor or dec add lock sbb leave lock lods mov roll pop or out and jne lea adc push lret jle sub mov and je,pn dec dec dec mov inc push xor inc xlat lock dec outsl mov inc add ja xchg pop pop and shlb jg daa les (bad) sbb dec or int lods push pop pop or add sarb pusha les push je adc jecxz out (bad) ds mov pop and leave xor fwait mov dec or xchg push stos inc or mov jbe adc sbb movsb rclb (bad) xorl popa push repz adc or push fsts add dec lods bound lret aas mov push jo ret mov pushl fmull mov aas pop inc cmp dec insb movsl push repnz push push sub (bad) sti pop testl jne add cmp in jg push cmova cli xor sbb push shrb and inc xchg jmp pop leave xchg and dec add aad inc adc (bad) mov ret inc (bad) jne pusha imul or or mov pusha jle inc xchg sub sub dec or dec fistp fimul jl ljmp mov xor inc lcall icebp addr16 outsb jo add inc jb fistpll incl mov xor cmp stc and shl insl insl sti add lret xor sbb cmp (bad) mov iret js shr shl add mov fucom push stc pop loopne fimul sub clc ljmp mov sub dec hlt push xorl mov pop ss mov dec push out (bad) add cwtl push jp mov add push push out push movl movsl out lods call jle (bad) lock incl into cld inc adc loop sti add lret (bad) add mov or inc jne add lcall addr16 dec cmp inc add mov mov cmp cmpsl mov fs mov rclb loopne mov jecxz in ja adc (bad) leave push mov and push (bad) sbb je inc fs pop leave sbb push test xchg lock mov lock dec sbb mov inc xor pop enter pop push add mov aaa (bad) pop sub add and js mov pop xchg lret shlb fxch data16 cmc mov and mov push and add jnp and pop mull (bad) lods sti neg push movzbl dec clc mov fisub jl and test idiv (bad) scas faddl pop jae sub push (bad) out mov sbb jmp mov enter cmpb je (bad) subb jecxz sbb subl idivb pop add addl cmp lds jge sub sub rcll dec and es outsb gs or sub cmp or scas inc movsl inc mov sub testb adc push clc mov cmp iret mov shl lea neg pop sbb add sbb inc push into adc and pop ss mov scas test mov cmp inc xchg dec scas cmpb adc fsts jmp or pop orl sbb pusha inc ret or clc (bad) xchg mov je or push stos mov pop decl (bad) stc pop mov jl pop stc sub out push stc shrb js cld (bad) cli mov insl jmp add dec std sbb scas mov push jo mov test stc add dec or test sti nop mov in add adc je andb jl popf pop inc leave repz pop imul xchg mov mov jle cmp lock jl pop out movaps lret inc add jae fimull cmpb bsf stos or jbe call sarl push cmp push jno or int stc dec sbb adc pusha xor leave mov pop push inc pop adc push gs push pusha mov loope clc leave inc mov cld hlt inc cmp adc push outsb add xchg push jmp add add and sub mov push movsb add mov mov or mov push setl inc leave push xchg lret mov and int jmp inc fild pop add daa stos inc or xchg rorb or push inc jae pusha push xchg push pop mov pop jno ss sahf mov movsb ljmp push mov jno lahf fs sbb fmuls loopne lea mov pop imul fidivrl ljmp outsb and push inc jne fldt mov lret inc dec shr inc popa jg inc or mov mov mov and cmp xor lea inc adc fcmovbe (bad) hlt cmp (bad) in push inc loope shlb xor not mov stos inc sbb xor or push cmp das xor and pop mov jmp inc (bad) aaa in or jmp push je mov cmp movsl and sub add push jmp leave pusha dec jmp jbe push add jle movl imul and jp jmp fdivs test je mov sbb sbb and mov and pop add add dec push aam (bad) pop in xchg dec (bad) mov orb js sbb fs mov push in pusha notl mov test aaa sti push movb xlat sub aam cld push push and pop pop push jbe mov ret lock xchg mov adc xchg mov mov dec xor sahf data16 push scas loop fistpll push pop adc ret cmp jecxz (bad) xchg or inc xor jle push leave xor addr16 in cld mov (bad) sbb hlt adc add fnop and jmp mov int sbb xchg jge aaa nop mov xor mov inc and inc add in mov das jne lds fiadd push mov fwait add mov call clc push mov inc lock ror shr call jns shll dec inc fwait adc jae or rclb xchg xlat js jge js mov add or movl add or push mov push fsincos (bad) leave add int3 push pop leave xor nop test ja add pusha adc clc dec je lds lock push mov scas rcll and mov orl xor test test mov push lods push (bad) aad adc push orb or add lods stc mov ljmp or lock je cmp inc add jne fildl imul pop movsbl inc jmp out aaa ja xor inc adc inc cmp jle and dec lcall pop rclb sub pop sbb jae jbe bound aas inc jne add mov jge add pop fldt or and jle inc sbbl cli fisttpl jae inc inc add js bnd mov popa stos and and pop cmp pop mov idivb sub pop push mul seto neg or push outsl test andps bound mov in sbb inc push dec cmp lock inc pop push test jb sbb out out loop rol push shrb sbb sub pop and fsub mov mov div ret or cmp inc cmpsb cs push mov mov cmp sub fbld sbb pop repnz test lcallw add clc push ja xor rorb add pop in add lea or xorl icebp clc js mov das ljmp pop inc popf adc icebp mov and mov dec add cltd mov mov fisubl stc cmpsl add xor ret fldt dec mov lock add push pop mov addl cltd pop pop mov push sbb mov outsl sbb add cmovae aad outsl jne cmp or nop pop jg push mov push (bad) jge lea cmp mov push pushf fsubs xchg mov jle cltd mov mov test out jmp inc enter push stos inc or xor sub inc or rcrb gs shll fdivl mov lea push cmp inc inc inc sbb jb pop mov in out mov addl jne shl dec imul out lea jl mov imul push xor mov and faddl or dec addl mov jge movsb mov lock icebp insl push mov jg cli and dec inc or inc test js inc ja mov mov mov or pop (bad) xchg adc loopne push xor lea mov jbe test ja test jmp (bad) das scas inc sbb mov incl jae mov (bad) xchg sbb rorb mov or pop dec inc mov ret shrb add fcomps add pop mov add inc mov in dec in mov ficompl sub loopne fdivp (bad) cmp jne mov cmp jne in inc in jb fildl sbb mov adc fdivl call call pop fldt decl sbb jbe dec (bad) dec popl jge jg inc or jne sbbl or es add sbb ds cmp insl in das mov add shrb in or push mov push (bad) or fidivl xor jnp add sub xchg sub jle jae leave clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc pop adc popa push sub fwait inc sub ljmp xor mov inc dec loopne ret pop fiaddl (bad) (bad) cmpsb or repz jae (bad) cmpsb aaa fdiv orl mov jb lods jmp idivb loope jbe cmp jae mov sti xor mov push or test mov add mov in inc sbb popa jb xor movb push mov decl adc sub pop in inc dec inc and hlt dec in test xchg xor xor fcomp adc or fidivl dec add push pop sub pop push and sub push (bad) dec in (bad) in das mov cmpsb or adc jne std in cmp pop add mov fxch xchg icebp pop lea fs mov lret pop outsl imul xor hlt mov add in in loopne pop orb fwait mov outsb adc push push repnz sbb mov mov xor inc dec jo adc jp xlat jae mov push push pop xchg or int jae inc jno mov rol jne or add push cli or ja inc jmp lea lea jnp xor adc (bad) outsb aaa push jbe cltd sub cmp cmp and push pop mov out popf lret rorb jge jae jmp in inc mov mov mov adc mov es out push lret push arpl push add add into mov ljmp push pop push add inc add cmpl mov and cmp aam mov mov js out dec aad cs js add mov mov mov sti add leave mov add or bound xchg jge inc push aaa push sbb adc push mov sub bnd fcomi pop adc roll lret repnz lret xor ds cli insl fistpl mov inc adc nop push sbb mov and incb inc or adc sub cmp jecxz jbe and jle popa xchg cmpsb pop je sbb mov loope adc or adc or fcompl mov push mov or lods hlt mov mov sub cmpl je frstor jmp add sahf sub das mov pop push lea ficom mov sbb pushf cltd sbb std mov push add xchg jg lea jl nop mov push dec lds int (bad) jp inc mov mov push pop xlat inc mov inc adc and not incb sbb adc fs sub insl pop pop jecxz pop inc shrb (bad) and sbb and outsb inc es or pop xchg addb inc or inc cmp insl (bad) ss jg cmpsl add push or inc shrb inc mov test adc push fs arpl outsl lahf mov push lea jp xor dec sbb or sub rorb pop lcall mov mov arpl leave add cld cmp push mov xchg cmp xor and and fistpl jbe scas call mov push mov fwait test (bad) mov adc pop rcrl push cmovge cmp lahf fs add fwait sub add or mov cs in pusha aam ss inc lock xor cwtl sbb pop inc js jge or aad xor ret imul mov decb dec cmp jl push sub jg inc jge inc jo dec jns push fild push pop xor jg mov fsubs cmovp test lcall push fdivrl int rorl dec movsb add push xor insb or push mov sub add adc loope or push xchg lock pop and jo or lods add push pop mov sbb aaa pop mov push sub pop into adc aaa mov repz push sub add (bad) or sbb add or decl adc fidivr add lods push fldl aam push jmp insb and mov (bad) icebp or sbb push loopne pop out push (bad) mov pusha fwait push add inc bound sbbb iret inc mov cmp jo adc inc pusha mov je xchg and (bad) mov inc push inc inc dec js jne dec ret outsl (bad) push dec or or cmp (bad) iret jbe ficoml adc push dec enter inc jo dec mov dec inc xor cmp cmpsl pusha incl add jmp pop int3 add shlb aad push out add or in fs push aaa idivl cmp xor jmp or imul pop loope mov (bad) pop orb inc mov (bad) add xchg mov fxch stos fiadd pop (bad) push push push fs add mov push out sbb mov rorb aas add test pop je xor sub divl das xchg adcb cmp cmp adc xor push out fwait push cwtl in cld and mov (bad) or testb stos adc lcall std mov add sbb jo fldt push js add cmp inc fldl ret cltd mov das hlt push repnz push scas mov shl or jl pop cltd adc (bad) xchg sub dec adc push out xor adc ret pop mov jo add xor sbb pop and push xlat outsl ror into add pop rcll pop lods lret (bad) push imul jle cli add ret adc pop cld lea dec adc add addr16 push std pop pop pusha jb mov or or inc orb xchg aam jg inc ljmp (bad) sarb and jecxz mov xchg ja (bad) pop xor xchg aad pop addl sub pop lods inc or pop adc dec aad clc mov jg ja sbb jp loope mov xchg cmc mov inc pop mov icebp cmp pop inc enter popf jl jmp loopne das xor pavgb mov jg inc lret mov and push xor les sbb pop mov xor or pop enter push mov inc mov push push das sbb stos bound (bad) cmpsl and imul sub xchg lret shlb push push push push (bad) icebp mov push jl lods pushl mov lods insl lods in test jno jno out inc test or mov sbb loopne push nopl mov or pop jg xchg stc (bad) repz mov je push xchg ret cltd test (bad) decb sub andb xchg ret inc dec jge imul or sar dec adc and and inc add mov ret mov adc or mov xor in fisubr pandn dec jb pop fbstp outsl notb fist sti (bad) push lods mov dec mov or cmp add jge je push sti mov add push insl adc fistl sbb das pop sub jle je popa add jl pusha outsl mov pop or cmp mov pop or orb lret cmp repz iret ds mov push pop sar inc adc sbb movswl add mov adc mov pop or sbb mov scas lods mov mov (bad) jne pushw dec aaa call pop mov adc mov xchg adc or push je push xchg mov push pop jmp mulb icebp hlt imul mov dec add or mov adc inc jl push add inc adc shll ljmp in sahf enter xorb jge jo fsubl add or adc int3 adc cmp mov lds and or add cltd lods imul pop sbb adc push dec push xor (bad) mov pop push sub push adc cs adc xchg dec push dec cld lsl lss xor clc (bad) push mov (bad) fidivl rcrb addr16 shlb dec pop xor call movsb push push cmp lds (bad) in pop add inc jbe add aas negl xchg and or outsb inc stos cwtl jnp sbb out (bad) into pop outsb mov or movsb pop push jno push mov mov sar add pop js mov ja orl cmp jnp push lock cwtl rorl jb lea cli mov inc push push js aas cmp jl push ljmp xlat sbb pop popf jo adc arpl or mov imul sbbb movb icebp movsl lcall pop or adc test test add fstl xor cmpb dec je and sbb rclb jle leave or aaa pop add add movb pop ret push pop xlat or into add or mov sub fwait leave mov xchg add pop lods fcmovne pusha mov shrb in jae bound mov andl mov sbb or push test and (bad) sbb mov adc pop sarb insl addl push mov xchg push cmp mov pop cmovbe mov clc sar cltd in imulb stos jg mov or outsl (bad) mov jp push pop dec (bad) call push pop ja jne das pop or incl int rorl (bad) (bad) sti push ret mov std sbb cmpsb out cmpsl lds add jb add adc pushf testb movsl into jb push sbb inc dec cmp pop sbbb push or imul adc pop arpl dec fsubr pop js pop jns xor jne mov pop cmp pop testl push push jl insb dec or cmp mov jmp inc ret subl cmp shr mov dec movsl mov sub rclb inc inc sahf adc pushf sub sub pop and sub mov and into mov and xor cs dec mov in jl sarb adc sub decb push decl xchg sbb mov or subl outsl jnp mov push lea rolb jl mov xchg xchg jmp pop push pop ljmp and mov adc aas adc adc cmp jne inc fldcw add (bad) ret or sbb sub xchg pop mov pop pop pop pop aam push mov mov out (bad) xor jmp mov inc mov arpl adc or cmp jb jb jo push sub sar add (bad) push je push lods and and dec push jecxz stos mov mov mov add mov lods cmp jne scas add hlt and pop jne push (bad) or (bad) out je dec pop add dec add mov andl ljmp cmp jbe jecxz stos inc jmp jecxz stos push std ja xor insl pop jecxz mov stos jmp subl mull lods mov cmp cmc dec mov stos mov mov and sbb lea xor or mov je xor push xchg add insl outsl lods inc mov cltd je repz pop mov test les test inc sbb jecxz cltd sbb push mov dec add jo jae cmpl pushl mov and and loopne add popa sbbb cmp lock (bad) jnp add inc adcl outsl mov gs cmpb push test (bad) jne adc or test nop decl jne or loopne jge (bad) mull shll in mov push clc mov mull arpl push mov ljmp push movsb push stos je inc out mov sub or je and push test cmp cs fcomp stos pop mov ja adc pop rcll push push adc cs stos jnp or inc bound (bad) lea test xor cmp jae dec hlt mov jbe es out mov adc xor and imul sysexit sub adc and mov fcmovbe jb dec bnd es dec enter push push sub push call xor adc or sub and enter in mov or jae (bad) lods std jbe lea dec push xlat push sbb cmpl dec push fistl and pop sbb out dec or and stos push sbb jmp subl pop inc out mov adc push lds lea adc inc mov loop pushf or or mov add or xor lds push scas xchg or cli xchg pop dec sbb adc aam xor add sub push sbb loope pop pop pop mov jbe cmp lss ss dec leave cld inc leave hlt sbb mov orl and lahf (bad) push fcmovnbe add ljmp mov loope in mov and popa aaa imul xor pop in sbb fildll push or aam jmp cmp add dec mov sbb or adc mov jmp cmp popf mov jo push loope jne sbb jecxz aam jae push in inc add inc test int insb in jb fs jne (bad) adc pop cmc jge data16 stc imulb sbb xor or divb ss jmp leave add push fldl dec push adc inc mov shrl cmp xchg cmp mov inc stos in adc test je mov or outsl sub popl xorl push sub add je xchg xchg xchg jo jle inc jle cld (bad) fildll sub pop jmp sub je dec je dec jne push or jge jne lret mov jb push insb inc mov insb inc loop or lds mov jmp sbb push jmp inc in jnp ljmp push imul jnp jmp jbe je add add fstpt mov push cmc add mov dec xchg por fidiv jne push push push xor jne mov dec out imul mov jne gs jbe mov ret and pop test mov in pop inc roll cld sub mov lea sbb inc mov cmpsl int dec cmpsl (bad) mov divb (bad) dec mov icebp aas mov cli inc cwtl jmp mov fcoms mov les adc xor cmpsb subb jae mov mov xor fscale xor lret aad add test lret jl insl jno push push rorl dec lea andl mov insl adc movsb fwait rol test push jb test (bad) or (bad) roll test pop rolb dec test cmp pop call push cmp push xor xchg fnstenv mov add or int roll jmp lds push sbb js dec lea cmp pop pop xor push fldt and add mov jae sub (bad) adc mov insl mov xor dec loopne pop dec jp dec adc sub jae push ror inc fildl int3 insl clc pop push fldl fmull mov xchg fiaddl aam bound pusha mov test in call jns enter fldl inc mov cli inc in add fmul out mov (bad) addr16 fldenv pop shlb jbe jb sub inc in fwait lods add and enter fildl mov adc or lea insl test aam out pushf jno or in mov leave jne sti fld ficom ret pop push pop gs dec xor sub ret adc pop in enter add (bad) mov das push adc out insl add mov and or adc jmp orl jnp fldt int and je sbb jno pop jp jb pop and inc jb aaa jmp adc dec shr ja data16 imul push in or fsts mov sub or outsb out sub sbb sbb scas out push or mov insl jns sbb roll or push rcl aam loopne outsb sbbl or xchg xor leave sahf popa sub adc mov sub fiadd and fldenv inc add sbb test mov jnp jne inc pshufw add mov imul sbb int3 add mov mov out dec lret incl pop inc into (bad) mov mov sbb ss add add or push sbb sbb lret dec jg mov insb dec mov jmp adc shll sbb icebp bnd or ss jne xor sub push sub dec ret mov cmp je cmp je adc lea or (bad) faddl adc jo dec xor mov leave sbb pop enter mov test mov pop insl push sbb lcall fisttp adc or add ret test insl ds mov push xor inc mov minps mov cmp je rcll mov outsl fnop lret jae adc ret cmp jb imul fisubr add pop and sub xchg mov aad mov jae in inc mov ficompl mov mov movb outsb lahf or mov dec sbb and and cmp mov xor jmp cmp cmpsb cmp sub pop ja call jmp xchg insl pop dec mov sbb mov inc mov pop jns mov movsb and roll pop cmp sbb (bad) les push ss adc test mov out fsubs jne inc stc imul hlt jne jmp or jb jne into dec xor stos push rorl movsb pop or push jmp imulb je test lea lods je add push mov or data16 sub xor sub (bad) and cmp push add jmp divb push xchg pop pop notl out adc rcr jmp aaa push mov es add pop shrb ret ret or dec fmul mov lock loope cli fyl2x repz adc and cs adc add (bad) mov push or clc lea mov mov sbb pop jmp ja jp call xor or outsl adc aaa insl int3 outsl repz mov mov mov jmp push int test int push adc mov in mov int outsl call jecxz mov and inc or out mov les add sbb jmp decl sbb jo into cmpl fmuls (bad) xchg sbb jne movsl or pushf pop sub test add ss and in cmp push ja int in add rorb adc push shr and xor repz xor lock add mov sarb pop xchg loopne and cmp jbe stc (bad) pop add jmp movsl xor or pop insb xor or stc jmp ja fwait pop push and int3 sub dec (bad) mov cld add inc aam jo xor or inc call das jnp sub dec fldl2e mov cmp mov lock rcr fsubrs std fstp adc icebp or push inc inc hlt adc rorb adc and in push sub sub fsubrl aam dec cmc popa push cmp push lea adc movl inc movsl cltd or enter mov into fsubl pop mov jno out push mov cld bound or push adc fnstenv jnp and sbb sub mov and outsl loope and loope pop push rcll pop sbb (bad) sbb insl push mov add cmp test iret scas xchg pusha mov pop arpl add int mov inc add out inc xor mov add or push adc test mov jo cmp adc test jb jne lock insb ja imul sub cmpsb ds or push add movb pop scas add ret stc xchg add sbb dec inc inc test mov popa add jbe (bad) adc add movb mov adc mov pop cmp jmp cmp leave ret ljmp hlt mov add ljmp cmp sarb or jne push push push push cmp cmp (bad) (bad) je call or or or adc adc inc movsb xchg adc xchg pop loope xor orl sarl mov cmp mov aad sub jb pop cmp jne mov dec lods pop movmskps push cli sbb jl sbb pop (bad) ret jnp sub add push push push movsb jp push addr16 test jl pop stos adc cmpb call jmp mov lahf cmpsb jb xor std jne push cmp mov clc dec jnp push mov cmp test (bad) popa pop inc push inc xchg and adc add sub mov lret mov jne (bad) or (bad) sbb inc repnz jnp mov call inc ja movl daa (bad) bound test add and add clc add lret lahf sbb pop mov pop mov std and in sbb in notl or jg das fisttp jb jns fstps pop movsl push test fs je idivl mov mov lahf xlat xchg in jp xchg fcmovnb sbb std ret or (bad) in cmp and in fsts pop fs cs sbbl mov andl cli or push xor jbe cli add adc or shr and movsb add push leave push lret cmp mov test data16 test cld decb sub adc add dec push cmp movsbl jg into mov lock mov adc adc mov or insl pop idiv pop dec adc adc ljmpw sbb (bad) je lea sub dec std sub mov dec push dec mov push cmpsb jp sti sbb mov mov mov mov dec shr inc fldt jb shl add lret data16 sub stos lret mov inc xor mov push lock adc xor or hlt jl inc cmpsl adc cmp xchg pop jecxz lahf imul mov adc sbb out mov insl ret aaa or lea or sar je sub xchg cli incl push jbe push lea shr inc mov adc lock mov sbb pop jmp mov mov mov inc xchg mov inc ja inc dec nop imul push ja add adc cmp xor push mov mov pushf xor dec div pop test inc push inc adc push xlat enter orl jbe (bad) push push push or into cs sbb jge leave lcall mov cmp sbb mov popa add adc xlat add dec and adc mov pop cmp ja lea sti pushf sti shr sub jle lahf outsl dec jecxz jne ficoml jmp aas push (bad) ret adc popa push enter sarb (bad) enter jmp xor fldl dec adc lods imulb add pop sbb ljmp mov add movb stos std mov enter adc cmp sub sbb add dec push daa or add sub fimul je lock and push fwait adcl icebp dec popf inc push sub fmuls cmpsl sub ss dec dec and pop push or add jae (bad) or sbb in (bad) add (bad) (bad) cs jmp hlt add or pushf or push sbb jecxz rclb jae mov lods outsl xchg lea jae enter add popa add xchg sbb cli cli mov lods and push push faddl (bad) orl push stc fdivp mov mov lahf cmp cmp and ret pop arpl lcall cmpsl (bad) maskmovq imull pop rol (bad) mov or leave jne jmp outsl mov hlt int inc mov cmp je sub shlb popf incl ss inc mov and int3 inc push mov inc lcall negb movsl xorb adc cs je jns test mov pop inc fdivs mov mov and cmp je inc mov push inc cmpb loope pop mov mov fnstenv inc and push test lcall imul adc sbb or loope nop (bad) push add mov mov inc inc data16 or lret add mov pop and dec pop fnstsw clc sbb mov mov inc inc dec lock push add and lcall (bad) and mov cmp add stc inc loope and and xor push pop lcall mov inc les enter adc jns sub (bad) pop and xchg popf adc mov outsb mov lret xor xlat cs nop je mov cmp addl lahf push cmp cmp inc dec fcoml fsts out xchg in mov sub cmp ja pop hlt add adc fcomps dec add adc pop lret push sub xchg and loope inc mov adc outsb sbb adc mov mov or ss lods mov inc in ja mov sbb add mov jbe fiadd inc jne mov int3 mov add xchg stos ret pop pop mov add sub xchg pop insb add jae jg test mov rcr sar and xor adc mov dec lret es mov addl shufps rolb jp adc or push mov pop or inc cmpb pop add in sbb popl sub jne unpcklps mov shrl xchg pop pop mov imul idivl inc sub inc pop ret or mov push adc (bad) jbe test enter pop inc es cmp notl sbb add push mov jmp mov pop ret pop movb (bad) arpl xchg sbb pop xchg out or add jb dec jecxz mov xor pop jmp pop add fldt cmp je add mov jmp push mov pop cmp cmp and pop clc mov js jne inc shll leave ja and adc lret repnz push mov lcall fdivp ret mov enter repnz mov adc test addb loope aaa aaa xchg es in fistp pop push jne data16 or add mov or push push push inc loopne and subl and lahf dec pusha les loopne int3 or pop or push and stos (bad) adc loop inc add sub sub mov cmp xor inc dec repz jno push add and adc orw push rolb or clc xchg inc sbb or nop and test out mov cmpsb ss inc sbb add and faddl and add (bad) pop mov inc inc inc and and jg fbld insb cmpsb mov stc and mov dec mov jns data16 inc inc mov inc rclb ja fsts adc mov cmpxchg adc mov xor out adc push fs ljmp mov push dec popa dec data16 in inc inc shr or push pop fsubrl jmp fildl push sbb pop ljmp repz iret lret mov in inc inc push inc sub fstpl call mov pop mov cmp (bad) xchg subb dec dec sub sbb ljmp lret fstps leave not jg xor in inc je iret je jns dec cmp dec inc rcrl insb inc xor mov pop clc fwait je sti or pop add or insl fnsave cmp or js hlt jne aad push add sub or fild adc cwtl rclb cmp cmp push and jne pop (bad) rolb imul loopne mov pop adc pop clc cmp jmp xchg cmp mov cmp sti push push mov aas mov out lea (bad) and add loopne pop pop test xor sbb inc inc add out add and (bad) mov mov and roll add xor push fildl xor dec sub mov add (bad) push int jbe mov lret in ja aas in push (bad) sub push cmp push je dec dec or pop push mov inc push sbb outsl or loop or jmp cmpsl rep adc data16 jg cmp test aad or shrb pop hlt fs sbb popaw fnsave and addb (bad) add aad jge (bad) notb pop pop ljmp or xor mov sahf adc add out out cmp dec jne pop jl inc mov xor sbb or xchg mov add mov out dec adc or movl sbb call add inc jmp cltd cmp std sub (bad) aaa cmp enter push or cmp inc in and iret pop roll adc and daa push or jl push add pop mov add pusha pop rorb addl mov or push push jge popf push xor jl daa sti push (bad) jbe xchg test pop add in adc push push sarb push inc lcall push or add xor loopne adc xor push and and dec and and dec inc inc cmp and and xor sub and and and sbb sub and adc enter adc enter fs mov mov mov repz jl mov mov mov mov ds iret nop mov mov mov mov mov fs movsb mov lods mov xchg xchg xchg xchg mov mov xchg (bad) enter xchg xchg xchg aam fsub xchg xchg xchg xchg in in lock xchg xchg xchg hlt clc cld add or mov mov pushf cwtl mov sbb sbb and sbb sbb sbb adc or xor sbb add add xor cmp fs xor je fs push fs fsubrs repnz xor orb enter xor sarb mov loop inc or mov inc cmp xorb inc lcall pop pop repnz mov dec push inc push inc dec dec push push push jle idivl jns je insl push outsl outsl je and inc push enter pop and pop push inc dec dec push jle repz jae outsl and inc dec pop push dec addr16 jg dec inc dec dec dec xor (bad) jbe push rsqrtps das add cmp push jle mov inc pop push mov inc inc dec inc cmovbe inc inc mov pop rcrb sub dec dec decb popa sbb inc dec push dec push dec dec dec dec push dec btr rcpps push dec addl mov std lahf dec push jb fs je xchg inc out std xchg mov push inc push gs imul jb outsb je pop in pop inc dec inc jne insb fs jne (bad) out mov (bad) pop sbb popa bound pop clc xorb popa insl gs inc push push (bad) (bad) (bad) imul pop push imul dec push pop ret mov enter inc mov push xchg outsl test inc dec dec or or add inc loopne dec inc dec mov ja pop ja push pop inc (bad) xchg insb push and imul outsl jne jae push pusha xchg push inc inc dec push popa addr16 jg inc inc push inc inc xorl xor inc dec jae dec (bad) jnp jbe add cmp insb jae adc or lea jae fwait fwait fwait imul jae je dec cs in add iret outsb imul add dec data16 xchg imul xor cs ss xor xor and xor xor and cmp cmp into add add sbb inc popa je add arpl test push jne sub cmpsl mov and movsb pop inc js insb outsl adc (bad) loopne call gs insb and lcall pop gs cmp (bad) (bad) je cmp inc aas push push push or mov xor packuswb (bad) push outsb pop jae (bad) cmc add dec pop fs add jg fisubl push inc stos push popa jae mov fidiv insb cmp inc add lods jno decl push gs fs inc outsb call or popa jo xor mov out pop jns je jo push push fwait inc push dec cmp push inc push xor xor adc jnp inc adc cmp mov fisub inc and pop or mov mov jae xor push push inc inc (bad) into jle sbb push inc jae and insl mov dec or jb push daa cmp xchg pop or mov jb mull jo cmpsl sbb push jne push fisub addr16 mov imul sarl xor outsb sub jo inc mov and lods jo sbb push gs ja mov pop mull je je jo mov mov imul pop mov popa pop cmp lahf ja idivl pusha xor add xchg fnstcw or pop das lds imul xor push mov insl lea inc scas shrb and add (bad) cmpsl movsb sub and cmp xor xor je cmp pop cmc inc sub cmp dec mov out sbb pop jae jecxz rorl xor and mov outsl jp insb pop xchg js pop imul or int adc jmp inc divl mov mov fwait lods inc mov jno insl prefetch (bad) push jnp pop inc push sub dec push inc out mov mov push jne addr16 pop insl popa push cmpsl subl popf addr16 push leave fimull pop pusha sub imul mov mov and xor add arpl jge dec addr16 insl lcall pop imul or cmp (bad) push dec arpl ja and sbbl jae das sub inc dec dec dec dec dec outsl adc push push pushf xchg pop icebp mov push lret arpl jl imul fistpll je jbe js jp outsl xor ss cmp sub push xor cmp cmp dec imul loopne mov push cmp mov jae add ss add (bad) clc dec xor xor aaa pop jae cwtl outsb leave mov jne xchg insl push cmp outsl sbb mov mov mov dec and imul lret je (bad) mov icebp pop dec stc pop sub adc push xchg pop or sub mul pop sbbl pop inc jae arpl outsl sti fistpl jae and or add and (bad) mov scas fs mov xor imul jbe inc inc jmp sub shrb cwtl insl fwait arpl and movsb pusha xor pushf jo inc outsl ret mov inc pop outsb push gs mov gs adc js imul insb aas arpl sbb lods imul ja sub jne insl or insb inc arpl or aaa add mov imul inc and pop cs lahf push mov inc inc and xor mov xor mov jns test mov sbb xlat and inc or dec pop push (bad) enter shll and sbb test or jp push arpl pop nop and stos aaa insl pop fsubr pop sub and imul sub outsl inc and xor (bad) (bad) mov insl fs clc call in loopne loop in call jmp in out in jmp and int in icebp in imul call stc push in sti cmc push out jmp in out and sti repnz and jmp aam test inc xor clc es adc (bad) outsb or cltd add roll and mov push jbe push push sub push lods mov xor inc dec pop or je pop lods imul pop jns sbb insl jae add jnp fisubr dec arpl dec outsl jbe lds mov add pop xor adc inc xlat or xchg lods gs rcr cwtl mov cmp and cmp (bad) ss jae or push add pop jmp sub es jbe jne movsl pop cs inc xor pop in sub inc pop rorl or or inc sub jp mov lock mov pop inc daa and xor pop dec xor xor aaa inc ja jmp mov sbb pop xor xor dec inc (bad) decl add xor (bad) add inc xchg or fs pop inc ss sbb mov in leave test idivl or jo and in pop (bad) repnz jb or inc stos and xor push cld aaa mov test add in imul xchg inc insl cmpsb leave outsb mov dec push cmp sub lret das leave nop or pop leave cs or addr16 mov xchg mov jmp js and loopne dec inc in nop or fbstp insb dec fbld fs mov fs and xchg or fs ret notb sbb je cltd lret sbb mov inc xor in dec rclb scas and cli fs ss jne loopne mov mov sbb mov je test add in repz nop or test xor jbe cs negb cmp push nop notb addl and xchg add andl rcll xchg add addr16 test and cmc leave test aam leave nop or jge enter fistp lret pcmpgtb xchg js ja fs xchg cmp xchg das sbb xchg cmc sbb mov inc xchg and xchg in inc sbb and call ret test xor dec popa enter xor out nop pop enter push in push leave sbb hlt adc aas adc mull sbb pop (bad) aas fsubs sbb negb cs pop add idivl nop pop jb nop cmc dec repnz aas daa dec nop pop enter dec fsts and inc push sub mov xor sub mov loop and pop ss nop or insl pop xor or insb xor fbstp in or adc xchg sub pop cmp xchg sub (bad) jg xor outsl inc xor lods push cmp pop lahf and and mov cmc repz cmp outsb dec sub and xchg or aas mov sbb adc pop enter in repnz das add or add and or fs mov ss push aaa out mov lahf xor and xchg and pop cld and xchg cs pop scas std and movb loopne pop jnp inc jbe jge movsl clc or xchg lods pop (bad) (bad) das mov xchg fsubs mov and and (bad) outsl (bad) shrb adc fild scas test jg and leave pusha das xchg jg xor xor pop pop aas xchg and jg fxch sbb paddd sbb sub lret rclb mov inc xor add es loopne out stos sti movsb mov mov pusha daa pop and pop pop iret adc xchg cmpb mov xchg into loope cmp add lock mov faddl cmpsb stos into incb cmp das push lss sbb pop sbb std and xchg and mov push pop inc xor das add and xor sbb and ss sbb xor sbb and xor push sbb popa xchg nop or dec (bad) pop pop ss or das clc das push das inc xor pop add mov mov subps and mov test pop xchg and leave (bad) dec mov fildll dec lods pop and xchg and stos mov sbb das sbb lods cmpsb fsts lahf or test nop or nop scas bsr inc push leave cmpsl sbb sbb sbb dec pop (bad) repz iret mov mov fcoms nop or inc outsl xor pop or pop inc aas add in lahf and jp nop pop jb cmc div lret hlt nop or test leave nop or sub fsts cmp hlt jge nop or cmp orb or lock or nop or leave jg repnz leave nop or or repnz xchg inc addl and or inc xor and jo inc xor fidiv and xor fldl fs jb and and out sub xchg and aas xor das mov mov sub sbb xchg pop pop and fcmovu popf fs xchg jnp xchg (bad) das pop dec xchg aas fadds mov (bad) out dec sbb inc ss das es sbb pop push and mov pop setl fwait lret pop xchg xor negb inc pop cmpsl pop rorb nop or mov or pminsw insb dec adc jns xchg divb clc inc sbb or div iret xchg adc mull jb mov or and ja and mov push scas in xchg and xchg add mov sbb in lea sbb leave test (bad) pxor out int or nop dec into jg in push fsts mov enter and xchg fnstsw enter fildll enter je xor inc xor xchg jg inc xor jae nop inc fmull div and xchg and xor fildll std enter sbb outsl pop enter push movsb cmpsl xor mov repnz push leave nop imul or pop aas inc ss cmp mov and scas int3 and sbb or or ret push clc nop or das leave nop or gs mov or pop or mov or pop mov or outsl movsb xor das mov jns das fdiv push mov pop idivb fildl mov stos pop xchg and dec outsl aas (bad) mov or pop aas repnz sbb push and mov lods dec outsl xchg and mov aas push mov pop lahf pop leave nop or stos jns or fildll sub (bad) jmp xor pop mov inc rclb test jmp add (bad) adc pop jg cmpb ljmp mov sti and inc aad aas mov movsb cmp xchg jg adc out movhps imul lret inc repz adc add mov adc inc leave (bad) jb mov inc ss and xor add push movzwl jo dec stos fs adc clc loop jb out (bad) dec mov pop mov movsb inc das mov (bad) cmp imul xchg or hlt out test push outsb jmp (bad) lcall mov mov and out nopl addb add inc loopne mov mov xor test mov (bad) xor in mov pop scas or gs xchg dec add scas (bad) lods dec nop mov or scas int mov leave loop add fld aas rorl or sub sahf adc mov sbb jbe leave scas inc enter add fwait jp ret popf pop add fwait adc pop push add mov popa arpl ficompl fidivr popa insb adcl dec cmp xor dec mov inc dec inc push push mov cmovge push mov mov jne insb (bad) pop aad mov pop and outsb popa add push enter pop push enter test mov sbb js dec inc sbb bound push insl out popf xlat pop lods pop jecxz pop lods mov outsl pop add push mov or add (bad) int cld pop push or pop lods setnp inc test addr16 and and add and adc add adc addl add (bad) add insl pop or add mov dec adc add imul add or cmp mov sub or push (bad) xor adc push leave add pop clc mov in fmul mov mov jg add fwait xlat fs xchg (bad) (bad) js jo inc sub dec arpl pop imul sub dec push inc dec (bad) (bad) (bad) jmp pop bound outsb jb inc xor imul cmp xor push inc dec decl jno imul ja (bad) (bad) jmp xor xor xor inc inc aaa cmp dec dec dec dec inc inc lcall clc dec inc push push push in push dec pop pop bound push pop push push std push arpl inc mov mov imul dec dec fnsave ss lods fcompl icebp xor mov sub jb loope ret lret push icebp popa bound neg jnp and cmp (bad) or dec push xor fidivr push cmp push inc sbb insb fs push aaa push inc arpl or divb mov add addb test js adc adc push loope mov pop mov bound decl adc je insb outsb push or pop adc jo inc xor inc (bad) scas sbb inc or jb jb fwait sti adc or inc js arpl push (bad) add jo xor jbe jae dec popa outsb fs push dec jo cs dec shlb dec gs jo insb push arpl sub add inc pop mov mov or gs mov pop or gs sbb jb movd decl jo imul (bad) bound adc imul push outsb insl xor push mov imul (bad) push sub inc push fs mov push imul insb mov inc dec push testb imul test sbb push out xchg jb mov mov das data16 jo mov add push inc loop push dec js fldt or and mov jbe dec add test bound imul ret xchg jae or inc sbb stc push enter jb adc sbb dec jae xchg mov mov mov imul adc (bad) inc fs and dec outsl mov popa or mov sub add jl fwait ret int3 xchg jo jo push imul cmp or jnp cli es push or and outsb outsw mov mov mov or ret mov ss push repz pushw adc ret ret pcmpeqw and int jp push addr16 mov jno adc xchg ret ds fimull repnz pop ret addr16 push bound test mov inc cmpsb adc push cmpsl pop mov or stos mov gs or inc sub and add sub mov out (bad) and cwtl inc jp sbb push inc icebp pop sub imul cwtl add mov push dec outsb push or lods loopne insl cmovno jne sbb jb jle xor jo jno cmpsb je test dec pop push jbe addb data16 mov (bad) ss add into add ret fmuls add or adc fstps test (bad) imul cmp sub cmpsb push nop loope fildl push mov sbb mov ds mov adc subb ja sbb fsts xor lock push and inc jne inc cmovl push js ja jbe push cmp xor loop nop and jge sub outsl js sub bound cld jns add iret (bad) push xor inc cltd xchg in imul jae cmp pop add pop push inc add dec add add inc in dec mov add add je mov repnz fldcw popf addr16 push in (bad) add pop add push pop add xchg sub insb sub push add add cmp loop rorb add mov mov nop mov mov insb or inc add je scas mov push dec lock xor lock rorb inc test push add add add and incl add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 