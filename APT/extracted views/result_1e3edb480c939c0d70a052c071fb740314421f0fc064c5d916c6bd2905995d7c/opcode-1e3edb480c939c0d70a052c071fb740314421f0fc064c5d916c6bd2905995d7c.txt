mov add add add dec add add add add rolb add add add add sbb pop clc ja inc ror scas add cmp clc xchg pop es int mov sub dec inc adc xor xor xor fsubrl adc mov js mov cwtl gs dec pushf imul mov xchg stos adc jo cld dec rclb mov lea pop add jmp decl cmpsb jno loopne adc daa add repz mov dec and sbb dec ljmp xor ss dec pop inc mov jno jne push xchg sbb sbb or adc int3 sbb dec push clc lock mov ffree aaa jle scas fldt popa insl sbb insl xor push (bad) negb aad mov not xlat loop jge leave push push jnp fimul outsl in loope inc lret adc sahf pusha fcmovnb or inc mov jp pop and add stos orl xor nop (bad) push xchg xor xchg inc dec and jecxz stos daa dec sub insb mov enter or jmp mov scas push lcall aam das inc aam ss and enter nop lds cltd or jo mov sub cmp daa pop shrl cmpsl pop cmc ret mov ljmp mov out sti push aaa add fucompp xchg movsl sub xchg xor fs lcall inc addr16 loope fild (bad) cs lods mov or rcrb mov cmpb nop push push jge dec movsl shlb js je lcall mov sbb adc sub in mov add xchg dec inc and ret sbb sbb mov fld mov jnp stos push sub pop les cmp push fiaddl xchg icebp or jns pop or xchg frstor andl outsl xchg fwait mov cmp pop pop xchg inc jbe movsl cmp push mul hlt pop les jmp jne mov mov mov xchg in in ds outsb mull sbb leave lock pop popf xor mov jp pop cmp xchg loop jg push iret jae popf sub pop mov pushf jo mov adc xchg xlat das inc mov sub jae sbb pop dec rcrb std cmpsb (bad) adcb lock xor mov mov pop xchg mov int cmp mov adc andl icebp mov mov jnp push icebp jae (bad) mov jbe push xchg jp stos out stos imul adc insb sbb and ss add xchg lret daa adc movsl xchg mov nop and lret cli mov roll cmpsb cli outsl dec jne xor insl xchg push jns (bad) or push popf mov iret xchg fdiv push subl inc dec std mov push cmp cli xor jge out sbb sub sbb inc sahf jg dec test add mov in dec fwait clc inc mov aaa lcall test pop jno pop xchg cmp ja jb lock loope mov cs ja and ja mov sub mov test mov sahf pop push jbe add call mov ljmp std jl xchg mov or mov pop js and adc dec gs or inc inc jg out test mov mov sbb pop (bad) jo xchg (bad) rorb mov push pop adc push je dec or lea dec cmpsb adc out xor sbb or int shrl jb jecxz jne fdivs in push or mov xor cltd push dec pop adc mov xchg cltd mov jnp inc arpl add aam pop leave pop sbb insl mov repz gs fnstcw jns sub fistp sbb loope and movsb push stos xchg aas inc insb cltd (bad) push xchg or or cs js jg imul icebp in pop stos and inc lret sbb xorb ds lods adc aaa push inc pop and mov jbe leave dec pushf adcl mov aad and mov jl in pop das mov or outsl mov loope adc subb loope cwtl adc add sbb mov xor int dec xchg pop xor into mov call loop enter in jp cmove in mov imul aaa iret mov pop mov xchg mov ss dec inc movl je push pop pop enter dec repnz push (bad) aam inc (bad) stc adc in fidivl xchg int3 andb mov add adc sbb fisub mov scas in add fbstp (bad) cwtl xor xchg jg daa xchg fstps fnstsw mov fnop iret and test push andl enter dec mov pop sbb jle test sub push enter jnp sub in jb ret (bad) or xor sub jnp ror ljmp sub test pop outsl (bad) div cwtl fidivrl mov movups test repnz xchg dec (bad) insb mov or (bad) mov jno cwtl std add adc test add lds dec scas dec loopne stos or lock inc inc repz xchg sbb push bound gs push subb lods dec inc jno enter push add xchg mov frstor inc lret and jno adc inc adc or mov adc mov jne cmp cmp mov cld mov cmp mov pushf or jmp xor lahf frstor ss (bad) cmpb pop mov push mov rorl pushf sub mov int3 in leave mov (bad) sahf mov sub loopne popf push cld loopne mov mov orb repz push add cld mov cmp std in loopne arpl xlat out pop or stos mov dec outsb icebp adc sbb icebp enter xchg add xchg ror out add repz test clc (bad) mov jne mov dec dec cmp mov sub cli lret cld sbb ret imul sbb or cltd add lods rclb (bad) sarl push inc push cmpl push sbb add or and dec sbb jbe (bad) cmc test jle inc dec push sarb outsb xchg dec pop xchg lds jg cmp xchg or pop popf adc in jle adc and popf pop cmp int3 inc pop jne je add and inc dec push dec lock fmull and mov mov jmp sbb xlat cmpsb dec and dec xor sti pop and adc ss not cmp mov jecxz inc and sbb fiadd aaa cs ret gs out cltd push xchg mov faddl sbb fsts or mov mov push add ficom mov sub mov cs jbe loope pushf aam xchg js enter adc inc in sbb aas in or jmp inc aaa inc pusha sbb mov mov xchg adc jno mov or cmpsl fildll ds frstpm(287 mov and mov cmpsl fdivr pop sub popf mov xor ret test rorl clc imul jnp mov sub jae inc int es (bad) adc mov dec test loop mov xchg dec xchg inc je fsubs rcrl and out addr16 push and or push shrb dec jno xchg icebp sbb (bad) cmpsb cmc icebp mov sbb cmp and popa inc cmp (bad) mov inc aad jo loope xor (bad) scas mov inc jmp lods dec mov jbe icebp scas dec nop pop push test mov sbb sbb sbb sub rolb lret xor sub leave pop aaa jge jmp roll cmp mov fimul loop rcll in lods push ja jmp or xor cltd mov mov gs std sbb xlat loope cmp push jmp or cmp push inc mov sti add mov orb stos sub mov ret and adcb inc scas loop je fsubs pop mov aam test pop xchg cmp jbe outsl mov mov orl pop adc (bad) pushf sbb pop pop xor jns leave xor addb jo rcl stc add ret mov test insl cltd jl and sub insl cmp fmuls mov out push mov xchg pop lock inc jl fs push scas push xchg ret push add jns lock call ret test ljmp testb in inc inc xchg cwtl mov shrl test ss and xor jg xchg adc aam ds mov insb (bad) mov cmp ljmp jge lret adc movsb xchg addr16 jmp fs movsl mov stos mov cld sub xor stos mov and dec push push mov cmp xor ds xor (bad) stos iret cmc lcall xchg ficom cmp (bad) push pushf ss insl call adc push sbb mov fs insl loope jmp mov fidivr pop gs lahf pop or cmp bound dec push mov add repnz ret orb and jl inc and push or mov push (bad) icebp and xchg xchg rcrb and icebp cmp dec ret dec (bad) cmc (bad) ja leave shll inc data16 inc movsb pop push aaa (bad) jne (bad) cmp xor pcmpgtb aas mov std pop add loope xor sahf lcall push (bad) popf and (bad) add push mov pusha adc cs pop dec lret fs mov into (bad) fistp sub iret mov inc stos or lods arpl repz xor push cmpsb mov mov lret jge leave dec stos xchg loop outsl call fwait jp int jecxz push int3 add add clc sbb in jb pop pop mul mov sub pop mov inc xchg adc xchg push and jae push mov je cmp mov dec cwtl mov xchg mov fisubr push adc mov pushf andl cmp pusha cmp xchg fidivr and addl inc xchg add push scas psadbw xlat xchg mov adc xchg sbb mov out mov ret xchg insl notb icebp inc in lret sbb adc mov xchg test das sbb jg jle jbe mov aas sti pushf pop xor sub pop or and movsl lcall mov (bad) jge dec test jmp jae aaa std cmp call out rol dec inc hlt jp addr16 lret xchg xor shll das lods push jne add in jp inc shrb idivl cmovne icebp push and sub sahf stc orl cmp std int3 lea adc add cmp insb rclb js fwait mov out xchg (bad) or push xchg out hlt sub mov stos mov add cmc lds push es lds inc shlb add or outsb xor xor mov jecxz in cmp aad decb in in lret push adc (bad) pop mov jae sbb push xchg lods iret fcmove pop adc aas sbbb in adc imul mov cmp out (bad) ficomp jmp aas je xchg mov daa and mov mov push (bad) int scas icebp jmp pop (bad) mov cmp fsts pop xor push mov or rclb adc add push lds add cmpsb push inc cmpsb xor mov dec push popa and pop jbe inc lret mov mov leave sbb in lock pop jmp lods or pop xor in and mov cmp sbb inc xchg inc mov lret push push (bad) scas clc jecxz fdivp xor or in pop cmp js push fldt xchg inc and adcl add adc mov aam pop mov dec les sbb push (bad) hlt int (bad) dec sbb push inc imul test dec and add aam and daa pop sub aam mov mov aad dec jge sbb dec incb rclb xor (bad) jmp and sbb pop mov and pushf push pop fstps cmpsl xchg fild jae scas rcrl cmp adc mov jecxz std or fdivl faddl push pop aad and mov push das cmpsl sbb pop in pop test mov (bad) hlt imul stc (bad) or in mov nop mov movsl push pushf daa stos jecxz inc scas cltd lock mov or lret push bnd sub data16 sub cwtl lcall sub repnz movsb pop add test movb pop pop push insb andl mov mov call jl std xlat jb xchg psubsw mov pop mov imul fiaddl jp jbe dec clc xor pop adc inc rorl push fcompl lock nop pushf insl xchg push add sbb dec das xchg and xchg (bad) lret je out pop iret lret into pop push inc jmp jae jns sahf push repz mov fwait mov jge outsl and outsl jmp inc aaa fsubrl xchg (bad) fcomip stc adc lret in xor ret call popa push std sahf pop (bad) leave mov sub scas lods loope sub pop xchg out dec xor push mov stos or jno add and out pop push test loopne cld sbb stos (bad) loop sbb mov or or mov repz out (bad) push adc call mov dec dec jne or push ja enter lret mov outsl fs or mov fldcw jge adc nop push jns mov pop in cltd outsb (bad) lahf test pop jbe mov les pop sti icebp lret (bad) mov (bad) sbb pop or and ficom push popf gs cmpsl push (bad) out mov fsts mov push cmpsb push enter mov ja add bound in fs fwait test jne pop inc scas or (bad) lret test sar ret mov movsb addr16 push clc jmp pop fcmovu call mov shrb xor jecxz movsl sub pop cmp mov (bad) repnz js insb in insb das mov in mov popa jecxz and and (bad) xor outsb addr16 mov inc mov and jg sbb fwait jge je pop mov out in (bad) push insb fwait je cmpsl leave repz xchg and das std nop mov bound pop stos bswap and and xchg cs mov jle push fimul add or aam mov popa imul xchg push pop mov iret loopne pop lock or push push fsubrp (bad) cmc add sub sbb mov inc add xor rcl mov ret (bad) mov dec aas ficom lcall adc fisubrl mov or loop cmpsl std jge xchg xlat in mov jge xchg mov pop test (bad) mov ds stos jo fsub (bad) into jg push lods push test and scas mov sub adc push int3 dec sahf jmp mov mov or clc lock (bad) std or stos sahf call and xchg out jno push mov cli jae mov out pop lea and stos imul jnp push (bad) xchg pusha adc dec cmp std jb jp jbe sahf mov push push gs xor jle into pop inc push sahf and enter fistpl mov pop mov mov adc shl fdivrl loope jl push scas or lahf push nop push mov inc cmc mov adc xchg mov xchg sbb std arpl cmp lret mov sbb adc pop shr sub push sbb pop adc xchg out insl mov cld frstor movsb jge in daa sub arpl je dec mov inc xchg add jb mov roll movsl add aas sbb mov not inc xchg pushf loop aaa test wbinvd push (bad) outsl out push aam or fsubl sbb mov cmp scas aam push mov (bad) pop jl insb inc or lods mov ja dec pusha and jno xlat mov (bad) arpl fmull in adc cmp add pop push inc sub rorl test pop pop and test fcmovnbe and xchg fimull adc jne pop les mov pop dec xor fiadd sahf sbb inc test bound fidiv ret arpl popf cli jmp rcrb add out mov cltd jo push cmpsb mov mov (bad) ret popa push (bad) in rorl iret xchg inc push out inc (bad) imulb cmpsl loop pop sahf adc xchg out nop sbb mov mov gs cld cs push out roll add sti dec mov popaw (bad) inc ficompl fs sbb ja (bad) (bad) mov into cmp or shlb lret xor sub lcall leave stos xchg inc push inc int3 lock dec pop pop je les prefetch xor addr16 or (bad) (bad) in sub orb outsb mov arpl scas mov jae mov pop dec sub dec jl stos bound mov dec sub cltd mov mov xchg mov lcall mov xlat lahf or and ret out pop mov dec sub int3 or test test cmpsl inc aam xchg sbb xor hlt mov (bad) fstp mov push or cltd rclb inc test rorb push (bad) xchg dec sbb mov (bad) mov jno mov cltd mov add out cwtl rorl pop (bad) push lret lods (bad) cmp xor pop xchg test xor xor mov out fwait stos (bad) mov adc push fwait out adc ds pusha sbb cli lea and lret in leave sar faddl sub cmpsl push into std divb inc push stc rorl dec mov jo,pt mul test sbb icebp fs mov mov push xchg mov (bad) push shlb popa add xor jmp stos mov rcrl gs lods dec sbb jmp insl inc push adc sti add pop loopne cmp pop (bad) dec inc loope or test or inc push jmp fwait push mov paddusb pop sbb jp popa xor pop out loop adc out popa jnp fnop push lods movsl ja jbe push sbb add sub sbb inc or enter xchg mov fild cmp mov lahf fidivl inc rcrl xchg xor hlt leave dec les fbld xchg inc add (bad) pop or imulb or adc jns iret (bad) ret das pop or (bad) fldcw adcb add pop dec add xchg popf cmp pusha jmp add mov testl and pop lock sbb cld mov cli inc lret add jl ret in cs push stos ja bound cli xchg adc add sbb lods and jmp mov push dec insl jae fadds xchg cmp adc ffreep test jb push shrb sbb xchg and xchg or loope mov addr16 (bad) test test fldcw repnz push (bad) sub or xchg dec scas pop dec test pop mov mov ret pop or in hlt mov push popf mov sbb jge mov push dec sti adc mov pop lods dec mov mov pop repz pop int mov dec popf inc push scas rcl cmp or sbb and add mov mov or and (bad) push fadd push inc mov outsl lds ret mov in gs inc out dec insb fstps cmc dec add int3 repnz inc jne add jmp aaa fstp movsb fs (bad) dec sub into inc inc stos test or jge insl rcrb jo jle fcmovnb sarb and jne stos cmp mov mov lods lods (bad) in lcall test hlt pop dec arpl push mov jbe and jecxz mov loopne loope (bad) xor insb cmpb jl insl cmp inc ret xlat sub cmpsb adc lea aaa insb in adc bound cld adc jae lods fsubrs in mov adc int3 (bad) mov add outsb jl icebp push xchg dec xchg mov mov outsl pop cmp and fdivl (bad) in (bad) pop das (bad) dec bound xchg test sub sub dec sarb jne push sbb cmp add or inc sub fdivs in add mov fisttpl mov lods xchg dec lret test push test push mull ds mov cltd mov xor xchg repnz push cs and mov push shrl (bad) jae cmp mov imul addr16 out scas push add jae xchg sub dec dec lret fildl sub loopne sub push mov (bad) and sbb popa dec (bad) mov (bad) cmpxchg push and ficomp and popf and pushf cld jne popf std dec push lods adcl test rcrb xor lods in and dec dec dec mov dec into mov stc pop or inc ficoml xor cltd rcrb xchg push out fsub mov mov cmp pop (bad) or push mov sub jae xchg aaa push sti es mov popa jle sub repnz lock adc cld inc pop ds pop fdivs in push (bad) outsb mov out sbb jmp mov cmp jmp shll (bad) fimul ftst sbb rclb aad or xchg inc jg fsincos rolb daa cmpsb jbe xchg imulb leave pusha cmp outsb loopne and fisubl add aas jno xchg add push icebp add test xlat jbe leave out sbb (bad) enter pop push pop cmc dec cli xor mov fwait popa lcall xorl inc sub xor clc pop rorb sarl jb fcmovb jle adc adc jo rolb mov mov pop dec out or pop sbb cmp cmp mov shlb (bad) dec xchg scas ja or cmp fcomps js ret xchg enter fnstenv fwait repnz sbb cmpsl test les and add dec push push lahf ss test jns jo xchg adc push or and pop mov sub or dec mov pop shll jmp gs les test push (bad) jg das test and jne push test fmull xchg lods (bad) (bad) sbb lcall dec xorl mov adcl jg adc mov dec dec push mov sbb aas dec and aas mov jge enter jae in add lods inc xchg pop cld popa inc mov push pop sahf dec cmpsl loopne ja out inc repnz mov add notl sbb xchg sarb lahf sub cmc (bad) jbe sub movsb (bad) mov push xchg sbb aas loope push sbb repz insl mov insl test idivl pop mov cmp sti push popa mov or lret lea rep les fnstsw mov sarl push loopw cs adc out and mov in push daa xchg and sbb repnz inc sub mov fnstsw xor sub cmp aam ja jno pop lock js mov arpl mov adc popf or jno imul mov dec add jp jno or stc nop pop jb fwait mov xorb adc pop sub mov popa sahf pop adc les mov out jl jb lods xorl add push lods add cmp mov aas fwait movsl (bad) pop (bad) jge mov mov adc mov or xchg xchg sbb mov jne sarb leave sbb (bad) push loopne es cmp cmp cltd stc cmp xor movsb call push inc call idivb mov add aam dec loope (bad) cmp jo jnp mov shlb add adc aad xchg cmp jo and adc int xchg dec pop sbb shrb call icebp jns dec aas mov mov scas popa mov jp (bad) outsl loop xor ljmp fdiv call push pop outsb ror jne push es ja test cld movsl out jbe add inc cs and ficoml add pop aas push hlt jle jbe ja cld xor mov nop (bad) jmp mov mov mov lock js fxtract mov dec jns les and lret ret out pop mov in xlat lods pop xchg test cli and mov lods test dec fisttpl sub mov push loopne (bad) sub dec pop outsl push ficomp jp inc repnz mov push push jnp in test pop mov shrl dec movsl movsl jno mov mov mov pusha mov adc adc (bad) mov js dec (bad) (bad) fs mov int3 into (bad) in lock jne lea rcrl sti jg mov into mov mov sub (bad) fcomps mov or insl in sbb je aas fidiv push mov pop xchg xor push sbb (bad) cmp push sub adc out ret (bad) jne shll iret push sbb dec std mov add push cmp jnp outsb dec push pop cmc inc test xor sub les in jp xor je pop mov sbb (bad) mov dec lods cwtl in fldt pop jmp adc loop dec jns push sub hlt xor jnp fist mov pusha jg stos xchg xchg sub cwtl inc div mov hlt ret aad daa xor scas roll xchg aas ret push push and sahf cmp fsts pop ljmp sbb shr aaa (bad) cmpb dec not addr16 pop rcrb in pop mov jl popa rorl mov (bad) mov cmp pop pop jge pop icebp ja bound insb xchg les and pushf insl fwait add push jmp js adc (bad) int3 sbb inc and call inc mov xor pop cmp out cwtl in and push std inc loop sarb sub or jg shrb aam int3 test fs lock inc jae andl loop rolb in cmp test mov fdivrp mov mov mov jns insb xlat out add mov scas int jl sbb inc cwtl cld loope adc insb sarb in cli add xchg es push push dec shr sub lret mov fcmovne stos stos push popf sub (bad) mov movsl test inc aaa sub aaa push inc pop xor cli mov push mov cmp mov and shlb fdivrl sbb out dec and imul (bad) push jno and scas dec xor xchg test cmp and call sub cltd cli lahf dec jno shl stos fwait dec push sbb adc cltd mov int push addr16 xlat xor addr16 pop pop xchg jg pop push xorl jne in add cmp jno cmpsl movsb sbb mov fidivr enter aaa dec ret xchg adc psrlq out jge inc xlat xchg jne (bad) mov cmp or lret sub bound add das out pushf hlt lods into std imul mov cmpl xchg sbb lock and jns in lea sbb stc popf movsb mov adc imul mov push gs and xor xchg add mov loope push adcl xor rcll fmuls imul decl pop cmpsl flds je mov std jmp sbb addb loopne jno popa mov daa test cmpsl sub mulb jno sarb div mov lods cltd nop sahf aas mov arpl pop out sti jmp mov ss (bad) cli and std add or jmp pushf sbb call je xchg fadds xchg out mov in (bad) dec fistpll adcl push lds jmp out sbb ret mov aaa push cmc mov mov nop icebp mov push test jmp mov popl cwtl int3 push std jb lret sub pop xchg dec pop lcall addl pop xor cmp pop shr and insb faddp inc add (bad) fisttp inc mov mov cwtl subl push jecxz insb fsubs popa ds push pop push inc jg pop clc test arpl lret lret (bad) popf aad cmpsb mov mov outsb mov xlat xor inc loop lds jnp ret aaa shlb fldl add lods inc cmp inc mov mov fcomps mov not (bad) xor jae xor pop jo aaa mov jge rolb idivl inc clc dec aas mov lods pop cmpsb cmp addr16 popf xchg pop xchg jb or mov xchg out mov cmp imul mov (bad) fidiv das sbb je lods shl (bad) (bad) movsb adcb lods sub push mov sbb cmp cmp mov inc mov insl fbld insl jno dec sub pop jb and lcall pop test sub outsl das stc mov xchg (bad) (bad) mov lds mov test int lock popf sbb aad es dec mov fsubrs jmp cli push sti fidivl stos rcr mov out loope js sbb lods cld (bad) jle mov ret add adc push pminsw jge test andl and ret inc enter int mull shll (bad) mov mov out in sbb add test mov je mov mov sti xchg repnz adc (bad) loop pop shr xchg in xchg adc mov and test xor ljmp mov or inc (bad) lods jno jno pop pop or jb rorb push imul inc lea in sahf jmp push push fisttp pop ret push add xchg repz mov stos outsb ss rcrl sbb ds cmc or jecxz iret inc in xchg sbb xor data16 fnop xor mov sbb stc lods fcomip addr16 test ficoml mov mov orb mov push jns pop mov and sbb pop (bad) dec or out xchg inc xor orl push aaa cmp out enter jb mov cs mov pop pop xchg cmp je (bad) test jmp push sti mov inc jp out aas xor shll mov inc push fxch je sub mov rcrl (bad) ret inc cld mov and (bad) cli andl mov sbb int shlb dec adc mov jnp cli popf das cmp mov scas daa xor test jo lcall rcrb mov sub jne push aad jno rcl mov xchg imul movl cmpsl lcall mov or repz jecxz and mov xchg and mov xchg mov mov jae lds add cmp addl pop push push fnstcw jns ja out imul aad inc jp test test xor cmp push cli fistpll mov jl and popa adc (bad) jnp sbb fnstenv add fbld mov add iret xlat decb inc mov push scas cmp mov xchg imul ret sub push jl aas ljmp jno push mov sub mov (bad) jae cmp dec je cmpsb jg mov std insl rol pop test cmp (bad) lock das dec jecxz pop inc es lret adc ret das insl insl imul sub lds pop add into xor loopne test inc int3 adc int gs adcl mov pop mov roll sbb xchg jbe and leave and (bad) negl out scas aam arpl pusha or mov aaa pop in shlb and insb xchg addl fwait xor scas cli lds add mov popa pop and jle scas fsubrs bound test jb adc push std and loopne mov mov push cmp aad outsb cmp fiaddl xor mov sarb test sbb lahf mov shrl sbb cltd or or mov adc push pop mov push and arpl xchg loop cmpsb sahf add jg call in icebp es or dec cmpsb ret sarl mov mov mov sub cld cmpsb jno cmp jno sbb (bad) (bad) mov out mov or cmpsl fcmovbe loop dec std lock adc jb test and mov cmp mov in push and adc xchg (bad) pusha jg (bad) mov push daa lret in mov fsubs cmp sbb xor cmc and mov in dec adc lock push or ret out mov xor xor sbb adc sub stc inc push add sbb lahf mov adc and je scas leave lcall xchg pop (bad) mov adc mov and ss fisttpll cmc jns lock mov (bad) call cmp xlat xor xor mov popf xchg aam out je mov cmp mov inc xor lock inc adc sbb je scas insl data16 out jno aaa push je adc popf aaa loope xor sub xlat inc sub and dec rcl (bad) mov pop mov mov jle mov adc inc push pop push mov and addr16 xchg mov and int3 lret fwait pop outsb mov arpl pop xchg out jle sbb push (bad) dec mov or add mov cmp cmpsl test add rorl pop loop mov or sub dec add les adc pushl (bad) xor mov movsb inc add or sub (bad) dec mov cmc jp in mov scas adc pminsw mov rcrb repz inc xchg into add pushf sbb push jecxz pop in push inc cld mov repz fisttpl mov int3 punpckhdq xchg insl test test jbe fsubr aam sub xor daa out inc addr16 push addl ret cmp int (bad) mov inc jae pop outsb sbb testb insl add cs fisttpl into lods sub jle iret dec sbb dec inc add loop jecxz fdivr mov aam add or sar add fnstsw jmp xchg xchg fs outsb add mov xor ficom xchg les aad pushf push sbb (bad) mov stc stos lods and (bad) out mov fdivl cmp cltd and jecxz int into loope xlat (bad) and (bad) mov lcall mov dec mov push xchg pushf rcll jecxz adc pop push hlt les out and in insb sahf stc stos mov (bad) mov lock arpl (bad) cwtl xor inc mov add add jnp dec ljmp rorb or xchg aad rcll or adc fsub push je sarb pop out das hlt dec mov cmp and repz lret or psllq rep jo lock sbb imul movl mov imul negb arpl add cmp xchg cmp inc into dec dec pushf mov cs sbb mov mov and pusha xchg mov popl pop fsubl loopne pop call lcall movsb sbb fist xchg aas xor mov fdivrl daa nop mov pop mov push enter stc incb movsb push test mov mov stos jl into ficoml or pop ret xor jge sub dec or mov jp lock pop lret pop repnz mov imulb push cmp adc sub cmp lods sbb addl push adc jno cmpsb xor and pop rorb jecxz (bad) xor dec loop xor cmp xchg mov jne addr16 lret mov loope (bad) stos hlt clc leave jp jae dec fstps jbe xchg or xchg mov pop mov sti cmpsl and and inc xchg insl das lahf adc mov std pminsw jp add mov fidiv test dec rol enter pushf dec mulb and lds jns cs into and or cmp pop jg in leave test jmp icebp jmp out (bad) sub jns lcall je xor ficoml cmp invd (bad) push xor iret jbe shll iret dec rolb inc jae jnp jmp rcl fs or mov mov xchg movsl jne pop lret insl jmp std cli gs mov push ds push xchg cli dec xchg cwtl mov xchg push or movsb repz add mov int3 xchg das and jg cmp notb and and nop (bad) cs (bad) lcall fcomi inc mov inc decl mov jne insl icebp movsl das out jg inc push clc cmp ss cwtl fild int inc xor mul into aad adc xchg int int3 loop jne addl in iret sub xchg (bad) push pusha xchg dec sub dec jae xlat pop pusha sub inc movsb mov mov fs adc aad int pop jb lcall mov pop pop lret leave pop cld and (bad) xchg imul inc mov jl hlt shrl (bad) lods push dec rol or inc cmp and sahf flds repnz sahf mov jo adc mov aam jp xor divb jo mov bound inc lcall push dec dec sub jp iret dec into out sti inc push ds sbb aas mov in sub call out sti cs sub sahf xor xlat sbb pop push or mov fbstp jb popf lahf inc int3 mov mov jns sub mov in lahf mov fiadd mov mov pop sub dec mov pop gs cli test in sbb mov test push popf daa mov adc fstpt das adc mov sub pop repz jbe fwait testl xchg mov xor mov or xor mov cmp addr16 pop push mov or and and adc xor jbe sub mov jge aam and loopne add hlt repz jl mov cmp aaa adc mull clc xor inc xlat and dec and sbb dec sub jecxz int xor (bad) xor in outsb mov nop fmuls pop dec stos loopne dec mov adc pop xlat ja js arpl nop imul loop xor xchg into xchg mov jp lock mov aad aaa lret sahf sbb repz jmp jbe mov es and jmp dec cli or (bad) xor pusha pusha pop clc lret fisubr jo xor cwtl add (bad) jg push jb add popf jnp mov das cmp fisttpl dec jl sbb jnp lods push push push test push sbb sahf dec into test cld hlt ja jmp mov mov (bad) fisubrl out js insl sbb enter add mov js mov das sub sbb adc dec push or pop dec xchg cmc out push sub adc icebp dec iret sub int movsb sub xor repz pop dec cmc mov and (bad) fcompl inc das fs mov pop jbe lahf outsb ja cmc repz mov (bad) arpl mov sub faddp pop lock out sti cmpsb sub scas iret inc cmp push cwtl cmpsb sub or sbb adc mov fs andb sbb add (bad) jg rorb cld je adc mov repnz lods loop cli (bad) jecxz jmp mov in enter gs orb and test push fs int3 std aaa scas jae add sarb mov rcrl sarl test fcompl mov cmp or fwait sahf lcall roll movsl or jb jp mov data16 push icebp aad dec jae jecxz mov or in loopne daa test jecxz add jle mov rclb in dec clc outsb lcall jno stos inc inc push push fcmovb push aas inc pop and xchg test test sbb andps js mov mov (bad) dec popf add ss xchg addr16 fnop push inc scas arpl jecxz fwait adc movsb ss out imul mov enter nop out jno cmpsl sub fcoml rcrb xor sbb cmp test mov lds stos inc mov imul pmaxsw inc out sbb subl int scas test pusha sub cmp cmc repz ja movsb lea push in xchg pop stos sub cwtl cmp push jecxz add movl adc stc pushf xor mov pusha bound xchg or inc cmc xchg mov bound nop les test jb fidivrl loop cmpsl int3 lods mov rcl sub iret jl ret adc jp push sahf jl fisubl fimul xchg addb inc js insb clc fstl leave sub add mov jmp xor mov fcmovnu lcall lret fistl dec lea scas sub push inc mov and push insl jp mov fiaddl xchg add shl dec mov inc in sub dec and je pop push sub jbe jno mov push ds cwtl sub xchg xor test push and push dec xchg sub sbb lret out lcall xchg int add rol movsb dec popa call pop push clc cs loopne inc popa dec int3 and dec pop cmp ds pop fmull fwait mov pushf (bad) xchg add fistl cmp jno add in mov outsb mov fxch cmc scas sahf movsb dec cmpsl cld hlt adc sbb nop popf mov sbb sbb mov lods test inc push (bad) insb rclb mov outsb mov dec mov outsb sbb call mov sub (bad) sbb pcmpgtw movsl ja mov stc scas push dec xchg into cmc dec or (bad) test fbstp cmpsb ficomp inc aam mov and jge adc (bad) push and ljmp fcoml rcr outsb aas fiaddl adc mov addb push fsub sbb out dec rcr xor in dec loop lret jne in mov pop cli aad push lahf xchg ret cmp adc jmp (bad) adc jg addr16 or pop xchg or aam fildl arpl and dec inc aam cmpl or push mov xlat and mov pop and or (bad) divb sub inc mov fxch enter stc paddw stos sbb movsl mov mov push or out in adcl js pop imul insb clc mov fcoml lea cmp aas inc inc sbb iret std cmp cld call pushf cmp out push aaa aad idiv scas push inc divb xchg ret mov sub inc adc jge icebp push inc or mov cmp push push push (bad) xchg add jp xor je xlat in add mov xcrypt-cbc cmpsl adc mov pushf ds stc lahf out roll cwtl push add mov sub addr16 lret adc adc cmp out icebp and jl jbe cmp cmpsb jg scas test fs int loop shrb sbb dec cmpsb in loope popa sbb sbb adc (bad) ficoml jle in leave mov mov sub jle jbe dec lods outsb mov sub pop xchg lds mov gs aas inc mov cmp lods xor xchg inc test scas cmp add inc movsb scas dec xchg mov shll xchg roll fcompl ss mov dec jns lcall daa mov jnp or icebp xchg insb (bad) out out adc push sbb cmp inc das icebp mov mov xor pop nop cmc fsts xchg popf int3 iret pop bound loop mov xor pop mov test arpl cmp push loop inc mov inc inc xchg sub lret inc mov xor adc adc out inc ret rcll mov popa xlat (bad) aam movsl or jns xchg (bad) mull adc and adc push mov cltd add xor (bad) xor sub int das adc dec push xor xchg sahf fcmovnb dec (bad) jo int3 mov pop lcall ror or pop mov bound icebp (bad) adc and (bad) pop stos clc (bad) adc jnp jns jle les pop sbb mov pushf arpl lock jp faddl lods stos inc insb mov xchg inc pop imul pop or and mov mov xor les xchg mov ds scas adc fbld pusha or scas fld1 stos imul xchg out lods cmp inc aas mov in lahf (bad) sbb test push pop arpl or push cld mov inc dec pop pop (bad) stos xor and mov popa or pop push lret in test mov push add aas sub xchg repz ret or or out pop arpl icebp cmp aam das and push jno out dec (bad) mov out fimull ror std adcb or lods xchg jae xchg xor pop inc push rorl or lret inc roll stos popf (bad) aaa gs fisub xor out inc cmpsl push mov aaa icebp mov push pop or cmp arpl pop pop pushl mov rolb fdivrs arpl stos jecxz dec inc addr16 pusha bound sbb pop push movsl std mov ja cmp out aam mov add push inc scas loope bound xchg js repz mov xchg dec xchg sub lock in into push xchg loope fcmovb cld and jb jb jne adc push push arpl xchg push shr jne sub jno jg push xchg mov sub and adc dec ret cmc mulb fwait out outsl nop imul pop ljmp mov mov or nop xor clc call fwait in cmp out ret jmp and jno xchg cmpsl push flds xor into outsl lds dec pop dec js push shr xor xchg clc jle cld mov (bad) jno adc push ss jbe scas std mov mov mov ss jns xchg rcll push inc (bad) cmc sti inc divl jmp push mov inc cmpsl mov pop hlt inc xchg scas mov push popf (bad) sbb adc lods scas xchg jb push mov iret add add sbb jp jmp ljmp divb mov sbb popl sub out xchg ret neg ficomp popa add dec imul cmpl test push mov shl or or pop jbe mov mov xor mov sub pop mov add arpl test pop add enter inc sub fs or lret pusha fadd and inc nop out sti sub mov es icebp and test or mov std dec cmp int3 out add dec daa cmpsl cs adc out mov xchg mov push dec (bad) data16 std mov sub out xor push and and ret xor jmp shrl lods ljmp mov mov cs sbb outsl aad and enter aad cmp fcmovb xchg push push fstps cli dec cmp (bad) stc and jg addr16 fisttpll inc aas mov jb mov push jl dec push das xchg pop outsl mov pop lds (bad) out jle popa sub dec loop aaa push lahf in cmc mov daa insl (bad) leave xor lret in cmp xchg mov jmp in aaa mov repnz push or jp xchg out dec sbb ds push cmpsb repnz mov mov inc (bad) daa mov sti adc lahf sti das movsl mov in sbb jp xchg and mov mov rorb push daa pop neg mov push jmp lret mov (bad) mov xchg push sbb dec fcoms adc inc inc pop and pop inc xchg addl sarb inc jg add ficompl int movsb xchg sbb insl sbb push arpl insb or je inc sbb dec popf xchg in notl sub push pop fstps popf adc pop push in mov pop xlat cs jbe sahf inc arpl out or popa frstpm(287 mov les dec jecxz hlt or leave into dec jbe sub sbb pop ficomp fsts ret xchg lcall pop les sub inc mov dec cmp cmc jb icebp addr16 (bad) jne ljmp mov dec mov addr16 insl jle out (bad) shrb pop cmp inc mov dec add rdmsr lahf pop ret push (bad) insb pop (bad) fnsave les push xchg xchg (bad) repz popf jp pop in mov jp sub and lds cmp sbb loop mov (bad) (bad) lret mov add jecxz mov mov push jb data16 (bad) cwtl popa dec ret inc xor xchg xor mov add jb jecxz fiadd mov dec jl rolb inc sar push adc je pop ja into mov mov cli stc add dec (bad) push adc (bad) mov pop (bad) push decl cli and jns hlt in sub stos (bad) cli icebp cmp jge push fdivr out icebp xchg mov push sti stos nop sub xor pusha test cmp js pop cmp dec pop test jle out repz xchg arpl and sarl scas leave aam cli lds pop add les in rorb movsl sub mov in stos scas int3 push ds shrb xchg xor jnp or js xchg inc xor or push dec jno mov sbb loope or jl jle push pop je incb sar sub or sahf mov and mov std gs icebp test rcr clc hlt mov js mov daa test sbb jne stos dec mov sarl mov mov mov push gs dec pusha xor test sbb clc jb pop pushf mov cmp pop dec xor inc push inc out fsubp in mov adc neg or push cmc imul adc iret mov and rcl push (bad) push or sub loopne (bad) rorl stos in (bad) clc in adc insb fst addr16 test lock cld xchg mov mov inc sub and test sarl cmp into and pop repnz fldenv pop imul aam pop loope test push andl aad imul jmp rcrb ljmp inc and add loopne lods fs cmp mov incl xchg push mov mov sbb fisubl ja test adc sub mov mov dec xchg test push xchg jp push leave add loope insb jbe and xor sub rcll inc mov sub xor and adc xchg mov jb in call mov cmp movsl sbb mov sbb inc push ret fwait mov fcomi dec rorl js repnz sbb daa in inc push xor inc imul fldenv adc mov adc loope loop out dec imul jo call xor xchg sbb dec lret and test in add adc outsb lods ss data16 or pop (bad) dec lods mov stc xor cmp fnop das adc (bad) xor fwait jmp adc gs jg js ret xchg rolb pop add pop jp inc aam adc xchg pop ficoml sbb cs mov inc daa gs xchg in call popf (bad) loop dec fimull or jb loop out dec cld push or inc xchg or bound into cmp and pop arpl cld push push mov popa sbb (bad) out dec js fwait pop inc fwait xor repz inc aam shll inc lahf imull (bad) outsb jo adc mov push leave and cld insb ret xchg adc fwait adc imul inc sarb ret lds and imul sbb (bad) divb rclb mov push add sub insl adc xchg xchg pusha xor xchg xor pop sahf das inc mov xor je rcr jno shrb adc bound in xor adc or aam fdivl fcomi gs out or jbe rcrb pop sbb push je out jbe push jnp fdivrp les inc cli jns cltd lahf push pushf or pop (bad) enter inc dec test sbbl dec xor cmp and lret lods mov or push pushf movsb aam fldcw push dec mov mov dec repz ds mov sbb sbb and add test cld push add cmovnp jg inc aad jg mov je adc jbe lahf mov mulb test sbb pop push lret int3 movsl flds push pop ja sub negl leave lret cli sub js sti adc sahf shll movsb xchg xor jl shll rorl dec adc enter dec fcomps jg sub mov and iret sbb out inc das push popa sti cmp mov add xor call popa test dec lods mov mov xchg dec (bad) mov inc xor xchg push int (bad) aaa jne mov mov clc mov in lods push lds push into nop push arpl sbb fcmovnbe xchg test pop mov daa add or add adc mull inc in mov or push jg mov or cltd lds or lods cmpsb stos je pusha add (bad) dec push jl or inc xor xchg cmp dec pop jle mov cld (bad) or in dec shll movsb mov inc push mov mov xchg notb movsb inc es xchg pop add fsubrs es and xorl cmpsb or leave fs sbb cmpl lods mov push sbb push cmpl xor push pop ss int3 pop daa fidivrl sub sbb and in adc daa gs test dec xor aam fabs js imul sarl or stc sub ljmp rcl jmp sbb adc jae negb orb lock mov mov and jno add addr16 mov popa mov pop ss add (bad) jns pusha je xor jno,pn pop out outsl fsubl pusha jno repnz (bad) jmp testb shlb fcmovbe scas dec js loop ljmp stos mov ret mov dec stos dec repnz inc or pop in fistpl pop inc cs out leave and imulb sahf test cmp push stos outsb sarl push loope sbb js fwait sbb pop or lcall outsl dec add inc cmpl sti adc daa jle mov in xor in xor mov jbe mov adc lock jl nop js fstl stc daa jg mov stos mov popa xor fucomip std ret jne (bad) sbb mov jge aaa mov popf cmc leave cmp std sbb (bad) pop mov pop push insl (bad) cmp cwtl loopne mov or xchg (bad) or jns pop sti sbb fnstcw xor add jnp insl xor or xor cmp mulb xchg push dec (bad) sub and adc push mov ficoml pop push decb rorl dec jo out test xor ljmp ret xchg popf xorb push into sahf mov pushf and adc cmp flds jns outsb cmp gs sbb sub lcall cwtl outsb das xchg pop cwtl mov mov jle push stos sbb into mov xor and in lcall dec cmp mov repnz mov fcomps in sub lret fnstsw daa ja daa pop and pop test fisub push dec out jnp popa lret jmp (bad) dec fimull fucomip pop push bound test mov (bad) inc mov (bad) sbb and jg adc int cmpsb cmp fwait pop imul push pushf push mov add or call push lcall xchg (bad) ljmp gs cmp adc or pop pop cmp mov lahf add and jne in stos je test mov fwait sbb add fistl stc jno dec (bad) add ror or mov std jne pop dec decl vmwrite ja das mov pop scas stos push dec int mov jne aam es sub cmc mov test cwtl mov in iret and insb popf jb sub or mov scas std and subl cli cmp js mov bound push sbb mov ret xor js scas sbb jbe add jne or pop push or iret dec mov mov jmp jl cmp cmp in lds mov les pusha pushf nop ffree scas inc aad xchg adc je pop pop dec decl loop popf lods xor stos cwtl push or and in mov (bad) fcomip jecxz je sub (bad) out cs mov stos idivb or ljmp cmp xchg xor xchg test adc seto (bad) (bad) outsb or mov jne xor xchg lds ret add xchg push fisub lods hlt (bad) fildl fidivrl les pop mov cmp in imul jmp mov ret pop mov pop inc and sbb fild mov mov decl or enter movsb ss or dec pop stc xchg call add ljmp jb outsl scas adc dec adc push addl fmull shr push sub insb out xchg scas adc mov dec sti (bad) mov rcll inc daa clc and test cltd rcll mov cwtl sub popf sbb dec icebp jnp mov (bad) cmp mov cmp push mov xchg negl hlt mov js (bad) adc in mov pushf jge daa dec xchg add inc push in mov dec int aam add mov scas addb popa pop cmp dec and mov lea xchg (bad) or clc jb add sti dec pop jg mov cwtl jo rolb pop sbb push sahf popf call loope addr16 or mov in adc mov add mov jg inc (bad) sti scas cmp xor mov sub (bad) cs int3 xor pop fisubrl jecxz lret jne mov call or pushf adc daa std xor (bad) xor fldt lea fsts cmp ljmp orl and push xor lods ds or loop cmovae rcrl mov or das xor cld mull cmp mov icebp fildll xor push dec (bad) ss out sub popa flds cmpsb mov or cli xor cmp inc dec mul (bad) push sub pop pop insl in sarb fimull iret lret inc lret cmpsb rol sub cld pop inc push js pop add daa pusha rcl ds popa out pop adc bswap jmp mov out sub mov ret test sbb sub dec aas fldenv dec loopne jno push jecxz (bad) hlt arpl faddl xor fiaddl mov xlat dec mov mov or adc pop (bad) mov adc adc pop jmp mov les cmp jle cmc dec mov jge cmp xchg insl js sub out push mov inc jne lea ss sub pushf pop mov sub or or cld roll mov mov popa sahf jp xor mov stos clc mov imul push lods aaa in imul lret sbb in sub mov pop lds inc push or scas mov into test sahf jmp pop fistl inc (bad) sbb ror xchg shrb and lret push (bad) jno and jbe xchg cmp mov movsl jp cmp movsb dec je int3 dec inc orb sub push in cltd inc cwtl mov pop lods lret sarb jb shlb mov stos mov or pop std jns mov aam inc daa fnstenv ret lret into jecxz sub insb fptan out or push mov (bad) inc adc sbb sub jns jne jae fimull icebp mov mov cmp jmp loopne mov inc mov inc (bad) pop add jecxz xchg roll or repnz mov imul movsb sti xor jae loop adc mov lock mov (bad) pop inc xchg push sub inc leave jns mov (bad) mov sub pushf (bad) inc nop fwait xchg push std xchg adc mov xor sbb mov pop insl inc cs insb jno xor pop ja and lret mov lahf pop cmpsb aas cmpsb sbb leave mov imul jge popa push push cmpsb mov xchg outsl mov sub cmpsb mov bound jmp push dec stc push aam adc lods mov fs lds cmp dec inc stc dec ja inc call shl insl aad add and dec aas push in cli xchg push dec enter jmp les loope dec jb push mov jb loopne push xor arpl das xchg into int3 inc xor push addr16 jbe,pt mov fstps jae mov sub mov ds jp mov ret ss movsb add outsb stc mov xor rorb mov repz inc add inc (bad) sbb popf mull aas lods push lock cmp push sbb lods ret stos push cwtl mov (bad) roll test aam int3 sub int sahf cs popa pusha out cmp ret nop cmp fsubrl mov cmc cmpsl or pop imul xchg daa test icebp cmp cmc sbb xchg clc sbb (bad) fwait add push rcl in fnstenv call pop lods imul popf mov dec pop pop cmp es sub stos cmpsb push ret mov dec je dec pop test outsl enter pop cmpsb cwtl mov lods adcl fsubl sub mov mov int js stc std sbb jge iret adc jmp roll push movsl mov inc enter inc movsl data16 mov xor mov pop movsb sbb jnp and sbb pusha fwait mov mov and das dec cmp xor iret sub and push test mov jl mov jmp push cli or adc daa mov pop inc aaa pushf pop jae xor movsb adc lock enter mov pop jb das jecxz push inc jl cld clc lret jle ret push inc cltd aad mov (bad) (bad) outsl lods test mov mov and mov push cmpsl push xchg mov fwait je mov sarb jle xchg mov (bad) dec fimul fnsetpm(287 or dec stos sti js inc stc dec scas pop movsb mov stos imul mov jno insl aaa jle inc xchg mov xchg aam int or jle mov cmpsb sbb leave mov lahf jne inc leave cmp add lahf incl pop xchg jb pop iret sub mov fist or xor adc inc jae pushf cmc (bad) lcall (bad) lea or aad jl fdivl sbb mov dec xor inc ret pmullw repnz scas sub (bad) loop dec outsl jge adc repz cli xchg std cli jns pop idivb jg (bad) es sub jle cwtl es out xchg lret sub fwait aaa jg mov inc hlt jmp test icebp mov ds jecxz jnp mov enter push xor sarl in pushl cmp (bad) jns bound mov dec scas mul lahf pop and mov mov jb sbb js daa daa fdivs loopne adc jb imul xor mov cmpsb inc outsl jns sarb jmp inc dec sti popa jb lds rclb jle fidiv xchg add mov inc fs mov sbb loop shlb fadds enter out es or out sub imul mov mov lods add iret xor ja or push dec push scas outsl dec dec sub jge cli imul lods rclb mov in sbb int3 mov mov rclb xchg into or scas test inc test rorb sti push es inc or ret mov ficom bnd cmc mov mov add fs push movsb fldl in fsubs idivl popf test mov in repz fsts popf lds xchg sub fnstsw xchg jecxz shll inc call push push mov jmp and cmp xchg aas cmp push adc rorl cltd sbb jle mov (bad) xchg jae xor mov (bad) int3 sbbl xor jg stos and inc stos mov mov movsl inc adc sti icebp (bad) mov into cmp ficoml enter hlt sbb sbb sub push mov adcb movsl pop repz into xchg sub pop cmp sbb div add push push xchg int xor loopne outsb icebp push nop cmp cltd adc pushf jle add mov imul cmc int3 xor adc rol sub mov adc sub add push cmp sub mov rcr or dec lret adc shlb (bad) push enter test jns push adc lock xor sbb cmpsl cmp mov je in jnp nop adc and icebp cmp sbb lea pop push out jmp add out and addr16 sub jb cmp out lods sbb push sbb xchg in test push and aam inc out das xchg lea rcll cmc xor sbb mov adc jb inc ljmp (bad) pushl ds xchg dec and push ret or (bad) int movsb or es nop lds fsubr cli mov es sahf bnd out sub testl pop mov in shrl sub xchg xchg xlat out adc mov bound jno pop and enter lcall jg xorl mov jg lods adc jecxz enter mov cmc pusha sbb or lods pop shrl mov add mov faddp (bad) aaa pusha movsb lret in popf inc call fwait sub push int push mov adc mov pushf cltd dec or lods jnp pop jno push (bad) int stos inc sub pop roll sbb xchg lock pop pop and push int3 or repnz pop out cmp mov popf notb inc gs and jb das aaa bound mov cmp (bad) jge rclb pop xchg leave aas xchg adc pop and cmp xor mov push pop dec pop mov cli inc fmul fildll out xor jae add mov cpuid dec or mov dec fdiv rcl loop mov xchg test (bad) subl xchg cmpsb movsl out mov jl js pop dec aas sbb push jbe and add lock xchg jmp mov add adc jns or imul push scas dec cld insb jns (bad) (bad) call or addr16 clc lods idivl icebp ss cmpsl xor jae sbb ljmp xchg xor xor pop pop je push push mov pop cmp addl cmp cmpsb arpl and jo fnstcw and add insb dec jne std adc pop dec mov scas std sbb push jp inc sub xor imul ret icebp sbbl ljmp dec xor cltd insb popa dec cmpsb sub xchg pop mov xor gs mov pusha cmpl xchg xchg in sub push sti in pop nop cmpsb adc popf movsw lret dec aad in loope xor repz rclb mov ret fbstp rolb xchg data16 ret in cmc adc rcll gs loop add cmpsb jno push sbb add pusha xor ja pop insb icebp mov shrl shlb rcrl or and mov jno out add sbb mov cmpsl jecxz or mov cmpsl andb pop jg imul leave imul dec test lret xchg add and daa push and xchg shll out stos dec pop out mov rorl add push test cmc call mov adc mov ret mov jbe xchg sbb sub leave out jmp ret int lds sbb mov lods jle inc mov xor cltd outsb xchg js std jne insl aad sub jo repz fidivr test or add fild lods jb jae sbb mov add lock lea mov push repz (bad) into or pusha mov sub repnz sbb mov out sti sbb push jns or nop clc sub lock push fnstsw jnp call (bad) in pop (bad) pushf repnz dec mov test xchg int3 and xchg rolb lahf loop pushf cmp int fidivrl mov into popa and fsub jge hlt fistpl inc movsb add fstpl imul les pop cmp dec push xlat inc mov sub (bad) (bad) jnp push jns pop sbb or ss sahf int (bad) sbb nop (bad) mov (bad) popa stc push inc mov stos xor lahf jnp xor in in mov arpl test (bad) mov xchg add (bad) adc fwait xchg push and xchg (bad) adc sub (bad) mov push or xchg test insl fidiv push shlb mov sbb mov dec test cmpsl push aaa popf jle std sub cwtl (bad) cmp (bad) frstor add jmp lret (bad) (bad) popf outsl rclb les int3 enter pop pushf shll movsl cmp dec cmpsb loop cmp imul out xchg mov mov dec inc sub jo aaa lcall pop scas push mov push xlat mov sti mov pop push imul cld cmpsb sub inc mov mov jmp imul ds (bad) cmc fs jne push xchg mov inc fs or xor sarb pop mov mov daa insb jb js cmp cmp sub jge les lret or int mov jnp jbe lock pop pop in js jae lret addr16 fdivrs imul pop cltd xchg or and or mov mov cmp in ret dec xchg and mov mov std maxps lds mov mov pop jl stos or ja sbb in inc pop xchg or outsb and test push daa dec fsub mov pop mov popa rolb mov cmpsl inc imul add movsl les fist pusha fstl sub es scas cmpl cmp or mov rol addr16 arpl clc enter (bad) movsb add pop mov imul mov gs addr16 xor mov fist out std aam iret mov jnp and lcall and push cld xchg cmp clc test clc clc fstl xchg int3 (bad) jp mov iret pop dec test xchg aad repnz inc sbb std lret cmpsb xchg cmp out jns daa ficom aas push inc sub push aaa xor ss in push stc add gs or not xor xor adc test inc cwtl popf or push iret xor sbb mov jle ja fdivrs in loopne push push das dec pop lret pusha outsl mov pop into clc xchg jge mov sbb addr16 sbb notb dec pushf jecxz mov gs mov mov jb push test popa rcl decb das (bad) jne shrl push jp push sub push fs scas rclb pop pop jl out lock ret or aad lock xchg and and outsb mov mov hlt enter ret push cmc sbb aam or aad bound int sub (bad) mov ja nop mov xor push dec mov adc nop adc fwait xor add and insl cld lret lods mov dec pop mov adc sub test fstp push ror inc jle mov orl add test adc dec xor notb or out hlt outsl lea and jl aas mov or and and cld cmpsl pop lahf xchg pop push sub dec push faddl (bad) ss into push cs fstpl repz cmp test sub push repnz sbb (bad) push mov pop adc pop cmp mov in push mov in notb xchg adc mov xchg cmpsb outsb jl pause lret xor clc add pop jns mov push scas imul add cld add lret out fwait pusha push nop ja jg xchg nop xchg loopne push mov lods fstl mov cmp mov jae jae jb mov push mov or and fsubrp cli mov mov ja (bad) aaa test imull xchg mov or imul sub loopne ss xor ja shlb mov xor lcall dec repz out jno pushf inc dec add loopne cmc dec pushf outsl inc adc imul mov outsl shll fsubs dec and pop ret cmp fs adc stos (bad) daa (bad) into scas cld jb lret and or std jnp dec (bad) xchg call jmp pop or int3 mov mov sbbb das mov push inc rorb paddw ss out cli lods adc or xor adc or cltd cmp in xor or arpl fs (bad) push inc cmc (bad) fucomi jg mov call fwait jecxz and add in ds outsl pop dec inc fwait lods xchg mov jmp fidivr icebp movb ljmp ja ss test sbb adc sbb (bad) rcrb inc es in jle test in test int daa dec lods sar sti das push inc xchg pop add fs mov adc add sbb pop mov gs sahf adc stos repnz push inc mov dec pop pop pusha int3 inc iret notl hlt rclb mov shlb or jns xor push push cmp cmc out or xor lea xchg mov imul insl sar sarl cltd inc fdivrl sbb xor in adc les xor andb push push mov outsb xor out mov mov testb adc mov mov jne cltd cmp sub inc mov inc add and stos jae test rcl inc in (bad) les test sbb push and sti mov mov xchg or xor pop mov das cmp adc aas jo arpl cmp or jns xor or hlt add jne sbb aam movsb js (bad) cmc arpl sub adc sub mov lahf imul or aad dec clc adc imull aaa add daa ss sub mov sbbl mov test mov sub lods aas cmpsl cmc shrb (bad) mov xchg es xor dec push jl dec pop or loopne shll and cwtl shrb hlt push xchg je repz and add outsb fsubl cmp adc push lcall ja out sub sbb dec cmc mov cmpsl aas jg fldl and mov push lcall push int3 inc in scas jbe or fcmovne sbb inc mov and shlb (bad) shlb popa (bad) stos jnp (bad) lea push decb fld mov insb mov scas mov addr16 xchg lds data16 push mov push hlt mov pushf sbb adc clc adc add popa mov sbb cmpsb test in xorb popf (bad) push into jl mov test cmp push lock test (bad) faddl adc adc mov cmpl dec and dec fimull dec pop add loop in inc sbb jmp cmp jmp mulb pop cmp xlat (bad) fsubp jp xor dec adc outsb cld popl cmc cli (bad) jp mov (bad) cli cmpsb lret (bad) popf inc cmp (bad) mov inc pop lret popa mov push out push orb xchg and lds or cld sbbb sarl sbbb mov xor cwtl adc (bad) xor stos in sub xchg mov adc outsl sub popa ss aaa fwait jg and std pusha xchg iret movsl in sbb lock enter aam (bad) fstpl sti (bad) jno repz mov mov push outsb insl inc inc daa call mov sbbl cld es scas xor adc (bad) add sti pop lods out pop movsb xchg addr16 fidivr insb scas dec xchg ficomp pop mov adc mov xor pop outsl sub sub sub hlt push cmpsl push rcrl add ds mov lcall sub push mov pop mov and push dec sub pop xchg xchg dec pop jno out daa add inc test out gs stc iret sbb ja inc dec fdivrl out fiadd jb clc and aam fildll jg xchg andl dec adc cmp sbb stos xchg inc enter ljmp add je mov mov mov ftst xchg adc or xchg xchg lret imul stos mov ret add iret cltd push sbb stc push aam test add mov push clc add sub je stos or mov aam xlat xor mov cld sub (bad) jg ficomp xchg (bad) nop test outsl sahf xchg aas push fiadd nop jne aam mov or add icebp imul mov add sarb ja popf into jnp push (bad) jb and jle pop int3 clc cld mov ss jne inc or sti test orb (bad) mov push or icebp fisttpll movsb lret push mov jne cmp xchg cmp sarl push addr16 cltd cmp mov rorl rcrl (bad) icebp jnp and mov pop adc xor push dec push inc leave out mov ljmp push fbstp mov into lret ds cmp dec jl (bad) int3 stos test push (bad) cmpl loopne leave add rep shr int3 gs into xchg loopne mov loop imul (bad) ficompl and pop cld je iret lock xchg test insb pop dec sbb sbb jb lds jno jb pusha sbb cmp out pop mov sar aam out inc jo lods icebp mov in inc sub push cwtl sub push pop out jg xlat int3 mov sbb dec push add and adc and rcrl (bad) gs xorl fsts sub dec pop mov out xchg mov pusha mov mov add and popf jge push mov push mov jge es push jbe je push push (bad) jb cltd xchg cmp jg jns and rcrl insb cld push std test rcrl cli out int3 fucomi mov mov push xchg shll in pop pop scas (bad) jno lods fcmovne mov mov in aam cmp push (bad) lret (bad) in aad mov lret in mov and pop xor sub push std int out mov pop push imul sbb repnz das adc xchg js push pop jb lds mov sbb lcall inc std or movsl (bad) ljmp dec jecxz inc jno es lea dec test iret in fadd (bad) cltd popa cmp ret inc test dec in cmc inc test arpl mov dec inc cld xor jb sbb shl inc popf sti or mov and push popa and test rcrb (bad) adc sub es jp mov imul push sbb fidivrl jb (bad) jb sub jo fstpl rcll mov jno add ret pop jge adcl mov je mov dec mov daa push repz jo jno stos push mov jp in enter insl jns hlt or inc int daa push pop inc mov int test adc mov jbe sbb lea inc sub sub hlt push xlat lahf jp pusha (bad) out sti daa pusha rcl (bad) pop stos lds mov mov mov cmpsb add xor and lods sub icebp fldt test adc movsb and mov int jecxz ljmp mov mov dec in mov pop (bad) fstpt movsb pop in test xor lret xlat lret cmp inc add xor and lock daa repnz jmp push mov fbstp in dec in sbb mov test clc mov (bad) inc cmp loope outsb or (bad) repz mov push jl adc or (bad) mov cwtl inc add jmp xchg xchg outsb loop xchg and clc pop push mov popf ja in lods rclb int mov mov les repz ljmp xchg test pop jno sarl div push fldcw cmpsb andl loope mov mov cli lea aas dec sar aas mov pop aam lock mov jg mov push jecxz fs mov hlt shr pop inc fs dec out dec lods sub dec repz aas sbb sub nop inc mov in adcl lods jp out pop outsb loop faddl xchg push xor hlt jp lods mov pop pop movsl xlat jb xor ds lock cmpsl jg pop pop push mov mov dec jge nop lret sbb sbb mov or data16 rclb rcrb test sub or and mov in fs out pop hlt lods repz mov adc xor fwait xchg xor cmp push stos (bad) mov mov jp stos ret pop scas pop shrl dec out mov sahf test std insl inc adc imul add out les movsl negl mov fs lods push pop add into lods add xchg lock aaa fs push lea ss imul pop icebp xchg sbb pop pop clc stos inc ja xchg outsb movsl mov movsl sub jno (bad) int push push and jns push out mov cld and lds mov push add lods pusha clc imul mov xor lret xchg jge jmp sbb (bad) sahf out pop into push add push (bad) aas stos stos xchg cmp call or enter jae push out cld cmp xor test out ficom pusha fstpt pop dec add (bad) pop mov dec stos pop dec sbb dec lret push lret adc pushf jbe inc ss mov cli pop mov xorl mov mov xlat (bad) cld mov xor test sbb ds mov and ljmp pop or or aam lcall inc aaa push imul cld xchg adc leave scas mov hlt or cmp adc in cmc push je mov pop add mov jb ja pusha je and std dec or add mov in arpl insl or sbb xchg mov lock and and ja and lret je,pt adc enter add das (bad) (bad) int3 js xor ljmp ret mov stos mov out mov jle cmp rcrl cmpsl inc dec loop popf mov xchg sbb push rcll add pop add xchg call clc test out shlb add pop aaa sarl hlt mov int into fs cmp hlt jge mov inc pushf xchg mov add (bad) push mov adc dec repz (bad) sbb adc jo ja dec insb mov inc xchg xor pop stc fbld (bad) stos push push jnp rolb cmc mov push cmp int and (bad) cmpsl push jp inc test insb jl (bad) mov sub movsl daa dec hlt pushf jmp imul int (bad) sub adc mov out rcrl xchg xchg mov add cmp ss (bad) xlat sub cmc jno xchg ss jbe and inc mov cmpl loopne scas inc clc fs add jp xchg outsb out aad aam stc dec je clc nop mov aaa lods (bad) or mov je call xor push ja insl jne xchg fimul or stos xor ret sbb lods loopnew movsl cwtl gs ss add or scas mov lcall test fwait lds aas push aam or jmp cmp xchg push sarl test sti add in mov xor loop test imull lret or mov fidivl push test adc popa and orps or inc (bad) mov sub pop xchg sub lods jbe fcoms dec in dec adc mov (bad) std ja cld mov jecxz or gs mov out add xchg enter add and mov add sub xor pop xchg int3 push push and cld and into mov add lahf mov out xchg rcrl or xor cmpsl shlb es lret dec mov out dec cmp aaa xorl dec lea les add sub mov rolb mov js (bad) testb (bad) call cmc fist mov inc xor xchg in movsb lods mov stos add rcll mov dec scas and mov sbb add inc shl fldl in test mov je sub and pop test jbe or jno je xchg arpl cltd incb push cltd xlat arpl jne out xchg scas test pop sbb movsl arpl cli in cmp xchg (bad) pop hlt imull xor push sarb std mov fsubrp cmpsl sub inc push pop ds and sub stc fisub pop xchg and addr16 pop mov xchg stos ret cmp cmp dec icebp mov push and jns sub push pop imulb xor outsb jno movsb adc repnz es jne rcll xchg jae test andb adc or mov sbb movsb jp mov icebp xchg pop fdivrs repz notb sub lahf xor mov xor loope cmp mov add push fisubrl jbe add xor mov sbb pushf data16 cmp (bad) adc hlt imul push and add push mov and cmpsb call cmovle mov adc addr16 inc pop mov jl adc dec mov in loope sub inc adc fmull leave xor or fild xchg pop pop mov fiaddl test cwtl jae sub dec jo pop (bad) cs aaa inc test cwtl popf jp ret scas inc lret and xchg test imul adc mov or mov iret xchg dec ficomp mov ljmp lcall out loop inc and lds pop inc aaa lret jb push push inc mov jle inc xor ja pop push or into ja jae push sbb and cmp out in sub (bad) push je or lds nop test insb or addr16 call xlat sub dec (bad) and sub and mov sbb pop dec sub jnp sbbl sbb mov xchg adc jne rcl iret dec jge shl push and sbbl fstpl in sbb or (bad) push cmp mov mov jl inc mov sub jp loop call xor pushf jne or xor pop clc jb mov iret ficoml inc ljmp sbb pop test dec dec lahf (bad) hlt mov das shlb add lahf add out std cmpsb adc jmp aaa mov cmc xor cmp fwait (bad) xchg cmpsb pop pop inc mov inc les push (bad) addr16 inc or adc sub push into sub bound ja push mov fildll dec add push push in lcall pushl ljmp enter cli cmp cmp mov sbb inc xor cli xchg (bad) lret and dec push and sub inc pop movsb lds push movsl pop lods xchg das xorl aam xor fs mov inc stos ret jns movl mov sbb adc dec shrb fdivl out in sbb in adc outsb sbb in push jo dec arpl out mov xchg push push jno cwtl iret fildll popa dec sub sub lods jnp xchg adc pop mov adc sub (bad) out sbb insb es xchg adc jmp sbb push jg mov xor imul test insb sub rclb add push push cli insl sarb dec repnz jno push mov mov add and inc mov mov dec xor sub int bound mov imul mov xchg loope pop inc jp pop xor aad pop iret fstl xchg lahf inc pop sbb fnsave icebp cmp mov sub pushf jmp (bad) lcall stos ljmp popf push jnp pop (bad) (bad) inc sbb lods enter cmp lcall pushf cmp xchg mov or out jl add fsubl fstl jb mov push or repz test xchg in lods (bad) and lods add lea xor adc cmc fwait clc sub cld or idiv scas in jne (bad) jg pop dec (bad) or rcrb jo push clc xor adc sbb (bad) push push jno imul push xor (bad) loop xchg lea adc ja mov mov cmp ss xchg ljmp jne pop das mov dec xor pop insb dec (bad) xor pop xchg ljmp rorl push das fmul xor xor clc mov adc test out popf xchg out mov out push into pop shll adc or xchg clc adc or bound xor fwait dec push (bad) mov pop pop imul call pextrw loope scas out (bad) clc pop add in gs out subb and inc sarl out pop add jecxz into aam push (bad) js icebp cmc enter fldenv add xor and daa mov lods sahf mov js sbb or add dec in outsl les push cmp aam sub push push adc lcall aaa in setp (bad) icebp mov lds add pop shrl jle sahf cmp jno dec push scas or and inc mov or pushf lahf popf repz dec mov mov push fldenv push mov and dec mov fwait hlt mov mov jno les push fsubr (bad) test xchg nop or sub sub jg mov cmpl test sarl xchg rorl adc or jne mov push and add (bad) mov pop in xlat cmpsl movsb addr16 xchg jmp and mov push int bound rcl xchg cmp mov andb cmpsl incb out sub dec jp bound nop cmc or inc inc (bad) das push or xchg inc sbb xlat cmp inc dec mov lcall and arpl push hlt sarl push mov les stos not push pop pop and sbb jbe incb inc or rorb fnop into fisubr jl jne (bad) fidiv imul sbb xor add dec mov js jb out push xchg pop or pop and ret cmpsl jp xor test xor out pop mov dec push jmp mov inc inc add mov movsb dec dec pushf push icebp adc sub xor mov add mov adc test lds add xchg jge jg cmp sbb and pop enter pop out fs jo xchg inc jle lahf hlt scas mov add or add mov (bad) enter out bound mov aam int and mov inc movsl add push pop cltd fisub jl aam inc push push stos std push (bad) jno iret sbb sbbl dec push jp nop push sbb xor dec bound sub xor fs xor and cltd mov cmp xor lahf fild scas imul xor pushl push push sbb pop xchg sbbb daa and mov in xchg jl pop dec xchg sbb mov ret or aam aad push js in adc sbb push pop aam test sbb inc iret pop mov test (bad) cmc enter or push pop mov mov in pop push jae adcl push push pop mov cmovs or imul cmc cmpsb ret jae pop xchg loopne hlt sbb adc or or cld sbb mov insl mov es cmpsl jne dec dec repz mov inc mov repnz jl rorl mov mov sub cli idivb les cltd addr16 jnp mov shll or dec push pop lcall mov fildl clc test jge popf negb mov pusha pop test mov rclb nop outsl fcoml in dec test mov dec iret push cmp sbb push xchg cmp jl,pt dec ljmp lcall mov cmp les dec ftst pop fwait jne pop pop pop inc jne inc stc jecxz xchg shrl (bad) (bad) pop or ret mov inc mov daa cld xchg not or mov sbb inc mov push jb dec pop mov rclb lahf hlt adc push lcall lret add (bad) mov mov inc cld adc mov xchg ss dec inc xchg mov mov xor les out push push dec sub pop (bad) xor inc iret cmp pop in adc gs push daa scas xchg xchg les adc push pop pop loop sub or and hlt andl lahf imul pop ret ja adc jns or push in pushf adc jp je aas aam push out dec (bad) icebp pop (bad) and mov sbb and sub lret push and jne fimul sub xlat in bound out imul adc dec xor cmc cltd sub inc roll ret outsb sub mov pop lea push xor in orl and cld sbb mov inc push gs mov (bad) lret add pop and daa aas cmp mov mov sbb mov dec jno ret add imul icebp fidivrl mov fcmove push add lods gs jns in dec jbe hlt (bad) mov push rclb jecxz dec mov push sbb iret dec and inc add push sub cltd xor repz fs out or mov aad cmp xchg mov xchg test rorl adcl jecxz dec xchg fdivp lods cli fildll adc and pushf jge js push push jne xchg popf inc mov popa xor xchg jle jge push dec stos xchg leave add jo clc (bad) ret sarb insb sbb scas imul push aaa out scas xor repz pop in cltd sbb in pop gs (bad) xchg test inc out cmp inc jns mov dec cltd push shlb roll lods xchg or xchg ljmp mov dec adc dec icebp push jle sub pusha (bad) rclb mov fcmovu (bad) aam xchg (bad) sub enter movb xchg (bad) repz call addr16 adc mov inc jno insl jmp pop dec fldenv fcompl idivb (bad) xor clc call jmp inc (bad) or das shrb push xor mov iret loopne pop stc cmpsl jb mov mov jp outsl nop and xchg bnd push outsb mov jae push mov add jge arpl pop iret ljmp adc rcl jge ret mov inc add lock mov jg repz cmp sahf or push insb sub repnz add movsb mov push jae mov and mov add nop rcl imul mov lock and hlt ja std dec or mov push test cld test xlat stc js push push push int3 and sbb inc addb cmp mov sti (bad) fidivr lahf faddl cwtl fcmovu loopne cmp xor or addr16 pop or xchg daa int3 popf pop jmp sub sahf or mov in flds imul or adc ja cmp in lea repnz push arpl xchg dec mov into addr16 test js cmp add jp jb pushf mov cmp lahf sahf aaa sahf in (bad) das insb mov add mov push dec pop fdivrl jmp mov xchg scas adc loop add pusha repnz aam insb push mov xchg cltd cmpsl jbe sbb pop stos (bad) xchg out (bad) adc out test aam mov xchg pop leave add jg std push ss mov bnd xchg andl mov sbb cmpl mov psubq jb shrb pusha sbb mov mov cmp lds jae,pn inc inc cmc (bad) add xor pop jmp mov lds fwait jo pop jb xlat lods ds adc jnp fistpl mov cmc dec sbb mov cmp mov gs (bad) lret xor dec jb rolb ljmp stos fs mov jg daa or dec mov mov push js mov stc xchg xchg pop jo push adcl xchg ja rorl in popf jle inc in or dec jmp je ljmp fimul dec addr16 repz sbb cmp loope jb scas dec xchg adc dec mov sti lock into push (bad) sbb icebp lods cwtl pop jecxz ss andl aas loop loope push stos xchg iret test jge,pn jecxz dec or gs cmp xchg xchg or xchg sub or gs sbb repz jbe cld repnz inc xor xor mov (bad) hlt sbb test flds lods out jbe out stos pop xchg sub xchg mov cmp movsl pop (bad) mov in jle jno cmpsl pop sbb cli cwtl fs outsb nop test (bad) pop fstpt xor mov ljmp rorb mov pop mov addr16 jl arpl ror sub sbb mov or sbb leave inc (bad) ret mov scas or jne out iret cmp push (bad) dec push lcall xchg add loope pop pusha sti mov pop mov int3 jmp sub mov mov loope nop cltd or inc iret movsl xchg arpl dec mov clc andl lods into repnz (bad) cli adc sub and cmp xchg inc jmp aad pop call cld mov cld je sahf pop jle mov lret bsf jb std or imul test pop data16 scas pop xchg add pcmpgtb in out push lret or cs mov add inc mov sub in xor lret repz cmp lods pop (bad) and jmp or addr16 pushf sahf dec pop jmp and shrl fnstcw sbb lret and and fwait popf mov push jnp scas scas lret mov (bad) imul data16 sbb pop inc into xor or xchg icebp and inc les dec xor mov mov jle rolb insl add test inc inc inc aad outsb sti inc out lahf xor inc int3 scas dec push or (bad) cltd cmp popf sub sbb xchg sarb and pop lcall adc pusha mov xchg scas cmc jecxz outsb mov sub push sub (bad) cmp mov add insb jo xchg cmp outsl mov in into jo aam loop mov or repnz adc int cmp sbb inc test shl jbe loopne mov xchg mov and pop (bad) (bad) sbb orl enter mov (bad) mov jno ss icebp pop mov jnp mov or mov mov push das dec xor pop std pop sub sbb clc (bad) ss fisubl outsl add mov mov mov ret xchg push jmp mov dec push out lods arpl (bad) push cmp fstps movsl sahf mov imul leave lret pusha in (bad) push jb jg pop enter in out enter sbb (bad) movsl jae sub mov jecxz imul xchg pop scas adc inc int arpl xchg xchg mov pop push or adc xor sahf out sbb das pop push insb jo (bad) aas push in sub jle pop xor mov xchg stc jns stos pop pushf (bad) cmpsb es fidiv cmp pop sub jae jb shll insl cltd unpckhps out into mov dec ja adc ljmp fwait xor lods call and add pop lea adc sahf push and xchg cmp adc (bad) hlt push addr16 sub adc lret dec dec or dec inc loope cmc nop roll sub movsl lods dec mov out mov movsl cmpsl out iret xchg cs in fisttp aam sti xchg (bad) fstpt fidivrl push mov or or bound and pop sti push or or add sbb pop sub (bad) cltd pop mov inc and nop lcall mov mov xlat call repnz in cli jecxz mov xchg std int3 fsubl out call pop fildl pop inc movsb push mov scas js xchg inc int loopne iret ret in push pop and xor mov sub test stos adc (bad) cmp sbb fnstsw in cld mov inc or ja lahf jae fcmovb xchg inc (bad) repz sarl lock fisubl adc fdiv pop faddl xchg repz fmull push dec test sbb (bad) mov mov ret ss lock push stc repnz jmp add jp xchg add xchg cmp jle out ss (bad) xchg push inc leave int lock out mov sub fdivs lds mov xor in fdivl out mov cmpsb fs (bad) stos (bad) lea out mov fsub and out xchg repz inc push imul mov int mov or jo inc je mov xor int3 fwait add div fsubs xor push rorb in mov push jnp stc mov ljmp icebp lea in hlt mov xor pop arpl gs in (bad) jae and mov daa mov stc testb and js push jb les (bad) xchg push stos cs dec mov cvtdq2ps imul adc jl inc popf pop cmp inc scas adc inc mov xchg xchg int3 pop aas adc jns push lods test pop in pop aam daa jl mov mov or rcl jge sub cmp sub push lods add inc xor arpl scas xchg out xor xor jne aam cwtl cmp inc mov pop cwtl cmp jbe mov adc addr16 fisttp mov fs (bad) or cltd ds rorb das jecxz ret das push xor in out mov enter mov (bad) rolb scas ret outsl cmp sbb cmpsb mov (bad) and push sbb push mov bnd adcl cmpsl dec imul pop jo iret dec hlt mov mov inc push push fs clc loop adc das or add leave pop in xchg adc mov shrb dec inc or jae aaa repnz cmc mov scas or jg mov loop enter ja pop jbe jbe stos ret mov or mov sub pop xchg js lock dec aad mov jecxz push cld add push xlat rcrl mov pushl mov add jo fidivl xlat data16 pop pop int les lcall dec daa mov in je insl repnz push into push add lods push in test movsl jmp jg xchg arpl cmp aaa fwait pop cmp into into xchg popl push pop addb in aas jp xor inc pop rcll adc das icebp aam sub mov outsb lret insb jle mov mov mov leave mov daa pop out scas pop insb (bad) insl repz xchg fsubrl sbb inc out insl (bad) mov adc jge mov mov sub ret mov repz sahf add lret lods rcr mov insl inc mov push rolb xor pop or lock test mov (bad) mov dec pop add jmp mov rorb or mov rorb mov add sahf bound rcl (bad) enter es pop xlat in mov pop inc ret mov daa (bad) iret lret test pop mov jecxz sub sub mov push xor jle push iret scas mov orl pop dec xor cmpsl cmp jl mov jp movsb push in mov ret leave sub outsb leave cli push (bad) xchg gs cmpsb fwait add popf popf push push in mov dec mov popa and aam lcall cmpsl sub dec lock out jle jmp jp pop (bad) pop dec popa cmp push xor clc mov and and mov rcll jge xor sbb out or shll jo pop add lcall and cld xor xchg sub push jbe mov xchg jne mov stc cmc jnp js test das and shrb mov jo push adc add mov xor out xor jl sub mov shrl adc jb ret fidivl lret adc popa repnz add std aaa (bad) cmpsb or pop (bad) pusha xor in hlt aaa mov in rol outsl jb cmp lret lret outsl leave cmpsb movsl scas adc loopne lret cmp call inc mov in mov mov stos and xor rolb push dec jle xchg xor mov mov insb pop inc add stos sbb fmull negl and loopne inc inc pop push cmpl test or es pushl sbb jne jbe push insb lods fwait mov inc xor jnp ret ja xchg je push sarl mov and lret fwait stc and xorb jns repnz mov adc ja in add inc fnstcw imul in repz add adc insl pop xchg les negl ret push lods push pop scas or fs hlt mov lret inc jmp cld aaa adc cmp adc jo (bad) adc gs lcall ja sbb xchg lds hlt push or lods dec loop push xor add jns xchg push test int xchg movsl scas push sub dec cltd cmp test jae or xor mov pop adc in cwtl cmpsb inc ret or ss roll out repz shr inc imul cmp (bad) jle loop inc cmpl lret jp add fs int3 add pop outsl lcall jae cmp icebp inc cwtl das imul inc mov xchg aam sarb pop jecxz mov ja roll or addl test adc ds jnp cli xchg fstp loope cmpsl (bad) or dec jle scas adc hlt sub frstor leave and lcall xorl popa out jno xchg or xor movsl fmull fcomps sysexit out push cmp inc test (bad) insb roll inc xor mov and xchg bound xorb dec inc pop xorl adc imul clc lret inc int (bad) clc and lret test dec call loop pmulhw enter in add xchg mov mov fiaddl push pop xor stc addl inc in faddl int3 push push sub jae loop inc sbb or or outsl mov int cltd bound in push mov xchg push cmc loopne sbb xchg test xchg vpand mov aas sti out fwait stos push pop mov add popa mov inc ret in (bad) mov add cmp movsb int mov int3 movsl sahf lock jb bound push mov and leave mov pop ret cmp sub cmp xor and iret push pop dec inc (bad) inc scas aad lret cli in aas fstpl push pop (bad) lea sbb adc xchg outsb dec xlat dec cmp push (bad) loope push insl jl sub sub in mov sbb sarb hlt nop popa outsl test out xlat addr16 sti hlt xchg push add push push lds das es adc mov jbe (bad) repz push mov or imulb jns data16 mov mov fimul outsb mov jbe sub fcompl mov fmull test sbb and or mov (bad) into fwait jo gs outsl std (bad) sbb fidivrl imul lods mov push push mov cmp repz enter mov xchg imul das lods jecxz dec repnz sbb out push or dec (bad) aaa jg incb sub cmp sbb in or enter imul mov adc or jns addr16 inc (bad) mov call repz xor sbb les loop (bad) in dec insb sbb xor mov xchg push int3 test sahf lock mov mov movsb fdivp push and sub pushf mov (bad) mov fdivl mov push jmp outsl mov outsb ljmp lret jle aad and aas sub dec sub lcall out and in pop or mov push mov pop into xlat aad rcll in js adc imul mov pop sub ljmp int3 or ja (bad) adc pop xlat repz lahf pop int mov rolb shll inc and popa mov imull fldcw pushf pop dec and je xor adc add xlat fild pop push mov into fnstenv fwait sub mov push bnd mov jo jmp inc lea gs test sti sbb inc movsl ja fucomip iret (bad) mov pop and cmp sub ljmp sub cmp sub aas pushf sub add addr16 and fs stc xor mov clc pop cld sarb sub mov sub sbb jp int3 xlat or ljmp in push inc repz clc mov loop (bad) test (bad) loop notl jno js rol pop push mov sahf stos cmpl xor mov xor inc outsb cmpsb sbb imul cltd push jg sub rol insb mov movsl inc jmp scas mov inc cwtl hlt xchg inc cmc popf jne cli das mov ja dec scas ljmp sbb lahf pop leave push es je or ret clc pop out daa xlat push xorl (bad) aaa push std fidivrl inc push xor in ds and sbb push std xchg pop fmuls add xorps dec dec notb mov cltd fimul les arpl jnp daa test pushl cmp fs jbe pop ficomp mov sbb (bad) mov cli add imul sahf pop imul fistl aaa lret ret push fidiv pop out iret dec lahf add lret idivl adc cmp nop sti loope je cmp pop decb cmp add dec scas lods pop inc lahf cmp fisttp mov je push xor jns lcall dec mov loope push js shrb fcomip pop in mov mov into xor mov fisubr sub outsl add mov icebp mov adc sbb jns and xor lcall push mov add dec (bad) scas fdivr sti or in data16 xorb les push mov rcrb gs in arpl iret cltd mov inc sbb rcr mov push xchg jb nop sbb add xchg jo out fptan pusha repnz xor movsb pop cs mov jecxz (bad) and lcall ja xchg fnsave xchg cmp push ret and mov movb mov out sti daa dec test insb test xor dec push adc inc lahf sahf xor push cltd dec ret sbb cmc inc xor or xchg insb popf fcmovu (bad) adc rcr cmpsb mov inc repz fwait cli mov jno das out call sbb jecxz lods mov js jnp mull jle xchg xor adc stc (bad) adc (bad) arpl push icebp sub add lret xor push push cli mul jae dec push jmp ljmp mov cmp mov push cltd imul cld (bad) repz mov xor loope pop lret jo mov je cltd push adc pop push xor jl mov lds mov popa mov lahf inc jnp in sub js xchg (bad) cmpsb out mov dec insl fcmovb in fwait lea fnstenv or into into adc cmp push out das xor lahf pushf mov popa insl rclb fnop out sbb dec (bad) fs or and adc mov sahf loopne and rorb push mov sti scas int3 enter test rol pop lret dec mov in jle mul mov (bad) mov sahf ret dec lods inc outsb les pusha push cmpl addl addr16 mov (bad) dec sbb movsb out stc lret cmpb sbb mov sbb sbb sub loope pop fimull mov and leave xlat cmp xor cmp gs pop push (bad) sub into adc mov cmp xchg fnstenv sarl push mov negb test movsb int3 jl and test push adc popf jb xchg stos imul mov jb fs in (bad) enter and hlt push int3 (bad) jno clc pop mov pop daa enter xor mov (bad) repnz xchg push (bad) fwait pop (bad) in mov int3 sub xor add xchg fwait ja sbb aam notl jge into sbb loop jle mov xchg cwtl pop dec mov arpl orl jns sbb push adc loop xor xchg sub mov leave es xor int imul leave pop mov mov mov aad jo test mov mov mov sbb ljmp sub shrb aas and xchg lret lahf push pop sarl in sbb lds add popa aaa je jb push sub adc es sub (bad) rol lahf pop ljmp fldl mov xchg push cmp out adc mov pop fcomi sti out shrl popf pop mov pop and jg clc loope mov insl sub dec cmp jbe xchg dec (bad) les xchg xchg inc mov mov orl or pop pop aad movsb push mov das dec sub fsubl ret push cli xchg add dec and and leave scas adcl pop or in addl mov loop mov loop loopne,pt aas loop push lds dec and push mov pop sbb adc mov ret fldl shlb or pop stos push fimull mov repnz sbb mov xchg je jl rclb pop sbb out jp arpl fiadd and aam mov xlat loop movlps push push dec sbb sbb icebp test xor pop xchg test add jge sbb adc clc call and mov mov mov inc imul js jo and lahf xor mov or cmp je,pt pop sub sbb out lock lods inc stc ret jno ss cmc inc adc mov pop cltd repnz cmp push ljmp aam add sbb xor adc sub sar ja mov es dec mov nop imul jnp hlt mov lds and cmpsb or in loope (bad) dec pop in out fnstcw xchg mov xchg ds enter and mov pop xor dec mov rcl mov adc cld aaa inc fisttp mov jmp clc popf inc and cmp pop shrl jbe stos loop popa cltd or push mov icebp xchg test rcrb sub mov or adc or jne dec mov fdivs es pop mov xchg mov hlt push cli imul out pop cmp sub ljmp adc jmp sub scas sti or push dec frstor xlat mov scas test std data16 inc dec adc mov xchg sbb inc mov pop sahf movsb mov test mov mov scas sub mov lock inc repnz loope cmp fstpt or outsl shll popf inc test adc lret pop cmpl and outsb xlat data16 xlat mov popf jle jbe ret xchg fs jo cmp lea addr16 add pop jae pop bound scas jae mov adc xorl mov ds mov aaa ret fldt test out dec insl dec lods mov faddl pop cmp mov xchg ds stos mov inc pop (bad) mov lea xor mov test les push into cmp outsl leave inc les jno (bad) hlt stos in outsl push mov inc mov jo mov push clc push fcomps fistpll jg jl jl imul pop into xchg cmpsl mov mov cmp or sar nop cwtl fistp lahf mov dec call lret xchg in dec mov call xchg sub and sahf enter aas add mov xor dec pushf rolb pushf jae xchg fiadd sbbl sbb or dec jge sub iret xor adc lret and sbb jno xchg adc and pop xchg (bad) std adc cli mov fsubrl xchg xchg rcl add mov pop lret inc nop test stos cmpsb sbb push idivb fs xor push repz ret das int3 mov xchg repnz mov fs test jge dec (bad) es je out outsb adc shl mov sti fcoms push mov into adc dec cmp mov call sarb iret in add repz jmp sarl or sub jecxz cwtl in sbb test fs outsw out outsl push mov xchg movsb dec xor movsl ljmp lahf lcall jmp or mov (bad) mov mov adc mov int sbb push test sub leave push (bad) fcompl into dec and fucom mov add cmpsb ds sti stos dec ret cmp add sbb lods cmp pop xor xchg gs outsl sub push pop aam out out dec nop mov pop std jae pushf xchg xor mov pop push popa jns aas sarw test lcall jb les add jle mov adcl in mov mov jge leave rorb jnp push cmp pushf mov rcll pop out bound or movsb mov sub pop int mov dec pop scas push cmp test roll je or sbb add sub std lcall cwtl mov cwtl aad xchg push jmp cs (bad) adc fldt outsb xor pop stc stos les adc adc push (bad) jnp mov mov int rorl scas cmp cmpsl jg popf inc add mov mov fwait mov add lea lret lret shr decb inc push mov fcompl sub fcmovu dec rol jmp sub mov cmp aad ret pop out stc push cmp clc jnp sub inc push mov mov mov std inc add fisttpll enter mov adc (bad) shrb push adc dec jno arpl xchg idivl iret pushf imul pop inc jmp add movsb push sbb xor xchg and ficomp or idivl or test fdivs (bad) push orb movsb xor mov mov sub xor jge daa push dec test mov adc pop pop jo push dec data16 in mov mov or aam mov das notl mov sbb xchg (bad) cmp xlat jnp leave jg push addr16 and fdivs mov push inc mov add inc cmp outsb cmp jno adc adc aaa ret cmp adc lret mov mov call mov or xchg or movl cmpsl std or jmp jo dec mov mov mov mov or into pop rclb mov mov mov push mov xor mov sbb int3 leave shr (bad) daa fwait stos jmp aam pop push cmp mov inc out movsb pop jb pushf xchg sbb inc pmuludq push push test pop xchg jge inc aaa jg mov ljmp xchg mov xchg and xor stos mov sub adc and (bad) gs loopne push out cmp jmp mov pop and push adc jb movsl add xor mov loop mov (bad) xor stos test negl lock mov lods or (bad) movsl fistpll daa pop int3 dec gs sahf push pop mov lcall test sarb pop jmp adc test in inc xor xor adcb xchg cmpsl push mov adc mov mov (bad) mov pop cmp shll popl jns adc bound lea imul push pushf stos xor xchg or (bad) sbb out pop jmp xchg decl aaa adc leave adc (bad) ud1 jl ficompl stos add inc jmp lods cltd jg jne pusha (bad) (bad) cmp cmc ds fdivl iret popf movsb adcb adc fdivrs aaa cli or mov cltd xchg test shlb (bad) sbb ljmp adc (bad) fistpll push mov sub cmp gs jnp jnp arpl cmc fs and out sahf jns fldl xchg outsb or stos mov mov lea add les mov loop into adc cmp fwait je out sbb sub dec jmp sub shlb cmpsb xor and jg sbb adc in sbb sbb xor in or inc inc push popf ljmp fiaddl adc mov cmp pop fwait mov mov fnstsw mov int3 jmp mov das cmp jecxz lret sbb mov and lret js (bad) dec jno (bad) jno pop lock add outsb pop xchg scas int call les sub (bad) shrl loope dec add enter dec pop xchg scas mov mov xor mov push dec or mov inc cltd in in mov popf inc adc sub fadd les jecxz adc sub test test daa femms push imul mov ret jecxz sub jns hlt and adc adc es sub add or xlat pop mov leave mov gs shrl pop cmp xor pushf in into mov inc or xor (bad) xlat pop in push jae mov inc rcrb mov scas lret jle xlat cmp nop (bad) clc cmp repnz fwait pop sub clc popa push pop sahf std dec or push fisttp rcrb sub mov sbb rclb jb cmp (bad) scas jnp cmpsl and les daa pop imul pop inc leave cmp lea (bad) dec xchg xor fsubs iret test popa outsb loope jle add pop imul addl xor js jl mov pop leave xor mov push (bad) mov and mov call adc cmc daa ja popl call mov (bad) into lret sarl cs dec out cmp dec in inc movsb sub out outsl neg push jae pop fwait pop xchg stos mov stos fs insl fisubl pop jns pop mov lret jnp inc stos pushf ss push or stc std data16 xchg cmp imul and loope movsl jb (bad) in mov xchg ja movsl cmp add xacquire fisubr (bad) push jb or loop (bad) cli jns lret lret aam popf test inc add into pushf lods fcmovbe negl mov rorb dec mov movsl mov sub out xchg sbb push daa in jle mov jno and push out xchg add sbb je jne push inc rcrb rcrl lods sub cwtl pop divl mov hlt pop mov jnp in ljmp cwtl leave inc xor mov std in push (bad) movsb es lods xor sti aas push dec mov aam aam jp jle ja xchg adc test push add lret sub pop loop dec ret or hlt add (bad) ficoml loope add lock or leave imul popa mov pushf mov inc and lahf and daa mov dec (bad) xchg inc ds in shrl mov adc pop stos xchg das addb lahf (bad) cmc cmpsl js jmp adc push lcall inc mov (bad) lock cmpsl gs sub test inc ljmp lahf pop test sub jle sub test pop in sti gs ljmp leave lahf stc (bad) decb aaa daa xor inc sti iret fcompl insl jns scas xchg xor rol outsb sahf xchg divb dec lds lcall cmp in test imul out gs lds adc xor (bad) out mov imul fnop xor jb loope out mov hlt popf loop shrl sahf iret xchg xchg shr in out popf scas cmp or test cmp in mov popf xchg add jg lahf push shl add ljmp inc fistl or stos cmp mov jo mov (bad) dec mov jge add stos scas push lods aad orps mov cmp mov leave cmp sbb stos jp sbb repz das test pop jae adc fadd add lods pop jge lcall pop sahf fistl js lea adc lds loope pop repz adc dec hlt repnz jecxz pop inc or popf es xor pusha insb or into pop add cwtl cmc xchg ret fild (bad) lods test rcrl lcall mov mov inc xchg xor push or xlat imul cmp cmp out nop ret hlt jnp fisttpl mov inc xor inc out ljmp jb mov sar xchg push fiadd (bad) aaa add mov lods movsl test push outsb or or pop xor cmp sbbl adc inc aas sbb mov mov mov adc ret (bad) pop iret mov push mov popa cltd adc in call push sbb daa and mov test pusha xchg push sub inc faddl pushw pop iret pop dec and aam push lods or mov push or rcl and lret das cmp sbb mov inc lret adc ret jecxz mov (bad) dec pop aas (bad) or divl dec mov mov ret cmp and sbb adc cmpsl inc clc xor cmp rorb sbb pop clc mov in inc cmp sbb mov cmp (bad) out dec aad mov jmp sub cmp subl popa sub std pop push out stos in dec or mov add ljmp cld jnp and add mov aam mov xchg inc inc ret fildl mov or out jg (bad) scas imul cld inc add bound (bad) rcll xor inc mov jecxz (bad) lret popa sbb mov sub or pop fisubrl in mov mov pop dec pop ffree (bad) mov mov dec dec and loope rorl cltd jno stos roll mov pushf enter (bad) (bad) in (bad) into dec dec imul mov add xchg inc xchg jge mov movl jp jne ljmp lahf cmc mov fwait es sarl lahf sub ret mov dec cmovns (bad) in mov pop paddb stos arpl mov aad andb pop adc std ss jo push sbb xor gs xchg fdivrl cmp push cli xor hlt in movsl gs icebp inc fs test push inc inc (bad) (bad) aas out fisub inc aas out xchg loope,pt std jb mov mov enter push mov sub pop or mov inc lcall neg xor pop cmc pop loopne sub dec loope icebp jns test cmp cmp xlat adc insb (bad) hlt mov push cmp xor jae lahf gs test mov sarb cmp dec movsb xchg insb (bad) jp scas jp mov leave aad mov dec gs ljmp mov or lahf cmp mov negl sub jae dec inc addl movsl inc rcrl int movsb push xchg daa add imul lcall mov xchg push sbb mov jge pop dec scas xchg daa xchg push pop pop pop mov out add push ss mov cwtl mov mov popa mov sbb sahf mov ja cmpsb fwait add jp test jl (bad) mov xchg mov outsb into lahf bound cmc outsl je xchg cmp and pop push inc (bad) lret loop adc adc or out cmpsb sbbl leave sarb sbb mov mov xchg or lods jb push dec leave jae fisttpl pop and jmp (bad) (bad) sbb add pop arpl mov andps and das or and xor and xlat outsb aam push jo mov inc mov fldcw mov xor test fs (bad) jne xlat mull sub and cmpl mov inc push sub dec dec pushf mov add dec es loop push cli (bad) cmpsb jno ja mov insl pop xchg sbb shr das cmp enter sbb movl lock xor push sub pop loop (bad) lods fcmovnu push pop mov popa rclb movsb cmp lcall push sbb or call stc orl jae jp push jmp inc or pushf push add inc xor xchg mov or mov repz or adc mov mov jno bound adc xor jbe mov pop fsubp stos lret mov cmp mov jp fwait push pop pop enter push or sbb push inc cmp push mov push sub icebp ret or sbb sub scas popf dec rcr and pushf (bad) leave lcall jge lret stos and xchg lret hlt ljmp sub iret frstor imul dec ret sti lock mov es pushf sbb push std and mov fstpl add add outsb jge stos mov ficoml call jb out sbb (bad) jecxz mov (bad) int test jg test js lahf clc push (bad) stos adc mov out (bad) xchg rcrl stos fwait adcl cmpsb nop ss clc js cmpsb cmp and xchg xchg in add or es mov (bad) sbb stos (bad) sbb cmp es mov jno lods or lret addr16 idivl add sbb jns mov fildll xchg popa stos xchg sub inc stos lret popf jecxz inc mov pop movb jne mov dec inc mov jg insb jae and outsb mov jge (bad) fstpl in bound imul and inc push lods jecxz (bad) in cmp in lahf sti sahf insl mov jb or ror loopne nop jmp cmp cmp xor mov cmp dec and cli cmp pop mov scas (bad) movsb pop cwtl jge xchg icebp pusha cmpsb sbb movsl dec adc lret jmp stos fsubrl push orb divb sub je push pop mov hlt xchg sbb ljmp and push (bad) jmp xchg pop and bound in jae das push mov sub nop leave lods arpl pop xchg lcall mov clc inc rorl and cmpsl pop mov adc cmp sbb sbb ds out repz mov mov jmp sbb out out xlat or adc or xor cs es stc push pop loopne loop cs hlt xchg push idiv or enter push dec in enter outsb ds jl xor cmc xor sbb cs movsl lret dec push outsb xlat xchg pop aad pop flds iretw cmp and inc roll setp subb and mov mov hlt aas ss xor push ds mov sub lahf cmp jno cmc xchg mov pop test mov adc lods loopne outsl xlat xchg lods jb mov ds push sbb push (bad) ss xchg imulb sbb push in leave push outsl mov test mov rcrl sbb cmc popa fiadd outsl mov bound lahf fstl push inc mov dec ja ja jg cld mov pop and push in jo (bad) sub mov or lahf xchg mov lcall je inc cmp negb bound je (bad) lods sub scas or dec push sub jnp sub cmp fwait (bad) mov pop mov imul (bad) cmp dec mov inc outsl sbb jmp sahf mov in sahf mov jg mov and inc and sbb push xchg inc mov rorl loope loope or leave iret sbb stos mov and mov les pop (bad) dec fmuls dec mov lods ss jg sar lods dec push repz adc test pop out in das or frstor imul push andb jbe and xchg mov stos sbb mov mov test jp ffree jg dec stos test pop loopne dec jecxz mov mov and cmp in je mov mov insl outsl pop cmc hlt in jae rcl adc idivl mull mov add sbb pop push in inc mov add rcll mov repnz scas mov cmp ljmp push lds mov dec ljmp or mov clc mov inc out rclb (bad) sub xor lock mov add sub je in inc out and push lock mov sub xchg mov jno std imul sbb addr16 repnz rcl jmp andl sub outsl aam cmp sti lods sbb pop fmuls and aam lcall fcomps or cld and mov or cmp test mov ljmp mov in insb push sub sbb or sbb pop test inc inc push outsb cld or sarb and xor adc rclb inc clc ss pop fiaddl push jb adc and sbb rorl inc jmp fsubs sub roll ljmp popf mov adc cld aas jb loope pop xor (bad) pop jb ss movsb lods inc dec loope mov cltd mov xchg dec subl jno call es and call scas add sub mov int xor and ficompl push pop jne dec fld xor mov dec xchg inc xchg das rolb aad int jge mov add cmp mov mov cmp in aam push js pop mov fnstcw or iret vshufps push mov jecxz (bad) lahf je (bad) out (bad) pushf xchg hlt scas insl inc addb clc imul aam sarb add out mov data16 sbb or dec sbb shll nop les sub pop dec popa icebp sub aas rolb jb push mov xchg pop xchg ds out or add insb jl (bad) cmpsb call mov (bad) mov jp iret xor jne mov mov lea pop imul mov pop outsl cmp out mov dec or add icebp mov adc pop aad push or xchg daa dec xorl ds lret mov test rcll pop daa ds jno test adc and in or arpl inc jno lock (bad) lahf int fistpll mov mov push icebp mov push shrl mov cmpsl push mov adc das adc pop add mov cmp ret and jl sub mov pop addl dec daa jmp mov (bad) mov push xchg xor or test out and mov push in sub stc call adc aas fsubr outsb sub test cli push push and push jg mov inc inc stc inc inc imul fbld inc nop lret (bad) (bad) ljmp fistpll jb pop scas test and into adc fistpl xor rcrb test aas lret sahf js sub xchg jnp inc jne ret or and das call bnd in inc enter xchg movsl insl mov adc sbb push and or out mov add shll lret shlb dec mov inc push leave jo xchg adc into sub fs sub xchg push sbb das dec mov mov xor push cmp (bad) and mov push addr16 hlt imul sbb in ds mov jl push daa or inc outsb (bad) mov fcomps mov inc dec sbb sbb xchg cmp pop mov xor adc imul push mov or out mov das or or pop ror lea mov xor jnp ljmp popa jo push mov scas call iret ret pushf popf mov mov dec jo loop jl loop test enter leave mov mov in adc (bad) jecxz sub xchg inc jbe rcll push cwtl (bad) xor push and pushl pop lea mov jae mov adc lret mov sbb imul outsb xchg sti fidivrl int fsubrl jg add out (bad) repz sbb mov xor add cmp ficomp test push jg jge xorb cmc jo lcall cmp inc pop mov popa dec pop or xlat sub fsubp add (bad) scas das test icebp in into cmp dec add inc sbb mov mov mov adc mov ret enter lea test xchg scas int3 dec (bad) (bad) sub mov clc clc lret rorb dec push add add stc mov insb and and (bad) adc js out push push mov lahf stos xchg fdivrp cmpsl xchg scas mov in sub cmp jo jae jb and jne shld jne adc sub fdivrs pop xlat push pushf loopne mov loop sbb push mov adc pushf sub inc movsl jb in orb cltd xchg mov mov addr16 pop pusha jg dec outsb cmp sarb pop mov cmp icebp cmp dec jno fimull mov lea out ret cmp jle aaa jecxz test jnp pop in hlt jae rorb cmpsb movsb and push pop cli les pop add push lods ljmp stc jb sub cmpsl dec movsl out sub push lea mov fisttp movsl je mov test test dec xchg repnz xchg std mov xchg repz mov sub xchg lods and fnop mov out xor add push mov (bad) out adc pushw push and andl mov cmp pop push cwtl or (bad) jle inc shlb scas mov cli xchg dec mov ficomp test push (bad) jno mov js lods hlt adc mov sub and and and pop push push sbb mov sbb and xchg lcall dec xor pop inc xor xchg scas pop mov repnz out and call mov inc dec div push into pop mov mov dec jp inc jns std mov inc imul jnp fldenv pop add call addr16 popf out adc mov add lcall mov ljmp mov mov fs cmp xchg int3 jg test cmpb aaa (bad) mov movsl roll lahf int3 jg les mov lods loop push mov pop (bad) insb pop xchg std inc pop (bad) movsb mov ds add mov cltd or arpl jmp and sub inc shrb xor ss rorb mov je push xchg ret stc mul cld add jnp aad cld mov ret sub aaa loope sbb inc dec mov mov inc jp jle mov mov (bad) mov mov mov sbb loope shrl xchg sub xchg cli pop xchg (bad) lahf cmp scas cmp dec mov add ljmp add (bad) hlt mov push sbb push add (bad) mov pop sbb pop into pop cmp mov movsl dec cmc cmp cmc lahf (bad) jae imul out cmpsb push and (bad) in jg es jge imul jge outsl fwait nop and clc loope pop pop into (bad) push stos sbb push inc roll add sbb lds xor lcall dec mov cli popa (bad) (bad) adc lods dec inc loope xchg push jb gs ficompl xor cmp aam dec movsl mov mov push sub imul mov xchg ss pop mov out dec push xchg divb mov les jp mov vpslld mov mov jmp (bad) pop cmpsl inc xor je pusha mov dec sub push or mov add mov std and daa mov loope mov imul lea or cmpb cs sub add xlat pop cld mov xchg call sub adc mov mov jnp jle shr mov push pop xchg es push stos mov lahf icebp cli xchg ficompl mov jns add into popa add pop xorl sub mov mov fcomps dec jne mov push (bad) out repnz or aad ret sbb xchg xor mov xchg test mov insb fs out or inc int outsl sarb jle cwtl sbb xorb push fs outsb nop fadds nop in push (bad) jmp jnp inc or pop adc xchg test ret and arpl inc mov inc xchg mov lds lea jmp mov imul mov fwait jno popa mov pop arpl add push mov xor in dec insl cmp xor pop push mov lcall push sbb ljmp jbe jg add mov pop cmp (bad) lock sub sahf ds fcoml iret sbb stc inc sbb sub sbbb aas xchg push dec push dec pop mov aam mov jno in sbb jmp repz shll cmp mov xchg jge adc mov scas add and push xorb mov xchg test push mov sti icebp lds hlt lds mov scas aas or scas cmp loopne out stc loopw (bad) movb das mov adc sub xchg or popa lods das push dec js cmpsl repz lods dec adc xchg fwait xchg xchg or cmpsb pop iret pop dec dec dec scas aaa aaa cmp push push mov sahf push pop outsb inc fild push rolb or jg clc inc jns push rcr (bad) (bad) roll icebp stc sub inc int3 inc mov push dec popf dec pop pop or ss test fcmovne stos hlt out ljmp fwait push xor push leave out adc xchg xchg sub mov jne loope cltd lcall mov enter movsb mov adc sbb mov mov fiadd (bad) jbe out cmp repnz cwtl addr16 or xchg std ret push mov rclb (bad) mov shrl jp fisubrl pop push add mov cmpsl fwait loopne jg std xor sbb jmp cmp push insl iret into mov into sahf daa pusha nop (bad) sub sar (bad) lahf mov lock std cmpsl jecxz clc sub jnp fistl push inc pushf out gs sub out movsl xor mov xlat cmp lea stos out insb insl popf push lahf jg cmp and inc fmuls movsl (bad) flds sbb lahf into jg mov push (bad) test scas dec xor cmp pop jb xchg mov (bad) (bad) push sbb gs out jns aaa les sti (bad) cmp jecxz popf xor xor cltd and xchg add or sbb or or mov movsb stos es mov pop sbb mov cli jbe push das pop pop jecxz (bad) add lock rorl ds jp bound fiaddl push mov xchg dec sbb xlat test pusha xchg adc mov pop dec flds (bad) ficompl and push cwtl mov push or cmp insl jb jge pushw xor loop into aam push mov out jle inc jbe xchg cmp lret into xchg lahf sbb xchg mov jo pop dec mov push rorb dec push pop add in (bad) imul arpl call mov push add push cltd and mov xchg push inc pushf sbb arpl addr16 shl push push test (bad) maxps cmovp xchg fsubs or jb lods sbb out fiaddl and mov push daa push mov mov sbb and adc lock test rcrb outsl and mov cmpsb push lea int3 gs mov insb push mov or push adc (bad) std enter dec arpl out dec insl hlt pop adc jb loope sbbl dec or push (bad) std or mov (bad) xor mov ret xchg pop nop sbb sub mov or pop mov xor add (bad) or jb bound stos pop push cmpsl gs or insb cmc push mov jge push insb mov cmp call jg push rcr xor jl dec repnz or adc insb mov mov loopne dec dec iret mov xchg mov aad fstpl call (bad) cld out nop outsb js add inc sbb (bad) lock (bad) arpl imul mov pop or (bad) dec dec pop jb xchg push mov aam je gs ret or cltd pop cmp lock in xor push mov int3 bound dec and (bad) xchg sbb mov mov dec adc divl push outsl into push adc fs and pop push js jmp fstps call xor mov cld adc or bound data16 pop mov mov inc into push movsb mov (bad) jge or lahf lret bound mov movsl xor stos sub and sbb je sarl (bad) test xchg inc pop cmp and inc ret imul jmp push idivb out mov sbb or dec enter inc (bad) repz scas inc loop popa sar mov scas mov adc push xor jle popa or rol mov lcall sub lea jge ret jae scas int3 les rcrl pop mov rol in add pop mov cld js dec gs pop mov adc lret or shrb repz shl imul push push aam xchg xchg lahf sti sahf dec mov inc je adc jbe mov mov or sub mov dec shrb jg xchg dec push adc adc push gs js hlt (bad) pop pop into cmp inc inc cwtl mov mov test aad ret mov inc jge sahf jno cli hlt aad out rorb xor cmp dec inc popa int mov cmpsl inc mov xor adc loope push and sbb call sub test add (bad) mov adc loopne pop lds pop sbb push imul movsb adc (bad) mov mov in and je mov mov and adc adc dec push lahf scas cli pop dec cmp notb shrl (bad) or cmp cmpsb scas idivl inc cs pusha lahf lods in test xchg mov push fsubl popa (bad) sbb dec add daa leave das inc movsb sub jmp mov test and push jecxz (bad) daa push cmp cmp lea mov test adc ret pushf loopne fidivrl (bad) iret and cmp mov test push mov xchg sub rol cmc es stos movsl or adc xchg lret ja cmpl pop xor popf xor push pop movl xor cmpsb icebp mull mov faddl add jmp mov inc push shrb insb js call inc push mov fstpl mov scas out adc (bad) in xor je xchg jbe dec pop outsl insb lods and inc enter fsubrl cmpsl pop scas pop or dec std mov mov cmp (bad) sbb ret sbb xchg or adc addr16 and fisubrl mov imul xor hlt ljmp xchg daa scas lret lock enter in cwtl dec dec push leave popa dec sub and (bad) jmp int3 dec fcomps lods fistl bound mov jg cld scas pushf jle in pushf std or or dec shrb cli repz or aad inc inc inc dec add (bad) push pop scas add test jle and lahf sbb jle out push arpl test sbb sub xor adc and inc adc insl in xor ja scas lods data16 adc mov dec jl stos bound xchg mov test loop jp movsb ficomp fcoms hlt adc or push pop xchg mov pop fildl xchg mov xchg mov sub out push aaa push push jl xchg pusha jl pop scas test pop mov add mov xchg aaa out add sbb repz pop insb rcrb inc out mov fcoms sub push pop pop pop mov fiadd inc (bad) cmp cmp (bad) rcrl mov and lods push jb,pt sub fisubl push cmp lods sbb rcll in ret jge cld pusha loopne mov popa xchg in push ret xor sbb pop mov shll jno sub aad int rclb js imul dec std ljmp ja cmp fnstsw (bad) sbb or popa mov sub cmp out mov gs push test lcall dec xchg scas xchg or xchg push xchg (bad) lret cmp xor ss (bad) lret jnp sbb inc sbb movsl enter xchg ret rolb push clc stos out ja jno and jns gs adc outsb push mov notl add int test mov addr16 pushw imul fstpl jmp add aas not cmp or imul clc iret das mov pop and insb or testb sub mov xchg xchg rcr sub stos jle jmp shlb pop (bad) lock and into andl sbb es and cwtl xchg dec cmp mov inc fidivl and push cmp add add mov mov pop and int3 dec imul stos xchg lds arpl mov lahf push push idivb jnp bound or mov into pop mov fisubl and push dec xchg add stc jns repz call pop pop xchg out jp mov aam push sbb mov inc addb dec or mov std xor icebp cmpsl or in mov ljmp mov mov aas and addl sub add nop cli xor imul push mov and push dec or add mov and leave outsb sub addr16 sahf lret jo cmp and or pop mov add mov test cmp cmp ja stc push ret lret jge add jno orl movsl inc or mov lock mov lods mov int3 movsl rcrl sarb jmp dec outsb push fisubr mov and nop pushf or adc scas mov sub jae mov lock pop mov daa aaa xchg add nop cmpsb cli test xchg jb imul clc pushl ret mov add lret scas es mov push cmp insb call pop xor stc xorb sub mov mov fwait mov mov int3 pop dec sub jecxz xchg pop jnp xor push dec lods xchg icebp xor dec inc xchg push and push stc lds ljmp (bad) push scas outsb mov jp xchg mov imul jbe (bad) into pusha cmp jbe jl aam out xor enter pushf pop sub ds xor push or adc dec cs fistpl mov pop or pop inc hlt and rclb lret cmp loope int3 push mov jecxz sarl movsb cmp mov psrld xchg cmp pop fistp add out pop cs jo stos ficomp push cmc dec add xlat shlb and in push ficoml loopne adc add pop add test call or cmp pop movsl imull and test adc adc lds nop xchg mov pop inc mov fmull lahf test inc lahf pop lds jle (bad) lock data16 ds adc in mov pusha dec popf iret inc aaa movsb mov add loopne adc sahf cmp bnd cltd pop pop sub in add ret aam (bad) aaa xor mov insb pop ja int3 dec mov jb nop sbb and sub idivl sub mov push xchg xchg int3 fistp sti gs push mov jnp mov add shlb sub add repnz cmp fs push mov adc out inc mov and loop subl mov fmull mov enter jmp sahf std ret lds pop clc jbe mov jns out stos adc ja dec jno sub push push push rcll sti lret ds sbb aam cld xchg add cli cld mov mov dec pop hlt pop scas mov adc jl test push dec pushf cmp mov pushf sub adcb or cmp repz rorb jne cli sarb xchg hlt ja out inc inc stos fisub dec ds mov lcall push mov rclb jae fwait rorb stos lret rclb (bad) idivl or inc out mov mov adc pop xor out and aaa pop adc insb out cs jne in adc sub push mov add das jb push jg fsub jp stos adc and (bad) push cmp js cmpsl pop jecxz adcl add push lahf mov ljmp (bad) push xchg cmp call push (bad) leave jle xchg std xchg xor cmpsl scas cmc es mov cli dec pusha incb dec aam mov cmp call xchg jp outsl cmp scas (bad) adc jb inc mov adc mov dec inc cmp xchg (bad) mov (bad) adc dec imul mov rolb pop popl or jmp sbb dec dec mov popf out xchg notb rolb jg sub jae (bad) hlt test sbb dec mov sub cltd (bad) pop leave js pop pop pop scas xor or add xor sub mov xor enter stc arpl and iret sub enter jg push cmp xchg mov hlt or rolb das (bad) and ja cld stos cmc ret imul and and dec jbe xor pop mov data16 and cmpsb outsb jecxz or lret incl rep popf lret ja xor inc cmpsb cmpsb fldcw jo idivl jae push or pushf pop ss icebp xor pop push clc clc fstpl je in testl push das repnz out inc or jmp nop jge inc iret jno out dec jmp pushf jg inc push pusha out mov inc mov mov add cmp add sahf cmp mov scas jge je fidivrl pop sbb adc negl popf push cmp cmp (bad) mov xchg lahf addr16 adc out (bad) mov push sbb jecxz mov mov dec xor ss add rorl fs and mov stos jp inc pop adc pop dec fbstp xchg mov mov (bad) repnz push mov int3 sub loop xchg loop cltd add dec mov sub mov push test out fisttpl lods aas xchg mov lods xlat mov fisttpl out or sub jmp and xor cltd pop in hlt sahf (bad) mov and lods jl mov xchg gs cmp stc mov fs std mov sub idivl mov mov lret pop push icebp into jmp xchg cli shll pop and push aaa and ret loope mov or add add mov mov repz mov imul mov pop pushf pop icebp jno jb std js lods out mov mov mov scas push inc or iret jecxz aam negb (bad) sbb jo mov sbb pop sub cmp xchg mov test lods in imul cmp loope test add cmp in xchg cmp pcmpeqb loop hlt aaa test pop dec dec ds ss mov xchg jmp test (bad) mov inc orb or mov hlt cs test in pop aaa imul cmp jo leave and dec ljmp cmpsl lret mov sbb or sbbl jmp iret pop (bad) pushf (bad) jnp mov mov mov jge mov and insl and ret test xchg jnp movsl mov add cmp clc mov clc pop or and mov iret fisubr (bad) enter mov sahf inc sti and dec hlt and ja test ss js xchg fcomi xor cmpsl aam push mov inc out mov and sbb xchg push lret xchg dec iret andl mov lret adc cltd dec std jnp adc mov int3 (bad) js movsb xor mov movsb test fs hlt mov ss aas inc jge jecxz cwtl mov stos lds inc fadds ja std shl jg insb movsb and push imul push and jb xchg jge inc fcoml sub ficom scas test imul das nop mov mov or xor and loop into cmp push lock mov inc std lds je inc (bad) pop push pop xor mov push push and fisubl ja popa (bad) std popa insl out adc jb call jno xchg out ja mov mov test mov mov mov lods (bad) inc xchg cmp iret sbb push mov rcll mov imul dec lahf cmp scas stos cmp inc prefetch mov push fdivrl stos test sub cwtl enter cmp and lds push pop sahf les push insb mov push mov fsubs jmp push mov sub into push movsb sbb fimul cmpsl add lret je dec test xchg push and dec mov mov cmp mov jns call hlt std pop sbb (bad) add int3 mov pop dec inc jns inc and add mov adc or xor fs gs fwait add and lods mov jle inc insl aas sbb (bad) je sub push popf jl fwait int int adc divb lcall cmp sahf adc and subl fildll adc or pusha inc adc repnz movsb xor test iret lock pop (bad) xor dec enter loop push ds movl outsb cmp push push bound push cld xchg xor testb inc bound add lock subl pop adc jg testl pop adc push icebp iret push (bad) (bad) fwait test xor mov dec call pop rcrl jp inc xor ret lret sub jp sarb push cmp fnstsw or xchg xor (bad) jecxz stos sub pop sbb inc into idivb icebp mov add hlt jmp adc mov gs leave mov adc cmpsl pop andb jmp mov dec dec imul xchg inc jno (bad) sub pop pop clc mov add inc jo and mov inc cmpsl lcall lcall loopne dec and adc pop movnti in loopne xchg cltd add jno pop imul or mov xchg inc lea mov inc sbb xchg cmpsl mov cmc rorl sub aas inc scas (bad) pop mov mov repz call push fs and push mov mov mov hlt and mov cmp mov pop or cld (bad) imul cmp xor dec mov xchg mov hlt push ret cmp mov repnz push add xor mov popa push js cwtl cmp adc in roll cli testl add lods lods mov addr16 popf sbb aam out seta and dec mov sbb inc adc imulb jb scas les pop add scas js sub sub xor adcb out gs arpl fnsave xlat cmpl xchg cmpsb or inc dec je sub dec sar jl mov aaa or pusha xorb xor add jno lods decl xchg pop idivb inc mov test addr16 sahf int sti outsb xlat pusha mov cmp cmp dec cs lds mov lods pop mov jl add bound xchg scas pop cltd std push aas jl push out jbe and leave dec ret lea jo cltd aam push fdivr xchg test jo adc ret mov loope nop inc popa loop test mov in cmp push scas xor test fmull xchg idiv (bad) arpl aad pop and jo outsl insb stos or sub cmp loope cmc mov pusha jl dec xchg cmp dec adc mov xchg cltd and sbb cmpsb dec cmp shl sbb pop adc ret test cmp sbb xchg fimul adc dec ror sub mov (bad) and push push fist sbb jnp cmp dec imul jno in das add not jmp mov imul in enter leave aad hlt pop pop jle lods out ljmp mov sbb jg loopne pop push dec lods push in bound (bad) stc or (bad) rcrl loopne pop pop cltd fistpl lods int3 adc xor inc xchg dec dec inc (bad) sar aaa add push lea outsl sahf lods push inc sbb das imul mov (bad) mov dec and cmovs push jb subb pop aad push pop ja adc sbb adc sub (bad) jl fdivl or sbb add dec aad sarb inc iret pop mov daa cmp xor fwait dec jnp jbe mov ljmp cmp push cs inc sbb shr ljmp push fisttpl push mov pop aas jge test lret mov scas ja dec add or jmp shrb (bad) leave push pusha adc shrb mov push cmp out repnz or mov xchg sbb add cmpsb push nop (bad) lea into in cmpl cld and push in add cmp pop lret insl mov popa sub stos rorl mov (bad) out int3 test sarl dec sbb test pop je fsubl xchg ret cmp dec xor push cmp mov mov ret mov inc out icebp ret pop push mov repnz jg and xchg movsl xchg pushf iret mov and mov mov imul mov pop lcall minps jecxz pop aas sub bound xor stos or jae aad adc cs mov xor inc hlt fistl push aad adc aas ret stos adc loope icebp add and sti repz jl popf jg cmp shll mov and outsb sahf and repz loopne popf jl mov adc dec insb fisub pusha inc mov out adc push or cmpsb jno pop mov out fstpt add push in int xchg cmp fdivrl int loope cmpsl add imul popa outsl mov sbb cld mov or (bad) cs aam lret in sbb sahf arpl stc inc fwait jmp in xor (bad) fisttpll pusha das in ljmp fldl2e push jae (bad) fmull mov fdivrl push inc pop xchg adc jmp aam push ret fsts push and jo pop (bad) mov in inc xchg mov cmpsb cmp jecxz mov mov lahf (bad) push xchg adc push dec test dec push jle xor aaa ss sbb xchg movsb fisttp outsb lahf stc sahf andl adc mov mov (bad) loopne xorl movb inc jbe int3 cmp push xchg jne cltd sub (bad) stos leave pop pop fwait aaa xchg arpl scas loope dec mov shrl aad imul or insb lcall dec test mov addr16 movsb inc sbb iret mov mov mov sbb roll std xchg in xor sbb inc dec pop push xor xor shrl loope cmp adc xlat dec mov jb (bad) fistpl xor aas pop mov pop pop cld adc jecxz inc clc sahf cli xor adc das addr16 mov aas std ret aad sbb (bad) mov mov aas pop sbb addr16 insb inc and outsl lods push stos push cmpsb add mov nop mov ss xor scas stc mov xor mov test js xchg test in fcoms in push pusha cs push inc push mov mov aad lret sahf xchg movsl pop imul xchg or repz stc adc pushf lock push sbb mov and roll fidivl loopne xor dec movsl fisub icebp divb stos jo repz pop pop jecxz cmp sub xor lods dec fs hlt add scas or gs jb lahf fnop ret lock inc punpcklwd test mov int3 test ja int3 pop dec rcrb pop in cwtl repnz fwait incb or dec xchg out fmull fxch cmp mov mov mov pop mov je mov cltd or pop inc xor int3 or jae xchg scas push mov sbb pop xchg adc fwait or outsl push cmpsl (bad) jne clc arpl adc into sti fcoms lret ss dec sarl xor mov xchg addl fbstp add in xor mov adc push cltd fs outsl mov xchg or or cmc mov call aaa pop gs ds es and stc call fnstenv mov dec cmp sbb (bad) cmpsb add out jbe icebp out lcall in (bad) mov jmp xor fs dec movsb jge lods lret mov push aam lock jmp lods mov add gs std aad dec jecxz insb (bad) push pop sbb adc and push cmpsb sub and (bad) shrb push xchg je sar mov and lods pop pop and es sbb leave test cmc mov lcall mov hlt mov xor inc inc mov ja sbb stc jne jb (bad) je xor mov sbbl stos adcb pop icebp push jecxz mov cld dec fldt push xor cwtl xchg xchg cmpsl das popa cmp repz push imul cmpsl fldt ja idivl and outsb mov scas pop rorl insl pushf adc adc pop jo jno jnp sub stos movsb cwtl jle fnstsw add ja sub lods lret push xchg fistpl js add scas sbb mov add movsl ret push mov jns daa sub ret js and mov insb xchg mov divb jle xor or push xlat pop pop xorl or sahf sti into movl push ss sub adc pop adc mov bnd mov mov cwtl rcll mov ss lcall popf xchg mov inc repz int3 dec or mul clc popf div mov (bad) push adc xor jo pushf dec cmp andl loopne xchg addr16 (bad) (bad) mov in cmp add push insl sahf or pushf push adc fmuls push out push cmpsl insl aas pop loop lret call sub lods and ret inc sarl mov (bad) xor je test std test out ficom outsl sbb mov mov pop sti sub test push xor stc jns insb cmpl loop push je xchg fwait xchg adc (bad) and lret xchg popa cmpsb popa xchg sahf repnz (bad) ljmp aam fbstp jno mov cmpsb shr or in xchg mov fdivl inc cmc jecxz or dec (bad) hlt jno sbb adc add movsb jecxz js jo ljmp xchg in mov loopne into xor dec lock cmp adc push mov push push idivl pusha addr16 lds jno inc (bad) xor div dec fcoml jnp aas lsl or inc adc xchg pop scas lods dec lahf movsb ljmp and loope (bad) jge jbe push cmp and jl dec xor sahf push test enter enter int dec dec stos push mov jno mov mov or sbb aam clc pusha cltd or xchg mov in xchg sbb xchg je movsb out hlt movsb fs insl and lret rclb subl adcl imul insb scas in scas sbb inc shr cwtl inc mov out pop and mov dec aas cld fisttpl mov or xchg cwtl loope imull imul (bad) gs jbe addr16 or adc inc fcoml jb loop call and (bad) pop sbb jmp jmp mov std xor add mov or or sub lret mov nop cmpsb divl mov pop lcall mov fcoms jnp mov cmpl insb popf loopne cwtl push fs mov lods (bad) mov jecxz cmp mov into lcall mov mov jb sub push arpl sbb loope rcrb insb sub pop lods pop jle out iret add mov mov jecxz sub sbb imul outsl and aam push stos rorb lods mov inc push lret jge cmp hlt cltd popa repnz pop jno mov nop xor xor sahf xchg pop xor mov aaa loopne push popa mov cmpsl hlt (bad) hlt mov sbb in lahf int3 movsb pop leave pop or lcall mov bnd push mov nop je mov in out jns iret cwtl jbe cmp flds mov mov fild inc cmp dec pop jo push movsl inc aas pop cmp iret mov stc mov lds sbb jge fwait sub push in ret popa adc loop loop ss fs (bad) (bad) decl rcll (bad) (bad) xchg int3 out pop dec or popf ss push inc jo lods in stos pop push outsl or xchg dec push pop sbb lahf pushf mov xchg jmp movsb cmp sti (bad) mov leave cmpsb mov push mov adc and data16 mov pop xchg xorl or imulb pop aam fisttp sbb subb loopne add lds jle lret inc jb push add push fidiv add cmc mov cld repnz adc popa mov test and fnstcw bound jb mov addr16 into push push sub mov les call and sub sbb movsl sub cs dec call fimul push aas rolb cmpsl push add cmpsl cmp (bad) cwtl lret nop outsb sahf ljmp aas movsb add stc mov gs adc add push iret cmp test fsubrl jb fwait rol xor cmp mov pop lds imul jae clc xchg cs fxch shlb ljmp or pop cld adc sbb push cmp dec mov sub addb cmp adc inc icebp (bad) insb in aaa sbb push clc movsl ds std out inc aas (bad) in mov xchg xchg insl mov testb (bad) test push push jle pop inc sbbl push dec adc jp leave mov mov adc or stc cltd outsl adc ss fdivs mov ret sub and in lret mov push lret xchg gs or ss jbe test cmpsb push movsl ljmp and icebp pushf jnp mov fs (bad) push sbb pop push push aas xor pushf add negl loopne in cmp shlb cmp lods ja out pop lcall pop cmp cmp jmp out xchg xlat mov cmpsb mov and (bad) mov sbb dec jle cmpsb xlat ss (bad) call pop in add sbb and pop dec and push jo pop sahf xchg lods push popa pushf and and mov push push sub (bad) jae mov outsl stc mov mov push aad int int push jle xchg jne mov pcmpeqb inc mov inc test lea jge repnz push inc jle mov iret aam add aam push insb push jb xor dec inc and (bad) into loope jg sub repnz lods pop ljmp clc mov pop jbe push ds cwtl call jge xchg pusha sti mov test lea push out lods js test (bad) into pop jne ror or lret xor out pop cwtl rcl int jb stos push ljmp jp adc (bad) mov pusha dec jge xor or add roll aaa mov add pop cld push je mov ljmp push fwait icebp sar icebp gs out (bad) sahf dec insb nop add push insb imul add mov fcom jne adc iret fbstp inc out call add mov jbe push xchg ds lods out test lock and inc push add mov arpl mov cmp cli pusha push lea or push cwtl out icebp mov into and jne push pop outsl pop sub xor sbb ficompl cmpsb cmp and mov fcompl pop sahf pop and es loop mov sub mulb jmp or fnstenv lock mov (bad) sbb inc push pslld lock lret popa mov fwait rol data16 popa rclb push dec pop mov adc mov pop dec xchg (bad) outsl mov add (bad) push xchg shr and les mov in mov pop or lds fnstcw and in cli push test xchg mov movsb ret push jne jne rclb fwait push out push push das push scas cmp mov add loopne dec in inc enter dec js insl (bad) or mov call jge cmp pop sbb xor repnz fadd les lcall pop bound jmp clc mov imul lock xchg sti jnp push mov stos lcall ljmp mov fldenv adc mov sarl inc movsl ds jecxz sub mov sbb adc in cmp push mov push mov sub jecxz rcr imul pop bound inc sub dec scas cmp dec adc call paddw xchg and add in xor and in inc jecxz jbe pop (bad) fimul jb xor sarb push ror sbb xlat bound inc xchg push jg jbe adc inc xor arpl fstpt bound sub add (bad) leave stos mov aaa or mov and repz xor cltd sahf or frstor add pushf push sub ljmp cmp inc jge mulb mov mov xchg xchg sbb fcoml arpl jmp jno push ret mulb fst mov pop out add sub test cld scas cmp inc in push dec (bad) cltd sbb rcr pop pusha out mov mov cmpsb xor daa sub ds pusha rcll cmp insl clc test fdivrp aam xor call rcrl add icebp (bad) dec sbb popa cmc cmpsb add jbe,pt mov push push or cmp aaa into mov mov sbb sub dec in test stc jnp xchg xchg mov add sbb inc sub cwtl fwait lea rcr or mov repnz pop pop push xor mov jb iret addr16 mov push mov out and xor test sbb stc cmp nop xchg mov push outsl (bad) in pop movsb fmull jecxz dec jae mov outsl xor xchg ljmp push xchg dec cmp iret push push (bad) enter (bad) in pop mov pop cmp pop sti sub push xchg (bad) loope aad andl cmpsl cwtl push out shrl addr16 xchg pop xchg sub pop or subl out jns add sub clc mov lret and out mov lods ret mov cmp (bad) mov xor mov int3 mov push push push ffreep push imul mov mov add loopne add dec xchg dec popf out dec adc pop inc mov scas (bad) test shlb mov jo movsl sub xlat jecxz cmp cmp adc sbb fsqrt push into sbb fsts movsb fnstcw sti stc mov cmp adc mov idivb pop in cs sub xchg ffree xchg pmaxub in test insb mov je mov or jp xor adc gs and and das ret pusha fcomip sbb call and jae xlat xchg pop test sub stc jg inc jl cwtl cwtl cli sahf in ds test movsb pop jg dec or sarl aas pop pop pop jns rorb gs mov xor mov stos rorl jb xor iret (bad) dec lods fcmovb and and cmp sti cmp rolb cli divl jg es and in cmp pop clc sahf fldcw xchg xor xor in push mov subl insl jbe lret mov mov xor out pop xor xchg mov sbb inc fildll out cmp js enter xchg xchg mov lret (bad) adc shl sahf xchg and in test or (bad) lds and dec cmpsl xchg pop jnp ja add stc cmp mov dec sbb cli jle js insb mov leave das and jl (bad) fmull (bad) mov jo and mov ss out lea cltd mov jmp xlat test int or dec adc adc popa and iret inc add (bad) mov pop pop outsl mov dec jp cmpsb shr pop adc jae out cmp insb push xchg (bad) pop loop push pop in rcll dec mov int3 lods xchg in insl (bad) pop daa fucompp or mov fmull pop push test ja movl (bad) fistp lods jecxz stc jnp sub jge dec lret setnp aaa sub jo scas pop movsl into mov fs or and mov insb outsl push in aad out adc in jle xchg mov daa enter adc mov and and mov jge jg xchg add bound (bad) mov cwtl xor push push push (bad) jno imul loope jo inc xchg popa adc cmc sub shll xchg iret xor mov int3 mov insl xchg mov push jbe lret in std cmp inc dec pop stos lret push repnz stc mov sub mov mov leave gs outsb int cmp pushw sub rclb add ss and ret inc cmpsl icebp xor addl push jle aaa dec in and jno adc inc adc out rolb pop pop or (bad) xor mov test push out mov cli inc sbb aas mov jb jp sar push inc jae sub pop je pop dec and or (bad) add repnz insb xchg xor adc mov and (bad) sbb fisttpll je jo xor push repz std (bad) jo sub subl sbb push fwait pop lods and adc mov ds mov adc mov mov es or mov pop inc mov add (bad) jg imul lea inc fisttpll pop hlt jle aas je mov loope nop dec rcr insb shrb hlt into lods (bad) or pop addb pop and lods xor fwait or scas in fmul push aaa dec mov mov rorl aam mov mov cmp pop into and mov shrl mov jg push cld idiv nop jae push jnp lock in mov pushf mov xchg sbb ja mov ss mov xchg cmp jo sub and mov fldenv (bad) cmp orl jne lock or push pop call insb sarl jae jp jno dec arpl cmp imul imulb cmp jo inc cmpsl lods mov into jae sbb xor loope (bad) lock jg push xor inc xchg pushl inc cltd xor xchg shrl pop add sbb mov lods ljmp cmp int3 fstps mov add sarl loop in js ret jp,pt je shrb push or dec jl pop and add int nopl sub inc int3 sub push mov lret pop (bad) mov mov jb mov outsl inc (bad) js dec dec in jl sub fs subl inc std cmp mov stos inc and (bad) and jmp mov imul pushf (bad) xchg bound mov lds add lock or lret push or sti mov fs sbb adc cli clc xchg ja pushf pusha inc mov in push enter push push mov or xchg dec or push and es bnd fcoml xor sub xor mov shr aam mov lds push incl mov and push js arpl mov cmpsl mov and (bad) out les out fsts testl pop insl dec hlt cmp xchg out scas fistpll jge popf divb mov jns fwait leave out pushf hlt and jecxz jmp dec data16 fisubrl dec or jp insb cmp or cmc repz jge loopne pop push pop cmp sarb dec or rolb pusha sbb in outsb les aaa sub lret mov pop mov xchg ds sbb xor lds jnp jge inc pop sbb adc ljmp pop call pop popa mov popf scas fadds push idiv lcall pop push jnp cli xlat (bad) (bad) in mov push xchg adc popf fistl icebp fnop jg in data16 sub ja lret xor xorb cmp cmpsb push movsl mov jle add cmc mov hlt mov idiv cmp repnz leave inc cmp or pop popa dec add xchg sbb repz pop fist sbb jb lods out int3 faddl enter sbb out fsub hlt stc dec out (bad) mull fdivs push insl adc lock pop out sbb jae or mov jle leave jo and lock xchg mov jbe jae pop jl dec (bad) mov pop fdivl pop (bad) out sbb mov add repz mov add and pop fwait ja fwait scas in pop push sbb outsb mov jnp das jno jnp mov sbb cmp data16 mov scas jns adc call xorl in ja sub cmp (bad) leave fucomip popa jbe push ret pop das (bad) mov adc jb cmp (bad) or jno pop sub push test je add pop jbe aam xlat add (bad) repnz ds js das pop mov mov lock mov sbb sub add cs or stc dec lret (bad) adc sahf mov cmp adc fcmovnu (bad) les inc iret cmp mov mov adc mov xor dec fwait sub jle xchg jns lods (bad) test lret cmp cmp rorl subl mov scas ja lret pop das mov gs callw test sbb mov mov sbb jne add in rorb lahf sarb movsl inc or jecxz popa ret loop dec mov xor and sub mov add punpckhbw push out sahf bnd push inc arpl outsb xor push adc shll movsb fnsave mov pop pusha ret sub cmp pop push test xlat add xchg mov xchg out sarb push xor out cs inc mov xchg data16 inc sbb mov add imull repnz out adc jecxz inc sbb fs mov jge ljmp mov pop mov mov lock mov or cmp nop and mov jg test fdiv jns sbb push imul sub dec iret or call lods lods sub es mov jecxz lds pop dec cmp jns loope ds push rorb sub mov frstor repz cld popf in sbb add cmp inc ret adc in xlat stos adc jmp mov fildl jnp test mov lahf jne pop (bad) repz lds lcall stos add shrb cmp mov sbb sbb std adcl jp lods inc (bad) mov loop movsb or ficoml pusha dec lahf inc ss sbb sbb cwtl leave mov in lods ja scas fwait sbb jo mov inc ret out add dec cli mov sub out mov repz pop jg aaa stc stc movsl or jmp bnd mov test in xor pop in add pop mov sbb adc pop shll data16 dec adc mov mov scas inc popa int3 imul dec push sub xchg (bad) sub adc into sbb pushf (bad) adc push push add testb xchg popa int3 push add xor aaa xchg mov cli daa (bad) insl pop jo inc and clc ret jb push adc add ret (bad) cmp mov ljmp mov ss icebp iret xchg dec es js aaa push sub dec xchg lret test xor or sbb xchg and sub mov push mov adcl push pop cmp jmp adcl pop adc mov mov mov inc adc movsl lahf jb mull mov rolb (bad) pop movsl pusha jp xchg inc daa pop or mov xchg bound sbb pop idivl sub mov sbb xor mov xchg fistl inc and lret jae cmp sbb adc push sbb test movsb nop adc and xchg fsubrs stos (bad) cld and fstpl and or pop or jle shl sbb push ja fisttp test xchg jg cmpsl (bad) jp push adcl xchg mov lret jo add hlt lds mov mov sub sbb testl jp adc cltd push inc xchg cld push push rcl add cli cmc fwait pop repnz cld dec out (bad) cld mov sbb dec mov ret icebp push sub push mov pop sbb push lds in jb std enter add movsb mov arpl sbb lods daa lock fwait jns pop mov rolb push out (bad) lock mov lea cld mov data16 mov cmp lods sahf pop jp cmp xchg das xor out jnp dec repnz adc jo push and popf or xor lods mov test inc inc hlt subl movsb push or int3 pop and xlat push scas xchg sub sti push rorl pop cmp call popa push push cmp fwait (bad) in negl cmpl into jg mov mov xor jg fisubrl xchg mov inc sub xchg mov jbe imull pop mov pop lods (bad) (bad) (bad) fidiv inc in pop scas xchg call cmp imul or mov popa sahf stos adc in repz movsb fwait mov call mov mov in scas and popf fcom insb push push push fwait les in (bad) jge jb ja xlat inc mov movsl jge mov jb shll push in mov rcrl pop lcall mov leave xorl insb mov out loope stos (bad) pop or jb sub (bad) shlb lret loope cld test sub cmpsl jmp test mov hlt mov cwtl sbb xor pop push ss and hlt outsl fucom cmp outsb mov shl lret mov mov jp xchg and jmp mov ds test iret xorb aas fldl push push sub lret int inc loopne adc mov cld ja subl mov daa fidivrl ds into sbb clc icebp inc lcall mov or test repnz cli inc int3 pop sub pop fcmovne push pushf mov or test loopne push push data16 enter or mov divb or stos inc enter sbb outsb out test sbb push or mov push cmp mov mov lock aaa pop sbb into mov out popf lahf movsl push inc or mov or cmp dec mov pop imul push out mov (bad) jb push popf pusha pop mov sub iret sbb insb and jmp pop or or lahf cs sbb fwait sti mov ret jne sbb insb cmpsb xor push scas push sub mov outsb repz push sarl cs dec sub lea jb jbe pop test icebp pop adc (bad) out pop out lods add jge mov xchg pop push mov cmp pop aad pop adc sub xor sbb jne xor pop test lods (bad) scas mulb addr16 push and mov mov jl add je mov xchg imull and out stos (bad) xchg aas mov xchg pop dec das fistp fidivl mov int dec stc outsl (bad) in ret and sahf aas popf (bad) aas minps mov and inc int3 into xor mov les and sub sbb scas xchg jp jle std std adc (bad) mov push int3 test sbb into push jl mov cmp ds jecxz sub xor xchg clc fs and or xchg nop fs mov aam xchg sbb jno push inc into fdivl imul and test mov ljmp jg test clc shrl inc call aaa aad loop add and (bad) push ss shlb fs lcall gs xchg push cmp jecxz gs sbb sbb mov movsb call lahf test jne inc into dec sahf xchg jge xor pop xor push enter lods mov sub imul inc sbb inc movsl lds cmpsl negl sub push (bad) jne sbb std sbb mov mov and add sbb ret lods lods (bad) and sub (bad) into mov (bad) cmc icebp mov into dec xchg mov push or in daa mov jecxz push xchg sti dec xor add push add fcmovu popa mov cmp jns push xor pushf inc pop inc add xchg mov mov push roll pop dec mov outsb out adc lods mov scas mov dec cld roll sbb std xor xchg inc int xchg xchg cmpl (bad) fadds aad cmpsl pop jge es xchg aad xchg arpl mov or hlt xchg push daa mov aam mov pop test pop push cmp lahf je ja popl or adc mov pop js nop add add gs and sti or push out sbb in xchg rol lea std pop jne pop dec test sti dec sti or (bad) cmova (bad) push push cmp xchg lock sbb insl out push cmovb sub scas or dec add lret mov test mov int add insb inc mov jbe call inc aas mov mov mov cmp jmp or in jmp dec jo loop adc sub aaa or inc lods sub insl ja cltd add clc xor dec inc js fldcw cld or test and rclb insb dec ja jp and in add (bad) jmp and push lods push cwtl mov mov inc adc fwait mov xchg sbb fsub (bad) jno out and xchg addb xor or push jae xlat jp pop sahf or cmp ffreep into nop imull call sbb xchg adc icebp adc test jle pusha lcall inc pushl dec fwait shll dec fistp data16 mov jle icebp add xchg into xchg loope ret mov out stos mov inc mov lcall xchg icebp stos test or pop mov dec cld sub int mov ds sbb or jg mov inc mov push jno call push mov fldl lock push into sub icebp mov xor pop push mov loop adc add pop xchg loopne popa das xchg xchg dec inc cmpsl enter mov dec inc scas pop in sbb cmpsl jnp nop repz sbb adc imul push fisttpl mov jnp ds pop push cmp pop fs pop leave dec adc mov in ret cmc push fdivl sbb fcomps jmp mov jno test mov adc push ja mov lret out inc add and dec push push cmp xor sub cld mov jmp lret mov and jecxz sbb (bad) daa xor lds movsl shlb sub mov scas test jo push mov inc in fisubl pop lds (bad) in negl or (bad) adc mov dec (bad) push sbb xchg mov test cmpsl lret jns adc jno jmp cld dec push jg or insl gs (bad) (bad) cs pop jecxz ret jecxz xlat jecxz scas adc nop (bad) jecxz push sub (bad) scas sbb xor or (bad) out lods jmp lods push ret cmp push xchg jmp inc mov fnstcw loop jno fcompl addr16 mov lods mov ret push ljmp imul cmpsl jmp dec mov js fdivs roll addr16 and xchg mov dec mov jmp hlt pop lahf pop in movsb repnz cmp mov push dec int3 jl cmp aaa jns std das sahf lods mov insb adc sbb mov ljmp mov shll imul shlb adc sub jmp outsl rcr leave mov cmp mov add out stc cmc fwait sub (bad) jns sti dec fstl lds sti mov push loop clc mov cmc sub push cmp jmp cs daa ficompl xchg sahf lret insl or xchg push stc inc lods cmc xor hlt (bad) shll cmp test divb ds (bad) cmpsb inc out cwtl cmp cld pop mov inc dec sub incl push pushl das out jns pushf outsb clc (bad) (bad) int3 arpl out lds icebp push (bad) jns fwait xchg scas ljmp or roll ret mov pop pop jecxz test gs mov cmp xchg xchg aaa out in jp sub cmp ror jp sbb and add je test xchg pop inc sti push inc and pop jl js and ds (bad) adc sbb inc stc in cs xchg aam mov or fwait call push rcr push add sbb xlat xchg sbb push push jb sbb pop add dec fmuls ljmp adc dec xchg lods xchg add fisubr sbb icebp rcrl fnsave cltd mov sub outsb js mov pop cmp leave push rolb sbb lods mov mov pop cld fisub add iret popa sbb xor mov dec adc into incl or and inc call mov jne cmp inc or mov sub repz mov inc (bad) int inc call jae in mov lahf (bad) arpl int mov xor mov jecxz and fstpl test dec ror mov aam in lock decb movsb mov pop pop pop in mov push xchg mov jb repnz test inc in pop loop cmc dec lret inc test in push inc mov mov add push push mov test (bad) loopne insb dec dec jmp xchg test pop mov pusha or rol popf mov lret popf ret lock aam data16 pop and cmpsb dec xchg push lods loope pop jbe lcall lods xor adcl sub movsl jns add xchg lret (bad) pop outsl dec fidivl lods (bad) mov xchg out fisub add lret nop or mov cmp stos mov push cld inc jnp mov lret mov movsb mov (bad) sbb dec or xlat add sahf adc scas jg adc icebp or jle in jge push test shlb and ljmp imul mov sbb cmp stos sub ss mov sbb pop sub or aad xchg inc jno jb pop cmp fildll mov add xor mov mov (bad) orl jbe pop js sub les cmp insb aaa xlat mov mov mulb repz stc loop fs push and mov xchg mov lock cmp mov ret enter sbb inc pop sub sub outsb lea mov ret mov mov (bad) pushf imul xor inc push repz or cmp pop outsb mov add das fistpl jb jge pop push jns mov dec lds jno xor cmpsb adc call pop out mov mov or fsubrs mov lds mov fdivr xchg movsb nop in addr16 out (bad) movsl or nop mov jmp fsubl ret fisubr pop mov and push xor insl mov (bad) data16 inc rcl pop into inc lcall lret je inc rclb mov and ret xchg dec inc scas outsl mov popa popf (bad) fldt dec andl xor mov sub mov aas outsb (bad) jno lods lods or xor dec sub in sbb add ljmp jns cmp pop pusha fisub mov ds mov mov and cmp ljmp adc jno mov dec push into xchg or fsubs gs fucomip mov clc pushf ds loop sahf rclb loope and mov inc jne cwtl push cli push sbb sti pop enter add jno sbb or add push loopne pop or add decb fbld pop push sbb and inc loopne cmp mov (bad) jb mov shrl dec sub lret and and mov or jno,pn loop std mov mov xlat out (bad) pop jg mov xchg sub popa jg movsl mov repnz aas inc jp push (bad) js in scas cmp sub jp sub adc insl arpl xchg out jg leave insl and mov hlt pop hlt aas insb mov jo inc inc fwait jns cld inc xor in mov lods ret scas or fbld lods or sbb fsubrs fsubrl sub and (bad) or mov int add (bad) outsl pop mov mov gs inc or sub mov into inc divb test pop popw ja push loopne and (bad) fdiv sahf (bad) lret leave mov add cmpsb dec shl lret jecxz test dec or mov cwtl lods sahf lret xchg in std pop scas pop ret push jno stc (bad) jmp lock pop push pop or arpl lea push in fcomp enter lea jns xchg bound jmp ret push dec mov aaa xor repz mov popa cmp fisttpl inc or push rclb xor xchg ljmp mov jbe cmpsb dec popf and repz jno sbb adcl sub push pop fwait xchg cmp stos push mov call movsl idivb adc dec lcall daa inc dec out push mov sbb add push push scas or and add sub and das test or pop cs fcomps add add js scas loop sbb mov lea mov xchg pop repnz push fisub add cmp inc int aaa mov pop stos fwait cmc mov test cmp jle aas pop imul dec inc stc and je aas test stos mov rcr sbb mov fdivrl repz je cmp insl sbb fdivl adc sub cmpsb gs pop and pop sbb pop xlat cmp cmp imul sub mov lret pop testl nop and fcomps iret inc test cmc mov stos xor xchg push rol test jle sub push fisttp leave inc push out push mov or out sub (bad) cmc (bad) mov ljmp sub movsl mov jecxz dec dec or adc jp inc cs insb adc pop mov sub or jle lock dec cmp mov mov xor repz cld sub cmp dec lret lret jne les cmp lock jecxz adc fisubl std xorl jge sbb push cmc aas repz xor dec lods mov or add aad dec stos clc pop push fcoms enter jmp sub push movsl out loopne xor fist das imul icebp repz (bad) popa push jae pusha jae sub adc cmc mov ficompl mov pop inc mov adc int3 xchg std push pop (bad) fadds cli mov sub mov dec adc pop cmp out and fisttp les or lods aaa loopne push jo pop inc sub pushf xor mov xchg sbb andb aad jl mov imul (bad) lock jno inc popa mov mov rcrb ljmp cmc out (bad) cmp jmp icebp xor cmp hlt pop icebp xchg fldenv frstor jbe pop lea jecxz jne mov (bad) push push sub push adc cwtl insl stos inc xchg (bad) adc (bad) fdivp lret repnz jae jg repz xchg xlat push lods or cmp xchg mov push jae push dec sub adc add cltd rcrl push pop dec sub lods aaa sbb lahf popf mov mov add xchg xlat jge clc rcl add or lods (bad) mov adc inc push clc lods add push push add cmc clc js loope xchg jb rol (bad) imul pop or mov les push or pop jne jp inc mov arpl jo xchg fwait inc outsb bound mov ja inc mov stc cld (bad) roll dec gs push mov movsl dec insb int sti jmp aad adc scas out (bad) fidivl ss or or out insb aad test sbb loope or and jo inc test pop rorb push imul xor cld fidivl dec jge fcmovu adc sbb bound pusha push gs adc adc or inc or xchg pop aam fptan mov and mov mov (bad) adc into adc add fs fcompl fsts adc sub fistl fucompp lea in pop cmp in push inc cld mov out add lods mov lret push popf mov std push notl push aaa and adc notb xor addb subl jns push mov ljmp daa aas push je pop mov adc mov adc lcall pop pop inc cld cmpb xor nop (bad) cmp lea fs (bad) add jmp out pop incl cmp pop inc sbb lea jge cli sbb xor cli push push movl inc (bad) fstpl ljmp inc cmp cmp cmp iret push mov sub cwtl and mov and xor (bad) repnz movsl pusha sub xchg mov mov outsb je data16 add add in xor popf xchg enter xor lahf cmp inc sub ret mov sbb movsb lock mov mov pushf adc imul popf cs or fs adc and std (bad) jbe mov mov add add ja mov insl push sub xor test inc ds xlat mov (bad) sbb in in cmp nop call les pop xor or fisubrl pusha xchg and shrb mov std or inc sub outsl add cmc test push push cwtl arpl cmp jle stos mov pusha insb adc pop daa outsb push sbb adc fnstenv jo into add pop pop mov push adc pop ss xchg add std dec insb fxch inc mov sbb xlat lea pop bound cmpsl jno dec push pop push mov push push lds sub test stos or stos sub or mov ficom shld add lret stos push aaa xchg dec jge (bad) imul fwait push cmp fbstp cltd shlb das fs xor in (bad) ss and or jns mov ret sbb out dec lret jb cmp mov (bad) mov jae add or fild lret adc sbb push mov dec mov test imul jp jl pusha sbb sbb cmc (bad) lret jne fstps pop add je setnp shlb int3 std xor clc pop dec (bad) mov nop xor sbb sub (bad) xchg enter pop xchg movsb cmp scas mov stc inc inc icebp pushf addr16 push fsubl sub xchg mov cmpsl mov pop aas out das or in inc inc push aad divl fldcw mov mov inc sub mov rcrl inc mov mov enter mul sbb inc out mov (bad) stc pop mov popf push int3 ss cmp xchg mov lock push jmp call pushf leave mov stos mov jg push mov out sub decl stos outsb inc mov fisttpl pop xchg rclb dec mov orl dec mov aas dec push (bad) out int add push test jle in test insl gs pop aas (bad) (bad) icebp or int3 call fidivrl clc lock lret repnz push cmp call fabs push inc or icebp fnop imul xor mov adc adc popf add cltd and adc mov lods test arpl out lds int3 out adc pop lret data16 in jae test add or outsl adc fmull and adc in push int3 dec out and pop jmp inc inc ror sub sbb mov dec jge cmp scas inc sbb mov mov les inc sbbb mov sbb mov leave push rcll out add lret sbb fisttpll test stos push (bad) push (bad) and (bad) (bad) push dec dec push inc je and jb roll ljmp cmp dec dec lods addr16 cli push test in imul jb or jge vunpcklps xchg xchg add das mov xchg int3 test xchg cmp cmc lods test ret sbb mov call stc fs stos fdivr imul adc mov mov add leave into rolb lahf insl add fsts sbb movsl sarb xor ja jle jno mov ds repz cli scas sub rclb mov and pop out sbb call fs mov cs xlat test ja ljmp pop xchg push jmp jno loope mov popa adc in xchg xor imul stc (bad) mov xor jge lret xorl push xor or mov and fild lret add fadds cld aam imul ljmp cmpsl cmp stos outsl jae mov js sub add incl or pop mov es pushf adc xchg (bad) bnd inc in jbe lret outsb and fmulp push push ljmp mov cmpl leave in mov sbb pop push sahf enter sub in nop in pop roll push inc shrl add lcall sbb jno adc cmpsl xor outsl mov fimul xchg call sbb repnz cmc scas mov jbe stc hlt rclb clc adc xchg jmp jne mov lret aaa outsb dec mov mul push fwait mov stos xchg (bad) (bad) pop addr16 cs loope add push and dec mov cmpsb add mov jp fdivrp es and test aad xchg sub mov cwtl xchg imul pop push ficompl daa cmp or cld sub sarb cmp int3 pusha stos pop mov insb and and ja out bound inc leave std popf fdivrs adc test icebp ror nop and fsubs sarb fnsave xlat xchg and mov orl stc add ss inc lods aad push subl out cmp pop push jb mov jle imul lods rcl or xchg dec dec cld inc mull (bad) int mov cmpsb push popf inc jmp xchg aaa jno popa sub xchg loope lods ret mov mov fs dec mov mov mov xlat aam push jmp pop mov xchg fcos notl nop in jno and fwait push inc outsb icebp (bad) pop cmpsb cmp mov xchg fs push loop ja pop outsl test es fist sub enter dec sub push fistl stos pop xchg lcall mov in iret push add mov stos mov or mov out push cmc and cmp mov cmp cs pop fistpl pop sub dec add cmp (bad) stc aaa or add xlat adc mov shrl mov add push data16 imul xor pushw pop inc insl fsts add mov cmpsl push mov cmp mov push dec daa test test bound sbb out mov loope lret pop aad rorl insl mov int lret adc push fcmovnb (bad) sub xchg out js sub lcall cmc mov lods sbb out (bad) insl fisttpll xor cmp pop xchg in and push push and aaa xlat nop pop or int3 or (bad) cs add movsb nop cltd and lcall lds mov mov (bad) xchg or iret xor or negl inc jne inc pop test test mov insl xor xchg xchg sbb inc (bad) mov and xchg pop aam sub jecxz,pn or (bad) out sbb (bad) lock xchg sar jne,pt inc data16 in (bad) frstor in rcr xchg fstpt sub pop xor mov call and fcoms inc xor mov std dec jno push mov stos in sti jns je push push adcl xor xor (bad) jns (bad) push inc cmp mov push scas add stc pop sub and mov mov jae and enter mov xchg push cltd fsts in sbb mov mov lea cmp sbb push xor adc hlt (bad) jmp movsl mov test pushf cmp and xchg sub or mov (bad) xchg mov cmpsl mov inc das xchg jmp lods pop inc dec fs cmc inc (bad) int3 push lods jl mov add dec mov or test (bad) repnz jns mov or cli gs rcrb in adc push cmpl lock xor xor pop pop rcrb outsb xchg arpl fsubl inc ds test (bad) cmp jp push push pushf inc add sub rcr add cmpsl mov mov mov cmp xlat xchg repnz je ljmp add push xchg xor mov sbb icebp ljmp or jecxz adc sub stos cli (bad) mov ljmp xlat jno imul jmp mov repnz (bad) sti dec xchg aas (bad) fdivl xlat gs push out mov jae push arpl addr16 dec and ljmp in mov pop xor mov mov jae rol mov mov (bad) xor cmp data16 movsb or mov aas add les pop in adc jae dec push cmp imulb int jmp pop push (bad) pop xchg rolb cmpb sahf mov std (bad) fadds pop out dec add dec cmp cmp repz stc fpatan fildll cwtl push in pop scas or in add arpl insb in add loope (bad) mov push lds inc andl jp push jp std push in shlb repnz cmpsb lds insl call (bad) push pop (bad) jne xor sti push sbb idiv pushl (bad) mov mov fwait (bad) ret mov mov scas iret sbb pop adc inc sub adc jno push jg pop jo xor or push daa ds xchg jnp sbb push push add add or int3 fimull mov dec insl sub push sub sbb add int3 sub xchg popf fwait cmp popf cmp decb leave sti leave (bad) pop cmpsl rcr ljmp cs xor jl or adc cmp jmp add lret pusha pop xor std or sub mov inc in repz test mov (bad) imulb mov popf and jmp imul mov push xor jne mov or and sub push cmp xchg fcompl jno hlt and inc fwait mov pop sahf jg push pusha xchg or add das int adc fisubr jne (bad) sbb and adc xor leave add in push leave sub les and mov inc mov xchg ficompl xchg push fildll jecxz pop inc jmp lret loop mov (bad) cmc jb mov mov and fbstp cli dec movsb sub std std xchg and sets out push popf dec stos ja or or lret aad cmp movsl outsl pop das xchg sub stc addr16 mov cmp sub aaa pusha movsbl stos xlat mov (bad) cmp (bad) xor lds insb movsb test addb (bad) repz cmpsb mov cmp xor xchg loop rcll fsubrl lret out and mov or dec lock lret dec pop add cmpsl rclb mov or adc cld rorb outsb inc jnp enter sub fcompl idiv jl in (bad) out inc loope hlt sbb cmp and aam push lahf mov daa sbb imul sbb in movsb aas outsb pop jg add test ffreep nop fldcw ds and mov jnp mov sahf rcrb test repz push push cmp pop rorl add pop jg pop sbb fnsave ljmp cmp mov cmp cld pop mov fs nop imul sarl shrb sub icebp ret movsl jp xchg (bad) scas loope lcall iret (bad) jle mov inc call (bad) cmpsb je ja stc mov enter xchg enter cmp dec xor ret jecxz mov push cltd dec pushf push dec mov jmp lcall lock xor sub jmp jns sbb mov jns lahf in mov cmp loopne stos sbb arpl pop xor adc adc mov add inc lahf jecxz mov sub mov dec outsb test test inc loopne cs xor into dec and lahf int3 add mov ret loopne jle mov out loopne xor fstps xor dec (bad) repnz jno sub inc je cld gs je not mov inc arpl enter loopne fcomps mov stos inc rorl jnp fisubl ja in mov sbb xchg ds mov daa fs sbb movb lock je mov add cs in inc inc lret icebp mov mov xchg cmpsb mov jp push mov xchg (bad) mov jne pop popa icebp leave sahf rcrl mov das out or mov or xorl fidivr aam mov js jb cld xor sti add (bad) das and jbe sub pushf cltd pusha (bad) arpl daa jge push inc pop bound aas lock add mov fmull cmp push mov rcll mov xchg inc cmp cmp pop rcl pop dec test cld clc push ja clc into and stos lods jg pop stc out adc push cltd fidivrl inc dec insb std repz jp faddp in push or jmp dec sub mov je out mov mov repz scas (bad) in push stos xor jae push cmp push pop dec sub (bad) (bad) xchg aaa cmc popa stos fdivrs mov cs ss bound data16 jo push (bad) gs mov jecxz enter pop stos pop sub enter push lods loopne std adc jp adc and adc push mov (bad) or xchg inc and sahf xor popa ss sub adc mov adc inc leave add je,pt mov insl lret lock mov pop add adc outsl dec movsb cmp and cmp pop aas cmpsl sub arpl iret inc xor adc sub mov (bad) repnz cmpsl xchg movsb mov fcomp ds inc dec push jo mov sub idivb mov xor loop or enter lcall mov inc repz gs scas jb xor mov inc in xchg out loopne jg push pop gs mov inc push lret add lcall jne hlt (bad) fistp daa inc mov xor bound xor mov push xor pop mov dec das cwtl lds lods mov ds dec jecxz sbb (bad) scas mov cli lods mov and jbe xchg pop shl mov clc inc add mov dec jle fcomps imul je in pusha movsl and in and fdivs jns dec sbb mov fimull add xor push mov loop mov mov add test adc adc nop and adc mov lret mov mov mov stc jb dec enter inc cltd (bad) aad fwait or dec cmpsb (bad) out pop inc push jl sbb ds mov jecxz cld lods lea bound adc inc (bad) je test jecxz imul imul mov (bad) fcoms loopne mov ret add (bad) ds int3 mov sbb fimull cmp (bad) subb sahf jl aas mov sti ror cld repz shrl or adc lret stos push inc xchg push xchg jle mov cmc sub xchg sub dec cltd inc iret xor movl sbbb push ds repnz test xchg mov dec icebp pop pop test icebp xor cli jg xchg rcrl ljmp mov pop xor pop int3 xchg fdivr bound add mov imul xor mov xchg sbb pusha mov out mov add inc sbb mov mov loop aaa adc and mov ljmp push inc (bad) xor jnp push sub sub xor and add hlt fild (bad) mov jecxz fimull sti popa mov xchg or xor cmp cmpsl mov push pop mov cmp push jge unpcklps add aaa int3 ret mov mov mov mov dec aad push jl push repnz push outsb jbe inc bound (bad) jnp fidiv ret push adc in mov repz jg cwtl inc jp lods cs mov mov jns or ljmp dec movsb fs loopw addr16 arpl stos mov adc aad lods in dec test les rorb jae jbe xchg dec pop test inc xchg mov ljmp cmpsl je mov rcrl (bad) or jecxz cmp jecxz inc push jp jae loop push shlb add xor scas cmp inc imul jmp dec jbe call add andl and subl arpl adc cmp xlat stos mov outsl das push xchg xchg imul aaa pushl cld aaa jg scas (bad) push or xchg pop fdivrs jge push and dec pushf and and subl fdivrs add mov arpl or xor dec test xchg dec or xor jne inc and xchg in inc mov mov sub incl cwtl loope aad mov jg aam pop cli dec xchg sbb aas mov aad pop jmp xor in pop dec fsubrl fsubr in imul mov inc pop dec mov push ja dec stos cltd pop dec inc verw stos adcl sbb adc jle fidivr push pop addr16 test je lret loopne test add add lcall dec pop mov push add std or jl mov fstl addr16 sbb pop and pop push mov inc (bad) loopne inc rol in pop stos adc xchg in out inc adc xchg cmp inc shrl inc jb pop sahf ret sbb and cld out mov sub js aam fistp in lcall jmp mov mov mov data16 jo push mov ret push mov xchg xchg inc mov dec outsb add sub popf ds or jg adc in inc mov adc ret cld sahf lret test lcall pop adc mov mov inc dec and lahf leave xor inc in bts pop lcall mov dec inc mov dec andl sub lock fcoms xchg dec jo pop insb ret push inc daa mov addl jmp add push enter test cltd sub aam das test mov push dec inc shr repnz jp (bad) hlt imul insl cmc jno aad dec sahf shrl and call and daa sub sub orl push popf cmp sahf sbb or xor fcmovnb push hlt je push pushf stos pop dec std ss push ret imul mov test in inc sbb fidivrl mov ret ja push jno lock and or mov jae loopne or (bad) fnstenv cwtl addr16 and ja cmp ficompl call (bad) sbbl mov jb clc (bad) and xlat jge jmp xchg jbe mov into mov movb push add or insb cmp or xor inc dec xor aas or shl daa mov out pop daa jns stos sbb sbb pop add ja (bad) loopne pop cmp jae mov mov aam dec popf test imull mov jne and sbb xor notl cmp fistpl lods add (bad) in stos adc push lds stos mov (bad) dec arpl pushl mov add cmpsl (bad) lods je xchg hlt xchg mov jno enter lock scas pop ret lret out inc push pop aad aaa mov adc lea pop xchg xchg mov push inc adc (bad) cmp fstps out scas movsl repnz cmp ficomp mov push (bad) inc je lock and sub cmp loop shrl gs mov ss (bad) (bad) fstp movsl inc or cmp cwtl adc cmpsb and add hlt int ss push mov jg aam shrd sub ret cmpsb sub sbb xor add stos pushf sbb jmp loopne mov lret test (bad) fisubrl sbb insb mov lahf xlat and leave mov stos test adc das push add stos popa fcompl xchg mov cli cmc mov push (bad) xlat out imul flds fwait not es ljmp mov in push aas mov mov enter xor movsl flds out test push jg mov hlt fimul movsl cwtl ja lea pushf les repz cmp outsb mov xchg lret neg das and in jp inc and or mov push sub test mov cmp enter movsb pusha popf dec push sub pop fdivrl dec int scas fsubrs cmp add adc (bad) (bad) (bad) iret mov iret xlat (bad) jp in adc mulb jbe rolb mov loope mov and int3 div rcr pop xchg cli and testl and inc or hlt in xor cmpsb enter pop (bad) sub movsl fimull in jns mov es jbe mov and mov sub andb outsl adc mov pop jmp xchg test mov mov mov jno cmp enter dec call lahf xor mov xchg mov repz adc adc lods sub dec xor sbb lds cmpb cs addr16 push mov sbb mov mov pop clc xchg push shrl outsl and lds sbb test push xchg mov or jge (bad) mov cld nop pop lds xchg dec les and loopne js lock in mov xchg out adc leave int adc xchg cmp sbb mov push inc adc (bad) iret sahf mov mov loop mulb ljmp mov cmpsb sbb hlt jno aad sub icebp rcrb sbb pushf ljmp xor xchg clc inc repnz ret pushf ja cltd or cs sub jmp pop or ret lock jbe cmp and lahf pop addb jl negl fimul push add pop hlt add push (bad) cmc push jmp call (bad) fcompl sbb push inc (bad) sbb test cmc mov mov mov push dec js scas fidiv lret xchg out xchg mov sbb lret insb inc adc stos int fidivl lret add mov xchg bound into mov rorb or mov les mov sub int inc mov or inc rolb push popa xchg xorl sbb imul orl and dec into lret sbb push aad xchg add mov fsubrs and cmc push fbstp inc jg dec xchg mov es cmp mov rorl jl leave inc mov out xor (bad) nop mov sbb inc stos ret push dec lods repz sbb daa andl ja mov mov mov push adc popf divl repnz pop in sarb push ss repz sbb push ficoml sbb inc iret push xchg les pop addr16 jnp aaa push xchg insb and add sti lock daa sbb jle fisttp xor push dec mov popa (bad) fwait ror push xchg js lods push add cmpsl fsubs stos ja mov or test lods int sub adc push jge jl sub je dec rcr (bad) fs sbb dec add and sub imul icebp pop sub push jle xchg xor xacquire pop or popf jl xchg mov (bad) icebp push xchg xor hlt cmp sbb (bad) dec sub dec push stos cmp add xchg fstpt inc push cmpsl jbe jmp mov mov shrl jmp inc mov pusha or jmp xor (bad) repz inc ja fdiv inc outsl sbb lret or ret (bad) mov cwtl std rdmsr les pop xchg push add fild movsl cmp nop push cmpb mov into jo or cmp out test push shrb and cmp jae jb (bad) (bad) adc ss leave not lods or test and mov stos push stos cwtl adc ret (bad) aaa in dec push jbe and and fisub scas out xor mov popa arpl xchg dec sub mov pop sbb cwtl shrb push pusha hlt xor push cmp cmp xchg pop fcmovnbe lds cmp push call outsl mov push sub es or xlat mov dec jae cmp lods xor jnp mov add or push push mov xchg lods add popf (bad) cld cld mov mov mov xchg xor cs scas movsb out mov mov adc stos xor imul dec fldl add jg inc stos sar cmp jp push daa inc ja outsl pop mov push push mov aam add jb pop mov cltd or xchg jae dec jmp aam mov jbe pusha mov push iret stos xchg call (bad) cmpsl and cmp sbb xchg cmpsl and pop out inc mov stc dec dec mov imul or (bad) jne add nop xor popa fwait mov lods mov scas jle pop aaa sub aas xor and xor pop and fcomps or loopne pop jne cltd fcmove inc mov aad pop or inc xlat push lock dec out adc mov mov daa jae mov (bad) fwait or sub sti andl cmp fstl sbb (bad) ss dec cs fmull xor xchg dec add iret int les shrl xchg push outsl mov icebp test lahf adc push enter mov cmp push mov mov jp push pop ja sbb xchg and (bad) shrl in or in sub dec or in es xchg push imul lods cmpsb pop fs mov pop test nop mov inc pop push mov ret icebp popf push mov clc (bad) imul adc test xchg mov dec mov sub lahf push repnz (bad) mulb out lahf xchg inc jge lea pop loop cmp arpl subl pop mov mov outsl ss and xchg jge pop (bad) cmpsb push sti adc test iret or or mov add cmp dec mov enter mov pop inc add fmul gs jae test imul dec add mov test dec in (bad) mov call call push in xchg (bad) lahf fidivrl pop xor push mov popa pop add sbb dec sarb int3 fwait sub outsb out push mov sbb cmpsl ffreep xchg jns out sbb ret loopne cltd frstor arpl pop idivl fsub lods daa lret gs sub mov mov mov (bad) out pop ja jge out (bad) fildll adc fdivs insl fimul dec frstor insb inc (bad) pop stc mov mov or or cwtl push xchg cmp xorl fsubs out add shrb pop imul stc dec dec (bad) jmp inc lea ret (bad) loopne jno outsl push xor ret cmp jmp popf cld or flds push push je xchg dec scas pop xchg sbb iret mov cmp hlt pop mov outsb xor dec xchg mov idivl adc lods mov sbb sub push jl cmpl sub or aad pop xlat mov cmc (bad) stos add xlat inc ja jnp mov mov mov outsb add jnp add cli mov push flds and add sbb adc mov jmp std add sub xor mov sub test nop loope fmull cmpsb pop idivb mov xchg mov sub push shl mov mov imul xchg pop movsl mov lods jge mov pop aad push xchg mov cmp dec pop mov cmp push sbb push arpl inc xor xor push push dec push add arpl int3 addr16 pop jg cmp jbe mov lcall mov jae cmp (bad) cli mov popa push pop lea fucomip mov fisttpl cmp cmp dec fcompl adc (bad) lods jge fs fwait jp popf sub xor sbb xor inc and incb pusha loopne insl pop adc ljmp (bad) int3 out inc sahf mov scas cmp btc rcrl dec pop mov cmpsb enter ss mov fwait or lods rolb fisttpl add or lods push std lret pop mov add jl mov repnz xchg mov int3 test add mov (bad) leave fwait inc out push out mov sub jp stos jns sbb push inc and sub xor fwait or les mov cmpb out push adc xor or xlat or imul xor jbe test pusha std jnp xor mov sub jns in push cmp (bad) mov cmp inc xchg xchg adcb dec out addr16 mov pop pop hlt les dec mov inc jns arpl or stc push into dec push sub lahf mov rcrb out adc adcl movsb sahf cmpsl mov jmp into sahf add xchg jl sbb xchg sbb mov pop inc cwtl or push ljmp fisttp xchg mov push sti nop mov arpl lods jne enter fcmove enter ret and sbb push ljmp sub sub scas cmpsb push (bad) inc push icebp cmp enter cmc inc adc int3 sahf cmp inc adc adc push adc ds lods icebp pop sub inc mov mov xchg shlb test add std mov aam xor mov popa (bad) sub les dec stos test cmp mov pop add dec mov ret inc mov jle jne jecxz into cmp inc (bad) or xor sti cmp and aas dec inc into hlt movsl inc loope leave sub pop (bad) les inc test test insb out add inc jnp lods ds cli inc pop and popa stc repz je fwait mov sub sub fstpl aam sbb jb jne cmpb ds adc mov inc or into dec (bad) fisttpl out shrl lret cmp push mov mov sbb (bad) aam dec iret nop and ret stos ds (bad) lds imul cmp adc sbb dec jns xchg adc adc repnz mov xorl push lcall rclb sti das enter out int rorl out push and (bad) mov dec fstpl test lcall jle popf jne cmp sahf dec push mov cltd mov lock lret in sub nop or fiaddl or xchg xor mov clc loope xchg push cmp jb jp inc ljmp nop mov jecxz pop (bad) pop das xchg (bad) (bad) shrl push pop data16 mov ret scas in jb ss mov inc into cmp or je fnstcw xor xor ficompl test mov xchg xchg mov mov mov data16 xor pop mov aaa cmp inc aas scas cmp fcmovu sti loopne aas push mov jge movsb dec xor inc in mov inc xchg xor jns sbb ja add divl jbe adc (bad) jnp aad mov push pop pop addr16 lahf in xor sub in mov loopne dec jmp decl push or enter fs in lcall flds push jl or icebp lods push add outsb les pop sbb nop out push fdivrp mov sbb jae les mov dec and inc call nop mov add inc test dec jnp ret push inc das push and jnp sahf test jae shlb cld mov in fisubr pusha imul xlat xchg push xor icebp imul sbb pop push gs inc outsl cs pop inc hlt ljmp xor mov and rol ss pusha and mov das jge jo (bad) mov cmp pop leave mov cmpsb adc sahf pop add leave and mov inc dec cmpl scas lcall dec ds in leave or (bad) stc push loopne call pop xor jo mov mov pop xlat test push popf sarl xor nop add add cmp arpl sub sbb outsb inc shrl mov in add repnz inc add (bad) mov enter cmc enter sarb jnp dec pusha cmp xchg aad lcall xchg and pusha dec cmc cmp mov int stc test mov mov adc shr jg out dec and xchg cmp out stos xlat dec ficomp cmp pop cwtl sahf add or movb sub das jne (bad) xor xchg dec outsl fdivrl mov imul repnz aaa negb add testb shll sub lods leave out mov jg cld cltd lods call inc aad pop inc stos (bad) xchg aaa movsb scas arpl ret pop cmp jo xlat sbb sbb jmp fcoml or jb rolb ljmp mov mov sub jno adc scas andl mov arpl dec and jmp stos js dec xchg rorb dec into mov insl dec jo jne cmp mov (bad) adc lcall and push xor jmp rorl jle mov adc sbb pop dec pusha xor jns xor mov jbe and cmpsb add aam push test divb or inc mov mov mov xchg mov cs dec scas and (bad) sbb aam gs out mov imul icebp in or inc xchg stos fdivl in push xor fisubl lea jbe (bad) or sbb cmc mov jp sahf jp gs lret repnz inc lret jb xlat dec idivl jp int3 sbb and cwtl cs pop imul mov jmp (bad) into inc xor lret popf sub cmp ret sarl cmpsb xchg mov xchg cwtl inc bound mov movsl call jecxz xchg sbb jbe int3 sbb pusha in mov push imul addr16 out lea ss js jns lcall inc xor adc and xchg cs int3 sbb pop ret add and out fstp sbb push out imul dec jae dec cmp imul dec mull lock (bad) je jmp sbb ffreep sbb and (bad) xchg mov xchg inc dec pop int cwtl subw notl cltd sahf shr and mov mov and pop push pop movsb lds fcoml mov pop je push sbb out daa dec push inc add pop add cmp movd gs jns mov lret scas add and and cmp xchg inc bound pop mov adcl dec int3 inc xchg add jnp and aaa xor sbbl push mov std mov push inc cltd or mov incl enter cmpsb cmp mov mov ja pop push daa inc fisubr sub icebp (bad) lods mov xor movsl push sar cmc xchg roll jae jmp push in les je fmuls (bad) sbb adc sub pop xor cmp and testl jb pop cmp hlt pusha out pop inc nop jmp ds (bad) fdivrl mov (bad) hlt mov mov sahf (bad) imul push ja cs xchg dec pop mov push aas nop jmp xor (bad) loop mov leave mov mov pop xlat ffreep dec es mov test inc mov pop adc test std push pop rorl es or cmp decl imul into cmc dec test repz sub mov mov inc push sub mov lock xor stc scas pop in inc mov inc and aas fldt or ss xor push push (bad) mov sub xor xor mov sub es icebp pop frndint cs mov xor jmp xorl lds xor xorb dec mov xor sbb mov rorl rcll stos out or xor test mov rclb adc sbb aam cmpsb adc lea std mov ds daa xchg and mov stos cmpsb dec insb inc or dec aaa and mov mov jmp cmp int cmpsl mov enter cmp cld or mov pusha addr16 nop pop add das repz dec add ret xchg mov mov (bad) push and js andb push lods js push lret pusha and pop push inc fsub sarl and (bad) jp cwtl and mov pop jle insl xor rorb sbb jle gs add jl ljmp jmp xchg int3 decb sbb adc add pop loop cmp mov inc dec cmpsb lahf hlt and pop pusha mov movsb xchg xchg int3 push sbb jp arpl push movsb dec adc cmp mov daa and pop mov jo ss add push pop add sub out repnz cmp or scas mov cwtl adc ret mov sbb jnp add scas (bad) xor aas adc aas into das xchg pop dec jmp fistp jbe push xchg pop adc jb mov inc sbb mov pop mov out jl dec mov pop cmp mov fcmovnu mov xlat push inc add xor jge popa and rcrb or xor nop adc xor and je roll in push iret fs ret cmp push lock pop cmp dec dec aaa (bad) fidivrl roll fucomi jle popf sbb add outsb pop lcall mov fmul add ja jp adc lods mov (bad) test imul mov jg jae cmc out adc les push in fist mov outsb adc add movsb push in or xchg adc rorb push sti add aam cmp push sub sub push pop shrl add or pop movsb sbb cmp aaa das adc cmp jge and fisttp push add pop gs mov dec movsl push jecxz out inc inc dec push mov push aam pop cmp nop mov repz adc clc scas jge sub pop gs int3 adc cwtl cmp xchg sbb dec lahf hlt (bad) push inc test pop andb insl ja mov into arpl (bad) jae cltd lock pop fnop pop leave xchg adc into fbld mov mov test vmwrite and sbb repz adc inc adcl inc mov adc mov shll int3 push ds leave lret xchg aas and fimul inc push or mov cmp inc cld pop test add hlt xchg mov and aam pushl lods dec dec daa aas dec ret xor inc int pop xlat sub ja cwtl insb xor inc std sahf nop nop xchg xchg cmp adc mov imul sub (bad) adc bound sarl xchg adc jno pop add in rclb jo mov push test pop sarb aaa xor inc cmp add insb add lcall and addr16 ja or push pop movzwl out lret (bad) imul mov inc mov lea and sahf dec mov loopne cmp push fmuls aas push push cs sub addb push pop jne pop dec cltd xlat rcr stos jg loop mov jg sbb incl out out jmp or in jl pop inc mov add leave push stc inc mov pop push pusha out dec mov mov mov mov xor xchg (bad) fsub xor inc sbb fldl pop sbb lahf sub insl out and outsb mov sub inc cmp jmp ja xchg pop adc ljmp fnop mov and popf pop fwait push call pop adc lahf repnz fdivrl and movsb mov pop test mov gs rolb adc dec mov (bad) int3 add mov and push pop pop xchg addl out inc adc (bad) mov or daa push xor hlt into das push sbb frstor test test scas sbb mov fstpt popf xlat pushf sub cld subl lcall lahf lret adc nop stos test je dec dec js push rol mov ljmp push fwait add mov add scas sub (bad) icebp cltd mov repnz insl dec mov cmp (bad) cmp push xchg aas push mov popf test (bad) out xchg xor sub mov or add mov test rorl lea dec xor jne mov mov sub cltd or jb pop pop fbld jnp jge test mov dec pop cmpsb arpl enter xor aam dec icebp cmp push mov xchg idiv push sub fisubl sarl clc outsb imul jae subl movnti cmp aad push clc push push loope mov nop mov adc enter pop dec call aaa lods (bad) adc mov cmp push out outsb bnd (bad) idivl jae js xor dec clc (bad) jnp arpl adc pop sti hlt dec xchg outsb clc std movsl cld jb mov sub repnz dec jle loopne loopne jb ljmp icebp mov popa xchg lret stos cmp pop or mov and dec hlt jae add xchg jle xor out or and push fcom insl lods fs cmp popf sub cmpsl jecxz pop fstl dec adc in sarl or loopne sub jbe cwtl push push pop xor mov fbstp lcall cmp and in mov popf test roll psrld lods jge mov jae xor cmp adc xchg cmp adc and or pop movb sub arpl add sub mov clc aad inc mov jecxz push mov into inc jge jmp ljmp jns (bad) aad mov rorb or cmc leave mov imul inc adc mov sub push sti push dec jne add push dec into fidivrl and sub cwtl shrb fnstsw cmp (bad) repnz fcmovbe jbe jecxz mov loopne incl mov xor repz daa imul fwait call out shl aad loop jle cwtl sub push fcomps imul (bad) mov int mov jb sub xchg adc pop add ret or xchg dec aas div movsl jmp rcrl or int cwtl xchg sub ss sti xor imul outsl cmpsl mov (bad) or add xchg outsl adc test push xchg sarb push stc mov pushf cld push fistpl repz ss popf push leave aam xchg jno jecxz stc jmp jne clc iret cld xlat jb xor adc arpl dec outsl into cwtl insl (bad) push adc fcmovu cld inc pop popa subl add sbb cmc repz inc push fcomps popf and stos inc rcr inc pop clc pop lods dec mov jg lret test xlat outsb jl inc loope jns xor (bad) (bad) repz enter push cltd add push mov call lcall pop xchg inc xlat shrb jo (bad) mov xchg into stos mov leave pusha cmpsb sub mov add mov jb and jae andl xchg ljmp inc mov inc ret jge insl imul or aas popa js ljmp and inc aam cmp cmc clc (bad) xor loop fidiv xchg test add inc test jmp insl insb add mov popa or push (bad) jle mov xchg or pop mov or fisttpl aaa jns xor adc pop gs popa adc not cmpsl into push dec jnp in adc lret popa jbe (bad) faddl sbb rcrb push mov mov mov sub repnz rcrl ljmp xor and and test or pushf rcr xlat jge inc add andl es (bad) jno mov or mov (bad) cmc out prefetchwt1 ficom ds adc rol push sub into sub test lret mov sar in and push out btr adc fildll adc sahf push aas mov push lret xchg ficomp add outsl xlat sbb in ret sub das xchg xor xchg icebp mov sub pushf mul xor mov insl pop inc enter aas mov xchg dec nop enter xor sbb in xchg inc cmp cmp or mov fnsave cli or push cmp in fs loopne lock and pop push add sbb xor push mov mov dec call jecxz aad popa push rorb dec inc cmp rcrb (bad) nop insb sbb add orl imul jle pop and jb mov stc loopne or mov sbb push push (bad) jo add popa and inc loop and mov fmull dec jmp sbb in icebp test imul movsl push cmp push (bad) mov pop or in inc xchg mov push sbb nop scas jbe or inc (bad) pop (bad) cli push xor loopne and xor cs out negl pop and out push inc push mov fimull jbe push inc pusha pop mov mov mov push mov imul je stos test arpl dec out imul scas cmp (bad) mov jb jg mov push inc fadds lods mov insb mov xchg push or push mov and orl pop pop inc jl out xor movsb (bad) mov mov movl pop std mov (bad) jmp repnz mov test xchg sub lcall out nop dec sub lret aam ljmp mov cmp bswap inc mov xchg cwtl sub (bad) xchg or lock inc shrl xchg mov sub and insb sub push iret xchg xor pop pusha add pop cs std data16 mov ss xor mov aam mov push (bad) xchg imul cmpsb or push faddp lcall mov adc jo cmpsl cmp arpl es lcall xchg push pop sub sub dec dec into mov loop clc or lahf sbb sub fs mov insl leave inc lds cli out data16 aaa mov cmp or adc (bad) clc xor lock xchg lock xchg popf dec jbe push shl nop cmp out out cs jl sub cli push or cmp inc xchg icebp push xor pop (bad) mov fs in xchg iret aas or cld xor lock enter mov fstp pop jo in dec add fdivrl lret mov or outsb cmp jnp daa outsb xchg xchg loop sbb (bad) xor scas (bad) or insl add mov dec fcoml js dec data16 mov sti scas or fidivrl flds fldt jmp xchg jecxz (bad) int3 fs (bad) pop out (bad) ljmp into cmpsl sub jne rorb pop (bad) xchg (bad) xor decl aad cmp nop sahf mov in sub xchg adc dec add out mov (bad) cli lahf (bad) rclb int mov outsb dec arpl lea sub ss dec adc dec scas (bad) mov add test test popw mov fmuls std jns fnop js cmp add pop ficomp andl push xor xchg insl cwtl dec inc (bad) outsl ljmp dec sbb sqrtps mov xchg mov mov (bad) imul roll pop jg scas ds push mov cmc je and jno inc cld (bad) pandn pop cltd rcr (bad) incb inc fisttp mov jb cmp cmpsb inc (bad) mov push sbb lds sarl aad jecxz out nop jmp ret sbb test adc or loope jmp dec sbb leave pushf (bad) or push inc scas popf dec (bad) sarb mov xor pushf stos (bad) rol les jo je int sbb mov push outsl pop stc mov xchg jg outsl jecxz xor mov sbb jle test je xchg test and xchg (bad) in pop clc js stos rorb xchg jo jmp (bad) sub loopne xor outsl in dec in scas fdivr jecxz rolb fs jae shrl pop hlt jmp mov std inc sub mov inc out mov scas inc stos jecxz adc add mov inc jb sbb enter mov rorl adc mov ret jne (bad) mov jl xor aad mov push (bad) dec inc popa repnz push aas push out sti (bad) test nop jae push sub xor mov or add (bad) inc imul dec mov icebp or xchg fdivl xor inc stos xlat add out sbb inc mov xor pusha fstl lea popf pop push pop popf mov rcrl sarl jmp jl adc shrb fs fstps dec jb jns stc mov (bad) mov xor hlt scas out repz out dec popa lock adc repnz mov popf push lock mov test xorb and (bad) adc mov cli ficompl pop pushl push dec test lea push cld push sub (bad) loopne xchg fs sahf sbb jle test sbb mov insb mov pop mov mov mov (bad) fnstsw push push inc iret stos ud2 dec aam aad nop in xor mov push sub clc int lcall cmp fsubr or mov bound (bad) in add (bad) xlat aaa lret jg xor test adc cwtl ds ret push icebp js sbb push add call lret repz dec and sub into pushf mov cmp leave stos sub in stc cmpsl (bad) jmp callw test lods cmp cltd and cli subl mov inc dec je xchg push aas xor mov mov lds xchg jb std (bad) mov xchg loopne cmp lea or mov push mov jecxz ds popf jbe or les push mov jbe and addl dec add jmp test lret sbb xor xchg sbb dec xchg movsl ds fmull push lcall nop xchg adc jo test sub in clc dec dec mov nop out fnstenv scas mov ljmp inc xor stc aam jne in inc lcall push call and mov flds sbb xor push ss adc in out rcll les xchg xchg rcl cmc sbb sub dec adc cli test subl xor xor cld ja ja aas or mov rcrb jno lret pop lea subb stos sbb mov fstpt sti (bad) adc mov inc cltd stos fstl sbb and mov les insl jo fcmovb mov test loope frstor bound mov add mov in push mov fild outsl inc popf outsl xor jl sbb xchg mov cmpsl inc sub dec cwtl and sahf push (bad) repz scas push mov or inc sbb jl cmp adc daa xor inc sti jmp pop imull jge xlat les jle jno mov or sbb (bad) jbe loop outsl clc repz inc dec dec test fnsave and lods ja stos imul add mov push daa adc jle test pop fistl call rcrb jb hlt sub aam insb mov pop pop mov fwait add push push aaa icebp movsl cmp jbe xorl or sbb jns fsubs cmp sub push jo mov sarl mov lcall mov nop insb sarl cmp push mov adc out rcrl cmpsb push adc dec pop fiaddl pop fs xor das cmp cld loopne es popa mov je loopne test pop pop fwait test jno pop cwtl mov and xlat or adc sbb mov repnz into inc imul aad xorb pop jl popa test xchg adc sbb jecxz adc xor stos mov jecxz nop pop hlt jecxz push mov sbb jo movsb fidivl cmp sub dec adc push (bad) repz hlt sub xor adc test mov cmp sbb adc xchg andl cmp inc fidivl sub jp (bad) cmpsl cwtl loopne or lods pop sub jle in and es dec in lcall sbb dec (bad) in loop sbb repnz inc in imulb xchg ss push lods pushf push test stos push inc sahf jmp and int cli mov into pop jmp into lods mov cltd loop sbb movsb xrelease fucomp jne ret idivb cmpsl xchg mov push aad xchg (bad) je cmp es lcall lcall jge xlat lret cmp push xchg and inc or sub mov ljmp dec mov into adc jno movsb es dec mov add sbb mov pop xor mov test xchg movsl sbb nop jmp mov jmp xchg (bad) rorl leave xor mov lea cmp push inc adc mov fnstenv sub add adc jb (bad) adc pusha aas cs (bad) sbb add sbb fildll inc xor jge fcmovnb sub cli pushf roll inc add pop jle cmpsb (bad) popf ja (bad) es lret jl int outsb xor int3 ret test dec dec lahf movsb fwait scas lea rclb lret sbb fidivr jecxz fmull sbb jno pop mov int test fcmovnu jbe int test xor das mov out sub xor mov xor cs cmp lahf xchg adc sub sbb mov pop fimull mov inc jmp xor xor or mov cmpl sbb dec push (bad) jo mov add lods in or mov mov mov ds pop cmp push mov lahf mov jne push add data16 cmp add push adc inc insb mov sub sbb faddp xchg adc in or sti arpl xor xchg ret and ds cmpsb lods lcall aas pop (bad) ficompl add (bad) mov and inc mov sti mov addr16 adc jl sub pop negb aad jle mov cmpl outsl xchg push sbb es sbb mov mov fistl addb pop lret lock faddp mov cld (bad) fiadd jae loope mov fild mov popa shlb jp jp jge repz pushf or pop sarb xor call aam fcmovnbe rcll sub test iret test mov inc adc push (bad) xchg repnz mov pop rcrl or lahf sbb mov cmp cld mov pop sbb sbb dec pop out into fcoms push aam imulb add push mov ljmp mov sub in xor lods sub and sub sub out pushf (bad) (bad) pushf test jae xchg int popf ss sbb subb push cltd xchg rcrb popa inc in shrb cwtl cmp mov mov (bad) pop jp cmp xor add rorl pop pushf ret sbb pop imul pop repnz push inc mov or jae mov push add or loope push xchg inc xchg sbb loop js outsl repz in pop cmp xor lret inc and jmp sti sbb lret push sbb cmp pop lea pop aam or mov or push mov stos arpl iret lds (bad) je sub mov push mov ss add sti jbe into (bad) gs mov jl xchg enter xlat xchg mov xor mov aam addr16 fprem1 aas movsl mov repz cmp in nop scas or in setle js jo or jnp pop mov stos insl add mov stos jo dec or dec iret mov add jg pop cli decl push pop dec inc dec mov xchg call add mov int and mov or popf out lret mov (bad) loopne popf add imul hlt adc jno bsf ss das xchg inc push imul (bad) push ljmp sbb mov loop adc sbb cmp push movsl cmp xchg inc lret imulb xor ret dec jns mov jo lcall pop add jl jge pop mov repnz aaa loopne jecxz cltd and jp (bad) push pop xlat clc inc (bad) dec inc xchg dec nop ljmp out add daa cltd dec lock cwtl mov and aad xchg sbb push pop pop adcb insl push fldenv jecxz fwait xchg jnp pop xchg std xor stc inc mov push push fisubl outsb push loop in cli mov stos aas ret rcrl sub push das xlat mov aas insl test inc or lret push lret and fstpl and in cmp jae xchg xor negb mov or sub subl movsb fldt lret enter cli js push mov mov inc sub push (bad) and and pop cli insl push jne lret movq out ret sub icebp inc movsl mov mov dec stos les stc (bad) xor iret dec faddl sbb into leave jnp and mov out mov mov add (bad) xchg ret push int xchg jle fisubr push mov xorb test das add into ret aaa push inc sbb mov cmp jae and add adc dec popf test shrb stos (bad) call enter stc ds jge cltd fimul jp adc decl (bad) mov dec dec xorl mov jecxz cmp pop add fcomps (bad) sbb les insb xchg add xor adc paddsb aam call nop test dec mov lahf mov pop (bad) sahf jge mov insl inc mov jns cmp adc adc pop das (bad) stc movsl xor outsl js dec or cmpsl push icebp mov ror aam repnz mov inc test mul (bad) icebp fisubl out adc outsb jl test xchg cld stos jae fmull or inc mov adc mov (bad) out fs imul or dec sbb int arpl pop sub jmp ljmp loope nop imul adc and lds inc lahf jne lea fisttpl adc cmc push nop ja and popf ficom jb out daa push dec xorb icebp jmp push outsb xor jecxz sub push pop iret in ja push adc out jo jmp pusha mov ret inc and xor jl dec xchg sbb lds jg sti add pop bound ds inc mov mov cmp test les jno xor sbb jecxz ds leave pop cltd or dec test adc je fwait idivl negb not std cwtl js (bad) mov jnp imul cmc lods mov stos pop or les out or jge pusha and xchg push out jae (bad) scas adc lods mov imul daa fildl mov push xchg out aam mov push sub addr16 add jbe test mov ds pop dec orl pop jae psrlq lds hlt jae lahf lods mov fdivl repnz mov (bad) adc or (bad) cs xchg scas cld or cmp into push sbb enter sbb inc sub and jo push pop bound fsts sbb test daa pop inc fdivs cmpl (bad) xlat out loop jno (bad) mov (bad) xor xor cmpsl sbb mov test lods jnp add repz sbb and mov mov adc or lods add fisttpl arpl in xor sar mov cmc fnstsw roll aaa dec pop cwtl loope xchg push lds mov jne hlt lret (bad) jne cld popf repnz add pop aaa or adcl (bad) (bad) aas lock pusha imul imulb inc and cmp aad int adc rep ret icebp sbb or dec sbb (bad) in lret inc fcoml pushf repnz jle xchg nop out push in xchg add shll ljmp pop cmp loopne dec adc xchg inc xchg xchg call jns loopne cmc xchg inc loope sbb inc sub ret sub mov mov xor or imul stos push lods popa xchg push adcb das mov loope call loop into insl loope and jg mov dec (bad) lahf fist mov sahf push cmpsb lods lock repnz mov enter and mov cli xchg mov jge ficomp dec mov mov into (bad) outsb jbe lock dec mov (bad) or push mov adc sahf daa mov daa in push int3 cmp insb arpl push mov (bad) (bad) or repz jmp mov cltd iret push bnd scas pop mov rorl lahf out addr16 movsl popa insb mov jbe or fidivrl jns mov push out cmp test fsubl xor cmp mov (bad) adc cmpsl fistpl pop inc mov (bad) repnz in ja pop in mov sub imul rclb (bad) xor pop loop cmc scas inc nop adc out aad adc adc lret int3 shrb add fstpl imul addb sbbl loopne sub sbb mov jb pop or add adc dec pop rorl jno and into stos iret push xchg mov sti test stc xchg inc jnp call mov cmp lock mov out pop fidivl or adc pop outsb sahf jns insb stos popf sbb xchg mov lock and and fdivrs add shll loopne sbb ret leave aam cmp mov or cli mov sar out test mov ret add adc mov sub or int3 outsl xchg flds out sub pop call mov gs xor into sbb inc in sahf stos fiadd pop xchg cmc cmpsb je lds test subl pop test test xor adc sub or (bad) (bad) das js dec jae sbb nop xchg js (bad) ljmp xor shrb out loopne lret in (bad) xor imul scas pop dec fxch jne mov lods cmp stc btr sbb jmp into lcall cmpsb test int je xor (bad) ljmp (bad) jge sbb cwtl xchg pop push inc ret daa add and int3 mov and cmp pop mov paddusb lcall lcall add mov (bad) push mov test push jns adc jmp mov ror mov dec (bad) mul test cmp loope test (bad) sub mov inc in push arpl dec insl (bad) (bad) jbe mov pop push aaa jbe adc in in xor mov add mov je sub jns xor mov add pop sub sub daa or int into pop xchg ret in mov and enter in push test rcrb xor jp outsl sub rorl push outsl dec dec orl or fnstenv cli sbb xchg push cld test scas or call mov lret lahf dec lods shlb adc sub jno jecxz ds pusha cwtl and ss dec xor (bad) jmp (bad) mov dec jns and mov sarl inc shrl jns (bad) int3 dec push dec sub and pushf ss lds dec cmc cli fwait leave lret out mov inc aad sbb push popa xor iret push sbb sub dec test in lods cmp or sub cmp rcrl pop mov sar push scas mov cmc test dec xor jp xor cmpsl loop jl and inc test sub jo (bad) jp nop fmull jnp (bad) iret fisttpl add (bad) ja (bad) dec insb xchg repz daa xchg imul sahf or into jl movsb inc (bad) or popf jl int3 shl fldenv dec xchg mov jb push ja or dec pushf push jge stos outsl push loopne and cltd adc jmp aaa inc pop xor js or lahf adc (bad) mov add xchg das add imul (bad) mov nop mov into dec (bad) mulb imul daa inc cld push icebp sub cmp jmp in jge scas in (bad) dec int3 mov stos push std cmpsl push or push iret mov les repnz lds sti jno mov xchg int3 popa cld jle jb addr16 loopne sub push out mov lods cmp mov mov enter cmp jg jnp adc push and xor mov fdivs pop or out or je mov fs jecxz out mov int3 jecxz test xchg shr int3 push xchg jo mov xchg jae jmp cmp enter loopne aas cmp fcompl loopne add push shll int3 test inc sahf repnz lahf or mov dec fimull pop push arpl inc and jmp jge imul mov adc loopne fsubrs mov insl loopne popa mov ja xchg stos sbb dec lcall adc xor test popf lcall mov in jne decl hlt mov pusha sbb mov mov addl stc sbb mov js ds sub scas adc add divl mov ljmp adc jb push subl jae scas xor mov loopne mov test mov mov push int3 and stos mov cmp scas hlt add scas cmp ss pop jns mov push addr16 sbb loop xchg adc mov mov adcb les scas stos push fidivr mov orl dec adc pop stos mov (bad) push push pop iret sbb addl sub push jno ficoml xor out pushf cmp mov push int daa js je push addl cmp dec pop repz arpl push pop or mov cmp (bad) jnp pop push sbb sub mov pop mov add adc cmp adc ljmp xchg fisttpll mov imull insb pop cmp (bad) xor xorb mov mov lods xchg lret xchg sub cmp (bad) rorl sti and rcrb pop adcb inc hlt push scas stos (bad) into or stos add (bad) cld int out dec leave (bad) pop jp push inc out jb dec loopne ror cmpsb pop dec hlt sub stos push test (bad) repz (bad) jno je or shll pop adc mull (bad) pushf popf cli fwait push cmc sub xchg nop push mov test and xorl pop jge and lret mov mov out mov test das mov mov cld popl movsl daa rclb push xorb nop std cmp jle pop clc insb cli mov jecxz arpl ret mov subb je xchg jle inc cmp add jge lock xor cltd pop repz sub insl add lcall jbe pop sbb jnp mov jge jp xorl jae push lret push fistp rcrl cmpsl cmp sub inc inc outsl jmp mov cli jp mov mov add inc dec (bad) imul jg jmp inc mov clc jo lret dec mov xor push imul les (bad) push xor cmpsl mov es out inc xor pop std adc clc jns adc lret roll mov jae,pn xchg sub mov sbb stc sub sbb adcl jo lock mov dec adc pop pop add in insb or (bad) push clc mov mov xchg add sar jl mov mov stos loop sub xor pusha mov jp je fidivr xor ret sub jle,pn cmpsl push fsubp leave fistp cwtl push jno xor xchg je (bad) cmp out cmpl mov mov sub (bad) xor or and in int3 test push aaa stos jnp (bad) dec test push lcall cmpsb cmp sub sbbl mov jp js or inc ficoml cmp outsl inc (bad) adc ja call insb mov add (bad) mov mov inc lds movsb sbb cmp and jecxz clc inc divl cmp pop xchg jne subl jnp sub jg and mov mov jge lods lahf (bad) imul mov jnp icebp xchg ret sbb repz scas sbb pop shr push cmp lret cwtl pop stc or fwait les in cli adc inc insl in cmp sarl jns es in jbe sbb (bad) mov (bad) pop inc pop (bad) jns jmp aas ja ss mov push and and mov pop mov mov sub sbb adc in pop pop mov lahf fiaddl cmp xchg mov mov packuswb dec movsb cmc rcrl mov add adc fsubr int3 dec cmp add imulb push cltd dec (bad) mov or int popa dec mov adc dec fisttpl sbb icebp enter and insb cli (bad) pop xchg pop xchg ffree arpl jo cli fwait adcb pop mov push mov cmpsb in repnz pop jmp sahf ja push fisubrl out dec adc adc push and dec and (bad) mov push sahf stc sub xchg outsl sub dec xlat lahf mov ljmp add icebp push (bad) xchg mov or jmp std cmp lcall enter pop lock clc cmp movsb xchg sub pop xchg mov and xchg jno push mov adc sarl mov stos push pop andb pop cmpsl jl fist cmp jb or fdivp jo sbb xor repz cwtl fsts mov aaa lret mov xchg xchg (bad) mov jg cmp adc repz fdivrs cs or jbe xor xchg sarb aaa lods dec lods into aaa pop push fisttp ret in jne fcomi adc push dec inc add lahf repnz xchg mov and int3 stos scas inc ficomp test push xlat scas xor mov fstpt add mov dec mov imul insb cwtl xor adc rcrb sbb pop pop insl adc mov cmc mov ja popl mov mov (bad) and inc inc jl (bad) popf lahf popa push lcall (bad) hlt cmp mov mov (bad) movsb and cltd cmpsl iret lea mov outsb aas or mov sbb pop ret mov popa cmp decb pop xor gs add xchg dec repnz ret xor mov pop int3 add or or test push (bad) fistl aam stos mov dec mov mov out jno das mov sbb xchg mov mov mov xchg push movsl lret ret push data16 leave add adc or bound lods inc loop pop mov repnz pusha adc jbe aas lds rclb xchg rcl inc pop pop sub test loope fsubrs adc and cs cld cmp std into push jns sbb in mov sub (bad) cmc push fsubs hlt bound dec push divl add jb lods inc adc push push add and outsb je pop and adc jno rorb xchg f2xm1 mov in std xor and push test dec or test dec insl inc (bad) mov (bad) lods add pusha stos test fsubrs subl imulb push dec pop aad mov cli mov xchg (bad) push push sub adc aam adc inc inc xor idivb mov lret mov xor dec lahf sbb mov lahf mov add dec pop aam sub mov in mov bound mov scas adc shl scas push shrb adc mov cltd iret inc xchg insl pop cmp xchg mov push mov add xchg je dec add sahf nop mov xchg lds out xchg rcrb pop dec jno test inc or cmp call out iret sti pop adc push mov xor jae pushf cmp test pop je stos inc repz shrl (bad) push ja xor les and xor dec adc test jg,pn cmp push mov inc dec xor jmp das dec dec push jl pop fistp or ds in iret mov stc jo loope push jecxz mov out cmp loop and (bad) cmpsb jae std inc cltd mov ret mov jb cmp daa out pop repnz xchg bound pushf add inc jp adc dec xor lock lods mov das sub jg repnz cmp loope subb xor cld cmp loop rcll lods inc or arpl aas js scas jb mov adc sub outsb out dec add push enter cwtl cli sub gs sbb orl and jmp adcl nop jle adc repnz popf inc rcr (bad) stos xchg gs call lods ffree pop aam adc inc mov arpl or dec dec test push aad lock test ljmp add pop push roll push jle movsb out (bad) mov shlb pop mov mov stos adcl push jnp jns popa cmpsb not add jmp lds (bad) cmp cwtl loope or cmc rol inc xor mov and ret lods outsl mov adc fadds mov cmp xor test repnz (bad) inc (bad) fwait inc pop cmp push movsb push lahf (bad) fdivrs inc pop pop xchg or cld nop pushf xor pop out pop jbe sub sbb pop mov (bad) push adc pop sub popa sti lahf lds adc push insl insb bndldx sbb fwait insl pusha dec dec pop adc mov xor sbb jl add xchg xchg cmp std add repnz test mov xchg pop xchg rorb sub sahf popl or mov mov movsl push sub ss adc clc rclb lret fdivl push mov out loop jae mov popa adc dec and ffree mov xchg ja (bad) pop and rcll hlt out andb and std sbb inc dec int3 pop and lock or xchg mov jp dec push mov pop mov sbb dec inc imul je lods mov cwtl dec xor push mov push cs arpl aas insb sbb xor aam xchg push das jle inc sub and add cmp sahf pop test or clc out fwait (bad) es xchg iret bound jnp xchg inc stc ja mov xor or add fdivrp mov rorl popl ss sub pop mov jno add mov jp in mov aas fistpl xor ljmp sub jg aad pop adc push dec or call je cmc addr16 ret out popf les cmpsb xor sbb in mov sub sub clc sbb sub pop gs je lock aas lahf je xor jge inc gs jbe inc pop mov push jle mov mov push cltd into or paddw sub lcall (bad) jno rclb cmp in fmul cmp ja out decl inc lods push mov inc (bad) int mov dec lods movsl (bad) jb jp inc pop ss repz outsb lds dec add mov mov inc mov jp stc and pop pop sbbl out js lret sbb ficom dec dec jmp pusha mov popa mov inc ret fildll xchg arpl ss aaa loop dec inc mov xlat movsl sub pop cld fist loop dec lods (bad) icebp dec aad inc dec lret pop aas mov popa inc cmpsl mov sub xchg addr16 mov dec fisttpl data16 xor and pop sbb xchg (bad) cltd push sbb (bad) and jle lea int3 push sub jo or push jl push (bad) mov inc jo cltd notl sub cmp inc mov sbb in loop push outsl push ret jo xlat mov int3 xchg out jmp fistp lea (bad) repz inc or mov jecxz lcall or sbb fsts iret pop imul rcrb outsb lcall cmc inc or xchg loope and mov or leave dec imul cwtl lods cltd aaa xchg loop sub fmulp mov mov inc pushf sbb sar mulb sub fistp fmull xchg pop pop xor mov sti fmull cltd xchg dec in sub and xchg dec cltd push jecxz ljmp repz push mov test or jge loope std pop test adc xor ss divl addr16 jbe mov adc add xchg das outsl mov or repz cmp fwait sbb xor mov xchg fbstp mov xlat or push mov add lds aam mov jo push (bad) fadd dec inc lahf push test (bad) cmpsl je cmp cmp je mov cmp ret jp cwtl pop (bad) pop inc rcl outsb cmp ret mov fbstp inc inc sub jb or stos or cmp call mov jmp mov sti adc cmp adc lods mov jo mov jne ss int push mov xlat scas rsm mov mov and arpl mov inc add (bad) outsb mov or ja cmp lds insl test push sbb inc je mov es in out dec mov sbb lcall mov inc jo loope xor in fnsave or jb jns xchg popf fnstcw in dec in pop sub mov mov out jns adc mov and sbb pop lds mov lret inc or dec mov inc hlt lds sub cmpsb ds ss loopne and and fdivrl fldenv inc sbb movsl test fimul mov and sbb mov lcall test nop mov pop mov enter lods sbb cmpsb sub jne (bad) aam insb sbb cwtl arpl sbbb shrl stos int sub lahf orb cmp flds adc ja cmp push jge xchg lods and out hlt inc hlt or or ficomp lods scas push mov cmpsb bound cs mov popf adc ffreep daa sub adc xlat insb pop (bad) jae dec xor push fimul sub jno cld fsts sbb repz fisubrl sbb push jne adc push and mov scas dec pop outsb cmpl sub dec hlt (bad) mov inc lds xchg xor inc inc (bad) fcompl rep jo ret fdivrs pushf jecxz jae push lds sbb mov rcrl push (bad) mov out mov insb push loope subl mov mov jbe leave inc fs test leave dec loope jbe xor adc clc push fstps bound out rcrl into out scas (bad) out push sbb push xor imul out adc rdtsc fnsave and inc in arpl stos aas popf fdiv sbb lds xor push rcrb jle add push ret cmp add (bad) call push xchg outsb xorl xchg in pop cmpsb sbb ja sti roll (bad) cmp pop cld lcall sub add nop mov loope lret ss add sbb dec dec arpl test icebp pop test lock inc (bad) call pop mov xchg in or shl stos add (bad) sti pop fcoml fwait lret lret jno mov mov mov add leave mov jge mov push into xor or adc out ret fsubl pop xchg aad mov inc test xor (bad) shrl inc cli sub pusha loopne jg fxch jno (bad) inc mov scas data16 sarl loope pop ss shll xor jmp rorl sbb test out lret jmp repz lea lret subb mov push stc stos push sub mov inc mov in int je popf jle jecxz shrb pop pop js mov aas pushf out mov sar adc (bad) lahf push sub (bad) fsubr ljmp xchg cmpsb imul sbb mov adc add movsb mov dec xchg mov pop lock int sub test insb aad dec popf jl push ret out jle add xor xchg add push inc cltd xchg js lcall aad cmp cmp cwtl lods (bad) lock rcr mov jnp pop push push sub lock iret (bad) hlt outsl sub jecxz in adc dec sbb mov cmp std stos mov xchg roll dec arpl fildl push lret fistpl clc xorb data16 mov adc mov mov pop mov inc mov jp pop pusha xor pushf ucomiss xchg in out out mov push js cmp push and xor xor out rol out shrb inc sbb xor pop inc adc hlt repnz add add add push push out fidivr sti aad sbb sbb mov fsts sbb mov cli pop mov push in dec in bound or imul xor imul rcrl jecxz inc jge popa outsb add add fs fbstp add fist pusha cmpsb dec adc cmc push push lahf (bad) (bad) push mov call jge js push mov insl adc jp jmp ljmp sahf push mov xlat imul daa mov testl xchg (bad) outsb inc push cmpsl fidivl dec (bad) jne aas rclb jb stos test inc lock jne rclb (bad) push test lcall sbb mov and pop icebp xlat int jb (bad) (bad) ret fnstsw lret cmp pusha repz cli ret xchg mov rcrb mov test jnp ljmp popa out jle repnz or jmp iret ljmp pop outsl fwait inc popf xchg sub xchg imul rorl push pop jne,pn repnz mov rolb push enter dec test cmp mov lock or es je jg jmp push das mov mov movl mov pushf mov out lea cmc pop lahf pusha cmp pop adc inc sbb ret mov (bad) push cmp mov jmp popf fs movsl insb ret dec dec (bad) je imul insb pop cmp shrl jae sub je mov imul and lods iret sub (bad) xor cmp rcrb mov sub insb sub (bad) sahf push xor adc mull xchg xor push push inc xor scas addr16 lea clc add pushf ret cltd (bad) dec jno loopne jge sbb das scas mov sub dec push das xor in loope push jl fisttpl xchg xor dec xchg add int3 (bad) int3 inc insb imull mov cs in repnz das and pop pop divl or cwtl aam sti fistp xchg pusha push lea aas inc inc pop ret and sbb mov bound leave test aam cli jecxz jbe mov (bad) clc fwait xchg sbb lret pop imull xor jecxz lret into mov fmuls out xor jle sbb iret repz dec mov sbbb loop cld int3 andl outsb push imul inc das cmpsl lahf sarb in mov fsubl cwtl xor stos rolb test bound outsb mov inc inc inc sbb fadds adc roll shlb xor sarl fist out outsb daa cmp cwtl add aas mov cmp mov lret roll mov cmp popa aam push test inc and test andl or jl int jge inc add fs add in lret jge inc sbb mov dec (bad) in movsl fcomps cmpsb sub fwait jge jg ss enter (bad) cpuid aas loope push movsl test cld out lods icebp imul xchg jno mov inc or imul mov cmp pop clc je lahf pushf pusha int3 push fsubrs stc pop and cmp jmp jae adc inc ss cli jp clc xor ds mov mov das movsb lea cwtl imul pop rclb xlat jb rorb cmp push pushl push sbb pop imul fmull es aas push jle xchg ffree pushf add loopne ror loope cmp in jp pushf jno sbb sti pushf lret push jbe fs push jle imull (bad) pushf push inc (bad) pop pop scas dec test das dec or add or aad lock lea mov and je sarb mov xchg mov xlat sub dec xorl cwtl push add dec pop aam add pop std mov shlb fs mov sub sub fsubs pushf push mov adc push lcall (bad) lds and and dec mov scas call xor movsb and adc sbb and out faddl out fwait jo mov mov inc push mov mov arpl insl mov nop fadds lcall cmp (bad) popf shll daa adc sub stos (bad) arpl cwtl loop je in mov adc sub or cmp mov fwait jecxz xor adc pop mov add adc stc mov xchg xlat dec (bad) lock mov inc sbb dec pop cmp inc ret dec loopne aam jb inc icebp and movsl call pop dec xchg negl sub xchg out or add js sub (bad) in fldcw in mov ret mov outsb in mov mov int3 mov mov es sar bound mov lea aas sub xchg popa mov push insl int3 jne sahf dec out cs jmp pop test shr push push push popa jae scas das add ljmp test mov sbb pop add pop lods (bad) pop lods push dec and mov inc std pusha cmpsb out mov jb mov fs dec ss dec inc maxps or inc pop adc add das pushf rolb mov clc mov xchg (bad) mov mov rol (bad) mov mov pusha out aam ficom negb pop popf aam in subl or dec and or xchg xchg mov mov outsb test sbb jge pop sbb jp jo dec push xor (bad) xchg je inc hlt out cmpsb pop mov idivb clc outsl ret cmp aas into lods loopne adc sar or pop mov jbe cs jle fisttpll xor lret and icebp jp in push fcom in loop ljmp or std andl pop inc push mov pushl push int3 lret adc jl xchg mov xchg or and sbb mov aad out test fstps push add sub lcall or mov nop jg bnd mov cld addr16 (bad) ja push cmp icebp sti push dec dec push adc add (bad) loope xor push mov mov and mov les mov or das jg xor lock js xor mov dec outsl and adc sub adc pop loopne pop aam add mov mov stos push pop mov test outsl pop movsl mov test ficoml mov push push imul je ss xor dec or fistpll inc mov ret xor push pop scas mov mov xchg push or stos jmp call sbb (bad) add mov xchg ds lods loopne and mov pushf pop mov sub iret lods add jmp cmpsb inc aaa ja xor (bad) jl inc mov pop mov fisttpll push addl mov add fs pop outsl ss push sarl out lea lock jns or adc mov mov lahf xchg iret or push rcl pop xchg test ja out (bad) imull adc jle test sub iret mov ja mov pushl cli lret add aad mov cwtl pushf xchg jnp push jg test divb adc cmc jmp bound fnop pop mov xor test nop xor cmp or and (bad) fldl clc pop pushf xor bound push inc sbb push mov fstps int3 xlat nop roll sbb movsl inc xor jb mov enter xchg add ljmp pop cld or stc mov cs test cmp iret dec xchg pop lods mov adc cltd fnop pop por out (bad) mov nop loopne enter into pop or es movsb and bound ret xchg jl or xor fcmovnbe mov sar mov cmpsl pop stos sarl je cltd pusha inc (bad) or lahf sbb dec aaa mov adc insb xor popa int sbbl scas cmp loope mov xchg imul scas sub (bad) pop xchg movsb push das sbb cwtl fwait cwtl cmpsl lret mov cmc rolb pop xchg add xor (bad) sbb stos xchg ret pop icebp jp push xchg cmpsl dec lock cli add push cmp add enter lcall mov jns mov cmp adc cmp (bad) xor std js nop cmp mov idiv gs sub or cmp adc scas movsl ja idiv push mov ret add and jnp rorb cwtl cs mov popf in adc mov aas fcompl es mov sbbb xchg pushf aaa rcll loop inc xor es xor lahf out (bad) jmp mov mov in mov (bad) repz sub jge,pt pop dec xchg or (bad) lret adc cmc loopne lahf out or popf ljmp pop jmp push push mulb mov pop mov stos jl mov adc rcrl jecxz cli sub inc cs rorl ss mov ljmp rorb cmpsl xchg jmp sarb xor adc arpl add iret div push popf push (bad) loop test xchg cmp hlt xchg outsb or pushf inc mov xchg fist arpl cld sub fs mov jb jle lods jmp push add repnz (bad) cwtl mov xor call mov negl lcall std lods (bad) xor pop out pop lea lret dec addr16 or cmp adc cltd push xlat imul rolb (bad) lock cmp and sub insb sbb cmp fldcw cwtl dec inc insb pop add dec aam idivl cwtl push clc add (bad) test aam and ret in pop aaa outsl mov add ljmp lock mov mov pusha add xor xchg ret jno jbe loope cld imul mov notb push pop inc inc pop mov jno fxch mov sub push xchg inc or inc mov fcom cmpl sub in dec xor daa jge dec stos push pop add xor push addr16 mov bound xchg popa (bad) and mov (bad) mov mov in jae push jnp (bad) fistl mov popa outsl and cmpsl xor daa (bad) test test and lods adc dec fcos loop int3 cmp push daa or inc jno popf xor dec imul data16 popa add sub arpl fildll cmpb inc cmp pop mov cli add outsl sub es push cld pop inc fabs or test dec dec or xchg and out mov xor mull mov jo in cmp sbb sbb lock call fdiv repz dec xlat mov xchg arpl mov mov repz jne pushf jl fsubrl cmp pop (bad) xchg jle pop imul mov mov or mov loope lds repz gs cli iret fbld enter cmp pop push xchg sbb es aaa cmp (bad) repnz fnop lret xor pop es sub xchg inc nop xchg das xchg repz push mov andl out int3 push mov mov aad dec scas data16 mov sbb cmp rorb mov lret and sbb xchg popa xchg cli pop add xchg mov fisttpl shrl pop sub mov pop rcrb ja push repz mov pop daa enter and nop adc mov das into xor mov mov mov and scas sti lcall out jl xchg pop mov mov jbe pop pop mov popf fldt mov cmp or jecxz movsl lret sbb mov mov call xchg jb sbb mov sbb adc loop insl mul jb enter lcall adc lods shr rolb xchg lds and push sbb out stos inc add xchg mov add add xchg sbb dec pop sti mov mov sbb imul dec xorb (bad) or xchg push push outsb rclb xchg inc pushf or mov (bad) mov aas mov mov (bad) mov ljmp inc xchg jns sub dec loope jl fisubl fadds aam push in push and lds rolb mov lock rolb aas pop (bad) xchg fisubr cmp push jns or dec (bad) mov imul dec push repnz pop xchg ret addl fimull test in dec repz push iret or xor pop mov scas adcb loope and sti sbb sbbl lock jmp notb mov addr16 and jno push inc out add insl popa jbe imul or or xor and and mov popf add in ret push sbb add xchg iret lret inc cmp jo out mov dec jg jl cmp cmp cltd xchg hlt or arpl jmp mov es inc outsl mov mov pop movsl or lret mov mov in in loop outsl sbb fsub mov push das or aam cmp cwtl es jo out sbb in movsl pop mov inc cmp imul pop lds movsb xchg push xor rcll rol jmp xchg into mov aad test aas adc cmp mov fnstsw (bad) push push cli scas sti mov push xor push jle test mov pusha insl pop movsl mov lret mov mov loopne pop jg add sarb lods push movsl ficompl movb shr outsl test repz in pop xchg das repnz sahf sub sub adc and dec fldt push (bad) std ss das mov mov repnz daa sbb xchg cmp loopne sub xchg int3 pop fcomp add rcl jge mov enter lea inc cwtl adc fisubr inc incb push loopne inc jbe int3 popa lea movsb imul in shll jmp xchg adc movsl and je icebp push push test xchg cmp je adc sub jge add xchg in jo shlb pop xchg mov inc (bad) cld scas inc insl pushw push jns cmp xchg push aaa cmp sbb mov xchg cmp cmp push popa xlat add cli pusha dec cld xlat lcall jbe push or ds sahf test sub cmpsl sbb xchg (bad) mov aam jb cmp sahf dec shlb js inc mov (bad) int into or aam xor mov scas jmp out sarl dec xor and jmp addl adc sbb mov inc jnp jns aad pop sub push (bad) push cmpsb ret jge das and xor into ss outsl clc loop stos mov sbb mov rcrl (bad) push addr16 ficomp xor push lret pop sahf les lcall sahf sbb and insb jmp cmp add sub aaa dec mov aaa (bad) dec push push test push push add outsl sub aam push in lcall repz mov out ljmp push out xchg jg fist out or fnop sub pop mov pop mov ds mov push hlt sub push test dec adc mov leave psubw mov pushf inc xor inc ljmp dec and mov mov xchg js lret loop sahf (bad) mov in mov in sub clc xor add xchg lahf imul test cmc mov push dec cld orl jae cmp (bad) fnstenv pop push push adc (bad) jl mov and ror dec in cltd (bad) jge pushf decl mov mov pop cwtl push push pop lcall inc pop xor mov sub (bad) adc jge jle out int3 mov sub cltd jns cltd lods add iret lds hlt mov sbb rclb and and pop mov dec and sub jb out push fildll xchg xor pop (bad) jne pop scas pop fidivl xchg aad stos popa mov and lret xchg lea out call cmp mov clc mov mov sub and (bad) ja and repz mov scas cmpsl xlat sahf push lods jp adc sub rolb mov sub push lcall xchg js sub ficoml divl out mov jle popf xchg adc inc daa arpl cmp movsb push push cmp mov outsl mov sbb cmp mov loopne lret xlat popf roll je adc fldt cmp or jne shlb push sub push mov leave (bad) adc pop cs sbb push mov jo adc scas lock scas jg in je sub dec arpl and scas addl imul cmpsb aad pusha mov adc mov push cltd in or rclb mull cmpsb dec push cltd adc pop xor je mov xor inc and mov fmuls jle mov aaa xchg test add lods scas xor dec test xchg iret xor add add and push and push stc xor fdivs popa sbb cmp adc jae xchg inc int jp cmp xchg jb sub mov rcll call push inc insb and fsts cwtl and aas jmp adc mov dec (bad) inc mov test stos stos pop sbb fsts dec adc fisubl fsubrl stos push and sbb jle jo dec loopne aaa mov fmull push into rcrb jle rclb in mov fcmove lock and xchg testb pop cmp sub lret xchg adc arpl inc leave cmp xchg lret outsl mov mov pop leave add xchg lods push jnp ds (bad) jmp fstpl mov test pop es je push sub pusha or lds in lcall loop mov jno,pt test add test and sti lds push jl xchg std push mov inc pop mov (bad) repz (bad) (bad) mov inc adc call sub cmpsb (bad) jbe popa ja mov cwtl ret pop fdivr jl lret loop sbb push pushf pop push lahf hlt iret jecxz mov sub test jb cltd es insb in out in rorl and mov jnp sbb mov add sbbb cmp shlb push cwtl xchg jle pop lock jmp add xchg repz jnp int pop aad rorl je push push inc add dec ss inc sbb push imul mov or fs push pop or out daa jnp and roll dec in sahf sub cmp jne sbb adc imul (bad) gs mov out iret mov (bad) or lret sbb sbb idiv arpl popa repnz cltd aaa aad rcrl (bad) jnp lds stc pushf clc mov rolb (bad) fiaddl or loopne mov ret (bad) fisubl sahf out fmuls decb mov jne push add add pop adc outsl cld in jae loopne or ficomp adc pop (bad) call enter add fimull (bad) push jo mov pop ljmp pushf sarl dec pushw insl es lret pop push in jg xlat icebp gs (bad) xor add das xlat (bad) cmp pop out xlat inc sbb imul xor scas pop sbb mov js ret pop pop mov and imul rcrl jmp clc repz inc fimul inc je and into je das dec mov lds or ret pop pop frstor sbb push neg lock in je pop push mov test sarl lea (bad) jp jnp sub and xlat cmp aaa shrl or xchg inc jns push jp shl fcmovnu repz leave push mov lahf add jl and (bad) fadds jle xchg shrl adc sbb shlb clc fisttpl cmp (bad) adc addb mov sti sub shrb rcrl cmpsb mov sti adcl cld mov ds inc nop mov lock pop xchg (bad) into hlt test add out mov fwait or insl stc cmp mov sub sbb enter loop mov sbb sbb sahf or xchg jle repz lahf inc and or inc inc sub mov inc movsb in adc pop addr16 (bad) xor xchg fs cltd push jno repz js push fucom test insb test dec xor std inc aaa jecxz test mov enter inc adc je lea mov cmp sahf je or or sti jns lock dec mov sub sarb rclb nop sub lret pusha sarl push mov (bad) xchg xor cmc mov (bad) dec mov inc mov fimull les pop int cld lods inc inc mov adc (bad) mov dec fcoms stos in push push lods out ljmp pop das stc mov inc (bad) xchg lret mov (bad) lcall lds stos pop push push (bad) gs xchg mov dec sbb mov pop and andb xchg mov lock cmpsb adc sub push add sbb pop jns sbb std cmp jmp imul icebp cmp cmp lds add ljmp test cwtl aad inc pop outsb mov jns (bad) movsl dec or jo add repnz jmp (bad) stos and ficoml outsl cld mov xchg and mov sbb sarb ss enter insl mov outsl cmpsl popa sub ss push cmp sub mov push fdivr xchg mov popf fs mull push inc das daa out nop and clc repnz scas call and inc ret shlb lock jge push out mov out test adcl push repz (bad) popa call inc and pop adc push push pop je loope cli or lret pop inc ja pop hlt cmp fs outsl (bad) fdivrs cmp push pop int hlt adc mov test jbe adc call xchg in aad es test scas enter sbb inc xchg inc jae (bad) mov in inc push pop sbb inc lock jnp xor and xor lods push cmp fldl xchg aaa jmp mov add fnstcw jmp jno jnp xor cmpsl mov mov adc imul dec pop lock scas jbe sbb lea addr16 (bad) scas mov mov adc push pusha movsl aad clc bound cmp pop test adc sbb (bad) mov incb sbb test faddp ret sub bound add jl push clc mov setg and inc cwtl and loopne inc shlb in outsl mov (bad) ja adc pop in dec subb scas add adc fisub lods aad sar fbld pop pop and push (bad) out ficoml add pop scas add pushf das or mov movsl jbe out mov pop insl mov sar jnp xor pop sarb mov mov lcall in movsl jl sti aad cmp rcl cmp pusha push stc ja je pop xor or fadds jmp mov sbb ja out nop add sub sbbl loop inc popa push mov test into sbb pcmpgtd and dec pop sahf stos and cmp sbb (bad) cmc lcall add sti jg aaa popf adc push popa mov and sbb xchg and xlat push pop into lahf mov push roll out mov test dec mov out imul repz dec cs push jb mov call imul movsl out xchg adc mov out push mov cmpsb imul dec pop lret mov out xor mov clc incb inc sub leave xor test cwtl or js mov test or xor outsb fsub stos sbb lcall mov xchg mov push mov or xchg in insb add ror or shlb test std test push adc sub in stos outsb addl push sbb mov das shl (bad) lock nop and xchg xchg es and add xchg xor xorl bound push adc sbb add push push sbb lods xchg jnp mov jb mov idivl decb gs repnz (bad) adc mov dec movsl rolb inc lods sub sub mov pop mov stos fnop add pushf sub mov lret fistpl outsb dec lods in pop adc dec movsb in test pushf xchg rorl fcompl jo in inc (bad) cmp jg ds add call pushf lret stos es or dec cmp lret hlt jae rcl push out icebp cmp adc add in xchg adc dec pop sbb sub xchg je scas mov hlt loop dec mov cltd pop andl and xchg push leave or dec clc movsl mov (bad) mov jle out stc lea outsl clc pop inc mov dec test jo clc int3 pushf inc xchg repnz pop xchg (bad) pop (bad) idivb aaa loopne jecxz lea loopne dec test mov insl and mov push imul iret rorb aas xor data16 sub mov pop xchg jno jmp cmp mov push clc daa hlt es xchg gs mov imul jns dec out xchg cmp dec jnp sbb cmp mov pop inc in lea add cmpsl bound sar jg adc push cmpsl stc inc push jg addb add (bad) (bad) imul push jnp jge jnp add (bad) aam aam gs dec std or scas pop pop (bad) lods sub call cmc mov lds pop xchg int3 rolb lock xor mov decl inc and sbb scas mov pop mov lahf rorb xlat push popf or jns mov sahf mov mov pop cmp or xor push add into (bad) mov loopne jns imul xchg pop adc out add sbb mov jnp lods sbb int jl pop daa outsb addr16 int3 dec cld in sub mov cmp popa out and jo dec jns jno xchg inc in adc lahf imul popf mov xchg ret add insl in mov xor fmuls inc mov dec loope pop test add dec push dec mov arpl sbb fisttpll out pcmpeqw dec pop popa scas sarb (bad) mov or xchg mov les leave pop pop sub mov int3 outsb movsb inc insb mov xlat add popf cmpsb in mov xor pop pushf xor (bad) dec fidivrl popf mov scas mov inc push and cld cmpsl (bad) pushf jno enter inc or sar int3 sarl mov fidivr mov push add pop add loopne xchg and inc lahf mov xchg int3 stos (bad) rorb jle or mov or mov aaa (bad) out jge cmp pop adc jg les out xchg jge jmp push lret cmp and jl fsubp out aas mov lcall cld adc (bad) ss (bad) mov cmp not iret cmp mov adc mov (bad) fisub adc enter (bad) ja push xchg inc stc lds sbb cli jbe jno out cltd mov jne push push stos dec in mov out xacquire mov xlat jecxz,pn loopne mov ja inc aam push push test loop imul xchg mov jnp mov in add sub movsl sbbl cmp out repnz sti mov arpl daa aaa push fdivs repz (bad) ror sbb cwtl inc das movsl mov mov outsb addr16 cmpsl insb inc mov (bad) jl fcoms jge push movsb (bad) addl div int ret cmp add or nop (bad) rcrl dec fdivs fwait int cmp in inc aam adc and movsl out fwait cmp add jecxz push mov mov add xor fsts aam bswap push and outsb push jae cmp mov mov cmpsl pushf sub fwait rcll jno loope cmp xchg mov scas icebp mov xchg loope and mov and fnstsw jle push lods insl daa and ret ja dec inc lea sub pop cmpsb xchg fild popa movsl aad inc lret clc xor outsb dec lock scas push std and stos out (bad) stos pushf mov outsl out stos pop and xchg adcl pop dec push repnz (bad) lea mov and loopne fs mov and pop mov loopne leave stos in dec pop mov pop jecxz fiaddl stc jnp stos mov jnp into cmc aas inc jge sbb xchg scas fs cmpsb push mov jecxz nop adc fwait mov mov mov fwait xlat push xchg and (bad) insl ja inc mov ljmp test enter or sub mov xlat xor inc pop ds cli js shrl ss insl push push sbb pushf das mov mov add dec sahf jmp dec jmp setnp ret scas xor or push daa push (bad) movsb daa icebp fwait popf or mov sbb mov push outsl lods addr16 inc inc lock aad call sbb sbb add dec out ljmp mov int3 pop push lock daa fucomi adc or out icebp test shl das cmpsb icebp addr16 pop and jb push cmpsb out std addr16 jp mov pop dec jnp adc push mov clc pushf out addr16 sub js inc mov int pop (bad) xor (bad) ljmp (bad) mov fcmovnbe mov mov add cmp fsubrs inc jbe (bad) push pop mov push sarb inc pop and cmp mov add lret jno inc (bad) hlt push push xor fildll (bad) jge lret pop inc xor jl adc dec gs sarl add (bad) cmp fldenv sar cltd sub push xchg and std xor dec cmp ljmp adc dec dec and outsl aaa aaa xchg add jno sahf nop cld mov sub idivb frstor js cmp (bad) (bad) jne sbb sbb jp jne addr16 mov push jnp xor mov aaa mov roll push add lods xchg les outsl mov push ficom pop jp dec sub lahf jle xor pop pop aaa or rcll add cltd out aas jb imul sub inc out cmp jnp in sub rcl nop push loop subl push sub cltd pop (bad) xor stc test (bad) pop or and mov inc dec lret add fdivrs xor enter cli in loopne lods dec mov nop jle push std add imul mov stos pop inc mov scas cmp bnd dec jne or sbb sub not sti notb fmull ds popf jg mov ja sarb jae scas jno imul adc daa cmp stc xchg mov std xchg jnp in jp out pop cmc adc and jb push sbb xchg jb in push addl mov ljmp lock (bad) xor inc add mov scas xchg stc aam push pop in and pop popf adc xor cli test test fldcw cmp pop in aas mov pop mov inc mov xchg icebp (bad) cltd test in out dec stos dec push or pushf xor xor push loope jmp gs and int3 clc jmp add addr16 stos lods jle stos xchg mov fwait (bad) dec leave push clc cwtl xor lods call add addr16 cli icebp aas cmpsb inc pop mov les jnp sbb cmp iret fs fistl jbe pop xor insb mov fimul and loope test mov clc cmpsb xor stos scas push xor popf jne mov jmp lcall int3 fcoms sbb xor and shr into jmp (bad) (bad) sub xchg pop pop mov fnstenv in xchg aad jns inc pop out (bad) or pop jecxz incb std iret xor aam cs and xor aas pop incl jbe mov or int mov mov in push mov mov fs or xchg or jle daa out jns sub insb out hlt popa fmuls mov and or fwait cmp aas lea pop jbe cmpl retw inc push out out inc cmp insb xor addr16 mov scas inc pop enter inc andl in (bad) clc adc pop addr16 or push repnz cmpsl (bad) test in dec mov adc jmp lret nop inc out push xchg test outsb inc arpl pop sub cmc mov mov in lahf jo mov pop lret cmp out cmp pop xorl in fcompl arpl cwtl es lds loop pop test xchg loop and xor add lock daa inc shlb cmp ljmp lds push push (bad) fdivrs xor mov (bad) mov dec aad cmp popf hlt dec fnsave stc (bad) jmp call push clc lods lret cmpsb dec adc pop adc fistpll xchg push cmp loope sahf mov push mov inc sbb xchg or popa mov testb adc or out std fsubrp loope mov in int3 and (bad) stos outsb inc hlt mov das jl (bad) sarb sub pushf or and jo push lods fisub rcl jmp (bad) lock nop add mov cmp pop fstpt lock out pop scas adc xchg xlat stc das and push popa ficom dec xchg add pop into sbb or jnp inc fidivr and dec jl jmp inc jns push test mov mov nop/reserved sbb cwtl cmp pop es mov jmp and xchg inc (bad) mov lock repz jmp jg sub rclb and pop and hlt xchg adc dec lahf sub aas pop pop lret or mov and push push jge push (bad) (bad) insl add pop sub test outsl mov push fistl aas sbb cmc mov mov cmp mov stos cmpsb lods cmp mov aam (bad) jecxz add adc roll and callw fdivrs jns jae test push movsb or pop inc xchg aaa repz sbb js outsb sar add mov outsl mov mov xor xchg add adc mov loope scas pop cltd test xor ja pop dec xchg sub push adc test mov out mov pop leave jge insl push jmp xor test fwait movsb jg std adc fsincos ja mov adc cmp outsb mov xchg ljmp mov jnp adc (bad) lret dec xchg movb jl mov jae (bad) (bad) lcall xchg dec arpl scas lods mov cld mov jle aad inc sbb out jo test fiadd js cs int3 icebp jns xchg outsl mov dec fsubrs imul pop hlt ds lods fstpt popa push cmp mov inc xchg cwtl and clc mov cmpsb cltd add jmp push sti adc push fcom or push jg int3 mov mov dec mov and pop sbb lea pop cli push inc cmpsb push mov dec cmpsb mov sahf es out pop jmp nop and (bad) inc cwtl jns aam mov sbbl out shrd sub std mov or lea test jle movsb xchg push imul lret aam stos in jb call inc sub jge out sub negl mov cmpsl xor movl xchg xor xor dec lret lea (bad) adc mov fsts push xchg lds test loopne inc or push into jl icebp cmp loop js sub cld sahf out leave (bad) data16 inc dec xor push adc sbb (bad) adc outsb pop jle ret ss jo es inc xchg lds test in xchg mov push in xor xor js in xor movsl fcmovnbe aad pusha les cmp outsl outsb lods and cld adc add cmp popl icebp pop xor jne pushf inc clc daa mov and lcall (bad) jo pop sbb dec and sub aad aas (bad) notb (bad) mov or stos adc mov mov mov push cmpsl inc pop fmuls and sub mov adc ret jmp mov mov push mov dec ja mov fisttpl and addr16 and mov dec je push mov fnstsw cwtl stos sbb jns lods push outsl mov mov movsb addr16 jnp push xchg lea ja adc lock sbb sub insb pop xchg dec ja dec fwait cmp pop jnp (bad) shrl and sbb addr16 push popa or and add mov xchg or pop push sbb adc outsb fsubrs add jmp nop sbb or movsl lret jmp xchg inc xchg add mov push jge test dec aam pop outsl add (bad) cmp popl test push lods fidiv insl dec cmp out sbb mov sub sub sub icebp imul jp fs mov cmp xchg mov jb and test insb sub sar test pop mov adc push add jns mov sbb add (bad) cmc (bad) sbb (bad) or (bad) pop cmp scas in sub lods pop popa dec loope mov add push xlat out sbb pop cmc loop rcl lds cld lock xor mov ja cld mov inc xor jmp scas js jne add sti test ds push cmp mov jmp cmc pop mov ds scas test mov movsl inc inc ljmp les fistpl dec jp je (bad) mov aaa insl cwtl icebp inc dec jle push stos (bad) push mov sbb das ret sub hlt es notl fwait push jl sbb stos jmp dec test inc dec out pop and push shll inc pop push (bad) loope jne xor and cwtl in loope (bad) outsb pop xchg test or mov xchg dec jl (bad) or jnp jbe ret xchg fwait (bad) fsubl loop (bad) imul aam and jle (bad) mov jo adc lods or sub mov push into adc fsub fsin adc lods add rcr dec push inc (bad) lock xor and cmpsl (bad) std out push xchg int3 rol les jle mov xor jo lods pop sbb repz lret stos aas jae pop sbb ret cmp in mov pop mov in fstpt xchg fstps dec mov xchg jae xorl dec inc jnp ret push testl data16 clc push inc dec cmp cld (bad) repnz inc mov pop in cmp pop call push mov setp jno mov sbb scas in mov adc mov dec into les aas sti es in cli das add gs pop (bad) lods stos xchg (bad) dec or xor xchg and dec orl popf sbb pop loope mov enter dec aaa xchg pop scas pop and lods pop sbb hlt lret jno pop out mov sti jbe and pop jecxz push sbb mov movsl imul and push and out and sub adc (bad) int cltd scas pop les mov nop aas adc xlat mov rorb insb jno push mov inc push pop cmpsl lock and jno cmp fwait cli nop and rclb dec dec call rolb loope icebp les repz in jne push repz dec mov loope cltd cmp gs cld and loope bound mov cmp rorb data16 add (bad) call sub mov pushf mov mov xor in mov or xchg test pop hlt mov icebp push es hlt mov enter pop mov fwait in (bad) or cmp popa mov (bad) jo std push or imul cmp xchg and (bad) xor or ret jno mov outsl rcrl mov push (bad) or fisttpll cmpsb idiv int3 loope (bad) lock pop sbb ljmp pushf enter cmpsb xor hlt in test lahf shrl rcrl pop mov sbb sub adc jae xor loope cmp sub adc push xchg rolb mov jecxz sub mov mov mov test push loope dec pop in cltd (bad) xor imul sarb fwait lret mov dec imul into cld loope popa and sbb xor lds jecxz add jl addb cli test repz (bad) jl mov xchg js fwait and dec mov or jmp icebp mov int3 aas arpl lret (bad) jo (bad) cmp jno xchg mov xchg dec and mov cmp bound loopne and cmp js push (bad) test pop je in push fstps xor arpl repnz pop mull mov mov inc jns (bad) bound imul cmpsl sbb leave int3 adc cmp mov pop xchg stos mov out xchg cwtl jno js dec out add scas fwait dec sub mov mov daa xchg loopne push or or icebp adc adc imul icebp cmp inc into mov out dec sbb lahf dec fisubl rcr (bad) ds mov out movsl add sub cmpsl add mov aaa xor and gs (bad) jg jne sub inc (bad) and mov out cmc cmp jmp inc xlat jmp (bad) jne jnp add (bad) icebp les repz lods xlat jmp mov dec dec dec fwait and adc or nop movsl jbe test cld adc rcrb (bad) sti sub pop or (bad) dec pusha data16 ja mov and das sarb lods ljmp add out jmp sbb mov fcompl push frstpm(287 popl out adc cli int out popf aam jl lret cmp (bad) and add (bad) cmp add cwtl add test jl sub (bad) mov and and (bad) lods movups dec aad lret js cli test xchg pop (bad) push lret cmp xor aad xlat pop shl lds jae xor xchg add jbe sbb ret mov xchg sub cmpb jae std push orb xor lret aaa add jg mov jp cld jecxz push push xchg lds pop stos mov cmp push fist aaa sub push cmpsb mov fildl jmp jno adc cs sub cld or pushf loop sbb clc mov jne cmp and or pop sub frstor hlt movsb add stc stc push mov loop (bad) pop cmp faddl sub aad mov xchg mov sti int outsb (bad) fdivs inc mov cwtl test fistpl mov jbe pop xchg pushl cmc fisubrl out add adc jo or mov daa xchg fadd and imul jmp cs ja adc mov and aam add mov mov js jl add push add jns es loope jmp sar pop lcall sbb jne (bad) repz mov dec imulb repz sarl xchg in repz subb je enter or adc adc call lea popf push mov jbe sbb sub out (bad) mov fwait xor fistl mov (bad) repz dec ljmp out insb (bad) outsb pusha outsb xchg mov inc or xchg pushf lcall imul dec (bad) push cmc lcall mov mov inc mov icebp jae cmp mov pop mov mov inc int (bad) stc std and bound dec insl andl mov movb jne mov in jb getsec dec leave push lea fwait and and out aam lahf adc in push jae jle ret mov outsb fstl pop pop mov popf enter add cmp ss xor adc push pop push aaa sbb and int jge mov add dec mov xchg mov mov lea aas lea inc jp mov mov js mov repz cmp sub test add arpl dec mov adc cmp jnp out and and ss add mov (bad) int3 int3 jmp fldln2 sti loopne bound adc mov jmp sub (bad) outsb into xchg push data16 mov stc iret ficom jnp adc adc aam popa call lret pop add dec or int3 push xor xor in mov popf jmp pop pushf ret mov lcall pop mov arpl test dec mov dec and fs ret sahf imul or test and mov xchg cmc mov and xor add jne rolb jge and push daa repz jno pop xlat test sbb xchg shrb mov pop js fdivrs mov mov add (bad) mov cmpsl stc ja push nop xor into mov jmp icebp clc mov or mov add aad in cwtl movsl mov test (bad) (bad) jne jp lods xchg pop pop pop js cmpsl sbb xor pop adc arpl adc leave jo aad mov mov aam imul pop add imul dec clc cli xor and (bad) icebp mov dec xor or lret and leave das cmp icebp scas aad subl sbb jge imul cmp jle lret imul sub mov nop or cmp imul adc dec jg mov mov mov lret and cmp cmp sbb icebp in fldl aam mov icebp loopne push movsb (bad) js jl dec icebp inc dec sbb loope imul ja repnz mov (bad) repnz fldl pop inc pop inc push loope out scas xlat jnp test sahf xchg fwait (bad) jo movsb add scas inc mov rorb lds mov sub fsubrl adc jmp inc mov and jnp out mov cld cmpsb add push pop das out push push mov and sub push dec jmp leave sub sbbl cmp imul fldlg2 arpl xlat adc scas daa lea movsb arpl cmp mov lret lret inc cld and sbb rcll xchg test dec aam pop mov mov insl add insb out xor mov mov (bad) aam add mov orb sub imul inc fisubrl or xor jp mov adc jne dec aad out lds sub inc jmp ljmp dec dec (bad) push mov sub dec psrad mov xor lds push xor or fchs sbb jno das cmc sub sbb in push out xchg fcomps dec adc pop mov icebp inc lcall push xchg inc imul adc inc insb je cmpsb cmp pop aas jle outsb ror and dec mov repnz fs je fimul (bad) ss mov mov sbb xlat leave xor pop jle add daa test clc mov rcr mov lods in rcrb sbb mov popa mov jg xchg jmp je push rcr adc cli rcl adc mov cmc nop sbbl (bad) mov popf mov insl xchg insb jmp insb xor dec sbb inc pop popf cltd xchg andl cmp loop cmp fwait mov enter add sub add mov dec insb pop push and insl mov scas addr16 xchg lahf hlt jg add std aam push dec jae add cmp out inc mov dec bound lods call sbb xor insl scas inc shrb inc mov inc lock jns sbb rolb mov and jns inc xlat test mov rcll push xor xchg out nop popa jnp pop or mov and inc mov push inc mov std lahf leave sbb scas cs inc inc or pop sub inc jae push faddl clc and enter dec shr jo (bad) cmp push loopne adc aas mov call lea push out test das push mov cld int inc ja notb dec dec push aam mov shlb ret mov jl xchg movsl mov and stos pop pop mov push add movsb mov ret das out push (bad) mov jle call jnp xor cmp mov clc and test iret out insb dec pushf insb loopne adc les sbb (bad) mov push inc xchg pop xor inc add inc (bad) jno dec xchg dec jnp xchg pop repnz out fisttpll lahf loopne loopne cli mov in inc push push xchg add dec fcoms cmp xor add (bad) ror mov sarb sbb ret cld loopne bswap pop fist cmp and sbb xchg adc scas xchg mov dec fldl pop xor stc les gs scas and sbb sub sarb aaa clc inc lock insb xlat adc stos or adc sbb xor jae lock in jbe mov sbb fmull adc imul divb jns mov icebp adc enter mov int3 js stos cmpsb les push mov push dec fsubr push pop cltd outsl dec ficom lds cmpsl daa xor repz cmpsb inc push sbb dec ds insb hlt mov xlat sbb add adc mov jecxz lret xchg lahf push add lcall cli cmp lds dec xchg push enter sub or push sub adc xchg add mov js xchg fidiv push repz bound add enter sti xor mov fbld mov inc sbb and xchg sbb rclb sahf in fwait enter adc pusha hlt iret inc pop mov inc sub mov int3 pusha push daa adc (bad) add outsb add mov xor imul or sub lods idiv in mov fwait sahf pop mov insb cmpsl mov inc or lret aas fldcw lea int3 sahf inc pop cmpsl addr16 repz inc int3 or or mov mov test sbb jns,pt mov (bad) xchg dec mov imul push pop xchg in and cmp jle pop mov mov cmp and pop stc mov sbb jb inc push xor outsb cmpsb jg sub stc aas xchg or sub es rcl and sbbb sbb push jecxz xchg ret dec pop cmp and sub cwtl rolb fisttpll scas sbb (bad) jg mov jg cltd loopne pop mov (bad) cs hlt inc or mov adc aad jmp or inc pop stc or jle fildl mov lods dec jg xor or xor pushf jg push mov ret les pop leave adcl incl inc cwtl cwtl pop (bad) cmpsb imul jo movd push bound hlt dec xchg fs sarl (bad) bound fsubl push jle sub xchg sbb mov pop inc icebp cmp popa mov push fdivl popa int mov jmp push adc loop push inc jae push sbb xor lods xchg inc (bad) cmp addl movl aam dec gs insb jb mov imul mov add jne mov or mov or cmp into xchg xchg push cmpsl aaa dec jne out jno pop data16 jmp inc pusha lahf movsb rcrl syscall mov lret repz data16 (bad) (bad) fsubrs ja fidiv mov cmp or aas (bad) jge xchg xchg adc sahf xchg test and and xchg mov mov jbe loopne lods popa flds mov imul and into icebp nop pop data16 jmp and sub push dec inc cld xchg push cmc cmpsl pop jb test xchg sub into fmuls pop or fsubrl pop (bad) cltd inc jmp mov repz paddsb stos cmp or rorb push clc aam mov or jne sahf (bad) bound mov jno inc mov into aad sub xlat icebp push xchg sub xor pop out dec pop pop lret push dec inc inc xlat sbb sub (bad) push pusha mov pop addr16 popf into popa leave loop jmp and adc push lahf push aas pop mov leave popf or push jno out int3 add inc ret sbb dec fldenv imul ds test mov stos (bad) cmp mov cmpsb gs jae out (bad) cmp stc rol popa lock mov imul or xor mov or jnp shrb push inc bound cmpsl fs in or sbbl (bad) xor dec nop dec mov insb insl cltd ja sbbl adc ret int3 sbb xchg mov call and iret adc sbb push addr16 nop stos and movsb cmpsl stc cmc cmc ljmp xchg jmp lock push jns adc icebp and lret int3 inc test dec fldl add enter frstor xor mov fimul outsb stos cmp cmpsb mov addr16 icebp andb sub cwtl jns push push aad sbb or (bad) fldl (bad) cwtl jecxz sub lods ja xor jbe in dec jb push jb sub mov les sub jnp leave fwait sub repz or xor cmp push push ja out outsb or xor lock and pop xor int3 mov je ret dec push imul inc xorl push mov out (bad) add add add jns mov cmp popl sbb jne lretw outsb loope aam mov loop adc rcrb pop cmc push enter out mov push add sbb add mov mov jae mov sbb sti cmpsb pop adc pop xchg dec jnp movsb xor inc mov scas mov jmp xor xchg loopne pop sbb sbb sbb dec or outsl mov loop cli (bad) adc sbb lock lret inc out into mov mov add (bad) sbb jae mov xchg or fst test insl mov insl js lea lock sbb mov sub test xchg push mov and xor rol mov xchg jbe xchg push cs lcall jb jp xor pextrw mov repz sub cmp push test cs mov fsubp icebp or jg mov fcom sbb dec imul test leave xchg movntps or sbb jb call xor (bad) jne cli jecxz mov inc sub dec inc xchg cmpsl cmp mov lds push xor fcomps (bad) mov roll out sbb cmpsb scas lods mov pop aas loope,pt add push fstps outsb negl popa mov mov insb mov bound xchg cmc fnstenv mov xchg push push inc add icebp ja push or adc call aaa xchg jne fist sbb inc mov mov jno mov inc inc inc adc dec push inc or ds outsl sahf pop cpuid popa xchg (bad) (bad) cmp add or (bad) jno imul nop idivb sub aad add mov mov xor or mov aam hlt sete inc fsubrs dec dec mov pop das push adc cld xor out test das jl sub push hlt in aam fwait sbb mov xchg sub jg loopne inc js mov pop sbb jae mov or rcr lcall pop fwait inc out mov jg mov dec loop enter sub mov adcb flds mov aam jnp and add (bad) ffreep mov cmp dec pop in clc mov mov mov (bad) jno dec out jmp jecxz pop jns aas addl and enter in out pop fabs lods pop gs sbb lret ja jne (bad) push in pusha rorl jne add jecxz,pn mov mov adc sub jge popa stos ss push rcl xchg add or test jmp lods js jle add mov imul push dec mov push inc push cmp mov (bad) stos js or pop lods cmpsl sbb nop push sub mov sahf or sbbl stos in xchg stos xor out mov lock mov cmp outsb loop iret mov add loopne push test (bad) mov repnz in (bad) xor push sbb pushf sbb mov pop fildll dec fwait cmp mov jns jb push std pop ffree pop jne push fnsave lahf adc jp jns sbb rcl push jbe pop add addl pop adc add push mov inc sub icebp insb imul hlt cmp xchg leave (bad) push pop and aaa xor std xchg (bad) arpl andb dec cmpl stos mov inc pop js sahf xchg fdivrl imul jb inc jns push jbe ficompl mov pushf xor setp jnp dec sbb rclb pop loope xor mov pop rsqrtps cmpsb scas (bad) pop aaa pop xchg dec call mov lret bt roll xor mulw loopne je inc repnz sahf push es test push aas sbb jo adc rolb cmpsl cmp mov (bad) gs sarl in dec rcrl movsb (bad) js push mov sub cld jbe xchg sub cmp sbb (bad) ljmp call xor aas adc and inc (bad) pop lcall jcxz push sbb cmpsl mov aas mov inc lret jno sbb add dec jne sub mov mov loop mov cmp dec stos inc rclb cmpsl loopne lret loopne push or xchg mov les ds addr16 add pop pop cmp push jge dec (bad) ret sar pop add or icebp add negb rorb and rclb iret jae aaa repz scas dec vmovntps adc test repz inc popf adc mov and shll and jmp (bad) stos mov xor lea pop mov xchg insb fucomi push jmp test cmp out or mov iret push mov mov mov xchg cmovs test sbb mov or setle lock mov cld push gs push (bad) sbb push mov pop or (bad) xchg xchg js mov sub rdpmc mov cmpsb data16 in in arpl repz test xor (bad) loop rclb or addr16 adc ret pop or push jl daa movsl fsubl inc insb fs pop aas add sahf adc lods mov add mov aam and shlb push jbe push pop mov call gs loope jae test fs dec icebp fbstp mov call sub aas adc insl push (bad) into add jge xor adc adcl dec fwait push jmp je or dec pop incb sub inc gs xor mov lock mov gs adc and or imul add sahf int jb ja rclb (bad) out (bad) adc popa repz test stos lret xor (bad) mov out lcall mov add (bad) test adc shll decb ds test aaa jle fcomip scas fdivrs pop xor das xor push lcall pop imul adc insl (bad) cmp cli xor jp sub cmp push cmpsb add jo mull lcall push mov lea sbb cltd das test fwait mov add inc mov mov and push fidiv rcrb jbe test mov sbb cld add sbb fs popf mov sti cmpl jg cmp jge pop and (bad) (bad) call adc xchg xlat insl cmp ja inc jbe js jb mov aad test rorl mov pushf or or mov xlat icebp and push mov jle pop push pop xor gs fidiv ret rclb xchg hlt push jo,pn add add sbb jge movsl add rcrl lret sbb lea inc pop xor (bad) (bad) fucomip jmp add push push lcall push out mov pop pop pop bound or cmc cmp mov mov add xchg lods cli adc idivl jge push adc or es fwait ret outsl and or cld leave hlt mov (bad) leave adc mov rorl fidivrl fsubl clc iret adc insl mov jnp or push mov add bswap std ret loope sub sbb add (bad) inc outsl mov in cld jo sbb lcall arpl lods push fdivr scas pop pop pop cmp push fs jno push or sub insb pusha mov xchg rcrl add cmpsb stc insb dec jg sub xor icebp imul sbb pop (bad) insl cmp jne sbb and rolb int3 pavgb jmp mov popf xchg and roll sub pop test xchg xchg adc push loopne xor inc (bad) push cmp mov jb rorl mov jno xchg jge cmp jecxz fistp cli jne ror rcll or xchg jno fsubr mov insl aad call imul fnstenv (bad) fucomi mov (bad) push or (bad) sarl popf push std pop sbb jecxz and mov jle mov push xchg or sub testb movsb fcomps dec cld jg ds arpl loopne pop icebp lods jmp xor xorb add lcall inc sti push inc xor adc xchg jne cmp push fwait jg xlat mov and shll pop mov inc jo aam sti (bad) mov cmpsb push repnz pop jmp imul and adc lods aam loop jbe add fldcw roll push stc es pop les jl sub out pop sub add fwait and push jecxz xor hlt aaa lcall xchg in or pop cmpsb xchg es push divl pop stos sbb sub and pop and xor lds sub iret aaa fiaddl add out mov push jg cmpsl jg add sahf sub test mov int pop cmpsb mov jb and lahf sti lahf jmp adc sub jbe (bad) sbb or (bad) in cli es pop in hlt mov sub stos roll dec jb out pushl push pop push aam cmp push cmp nop es ja mov loopne mov jnp xor pop mov mov inc mov cmp cmp cld mov mov push fcoml movb cmp jbe (bad) ss test mov hlt mov adc mov aaa inc pop cmp xor xlat jo (bad) rcrb rolb cs fsubrs arpl in sti (bad) cmpb jg ret jno add push push adc insb in (bad) pop arpl mov insb popa sbb mov ret incb adc pop dec je and aad push mov lock outsl jg mov xchg insl pop mov orl insb xor repz gs repz jmp roll lahf jne (bad) xchg sarl jle xor sahf test inc pusha inc mov sub lods das aas aam lods inc push mov rorb push (bad) jl cmp movsb sti mov add xor cmp xor push jb lret fwait inc inc jbe mov iret (bad) cmp ds mov mov cmp or or lods pop test loop or cmp lcall and add add or loope lret push sbb rorb mov sbb and mov inc xchg bound insb push loope fldcw (bad) sarl insl (bad) cli mov sub mov (bad) mov scas je push mov cmp xor sahf out mov xchg add adc push sub out push mov mov fs inc fs loopne lret repnz cmp push push jg xchg cmp and stos (bad) in sbb mov mov ljmp sti test xchg fstpl jno xchg mov cmpxchg push into stc dec ja mov add not and sbb pop dec inc pop push push or jge cmpsl pop scas fldenv mov xchg (bad) pop xlat adc dec adc xchg push xor icebp loope add mov mov add jns xchg loopne add fsubrl rclb xchg jae stos aas hlt cmp ljmp push sbb dec add out test lods cmp inc cmp ds popf and daa ja push push arpl and add mov data16 lods in cmp ja aam out sbb out and pop cltd sbb out cmc cld test pop jmp scas jg pop adc nop adcb mov imul xchg addl scas ficoml je aad xchg xor inc adc and lods pop xchg stos push mov sbb (bad) dec pop in andl cltd sub push adc movsb jo mov fwait lcall xchg inc pop mov sahf lods dec loop pop movsl fldenv out aaa jae xor inc sbb mov (bad) adc shr push push sbb add scas xchg pop sub pop adc fsts subb test pusha add (bad) gs dec lret xchg sbb sbb (bad) movsl enter push jmp ret ja test in sub ret jae jg addl mov lods mov daa outsb xchg adc lgs dec idiv aad mov loope cmc icebp lahf and je lds out fcoms mov outsb cmpsb adc cld cli pop outsb movsl call cmp movsl mov (bad) ljmp mov xchg enter and mov rorl inc jecxz xlat add or push pop mov dec fnstenv cmp loopne icebp xchg sbb mov (bad) or in scas adc (bad) mov (bad) in popf push pop ja nop aaa in cmp repz ret test jle addl and sbb pop dec push divl mov mov hlt sbb sahf cmp imul dec xchg test jno xor inc nop dec ret cmp mov fistpl add (bad) sbbl xor das int adc lcall pop inc cs jnp rclb jne out mov data16 xor sti ret sbb mov ja out add int3 lcall leave xor sti (bad) fcomps ja mov add arpl aaa lret cmp inc insb out sub cwtl jno out ret stos inc daa movsb bound mov dec outsb xor sbb es xor mov pop idiv inc inc stos pop jmp (bad) aad addr16 ret xchg cmp lods cmp push push push loopne or lods enter loop xor xchg xlat lret stos lea cltd jnp ljmp add or (bad) xor mov mov insb repz decb (bad) mov pop sbb push push nop push (bad) add adc jno iret sub jnp loope idivl pop jle lret (bad) in mov (bad) sub jle movsl cwtl sub (bad) inc scas sub jmp popf sar jne gs scas decl inc jns fcompl xchg adc add lock sbb xor add adc jecxz sti or sbb std idiv (bad) and sbb xchg xlat xchg pop mov fldl test xor cli push outsl pop mov push mov imul loopne mov std sbb je icebp js dec xchg pusha sub cmp or add sbb mov sbb or inc push popf inc out in pop jmp rorl mov movsl adc add pop mov push sbb xchg and (bad) push je or sub lret pop dec mov mov das and fiaddl and out inc loop xchg test jae jns or test insb stos mov pop (bad) cmc (bad) mov push clc loop mov icebp es mov pop mov push (bad) mov popf push lret test dec cmp sub mov fsubp (bad) push cld mov xor adc (bad) hlt adc jp (bad) (bad) movsl ss mov inc cmp push aam loopne push add out test test ret in insb jne js sub out jnp cmp mov movsl cld imul scas orl testb xchg loop xor pop sbb fld dec and add pop and cmp xor inc imul pop sbb or repnz mov add pop push sbbb cwtl js xlat sbb mov push out pop and sbb fldl jb dec mov fs call je inc add jmp mov ficomp mov cli inc sti or out jle out dec ret lods fiaddl fcom push or es xchg (bad) cmp jns divb nop inc or (bad) push xchg adc lock adc xor call push jo push jl ljmp xor scas pop (bad) movsl cld arpl je mov pop dec jle jmp in mov push ror fcomip adc rol add adc insl js dec outsb inc cld mov add fiadd xchg es pop mov adc or jno dec jno cwtl into int sub popa add jp loop fldenv inc nop out ficom enter mov cmp arpl les ret push scas dec add subb imul jge (bad) cld lock push lods cmp out xchg pop cmp mov sbb (bad) adc hlt lahf rolb or dec negb jb adc lahf mov mov xchg sub cmpsl adc add stc imul and leave push mov cmp sbb mov ljmp fnstsw scas in push jo xlat fcoms cltd add sbb ja jnp fbld push shr mov pop adc stos lods out insb cmpsl (bad) test daa or rorb out mov sub mov add (bad) push jb fisttpll jo push jbe cmpsl inc or adc pushl sbb int imul jno sub (bad) cmp cltd mov inc mov add pop cmp lods sbb mov ljmp (bad) out ljmp in movsl out fsub je in fildl (bad) imul fdivs pop jl xor clc fmull xchg pusha lcall pop sub pop (bad) fildl cs xchg jle cmpsb inc rclb push and mov mov sub sbb jmp cmc loope cmpsl test movsl dec jge cmpsl mov bnd mov or stos pop das imull mov nop test incb xlat mov or cmc pop repnz int3 cmc cmp loop js cmp push mov xor data16 aad mov test (bad) mov into lea xor rcll cmp test add mov scas cmp mov into gs scas pop xor jl sub stos bound mov mov dec sbb (bad) hlt scas jge sbb jae (bad) inc cmp stos cli repnz sub dec mov loopne push ss mov adc pusha add in and sub scas faddl fxch pop scas mov call dec jbe mov inc xchg lods call mov jbe push sub xchg lahf scas xchg ds iret icebp jno sbb int (bad) outsl js and mov aad adcb dec mov add sbb mov leave jg (bad) push pop ret jno fildll stc adc (bad) xlat or sub add and scas and xorl lds jge pop jno or lahf cltd jno bound fcmovne pop in stc (bad) das adc ja jmp bound dec and das int mov inc aaa xor cmp push out fmuls jae sub and dec or adc or or icebp into mov ret jge mov lods push pop or pop or adc push xchg mov sub inc mov mov xchg cwtl sbb scas dec xchg sti sar xor stos mov fiaddl sbbl jbe pop xor and sbb jg dec or sbb and je lret lods mov fild adc pop mov xor mov cwtl inc leave pop add out or test push mov mov clc outsb xor xchg pop mov jb mov jl mov aas les testb pop sbb ss lock pop cs mov sub shl xchg data16 (bad) ret icebp cmp mov inc sarl pusha and sbb mov mov pushf into add mov std pop in sti sub jo add dec push push adc or cmp cmpsl cmp xchg loope pop mov jns xchg push ror jno push (bad) mov mov pushf out pop xlat out into mov fimull pop clc pop add inc movsl sub addl mov or sbb jb mov jle lods roll cmc (bad) and add dec and pop xor mov mov inc cmp aad clc sub sub sbb xor pop in das das insl popl mov mov cmp inc jmp and in mov shrb je jns sub out out mov fistpl (bad) or adc mov sbb mov xor xchg inc mov xor jp outsb mov lea mov fwait push movsl pop out cmc pop push adc call insl sub insb les mov pop xchg mov int sbb (bad) sbb jns test fcmovnb jb je jae xor std jmp mov out ljmp test dec xchg and (bad) lock pop cmpsb inc int3 pusha xchg clc xor mov out ror jmp sub pop mov or inc or add pop mov add scas mov jmp inc std pop mov mov inc cli repz and jp lahf out xchg ret sbb lds sub rcl fwait pop sbb sbb leave xchg in inc add jg pop jle fwait pop cli push lock or in cwtl adc mov popf push cmc test fstp push sbb ret sub cld add sbb leave std mov into or mov mov adc dec inc add out cmp clc jo sarl int cmp add jg clc inc and mov pop cmp arpl sub in inc mov pop cmp cltd jle xchg sbb (bad) dec sahf hlt inc ret push jne push add dec fwait popf dec mov push cmpl sub xchg xchg cld xlat cmp scas in pop inc cmpsb adc (bad) mov das mov cmpsl adc ja arpl imul mov jl push mov fs daa xor inc and insb cs iret lods push cmp dec fwait xchg daa aam ficompl pop je jl imul or frndint (bad) out mulb mov shl adc push dec stos pop mov aad inc in xchg jg imul push push mov mov scas (bad) or mov push je dec xchg mov leave ja int mov jge pop xor and sbb mov test jle and negl mov loopne jnp icebp or adc std jae leave push decl pop cmp jnp push arpl into (bad) lret scas inc xlat mov lcall fcmovnbe dec inc test jl sbb xor rcrb out inc enter fwait add out push mov test (bad) pop sbbl pushl jo enter push popa and mov mov inc lods pop dec cmp lds cli test mov stos into inc jecxz in sub cmp inc push and aaa cmpsl or jp neg inc (bad) test fucomip push out out mov push out cmp mov pop call lock jae or or inc dec movsl xchg cli pop push mov and in sbb pushf js mov mov (bad) lock sub mov repnz or out jp and loopne rorb inc jl fsubs dec stos ret dec pushf test jle inc cmp repnz jne clc fdivs sbb push pushf mov xor add pop out ja jno dec scas call cld pop push pop (bad) jl (bad) shll adc enter pop add xchg xchg jmp popa bound mov (bad) push test daa pop mov je leave or mov jecxz aas sbb movsb add or ret dec push sbb cmp pop dec das shll hlt daa xor sahf (bad) add and push xor movhps inc pop pop pop mov mov add shll push or xchg (bad) push es push int3 jp (bad) das jnp (bad) push aad ret push arpl mov shrb sub adc add lret mov dec movlps inc popa and xchg cmp xchg scas xor sbb test xor mov lret fstpl xor cld jmp push add call xchg xchg sub pop push pusha gs das dec stos fwait adc mov clc xor sarb loopne lret out stos sub inc shrl mov mov icebp scas out sahf mov pop mov je (bad) and jmp fistp ljmp ljmp and mov push jge cli xchg icebp cwtl daa sbb into ja push flds mov adc mov pusha pop and fsubr out xchg fstpl pushf in nop aas mov js mov inc and leave jl sub sbb mov test push and scas inc xor jl push pop fwait adcb mov or ret outsl das outsb clc orb or jmp pop pushf adc bnd icebp adc push pop out repz cmp call cmp (bad) or xlat xchg cmpsl adc out loop cmc adcl enter push js mov nop and adcl jp add and inc popa jge fcoms sbb jle and insl or mov fnstenv mov sbb add push int3 mov movsl outsb mov je xor outsl into dec mov outsb dec cmpsb jmp inc xlat (bad) fldenv test je in xchg xchg sub outsl repz imul leave into cs cmp xchg xchg out mov push jg mov and jno popa mov (bad) xor add xchg setno fstl daa test arpl fildl mov or test cmc pop jno push add pop loop cmpsl dec popf imull mov dec nop loopne sarb sbb mov or dec in jne outsl sarb push (bad) mov cs rcrb aas adc cmovge cmp into adc pop insb mov sub jne lret xor fiaddl insl mov adc add cmp popf mov pop and jecxz mov jae jg daa push jg pop lods sti jne mov sbb icebp dec call jecxz jle pop insl xlat dec xor movsb sub test leave jecxz or call xor dec imul add pop cld jmp js mov pusha push xchg add pop lock jae sbb movsb push mov call test sub insb cmc pop pop push cld or test xchg cmp rdtsc (bad) pop sbb stos test jbe ljmp jnp jl rorb cli mov inc (bad) mov xchg jnp sbb cs jecxz mov inc (bad) or pop pusha dec add sub xchg inc ret movsb push out stc in lods pop pop stos cmp leave cwtl mov jo mov es fs xor insb and pop aas out (bad) lret cli test push stc out pop mov lret and fcomps enter jae ss inc ljmp xlat sbb mov xor mov xor push mov mov xchg lods imul push int xchg or mov sub cmpsl test mov or mov or int3 (bad) sub enter jg jo movb loope adc into daa push loop flds lahf sub movsb mov (bad) mov xchg adc out push sub jecxz subl mov pop rolb js cltd xchg jge lahf mov out jns bound ss test scas (bad) cli enter call test fistpll scas lock xor adc adc adc adc popf sbb mov sbb clc popa outsb and (bad) imul xchg divps pop fcmovb jno inc inc out jae cmpsb fstps mov ja cmp ficomp bound aam inc mov ret adc lcall lcall (bad) add sahf lcall into jmp je inc adc aam rorl out xchg or push test cs ss ret cmpl daa mov (bad) jecxz imul andl mov dec rcll and sub push push sbb xor dec movsl mov ret mov mov pop lcall push popw sub inc out cmp xchg push outsl xlat hlt adc (bad) xor ret push pop test sub sub lds pop cs xor jmp test and jns in iret inc fs xlat add add les cmp scas dec xchg mov mov repz cmc jg loope sub pop sub adcl push push outsl cmp (bad) arpl and les fdivs push sub jns pop xor hlt test pusha dec int sbb mov insl stc fwait out ret mov adc mov into sub and pop inc xchg cmp lea scas pop xchg sbb orb xchg mov push xor subl adc xchg and sub xchg push aas adc jl out lret (bad) out xlat inc xchg data16 int mull dec sub inc inc fcomip roll pop cmp out movsl xor push std popf jb aaa pushl mov leave (bad) je mov fsubp cmp mov (bad) outsl (bad) mov mov fs test inc push test cld mov jp mov roll les push pop xchg sbb subl pop push and std sub icebp pushf xchg leave lods add jbe das ret push xor stos inc les xchg mov fld jo rorl mov (bad) cmp push inc push call das adc mov imulb mov fldl2e inc jb mov add sahf mov xchg xchg dec enter push je or jle adc ret (bad) mov ret pop dec pop js inc push pushf int3 es xchg jmp arpl mov or add out xor loope mov cmp pop mov (bad) dec mov jmp ja (bad) mov fisttpll cmp inc inc bound cld rep aaa push cmpsl xchg sub mov call push jo and cmp movsl add mov (bad) mov stos in gs sbbb jl sub pop sarb xor sub fcoms cmpsl aas pop ret and sahf sbb xchg push push out xor xchg jbe jno sbb int popf or push mov and mov mov lds imulb fyl2xp1 xchg xor sub push fwait sbb xor sti ficomp jg mov sarl jg cmp sbb add das add pop cld push aaa (bad) int3 mov aaa out (bad) je rolb xchg add add movsl lods mov stos mov mov or insb dec or push xchg mov sub push dec inc sub jnp cmp icebp rcl fwait repnz jp dec push nop add xchg lods les test sbb mov jnp and and mov mov gs inc mov (bad) sarb push add arpl push xor aam push in loopne push jg (bad) fcmovb adc ret lahf sarb movsl mov xor mov ret enter pushf out sub repz cmp call mov test hlt adc (bad) and pop mov mov sbb or jnp stos push and inc fs fcmovb stc stos shrb inc xchg mov stos popf dec adc lret gs addr16 xchg mov inc stc repnz shrb pop pushf (bad) jnp cmpl add inc imul (bad) mov mov arpl (bad) cmc or sbb jns mov lods cmp popf sarb fsubs or mov dec xchg xlat mov outsb pushf js inc xor testl andl jbe stc arpl cmc fiadd inc xor add pop loope sti fwait js sub sbb in imul cmp or xlat dec bndstx leave mov jns xchg mov insl pop add xchg cmpsb adc mov or adc lods es clc jnp push ret mov or sub and dec mov movsb test (bad) cli inc mov adc aaa hlt mov or adc mov pop cmp and daa mov cmp xor out aaa cmpl in push scas (bad) xlat adc icebp int loop xchg adc cmp adc jg outsb sbb and loope rcl jb out loop push jnp adc sub jne mov cmpsb lret in or add mov push shr loop rol mov lahf mov sbb popa push adc pop fstps and dec dec lock popa lcallw stos cmp stos jl cmp (bad) mov and sub lcall faddl xorl movsb call cld mov lcall scas or dec xor cltd mov aam xchg outsb fs (bad) ja sbb (bad) push add mov test out rol jecxz movsb pop lods mov (bad) cmp mov lods cs (bad) pop pop cmp ljmp or and jb xor out hlt add fistpll ja mov bound scas adc push out andl icebp mov in adc aam mov xchg cmp (bad) sub cmpsl pop inc popa hlt (bad) (bad) stc cmpsl jle mov cld push mov in ret sub mov jns cmp lcall adc movsl and mov (bad) mov sub stos out dec push fwait jp push pop and sub je and mov or repz mov dec adc mov xchg gs stos push or idivl insb and and iret or insb stos adc add ret pop (bad) mov icebp int mov shll mov cmp mov in pusha cmp fisubr and js and mov (bad) jne pop add fsubrs repz loope stc rorl jmp test mov loope int3 dec mov out negb fwait inc aam and adc sbb pop push xchg push fcoms fisubr xchg jbe je sub lock mov mov iret inc enter sbb scas iret test adc fcmovu mov push pop (bad) pusha pop push mov push pop out test test into jmp imul cmpsl push or mov lahf ss sub dec arpl jno jnp xchg call daa xchg xor inc sbb mov ror cmp faddp sub (bad) loop fstpt mov test mov mov leave cmc movsl mov in loope inc cltd sub in or sub ret fisttpll push test push dec pop dec out pop repz clc (bad) repnz aaa hlt pop in mov mov and fldenv xor or mov sub xchg cmp push adc out lods int3 fsub add imul (bad) addr16 push inc dec imulb daa aaa inc pop mov (bad) fs mov in and or cmc mov (bad) movlps test in in dec sbb mov dec jnp in sbb arpl (bad) adc mov mov xchg xor push push mov xchg movsl out add mov cmp mov pop enter jbe and inc pop or ljmp add (bad) cmp negl test movb test jmp sbb sub or sbbl sub (bad) add (bad) jno mov cmpsl (bad) sub inc xchg in mov repnz xchg jnp vphsubdq or inc je add adc or lcall inc jl mov lods and repz and ret test push icebp insl pusha repz andl (bad) mov mull jmp (bad) lret aaa and scas push dec adc mov mov mov insl arpl mov ja xchg inc movsb xchg aaa rclb imul (bad) loop cwtl push negb mov push divps push js into pop fldcw inc mov dec and daa mov pop mov stos clc mov lea shrl int3 xchg and mov and push enter mov inc push xchg jns fidivl and scas ffree fist lret fidiv or fstp sti fist mov cmpsl pop jnp cmpb popa push rcll lods inc fdivrs and ret stos jns fmul stc sti dec and inc jmp or xchg lcall int3 cmp cli dec mov sub sbb sbb jo cltd adc cmc ja push std cmc stos or mov pop into fwait jmp jg and js jo scas adc sbb add push xchg sub sbb leave cmp mov xor icebp scas pushf das sub addl push ljmp ret (bad) (bad) in inc push pop mov mov inc ds dec or notl jl movsb enter stos fbstp or lret mov incb mov cwtl or lret push lret inc in hlt stos sub jle test push mov popa mov and mov push mov hlt or adc mov sti or jmp jno jecxz inc sub aas scas pop mov ja or xchg lods lds sub or mov sub ljmp cmp lds cmpsb push mov pop (bad) je loop jae sub mov ret in pop fucom pop divb (bad) icebp inc pop rcll scas xor xor in stc popf out pop adc imull pop les pop xchg mov shrb jmp leave in ja imul push add or push or dec in cmp xchg ss stos xorl push inc xchg divb out out pusha fs add (bad) cmp dec pop std loope fsubp outsb pop jne arpl dec ja xlat prefetch inc mov subb in rcrl add das test inc sub adcl (bad) lret popa or push mov mov lcall std xor jp bound lea mov test add xchg pop lret xchg mov outsb insl test cbtw imul dec js sbb pop lret dec cmp or loope ficoml or xchg xchg dec imul lea sub test sbb push into in outsb xlat lods std test mov je push add mov dec and icebp dec xlat mov in mov out rorl lea lret aas mov xchg inc gs add pop pop jo in or leave lds int3 add sub fxch sbb (bad) hlt aad mov mov loopne test adc aam jno mov mov (bad) mov or outsb mov pop push (bad) cmp or dec int sub sti (bad) in add sbb mov pop xorl (bad) lods rclb xlat mov les jmp repnz cmpb pushf aas mov mov data16 int3 stos sbb xor xchg dec inc imul int push ja sti outsl jb or cmp xor jns mov jb in mov sar inc in sbb aas cwtl or ljmp pop mov subb mov inc in jl or cs mov sbb (bad) lea cs je (bad) sub shl inc into xor push sahf test sti jnp dec mov or sub push dec fucomip add fdivl fcoml incb mov adc clc adc cmp pop popf jg mov xor jmp cmp std imul xchg hlt cltd jb fisub inc (bad) add jp pop (bad) (bad) mov imull fnstenv mov and aam or rcrb fsub xlat adc arpl jo lret xor inc das sbb (bad) div out ret xchg stc xorl lods mov (bad) arpl jecxz ds mov jle movsl dec in mov cltd repnz pop je arpl pop jl xorb cwtl inc xchg jb or jle mov out jmp xchg das dec fiadd sbb jae xor xchg inc or stos xor mov mov push mov leave jae fs or xchg inc push sub cltd outsb jge icebp dec or mov push stos popa je pushf out xbegin pop nop lock ret ss push shll in inc xor lock mov cld mov xor jmp clc (bad) shr xchg pop mov aaa or cmp std adc sarl (bad) push and jge clc add mov rcrl sbb mov mov sti add (bad) sahf lea lret and mov scas std aam push inc adc pop pop pop push shll xchg (bad) pop cli jbe call insl ret mov xlat or dec in clc lea popa mov in rcpps aaa loope mov in xchg pop shrl pop cmpsl out (bad) mov mov cli xor arpl or mov fisubl dec mov jecxz hlt aam jns ds stos in sub mov rorl iret dec andb push scas mov int3 pop add xlat popa push aad mov notb lret mov es and and jg mov out pcmpgtd dec shrl jns xor mov inc in sarl push pusha pop pop pop mov ret ds mov dec notl arpl lahf push arpl lods mov fisttpll arpl jl cmp mov sub inc neg mov and xchg sub into xchg dec gs lret pop cmc in ljmp stos in scas stos push loopne mov sub jle scas ss add mov jmp cltd inc in mov xchg xlat adc jmp xor adc ficomp loope xchg sbb jmp loopne push xlat aaa or jns popa pop pop fwait mov mov out lds adc movsb pop cmc sbb repz jo test push and add notb push add lahf and ret lahf daa (bad) stos xor mov les cmp dec push pop adc mov mov sbb and push push nop dec sti and push (bad) mov push es sub cwtl inc adc xor mov push dec sub jmp repnz fisubl push idivb popf fldenv pop add les lcall lcall fmulp sub rcrl mov pop mov cmp and sbb cmp in xchg popf sbb (bad) outsb adc cli test xor idivl bound jecxz mov pushf test into xchg hlt test push clc les lods xchg sub inc push or xchg mov movsl call stos inc sbb lahf mov movsl mov ljmp cmp pop ds adc xor sub bound mov cmc lock cltd sub add xchg out jns pop sahf std adc xchg mull rcrb imul lret cwtl sbb fstps xor mov cmpsl adc mov mov mov fidivrl dec xchg cltd lret xor aam out add push jne loop insl mov or adc (bad) jae (bad) jmp lods stos xor ret popa dec in std and out inc adc dec inc or xchg ret cmp fldl out pop dec add jge ss in and cmp xchg mov stos cmp or adc mov pop scas push add ret jl adc repnz repnz rcll add mov fxch popf cmp mov add pop push cltd jl gs xor lcall jne cld in jmp divb clc mov or (bad) dec xchg inc mov addl rorl lods xor and jb mov aaa enter lret pop add insb jno imul jmp (bad) cmpsl addb fwait sub loope mov push add push out addb xchg push jp fdivrl out pop in lea int3 dec add mov fsqrt sbb lea clc pop xlat adcb movsb mov cmpsl jns ret cmp js inc pushf call inc inc mov lods xchg dec cmp mov xchg lods ja xchg sub into sarb daa inc push or test push in repz jo xor (bad) imul gs jb shlb (bad) loope (bad) lahf rcr jns mov sbb pop out pop enter negl je cmp xchg icebp data16 adcl fwait stos push sbb dec cmpsb fs sub daa ret jno mov add pop cli rorb data16 and lds callw mov jge negb mov pop cmc aaa pop ret (bad) lods es xlat mov cmp or add (bad) aad pop cmp lea lds lret cltd jg xor cltd rcll mov sub adc cmp mov popf mov (bad) mov frstor inc ficoml bound decl pushf pop outsl scas adc push leave jle add pop xchg (bad) jl xchg and jns jle mov jl lahf cmc roll jmp mov inc mov pop jecxz ja ss addr16 xor ja addr16 dec divb popf pop out push icebp dec sub adc inc jns or enter sbb loope stos imul pushf push or (bad) or pop aas ds stos lods adc pusha jnp fbstp mov or adc push jbe das ror mov mov and imull daa push movsb mov bound and or out outsb cmp loopne sbb xor gs push jne,pt (bad) out push push repz mov (bad) jecxz xchg push adc inc out inc mov and icebp or dec stos in add mov add (bad) ficompl cmpsb (bad) sarl dec push cmp outsl gs add sahf jo adc xorb mov push xchg movsb mov push out (bad) in std add and out jge jns out jns js lods jmp push pusha xchg jg cmpsl je clc cmc sbb pop jae js add out fsubp push push sub sti cmp rol cmp repnz cmp fsubrl lods xchg mov dec dec (bad) out int3 fbld xchg loop popa lcall stc (bad) sahf xchg xor scas scas dec enter pop mov cmp mov lea dec out out jo inc lahf jmp out jns sub ljmp adcl mov loopne jo cmp inc jns fdivr ret jecxz ss mov lods and pop mov fildl fs or lret (bad) repnz enter and xor add xor ret jo loop arpl cmp mov popa mov outsl (bad) xor scas shr pop lret fidivrl jo cmc test scas mov mov pop adc sbb test insb jl xlat mov push fcomps mov mov or fsts js loop push mov pop je jg shl idivl lods (bad) push mov mov jae (bad) imul in ljmp sbb ss into in cmp fcmove push mov cmp mov repnz push shll cmp lods fnstcw dec ret and jge lret ficoml int lcall lock xchg ljmp xor enter lods xchg mov movl sarb dec xor (bad) mov outsb bound roll sub leave mov push pop repz and mov negl jl in arpl and sbb push rol mov addr16 aas fisttpll cmpsb add cmpsb bound fcompl dec sbb xor jge subl das insl adc cmpl and adc ret (bad) bswap rcrb inc rcrb imul jle ret mov pop outsl fiaddl aaa cmp je cmpl mov push cmpsb out push jbe jb mov xchg jle dec lcall cld aam jecxz sub pop std jp jmp out mov and iret stc xor and mov (bad) fsubrl stc sub inc sbb dec sub std bound aaa and xchg sbb mov shll in cmpsb fs sti insb sbb mov cmp jle jp leave mov (bad) stc push sub mov insl push adc sub jmp lfs jns sub push fnstenv int3 fnsave and stc movl inc jg xchg xchg adc dec adc rcll das pop xor mov xchg popf notb mov cli ljmp cltd adc add je outsb rclb xor ja adc or ljmp call jge fidivl enter out mov mov jo sub loope adcb or pop outsb sarl add pusha imulb cmp (bad) lods (bad) dec rolb cwtl lock sub fstpt lea dec stos das inc jl sub loope les adc (bad) mov jo push shl cmc cmp (bad) jl mov jl add mov orb roll hlt jo push movsl lcall xchg mov cs movsb std or enter fisttpl std inc es mov mov push or jmp xor cli sbb cltd sti out lret and scas js sub jmp dec lods movl fwait cmp cmpsb out cmc cld nop mov push aas adc mov or mov mov in (bad) mov gs dec push jmp xor pop loope xchg pop mov xor inc push (bad) mov into int cmpsl aaa xchg push fs pusha (bad) fiadd inc mov pop inc mov jae or lahf ljmp xchg and sahf cmpsl ja sub int push not mov rorl and jg ret xor add push dec out push sbb inc lods inc dec pop pop cmp jne or mov dec jmp in call test xchg fcoml jecxz cmp aaa movsb ret cmp pusha clc rcl adc xchg subl testb and ret mov int3 popa notl cmp cmc insb sbb bound enter mov add sbb add movl push cmp test inc add (bad) loop les push mov sbb pusha cli or pop cmp dec jl push dec sbb je inc mov inc push das inc (bad) jbe mov popa mov lret jno imul dec xor not cmp mov jb or jp clc xchg mov iret xor jae mov stc jle inc dec fbstp cmpsl dec jp mov xlat sbb sar inc outsb ljmp fsts fidivr pop mov push jo fwait (bad) pushf sbb call scas movsb dec lret mov ds fnsave xchg pushl sub rclb mov into pusha in dec rorl outsb mov sub push cmp adc scas addr16 cld sub nop cmpsl scas aaa sbb cmc in jg push jmp fsubp pop dec shl ret shrl push shrl negb mov int3 mov lods repnz xor mov int or sub cli push mov dec scas cmp mov xor aaa shl mov add out sbb pushf (bad) jl jne push or movsl (bad) sbb outsl in mov imul adc mov add sahf jne add repz stos stos idivl push scas pop insb mov mov (bad) mov mov inc push xchg fwait cld push outsb mov lahf orb mov sti mov and pop xchg push mov xor xlat push ss call mov push lret (bad) (bad) lock add pop jl out or int mov jnp adc loop repnz mov out sub mov and jns popf ret movq lock cmp jmp arpl mov sub cmovns jl aad lods call shrl stos subl gs fdivrs adc inc fidiv pop aas sub jle nop push sbb jbe inc loope mov mov loope lods add adc pop sub or xor fidivrl stos sbb scas and cmp pusha es or xchg cmp lahf push lds lods test lods xchg jle push push push das and int3 pop movsb xor mov jge (bad) incb or fwait lret sub inc mov xchg push fnsave inc mov fldenv sarl repnz xchg int fist jo orl xchg mov stos mov outsb mov arpl jbe jp xchg out int3 outsl cltd out dec ljmp fldl jne inc test cli mov push lea jb sbb push cmp lret jl jno int jle pop sub lods or icebp push cmc and inc mov negb xlat insl iret test mov in and jge xor icebp loop dec push nop or les int3 xchg push pusha push xor ljmp lods mov push and xor mov aad adcb ljmp pop out adc (bad) xor mov aad popf and dec loopne or cld jnp loop jns or jno aas popf daa xchg adc or imul inc repnz mov popa push fs push sub sbb stc aad and setb sub sbb sbb jns mov mov push js pop xchg cmp insb push cmp test mov fisttpl adc add aas xor sbb mov out loopne adcl nop ret pop (bad) adc sub mov push jge rclb scas pop cmp fdivs mov sarl loopne ljmp sbb pusha or std fdiv gs cld mov lock xor mov mov aas outsl sbb or mov sahf inc xor add aad jne nop jnp or mov push dec scas dec scas aas push popf mov lea movsl push or sbb xlat ds insb fisub mov mov je stc iret and jae call jbe adc aas arpl scas lods (bad) int3 rcl aas test mov test pop lock xchg mov cmp lret pop into xchg roll jno std aam (bad) pop outsb sub std movsb lahf push and mov push cmp sbbl xchg pushl push sub or adc aad imul je rolb icebp (bad) idivb vsqrtsd lret out dec sbb or js into fbld and cs and addr16 scas jge sub orb std sub imul popa mov dec push xlat fdivrl inc sbb add cmp jg mov jno sti repz test pop dec inc notb sbb pop out into repz push mull stos cmpsl nop dec mov jae mov sub sahf (bad) cmc ret jns stos fistp es stc mov adc mov fidiv pop (bad) jo dec sbb push mov ss sub cmp nop sub cs mov fstps jle jno add sbb out cmp xchg test dec sub mov pop ss mov or gs pushf insl cld pop mov xchg addb outsb aad icebp adc pop xorl xlat inc outsl test push sub fistpl out or xor and dec add loopne mov stos push jp xchg add pop es and cmp sbb sbb sahf jmp add pusha cs xor (bad) rcrb je mov fprem1 pop cmpsb icebp movsl in dec adc mov gs cmpsb mov jmp lock shl dec jne rclb xor icebp int3 dec or lret lds movsl sbb mov inc sub and pop rcrl jbe mov aas icebp sub aaa (bad) es repnz leave inc and rcl add cmpsb dec sbb jg sub dec add pop xchg and fcmovnb lea cmc mov test fidiv fisttpl pusha shrb jg or and inc dec or dec fwait inc xor jle pop xor or xorl xor inc lahf sbb xor ja xchg pop enter fsubrl rorl sub inc sub push mov or fiadd pop das sbb xorl sbb add cwtl pop inc (bad) push outsb fmull popf incb (bad) xor scas outsl cmc jecxz std insb and mov add mov push fwait cmc mov data16 loop js sti sbb push dec int3 jns mov (bad) push inc js lods loope or mov add xchg adc mov (bad) mov aaa cs aam xchg push sbb mov xchg push movb jge in cmp xor and scas push or daa fmuls xor xor loope lods push clc insl xchg xor scas add xlat (bad) jo adc mov push nop jg xchg cmp xor (bad) enter int fcom add (bad) mov xor pop dec sub dec pop cmp push cs mov out mov adc and jle sub push loop xlat pop jg add pop mov jno pop xlat cmp adc mov jno imul rclb aad add cmc mov lret cld sahf or loope add jmp sub xor and jge rcll lock test insb data16 mov xchg ja dec sub push cmp push or push inc mov jecxz cmp xor (bad) out icebp in xor lret (bad) decl aaa sub dec or divl pop lods stos lret sahf add (bad) mov sbb and mov mov add mov jmp jns xor imul lahf out addr16 xchg mov js push pop adc inc sti dec push mov insl or daa jne daa das inc in aaa imulb cmp loopne pop bound movsb mov jmp pop xor add add or inc rclb in daa xchg mov cmp jbe repz daa aas (bad) and cmp insl fimull cli xchg fstpl sbb imul lock jmp repnz push mov or icebp pop in and sub adc stc leave cs push pop pop mov mov dec sbb mov fsubrl in test cmp or pop pop icebp push loop lods stos jne ss jae in and sbb mov lods push mov xchg insb lds cmp (bad) popf mov (bad) mov (bad) sbb or data16 outsb mov test cmp cli fnstcw push jns stos or clc test test outsl adc out jae test in jge out mov cmp xchg push jmp sahf outsb jl mov mov (bad) adc loope and cmp jno lock adc inc jo sub popf cs mov xchg pop adc shll cmpsb mov or fwait xor jp cltd dec data16 (bad) iret cld mov dec mov jo cmpsb pop pop ss xor and movl cmp lret or not xchg in in mov stos sarb xor js (bad) jge cmp je fisub sbb mov mov push fs jl xchg sub scas daa push mov leave lcall mov fldl2e (bad) idivb aaa jmp push xchg inc push jp scas jecxz pop inc jb arpl sbb inc xchg fldt inc scas ss ljmp (bad) or pop pop test imul pop popf repnz imul hlt dec push lods cli dec (bad) xchg or loopne shrl jl inc jns call fs mov aad loope pop cmpl or or jns mov add cmp ffreep pop mov outsb (bad) mov mov mov jp fisubl xchg fbld ficompl test xchg ret ss jae jmp jne insb pop cs add in stc xorb (bad) sub inc inc subl stos mov outsb shrb adcl and ja dec mov sub fs data16 mov jl fcompl inc inc inc jo aas (bad) sahf roll jb jp add ret mov push add ljmp mov fidivrl (bad) fwait into sbb add mov mov pusha cld push lahf mov mov xor fwait pushf call (bad) xor stos cmp jno cmpsb push (bad) imul (bad) jbe test push aas into xor and xor ljmp cmp pop cmp popf out cwtl xchg adc gs cwtl pop dec rclb sti neg jnp popa lahf sub jo cmpsb adc mov outsb clc add je cmpsl jae hlt loopne xor cmp cli push sub test xor sbb outsl fistpl mov test sub lahf into ss imul je int3 sub das cmp iret ret ja test outsb stc mov and orl lock pop cmp jbe,pt cltd rolb adc sub insl xchg inc loopne push cs dec pop mov xchg sub sub inc push inc fwait in fcompl ret push enter xchg inc js and daa sar sub pop sar jmp mov pop inc (bad) aam mov icebp movsb repz test repz test push inc scas xchg pusha mov xchg mov lds aas rcl popf stos jnp mov sub push xor mov in js dec sub iret sbb dec mov push mov or xchg fidivrl mov lds xchg repnz cltd push cld lahf lods push add push push aaa dec push insl mov insb and sahf mov cmp cmp ds insb dec inc adc pop cwtl or scas add inc xor out movsl inc or rep pusha add jg cmpsb divb lret sbbb jnp pop mov imul daa push shrb and pop inc and jno adc add or in decl dec pop int rorb cltd jge (bad) jbe int3 jmp pop hlt inc popa (bad) inc push int3 outsb lds out jl push fwait aad mov jmp out jns into (bad) addr16 cmp repnz push add dec pop mov jle repnz mov outsl adc icebp mov fisubl adcl xor leave (bad) rcl jecxz clc add push inc imul nop call mov fucomp in test movsl jno ds aaa pop dec fadd nopl in (bad) jnp cmp jmp call imul mov jmp ret xorl dec (bad) ret (bad) out lods pop sub adc aam mov cmc mov lock mov inc add out sti adc add adc (bad) jbe out sub shrl loop mov out or or add mov je push mov mov inc mov xchg xchg enter mov (bad) mov jecxz pop mov fdivl icebp lods or add ret pop out lcall int3 pop cmpsb out test mov test lret push mov pop or ja stc mov int aaa mov dec pop inc xlat jae es inc mov (bad) leave std jmp xor fmuls test daa xlat (bad) lock cmpsb jns push jp in push mov pop mov xor mov inc rcll jnp arpl jmp out inc jae lods cmc sti push cmpsl fiadd add jg std ja hlt clc add repnz mov aaa sarb ljmp adc push xor pop cld sarb cwtl push fist sbbl mov nop xchg jns mov (bad) test jecxz pop dec cmp mov dec mov mov mull xchg sub (bad) in pop fildl pop fcmovb cmp sbb test mov dec test (bad) xor aaa das sub loop out lods xchg (bad) aas sbb movsl loope xchg inc push adc outsl add les push xchg add pop bound stos ja in dec fcom push cmp pop push xor insl loop pusha scas imull mov and push ljmp push xchg push in cmp cmp pusha fisttpll xor cmpsb sbbb cwtl mov mov in cmc push or stos out xor sub add pop popa fistl mov jge rorb mov cmc pop mul loop fistpll cmp jo std nop and cmp adc std mov test xchg jmp adc inc aam ja call aaa imul inc jge outsb outsb and stc aas sbb jecxz mov add movsl movsb in pop (bad) and lret jnp jne jecxz cmpsl pop sbb loopne es loop out imul nop aas sbb jl xchg xchg (bad) xor lods push pop push push (bad) push cmp xchg andl fs aaa xchg push add mov xchg aaa lret hlt mov bound loopne xor nop lret ds aam das stos jo xor cmpsl inc pop adc enter repz jbe addl loop mov mov lock dec sub sbb jmp test loopne mov xor ja xor loope mov (bad) mov lret and stos sbbl mul ljmp and cltd push icebp push mov sti push xchg outsl call push push repz cmp mov sub push pop adc cltd cmp (bad) int3 pop lcall mov sbb pop mov out push cmp sub lcall pop (bad) xor stos xadd jns push and cmp sub das fwait add add (bad) aas push sub sbb pop dec mov ficompl add or lret xchg in dec lock divl mov ret xchg cwtl mov adcl (bad) jp adc mov sbb pop sahf imul movsl xchg jmp sbb das and ret jb xor mov imul loope syscall jo (bad) loopne mov push adc adc lret pushl sub jnp data16 adc pop fwait mov scas and and stos inc push pop lea int cwtl jns inc pop insl int enter sti adc jne stc mov stc or cmp cmp dec in add ja mov int mov and rorl and pop inc adc adcb fistpl xor push add adc je scas in jo sub sbb jae sbb mov fsubp aaa pop cwtl xchg cmpl jg xor push mov js jle or testb in cli mov push sub cwtl out jg (bad) adc dec inc js popa add in stos mov in lods inc loop mov ret call sbbl jle jp inc hlt inc sbb cmpsb je stos cmc clc in mov pop (bad) in movsl fdivrl xor mov (bad) xchg out outsl dec loope xor cld loopne (bad) hlt inc movl popf xor fs dec bound or ret jo sbb inc insl scas fildll mov cmp lods dec cmp addr16 adc adc jge rolb in lods pusha sub bound es sti js mov out dec inc mov fs cmpsb jle jecxz mov cmp test xchg arpl in jge jno test xchg pop push fnstsw testb es int jp testb xchg loopne xor lock popa (bad) push add dec lahf xchg sti sbb sub adc fbld jp pop pop sub (bad) int adc pop icebp cld xchg cltd pop ret loopne bound mov xchg xor pop repz jecxz cmp push jns adc and int out xchg pop and in xchg push adc lods or scas sub lds jb stc ret add loope mov dec or jecxz adc dec call jge aam andl call dec and xchg icebp loope cmp or pushf inc (bad) std lret push fistp or and inc (bad) push dec mov or xchg insb aad xchg mov mov arpl jmp lret addr16 lock inc xor fwait clc cmpsl and cltd xchg (bad) cmp scas js adc popa cmpsb push mov jg ret repnz pushf push mov pop jne ret sti rdtsc push fimull fsubp xchg ret xor mov (bad) sbb xchg sarl push out pop fild push jge jo xchg adc fisttpl imulb repnz jns dec cmp or mov popa push cmc pusha mov xchg push xor insl inc jl rorl gs outsl xchg mov pop loop jecxz jno fnstcw cmp fisubl fnsave je enter cmpsb adc pop out stos rolb dec or sbb loop orl sbb imulb push lahf in call sbb lock insb mov xchg bound dec aas js or sbb stos and xchg inc ljmp es jecxz dec clc lea mov jge and sub or pop jo inc nop movsb jle cltd test cmp test lea scas lret psrlq mov test (bad) mov xchg add into iret stos cld outsl insl mov les sub scas mov mov mov repnz loopne dec push in sub outsb (bad) repnz stc xlat cmpsb cmpsb cmpsb into clc add sbb inc push fs dec lea insl sub jo sub inc test cmpsl xchg test ljmp xchg rclb mov lret mov stos sub and sub xor neg idivb jo gs rorl or bound pop fs push cmc sbb or xchg pop push mov das insl ret addr16 mov or xchg and dec mov stos and imul mov ds sti cmp int3 dec shrl subl mov and stc repnz lock and cmp mov mov xchg jecxz xor pop fildll inc rcr sub test aad xor scas imul inc add mov and jne (bad) adc mov cmp idivb into inc out push incl mov and iret cmp jle cld push adc ret adc icebp jbe call roll sarb jns pop lock mov lock iret test insl xchg inc fist fadd xor push add addl mov in ljmp mov jp test (bad) aaa cmp mov cmpsl mov and inc (bad) pop hlt push enter jno (bad) mov aas pop and jp or cmpsl lods aaa out xchg sub aas cmp mov pusha (bad) mov popa leave xorl jne int3 mov push adc mov sub arpl shll mov jmp pop bound (bad) insl xor je pop jns aad mov pop jnp pop pop sbb test mov in in ss xchg adc in in dec popf mov push pop mov ja mov loop inc stos pop sub (bad) daa loop lock lods sub dec sbb aam test fild jp cli xor gs or test aad mulb xchg sar outsb mov test (bad) inc das cmpsl xor and jb ja pop dec stos sub mov sbb pop mov xchg call fcmovb mov test adc loope mov ds mov out ret jnp iret xchg jno push jb mov mov inc sbb cmp loope xchg dec dec push dec in cmovo lods shlb pop lcall and and xor in mov icebp mov add pop mov test popa in adc dec or push ja inc pusha movsl cmpsl dec repz mov xchg enter push cld jle imull mov mov int add mov test mov jl (bad) or jmp aad (bad) ja aaa flds subl ss mov pop movsb add rcll es arpl fwait sbb dec xor xchg andl repz jecxz ljmp add push das loope mov and add pop jle mov mov fild and push rcrb push popf mov adc sarb call add js mov mov repz (bad) fwait int sub push fdivrs cmc jmp mov mov push push lock xor (bad) sub pusha jecxz adc pusha (bad) (bad) or int shrb cwtl cmp push scas ret lcall iret lret adc cmpsl cmp rcrl les xor cmpsl mov xchg sti scas mov mov rorb sbb cmp pushf inc lahf inc cwtl das xchg cmpsl shr test pop jmp xchg adc cmpsl mov jae xor sahf mov enter push lods aas movsb adc mov hlt sbb push call cmp pop adc fnstsw inc shl mov imul leave pop and xchg inc aad (bad) mov xor andl push cmpsl push inc rclb push lea adc cmc cltd pop je jecxz dec and lcall ds push sbb ret dec mov test or cmp mov pop repz (bad) pop popa dec sub test int3 pop inc movsb (bad) es add ficom dec inc fisub mov in cmp negl test mov push pop pop push mov fild pop xchg dec cmp mov lods mov xchg icebp rclb cmp movsl and (bad) mull sbb cmp xchg test lock loopne aaa pop out leave push cmp mov mov and ret loopne out push aaa (bad) cmc xchg out ljmp lock and loope push ljmp mov xor imull push (bad) sarl xor js in ljmp xor mov jle into xchg sarb lret cmpsb sbb fisubr sbb lods arpl inc rorb insl out in jb mov push inc xor dec fnstcw (bad) push cltd cmpsb loopne pop inc shrb aas mov cmp jne repz in xor xchg jl fbld sub add adc inc xchg imul push xchg dec push sbb and (bad) push lds mov mov adc sahf imul icebp rorb mov (bad) add and and pusha or stos repnz inc xchg (bad) mov aaa fdivp ja rolb push out out mov push push cmpsb ret mov cmp test and popa jle fsubp add imul je mov aaa (bad) sub (bad) mov lock test jl jmp test ds inc (bad) mov xchg jnp data16 xchg xor xchg lret movsl dec leave pop (bad) xchg je pop mov inc dec (bad) and ljmp lret mov inc jmp les dec outsl ret adc addr16 mov cmp das xor lock xor sbb stc jl scas dec fstpl add cmp pop add adc lret mov jge fcoml das cwtl rorl mov mov cs pop jae push mov fwait mov inc imull mov push cli popl int jp jecxz cltd and iret sbb lret cwtl stos jmp scas push add int3 fcoml popa add mov push in mov fs mov xorb jmp inc dec jb mov and jbe out (bad) aad gs mov jae sahf into push mov push imul ret push in adc xchg add adc push fistpl xchg in repnz lds in fs arpl adc pop sbb sub ret push push jb jnp jge imul into dec add cwtl leave lds inc or pop shlb fbld ret push roll idivl int3 push add pop or mov ss xor mov mov and cmpl fistp out lret mov sarb test call mov cmpsl pop shrb xchg ret mov rcr push push mov mov or ret mov (bad) jb mov ret out arpl aaa add call sbb jb shl test je dec pushf movsb test adc es scas dec xchg mov (bad) popf jg mov cmp adc (bad) sbbl and add adc pop lahf fwait ja mov dec mov test icebp cmp push fwait shr jecxz addr16 mov pop test shlb jae imul push xchg wbinvd mov push cmp cltd insl push ljmp ret mov or (bad) outsb in fild push out xorl incl inc ss and ds inc nop push push pop or xchg mov imul sub outsb adc lcall cmp lret dec mov fcompl and mov shll fistpl dec xor popa leave sbb movsb mov movsl or das out push xchg jns sbb scas jmp mov pop push ljmp sub call or sub inc in mov adc cli rclb out (bad) int adc mov pop xor jp add js insb fdivrs (bad) dec enter cmc in lcall arpl mov xor and inc out es lock or clc lds sti out stos adc (bad) mov aad into in push xor inc or (bad) mov xor and xor add stos imul xchg pop or movsl xchg adc test mov stc mov repz repnz mov add nopl movsb aaa mov hlt sub lret cs jle pop xlat adc push popa out aas jo ror jns mov mov jge (bad) adc xor jno (bad) dec insb shlb jl add pop cmp sub call jnp imulb mov in pop popl mov (bad) int pop sub xor (bad) dec sub test push outsb push je data16 cmpsl test xor pop (bad) lea insl jae pop mov or fdivs push inc testb xor shr xchg lret push (bad) lret cmp mov je jo inc ljmp mov xchg add ror je imul mov jne imul or mov or imul in fsubrl (bad) jg cmc and sarl sub mov sahf push adc aaa cmp pusha dec daa xchg mov inc incb push xorl (bad) in in sarl stos sub pop mov lods fs stos add sub bswap push pcmpgtb pop mov repz add xor pop loop dec imul pop xorl add and iret lock (bad) xlat mov lock xor dec into scas es movsl test cwtd xchg or loop lods aas vmwrite mov stos or xchg fnstcw push pop add imul cmp int cmc icebp dec jnp imul fnop mov push xor xor imul fisttpll inc in adc (bad) lret clc inc or inc inc xor add lret dec and inc notl xor shl xchg leave fldenv mov mov lcall out ds lods fbstp into cli sub fldt add testl imul mov dec or jl adc call sub xor (bad) lcall inc pushf ret adcb shr imul ss fs adc jo fsubrs cmp (bad) and cmp (bad) mulb xchg loopne mov das cli aas arpl daa and stos scas xchg stos stc inc orb pop pop cli (bad) inc lods jmp jns mov or xchg ret jecxz xor andl mov out push ja mov jg pop lcall mov lds movsl mov fisubr and cmp or out jmp pop and test mov gs or sti jp xchg cs outsl call inc bound inc pop les mov in or or (bad) (bad) mov outsb mov pop mov stc cli mov gs test push je cmp jbe or ljmp add ds insb in mov push fucomi sub out shl insb jae aam cmp add shrb add push xor arpl dec in jno in jl pushf and xchg nop mov push gs sbb gs stos arpl adc mov sbb ret in ficomp in mov inc push lea sarb dec mov and inc mov push lahf mov in enter loopne sbb nop xchg mov stos add cmpsb push pushl xchg arpl push sbb lea mov out sub mov jecxz mov cvttps2pi imul nop sub scas mov mov and mov push mov sub fldt loop (bad) mov sbb cmp sti aaa out jae cli xchg lds mov in pop xorl cwtl adc lret lods sahf push out insl xor dec sarl iret bound pop jmp in inc mov or inc bound cmp lods inc push pop mov push jg sbb pop popf pusha je or outsb cmp fidiv leave gs je mov jmp fnstcw pop das imull out push dec outsl scas lea int jno lock xchg addr16 adc dec jb fidivr lahf cltd sbb or jb mov ds add sbb mov clc sub add and jo pop mov imul cltd test aas cmp push mov es aaa out mov je hlt fidivrl cmpsl sbb inc add insb push shlb je test pop mov push cmp out js push push rep pop push int3 push jecxz push scas mulb (bad) mov pusha fstl (bad) xor aam add inc fldl fucomi inc add rcrb test and inc mov (bad) xchg xrelease test movsl xchg xchg inc sub in add lods push insb pusha icebp out ds and aam mov inc std repnz mov mov gs mov add inc insl jecxz adc push mov mov cld movsb nop push out adc and shll (bad) pop out mov iret sbb jnp data16 adc mov jg je stos cmp repz mov push adc insb push cmpsb arpl sub inc lret je mov adc test inc lret xor out into add cmpsl clc adc stc ss std jmp enter rorl in pop pop push cmc lret aad add sti lret or inc pushf adc push out cli xchg push mov push cmpsb mov cmp xor mov jno out into pop mov (bad) clc sti push jno pop and stos mov xor aas push scas ds loope lods pop (bad) or ds lods popa ljmp jl inc aaa inc sub into pop stos push mov out push adc lods jns popa insl enter hlt jns inc sub pop add xchg stc pop ret mov (bad) push or push jecxz push push gs push jg push xor add scas or data16 cmc enter inc movsb xorl (bad) insb mov xor in inc push (bad) jp mov push stos inc int fsts or push sub inc push out in mov sub jecxz sti lret dec and dec jae loop in cmp pop mov adc mov mov test fiadd outsl push mov sbb dec loope aas sbb and insb sub hlt cld fsts xchg adc (bad) arpl loopne xchg outsl mov or movsb cmp jb xor stos xor push pop out call aam mov imul xor and adc clc das fsubr lods dec (bad) leave lcall ds les xchg sub mov loop das pushf es rcrb sbb adc or shrb (bad) insb pop imul mov adc or adc int3 outsb sub test divl aas xchg pop or jae mov fwait dec stos inc and mov xor sbb fdiv push pop lds sub ret xor lahf sbb sub nop cs ret cltd mov loope idivl loopne lock xchg insb inc stc xor int inc fadds inc xchg sti cmpsl add and test movsb cmp jl sub mov (bad) mov imul mov lret dec call inc mov les fildl test cmp std and scas (bad) aaa or sub mov push fstps push dec and leave cmp loope (bad) xchg pop pop or mov mov test sub iret add imul mov mov pop sahf shlb shll das adc imul cmp lahf push out inc cmp fist out repnz xchg insl testl cmc pop cmp cmp outsl aas cmp int3 cmp ror add mov pop cmc jge xchg sbb cmp sub mov bound push ficomp pop lret mov loopne lods test mov sti ret push adc lahf in or inc rcrl stc push add push cmp daa bound js pop adc rcrb cmp lea out ss outsb push push (bad) aad cmp aas test ffree add adc icebp lods sbb xchg cmp cmpsl adc out add fnstcw gs shrl mov aas inc mov or bound (bad) jg xlat (bad) repz movsl in leave xchg xlat es dec mov mov pop pop push repz mov mov jne cmpb xchg xor cmp inc add and cmp push inc repnz aad cld psrld jno dec xlat ja sbb sbb nop xchg data16 and sub jmp les arpl jecxz bound (bad) leave sub mov je mov icebp push jl movsl push lods out inc addr16 out iret dec pusha jns je inc sub jl cmc dec mov sbb ret mov xchg lret push lods adc adc fnstsw out jbe sub lret test sub pop xor mov xor push jns inc and (bad) mov scas adc jp jo iret out or inc bound sub add cmpsl fsubrl push mov jnp lods shrb scas inc js push push push mov nop mov inc cli jns scas pushf mov push dec pop jmp or xchg test rcrb pop adc roll test out xor data16 loop loopne out incl jp adc test shll aas out mov test or push or pop iret push nop enter ret aaa inc mov and frstor mov lret ret lods (bad) and dec and repz xor mov (bad) (bad) jo ja mov push cli xchg mov pop cmp push mov movsb dec lock mov xor aas mov adc push xor mov mov jns sub push (bad) out or out nop inc pop dec and daa in add pop adc ja div cld sbb pop xor xchg daa cmp sbb das aad add sub inc jbe mov mov dec leave jmp outsl jnp mov out mov adc jno mov leave insb xchg hlt cmp xor aas sahf iret jge out pop push pop enter push add xchg adc in pop hlt jns cmp jnp ljmp cmp sbb mov test xor mov shrb (bad) adc sub insb add cmpl aam xchg mov xchg sbb push sub scas pop cmp dec inc loop or push loope push add imul or insb pop mov adc aam call fsubrl jle push jge aaa (bad) cmpsl popf les or jle ret xor ret xor or pop jle aas adc pop fs inc cs mov lock lods mov test movsl inc bound adc test pop cli test aas pop inc mov xchg pop (bad) xor mov cmp enter test pop xchg push movsb mov imulb sbb jl pushf sahf cmp enter or mov loope adc dec js pop arpl sub shrl bound cmc insl (bad) or xlat and (bad) inc push in mov or adc or xchg xchg and inc add add cmp (bad) pop xchg xchg add jne orl mov inc pusha sbb (bad) xor add inc scas test fsubrs std scas sysret xor hlt lea push push cmpl or clc fs clc test ja or outsl aam in test sub jp in leave add jae pop inc icebp cwtl fidiv add aas imul inc fildl add stos in pop jo into movzbl and loop aad inc icebp fdivrl inc jmp rcl xchg xor pop mov lock jg fcomps dec nop xchg les mov jbe push je mov push mov pop mov data16 xchg pop and pop (bad) pop xchg xor jno lods xchg mov sbb idivb xchg clc (bad) fisttpl ror dec xchg mov xlat dec sbb popf sbb cli and mov xor mov push pop rorl scas ljmp aas jno inc inc stos mov cmpsl mov test push lock xchg jmp add sub and iret xchg add insb pop int (bad) push or les (bad) jmp sbb out std test imul add xchg data16 push xor inc inc sub mov cli mov jo cmp cs dec xor mov lahf fisttpll cmp push dec dec outsb sub sub inc out sub popl cmp enter sub push (bad) pop jbe add adc xor add mov sahf jb jg pop dec fs jecxz outsl shrb fneni(8087 jmp fisttp add (bad) push add add sbb cltd push in rclb data16 pop lds sbb outsb jl xor or je,pn push clc or imul cmc aam jbe push mov test cmpsl das mov imul aad push leave dec test lods push inc jmp push sub or lods pop ss xchg and adc pop inc sub and int3 mov leave ret out add dec sbb mov and jmp mov lods cmp lds cmc cmc mov mov in add dec sbb lods and test mov lret imul push (bad) jbe fdivr adc sbbl push pop lahf xchg icebp xchg dec adc pop mov push bound cld inc lea xchg mov lds or idivb fldt jle ret cmp scas cli movsb or fisubl jbe into xor push mov subl inc mov pop xchg sub pop popf sti push ret arpl imul cli dec bound outsb push test or scas in or or mov cwtl add stos data16 fdecstp pop inc cmp and je imul jmp mov fstps cmp mov push inc ret out mov lret out das push (bad) bound mov cmp (bad) rorl jo hlt mov das xchg pop test inc cwtl pop es xlat addl les mov ja mov inc nop jns in stos test push dec inc push push negl mov cmc inc and jae inc shrb jns insb and jne xchg mov xchg xchg xchg xor add fptan cmp add mov out pop xchg aaa xchg das (bad) adc inc unpckhps lods arpl cmp data16 pop int xchg inc add sbb mov int fsubrl mov test mov fsts sbb mov jl push push jle jmp push sub nop out fwait in lahf cmp push xchg and push into minps fistpl fldcw bound jae out scas inc test (bad) inc pop and dec push cmp and cli jle push call lcall push mov fidiv fs inc sub jle iret movsl pop nop outsl movsl fs push sbbl or mov test pop gs xchg cmp push imul xor dec pop outsb fildll negl pop add and std imul push insb call test bound and sbb lods mov sub adcl or mov mov movsb sub pop movsl lahf xor stc push int3 mov cmp and cmp in loopne xchg mov sahf daa mov add add imul dec dec cwtl iret repz mov loopne xchg jg das push cmpsb push sbb js xchg jb push pop sbb push (bad) dec popf pop lea push ss push push and xlat into mov out or inc adc fiadd add push loop in movb dec lahf pop in je out pop int3 cld jo imul sbbb into icebp mov out or jg jge dec cmp mov mov outsb dec jp jbe jp rclb pop movsl xchg outsb cmp ret in jle jmp push mov cmpsb pusha mov aaa adc leave jno aad insb dec pop cld popa (bad) push add add cld dec jp jg inc int3 lock das cmp ljmp and nop mov fs outsl hlt cmp push mov mov xlat xchg xor cmpsl dec rcll sub pop pop and mov mov stos xor xchg int ret (bad) rclb aam in push jnp cmp xor add iret cmp sahf loope ret or (bad) enter daa adc sub aad push pop movsl shll push xchg mov ljmp cmp or (bad) or int daa (bad) xchg sub shr in repz sub or jne mov xchg and ljmp iret jge test sub loope lret (bad) mov nop adc shl adc pop rclb outsb mov outsb adc (bad) out mov loopne lock clc ljmp mov cmpsb cmp popa mov notl inc push lcall stos pop add push push lret sub add fidivl das fs insl jb cmp sub popa sbb enter sbb fstps add loopne push cmp aaa mov data16 add divb (bad) push and xchg mov sti in xlat xchg into movsl aaa rclb inc push cmp xor roll mov dec add dec out leave cmc imulb ja fwait jg mov mov dec in loope push cld sub shll mov sub jmp pop mov sbb lods push sbb cmpsl push jmp jp xor fcomip cmp mov mov adc imul loop aaa adc ss repz mov js lea pop mov fsubs mov in mov ret aad cmpsb dec cmpsb sub ljmp push test je cmp nop dec imul aam andl divb inc (bad) sbb xor inc popf loop push jg subl dec lock or add leave pop out dec lret mov es shll test iret shll pusha push adc jo lahf xlat push dec sbb push sub mov adc push jg out mov xor inc hlt mov testl addl cmp cmpsl inc fbld ret xor or lcall add clc jp mov outsl pop fs fdivs and cwtl test or test insb mov push cmp sub movsb xlat and jl into jb push jns aam cmpl fbstp cmp adc dec lods mov inc cmp mov push js nop out inc imulb pop jg movsl out mov ret or inc cmc clc mov xchg decl outsb mov outsb pop lcall subl jmp iret (bad) (bad) pop sti pop and sub jg add mov shll sbb sarb dec sti inc outsb pop or mov fsubs out push notb and imul shll xchg mov les mov in jmp inc or ljmp and into cmp dec sub add das repnz jo (bad) dec arpl clc sub dec ret xchg movsb jecxz xchg xor repz and and (bad) shrl mov and pop push push xchg lahf push iret negl popf enter or lods int decb dec insb mov sbb in sub jo xor (bad) pusha loopne or lret lea (bad) clc psrad movsl fwait inc dec mov jo int3 iret pop cmpsl sbb stos push and xor addr16 sbb repnz jno xchg jmp jne fcomip sbb and ss sbb sbb or ljmp push sub cltd or xor and fs jbe sub movsl mov jecxz fild mov test rol xchg icebp push mov ret adc and xor xor into pusha lret test sbbb mov cvtps2pi push lea gs fucomp push lds pop fwait les sub ficom mov loop sbb ret jle jno mov jecxz xor jecxz inc sarb mov lahf push inc sub inc movsl cmpsb les mov jl push mov or ficomp pop fdiv or sub mov (bad) cmp popa fwait push push enter imul mov xor xchg ljmp addr16 mov outsl cmp xchg xor dec loope pop pop jno or adc pop out out pop (bad) (bad) cmpsb add dec dec cli mov bound mov sub cmp sarb pop mov inc daa int3 test jae popa in sub cmp xor jp cmp jl dec clc or jns lock push sbb aam aam inc adc sbb jge ljmp sub subl dec sub ds fisub mov lea popf aad jnp jnp aaa jle push jle pop pop pop mov xchg sub or sbb mov lret stos out jne mov idiv or cltd in mov cli add add inc mov mov jmp mov jp sti dec in xchg bound push mov inc cmp mov xlat movsl push xor sbb add sub js jb call cmovns int stos xchg ss sub (bad) leave push cmp adc (bad) daa ljmp repz mov cmc sti jne mov xor cld test xchg push (bad) fidiv (bad) insb int3 add cld xor and sbb and rolb xlat xor and cld das faddl mov sbb fbld fidivrl andl lcall nop dec arpl (bad) stc cs sub shl in mov test dec rolb aaa adcl arpl dec lea cmp orl jle sbb js (bad) lcall aam (bad) push or loope repz or jo aas idiv pop (bad) cmc rclb jmp nop (bad) sahf cld xor jae cli cmp stc jo shlb jno inc xchg lahf pusha shrl rolb mov cli xor jg xor fs xor mov inc add xor mov test stos stos add mov push rcrb add add lock repnz leave jno js,pt insl inc (bad) xor jno xor sub sbb (bad) adc scas pushf inc (bad) dec decl mov rclb add xchg dec xor lcall or jmp mov dec xor jne pushf pop inc shll xchg pop xchg adc mull gs fs js jbe xor movsl cmpsl adc rol cmpsb push test addr16 pop mov (bad) xchg fldcw (bad) repz mov xchg aaa and rcl or sub mov mov mov jmp rcrb das sbb jbe aad cli push and mov cmpsl ret xchg add cmp mov jnp repz or pop jmp sub xchg and sbb outsb pop repnz xchg call xor add fsubr sti add mov bound insl int outsb addr16 or scas xchg call inc ds jae adc xchg ja div jmp push mov mov push inc mov mov mov xor mov push adc mov (bad) arpl dec mov lea and movsl popf rcr jns xor sbb inc cmp push lea fiaddl xchg jne insl gs sub sub in lods mov loope dec inc mov push add scas xchg fbld es mov pop inc jecxz inc iret sub (bad) test mov xchg rcr movsl mov nop clc lret fisttpll mov adc lods (bad) outsl sub mov jge,pn pop sbb fs ret mov inc lret (bad) ret lds into or inc jnp sti push or loopne jnp lods and add and push icebp push aas fimull out cmp cld rolb fs aas cmp ljmp test pop and sbb call lock stc jle shrb outsb pop push inc sti fadd or push add xor mov clc jle mov fstps sbb push leave leave xor add push cwtl push and dec jae and scas push pop test out int3 movsl jmp cmpsl lea dec pop jae mov loopne jmp mov loopne lahf rcrl repnz xchg lods mov les lea outsb gs aaa int3 pop mov scas adc cmp adc cwtl rorb cwtl (bad) ljmp fwait aaa add es imul jmp cmc rorl aaa cmp (bad) int push es js add adc xlat mov scas and gs xchg inc cmc lods push pop iret les adc jecxz jns mov lret xchg repnz sarb aas cmpsb mov cltd xor pop lret adc lock jb adc (bad) sub in icebp enter jne or xchg mov pop popa stc pop ret lahf add fcomps adc fld popf inc jle jp fist std inc and adc adc sub sbb or add ret test push mov pop xor outsb push sahf out popf sub mov nop mov mov or cmp fstpl jne sub hlt lock insl icebp mov mov sub sahf stc (bad) or insb and fnop xchg ljmp mov cmpsb movsl jmp or in push loop add pop push lods fcomps hlt in bound and dec hlt pop ret sbb dec and xchg inc insb xor mov test push and adc push and ficoml mov aam (bad) (bad) ficoml ss leave cli rorl mov jnp sbb mov addr16 mov loopne nop jb jg pop xchg inc pop cwtl outsb mov mov frstor mov sub or lods js or sbb xchg xor (bad) sbb in jns imul mov xor jmp in mov imul movsl push sub jae cltd inc cmp ja rcl cmp mov and sub sub sbb pop or mov mov push dec sub scas xchg sbb adc int3 lock outsb rcrb dec popl push xor ljmp inc call xor out cmp adc or jnp movsl dec dec loope cwtl inc xchg or push (bad) stc sahf fs jne (bad) fisub xchg add dec fisttp out out call call out xor dec cmp lcall add fucomip mov jne clc nop cli int3 cmpsb scas jecxz lret out xlat or in (bad) loopne stos mov xchg popa mov cmp insb sub (bad) adc js xor cmp jno jmp or orl aas pop pusha aad inc inc mov sti fisub ss push or mov mov or enter in loop xchg scas jmp lea les push mov and leave outsb mov sub xchg cmpsb repz lods movsl pop jno mov mov vmovss xchg fisubl pop fwait sub aam mov add ret push jecxz outsl fistpl push pop leave arpl jo sub stos adc dec mov popa xchg push outsb jae std sarb lahf adc (bad) inc sbb mov push ret pop les je,pt jle popa addr16 cmpsl cmp cmp push mov jge mov cld jnp sub inc mov xlat movsb dec popf xchg scas in jecxz daa (bad) ss clc xor jge cld arpl sti and aad aaa sub je orl sub mov pop jbe cli jns xor push adc imulb hlt in scas ds adc cmp lods dec lods (bad) xchg and push lahf add int3 sbb dec aad jae in lods gs mov mov fs or lahf cmp lahf arpl sbb pushl gs add popf lods jecxz xor les xchg clc push adcl mov mov xor dec or lcall sub and cmp lret cmp cwtl scas sub cmp test pop imul pop xrelease jge lods sub loopne mov xlat jecxz popf (bad) mov sti (bad) aad dec sbb in or mov repnz or or repz jnp adc stos inc inc int push pushl pop stc pop dec adc pushf and rorl movsl sahf push and push mov jnp (bad) scas pop mov lock inc push (bad) loope add inc mov sbb cltd pop (bad) out stc mov movsl and aaa ja cmpsl mov xchg loope pop add pop cmpsb sbb mov mov movl sbb imul (bad) negb jnp mov mov xchg jg mov sbb inc mov imul add scas mov adc add mov fsts mov inc push repnz and cmp int inc jo mov data16 cmp pop aad adc cmp mov mov fwait (bad) mov lds mov mov and mov sub pop xchg dec out and cmp es loop iret mov mov xchg jg out add cmpsb xor fidivr adc mov and rol mov mov loope sbb xor lods add (bad) stos mov sbb and pop test outsb lcall fistp sub inc jle (bad) bound mov mov cmc mov sub leave jg jae cmp dec inc in repz mov ss sti psraw das add roll ja dec mov inc jb sbb or sbb and inc stc loopne cwtl fisubr iret mov lret scas dec mov jo xor jp (bad) cld lret loop outsb (bad) cmc mov pop jmp mov add arpl loop pushf test adcl cmp xchg (bad) mov jge aaa xor cmp sbb pop scas outsl bound sbb mov mov fldl cmp mov scas fdivrl mov shl aaa sbb repz aas add mov je xor sub dec (bad) stc faddl pop cmpsb mov mov dec push adc xchg fidivr xchg mov bound (bad) mov lret test jp cmpsb add push cmp push pushf xchg scas mov dec pop sahf test jecxz cld or dec ret arpl cli daa and jge sar daa gs das push cltd mov sub clc mov mov lcall push ds scas repz jmp mov push fsubl cmc loope pop mov or in cmc mov mov push ljmp inc ret push aad cmp mov xchg faddp sub cmp lahf aam outsb daa mov test jmp out pop jo dec out icebp mov imul in dec cwtl popa rsqrtps in and in cmp stos push sbb orl mov lea jmp push dec cmp inc jae jns jns mov add cmpsl inc xchg inc cmp mov mov loop ret ret and fdivs jb lret xor xor test jae mov add sbb jb jbe inc gs repz (bad) dec pop jnp mov lock pop out jne inc mov inc mov fsubl dec je popa scas aas js jb or add pushf mov gs in mov or adc cmp xlat pop and cltd mov cmpsl mov jmp dec fcomps (bad) lcall sub xor push mov clc repnz xchg (bad) cli lahf and clc test outsl jae dec sahf stc repnz xchg mov scas ret gs inc lods popa sar or mov or out out loop testl paddusw insb cs mov mov xor sbb stos test pushf cmp mov icebp cmp push or sub cmp inc cmp hlt or pushf xor lret imul push mov mov (bad) es mov repnz sbb adcl sbb loop roll pop subb cli pop and arpl push (bad) iret add pop sbb add cmp scas and sahf push int3 enter pop aas mov xchg jnp cltd jmp insb in int mov inc adc lahf and pop and xor and test int3 ret cmpsl sub (bad) sbb sti cmp ja add pop add mov and jge cmpb mov pop fidivr fmul aad adc enter inc jg ret push pop dec dec movsl mov std and push push lds mov mov test int3 jbe loope dec (bad) mull test cmpsl (bad) cmp ss adc push ret imul add adc or pop fs pop call inc fstl xchg cmp jg je add js dec mov (bad) fnstsw or sub sub repz out xchg inc jl jne pop mov inc cmp ja push scas adc lahf sub xchg add nop mov popa mov cmc call sub nop fidiv fnstcw clc xchg je scas loope jecxz repz test clc dec adc jbe sbb insb mov adc out xor jae pop aas add fwait lea dec test lcall les mov xor pop sub les das mov lds movsb xchg mov dec sbb lahf dec repnz xlat inc (bad) mul and outsb inc add shl jo rorl pushf jo gs mov psubw insb xor nop jno cmpsl les cmp mov mov adc out adc and cli xor inc (bad) jae fisub dec cli mov mov inc adc (bad) pop push mov imulb dec flds iret leave insl mov dec and mov (bad) mov movsb pop imul jle sub setb stos and das (bad) sub lcall call sbb cld js jp add aad xrelease inc add pop fcomps or rcl mov adc sti adc pop add ljmp (bad) insl lcall or or stos jle int pop adc cmc inc jne push repz cs lods pop cs and jecxz cli popa dec sub mov adc pop loop das cmp fs dec in mov pop mov test xchg sub lods xchg push xor mov aam dec js (bad) jp outsb insb push sti sbb js,pt rorl cmp out push mov (bad) hlt inc sar mov mov jnp and sarb xchg and movsb stos je dec mov push adc mov inc cmp cli js out gs (bad) mov push pushf mov inc sub mov push xchg adc push insl mov push xor pop lea mov inc mov pushf aam mov and and cmc aam movsl andl (bad) pop xlat shr into mov push sub stos ja sbbl ja cmpsl or hlt xor pop jmp inc dec icebp shl pop pop mov cmp mov adc xchg insl xchg ds and sub or lret popa outsb cmpl cltd fiadd fsubr nop push stos js jecxz xor mov push sbb fnsave xor gs pop shr daa mov xchg xchg sub divb dec scas jo shlb jbe dec sub push pop mov inc inc fcmovbe orb sub adc ror (bad) outsb mov stc cmc subl jne into inc (bad) leave adc fsub fisubr push add lods and mov or inc push sub push popa or xlat dec rol mov pop fwait add xor xchg arpl ss and xchg ficompl push push mov imul push arpl lret aam stos out pop lea rorb inc lock or clc dec jno cmpl jo mov js push fcmovne adc stos mov test pusha adc adc dec (bad) nop test jno xchg add adc imul xlat mov fildll sti (bad) les add ss aad xlat jne mov adc iret std iret jecxz sub dec (bad) das inc pop push arpl cmpsl aas or fimul (bad) inc sarb es repnz mov sbb pop xchg adc cmpsb add lahf mov outsl pushf js fisttp push hlt lahf daa lcall dec aad adc gs sarl cmp pop mov or lea (bad) or jmp inc jno fwait (bad) or and (bad) xor fidivrl inc sub rcrl nop xchg add add and js xor or adc rcr cld ror lret aam jp loope mov cmpsb and xlat mov clc mov cmp idivb cld push and pop mov cwtl dec cmp cmp loop hlt or scas (bad) cmp jp jne scas adc cmc loop jne repnz loopne imul mov and lahf dec popa pop add (bad) sbb pushf ljmp adc mov cmp pop lods add leave int3 call repz lcall cmp loopne popf add ret push testb xchg inc or cmp pop or cmp insl cli pop and mov (bad) mov adc inc sub (bad) push repz iret in dec pop xchg (bad) rorb (bad) scas fist mov add leave adc (bad) lret dec mov insb stos adc or fucomp pushf stos sub out (bad) or icebp pop in sub pop xor in (bad) out mov stos cmp inc dec jge mov sub mov shrb ljmp cmpsb dec in mov or push shlb and jmp add pop test insl rol xchg je cli dec icebp subb jb adc xchg gs (bad) mov movsl or push pop into mov xor pop loope adc fldt add jns inc test loopne mov and push arpl lret divb nop sbb nop insl push loop push pop out lods sub dec lock xchg dec dec addl jbe xchg jbe push in mov hlt push mov jecxz (bad) (bad) js cmova dec and add xchg or push notb cmpl mov imul int hlt test or mov mov mov cld (bad) inc xchg sbb sbb or mov sbb dec jae jae dec or fimull xlat imul cmp pop enter add dec mov pushf mov stos js add push add push pop xor cmp inc inc pushf xor mov movsl lret mov sub (bad) clc jb rorl sti and xchg mov test loop add (bad) std out addb les sbb mov std jns or (bad) adc mov adc mov test and test (bad) dec mov inc sub fisubl imul inc mov push (bad) dec roll and fidivrl and jg push mull xchg cli mov push gs ret test jle inc cmp mov bound jae inc sbb imul jle sarl mov dec outsl out xor andb ret movsl das sbb dec xchg cmc mov mov jp xchg sub push mov jl mov imul in mov pop fwait sbb lock mov pushf into ljmp adc insl add xor and out pusha and pop addr16 hlt popa ficomp mov add adc fildll fwait adc pop insl test gs orl jmp aad sti cmp fcomps insb xchg mov into or mov inc cmp pop stos mov ljmp data16 dec mov lcall rolb mov in imul sbb (bad) mov popf adc cmp lds test js push push push std je lds push jge mov adc xor andl popf adc imul pop mov fcompl enter xorb stos inc xchg aas dec xor and fdivrp mov bound dec push cmpsl push mov dec inc mov sub fldl xor cli inc mul je (bad) mov lret cmc mov faddl (bad) movsl in pushf inc adcl and push pop daa and inc dec cmp push inc lea movsl push outsl lods mov mov (bad) hlt inc dec jb das xor out leave jmp sarb aad xor adc sub dec jmp testb je imul fidivl (bad) fsub sti mov ret outsb daa (bad) xchg adc fcomp movsb mov add jbe js pop pop dec dec out data16 loopne shlb int3 mov cmc and test dec jmp mov (bad) adc or mov jg cmp cmp push mov idivb lods jmp xchg les fs mov (bad) idiv addb icebp mov (bad) mov lods or je pop push incl mov push dec stos or inc out cmp (bad) nop in leave inc mov xlat les jne in nop mov mov daa jge dec and push loop es (bad) incb xor sbb push mov out inc outsb stos push pop std popf inc into add push add (bad) jne inc or mov stos and xchg inc push lret (bad) test pop mov mov inc mov cmp pop fstpl dec das stc mov xor sub mov pop ret sub cmp push push imul push jp push inc ror mov rclb adc mov or mov popa and inc cmp dec push cs in xor mov ljmp pop sub lods jl push adc sbb or adc insl imul mov nop push mov xchg test mov lahf fdivs loop pop pop ljmp and xor jge push inc jmpw dec jge push (bad) outsb xlat xchg sbb lret xchg or ds or icebp insl lret push sbb mov pop add imul mov bound je jb mov cmc cmp (bad) lret lods jnp (bad) fdivs xchg in push addr16 test xchg mov sbb push cwtl cli adc mov pop bts lret lods (bad) pushf xor insb push test rcll popf lcall fxch pop jmp out fsubl mov or mov out xchg xchg sub fbld inc pop jge jae (bad) pop inc xchg sub sahf xchg popf add xlat jg push ret repz add push xor push push and mov adc scas add push imul jno popf cmc cs dec leave jno (bad) int out (bad) aaa lret ds and jbe push mov xchg je ja mov aas daa mov fdivr stos addr16 and cmpsl or icebp js out dec adc xchg js push ss pusha out and xor stos cmp xor je xor mov in jle cli and inc ret pop mov cltd inc test dec xchg repnz push pop add pop insl iret stos jg fistpll fadds sbb pop test stos jge adc stos sub cli test iret xor repz sbb shrb or sbb jge cld inc test add push aad xor or jmp push fwait sub (bad) mov inc mov or addr16 pusha mov fs adc lds cmp mov popa mov inc fmull outsl jge sub (bad) jns mov cmp sub lahf arpl inc add outsb inc jno jg cli daa mov inc ljmp rcr push dec test push dec pushf call inc xlat cmpsb cli adc push leave push andl roll je inc or pop jb clc adc push mov imul push outsb push int mov lods push ds out or mov mov (bad) cmp mov xor ret pop inc mov lds mov sbb inc adc lods data16 push enter out loopne test (bad) jmp mull push push cli jne cmc adc mov or and sahf lret or repz xor popf pop inc mov push hlt cs dec in dec (bad) jge jns stos jne (bad) lods test imul sbb aas cmpsb repnz push push dec jb (bad) mov ret sbbl aas dec xlat rorb mov xchg enter jp out sbb jecxz insb sahf and cs cmpsb mov push xchg in jns fs add call jae popl sahf icebp testl shr test push popf push mov mov lods dec dec popa inc call (bad) jb jno cmp das into add jae push out mov in mov inc aaa stc push pop cmc test push jno push pop test (bad) mov packsswb add nop dec test jg mov lcall lahf mov push mov fnstcw add call sub jmp push adc sahf cmp roll ds (bad) push dec js jl inc sub push and mov dec iret sbb push in or pushf mov sub pop mov xor cmp fimul mov sbb lcall adc or sti cmp push adc and cmp insl fildl xor push in ljmp adc inc pushf test (bad) mov scas mov js or push imul push into scas push mov cli mov and dec inc xor mov aam cmp xchg popf sub stos leave scas in mov mov popf dec sbb pop ret sbb jns xchg add or imul xchg or sub jge int3 inc push inc push push jns,pn notl mov dec lea push jge roll iret aaa aad adc inc pop (bad) mul jbe sbb sub jne push xchg repz lock jbe add leave push shrl and fstpl and dec inc sub xor inc cmpsb lock rorl push rorl mov pop pop mov or cmp mov andl mov jne mov mov jle push mov pushf iret sbb lods ret adc lods add adc jae jl into outsb mov inc dec stos push cmp cmp mov ds imul dec mov cmp test sub xchg fdivrs and push or mov push lret popa cli xor shll hlt pop (bad) stc (bad) js jne xchg dec iret (bad) mov out pop cmp add call fstpl movq imul add aad std xchg ret mov jl mov dec fldln2 sub push sub fidivr mov jne xadd adcb sbb shrb insl sbb mov mov xchg cld sbb gs pushf push push shll insb incl mov icebp jl mov inc jge popw fimul loopne sub inc cmpb popa popa fwait jnp xor ss cmp sbb fwait ja inc xchg cmpl or ja or pop jle in cmpsb flds pop add push inc daa mov or test stc (bad) negb pop push sub jecxz and ficompl inc pop movsb sahf (bad) fldl and pusha iret xchg lea dec xor fiaddl into jl lret lods pmovmskb dec int3 push xor xchg push out adc mov aad scas xchg and (bad) mov jbe xchg add les stc movsl lock xchg cmp (bad) cld or cmp insl inc repnz jno scas cmpsl push dec jae dec jmp adc sbbl or mov mov fldenv jo (bad) adc mov stc sub jp leave movl cmp or dec fldpi push lret push bound arpl cmc cmp mov stc jb push xchg xchg xor flds (bad) dec push setge push mov inc das cmp push idivl inc adc mov clc xchg add dec daa addb xor stos aaa loope cli pusha scas xor insb cli mov popa icebp mov es aad into gs lods ja outsl and enter mov add lret mov cmp pop jl sbb loop and mov sbb fst aam cmp addr16 ja shll sti enter jns or das pusha mov (bad) or movsb pop (bad) mov loope dec push xchg mov cmc shll loop repz sahf xchg (bad) mov or cld js or out lcall mov in push xchg xchg icebp incb pop or mov (bad) cmp push xor and mov scas pop pop fdivrl outsb mov cld add dec or lds cmpsb push pushf xchg sub sti pop xor push mov mov into imul jne sbb add xchg fnsave iret test test and pop ja popf push je or cmpb or jl jle push outsl sbb lcall adc and fdivrs jecxz pop rclb push iret into jge sub lahf jnp movsl jecxz or lock or jge sub pop sbb test pop jne mov cwtl mov iret out jecxz pop lods sar inc scas mov fs cltd xchg adc enter pop xchg (bad) push xchg jecxz inc test mov adc xchg cmpsb xchg out sub fcoml sbb mov cs lret sbb sub dec sbb int3 jo in lcall loope not hlt fidiv outsl int loopne adc out sub in (bad) xor push push in sub mov cmp out dec out jg adc int3 jmp arpl pop repz out push adc cwtl xor pop inc lock cmp int3 ret int3 pop cmp jg test in les aad cld stc push or pushf fwait rcr pop int3 sub loopne push clc sub imul mov sub dec pop inc mov dec xchg clc mov daa push (bad) ret push mov ja arpl pop and (bad) dec and outsb inc data16 test xchg hlt inc lods ljmp mov addr16 pop jg imul push jmp cltd stos push push mov (bad) mov fucomip leave jne and jecxz das (bad) push and sbb xlat ret and push inc mov pop xlat sarl pop fbstp cmpl jp andl es sbb sbb bound mov (bad) and cmp push pop lods add out shll pop push (bad) inc popa push loop std xchg add int cmp sbb mov scas push lcall mov test popa mov stos xchg mov int3 dec fnstcw or imul mov (bad) rcl push stos and mov cmpsl lret repz lcall fmuls push fs xchg loope sti (bad) xor fistpll cmp or inc add (bad) std push push jmp push push ret lea andl and inc inc es cwtl jmp lahf push xchg cmp mov aam rcrb fldl fs loope aam adc push mov ss repnz cli and adc aaa push cmp sti cmp ds sub or shr lcall enter jo pusha sbb es adcw push adc push jbe fcomps jmp cmpsb mov imul dec jp push into or cltd xor add mov mov xchg xor pushf xor lea test aad adc negb push ja sahf dec leave es inc sahf pop jne es jb cmp cmp imul bound shrl or jle adc addr16 adc xor mov icebp xchg ljmp mov pop mov xor (bad) lods ss sbb sarb movsl (bad) test sbb xchg int sbbb das xlat jg,pt insl cmpsb rclb mov add cmp pop (bad) jbe and mov in out xor jge divl cwtl dec cmp scas icebp or insl push cld outsl mov jp xchg push popf mov (bad) data16 jp repz xchg or sbb mov bound test fs aaa xor pushf mov aam iret test push sub sbb out mov or xlat in outsb pusha dec iret jb dec xchg out push jecxz sub push and nop nop pop call fidivl dec mov mov push pusha iret loopne int or mov mov jo scas xor xor stos daa (bad) enter jecxz jns lods xchg pop jecxz,pn loope scas mov mov mov out es nop insb lods xor or jns inc xor sub rorl dec mov mov rclb jl les jle sahf icebp mov xchg inc cmpsl imul test ja stos fsub xchg lea push push pop mov sub push xor mov and imul xor jnp inc aam fldcw push (bad) cmp push mov cmp call mov pop add fstl sbb and xorb pop pop repz pusha ja jne sbb addr16 pop sub (bad) mov fs bound je test push sbb (bad) je pusha popf sub jne fwait shll add and mov mov ja (bad) lods sbb test insl mov cmpsl leave pop or scas nop dec and mov push fld dec adc or stos lcall pop (bad) aam (bad) and and orb inc mov out cmp outsl adc icebp cmpsb pop (bad) and mov sub scas in enter dec add mov cmp adc push imul inc leave push mov cmc dec enter call pop mov (bad) mov mov or lret add fwait xlat xor addr16 mov xchg sbb push xchg fscale or jmp mov or add cmp jge fwait insb xor xor test mov add lret inc ljmp xor cmp push je dec pop mov mov iret xor xchg fwait xor iret repz jecxz out (bad) adc cli and outsb ljmp ficomp movsb mov lods icebp mov jbe jbe mov sub outsb pop mov and xchg jb sub add ja xchg test or adc in lcall mov (bad) jb push addr16 in outsl ja push stc cmp inc adc loopne or mov dec mov and fs cmc fbstp icebp das adc fisub mov in (bad) call and push decl popa and outsl sti cmp stc popl xor or and pop mov mull add lods xchg rorl adc mov rcll xor aaa cltd pop (bad) (bad) mov rcrl inc cli sbb (bad) jl in dec and stos add and sbb xor insb test inc add mov aas xor rol push ja cmc jecxz inc movsb cmp sbb xchg push jno sahf xor stc (bad) dec mov push fsubp add insl pushf and test lods data16 loop jno adc sub les (bad) cmp clc push out sub ja inc loope jmp sub bound cmp shlb add out push sbb enter ret cmp insb aam ds xor fdivs arpl sub fucomip imul dec inc mov adc cmc (bad) ja sbb das dec jns fistl xchg cmc xor inc outsb (bad) and jnp pop mov test lcall xor pop (bad) adc daa (bad) lea call cmp divb adc push jbe sbb pop lcall and arpl negb fbstp mov mov push sbb aam in xchg sbb (bad) cmp jbe mov sbb loopne nop push imul xor add ror nop jge pop jae in jno mov push movl dec inc fsubl sbb pop cmp pop xchg push mov dec xor pop fisttpll rcrb cs jl mov jle sbb cmp push lods inc pop gs in int adc aas and mov cmp dec fnstenv adc stc add in lea mov jg imul addr16 xchg mov mov pop (bad) inc cmpsl (bad) out pop jno push push push xchg mov mov jmp test push in daa pop andb stos lods aad test aas (bad) jb pusha jmp test add (bad) out fdivl das out xchg clc and cmp dec sub xlat inc imul movsb pop aas mov (bad) jp mov xchg add int and adc clc fnop jle add les push xlat lock jnp xchg popf fsubr add insb popf push mov push js jmp pop and jp movsb or sub rol add stc test sbbl pop push pusha hlt (bad) out mov or jne mov fldt int3 mov mov pushf cmpsl imul enter xchg cmpps and dec lahf jmp mov sub lret jle in adc cltd ja sbb pusha aad cli in lock xlat mov out dec mov mov fcomps jecxz jae jmp sbb shll (bad) and sbb ds ret outsl insl inc mov out cmp into fsubs jge push pop fsubl inc push push imul out fsts mov dec test daa test fstps mov jg,pt stos (bad) xor popa jmp mov test insl mov (bad) fistpll fdivrs adcl mov test call push bound movsl push out ljmp leave incl xchg lcall sbb adc add ss push loopne or lods and push cld insb rcl fs cltd adc rcrb jns jb add ret popf sahf add sbb fs popf rclb sbb jp push repnz sbb or fldenv push or push jbe rorl lahf and pop ljmp jnp sahf test pop adc jnp mov scas sbb jg inc xor aam js js lock mov out testb pop inc loop pop pop sub and jl mov fldt popf arpl lods inc sbb jo jecxz lret mov test (bad) cmp push xchg xchg pushf sahf lods push pop lods sti clc adc int mov pop xchg xchg fisubr xchg fstp jle pop mov mov cmp lods jl sub cld mov dec sbb iret mov xor test cmp jl loopne inc xchg aaa pop push in mov stos add ds (bad) jne inc std mov dec mov daa and xor fcomi arpl jmp (bad) scas jb push or xchg imul stos xor cmp sbb (bad) xchg cwtl pop mov sub (bad) ss popa push sub ret stos jge cmp mov out inc push xor inc mov mov and dec lock mov dec add pusha mov icebp lods nop js sub lret daa loopne sub xor cmp dec out sti movsb icebp in addl sub gs clc das loope adc mov jne xor (bad) dec pop jnp lahf je pop adc mov jmp call adc (bad) xor xor sbb add push cwtl or dec fscale rolb pop jno jae pop mov mov pop mov ds mov or fbld lock stc pop sbb in lcall inc aad (bad) and jne sbb mov rcll decb loop add cmp inc adc add arpl in scas arpl and mov shrl and jae inc (bad) mov push leave jmp stos sub cltd or cmpl inc aas es or adc pop cli fldt test inc jo jae stos mov push lcall xlat inc out xchg sub mov (bad) out pusha js and xor stc or es mov (bad) iret push lret test and fwait or leave lock movsl pop mov or loope repnz testl mov fsubl mov movsl mov sbb incb and lcall rorl xchg pop pop das outsb jmp xchg push sbb cmp pop mov xor in bnd es (bad) xchg test iret cwtl cli imul pop lods push xlat sahf roll sub and fnstenv outsl push test push jp dec mov cmp gs imulb and jno enter rdtsc fwait jo inc out xorl mov test mov mov cmp insb enter adc or std push jbe pop sub daa in hlt stos repnz scas ret sahf ljmp rcll imul lods mov in pop scas jno push push jno jbe mov stos mov cmpsb xchg mov push sub out xor hlt lods daa add shrb loop insb shll inc mov in outsl test loopne lea pop into cmovns mov and sbb hlt jp,pt sbb (bad) adc rorl mov inc jg rorl sub enter jl in xchg scas insb sub adc push call mov fs cmpsl push out nop iret idivl pop push inc xchg xchg cld lret cmp les or inc push xchg in out (bad) stc cmp dec int3 mov sub inc xor jmp lock jnp mov sub mov mov mov aad add or sahf mov std cmpsl (bad) or xchg adc add test fs pop push (bad) lock loop sbb cmp das dec mov cltd leave or movl outsb out cld negb or push and pop sarb ds pop sbb pushf and sbb dec xor jmp push adcb sub rclb cmp sbb js ja cltd loop aaa dec outsl ret push popa mov or inc outsb sub mov jnp mov popf add jne or cmp or dec push and add popf (bad) jecxz add pop jg jne inc mov xchg mov aaa lds in jne fmull cmc pop mov or add popf imul jnp jns adc dec pushl lds push hlt mov dec push mov test enter adc cmp je pmaxub out or cli outsl (bad) out sub push sti inc pop into inc mul xlat adc (bad) mov cltd pushf mov xchg xchg lods pop js xchg or je ja popf fbld add (bad) scas xorb inc inc add enter (bad) fdivs dec push push mov cmp mov mov pop xchg icebp std xor arpl lcall mov dec inc xchg and adc cmp cmp fstl xchg movsl (bad) gs dec mov fiaddl cltd mov mov aaa ret sti jg mov xchg imul sub addr16 pop jne testb jns mov mulb lds fistl out or adc stos push dec int3 xchg xchg jp xor pop xchg lock xlat xor jno dec movsl xor or lahf dec xchg xor sbb (bad) mov cli (bad) fsts push pop shll stc inc and repnz mov xchg jns ret pop mov push lret mov push adc xchg int3 fstps pop xchg add out insl jl test push xor lahf js stos xorl leave push cltd loopne (bad) mov jecxz pop gs iret add add mov es lods xlat pop out cld in xchg or (bad) leave jmp add lret sbb fstps jmp lods lret adc pop stos jbe xchg cltd aas out mov rcr mov loope sub sbb out stos out daa (bad) into sbb xchg pop iret fdiv out jmp jns cmp dec jecxz inc xchg mov test cmpsb pop test xchg repz dec mov stos test sti sbb mov xlat cltd negl dec jns inc mov jns fdivs adc jmp icebp inc add and loopne cmpsl (bad) jno or jne repz imul cmp cltd enter addl (bad) ljmp mov jb loope pop jg mov popf call (bad) xchg push data16 test push iret adc mov pop add arpl jno rcll pop cmp lds mov xorl pop int sub lock pop test xchg ret jecxz and lahf lods jne and xor mov ret sbb cmp test sahf mov int3 data16 jns movb sub pop jne xlat mov sub adc mov push mov inc or push frstor gs cmp mov mov lock lret xlat lea dec xor mov sbb push sbb mov jnp pop push (bad) out in xchg call or cs mov lcall shll push cmc jbe leave popf outsl xor (bad) mov lahf or call sti cmp popf push or push and pop sbb jbe fwait cmp idivb outsb adc cmpsb xchg jmp sub stos xor push sbb cld cmc jae or jl pop hlt fistp and inc push out adcl push or aad mov sti push cmc mov andb inc jno dec inc push jg mov pop outsl dec out jae xchg push push loopne add clc mov nop jp xor pusha xor adc pop adc and jnp jecxz mov fwait jecxz xchg mov sub cmp dec push sti push xchg dec xchg xchg adc pop push dec das dec add int loope,pt cmpb addr16 cmpsl cmp imul fisubrl mov rcrl lea loopew mov ljmp push push sbb enter jbe xor cmp hlt inc jmp xchg ja in jne add jle test mov xor inc adc mov and cs xorl push cltd scas iret sbb pop hlt insl xchg lcall mov add dec jecxz or les insb dec clc ljmp nop pushf test sub mov push clc lret pop les add cmp sub into arpl cmovae jl hlt rolb jo pop pop (bad) sbb inc test add inc jmp in mov inc aas or (bad) popa adc pop xchg mov mov mov xchg shrb (bad) lret jo and iret test sahf xor arpl jp add (bad) aad stos xchg inc icebp test cmc dec dec in push std mov xchg jle scas push fmull outsb dec clc push adc or pop data16 push adc jp stc jecxz dec test dec inc jg pop loop mov insb adc aas lods push pcmpeqw or add dec ret movsl push pmulhuw add cmp mov adc pusha mov cli xor fbstp push xchg loop inc scas inc dec mov stos orb repz aam popf push mov add int int3 mov cltd ja mov sub adc mov aad xlat (bad) cli seto paddusw and das (bad) and dec cmp xor das ret add sbb adc mov xchg mov inc lea mov dec ss jno sub scas inc shlb lcall xor push rcr mov inc cmp pop cmp jo fs jg or jbe mov inc jb icebp stos loop inc add imul add aam mov or mov sub push mov xchg mov loop sub arpl pusha lds xor js jno call xchg cmc lock xchg mov les sbb out add push jae adc lret sbb movsb push mov xchg ljmp into loopne out xor lcall ret mov (bad) lret xchg pusha mov das add lock stc pop push xor stc shrb sbb daa or mov jns mov jb sbb mov mov (bad) mov jp dec testb mov js in int inc mov pop dec mov lea movsl mov xchg scas inc jne (bad) xor (bad) mov pusha push jmp dec movsl scas test jnp,pn xchg andb mov inc rorb add xchg hlt cmpsl js jle les fsubrl adc xchg dec imul inc jl call test or and cmp mov aas sub out cmp jno fldl cwtl test (bad) xchg icebp cld lret arpl loopne shrb jg adc test and int mov imul jmp lahf ljmp or pop mov es sbb dec xchg adc ljmp loopne jecxz mov xchg sahf testl jl outsl or sar dec mov mov push ljmp mov push nop xchg inc or or mov das inc inc jne and hlt fstl fisubr pop inc ja cmpsl inc shrb das pop mov xor cmc push adc aad lahf add mov inc add dec mov ds sub sub sbbl add arpl iret jecxz inc lods test fwait push icebp dec daa ret into aaa rclb sbb mov xchg (bad) adc pop rcll xchg push lret das and imul mov push lahf (bad) sti sbb push inc mov dec das int3 push adc jo push mov ret pushf mulb sbb repnz les inc push or cwtl aad mov les mov addr16 xchg ljmp inc xchg pop fwait aaa shrb add inc sbb jg gs out add decl test fmul adc mov pusha mov jecxz pop scas mov arpl xlat dec out sahf call and dec outsl pop out or sub pop add insl bound xchg inc mov mov frstor sbb int and cmp cmp lds mov outsl jecxz (bad) mov stos sti aad out sbb imul pushf js mov sbb or pop sbb cmc (bad) lret mov xor jmp sbb sbb sub ret push pushl movsl add scas shrb gs xchg push adc ret mov cwtl mov xchg aam ljmp mov xchg ljmp cmc and into mov jl xchg cmp lcall add or cmp out nop lock mov imul jno sbb sbb insb ret popa sub inc push ja push sub push pop jecxz insb adc orl jl mov mov xchg int3 push push test lock lods ret btcl inc dec (bad) mov push into sbb fsubs jno push cmp scas rcll into ljmp mov push arpl xor (bad) or ja dec mov (bad) sub dec test add (bad) sub inc insb push dec mov mov data16 mov cmp adc adc add shll xchg ret andl adc pop xor roll (bad) lret das pop sub jno push mov shrl mov and adc pop nop fs add pop mov or cmpsb push cmp or lds pop jge dec sahf sbb into pop out push (bad) xor loop mov fdivrs jecxz movsl sub int3 aas cs or loope std out int3 add cmc js pop xchg push dec mov clc fist sub add jmp data16 outsb scas out jne daa dec sbb repnz xor sti ret jne sbb dec orl repz sbb out xchg xchg lret rorl add (bad) cmp cmpsb push dec jbe imulb mov shlb pop pop mov mov bound lahf pop std dec mov add mov pop and push jge lods xchg shrl nop mov out ja,pn aam movsl out pop (bad) scas in sub (bad) stc or dec out daa (bad) push inc lods pop push icebp cmp inc push mov cmc or or (bad) jae jg xor cmc xor inc bound test ss fwait cmpsl adc push sbb jo mov jmp repz adcl scas stos pop add test fstl mov and push sti int push add insl push outsl aad lock mov ljmp js xchg cmp cmp ds xchg xchg or jns adc mov jns bound hlt pop (bad) push cli fisubrl int adc out xlat mov leave and cmc aam (bad) jno rolb std adc fs ret repnz lret mov lods and fsubs pop mov cmovg add out fistl stc xor sbb sbb icebp aam push push dec sub adc lea out cwtl xchg inc pop test in sub mov xor xchg call jb pop xlat lods lds xor leave jne insl insb mov out cmpsl sbb in cmp lds cmc repz sti xchg shrl jnp mov aas jmp ds fbld les fiadd scas jecxz sbb ja xor cmp jge fsubs inc movsl sbb cmp adc or xchg push dec cmp xchg mov gs xor subl adc shll jae cmc jmp fisub jge dec in orl mov movl aaa xor les dec je dec adc pop sub jno pop in sub and out adc cmp xor fldl (bad) cvtps2pi call ljmp push test das out push jecxz push mov mov xlat lret pop (bad) ret mov pop add mov and xlat dec or lods out jo xchg aad fcmovnu loop arpl (bad) int int nop push rep mov shrb mov sbb call and movl and andb xor and movsl out imul (bad) test pop xchg les and mov repnz ret fidivl pop leave fwait data16 xchg outsl movsb pop push lahf push out flds cmp scas cwtl mov (bad) lret cmp pop pop loope outsb mov test mov movsl std dec mov pop loopne mov jle add mov jg sub aaa fidivrl mov add leave push dec aad add and mov dec das lds mov out mov inc enter mov (bad) or aaa lds sbb sar cmp pop push adc add lea les mov aaa sbb pusha mov lods jno lcall sbb sar jne rol mov leave cmp imul push push je call lcall fcmove cmp or aaa lds outsb test fmull dec xor adcb in fsubrs call dec test sbb mov pop or xchg cmp dec in push push (bad) push sbb sub push lea ret mov pop xchg shrl xchg mov fidivl adc movsb ljmp (bad) jo in cs and mov outsl xchg movsl jmp clc push inc cmpsb aam or adc mov into add or es mov or in xchg and xorb cwtl mov xchg push rolb (bad) dec test fucomi aaa and mov in in fisubrl ljmp mov jge push mov lock sub inc std (bad) push out jl (bad) push sbb cmc outsb addr16 imul pop lret lcall fwait clc jl std ret cmp push dec push jb and xor test gs push jb or dec repnz fimull fnstsw sbb jno pop enter mov (bad) imul int3 test loop lock sub pop jne add addw testb push aas or (bad) jmp ret test add sti xchg push int pop dec roll xchg lahf cmc (bad) dec sub jl iret xchg push xchg arpl fbstp insl jae test arpl and out fistl inc xchg xchg (bad) sbb inc out sub lret adc popf pop mov mov inc lret add ljmp xor push jnp add pop dec mov mov loope insl mov (bad) push bound in adc or in movsb popa sub les sub push push daa icebp js add (bad) jno push mov aad rorl hlt ja dec push inc stc pop jmp and dec ja pop sarl in pusha daa clc mov sahf xor xchg xlat push sub gs push pop jae cmp sub cwtl adc lret aaa or aas test gs xlat fdivs aam aas cmpsl sbb pop pop pop mov das ss rolb imul sub and mov mov in lret hlt std in iret xchg sub pop int add push jnp (bad) fadds (bad) push sub push js fistl dec mov scas call dec cmpsb sti xchg mov (bad) pop dec cmpsb sbb pop (bad) dec adc sub ret rorb into in add lods test mov pop lret (bad) add xor (bad) das xchg mov sar pop out shl iret adc test sbb call test fs (bad) rolb push jo stc ret adc out push movsl adc mov xor mov lods loop add call scas bound jp mov sub mov push xor xor addl bound add imul das xchg cs arpl push mov push pusha clc add push imul mov fnop enter aam pop xchg xor adc push sub dec fsub fcmove scas lock xor ja mov (bad) rorb jae lods or (bad) testb in xlat pop fbstp (bad) loop lea push addr16 inc or icebp xor jb xor fs inc inc jg je aaa push sbb inc fwait (bad) jecxz ret ret dec shlb ret mov hlt dec cltd adc mov call addr16 sbb dec adc xor lcall (bad) rorl push mov fiadd adc stos ret (bad) mov and pop dec jp xor jae testb loop and js and outsb pop and add les jge xor jmp pop lret jnp (bad) fwait or or lea add addr16 daa scas outsl cmp ja pop sub mov out adc lret call lret inc js jb push pop dec fistp inc pop popa fs xchg inc jbe js lret rorb mov xchg out enter mov arpl or std lea pop pushf int3 xchg in outsb push insb jl test inc sbb popa push cmp jmp ret int3 jl scas xor push xor cmpsl push mov aam mov cltd xchg xchg xor iret (bad) sahf test push inc ss jp push jno loope (bad) lds push mov das leave repnz cwtl sbb cmpsb fs mov popa aam imul sub xor fmuls push inc out hlt add lahf in pop cwtl test mov bound data16 jecxz cmp xchg daa add sbb cmp or out aas or xor sbb jp mov std sub and fstpl mov pushf push in in push cmp pop sahf mov and es (bad) mov sub pop leave daa mov add popa (bad) je pusha insb pop mov cmp inc mov lods lret dec sbb addr16 xchg pop or add inc iret imul mov xor scas fisub push call push xor sti ljmp lret repnz int push arpl mov aas jg das and sbb or cmp pop pop (bad) xchg hlt sub mov ja (bad) cmp mov cld xor and dec loop mov pop adc sub outsb dec andb das xchg stos adc add mov shrb xor xor ret clc repz xchg enter mov fmul insb negb jno (bad) arpl (bad) ret pop cmp mov scas movb popa sub jge lahf fcomps jne inc mov cld and rorl rorl test push pop imul std lahf inc cmp lret (bad) je inc jbe insl bound or inc out fbstp push mov test or pop popa ljmp mov mov jmp fs and sub push pop push ja xor aas jne int3 sbb xlat cmp cltd ret loope (bad) notl ljmp xlat adc xchg jle popf lcall xchg sbb data16 jle xchg mov inc dec fidivl jo mov pop add movsl sub das add into or jmp add (bad) std test in stc inc xlat fimull xchg fcom jb pushf cmpsl xchg repnz dec js std xchg test add popa and mov gs outsl xchg sahf jecxz into sbb sbbl xchg loop push mov pop scas sbb icebp xchg stc inc mov out icebp ror bound mov or sahf pop out outsb movsb cmc stos sub mov fidivr subl lea scas fildll mov xchg imul pop imul xlat fxam lret mov mov dec arpl inc and (bad) jo,pn (bad) (bad) aaa push ljmp xchg push cltd xchg or inc jbe xor shrl mov das xchg in negb cmp dec cs mov mov mov repnz mov fimull outsb and lods mov inc aaa jecxz (bad) out jns xchg dec movsb imul mov jle push lea xchg jecxz push daa xor mov movsl mov inc pop xchg (bad) ss add in mov sbb xlat xor jb and push repnz lock out movsl mov aas xchg xchg dec out insl mov out dec sar cmovo rclb mov xor call push dec shl mov loopne test cmp jge sarl dec xchg mov inc scas les fisttpl out arpl hlt jae mov movsl pavgb cmc test clc fsubr pop cld in sbbb out push mov cwtl bound adc imul sarb push or xchg pop (bad) and inc adc addr16 scas (bad) and incl aas fnstsw xchg into js cli sbb jae aas xor sbb icebp sbb push cmp (bad) daa cmp pop scas test iret inc imul movl mov std rolb and add sbb pop mov cwtl jmp cmpsl popf andb (bad) lods adc inc aaa mov cli outsl adc inc pop call loop add push clc lcall pop lcall mov ljmp inc test mov aam clc or outsl fmull cmp shll xor cmp xrelease mov cmp js hlt or sub into mov sbb mov mov add gs pop pop test fwait push mov jle mov outsb sub fisubr sub xchg std mov add xor and sahf gs inc call dec les xchg repz in inc aaa mov inc push std mov lahf jo je sbb jae sub lret jmp scas push cmp in aam ficoml push jecxz mov jp dec add pop cmp icebp (bad) dec mov movsl add sbb lods call adc xor pop aam stc xchg aam mov or jecxz lods dec jbe imul shll xchg jne mov cvtps2pi in in xor pop pop das cmpsb dec and (bad) sbb test add adc fcmovnu xlat jno xor ret mov lcall movsl mov mov ret adcl rorl dec jg out mov stos jno popa jp lock leave int adc dec in xchg push out subl lods repnz lods or or xchg sub dec ds outsl fwait inc jp stc movsb lret push dec jecxz xchg xor call sub mov sub adc sbb xchg mov pusha and hlt jnp mov xchg gs idivb and jbe dec xchg xor loop pop pop push lret incl sub data16 std fldcw pop add es (bad) jb test jle out lea es inc andb dec cmp cli push adc out adc mov jno sub jmp mov xchg jb popa fisubr xchg (bad) lock push sbb mov xlat xor fldl test jle outsl sub mov cld in or push xor xor call outsl aam gs frstor test cmp scas xchg push push push test dec fcoms jbe addr16 cmp push cwtl cmp sbb mov jmp test cmp nop insl jo int3 in in iret aaa cmp enterw int3 (bad) jecxz pop push imul jae xor test gs dec add mov inc xor push and fldt scas repnz dec xchg and adc sti cmp sbb push or js mov nop out arpl pop cmpsl mov scas cmpsb (bad) loop aad (bad) mov adc std aam xchg sti mov add int loope (bad) sbb repz or add jecxz xlat ret stos mov fiaddl outsl dec mov jae jg cmpsl pushf cmpsl dec jae add jb jnp movsb stos add rcll push pusha loopne hlt cmp jns rorl inc pop push gs adc lods pop paddusb (bad) in cmpsb daa mov sbb sbb cltd scas ja push mov stos jbe pusha les int3 in xor push sahf stos xor add lods int3 push mov pop lods sbb orb push rcl mov add cmpsb das pop in add add daa mov mov sbb inc and mov and cli test xchg std dec sbb test popf xchg xchg or sbb adc sub jbe xlat mov dec cmpsb scas sbb jle xchg repz test xor gs adc or xor dec inc sti push fidiv ss rclb cmp adc roll fucom sub pop fsts mov push mov mov pop or cmp test mov mov and inc in xor inc jne outsl push push mov loopne scas shll insb je pop lds sub jecxz and cltd and mov loopne mov addb xchg mov and xor jbe cmp mulb addr16 mov jnp pop mov sub sbb fstpl dec repnz xor cmpsb sbb scas je sbbl hlt inc xchg mov sbb inc adcb cmp cmp pop loopne ret xchg imul (bad) imul (bad) xor jno stos mov aaa adc mov int jae push call stos addr16 clc aam rolb mov pop ljmp nop fs mov push and pusha inc inc add popf jmp shl fadds mov cmpsb ja fmuls inc pop jno push mov (bad) or mov das lods call popa pop add aaa mov clc push sub test cmp jbe push xchg inc fdivs sbb in or xor xor shlb es xchg sahf jg loope sub (bad) imul scas xchg mov sub insb dec loope add in xor push popf and aaa cwtl ja xchg das aas dec cmpsb xchg rcr lret cmp or test and xchg fnstenv (bad) xchg mov inc int3 scas fildl repnz les std jns mov xchg jp sbb jnp adc sti xchg xorb fbld (bad) xchg lds div or pop xchg push in jnp add dec pop mov sbb jb cmp gs lret movsb andl and in fstp push ja or sbb scas mov repnz pop sbb out ret add rorl adc (bad) pop imul scas and push into sbb aam dec jmp push aad adc shl (bad) pusha jge mov test arpl lds mov fidiv cltd xchg movsl int ljmp dec rcrl jle (bad) push icebp mov and scas lcall jb or movsl pop fnstenv jno cmpl inc cmpsl pop add xchg mov adc jg mov fs dec mov push or mov push daa mov adc mov sub or testb divb push (bad) sub movsl add xchg mov sub fisttp mov enter cmpsb popf cmp pop aaa xchg aad int notl out test pop xchg imul icebp and dec push jg inc jmp pop (bad) mov xchg sbb dec out cmp mov ljmp pop pop int3 mov inc mov push cmp cld and shlb outsl stc imul out xchg mov mov mov and push push imul ja,pn insb fildl cwtl and xor iret stos std xor sub xorb push sub ficoml or sub sub mov mov ficom es and lcall dec sbb cmp lods testb popa cmp xlat sbb enter mov inc orl insb and out push dec lcall pop les rcrb sbb (bad) pop mov or sahf daa popf je sar xchg imul dec fild into xchg sub mov stos mov mov rol push sbb or bound jo jg (bad) cmp (bad) in and cld and adc cmp sti fwait aad lcall mov popf test push into in outsl dec lea out jge jmp mov repz xchg iret push cli daa jg push xchg jb popa mov lods lahf and aaa add xchg sbb lcall xor mov and fisub inc mov out sbb loop jbe cltd scas (bad) xchg stos dec or pop fisttpl inc xor mov adc enter mov lahf (bad) xlat mov (bad) xor or lret popf (bad) cli xchg in stc into mov sub outsl dec jne lods imulb xor xchg (bad) adc jns adc aas mov frstor in mov or jp jae mov add push sahf xor dec mov and adc inc mov insb pop pop je and cmc add cmpsl (bad) or mov cld mov adc mov cmp xchg sbb icebp pop cmp pusha pop sarb or out xor sub sub fist lcall pop prefetcht0 insb jp (bad) lds outsl insl insl out cs pop cmp mov adc mov inc adc and inc pop rorb jb loop (bad) mov adc mov icebp ljmp cmc insl mov js mov cltd cld jle test leave mov mov cmp mov lret test pop popf icebp jp sbb mov hlt fstps out cmpsb inc inc fwait mov pusha pop imul nop imul cmpsl ljmp cltd fnstcw push (bad) push hlt jge cmpsl dec and pop popa push std inc mov sbb pop (bad) fstl dec jmp pop enter loope mov sub sub imulb dec mov ds pop fldl lock ds gs test or scas (bad) lock dec or call cmp mov push push jp mov and jecxz nop das sbb aas ljmp out or icebp pushfw jo les in dec pop lds xchg test lods cwtl iret (bad) sub and lahf push or xchg inc xlat sarb cmovl cmpsl outsb loopne mov jl sti (bad) mov in xchg (bad) push cmpsb fadds push add nopl std pop xor daa push fdivrl add test pop push mov adc shlb scas mov lret mov mov add pop sahf addr16 popf loope (bad) cmpsb iret xor fdivrs clc xchg loop rclb mov icebp and lret jp fnstsw or xchg int3 insl xchg mov and insl shll das mov aaa sub push xchg inc ret and xchg out add and roll cld imul add cltd pop or cs xchg orps cmpsb sub add out sbb inc mov dec mov mov cmpsb (bad) jecxz push sahf lahf push test addl inc lock fmull std ret xchg mov xor addl imul dec pop fisub daa fnstsw jge jecxz decb inc jge sub push and or fcom dec popf cs pop insl sub and cld mov or rclb int3 mov lock fcmovnb push gs inc nop add out dec and adc loope data16 jl nop xor lea adc fadd (bad) imul fmull fxch insb out insl push mov cmp stc and or mov dec fldt std enter add lea stc pusha xchg inc (bad) xchg test cmp lds scas push pop cmpsl and sbb aad mov and aam or rorb cmpsl dec and jecxz jb mov xchg sahf into dec aaa (bad) cmp cmpsb cs pop inc incb cmpsb pop xchg out lfs data16 mov lds out xlat ret cmp or sbb push lcall pop adc stc pop mov addr16 rclb mov mov or sbb imul inc mov push sahf ret jl lret xchg cmp cli inc (bad) mov sub mov cld lahf clc cmp mov fstpl bound mov add sahf inc adc adc movsb xor ret add rcrl jno nop xchg dec fwait out or inc addr16 push into cli cmp loopne and xchg in add dec cmp fstl add int3 das les push sub pop add popf and (bad) leave insb imul roll sub sub leave push leave pop in push rorl cmpsl inc push test je ja iret or xor add xor or jecxz subl cmp je bound enter adc movsb jl in xor pop inc rcl dec sti lods lret or popa xchg push jmp sbb dec or sbb xchg pop loop sub fsubrs test data16 cld sbb mov add lods cmp push or mov sbb cmp xor jno outsl pop mov fwait stos dec (bad) outsb push bound ss pop test add xor push pop xor inc gs push cli cmp mov push adc mov xchg movsl loop cmp test pop ret shll outsb (bad) and xchg data16 xchg imul in inc fnstenv (bad) cmp dec aad cli (bad) xchg adc mov pop mov je mov push and ds fs push pop les cmp and cmp pop mov or cmpsb test addl ret xor test (bad) mov and mov and or mov add lea repz movsb enter xor jle mov mov sub jmp (bad) int out jl xor fcom jnp push adc or mov dec (bad) xchg xchg mov jge lahf bound lea push xor aam sub std scas sbb lahf call repz popf jge adc and leave cli out jne push (bad) popa test dec inc loope lds (bad) adc and add mov inc shrd test or and pop adc je sahf pop test ficomp ret push (bad) ja sub int mov cltd sbb outsl test inc mov mov div mov ljmp or cld dec jmp lock pushf dec sarb pusha adcl loope popa mov sbb push mov inc test sub adc test ret (bad) pop and idivl (bad) negl adc lods push adc ljmp and adc repnz xor mov in sbb lea jne pushf int3 inc cmp pop push test sahf mov std sub movsb stc (bad) repnz xchg jl lods fisttp adc lods adc loop sub add mov stos dec add aam sbb loope xlat or pop dec lcall mov aam in and nop push dec aam mov lock mov pop sahf or add gs mov test addl add add sbb ja push jmp jbe in lcall les aaa ret add (bad) xor lea outsb test add mov out mov add jae inc lods subl xchg into pop adc mov arpl cmp add push jns pop cs sub xchg aad pop stos mov jo fmulp lock stc clc dec mov (bad) mov cmp and inc jp inc pop cmpsl in dec in call stc cld addr16 cld pushf sub ror pop mov add gs in js push lods (bad) xor movsl arpl incl dec cmp and (bad) and hlt add sti test pop cld xor imul sbb sti jns xchg mov movsb jg mov (bad) cmpsb push dec bound ret insb fstpl push pop loopne fcmovnbe inc jmp lret mov mov sbb ss inc in jg and (bad) nop pop mov test xor xchg cmp xor add jae,pn jno movsb xchg std dec push fsubrs xor js cmp test outsb mov push jmp hlt ret or pop lea jmp cmpsl xchg inc xor fcmovnbe cmpsl push cmp (bad) xchg or sub popf push xchg or lahf push lret ljmp jnp jno es cmp mov faddl sub sbb push mov push lds loope lret xchg mov (bad) repnz or lcall push jle nop lods aam sub js lret decb sbb cmp or fsubl sarb enter sti outsl imul pop cmpsl inc mov xchg fisub ss popa (bad) pop stos popl pop lret das xchg pop jns mov mov mov lret cs jb pop sahf or test dec pop xchg and add jl (bad) mov jae push mov or mov mov mov lcall add aas repnz loope in lcall push insb fsts movsb decb inc repnz sub sahf xor imulb inc sbb movsl ds dec or addr16 (bad) es xchg fsubl pop insb popa test xor aam insb iret sub shrd test lock loope orl scas clc xor fiaddl dec outsb xchg sbb stos mov and mov call test xor xor sti mov cmc mov dec aaa add imul cld inc (bad) hlt (bad) ljmp mov or jg sbb cmp mov iret push dec testb aad leave test pusha cmp lds or fstp sbb sub (bad) stc fsubr and sbb inc add sub insl outsb cmc mov xchg pop inc int cmc arpl fildl shrb es inc fwait or lods and ret sbb aaa cmp pop (bad) es dec in mov add mov leave cmp cwtl pop mov test test fnstcw pop sbb seto in jge mov jbe sub arpl pop jle push jnp fisubrl (bad) push mov dec cmp addb out mov cmp outsl sub dec roll sub mov pop loope aas pop pop lea das push mov fsubs pop adc mov mov mov sub add jp jecxz mov jns adc mov lcall inc mov bound test jecxz enter push dec and mov (bad) scas push cwtl in (bad) rclb sub xchg or scas imul push sbb mov xor jae jge stos add mov inc mov xchg or xchg iret (bad) pop icebp fld bound jge or mov xchg daa sub fs stos add movsl dec cwtl ja mov xchg dec pop lret aad rorb and fdivl test push es jmp pusha xchg fisttp cmc divb iret sub scas cmp push rcrl pop sarl lret adc ret xor jae int xor and mov cld adc adc mov jg insl test xor jle push xorl lret inc out inc cmp cld xchg arpl testl stos lret xchg ret push loop mov add std cmc dec dec mov sbb stos xchg loopne lcall arpl mov inc stc mov jp bound and push and inc aad dec and cmp cmp xor insb and lret inc idivl daa insl jbe push jp dec and and shlb stc cmp push movsl hlt xchg outsl add bound fwait sub lock mov loope cmp cltd mov mov (bad) rol and pop int3 stc ret cld insb xlat scas push out adc adc idiv sub pop in repnz fcmovnbe xor cmpsl sarl xor scas pop scas pop jne stos out icebp xchg in jae push scas icebp mov pop sti mov jae aam mov mov popa jmp rclb cmp out sub ffreep rorl (bad) adc (bad) xor xor aad movsb and cmpsl sbb mov jae mov out jne xor ficompl sub push pop sbb adc inc aad dec aas and mov (bad) iret push fs add lcall sub cmp jg and out ficoml mov add testl sub xor push decl xor inc clc (bad) mov movsl gs mov fldt and es sbb jne in mov sarl inc mov out lret lahf rolb xor mov pusha bound (bad) rcll pop mov pop push push (bad) int sbbl fildl (bad) xchg shll outsl movsb ss push cli (bad) dec out add cmp and jg int3 pop push pop pop loop (bad) hlt je,pn (bad) xor dec sub incb mov mov cltd movsl ret fwait inc jecxz mov pop and jnp cltd xor xor cmp mov iret sbb leave jp bound mov and out pop sub inc pop mov mov addr16 mov andb inc push sub sahf (bad) arpl (bad) cmc mov mov mov push inc shlb lods sbb into ret xchg push add imul sbb into leave pop add mov mov or lock push jg xor (bad) mov shrb ficomp dec adc (bad) loopne sub mov adcb cmp aas dec inc mov mov jne enter in aas loop sub add cltd dec mov imul dec xor add lock lods jle imull jb clc sub pusha sub into lret xor mov ljmp and mov cmp push (bad) cmp adc out push aam and mov daa loopne inc pop jo add scas mov inc inc int3 pop adc data16 int jns adc dec mov xchg enter out inc mov cmc and and sub dec sub iret push ds cmp xchg dec nop and sub je loope xchg mov repnz test xlat pop data16 jp or jne sbb pusha cmp aas mov (bad) mov mov xchg mov insl or push or sbb in pop mov pop xchg lret insb lahf push popf ret lcall jmp cmp imul js jno cli fistp clc sub cmc mov xlat mov mov lods mov push les fs int mov div mov sbb rcrl cmc icebp inc bound inc out xor push pop out dec adc fcompl fldt xchg popa xor xor ret dec pop ror into stos sub dec adc cmp movsl scas stos add mov addl clc ficoml dec xchg test int push popf jnp dec insl outsl xchg cs adc xchg cmpl data16 mov xor (bad) cmp sbb jmp jmp xchg mov cmc shl mov sbb popa pop psrlw (bad) cmpsb div adc push push adc ljmp mov jg mov daa inc into (bad) aam cmp loop inc (bad) push pushf ret pop push popl and das mov out repnz out (bad) adc xchg lods mov mov call sbb xlat rcrb dec dec push lds dec arpl add mov cmp cmc or xchg xchg subl xchg mov adc les push mov dec pop mov pop jl adc je push xadd insb out jecxz mov inc sbb je sar shr movsl xchg daa daa pop outsl jbe mov lcall adc xlat adc jbe cmpsl mov adc int3 sub nop (bad) cli idivb repz ficoml lret dec mov jne or mov repz mov pusha fcmovnu outsb cs sub ss xchg dec out into cmc cmpsb (bad) mov push cmp and (bad) sub xor cmpsl adc dec lcall mov or dec push mov and (bad) jns pop rep xchg jp shr add sub mov and cmpsb (bad) inc mov popf repnz out xchg adc jae ret repz sub push test sub (bad) xchg outsb lock test test (bad) jae jae fsubs dec mov or (bad) pop or xchg mov punpckhdq inc mov pushf mov nop mov mov in cld mov or xchg icebp dec inc cmp inc mov outsl cmp movsl xorl cmpsb dec push push jp jno sub in cs sbb (bad) adc in push imul and iret and mov arpl sar mov ja movsb pop movl cwtl jp jg js lds and and and popa addr16 jg mov mov (bad) ds hlt stc ret pusha mov and mov and lds faddp xor loope or stos loopne outsb and fucom jecxz push and sbb outsl xorl mov pop mov fucomi push push dec push jbe dec andl xor daa lret sub pop popa rcrl test das mov sub hlt mov clc mov inc pop enter adc stos (bad) lahf inc mov pop sub (bad) xchg mov (bad) stos sub mov sti lcall xor loope in jo js gs xchg or dec jge dec fisubrl pusha lcall mov imul cmc jne mov scas mov and cli nop pushw cvtdq2ps adc jl,pn and jmp dec mov mov mov push icebp lds sbb dec xchg xchg adc fcoml jo mov fisubr inc add imul pop add and stos mov mov in push pushf and pop or xor lea mov lds into daa mov cwtl pmaddwd test sub jmp stos bound jbe dec js out (bad) xor mov cld out dec mov shl push fs push xchg cmpsl cs mov mov (bad) or cmpsb adc flds mov cwtl shr stos push jmp data16 mov xchg adc scas jbe in arpl leave into lcall xchg (bad) cmpsb mov insl jno inc mov mov and fimull ja pushf iret fildll ds mull sti xchg xchg sbb (bad) in (bad) mov adc aaa xchg jnp sbb mov push or and stos movsl inc push rclb sub cmp sub adc add test cmp xchg xchg ja inc int in (bad) push repz sbb push pop aam and jp aas add in xchg test mov sarb dec fucomi outsl jbe cmp and dec fwait ds pop dec out add out pusha sub push sub loopne adc out cli nop jae jg insb pop mov clc cmp jmp fsubrs dec cmpb ds sbb loop (bad) cld dec loopne add fidivl push mov cmp cmp aad dec inc (bad) pop mov imulb insb loopne gs xor dec pop dec fnstenv incl dec dec lcall or mov ljmp mov dec jl es pop pop add mov stc std jl xchg rcrb pusha pop sub fwait dec jmp aaa pop imul and jo movsl jmp jb ffreep stc xchg divb pop sbb lods sub test ljmp lea cltd arpl out mov push pop mov jae jmp inc fisub pop xchg mov mov jmp in cwtl int les movl shrb cmp inc inc xor in push add and push dec jg popf sti push scas inc (bad) shlb pop pop lds xlat into loope sahf xchg xchg popa sti push out jecxz push imul xor not sub in mov loope jle (bad) in adc (bad) xor mov std adc lahf (bad) fwait mov fwait cmc ljmp negl push mov sbb je repz mov scas cltd mov dec mov pop push scas mov fs fsubr adc lahf push negl mov inc mov inc sarl xchg mov xor add iret not dec mov mov mov (bad) mov ljmp fxch cmpb (bad) xchg dec sub xchg test dec (bad) sbb or push insb pop loopne pop in aas movsl sub jo jne iret push movsb dec (bad) pop (bad) cli dec ror mov test (bad) inc out push jmp leave lahf cli std or lea pop xchg fwait repz repz fcmovnbe cs add movsb (bad) scas xlat aas in sti aam sbb pop loopne out shr inc sbb cmp mov adc (bad) xchg mov test add fmul out (bad) mov inc xchg sahf cmp lcall repnz hlt mov ret (bad) and arpl mov loope sub fldt ficoml or das fmuls dec inc inc mov sbb stc fldt movsl jp sbb xor mov ja mov sbb mov mov pop dec (bad) ds loop rol push push and imul (bad) mov xchg inc cmp out or fs dec xchg rclb xchg dec cmpsb mov loop clc xchg ljmp int3 adc adc aad jbe test stos in mov mov push pop jae clc das fs rol sub pop js push jge loopne outsl xlat sahf push sub adc insl pop ss mov xlat loopne mov insl jg xor push sub xor adc push fnstsw sbb jae xor scas test jmp out push inc dec mov adc mov pop ret mov mov in rcll scas daa les lret sub push and adc push aaa jo pop cmp mov fadds add andl jmp loop jmp mov sub bound mov pop mov pop dec (bad) nop fldt inc cmpsl repz mov cmp insl adcl xchg mov cmp push test popa leave fnstsw and fimull jp xchg pop and lcall scas or fadds inc adc enter jecxz cmp (bad) cltd inc into rcl rcrb lcall aam arpl inc in (bad) mov ret cs pop adc cmp ret (bad) movsl fcmovu push out cmp add popa fcmovu mov pop and add push add mov stos cmpsb negb rorb adc pop jnp push repnz imul pop rcll loope mov outsl jl mov dec dec test fstp add ret data16 leave push int3 dec aaa sbbl mov (bad) mov (bad) cld sbb adc outsb rcr int sub cmp jae and (bad) push jg loop xchg xor mov cmp cmp ss push pushf dec test lds pcmpgtb (bad) or push inc jmp push sbb dec push clc cmpsb adc lret push mov pop mov and fs push cmpsl nop imul push dec addr16 insl jo fucomip xor shrb call adc into sbb dec pop mov jecxz bound or xor inc arpl jb cwtl jne mov scas xchg in stos and fabs lahf addr16 sub pop jl clc (bad) jge es sub dec xor push cmp pop cmp adc cmp adc mov (bad) xor sub and clc mov adc and bswap jne test pop mov adc pop adc in pop lock das sub jnp cmp mov call jae mov test and xchg mov cmp xor pop dec popf subl loope imul jmp cmpl repnz dec mov lret (bad) mov dec stos or push enter mov mov jns adc sarb jo jecxz cmpsl mov push sub call (bad) jmp negl outsb shrb xchg mov sub andl pop xchg dec imul jp pop or mov sbb mov mov lea test jg (bad) xor pusha nop jne in xchg mov out sub add jmp pop imul mov in xchg dec mov lret enter jge xor (bad) lds aam add iret xor mov cmpl popf bound jne test mov or repnz push imul cmpsb fisubrl pop fmulp negb inc fmull dec mov dec sub fwait sub jg aaa jne pop fisttpll adc dec cltd sbb into fidivrl and mov pop and or push aad fdivs xchg es sbb cltd inc icebp jns inc sub clc sbb mov push aad int3 cli adc pop dec test (bad) cmp loope cli (bad) hlt lea mov mov andb and sub fisttpl push loope pop dec ret mov mov xchg call icebp fistp or push into or pop cmpsl push sbb stc pop inc push pop repz sbb cli xchg inc dec cltd sti mov inc data16 adc mov xorl mov pop aam pushl xor out jecxz adc xor xchg std xchg pop pop push dec mov push or fcomi popa xchg bound hlt (bad) cmpsb jmp mov dec sbb bnd aam (bad) out jae mov jo sbb mov mov sub cld int3 popf or std sub incb inc bound arpl or pop xchg test out repnz idivb mov and nop mulb pop test inc out adc dec ss (bad) int3 pop aam outsb inc sub jmp mov mov fildl jns push inc mov icebp push js inc mov cmpsl cmp adc dec loop push pop fs ds (bad) pusha aas test fwait call jbe jo mov pop cmp lret mov jnp cmp outsl sahf push sub mov xlat pop pop or add mov hlt mov fisttp outsl insb mov cmp xchg adc sar ds ja std add jp mov sbb les add mov in clc loop inc pushf dec in (bad) (bad) fwait inc mov aad fnstcw push jbe add sub push into subl sbbb aaa (bad) es pop jae out add call out pop add inc (bad) push test dec mov (bad) pop in jecxz bswap push arpl (bad) into sbb rcr xor loope cmp mov enter xor es std out out cmc cli stos mull push add inc mov jg inc lret (bad) aas test adc (bad) hlt dec and jg or es arpl or aas mov adc push lods and lds jno jns repnz hlt ficoml mov sti out rolb xchg cmp fcoml loope fimull test loopne dec add pop and sbb sbb inc or test sahf jae pop push lea push andb insb add fcmovb int3 xchg incl arpl jno in lock jns add mov out mov xchg mov inc icebp dec xchg mov pop or adc jns cmp xor mov sub pushl inc in mov xchg fcmovbe jo call rcrb rorb mov dec sbb mov add iret pushf movsl lods jge in arpl mov or jns jae pop out cmp sbb fisub mov mov stos bound imul mov (bad) and imul ss bound out lods mov sbb stc adc mov add mov das fs cltd in outsb test cmpsb pop rolb cmp xor shlb pusha adc testl andl inc mov or or or cwtl sbb rorl cmpsb in aas lods insl push pop jecxz and jp and imul mov outsl movl mov lcall mov loope lret push repz fidivl dec or fstpt lods push ljmp jge inc xchg pop divb cltd jbe (bad) lret inc xchg sub daa push scas lret subl mov mov out mov adc jg or ret and add aas aaa dec inc fs jmp leave pop inc mov inc stos (bad) cmp sub dec test lock cmc out mov inc jne jle insl (bad) mov das sub fcoml mov (bad) arpl xchg xor xchg adc movsb addl sbb mov cmp mov xor outsl mov (bad) fmuls insl mov arpl fisttp sub enter pop sarb sbb jecxz pop iret jl mov fidivr pushf push push dec insb cmc (bad) (bad) pop loop movsl mull lods movntq jg enter cmp arpl pop in push mov aam lods pop xor dec dec jp dec xor mov insb (bad) daa sub mov sub dec mov fsubr cmp insl and test (bad) in adc inc pop test int3 pop pop mov lods stos jg lahf shll or outsl push out push test cli test daa pop inc stos or movsl je ds mov clc lcall ror dec movsb and add sbb mov push andl hlt rcrb add call scas and cmp fbld mov push jmp (bad) push lahf push (bad) negb mov cmp adc loopne (bad) and cld clc aas push rcrb lret lret mov jge test inc nop jmp sub push mov bound in and enter add mov (bad) (bad) dec inc movsl pop add sub dec aaa push cmp roll cld xchg loope loope adc out iret out clc jno aam popf (bad) aad lcall cmp clc (bad) cld pop sub rorl mov xchg cmp bound cmc push in mov mov int sub in push aam pop aam ja aad pop pop lods notb (bad) lret test fnsave add add or push loope inc lods xchg inc pushf (bad) or lock lret mov xchg pop xchg in cli or cwtl cmpsb dec cmp test outsl cmp subl pushw sbb jecxz push scas sub jne jb ret stc imul xor loopne mov cwtl fldt pushf adc fistl fidivl cmpsl shll and loop push fsubrl lret xlat mov (bad) (bad) nop dec xchg pop sbb subb push inc lods push xor (bad) (bad) mov sub or or inc push dec int3 jl and mov and lds xor xchg popf outsl scas cwtl mov push xor int int push push call iret ljmp sti jmp sub inc xchg lcall push popf cmp add cmp pop test mov mov addr16 icebp xchg adc push inc sbb dec std or stos and dec and push outsb add flds sbb push dec icebp lock loopne add mov aad out sub enter mov pop movsb adc std ja dec int popw inc out fsubr inc stos pop pop mov dec fildl mov test add jl fdivrp lock mov loope scas pop xor sbb cmp (bad) or sub pop mov call adc jae xchg addr16 mov sbb inc xchg (bad) jne test addr16 or dec ret rclb cmp xor or icebp pop lret mov xchg cmp inc adc add push aaa sahf cmpl mov mov ja,pn mov outsb mov popf xor outsl mov push xchg cli add mov addr16 xor mov loope jnp xor mov popa int3 dec ds push cmpsb out mov lods rcl pop dec test cmp (bad) daa cmp stc and pop ret and push in movsb out in jb jne jmp jbe call fwait and xor ret mov xor sarl sbb cld jg popf cmp std cmp sbb and negl insb mov jle leave cmpsl addl push lock leave dec xchg inc push dec xchg sbb inc xor xor repz or or leave mov int3 out int3 imul lock das (bad) jno lods fidivrl cmpsb lret out stc test je fdivl nop aas gs jne aas or sbb pop out inc cmp mov rolb gs ss inc adc daa nop out add sub lret add mov loopne sbb push or gs (bad) aad fwait lock loop stc orl adc adc lahf mov repnz inc leave fnstsw scas pop mov stc pop (bad) inc xor sub pop inc popa into lret in lcall nop loop dec je jecxz lahf pop inc sub adc (bad) add iret push cmp (bad) xor fdiv lea push fsts loope imul cwtl clc hlt xchg mov imulb or daa and mov in sti nop sub mov push mov leave dec (bad) mov or fs and repz arpl lods adc mov (bad) ja imul cld add jg cmp shl adc mov jecxz js movsb and cmp lcall fwait push adc jl mov arpl push mov lock mov lds (bad) sbb loope mov xchg roll imul xor hlt mov inc rcll or imul push test push jbe jns and mov mov test cmp leave mov sti mov adc mov fwait iret fnstsw xor and fildl push add mov pop sbb push or js daa fisttpl sbb pop xlat add lahf addb (bad) iret scas xchg jge mov mov jae loopne add add movsl adc mov mov inc aad pop push jnp mov insb mov mov xor sbb xchg adc pop ss loopne mov mov pop sub jne add dec in outsb cmpsl (bad) repz ret cs int3 jo add addr16 sbb popa shrb sarb sub int jns cmp lods push repz popa jne add mov sti or in popa push push sub ret divl mov inc aam das inc mov add dec daa and dec ss inc xchg push jno (bad) jecxz popa mov xchg pop xor dec shll mov mov bound mov mov in in (bad) enter aaa notb (bad) ljmp jp mov mov mov adc mov sub lea sti sahf dec xor mov (bad) lret push adc sub xor gs jmp xor cmc insb push mov adcl inc fiaddl dec lea cmc xor sarb pop test hlt negl mov pop dec inc nop xchg cwtl pop sbb mov (bad) movsbl mov scas dec mov in cmp sbb es scas cmpsb xlat sub mov test inc push pop fcomps cs (bad) pop pop mov cmp arpl dec aad ficompl xor adc enter jno adc xchg sub fcomp add adc cmpsl mov and scas inc les loopne into popa movsl scas stos lea and jg fistl adc ja fsts xchg or jg outsl and lds ljmp xlat ja pop lock push xor stos in xchg xchg sub test cmp stos stos mov cmp mov outsb aam mov mov or xchg ficomp int3 imul repnz mov icebp cmp pop or fidivr popf scas popf scas loopne mov add insb in cmpl pop pop insl or jbe stc mov add xchg inc add xor add test shrb xchg bnd push xchg mov loope inc push and xchg pop sbb cmp xor stos int lret aam mov ds outsl push in jae xor xor in pop (bad) lret iret dec cmp dec lods and mov push int3 mov test cmp dec scas sub jnp push inc ss cmpsb sub sub push push (bad) push jne les mov xlat mull iret jmp or scas mov aam loop,pn mov shlb aad xchg sub ret jecxz clc and mov mov sub or sub divb int3 into xor fldt mov sbb enter mov mov inc aaa and scas lea ljmp mov mov sbb sbb dec (bad) inc push pop inc jge push cmp cmc js ficompl lahf pop push cmp arpl jo std and mov mov call inc (bad) adc pop adc mov push inc lods sbb int3 cmpsl adc pop cmpsb inc fbld aaa sahf call jbe sbb sbb std stos xlat and insl dec xchg inc and (bad) clc loop inc sbb in lret test loop lds lahf push dec movsl addr16 and stos pop push xchg lods cmp jae xchg or imul jne mov std xchg adc and inc add fnstsw jg and (bad) xor jno lods idivl icebp lods xor add xchg jmp loop roll dec aam ds add sarl or and js dec (bad) mov mov xor and mov lds xchg dec and mov inc push pushf (bad) rcrl adc jmp mov mov jbe sbb mov fisttpll lcall fdivrl mov inc stos xchg sub ret sbb sbb int int3 fimull add std int3 pop jge cmp cmp xchg push push fcoml pop cmp int je push jo fmull addr16 lods and cmp leave xor jmp mov je fisubrl jmp push inc dec jge xlat lret pop push cmp stos xchg rclb in leave jnp mov sub add push ret push sbb jp imul insl leave dec test fbld xor ds sahf stos inc sarl push mov or mov jnp out icebp ljmp fildl or outsb jne lret mov mov or dec insl push in incb add cmp xor (bad) repnz sbb fbstp inc pop lods and mov in aad (bad) in push sbbb int3 xchg lret test xchg and adc cs add ds push out cs and dec notb idivb mov mov jl jne sub push movsl mov iret mov mov add xor dec in daa lret rorb out xchg dec inc nop dec test shl popa enter add stos push lahf cmc dec xlat inc inc push inc ficomp jl call xrelease (bad) in fild cmp inc andb xor mov les xchg inc int3 mov hlt cmpsb popa mov or push mov js lret (bad) (bad) xor mov jmp mov and cwtl cmp push jmp mov into stos push (bad) dec gs fisubr test test xchg int inc pop notl lret repnz sub cmc popf add push mov aad cmp je xchg sbb mov inc call sbb and mov xor fstpt push push movsb in popa rcrl pop mov call push scas inc and scas testl mull cld jmp xor or mov xchg pop and jbe sub fisubl and lret mov clc lock jbe adc stos xchg inc dec and daa push or sub inc and call rolb jecxz cs mov in mov jo repz sub daa add jmp fnstcw bswap mov mov cmp loop neg mov sub fnstcw jno and imul cmpsb pusha sub xchg push dec jo push push cltd push push stos es mov inc add sbb sub jb ficomp idivb mov nop insl scas sub jmp jo in iret test push mov int mov mov pop jb,pn adc addr16 scas idivb add push mov inc adc addr16 cmpsb sub add ret adc or test mov sbb push xchg mov jns daa ss inc sub lahf jg rcl cmpl pop sub push lds dec sub push pop movsl pop je (bad) ret add xchg decl add jle add pop loopne mov aad mov rcr pop cmp jo (bad) mov pop jg inc inc xor aas das pusha lret sbb jecxz fsub lods xchg push lcall cmpsl mov mov jge (bad) test sbb jb jb test (bad) repz std lds jl mov insl std out push lret dec ss imulb movsl xor mov lock xor shll outsl mov push repnz cmp or cmpsl ljmp xchg lcall jl add js mov pop hlt xchg add inc push enter jno mov out pop pop mov jp imul or mov cmp jns mov push ss je out add adc pop test mov lret daa or mov imul cmp cmp xor jp add into xor into or cmp pop daa mull pop popa imul popf cmc mov call pop mov pop pop add (bad) fnstenv pop push mov mov idiv lret lret addr16 sbb aaa lock or rcrb stos xchg (bad) xchg adc je mov jg call daa ret xlat fnstenv xor inc (bad) and fidivr cld xchg dec xchg call cmpsb loope (bad) mov out inc adc in test xchg andl mov jg mov dec push push aas xchg jne xchg outsb pop lea push jg jno ljmp adc pop pop fimull and mov ss inc mov xor inc test push int mov (bad) cmc lods xor pop mov int3 adc mov sub add add insb imul or adc orl sub adc outsb movsb mov and int mov adc add push in and mov push cmp adc mov mov jmp lock int3 dec lret and push stc lret xor pop sub xchg mov add rorl xor sub cmpl data16 jge push adc into es fwait shrl mov rorl imul nop clc out inc lahf mov mov sbb fwait das cltd jns jae dec inc out or dec mov mov scas ffree pop cmpsb xlat sbb add repnz jp idivl jne adc fsubrp jmp adc shlb adc lcall xchg mov sahf push add sbbb out sub pop std das and and pop in mov cltd lock cmp mov shrl sub decb lods sbb jecxz mov iret add aad dec nop aam stos lret (bad) in inc xchg or and jns jbe xor mov mov sbb xchg mov xorl push mov popa fwait jle std adc sub inc call sbb ret push stos lock mov dec pop mov inc jp dec fdivs xchg and add mov stos dec mov xor in xor sbb popf ds cs mov or (bad) mov cli mov pop sbb in adc push fbstp pop pop not les xor add loope jmp jecxz jne popa dec pop bound test dec popf jo cmp mov in and daa loope mul in pop mov sahf xchg xchg push movsb cmpsl add dec pop lahf pusha mov jg jmp out mov mov sbb (bad) int pop divb dec rclb xchg lahf xor roll movsl push sub in sub je dec xor push popa cmpsb push push (bad) cmc incb pop xchg push pop js cmp push mov imul sub fild jb hlt adc testb daa repnz daa xlat mov in mov int3 jno jle xor popa es dec (bad) fwait mov fwait mov mov mov inc pop mov shrb stc movsb jp xchg (bad) mov in ds inc imul adc dec jno in lahf outsl das jo jmp fiadd jmp push arpl dec test cmp decb ret mov cwtl test popa mov dec xor and cmc ficompl jle out jo sbb cmp push mov mov mov (bad) test push jl fs idivb dec loope mov (bad) xor push pop lds subl fwait jne std pop pusha pop mov sub insb lods cmc xchg add pop addr16 mov jle out and lret mov add sub mov cmp lock lea scas xchg nop jnp lea mov lret incb test mov lcall dec push mov sub and mov dec push mov test cmpsl sub cwtl pop mov sbb std mov addr16 sub in jno push arpl push fldt jp jo xor ljmp sub clc idiv add xor push sahf rcrl xchg jl inc sarl cmp mov adc cwtl ficomp push mov inc inc sub sub dec pushf fdivrl cltd clc (bad) xchg dec jne and dec int3 pop sarl mov inc jle das adc or xor xlat pusha xor das movb fldcw (bad) ficom pop push in shrb inc mov xchg xor pop nop mov cmp fldcw js mov int les mov xor add popa dec inc xlat xlat jb stos test mov (bad) mull push jne movsb jle je (bad) push and xchg xor jne xchg data16 xor popa cmp jns jb lcall ljmp pop fdivrl (bad) fbstp insb (bad) jno pop call in jg add sub fs bound (bad) hlt pop rclb iret aam lock addr16 inc mov sub lret dec (bad) add xchg lret inc icebp aam addl sbbl aas pop (bad) mov (bad) out jne jns inc sbb loope stos movl pop sbb mov pushf add mov cmp push pop mov dec in (bad) jne repnz inc leave pushf lods or push xor js xchg imul stos push (bad) cmc dec push test fwait mov pusha or push mov int3 jns and cmp loop mov inc iret in adc aaa lret cmpl pop test nop push jno dec pusha push adc mov sub aam inc or lret out aaa push lods aad dec jo sub cmp aad lods addr16 es mov adc loope xchg and mov sub add mov xchg and out js (bad) jbe mov es sub adc clc ljmp loop jne sbb test aad xchg adc scas shrl lret (bad) rclb xchg or inc mov mov out add (bad) mov xchg mov or xchg add dec repnz (bad) mov emms xor pop pop mov push ret in mov xchg cli sub xchg fisubrl rcrl addl imul ljmp and jle lea dec push mov out cmp mov (bad) add ficoml (bad) (bad) sub insl add ds mov jl repz cmp dec cmp popa jns insb lcall lods xchg jb ss fisubr push andl (bad) push cli aam push nop dec jp xor push push cltd or mov push movsl and lea jge mov iret add pop sbb sbb divb ret xlat into push insb xor push dec mov push les out push mov (bad) aam aam clc and fst sbb pop enter repnz fldenv and mov jl gs lret pop jns fiadd imul je pop popf out fisttp orl lock mov ret js ret lds lcall pop decb stos sub xor add hlt adc scas sbb mov arpl jmp outsl mov sub sti sbb xorl inc cltd shll sub pop mov sub out xchg jp or into adc xchg cld shrb cltd mov in push ret add inc dec out test icebp nop jg out jl lret add push mov scas or pop xchg lret out ljmp dec rcr xchg sub xchg push dec hlt push hlt xchg jecxz xchg add and das dec loope add stos hlt ljmp cwtl ljmp sub dec outsl mov cmp enter rol movsl rcrl cmp shrl lret mov aam or cmp xchg loopne jnp jmp test movsl sub out mov fs or push icebp int dec arpl xor mov stc clc pop mov sbb cmp xor roll pusha and ficom push movsb sahf cld xor cmp xchg rorl sbb sub jecxz aad pcmpgtw (bad) in jmp out mov jno fcmovne mov in stc popa outsb add pop sub repnz std sbb push loope cmpb xor pushf jbe or lret mov xor ljmp loope push mov and test dec call mov jp aas arpl add mov loop leave push imul mov push es lahf push idivl popa cs int push rorl imul stc sub xchg dec outsb les nop stos call mov iret (bad) xchg jae iret jg cmp or mov mov stos sbb xchg and xchg lret mov (bad) mov mov or bound ljmp hlt cmp shlb aam (bad) mov inc mov daa pop (bad) out dec dec mov mov push and ljmp cmp test and inc dec fs shr bound xchg xor or jmp jg push aaa (bad) and and in das les repnz inc scas mov (bad) ljmp cmc loop icebp addl push add repnz (bad) jns pop inc js push in jns cmc ja aaa inc out es xor repz cld pusha into push and fisub mov cltd xor xchg pop mov jmp push pop adc sbb cltd dec jl je outsb xchg pop movsl xchg test adc adc lods mov sub outsb (bad) sub dec adc scas sarl or call jmp jo sbb sar fisttp dec insb fwait jmp mov add inc fdivl fwait repz xchg sbb jmp aas jmp clc push negl addr16 insb (bad) (bad) cmp into shlb ds or in in movsb popf or lods je jbe data16 sti mov jg stc sub (bad) stos add dec sbb sbb popf int3 jo cmp lcall xlat cmp addr16 mov (bad) dec fidivrl das jns lret in or mov movsb cwtl mov lods sub (bad) cmpsl dec push sub push mov sub ret cwtl cmpsb inc dec movsl movsl and stc sub lds aad jbe jae push ret jbe and xor dec mov add push (bad) mov inc mov or sub pop cmpsb in ret nop xchg jae sbb out es jo or enter sub inc sarl sarl test daa in (bad) imul add cmp sub add push fisubl xchg cmc add and insb je fildl cmp jbe cli inc push je or and std ficompl (bad) stc aas add in nop fisub jne ds fwait int3 adc lods sbb jns call mov std add and cmp aad (bad) out cmp loopne pop push lret mov pop sbb scas jp adc sub cmpsl fsub lcall repz mov popf sbb xchg int3 cmp sbb mov imul mov and pusha sub and dec push shl int dec cmp xchg add cmp push fidivl xchg aam rcll or das xor jecxz xlat push loope je push sbb push test ret xchg cmp cmp test (bad) adc imul push jbe in lcall jmp notl pop movsl test cld pop ds mov add js loopne leave push push mov sub mov ror mov mov mov outsb testl xchg add push mov rorb cmpsb cmp xchg int or sahf movsl xchg sbb push stos addr16 mov insb jnp xchg push sub (bad) aam ret xor xchg mov gs cmp call in ljmp enter aad test mov jne out mov inc push dec bound pop add les fcomip movsl sti mov xchg mov dec push pop (bad) pop insl shrb cmp daa int xchg cmp call jo sub fmuls jno xchg inc pusha xor insl fs xor aaa loop xor push cld insb scas or scas cli lods dec pop sbb and jg test and inc lods fsubrl loop cmpsl push xchg aad in xorl and sub into mov sub inc out xchg loop push lcall les jnp insb scas sub push sbb popf push and daa inc mov jno push dec je int fsubl test mov bound dec fdivl jno and pop hlt push out stos cmp insb aaa stos inc add pop ret push pop cmpsb jbe jb jge je dec adc lods iret fs aaa jo stos ljmp inc aam (bad) add ret jp fsincos xchg call xchg (bad) jl stos mov fildll mov and int mov dec push outsb mov iret mov sarb push call cs add pop jge inc cmp or push sbb xchg mov (bad) push in or (bad) (bad) loope dec mov cmp jl lds lock fiaddl mov cmp stc lock ss cmpsb mov hlt dec unpcklps and loopne dec ljmpw lock add mov push test mov dec inc adc mov jns add pop repz xor (bad) movsb data16 shll jmp inc sti adc mov lds sub js jns lret adc pop (bad) out into popf int inc (bad) loope push stos pusha addl inc jecxz xchg (bad) sub das sub das mov inc pushf add loop loopne out cmpsb dec lret inc testb jb es int ret inc pop pop xchg insb jns aam xor ror fildll inc loopne push xor mov pushl imul cmp fucomip jae pusha sbb dec nop ficoml in cmpsb lcall shlb nop push rol mov mov mov pop (bad) rolb lahf popa and push dec pop mov scas jne aas mov sub and adc imul jg je xchg and lahf sub lcall add jnp or dec into stos roll mov lds cmpl pminsw or loopne inc out ror dec popa ret pop cmp mov jg inc pop (bad) xor adc outsb sub add aaa lret inc stc cmpsb sti add xchg adc mov pop xchg popf sub dec fildl jb pop sbb push stos push xor stc add fcoml (bad) xor fldl movsb jl cltd cmp dec in cmp jns imul mov clc and cmpsb cmpsb stos pop mul aaa mov imul test lret inc stc push pop loopne call data16 xchg pop or push enter xlat pop movsl sub sbb (bad) mov xchg fldt aaa cmp ret in push fs cmp mov outsb aam and pop mov je mov cmp pop popa sbb es xchg inc loopne xor jp dec dec or sub int3 add inc clc iret into cmp push data16 push out cli push adc (bad) dec popa jne insb jl cmc outsb adc jae pop cwtl int outsl in dec lret pop in inc sub sub lret push loop sahf xor cli scas cmp (bad) sub jae ja fisub imul dec jno cli inc cmpsl xor mov push xor lea xchg (bad) sbb mov fdivs mov aas rorb jmp inc ret in jecxz test or aam imul test or mov adc in inc xchg push mov ds or pop mov cs ficom je pop adc sub out stos daa jle mov xchg dec mov pop or nop imul pop imul push sub or loop pop pop inc sbb mov fidivr inc out pop (bad) decl ljmp xchg push arpl adc arpl flds cmp sub outsl das mov leave pushf xor mov mov adc pop lock aad shlb adc mov fisttpl test mov xchg faddl pop shl nop or call lods or notl loop pop mov in ret outsb dec addr16 xchg jecxz nop mov stc push shll mov sbbl and cltd lods xor add cmp arpl out pop jecxz rol add mov xchg daa lods mov je hlt stc out js jbe mov inc mov lret and iret xor mov fsubrl xor cmp test lret mov loope test lock fstpl inc inc add test push (bad) mov or xor push test aas lcall imul imul js inc pop stc xchg xchg flds mull ror lods sbbl and cltd push popl push pop sub mov pop jmp idivb jmp sub dec decb jmp int (bad) xor ljmp imul aad out in (bad) fucomi adc (bad) add inc pop lock xor repz test and pop aaa mov dec or outsb or and adc jge push in jb mov and jnp inc test addl jb idivl pop cmp add jge mov daa js mov adc scas je rclb scas dec rorb adc pusha (bad) insl xchg jge notb jle,pt jmp add pop out lods bnd push or xchg xchg pop xchg cld mov les ljmp repz packuswb mov in aaa mov imul push cltd test mov loope int3 (bad) xor mov xchg data16 jecxz sbb xchg test arpl xchg sub dec insl test stos mov repz pop cld hlt push outsb mov push mov (bad) outsl or mov add in or jno mov in cmp fprem1 gs jbe mov or mov imul and rolb lea cld (bad) xor pop inc aam mov xchg jo in je hlt movsl xchg sub cli jo mov push mov push mov jp ljmp push xchg xor mov lods xchg push jmp mov imul mov icebp clc dec loop mov (bad) push lea std jg xchg jb jae xlat mov mov sbb je mov jne dec cmpsl push cmp (bad) cmp fdivp daa jle les fwait pusha out aad test push cs add lcall or cmp push cmp jp push sti fwait mov and stc inc pop sub in das mov (bad) jg xchg sbb mov push addl and and int das out aas pusha (bad) jmp leave sahf stc push (bad) ss mov (bad) stos jecxz mov jecxz (bad) fldt xor mov and inc xchg dec pop cwtl andl out mov adc mov and push popf sub jmp repz lods push jge jg jns and or test bound sahf faddl (bad) repnz and mov imul test test outsl (bad) fisubl push popf insl adc mov jb,pt push push and pop fs push ss cmp cli mov ficoml js or dec sbbb pushf push roll push test inc push xchg repz and clc cmp push mov fs int3 cmp cmpsb mov mov rcl test dec push (bad) ja fld cmp lods mov ja iret mov mov or push adc pop call jne pop pop leave rcll shl push daa xchg push fisubrl jo mov sub xchg pop iret rclb pop xor imul sub or cmp aaa jno jae xor and push popa sbb mov xchg not es add add test repz bound or mov mov cmp jbe out je lods (bad) leave jo add cmp das cli enter outsl pushf pop jmp ljmp adc mov ffree movsb mov or sbb ljmp pop popa out mov testb clc pop sti jge add (bad) pop (bad) (bad) popa int3 xchg stos fwait in test mov mov sub xchg mov rdmsr xchg pusha pop loopne scas shrb sub jg xchg push test (bad) sbb clc mov mov push mov cmp arpl mov rorl jl dec js inc imul adc jmp cmp jmp push leave out fstpl cmp mov in mov (bad) aas dec or xchg fdivrl or fbld (bad) (bad) sub or and pop call scas out mov cmp imul or cld in sub mov or jge sub loop lods idiv mov ficoml sbb testl mov or push sti pop in mov sbb jge and leave imul mov jmp and dec popf into out mov out xchg jg lret (bad) mov cmp or jmp and lods adc jno xchg jns ss xchg mov dec xchg push push mov lock jo sahf sub cmp add rorb (bad) pop xchg int out cmp dec mov cmpxchg pop xchg cmpl stc pop jo clc sbbl mov (bad) lret aam xor jp fwait sbb mov inc cmp mov push xor mov push aas inc popa or xor fwait add arpl pop lds mov adc and daa sti sub ja into pusha cmp in pop jecxz loop sbb cmpl cs cmp pop pop icebp jne mov lcall sbb decl test cld push test cli dec sti test add cmpsl sahf pop mov sub sbb repz aaa dec jmp or push inc fmul xchg cli adc aam arpl sub sbbb mov push and pop mov inc xor lods fsts repnz roll cwtl adc gs imulb push inc jmp std xchg stc (bad) pushf lock mov adc mov imul cmp repz jmp stos cmp pop loope sbb leave bound jns pop push jmp inc ret mov adc (bad) xchg sbb xchg push mov adc in adc pop or repnz adcb push push ficom test rcr outsb pop lahf dec into jmp ds aam pop pop xchg adc mov push or cmovb pslld inc xchg and subl cmp div test xchg cmp gs sbb and add jns mov lret adc stc mov add mov xchg jo or rolb pop jae xchg popa int3 mov push cmp xchg pop cmpsl mov cli inc pop arpl and jmp add sbbl bound sub sti inc pop shlb sbb lcall into xor movsb popf mov lods lods pop mov daa pop mov cmp mov loop push mov jl xor (bad) popa cmp int jl outsb pop add jmp lcall stos add xchg or sbb fs ret adc test pop dec pop and jmp lods mov ret add inc adc pop adc push (bad) je sarl push in lods jp outsb popa sahf iret add cmpsl mov pop dec cmp or xor mov (bad) aaa jbe or sub out xchg test xchg rol mov mov int3 cld xchg sub jb mov push mov jo fmul mov lret xor cld pop outsl sahf lret daa (bad) mov mov cs and xor std xor fs inc or test stc je std mov adc jns in out nop data16 or clc xor xor dec andb and mov lock fisttpll stos inc dec jl cwtl pop cmp jb jo jmp dec dec movsb inc dec lds or sbb sub notb mov stc fdivrl sbb mov xor mov push imul add lret xchg insb (bad) xor cmp xchg (bad) repz popa xchg push dec cmp fnop inc (bad) outsl out sbb fstl sub push int3 icebp mov data16 sbb sar ss sub jb mov (bad) sub adc mov out popa cs ret or cmp pop ja mov push addr16 mov mov cwtl push je fbld ficom imul (bad) cmc push and dec adc (bad) in add rcll ss loopne xor push je adc and fwait adc xor xor mov cmp pop rorl lret cmp or pop jns xchg push out or add daa sub sub xor pushf lods popf insl mov inc and enter ds mov fsubs push pop dec jmp outsl int lea pop imul jle addl movsb int test inc (bad) xor cmpsl or outsb mov ret popf dec imul ss mov cmp ljmp sub imul or rep jb fistpl mov aam and jmp sbb les ljmp (bad) dec add fldcw neg jmp rcl adc call dec jle scas jo or dec mov cmp mov or adc pop jmp jge in hlt fwait mov stos jp mov push in pusha into dec arpl fnstcw test or aaa hlt jmp and test jnp aaa cltd xchg out or lods and pop sbb mov repnz fisub and xchg mov mov dec and dec loopne cwtl movsb loopne add xorb inc push fdivr dec lret xchg push hlt loopne xchg pop lods lcall inc mov inc mov mov (bad) sbb (bad) leave in cwtl rcrl pop mov fdivs gs sbb cli cli pop ss addr16 outsl ja imul lock dec iret and cmp sub adc pop sbb push adc lock adc sbb mov fwait xchg sti addl jbe fstl sub lahf jl aas and jle inc push sub ja fnstsw inc mov loopew ficompl lcall xor fidivl xor stc int popl pushl shlb push cmp cmp enter xchg subl rorl ret xor adc pop push lahf loope fldl cli (bad) xchg push xlat dec mov insb scas pop jbe xchg cmp test mov xchg scas test mov mov xchg pop out jo out cmovne pop aaa jbe call lds (bad) jbe es inc imul loopne lret cwtl sbb sub std into test dec or rcll and adc iret sbbl jp push mov mov js mov inc mov sub jge pop jle outsl add js sbb xlat ret pushf adcl cmp rorb jp lods dec jb mov xchg or inc xchg enter adc xchg mov ror xchg jl imul jmp lret out mov leave or xchg add or inc sbb repz xlat sbb inc sub sbb punpcklwd xchg mov mov mov mov add adc jg pop addb dec pop (bad) fsts outsl inc imul imul pop add scas push adc adc fwait cmpsl inc ss int push push ficompl test inc xchg pop jmp (bad) int xlat adc out mov cmp (bad) inc lods sbb jp pop stos lods imul inc in (bad) xor jmp pusha cwtl pushf ja loop shll and mov jge inc push jae and adc cmp scas or out popf jle mov mov xor and sub xchg inc int3 mov cs fs mul push xchg test sub and push es push inc (bad) and mov adc sub jae cltd loope cmpsl dec stos outsb xor sbb lea push xor js mov mov and or mov push cmc inc pop (bad) test cmp imulb cltd js or sub (bad) (bad) data16 push sbb ds xchg jp arpl lock ret mov lcall mov push mov (bad) jne test scas jmp and xchg mov push add xor repz mov pop pop xor and movsb bound orl jno sbb xor sub cmpsl adc jle push mov aas ret shrb fstpl les push mov repnz ja push adc (bad) push cmp rorb ss cmp and icebp (bad) iret inc and call mov aaa inc popf xchg add and sbb loop xchg push push into mov jg xchg ret cmpsl lds cs pusha mov pop and and mov add leave cmpsb mov outsb loope stc pop mov lods in inc sahf pop clc jb movsl cmpsl dec pop lods rcr in and xor inc inc sbb cmp mov mov inc and loop mov mov cmp cltd jns outsb xor dec pop cmpsl cmp jae,pt or sub mov push outsb mov jnp nop xchg add xchg mov test xchg dec sbbl mov push test jg inc loopne cmc enter jbe add add leave iret insb mov cmpsb pop aaa addr16 das cmp adc push and das cmp mov popf movsb imul pop or pusha (bad) fisubl cmpb lret xchg and cltd lahf test stos xchg cmp sbb repz cld inc (bad) sti pop popa idiv and jns xor jecxz dec cmpsb pusha ret or fsubs ficompl xor (bad) and xchg ds pop sti mov (bad) in pop adc jmp jb nop hlt and pop jmp outsl mov and dec out push dec sub iret arpl in loope mov lret push pop cmp (bad) jno ljmp xchg mov pusha (bad) xor (bad) mov into ds inc jge aaa cwtl push add fdiv cmp and jne adc cmpsl movsb pusha test fwait pop mov repnz cmp movsb pop lea fld stos inc cli cmpl out insb loop mov xchg and pop jl add std fisttpl das push push arpl dec jmp mov mov or bswap stos leave and (bad) push or jg mov mov pusha (bad) in jl sub add mov sub add xchg aaa and das cmp inc and roll add mov lds or mov stos push push movsb xchg cmpsl pushf es xchg movsl dec cmp xchg (bad) push cmp sub or adc cmpsb cmp js pop popf loope mov rcll adc bnd aam (bad) jb inc xlat push and pop sahf setg mov cmp or add scas push loop jmp arpl movsl out inc cli pop xor out and test jp jmp jmp inc inc adc jp cmp call in mov cmpsl push pop iret outsl dec push adc mov push into sarb dec push fistpl repnz mov nop sbb stos sub add sti xchg add out jne inc cwtl pop push cmpsb and and pop lods xorb pop sbb cmp aam dec cli pop adc push mov push dec les stos (bad) sbb mov push cwtl movlps xchg and andb leave or movsb fistpll addb ja dec push xchg test or out add imul sub xor mov frstor daa popf loope cltd jmp jae pop and nopl mov cs xchg or cmc icebp ficom (bad) std push ret (bad) mov pusha add (bad) div xchg push sub jb cwtl stos xchg js popa rcr sbb or jbe test mov adc inc in addr16 mov pushl fdiv repz loopne (bad) xchg push enter in (bad) xor inc lret pushf sbb add xchg out xchg ja (bad) cltd inc jecxz jge loope scas js popf movl movsl bound dec xlat and inc inc dec mov mov cmpsl rorb repnz xor repnz or stos sahf mov cli pop iret (bad) push inc dec popf seta xchg fs ret shll repnz lods in xlat mov ror pop iret mov pop cmp cwtl bnd daa add (bad) jo nop ss xor (bad) (bad) jb loopne push xlat pop push push pop sub data16 out xchg movsb test and roll sbb pop popl loopne (bad) stc add push jo jo subb push push add xchg test inc pop pop pop xlat cmp into pop adc xchg push fbld std test daa jbe mov add insl adc int pop lret je int loopne repnz imul xchg out inc cwtl cmp fbstp jmp jl mov (bad) fisttp pop xchg mov pop sub pop xor adc cmp aad push mov scas mov sbb (bad) jbe in iret (bad) mov mov sbb test lret mov scas scas notb adc int mov divb cltd push sbb pop ret and ja jecxz loopne and faddp and mov add adc out (bad) fildll stc add fsubrs adc dec push dec fstp jbe or fmull mov inc mov out inc into cmc pop int mov scas sub push int jbe fstpl mov xlat pop andb pop nop gs lcall xchg xchg (bad) adc push movsl adc test mov cmpsb in cmpsb or ficompl xchg and adc hlt sub cmp jge dec inc vcomisd push gs insb pop xchg in negb mov push in imul mov adc es add (bad) ja xor sub cvtps2pd loop adc pop in adc lea and pop pop mov movswl adc mov add xor sub or in (bad) mov stc adc mov or sub push cmc push pop cmp mov push jb fs stos mov outsl ds fnstsw inc sub pop popf popf les popa pop in mov or cmc test xchg inc adc sbb pop mov cmp addr16 into jg fnclex jns fisubr mov dec or fs test mov mov xor push pusha sbb lds jecxz cld adc enter out int cmc cmp mov mov and push dec pop xchg push cltd inc cmp adc sbb loopne xchg out mov mov push pop icebp cmp out fstl dec jmp stos inc dec leave inc aad rcr xor pusha xchg stc shrb orl dec or jp xchg ret (bad) xchg scas int3 xor sbb push xchg loopne push daa pop push push pop sub lods pop ds push inc dec lods insb inc mov int into pop mov lods fisttpl dec notb jb lret inc mov add dec sbb and mov outsb cmp movsb sub inc scas push xor xor das fdivl out xorl out fwait es mov pop fistpl ja sbb jecxz dec inc test es loopne sub mov xor sub pop stos sbb inc aas std ret jae test andb jae adc subb je popf push lea (bad) mov jmp mov movhps test rclb mov jle dec int mov pushf or push pop fwait outsb cmp push in xor stc adc add xor pop inc xor jb mov ds aaa sarl jmp mov movsb mov testb jns jle out outsb cmc test cmp xchg daa dec push insl push mov js and mov add adc loope testl iret or xor imul test int3 add xchg push jns dec adc sbb or mov shlb pop scas nop popf adc and or int jo mov dec pop cmpsl cltd fwait sbb sbb call outsl or in inc mov insl sti mov mov or push xor (bad) jo mov mov cmpsb cli test int3 stc into push cmp movsb and xchg fistpl xor cmp (bad) sbb aaa ret and mov ja test or dec sahf fcoms add stos sub pop dec xorl push add cmpsl adc jno and scas inc mov cmp adc mov scas cltd aas sbb sub aad (bad) insb clc add les cmp les imul repz add fs out xchg lcall (bad) mov mov outsb mov pop sub push jl js imul (bad) push hlt xor xchg sahf sub mov pop pop xchg out mov xor fist fwait mov popa mov pop adc fstpt cltd fidivr sti adc pop cmp sbb sbb test outsl dec imul xor dec xor nop cs jnp scas dec dec (bad) dec jp dec mov (bad) into and dec adc sbb daa ss pop jecxz cmp scas pop aas clc hlt mov sbb mov mov addr16 mov lods mov lods lahf es scas insb sbb dec push loopne cli or (bad) pop cmp mov les repnz xchg add xchg cmpsb mov (bad) jbe or xchg dec inc insb test pop jmp dec stos cmp (bad) outsl test mov push outsb xor add stos sbb ret xchg dec fldenv mov mov scas addr16 sub lcall js xchg mov adc fdivl jg pop mov iret fs cwtl fmull andl xor sub add outsl or cs mov sti hlt and mov arpl fldenv xchg test movsb cmpsl adc dec pop lahf and sbb and insb push cmp adc mov insl sub cli mov adc rclb xor adc hlt fidivl xchg inc std fldcw pushf xor mov ljmp ficompl nop and shrl sbb jmp dec pop fwait sarb movsb gs dec inc addr16 into add dec aas cli sub hlt ret jno,pt pusha movsb cmpsl xchg mov in clc sbb or jmp dec cmp xor jae inc push in jns sbb movb jl mov test loope cmp test iret in adc dec stos icebp (bad) fs or fist sbb sarl adc mov push rcl adc jnp std sub push mov push push inc jb xor fimul xor push or in fiadd mov add enter int3 lahf cmp aaa (bad) mov cmp jge cmp (bad) lcall fisubr (bad) xor or jb pop pop xchg mov lods sbbl les stc or ljmp and push loopne cs mov rcl dec pop enter adc ja aad cmp or enter push test or pop xchg out sahf cmp push mov or fisttpl insb cmp sbb loope sub pop mov push imul fwait lds inc shlb les inc xchg stos adc dec (bad) aas (bad) pop test cltd dec adc inc call (bad) (bad) in xchg xchg jae jp push in add pop adc mov fisttp pop js ljmp push xchg mov sbb aaa inc rol movsl test push aam push rcr lcall lret add dec out xchg xchg popf aad mov (bad) jo push nop inc sahf pop mov adc js and add (bad) sbb (bad) andb in arpl lea jl scas fsubrs mov ds outsb xchg xor inc rcl pop cmc cmp rcrb out psubusw js dec icebp xchg sbb cmp jmp jb (bad) mov (bad) cmp movl add lods lods cli aas xchg cmp (bad) mov mov jnp lea fimul adc iret sbb mov inc push (bad) out call xchg pop insb fwait jle test add les dec mov add cmpsb jl cmc jp add lcall adc fist fwait decl negl js mov loope xchg jnp loopnew ret push or or jb test xor dec repz jecxz jo mov mov push adc loopne ficom addb mov clc repz mov in dec inc pushl mov dec ss je dec inc test fdiv test push xchg push insb jmp daa dec push lds jb inc popf mov xchg imul mov jp cld jge inc shr adc push dec dec inc mov dec fsts jl repz sub lahf out and lret jg inc mov loope mov xchg addr16 cwtl addr16 fs aad fxam repz add (bad) xor fs insb sahf jo and jb mov stc fstl add mov fs xlat sahf xchg test aad fildll sub insb cmp or mov jb daa xor pop shlb inc mov mov js imul mov push xor lahf xor aas mov xor lock or rol sub insl ror cmc mov xor ds xlat pop mov xorl mov out ss xchg les cmp push icebp jns hlt mov dec mov fnstsw xchg das mov bound or rcr movsb daa rcr fmuls xlat andb jp stos sbb test adc or dec inc fldl (bad) test or sub mov loope or jno jne mov bound add movsb mov inc inc test mov mulb lahf cmc jle dec stos aad loope sahf mov pop jbe,pt movsb inc fsub ja rol lods shr je cmpsb and cmpsb push movsl xor jl fldt (bad) mov cltd or sti arpl add (bad) hlt sub dec dec pop movsb daa dec cli test push test lret hlt ficomp mulb add inc cld call jne xchg pop pop les mov inc popf pop pop (bad) fsts cs cld jg inc sub mov sub xchg daa inc cmp scas fimul cmp cltd aam in add add (bad) aam sub and loop in xchg dec mov push pop out mov sbb scas es (bad) lcall and sbb jno sbb mov mov loope fs push and daa xor fiaddl cmc mov add lods test rorb (bad) mov mov mov ret lret cmp or pop std arpl lods push jno movsb icebp repnz xchg jecxz mov xor and jmp and inc aad sbb movsb icebp pop pusha dec rol sbb ret add addr16 mov jmp adc dec ficom mov push ret or in stc dec inc mov or scas jb loope xor fs fsubs out or cmc xor pop pushf popf xchg orl mov loope mov mov xor dec or dec mov pop jge (bad) in xchg add sbb insb sub loopne call push in jb les lock cmp pop mov xchg movsl and (bad) ret mov push test cmp int jb inc loopne shll int xor movsb push jbe inc test clc xor rcrl lcall dec add int out out inc push test mov inc lea bound insb repz and ja pushf push lods jge sbb lods scas sbb jb xchg lea movsb lods movsb sbb popa xchg xchg mov test xor mov xchg adc mov add and and pop jge cmp jbe es data16 add movsl movsb mov pusha mov sti fildll arpl jl int3 ficoml push mov loopne mov adc push sbb (bad) mov dec repz movsb inc mov sub cmp lds (bad) jge repz dec jns in sub add popf lods dec fnsave gs mov aas shlb insl (bad) pop cmpsl sub gs test loope (bad) adc push add cmp adc subl mov dec mov mov and dec push arpl dec jnp pop sbb mov cld pop sub ja pop in (bad) loop,pn aam mov mov dec or xchg dec sbb push (bad) leave adc arpl xorl and in pop sbb adc xor lret mov ds jp sub mov aad jp lcall out ds or lds sub sbb cltd hlt repz xor xchg dec outsb jno (bad) xor neg lods mov mov lcall repnz adc add add add sub stos aam popa popa xchg or dec dec imul loop pop push shrb test hlt sar and fld dec test xor (bad) xlat out std jge dec pushf shlb cld mov jne shll das fnsave or dec sarl addr16 mov cwtl aas sti jb repnz (bad) outsb push pusha xchg shll jb fucomip aas arpl cmp push push in and sbb lds ds jb sub call fidivl lea scas test or (bad) pop dec lock sub or fwait cmp inc cmp xchg (bad) xor fadd mov aas and lahf mov and adc add lea mov in popa sub mov (bad) adc mov mov mov stos xlat or (bad) push mov xchg push movsl out inc xchg cmp gs lahf js into dec adc inc fidiv cltd mov lock xchg enter and fnstsw or or inc adcb cmp cmp in rorb add add daa dec xor scas jl inc xchg jae (bad) inc iret jb test loopne (bad) fbld fwait cmp and (bad) repnz lods test outsb js push mov xchg jl add test and (bad) sub cmc (bad) mov pushl xor ja rcrl push aaa add (bad) jl (bad) and and out insl xor lods sbb lds lcall test add insb lock test cld push lock push adc mov cmpsl les xchg pop jae mov sub int inc cmp push aaa mov push pop (bad) mov jns cli cmp push fs add mov (bad) repz jo data16 lahf stc push in stc dec push shrl iret pop (bad) loop sbb lds inc mov lahf in sub ffreep add dec adc call adc pusha loop pushf pop bound mov out test ss div xchg (bad) adc rclb cmp mov push cmp fdivrl mov pop xor push xor pusha mov or data16 out pop and das mov or push ret xor inc nop fwait (bad) and inc (bad) in pop pop cld push aaa mov dec out clc or mov sub adc sbb sub xchg jecxz test ret inc xchg (bad) jecxz movsl fs add lret fwait adc sbb and stc mov jg jecxz mov dec jmp daa mov push adc mov push pop adc adc nop pushf rcrb ficomp jecxz sub test add (bad) xor js ja fbstp xchg add xorb xchg and dec fsubrs sbb jbe xor mov pop (bad) dec pop pop fistl mov lock and jae in popa adc mov or repz negl jbe mov sub xchg push into pop pop xor popf pusha iret push mov leave pop int int leave mov scas dec lds (bad) mov push rcl test jno (bad) or fs add xor clc xor lods xlat xchg imul loopne iret inc addl (bad) repnz or ficomp add mov jle jnp xchg imul shr xorl daa arpl fs sbb sub xchg adc adc imul cwtl sahf or enter sub xchg or adc iret and insl dec pop xchg lock push into or or dec push fs and and fisubl push into outsb ja int aam push rcl cmp push cmpsl mov xchg jg pop pop negb push xchg in mov pusha xor cmpsb psraw mov xlat or call or std faddl jns fwait xchg outsl loop call into fcmovu cwtl adc stos sub xchg jne pop in jne daa jnp nop dec icebp add pusha repz inc mov mov mov jp ficomp xlat sbb sbb inc mov pop cmp pop aaa ret mov push mov and push and fwait notl inc test add mov xor cli sub jle mov (bad) jb mov or mov push int3 (bad) sahf mov adc dec inc inc roll popa xchg icebp negb dec jl outsl mov dec inc inc add popa imul jg sbb and jnp stos mov fist sub cmp (bad) and xchg loop add mov int inc (bad) test sbb repz jae and nop xor jnp pop cwtl add sti or fcompl adc jne fdivrs icebp xchg decl inc xlat outsl ja jo fisubl repnz fadds fwait sub mov cmp mov mov push idivb ljmp add out inc xor add push repnz mov sub rcrl pop pop movq outsb inc (bad) fs dec add jnp addr16 pop stos test or sub shll (bad) jns mov dec inc stos push inc imul fwait pop sub ss dec mov xlat stos and data16 inc dec jmp popf cli es jmp in push push cmpb ja sub dec sbb test sbb (bad) (bad) icebp push fs scas frstor popf (bad) inc test inc pop aad xchg inc mov and pop inc mov gs pop jl cmp push mov out (bad) lcall adc (bad) repnz sub mov je out mov lods pop test jno mov xchg cwtl lods aaa cmp outsb fldl outsb sub gs sub clc punpckhdq (bad) jmp movsl mov dec mov das aam leave in jae adc lock ret adc (bad) cmp mov xor mov popf icebp (bad) sub test sahf mov aas pop fistpll jmp mov mov arpl cmp sbb pop adc addr16 jmp pop ljmp mov pop test fisttpl shrl mov adc sti loope pop movsl lret xchg push xchg push sub pushf and cmp xchg push (bad) idivb pop push out test inc in cwtl fs jge cltd jns fisubl or or fsubrp xor ja neg mov idivb rclb dec sbb xchg popa push cmp pop cmp add fldl inc (bad) cld xchg push out or xchg jge mov xlat jp dec xchg ficompl mov aam fimul int3 int3 push sbb jae std pavgb out or sub push dec (bad) popa in mov inc jl fmuls out push dec xor arpl les push pushf divl lahf inc inc dec xlat fucomi shl dec scas imul hlt push imul mov push dec je cmpb arpl or fbstp xlat jbe and dec test out jnp inc push negl xor movb arpl fstps cmpsb or xchg jae dec jno in mov fs insb add negb sbb xor xlat outsl fdivrl pushf in clc cmp add jnp sub adc dec pop nop rolb cmp dec push out out mov jb adc dec xbegin xchg sbb cmc mov lret xlat (bad) loopne add push loop aam cltd sar ljmp aam dec int add imul or adc sbb idiv lods dec xchg mov dec pop in add and pop stc mov jmp jge outsl std push lds (bad) cli lea or dec push dec daa loop lahf pusha jle je mov ljmp cmp mov std lcall outsl loop imul xchg sbb push mov mov xchg dec pusha mov out pop pop push xchg dec lock pop repnz lods xchg pop fist adc lcall adc out in daa inc aam addr16 adc dec and xchg mov pop std pop mov out fcmovne adc js iret sbb dec (bad) in sarl jb dec xchg arpl dec xchg jg push sub in push scas outsb cmp mov addr16 out cmpsb (bad) ss pop (bad) mov or test inc mov push jno push adc mov out mov push int stc push mov sahf and add (bad) int jbe cmp adc dec cli mov fmul and test aaa sbb psubw sub push aam dec jge stos inc pop lds dec icebp sub jno ja loopne roll lods (bad) neg ss jnp fnsave ds decl push and psraw outsb icebp mov adc sbb mov xor pushf or sahf jg fistp icebp pushf out imul jl stc sbb mov movsl lret push xchg xchg ljmp (bad) xor aaa jae cli inc andb int insb mov and cmp cmp dec mov movsl sub mov arpl das hlt es mov sub jp pop cltd outsb mov jnp scas adc dec fwait add add loopne adc das sbb add aaa inc insl out mov jbe shrl (bad) cmpsl sub call and pop in in icebp dec xlat sbb (bad) jo,pn cmp or les push aaa adc ja sub (bad) ret sub je in jmp mov or pop das xchg push add outsb imul mov sub rolb loopne add lods mov pop int fwait jl mov pop jmp arpl imul sbb jmp out in test pushf pop adc sbb mov (bad) fs mov lods mov sahf jmp dec imul cmp mov mov cltd cmc xorl loop enter insl jns mov cmp inc add mov inc (bad) lcall xchg nop js jl scas bound enter adcb add fsubrl pop outsb mov dec pop push sbb adc mov mull dec mov jl pop ss test shrl jnp push mov out or scas inc jb add push aad pop pop fsubrs inc (bad) mov push insb xor inc push test pushf jb add and mov push fdivp or dec dec cmp aad into loopne adc gs jnp mov adc lods add add jmp bound add (bad) outsl in mov xchg pop lock dec push sbbl cmp sahf jnp pop mov add lret lcall push xorl int3 lret test (bad) hlt fldl in popf aam loop mov in jb add insl dec or out scas scas out scas sub sub fisub scas jp inc mov adc fisubl mov clc push hlt or dec xchg mov ret jg add or add leave mov dec insl pop adc (bad) int and xchg dec or cmp or or addr16 faddl notb cli shlb and mov and cmpsb divl pop cmp in test xchg adc int3 scas testl lcall daa sahf adcl pusha pop divb xchg push sarl add push cmp leave add sub (bad) into cld iret movsl push loop xor mov mov int3 gs sbb dec sbb repz sbb fsin sarb add lcall and insb popf push sub add cs cmp (bad) rclb repz pop jno xor jge dec jno leave stos stos subl pushf jle nop push popf sbb testl jmp data16 pop dec in rorl fild pop jb jl out xor sub outsb mov aad gs cld push sbb dec lahf dec push sbb jns cmp pop cltd mov mov adc push cmpsb into mov leave (bad) dec les xor in push addb inc push dec out jb xchg ljmp (bad) xchg push pop scas add dec mov pushf pop popf and push imul adc int pushf and inc push or fmul sbb js add jmp fnsave push xchg inc loopne or divl mov mov push roll decb push aaa out test xchg pop cs xor stc inc and sub inc (bad) xchg pusha mov and repnz (bad) push inc inc lods cmpsl jge hlt jl cwtl sub scas mov ret arpl sub sbb fisubr lods pop inc test pop dec push push ficoml inc push push mov mov add pushf inc pop sbb ret xchg dec stc es add jge bndldx xor dec hlt insb mov adc jbe loope mov loope jl pcmpeqw lds aam sbbl cs roll cli cmp or and cmpsl in scas add ljmp test (bad) in cmpsl scas lods push mov stc pop cld mov cwtl cmp fimul add inc test xchg cmp arpl insb mov and insb inc sub push jbe popa fimull jno mov mov test cmc jno inc jbe ja mov mov push inc in pop rclb mov stos dec ljmp xor addl mov aaa fimul jnp sub (bad) jge jg outsl jnp in pop cmovs jno mov sub jae mov bnd mov inc ljmp jle push arpl mov jno mov out sbb jmp xchg cmp dec fldpi sbbl sahf aam jbe sub push cmp and sub (bad) call mov out add push pop adc outsb sub add jo push std scas mov aam aaa repz out jb pop movsb sti stc test jp subb dec push sub rcrl dec movsl push out sub les pusha aas aad mov or aas cmp psubq mov int gs data16 mov out lods mov jp sahf ficompl fstpl inc fisttpl loope pop cmp dec mov fildl icebp jp scas mov add outsb sbb fwait xlat cld add insl lods aad lock bound lea cmpsb pushf jmp popf ret inc sahf add jle movsb mov dec je cmp push xor jns (bad) std or popa mov in adc out push sub push xlat aam adc fiaddl mov (bad) dec xchg fcomip xchg (bad) mov ljmp loope dec push lods pushl push sub in fisubr or xor mov (bad) sbb ret movsb mov es decb push push jmp repnz pop movsb dec cmp xor mov xor cmpsb push out push and (bad) mov pop repnz pop sub popl pushf sub (bad) cmc and loopne call xor push jno std xchg data16 pushf sub cmp sahf inc popa (bad) mov xor mov fcomps dec ficom ret test jmp out jno (bad) bound xor push fs mov mov lret mov scas addr16 or fcompl and mov cs das repz sub push pop jb and cmp dec rorl imull std xor dec jae (bad) cltd cmp xchg cmp mov (bad) adc sbb xchg dec addr16 jnp mov jb push jbe mov in push loop pop repz stos adc pop nop push out lods push stc or (bad) (bad) fistpl push outsl fldt enter (bad) jnp add rolb pop mov arpl popf popa inc daa mov fldt ss arpl bound cmpsb fdivrl push rcrl or loope xchg scas or cmp inc jecxz mov push adc (bad) mov sub imul adc shl ss outsb in loop iret xor pop bound add addr16 cltd (bad) or jg pop vprotd mov loop mov int3 jnp mov pop stc adc mov test les fwait and ds adc xchg (bad) in pop jnp (bad) jmp arpl sti adc jle dec stos cmpsl cmpsb mov mov push inc (bad) xor sbb push cmpb ret mov es repz mov sti ret ja or push sbb mov adc lret jl sbbb (bad) xor mov nop push (bad) std xchg (bad) xchg push scas adc mov das fistpl js popf fdiv stos (bad) mov (bad) mov fisubrl mov les xchg lods mov popf mov mov fs mov xchg addl xor scas movl cmp inc insb das into loope inc xor inc inc jne and mov scas call and ret xchg and test fneni(8087 jl jmp std shll add insl jl clc xor add mov sti fyl2x idiv jno add push out js data16 xchg es inc cmp (bad) cmp shlb jbe dec movsb mull (bad) or push negl (bad) and adc aad aam sti sbb outsb and scas and pop sbb dec jno or mov sbb iret repz mov push imul xor (bad) call xchg or pop dec push outsl sub (bad) leave push pop dec jl mov clc setns jge mov in lea mov mov lods fistp xor lea jge test js pushf adc push mov scas add jmp sub ss xor std xor movsb cltd cs call xchg aas lret adc sub jmp inc sbb push inc int3 jecxz outsl push aas push int3 add sub xor inc std sarb mov pop leave pop lahf pop mov jno call mov cmp or fmuls mov fcmovne sbb mov int3 pop cmpsl (bad) (bad) mov or out adc mov sub and fcom jecxz mov jb inc pop push cmp les and sbb dec fsub jle xor add test xchg add sub cmp xor js cmpsl frstor xchg xchg test adc lea hlt sbb call cmp pop leave ret cmpsl adc punpcklwd mov (bad) (bad) cli fsubr call imul cmp inc xlat sub popa push and mov cld fdivrl sbb jb push xor roll mov das inc mov mov mov lock lds ja popa test xlat mov fstpt cltd xchg jp stos pop adc mov cwtl lock (bad) xor pushf insb push aam fstps (bad) inc pop jg (bad) int3 dec js gs scas sub mov (bad) negb adc insl int lcall test push pop or out sahf adc push mov stos cli inc mov inc mov scas jbe mov ss add sbb cmc and cmp iret fildll mov stc aad add sarb adc (bad) cld xchg test sbb sub ret clc (bad) pop aad jo pop cmpsl mov dec cwtl ret mov leave add test arpl (bad) gs fnstcw lahf (bad) xchg in cltd test adc pop cmpl lret (bad) fs out pop add mov loope repnz add xor fwait pop lcall pop repz enter fisttpll in or in test pop sub sti enter sbb stos adc sub or push mov into popa cmc mull pop mov xchg xor xor mov push ss push pop or add cmp sbb fnstsw movsb pop vmwrite add call std jecxz xor pop mov je add adc out dec stos sub sub jnp fwait or addr16 inc (bad) leave imul (bad) test je ss (bad) pop arpl cmp mov add pop sbb jecxz andl mov lock jle cltd or rclb or jbe jns aad cmp cmp sbb in jecxz sub loop pop dec pop push pop rcrb xor pusha dec repnz stc sbb js fnstenv and dec jb rcrl scas test mov mov (bad) cld insl lock pop loop adc inc sub jmp pop data16 jae xchg mov scas inc push xor push push cltd leave dec jb fcoms mov pop xor add (bad) gs ss push negl fild xor add inc mov imul mov push adc xlat sub subl arpl mov (bad) dec push or dec pusha mov push adc add dec inc add jg mov push xchg cli and sbb adc sbb popa jg outsb mov mov push sub jle out cld xchg push out ret bound ljmp push mov and add mov mov nop sub (bad) fidiv in sub push sahf sarl out dec push mov popa inc add leave add lret cmp out mov test jle push cmp adc (bad) fs das (bad) mov mov repz inc in add aad push leave mov fdivrs lds add fcomp push das jp push sub and pop jae,pn pushf push (bad) mov mov iret dec inc add mov cmp in rcrl mov mov movsl sub or fucomip push sub push shrl (bad) mov in adc xchg data16 dec push mov inc mov or test negl aad je cld jnp pop mov es std scas cmc lods stos dec cmp fdivrs fist lahf shrl sti inc ljmp (bad) sti sub mov mov push (bad) or dec cltd lods sarb stos mov xchg lds dec and in add cmp sub dec push add and nop ss lahf add mov mov fisubl adc nop pop add mov push sbb (bad) imul pushf xchg loope mov pop add push adc cmp push in aad insb add cmp movsb cmp push imull popa pop jae or sbb mov cmp rcrw xchg mov pop pop test arpl fs mov dec jmp lods xor fs sub movsb je out push dec jo jge std mov or in mov jge sub rcrb add inc outsb or cmp push add icebp xor mov or js stos ret cmpsl (bad) mov inc movsb cmpsl arpl sahf rcr mov cmpsl cmpsl adc ret pushf adc inc pop add dec and xor push insb cmp mov imul aam pop and adc lret sti gs or push pop push pop bound aam cmp inc inc aas mov push lret xchg and inc test inc dec int3 test sub sub movsl xchg jo scas pop and aam sbb push ret cmpsb fiaddl sub enter mov adc (bad) insb sbb fidiv icebp scas mov xlat sarb xor mov dec jo insb icebp (bad) loop jg outsb mov mov xchg shl repnz fmuls adcb inc lret pop push jns add sbb addr16 push xor mov sub popa push (bad) sub ss (bad) dec or jmp sbb inc dec adcl push aad out lock push pop int3 loope leave popa in nop pop enter std (bad) fnstcw push das fs mov ret push push jns shrb lock fdivl xchg mov faddp test xchg popa in mov push sub push cmc repnz sbb xchg mov xchg inc xchg jmp test iret addr16 jle mov push mov sub mov mov add cmp movsl adc in xor (bad) xor stos cmp jge dec xchg pop (bad) repnz sub pop cmp mov int3 or push jae mov stos push es outsb jge mov sar and add xor and jge add stos jmp mov insb mov nop mov movl ljmp cmp ja sbb imul je jmp add aaa jp jg adc subl dec das mov adc out cmp pop or dec nop fimull cmp loopne std dec test out mov jle cli add shl pop add push xchg sub (bad) mov call scas loop mov dec cmp (bad) lret push data16 xor iret outsb cmp mov fild fwait (bad) sbb xlat and sti cmp push loope mov fmul jnp subl imul sub adc hlt adc pop pop mov ja mov das loope je mov adc inc scas pop fildl mov add xchg (bad) scas sarl xchg sub outsb stos lret cltd mov lcall jmp xlat xlat add bound and pop jle loop aaa mov cmpsb push fstpl (bad) dec loop push decb sbb bound jbe push xor aas xor andl sub pushf sahf repnz cld outsl jp bound mov jns sti outsb adc icebp out add fstl cltd subb jb int3 xchg jecxz jge xchg or mov cmp je imul adc sub dec fs xchg mov push cmp xlat insl jns out popa cmc mov jp jg mov je xor mov xchg pop ja loopne push ret mov push adc movsb push mov push mov inc ds jne popf xchg adc sub inc call jmp sbb adc dec add pop ljmp inc cs pop daa test cmpsl bound fwait pop sub ret pop add inc xor hlt push int3 insb push or stc xchg pop jo jb leave mov call cmp sbb ret test lods jb inc jg stos mov inc fbstp cmp mov add mov add mov inc jnp push pop (bad) test aad fstps into hlt cld inc push xchg hlt cmp int sub sbb sub ret roll or push xor mov sbb sbb jle lods outsl mov mov test inc and dec and rclb adc lret push add arpl sbb jg push pop iret xchg enter add xchg mov pusha (bad) sub orl lret leave js stos xchg leave mov adc iret aaa int3 scas pop gs sub cmp mov sub jne add cmpsl popf mov add mov daa dec ja fstpt mov outsb pop mov cmpsb jo push and pop cmp hlt inc jo out ja dec mov aad pop mov daa jnp jg mov push dec inc sub enter jbe test in sbb lea xchg ret aaa fiadd div stc push test mov mov mov sbb pusha sbb leave in mov fwait mov repnz pop iret arpl inc xor adc (bad) pop jl mov cmp mov mov iret das jp insl push stos xlat aaa outsb mov js inc dec or cmc pusha sub lret dec cmp (bad) test and cmp notb cmp in add mov outsl dec daa or sti cmp loope push outsl gs pop mov (bad) cmpsl mov push adc cmp sbb push jno mov adc mov pop adc push sarl cmpsb je lea jp (bad) dec cltd push cli in fistpll loopne loope loope popa in add mov mov aad lods mov cs in js sub iret inc sub jle push dec fldcw outsl jnp mov pop inc cmp push sti popf and or idivl test sub jl movsl xor mov adc ss push sub push add or add mov inc xchg fidivl inc arpl mov loopne add inc mov inc cmp xchg das mov cmp jb lret lret jo mov lods lret inc mov cmp sbb sbb mov cmp daa lods push lods fimull pop std pushf lds arpl cmpsb push sbb push pop pop mov stc push les push repz jae mov cmp sub and pushf or outsb sub dec and or arpl cmp mov push fidivrl push imul outsb movl adc dec jge rcll mov pop mov out mov stos movsb rcrl mov daa mov sbb lock cmp mov lock jns cmc and sub cmp out hlt push pop jl mov cmpsb popf js (bad) or adc add (bad) adc jbe in ljmp cs mov xor xchg sub (bad) jle dec pop and and fs rcll cmp add lret pop lock jecxz pop inc push hlt dec jge xor fist mov jb inc out repnz (bad) mov xchg into mov push (bad) (bad) push mov and (bad) cmpsb aas in fisttp fisttp xor pop jns jne jp testb iret fiaddl bound insb inc (bad) push and push pop or xor inc fild fs mov les cltd je mov dec addr16 xchg push data16 pop lock ja mov inc or pop rorb pushf ret sbb ljmp or test out and das cmp or outsb out fbld push data16 cwtl in push out mov sub rol cwtl xor mov mov aas dec fmuls jo jmp mov jns popa negb fwait outsl xchg out mov cmp adc out xor cmp out xchg lea cmp bound adc fldl jmp sub into dec mov mov imul push lods fstpt aam fisub insl incl jo jmp popf aaa sbbb jns adc push shlb push xor jecxz sbb or dec push mov stos dec dec scas aad jmp lock push dec cmp adc and cmp xor mov dec fadd clc cmovno pop adc mov pushl mov iret dec or sbb fsts call pop hlt scas jge ja (bad) push push adc xor sbb push mov test and inc arpl imul mov cld xchg cmp jge ret repnz test (bad) xor leave ja cld xchg fisttpll out adc aad xchg out mov decb mov iret push xchg push dec jecxz jle loope icebp add add sub ljmp push test aas cwtl add fs xchg mov aaa mov mov push push push mov adc mov xchg xor (bad) jb mov xor popa outsb popf jb inc inc lea adc jns xor mov adcb test fdivl or mov cmp mov fadds push mov int3 test scas push out adc inc push sbb lahf js inc int3 loope aas mov cwtl test xor adc or lahf pusha jne pop sub std cmpsb icebp ds pop and mov in adc sahf ffree mov ja clc pinsrw rolb in jo addr16 insb fimull xchg pop loop rorl dec dec cmp iret mov cs int3 aaa and inc movsl les lds enter jns out adc pop mov xor frstor jle mov stos mov fs mov mov lret lea sbb adc jo sub repnz cmp mov and mov imul xchg repnz inc lret shrl sbb dec xor xchg xchg jmp dec push adc adc push inc pop dec cwtl mov rcll add mov mov imul pop ficompl inc inc (bad) in fwait shll sbb jg lret clc es add fisttpl cld fisub mov sbb dec inc addr16 je pop subb mov les dec push outsl loope mov or push jmp inc (bad) mov enter mull xchg sub pop fstpt jns xchg mov xor xchg out and fsts xchg sub hlt sbb ds mov lret push jnp jecxz mov lret mov int cli jg cmc inc loope jnp out push bound inc movsb test inc add imul jbe jmp and in inc aad mov loope imulb outsb aad sbb int3 js adc dec inc push fdiv mov stc mov fstl (bad) iret or jg add xor lods mov lcall ja mov in mov add push jge,pt (bad) xchg test adc pop ret mov mul cmp xchg mov test lahf hlt pushl xor cmp lock loopne gs leave jge cmp loope es dec negb cmp int repnz dec adc dec add pop xlat sbb out jb xchg xchg sub ds xchg lock das push mov dec scas iret inc push xorl mov int3 pop pop push leave xlat pop xchg and std push imul aad arpl mov popf add sarl fild cmp inc data16 lds ret mov subb call dec xchg ret dec jbe orb mov rcr push loop and imul jo push sub loopne sti sub xchg cmp jno stc arpl mov (bad) pop out cli test dec jge jle jle insl mov clc push add xchg rcl das dec pop and rorb push in xchg (bad) inc jp fdivp adc hlt jmp lods add pop sbbb mov jno in add jecxz in jmp stos leave (bad) repz stc and pushf test out (bad) sarl jne or (bad) icebp dec jle lret pop cld cld frstor inc dec push xchg xchg loopne cmp repz push cmp push xor fimull (bad) loope pcmpeqd cmpsl lret ficom cmp rsqrtps sub call push pop jg sub outsl xchg push adc and fadd dec testb push sbb cmp xchg and xchg inc loopne pop stos dec pop adc jle mov or imul inc and jno inc pop mov mov dec out mov movsb jb cmpsl aad adc mov pusha sbb inc pop jns pop push sbb lret ret cmp inc clc stos add sbb pushf fdiv inc mov fs mov inc mov test stos scas test and add pop sub das mov scas sub jbe mov mov add sbb in aam sub ret pop and aam loope cmp push cmp rclb pop lcall pushf jle ffreep loop cmc xor sub jecxz out mov (bad) push rcr inc pop fsubrs fisub addr16 xchg xchg jle inc mov lret ss jg mov inc lret sub add add push orl (bad) popa sub ja mov sub push nop js fnsave rclb int3 fwait scas xor enter lret jnp repnz lea mov (bad) lea inc jne cmc in lods loop bound pop xor pmaxsw out enter and cmp (bad) aaa lret jbe enter xor cmc or dec add leave fucomp mov jle hlt jmp add inc xchg or adc and sub scas mov out jl loopne jge mov cmc xchg stos push ja lret xor js xchg push ret out data16 and loop mov out push sub lret inc loop aaa out push xor sbb pop xchg mov push dec in cli pop imul outsb sbb or lret mov in (bad) adcb pop xchg dec out jnp (bad) negl (bad) leave aam setnp and les adc nop mov (bad) mov xchg (bad) adc jle cli out ret sahf mov adc mov test movsl lret in inc xchg push adc les xor cmp push pop test inc mov fnstcw pop add subl dec sbb push das and mov test ret jnp adc cld sbb or xchg ret shr mov and test movb jmp outsl cli repz repnz dec adc icebp out int ret xchg lock cmp inc dec repnz pop cmp mov adc xchg dec pop push cld lret push dec cli add xchg sub sub add mov push mov sub fwait out (bad) aas test ljmp daa and push iret (bad) fistp insl pop pop cmp popf test cmp sarl imul addr16 xchg ds pop or shll pop nop adc or fidivr or idivb test mov mov out addr16 jns (bad) jno outsl cmp pushf lret inc sti jae popf and int aaa lret lds leave stc cmpsb lds fisttp dec adc cmp adc lahf repz mov (bad) sub aam cld mov mov lock xor icebp sbb into sbbl out mov or add sbb (bad) aaa sbbb push cmp jno cli sarl movsb xchg cs mull cs out jnp fildl fs mov sti jns cmp loopne pusha sbb out pop mov cld test mov pop xor and pop mov outsb in ljmp (bad) xchg aam shr aam es mul flds cld mov mov jo push or test fsubrl mov pusha stc push inc (bad) (bad) into add cmp mov push int psubb push add sbb repz mov ss in mov mov jl rorb xor fs aad push and movb inc dec (bad) adc add mov adc int int3 cmp addb adc inc sbb push add fnstsw repz mov lret cmp imul sub addb jge xor pop lds ret fldl sub mov lock mov cmpsb or pusha (bad) imul stos add pop shrb xchg mov and imul push sahf or xchg or jmp sbb cmc push sti (bad) sbb sub jo test push or jne inc pop movsl out jae jb add sub loopne out arpl push inc jbe aas mov pop mov mov mov jns incb (bad) or rclb stos mov mov jbe sbb cmp mov movsl add mov jecxz mov jle jg rolb pushf add inc xor sbb pop push imul in pop cmpsl dec xchg insb sti fdivrp and rol add popf cli insb dec jecxz js mov les mov and inc lcall (bad) das sbb jno aaa xor cmp jbe mov aam mov sbb push orl lret adc dec les mov pusha pop mov jnp es lea adcb mov add (bad) in or xchg dec lods and or cmp mov sbb std push es xor aad stos fidivr out lock sub xor fucomp adc sub addr16 sahf lret adc sbb mov bound cmc xchg lcall pop inc cmp test jne jo push add nop dec jo cmp jb loopne jl arpl push fistpl xchg jmp cmp out scas jge pop shrb shrl mov mov sti lea mov int3 insl icebp cmp xchg aaa add loop push ret mov fisubr adc xchg mov (bad) (bad) repnz lahf dec inc shl fwait xchg jno push popa mov pushf clc jno paddsw call push cmp (bad) xchg mov fwait or xor cli inc into repz mov pop mov daa repz ret mov mov loop sbb dec std xchg sbb stos mov outsl xchg fbld insl xchg dec xchg enter test lods es clc mov jbe fsubrs arpl fdivs lcall xor sti test push mov jo (bad) flds push jo not cwtl xchg jae and adc cmpsb jo mov lock jnp insb mov xchg cld test dec mov in jae out lcall jne sub dec cmpl ja cwtl je add lea lahf push (bad) push (bad) mov push xchg xchg lret or enter add mov lcall xchg jns sub ds add jmp cld push outsl fld cmp xor outsb or test add and sti adc inc mov cltd icebp jne nop sub pusha mov jb xor pop mov and in out popf in ja cmp xor test es (bad) push and lock sub test rorb loop js pop add sti pop lret cld scas cmc mov (bad) ja xchg out clc cwtl or mov daa in leave pop push test sbb jecxz mov push mov cmp and ret loop popf xor cmp jmp push cwtl adc sar push and lds or clc sahf sub in push hlt dec jle dec fadd popa mov sbb addr16 xchg xor cs mov pop dec lods and jp sti daa inc xchg cmp repz repnz int3 pop xlat hlt pop and into ljmp scas out jb out dec imul test fs dec pop les push jbe pop sbb mov jnp pop sbb (bad) icebp and adc lods jae adc adc cmp cmp sbb push adcl icebp fisub sbb rcll pushf aad jno jp mov jl dec sub push and and sti or adc nop xor jae dec (bad) cltd stos jo mov ss lea cwtl xor popa mov iret (bad) les dec (bad) repz in mov and dec arpl adcl leave in imul jne sub loop pop mov je ud1 cmpsl jmp adc or inc lret repnz push pop lea test (bad) ja cmp or push xchg addl leave mov je addl sub pop dec fimul stos pop fist mov mov lds cld ret cmp jns fmull jge rorl fcom push (bad) mov push sti mov pop push push cwtl scas ja mov rcl jge jmp xor or rolb pushl and dec sub mov xor movsl mov sbb dec jle aaa adc xor add and test mov push gs (bad) nop push clc clc or call mov out fmulp fucomi shl dec cmpsl add mov push add icebp add popa aaa add mov or in daa stos popf xor negl mov mov enter push aas jge scas sbbl xchg mov (bad) mov out leave jae mov inc roll push imul jg aas rolb adcl outsl xor scas adc jp movsb dec jecxz sub lods hlt pop mov call mov jecxz movsb xor jmp pusha add test mov mov rcr pusha mull pop pushf addr16 fistp jnp mov mov sub xorb push mov (bad) repnz xchg lcall (bad) repz mov pop sub rcrl hlt in push jp insb cmpsb mov pop scas ss inc cmpsb mov add lcall dec sahf jmp mov outsl fdivl mov arpl xchg push cmpsb mov mov xlat inc test add mov dec daa mov cmp add pop std push inc pop cmpsb pop sub jle or cli xchg push lds push add xor push push mov mov mov lret fcomps icebp cli loopne inc arpl test popf jp cld xchg mov xor nop adc cmpsb inc or push aad dec in ja clc or out cmc jne xchg rol pop cld ds mov xlat das add sbb arpl sahf sub or gs xchg mov inc mov fcoml fstpt fwait insl lock add (bad) mov pop cmpl loope mov xlat sbb jnp outsb inc hlt xorl jnp inc bnd adc sub lahf arpl cwtl mov mov push orl sub les enter mov xlat cmp in pop mov adc push clc int3 inc mov (bad) (bad) lock leave mov push or notb or pop cmpsl addr16 iret fcmovne pop lea adc mov sti push and mov pop mov add aas cltd ret dec aad call out sbb (bad) rorl mov rclb xor das jns movsb xchg xchg or xchg sbb imul xchg leave test jne pop pop ret cmc leave (bad) scas and sti push mov inc cmp cwtl xorb jae or pop xor jg pop popf movsl fsubp inc in xchg inc add cmp aas add int add addr16 out add mov xor test adc add sbb into push sbb dec ret aaa js ja sub push add sub dec sbb sahf add push mov pop inc mov subl insl sub mov mov add and sub add mov and inc mov and into leave and lea xchg mov cmp xor and fsts push sahf push add pushf out nop cmp cmp cmp insb cmp repnz int outsb cmpsl push imul gs out cmp dec leave (bad) mov int3 mov idivl shr ficom andb cmp les ffreep adc and push push (bad) out fdivrl sub mov lahf push jl fnop std sub or or sub pop or repz popf and sbbl add test dec lods adc cld cmpsl jo stc adc fs jo gs inc xchg (bad) icebp (bad) cmp xlat push popf dec lea je cli pop push mov jge in (bad) xchg inc jno dec or lret cmpsl outsb ds push cmpsb cmp inc leave ret xchg xchg push scas movsl (bad) xor push xchg dec sbb cmpsb mov pusha push lret xchg aad fmul jo push cli (bad) aam push cmp (bad) xchg aas (bad) and ret sbb nop cmc dec push fwait cwtl mov xchg xchg leave inc mov dec lock mov scas mov gs int3 in repz jbe mov xor flds clc pop inc fcomi xchg mov idivb inc cmpl sub loope mov mov (bad) aaa scas adc cs movsl and int inc push mov inc cmp and out test mov fnsave xchg xor daa repnz mov lahf cld cmp leave stos or adc inc jnp ret cli jno jge pushf jp jnp shlb mov orb in sub lcall push cli adc int3 lcall xchg sub scas pop or adc leave out pusha push mov add lods movl les inc pop jl xor movsl imul mov sub push adc mov mov jae,pt repnz mov lods clc add ret out cmc fs inc rorl sub push pushf add les inc jbe or sub add push lds loopne sbb xor dec rorl jnp push in jg (bad) mov push mov xchg outsl lds xor jge cld sar testl xchg stc aaa xchg (bad) push mov sbb cmp mov ja cmp xchg xchg xor enter int push jno adc test clc sub pop inc clc pushf xchg scas jb pop push pop inc pop add (bad) negl jno add ds inc dec pushf loope inc xor and jnp xchg (bad) add gs loop cmp or (bad) mov jnp fcmovu add xchg jns gs (bad) mov call mov jg jmp mov cli push mov (bad) enter sbb xchg in jg sbb outsl or sbb fwait pushf fsts (bad) clc push push lahf movsl push sarl xor rorb out push jne sbb and or fwait pop mov inc dec imul dec add jg mov mov add (bad) sub loopne fild and sub pusha subb fidivl pop es mov fisubl sub mov adc data16 lahf xchg mov sub dec stc ja cmc push mov mov aad subb arpl mov mov fs mov std push add sti jecxz and add clc cmc sub orb (bad) sbb and into push mov and out or into inc out std push xabort xorl aas sahf sub cmp pusha (bad) push cmp popa pop push jnp push pop add scas jae ja jg push pop or mov outsb rcpps js stc mov add pop sarl pop inc pop imul loopne mov stc sarb icebp pop es pop xchg mov sbb xchg xchg push adc mov jne and cmpsl sahf cltd and pop or or ret push or jp mov cmp (bad) into xchg sbb scas inc stc jl pop xor cmc jecxz push and sti add dec mov cwtl (bad) mov inc (bad) pop ficom xor les xor push inc ds push mov and sar insb in dec test leave mov (bad) (bad) (bad) repnz paddq jp mov mov mov lahf in push lret lock jmp or dec lret mov pop jmp inc pop xor (bad) ret imull mov lret jae mov mov mov sahf add adc outsb outsl adc outsb mov dec jno fdivrp je decl ss loope xor daa mov cmpsl mov lret cli mov insb sarl fsubs fstl inc mov test dec xchg xchg dec pop fadds cmp popa aaa xchg pop and cwtl cwtl xorl loope cmc mov mov xchg mov fdivs out pop sub add adc jns pop rorl pop and mov lcall cmp lcall (bad) sbb outsl and mov aam jmp sti sbb mov dec push cmpsb dec outsl dec cld jae lcall sub sahf mov jo bound inc int xchg das mov fucom or fwait movsl mov call pop jae dec addr16 adc mov in or xor bnd pushf cltd sub push push mov sbb or mov ljmp int cmp and fisttpll test and daa add inc icebp stc mov hlt sahf mov add test and hlt scas xchg push in cmp xor jl inc (bad) mov jg add jbe add pop xchg xchg jne lret adc jmp jmp mov mov test inc xchg cwtl and inc lret imul lods mov cmc loopne stos mov cld in das mov outsb popa js in fsubrs outsl fmul std jns iret daa cld daa scas dec push mov cmp dec test mov ja shrb in sbb enter ja bnd xchg loop jp popa sub aas clc pop outsb jbe pop xchg and ret sbb mov jns sahf push iret cmp sub cmpsb mov push mov push lods jge jp and movsl push dec xchg lret add mov popa inc cmpsb cmpsb sub loopne push xchg repz ds enter push pusha push mov mov lcall mov (bad) mov xlat cmp or mov cmp push pop (bad) jb sub popa jecxz push jge roll xchg mov xchg (bad) out mov lds cmp mov cld mov adcl fsubrl or and push sub (bad) dec imul cmp fsubs movsl pop bound add mov mov iret inc xchg sub rcll ret pop pusha pop ret adc add movsl (bad) mov adc push push bound mov xlat fisttpl pop or shrl sbb shlb int3 aas add xchg add jecxz imulb jns ja insl pop rcll mov (bad) pop push inc lds pop sub in inc imul pop out lds sbb add je push popa xchg jecxz jb xor add push cmp push repz lret imul jns dec and out rcrb pop add jle pop test js adc arpl movsl cmc mov lods mov and cs pop (bad) jno cwtl cs or loopne icebp fistpll and (bad) popf lods (bad) dec sbb dec and loope imul call bound cmp and sub xchg add out bswap jbe cmpsl cmp mov int loope adc sar mov sbb pop popf dec jl mov xchg fcomp iret cs test (bad) out rcrl sub stos jmp stos and jp lret stos pop mov sbb data16 out fild or jp add out pop shlb jbe xor popf outsl ljmp dec cltd cmp xchg xchg push fs mov (bad) in jae (bad) loopne jnp sbb xchg xor dec or mov lock mov jecxz and mov jno sbb andb xor xor adcl sbb cmpsl pop divb jge mov js inc test push std inc sbb rolb sub daa sbb ljmp mov jne sahf cmpsb mov xor mov test fwait fwait xor clc jl sbb daa sbb repz push into mov pop mov dec loope rcl test pop cwtl pushw inc inc jno mov and in mov sahf out and xchg cwtl dec pusha repnz scas mov cmp mov cltd out iret scas decl out sub push add fmuls mov (bad) movswl and adc xchg xor lret sub push out mov adc out outsb jbe aaa jp xor mov test mov lea divl push push int jge sbb and cmp pop sbb xchg and sbb loopne scas or inc rcrb pop inc test cmp sbb fstp adc xchg or dec loopne xchg mov sbb cwtl movsb scas mov and jne xchg sbb pop roll xor xor int3 cmp and dec xor jge into das mov jns (bad) pop rcpps cmc xor addl jg push add mov xchg insl mov cmp xor fcoml jbe mov xchg fyl2x adc mov jmp shl and call je push testl mov mov inc arpl aam xor imul lcall pushf cwtl sub loope repnz mov (bad) pop test mov into cmpsb fbstp and aaa jg jnp aam xchg mov sub sub xor cmp call es pop js push mov dec xchg insb pop mov xor aad xchg cmpsl cltd cltd inc push aaa pop fidiv push mov mov adc jne imulb stos sbb imul icebp jo arpl fsubs aaa lahf cmp add (bad) mov test mov sbb inc mov out add dec jle adc push mov pop (bad) scas ja jnp cmp lcall and ret mov lret movsb aas mov (bad) pop mov loope xchg and das js mov push pop xchg mov jl fnstenv adc add jl sbb sub inc ret jp fisubr mov fsubs mov inc xor into int3 andb cmp (bad) or jmp movsl jns mov inc loope push lods inc dec out push and lods sarl mov pop xor mov enter data16 fstpt xor movsb sarl call sti test (bad) hlt mov in or cmpsl add imull mov pop int3 outsb pop test popf and mov mov ja (bad) adc jo repnz imul fdivl dec mov imul xor mov pop cld sbb jecxz roll add xchg and xor outsl pop jg add rorl movsb xchg xchg xchg dec aaa (bad) cld outsb ljmp stos jg and inc iret mov daa fsubl rolb sbb mov mov fwait inc (bad) cmc loope fiaddl pop repz or cmovle clc leave movsl (bad) aaa adc and jae mov mov adc pop ret mov adc sub pop adc (bad) or add imul lret push xchg ss add jecxz mov addl (bad) ficoml cmc mov or jbe or push jmp sub sub cmp iret iret push xor iret (bad) and jb sub sbb outsl add ds pop out mov cmp out inc or jb gs mov pop mov lcall lahf shr sbb cwtl cmpsb sbb ss xchg scas andl xor js mov cwtl stos mov pop mov mov ja,pn data16 daa sbb test leave adc jbe cmp addb hlt push xchg ljmp inc xor xchg push inc ficoml pop in fs nop pop adc mov pusha fdivrp pop int cli push and fs insb adc xchg cld repnz ror pop das jno or add into xchg xchg xchg ficompl jb fstl (bad) cmpsl fsubrl or cltd mov lds sub sbb inc test rcrb aas inc push icebp out and iret inc stos ljmp xchg add inc mov cmp je cmp sbb pop int scas in inc sbb leave push not and pop adc test cld add mov mov dec cmp jb push xchg pop jae aad sub inc push cmp xor push aaa and addl push mov pop jns add pop fistl xorb loopne sbb push ret jne leave cmpsl roll mov in xor push rclb cmpsb xor out adc xchg jns clc aas jnp mov std (bad) jae jle fs mov mov dec les dec call mov pop hlt movsb loope pusha mov jle loopne push hlt outsl ljmp flds pop cmpsb sub ss cli imul or cld lods xchg les mov aam insl xchg xor in jbe nop lds mov incb dec sbb mov xchg (bad) adc sub fsubrl mov popa aad insb aad inc call (bad) xchg jge mov clc jp jmp cmp popf popa mov icebp or and mov and into xor ljmp iret mov and adc lcall frstor out out inc in push mov xchg cmp inc bound ja int3 and fimul movsb cmp lock ss je or pop push xor test cmpsl mov dec mov insb push inc mov cltd addb xchg push test aas adc jp aas ud1 mov xor in cmova cmc imul je and mov das mov add ret cmp sti jno lea andl call in mov inc xchg je inc bound sahf out cmp sub and cli or mov xor mov nop fisttp (bad) sbb sbb loop repz iret sbb xchg push inc pop cwtl and scas push dec dec pop mov test mov int3 inc stos add mov xor jg dec pop sub mov imul cmpsl add or push and mov test sub jns nop in cmpsb je adc (bad) dec (bad) inc paddd sub std fisttpl je push cmp fnstenv inc mov jnp mov (bad) ja std scas mov sbb les xchg sub (bad) jae movsb cli fdivs push dec mov sub dec lret ds insl in sbb test pop sbb pusha or inc pushl dec xor ss xchg or xor push int jb lods cld stos popf dec das dec (bad) xor lods xchg cmp (bad) jmp sbb or mov xor bound adc push sbb (bad) aaa cmp or fwait mov leave cmp push loop mov and jmp enter mov adc lfs mov adc mov aad test jb cmp mov cmp shl int3 sub stc je mov gs mov test dec cmc fsts cmpb inc jne out mov aaa push pop or xchg xchg lcall push push sbbl (bad) int push enter push or or fidivr and mov or mov lea pop out out or gs (bad) test mov shl test mov mov (bad) (bad) mov and cli mov jb mov push test (bad) cmc pop sbb std push cmpsb and (bad) repz sub sub in ja mull inc ljmp pop inc or jp aas adc sbb sbb sub loop mov icebp add jnp lret es mov jg pop data16 movsl cmp pushf xor out stc dec fstpt lret adc inc repz or and lahf loop loopne jle (bad) fisttpl fbstp (bad) xlat popf xor enter aam cbtw xchg ffreep cmpsb push inc xchg fdivrs or dec out cs loope push xor mov sar dec pop sbb xor pop jae pop in pop sub mov js sbb cmp scas (bad) push sub cmp push xchg push xor xlat stc push jb out cli push and mov dec lcall dec cmp push sbb xchg xchg mov lods enter push cmp mov mov call repz adcl jg loopne mov jecxz mov mov ljmp mov dec mov or pop sbb (bad) fcoml aad es dec roll or sub fsubrl lods (bad) int3 (bad) mov inc inc (bad) das lret adc xor sub jo test jge (bad) int test cmp outsb add mov lods or xchg xchg xchg fisubrl cmp aaa fwait int mov mov insl and insl fsubr cmp cld mov in mov mov sbb rorl andb cltd roll adc dec in andl pop jp dec sub push aaa jl jmp pushl cmp inc xchg movb sub cmp aad pop fdiv mov faddl push test mov cmpsl cmpsb wbinvd xchg mov mov leave int adc ds fdivrl add xor repz sbb mov (bad) hlt ret testl or aam cmp clc jle or or (bad) (bad) xchg xchg cmp cmc mov dec xchg dec xchg mov mov xchg inc out cwtl aaa push add and aad outsl cmp in mov aam cmp test int daa es fwait rclb dec insl fnsave insl adc cmp lret adc lahf lret mov in mov addl fcoms mov loopne insl cmp xor (bad) pop jae xor add out fldt ret cmp (bad) inc xorl xor mov test iret xchg nop inc hlt clc cmpxchg bound add and stc sbb out sub imul and jbe dec bound mov dec inc mov sahf lods ret aad jns adc je adc je iret sbb adc push sti cmp testb mul test enter mov iret adc sub jmp and xchg mov andl or sahf cmpsb pop or (bad) (bad) adc cmp inc inc push ffree lods shll inc js xor push in leave pushf repnz inc jae arpl into inc ret mov jge test pop lret and cmp rcll mov repz cmpsl repz rorl into jae push or inc sbb gs fldt arpl stos dec sbb lds je jle scas cmp out jg lcall sub fidivl dec cmp xor in dec (bad) mov push in push test arpl push mov leave (bad) pop aam test test icebp sub and or enter cmp add fcmovnbe push gs add ds insl fs xor rolb add mov iret pushf cwtl jle jns in (bad) test jne inc les ret xchg mov mov repz jns lret mov int3 lret or cmpsb and test jl sub and ja fstl movsb mov loope cli xchg add jae aam adc es dec pop into sub imul lock adc (bad) fwait roll inc call and dec mov mov xchg daa outsl mov cmp dec xorl adc sbb dec bound aad pop and mov wrmsr sahf rclb scas loopne fbld cs outsl leave cmpsl mov jmp popa popf lods cmp jle adc (bad) inc cltd push xchg push cmp ror or sti dec sub popf or shrl or (bad) jbe and insl cmpsb out pop in shrl sub and dec in sub movsb inc (bad) jle outsb lock sub mov (bad) pop addl pop xor sahf mov cmp sbb in negl gs inc xchg subl pop stos and test loopne icebp jno stc lds leave dec cmc (bad) cmpsb adc shlb push inc enter adc xchg xchg cli mov xor ret (bad) int inc xchg loopne inc jbe xchg dec dec repz and dec (bad) mov cmp insl mov test jns fnstcw pop ret outsl dec xchg inc scas frstor arpl popf int3 test mov dec add leave icebp or xchg fwait push and pop mov popa insb xor and and jg std mov mov lret xchg pop inc add jge movsl pop in in rcrb ret add jp ret rolb and pop shl popf or aad addr16 in jb xor dec jb push loope loopne jg in lahf mov rcrl negl adc mov decl xor jmp mov pop jg (bad) scas xorb bound sahf push icebp push mov addr16 xchg outsb adc scas addr16 stos push idiv cmp xchg cltd out lods hlt jg cmc sbb mov mov or xchg (bad) loope mov push adc push fstl or push push mov jmp gs jge out data16 cli pop gs jmp add dec rcr mov mov (bad) jo jno and mov sbb daa mov jge rolb repz rolb (bad) aam xor push in sahf dec inc dec (bad) imul ja mov daa movsl xor sbb jg cli and push or mov pop or sbbl dec lods inc unpcklps popf sarb cltd jo xchg push (bad) test test fnsave lret add lcall out fsubrs sub sbb xor jo shl lahf and pop insl lods je fnstenv cli jp aam xchg mov ds pushf push mov addr16 mov xor xor and sub push sub jo sbb hlt lods push mov jl push xchg ss lret inc xor add call cwtl push or mov rcrl xchg aas shrb outsb or jbe orl xchg dec xor cmp rcrb and push jmp push loop cwtl jne jp bound push fistpl dec jnp push xlat pop lea mov decl pop xchg imul dec jl push adc ret push inc pop int3 (bad) push hlt cld lahf xor dec sbb pop scas pop repnz int pop mov pop cmp pop (bad) popf imul fldl and and inc add ja xchg enter jecxz div or dec dec call mov shrl mov ds mov xchg fisub popf add leave jmp sahf lods xor dec xor cmpl or jge dec frstor inc inc cwtl out xchg xchg jmp lea dec adc fdivl fxch jbe popa xor xchg es ja pusha fildll or pushf push out ret push inc cmpsb cmp loope (bad) adc loope mov int3 inc xchg fildl xchg scas xchg dec mov in inc cmp and scas (bad) dec int jns aam (bad) push sbb jbe movsb (bad) lods or mov subl xchg mov (bad) sub adc cmpsl int3 pop loope (bad) scas or mov pop push push push in les mov adc in std inc push scas outsb jmp pop adc icebp inc rolb and shrl or sahf fisttpl loop jmp stos or mov jl daa addr16 gs lods fsubrs popf fs dec sub stc xchg pop je cs sbb loop repnz cmp movsl jb mov cld inc and (bad) cmpsb ja lahf stos add lahf repnz shl mov dec repz jl jmp shrl inc js cmpsl (bad) gs aad fimul stos xchg cmp and pusha mov or idiv push mov push pop adc in cld and (bad) pop call ljmp pop js js xchg adc sbb dec xchg sbbl mov pop int3 loopne or mov inc ja mov pusha adc add mov xchg sbb mov jae mov cmp setbe mov in ret cmp push aam push add lods inc mov sbb aad sub push fsubrs in icebp loope xchg cld int popl dec stos imul repz scas test sub adc mov out sub mov push xchg xor cmp push mov cmpsb mov dec xchg stc test rclb stos xchg mov in lcall (bad) xor mov mov push pop gs faddl ret ret fidivr cmc cli out lock fbld mov in out popa add push sub nop add andl cmpsb or (bad) inc lods addl (bad) and add jo dec dec mov mov cltd ret scas (bad) lcall cmp int fnstsw push dec aad sahf sahf jnp dec xchg xor or mov push push mov insl icebp cltd popl mov or scas sahf push or sbb push lret xchg rclb inc xor lret jno enter mov pusha add mov cltd into mov pop cmp sbb dec or or scas fimul vmovdqu dec xor out cmp ljmp xorb dec pop jae ficompl xchg scas leave xchg push das or jne icebp and pop or es popl bound sahf xor lret mov push ficomp aam mov arpl inc sub xor addr16 jmp xor pusha and pop adc rorb nop rcrl inc mov xchg lahf (bad) (bad) add adc xchg scas fcmovu divb out (bad) aaa dec jecxz cmc arpl xor fistpl jo adc lods mov fnstcw leave xlat or (bad) out out in or jl das push insb xchg int3 jbe insl (bad) push cld xchg add jg xchg adc pop jae (bad) mov stos bound inc (bad) jo rcll fdivrl loop loop pushl je dec or jge mov jg dec add sbb push (bad) daa mov push mulb xor int3 mov iret ss xchg push out icebp int into xor sub lahf mov out in int3 out xchg lret loop adc fwait mov push sbb push adc lea imul sbb xchg add aaa mov add iret scas cmpsl cltd (bad) popa mov xor jno mov (bad) mov popf test cmp mov push sub in pop mov inc push and lahf rclb aad mov add out cmp lcall mov divl mov cmc mov pop test cwtl mov pop addr16 aam push inc push loop inc xlat push xor xor mov js sub lahf scas in rorb dec jle (bad) test jb imul popa popa loopne in mov mov sub mov adc repz mov mov push cmp jecxz ljmp je xchg gs sbb or sub mov push aam xor xlat mov mov sub ficoml aad test and xchg push push mov adc std sub push mov dec or adc out loopne out jg push or test stos adc inc (bad) shrb add (bad) stos test inc arpl fist adc add push leave std jg (bad) (bad) aad dec test or cltd cld popa jl int3 mov push xchg pop aas add xor jno jo outsl sub mov xchg and pop (bad) outsl add les add xor pop imul xor mov inc sub pop sbb popa sti loope fs dec adc xchg ljmp mov inc inc cmp mov jmp push loop and lock xlat daa fistl dec pop jne ja mov pop or cmpsl rcrb pop lahf popf repz sub xor test in test push push mov js mov mov iret aaa lret stos push out enter mov inc dec ds repnz cmp push mov (bad) andnps in cwtl jle xlat in cld in dec sbb mov mov and test push cmp pop andl lock add xchg roll mov xchg xchg imul movd sbb cmp sbb cmpsl push inc (bad) pop mov jo aad cltd pop (bad) (bad) and in ret rcrb (bad) adc (bad) es push jmp (bad) aad (bad) dec mov sahf sarb popa or sbb adc aaa sbb xlat pop jne ljmp imul movsl movsb pushf jns mov xchg xchg push loopne pop gs loope mov xchg push sub les sbb lods mov push lods sti test das xor pop mov add dec fs jge mov adcl push or nop fsubrl jns push inc cmp and mov and push rclb lcall mov insb sarb in stos xlat cmp jg inc decl jbe dec push sub sbb pop popf inc pop insb push movsb test jb mov ret dec xor mov push xor fstps mov pop xchg adc adc aam inc out jl cltd or add jb cmp xchg cmpsb popf xchg inc enter in mov dec mov cmp movsl test adc inc addl cmp dec lods push pop jge dec sub adc and daa fild mov xchg aam js pop cltd pop lods sbb (bad) pop js insb lret (bad) arpl or and push cmp inc sbb and inc xor pop mov notl push enter pop popf (bad) sbb and fbld mov push lret icebp mov lahf pop dec mov arpl xor mov mov mov popf mov push sub dec sub push adc mov into fnstcw mov movsb fwait pop fwait mov loop mov jecxz xor (bad) scas orl ds insl sarl jno mov pop call cmpl lret pop add loope cmp pop frstor push mov push aaa jbe jnp mov sub or lea clc fldenv or movb test mov call in adc add cli sub xlat sbbl jmp (bad) pop push std xchg xchg mov add and aad ss icebp xor mov pusha mov cmp mov (bad) cli xchg mov bound movsl aas cltd mov pop or jne adc add inc imul stos int3 (bad) cmc adc or mov sub pop push mov pushf push xchg or dec rolb cmp sub dec iret in mov cwtl push jp xchg sahf paddsw test out leave xor push loop rcrl imul cs leave call xchg sbb fisttp add push (bad) and nop or and mov jnp cmp jecxz stos out push mov mov mov push lods xchg xor inc adc daa sbb js add or int3 mov push gs pop push cs subb repnz fstl or xor or sbb pop lret (bad) sbb sar jg test jo daa lock gs out xchg mov cli popf pop xor push mov xor inc cs imul xor or in xchg shrb (bad) ds adc ja adc ds ds cs scas and or scas mov fwait push lods ret scas (bad) ficoml mov adc pop out xlat pop add mov pop cmpsb in clc or sbb dec jecxz (bad) js shrl cmp jae push (bad) bound and popf cmpb mov adcl xchg sbb icebp dec xchg sbb clc iret jge pop andl pop (bad) mov repnz in xor push and push (bad) mov in in mov or mov sbb (bad) adc jbe les mov dec rclb xor data16 mov pop push add sub dec out lock push inc (bad) cmc mov or stos in jb mov andl fisttpll notl jle push fs imul jp push pop dec movl cmp sbb push lods repnz bound xor les adc (bad) mov mov pushf ja les sbb shlb lea xchg add test push or jge out cmpsb jns pop incl bound repnz out iret (bad) cmp xchg dec pop psubsw dec call push xchg push sbb push push fdivs xor push hlt rcrb or fs inc lret rcll popf enter in repz scas scas shll out lods fisubrl dec mov loop cmovne add lahf cld or std lock jg test adc addr16 sub movsb jns push or cmp xor arpl (bad) decl fild adc out cmp add data16 jns cld xor mov mov int inc in dec inc dec stos mov jo icebp repz das mov sbb jp sub cmc xchg sub pop js,pn fs insl stc adc dec mov mov inc xchg in dec push shr and (bad) add int3 xor push mov mov cmp jmp push mov call mov sub add sub mov pop add (bad) or xchg dec mov or call or lea dec out jnp inc cmpsb cld int3 jns scas pushf add xor sbb and add (bad) repnz dec adc stos pop fadds sbb push popw jle ljmp or sahf rcl addr16 arpl pop add js,pn xchg xchg xor jl lret daa mov movq jns shrl jp mov jl fmull es push dec xor or out pop dec fstl and nop sub les movsl loope inc mov push mov cmp dec out add mov dec arpl mov jp mov (bad) jecxz push and lret xchg adc cs out mov jns mov xchg mov or push test aaa fs push lret sbb mov cmp cmc jg fcomip push sbb mov xchg incb jo and outsb rcll icebp stos xor dec scas scas pop and imul sub sbb mov je push scas fdivrl add mov dec jae test insb bound jae loopne and adc ja sub xchg and sbb pop cmp lock out or jle lds enter inc or xchg push pop mov mov push jmp cmp jg mov pop mov movsb xorl int3 nop popa fldl2e cmp add cltd or sbb addr16 fwait sbb test sub (bad) out xchg jne xor nop enter in pop sbb ljmp and int3 stos push push mov cmp adc lret nop xchg sbb shl nop lock fisttp add jg fimul jae push lret in add add add loopne sbb mov lcall lret pop insl das inc addl dec cltd fnstsw inc test hlt xchg add in lcall sub jl inc call pushf sub les lret mov dec sbb cld scas lret pop insl das inc addl dec cltd fnstsw inc test hlt xchg add in lcall sub jl inc call hlt cmp inc jne (bad) and sbb add test and xchg loope jno popf ret mov xor adc sbb leave movsl push adc mov fcomip lahf int mov fstl mov aaa and sub movb jl test and popf cmp pop xchg mov cli fidivl hlt or jmp data16 cmp inc sbb or mov bound xor js je jno sub aas iretw (bad) sub jno adc in in aaa lret stos lods gs out test movsb xor sahf or loop jmp hlt mov dec mov add add cld bound sbb mov push sahf xor dec push xchg dec leave pop scas outsb mov fisttpl dec pop ljmp rclb cmpsl orl push cltd mov and and or mov jb sbb mov dec push neg mov pop movsb mov sbb pop mov dec pop xchg xlat dec insl and loopne sub inc sub addr16 and sbb jb cli popa xchg sbb pop mov pop std cs mov lock mov adc cltd sbb push push push in scas shr repnz inc sub addr16 and sbb jb cli popa xchg sbb pop mov pop std cs mov lock mov add adc adc or push sub or xor push cmp adc pop sub sub add je add pop add add add add add add add add add add add roll add sub add out add add add add add add add das add add add add add add (bad) lcall add add add add add add add add add add add add add add add lock add add add add add add xor add add add add jb add cmp add add pop or pop or pop and sahf adc and fsts and adc popa cmp (bad) incl pop or pop or pop and add dec popa sahf adc and outsl jo pop and cmp (bad) (bad) incl push push push xchg pop push xchg pop and add or lock loopne scas nop popa cmp (bad) (bad) incl pop or pop pop or add pop push push pop push xchg pop pop push xchg pop and sahf push pop clts pop setne pop setne flds mov pop sahf pop push pop adc or add add and add adc or dec ret pop and cmp (bad) decl or mov aas adc pop or or insl sahf and mov (bad) incl sbb sbb and add or jae xchg cmc pop and sbb (bad) (bad) call adc push icebp sbb add daa (bad) (bad) incl pop or pop or pop pop or pop and sahf adc and and cmp (bad) (bad) call add add pushf adc and ja pop and cmp std (bad) incl or or sti push dec inc push insl sahf adc and and jmp (bad) std (bad) incl adc xchg push adc pop maxps jle mov cmp adc (bad) and add and add shlb andl pop or cmp sbb sbb and sahf push sbb sbb and add dec popa sahf adc and lea pop and jg mov (bad) incl adc pop maxps adc pop maxps sbb fstpt and and cmpsl popa cmp or mov mov push or or pop cld pop xchg pop and or popa cmp std (bad) incl push push push xchg pop push xchg pop and add dec popa sahf adc and and test cld (bad) call add add pop pop adc adc add pop pop sbb adc and and push mov pop adc or movsl in or and xchg pop sub cmp push pop xchg pop pop xchg popa and add dec popa sahf adc and in pop and cmp add adc and rclb outsl pop and daa punpcklwd push push pop adc or add adc add add adc adc adc imul adc and jne cli pop and dec loop popa cmp cld (bad) decl pop pop or jge xchg pop and cmp cld (bad) incl sbb sbb lret dec imul or (bad) jmp adc mov (bad) lcall adc or outsb or or dec add pop and jg and cmp sti (bad) incl pop or pop or pop and add dec popa sahf adc and adc mov sti (bad) call add add pop push rcrb cmpsb jbe and cli cmc popa cmp push pop pop adc adc and stc aad pop and add inc popa cmp (bad) decl and pop es adc adc and arpl and xor mov (bad) call or incl add pop sub stos xchg and adc repnz or sub cmp sti (bad) call push add sub push and mov cmp or hlt and push pop and fcomps popa cmp sti (bad) call adc adc and push mov and mov popa cmp cli (bad) call or sub add or or or mov and ror stos popa cmp cli (bad) incl sbb sbb and add dec popa sahf adc and ret pop and sub popa cmp pop pop adc and sbb movsb cli (bad) incl sbb sbb pop sbb pop and add or repnz sbbl popa cmp or jl sti inc pop and imul cli (bad) call or or sahf sbbb sub and cmp (bad) call or add adc push add add adc or add and loopne add and add or add or xor sbb (bad) cmpsb popa and pop inc adc add scas add add add add add add add cltd add add add add add add add pop add add add add add add add add add adc add sub add or push add add jae add or add or or pop and dec aas mov sub add push or and sahf add add or inc mov pop and cmp (bad) call or sub or (bad) scas xchg xchg pop and sbb aas (bad) (bad) call add add xchg jle add add xchg push bound add add xchg pop adc jle add add xchg pop sbb outsl adc add adc adc and and dec mov (bad) incl and push mov sub add adc add adc add imul adc and outsl cwtl xchg pop and inc out cmp (bad) (bad) decl and add adc add or adc and jmp clc jbe mov (bad) call push outsl pop add or add adc adc and jo pop and mov cmp ljmp or add or or lock movsb pop and adc push (bad) incl push push mov adc or jge cmp test popa cmp (bad) call pop mov or inc jge outsb and inc jno and push cmp pop pop popa cmp (bad) (bad) call pop push add cmp mov icebp sub adc (bad) call add or adc and aam pop and lea (bad) call add sbb add adc and ficomp inc pop and push dec pop popa cmp std (bad) call add sbb add je add sbb add or pushf nop gs and (bad) clc popa cmp adc pop outsl sbb add adc adc jne add add mov and sub std (bad) call sub xor add add adc or add add or push add push sub add push sub add push sub add push or bound lds and mov pop sbb sbb add mov add add add add add mov add add add add add mov add xor add aaa add add add add add add add inc add add add add add add jle (bad) decl add loop add in add add add add fadds add and add add adc into mov movl (bad) (bad) call mov fcmovne cwtl pop and in out cmp call mov pusha aam pop and sahf popa cmp (bad) (bad) incl sub and dec mov sub and dec fistl (bad) call adc and xchg jne pop and pop in cmp cmp add pop adc sub add push adc adc pop adc and out (bad) (bad) incl or and add add add sbb pop rolb and inc mov (bad) call or pop aas pop add or or push pop pop adc adc and and in popa cmp pop pop or mov inc je pop and mov (bad) incl sub arpl lea add add add mov jl mov inc cld cmp (bad) call or sbb add adc adc imul adc and int3 xchg (bad) popa cmp (bad) call adc adc and pushf loope pop and cmp (bad) (bad) incl sub add push or fcmovbe int3 pop and lds popa cmp (bad) (bad) decl push mov or cltd out pop xchg and mov cmp std (bad) call or adc and jbe stc pop and cmp std (bad) ljmp adc add or adc add or mov push aam pop and scas push popa cmp std (bad) incl mov pop jle add add imul or sub and notb adc and pop mov std (bad) jmp popa ljmp adc push adc mov (bad) les divb ja (bad) incl adc add sub add push and or bound cmp and mov pushf and (bad) call or or jg mov (bad) call or adc mov adc mov sub stos pop and movsl lock popa cmp std (bad) call or sbb add je add sbb or or sbb add adc mov enter and cmp cld (bad) call or mov cwtl stos pop and loopne (bad) call push adc and pusha fsubp and push push (bad) and (bad) call add or add add adc adc and sub pop and mov popa cmp sub add adc pop add add add sub add push or loop icebp and mov adc pop or or add xchg add das add add add add add mov add add add mov add add testb add or add push adc and and and cltd cmp popa sub or out lods mov int3 xchg xchg or and add adc adc pop sub add push adc adc and lds and inc insl mov cmp (bad) call add das or popa fisubl dec and lahf cli dec and (bad) pushl add push or or cmp data16 pop and sub cmp (bad) call adc or sub cltd pop and sub popa cmp (bad) (bad) incl sub add push adc outsb push adc pop aas pop bound and push phsubw (bad) lcall lea add or or sbb pop add push adc and and add popa cmp (bad) (bad) call add pop adc or mov and cmp (bad) (bad) incl sub or pop push adc adc or add push adc sub adc add inc add add add adc aaa add push and xlat shlb std add inc add add loopne (bad) incl add add add add adc xor add push and mov sbb sub sub add push sub add adc or cmp add pop add adc fdivl xor sub add sub and sub and jecxz lods popa and inc pop add add add add (bad) (bad) jmp add add add add cli add add pop sub add push or and add adc and (bad) lret and sub mov add add or lea add add add and sahf enter add sub push add push mov add push sub add push sub lret sub and adc and loopne loopne popa cmp (bad) call push pop add push jae add or and add or cld cmp (bad) call and add adc and xchg pop and push call (bad) (bad) call sub add sub add push or and cmpsl xlat pop sub add pop lea add adc add shrb add add sbb add mov add push or sub cmpsb inc and int and jl add popa cmp (bad) (bad) ljmp adc add or add or add add add add push sub imul jnp and or add mov add add add add add add add add (bad) (bad) (bad) cmp sub add and inc dec pop sub push sub inc inc and mov cs sub add sub pop mov add pop and dec push pop popa sub add push jae add or and push pop sub add push push sub add push sub add push and add add sub add pop and and cmp sbb (bad) call add push pop and and lret xor das (bad) (bad) incl sub or sub mov and xchg and adc (bad) jmp call das add push cmp (bad) incl adc add add add adc add adc add add xor or add push add adc add push add or adc add push add add add adc pop add or add adc add pop add add add adc outsl and add sub adc add push add add add adc and add sub add xor add add add add adc outsl and add sub adc add pop add add add adc jae add or add xor add add add add adc sub add sub adc add pop add add add adc outsl and add xor or add push add adc add add or adc add pop add add add adc sub add or add xor add add add add adc sub add sub add xor or add push add adc add add or adc add pop add add add adc outsl sub add sub adc pop add add push add adc add add or adc push add add add add adc add or add adc add pop add add add adc jae add or add xor add add add add adc outsl add or add xor or add push add adc add add or adc add pop add add add adc sub add or add xor add add adc add xor add sub add adc add or add push add adc add xor add sub xor add add adc add sbb add sub add adc add or add push add adc add add or adc add pop add add add adc sub add sub adc add pop add add add adc jae add or add xor or add push add adc add add or adc add or add push add adc add add or adc add push add add add adc cmp add sub add xor add add add add adc sub add or add xor add add add add adc cmp add sub add xor add add add add adc cmp add sub add xor add add add add adc outsl cmp add sub adc pop add add or add add add or and dec push jnp popa and pop inc or add xchg add add add add add add add mov add add add add add add add add add add and add jae add push or or xchg (bad) push xlat pop and add or lea add or or xchg or pop and loope popa sub or mov sbb and fnstenv bound (bad) call push push adc or (bad) add and sbb popa cmp (bad) incl outsl add or add pop cmp (bad) decl imul and ret iret dec (bad) popa cmp outsl sub add pop or pop push adc adc or add push adc and ljmp insb pop popa cmp (bad) (bad) incl or sbb add or pop or add push adc and (bad) pop and cmp (bad) (bad) decl adc add pop aas pop bound adc pop adc or (bad) fxtract ficomp adc cmc stos popa cmp push pop jae add or pop adc and and or jle cmp push sub add xor add add adc and pop and and add push add or pop adc or cmc test adc inc das fadds cli popa and pop inc and add add add add add add test add add add loopne add add add add add add add add add add add add add add add add add sbb add lret add add add add add add add add add add add add add cmp add test (bad) (bad) ljmp add add add add cmp add add add add popf mov lahf (bad) mov (bad) decl or or popa or (bad) cmp (bad) (bad) call pop push adc push xchg or xchg popa sahf adc xchg mov enter cmp (bad) call or adc or sti jo mov sub and cmp (bad) (bad) call adc or jbe xchg fstpl fcmovu xchg jnp cmp (bad) (bad) call or push and adc pop sbb or or and add or and add adc pop pop adc adc sub and pop and ja popa cmp adc and popf (bad) (bad) call or sbb divb pop popa cmp or push and adc pop adc adc mov xor pop and fdivl popa cmp (bad) call pop pop or pop pop or or or popa sahf adc pop or xchg or or pop pop push adc pop push xchg or push xchg popa sahf adc fdiv sub popa leave and daa (bad) (bad) call or push and adc push rcrb sti jne and pop mov add or xor add addb add or add cli pop and add aaa popa cmp std (bad) call pop adc xchg adc and aad (bad) call or test je pop and cmp std (bad) call pop sbb pop sbb sahf adc sbb pop sbb sahf adc sbb pop sbb sahf adc jno movsb sbbb mov mov (bad) incl sbb lea add adc adc fcmovu jl pop and xor scas popa cmp (bad) call add or inc int int sub and cld int and (bad) call pop pop or pop pop or popa sahf adc dec repnz pop and fistpl jmp xor (bad) call or adc or sbb (bad) std and xchg (bad) mov std (bad) call pop push adc push xchg or xchg popa sahf adc cmc inc movsl bound mov cld (bad) call pop sbb pop sbb sahf adc sbb pop sbb or sbb or or push mov in sub popa cmp cld (bad) call or push and adc rcrb dec in and cmp or sbb or jl pop pop and cmp pop adc pop adc sahf adc pop pop adc and push (bad) call pop pop movups pop setne pop setne push adc adc lods stc in pop and sub js cmp (bad) decl or sbb or add sahf adc push enter and mov fbld es (bad) call pop pop adc pop xchg or xchg popa sahf adc pusha xor pop and aad popa cmp cld (bad) call add adc or lea shll fs and (bad) call pop pop or pop pop or popa sahf adc pop or pop pop or popa sahf adc inc les inc lret repnz cmp lea add add pop adc je,pt negb pop ret rcll (bad) call add pop adc or cmpsb clc fwait mov test popa cmp add adc or cmc add add add adc and cmp pop and adc and cmp and add pop pop adc adc add or add add add add cmpsb (bad) (bad) decl add add add sbb add mov add add add mov add add add add add add add add test add push outsb pop push or jge ds and (bad) pop dec and outsb push push or xor xor and push xchg and (bad) (bad) jle add add adc push adc pop sub add or push movsl add add or pop and aam insb pop and cmp (bad) call lea add sbb pop dec addr16 and cmp (bad) (bad) call add adc add (bad) (bad) (bad) aas pop adc adc and lods jg pop and bound (bad) call pop and pop dec pop and repz popa cmp (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc or shll popa cmp add add or (bad) sbb add sbb sub add adc and xor stos pop and dec loope cmp (bad) decl push mov or pop and jae pop and cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or and add jle add add or add or add or or pop and and insl outsl popa cmp std (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and jle xchg pop and cmp pop and and mov popa cmp add sbb xor add outsl aas add or add or push adc and mov pop and sbb popa std (bad) incl pop push or pop and and aam popa cmp (bad) incl sbb add outsb sbb or sbb jl and xchg inc pop and sub xor std (bad) incl sub add adc or mov add or add add inc bound pop and mov add pop push or cltd cmpsb mov (bad) lret adc pop push pop inc push add add add add add add add (bad) (bad) pushl add addb add add add add add add add add add add add cmp add jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or and add jle add add or add or add or or pop and fsub pop and add inc (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc sbb xor add outsl aas add or add or push jle add add adc push adc pop sub add or push movsl add add or pop and and push xchg sbb jl (bad) incl sbb add pop and decb and je les fs (bad) call pop and loop pop and cmp (bad) incl outsb sbb or aaa mov and add (bad) (bad) call lea add sbb pusha aam pop and cmp outsb sbb or inc enter sub and adc and aas ret mov popa cmp std (bad) (bad) jle add add or (bad) sbb add sbb sub add adc and and imul std (bad) incl outsb push push or inc into cmp and mov mov add adc add (bad) (bad) (bad) aas pop adc adc and adc pop and cmp pop and and add popa cmp push mov or pop and and adc (bad) popa cmp (bad) incl sub adc or lsl add add adc and push fmuls pop and adc and dec xchg (bad) and adc pop adc adc add lods add add add ljmp add add add add add add add add add add inc add add add add add add add add add add fwait add add add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and cmp pop and cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and cmp mov pop inc popa cmp (bad) (bad) call add add sub add or add or add or push adc and and or (bad) call pop and and sbb cmp pop push or add adc adc and and cmp outsb pop push or and sti and out sub and jb push pop popa cmp (bad) incl sbb add pop and ja pop and or (bad) (bad) jle add add or (bad) sbb add sbb sub add or mov or pop and ja and cmp (bad) (bad) incl outsb push push or lcall and adc cmp (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc icebp cmp and jl in popa cmp std (bad) incl and (bad) (bad) aas pop adc adc and pop or pop and loopne popa cmp pop and shlb jg cmp and add jle add add or add or add or or pop and mov cmp (bad) call lea add sbb ret xchg pop pop and lahf cmpsb popa cmp (bad) (bad) jle add add adc push adc pop sub add or push movsl add add or pop and mov outsb int test and (bad) incl outsb sbb or lock sub and es cmp std (bad) incl sub adc or lsl add add adc and ret gs and jno push popa adc and imul fiadd pop adc adc add mov add add add add add add add add add add add add add xor add add add push add add add add add mov add add fwait add add add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and and mov popa cmp (bad) incl outsb sbb or inc inc xchg and push cmp and (bad) call add adc adc and bound shr mulb sbb (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc mov mov push lods scas aad cmp (bad) (bad) call pop and pusha xchg dec pop and lea popa cmp sbb add outsb push push or cmp sub and lock jne adc and popa cmp and (bad) (bad) aas pop adc adc and int and sahf pop popa cmp (bad) call lea add sbb add or (bad) sbb add sbb sub add adc and cmp ja and push popa cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and dec pop and les std (bad) incl pop push or pop and ja pop and push dec popa cmp std (bad) call push movsl add add or pop and pop sub clc jmp std (bad) incl outsb sbb or out repz and (bad) enter cmp and add jle add add or add or add or or pop and pop lahf xor and add shll jb (bad) call add add sub add or add or add or push adc and ror pop and push sub (bad) decl push mov or pop and (bad) mov pop and stos shll sub (bad) (bad) jle add add adc push adc pop sub add or pop and and inc out popa cmp std (bad) incl sub adc or lods add add add adc and lods lds mov ret adc add push or add adc and ret lea popa and pop inc push add add add add add add add add add add add add add jns add add add add add add add add cmp add pop lea add sbb bound pop pop and mov shll fwait add bound add pop and stos pop and sub add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or and add jle add add or add or add or or pop and mov mov lock cmp (bad) (bad) call add add sub add or add or add or push jle add add adc push adc pop sub add or pop and mov jo popa cmp (bad) (bad) (bad) jle add add or (bad) sbb add sbb sub add or mov or pop and and cmp pop push or cmpsl mov push and cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc (bad) pop fistp dec insb fs popa cmp (bad) (bad) incl outsb sbb or adcl and sbb cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and or jno gs cmp std (bad) incl and (bad) (bad) aas pop adc adc and and or popa cmp push push or xlat jge sti and mov pop and sub popa cmp push movsl add add or pop and and cmp (bad) incl sub add adc pop add add adc jo add or jo add lea add add add push add or and shrl and test popa and pop inc push add add add add add add add icebp add add add add add add add add add add add add add add add jb (bad) pushl add jp add js add out add sgdtl add add add add add add add add add add and add cmp pop loopne and add adc adc pusha xchg (bad) stos popa cmp call pop push adc push xchg or xchg popa sahf adc pop or pop pop or popa sahf adc pop or pop pop or popa sahf adc andl lahf leave push mov (bad) decl or or or sbb or xor (bad) (bad) (bad) call adc or mov stos aad and jmp adc (bad) and add and add or and add adc pop pop adc adc sub pop mov xor mov pop adc xchg adc adc adc and adc rcrb cmp pop sbb adc xchg aas inc aas pop and jae popa cmp or adc or adc push and and sub cmp (bad) call pop sbb pop sbb sahf adc pop inc push rcrb stc dec xor (bad) call add add orl daa mov (bad) call pop pop or xchg or or pop pop push adc pop push xchg or push xchg popa sahf adc pop movups pop setne pop setne push adc adc rorb mov or std (bad) call or push and adc pop sbb adc jecxz add add std (bad) call pop push adc push xchg or xchg popa sahf adc pop adc pop xchg or xchg popa sahf adc dec leave cmp sahf or cmp adc and pusha rcll xchg std (bad) call or adc or hlt cmp pop and les jb cmp (bad) call or xor add sub add addb and jp mov and (bad) leave popa cmp (bad) call or pop adc adc add lods pop and imul cmp std (bad) call add or push lret and mov cmp std (bad) call adc adc adc adc xchg mov push pop and mov popa cmp cld (bad) call pop sbb or or hlt das rcrl xchg cltd popa cmp cld (bad) lcall adc or fnstcw jne or or mov mov pop sbb pop sbb sahf adc sbb pop sbb sahf adc sbb pop sbb sahf adc das pushf aam pop and cmp add adc or icebp sbb and rcrb cld (bad) call pop adc pop adc sahf and pop scas cmp call or push and adc push rcrb pop pop adc adc pop adc adc insb sbb pop pop and add cmp (bad) call pop sbb pop sbb or and lea stos es cmp pop pop or pop pop or popa sahf adc pop or pop pop or or or popa sahf adc lock popf inc rclb cmp sti (bad) decl adc sahf adc pop adc or lret (bad) pop and fnsave cmp adc add adc push cmp add jae add or add or add adc add push add add add adc add add inc add or outsl and add sub add sub and xchg scas and (bad) fsubl or pop inc add add pop add add add add (bad) (bad) ljmp adc add push and and inc lds sub adc adc add or add push add adc and add add add add adc push add add add add add add add or pop add add or jnp add add inc (bad) add add jmp imul and dec jecxz and inc or add add add add add add add add add add add add mov (bad) call add add add add mov add add add add add add xor and sub and jg and outsl xchg pop popa sub add add add xor and sub and (bad) cltd and cmp adc cmp (bad) incl and add pop jge add add and iret repnz pop and test into popa cmp (bad) incl push jge add add and mov pop and outsl popa cmp (bad) (bad) incl and add pop jge add add ret jg les pop (bad) (bad) incl and add add add add add add sbb pop add add and lret (bad) xor or xchg or cmp (bad) (bad) call sub fidivrl shr cmp (bad) (bad) incl and add jnp add add fs jge add add and repnz negl mov cmp add add add bound jnp add add cmp add shlb or add and testl ret andb (bad) (bad) incl add add add bound jnp add add cmp add shlb or add and add bound add add and lcall scas mov (bad) (bad) incl and add bound add add and int3 push out pop and and xor das (bad) (bad) call sub add adc push add add add add adc add add add pop add pop pop bound jge add add add add xor add add or add pop or insb xor mov lahf popa and add add add add and add fdivr (bad) incl add sub outsb pop add add add pop pop bound or add test and push in and jnp add add loopne add add sub add push push pop pop or outsl add and jmp pop and or xchg popa sub xor add add adc or mov sub and and push add add (bad) (bad) jmp add add add add add add add add sub push xor and push cld aam sub and in sbb and pop bound jnp add add loopne add add add cmp add pop or aad mov sub or push jg push pop and cmp pop popa sub add or lret loop pop and test popa cmp (bad) incl pop add add add pop pop bound add adc push add add add add adc or or or addr16 xchg push jno popa daa in popa and inc pop add add add add add add add add (bad) (bad) incl add add addb add or pop or pop pop pop bound adc in cmp hlt test pop bound adc gs call cli mov popa sub add add or lock push jno sub and sub add loopne add add add cmp add or insl cmp (bad) decl pop pop or add dec adc mov cmp (bad) incl sub xor add add add add adc or or or or mov dec popa and pop inc or add sub add inc add add add add add adc (bad) (bad) incl add add sahf add add add fist pushf sbbb mov jmp pop pop or add sbb dec sahf dec mov add pop loopne add add add cmp add or push sub and sub push and loope daa and (bad) incl pop bound adc ja xchg push pop and out pop popa cmp (bad) incl or adc adc pop and xchg xor inc (bad) (bad) incl or pop pop pop bound adc cmp dec pop and cmp (bad) (bad) incl sub add adc add add add adc add add add push jge add add inc or pop and xchg jno and push add add (bad) (bad) call add add add add add add add gs sbb or pop and and ret inc add add add add bound jnp add add inc add push shlb or add pop pop or adc push or and scas sbb popa sub add add and add aam popa cmp (bad) ljmp add adc add or add push add adc adc or add adc add add add adc sub das cmpsb add and or pop inc add add add add add add add (bad) (bad) ljmp pusha add add add add add aaa or push outsl pop lea cmpsb add and and add bound add add and test jg mov add add add bound jnp add add inc add push shlb or add cmc mov (bad) (bad) ljmp add add xor add add adc add add add add and in das xchg mov and pop inc or add add add (bad) add add add add add out add add add add add add add add and add pop push bound jnp add add inc add push shlb adc sbb scas cli cwtl in popa sub and int3 mov hlt xor jnp add add adc jns and cmp (bad) decl pop pop or fidivr pop (bad) (bad) incl push pop pop pop adc add or cs xchg movsb popa cmp (bad) incl push bound adc xor fbstp mulb sub (bad) incl pop or call sbb (bad) incl push jge add add pop jge add add add xor enter cli (bad) (bad) incl or std sar pop and shll (bad) decl push xor and sbb and xchg xchg and (bad) incl push adc pop pop pop or pop bound adc pusha or and add add or mov and sub and and jb adc sbb cmp sub xor add add add add adc sub add sub adc add add add add adc and add add lea add add add add and add add lea add add add add pop or lea add add add add pop or lea add add add add pop or lea add add add add pop or lea add add add add jae add push jge add add jae add push jge add add jae add push jge add add pop jb lea add add add add sbb lea add jge add add jae add push jge add add jae add push jge add add sbb add push jge add add sub add and jp aaa and push pop addr16 and pop add add add ja add sub add sar (bad) incl add add add adc jne pop pop or and jecxz les out jnp popa sub push push push or rcll mov sub and lea add add add popl add sbb cmp add addl or adc add and and adc jb (bad) call or and inc push jg and imul add xor add add add add add cmp loop cmpsb cwtl and mov popa and add add add add add (bad) (bad) incl add add add add data16 jge add add and adc cli pop inc popa sub add jnp add add sub add jge add add and or popa sub add add add sub add or jnp add add outsl pop add push pop and ja (bad) pop and cmp (bad) ljmp add add xor add add adc jnp add add add push add push sub add xor add add pop add pop pop bound and ret mov sbb add add fdivr (bad) incl add add add sub add sub add add add outsl push add push add add add outsl push add push pop and stos inc stos pop and int3 pushf std popa sub jge add add and add mov sub adc add add add adc jnp add add outsl inc add push and movsl push sub or adc add add add add add add add add add das add add add add add add add roll add push add add add add add add add std add add add add add add add cmp or adc push sub add loopne add add sub add push or dec jns ficomp (bad) fiaddl (bad) incl jnp add add add add add pop add push or pop leave mov pop and cmpsb jo cmp (bad) incl add add add or jl cmp sub and cmp (bad) (bad) incl sbb and dec aas and mov cmp (bad) (bad) incl jnp add add loopne add add sub add push add add add loopne add add sub add push add add add loopne add add sub add push or lods data16 jecxz and adc (bad) (bad) incl pop pop or and mov adc push aam push cmp or and and cmp pop pop or and fwait daa mov sbb mov (bad) incl jnp add add loopne add add sub out rolb (bad) decl and xchg xor pop and cmp (bad) incl pop jb or mov sub and pop nop push and (bad) incl jnp add add loopne add add sub add push or test mov ficomp popa cmp (bad) (bad) incl pop pop or and and dec in cmp (bad) (bad) call or and pop fistpl arpl mov std (bad) incl jnp add add loopne add add sub add push push pop pop or inc jg pop cmp std (bad) incl sbb pop or jnp add add loopne add add sub add push and daa push cmp jnp add add push add push push or and (bad) xor pop and cmp pop or or adc push and test push and (bad) incl jnp add add push add push add add add push add push add add cmp add add xor add or add add adc add dec add push and xchg lahf jne (bad) int3 pop jo and pop inc cmp add push add add add add add add push add jmp add mov add add add ja add loop add add add add add add mov add add push add add add (bad) (bad) jmp add add add add add iret push add jno add inc add add add add add inc add add add add stc add add adc add add ret add add add add add add jge add out add add add add add popf add add add add add add add mov add daa add add add add add add add add add jnp add add add push add push adc and (bad) (bad) incl jnp add add add add add popl add add jnp add add cmp add sub and test and mov jecxz adc and rolb pop popa cmp jnp add add add add add popl add add jnp add add cmp add sub or and jnp sub (bad) (bad) incl jnp add add popa add push and inc mov cmp (bad) incl jnp add add add add add popl add add jnp add add cmp add pop or jp fs and mov cmp (bad) (bad) incl jnp add add or dec add push loopne add add add add add add push adc imul inc popa cmp std (bad) incl jnp add add outsl add push adc adc and inc jae pop and cmp popa cmp std (bad) decl adc xchg je push cmp std (bad) lcall adc push pop pop pop bound adc and and repnz cmc push popa cmp add push add adc and and mov (bad) incl jnp add add pusha add push adc and in movsb sub popa loopne cmp (bad) incl jnp add add pop outsl arpl add adc add fdivrl and add popa cmp (bad) incl or add add add jnp add add or add push pop adc adc and mov push popa fwait sbb sbb or (bad) jne push and jo pusha and inc dec sbb popa cmp cld (bad) decl adc mov xchg add ret daa (bad) pop popa cmp cld (bad) call or adc and and cmp cld (bad) call or and scas xor xchg cli sub and test popa cmp adc jnp add add outsl add push outsl arpl add adc and and ss cmp (bad) cld (bad) call add and pop or dec testb cmp (bad) call mov gs cmp and pushl popa cmp (bad) incl add add add or mov popa mov jnp sti mov adc and popa cmp cld (bad) incl add add add adc jnp add add push sub add pop or mov jae dec pop and cmp cld (bad) call add and xchg sub and or and (bad) xor cmp sti (bad) decl adc mov scas jnp pop and xchg pop popa cmp sti (bad) incl or push roll (bad) call add insb add push adc and int3 imul sbb movsl popa cmp jnp add add jnp add add add jnp add add outsl add push outsl pop add push adc adc and mov pop pop and cmp (bad) decl or inc cmp (bad) decl adc mov clc in gs and fsub lret dec sti (bad) incl jnp add add jnp add add or add push sbb or add imul push and and (bad) incl add add add push sbb inc add push sbb or in int cmp sti (bad) call or subb sub in cli (bad) call or xchg adc loopne (bad) call mov mov pmuludq cli (bad) call or adc adc and lods dec pop and inc push popa cmp adc icebp mov sub and dec testb cmp jnp add add or add push and dec mov cmp or jle push pop and in popa cmp (bad) call mov xchg loope pop and shlb (bad) call add imul pop push adc bound (bad) sbb cmp (bad) incl jnp add add add add add popl add add jnp add add cmp add sub test mov xchg push and (bad) call mov jae dec pop and repz (bad) call mov push addr16 and cmp stc (bad) call adc push add adc and and insl mov (bad) incl jnp add add adc outsl bound add adc adc adc mov add or loop sahf data16 push add add add add add bound or popl add add jnp add add cmp add sub and sahf aad and (bad) (bad) pop and or cmp (bad) incl outsb adc ja pusha and sahf gs and (bad) call add adc adc sub add push or or mov mov and push sbb cmp stc (bad) incl add add jnp add add aas add push pop or mov sbb sbbb jb adc jmp (bad) incl jnp add add add add add (bad) loopne add add add add add cmp add adc sub add add add add jnp add add push outsl push add push adc adc and cmp mov fwait clc (bad) call add add add adc add add add add add add bound or popl add add jnp add add cmp add sub and xchg sub and cmp (bad) call add add rclb cmpsl pop and movsb fiadd cmp (bad) call add insl add push sub and xor out sub mov lea push clc (bad) call mov mov pop and cmp clc (bad) incl jnp add add inc add push sub add xor add add add add adc push xchg pop or add xchg pop or and lods fldenv nop popa and pop inc or add pop add add add add add add add (bad) (bad) incl add add add cmp add add add pop adc push pop pop pop pop bound add pusha mull ret sub add adc and shrb pop and outsl ss popa sub dec add push adc and and cmp (bad) incl sbb adc and and cmp (bad) incl or sub add adc and and cmp (bad) call add (bad) shll and pop mov (bad) (bad) incl sbb push adc adc adc pop and cmp (bad) (bad) call add adc and mov jle pop popa cmp (bad) (bad) call push and dec lods pop and fdivrp (bad) ljmp add adc add pop add add add adc sbb add jo dec sub movsl cmp or pop inc add add xor add add add fdivr (bad) lcall add add add aaa or and cmpsb add sbb push and mov ret push and out pop and sub xor or add push add adc add inc add or adc add movl add add add add and mov or add sar (bad) lcall add add add add add add add add mov add add jge add add and jne sub sub sub add loopne add add sbb add push addl jns pop sub push cs and inc mov popa sub mov add sub and pop adc cmp incl jnp add add loopne add add sbb add push addl pop or and and jne xor (bad) ljmp add xor add add or add add add cmp add and xchg iret and imul popa and inc or add inc add add add pop add add add add (bad) (bad) incl add add add add add add add or jmp lods mov stos add lods push pop pop or and add jge and inc pop and lcall sarb and push xchg stos popa sub add cmp add pop and mov push out popa cmp incl jnp add add loopne add add sub and imul and (bad) (bad) incl jl add add cmp and sbb pop and mov sub (bad) incl jnp add add loopne add add sub (bad) sti mov cmp (bad) (bad) ljmp add adc add add add add add sub add push sub stos and mov push xor or pop inc or add pop add add add mov add xchg add add add add (bad) (bad) ljmp add cmp jl add add sub add push sub and adc sub and inc and lods int3 leave pop popa sub dec pop sbb pushf push add add add loopne add add add add push pop or and cmp jns and jnp dec popa cmp incl push pop or cmp (bad) (bad) incl jnp add add loopne add add add add push sub and and cmp (bad) incl add add sub add push pop or and push xchg jge and adc icebp popa cmp (bad) (bad) incl sub add xor inc add add add adc pop adc lea add jge add add pop adc lea add jge add add jl add add adc add add adc add jae add push jge add add sub add sub adc push add add add add add or add and dec (bad) js popa and inc push add add add add add add mov (bad) (bad) jmp add add add add add repnz add add add add add inc add add jnp add add or or sbb push mov push and call sub add add jnp add add pop pop pop bound or fnstcw or and cmp ljmp or adc aas pop and cmp mov (bad) incl add daa add add and lods pop add and cmp (bad) incl push loopne or add jge add add and and push sbb popa cmp (bad) (bad) call or and push dec xchg pop and mov popa cmp and and mov lock cmp (bad) (bad) incl add add add pop add pop pop bound pop jge add add dec mov (bad) (bad) incl pop pop or and ds pop and hlt xchg and cmp (bad) (bad) incl push aaa or push cmp push and icebp in and (bad) incl jnp add add loopne or add sub add and imul incl jnp add add or jp cmp and and or jb dec fistp cmp (bad) ljmp adc add add add pop add add add jnp add add pop pop pop bound and sub and mov and pop add add (bad) (bad) incl add add add sbb add sub add aas add add add sub and loopne or add sub add and mov pushl and sub and or lods and insb pop iret and or and lods jecxz pop and xlat mov pop pop pop or and and or popa cmp (bad) ljmp add adc push add add add add adc add add add add add add pop pop bound add add add pop pop pop arpl add add xor add add add add adc jnp add add add sub add loopne or add add pop add push sub adc push add add adc jnp add add add sub add loopne or add add add pop add push sub add adc add adc add push add adc and add add jge add add add add xor test add sldt adc or jne (bad) and gs popa and push add add (bad) (bad) call add add add push add add add add add add push pop and int pop and (bad) sub push and add add or pusha insb pop (bad) and int3 movsl and jnp add add popl add add cmp add and inc mov xchg push pop pop or and test adc adc add add add pop or test mov mov sbb add add fdivr (bad) incl add and add add add sub pop bound jnp add add loopne add add add cmp add pusha or in inc jne sub push and add add and push xchg std and push rcll sub dec fistpl sub adc add add add adc or jmp test shll or or add lds add sbb add mov add add add jns add testl add fwait add add add add add add repnz add add (bad) adc and lods push and add add or scas hlt repz sub and jne shlb jnp add add pop pop push bound pop loopne add add add cmp add or and and cmp (bad) incl and add add and xor and cmpb (bad) (bad) incl pop bound jnp add add loopne add add add cmp add pusha or mov (bad) (bad) decl and and lods sbb popa cmp (bad) (bad) incl pop bound pusha or and and cmp (bad) (bad) decl and xor pop and cmp sub cmp (bad) (bad) incl or or dec mov push and sbb mov or cld mov pop popa cmp (bad) (bad) incl shrb add add xor push add adc jnp add add cs and and dec and pop lcall inc add add fdivr (bad) incl add add add push add add sub add lea add jge add add and inc lock and sub add jge add add jno loopne sub add add push jge add add adc add xchg add add add adc sub add and shrb addr16 and push add add add add add add (bad) (bad) incl add add add add popa add jge add add and and cmpb sub add jge add add and cmp jp mov add jge add add and mov pop and xchg add or insl sub and push push adc inc push adc cmp (bad) ljmp add adc pop add add push add adc sub add add and daa push inc and add or pop inc add add loopne (bad) pushl add add add add xor jnp add add imul add add add add add imul push and mov and rorl add add xor add add add add add add add jnp add add or fcmovbe sbb and add popa and pop add add add add add add add add (bad) (bad) lcall add cmp sub lods loope sub and sti pop cmpsb and xchg pop pop popa sub add jnp add add jnp add add sub add add add add jnp add add or sarl push and inc or and (bad) incl push jge add add and scas ficomp addr16 cmp (bad) incl add add add sub cli push lahf iret cmp (bad) ljmp pop and and cmp (bad) (bad) ljmp adc or add add add add add add pop pop pop or add add add xchg add add repz insb inc sahf popa and inc or add aad add movb add add add add add add add add (bad) (bad) (bad) (bad) cmp add add or and bound pop pop and mov add add add and add or pop jge add add loopne jnp add add and xchg pushf add add add jnp add add or mov sub and lcall (bad) (bad) incl or push xor push and insb xchg cwtl and (bad) incl add add add or lds add and jmp repz (bad) incl sub add or mov jo pop and cmp (bad) (bad) incl add add add or and and fldenv xor push (bad) (bad) incl pop adc and pop mov (bad) ljmp add adc push add add or add add add add and add or pop jge add add loopne pushf and shlb or popa and add add fdivr (bad) ljmp add add add add add add cmp jnp add add jnp add add or lock push and loope (bad) es and xchg popa sub add pop and loop pop pop and pop push popa sub adc add jne add or add add add add pop pop pop or stos mov out shll or pop inc add add cmp add add add fdivr (bad) jmp add sub push add add add or xchg shl out sub and pop in es and popa sub add add or and and pop adc popa sub add loopne sub add adc push add add add add adc add or add adc add or add push add adc push jge add add adc add add add adc jnp add add xor and sub sub or inc push add add add add add add add inc add add add (bad) (bad) ljmp bound push jge add add push and cmp roll rolb das add add or and xor sub and or and push and aad pop and pusha (bad) popa sub add add pop jge add add and inc sub jns cmp (bad) incl and add pop jge add add adc add add add adc add add add aaa add or add add add add xor add add adc add add add aaa add or add jge add add add add xor add add adc add add add aaa add or add or add add add adc add or add push add adc jnp add add incb xor or add push add adc and add add add add adc push add add adc jnp add add or xor add or xchg mov or and inc or add daa add add add add add add add add ret (bad) (bad) incl add add add pop add add bound add add add add aaa or test mov pop sub loope es and inc and sub add add bound add add and and xlat ss popa sub add bound jnp add add add or pusha jge add add and jno pop and cmp (bad) incl and add pop jge add add and add pop jge add add and add jnp add add fs jge add add jnp add add add add aaa or daa jmp push and cmp add add add bound jnp add add add or pusha jge add add and add bound add add and jle pop and cmp (bad) (bad) incl and add add add add add add sbb xor add jnp add add add add aaa or mov push and es and popa cmp push jge add add and xchg cmp pop and cmp (bad) call sub inc (bad) fbld popa (bad) (bad) call sub adc push add add add add adc add add add pop add pop pop bound jge add add add add xor add add add pop or sub dec or and pop lods stc popa and add add add add add add add (bad) (bad) decl add sub outsb pop add add add pop pop bound or nop pop jns and or and pop pop or and scas xor and pop and add add add loopne or add sub add and lea adc push add add pop or mov in push mov popa and pop add add add add add (bad) (bad) (bad) cmp add pop add add add add add add jb push xor and and sub and sub jne pop and inc jmp pop pop pop or and sub jle and ds add pushf push pop bound jnp add add loopne or add add outsl add push pop or mov and jp (bad) incl jnp add add or cs ret and insl mov (bad) (bad) incl pop add add add pop pop bound adc push add add add add adc or or or pop push into and and pop inc or add scas add add add add add xchg add add (bad) (bad) incl add add add add test add add add or scas mov push and and add add add loopne or add add outsl add push or imull xchg pop or pop pop pop bound adc lcall mov jne (bad) decl pop pop or add sbb and je pop andb (bad) (bad) call add int imul xchg popa cmp (bad) incl pop bound adc inc in scas dec pop and lahf xor popa cmp (bad) incl or adc ss mov cmp sub xor add add add add adc or pop lods je and dec (bad) addr16 and pop inc or add xor add jb add sbb add add (bad) (bad) incl add add add add add cmp add pop loopne or add add outsl add push or pop sub and sub and hlt jge sub adc loopne push in and mov xchg adcl lods jge xor and push cmp popa cmp incl or adc shll sbb leave out outsb popa cmp (bad) call add fwait js sti pop and mov inc (bad) (bad) incl or pop pop pop bound or pop or add cmp mov mov and (bad) call or add sti push cmp add aaa popa cmp sub xor add add adc add add add push jge add add pop movsb pop imul bound push pop inc or add int3 (bad) (bad) lcall add add add sub add jne add mov add cmp add add xchg add add add and pop xor pop and pop add mov and mov (bad) pop and jmp (bad) popa sub (bad) and and lock sub and push and sub add add bound jnp add add add or pusha jge add add sbb (bad) sbb pop (bad) (bad) incl pop pop or and clc pop popf pop and mov popa cmp (bad) ljmp add adc add or add push add adc adc xor adc add add add adc push and lods push sbb pop inc add add push add add add add (bad) (bad) pushl add add dec add jnp add add bound jnp add add add or pusha jge add add and add bound add add add add sub add add add xor and sub and out fwait and add xor add add adc add add add add add add add and sbb and sbb pop or add push add add add add add add add add add add add add add add add add add add add icebp pop and iret es sub pop push pop pop pop adc push adc pop pop pop or mov mov or add mov and cmp (bad) decl pop bound adc pusha or add sbb scas dec lret cmpsl popa cmp (bad) incl and add add and fstpt mov mov test or cmp (bad) incl or jnp and ss popa cmp (bad) (bad) incl push jge add add pop jge add add add mov or xchg popa cmp (bad) (bad) decl pop pop or pop cmp (bad) (bad) incl push bound adc adc faddl dec jno cmp (bad) (bad) incl push bound jnp add add add or pusha or add sbb sub cmp push xor and sub and inc xchg jne cmp sub xor jmp add sldt adc and add add lea add jge add add and add add lea add jge add add pop or lea add jge add add pop or lea add jge add add pop or lea add jge add add pop or lea add jge add add jae add push jge add add jae add push jge add add jae add push jge add add pop jb lea add jge add add sbb lea inc add add jae add push jge add add jae add push jge add add sbb add push jge add add sub add add add or sbb jnp add add (bad) or jae add push orl push push fildll add xor add add add add add jp,pn rcrb xchg sbb mov push cs and add add push add add add add add add (bad) (bad) ljmp push add jge add add add add add sub or add add jnp add add add add sub or pop and dec or pop and xor mov jnp add add outsl nop add push pop and adc pop and push fs sub add add add add adc jnp add add add xchg add sub add xor add add pop add pop pop bound add add add outsl (bad) add push add add add outsl (bad) add push and shlb push or popa and add add loopne (bad) lcall add add add add sbb push pop pop jge add add and adc and sub sub add xor add add adc jnp add add outsl jne add add add add add add add xchg add push push or sub fwait shll jbe push (bad) popa and inc adc (bad) (bad) call add add add add add dec add add add add add sub add add add add add add pop add add add add add add add add add add or add add add add loopne or add sub add pop pop pop or and ret and adc (bad) incl pop or or xchg repz and xchg cli jmp (bad) (bad) call or and std in pop and cwtl fisttpll inc (bad) (bad) incl add add add or pop aas test dec inc mov (bad) decl and mov pop and cmp (bad) (bad) call or and (bad) xor pop and mov popa cmp (bad) (bad) incl jnp add add loopne or add sub add or sub and loop lds (bad) (bad) decl and cmp shll cmp (bad) (bad) call or ffreep xor cmp pop jb or add sub and (bad) iret jmp cmp clc adc mov xchg popa cmp sbb pop or jnp add add loopne or add sub add and lret mov cmp (bad) incl jnp add add loopne or add sub add push pop pop or aad (bad) jmp incl sbb or inc dec (bad) mov or cmp (bad) (bad) incl jnp add add loopne or add sub add push pop pop or and cmc pop clc pop and mov (bad) (bad) incl jnp add add xchg add or popa push cmpsl pop and push jb popa cmp std (bad) incl jnp add add loopne or add sub add add add add loopne or add sub add or or push stos pop and cmp jnp add add loopne or jno add push pop pop or sahf and mov decl and and pushf (bad) outsb popa cmp jnp add add addl push add add add addl push add add jno add sub xor add or add add jle add adc (bad) adc adc sub or lahf out das lds mov mov popa and pop inc cmp add cmp add pop add add add movb add add add add add add add add fild add jo add jecxz add or add add add add add add add add push add pop add add add mov add xchg add add (bad) (bad) (bad) jle add sub add push add add add add add std add add add lret add add add add add add fs add add mov add pop add add std add add add add push add push add add add add add push add add add add pop outsl xchg add push adc and and jmp sub ljmp adc and (bad) ja and mov (bad) lcall adc push pop pop pop bound adc and dec xchg pop and stc outsl popaw cmp add add add add add (bad) loopne or add add add add outsl add push adc and popa push pop and cmp add add add jnp add add or add push pop adc adc and icebp add pushf popa cmp (bad) incl or or and inc (bad) (bad) incl jnp add add or add push and cli (bad) cmp (bad) (bad) incl add add add adc jnp add add push sub push pop or mov push pop jge and inc insl popa cmp (bad) (bad) decl add push adc and and cmp std (bad) incl jnp add add outsl xchg add push adc adc and and out in popa cmp std (bad) incl adc inc jmp inc push frstor (bad) call or and sub and int3 pop sub adc and cli mov cmp add add add adc and js (bad) incl jnp add add add add add (bad) or add add add add outsl add push sub sarl dec clc xor and (bad) incl jnp add add add add add (bad) or add add add add outsl add push sub sbb and in adc and popa cmp std (bad) decl or icebp cmp cld (bad) incl jnp add add jnp add add or add push sbb or dec jge cltd cmp cld (bad) call add or adc xchg in xor incl jnp add add adc outsl xchg add push and in shr cmp mov cmc adc lahf cmc popa cmp add adc and out pop and cmp mov pop xlat cvtps2pd add insl jae cmp (bad) call mov mov jns in popa cmp (bad) call add pushf add push add add add jnp add add outsl xchg add push outsl xchg add push adc and pop ljmp popa cmp (bad) call add add mov or cmp cld (bad) incl outsb adc sbb push and mov (bad) call mov int aaa pop and cmp sti (bad) incl add add add or cmp push and sub mov cmp add add add push sbb js add sbb or add add jnp add add jae add pop or mov and (bad) call push add loop mov pop lock cmp (bad) call add add dec mov testb cmp call mov cmp ja popa cmp (bad) incl jnp add add add add add (bad) or add add add add outsl add push sub and sub and into in popf and (bad) incl jnp add add jnp add add add jnp add add outsl xchg add push outsl mov add adc adc and and out popa cmp cli (bad) call add popf add push sub and int add dec or and lcall mov adc jle xor (bad) call add and inc push frstor and xchg cli (bad) call add and sbb push and adc and sub pop popa cmp (bad) call or mov xchg (bad) pop and jae stos popa cmp (bad) call add cltd add push add add add jnp add add push outsl mov add adc adc and aam pop and cmp cli (bad) call or mov das jae pop and subl cmp cli (bad) incl jnp add add add add add bound or (bad) or add add add add outsl add push sub and addr16 sub and adc and mov cmp stc (bad) call add add sbb lret fcmovbe rcll popa cmp or and mov jecxz mov (bad) call add fwait add push adc and mov mov std ret test (bad) call mov push sbb mov jb (bad) incl jnp add add jnp add add add mov add adc and push stc (bad) call add lcall add add or addl or jnp add add jb add adc or xchg pop movsb and mov adc and xchg dec negl cmp stc (bad) incl jnp add add add add add bound or (bad) or add add add add outsl add push sub lret fsubl test cmc and dec mov pop pop popa cmp clc (bad) call or nop cld cmp add cltd add push adc and and mulb popa cmp or adc adc and inc jmp pop and cmp adc mov in dec pop and movsl push loope cmp (bad) incl jnp add add add add add (bad) or add add add add outsl add push pop xor and or and mov cmp clc (bad) incl jnp add add xchg add push add add add xchg add push add add add jbe add sub xor add add adc add add xchg pop or and jmp adc fildl or and pop inc or add mov add jns add incl add sbb add pushf add add add add add add add mov add add add add cli add add adc adc push mov mov sub out pop pop and in mov xchg add xchg pop or adc and push adc inc das repz cmp (bad) incl or sub push adc and enter and movsb push fsubs pop (bad) (bad) call add dec and and cmp (bad) call add pop adc push pop pop pop pop bound add add and (bad) (bad) incl adc jnp add adc and and je sbb or (bad) incl sbb adc and ja jno and (bad) mov (bad) (bad) incl or jge add adc and cmp pop and xlat (bad) (bad) incl sbb adc and fs pop and cmp (bad) (bad) ljmp add add xor pop add add add adc sbb add inc jns push and insl and popa and add add pop add add add add add add (bad) (bad) ljmp add xor and sub and jecxz inc and stos sub pop popa sub add push and and sub xor fwait add add add add add add and mov xchg and xor popa and add add add add add add add add (bad) (bad) ljmp bound and push mov pop and sub add add add loopne or jae add push orl add loopne or jae add push orl int cmc mov xchg push add and xor and or and (bad) incl add add add add xor out add add add add add outsb add push push or stc xchg out cmp push mov pop popa and or add jge add pusha add add add add add lods add add (bad) (bad) lcall add add cmpsl add add jnp add add loopne or jno add push pop pop or and fxch pop and sub add loopne or jno add and inc add jl add add outsb add push pop and iret push into pop and popl (bad) popa cmp (bad) incl jl add add jno add pop and mov cli pop pusha (bad) popa cmp incl add add add or mov sub and inc and (bad) incl and aas (bad) popa cmp add adc add add add add add sub add cmp xor out cmp jecxz and or add push add jbe add pop add add add add add (bad) (bad) (bad) cmp push pop or add add sub add pop or cmp sti mov mov add add add loopne or sub add pop or and and dec jl popa sub add loopne or sub add sub and pop adc test (bad) (bad) lcall or arpl dec mov incl and addr16 and push popa cmp (bad) incl jl add add sub add sub and push fstl sub and pop and popa cmp (bad) (bad) incl sub add adc add inc add add add adc pop adc lea dec add add pop adc lea dec add add jl add add adc add add adc add jae add push jge add add sub add sub adc push add add adc add add add add roll add and (bad) scas or popa and inc or add lock add add add add add (bad) (bad) incl add pop add add add add add daa add add and add add add add loopne adc add sub pop or and and sahf add add add or mov mov and sub and jle sub cmp (bad) ljmp or out cs pop and adc lahf popa cmp (bad) incl pop add pop pop bound pop jge add add and add and popf add call or and and fs popa cmp (bad) (bad) incl add add add lds addr16 and (bad) incl add push add add add add add jnp add add pop pop pop bound or negb sbb and popa cmp (bad) (bad) incl jnp add add or dec push pushf and or fisub scas push pop popa cmp (bad) (bad) incl push aaa or fsubs xor lcall (bad) (bad) incl push loopne adc add jge add add and mov mov loope popa cmp adc add add add pop add add add jnp add add pop pop pop bound and stos mov and xor lret popa and push add add (bad) (bad) jmp add add add add add add add push add add push pop push aaa or sub and testb and jno cmpsl pop and fisttpll jnp add add loopne adc add sub pop pop or push movsl addb and fildll out pop and mov test adc push add add add add adc add add add add add add pop pop bound add add add pop pop pop arpl add add xor add add add add adc jnp add add add sub (bad) adc add add mov add sub adc push add add adc jnp add add add sub (bad) adc add add add popl add sub add adc add adc add push add adc and add add jge add add add add xor pusha add add add adc or inc and (bad) outsl and loopne popa and add add fdivr (bad) incl add add add add add add xor add (bad) or add sub add push pop pop or sbb lret insl sub push and add add or pop (bad) outsl and sub push and adc add add add pop or pusha pop repnz xor and add add fdivr (bad) incl add add add add add sub pop bound jnp add add loopne or add add outsl add push pusha or outsl das divb add add aaa or dec es dec and call pop and popa sub adc add add add adc or out inc rcl and xlat popa and inc or add daa add add add add add add add add add sbb add hlt add add add add out add add add (bad) adc and lods or jecxz dec adc repnz popa sub add xor and inc rcl and xchg test pop bound pusha or and dec dec add xchg cmp incl or or fs adc and insl mov and out imul cmp decl and enter and loop jge cmp (bad) (bad) incl jnp add add pop pop push bound pop loopne or add add outsl add push or and mov popf test in cmp (bad) (bad) incl pop bound jnp add add loopne or add add outsl add push pusha or inc mov (bad) incl and add add or lea sbb and sti int and (bad) incl shrb add adc add pop add add add adc jnp add add cs jo and push mov popa and add add push add add add add (bad) (bad) ljmp sbb add lea add jge add add and fdivrp mov sub add add add push jge add add push jge add add add add xor addb add add adc sub add add add jecxz js and je popa and add (bad) (bad) decl add sbb add add add add add dec add jge add add and jb and out popa sub add jge add add and xchg je lret scas add or pop shlb and es and popa sub add add add adc sub insb cmp xor cmp pop inc add add dec add add add add add add (bad) (bad) ljmp inc add push and and pop dec popa sub add add add imul add add add add add imul push and push cmp cwtl sub xor add add add add add add add jnp add add or and fisttpll inc adc pop popa and pop add add (bad) (bad) decl add push add addl add add add xchg add add sub and xorb xor (bad) and and mov jnp add add jnp add add or xor sub and es and popa sub add jnp add add jnp add add outsl inc add or push cld ret aaa cmp (bad) incl push jge add add and fwait lock in or popa cmp (bad) ljmp pop and cmp and stos fwait inc popa cmp (bad) (bad) incl add add add push add add add add xor add add add add add add add pop pop pop or add add add sgdtl add jmp push cmp popa and inc or add rolb add add add add add add add add (bad) (bad) decl add ja add lods add add in add add add add and add or pop jge add add loopne jnp add add and xchg pushf add add add jnp add add or out dec adc sub and ja,pn cmp (bad) incl pop adc and mov (bad) incl add add add or and and aad popa cmp (bad) incl add add add or mov sub and cmp (bad) incl sub and adc xchg int3 popa cmp (bad) call or and mov shl mov popa cmp (bad) (bad) decl and xchg ret inc pop and imul popa cmp (bad) (bad) incl or push push (bad) xor int pop and (bad) ljmp add xor add add or add add add add and add or pop jge add add loopne pushf and push ret and and add add sub add add add (bad) (bad) incl add add cmp jnp add add jnp add add or add sbb xor and pop pop pop popa sub add pop and leave jp and lcall add add xor pop add add add add add add pop pop pop or add add add cmp jns lahf inc and and add add loopne (bad) lcall add add add add sbb add add add or and and and jmp lret add add add loopne sub xor or add push add adc push jge add add adc add add add adc jnp add add xor and jnp push and or add add add arpl add push add add add add add (bad) (bad) ljmp jp and add pop jge add add mov or mov add add pop jge add add push and jno pop and mov mov jnp add add or and pop cmp mov sub add pop and (bad) mov popa cmp (bad) incl push jge add add and push jbe and cmp (bad) ljmp add adc add add add adc add add add aaa add or add add add add xor add add adc add add add aaa add or add jge add add add add xor add add adc add add add aaa add or add or add add add adc add or add push add adc jnp add add incb xor add add add add adc sub add sub add add inc push dec inc add add add add or add jbe xor xor add add add pusha add add adc add dec push add mov add and jb outsb addr16 add add mov add and dec inc add add mov add and outsl bound add add add add add push xchg add leave sldt add and add add add add add add add add sahf add add add adc add add add adc add add add add add add add add add add add add add adc add add add add add add add add add add add add add add add add add adc adc pop adc or add add or push add or add add add cvttps2pi adc adc adc add add add adc adc add aas adc add add adc jae add fiaddl push add add add mov jmp add mov or xor inc mov pop mov jg fiaddl push add add add mov jmp push mov adc push mov cmp bound cmpsb mov fldenv in adc mov insb movsb adc movsb adc movsl pop mov adc add add add add add add add pop add dec add add add add add add add add add add and add or cmp add adc jmp add add add adc shlb add dec add add add xor add pop add add adc (bad) aaa add dec add add add add add add adc cwtl cmp add sub pop add add add add dec add add or inc add dec add add or inc add dec add add add dec add dec add add add dec add dec add add add pop add dec add (bad) add pusha add dec add xchg or add dec add mov add push push add add add dec add cwtl add jb add pop add add jb add pop add add jae add pop add add add add adc pop add add add add push add add add add and and jne popa add add and add insb and add add and add add add add add add sub and inc sub and shrb add add popa add add add mov and mov mov and sub nop add add add sub popf sub sbb mov add xchg cs add add das pop add add add xor xor and pop xor add add xor add add rolb add (bad) xor dec mov ss add add fldl add mov add add add add popa add add nop cmp or jns add mov pop add add pop add add inc pop add add pop add add add add add add add xor and cmc dec xor and jno xor and ljmp push xor and loop xor and pop push inc add add push inc add add dec add add push xor and dec push dec add add push push add add inc add add add push pop add add add push push add add add pop dec add add add add add add add pop push add add add add pusha add add add add popa add add add add add add imul jns add adc add add add outsb pop add mov xchg add pop add add xchg add pusha add add stos add add xchg add add add add add add add xchg sbb add add add add add xchg add push jns add aam add add adc xchg push jle add in mov add add add pop xchg add add adc test mov add adc add add adc and xchg add add mov add add add add add add adc cmp lahf add add add add adc mov movsl add add add add add add add add adc mov add adc xor add add add add adc sub add mov add add add add mov add add add or lock add add add add mov add add add push fldl add and add add add add adc xor out add add add add adc scas pmuludq add pop mov add add add adc add add add add add add add add adc cmp add add mov add adc add add adc cmp add adc les sbb mov add add add and add fdivl add lock add add add das add add adc in add add mov add add add sub add lock add add add adc sbb adc pop push cmp mov add add add push add add adc push pop inc add add add add adc int inc add add add add add inc add add mov add add add sbb add add add add adc inc sbb add enter add adc mov add adc cmp inc add add add add add add mov add add add add xchg add add add add add add add xchg add xchg les add add add add add add add add add add add into add add xchg add add add add addl and add add add add addl and add xor add add adc jge out add add add add add add addl and add add add add addl and add rcl add add addl and add pushf roll add add add add add add add add add addl and push aad add add add add aad add add add add add add add add add add adc push daa out add add add add add fadds add add add add add add add flds add add add add add add addl add or add add addl and add add addl xor add add add add xchg add xor add add out add add add int3 add add out add add add add out add add add add call addl and add add jmp sbbl add add add ljmp inc aaa test jmp add add add add add add add in add add addl cmp add add in add add addl cmp add add add add add add addl aaa cmp add xor add add addl and add add in add add addl cmp add add add add addl cmp add add add add add out add add addl and add add add add add icebp add add addl aas cmp add clc icebp add add addl aas or repz add addl inc adc add mov add add add add add add add mov add add add rolb add cmp add add adc jmp add add add add add add add addl inc cmp add sbb add add addl inc cmp add inc cmc add add addl inc cmp add fs add add addl inc cmp add mov add add addl inc daa add add add add add add add add add add add add addl dec cmp add sub add add addl dec sub add in clc add add addl dec sub add call add add add cli add add addl dec jge add int3 sti add add addl dec cmp add loopne add add addl dec cmp add fs add add addl dec addl add add add add add std add add sbbl add add add incb add add add add add add addl pop test incl add add add add incl add add add add addl pop mov add rorb add add addl pop roll add add add xchg add pop movl add add addl pop movsb add add addl pop cmp add cmp add add addl pop pop add add add add sbbl add add add addl bound adc add addl arpl add add add add add adc add addl fs add adc add add addl fs add je add add sbbl add add add add add addl cmp add pop adc add addl cmp add enter add addl addr16 add inc adc add addl addl add add addl imul add add add add add add add push add add addl insb cmp add lock add add addl insb or sbb add addl insl adc add enter add addl insl sbb add je add add sbbl add add add add add addl outsl cmp add inc sbb add addl outsl cmp add add add add addl jo add add sbb add addl jo add add add add add add add add addl jno add add add add add add cmp test add add add add mov leave add mov roll push add add add iret add add cmp icebp add imul mov add push add add add add add mov sub push add add add inc add add dec add add push add add add add add mov add mov int ja adc aam cltd add add sti mov or movsb int3 add xor movsb roll dec add mov dec add roll pop add roll inc add aad imul adc andl fildl push add add movsb rolb push add movsb in pop add roll add movsb in add push add add fsubs movsb clc add hlt movsb push add add add movsl and addl addl addl addl addl jns inc movsl inc add push movsl inc add add push add mov popa add push add add add roll pop add add cmp addl push add push add add add add add add add add add std add add fiadd add aad add lea add lea add lea add add add add add add add add add jae aas add add add add add addb add add add add add add add mov add add add add add add add add add add add add add add add add push and add add add mov add add add add add jno add add add xor adc add add add add add and add add add add add add add add add fnstenv add add add add add push je add add adc add add (bad) je add add add add add dec jne add add add add add leave jne add add add add add inc jbe add add add add add (bad) jbe add add add add add cmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jle add add add add add jns add add addl add cmc jg add addl add jno add add add add add add in addb add add add add add imul add add in add add add add add add popa (bad) add add add add add add fldl add add add add pop addl add add add add add aad add add add add add add push test add add add add add int add add add add add add dec test add add add add add lds add add add add inc xchg add add add add add mov add add add add add xchg add add add add add mov add add add add add add xor add add add add lods mov add add add add add sub add add add add movsl mov add add add add add and add add add add popf mov add add add add add sbb add add add add xchg mov add add add add add adc add add add add add add add add add lea add add add add add test add add add add add add add add add jge add add add add add add stc mov add add add add add jne add add add add add add mov add add add add or add add add add adcl add add add add nop add add add add add add jnp add add add add add add notl add add add add jae add add mov add add xchg add add add add add add imul add add add add xchg add add add add add add arpl add add add add xchg add add add add add add pop xchg add add add add add add xlat xchg add add add add add add push xchg add add add add add add iret xchg add add add add add add dec xchg add add add add add add (bad) xchg add add add add add add inc cwtl add add or add add add mov add add add add add cltd add add add add add add mov add add or add add add xor or add add add scas lcall add add add sub add add add add movsb fwait add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lahf add add add add add add jns add add add add add add cmc mov add add add add fbld add add add add add add add add add add add add add add add add add add add or add add add add add add add add add add add add add adc add add add add sub add add sub add add sub add add sub add add sub add insb add push push add push add add imul push bound outsb and jne cs add arpl insb imul jb jae dec insb fs jae inc je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul je jb cmp outsl fs gs subl lods loop stos loop lods loop scas loop lods loop scas loop scas loop scas loop scas loop (bad) loop lods loop scas loop lods loop stos loop (bad) loop stos loop stos loop mov subb mov subl lods loop lods loop lods loop stos loop stos loop scas loop stos loop stos loop lods loop lods loop stos loop lods loop scas loop scas add subb lods loop stos loop lods loop lods loop mov subl lods loop mov orb scas loop lods loop lods loop scas loop stos loop stos loop (bad) loop stos loop scas loop (bad) loop stos loop (bad) loop (bad) loop (bad) loop mov subb lods loop mov subb (bad) loop mov orb stos loop scas add subb stos loop lods loop stos loop mov orb lods loop (bad) loop mov subb scas loop stos loop (bad) loop mov subl scas loop lods loop scas loop (bad) loop lods loop (bad) loop scas loop stos loop scas loop mov subb loop mov orb lods loop (bad) loop lods loop mov subb subb loop lods loop stos loop lods loop (bad) loop mov subl scas loop scas loop mov subb mov subb scas loop scas loop mov subl stos loop stos loop stos loop lods loop scas loop stos loop (bad) loop lods loop scas loop stos loop stos loop mov orb add subb stos loop scas loop scas loop lods loop mov orb stos loop lods loop stos loop scas loop stos loop mov subl loop mov subl mov orb lods loop (bad) loop scas loop stos loop mov subl mov subl (bad) loop scas loop scas add jae insl bound push jns je insl cs gs arpl outsb add subl stos loop lods loop mov orb loop scas loop stos loop mov subb stos loop lods loop mov subl scas loop lods loop lods loop lods loop mov subb (bad) loop lods loop stos loop stos loop stos loop lods loop scas loop stos loop stos loop scas loop mov subb scas add orb loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop stos loop lods loop lods loop scas loop lods loop scas loop stos loop scas loop scas loop lods loop mov subl lods loop mov orb scas loop lods loop (bad) loop lods loop stos loop mov orb loop stos loop mov orb add dec popa outsb fs add jae gs cs jne je insl gs outsb je jb jo gs imul scas loop stos loop stos loop stos loop stos loop stos loop scas loop lods loop lods loop lods loop stos loop lods loop (bad) loop scas loop mov subl mov orb stos loop mov subl lods loop stos loop mov subb stos loop stos loop mov subb (bad) loop stos loop stos loop (bad) loop scas add subl stos loop lods loop stos loop stos loop mov subb stos loop lods loop (bad) loop scas loop scas loop mov subl stos loop (bad) loop scas loop stos loop scas loop (bad) loop lods loop scas loop scas loop stos loop lods loop stos loop scas loop lods loop (bad) loop stos loop mov subl scas loop scas add jae insb jbe inc jbe outsb je jb jae push jns je insl add orb mov subl stos loop mov orb (bad) loop scas loop scas loop mov subb loop stos loop stos loop stos loop lods loop lods loop lods loop scas loop lods loop stos loop stos loop scas loop mov subb (bad) loop lods loop lods loop scas loop stos loop lods loop lods loop lods loop (bad) loop scas add arpl outsl jb loop stos loop stos loop lods loop mov subb (bad) loop (bad) loop stos loop (bad) loop stos loop mov subb lods loop (bad) loop (bad) loop lods loop stos loop lods loop lods loop (bad) loop lods loop lods loop mov subb stos loop stos loop (bad) loop stos loop (bad) loop stos loop scas loop (bad) loop lods loop lods loop stos loop stos loop scas loop scas add subl lods loop scas loop mov orb loop stos loop lods loop stos loop mov orb (bad) loop mov subb lods loop lods loop stos loop (bad) loop mov subl mov subb stos loop lods loop mov subl lods loop stos loop (bad) loop lods loop scas add orb loop stos loop stos loop lods loop lods loop scas loop mov subl mov subl lods loop stos loop stos loop mov subb loop lods loop scas loop stos loop (bad) loop scas loop lods loop mov subl scas loop lods loop lods loop stos loop scas loop lods loop stos loop scas add jb jns loop (bad) loop stos loop (bad) loop stos loop mov subl mov subb mov orb mov orb stos loop scas loop scas loop scas loop scas loop scas loop scas loop (bad) loop mov orb scas loop stos loop (bad) loop mov orb loop scas loop lods loop stos loop stos loop scas loop scas add outsb je insl gs imul fs gs subl (bad) loop stos loop lods loop stos loop lods loop lods loop scas loop mov orb mov orb loop lods loop mov subb loop stos loop stos loop mov subl scas loop stos loop stos loop lods loop lods loop stos loop lods loop lods loop lods loop scas loop stos loop mov subb subb scas loop lods loop mov subb scas loop lods loop scas loop stos loop scas loop (bad) loop scas loop stos loop (bad) loop lods loop stos loop (bad) loop stos loop mov orb stos loop lods loop scas loop stos loop scas loop stos loop scas loop stos loop lods loop scas loop stos loop stos loop lods loop lods loop lods loop (bad) loop scas add fs gs subb stos loop lods loop lods loop mov subl lods loop lods loop scas loop (bad) loop scas loop lods loop mov subl stos loop stos loop scas loop stos loop scas loop lods loop lods loop mov orb stos loop lods loop stos loop stos loop mov subl stos loop stos loop scas loop scas add arpl imul je insl cs gs add subl stos loop mov subb loop mov subb scas loop (bad) loop lods loop stos loop stos loop lods loop lods loop lods loop (bad) loop scas loop lods loop scas loop lods loop lods loop lods loop (bad) loop lods loop mov subb lods loop stos loop stos loop stos loop mov subb stos loop (bad) loop scas add orb mov orb loop mov orb lods loop scas loop mov subl (bad) loop mov orb loop scas loop stos loop scas loop stos loop scas loop stos loop (bad) loop lods loop mov subl mov orb stos loop (bad) loop lods loop mov subl insl bound popa insl gs subb mov subb lods loop lods loop (bad) loop scas loop stos loop stos loop (bad) loop lods loop stos loop lods loop stos loop lods loop stos loop mov orb loop scas loop mov orb loop lods loop (bad) loop scas loop mov subl mov subb loop scas loop stos loop scas add subb mov subl lods loop stos loop (bad) loop mov subl lods loop mov subl stos loop lods loop (bad) loop mov subb mov orb lods loop stos loop (bad) loop scas loop scas loop lods loop lods loop scas loop stos loop stos loop mov subb scas add subb lods loop scas loop scas loop stos loop (bad) loop mov subb scas loop scas loop mov subb scas loop scas loop stos loop stos loop stos loop lods loop stos loop stos loop scas loop (bad) loop lods loop stos loop lods loop scas loop mov subb stos loop lods loop (bad) loop stos loop (bad) loop scas loop stos loop scas loop scas add subl lods loop (bad) loop lods loop stos loop scas loop mov subb stos loop scas loop scas loop lods loop scas loop (bad) loop stos loop stos loop mov subl loop mov orb lods loop lods loop mov orb (bad) loop (bad) loop stos loop mov orb mov subb orb scas loop stos loop stos loop lods loop scas loop mov subb loop lods loop stos loop scas loop (bad) loop stos loop stos loop lods loop mov subl loop scas loop mov subl loop stos loop mov subb scas loop mov orb mov subl subb mov orb scas loop stos loop stos loop lods loop scas loop scas loop mov subb loop (bad) loop lods loop stos loop mov subl lods loop stos loop lods loop lods loop scas loop stos loop stos loop lods loop scas loop mov subb lods loop (bad) loop stos loop stos loop lods loop (bad) loop scas add jb popa insl add jae gs cs dec add subl stos loop stos loop stos loop stos loop scas loop (bad) loop (bad) loop mov subb lods loop mov subb lods loop scas loop mov orb lods loop mov subb loop stos loop (bad) loop stos loop mov subl scas loop scas loop (bad) loop stos loop lods loop stos loop scas add subl stos loop mov subl lods loop stos loop lods loop scas loop stos loop mov subl stos loop stos loop mov orb lods loop scas loop mov orb loop lods loop stos loop lods loop scas loop stos loop stos loop scas loop scas loop scas loop scas loop lods loop mov subb orb lods loop stos loop (bad) loop scas loop scas loop mov subl scas loop (bad) loop (bad) loop mov subl mov subb loop (bad) loop lods loop stos loop stos loop stos loop lods loop mov subb (bad) loop lods loop (bad) loop scas loop scas loop mov orb scas add orb lods loop lods loop scas loop lods loop (bad) loop scas loop stos loop mov orb scas loop mov orb lods loop stos loop lods loop mov subb lods loop lods loop scas loop lods loop scas loop stos loop lods loop lods loop lods loop (bad) loop lods loop (bad) loop lods loop (bad) loop scas loop lods loop mov subl jb push je gs insl add subl stos loop lods loop mov orb loop lods loop stos loop lods loop lods loop scas loop stos loop lods loop scas loop stos loop mov subb scas loop scas loop stos loop lods loop lods loop scas loop mov subl lods loop scas loop stos loop lods loop stos loop lods loop lods loop scas loop stos loop scas add subl stos loop mov subl mov subl stos loop lods loop (bad) loop mov orb loop (bad) loop stos loop lods loop stos loop scas loop (bad) loop mov subb mov orb mov subb stos loop lods loop lods loop mov subl scas loop mov subb lods loop lods loop lods loop stos loop scas loop lods loop scas loop stos loop stos loop stos loop scas loop scas loop scas loop scas loop stos loop scas loop mov subl (bad) loop scas loop stos loop lods loop (bad) loop lods loop stos loop scas loop stos loop lods loop mov subl loop scas loop scas add add outsb je insl gs jns gs popa outsb fs gs orb stos loop (bad) loop stos loop lods loop scas loop stos loop scas loop lods loop (bad) loop scas loop lods loop mov subb loop mov subl mov orb loop lods loop scas loop lods loop stos loop mov subb (bad) loop scas loop stos loop scas loop lods loop stos loop lods loop stos loop scas add subb stos loop lods loop scas loop mov subb loop (bad) loop stos loop stos loop stos loop scas loop mov subb (bad) loop scas loop scas loop stos loop scas loop lods loop scas loop mov subl lods loop scas loop lods loop mov orb lods loop lods loop stos loop (bad) loop lods loop scas loop scas add je outsl fs outsb outsw add subl scas loop lods loop (bad) loop lods loop stos loop stos loop scas loop stos loop stos loop scas loop scas loop scas loop stos loop mov subl (bad) loop lods loop stos loop mov orb (bad) loop (bad) loop mov subl stos loop (bad) loop mov subb lods loop scas loop stos loop scas add subl lods loop (bad) loop mov subl scas loop mov subb loop mov subb mov orb scas loop stos loop mov orb scas loop lods loop scas loop lods loop scas loop mov subb (bad) loop lods loop scas loop scas loop lods loop mov subl outsl fs popa jae add subl lods loop mov subl stos loop scas loop scas loop lods loop scas loop mov subb scas loop scas loop mov subb scas loop stos loop stos loop stos loop scas loop lods loop lods loop lods loop lods loop stos loop mov orb loop scas loop mov orb lods loop scas add subb scas loop stos loop lods loop lods loop scas loop mov subb lods loop scas loop scas loop lods loop lods loop mov orb loop lods loop stos loop (bad) loop lods loop mov orb stos loop lods loop scas loop mov subl scas loop stos loop scas loop (bad) loop lods loop mov subb subl mov subb scas loop lods loop stos loop scas loop lods loop mov orb scas loop stos loop scas loop lods loop scas loop mov orb lods loop stos loop stos loop scas loop lods loop stos loop (bad) loop (bad) loop scas loop scas loop scas loop lods loop mov subl loop scas loop scas add gs add jae gs cs push imul popa insl gs jb jp fs push push je jb add subb stos loop (bad) loop stos loop stos loop lods loop mov orb loop lods loop stos loop lods loop lods loop mov subb loop mov subl lods loop mov subl (bad) loop scas loop lods loop stos loop scas loop stos loop mov subl mov subb stos loop stos loop mov subb lods loop stos loop scas loop mov orb scas loop lods loop scas loop lods loop lods loop mov subl mov subl scas loop mov subb stos loop mov subl mov subl scas loop mov orb subb scas loop mov subl mov subb stos loop stos loop stos loop scas loop mov orb stos loop stos loop stos loop scas loop stos loop scas loop scas loop stos loop mov subl scas loop stos loop (bad) loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop lods loop stos loop scas add subl lods loop lods loop lods loop stos loop mov subl mov subl stos loop mov orb stos loop (bad) loop stos loop mov subb loop lods loop (bad) loop lods loop (bad) loop (bad) loop stos loop mov orb mov subb stos loop stos loop scas add orb stos loop mov subb scas loop stos loop stos loop mov subb loop (bad) loop scas loop lods loop stos loop stos loop scas loop stos loop lods loop lods loop scas loop scas loop stos loop stos loop (bad) loop lods loop scas loop stos loop mov subl lods loop scas loop stos loop mov orb add subl lods loop stos loop mov subb mov subb stos loop scas loop stos loop lods loop scas loop (bad) loop stos loop scas loop mov subb (bad) loop stos loop (bad) loop (bad) loop scas loop stos loop lods loop lods loop lods loop scas loop (bad) loop mov subb lods loop stos loop lods loop lods loop scas add subl mov orb lods loop stos loop mov subb stos loop mov subb mov subl (bad) loop lods loop stos loop stos loop lods loop mov subb mov orb loop mov subb loop lods loop lods loop scas loop scas loop stos loop scas add orb scas loop stos loop lods loop lods loop lods loop mov subl (bad) loop scas loop stos loop lods loop mov subl scas loop (bad) loop stos loop lods loop mov subb lods loop scas loop lods loop stos loop scas loop (bad) loop stos loop lods loop stos loop lods loop lods loop scas loop mov subl subl (bad) loop scas loop scas loop stos loop stos loop lods loop lods loop (bad) loop scas loop mov subl lods loop stos loop lods loop scas loop scas loop (bad) loop lods loop (bad) loop mov subb loop mov orb stos loop mov subb mov subb scas loop scas add subl (bad) loop (bad) loop lods loop stos loop scas loop scas loop (bad) loop stos loop lods loop mov subb lods loop lods loop scas loop lods loop lods loop lods loop scas loop lods loop mov subl stos loop (bad) loop scas loop stos loop stos loop scas loop scas loop scas loop stos loop lods loop mov orb scas add orb loop scas loop stos loop lods loop scas loop mov subb (bad) loop lods loop (bad) loop lods loop stos loop (bad) loop mov subb scas loop stos loop mov orb (bad) loop stos loop lods loop scas loop stos loop mov subl mov subb scas loop scas loop (bad) loop lods loop scas add subb lods loop lods loop stos loop lods loop lods loop lods loop (bad) loop mov orb scas loop lods loop stos loop stos loop lods loop lods loop scas loop mov orb scas loop lods loop stos loop (bad) loop lods loop stos loop scas loop stos loop lods loop mov subl scas loop mov subb (bad) loop scas add subb (bad) loop (bad) loop (bad) loop lods loop lods loop stos loop lods loop stos loop stos loop (bad) loop lods loop stos loop (bad) loop stos loop stos loop (bad) loop scas loop lods loop mov orb loop stos loop stos loop stos loop scas loop stos loop lods loop mov orb mov subb stos loop mov orb scas add subl mov subl lods loop mov orb loop lods loop scas loop stos loop stos loop stos loop lods loop scas loop (bad) loop mov subb mov orb (bad) loop mov orb lods loop mov orb stos loop lods loop mov orb lods loop scas add orb loop (bad) loop scas loop lods loop stos loop lods loop (bad) loop mov orb loop stos loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop stos loop scas loop lods loop stos loop stos loop (bad) loop lods loop scas loop mov subl loop stos loop stos loop scas loop stos loop stos loop stos loop mov subb subb loop scas loop scas loop mov subl lods loop mov orb scas loop mov subb (bad) loop scas loop lods loop lods loop stos loop stos loop stos loop scas loop (bad) loop scas loop scas loop scas loop mov subb (bad) loop stos loop lods loop mov orb stos loop scas add loop mov subl mov subb loop lods loop stos loop stos loop lods loop lods loop stos loop stos loop stos loop scas loop stos loop lods loop lods loop stos loop stos loop scas loop scas loop stos loop scas loop mov subb mov subl mov subl lods loop scas add subl stos loop lods loop scas loop stos loop (bad) loop mov subl mov subb (bad) loop lods loop (bad) loop lods loop mov subb lods loop stos loop (bad) loop stos loop (bad) loop stos loop mov subl mov subb stos loop stos loop (bad) loop lods loop scas add subb stos loop stos loop lods loop scas loop mov orb (bad) loop stos loop lods loop (bad) loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop mov subl loop scas loop scas loop mov subl stos loop (bad) loop lods loop mov subl mov subl subl stos loop scas loop stos loop scas loop (bad) loop scas loop (bad) loop lods loop mov subl mov subb mov orb loop scas loop lods loop stos loop scas loop mov subl loop lods loop lods loop stos loop lods loop scas loop scas loop stos loop scas loop lods loop scas add orb lods loop stos loop scas loop mov subl loop mov subl loop stos loop stos loop stos loop scas loop stos loop stos loop lods loop lods loop mov subl loop lods loop stos loop stos loop mov orb scas loop (bad) loop (bad) loop mov orb scas add subl mov subb loop scas loop scas loop mov subl stos loop lods loop scas loop mov subl (bad) loop lods loop stos loop scas loop scas loop stos loop stos loop stos loop scas loop mov subl scas loop mov subb stos loop stos loop scas add subb lods loop lods loop mov subl loop lods loop mov subl stos loop mov subb loop scas loop lods loop lods loop (bad) loop stos loop lods loop mov orb stos loop mov subl mov orb stos loop stos loop mov orb popa insb jne push jns gs orb lods loop mov orb scas loop mov subl lods loop stos loop scas loop stos loop mov subb scas loop lods loop mov orb mov subb loop stos loop scas loop scas loop lods loop lods loop mov orb mov subb loop scas add orb stos loop stos loop lods loop stos loop mov subl scas loop stos loop stos loop stos loop lods loop mov subb scas loop (bad) loop lods loop scas loop scas loop lods loop (bad) loop mov subb lods loop (bad) loop stos loop mov subb (bad) loop stos loop mov subb (bad) loop scas add subl (bad) loop stos loop (bad) loop mov orb stos loop mov orb stos loop stos loop stos loop scas loop mov subl stos loop lods loop stos loop lods loop lods loop lods loop lods loop (bad) loop scas loop stos loop lods loop mov subb (bad) loop scas loop scas loop mov subb orb stos loop lods loop scas loop mov subb stos loop scas loop (bad) loop lods loop scas loop stos loop lods loop (bad) loop (bad) loop lods loop mov orb lods loop (bad) loop stos loop stos loop scas loop lods loop stos loop (bad) loop lods loop lods loop stos loop stos loop mov orb lods loop scas loop scas loop scas loop scas add orb loop mov subl lods loop lods loop stos loop (bad) loop stos loop lods loop stos loop (bad) loop (bad) loop scas loop scas loop mov subb scas loop (bad) loop stos loop stos loop mov orb mov subb stos loop stos loop stos loop scas loop mov subl lods loop scas add subb stos loop lods loop mov subl (bad) loop lods loop stos loop lods loop scas loop mov subl loop scas loop stos loop scas loop scas loop stos loop stos loop mov subl lods loop stos loop scas loop lods loop stos loop scas loop mov subl loop stos loop scas add subl mov subl loop scas loop scas loop (bad) loop lods loop mov subl stos loop scas loop stos loop stos loop mov orb stos loop lods loop (bad) loop stos loop stos loop (bad) loop mov orb scas loop scas loop mov subl loop stos loop scas add subl stos loop lods loop (bad) loop lods loop mov subb loop stos loop stos loop stos loop lods loop (bad) loop lods loop (bad) loop lods loop (bad) loop mov subl stos loop stos loop mov subb stos loop stos loop scas loop lods loop (bad) loop scas loop stos loop stos loop mov subl orb loop lods loop stos loop stos loop scas loop scas loop stos loop stos loop mov subb stos loop (bad) loop lods loop stos loop stos loop scas loop mov subl lods loop mov subl scas loop (bad) loop lods loop lods loop stos loop lods loop stos loop lods loop mov subl add subl mov orb scas loop lods loop mov orb loop mov orb scas loop mov subb loop scas loop (bad) loop lods loop lods loop scas loop lods loop lods loop mov subl scas loop stos loop mov orb stos loop stos loop scas loop lods loop scas add push arpl subl stos loop (bad) loop scas loop scas loop scas loop lods loop lods loop scas loop stos loop scas loop (bad) loop lods loop mov subb mov subl lods loop stos loop lods loop stos loop scas loop lods loop (bad) loop lods loop scas loop stos loop scas loop lods loop (bad) loop scas loop (bad) loop mov subb add subl (bad) loop mov subb loop mov subb mov subb (bad) loop lods loop stos loop mov subl stos loop mov orb lods loop scas loop mov subl stos loop lods loop stos loop lods loop lods loop lods loop stos loop lods loop scas loop scas add orb stos loop lods loop lods loop mov subl (bad) loop lods loop lods loop lods loop stos loop lods loop stos loop lods loop lods loop stos loop scas loop mov subl mov subl loop (bad) loop lods loop scas loop (bad) loop scas loop stos loop stos loop stos loop scas loop mov subb subl loop scas loop lods loop stos loop stos loop stos loop (bad) loop (bad) loop lods loop mov subl lods loop stos loop stos loop stos loop mov orb scas loop stos loop (bad) loop stos loop mov subb loop stos loop lods loop stos loop mov subl (bad) loop (bad) loop scas add subl scas loop lods loop stos loop stos loop scas loop scas loop lods loop scas loop scas loop lods loop stos loop stos loop stos loop stos loop mov subb scas loop lods loop scas loop stos loop scas loop scas loop lods loop mov subl loop lods loop lods loop (bad) loop lods loop mov orb (bad) loop scas add orb loop lods loop stos loop stos loop stos loop mov subb mov subl (bad) loop (bad) loop stos loop stos loop scas loop stos loop lods loop lods loop lods loop stos loop (bad) loop lods loop scas loop stos loop (bad) loop (bad) loop scas loop scas loop scas loop mov subl loop scas loop stos loop scas add subl loop scas loop mov subl (bad) loop (bad) loop (bad) loop mov orb (bad) loop lods loop stos loop (bad) loop lods loop lods loop scas loop mov subl mov subl lods loop (bad) loop scas loop scas loop scas loop stos loop lods loop (bad) loop lods loop stos loop scas add orb stos loop lods loop scas loop scas loop mov subb mov orb stos loop (bad) loop (bad) loop lods loop lods loop lods loop lods loop (bad) loop stos loop lods loop mov orb scas loop scas loop (bad) loop lods loop lods loop lods loop lods loop stos loop stos loop scas loop scas loop stos loop stos loop stos loop stos loop scas add subl stos loop scas loop lods loop lods loop mov orb (bad) loop stos loop (bad) loop (bad) loop scas loop (bad) loop (bad) loop stos loop scas loop stos loop (bad) loop lods loop (bad) loop lods loop lods loop lods loop scas loop stos loop lods loop mov subl stos loop stos loop (bad) loop mov subl add orb mov orb stos loop lods loop lods loop stos loop mov subl lods loop mov subb mov orb loop scas loop stos loop scas loop mov subl lods loop lods loop stos loop lods loop mov orb mov orb stos loop lods loop scas add subl scas loop stos loop stos loop scas loop (bad) loop (bad) loop lods loop (bad) loop mov subl mov subb (bad) loop scas loop stos loop stos loop mov subl mov subb scas loop mov subl stos loop (bad) loop (bad) loop mov subb scas add subl (bad) loop stos loop lods loop stos loop lods loop lods loop (bad) loop stos loop (bad) loop lods loop scas loop stos loop lods loop stos loop (bad) loop stos loop mov subl loop mov subl stos loop mov subl scas loop mov subl stos loop lods loop scas add subl mov subb lods loop mov orb lods loop scas loop lods loop lods loop stos loop scas loop lods loop stos loop lods loop lods loop mov subl stos loop (bad) loop (bad) loop scas loop stos loop stos loop stos loop lods loop scas loop stos loop lods loop stos loop (bad) loop stos loop stos loop lods loop scas add subb mov subl stos loop (bad) loop stos loop stos loop stos loop stos loop scas loop lods loop lods loop (bad) loop mov subl (bad) loop (bad) loop stos loop stos loop stos loop lods loop mov subl mov orb (bad) loop lods loop stos loop mov subl scas add subb stos loop lods loop lods loop mov subb stos loop scas loop (bad) loop (bad) loop lods loop scas loop mov orb lods loop mov subb lods loop (bad) loop scas loop mov subb (bad) loop stos loop stos loop lods loop stos loop stos loop stos loop stos loop stos loop scas loop lods loop stos loop scas loop scas add subb stos loop lods loop mov subl scas loop (bad) loop lods loop (bad) loop scas loop scas loop lods loop scas loop stos loop lods loop scas loop stos loop lods loop stos loop mov orb mov orb loop lods loop scas loop mov subb lods loop mov orb scas loop stos loop scas add subl lods loop lods loop stos loop mov subb stos loop stos loop lods loop mov orb loop (bad) loop stos loop lods loop stos loop lods loop mov subl lods loop mov subb lods loop scas loop stos loop stos loop lods loop (bad) loop (bad) loop lods loop (bad) loop mov subl subl loop stos loop stos loop mov subl stos loop stos loop stos loop mov subl loop mov orb stos loop mov subl lods loop mov subl stos loop stos loop (bad) loop stos loop lods loop lods loop scas loop scas add subb loop scas loop (bad) loop (bad) loop mov subb scas loop stos loop scas loop stos loop stos loop lods loop stos loop mov orb stos loop lods loop mov subl lods loop scas loop mov subl loop stos loop stos loop mov subl (bad) loop (bad) loop scas add subl loop lods loop (bad) loop lods loop mov orb lods loop stos loop lods loop (bad) loop scas loop lods loop stos loop lods loop (bad) loop mov subb scas loop stos loop stos loop lods loop lods loop scas loop lods loop (bad) loop stos loop lods loop stos loop stos loop (bad) loop mov subb (bad) loop mov subb subl stos loop lods loop lods loop mov subl (bad) loop mov subl mov subl stos loop stos loop mov subb lods loop stos loop lods loop scas loop scas loop scas loop lods loop stos loop mov orb (bad) loop lods loop stos loop lods loop scas add subl scas loop lods loop (bad) loop stos loop mov orb scas loop lods loop mov subb lods loop lods loop stos loop mov subb stos loop mov subl lods loop scas loop scas loop stos loop scas loop stos loop scas loop scas loop mov subb scas loop stos loop lods loop scas add subl lods loop lods loop mov orb loop lods loop stos loop scas loop stos loop stos loop mov subl lods loop (bad) loop stos loop lods loop stos loop mov orb loop stos loop (bad) loop lods loop scas loop lods loop lods loop scas loop (bad) loop (bad) loop stos loop mov subl lods loop scas loop stos loop stos loop lods loop lods loop mov orb mov orb stos loop stos loop lods loop scas loop mov subl loop (bad) loop stos loop mov subb scas loop mov orb loop lods loop stos loop lods loop lods loop (bad) loop (bad) loop (bad) loop lods loop lods loop scas add subb loop scas loop (bad) loop mov subl lods loop scas loop mov orb (bad) loop scas loop scas loop lods loop scas loop lods loop scas loop scas loop lods loop lods loop (bad) loop lods loop mov subl loop (bad) loop lods loop lods loop mov orb lods loop lods loop lods loop scas add orb mov subl scas loop lods loop scas loop lods loop mov subb lods loop stos loop mov subb stos loop mov subb mov orb mov subl mov subb lods loop mov subb mov orb lods loop scas add subb loop lods loop stos loop mov subl stos loop stos loop stos loop lods loop (bad) loop lods loop mov subb mov subl (bad) loop scas loop lods loop mov subb (bad) loop mov orb lods loop (bad) loop lods loop scas loop mov orb mov subb orb (bad) loop lods loop mov subb loop stos loop lods loop stos loop (bad) loop scas loop mov subl mov subl scas loop stos loop scas loop stos loop stos loop lods loop mov subl (bad) loop stos loop lods loop lods loop mov subb subb mov subb stos loop mov subl scas loop (bad) loop scas loop scas loop stos loop lods loop mov subl (bad) loop scas loop stos loop mov orb loop stos loop scas loop scas loop stos loop stos loop stos loop lods loop stos loop scas loop stos loop scas loop stos loop lods loop scas add subb lods loop (bad) loop lods loop lods loop lods loop scas loop scas loop stos loop stos loop mov subl stos loop (bad) loop stos loop scas loop mov subb mov orb scas loop lods loop scas loop stos loop stos loop lods loop scas loop scas loop scas loop mov orb lods loop stos loop (bad) loop scas add subb scas loop stos loop (bad) loop lods loop stos loop lods loop mov subb mov orb lods loop mov subl mov subb (bad) loop lods loop stos loop stos loop stos loop stos loop lods loop (bad) loop lods loop mov orb loop lods loop stos loop mov subb scas add subb lods loop scas loop lods loop scas loop lods loop mov subb mov subb mov subl loop lods loop scas loop lods loop scas loop mov orb lods loop mov orb stos loop mov subb stos loop stos loop lods loop lods loop scas loop scas loop lods loop scas add orb (bad) loop (bad) loop mov subb scas loop stos loop (bad) loop lods loop (bad) loop lods loop scas loop scas loop scas loop mov subl loop stos loop mov subb scas loop mov orb loop stos loop lods loop mov orb lods loop mov subl scas add orb loop stos loop (bad) loop mov orb lods loop (bad) loop lods loop mov orb lods loop lods loop stos loop stos loop stos loop (bad) loop lods loop lods loop lods loop (bad) loop lods loop mov orb loop (bad) loop mov subl loop mov subl lods loop scas add subl loop lods loop scas loop mov orb scas loop (bad) loop mov subb lods loop stos loop lods loop stos loop stos loop stos loop stos loop stos loop scas loop (bad) loop lods loop mov subl stos loop mov subb loop stos loop stos loop stos loop (bad) loop lods loop mov subb subb mov subl stos loop lods loop lods loop stos loop mov subb loop lods loop stos loop (bad) loop scas loop lods loop stos loop lods loop (bad) loop stos loop lods loop stos loop stos loop stos loop (bad) loop scas loop lods loop stos loop stos loop lods loop scas loop stos loop lods loop stos loop scas loop stos loop scas add subl mov subl mov subb mov subl loop scas loop mov subl loop mov subl stos loop lods loop stos loop lods loop stos loop (bad) loop lods loop lods loop lods loop lods loop stos loop (bad) loop lods loop scas loop lods loop scas add subl loop mov orb stos loop lods loop mov orb loop lods loop mov orb lods loop mov subl scas loop mov subb lods loop stos loop scas loop stos loop scas loop stos loop stos loop mov subl stos loop scas loop scas add subb mov subl stos loop mov subl loop stos loop scas loop (bad) loop lods loop scas loop lods loop lods loop lods loop (bad) loop stos loop mov orb (bad) loop mov subb (bad) loop stos loop stos loop (bad) loop lods loop lods loop lods loop stos loop lods loop (bad) loop lods loop scas add subb loop mov orb lods loop lods loop scas loop scas loop lods loop lods loop scas loop scas loop (bad) loop stos loop scas loop lods loop lods loop stos loop stos loop stos loop lods loop lods loop mov orb loop stos loop stos loop mov orb loop mov orb lods loop mov orb subb (bad) loop mov orb (bad) loop scas loop scas loop stos loop (bad) loop lods loop lods loop lods loop (bad) loop scas loop lods loop scas loop lods loop stos loop lods loop scas loop (bad) loop lods loop stos loop (bad) loop lods loop stos loop lods loop lods loop lods loop mov subl (bad) loop lods loop lods loop (bad) loop stos loop scas add subb stos loop scas loop lods loop lods loop (bad) loop mov orb lods loop mov subl loop (bad) loop stos loop scas loop scas loop stos loop lods loop (bad) loop lods loop scas loop stos loop lods loop lods loop mov subl stos loop scas loop mov subb stos loop stos loop (bad) loop scas add subb stos loop lods loop lods loop scas loop scas loop scas loop lods loop mov subl scas loop stos loop stos loop stos loop stos loop stos loop stos loop mov subl scas loop mov orb scas loop scas loop mov orb stos loop stos loop mov subl mov subb subb mov subb mov orb lods loop lods loop mov orb stos loop (bad) loop lods loop mov orb loop stos loop (bad) loop stos loop stos loop (bad) loop scas loop stos loop lods loop scas loop lods loop lods loop lods loop scas loop lods loop lods loop stos loop stos loop lods loop scas loop scas add subb lods loop lods loop scas loop lods loop stos loop mov orb loop (bad) loop stos loop scas loop lods loop stos loop lods loop lods loop stos loop mov subl mov orb stos loop stos loop lods loop lods loop (bad) loop mov orb stos loop (bad) loop lods loop mov subb scas add orb lods loop stos loop scas loop stos loop stos loop stos loop scas loop (bad) loop lods loop mov subl lods loop stos loop scas loop stos loop mov subl mov orb scas loop stos loop scas loop scas loop mov orb stos loop scas loop lods loop stos loop (bad) loop stos loop stos loop scas add subb lods loop (bad) loop lods loop lods loop mov orb loop (bad) loop lods loop (bad) loop scas loop stos loop scas loop lods loop (bad) loop stos loop (bad) loop (bad) loop mov subb stos loop scas loop lods loop mov orb mov subb lods loop mov subl lods loop stos loop scas add subb mov orb scas loop lods loop stos loop scas loop lods loop scas loop mov subl scas loop lods loop scas loop stos loop stos loop mov subb loop scas loop lods loop lods loop (bad) loop scas loop stos loop lods loop lods loop mov subl mov subb loop scas add subl mov subl stos loop stos loop lods loop stos loop (bad) loop mov orb (bad) loop scas loop lods loop stos loop stos loop stos loop scas loop lods loop stos loop scas loop mov orb loop mov subl stos loop stos loop (bad) loop scas loop (bad) loop stos loop stos loop scas add subb mov subl lods loop stos loop mov subb scas loop lods loop lods loop mov subl stos loop mov subl (bad) loop stos loop lods loop lods loop mov subb stos loop lods loop stos loop stos loop mov orb lods loop (bad) loop stos loop scas add subl scas loop lods loop stos loop scas loop mov orb lods loop mov orb mov subl lods loop mov subb loop stos loop lods loop (bad) loop stos loop stos loop scas loop stos loop scas loop mov orb mov orb (bad) loop lods loop mov subb subl loop mov orb stos loop stos loop stos loop lods loop stos loop stos loop stos loop lods loop (bad) loop scas loop scas loop stos loop mov subl mov orb mov subl loop stos loop stos loop lods loop mov subl (bad) loop scas add orb loop scas loop stos loop lods loop (bad) loop scas loop (bad) loop lods loop scas loop stos loop lods loop lods loop stos loop mov subb stos loop mov subb lods loop scas loop mov subl lods loop mov subb scas loop scas loop scas loop mov subl stos loop scas add subl mov orb loop lods loop stos loop mov subl (bad) loop stos loop scas loop mov orb loop stos loop (bad) loop (bad) loop scas loop stos loop lods loop (bad) loop (bad) loop lods loop lods loop stos loop scas loop stos loop mov orb scas loop mov subl orb stos loop stos loop lods loop lods loop stos loop (bad) loop lods loop lods loop mov orb lods loop mov subl lods loop lods loop stos loop mov subl loop scas loop lods loop lods loop scas loop stos loop (bad) loop stos loop mov subl scas loop scas loop mov subb orb (bad) loop mov subb scas loop scas loop lods loop stos loop lods loop scas loop lods loop lods loop scas loop lods loop lods loop lods loop stos loop scas loop lods loop lods loop lods loop mov subl (bad) loop lods loop stos loop stos loop scas loop stos loop scas loop stos loop lods loop mov orb add orb loop (bad) loop (bad) loop stos loop stos loop scas loop mov subl (bad) loop scas loop scas loop scas loop lods loop mov orb loop scas loop stos loop (bad) loop lods loop scas loop scas loop lods loop (bad) loop stos loop lods loop scas loop lods loop scas loop lods loop stos loop lods loop lods loop stos loop mov subb subl stos loop mov subl lods loop scas loop lods loop mov orb stos loop stos loop (bad) loop scas loop mov subb stos loop scas loop mov subl mov orb loop (bad) loop stos loop stos loop stos loop scas loop lods loop mov subl orb lods loop scas loop mov orb (bad) loop scas loop stos loop scas loop (bad) loop stos loop stos loop lods loop scas loop scas loop stos loop scas loop mov subl mov subl (bad) loop scas loop stos loop stos loop mov subl loop mov subb scas add subl lods loop scas loop stos loop lods loop (bad) loop stos loop scas loop (bad) loop lods loop scas loop scas loop (bad) loop lods loop lods loop stos loop mov subb stos loop mov subl stos loop mov subb lods loop lods loop scas loop lods loop lods loop stos loop stos loop lods loop stos loop scas add subb (bad) loop scas loop stos loop stos loop scas loop scas loop scas loop mov subl scas loop lods loop (bad) loop scas loop lods loop scas loop stos loop (bad) loop scas loop mov subb (bad) loop lods loop mov orb mov subb scas loop stos loop mov subb stos loop (bad) loop scas add subb mov subl stos loop stos loop stos loop stos loop stos loop stos loop mov orb (bad) loop stos loop (bad) loop mov orb lods loop lods loop stos loop (bad) loop stos loop lods loop stos loop lods loop (bad) loop mov subl stos loop scas loop lods loop scas loop mov subl orb (bad) loop lods loop (bad) loop stos loop mov orb mov subl lods loop scas loop lods loop stos loop stos loop stos loop lods loop scas loop stos loop stos loop mov subl stos loop stos loop mov subb stos loop mov subl lods loop scas loop scas add subl (bad) loop lods loop stos loop (bad) loop stos loop lods loop lods loop stos loop lods loop mov subl stos loop stos loop mov subb stos loop scas loop stos loop (bad) loop (bad) loop (bad) loop lods loop mov subb scas loop stos loop stos loop stos loop lods loop mov subb lods loop scas add subl loop lods loop lods loop stos loop stos loop stos loop mov subl loop lods loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop mov subl lods loop scas loop mov subb stos loop scas loop scas loop lods loop mov subl stos loop (bad) loop scas add subb lods loop scas loop mov subl stos loop stos loop scas loop lods loop (bad) loop scas loop stos loop scas loop stos loop scas loop stos loop stos loop (bad) loop stos loop stos loop lods loop scas loop stos loop mov orb scas loop stos loop lods loop lods loop mov subl stos loop (bad) loop stos loop scas add orb mov orb scas loop lods loop lods loop lods loop scas loop lods loop scas loop mov subl mov subl scas loop lods loop lods loop lods loop stos loop (bad) loop lods loop mov subb lods loop mov subb stos loop scas loop scas loop lods loop mov subl subb loop mov orb loop mov subb stos loop mov subb mov subb mov subl lods loop stos loop lods loop lods loop mov orb stos loop mov orb lods loop lods loop stos loop stos loop stos loop (bad) loop stos loop scas add subl lods loop stos loop mov subl scas loop lods loop stos loop mov subl scas loop mov subb mov subl scas loop lods loop mov subb loop mov subl scas loop lods loop lods loop mov orb scas add subl (bad) loop lods loop lods loop lods loop stos loop lods loop stos loop stos loop lods loop mov subl lods loop lods loop scas loop (bad) loop stos loop stos loop lods loop lods loop stos loop stos loop lods loop lods loop lods loop stos loop stos loop scas loop stos loop (bad) loop (bad) loop mov orb (bad) loop lods loop scas add subl lods loop stos loop mov subb mov orb lods loop mov subb loop mov orb (bad) loop (bad) loop mov orb mov orb stos loop mov subb scas loop lods loop mov subl mov subb add subl stos loop scas loop mov subl scas loop stos loop stos loop scas loop mov subl lods loop mov orb (bad) loop lods loop lods loop mov subb (bad) loop (bad) loop scas loop (bad) loop lods loop mov subl mov orb loop scas add orb mov subl stos loop stos loop mov subl stos loop (bad) loop scas loop (bad) loop stos loop mov orb mov subb (bad) loop lods loop stos loop stos loop mov subb lods loop stos loop stos loop stos loop (bad) loop (bad) loop (bad) loop scas loop lods loop lods loop scas add subl lods loop scas loop stos loop scas loop stos loop scas loop mov subb lods loop (bad) loop scas loop stos loop mov orb (bad) loop scas loop lods loop stos loop lods loop lods loop mov subl lods loop scas loop mov orb loop stos loop stos loop stos loop stos loop scas loop scas add orb mov subb scas loop stos loop lods loop lods loop scas loop lods loop lods loop mov subb (bad) loop scas loop (bad) loop stos loop lods loop stos loop stos loop lods loop mov subl loop scas loop stos loop stos loop mov subb lods loop (bad) loop mov orb scas loop scas add subb mov subb scas loop scas loop scas loop stos loop stos loop stos loop stos loop stos loop lods loop (bad) loop (bad) loop mov orb scas loop scas loop stos loop stos loop lods loop (bad) loop mov subb stos loop stos loop stos loop scas loop (bad) loop scas loop scas loop scas loop stos loop stos loop stos loop stos loop scas add orb stos loop lods loop stos loop mov orb loop (bad) loop stos loop stos loop scas loop (bad) loop (bad) loop scas loop lods loop scas loop (bad) loop stos loop (bad) loop mov subb scas loop lods loop lods loop (bad) loop (bad) loop lods loop lods loop scas loop mov subl mov subl scas add orb scas loop stos loop (bad) loop lods loop lods loop stos loop scas loop (bad) loop scas loop stos loop stos loop stos loop mov orb loop (bad) loop scas loop stos loop lods loop mov subb (bad) loop mov subl (bad) loop scas loop stos loop lods loop mov subl mov subb subb lods loop scas loop scas loop stos loop lods loop stos loop stos loop lods loop lods loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop mov orb scas loop scas loop mov orb stos loop lods loop lods loop (bad) loop scas loop stos loop (bad) loop (bad) loop stos loop lods loop scas loop stos loop (bad) loop stos loop mov subb subb lods loop stos loop stos loop scas loop stos loop (bad) loop lods loop stos loop (bad) loop (bad) loop lods loop scas loop stos loop (bad) loop lods loop stos loop stos loop scas loop lods loop stos loop scas loop scas loop lods loop lods loop (bad) loop lods loop mov orb (bad) loop (bad) loop (bad) loop stos loop lods loop mov subl subb lods loop lods loop mov subl loop stos loop scas loop stos loop lods loop scas loop scas loop mov subl loop (bad) loop mov subb loop lods loop lods loop lods loop mov orb lods loop mov subb loop lods loop (bad) loop scas loop stos loop scas add orb stos loop mov orb loop lods loop scas loop lods loop scas loop lods loop scas loop stos loop lods loop lods loop lods loop lods loop stos loop mov subl loop mov subl stos loop scas loop (bad) loop mov orb lods loop mov subl mov subb subb lods loop mov subb loop scas loop mov orb stos loop stos loop lods loop scas loop mov subb lods loop scas loop mov orb scas loop scas loop lods loop scas loop mov subb scas loop (bad) loop (bad) loop (bad) loop lods loop (bad) loop lods loop stos loop stos loop scas add subb loop mov orb mov subb stos loop mov subl mov subb mov orb scas loop stos loop lods loop scas loop mov subb stos loop lods loop lods loop scas loop stos loop (bad) loop lods loop lods loop scas loop lods loop stos loop mov subl stos loop lods loop stos loop scas loop lods loop stos loop lods loop stos loop lods loop lods loop lods loop stos loop scas loop stos loop mov subb loop mov subl mov subl mov subl scas loop mov subb lods loop lods loop lods loop mov subl orb stos loop scas loop scas loop mov subl stos loop stos loop stos loop (bad) loop scas loop stos loop lods loop (bad) loop stos loop stos loop scas loop stos loop mov subb stos loop stos loop stos loop scas loop lods loop stos loop stos loop stos loop stos loop scas loop stos loop lods loop lods loop lods loop (bad) loop scas add subl lods loop mov subl lods loop stos loop mov orb loop lods loop scas loop lods loop lods loop (bad) loop stos loop lods loop stos loop stos loop mov subl scas loop lods loop (bad) loop lods loop scas loop lods loop (bad) loop scas loop mov subb lods loop (bad) loop scas add orb loop lods loop lods loop stos loop stos loop scas loop (bad) loop mov orb (bad) loop mov orb lods loop mov orb stos loop lods loop stos loop (bad) loop lods loop lods loop stos loop mov subb lods loop (bad) loop mov orb lods loop lods loop stos loop mov subb subl scas loop lods loop lods loop stos loop stos loop lods loop mov subl mov orb stos loop stos loop (bad) loop stos loop stos loop (bad) loop lods loop (bad) loop stos loop (bad) loop lods loop scas loop mov subl (bad) loop (bad) loop mov subl mov subl orb lods loop scas loop scas loop scas loop mov subl scas loop stos loop (bad) loop stos loop stos loop (bad) loop mov subl stos loop stos loop stos loop (bad) loop stos loop mov subl lods loop lods loop (bad) loop scas loop scas loop (bad) loop stos loop stos loop lods loop mov subb subb mov orb stos loop lods loop scas loop mov subl lods loop scas loop scas loop scas loop (bad) loop mov orb lods loop scas loop lods loop lods loop stos loop scas loop mov subb mov subl scas loop lods loop scas loop lods loop mov subb subl stos loop stos loop scas loop (bad) loop (bad) loop (bad) loop scas loop lods loop mov subl lods loop stos loop lods loop stos loop mov subb lods loop stos loop scas loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop stos loop (bad) loop lods loop stos loop (bad) loop mov subl subb stos loop scas loop mov orb lods loop stos loop (bad) loop stos loop lods loop mov subl lods loop stos loop lods loop scas loop scas loop stos loop scas loop scas loop stos loop scas loop lods loop (bad) loop lods loop scas loop stos loop (bad) loop mov subl stos loop lods loop stos loop (bad) loop scas add subl (bad) loop (bad) loop mov orb mov orb loop lods loop stos loop lods loop lods loop (bad) loop stos loop stos loop mov orb mov subl lods loop scas loop (bad) loop scas loop mov orb (bad) loop (bad) loop scas loop stos loop scas loop scas loop lods loop scas add subb lods loop scas loop scas loop lods loop lods loop lods loop stos loop stos loop scas loop scas loop mov subb mov subl lods loop stos loop (bad) loop (bad) loop lods loop (bad) loop scas loop stos loop lods loop lods loop stos loop lods loop lods loop stos loop lods loop lods loop lods loop scas loop lods loop lods loop mov subb orb (bad) loop mov orb stos loop lods loop mov orb stos loop (bad) loop scas loop lods loop mov subl lods loop scas loop (bad) loop stos loop stos loop lods loop (bad) loop mov subb lods loop (bad) loop lods loop mov subl stos loop stos loop scas add subb mov subl stos loop scas loop scas loop stos loop scas loop lods loop stos loop stos loop stos loop mov orb scas loop scas loop lods loop lods loop stos loop mov subl lods loop scas loop stos loop lods loop scas loop scas loop lods loop mov orb stos loop mov subb subb mov subb stos loop mov subb lods loop stos loop mov subl lods loop scas loop lods loop lods loop scas loop mov orb lods loop mov subl mov orb stos loop lods loop stos loop lods loop lods loop mov orb scas loop scas add subb stos loop mov orb (bad) loop lods loop mov subl mov subb stos loop lods loop lods loop mov orb loop scas loop mov orb stos loop lods loop stos loop stos loop mov subl lods loop stos loop (bad) loop (bad) loop mov subl subl mov subl scas loop stos loop (bad) loop scas loop (bad) loop stos loop lods loop lods loop mov orb lods loop lods loop scas loop mov subl (bad) loop mov subl lods loop scas loop scas loop (bad) loop stos loop stos loop (bad) loop mov subl orb scas loop lods loop stos loop lods loop stos loop mov subb mov orb loop lods loop lods loop (bad) loop lods loop lods loop lods loop mov subb loop (bad) loop lods loop (bad) loop lods loop (bad) loop mov orb mov subl stos loop lods loop lods loop scas add orb scas loop lods loop mov orb stos loop scas loop stos loop stos loop stos loop mov subb scas loop mov subl scas loop (bad) loop stos loop mov subl scas loop scas loop scas loop stos loop scas loop mov subb lods loop lods loop mov orb scas add subl stos loop (bad) loop stos loop scas loop lods loop stos loop scas loop mov subb loop stos loop mov subb lods loop lods loop mov subl lods loop scas loop mov orb stos loop lods loop stos loop (bad) loop mov orb lods loop scas loop mov subl lods loop scas loop stos loop scas loop mov orb scas loop lods loop stos loop (bad) loop scas loop stos loop (bad) loop scas loop mov subb mov orb scas loop lods loop stos loop lods loop (bad) loop mov orb scas loop scas loop stos loop scas loop mov subl loop stos loop scas add subb mov subb loop scas loop lods loop lods loop (bad) loop stos loop lods loop stos loop lods loop scas loop (bad) loop mov subb lods loop lods loop scas loop stos loop mov orb mov subl stos loop lods loop scas loop stos loop mov subb mov subl orb scas loop (bad) loop stos loop lods loop (bad) loop lods loop mov subb mov orb loop mov subb scas loop mov subb (bad) loop (bad) loop stos loop stos loop mov orb scas loop stos loop (bad) loop mov subl mov subl scas add orb mov subl (bad) loop mov subb loop stos loop scas loop scas loop scas loop scas loop scas loop lods loop lods loop (bad) loop stos loop mov orb mov subb mov subb mov subb (bad) loop mov orb stos loop lods loop lods loop scas add subl scas loop stos loop (bad) loop mov subl loop lods loop stos loop mov orb loop scas loop lods loop mov orb scas loop lods loop stos loop mov subb scas loop (bad) loop scas loop scas loop mov subl loop scas loop mov orb orb scas loop scas loop (bad) loop stos loop stos loop lods loop scas loop mov subl mov subl loop (bad) loop scas loop scas loop stos loop scas loop stos loop scas loop lods loop (bad) loop (bad) loop scas loop stos loop scas loop lods loop stos loop lods loop lods loop stos loop lods loop lods loop scas loop (bad) loop scas add orb mov orb loop stos loop lods loop stos loop scas loop lods loop lods loop stos loop stos loop (bad) loop lods loop mov subl scas loop scas loop scas loop (bad) loop scas loop (bad) loop (bad) loop stos loop (bad) loop mov orb mov subb stos loop stos loop scas loop scas loop lods loop scas add orb scas loop stos loop mov subl mov subl mov subb mov subl stos loop scas loop stos loop stos loop scas loop stos loop lods loop mov subb mov orb (bad) loop scas loop scas loop lods loop stos loop lods loop mov subb subl scas loop stos loop lods loop mov subl stos loop lods loop mov orb mov subl lods loop scas loop lods loop scas loop scas loop lods loop stos loop stos loop lods loop lods loop scas loop lods loop scas loop scas loop lods loop scas loop (bad) loop lods loop scas loop lods loop scas add subl lods loop (bad) loop stos loop stos loop lods loop (bad) loop scas loop scas loop (bad) loop lods loop lods loop mov subb lods loop stos loop (bad) loop lods loop scas loop (bad) loop (bad) loop scas loop stos loop (bad) loop lods loop lods loop stos loop stos loop mov subl stos loop mov orb loop scas add subb lods loop lods loop scas loop scas loop stos loop lods loop stos loop (bad) loop stos loop lods loop lods loop mov orb loop mov orb scas loop mov orb scas loop lods loop (bad) loop mov subl stos loop mov subb lods loop mov subb loop scas add subb stos loop scas loop stos loop stos loop mov subb stos loop lods loop stos loop lods loop lods loop lods loop stos loop lods loop scas loop (bad) loop scas loop stos loop stos loop scas loop lods loop lods loop lods loop stos loop mov orb (bad) loop stos loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop mov orb subl mov subl stos loop (bad) loop scas loop lods loop scas loop stos loop mov subb lods loop stos loop (bad) loop mov subl lods loop stos loop scas loop stos loop mov subl stos loop lods loop lods loop mov orb mov subl subl mov subl stos loop stos loop lods loop mov orb loop stos loop stos loop stos loop lods loop scas loop scas loop (bad) loop scas loop lods loop scas loop (bad) loop stos loop mov subb lods loop lods loop stos loop stos loop scas loop mov subb lods loop mov subb subl loop (bad) loop (bad) loop stos loop mov subl (bad) loop scas loop stos loop mov subl loop stos loop mov orb lods loop stos loop stos loop mov subl lods loop lods loop scas loop lods loop mov subb mov subb scas add subl stos loop lods loop scas loop stos loop lods loop (bad) loop lods loop stos loop scas loop scas loop stos loop stos loop stos loop lods loop lods loop scas loop lods loop mov orb mov orb loop lods loop stos loop mov subb mov subl mov subb mov subb subl lods loop lods loop stos loop mov orb mov subb stos loop mov subl stos loop scas loop stos loop mov orb stos loop scas loop stos loop mov subb stos loop scas loop mov subb scas loop scas loop mov subl subb scas loop stos loop lods loop lods loop stos loop stos loop lods loop scas loop lods loop lods loop stos loop mov orb lods loop stos loop stos loop scas loop (bad) loop stos loop mov subb lods loop mov subl stos loop stos loop stos loop stos loop mov subl lods loop stos loop scas add orb (bad) loop (bad) loop stos loop (bad) loop stos loop (bad) loop lods loop stos loop mov subb stos loop mov subb lods loop mov orb loop stos loop stos loop scas loop stos loop stos loop scas loop scas loop stos loop stos loop lods loop stos loop (bad) loop lods loop mov subl mov subb subl lods loop lods loop lods loop lods loop stos loop lods loop stos loop mov subb lods loop stos loop lods loop (bad) loop lods loop mov orb stos loop lods loop (bad) loop lods loop lods loop mov subb lods loop scas loop stos loop stos loop mov subb scas loop stos loop scas loop scas add subb stos loop mov subb lods loop stos loop mov subl (bad) loop scas loop lods loop stos loop stos loop mov subl (bad) loop stos loop scas loop stos loop stos loop mov orb stos loop lods loop (bad) loop lods loop lods loop scas loop (bad) loop lods loop stos loop scas loop mov subb orb stos loop mov subl loop stos loop stos loop lods loop mov subl loop scas loop scas loop lods loop lods loop lods loop (bad) loop mov orb stos loop scas loop stos loop mov subl mov orb lods loop scas loop mov orb orb loop lods loop scas loop stos loop mov orb scas loop (bad) loop (bad) loop lods loop stos loop stos loop scas loop scas loop (bad) loop lods loop stos loop scas loop lods loop lods loop mov subb lods loop lods loop scas loop lods loop lods loop stos loop stos loop stos loop mov subb mov subl subb scas loop (bad) loop mov subl stos loop stos loop scas loop stos loop (bad) loop mov subl lods loop mov subl lods loop scas loop mov orb loop stos loop scas loop lods loop lods loop lods loop stos loop lods loop lods loop mov orb stos loop scas add orb loop stos loop lods loop stos loop mov subb lods loop mov orb lods loop stos loop mov orb lods loop lods loop stos loop scas loop lods loop mov orb (bad) loop lods loop lods loop stos loop scas loop mov subb mov subl stos loop stos loop scas add subb lods loop mov subl stos loop lods loop lods loop lods loop mov orb mov subb stos loop mov subb lods loop mov orb lods loop scas loop (bad) loop mov subl lods loop scas loop lods loop lods loop stos loop lods loop lods loop scas loop scas add subb mov subl lods loop stos loop stos loop (bad) loop stos loop mov subl stos loop lods loop stos loop lods loop mov orb (bad) loop (bad) loop mov subl loop stos loop scas loop (bad) loop stos loop (bad) loop lods loop mov orb stos loop lods loop scas add orb (bad) loop scas loop stos loop lods loop stos loop mov subl lods loop mov subl (bad) loop lods loop lods loop stos loop mov subb mov subb (bad) loop scas loop stos loop scas loop scas loop (bad) loop lods loop lods loop (bad) loop scas loop scas loop mov orb stos loop mov subl scas loop stos loop stos loop stos loop lods loop lods loop stos loop mov orb stos loop mov subb scas loop stos loop mov subl mov orb (bad) loop lods loop lods loop lods loop lods loop stos loop stos loop scas loop stos loop mov subb scas add orb loop lods loop stos loop scas loop mov subl lods loop stos loop stos loop scas loop lods loop mov subl stos loop scas loop scas loop lods loop mov subl lods loop mov subb stos loop lods loop (bad) loop stos loop (bad) loop scas loop stos loop (bad) loop lods loop scas add subl loop mov subb scas loop lods loop mov orb mov subl loop lods loop mov subl lods loop stos loop lods loop (bad) loop stos loop mov subl loop mov subl scas loop stos loop scas loop (bad) loop scas add subb scas loop stos loop lods loop stos loop lods loop scas loop scas loop scas loop lods loop mov subb lods loop stos loop lods loop scas loop mov subb mov subl lods loop mov subl scas loop stos loop (bad) loop stos loop lods loop scas loop scas loop lods loop scas loop lods loop scas add orb mov subb loop (bad) loop (bad) loop scas loop lods loop lods loop mov subl scas loop scas loop lods loop stos loop (bad) loop scas loop stos loop scas loop mov orb mov orb mov subb lods loop scas loop (bad) loop stos loop lods loop mov subl orb scas loop stos loop lods loop scas loop stos loop stos loop lods loop stos loop (bad) loop stos loop stos loop lods loop stos loop scas loop stos loop mov subl (bad) loop lods loop mov orb stos loop lods loop scas loop stos loop scas loop stos loop lods loop mov subb stos loop stos loop lods loop mov subb orb mov orb loop stos loop scas loop stos loop mov subb stos loop scas loop (bad) loop lods loop lods loop (bad) loop mov orb scas loop mov subl mov subb mov subl stos loop mov subb loop mov subb orb scas loop stos loop scas loop lods loop (bad) loop lods loop mov subl mov orb (bad) loop (bad) loop stos loop mov subb lods loop stos loop (bad) loop (bad) loop (bad) loop (bad) loop stos loop stos loop mov orb lods loop lods loop stos loop stos loop lods loop lods loop lods loop scas add subb lods loop lods loop lods loop scas loop stos loop stos loop scas loop scas loop scas loop stos loop lods loop scas loop lods loop lods loop mov subl stos loop mov subb lods loop (bad) loop mov subb mov subb loop (bad) loop lods loop stos loop scas loop (bad) loop mov orb mov subb loop (bad) loop mov orb scas loop scas loop (bad) loop mov subb (bad) loop lods loop scas loop lods loop stos loop mov orb mov subl mov orb mov subl lods loop lods loop (bad) loop scas loop lods loop stos loop stos loop scas add orb mov subb scas loop stos loop lods loop scas loop mov subl loop stos loop (bad) loop (bad) loop (bad) loop scas loop scas loop scas loop scas loop mov subb (bad) loop mov subb mov orb loop mov subb (bad) loop stos loop scas loop (bad) loop scas add orb lods loop stos loop mov subl scas loop mov subl loop (bad) loop stos loop scas loop (bad) loop stos loop mov orb mov subl (bad) loop (bad) loop lods loop mov subb mov orb lods loop stos loop lods loop stos loop mov subb subb mov subl stos loop mov orb scas loop (bad) loop lods loop scas loop lods loop lods loop lods loop stos loop mov subb loop scas loop stos loop stos loop lods loop mov subl lods loop lods loop mov subl stos loop lods loop lods loop scas add subb scas loop stos loop mov subl stos loop lods loop mov subb lods loop mov orb (bad) loop (bad) loop mov subb stos loop stos loop stos loop scas loop scas loop scas loop stos loop mov subb lods loop mov subl lods loop (bad) loop mov subb subb loop stos loop stos loop lods loop stos loop lods loop lods loop mov orb loop (bad) loop (bad) loop (bad) loop mov subb stos loop stos loop mov subb mov subb loop scas loop scas loop scas loop stos loop scas loop stos loop lods loop stos loop (bad) loop stos loop scas loop scas add orb stos loop (bad) loop lods loop mov subb mov subb lods loop lods loop mov orb loop mov subb scas loop lods loop stos loop stos loop mov subl stos loop lods loop mov subb loop stos loop scas loop stos loop lods loop lods loop lods loop scas add subl loop (bad) loop lods loop mov orb stos loop scas loop stos loop lods loop mov orb lods loop scas loop stos loop mov subb (bad) loop scas loop lods loop lods loop stos loop (bad) loop scas loop scas loop lods loop mov subl stos loop scas loop stos loop lods loop scas add subl lods loop stos loop lods loop lods loop lods loop lods loop scas loop lods loop lods loop (bad) loop mov subl loop stos loop mov orb stos loop lods loop stos loop mov orb loop stos loop (bad) loop lods loop mov subl stos loop lods loop scas loop mov subb orb lods loop lods loop scas loop scas loop stos loop scas loop lods loop stos loop lods loop stos loop mov subb loop mov subb lods loop lods loop stos loop stos loop lods loop (bad) loop scas loop scas loop (bad) loop mov subl scas loop (bad) loop lods loop (bad) loop mov subl subl scas loop stos loop scas loop (bad) loop scas loop mov subl stos loop lods loop lods loop stos loop stos loop lods loop scas loop scas loop scas loop stos loop lods loop stos loop scas loop stos loop lods loop stos loop (bad) loop (bad) loop mov orb mov subl loop lods loop scas loop scas add subl stos loop mov subl scas loop lods loop lods loop mov orb loop lods loop mov orb scas loop lods loop lods loop mov subb stos loop mov subb stos loop scas loop mov orb mov subb loop stos loop stos loop scas add orb lods loop lods loop lods loop mov orb mov orb lods loop stos loop lods loop stos loop mov subl stos loop stos loop lods loop mov subb scas loop scas loop stos loop mov orb (bad) loop mov subb stos loop (bad) loop lods loop mov subb orb scas loop scas loop stos loop (bad) loop (bad) loop mov subb lods loop lods loop (bad) loop lods loop (bad) loop stos loop scas loop mov subl lods loop mov subb stos loop (bad) loop stos loop mov subl scas loop stos loop mov subl (bad) loop scas add orb scas loop lods loop stos loop mov subb lods loop (bad) loop stos loop stos loop stos loop stos loop (bad) loop scas loop lods loop stos loop scas loop (bad) loop (bad) loop lods loop lods loop mov subb stos loop stos loop stos loop stos loop stos loop scas loop (bad) loop scas loop stos loop scas loop stos loop stos loop stos loop (bad) loop scas add subl lods loop lods loop mov subb scas loop stos loop scas loop lods loop mov orb stos loop stos loop stos loop stos loop (bad) loop (bad) loop stos loop lods loop lods loop lods loop (bad) loop stos loop scas loop mov orb mov subb (bad) loop (bad) loop (bad) loop lods loop scas loop stos loop scas add orb lods loop stos loop mov subl scas loop stos loop stos loop (bad) loop scas loop lods loop lods loop stos loop scas loop scas loop stos loop lods loop (bad) loop mov subb lods loop mov subb (bad) loop lods loop lods loop scas loop stos loop mov subl loop mov subl subl stos loop mov subb stos loop stos loop stos loop stos loop stos loop stos loop stos loop mov orb loop scas loop mov subb scas loop mov subb lods loop (bad) loop mov orb loop mov subl (bad) loop mov subb subl (bad) loop mov subl loop mov orb loop scas loop stos loop mov subb stos loop stos loop stos loop lods loop lods loop stos loop scas loop mov orb loop stos loop mov subb mov orb lods loop mov subl lods loop stos loop lods loop scas loop stos loop stos loop scas loop stos loop lods loop lods loop mov subb mov subl mov subb lods loop lods loop mov orb mov orb mov subl stos loop lods loop lods loop scas loop mov orb loop scas add subb loop scas loop scas loop mov orb stos loop mov subl loop lods loop stos loop scas loop stos loop lods loop mov orb stos loop scas loop lods loop (bad) loop mov subb lods loop mov subb loop lods loop scas loop scas loop scas loop mov subb subb scas loop lods loop scas loop (bad) loop (bad) loop lods loop scas loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop (bad) loop (bad) loop lods loop stos loop lods loop mov subb lods loop (bad) loop lods loop mov subb mov subb stos loop lods loop stos loop stos loop lods loop stos loop scas loop scas add orb loop lods loop mov subl (bad) loop mov subb stos loop mov subb lods loop lods loop lods loop stos loop scas loop lods loop (bad) loop mov subl scas loop (bad) loop scas loop scas loop scas loop (bad) loop lods loop lods loop lods loop stos loop (bad) loop mov subb outsl outsb data16 gs jns je jb bound add je imul subb stos loop lods loop lods loop (bad) loop mov subl lods loop mov subl mov subb loop stos loop (bad) loop lods loop scas loop stos loop scas loop stos loop stos loop stos loop scas loop lods loop (bad) loop lods loop (bad) loop (bad) loop mov subb mov subl subb loop stos loop scas loop lods loop lods loop stos loop stos loop stos loop stos loop lods loop stos loop mov subb loop mov orb loop lods loop stos loop scas loop stos loop stos loop scas loop (bad) loop mov subb lods loop scas loop scas loop mov subl mov subb subb lods loop mov subl mov subl stos loop lods loop stos loop lods loop stos loop scas loop lods loop lods loop scas loop lods loop stos loop scas loop scas loop stos loop scas loop stos loop scas loop mov subl loop mov subb loop stos loop lods loop mov subb subl loop lods loop mov subl stos loop stos loop scas loop scas loop stos loop stos loop lods loop mov subl scas loop mov subb lods loop stos loop stos loop lods loop mov subl lods loop (bad) loop (bad) loop mov orb lods loop scas add subl mov orb mov orb stos loop (bad) loop scas loop stos loop stos loop stos loop stos loop mov subl loop (bad) loop mov subl stos loop mov subb mov orb stos loop stos loop scas loop mov subl scas add subl (bad) loop stos loop (bad) loop stos loop mov subl (bad) loop mov subl loop scas loop stos loop mov orb mov orb (bad) loop mov subl stos loop (bad) loop mov orb stos loop scas loop stos loop mov subl subl loop lods loop stos loop scas loop lods loop stos loop lods loop mov orb scas loop scas loop lods loop lods loop lods loop lods loop lods loop scas loop mov subl mov subb loop scas loop lods loop lods loop scas loop scas loop scas loop scas loop lods loop mov subb subb loop mov subl stos loop lods loop stos loop scas loop stos loop scas loop lods loop stos loop stos loop (bad) loop mov subl stos loop mov orb lods loop (bad) loop stos loop stos loop mov orb (bad) loop lods loop mov subl scas loop mov subb orb scas loop lods loop lods loop mov subl lods loop mov subl loop mov subl stos loop stos loop stos loop mov subl scas loop mov subb stos loop lods loop stos loop lods loop (bad) loop stos loop (bad) loop mov subb subl loop stos loop lods loop (bad) loop lods loop lods loop mov subb mov subb loop (bad) loop lods loop mov subb scas loop mov orb loop mov subl lods loop lods loop (bad) loop lods loop lods loop scas loop stos loop stos loop scas loop mov subb orb scas loop stos loop lods loop (bad) loop mov orb scas loop lods loop scas loop (bad) loop scas loop stos loop lods loop scas loop mov orb loop mov subl mov orb lods loop scas loop lods loop scas loop stos loop stos loop (bad) loop mov subb scas loop scas add orb lods loop lods loop lods loop lods loop stos loop scas loop (bad) loop stos loop lods loop stos loop (bad) loop scas loop (bad) loop mov orb (bad) loop stos loop stos loop lods loop (bad) loop mov subb scas loop lods loop scas loop stos loop scas loop stos loop (bad) loop stos loop stos loop lods loop lods loop stos loop stos loop lods loop scas add subl mov orb scas loop stos loop scas loop scas loop lods loop (bad) loop scas loop lods loop scas loop lods loop scas loop lods loop mov subb stos loop mov orb loop lods loop stos loop mov subl loop lods loop stos loop scas loop lods loop stos loop stos loop stos loop scas add subb (bad) loop lods loop scas loop mov subb stos loop (bad) loop stos loop mov subl loop stos loop mov orb mov subb scas loop lods loop stos loop scas loop stos loop stos loop mov orb loop lods loop stos loop lods loop lods loop lods loop scas loop lods loop scas add orb lods loop lods loop lods loop stos loop scas loop (bad) loop lods loop scas loop lods loop stos loop lods loop stos loop (bad) loop lods loop mov subb lods loop lods loop scas loop lods loop stos loop scas loop (bad) loop (bad) loop scas loop (bad) loop lods loop mov orb (bad) loop scas loop lods loop lods loop (bad) loop scas loop (bad) loop scas add subl loop mov orb mov orb stos loop (bad) loop lods loop lods loop lods loop (bad) loop (bad) loop lods loop scas loop scas loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop scas loop mov subl stos loop mov subl scas loop scas loop stos loop scas loop scas add orb lods loop lods loop stos loop mov subl stos loop lods loop (bad) loop scas loop (bad) loop mov subl stos loop lods loop lods loop scas loop (bad) loop lods loop lods loop lods loop lods loop stos loop (bad) loop stos loop lods loop scas loop mov subb stos loop mov orb loop scas add subb mov subl loop scas loop scas loop scas loop stos loop stos loop mov subb (bad) loop (bad) loop mov subl lods loop stos loop (bad) loop mov orb mov subb lods loop mov subl mov subb lods loop (bad) loop scas add subb stos loop lods loop (bad) loop lods loop scas loop lods loop lods loop lods loop mov orb lods loop mov orb loop (bad) loop lods loop lods loop mov subb mov orb (bad) loop scas loop stos loop (bad) loop lods loop (bad) loop mov orb mov subb scas loop scas add orb lods loop stos loop stos loop stos loop mov subl loop (bad) loop lods loop mov subl stos loop lods loop scas loop lods loop scas loop (bad) loop lods loop stos loop stos loop mov orb mov orb loop mov subb (bad) loop lods loop stos loop scas loop scas add subb mov subl (bad) loop lods loop lods loop lods loop stos loop mov subb lods loop (bad) loop lods loop (bad) loop mov orb stos loop mov subl loop stos loop scas loop stos loop lods loop stos loop lods loop stos loop mov orb stos loop lods loop stos loop scas add orb scas loop (bad) loop stos loop scas loop lods loop lods loop (bad) loop (bad) loop stos loop mov subb scas loop lods loop scas loop mov subl stos loop lods loop (bad) loop scas loop lods loop stos loop scas loop mov orb stos loop mov subb loop lods loop lods loop (bad) loop (bad) loop scas add subb mov subb lods loop scas loop mov subl stos loop lods loop lods loop mov subb loop scas loop lods loop mov subb (bad) loop stos loop (bad) loop lods loop scas loop lods loop (bad) loop mov subb loop mov subb (bad) loop scas loop lods loop scas add orb mov orb stos loop lods loop mov subl loop lods loop lods loop lods loop mov subl stos loop (bad) loop stos loop mov subl (bad) loop lods loop mov orb (bad) loop scas loop (bad) loop scas loop (bad) loop lods loop lods loop stos loop mov subb subl stos loop mov subb stos loop mov subb mov subb scas loop (bad) loop lods loop scas loop lods loop scas loop stos loop scas loop stos loop mov subl scas loop scas loop scas loop stos loop mov subb loop scas loop scas loop scas loop (bad) loop scas add subl scas loop (bad) loop stos loop stos loop (bad) loop (bad) loop scas loop lods loop lods loop stos loop stos loop (bad) loop mov subl mov subb scas loop (bad) loop mov orb mov orb mov subb stos loop scas loop stos loop scas loop stos loop mov subl subl scas loop scas loop mov orb lods loop stos loop lods loop (bad) loop lods loop scas loop scas loop mov orb (bad) loop lods loop lods loop mov subl scas loop lods loop (bad) loop stos loop scas loop lods loop (bad) loop lods loop lods loop mov subl mov subb orb mov orb loop lods loop mov subb scas loop scas loop scas loop lods loop stos loop lods loop scas loop (bad) loop stos loop stos loop mov orb mov subb (bad) loop mov subb mov subb loop stos loop stos loop (bad) loop lods loop lods loop scas add subb stos loop stos loop lods loop stos loop mov orb lods loop mov orb stos loop (bad) loop scas loop lods loop lods loop stos loop stos loop lods loop lods loop scas loop stos loop stos loop lods loop lods loop scas loop lods loop stos loop mov subb stos loop mov subb (bad) loop stos loop (bad) loop scas add orb loop mov subl lods loop lods loop scas loop lods loop stos loop mov subb loop mov subb stos loop scas loop scas loop lods loop lods loop stos loop lods loop lods loop mov orb loop stos loop stos loop stos loop mov subl stos loop scas loop scas add orb mov subb lods loop lods loop (bad) loop lods loop lods loop stos loop lods loop stos loop scas loop stos loop mov subb loop lods loop mov subl loop scas loop (bad) loop scas loop stos loop mov orb stos loop lods loop lods loop (bad) loop scas loop mov orb scas add subb (bad) loop mov subl mov subl (bad) loop stos loop mov subb mov subb loop lods loop mov orb stos loop lods loop lods loop (bad) loop lods loop mov subl (bad) loop mov subb mov subb scas add subb stos loop stos loop lods loop lods loop lods loop stos loop mov orb loop scas loop (bad) loop lods loop scas loop mov orb scas loop stos loop lods loop stos loop scas loop stos loop lods loop lods loop lods loop lods loop mov subb lods loop mov subb stos loop stos loop stos loop scas loop scas add subb scas loop mov subl lods loop scas loop stos loop mov subl (bad) loop mov subl (bad) loop stos loop lods loop lods loop lods loop scas loop scas loop stos loop mov subb lods loop scas loop stos loop lods loop mov subb stos loop (bad) loop scas loop scas add subb stos loop stos loop mov subl lods loop scas loop lods loop (bad) loop scas loop mov subb lods loop scas loop stos loop lods loop (bad) loop mov subb stos loop scas loop lods loop stos loop (bad) loop stos loop stos loop scas loop scas loop mov subl lods loop lods loop (bad) loop scas add subb scas loop scas loop lods loop scas loop scas loop lods loop stos loop lods loop mov subl scas loop (bad) loop lods loop mov subl lods loop stos loop stos loop mov subl scas loop lods loop lods loop (bad) loop lods loop mov subb scas loop lods loop lods loop mov subb subb (bad) loop scas loop (bad) loop stos loop mov subb mov subl scas loop lods loop scas loop lods loop lods loop lods loop mov subb stos loop stos loop lods loop stos loop lods loop lods loop lods loop stos loop (bad) loop mov subb stos loop stos loop (bad) loop stos loop lods loop scas add orb (bad) loop (bad) loop lods loop (bad) loop stos loop stos loop stos loop lods loop mov subl lods loop stos loop scas loop stos loop stos loop (bad) loop (bad) loop mov subb mov orb scas loop stos loop scas loop (bad) loop stos loop mov subl stos loop lods loop scas loop stos loop scas add orb loop stos loop (bad) loop scas loop mov orb mov subl lods loop lods loop mov subb (bad) loop (bad) loop mov orb scas loop scas loop mov subl stos loop lods loop scas loop mov subb mov subb (bad) loop scas loop scas add subl lods loop (bad) loop scas loop scas loop lods loop lods loop lods loop lods loop stos loop stos loop stos loop lods loop mov subb (bad) loop scas loop stos loop stos loop lods loop mov orb stos loop lods loop (bad) loop scas loop stos loop scas loop lods loop lods loop stos loop lods loop scas loop scas loop scas loop lods loop scas add orb mov subl scas loop lods loop lods loop mov orb stos loop stos loop lods loop mov orb lods loop mov orb scas loop lods loop stos loop stos loop mov subb lods loop scas loop lods loop scas loop scas loop (bad) loop scas loop mov orb mov subb subb lods loop mov subb lods loop stos loop mov subb lods loop mov subb scas loop scas loop scas loop scas loop mov orb lods loop lods loop mov orb mov orb lods loop scas loop lods loop lods loop lods loop lods loop stos loop (bad) loop mov subb subb scas loop lods loop stos loop lods loop lods loop scas loop mov subb scas loop lods loop lods loop (bad) loop scas loop stos loop scas loop scas loop (bad) loop (bad) loop scas loop mov subb mov subl loop (bad) loop mov orb mov orb scas loop stos loop scas add subl lods loop scas loop mov subb loop stos loop lods loop mov orb stos loop mov orb (bad) loop scas loop mov orb scas loop (bad) loop mov orb (bad) loop lods loop scas loop stos loop mov orb mov orb loop (bad) loop scas add orb loop stos loop lods loop lods loop scas loop (bad) loop (bad) loop mov subl lods loop scas loop stos loop stos loop lods loop stos loop mov subb mov subb loop stos loop mov subb scas loop lods loop scas loop stos loop lods loop mov orb loop scas loop scas add subl lods loop lods loop stos loop scas loop lods loop (bad) loop scas loop mov subb loop lods loop scas loop lods loop lods loop scas loop (bad) loop scas loop stos loop lods loop stos loop stos loop stos loop stos loop stos loop lods loop mov subb loop scas loop lods loop (bad) loop stos loop stos loop stos loop mov subb subl mov subl scas loop lods loop stos loop stos loop mov orb stos loop lods loop lods loop (bad) loop scas loop stos loop lods loop lods loop stos loop scas loop mov subb lods loop stos loop lods loop stos loop lods loop (bad) loop lods loop stos loop scas loop lods loop scas loop mov subb subb stos loop scas loop (bad) loop scas loop scas loop scas loop mov orb stos loop mov subl lods loop lods loop mov orb loop scas loop mov subl lods loop stos loop stos loop scas loop stos loop scas loop lods loop mov subl loop scas add subl scas loop stos loop scas loop lods loop mov subb mov orb stos loop mov subb (bad) loop mov orb lods loop scas loop (bad) loop scas loop mov subl stos loop stos loop stos loop scas loop mov subb stos loop (bad) loop mov subl orb mov subb lods loop stos loop stos loop stos loop scas loop mov subb scas loop lods loop stos loop lods loop stos loop scas loop stos loop lods loop (bad) loop mov subl scas loop scas loop lods loop scas loop stos loop lods loop lods loop stos loop stos loop stos loop (bad) loop (bad) loop stos loop scas add subb lods loop (bad) loop lods loop lods loop stos loop stos loop stos loop mov subl scas loop stos loop lods loop stos loop lods loop lods loop scas loop (bad) loop (bad) loop (bad) loop (bad) loop lods loop lods loop scas loop lods loop scas loop lods loop scas loop stos loop stos loop scas loop mov subl loop mov subb subb scas loop stos loop (bad) loop (bad) loop scas loop stos loop scas loop stos loop mov subb (bad) loop lods loop scas loop lods loop scas loop stos loop scas loop lods loop lods loop stos loop lods loop scas loop lods loop stos loop stos loop mov subb mov subl mov subl scas add subb lods loop mov orb loop lods loop stos loop scas loop stos loop scas loop stos loop mov subb mov orb mov subb scas loop mov orb loop stos loop (bad) loop lods loop lods loop scas loop scas loop (bad) loop lods loop lods loop mov subb (bad) loop scas add subl stos loop scas loop lods loop (bad) loop scas loop scas loop (bad) loop (bad) loop lods loop mov subl scas loop scas loop scas loop scas loop stos loop mov subb mov subb lods loop mov subl (bad) loop mov subl scas loop stos loop stos loop scas add subb (bad) loop lods loop stos loop scas loop stos loop mov subb mov subl scas loop scas loop lods loop lods loop lods loop lods loop mov orb loop stos loop lods loop lods loop stos loop lods loop stos loop (bad) loop (bad) loop lods loop stos loop stos loop mov subl scas loop scas add orb (bad) loop scas loop lods loop mov subb loop (bad) loop (bad) loop lods loop (bad) loop scas loop lods loop mov subl stos loop lods loop lods loop lods loop lods loop mov subl stos loop stos loop lods loop scas loop stos loop (bad) loop lods loop lods loop (bad) loop lods loop mov orb scas loop stos loop (bad) loop stos loop mov subl stos loop mov subb (bad) loop lods loop stos loop stos loop (bad) loop scas loop (bad) loop mov subl lods loop stos loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop (bad) loop lods loop stos loop mov subl scas loop mov subb subb loop scas loop scas loop lods loop mov orb mov subb mov subb stos loop (bad) loop (bad) loop scas loop stos loop lods loop lods loop scas loop stos loop stos loop lods loop (bad) loop mov subb loop lods loop mov subl mov orb scas add jno ja dec sub outsb xor cmp gs loop mov subb lods loop scas loop lods loop (bad) loop stos loop stos loop scas loop mov subb scas loop lods loop mov subl lods loop scas loop lods loop stos loop scas loop scas loop lods loop lods loop (bad) loop lods loop lods loop scas loop scas loop mov orb scas loop stos loop mov subl subb loop stos loop lods loop scas loop (bad) loop stos loop mov subb lods loop lods loop stos loop stos loop scas loop lods loop lods loop stos loop mov subl lods loop lods loop lods loop lods loop lods loop stos loop lods loop stos loop scas loop stos loop stos loop (bad) loop (bad) loop lods loop lods loop stos loop scas add subb lods loop lods loop stos loop scas loop lods loop (bad) loop lods loop lods loop stos loop (bad) loop scas loop (bad) loop lods loop (bad) loop mov subl scas loop stos loop lods loop lods loop stos loop (bad) loop lods loop lods loop scas loop lods loop scas loop stos loop mov subl mov subl scas add orb mov orb (bad) loop mov subl stos loop mov orb mov subl mov orb scas loop scas loop (bad) loop scas loop (bad) loop lods loop lods loop lods loop scas loop (bad) loop mov subl scas loop mov orb (bad) loop scas add orb mov subl loop stos loop stos loop lods loop lods loop scas loop (bad) loop stos loop mov subl stos loop scas loop mov subl mov orb mov orb loop (bad) loop mov subl lods loop lods loop lods loop stos loop scas add orb lods loop (bad) loop lods loop scas loop (bad) loop stos loop mov subl loop stos loop mov orb mov orb lods loop (bad) loop scas loop mov orb scas loop (bad) loop stos loop (bad) loop mov subb loop scas loop scas loop stos loop scas loop mov subl (bad) loop lods loop lods loop mov orb mov orb (bad) loop (bad) loop stos loop stos loop stos loop scas loop lods loop scas loop scas loop scas loop lods loop stos loop lods loop lods loop scas loop stos loop scas loop stos loop (bad) loop mov orb loop scas loop lods loop mov subl stos loop scas add subb (bad) loop stos loop stos loop stos loop (bad) loop stos loop scas loop lods loop scas loop stos loop scas loop stos loop mov orb loop mov subb mov orb lods loop mov subb stos loop mov orb stos loop (bad) loop scas loop (bad) loop scas loop scas loop scas loop (bad) loop scas add orb loop stos loop scas loop stos loop (bad) loop scas loop lods loop stos loop scas loop lods loop lods loop mov orb lods loop scas loop stos loop stos loop lods loop lods loop stos loop lods loop mov subl stos loop scas loop mov subl lods loop (bad) loop lods loop scas loop scas loop stos loop scas add subl (bad) loop stos loop stos loop stos loop stos loop lods loop lods loop stos loop stos loop mov orb scas loop (bad) loop (bad) loop mov subl stos loop lods loop lods loop scas loop (bad) loop scas loop mov subl mov subl stos loop stos loop scas loop lods loop scas add subl loop stos loop scas loop lods loop mov subb lods loop stos loop stos loop mov subb scas loop (bad) loop mov orb stos loop mov subl mov orb scas loop lods loop lods loop stos loop scas loop mov orb lods loop lods loop lods loop scas add subb loop lods loop scas loop lods loop scas loop mov orb stos loop stos loop scas loop stos loop stos loop stos loop lods loop stos loop scas loop mov subb scas loop mov subl mov orb (bad) loop stos loop lods loop mov subb mov subl scas add subl mov orb stos loop lods loop scas loop lods loop scas loop lods loop (bad) loop stos loop lods loop lods loop stos loop lods loop mov subl lods loop lods loop (bad) loop scas loop stos loop stos loop lods loop stos loop stos loop stos loop stos loop stos loop stos loop scas loop lods loop lods loop lods loop (bad) loop scas add orb stos loop lods loop stos loop (bad) loop scas loop stos loop mov subl lods loop mov orb (bad) loop scas loop stos loop lods loop mov subb lods loop lods loop lods loop (bad) loop lods loop lods loop stos loop mov subl loop (bad) loop stos loop lods loop scas loop stos loop scas add subl stos loop mov orb loop mov subl lods loop scas loop stos loop mov subl stos loop scas loop mov subb scas loop stos loop stos loop scas loop stos loop mov subb (bad) loop (bad) loop lods loop stos loop mov subb scas loop scas add subl mov orb lods loop stos loop stos loop lods loop lods loop stos loop mov subb scas loop stos loop stos loop scas loop (bad) loop stos loop stos loop lods loop stos loop lods loop scas loop scas loop scas loop lods loop stos loop lods loop lods loop (bad) loop mov subb lods loop lods loop lods loop stos loop scas add subb (bad) loop stos loop lods loop mov orb (bad) loop scas loop mov subl loop (bad) loop stos loop mov subl scas loop mov subl stos loop lods loop scas loop lods loop stos loop scas loop stos loop mov orb loop mov subb scas add subb stos loop lods loop scas loop (bad) loop mov orb loop mov subb scas loop (bad) loop mov subl (bad) loop stos loop (bad) loop mov subl scas loop scas loop scas loop mov orb mov orb loop mov orb (bad) loop scas add orb stos loop mov orb mov subb loop stos loop scas loop lods loop (bad) loop stos loop stos loop mov subl (bad) loop mov orb scas loop stos loop stos loop (bad) loop lods loop scas loop mov orb loop lods loop stos loop scas loop lods loop (bad) loop lods loop scas add subl (bad) loop lods loop stos loop (bad) loop mov subl (bad) loop lods loop stos loop (bad) loop scas loop mov subl lods loop lods loop lods loop scas loop scas loop stos loop (bad) loop stos loop mov subb loop mov subl stos loop stos loop lods loop (bad) loop scas add subb loop mov subb loop stos loop stos loop scas loop mov subb stos loop lods loop mov subl (bad) loop lods loop scas loop mov subl loop (bad) loop (bad) loop (bad) loop scas loop stos loop (bad) loop scas loop lods loop mov subb loop mov subb subl mov subb loop scas loop stos loop (bad) loop lods loop (bad) loop stos loop (bad) loop stos loop mov subl (bad) loop stos loop lods loop mov subb mov orb stos loop stos loop stos loop scas loop lods loop scas loop stos loop lods loop lods loop (bad) loop mov subb subb mov subb scas loop stos loop mov subb scas loop scas loop (bad) loop scas loop lods loop lods loop scas loop stos loop stos loop lods loop stos loop stos loop scas loop lods loop lods loop stos loop stos loop (bad) loop mov subb stos loop scas loop lods loop mov subb mov subb subb stos loop lods loop mov orb lods loop scas loop mov subb stos loop mov subb stos loop mov subb (bad) loop lods loop stos loop stos loop stos loop stos loop scas loop lods loop lods loop lods loop scas loop stos loop stos loop lods loop lods loop mov subb lods loop scas add subl scas loop mov orb (bad) loop stos loop stos loop stos loop scas loop scas loop scas loop scas loop mov subl mov orb mov subl (bad) loop (bad) loop mov subl lods loop scas loop mov orb scas loop stos loop stos loop scas add orb mov orb lods loop mov orb loop scas loop lods loop lods loop scas loop scas loop stos loop lods loop mov subl scas loop lods loop stos loop lods loop stos loop scas loop lods loop stos loop (bad) loop stos loop scas loop lods loop stos loop stos loop stos loop lods loop scas loop stos loop scas loop scas add orb mov subb stos loop stos loop (bad) loop scas loop (bad) loop scas loop lods loop lods loop mov subb (bad) loop lods loop (bad) loop (bad) loop stos loop scas loop lods loop (bad) loop stos loop mov subb loop scas loop stos loop scas loop lods loop scas loop scas loop (bad) loop scas loop mov subl (bad) loop scas loop lods loop mov subb mov subb mov subb lods loop scas loop stos loop lods loop (bad) loop mov orb lods loop mov orb stos loop mov subb mov subl scas loop mov subl lods loop stos loop scas add orb mov orb lods loop lods loop mov subb stos loop lods loop mov subb mov subb lods loop mov subl mov subb stos loop lods loop lods loop (bad) loop lods loop (bad) loop stos loop scas loop (bad) loop mov orb mov subl subb lods loop (bad) loop stos loop stos loop stos loop lods loop stos loop lods loop (bad) loop scas loop stos loop stos loop lods loop mov orb stos loop stos loop lods loop stos loop mov subl loop (bad) loop mov subb scas loop mov orb loop lods loop stos loop scas loop scas add subl (bad) loop (bad) loop scas loop lods loop stos loop scas loop lods loop stos loop (bad) loop lods loop mov orb (bad) loop stos loop scas loop mov subb stos loop stos loop stos loop mov subl scas loop mov subb stos loop stos loop mov subl lods loop scas add subl mov orb stos loop (bad) loop stos loop stos loop scas loop lods loop lods loop stos loop stos loop (bad) loop scas loop stos loop scas loop lods loop mov orb lods loop mov subb loop lods loop lods loop scas loop lods loop scas loop lods loop scas loop stos loop mov subl scas add subb mov subb mov subb stos loop scas loop lods loop scas loop scas loop lods loop lods loop mov subl mov subl stos loop stos loop mov subl mov subl scas loop mov subl scas loop lods loop scas add subl loop mov subb loop stos loop lods loop scas loop (bad) loop lods loop lods loop (bad) loop mov orb scas loop mov orb mov orb (bad) loop stos loop lods loop lods loop mov subb loop stos loop mov subl loop (bad) loop scas add subb scas loop lods loop mov subl (bad) loop stos loop lods loop (bad) loop stos loop stos loop (bad) loop stos loop (bad) loop mov orb scas loop stos loop scas loop stos loop lods loop stos loop scas loop lods loop stos loop lods loop (bad) loop mov subl loop lods loop lods loop scas loop mov subb subb loop mov subb mov orb loop (bad) loop lods loop scas loop lods loop scas loop stos loop scas loop lods loop mov subb stos loop mov orb stos loop lods loop (bad) loop lods loop mov subb (bad) loop stos loop mov orb loop scas loop scas add subb stos loop scas loop scas loop scas loop lods loop (bad) loop lods loop lods loop mov subb stos loop lods loop lods loop stos loop lods loop stos loop scas loop lods loop (bad) loop scas loop (bad) loop stos loop lods loop (bad) loop lods loop mov subl (bad) loop stos loop scas loop stos loop lods loop stos loop lods loop lods loop scas add bound outsb and jne add jae insl bound jb fs popa jb inc je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs je je jb bound add jae insl bound imul outsl outsb inc je jb bound add imul jne add insl push imul je jb bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae push jne je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound gs jb jo imul imul jae gs bound imul imul push inc push push inc je jb bound add bound outsb cs je bound push gs jne arpl jb,pn jae jne arpl add outsb je xor inc jns add insb outsl arpl inc inc dec popa outsb fs gs jns add jo outsl insl popa imul inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs inc jae gs bound gs insb jbe add je xor push gs insb jbe dec gs outsl add fs outsl fs add gs jb push gs insb jbe push imul add je popa jb insl gs jb add jb insl gs jb outsb outsw add je jns gs inc jb add je push popa jb gs dec outsb jbe imul outsl popa add jbe jb outsb insl outsb je push je imul je insl gs gs jo jb add imul inc jb popa jns inc gs js arpl imul insl bound addr16 dec popa outsb imul fs add je push push inc cmp addr16 dec popa insl add je inc jne insb dec popa insl add jo gs outsb jbe jb popa outsb je inc gs jns gs inc outsl outsb jbe jb add popa jae ss je imul inc outsb je jns jae gs bound inc gs popa outsb imul jae jne arpl je gs insl add je dec outsb addr16 add data16 inc insb outsl arpl outsl jo add popa add popa fs jns add je jns gs jb insl dec popa outsb fs add je gs outsl add outsb arpl add jne insb jae inc popa imul gs dec jae popa arpl jb jne add popa jb add je inc jne jb outsb je push add gs inc bound addr16 addr16 dec jae je popa arpl add dec outsl addr16 pop dec jae insb imul push je imul gs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl outsl jo inc jno popa insb imul add js push jb je add add repz pop test cmpsl aas add mov add add cmp xchg dec test (bad) push add xchg jg call add adc outsb data16 gs js jbe xor xor add mov pop push sbb mov and add add add push sbb or push adc adc add adc add adc add or adc sbb adc add sbb add add add sbb add add adc add adc add or add adc add and adc push add and push pop add sbb add add sub or add sub add adc add adc sbb add adc add adc pop add adc add adc adc cmp xor sbb add push push or add cmp add add add add push push add adc inc push add add inc add add add inc sbb add adc add add add add add inc push adc add add add or adc push sbb or add or add sbb adc add adc add sub add or push adc push adc add adc add sbb adc push add push adc add add or or and add sub sub and adc adc or add add or or push adc and or adc add sbb add or adc add adc add add add and add sub add or add add or add adc sbb and add cmp sbb add sbb cmp add adc push adc adc sbb adc add adc push adc push and or cmp add sbb add or add adc or add add and add add add add xor xor xor xor add add and popa data16 gs sub sub sub xor xor cmp add add add jno add add add add push add add push add push jb jo outsl outsb inc js gs imul ja add add or add add adc or or add add or add or adc or sbb adc sbb add cltd add sbb and add sbbb or or push pop and adc and sbb add and sbb add sbb sbb sbb sbb push sbb or add adc sbb add adc sbb adc or or or pop add sysret pop push adc adc adc adc sbb add inc or add sbb add push add push add add pop and or and or and add add cmp sbb add sbb and add inc add add sbb pop or sub or or or pop or or or or or or pop or push add sbb adc pop and push sbb and adc pop add adc add add push add add or or pop add or add or pop push or or or push pop add or or pop adc sub or or or or or or pop or or or or or and add pop adc push or or or add or or movsb fildl mov and add add outsl jb js dec popa imul jb gs insb add add add and 