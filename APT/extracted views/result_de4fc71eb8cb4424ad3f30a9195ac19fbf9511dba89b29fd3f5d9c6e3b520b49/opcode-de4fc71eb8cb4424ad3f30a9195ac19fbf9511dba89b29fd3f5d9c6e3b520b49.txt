pusha cmp add add add add add add add or add add add add push cmp add and pop add xor add add adc add jo add add or outsl add add or adc adc adc add add jb add jo add add sub or pop lea add add push adc push add add or add add adc xor add add add xor sbb add add add xor add add adc add jo add add or outsl add add or adc adc adc add add jb add jo add add sub or sbb adc adc push add mov add add adc push add adc outsl add add add or add add adc xor add add adc add add add push add sbb add add add adc sub push add or jb add jo add add sub add or add or add or pop jb add jo add add je add sbb jb add jo add add je add sbb add add add je add sbb add adc and or add add add je add sbb push push adc outsl or add adc pop pop adc adc adc jae add or pop adc or add or pop adc or pop outsl push add or or outsl sldt or or or or add add adc adc sub add adc adc outsl adc add adc adc adc lea add add movups push add add or ficom adc or adc add sub add or fiadd sub adc add add add out add or xor add add jb add jo add add or outsl add add or adc adc adc add add jb add jo add add sub or lea add add push adc push add add or add or add add adc xor add add adc add add add push add add add adc add push add add adc add or add insb sub add or adc add push sub repz add add push add or sbb pop add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop dec out mov mov fistl je lds cmp lcall std lahf cli aas movsl mov pop pop dec mov mov (bad) mov lds (bad) enter lret pop lret lock inc aam xchg (bad) (bad) cmc mov loope in aas outsl in roll out ljmp add sub adc mov movsb and test mov mov das sub add lret push or aaa dec mov ds jl inc pop fiaddl movl mov dec das pushf push enter into jno pop lods int3 shll iret push cwtl push mov jb or add add or add add add add test add xchg add add or add add add or add add faddl add cwtl pop add add add imul add add add add add add add add dec add add incb add pop push add pop add add add add or add or add add add (bad) add add or add add add push or add add rorl add pop add pop add add add fiaddl add xor add mov push add xor bound push add inc add jbe pop add add pop add jae add dec add js ja push add pop add add data16 add add cmp add outsl add cmp outsl add add inc add dec add arpl xor add add inc add inc add data16 dec add push add add daa add xor add push add inc add jb dec add jb jp dec add push add add dec add push add push add push add sub add add push add inc add inc add dec add jno inc add aaa add add inc add add jae jo inc add js inc add aas jne add xor add dec add add push add add inc add jbe add dec add push add add add add jne insl add outsb add add add imul add jbe jb xor inc add push add popa add dec add add push add push add dec add add sub add add add outsl add add cmp jno imul add push add cmp pop add aaa add jp jo dec add dec add add pop add add add dec add add push add ja jb push add xor jno pop add cmp inc add add leave add sub add xor inc add data16 jp push add jns jo inc add push add push push add add ja data16 icebp add dec cmp outsb add jns inc add inc add add insl add add cmp outsl add add xor jb data16 xor add inc add xor push push inc add inc add dec add dec add sbb add cmp add jo xor popa add dec add ja inc add cmp push add add add add jp ja jae inc add dec add dec add push add inc add insb add add push dec add dec add inc add push add dec add jne inc add push add add xor inc add xor cmp dec add cs add inc add add push add add data16 xor xor bound jne add xor push cmp push add dec add add dec inc add dec add dec add push add xor inc add data16 add popa add add inc add push add add push add push add push add add add add add add add bound push bound xor push add add inc add add add push add jne add aaa add push add add add pop add jno push add dec add add outsb add inc add dec add dec add ja push add pop add add insl add add pop add inc add xor add inc add jbe dec add inc add ja outsl add data16 inc add push add push jno je cmp mov add ds add push add add jb push add dec add add add jno dec add push add dec add jne cmp dec add inc add inc add xor data16 push add xor xor inc add pop add xor jne xor outsl add add jno inc add add add add dec add push add jbe fnsave add push add xor inc add jns inc add push add cmp push add add add push add arpl outsb add xor arpl ja dec add pop add add popa add ss sahf add dec dec add add push add bound xor push add pop add xor imul xor push add dec add push add add inc add push add outsl add dec add imul jbe pop movb xor aaa add xor push add add outsl add arpl add inc add xor dec add xor push add add sbb add cmp xor cmp pop add dec add add add cmp pop add add dec add ja inc add xor add add add pop add xor add add add jns inc add jns add jae add push add add inc add push add dec add inc add push add add dec add push add inc cmp add pop add add add data16 add cmp dec add outsb add dec add data16 add xor dec add add add add dec add pop bound add pop add pop add dec add add add jns arpl outsl add jbe dec add add insl add ja push add jae jne cmp pop add inc add add xor insb add dec add add dec add inc add je jp push add jno push add bound cmp ja insb add jb dec add test add data16 imul add add add add xor jb jo imul add push add add js aaa add cmp lcall pop add outsl add jns xor dec add je insl add dec add add pop add outsl add data16 pop add xor add add popa add add je imul dec add add js jo xor xor jne dec add add push add add aaa add arpl push add les add jbe add push add add jae jbe dec add ja xor inc add insl add xor insl add je dec add fs dec add sub dec add aaa add push add aaa add add imul add add push add push outsb add jae add arpl arpl jbe jno inc add xor cmp jbe imul add inc add jne add dec add push add add add pop add add add add inc add bound add data16 xor add data16 add add fwait add xor xor pop add add add xor inc add push add inc add data16 aaa add add push add add add pop add data16 add ja jno dec add add add add add xor dec add xor insl add dec add add push add add inc add js jno popa add insl add add ss add push add inc add add inc add xor arpl je inc add dec add js push add add add push adc inc add add add add add add outsl add add cmp push imul xor pop add insb aaa add push add add push add js je arpl inc add add ja add xor jb push add pop add imul jno sbbl arpl pop add add bound inc add push add pop add dec add dec add push add add add jno add push add add dec add dec add insl add push add aaa add dec add test jne inc add inc add aaa add add push xor outsl add dec add add add xor dec add push dec add inc add je popa add xor jo jbe fistpl add xor add pop add add add add insb add bound inc add add outsb add js inc add add add jne push add jns data16 xor imul add lock cmp add dec add inc add add add add xor xor add jno push add inc add bound jae jns push add cmp inc add add insl add outsb add pop add add outsl add add js add inc add push add add inc add inc add add add add dec add push add adc add add push add arpl push add outsl add dec add bound imul add xor je add add add add ja inc add add add add das cmp add jae push add inc add inc add add add add add add add inc add add xor push add push add jp xor dec add push add add add add jae dec add aaa add popa add push add dec add push dec add push add add dec add inc add push add add insl add dec add xor dec add pop xchg add add add add add dec add add xor inc add imul add add jb dec add xor push add jno add add add dec add add dec add dec add outsb lods push add jp jae jns pop add inc add add js outsb add add js inc add dec add push add js cmp imul aam add adc add xchg fsubr jmp out cltd add add inc jge (bad) stos fistpll sub jne sub push popa js push fnstcw mov xchg cmpl xor fsubs push out push pusha and inc pop enter nop bound and xorl lock clc and adc sti in mov xchg std or mov add or jns loope fs addl sub pop mov add outsb cmc pop xor out mov test mov mov movsb jl xchg mov and in int3 mov stos sub ficom mov (bad) ss mov jmp pushf jp mov imul int3 dec test adc cmpsb in push cmpsb in loope xchg sti push sbbw mov sarb jl jecxz pop scas push sbb add stos test outsl jmp leave jne ret pop xor jae add jns stos test adc xchg out sub jb (bad) sbb sub sub cltd fstp pop cmp repnz std pop cmp pushf sarb adc sbb pop lea jnp mov xchg pusha lods mov cmp jp es dec adc adc (bad) xchg jge xchg jno cmp mov inc lock pop adc fs lret leave cmp les test call popa pop (bad) in shlb out andb jns jae lods jbe cmp mov (bad) pop mov push jge jl out jmp subl enter or icebp aam push lcall js xor les (bad) mov sbb pusha es mov imul roll dec clc or mov sub cwtl insl cmpsb cld lret test fsubrs pop cwtl notl lcall aaa jns sahf and jnp mov stc pop jp mov add sub pop dec sbb xor js test stos rcrl sbb repz sbb xor lret (bad) fildl xor adc cmpsl push fldenv or lock add sbb jno jl mov (bad) out jle push std adcb sbb ss and lret inc lret sti das cmp push (bad) out mov in xlat pushf gs cmp push ficomp xorb jmp (bad) mov pop ss gs xchg sbb daa cmp scas enter in mov cmp pop es or subb add mov push loope aad and and jns rcll aam shrl inc push in mov gs pop xchg outsb call lret ja lret jg push imul mov addr16 jb in push cltd inc adc gs lea cmc rep pop fdivl in roll loopne pop outsb inc cltd and into fcom jne add add lea insb xor cli scas pushf test lods ficompl and shlb or mov sbbl lods loope das out cmp jnp jae inc popa adc jl jg cmp cmp int std mov out jae movsl cmpsl cltd repnz call in arpl add sub gs mov cwtl ja add rorl or adc push adc je mov (bad) decl add dec sbb arpl cmc popa cmp mov jmp add sbb mov mov pushf pop inc (bad) sub rol imul adc pusha mov xchg xchg mov mov pop and mov das sbb lahf insl mov mov and cmp xor loope jp mov fs ret fidivl sub fstl mov xchg jecxz ficomp fmull mov mov mov shrl xchg int cli pop cmc dec jp adc jl je (bad) adc jp dec jl jnp cmp inc test repnz xchg vpunpckhqdq jne aad dec mov adc das out push push into push int pop mov inc aam xor sar jle or sbb xor push xchg xchg lahf mov sub shrl adc lahf cld pop or add add jns out (bad) lds dec stos inc jae push sbb rcl fistpll or in mov jae addr16 (bad) stc daa loope xor sarb cltd adc push cmpsb sbb pop mov lea add push or push sub add (bad) out jmp push and push lret gs outsb cmc (bad) push loopne mov fs pusha dec stos cmp xchg lds mov adc xor cmc imulb sub inc fisttpll inc sub jno arpl out sub inc mov mov outsb xchg (bad) roll aad sahf push (bad) loope hlt testb sub cli pop push mov mov hlt lods cmp add inc insl mov add mov addr16 or das and cltd lock inc fistpll das cmp pop icebp pop push jo mov mov sti and inc std mov xchg push (bad) iret ret ja mov lahf dec push jge jle outsl xor xor xor xor fwait popa add adc (bad) test rcr and test imul ds (bad) push movsb pop inc stos les pop pop dec leave lods aas test inc cs rolb test cmp mov in fstps and pop out aaa pusha sbb mov xchg pop inc push pop imul outsl out scas andl pop ljmp pop xor daa pop sbb push out pop adc sbb push push insb mov mov (bad) les jno xor mov (bad) mov xor fs and (bad) jmp test popf mov std aaa mov clc (bad) pop push loopne mov dec inc xorl jbe in pop mov outsb push or test (bad) push cmc dec sbb pop mov pushf xchg sub jg lods sub scas mov push fisttpl insb insl xchg push pop fbld clc xchg imull mov xlat and push mov inc (bad) out rclb adc shl (bad) aaa xor and xchg aam sbb adc mov sbb push or std in xor std mov inc xchg xchg rcr mov or push mov cmc push pop push loopne nop add enter or xor roll bound dec icebp incb enter add fwait xchg add adc mov sbb imul imul inc sbb pop in xchg faddl lods loopne cli call enter les xchg jmp dec imulb out int cli dec pop pop adc push jbe jge nop inc in mov sbb xchg (bad) into sub and mov mov push xchg js lock repz pop xor leave movb sub sbb loopne in fldt pushf fmulp (bad) sbb adc hlt dec dec sub pop test dec jecxz jno loop or es xor inc fadds jb sub inc push notb scas mov push mov loop push lret cmp repnz push jae and jb cltd daa (bad) push dec insb out pop inc adcl scas push test fnstsw adc aad mov int3 enter jns cmp repnz call mov lods sub inc pop mov repz add add xchg xor js pushf sbb add push inc inc loope dec les adc roll dec xchg (bad) mov insb insb pop add fsubl out in dec pop fs inc push fs push fildll in notb cmpsl cmpsb inc fsubrl mov gs dec jae mov movsl mov popa jge lret sbb xchg cmp sbbl out cltd xor dec push adc (bad) mov ret test jbe jp arpl mov pop std fs cwtl and xor ds or fnstenv loop out pop cld mov hlt xchg in call sahf cmp nop cmpsb leave add loop sub mov jne cmpsb pushf or lahf int mov push leave addr16 and pushf stc or shrb movsb pop int jge push adc and or imulb sarb jb inc fsubrl jp xor xor jl add stos jbe scas dec sbb mov stos inc jbe mov adc inc out xchg movsl jmp lea rclb dec mov into cmp ds xchg ret (bad) out xchg outsb insb add dec jmp movsl cs mov xchg adc mov xchg lret cmp sub and add pusha ror outsb jmp test push mov popf push mov cmp xor inc movb imul or (bad) pusha cmp dec fwait cwtl aad push jnp mov jmp dec sub mov iret pusha aas lods xor xor mov popw aam aam dec mov xchg mov pushf lret nop es int arpl add repnz mov out leave (bad) adc or rol add in mov jg,pt repnz stos push iret loope sbb shl jns mov adc fdivp jo jb sub scas (bad) cwtl xor xchg ret and xorb xchg dec and adc push pop addl sbb lea push dec sub das fdiv fwait in int les std jae xchg pop test hlt or enter popf xchg pop inc cwtl fwait push cmpsl cltd sarl fwait jae mov (bad) mov scas nop xor lahf ret call mov and xchg mov cmpl fsubr pop cld jo pop push xchg jmp iret je xchg jne outsb inc pop mov (bad) mov iret or sbb or mov lahf lret sbb popf sbb mov pop dec test xchg jbe popf add xor and inc (bad) hlt xchg (bad) jmp push dec mov repnz cmp fwait xor subl mov pop outsl shl mov pop repz xor jb or test sbb mov add sbb jle scas xlat lock bound outsl cmp adc es jbe je pushf or pop stos sahf add js ret xor bnd loopne sub xchg (bad) or stc movsb jle push mov push ret dec mov call pop push mov jne jmp push inc dec xchg repz jmp or cmp mov xor cmp std add sub scas mov mov adc mov jge cmp inc call and push int or outsl mov xchg xchg mov sbb repz jg jns pop imul (bad) (bad) outsl das jb insl jnp rorl lock dec fiadd push loope adc mov xchg mov icebp mov ljmp imull dec add xor das or pop sti arpl xor adcl jne push xchg test lret or fsubrl or inc (bad) cld addr16 adc ret (bad) xorl pushl pop out ds rcrb loope insb call popf xor xlat adc push movsl inc pop test fdivs jp outsl sub (bad) sbb cmpsl jmp out out rcl js roll fsubr cmpsl push add cltd mov leave lods insb inc dec call mov push aas in xchg sbb push out hlt mov stos push pop (bad) jecxz jecxz add lcall test and fidivr rcl xor fbstp rolb and movsb adc push test test nop (bad) in fisubr cmp adc andl andb inc push popa movb mov enter add pop repz xlat push je xchg cwtl aam add fcompl jnp xor mov (bad) jmp fwait mov movlps mov add fdivrs mov sub xchg cmc mov mov adc mov jl xchg dec push cmpsb lds out jmp ret add adc mov add mov dec xchg inc or in pop push push insb and and mov in flds pop cmp fwait out add cmc cmc (bad) out pop dec mov ja shll add jmp or pusha outsb ja cltd ja test push mov sbb out nop mov arpl popf push fscale call pop add testl aas cmp lret mov xchg jmp xchg xor pop jae push push sub les scas cmp (bad) dec outsb mov popa test gs pop xchg mov or (bad) int sar prefetch test test mov mov es pop and mov xor inc jae out add push loop xchg mov sbb adc stc mov nop or out pop inc pop cs or ss aas bound movsb and cmp mov in shrl subl in mov mov nop or inc pop pop nop cltd jae fadd dec sbb (bad) daa ljmp nop cmp cmpl test (bad) jno outsl sub sbbb or push inc mov dec test or mov (bad) xor mov (bad) push insl mov cld xchg dec add test loope icebp popa out push mov mov jp sbb xchg aad stc jle mov fnstsw pop push cmpsl jns lds popa push lahf (bad) or push mov sbb lds cld push pop or mov xchg push ficoml insb iret jge add xchg insl mov (bad) jl mov pop add sti addl hlt cld cmp xlat sub push fisubr cli shlb mov cmp std fistpl loope fs mov mov mov mov xor cld xchg inc cmpsb jo sbb and xor and sbb push mov pusha sti mov sbb dec rorl sub movsl imul js ja js xchg insl scas pop xor imul mov and cwtl icebp dec pop imul (bad) pop pop cli mov mov inc cmp or jnp fucom fdivs and cltd sbb dec inc push es shrb pop cmc push clc mov xchg dec mulb or enter gs mov push push adc sti vmovaps idivl xor arpl (bad) cmc push pop jmp xor mov (bad) clc mov sbb xor inc rorl out cmp mov mov inc aad xor ret sahf (bad) and into dec imul jo sbb rcrl fwait jge out sbb loope imul or push in lods mov jbe lea pop mov jo repz push lock rcll xor int3 in in fsts dec dec cmp cwtl lock sub pop aam push and dec lcall rcl leave rcrb xor mov mov ffreep sub nop cli mov or cs fcmovu push stos add push stos sbb ja test push int add push and out dec jo test std das jno sub cmp jne test aam mov out movsl les lret lock jb xchg pop fsub jmp adc fsts aam fs jo push xchg cwtl push nop cltd (bad) jae mov xor or stos sbb cld or mov ret dec pop cld movb lret mov push in out scas (bad) ljmp inc xchg js add push or inc in sub mov outsb aam sbb push mov push pop in lods outsl sbbb popa jmp cmp pop les or sbb fimul xchg adc mov xchg bswap mov clc pop out out sub mov push jmp clc xchg jmp sar idivl xor (bad) mov mov mov push mov mov mov ret arpl aad cmc rcr mov es repnz andl mov sbb dec xor mov icebp stos std mov aam aad out loope and jmp sub stos mov pop popf jb mov xchg and mov push inc inc xchg and test jp fstl clc pusha or jno insl in mov lods sub rclb push inc (bad) jns sbb stc insl lahf out cmc int3 jp add icebp cltd (bad) mov data16 cmc int3 outsb fdivr movsb cmp push push push rcl cmp ss pop inc das sarb mov pop in jns mov jae and push aas fcmovu in orl jae sub sub mov pop mov mov in ljmp (bad) loope movsb and push push fisttpl add sahf add and lods incb test mov xor sahf cmp pushl (bad) sbb inc sbb xchg test dec nop xchg push cs lods cli mov lahf cmc cmpsb mov (bad) popf sbb adc jmp ds cltd sub sti jp (bad) rcrl pop aaa insl test sbb jae xchg mov jbe sahf mov sub sbb push jg pop sub shrl xchg or (bad) dec inc add bound out fisttp inc cli mov loope mov xchg pop scas outsb and lods dec push ds dec or jno mov sub mov stc fwait xchg fisttpll fwait insl std aaa int3 sub stos mov sub int3 xchg fmull inc xor gs (bad) iret sub andb xchg mov mov sub mov fcmovu mov shl dec mov pop testb jnp cmp lods pop rclb fadds push iret scas ret mov movsb jno xor (bad) mov call inc in mov pusha mov pop and mov pop mov dec cwtl jmp inc ss mov mov jmp and insl mov js mov outsb xor pop js in sahf mov cltd lret jns outsb mov (bad) cmp imul push repnz push xchg dec cli aam sbb ret or sub xor sub or cmp int xchg xor popa cmp mov xchg call (bad) mov cld xchg fucomp int dec bound cmpsb pop mov repnz mov jno cmp pushf add xchg mov paddusb dec mov mov add test lea popf imul roll repz scas imul add jno or add xor ficomp jl mov cli and jle (bad) and lcall insl pushf or rol xchg (bad) inc inc or and mov outsl or dec jle push push mov test cmp add xor or fucomp pushf loope mov popa pop and and jmp into sub mov pop cmpsl rcrb mov sbb std aam mov jg fs cmp or sbb mov jnp mov mov jb adc push sahf sbb call (bad) sarl add iret cwtl inc push or (bad) xchg sahf in xchg loopne push fildl xchg xchg stc pusha cmp ss add nop mov cltd jg pushf fdivrl out mov data16 push sub pop cmc jne sbb insb lock aad dec pop xchg loop pop imul ja or loopne dec adcl push push jbe mov or stos adc ret dec pop mov fisttpl test fwait (bad) imulb push lock es mov fwait sbb shlb mov and jle negl pop add fist lahf stc mov repz or inc sub (bad) mov lret rorl sub cs dec sub nop mov jg mov mov adc cld cmc imul inc aad jo sbb jb xor rclb dec xchg mov test fwait mov sub js mov jne out les push sub inc (bad) pop push add sbb popf and out mov and cltd sbb mov xchg jo mov push arpl xchg mov mov push dec fdivrl xchg lcall fnstsw sub xchg jecxz jnp fisubl mov aas cmp (bad) mov inc xchg or jl mov (bad) sbb movsl jmp inc call fbstp add cmp cwtl test xchg jnp dec stc inc test aaa push rcll mov xor jmp dec (bad) dec dec and pop je and pop add adc add sub mov repz js mov sbb aaa cld xchg jo add icebp mov divb (bad) mov lahf inc das icebp iret jge jnp mov jmp inc inc cltd jo lods iret lods mov adc or mov shll pop sahf mov pop push dec mov push es pop das add jecxz cmp in adc roll mov les cmc aad inc cmp cmp test sbb xor cli add ja aam divl sbb xor pop xchg cmp (bad) mov daa cltd pop cli xchg xor inc fwait insb jb loope,pn pop push sub push add les push into inc imul push fbstp scas pushf or adc arpl adc ret loop mov push mov test or push outsl stos dec pop cmp ss lods out and icebp data16 jnp lret movsb loop xor mov movsb and and mov adc test int pop (bad) xor mov (bad) (bad) mov jecxz addr16 jle lret xlat out std sahf cli jno in das add add and add xchg sbb inc mov xor or inc xor leave icebp popa mov fdivrp leave adc jle stc adcl stos sbb pusha cmp aad jbe push inc ss inc fucomp or mov adc mov sbb and scas std insl jmp call sub adc les sbbl cmp divl leave lret jbe push fstl mov les fnstcw imulb xor push insb out xor push iret into jno adc into pop es xchg andl mov das xchg es loopne stos outsl call test sub (bad) mov repz sub aam (bad) pop fs sub lods mov mov push push (bad) fwait repz lods aas lahf std dec sbb push mov cmpl lcall or cmpsb fiadd mov xchg mov push sub push sbb dec (bad) dec lret add cltd (bad) loope icebp notb repnz adc stos scas inc aam mov insb jne mov ss dec sub dec mov and dec push jae fistl das mov xchg rolb xchg (bad) insb popa movsb add int3 ds lods (bad) repnz cmpsl gs lret add jno dec inc mov jae in jno je int3 add jb cltd add xorl iret scas inc pop pop add roll cwtl push movsb pop mov fdiv or nop mov insb xor add fadd push cmpsb into decb out cwtl jno addb fbstp sbb decl xchg mov cwtl dec push pop mov pop jecxz lahf jne pop (bad) sbb or lds popa xchg mov rorb xor xchg out scas iret xchg cmc add jp push test lret xchg sub (bad) aad cs nop shrb fsubrs dec push sti and mov dec imul jl outsb movl mov push push hlt sbb loopne outsl or mov xor lcall dec fs cli loop pop mov mov add mov lods mov mov (bad) loopne cmp push pop adc inc inc sbb cmp jg in adc ss pop roll dec mov add dec pushf add ljmp daa xor out mov sub insb and sub sbb dec call leave add in insl inc xchg xchg cli cmp ss addr16 xchg pop push sbb lods cmp scas cmpsb ljmp jp mov int ret sbb or scas enter test sahf bound pop jg mov mov xchg fcmovbe mov cmpl leave or pop push mov adc cmp cmc mov in hlt ficompl (bad) (bad) inc mov movsb adc ljmp xor xor (bad) (bad) jbe notb fnop cmp and pusha fwait jbe inc (bad) movsl push ret cmpsl movsl push and mov sahf arpl adc lods rolb jmp das enter (bad) movsl cmpsb xor push xor inc jno jnp jmp jne bound js mov and cmpsb aas shlb mov xor mov sbb push ja loopne jb fistpll sub push sti or dec iret (bad) pop sarl jp addr16 out into pop pop mov (bad) cltd das cmp xor aam bnd jns nop andl ror loop xchg insb stos cwtl (bad) xor and adc or mov test push ret gs rcl or or std xchg xor dec pop (bad) test das repnz add mov dec xor (bad) clc cmpsl outsb dec in mov dec inc xor mov mov in ljmp push aad inc adcb int je pusha scas test jmp movsl lret xchg pop test in lcall mov cmp mov xor inc jne or fisub test test adc out imul sbb test dec outsb fucom cmp mov xchg bound push lods outsb jl mov imul xor out dec pop pop jae leavew sti inc cltd test mov push loop lret lea inc ret pop push xchg mov jno jb lods int3 jl mov or stc mov mov adc push adc mov hlt inc das (bad) pop add movsl xchg pusha (bad) mov lods ds test jae mov jnp sbb or test int and pushl sbb lea cli sub les ja idiv cmp das mov inc sbb or jg xlat les and jl nop push mov es sub hlt leave das ret leave or lret push (bad) in popf mov addr16 dec pop push pop (bad) and or or andl pop sub or mov (bad) jne cli xchg roll pop call daa packssdw push jge mov mov sub pop xor inc xchg and xor lea xchg pop test add pop mov (bad) (bad) adc mov das adc xchg rcrb pop mov xchg (bad) cmpsb or sub fbstp inc jo mov fcmovbe into mov roll inc outsb pop outsl jecxz fs ds aad repz aaa ja loop outsl mov test addr16 xor inc sub mov xlat push sub sti sbbl or lahf addl or mov jbe sbb (bad) fsubr cmc mov lds mov das in icebp aam xchg cli mov push inc jbe rolb stc popf xchg push sbb jmp insl fldenv lret pop out test cwtl jb movl test dec icebp mov mov ja push divl adc mov les fsubrl out jns,pt adc std jl mov inc addr16 push icebp mov adc mov mov in jbe clc icebp push jle test repnz (bad) js (bad) das test test setl xchg xor pop notb xor jnp lods jp or out bound inc (bad) aaa aas ror ror add das add inc dec xchg fild jnp add (bad) lret pop ljmp mov push jo aad outsl pop sbb and fbld pop lock jecxz leave out clc movsb cs adc ja ja inc mul xchg scas push jae call sarl jge,pt adc rclb inc mov out call ret mov fldt lret push jne cmp nop mov ret cs and out or test sub nop mull arpl cmpl or jge sarb movsl popf ja push xchg pop mov inc std dec and cmpsb xorl aam popf in inc xchg arpl loopne mov sar pushf mov mov cli sahf add mov mov lcall (bad) adc fsubs or jb scas add adc mov pop push jecxz mov sbb (bad) mov push jo imul add add lret test imul lret jne mov sbb sub jbe jae gs mov jle notl mov sub movsl sub pushf clc cmpsl mov or (bad) loope (bad) xor inc lcall popf test mov inc and cli leave xchg or arpl sbb push lret dec ljmp dec inc sarl mov stc jns xchg push leave push arpl mov cmpsl bound jge insb adc mov cmc fnstenv jnp or stos sbb cmc outsl adcl (bad) imul aas rolb pop lds xor outsb mov pusha push fwait mov lea cmp aaa cmpsl jns inc inc fadds push outsl aas mov push push pop mov pop or mov or add imul fwait push xor sub loope mov cli and mov sbb mov ds (bad) mov call (bad) dec jb mov lret pop adc test inc cmpsb mov addl mov in add push push xchg mov rolb insl mov sti xchg lret loop pop ljmp or and adc lea test jno adc add pop xlat in ja sbb pop jle shll pop (bad) roll sub dec xchg lock pushf cmpsb push pop xchg loope adc and inc mov sub lea call lods aaa rorb and push jbe pop mov repnz test or lock or insl adc xor (bad) pop sub sbb arpl sub and lcall xchg push sub jne mov sbb aas adc cmp push cmp ja mov sub stos xor xchg jg xchg iret das shrb pop push cmp cmp xchg push add add (bad) mov mov arpl loopne aaa addl loope hlt xchg imul sbb or push jecxz add push jle xchg xchg sbbb mov sahf inc movsl loopne (bad) loope fisttpl test jno ficompl xchg out inc int inc enter and mov pop loop aaa daa mov add mov and or jl mov push mov sbb jmp add popf inc fwait add sbb adc pop ljmp push mov push lret xor jp je pop dec lock jbe lcall sarl xchg mov sbb scas lods ficompl cli in aas fcoms jp jns repnz push fcompl ret xchg sti flds rcr fucom and pushf es mov push es pusha sub mov and add cs pop xchg cmpsl les arpl lret call jmp dec inc mov insl inc inc mov fstl dec mov les jae cmc sub imulb adc mov jmp jnp push insb ret pushf mov fs or cmp jle sub mov pushf sbb jb out adc outsb gs jb out aaa ljmp jns rcrl pop dec and inc mov mov jmp test jo add iret outsb out aaa mov das dec push and int3 test push sbb cbtw lds or (bad) int cmp imul arpl pop and ds xchg cmp adc daa mov test insl mov pushf sbb or movzwl fcoml and jmp ret js fiadd pop mov insl repz and adc and jp mov sub gs mov ljmp lock fwait cmpsl sbb ret mov out add mov addr16 loopne pop (bad) add inc jne pop adc bound rclb sbb cmp shr mov adc mov xor enter testl jbe mov sti sbb xchg flds (bad) dec mov sarl adcb mov xchg xor mov inc dec jnp inc and and cmp or push cmpsb cld ja xlat mov mov clc insl sbbl sub scas or ror scas jmp mov in cmp adc sbb icebp mov inc lret push pop lea adc rol out jl inc push data16 xchg add in mov cmpl and testb xchg cmp loopne mov xlat (bad) pop pusha dec cmc (bad) jl adc or lcall sub add lea jns mov jo out in inc cmp enter push sbb jmp push mov in loopne not push pop andb inc pop sbb add mov subb jecxz sub stos pop mov cmp bound dec push psllw xchg jns out cmc adc hlt fs push daa xor fwait jge popl add mov aam ret les cmp dec xchg push sahf mov mov bound lds ret add addr16 psubusw test roll std inc xchg pop outsb mov mov arpl pop adc pushf arpl and cld inc data16 or sbb fstp orb arpl sbb xor xchg cmp push xchg mov jbe pop and sbb mov loope inc pop fisttpl jae dec hlt dec enter mov arpl popa hlt and pushf sbb pushf testl sub std jmp dec cltd jecxz xor hlt scas jecxz fbld inc push int push in mov in sbb xor sbb sbbb loop aaa and int3 adc xchg mov pop popl enter fsubrl pop popa push cmpsl push iret (bad) lods sub push daa xor lcall push aam and and sti pop (bad) jge lahf sti movsl gs sub int3 movsl dec leave jno in movsl lea mov sbb mov ficoml sub test or ja or fisubr pop cmpb incb jbe dec lahf cld fcoml inc pop pop dec cli mov add sbb sub inc das xchg push int3 mov fdivr pop sub fiadd and jl ja bound inc push insb rorb ret jne mov mov push xor je mov and nop pop mov sti push mov out and test lods push jg ljmp xor and test sub in push dec lret insb inc rol xchg push das xor je outsb loop push ret bound lret xchg jp sbb adcl cmp mov jns pop inc ror lods shrl push and repnz mov lcall pop xor mov std sarb jo xchg arpl test icebp icebp mov (bad) lea lds test movsb jmp xchg mov popa and out add mov inc inc shrl ja mov stos mov sub test mov test dec jmp or jle outsb jae fbstp lds nop adc fstpl dec mov mov xchg test sub pop js sub pop jmp xchg call inc jnp mov xlat jb adcl insl rcrb jbe test jl inc addr16 or jecxz xchg test aas pop lods lret xor inc jle dec mov xchg pop ret stos xchg das out push dec sahf jl insb xchg call fcmovnb sbb lea int3 sub inc js shl push insl inc sti mov test mov push loope shlb pusha push push mov imul lahf jnp jno and out mov lods mov xor dec cmpsb fwait cmp jo add inc mov popf inc call addr16 jp fld clc xor faddl fcmovu ficoml sbb movsl enter int mov adc and adc rclb pop cmp lret in outsl jg scas sbb int sti and adc sbb jns movsb xor lods add jnp mov les lret inc xor mov cmp xchg xorb add leave xchg arpl out nop dec outsb sbb ljmp ret mov ds mov fldt mov dec mov imul adc mov push in lcall pop inc mov gs mov loope scas push (bad) or xchg pusha xor pop test in add push (bad) lock push leave and xchg jmp ss and adc std int3 pushf (bad) push ficoml lret (bad) insl std inc out inc adc xchg jecxz sbb fwait xchg les std das mov je xchg or movsb and mov scas mov sub adc sub xor popf xor daa sbb outsl sar xlat push inc mov insl jne sub imul ljmp push mov int testl pop rorl sub cmpsl jmp sahf mov push xor xor mov pop popf loopne (bad) adc and jge mov inc mov (bad) (bad) pop pop repnz aas push stos fiaddl ja popf cmp mov jp mov adc je push cltd mov das movsl push fwait in out push (bad) jg neg mov lcall (bad) or rorb repz sub das mov push cld test cld xor jg out mov pop sub push lret test sub je fstl mov dec lds dec cwtl add add (bad) (bad) push mov jl gs sbb fsubrs cld mov in daa xchg (bad) out adc fsubp pop jle cli pop mov adcl sbb jbe dec mov stos xchg pop and sbb sbb fldcw or cs fcmovnb cltd lods or jl cmp int push jbe sub fcmove and icebp lahf add shrl movsl (bad) or sub lods push xor (bad) xlat cld mov int insb xchg pop mov sbb in aam (bad) jmp lock pop gs mov orl push addl sub and mov pushf in jmp pop mov (bad) sbb inc mov sub out decl lret or jecxz pop xor insl clc pushf inc inc aam pop sbb add add inc xor adc shr in into fwait pop ljmp popa or vmread fldcw mov lcall pop out sub (bad) mov xchg mov lret lahf (bad) loopne movsl dec or add push addl stos iret popf mov inc (bad) ror daa add int or int3 pop fidivrl cmp or xchg jae loopne movb xchg outsl pop sbb jg rclb inc sti jl ss bound push sub jb gs xor fldl mov out stos lods test rorl adc dec pop or mov xchg insb (bad) sub roll xor fsts inc imul jge xchg or fwait or daa dec lret insl and add cltd loope loope popa add sub pop xor add inc subl push js pop inc push jae xor in sbb push mov xor test xchg rclb pop aas mov cmp aaa sti es mov daa (bad) outsl shlb xchg (bad) out and lods imul call cwtl sub sbb adc vrsqrtss or aad xor (bad) xor (bad) mov cli xor in mov or sbb mov addr16 cmc inc shrl sbb pop xorl in push xor dec scas lds jb je insl mov lahf insl jno jbe stc mov scas je addb mov jae int aaa mov repnz das mov ds xchg enter ss in pop adc mov in xor xchg jo lock sub (bad) in adc dec fs mov (bad) mov (bad) pusha xchg xchg mov dec sbb insb sbb ja sub rolb inc sub call add inc inc aaa fldl sahf adc mov aad negl loope sub sub lret jp add inc pusha sub sub imul ret mov push inc daa sub je movsb xor lods xchg jb mov cmpsb fisttp adc bound push imul lahf inc movsb mov lret dec xor dec sub repnz sub push inc dec out and enter movsb add pusha cmp std pop sub adc mov lahf imul mull jo add js xchg xchg sub les sub adc push sub sahf dec push cmpsl xchg sub icebp dec (bad) cltd cs stc pop out lahf jo sbb xor aas incb push push or (bad) icebp sub (bad) aaa (bad) xor or ret insb rcll sub out xor clc (bad) stos scas test ret sti pop mov movsb in cmpsl xor idivb dec lods pushf negb mov icebp sub push sbb pop icebp scas push test cmpsl out arpl loopne nop aaa xlat icebp andl dec inc call fcoml bound lret je mov mov xor xor das adc pop enter inc xor leave xor adc outsl jmp push mov shrl mov fs xchg scas pop jmp inc fmull out ret pop inc cmpsl adc fisubrl ds hlt pop pushf pop cmpl lock sub mov outsl pusha jl test insl (bad) adc pop dec adc rclb insb cmp outsb movb test and push cwtl xor pop (bad) hlt lds call incl into xlat pop std ret adc daa movsl lret clc adcb xchg dec and test rolb loope outsl insb xchg dec xor insl out cs incl clc lret sbb ds inc jg mulb pop adc mov cmp inc dec mov psubw cmpsb mov int (bad) push xchg inc in (bad) lock jmp sti fnsave dec adc stos pop in into test jmp scas (bad) out inc inc sbb out stos add dec movsb add adc (bad) pop sub cmp lahf push call push or cmp ljmp insb movsb nop js ds pop ret inc jae mov ja xchg mov das pop dec lret mov or roll push xor stos mov clc add push rorb push (bad) das inc jg mov mov aaa cmc xchg mov jg test bound pop cmp jnp or leave dec das xor daa int3 push mov (bad) sti pop mov ret ficom gs scas or (bad) adc jmp pop xor cmpsb data16 in enter jecxz inc cwtl in jmp jle repnz mov in adc pop decl cmp rol mov xor imulb mov cs pop loope icebp dec inc sub idiv cmp inc mov adc nop jns jb movsl aad xor insl add jno shll loope cltd cwtl pop dec lret pop sar pop pushf sub cwtl push insl mov mov fsub jnp sub test rcll test aas cltd dec or pusha sub sub (bad) arpl into mov ljmp inc jns loop outsl sarl jecxz sub push xor popa cmp cmpsl (bad) inc js dec jbe or (bad) mov cmp dec and inc dec sub cmp pop outsb sbb add and xor adc xor or cmp jg or stc xchg xchg cmp dec mov push cld leave mov adcl int3 mov sub mov adc js cmp xchg push xchg mulb lds mov or adc adc clc test hlt xchg adc push adc jns mov pop push mov pop cld clc ret lds inc (bad) sbb sbb test cmc lret jae push (bad) fstpl jle jbe int mov cmp jp in add mov xchg mov lods cmp test jecxz jl push and popf sti fwait xlat sarl push cmp xor dec in ror sub fildl inc in pop loope dec mull sbb sub aaa test jge mov out insb icebp jmp lds scas dec push xchg lahf adc pop mov loopne repz dec aas pop addr16 push xchg cmp push dec stc nop sbb sbb leave (bad) jg push sbb pushf push fsubrl lcall mov clc jl movsl cmpsl sub lods or mov and sub or int sbb loop mov jg in in ljmp lock and into (bad) imul push ja sbbl out pop pop mov push mov aam cs orl shrb jno decl mov jge inc inc movb adc int3 pusha push mov mov stos out jmp lahf push mov movsl jbe jl out es ss std test inc lds fwait out adc mov fldcw xor mov sub push xchg (bad) or mov jmp mov lcall gs in cmpsl loopne sbb xchg (bad) sub pusha and (bad) roll cmc rcl mov dec sub in xor xlat fld push aaa mov cmp sti fistl in mov dec jg mov pop jns lret (bad) out mov out adc loopne fisttpll loope inc jo jecxz insb jnp push xor lods (bad) jne pop int3 inc call xchg dec imul cld loopne aaa adc out dec push pop fidivrl jns mov daa cmp xor psllq repz inc aam jmp cltd out jns aad jns adc in mov enter inc add repz push arpl mov jo fwait dec adc push pop mov dec inc dec jmp mov sbb shlb push cmp fs inc stos test sbb mov (bad) xlat fstpt inc jbe or outsb fldl (bad) and mul clc adc fstl xor call inc cli daa (bad) out fisub jo jne mov cmp jmp fstpt sub inc xchg dec (bad) cmp (bad) adc push outsb dec jmp jbe fcmove rorb popf mov add sub push in add insb into lock and js,pn outsb mov popf fs fucomi inc lcall (bad) (bad) cmpsl addr16 (bad) jl mov scas je mov sbb inc push rcll out popf xchg or popa ljmp and push and int shl insl outsb lods cltd mov add stc fcmovb mov add push push push loopne dec dec test inc es or lock dec inc push cmpsl sub or mov mov or xor test idivl ret dec adc lahf xchg or loop inc xchg pop cmc sbb jecxz inc js inc mov fldl2t pop adc cmp push std ljmp sbb icebp cmp andb in push cmp je dec (bad) repz out insb and fistpl cmpsl fcomps lcall mov imul sarb add xchg mul lret lods xchg push adc popa fwait std int loope adc mov or xchg stos pushf jl push jo push or and adc movsb push jnp mov repz dec push ficompl cmpsl out lods ret fwait mov pop gs mov imul add or inc inc in dec push pop cltd and adc (bad) push imul jp hlt imul (bad) mov or xor loop inc add sub test inc and mov das xor scas mov cwtl decb popf ficompl cmc mov push fdivl pop rcrl mov mov aam push in fs stos inc cmp dec mov jno in jno and and lods or push ret out (bad) cltd mov stos sub mov data16 pop mov cmp xchg pop (bad) hlt dec push enter fcom pop lcall xorl push popa jg push movsl cmp and iret push add loopne xchg insb lcall in jb jg xchg xor out test xlat push mov mov sbb fs mov xchg std dec push (bad) (bad) ja ja lret arpl sahf and lahf les je pop imul call push lods popa push and aam loop push lret mov cmpsl movsl out or stc sub (bad) pop cs sti ja rcr xor cmp out repnz mov rol fidivrl dec cld xchg adc imull xchg rcrb imul xchg lret rcr inc icebp lahf lcall ror jp outsl jae enter inc sub arpl arpl jbe inc jns jmp mov rcl xchg (bad) jbe sub clc mov popf scas pop btr popa (bad) in xor (bad) jo fs dec insb mov das add mov xor mov xor (bad) fs mov addr16 aad jmp (bad) or cmc icebp mov adc cmp jmp popa inc jmp (bad) fnstcw or (bad) xor cmp imul outsl nop sbb xchg xchg cmc cmp mov aas frstor mov sbb jle mov mov fldenv push xor fidiv push and inc dec lret mov insb sub adc mov gs gs xchg into lea sbb pop in cli iret jno jnp sub shlb sub xor mov jp xorl fimull mov in test add adc cmc cmp mov sbb (bad) jo idivb xchg jnp mov arpl jnp jnp int3 mov lret enter dec loope es jns mov fcomip push sbb pop xor out fucomi and outsb and (bad) out clc sahf aad sub pop fist jb inc out std pop sub imul push ja test pop stos (bad) int jg adc or lcall imul cmpb inc arpl pop xlat mov dec and int3 or pop sbbl or mov cmp add jno (bad) mov int mov and cmc ds pop fucomip pusha loop mov fnstcw mov push add push adc cmp test sub out xchg mov gs push sub aaa mov and and sahf push out pop jbe or cmp outsb std mov sbb aam test clc or push (bad) mov lea inc ljmp sub xchg add jae in xor hlt pop xor jnp std addr16 pop mov xchg shll xor arpl lahf sbb mov xchg and push aad (bad) or cld inc push incb xor (bad) or add inc das (bad) dec jb ret into out adc cmpl daa out jge (bad) lret inc mov jo popa jmp sarb mov inc lea int cmp and mov lea pop dec inc fwait leave lret scas sbb test imul lret decl pop out in inc fildll call bound push pop ret xor cmpsb inc cmpsl xchg aam pop push mov mov lcallw fildll xchg js imul and push pop call push or cmp jno jae add ss push repz cltd repz (bad) jb dec movsl mov xchg or or out out mov push imul dec loopne leave sub fcmovnu jl out lds mov push cmpsb data16 (bad) push js cltd test xorb sti xor mov adcl xor into inc mov push movsl imul arpl xor aaa and rorl mov imul fs sbb in ja lods pop inc xchg mov shlb inc adc scas ss mov push mov and inc lahf cs lods aad cmp cmp add xchg mov inc sub adc mov int cmp inc push (bad) ja leave xchg adc lods or stc sub xor jb sti push sbb xchg jle dec das enter pop add movsl mov cmc cwtl (bad) cli jnp cmp inc pop or sbb loope movsl aad jno mov divb inc fdivrs adc cmpsl sbb sarb jns je xchg enter push jno outsb fidiv mov push lret fcompl fwait cs loopne pop mov cmp ds ja sub sub loope dec aaa xchg roll xchg push out rol add pop stos inc fiadd lods ret inc jb adc mov ja pop push stos adc cltd push or cld push adc inc and ret insb mov mov push (bad) je addr16 int3 dec jne lret jecxz stos hlt aas ret pop push stos xchg sbb lahf sub xor cmc xchg or jl xor sbb cmp push test adc inc xchg jmp clc xor push sub push jmp imul lret mov push cmp mov xlat inc (bad) fsubs lcall mov decl xor pop dec mov dec pop stos out loop push aaa xchg enter push push cmp mov dec mov pop inc and rorb ret popf inc fiaddl dec jl in (bad) in xorl out xor inc adc xor fidivrl outsl mov add jmp sahf mov into ja sub sbb vpunpcklbw jbe ucomiss xor push pop mov adc test clc push xchg push into push daa pusha jmp lods scas in mov (bad) adc dec shlb imul sbb inc int3 fsubrs jnp out in dec clc sub dec cwtl rcll push test arpl mull out les adc int3 or lret sub sub and dec seta lret push push mov mov inc test (bad) jg (bad) mov inc and inc dec (bad) das popa and inc pop dec mov adc (bad) cmp pop mov enter popa push xchg aam out dec test sbb test pop mov adc clc add xchg add jae mov iret add inc leave lods push sbb inc fcoml pop inc and or mov xor inc xchg add add or sahf roll (bad) aam inc sbb das insl xchg ret jp dec or or or cmp ljmp xchg push mov nop sub test inc jge push (bad) mov ljmp jg pop mov inc loope ljmp xchg xchg cmpl inc xor fistp dec stc mov int3 ljmp (bad) sub cmc in adc push ljmp add cmpsl sub or inc clc gs or jecxz push cmpsb outsl adc popa xor add inc (bad) pop dec lahf or hlt inc mov test cmp push (bad) mov inc out je repz sbb ret fnsave mov stc jb cmp and sbb mov popl cmp popl imul mov add cld xchg addr16 mulb mov jmp (bad) cmpsb mov jno inc inc xchg icebp stos rcr mov and mov sub mov add cmp imul xchg out and mov cmpsl movsb or test mov shrl mov cli aad mov sbb ret dec adc xchg mov pop int mov daa call repz mov sbb fstpt adc adc dec mov push cmpsl mov mov lret and xor ja add cltd push dec inc xchg stc add push ret adc pop std mov add push (bad) adc adc and or xor ret frstor gs stc rolb cltd fs cltd inc daa lock xlat or mov orb mov sub pop gs dec js sbb jmp adc sti xor add mov cmpsb ret xor popa data16 std daa in lcall push fildl in or ss xchg push cli mov scas jo ja out add mov aad stc bound dec xchg gs lock jbe sarl loopne movsl (bad) sbb cmp add fadd push icebp inc adc cmp out xor add repnz lcall jb mov call repnz aas inc push ds push jp stos adc (bad) int3 inc jg hlt shr mov (bad) mov insb pop mov ds out icebp dec push inc lea (bad) jnp out xchg pop addr16 daa in cwtl rorl sbb inc mov xchg fs lea dec mov mov push in std adc outsb cmp fisttpl frstor push test adc das or mov fsubrs fcom mov mov ficompl mov movsb int3 or mov push jmp dec popf ljmp insb pop rolb dec aad add jns cld sbb or leave shrb mov roll mov call lahf sbb stc push add pop insb fnstenv cmp test stos std into divl repz (bad) adc pop cmp test dec xor push in xchg push and sbb test and mov pop je and (bad) lahf push mov shrl mov mov pop mov daa xchg mov mov jb xchg ret fst cs xchg inc sbb add test in pop inc mov leave push pop push dec pop sub nop xor inc mov lahf (bad) repz clc pop (bad) dec rcrl test ja fs adc jle jno inc mov rcl cmp push outsb adc out sbb add cmp data16 push xchg incl inc push sub call mov sbb scas int3 adc inc je xchg sub xchg dec std jl ds aas (bad) (bad) mov xor adc jbe push lea fcompl pop insb stos mov push xor lods test lods xchg dec lods inc add lods add les push sbb or pop rcll repnz out sub xchg fisubr jo mov sahf clc adc lret pop repnz in imul mov pop in mov pop xchg cs cld ja es inc sub pop rcrb enter cmp cmp mov cmp data16 xchg pop test push sbb pop std jae cmc dec (bad) xor mov loopne lds and hlt idivl inc dec xor push jae lcall (bad) xor mov jne cmpsl jb pop sub adc (bad) fsubs test scas (bad) mov fdivl inc sub icebp test jg fstl adc (bad) xor sti and ficomp in push or pop push push aaa cmpsb cmp cmp inc or xrelease inc std mov test mov cmovs pop push cli or mov inc lahf and (bad) mov pop mov sbbl xchg mov lds fucomi mov (bad) fst sbb and (bad) icebp inc dec std jns insb mov adc dec add xor adc mov das into sub aas and daa add std not adc movsl mov insb fadd jno jmp adc mov aam (bad) adc loop imul lahf cmp xchg out loop push dec jmp (bad) add dec dec mov dec mov sub cltd xor pop outsl in (bad) in in and xor dec loopne nop aam fidiv shr adc ret imul adc repnz movsl pop jle test xor sbb dec fstpt jge stos cmpl or scas mov in in xchg jmp xchg add lods sub test pop xchg arpl (bad) call movsb mov jle xor iret mov (bad) jbe cmp jno inc scas or push or xor mov mov push test dec mov xchg ja sub les jbe cmc adc lea xchg jbe sub test mov shr outsl mov (bad) ja popl jge lret sbb dec adc jb push xchg addr16 mov sbb push scas data16 std das pop test pop nop and lahf inc mul (bad) test cmp aad adc aam cmp repnz mov cmp or mov outsb (bad) or stc bound jmp imul mov add lret sti jb nop cmp fist cltd sub mov lds out aas or jne sbbl shrb jp dec jp mov outsb (bad) pop mov dec imul fldt cmp data16 fdivs cmp pop in mov or (bad) lcall hlt movb dec insl jnp (bad) test xchg loop ret push jns imul xor push inc sbb das sbb mov add test inc fldt ds dec cmpsb mov sub dec jae shr divl imul fidivr add lods lret imul jl xor movsb cmpsl lods dec pop push test lcall or ljmp jae or imul loopne fmuls adc (bad) fistp cmc cld shrb jno hlt gs mov popf fs xchg sub mov out sub stos add test shll (bad) dec cmpsb inc fcomi in mov (bad) mov jmp outsl rorb cmc test jp pop iret std notb inc dec lods push pop ja pop push sub mov sub test pop fmul loope mov xor jg sub and ret test dec pop outsl or fstpt pop cmp mov adc sbb cli mov loope jae fdivrl out push mov cmp add loop add mov dec jnp pop jnp push lds loope xor test loopne cmp out inc pop adcl dec cltd xchg adc add js and sarl (bad) pop push movsb sub loopne add mov lods mov fistp ja xor cmp xor xor ljmp xchg ret ss in je fisubr pusha aas repnz das dec scas jb call adc push xchg xor adc dec inc add leave xchg iret mov add push push sbb test scas aam shrl in adc in xchg xor inc fs xchg cmp insb push lea dec popa jecxz nop test mov sub xor mov ficom inc iret dec daa pop aad loop out repnz test aam mov pop mov stc iret mov jl mulb lds mov mov xor insl lds int3 xlat pop not fcoml pushf lcall cmc movsb (bad) xchg mov pop out cmp dec sbb leave cld lods mov (bad) adc xchg adc add fs pop inc cmc sub (bad) and push adc insl mov mov cmpsl aaa jecxz cltd (bad) std sub xchg cmpsb cmc pusha sub mov jns and mov xor int3 inc sub cmp sub (bad) cli push sub pop iret mov in or stos sbb sbb es out jmp movsb iret jmp push fnstsw cmp mov push pop (bad) rep push popf lret or inc std movsb pop shrl adc xor add sbb jecxz repz loopne hlt inc popf dec xchg lcall insl in push leave cmpsl cli movsb push (bad) out (bad) xor push mov shll roll pop stos cmp xchg sbb jae test pop xlat out mov push xchg jl adc and scas dec mov or sbb ljmp xlat dec mov stc in or mov iret dec gs lods mov outsl call jecxz xor out or xchg out outsb insl cmp xchg fsubl aam or jne lds jl add mov nop (bad) aam xor jns push mov lahf clc fdivp pushf movsb mov push xchg cmp fisub fsubs test int std inc add push stc rep lret cmpsb xor stos lds stos mov mov sub or mov sbb iret xchg xchg das test sub sbb lret sub aas push cmpsb jp or xlat or lcall int3 fs xchg stos xor bt js or push das mov xor jl out or and orl stc jge add push sub ret or add aaa cmp xlat orl nop add mov dec icebp rcl test xor mov sbb cmpsl mov mov sub mov shrl dec cltd sub sahf repnz je sbb pop aaa mov pop sbb ret jmp or int3 rorl jo addl mov repnz aas mov push aaa out cld fidivl clc call (bad) pop stos test pop mov cmp add xor adc mov xchg fs sbb add aam fnsave inc cwtl ss xchg out sub inc sbb addl fnstcw mov mov inc jno aam aaa and and pop mov in cld mov mov pop mov cmc insb cli outsb into lods jle jbe mov mov sub xchg mov out cmpl inc mov push stc fcmovnu xor dec (bad) jae pop roll mov fsubs lods jne push adc sub dec leave mov xchg fs add mov mov je dec sub cwtl mov adc push (bad) pop cltd or xor fstl popf xor lods dec addr16 sbb inc in push inc rcl cmp sub and mov jno cmpsb push xor push ja test inc clc call adc (bad) cmpps aas inc mov xor cli rcrl je lahf push int incl push out adc xor shrd into push (bad) mov jge cmc push add jp jl mov adc (bad) dec (bad) insb dec mov push stos lret jns movsl xchg call loope incl jl cmp cmpsb mov fsub jle dec jo push push jmp pop insl pop ja mov (bad) fild icebp cltd stos add sub jg pop dec iret and data16 ret out mov lds gs lret inc leave lods fcmovb pop dec cmc mov cmpsl incl (bad) mov xlat inc fcoms mov jno sub xor pop mov mov inc cmpsl and in pop leave lods xchg jmp aad imul or ret ljmp lock popa xchg or xchg push push and insb inc loope (bad) jp mov jecxz movsb mov inc mov dec sub adc int adc sub sbb inc mov in cmc inc push inc jb add ss sub mov pusha cmp push inc add sbb hlt cmp stos out mov sub dec daa hlt sahf into sub pop cltd mov cmp outsb pop mov mul xchg outsl or mov loop popf mov mov daa fsubrs loop jne or repnz and (bad) push cmp push mov push add mov movsl (bad) jnp jl sub sub leave xor inc in push lock hlt ficompl cmpsb fcoms xchg push cmp movsl in push inc jp,pt push aas pop mov int das pop fiadd addl (bad) js (bad) ss lods sub sub jle,pn jp push fwait sbb bound dec inc or fs add pop push cmp call shlb es xchg pop sub cwtl scas pop rcll (bad) adc (bad) sarb mov das xchg fwait jge aas sbb xchg sub adcl jns es shrb and jl mov dec push ds aam aas sbb fstpt and adc test mov lret push outsl rorb movsl aam mov and jne imul cmp and rorl xchg lods imul xor cmp std aam jge sbb push add jb adc sbb add and lods mov adc (bad) and ja outsb aaa push les std cli in jmp dec inc int3 mov cmc inc adc mov fcomip pushf xchg inc ds inc lea negl xchg xor or insb cltd or push sub jp dec rcll push stos dec in roll ja mov sbb scas pop ret mov scas aad dec and (bad) jge into enter ljmp loop inc bound ror movsl out fdivs test lods mov sti push sub bound xchg or (bad) das mov mov fstps xchg xor fs in sbb mov jnp adc add mov xor push int mov mov add push inc (bad) jle test cmp and mov or fcomps jns push or xchg enter push dec lcall and cmpsl xor test mull popa inc mov dec cmp mov mov push or je jge popf ja xchg or or or lcall repz lcall test mov inc outsl add mov sbb cs mov push ds inc call and std mov std mov cmp push fnstsw mov inc cltd xor sti into xor pop icebp lret call jae sbb lods jbe dec cmp mov sub in or das lods mov dec mov (bad) gs nop jb fcompl jb scas adc cmpl dec jl push loopne jge and and lods lcall scas inc mov repnz pop jmp aam xor mov dec int push addr16 adc push and mov fwait and add cvttps2pi rcrb mov into push icebp cs hlt mov cld scas jl jae cmp sbb test es js xor and and mov cmp sarl jp out movsb les mov jl dec mov push setp pushf mov xchg imul (bad) jl mov fisttpll fcmovb pop ret scas mov rcr fwait mov jb add dec mov cmpsb ror loop mov jp loopne clc lret movhps xchg sahf fstl mov push ja mov xor mov sbb mov pushf xor mov mov addr16 sbb and cltd and stos aad mov cmp jns (bad) enter add test loope sub inc movsl (bad) mov loopne div mov popa sbb pop fldln2 mov fnsave sbb jnp dec adc (bad) iret mov adc lods sbb cs cltd inc (bad) inc pop or add jge cmp (bad) imul add sub xorl sahf push in inc pop popl pop sbb test inc add mov pushl xchg adc jg nop sub add int jl inc cmp out dec and mov stos cmc push sbb in fdivp mov cmp add xor sub dec sbb scas sbbl mov mov inc cltd pop jmp pop and popa and inc scas jae das cmp xchg pushf fidivrl xor je and mov jg xchg sub or orl and dec sbb cmpsl mov test mov sub lea sbb jmp sub inc cmp or pop dec push jmp lds push enter test or ret and in pop pop stc test dec lods xor push push cmpb lret xor arpl repz xchg loopne push push cmp mov or (bad) fstps mov stc bound and andl movsl fmuls popa ds xchg jp push xlat fsubr in jg sub test sub icebp mov mov sbb mov cmp shll sbb push in rclb fincstp out pop and (bad) mov pusha (bad) fwait add push jecxz bound xchg push pop xchg adc and scas test pop cmpsb inc gs fcmovnbe xor and push mov and jb insl test sbb push pusha xor cli mov rcrl xor pop in dec out mov mov (bad) ficompl add mov hlt repnz aaa sbb aaa mov cmp in cli cmp and jecxz sbb xchg mov (bad) outsl add push (bad) mov in and out pushf dec arpl into out (bad) xchg jl inc xor imul xchg jns jp xchg stos xlat push pop push jp movsb jns loopne push xchg inc xor ljmp lahf cmp dec adc or adc leave sub arpl mov out mov into jmp xchg icebp xchg stos in inc je mov push jnp and std add sub imul sub scas pop jp xor mov ljmp aaa enter lods jo dec mov cmp cmp dec into jl pop pusha ja xchg push mov add sub lods ds fsub mov push clc sub jbe clc daa push push xchg movsb ss sarl pop lcall lods je inc inc mov mov pop addr16 jle cmp xchg sub repz jmp mov daa pop mov sub test scas inc stc xor adc xor jb add aam cmp cli out sbb pop (bad) jb aam xor or pop xchg push gs clc aad scas out outsb push push lret je adc repnz pusha push stc fmull sbb leave mov insb lahf jle (bad) ja jno pop scas pop or fmull mov or and pop and sub and fildll xchg jmp dec inc arpl mov mov jg inc fnsave cld mov lock roll mov (bad) (bad) (bad) enter mov mov int3 call stc jnp mov jae aaa (bad) out les out pop (bad) arpl dec test mov pop adc imul inc mov data16 aad sbb loope jecxz sub lock sbb out sbb or test int3 sub mov fdivrs push imul mov dec popf gs jle dec push xchg sti insb hlt mov and sbb sbb adc mov imul sbb mov popa xchg mov cmp (bad) daa aad mov or pushf mov fsubrs pop push cli jb aas out mov push insl or scas ret cld push push fdivs xchg (bad) jl sub ljmp lret push pop jle xchg mov add and pop mov xchg xchg imul mov test (bad) mov ja hlt xchg xchg into pop loopne movsl jecxz mov push push das lods pop test add lahf push jmp popf cmp push mov dec nop jnp mov leave stc lret jbe push popf pop jecxz mov int addr16 push std and add fwait xlat xor sub sub out fwait xor push xchg sub insl sti lret xchg inc and in fidivrl icebp sub and loop xor inc inc or xchg mov imul sbb bound push push add or dec jns in and cli xchg lods test cmpsb leave sahf pop popf jns daa xor out xchg jo mov mov mov mul fldl pop xor daa mov adc mov xlat pop fwait adc pop fldl xchg adc pop sub js push fildl fdivs lea cmpl push arpl mov into out add adc pop lret iret cmp xchg data16 leave jmp jb pop inc push lds (bad) push movb ficomp jnp mov lcall ret dec jo mov into loopne cltd push je cwtl loope shlb add imul xor xor fcmovu or cmp cs mov lds in and loopne cmpl in fidivrl or pop ljmp in cmpsl lret lret rcrl js inc jb mov mov adc adc test test or push repz push cmp jg test adcl bound inc mov dec jp xchg scas gs or dec icebp inc push mov xchg sbb fs xor cmp cs in nop daa xlat lea pop icebp jl out (bad) cmp add cmpsl sbb int3 and pop jae imull dec out (bad) ja lea in dec xor and xchg leave inc and push fisub push pop fdivp push adc daa bound mov mov sub xchg aad adc xor jp aam xchg stos stc test pinsrw fisttpll and jle jmp (bad) mov dec out inc pop fs stos cmp mov mov xchg inc pop mov aad lret dec lods push ja jae and or xchg outsl insb js xchg xchg int out and sbb fmulp int3 scas fwait pop out outsl fbstp psubw add mov aam out sbb fwait test push inc std xor test lock hlt daa and push ljmp in mov lahf jg mov jbe xlat cltd mov jmp (bad) fmuls mov cwtl movsl cltd dec or sub fstps in fs adc sahf push pop insb mov inc outsl inc andb fsub in outsl scas adc push out es cli and loop pushf xor xor mov cmp lea inc dec dec fstpt mov imul add nop aas adc adc cmp lock xor sub jb stos sbb lock fadds cltd pop repz xchg loopne push inc mov mov inc imul sbb jg push aaa das mov pop mov sbb sahf xchg inc (bad) mov insl pop in jbe cmp ret xchg imull iret pop or sub stc add xchg clc cmp in fstpl clc test ja mov push int dec xlat mov xchg in xchg clc arpl outsl cwtl cs ja aam dec xor push mov call mov add lahf call and cmpsb push loope xchg mov fstpl out mov cmpsb sbb dec imull dec ret mov je and jno enter test and imul test cmpsl into push dec push mov scas call or sub or add sub inc ret lea neg cwtl add nop shr dec push in pop test xchg mov lock jne (bad) inc movsl in outsl insl cmp push ja pop mov jg bound dec (bad) pop mov ret jmp jp sub jmp subl inc mov sarb out and sti push test pop sbb push int xchg adc jp sbb mov xor pop mov push inc push es (bad) jmp imul fisttp insb outsl sahf adc push xlat imul lods jne mov push or test dec inc inc mov iret sbb jmp pushf out or or lods xchg test pop les sahf inc fwait inc sub adc stos inc lock push cwtl fs jmp out jb push ds pop popl aas sbb cmpl addr16 dec jae aam add (bad) fimul xor pop stc fwait sahf inc jb xchg mov test fdivrl or inc js sub out mov out test test (bad) or repnz imul and mov xchg xor aam sti add sub inc (bad) fidivl pop js dec test icebp mov mov or pop jno mov add adc mov movsl cmp mov jmp or inc adc movsb cmp dec sub in adc add mov xchg cwtl std stos clc xchg or insl lret (bad) lea (bad) lea xchg xor sti outsb pop pop cmp lea call add test sub jp ficomp pop add arpl cmpb xor stos and data16 xchg fsts and rclb fstps xor (bad) repnz xchg out pop jo aas inc imul mov cmc pop std jnp or lds pmuludq test sub or call adc mov xor movsl mov xchg push inc cmc loope cmp jle iret jbe repz xor xchg pusha lea gs inc fs in inc ljmp or fbld push sbb push pusha mov test and lret lea adc jl pop jle in xor stos stos mov pushf adc test sub xorb enter test fistpl sub ret les pop inc int call in dec xchg and movsb js mov sbb roll inc (bad) fisubl adc iret call in add pop (bad) das lock inc popf xchg cmc push shrb push jns xchg inc nop dec fiaddl adc jns xchg pop push enter (bad) loope inc jle jne mov pmulhw hlt ret xor scas sub push mov or (bad) (bad) xor inc out loop ljmp cmp mov cwtl xor and push insl add rclb cmp add shrl or aam shl (bad) dec sub mov xchg sub cmc out mov push mov and adc xchg push inc scas lea xchg sub xchg ret sub pmaxsw jb mov in lcall add mov hlt and dec scas lock fs adc scas xchg mov aas enter leave mov test pop mov pop fwait shl lret arpl andb cmc jno cmpl adc jnp inc adc xchg leave fs pop sti insb dec pop cmp pop push xchg jmp js mov cmpb in pop repz mov jns mov xchg pop xlat mov mov dec jg out sbbl ds or outsb and push dec mov sub push ja inc aaa push fldenv cli in jg mov sub pop fs (bad) mov push jge ja mul inc idivl scas push ficomp pop out jno out aas and add jno das pop dec pop rcl inc fwait int in adc mov fwait xor std xchg pop push xchg pushf sbb pushf leave repz mov shr add in jl mov and inc sarb arpl out dec cli ja jo pop arpl pop hlt add fistpl notl push sub (bad) pop mov jo test mov sarb fldl dec push aad mov jp inc adc xchg add sub mov pushf jg inc lods sub xchg push inc cmp ss cmp outsl (bad) mov shr jb movsl mov jnp daa dec rcrl sub shrl pop pop dec out mov fstps sbb pop push testl mov (bad) in sbb mov and xchg jo dec (bad) jne ret imul ds inc aad sbb and adc lahf jne inc addr16 jne mov jne inc jp pop sub scas fidiv loopne bsf sub sbbl out fadds sbb push mov jns dec push xor cwtl popf (bad) test mov in out fdivrs ljmp dec mov or fisttpl jle mov cs inc lods xchg sbb mov pusha pop push cmpsl pusha int3 sbb cmp fnstenv test xchg push inc das fcomp push sub cmp leave jb jne mov jle imul rcrl push ficoml mov adc stos pop mov repnz inc mov xor xor and xchg mov mov mov nop cld push es (bad) jl fsubrl sahf sub rcrl push sarb fnstcw les in pop int sub insl jl addr16 mov jge into fsubrl push and pop insb add pop mov out fdiv or (bad) nop pop or mov push jmp insl enter inc mov popa cs mov jb jmp sbb ss out ret sarb xchg push stc ds cmp cld mov jno shl fildll cmpb pop inc cmp (bad) mov adc data16 pusha nop negb dec fcmovne dec sti mov push lods mov sarl or jns sub imulb xchg outsb xchg pop int shrl mov xchg mov mov sub lret lods loopne mov ret bound sub jge pop and es mov pop stos sub shll add call (bad) fwait sbb mov bound sahf xchg pop mov cld dec ljmp and xchg mov mov pop jg sti sbb incb mov jmp mov fld nop pop pop or lcall (bad) popa jle faddp pop cld pop add in movsl pop ljmp popf in xchg mov stc xchg mov fcomp cmp and inc addr16 stc lods lods add shrb cmc xchg xchg jns shll lcall dec rol cmp sbb pop movsl aas adc lods popl push cmp add xchg jg cmpsl cmpsl bound sti or dec and ret bound sahf sub xchg mov pop xor lock ss sbb es insl (bad) adc imul pop jo mov push mov cltd inc mov out mov rorb imul fldenv pop in sti pusha jge imul shl push aas and cmp inc div sbb lock mov fdivrl or mov cltd fisttpll push mov mov mov or aas mov nop jns jns in (bad) (bad) rorb xchg jne mov jge add lds xor mov loopne insb (bad) orl les je cltd xor hlt jmp andl cmp (bad) gs mov xor sbb jnp outsl out jno sbb push aad popa inc sahf adc push jecxz fstpt push push mov aam out fisttpl int3 test push push movsb out (bad) mov jbe add sub sub aam push in xor push popf xchg inc cmpsl or (bad) dec pop loopne xchg push sub mov fcoml ss inc mov inc xchg cmp jmp or mov dec das lock inc test add sbb (bad) mov jg in mov movsb adc (bad) lahf pop pusha or xchg lret mov repnz pop (bad) fcmovne pop mov mov push mov inc rorb fcoms xchg int jbe sbb ret test cmp cmp idiv sub mov lock jl sub push dec lahf stos stc add cmp cmp inc xchg rorb jecxz push shrb pop adc sti mov mov add xor dec lds stos loop sub or jnp ret scas out inc cmp mov shrl (bad) mov inc outsb inc adc jno scas stc push pop mov js add movsb test sbb sbb notb add into pop xchg fucomp fsubs jno dec stos lahf cltd add xchg fwait or ljmp mov sub stc sbb lods in xchg mov mov jle mov hlt sub clc lea lods in loop mov (bad) je mov out sub rcr pop xchg cmp pop movsb loopne inc leave mov ds jmp sbb out dec out insl pop mov adc repz cmp jl mov inc movsb gs xchg icebp sahf cwtl lock ficomp stc cmpl sar cmp mov push adc sarl out cmc roll std stos inc lahf nop daa pop (bad) mov xor pop add jo aas int sub movsb xor fisub push daa subb push dec std dec repz adc (bad) jns fdivs fsts (bad) cmpsb les outsl xchg jmp mov xor (bad) repnz mov (bad) xchg arpl push or adc mov mov jl adc loope xor mov enter push jae mov cltd xchg sbb in mov lea and mov push ret dec or cmp dec or (bad) lods fs jp imul lahf jb inc sub xchg aas mov inc emms mov sub (bad) mov idivb and ja sahf mov xor dec xchg mov out rcr test out mov mov cmpsl sub xchg mov or popa inc sbb xor cmp pop add xor mov xor sbb data16 test pop movl fucomp or insb add add add push adc pop mov gs jne (bad) mov push icebp mov clc das stc shll adc add (bad) jo movsl add jo mov aaa mov negb bound xchg and pop and cmp dec popa mov in das jnp in pushf dec dec mov imul frstor and in jne xor stos mov in int cmp ljmp push scas enter inc jnp scas inc xor mov mov mov adc mov inc (bad) (bad) mov cmc aas adc jp jnp addr16 dec es adc jb lret stos push mov (bad) fsubrs data16 mov je sbb push out pop addl cmp pop push xchg add jne mov xchg aad jle (bad) jnp push test xor andl (bad) hlt cmp (bad) clc mov mov mov jl (bad) pop jne ret hlt or sti xchg jb stc pushf iret or xchg mov cli mov cltd mov adc loopne or in sbb sbb mov fs pop dec xor ljmp test dec roll cmp imul xchg mov jb push aaa jae sub dec into jecxz cli cmp out inc mov cltd into mov cmp jnp dec repz lock jmp cmp cltd add in inc leave ss (bad) sbbl add adc insb inc jmp pop xchg icebp mov jle push imul cmp enter xlat mov mov and inc imul mov fdivl cmp mov jne cmp mov lock das (bad) rcr mov test push push dec lcall dec mov in sbb dec movsl mov pop (bad) rol pushf pop dec pop sbb stos add hlt dec in adc xorl addr16 in aaa stos adc mov insl dec xor jl inc loopne add sahf xchg push fdivrl lods or inc sti jg lret loope test jmp (bad) push cmp jbe loopne jmp sti leave mov out xor lahf stos bound sahf dec out fistpll inc add ja je dec add pop or mov push in jno mov inc mov sub add (bad) or sbb popa das idivl fmuls inc rorb fcoms inc cmp pop lahf and ret fwait lods cmpsl fstpt xchg fidivrl cmpsb or lods fnstsw add test inc (bad) add test push cmp mov mov xchg xchg pop fmull fcomp iret cmp pop push in jecxz xor xchg fcompl lods inc popf leave sbb loope mov repz inc imul add lret mov fadds hlt insl subl and sub and (bad) out cmp mov jmp adc orb inc pop repnz scas aaa ss data16 cli mov adc jnp lahf shl lahf adc sbb enter pop fnsave dec mov mov test and sti and mov xchg js (bad) repz dec stos into fs jne adc and jbe adc add xchg rorb nop mov (bad) iret in sub inc out ss test mov lret cmp xor ficompl lret movsl jl or out push gs (bad) arpl inc mov lret sarl stos mov (bad) mov mov pop and add xchg sub addr16 test test push enter dec sbb mov lret adc cmpsb dec pop mov loopne loope data16 fbld mov pop (bad) mov push loop cltd or pusha mov jo roll lret out div adc add gs (bad) scas nop pop sub xor cld je imul or and cwtl cmp int inc fstps add add dec and insl imul mov loopne dec pop test test ret aam shufps shll sub fisubrl jl and jne aam fcoml incb repnz push je aas inc icebp ret cli sub outsb push lock fnstsw lretw and pop fwait sbb mov dec pop dec cs ja ja testl jmp icebp jg inc js pop dec daa enter test fnstenv sub and xchg arpl (bad) sub cmpsl mov test aam popa dec rorl enter imul js (bad) pusha fwait or lahf sub cmpsb and or sub in jne movsl in xor add scas adc das xchg add sarb mov mov test mov in repz mov mov xor inc dec xchg mov xor int and mov cmpsl push jne xchg iret xlat bnd and cli out add mov inc cltd mov fnstenv repz mov and jns cli pop jbe xchg movsl icebp xor inc pusha int3 ljmp xchg xor mov and jmp adc push and ja xor push icebp xchg (bad) sbb pusha pop xor in mov push mov movsb test push mov mov cld inc mov (bad) cli (bad) xchg or push xchg lret repz repnz jns ret adc lret xchg xchg test ds dec add mov aaa mov pop int3 mov xor sbb dec ja mov sub push movsb dec sbb sti daa addl cmpsl adc data16 (bad) sbb dec push orl and mov imul insl xchg pusha repz lcall mov pop mov in push push lret sbb or mov cwtl and movsl shrl mov (bad) xor int push arpl mov push xlat (bad) out enter mov movsl push mov outsb shr pop les xor out xlat (bad) mov jle jecxz mov jae cmp ss add imul in lcall mov ljmp xor iret arpl (bad) jne sub pop jns test pop mov lcall divb popa mov (bad) inc out cmp fisubl lahf insb repz pop mov fdivrl jecxz and jo cmp test xchg cltd mov nop call push jbe push sbb xlat and sbb pop popf xchg aam sbb out and fs xorl mov xor jns cltd push aas xor jl pop (bad) jns sub mov stos push push xchg dec in mov xchg lods inc mov movsl xor sbbb call push lret ja mov lods cli leave mov cltd mov fldl sbb test cwtl or jns mov mov xchg jl lcall enter jns iret push out sub or cli out cmpsb insl lret xor jg push cltd aas fstl out cmpsl dec mov lret push mov stos roll mov mov divb addr16 xor push insb fsts popfw push ja lods push adc push pop leave ljmp (bad) mov pop shll ret push jae sbb jbe icebp ljmp (bad) cmpsl xchg call (bad) cmp outsb jl jno clc lods hlt pop push push xchg xor ds push xchg int sub and popf fdivr xchg sbb insb outsb mov push push loop push arpl cmp out rorb pop mov icebp cmp scas imul sbb clc and test sbb sub std enter inc (bad) jo mov imul je mov mov pop in mov pop fdivrl test into jge addr16 mov aam sbb adc repz inc xchg or jecxz inc xor xlat hlt mov push jl fnstsw push out mov adc aam leave sarb mov adc dec lods inc std pop jo dec hlt mov ljmp add mov cmp xchg push or sbb mov cmc mov (bad) (bad) dec out and jbe pop (bad) hlt xchg ss xchg dec cld add pop inc push and push test lock test fs das mov dec aam cmp inc and enter cmp test and movsl (bad) std xchg sub xor jne jmp xchg cld adc iret and and sub loop mov fsubs jnp scas inc pop jp or or or mov nop in sti ljmp jmp xchg mov mov popf ficompl pop sahf mov popf mov adc addr16 loope mov in cmp setle xchg cld insl fisubrl cmp mov inc sbb mov popf data16 call mov daa loopne mov jno ja in xchg in fnstcw test das outsb inc data16 cmp ljmp fisttp pusha insb call jmp xor arpl jle mov loope dec cmp pop and adc push movsb adc xchg mov push push (bad) mov cmp mov (bad) mov (bad) (bad) mov in push fisubr adc stos cs or int3 and in xchg pop dec or leave push (bad) mov and xchg jle push and pushl and xchg sbb ret stos jno mov cs fsubrs jge nop movsb jne jae push aas and movsb add movsl fs rorb jp sbb add or repz rorl xchg and lahf xchg iret add (bad) cmpsb lods pop jmp lcall js push js jl jmp movsl add rorl dec jp jecxz sbb jg push inc out lea sbb cmp pop leave clc adc sub add pop push or movsb mov sahf mov dec insb mov insl lahf pop sub xor or andb push insl cwtl loope mov sbb pushf jmp sbb sbb loop loope adc push in mov jno push ja (bad) mov mov (bad) pop ret les sub cmp shrb jnp xchg and js rolb jne clc in pop push pusha and jnp sti inc jg lret pop je mov arpl pop mov cltd sar std xor adc bound (bad) push mov jnp add outsl leave jnp ss and cmpsb mov scas pop mov pop lods jae xor jle sub inc jmp xor and (bad) pop daa hlt cmpsb inc xchg jno push xor mov adc es imul pop dec (bad) fcmovnu mov popa dec (bad) insl and jg cli out or push (bad) cmp (bad) pop aad dec xchg cmp out loopne aas mov ficoml addr16 cmp sbb bound pop mov mov pop daa jmp push insl xlat stos fmul mov push shrb lret xchg adc mov cmc jl cli xchg es ljmp xchg dec xchg insl call or and sbb inc or scas adc nop imul cmp xchg adc scas testl push mov jg add pop out push mov and in bound lret lock cmc sub imul cli dec xchg in dec dec jns mov jle push inc jecxz xchg ljmp (bad) xchg ret jg sbb adc lea shrl xorb lret mov les xor push xchg scas jo jns xor test xchg mov mov mov outsb clc stos scas pop pop xchg dec mov and sub or pop in ja sarb xor (bad) xor scas pop arpl fcmovbe lods inc lahf (bad) mov in mov mov mov mov cli push mov cli sub inc pop pop xor push ds fsub and jecxz xchg ja out mov push cmp add sahf or test jae enter push xchg push fnstsw mov push loopne into test or push fldt movsb bound inc mov ljmp push and jle insb or adc jmp popf xchg stos or mov test jge ljmp movsb sbb push dec xchg inc push out cmp ljmp call fsubrp fistpl bnd xchg pop mov (bad) std mov cmp mov jne jmp sub push and mov or jae inc in mov cmp (bad) mov test imul cmp int cmc call popa pop ret pop add in jmp sbb and mov arpl out ja nop lods adc dec cmp jecxz and push push push aad adc ret ret push out push sub addl jg icebp jne ss call or (bad) pop iret test repz out jae mov mov in mov stos lods (bad) push stos fildl cltd popa mov scas stc mov out mov dec pusha lds sbb xchg jns stos sbb int jle inc insl imul lock jge push lret push popf lcall mov pop mov mov mov push in out sbb inc (bad) mov mov xor cli push insl mov das sub ljmp mov rclb or insb jl (bad) dec stos jg out sbb sahf sub mov mov int fimul mov ret (bad) mov fldenv jl (bad) popa jg jae sbb sub out enter mov adc and in ds push pop out ljmp fldt mov pusha push push or xor jge in push mov jbe cwtl adc pusha aas rorb test pop dec sub out (bad) repz arpl mov hlt daa jae mov enter scas int push or lods in mov aam dec jnp inc xchg and lret adc stos test mov push cmpsb dec push pop sbb fcompl inc inc fldt popl push adc loope and lret in xchg outsb push sti jae dec test sub addr16 push xchg xchg inc lods mov push dec mov mov mov icebp mov add fistl push js lcall jbe xor aaa out xchg sub aaa xchg cmp in add xor pop push repnz jl cmc or add xor fnop jno test into jl jne cmp pop sahf dec repz jmp mov repz lods std mov jnp dec inc sahf xchg jp pop rcr and fisttp mov xor stos pop xchg bound imul ds mov hlt dec xchg ljmp ret or mov xchg hlt jne mov push scas adcl sbb mov (bad) (bad) jb push inc xchg insl mulb out adc inc push xor mov push sbb icebp inc or mov xor les jo sub insl scas (bad) pop lods or lcall bound or in jl inc xlat repnz lods repnz outsb bound mov mov xorl loope mov shrl sub mov xchg pusha ret push push out mov jp aaa or xchg (bad) push mov fsubrp movsl repz cmp push xchg lock enter mov and ret repz push std loop test test jnp pop sarl loopne dec sub stc cmp mov jbe imul xchg lea jb mov lcall int3 jmp or call mov lods sbb movsb mov mov mov inc clc inc jle das test pushf sti xor cltd xor pop outsb in add push xlat (bad) push movsb xchg repz cmp jl movsl pop stc sbb mov xchg adc fsub push inc repnz cwtl add push xor xchg xor movb xor jecxz sbb rol push js repnz pop push lock mov les inc xor sbb mov int es lretw mov mov pop in mov inc sub aas inc arpl stos jbe jne pop adc and push ja roll sbb leave rclb lds mov jbe dec dec cmp leave push notb stos into mov dec sbb pushf and sahf mov addl xor mov pop sbb sub mov dec pop and mov adc mov push data16 cmp and sarb mov (bad) jmp mov xchg hlt ffreep push int3 mov outsb setge and or dec mov aad loop mov outsl loope adc lret cmp mov xor repz in mov xchg lret test xchg lret sub and lret jnp pop jnp fstps mulb leave push outsb sbb and loopne cltd inc cmpsl xlat adc xchg adc pushw jmp lcall mov mulb xchg enter data16 sub or imul insb popf xor int mov movsl mov and outsb mov test mov cmp jo lcall negb inc out stos hlt jmp movsl rorb mov xchg jmp jno je cmp push (bad) add (bad) adc andl int jno jle add mov arpl enter dec push inc icebp mov cmp (bad) mov lock lock lea scas into lods test inc movsl enter movsl jne pop pop stos out jg clc ljmp mov fmuls addr16 loope inc or pusha push hlt rcrb dec or fildl xor inc xchg push cmpsb mov cltd mov xor sbb insb dec mov inc jmp xor rcl cmp iret insl orb push sti xor into jg xchg and cmc pop pop (bad) add cld (bad) pop push in out fcompl dec aad mov dec mov das and jnp test lock xor jae jo mov fiadd insb dec in lea adc mov (bad) push and mov dec inc or aad add loope push sub mov insb mov mov or imul add or pop insl rolb inc sub scas loope pushf jae popf sub out push movsl mov lock mov mov push nop inc add lret popa jae adc xor popa push subl pop xchg push out xor in push loopne push add (bad) out push mov push push cmp sarl xchg mov mov xor les cmpsb hlt sbb in pop test jbe adc lock xchg testl mov sarl insb clc lret xor add (bad) movsb iret pop mov test pusha lods data16 loope adc stos mov out lahf hlt pop shrb push pushf sub (bad) dec or jge out pop mov ljmp out test aad cld adc sbb js or sahf lock in and cmp pop in xor jge or stos xchg inc push jmp jns push lods xchg pushf dec sub bound xchg nop out push cmp pop loopne mov rcrl (bad) or addr16 (bad) nop mov xchg pop push mov test xlat push pop arpl stc add shr outsb test (bad) fidivrl gs push sbb inc sub adc lcall idivb jmp mov push add or xor cmp dec ficomp pop fwait dec je pop cs xor outsb inc enter pop out ds mov sbb pop fsubrp cmp pop xchg enter repz lock (bad) jno in mov cmpsl cmp in cmpsl lds int mov dec jmp mov icebp jb lods add dec aaa pop out or sbb add js inc fcoms mov out pop sbb (bad) dec mov push fnstsw xor xchg fwait sbb (bad) in mov inc testb test das adc xor mov mov and mov xchg imulb mov mov lods cmpsb xchg mov and pop in (bad) cwtl mov adc inc (bad) adc jno imul mulb or xor push sbb popf je mov mov pop insb pop jp lock fs sub jecxz inc test arpl mov out add mov mov ljmp add mov sbb imul pop fwait clc lcall mov lds (bad) sub lret dec jb imul movsl loopne adc cmp lret js out bound call or int arpl pushf jg mov push fsubrl int3 sti inc addl out jmp and xchg in pop jbe shl push add fcmove and bound push jge fcoml mov lods sti xor mov mov inc cmp das fimull xchg adc and sbb into repnz clc cmp mov mov inc mov push (bad) repz xor cmp mov cmpsl bound cmp pop das lret movsl fcompl jle xor add xor pop scas out adc aas jp cmp int3 rcrb cmc cmpsb lock imul cld mov cltd ss add leave adcb sub push xlat cmp xchg mov jb or mov or xor out mov lods call (bad) repnz es stos push jo sahf iret mov and sbb imul ret and (bad) jnp aad mov out xor icebp rcrb dec sub fwait stos insb inc pop cmpsl jge iret add sbb and inc sbb add imul out nop gs js push cmc aaa and sub test in aaa xor in and adc or and mulb imulb lcall lcall cmp out mov cmp mov sub push xor push (bad) lret dec rcrb sub mov mov mov movsb pusha outsl or (bad) je clc xlat jne in fadds (bad) fidivl mov jae dec out and popf negl cmp (bad) mov pusha in scas mov ss or mov xchg add test or (bad) fildl inc jl mov movntq insb sbb lock jle daa mov sti roll aam movsl cmpsb in mov push xor jne (bad) out push fucomp jp xor int (bad) sub movd cli test jnp pop pop ret cmp or out cmp imul push testl push cmp lret pop pop xor dec inc dec jl or mov cs loop insb mov (bad) popf xchg int mov adc push shll popa xor mov and inc and add lds lcall aam sub or nop ss stc inc inc insb adc add push sbb loope mov out (bad) xor cmpsb (bad) insb daa jnp jmp mov lds push push add pop dec mov mov and sub pop ss pusha xor mov push cmp push (bad) cmp sub and (bad) push or jp xchg hlt mov mov inc sub imul xrelease push stc loopne and jnp pop inc (bad) js or movsl les mov push fdivrl push mov subb mov xor inc out les pop int3 roll lds or popf frstor push sub je mov leave or adcl iret pop sbb dec lods mov lock scas ret xor lret xchg inc jge,pn push in dec test aaa xchg sub mov popf loop push lds mov ss test das mov je jo mov xchg int into xor lret adc jb test push mov (bad) inc push in or inc mov jp outsl out popf in lock push shlb push sti or inc es clc scas adc jecxz (bad) mov mov xchg pushw or and sbb pop (bad) dec test sbb pop fwait lods sub cmc mov mov add xor adc pop xor or and cwtl adc ss (bad) ja test or sub sbb add out scas xchg and xlat or mov dec pop xor push push sub push ja mov shrl sbb sbb ds and or cmp adc ffreep xchg movb mov scas lock daa jge (bad) popf mov add push cmp pop jp imulb aam jl fldt insb cli and push fsubrl sbb pop lea mov popa outsl test sub cltd out pop mov ror sahf push (bad) fisubrl mov adc pop mov cmp adc dec push test fs scas sbb loop js jne sti ret loopne inc adc pop cmpsb xor cs dec in repnz dec addr16 and icebp fcmovb test (bad) ja inc xchg stos sub popf xchg mov or mov gs push call movsb and sbb push mulb jnp cli icebp ret xchg and cmp add pop les inc jnp out add popf push scas add or (bad) aad (bad) enter popf pop xchg gs outsb jne xchg lret daa and ljmpw push std movb push cwtl cltd sbb in aas sti adc inc mov stc pop pop rcll arpl aas and mov cmpsb out xchg pop adc sbb jecxz pusha sub insb pop sbb outsb (bad) in xchg dec xor (bad) leave or cmp in cs loope xchg lcall mov push aaa xchg repnz ret ljmp aas sub out adc adc inc pop flds inc lcall sub sub add xchg push xchg cmpsb data16 xchg cmpsb addr16 ljmp jmp jmp xor out push mov cli and jmp push cltd fadds push mov scas fsts das in mov mov push dec xchg leave mov ljmp and dec aad dec sbb inc push adc cmp scas mov enter mov add and adc or pop sbb lods mov pop loop cmp loopne sub nop xchg ret pop add mov out fstps sarb jg ds xchg mov xchg jle (bad) add push add mov mov mov cli mov jl dec add outsb or mov aaa lods or out out daa les adc mov jge push repnz dec mov mov and cltd out cmc out push mov test and pop outsl insl cs jg sub pop fcmovnb outsb inc repnz clc mov popf adc cmc mov push ljmp sub into (bad) mov ljmp sub push and mov daa xchg inc daa and push or test mov cmp cmpsb or jl push js and fsubrs sbb mov or jge or enter fstps fcomps ret sbb clc mov mov out mov push lret ljmp cmp adc and mov cmp dec cs fldcw mov addl (bad) adc fcomip sbb and adc arpl push or push sub cmp adc cmp ret out jp sub cli pop mov pop les aas or das pushf dec dec imul scas sbb xchg mov addr16 pusha jmp cmp xlat dec push dec xchg arpl cli out inc rcrb repnz lods shl xor lret sbb adc mov xor subb jae cmc dec out into xchg call jmp ja or inc sub and fidivl inc sbb add mov mov fnop dec inc ds mov cltd repnz iret jecxz push lds dec pop lcall dec inc jno sub int3 out aaa std mov jle imul (bad) les daa jecxz sub xchg jno fnsave divl mov leave or push mov pop dec pop adc repz jb icebp and push roll mov pop xchg (bad) lret mov cld push hlt leave ds ja ss int (bad) call cltd fcmovnbe sub xor mov ss mov fdivl icebp mov adc mov mov test in adc bound dec out jb mov xor aas inc repz adc cltd xor mov jge test mov sub pop push lods jmp mov lock into xchg mov adc ds inc push hlt mov fwait or mov icebp lock add inc sub xor mov or inc or movsl les push hlt (bad) imul lcall pop jnp (bad) cmp shlb pop push cwtl and cli lods pshufw in movsb add inc dec push dec jmp inc (bad) cmp mov adc mov pop jg inc inc (bad) neg rep fiaddl scas int3 pop dec (bad) push fnstcw cmp out mov out stos lret push inc sbb cwtl cmp sub out (bad) mov data16 mov jecxz push sti movsb inc imul or inc hlt add xchg mov mov mov lcall fldcw mov movsl (bad) lcall jecxz loopne mov popa cmp stc rcrl out scas adc lock sub cmc gs in mov fidivr lea clc add xor repz jle pop popf dec jp fisttpl jl fstl xchg aad test add adc cmp jp das push cmp push test out clc jmp fnop aas jl or push das xor dec shll jle adc add mov nop adc scas and xor push in push mov sub rorl (bad) cmp call mov icebp enter pop add push or mov popf cmp mov cs out mov mov or push out pop pusha jp das roll inc push in andl repz xacquire (bad) mov int lock out xor cs outsb inc jge jmp (bad) xchg jle pop add shlb add dec and in sbb mov cmp cmc je mov lcall out add jmp xchg xor pop das cmpsb xor sub int3 xchg pop jle xchg xor test loop test sub scas jmp shll aad mov sahf sub mov dec cmpsb inc iret rclb dec jno lahf pop mov mov int xor sbb jl data16 mov inc cli lods push xchg aaa add sti inc das fcmovnbe ljmp xor fiadd dec fstps test (bad) fcoms fs dec pop sarl fadds test or fstps pop cli jo insl cmp and add xchg cmp test lcall adc or mov inc dec or jo jmp je cmpsl jno adc fcoml sub lret mov loopne gs xor add sbb in jo iret movsb jmp dec or jp (bad) cmp ficompl ss (bad) outsl mov popa cmpsl loope dec fistl mov jnp xchg enter iret ds decb in fist fmul xchg out dec push mov add xchg jns adc outsl inc mov mov lret or mov jne pop fstpl scas test bound cmp rsqrtps add sub aad cltd sub push fnstcw inc dec fcomip pushf jge xchg push sub (bad) repz stos mov int clc clc push dec imul dec shlb or mov adc cmp mov pop ja inc cmp (bad) adc (bad) push fstpl mov cwtl orb dec add sbb jle push insb test fstpt pusha jae loope xchg ret pop aas pop pushf cmp iret dec jle mov jne xor push and test popf fisttpl cmpsl loop (bad) mov adc pop cltd inc fildll pop pop cmp or or push add fsubl pop inc das mov into sub dec test sub pop mov arpl test loop push sub pop (bad) aaa popa mov adc sbb hlt mov sahf push xor push daa shrb lcall mov mov pop dec test xchg adc xchg pop cmp fmull sbbl sub mov xor cmpsl jo in or into pop fldl int3 ss xor cmpsb in psubq pop mov (bad) int3 into cmpb sub jb outsl (bad) and test test add and xchg test hlt aaa add loop das push jl or test lock jnp sub adc cmp faddl cwtl cmp push cmpsl mov (bad) mov xor into in fs lret xor add incb xor cwtl jmp dec pop or pop xchg lock mov mov test gs dec inc das es test pop shr jge sbb bound leave paddusw pop rcl and mov sub mov inc cmp out iret mov repz (bad) pusha inc mov fdiv daa cmp push xchg icebp outsb pop xor jb lods pop mov out imul imul out jecxz xchg pusha imul adc loope loop lods add cmp ja push jle cmpsb fimull mov push dec mov or mov stc or lods xor int add sbb dec jmp fcomi cmp xor xor outsl dec jg jle push (bad) ss mov jno and insl or testl test pop mov shl push into dec sbb and sbb in dec and or inc xor aam scas mov dec call sub xor fs aad xchg jmp adc in popf ret jns sub xchg (bad) xor je cmpb mov pop repz inc scas pusha dec mov loopne fwait dec jmp in jecxz adc jne (bad) sub lea sti mov rclb out add in lea push sbb ss cmpl xor aas dec sbb ja and leave lret in cmpsl es clc (bad) cwtl sbb enter sbb xor iret out xchg out cmp jmp cs push loopne int jno outsb shr xchg lret les clc adc leave jnp mov neg mov jno fnsave jne push or adc dec or int3 ljmp add aaa fs cmp push lea mov scas loopne outsb push in pop dec je adc adc and icebp and and push aaa push test xchg inc test mov mov jl mov fisub and mov pop mov cmp inc (bad) push out cmpsb es roll fucomip out lcall cltd out jp nop rol movsl mov mov out gs sub int shlb das mov aam inc sub test dec xor mov adc sbb mov andb jnp stos xor jp mov out pop or fnstsw or in dec fcoms ret test daa lods jge mov mov int3 leave aas cmp xor out inc dec mov pop out push xchg (bad) jmp or (bad) mov mov shll pop cmp push xchg rdtsc mov subl in sub int3 xchg mov imul pop mov sub jno fidivr push push (bad) je push inc or cli loope lret mov dec and lods imul iret sub adc test mov out imul outsb mov leave dec mov xchg imul movsl (bad) and imul movsl mov pop xor popa jl nop xchg inc mov rol pop insl sub jb push jle xchg pop test (bad) dec xor imul mov sub pushf lea scas cwtl sub add lea mov cwtl into cltd test lods jmp pop push jo ljmp xchg sbb test (bad) pop lock mov cmp lds std (bad) inc sahf sub sub adc insb in mov loop sarl push cmpsl and repnz cwtl movb pusha and mov pop mov je jae aam lock xor pop cwtl (bad) lods jg sarb dec lods aam xor shll push inc sbb fucomp cmpsb ds or out sub sbb inc fwait xchg leave mov mov mov or sub in sbb ret ss adc mov popf mov (bad) pop lahf cli fs ret aaa fs scas dec les in pop and xor outsb roll nop insl and rcrb mov push pop mov stos mov stc mov jecxz movsb cmp jg mov xchg cmpsl icebp or xor lea adc outsl add adc mov or rcll test pop ficom inc xor (bad) mov adc add lock xchg dec addb int3 cmc fs adc in (bad) xor pop mov jl xor int rorl inc mov pusha stc xor and pop xor adc adc cmp icebp cs xlat adc imul cld outsb nop cmp mov (bad) in iret jecxz cs stc sarb sub add pop pop aad sub mov cwtl call push stos ror lahf out add lods movsl popa xor inc push dec pop xor and cmp pusha pop ds mov jg sbb sub ss fildll ss sub leave test fs sbbl (bad) and jmp imul sub jg in add dec and popa in int or or dec xchg clc adc mov rcrb push push icebp lcall push sti pop mov mov std in nop seta adc pop cmp mov add xor mov adc ds adc test sti jb and hlt cs lock pop sbb mov dec js pusha push jge mov xchg xor ffreep jb inc adc out insl dec mov and (bad) insl jbe mov inc xadd mov aaa inc test sbb mov xor and lret shll je stos inc sbb push inc push imul mov mov sarb mov dec cmp push das clc mov push pop lcall or test xlat pop insl cld dec das in decl popf rclb fidiv xor ret xorb (bad) mov cmpsb (bad) cmpsl add subl aaa loope scas lds or jno mov aaa mov mov test add sub mov hlt mov push sbb cmp imulb lods lahf jnp xor and in aad std mov fs scas ja in repz lret pcmpeqw loopne cmp push in sbb sub dec lods rorl xchg in add arpl fcomi add jns or add or (bad) cs dec and or dec mov fwait pop bound dec push stos clc ss (bad) or leave std test dec stc push adc mov leave xchg push mov push cmp stos daa aad dec out cmpsb cmp popf (bad) sub mov jne sub mov daa inc pushf xchg (bad) loop daa fcomps adc cmpsb call or out call bswap js cltd add in cmp in cmp dec dec xchg xchg xchg mov xchg dec dec popf stc je sarb add stos test lret rcr fldcw and cmpsl mov lods pop into jl enter push push jns mov hlt subl mov xor in xchg rcl xchg push repz xor or (bad) jge push or daa adcl addr16 lcall and imul pop and xchg aaa loopne iret aam cwtl xlat or push (bad) push or mov pop idiv mov push or push gs (bad) pop push mov stos jnp inc mov xor sub push pusha mov and ja mov dec mov cltd in mov (bad) jmp (bad) jne dec movsl (bad) out mov lcall scas and notb aaa int3 mov (bad) inc addb stos push pop dec pop sub push jno pop out fstpt daa sub mov lock cmp aad (bad) test push fbstp and enter mov and cmp movq rolb (bad) fisubr or dec jle dec jge in movsl push stos jecxz adc and jns fdivr sbb push int jl cs dec push adc pop xchg inc and gs lahf lods inc mov mov adc jmp adc lds scas out push push movsl imul push outsl inc pop rclb sbb pop mov cs es (bad) xchg int jbe mov sbb inc outsl ret pusha dec ss shrl js ficomp jo xchg loopne fildl jo int arpl sub or lahf push xchg insb push push scas xchg pop scas and repz loop sub cli call inc jge mov xlat push adc lods fnstcw in inc mov jmp dec fldl ffree jbe mov loopne cs mov and lods mov pop data16 sbb sbb pop cwtl imul loope popa or jl ret mov pop pop jno,pn sbb jle mov leave dec dec or imul js xchg mov in call sub mov les popf or imul popf in sbb or adc aad popa xchg sub test decb mov push arpl sub in push add inc push and fwait dec push clc pop mov sti fildll mov ja leave lds scas mov scas inc sbb scas sbb sub or testb inc mov lods mov pop fist inc inc cmpsb or into and adc lcall mov fdiv xchg push mov pop orb pushf fimul (bad) mov bnd stos es in outsl enter dec nop cwtl inc in dec pop in jg testl in jno jge test mov movsb mov in jecxz (bad) or xor mov add stos sub cmp lret cmp add lret pop xor add xchg pop xor xchg add mov add jp mov inc xor pop in mov (bad) xchg fcoms mov (bad) jecxz sub dec les rorb dec push lret les and into mov ss ljmp es lahf (bad) fmull (bad) test sbb xchg jp add stc pop xor pop mov scas xor pop nop lea mov sub mov in es jbe lods shr cmpsb mov rcrb out arpl test jle rcrl daa (bad) xchg nop fstps jp adc (bad) dec jmp mov lret das shll xchg cmp inc bound xchg xchg xchg adc js add cmp cld pop (bad) push aam stc pop and cmpsb sub popf call ficoml mov loope mov inc stos iret repnz in iret push mov and loopne pusha mov aam mov aaa mov out sub cmp aam (bad) push rorl dec xchg (bad) hlt (bad) sub xor xchg in mov mov adc lds push pop or fnstcw sbb cmp cmp mov dec ret icebp cltd cld rcl (bad) out sbb add outsb push stos sub jge outsb sub jp jno push dec roll ficomp in loope je jbe adc adc or aad sub clc xor jnp call int3 xchg scas roll fldenv cwtl mov push xchg mov out push bound jmp rolb les mov inc cwtl add fimull movsl dec fcomps mov jecxz adc mov sti (bad) xchg (bad) mov pop mov ret inc loope pop mov out loopne fsubs and ja xchg fsubl mov xor pop adc xchg pop adc (bad) lea pop xor jno cmp sbb (bad) xchg jno dec or inc push pop call imul mov (bad) dec in pop outsb js jmp pop mov negl mov push cmp call stc jle sub sbb inc jge leave jae push xor in into sti or or (bad) mov pop xor pop (bad) aad cmc les (bad) fcomps (bad) pop or inc rorb jp inc out cmc cmpl dec jg inc cmp sbb movsb xor mov icebp ljmp sbb push mov inc fdivp test sbb mov popa xchg xchg cmp rorl cwtl pusha push adc mov (bad) sbb ror loopne pop cmc pop add and mov and pop cmpsb mov rcrl pop jae xor cs dec jge test dec or dec jmp out cs shrl outsb iret or rolb cld push sbb sub sub adc push pop and cltd pusha scas push and aas out or xchg mov inc sbb (bad) cmp rcrb ret mov fstl icebp outsl push and mov bswap and xor stos xor inc fnstenv push xchg mov xlat jge rcl fimull hlt jno sarb sbb xchg (bad) imul and loopne adc int3 (bad) bound and int pushf movb sub inc or ficomp sbb mov jns add pop mov das adc inc loope mov xor pop (bad) mov (bad) (bad) sub in loop leave dec loopne push lcall mov xor das inc and sbb push jl mov clc adc cmpsl cmp mov inc push mov popf imul pop sbb or pop mov subb inc sbb dec sbb insb out mov and (bad) fstpt fmul add or enter sbb cmp outsb xchg imul shrb jbe push mov data16 ds push adc dec (bad) adc leave xor (bad) adc sbb xorb sbb test inc mov outsb mov dec fcmove cmc cld push inc aam mov cmp in mov (bad) mov push insl mov or gs mov pop mov outsl pop daa (bad) sti out jo cmp jle dec leave push jecxz xor sbb jmp or cmp scas xor scas pop mov mov das dec and mov xchg push (bad) push jge imul push ret int3 lret and cmc out (bad) aas xor ds mov dec imul fisubl and cmp xchg in jne mov cmp add orl fistpll ret or sub call push jbe jp fistpll and jge gs repnz xchg and xor adc addr16 dec fnstsw adc movsl (bad) push dec cmpsb test and push adc xchg je bnd push cmp xor cmpsb pop bound js ss dec lds xor sbb rolb xor mov icebp or cmp jecxz in pop jnp (bad) aad xor (bad) rcrb xchg rcrb ja cltd dec or addb jo lds jnp popa pop sbb add data16 mov stc aaa mov call fs mov mov popa lcall dec loop mov pop push sbb insb enter xor push stos cmp les repnz xchg dec in divb lcall dec out cs mov lds push icebp lds jne int add inc sbb leave jle aaa xlat iret mov stc je daa add test sbb mull dec jbe sti mov jb mov jp mov mov scas mov mov mov ret cmp xchg fisttpl mov mov sbb mov cs sarb add sub cmp aad cmp leave pop xor repz fistpl mov mov (bad) mov pop (bad) and xchg mov in sarl jecxz mov adc cli push push jnp sbb movsb xchg pop sbb ficomp ror sub cmp ret inc sub push push dec add (bad) mov dec and stc sarb jbe push mov mov push into cmp sub popa aad add sub stos ds bound (bad) mov push fildl xadd test sahf popf xchg nop (bad) jae inc outsl (bad) push jbe test push xor rcrl ljmpw mov mov adc aaa push mov inc mov xor ja lods sbb inc aam ret push xchg iret cmp aas xchg popf xor int3 sahf push jl les in xchg out push enter adc xor xchg icebp es testb mov sbb jnp in or dec xchg pop insb fldln2 call mov sbb shlb test jae ficom inc push test insl cwtl dec ljmp imul push (bad) xor cltd and pop adc cmp in sub inc xchg and jb mov mov (bad) jno jnp fisttpll adcl sub xchg cmp out jne xor add pop pusha cmp xchg push cmp fldl icebp xchg bound adcl lret call mov inc xor cli ja mov sbb in pop in sbb xchg scas sbb push in mov in arpl jae fidiv (bad) in mov sarl pop push loop sbb insb push js pop fwait add cmp divl jne or sub ret (bad) or mov nop inc call jbe mov jne dec loop jg (bad) xchg mov or xlat push in push push outsb sub xchg or push je or aad imul xchg int3 dec or mov dec pop push adcb pushf or lods inc les mov dec sbb sbb adc int3 ds das subb inc xlat movsb gs fs das sub xchg inc cmpsl add ss mov fwait cmp imul test enter loope (bad) sbb dec mov test sbb es nop inc sbb dec arpl and jb mov leave je cmp stos test mov enter dec dec popa outsb mov dec inc xor stos jne and ss inc push (bad) mov popf mov fdivrp divl xor incl sbb cmp mov rolb xor push fsts xor and mov adcb cli or mov das cli stos es mov xchg movsl fimull dec or dec frstor rcll lods pop imul lods mov popf inc pop aad mov inc out les mov mov and sub pop and sub aas xor fistp pop negb jmp arpl xor test in bound xlat dec jge or jecxz sbb cmp dec adc or add roll repz (bad) shr pusha pop lods nop xor dec repz mov std lcall gs cmp je jp jns lcall push bound mov aam pop out sbb (bad) dec out cs push rcrb cli out je cmpl loope sbb xchg or imul mov push xchg mov (bad) sub lret sahf sub pop pop adc ljmp in test (bad) addb sti mov and cmp pop pop and movsb pop mov cmp rcrb das (bad) sti adc sbb cmpsb mov ret push cltd pop adc jae pop pop lahf dec in outsl lcall loopne loop,pn sbb dec mov std add or inc sbb lods cmp pop adc mov or cmp outsl fdivrl cs stos aad sbbl xchg xor lahf js add ds xchg cmp dec sarl xchg mov dec sub lock xchg pushf das push into imul outsl inc mov (bad) mov push test out jnp and addr16 icebp push inc fisub call punpckhbw js xchg fs or loop sbb and sbb movsl jae dec test jp jb mov stos test inc xchg out inc mov jne fistl pop mov loop cmc mov (bad) mov movsb stc add lcall pop dec int3 mov ret out mov push icebp xor pop xchg bound (bad) or push dec bound callw imul and insb das std mov lods sbb stos push adc cmp cmp cli jl mov and (bad) repnz fwait clc pusha jge mov xchg enter test add enter in popf imul or fsts imul fild mov fwait pushl cmc test pop jnp lret hlt fs in dec jbe jg sbb out jp into dec fnsave dec lret bnd mov cmp fistpll adc push cmp mov add push cld iret and mov aad mov dec scas dec sar shlb mov outsl or fidivl mov rclb insl mov aas push insl bound mov mov cli lds jp test into push repz out mov lret or sbb sub xchg push inc and jecxz popf hlt add cltd cwtl pop icebp xor push clc push stos inc outsb mov sarb add cmp fimull mov add push out pusha cmp push dec inc pop ret int3 loop jge dec stos in xor adcl jnp in ret into jp ss dec push andl xor pop mov cli into and (bad) cwtl out sbb in mov mov imul jge aaa inc mov sbb push mov fisttpll mov cmp cmpsb sub adc test pusha imul (bad) in lahf int3 inc pop incl xor mov (bad) loopne repnz cmp xchg add and imull inc std mov pop dec add add jns xorl mov fmulp xor jae add inc andb (bad) jp outsb lods notb xor mov adc popa and sbb cmp pop mov dec pushf inc lret cld lods sahf in and push jg adc repz sti sub lcall pushf aad repnz aaa jg cmp sbb xchg and push add hlt push push lcall ds jle cmpsl add add lods (bad) dec or push outsb xchg adc push adc sub pop adc sbb cmp mov mov negl sbb push lret mov scas cld jns cmpsl out (bad) jbe mov mov push cmp sbb shr cmp inc mov jp pop mov scas aaa cwtl sbb loop mov in add imul call hlt mov (bad) and dec mov xor jnp push je pop enter sti lcall mov xchg imul hlt push dec pop mov inc dec out bound addr16 cltd dec mov and stc cmc out jp inc ror lods lahf add (bad) pop ja jnp inc sbb jecxz (bad) cmp mov fisttpl outsb lods cmc or jno lods push mov movsl push jae pop test mov jnp (bad) mov fcompl cwtl in ret and jo mov xor xor mov repz mov stos daa inc jns repnz clc call je cmpsb cs mov xchg rcl jns sbb xchg inc xor mov fdivrl or push sub imul popa or ja fsubrs dec fwait cmp pop insb cmc mov arpl mov jmp jmp push cld daa (bad) pop xchg stos pop dec and out add mov push xchg jo test mov or daa or push outsl xchg rorb or jecxz sti and enter insl cli (bad) jp js adc lcall rcrb leave mov fsubrs popa mov mov ljmp ja insb bound dec push inc cs out mov nop adc out pushf and adc push jl rcrb adc xchg addr16 inc test sbb out jo adc popa mov cmp mov fisttpl sbb cmovle xchg pop pop test ja mov lock add jb sbb mov jne lock sbb outsb cs xor jp push mov out iret fmulp dec push or jecxz jge addr16 pushf adc adc fisttp push mov inc nop sub inc push rclb es imul std push mul loopne push inc pop dec sub mov mov or mov push in jl xchg jg gs jl fbld ret mov imul (bad) mov mov or pushf daa mov dec add daa loop aas inc testb imul xor jnp fisttpl mov (bad) and inc fsubl bound mov push cmp mov pop imul mov int dec data16 repnz fnstcw xor jecxz mov sbb push jns hlt mov js hlt cmc mov js fisubrl xchg aad inc jp fldcw fnstcw in and fisub adc inc push add mov test jns out cmp dec mov and icebp mov mov dec pop adc in ss test stos inc fisttp xchg sub sti mov dec leave rcl rorl jg and out mov sub fildll andps cmpsb add insl push ja dec (bad) xor aam mov or imul jb (bad) jo aaa lods fwait sbb lret jae push int3 xchg jg dec scas pop shrb test inc imul sti cmp xchg addb aas xlat mov mov jb scas sbb jo mov or scas xchg out and pop push bound sbb pop mov fistp mov int3 leave (bad) xor (bad) push aam or jecxz mov inc mov cmp adc sbb xchg xlat shlb add adc sub inc adc cmp jne sub pop sub xchg mov xchg je ret lret scas ror lods out fstl lods imul aad push loopne loop mov inc or mov inc push adc mov xchg and outsb outsl imul mov pop aas divps icebp or xor mov sbb hlt mov ds sub out lock pop das mov and inc xchg adc push or mov push addr16 xchg loop inc jnp out shll in mov fildl adc aaa pop sarl (bad) dec gs pop mov add jo inc fdivrs les push fcoms divl out out hlt sbb daa adc iret cmpsb inc lcall and ret stc sub mov sbb dec std aad add mov dec adc push adc into xchg push mov and add add (bad) (bad) (bad) incl add add add add add add add add add add sbb pop jb jae xor je inc dec ss pop outsl arpl pop addr16 push add add and dec push push push bound push push pop popa xor ja xor dec imul inc push push pop outsl dec dec dec imul add ss xor xor inc imul dec jbe push inc jno xor dec jb push dec inc dec inc push add pop insl data16 push dec inc insb xor push xor imul xor aaa jno push push add add jo push jae push js outsl dec popa bound push xor jno fs ja xor push push pop add add pop jbe push inc pop ja inc outsw inc jae imul cmp or add and jbe jo pop dec xor xor push dec push insl push push push jb jae jno popa cmp fs or add sbb pop pop ss xor insl inc dec push xor dec inc xor xor pop push push or add es jns push dec xor xor data16 xor popa push fs pop push push push inc push bound fs imul or add pop dec push aaa dec jb pop dec push gs jp jno dec push jp gs dec dec inc arpl xor or add sbb ja addr16 dec jb imul arpl push dec push push jbe imul add pop insb xor xor dec inc inc je push jp push dec bound ja push jb pop push push add add pop push xor xor push dec dec xor push sldt add xor pop dec dec cmp jne pop aaa jbe jp inc popa xor dec ss jae adc add es dec ja dec cmp bound inc insb ja dec jno insl inc dec insb arpl ss insb inc pop inc inc js popa pop insl push adc add sbb jbe inc push xor jbe push xor insl inc xor je push fs adc add sbb jo insb xor dec dec dec jp inc push ja pop jne push push ss xor push adc add and fs insb xor jns jb inc cmp inc js cmp inc jne dec jns push imul adc add es bound xor dec popa inc cmp dec push push jne dec aaa popa push popa pop pop push jno dec push outsl outsb push adc xor push cmp inc inc inc dec pop arpl fs fs inc push inc push inc dec inc push push add adc push dec inc dec dec ja push pop xor xor inc inc ja push pop add add imul arpl push pop ja ja jb pop pop push push sbb add sbb cmp insb dec push cmp outsb dec dec outsb data16 dec xor dec inc push dec jae sbb add pop xor inc push dec inc imul addr16 dec dec jb ja inc js pop xor bound sbb add and inc inc inc jb cmp xor dec inc arpl xor dec outsl inc push popa dec xor push sbb add and xor dec dec aaa jb jne inc dec popa push dec push aaa jno dec inc inc push xor bound dec dec push sbb add sbb xor dec ja inc arpl push fs xor jne ja inc outsb dec ja dec push push sbb xor pop js jb inc outsl push inc popa dec dec cmp cmp inc dec push push add add aaa js inc dec dec jp jns jo outsl push dec push xor pushw pop add add fs pop bound inc push inc push bound data16 pop dec inc push dec dec jne and add sbb je pop jb je ja jo xor xor inc outsb aaa ja push gs and add and xor push jns outsb push inc cmp xor pop arpl xor dec jo inc jb popa jno push and add sbb push outsb push push inc insb bound jp arpl dec dec js xor push push and add adc dec push aaa push push inc aaa cmp inc xor inc push push and add push push ss inc inc jns dec jae jno ss inc pop push imul outsb dec push push jns and jno push xor imul ss push xor jb jo push inc push xor push push add add dec aaa xor push outsl jb fs inc popa xor inc xor xor imul push insb imul fs xor dec xor push jp push bound push inc cmp push sub add sbb dec xor insb cmp data16 dec dec gs xor push gs insl inc outsb push sub add sbb pop push inc ss xor push arpl push aaa ss cmp pop push sub add cmp jns push inc gs insl je pop cmp outsb xor outsl xor jns push inc jno inc dec push add pop jp jns dec inc dec addr16 cmp inc dec dec inc push jae cmp sub add pop inc pop inc je imul xor jne push xor cmp dec push sub dec xor pop arpl jne outsl cmp inc je xor dec inc push push jbe add add dec push push push push push jbe aaa inc insl inc ja dec jae cmp inc push das add add imul inc push push push pop jne inc dec jbe cmp inc jno push push aaa inc dec jae pop insl pop push outsl aaa push dec push or adc add dec dec or pop pop and shlb leave repz fstpl jl out pop aam mov and or push xchg cmc scas pop out inc push push iret fsubs add test cmp sti add outsb arpl (bad) cli or xchg mov (bad) mov mov pop xchg int int3 xchg das jns cmpsb push xor cld cmpsl cs jns mov enter mov cmc adc sub push in aad add movsb jmp scas movq cmp sar sub jg call ret pop in cmpsb mov lods mov inc sub add adc aad pop pop sub add add adc inc mov loop rcll dec xchg int3 lds cltd ja test lea stos std insl jbe and js rcll inc (bad) mov sbb je repz test cwtl inc mov bound jg xchg xchg xchg repnz xchg mov sar (bad) (bad) enter (bad) xchg (bad) imul insb sub pop daa xchg push mov xchg dec cmp xor pop in addr16 fsqrt out (bad) dec mov shll movsb push fwait jg roll out mov add inc mov cmc aam push in ret mov sahf movsb push int3 pop or pop nop and aaa jo sahf dec xor fisubl ret leave cmpsl (bad) jmp mov loope sub call and cmp inc push lea adc jae pop mov add bound inc in push lret lds or test out push and fisttp push test push cmpl sbb xchg cmp add xchg adc or dec sub cs sti das mov dec fldenv scas stos repnz and pop (bad) (bad) in push add and jns ljmp pop inc mov cmp jns xchg push dec fcmovnu arpl sbb inc ja xor sub cmc sub daa mov push out js add inc sub push test mov aad push xchg popf movsl adc inc add adc popa (bad) add jecxz sub cli incl cmp sub cli xchg cmpsl (bad) leave dec xchg dec jmp imul outsb mov mov stc punpckldq mov jmp fldt push cmpsb cs int fsts cmp cltd mov in jo pop lods mov sub test fcompl aam sub sub adc aad sbb test out mov xor pop adc outsl das mov fisttp push pop je push outsl mov and in or jmp push jg push xor bound (bad) js mov lock pushf lods int3 imul inc xor fistpll repnz or jg add dec lods ljmp popf xlat push inc cmp iret jnp outsb fstl jbe pop mov xor sbb incl inc ret lcall inc add pusha into sahf ficompl jp mov clc xor (bad) sbb and out cmp push js dec jae and jle ja mov repz std test inc and outsl test xchg and inc cltd adc (bad) fwait mov cmp and (bad) mov add insl dec push addr16 adc jmp (bad) jns dec std or (bad) orl pusha loope and or mov or or call pop lods mov pop leave (bad) xchg cmp rcrl dec and aas aaa int mov cwtl or add gs loope mov xchg inc cltd xor pop or clc lahf or adc mov stc dec imul sahf adc adc movb xor cmp jae shll pop push mov (bad) (bad) mov xor xchg cmc pushw jle stos addl and push outsb mov dec adc aas outsb adc push mov ja xchg pop sbb mov lret push dec jns dec popl fstpl scas jmp (bad) jo sub push les jno adc jo cli cmpsl cld push loop scas dec shl (bad) pop jae clc mov mov push inc adc (bad) ffreep insl movsb in jge pop mov cmc jbe and and xchg repz adc jmp dec icebp imul sahf inc pushf mov nop xchg in stos loopne sbbl inc push jle (bad) push dec ds dec push mov stos dec push jbe pop aad mov mov pop daa jge cmpsl mov fbstp ficoml insb xchg dec addr16 sarl sbb add cs xor cmpsb push adc stc ss push data16 cs (bad) lock push mov lret mov rcrb pushf inc push xor jae imul push lcall pop out pop lods loope aas (bad) sub pop les and scas sub cwtl cmpsb test (bad) inc push jp mov mull int3 cmpsb sahf out icebp sbb scas enter in sub jo push sub mov lods outsl (bad) std in stos divb (bad) ja jl,pt out loope add mov les std (bad) xor cmpsb lds jecxz sbb icebp pop and std movsl inc lods push xchg aas arpl xor xchg xchg dec fcmovne or inc out std test mov test ja xchg lods or inc ja jb inc xchg mov jnp or ds sti sbb adc imul enter sysenter cmp xchg sbb mov arpl bound cltd inc or sahf sub lcall xlat shl movsl iret xor xchg cwtl in xor sbb jo das adc mov cli sahf pop cltd movsl sbb xchg add es mov add or sub inc push push xchg inc adc cmp jmp (bad) jb js or scas test in insb into sub push frstor pop xor or xor pop cmc and adc adc sahf mov mov push cs fadds pop or repz nop faddp (bad) mov das xor add sub push dec mov into sbb aam jns dec push lahf adc mov push ja scas jb pop inc xor xchg adc mov dec sti push int3 inc out adc jp sbb dec push and cltd sub cld push sub xchg cmp cmpsl add popa cmp xchg out cli mov adc xchg dec jnp push into out inc stos mov inc in cmp (bad) icebp (bad) enter xor inc lret cli push adc popaw xchg mov inc push or movsb sti mov mov imul inc jge and lods sbb inc fidiv int fsts cmp xchg cmp cwtl data16 mov cli sarl and inc (bad) mov lahf aam fimull ret pop xor xchg stc cmpsb mov xchg cmpsl roll xchg sbb lock test out lcall dec insb sarl cwtl sbb xor neg fistl les sub stos notl dec jecxz cmp int push dec mov and xor lods jno sti mov push cmp or xchg xor std insl inc out nop cmpsl pop xor jp das cwtl test mov les xor jmp mov jns sbb lahf inc fisttpll sub test sbb push test (bad) ret mov xor mov dec in rcrl xchg stos add inc pop xchg ss dec lahf in xchg mov sbb loopw cwtl arpl into je xchg stc rcll rol pop inc inc pop stc jo cmp xchg (bad) mov mov dec sbb fisttpl and rolb push mov and sbb cmp inc ficomp (bad) xor cmp bound mov ss icebp loop iret dec or inc mov aas ja in (bad) ljmp popf and inc pop jl push xchg cmpsb fistp and je movsb inc jle pop pop dec call xor jae pop cmp insb lock add (bad) in loope mov xchg (bad) push loopne pop add in inc add addr16 insl pop ds or sub movsb xor cmp shrb lea (bad) jo scas dec jb xchg add jne cmc jg stos add (bad) sbb mov adc xchg std mov dec push mov mov mov sbbl mov pop lods push add sti ds mov negl addb mov in int3 test pop in sub sarl or jp or mov lret hlt push insb js inc mov test jno jecxz sbb push cli dec (bad) div and sub fwait in imul pop push push dec mov add (bad) fcoml aam arpl addb jle inc lret push cli int dec xchg jmp imul dec sub leave ret mov cwtl clc jns xor rol sbb imul stos adc and xchg js fmull inc movsb pop fidivl shlb lcall bound xchg push aas push and in inc cmp xor mov xor sahf push sub cltd cwtl cltd and popa shr pop inc push (bad) in or pop fisubrl push sar push enter lds lea popf or ja (bad) push mov and dec adc push aas xchg push adc cld (bad) iret pop xchg push xor sti or sahf lret mov xlat in into subl mov sub movsl out scas pushf gs push data16 xchg sbb insb dec jno cli dec mov pop (bad) dec aaa es insb test lret pop xchg inc (bad) mov inc push in (bad) lret (bad) xchg mov mov inc data16 scas bound sub jo pusha imul mov pop xchg inc lcall arpl mov push icebp jo inc (bad) or lret loopne (bad) add lret shrl rclb jns notb clc push ds outsb sbb lock mov lret push sub ret rcrl nop xor jo mov xlat test cmp sbb out xchg daa dec xchg push sbb jne outsb or xchg pop sub imul sub stos fdivs mov out xchg popf xor mov jl sbb pop rorb enter inc xchg arpl in sarb cmpsl mov aam dec or pop aam and push pop sbb test data16 dec jae xchg and push test loop or sti enter inc addb sub mov sub and mov sbb inc jecxz mov fs mov mov inc pop push sbb lcall pop int3 jecxz rorb test in rorb movsb add jne stos mov clc movsl stos inc fwait mov add inc xchg rorl cld sbb adc adc rol subl imul in movsb xlat in mov xchg stos imul dec cmp xor or inc sbb lret sarl ficompl cmpsl in mov test cmp inc in pop ds cmpsl imul icebp jecxz adc mov (bad) frstor xor dec out push imul inc or mov and cmpsb fcoms data16 ds jno scas and lret dec jae mov and mov cmp cmp push (bad) jns pusha sarl stc into mov add daa add push ss fisub scas mov popf out call scas into push xchg push add in rol popa (bad) insb inc jno inc out test test mov fcom add and std sbb mov mov mov repz pop pop or mov in cmp mov outsl mov outsb ds mov scas or mov je mov fildl outsb ret (bad) clc cmc push loop sbb sub aaa mov add stc int3 or cltd adc adc daa sub xchg and sbbl xchg xor dec dec icebp out sahf xchg (bad) (bad) pop stos arpl sbb out sub or insb xchg xor push leave repnz pop inc adc imul mov adc xchg jne cltd lret mov iret push and (bad) in push in mov bnd cld jl adc loop pop dec jl aad icebp aam jbe or adc loope ret fs outsl adc jb mov movsl mov shl cmp ret cmp les mov add or sahf jp stos in sub clc adc fbld int3 sub sar pop cli lods dec or (bad) adc xchg mov mov pop fbld sbb adc push inc and push ja pop gs or mov lea and cmp stc or cltd scas xor cmp jle fdivl push inc (bad) adc push mov cli cs sbb data16 hlt inc sub pop aad xchg fsubrl mov or lret xchg out jmp (bad) mov mov sub mov sub add inc std dec gs popa jb imull aaa lahf push jmp push mov inc push mov pop fistl insl xchg push lods test aas add push cmp sahf inc int3 or mull rcr mov imul cs and leave scas ds inc das inc fs pushf stos je test dec xor es clc xor stc das mov add sub movsb dec mov sub and adc dec enter aad arpl fwait or (bad) pop mov pop inc sahf or mov (bad) je ror lahf out xor inc fmul xor aas lcall test xchg cmp sub and sahf lcall scas out in adc push aad lcall stc fisttpll fistl sbb (bad) mov sub push mov shrb rorl das add stos lock and mov push jp jb xchg out call add push mov in cmp mov mov add ljmp adc or adc jb movsb xchg and iret mov (bad) jmp xchg or call mov lds rol mov movsb loopne push jge fldenv (bad) stc xchg or cwtl mov (bad) dec fs fwait xchg fidivl ds pop sarl inc lahf inc push cltd into push test imul and push mov adc test mov push jmp pop or mov pop leave mov jb sbb iret rcll xor pop mov es mov sbb xchg xor push (bad) outsb or stos xchg popf pop lret dec pushf dec inc aam insb adc std outsl mov test cmp gs cld pop jecxz inc pop into pop adc mov int3 xchg mov mov dec lahf dec xor test cs ds mov iret add mov lods inc xchg dec inc mov xchg into (bad) add fiadd dec in iret xchg scas jb daa jno sub aas mov xor xor fsin insl pop inc push sahf xor rcll sub inc ja pop dec ss movsl mov test out mov ljmp lock push push stos ret out repz int jbe xchg in mov fwait mov sub xchg loop (bad) int jo shll fsubl test ret movsl cs (bad) test cmpl repnz xchg jo fidiv (bad) jo push movsb xchg rcrb xchg jle dec (bad) stos dec cltd mov cwtl mov xor jp fcoml and pop pop pop repz sub adc mov popa aas scas dec push mov fisttpll scas sarl data16 xlat stos push lock xor in (bad) stc fcmovnu add (bad) sti imulb sbb mov xor and (bad) ds lods or (bad) jnp,pn aaa (bad) pushf decb mov jmp cmpsl push add inc sbb or jae es ds outsb test sub mov push repz fidivl xchg out mov loopne xchg push jecxz je cld xchg std ja mov dec xchg and shlb scas iret (bad) cld sti fsubrl xchg mov int3 inc mov (bad) int cmp out (bad) insb pushf cmp cmpsb mov sar mov sti push dec lods xchg mov pop push cmc ficom aam fsubrs jno inc push and int3 enter scas (bad) or xlat jnp pop lods lahf (bad) test test add loopne fwait outsb pop dec out add sub push push cltd mov mov mov (bad) mov dec mov std push scas lcall add sbb xchg (bad) les sti jge lahf das xchg jg (bad) and sahf mov or sub xor out (bad) push push adcb lods daa jno adc icebp mov adc jo pop pop repz (bad) xor sub cmc mov cld lahf jle sub jne (bad) daa inc int xchg push repnz pusha mov fidivr dec mov jae inc lcall sbb enter push push xchg clc sbb pop fwait xor adc lods sub ss pop stc (bad) lock mov jb dec pop aaa push (bad) mov mov or sbb mov xchg test aas mov imul in icebp cmp fs sarb pushf out pushf pop push out add int push xchg loope inc adc ret mov push popa movsb pusha jle jae imul push adc and out jmp iret cmp popa mov and mov xchg jno pop fnsave adc xor or data16 aam push lahf leave aas fstpt or mov cmc push (bad) mov (bad) movsl push stc xor lods loope aaa and pop cmpsl or cmpsb xor in mov jp or nop pop ret stos loopne orl add jne pop xchg rol mov add (bad) xor add in (bad) mov jecxz mov into mov push xchg xchg xor inc (bad) sub out cmp dec cmpsl test leave aaa lock aaa aas repnz sbb adc inc pop movsb add imul sbbl pop fldt or xchg pop sub push jnp push cmp cmp mov add shrl inc mov cmp mov ja lods jb iret cmp jno adc cmp add test ja in rol imul out jbe xor add mov stos xor cmpl jbe cmp fisubrl sub jp add je cli mov jmp cmpsb mov sub cwtl insl and cmpsb mov mov cmp call es cmp data16 sub bound add sub or adc adc jae push adc cwtl add push push sbb mov dec (bad) mov mov icebp lret ret scas add xor or test mov mov xlat jbe leave xor enter mov aam xlat xorb scas (bad) das xchg mov stos adc and push add xchg mov jo inc jg ja xor pushf out push cmp add mov cwtl mov lds insl push xlat int inc push jbe,pn fimul les pop xchg outsb stos xor movsl xchg aaa les push lods sub push shll sbb xchg sub sbb in inc mov dec cmp jns dec mov adcb rcrb jno push sbb lods mull xchg repz leave ljmp shl dec sbb xor xchg dec pop outsl xchg les std mov inc shrl push sbb arpl ds je inc xchg mov push (bad) cltd out xchg sub (bad) mov dec xor push dec xor scas pusha push xchg and mov mov xor xor mov (bad) and mov push cmp mov stos sub lahf mov rcrb int3 pop add jl or scas (bad) icebp fmull sbb mov jmp push add in fidivl lock iret jp fs jge in hlt dec enter jmp ja jge and pop xor imul xor popa cli mull mov (bad) js pop push fmuls fisubr popa rcrb fdivrp ja cmp int3 xchg (bad) stc sub jnp nop subb inc push fldcw add push cwtl inc push xchg repz int3 jne cwtl mov cmpsb aas fsubrs mov xchg fs or push push in in fdiv call lret lret mov movsb lods and dec sub dec idivl sbb arpl jne sbbl arpl xchg inc xor imul lret mov xor ja and mov insl movsb inc roll mov test aad mov mov jne jo xchg js outsb sub imul pop push lea fwait sbb jne xchg in xlat rclb cmp mov xchg jmp mov mov xor repz mov in ljmp push adc xorl cmpsb repz js cmp cld dec jg outsl (bad) mov fidivrl mov (bad) mov pop cmp pusha push xchg (bad) fbld add lock loope cmpsl (bad) out mov jmp loopne test fldz pop mov int3 sbb inc lock sbb mov test inc add imul test mov push push or pop ja cmp xchg or push insl mov xchg dec xor ss (bad) clc mov std cmp fstpl in mov jp push sbb fistl lds lods test mov notb shlb cs push in icebp adc bnd mov jg mov cld cmp das sbb mov cld gs adc loope rcrb add (bad) xor popa pop es mov mov xchg or pop dec (bad) repnz loop imul mov lcall test test jmp and subb repnz inc insb cmp hlt outsl or fbstp enter sub popf out lds (bad) cltd fs pop pop js adc sbb add mov ljmp sti sub mov inc mov fisttp enter mov inc push jge sbb or popf or adc test mov xchg sti in imul daa push cmp push in fwait mov sub adc pop push ljmp stos aaa add enter xchg cmp repnz lahf add xor inc leave gs dec xchg push sub std xlat pop popa es cmp mov inc and scas lds add mov cli jne rcrl repnz xchg in aas loop xor nop push test in dec add (bad) repnz cwtl popf or negl sub notb adc inc lret movsl cmp arpl and subl mov test (bad) in mov (bad) jb loopne add adc enter aas pop push mov sbb ja ror imulb sbbb das ret loopne les movsb test roll ds cs fcomi sub ret inc in xor xor cmp in dec and add adc test fdiv cs add fstp leave sbb push aam push xor and aaa test add jno out mov nop fwait ror mov adc mov sub sub out mov hlt lds test mov adc xchg outsl outsb pop repnz add packuswb mov sbb pop bound or pop cmp mov mulb shrl xor rorb int mov jecxz and nop pop add cmp dec sahf ffree jns sti repnz insb lock xor pushf mov es push ss mov (bad) fdivrp ljmp sub or lret fdecstp cmpsl inc adc sub mov in aam pop push pusha mov xor ja sbb push pusha into xor leave jae imul mov imull leave mov mov gs push jne scas in rcl repz sahf or sbb or push jge enter out (bad) jg aaa push pop add movsl jge jns aaa push movq or fistpl (bad) or es jmp (bad) fcmovnu cld orl and jne push xchg mov outsb push jns xchg adc jnp add push int call jo or neg inc cmp movsl in sub fs cmc (bad) cmp dec sbb add sub flds movsl mov hlt inc xchg inc fldenv lahf into cld lret in js inc test shrb sbb int in mov rorl das cmp and into outsb clc xchg sub pop movsb cli inc cmpsb pop divb push jmp test mov push jnp les loope popa lret mov scas add dec cmp (bad) adc js cld dec lret popa pop mov imul stos fimull loope cmp popf call mov xor (bad) out int pop out push icebp ljmp jmp outsb jae (bad) test test add inc mov mov fadd xor push aam out mov add (bad) int jae mov test lret or xlat pusha cwtl jmp into repnz call into leave repnz xor fidivl adc mov lret cmpsl sub movl or mov mov in fildl adc imul jecxz adc shrb pop movsl lock in sbb add rclb fnstsw push push mov outsb in xor add xchg and mov pop mov rcrb sbb jmp repnz repnz add in shrd adc xor inc pop or push add lds adc aad adc (bad) xchg mov lock cmpsl loop mov shl adc and dec stos push cld popf xor pop (bad) (bad) data16 (bad) sub push mov lods jbe hlt scas push push lods aas inc sbb fstpt add mov mov xchg cwtl lcall aad add loope enter bound adc test inc inc lea test negl pop aad adc sbb frstor pop xor repnz and repnz inc lock sub push addr16 dec call inc lea insb insb push pop xor xor loop mov pop jne xchg shlb mov leave addb test data16 sbb sub push and int3 push push dec out sbb cli dec or sbb loopne cwtl lds cmp int pop aas push outsb outsb sub mov jno jns pop dec adc lret (bad) stc cmp adc mov cltd cmp call jl cmc sub pop (bad) inc sarb dec push outsl pusha xchg and xchg xor (bad) lret cli out adc pop and mov mov pusha mov enter add testb xchg (bad) shrl push mov or or add icebp mov insb inc stos adc jg clc lret jb leave xchg jp mov mov add test pop outsb fnstcw sbb shr add inc or clc imul enter std rcrb or mov xchg rcr aas push xor jecxz fdivp push or pop leave insl pop push adc push stc bound or sub jmp pop adc ret inc adc test outsb pop popf imul aas lock lods mov and mov pop loopne ss inc aam inc nop mov (bad) lea outsb in test fs lds pop xchg sub xchg ds (bad) push fisubr cld lods and and divl rcll or aaa mov adc mov dec icebp clts inc jns or jp movsb mov inc aas int3 lcall (bad) (bad) mov push cmc ljmp push cmp xor or jecxz loopne cli jle add gs and jecxz mov std sbb in clc push sub pop xor sbb lods mov xchg lcall enter push inc (bad) or ds lds icebp test push xor jo fsubrs mov pop popf pop inc mov dec jbe inc (bad) jo ss and push pop popa or inc cmp adc or sbb jle adc test popa lds and imul mov cld lock push adc cmp mov adc enter mov outsb ljmp mov xlat (bad) (bad) fcoms mov adc push jae inc movsb je xchg clc dec sarl sbb xchg shrb je adc ds mov movd (bad) mov jle stos (bad) jbe jmp inc push fsts iret cs cwtl divb in pop es jge cmp pop xchg inc jle inc pop orl shrb inc jge inc sti cli outsb outsl xchg inc or and xchg test leave popa jle (bad) stc add in (bad) (bad) xor stc inc xor xchg fidivr and xchg and (bad) aad jg mov adc rol lret das lods sbb pop sub les mov or (bad) or inc add cmovb fwait and cmp and std stos mov and in (bad) jno mov mov xchg sarb adc dec push xor pop sub pop dec jbe lock shrl xchg dec ret (bad) jbe dec (bad) push mov dec sbb xor mov dec sbb xchg stc lret ret dec enter clc cmp outsb inc adc fldcw notl jo xor push bound jg stc sbb fidivl dec pop pop push jnp jno cltd or inc mov sub jae adc mov movsb pop sbb adc add repnz in js push push iret popf in pop leave cmp (bad) or push xor and pop jg sub xlat adc test mov inc inc insl fist pop mov xor ljmp push mov xor into mov mov mov pop xor cmpsb xor add mov and jne repz adc and mov add out add mov jl jnp imul mov or mov je sub mov push adc cmp mov inc mov fiadd sbb xor sbb mov and test mov out outsb cld inc insb mov in and cli dec xchg jmp nop mov movsl data16 xor adc outsb dec rcll push mov hlt lret push aas mov jae push mov and pop lahf inc pop sub sbb in enter xchg pushf call push xchg fdivrl cmc inc sar rol mov mov es jmp or mov test jnp add in cmpxchg es lods mov cmc flds les mov aaa mov add xor mov inc cltd test ret xor (bad) out lret nop mov pop jne into cmp pop (bad) stc xor pop imul pop (bad) gs add jne cwtl inc int3 lock mov ret ficoml pop pushw xchg mov popf sub and xor (bad) repz inc pusha ret mov clc lods (bad) aam cmc mov addr16 ljmp adc cmp (bad) inc aaa xchg pushf daa mov and jmp push lock adc (bad) cmp mov sub sub cli aad cmp push cmp fcoml (bad) and mov negb inc sarl jl pushf rcll mov dec loopne push push jo mov xor jl aas ds sub fiaddl inc cs inc mov and xchg and and ds icebp (bad) adc sbb push adc hlt and jl xchg and xor pop inc test push jmp jns cmp push cld push and repz adcl lahf cmp enter (bad) sbb ficom imul inc xchg mov sub push xor idivl loopne test cld mov pop out dec in push arpl (bad) inc push dec sbb (bad) lds iret out popf ficom (bad) mov (bad) mov ret jbe (bad) mov aad or adc int3 add fmul xor nop aas fistl leave cmc cli int fsubrs jmp in pop les in aas (bad) loop lds repnz xlat pop xor lods sbb lds mov movl mov jg pop jge aaa shl mov push jb daa shr ja xor mov jns fwait and (bad) xor nop lahf int or sbb sub out adc xchg or repz lahf int3 lds xchg xchg or xchg jge frstor mov cmc out lods stos sub pop sub fcmovbe sub out mov cmc (bad) faddl mov test inc pop popa nop cmp test mov dec es mov out add fs mov cmpsl ljmp mov bound mov loope xor and clc leave (bad) pop insl cmp mov fistl xchg fstpt lea xchg fsub arpl fstpl mov je push pop das jae ret rcrl lea (bad) dec gs sarl cmp sbb cs push sbb and inc fadd xchg pop or add inc mov pop xchg mov dec fdivs js mov loopne cs leave xchg dec inc nop sub fistl mov xchg inc mov addl pop ss mov in mov push xchg xchg xlat xchg sub mov jl inc sub mov jo inc stc sbb cmpsb jns jg ljmp cwtl fisubrl push imul inc sbb pusha mov lcall pop mov push into sbb ror (bad) mov addr16 scas out lahf jne incb xor push insb add add test (bad) sub in add cltd and rorl mov push jmp inc adc jle mov push sub loope sbb pusha push jb fisubl and mov jge mov or sarl dec (bad) stc mul leave xor test (bad) and pushf pop into cmp adc mov out adcl ja mov push mov add leave ret fsubrp and add jg mov ljmp mov dec or popa sbb dec xchg adc sbb add xchg cwtl mov add mov sahf out mov enter xchg fmuls mov fnstenv sub and xor sbb inc and insb add aaa inc popa stc or mov jle pop pop adc repz fdivrp mov xchg dec xchg (bad) mov mov les movsl dec test sub push mov and inc cltd pop adc icebp sbb cmp stc pop and popa fcompl pop dec leave and push std pop rcrb sub fucom sbb sub stc inc push push inc sbb hlt push sarl xlat mov push push xchg test inc dec das gs call shlb out adc cmp xchg in add xlat test iret rorb xor mov jbe add push and lods mulb dec rcrl mov mov test sahf cmc int3 jo pusha push aas (bad) int or cmp and imul (bad) pop jmp cli push shrl cltd lcall jns lods loopne cmp fwait testb sub ds xchg sahf sub hlt push fcmovne push fldenv sbb sbb rolb in push mov dec pop push and mov arpl lds lret push mov cmp insl inc xlat stos imul (bad) mov ss insl pop sbb or xor sarb popa data16 lds mov stc movl xor fs cmp cmp div jae imul fnstenv pop clc lods popa cmp mov dec cs add ror mov cmc mov jno inc pusha xchg or cld pushf mov flds push (bad) push das scas mov adc outsl stos jae mov mov (bad) js mov xor ds decb gs fsubrp pop out outsb pop sbb xor and pop cmp fwait inc sarb daa cmp jle xchg pop test pop aad (bad) and scas xchg out push rorb mov popa ret nop loopne xchg dec sub pop cwtl in adc adc lret pop sbb xchg lea pop (bad) call sbb push mov das gs mov int add jl cmp not es add jnp insb xor (bad) add loopne scas and mov scas mov add dec mov imul insl cmp sub or cmp xlat push (bad) pushf mov xor sarb (bad) int3 adc nop push jmp cs ja push lods mov xor popf cmpsl ja xchg mov ret jno fadds rcl js sbb sub cmp adc int3 pop sub (bad) dec sbb ds inc adc xchg icebp push inc lcall mov and jg pop aaa sbb insl lds adc cmp std push ficompl in lahf jg cwtl test sub xor (bad) sbb pop stos push mov in jmp imul jns in or fdivp fwait and aad and (bad) cmpl sbb jne cmpsl push iret fisttpl sub es mov sahf ja outsb jne movsb outsb iret daa fnstenv cwtl idivl mov enter pop cmp cmp xchg fwait cmp xor scas pop sahf jl push cmp mov mov cmp jbe mov fcmovnb pushf (bad) mov cld ds loope add fs sub pop test movsl push cmc fs lods addr16 ja mov mov sub pop or outsl cwtl cld scas or mov inc mov dec xchg adc xlat out ljmp fildll scas dec push push je,pn push in hlt and sub cld scas pop cmp dec xor lret ja,pt fstpt jb idiv lcall loopne mov adc ljmp mov inc or enter lcall mov and cmp rclb push or xchg add sub push cmp cmp pop pushf test fst lock ds test pop test insl outsl loop ss xor in mov outsb mov (bad) ss mov cwtl sub imul inc lods jecxz mov dec popa mov jb xor push nop or (bad) frstor mov test add psubsb add ss add mov lret mov and shrl jp and sbb sub int3 sbb mov ja add (bad) fcoms lock into xor mov sbb jp xor adc jg xchg push sbb stos ljmp mov mov leave mov xchg xor dec mov mov outsl adc xchg jno ret fs lods test mov scas in lock mov fstl aas mov (bad) push mov ja in sub adc push sti popa mov push loop hlt dec mov xchg add dec je in cmp sub xchg imul leave cmp es jne dec push add fs add push clc jmp xor inc bound std xchg cmp push nop xchg cld jp in hlt pop imul ds push insl pushf pop pop jo jecxz or sub loop or push insb xor or and sub testl popf sub aas je,pn aad adc xchg out cmpsb sbb lods jle mov imul sahf pop push sbb in lahf fwait (bad) jnp gs aad dec xor and lahf xchg scas push lds pop push sub cmovbe jne lds lods cltd dec fmuls sub jnp lahf divb mov inc inc iret xor inc les adc mov or jle ja push pop add dec leave dec les cs int3 inc pop jg out js,pn sub dec rclb inc push loopne adc adc outsb mov sbb into xor into cltd imul add test loop pop and or ljmp jae cwtl mov rolb push pushw sbb lret mov jns call int3 out xacquire add ret lahf rcrl mov xchg testb push enter stos mov outsl add rol aas push mov rorb movsb lock imul popa (bad) push or loop xchg cmp or mov pop aam mov push lds pushf leave xchg inc ja or mov imul pop or push imul cmp or mov scas addr16 add dec data16 divb mov mov or outsb aam adc mov incb lahf in pop sub stos xchg out or out mov mov clc adc xor loopne rcr popf push xor gs test mov mov or mov cmc std fs xchg out mov scas imul add mov mov push addr16 inc aaa fdivrl or dec xlat into cmp jbe mov xor mov mov sbb sbb xor cmc or dec adc pop dec clc add pop mov cld hlt xor lret addr16 and das mov popa mov mov pop loope out fidivl imul (bad) mov mov mov dec fisub adc lret and or enter fldl test cmpsb shlb sub aam adc (bad) gs lods ljmp (bad) cmp pop cmp je (bad) jbe aad ret adc push sbb mov lahf dec cld pop fcmovbe jnp clc dec cmpsb in js adc pop xor add leave aas mov icebp jge add push mov jo int3 xchg mov fldenv adc dec hlt aaa fbstp xchg push sub out push (bad) xor adc mov fnsave mov mov out mov bound fsubrp pop cld adc int3 sbb outsb cmp xchg roll pop pop push jmp add sub dec ja sbb adc jne cmp lods (bad) repnz jae mov lods jno je fsts pop outsl push mov mov pop mov cmp and xchg cmp jno nop or nopl add lret cmc cwtl in pop cli cmpsl jb lock pop xor mov jmp in mov push sub dec mov inc shr lahf aaa lods sbb or jl stc jmp or popa shrl dec lret out lahf dec inc jmp outsl das popf pop movsl dec or jnp mov xchg loop,pt add xchg xor jnp mov jl sbb add dec xchg lds in and jecxz in adc aaa (bad) jecxz orb mov lods sub imul push mov test mov lret (bad) hlt cmc add cwtl fisubl pop es iret ss and mov imul repz (bad) xor mov pop ret push test xchg add jmp inc scas shlb insb push lds xor jb pop pop pop xor cmp and lahf cld mov hlt inc add or push bound outsl jl (bad) (bad) ficoml cwtl adc sub popa jbe adc into addr16 cld out add push movsl loope jno add xor xchg adc lods int or (bad) fisttpll and mov mov cli fidivrl jecxz in pop fdivl inc inc xchg sbb inc mov jbe pop mov cmp fwait je ljmp aad popa inc or loope scas jbe aaa xor cmp imul repz insb push sbb call in mov jmp or inc jne popa notl daa imul movsb lds fisttpll insb int3 pop iret das enter cmp xchg in imul adc fist mov pusha mov iret insl pop adc jbe jle mov lret mov popf rorl stc (bad) lods test pop hlt lret stos rclb (bad) fmull xchg insb popa dec jne cmp test add cltd ss gs sbb les ficoml je lods cmc add sub pusha pop push ja insl ljmp jl cltd arpl and push push sub lcall and test mov fs stos cld add pop mov insb and pop testl mov (bad) outsb push cwtl pop out xchg xor ss or push mov dec int3 sub cmc fnop mov adcl adc sub dec ret sti cli xchg int leave adcb jl jle pop mov mov (bad) clc cmpl lds test std scas mov adc scas (bad) loope inc xor fwait out popf (bad) insb dec lret cs jno and mov lret push add jno add mov dec lcall xchg into movsl and xor cwtl ja mov test jl data16 inc or jo into lods cmp inc jecxz push adc dec pop gs jo jnp bound into add pop cmp ss clc xchg inc sub pushf int cmp divl push (bad) insb sarb cs ja or dec cli enter insb mov mov out inc pop and mov ret in cwtl sti sub (bad) and adc divb and and push jp fnsave mov and lcall mov lcall call mov jge push xor and dec add roll popf loopne mov shrd lods repz add xchg testl (bad) out inc jo popa dec int3 movsl mov (bad) sub sub dec stos gs pushf cmp sbb xchg fsubr pusha sub lock sti push push mov int sbb inc xchg push aaa popa push inc jge je (bad) xchg sbb pusha hlt mov fistp push aas cmc jg mov add mov popa loope addr16 test cmp and in out mov pop dec imul pop int3 push cmp fistp (bad) hlt push bound daa sbb insb sub jb (bad) pop pushl dec jbe jno cmp std xor push in das xor pop mov (bad) jne lret (bad) sbb into pop ss nop mov (bad) div popf add rcl loop pushf xchg jbe dec stc pop mov cmp data16 sahf cmp insl or int3 jge adc and pop push sbb mov inc pop jns jo push pop jo ficoml sub andl sarl inc popf lock sbb es jmp int test push add xor (bad) (bad) cwtl pusha cmp lret das cmp mov adc xchg aam push hlt insb add xor (bad) and cmp adc enter rorl push incb inc (bad) imul dec cmc shlb pop (bad) push pop cmp arpl mov insl icebp xlat push stos mov ret ret push ss jmp push sub mov xchg das adc mov (bad) sbb in mov sub lahf push dec fmuls idiv push dec lods ficoml xchg mov and test and push mov sti jae push aas lcall and cmp test xchg sti pop mov xchg inc insb push in and mov or dec scas in (bad) lock arpl lods pop test rcrl sbb mov push pop enter add fwait mov addl xchg ret les mov and addr16 dec (bad) dec and mov add jns ret sbb stos test inc pop (bad) mov scas scas xchg sub in cmp out int3 (bad) cmc dec nop clc push push rorl push inc test mov fstl dec and movsb mov sub xchg jl sub add std mov and js lock dec pop push and xlat loopne sti inc jno xchg enter sahf int3 rolb add sbb dec aad in xchg out dec in loope cld js ljmp inc ficoml dec stc in fucompp add pop jcxz xor push jne iret xchg jmp mov add sbb and add (bad) pop dec sbb call xchg aad je push (bad) mov insb cmpsb mov sar roll mov int3 mov (bad) mov sahf lcall add daa outsb hlt adc (bad) jle (bad) cli add lds jbe and ja push mov (bad) dec dec les add push (bad) xor xchg mov mov sbb sub nop or lods xchg pusha add shrl insl setnp rcrl insl mov sub jg fld lcall inc icebp (bad) fstps xchg stos xchg mov inc push xlat cmp std fwait mov cwtl push bound push sbb fldcw mov test mov (bad) es out mov repnz add loop adc aaa out lods loop push dec fidiv mov xchg decl add les out sub inc addl in (bad) fisttp movsb and inc mov fadd pop inc or ret cmp lret shl xchg js popa out loopne cmp rol enter push dec test imul pop cmp xor mov lahf divl std push and adc lods adc cmp sbb push ljmp adc popa loop xchg ss xchg out xchg inc adc and xor (bad) repnz ja jmp gs sub xor jmp in mov pop jbe or dec pusha or push add leave or sub inc mov jge aas mov clc sbb mov cmpsl repz mov mov cs pop push loop out and fdivrs and xor (bad) sti pop (bad) lahf or repnz push mov dec pushf xchg adc out sbb es mov mov or mov int3 rcll pop daa jp inc xchg ljmp adc jmp enter pop sub je cltd lret mull xchg pop aam push popa sbb sub sbb fcmovnu inc dec jo add dec xchg hlt lods cwtl out pushf jnp setle loop adc xchg pop into jecxz cmp insb or (bad) frstor cmp ret pop sub int imul jae in aam sub xchg (bad) fisubrl loopne scas adc dec and mov push cmp jb dec in movsl sub push insb scas cmp push xchg fdivl push push mull in out clc jge aas loope mov fdivs pop fidiv stos stos sub or xchg (bad) mov inc popf dec pop jmp or sbb add pop mov mov adc xchg xchg sbb je (bad) adc addr16 stos jne mov jnp push cmp inc je jecxz notb sub mov into cmp stc call addl jbe aam sbb push inc add aad rclb out rdpmc stos ret xor mov sbb mov xchg cmp mov cmp outsb cld test push (bad) jmp jl popa and sbb mov mov lods into mov in int3 pop cmp aaa and mov push cmp jecxz mov (bad) loope fisubr push mov inc cmp mov adc sarb popf (bad) mov fcoml cmpl mov mov jecxz icebp pop and mov push leave xchg mov or mov ret push ss and std push dec inc sbb enter cmp adc fcomps push data16 jae rolb cli inc push sbb iret sar test pop aas adc dec loope (bad) push lahf lods sub jno into or pop arpl (bad) push test push clc loop push in (bad) adc test pop ja add push cmp dec fcompl xchg adc inc jp test lock adc rolb pop mov jo add push mov jnp mov mov inc pop xor ds jp cs movsb fsubl pop add jl push insb pop pop call (bad) push sbb call cmp xchg sti aam xchg (bad) xlat cmpb mov jno pop xchg adc fist movsb pop and shrb aad imul push add add stos add and jge adc xor int3 andl in leave push mov inc inc inc mov pushf or xchg jp hlt orl xor pop pop cmpsl into movsl pop lahf push icebp lret fsubrp or jge jl sti in call cwtl out dec fstpt xchg jbe (bad) jmp fldl scas gs mov iret push pop sahf fdivrs es push mov mov mov sbb cmp movsb pop xchg lcall xchg sti pop mov sbb or (bad) mov int3 aas ds cwtl aam (bad) cld popf mov cmp pop inc (bad) mulb inc xchg mov idivl mov fs aad xor scas push sub pop mov scas or pop add cmp ljmp xor push or notl or mov pop mov dec in push push push in add mov lahf in mov lahf push adc xchg aaa adc stos dec fmuls push movsl leave sub or cmp in mov pop adc shlb ljmp fisubrl ret fwait push xchg mov out in outsl mov mov add dec and std and scas adc repnz mov in xchg xchg and jns sbb insl pop adc sbb movsb (bad) cmc (bad) add ret ret or fwait fs fisttpl pop in or out cwtl pop repz xchg js sahf and in (bad) orb inc insb ds rolb dec ljmp insl fsts mov inc xchg mov test mov aad lret imul rep int3 (bad) loope lods jl or pushl jp adc daa loope mov push shll jnp push (bad) std repz outsl push xchg mov adc ret add scas mov addr16 or xor (bad) cltd mov in cmp xchg xlat cmc mov add fdivrs in sbb (bad) fldenv enter imul jno jmp xchg lods (bad) mov mov out and jmp (bad) clc mov jb sub sbb xchg adc xor insb outsl xchg js pop push push movsl sbb cld jo pop lods pop cmp decl and or lods mov cmp jne stos outsl sbb ret (bad) and or pop daa cld orl jg xor loope incb int3 xchg add pop lret (bad) mov mov push sti sub push lea push fist test outsb inc mov mov and fidiv std (bad) out sub ret cmp repz push je shrl add and inc int3 inc adc lea pop push test mov insl push or jge test addr16 out dec loope lret mov sarb cmp or mov dec xchg clc movsl fmuls fsubp insl jno sahf into imul inc fisubl insl jg and stos sti hlt pop lret push adc into roll sbb (bad) mov dec xlat lret mov jle aad sbbl sub cmp icebp mov fnsave add cmpl mov pop movsb adcb lret add adc pop jno rol mov jg or dec mov ficoml or xor and push out sub inc mov push arpl pusha mov adc lods mov (bad) sub (bad) mov jnp cltd and jp mov test xchg mov ja test out jno fsubrs outsb pusha add test jecxz mov cmc jns,pn je call mov or mov jne (bad) les shr fwait das cmp adc pop push fcmovu inc cmpsl leave iret or push jb push mov push loop (bad) dec adc xor nop mov fsubr xor aaa jbe pusha ja rcll cmpsl in das call mov inc pop daa sub jns cmp dec jne xor fstpt mov cmpsl mov xor in mov popa jbe push push cld dec movl cs jmp mov cwtl push mov jg aaa cmpsb pop xchg jg inc icebp cld xchg sub out xchg cs lods jmp lock imul (bad) push cwtl shrl fs mov fdivl clc test mov and jle xchg int ret sti mov mov sub xchg jae bound pushf imul dec mov push pop popf or js in (bad) ficomp out mov mov xchg sbb or popf bound stos dec dec pop push insb push cld pop fisttpll cld mov pop adc imul cmpsb dec jle pop mov lcall cltd sbb mov daa lcall dec out fcomi adc cmp adc mov pop in lcall imul cltd ret adc (bad) into pop sub aad movsb sti mov das or loop sbb xor int3 out dec cmp or hlt loopne,pn loope or stc add sbb lods into cmp int jo aas mov cmpsb push cmpsb rorl stos arpl dec (bad) sub add aas ret push std ficoml fcmove pop ret xor mov push cmp je lret fdivs xor fnsetpm(287 lcall ljmp xchg dec dec or dec (bad) into pop jmp cld inc hlt fsts outsl pop push pop sti enter add mov das (bad) int loope sub push mov push jecxz icebp pop adc movsl push movsb pop test push cmp add inc push mov xor outsl sti rcrl push push aaa cmpsb dec jp jae add inc ja repz in dec pop xor adc mov xchg divl ror pushf jbe push test xchg les or add sbb jmp mov jae xchg pop push sar or sbb mov pop add pop rorb or dec fdivrs out les jle jle sbbb cmp fisubr cmp add pop sub adc outsb cmc or sbb mov xor mov into lock dec mov rcll mov jnp cmpsl (bad) pop lret add inc mov clc leave xchg adcl sbb ss cmp dec or fwait mov test incl hlt outsl imul or mov adc fs and pushf das roll sbb sahf add xchg adc mov dec add lea mov addr16 (bad) jge mov into mov and (bad) add and push adc jne imull adc mov in inc push fstpt cli jp in fldt adc or enter nop fidiv add ds sbb nop add aad pushf sbb in shll sub sub test mov cltd insl pusha fmull enter iret rorl sub sub fmull mov idivb dec std sub andb jae out ss lahf jnp mov mov ds cmp jle xchg (bad) jle push pop sbb mov repnz mov (bad) iret add int jl and fsts in clc xor (bad) xor gs rcrb test out mov cltd xchg mov push mov mov fwait xor dec sbb mov jns arpl hlt insb sbb orl xchg lock dec or xor lock dec fidivr push xchg out sbb in push sbb or add add inc lret push lea and hlt pop andl xor sbb jb inc test sahf sub (bad) sahf int3 inc test cmp inc inc cmc pop popf outsb jne cmp or add sbb adc add xchg (bad) into sbb rep mov push dec mov dec (bad) or fisttp mov ds dec sbb es insb rclb jmp pop dec inc xor negl lea (bad) out shr push and daa add cmpsb movsl xchg aas push sahf daa jno into jo dec pop outsb mov dec or xlat inc mov (bad) xor gs dec into ret inc sub jnp and jecxz jne jp dec fnsave sbb (bad) fwait and imul aam jns mov cmpsl daa lods aas cmpl push mov xor das push inc pop pop xchg jecxz lods or das stc enter dec cli data16 imul fcomps imul mov jae xchg add aad fldenv pop add xlat cltd mov mov jnp or pop add push mov bound pushf and xlat sub fstl add sarl push scas sbbb jae jno sbb sub jnp loopne adc sti xchg nop or mov (bad) xor xchg add jbe xchg push mov cs (bad) xchg movsb arpl out outsb dec in lods (bad) xor into fistp mov fdivl rcll dec fcomps imul aad dec mov int3 cmp mov xor stc mov fchs xor xchg outsl pop lock (bad) mov (bad) jo and fldl jae jg mov sub std adc push fwait popa loop adc mov inc xor mov daa bound test ss xchg ret mov mov arpl jp aam aam (bad) ljmp or enter lods sti repz enter scas frstor add mov or lret push xchg mov imul xor cmpsb repnz fistpl enter lds sub add add mov gs or movsb imul outsb (bad) leave out inc pop jns aam (bad) sub cmp sub mov sbb outsb pushf or add cmc mov mov pop mov and ljmp mov jb jmp sub in (bad) add adc adc loope xor lahf mov and lods es pop es add out mov idiv fwait mov dec (bad) out in jnp cmpsb cmp sbb in jle and jb mov (bad) mov jecxz dec mov out or cmpsb loope mov or mov adc movsl js mov dec push push cmpsb pop div mov mov pop xchg jo outsb mov push into in out mov dec jno push dec fcomp push scas mov enter adc inc pop cwtl dec push and cmpb dec ss enter mul jg xlat call (bad) dec loopne xor xchg or mov test inc lock les sbb arpl and mov sahf imul cmp imul loop shll fstpt mov xor inc (bad) lock int and mov sbb popf fistpl (bad) jne add sub dec repnz xchg in sub cld stos xor daa ficomp xor pop movsl inc (bad) dec insb movsb mul jge cmpsb cmc aam sub stos cmpsl (bad) in std fild push mov nop out iret iret cmp mov dec es aad pop inc nop aam rclb and mov push enter fwait push or mov add jmp cwtl rclb fmuls mov sahf push lahf ds enter sbb ljmp ljmp addr16 lock bound mov ljmp lea out out push test loope movsb cmp add es nop jo dec pop icebp ret lea cmp mov xchg (bad) push rcrl sub out lds icebp pop cmp fstl addr16 jne dec arpl stos jecxz mov repnz sub loope rolb xor rorb lahf daa inc adc inc mov data16 (bad) stc lods cmp nop xchg adc adc cmp hlt push xor pop dec mov or or pop sub loope jp cmpsb mov in cmp ss push (bad) push pusha lea sub jbe lret fdivrl push imul rcl jge mov clc and or dec repz aaa lret sti test jb imul int or mov push push push pop cmc add jl jl mov bound aam in xchg rclb mov orl push popf jmp or cmp movsb mov test test inc in das adc aam sub outsl sbb loope sbb mov cltd fistpl pop jo xlat pop inc (bad) dec xchg adc test inc adc or cmp xchg xchg mov push sub stos push arpl imul (bad) (bad) adc jp xor bnd scas mov lods cld arpl (bad) loop or (bad) std ret push or test in mov jb push sbbb xorl xor xlat shll adc jg push popa insl ror scas jb push mov (bad) dec popf rol out (bad) fist inc cmp xchg jle or (bad) sbb es out mov dec in shr jl (bad) adc pop je addr16 or adc es sti enter scas mov jp outsl mov js pop pop (bad) xor adc adc test push gs mov xor adc ljmp (bad) jbe mov jecxz inc repnz mov fisubrl aam dec mov push mov das stos sub dec cld add sub mov movl push mov adc movsb ss fbld mov sbb imul out xchg lret ljmp inc xchg mov in repz sbbl push add xor addr16 mov push jbe xchg js jo loope inc xchg dec add mov lods push dec scas jno xlat inc icebp loopne es aam push jecxz and stc fsubp fwait cmp xor cmp sahf (bad) mov and lods out aaa jnp push stos mov push and lahf lea rcll pop outsl pop scas scas pop imul (bad) ret push pusha pop sub mov (bad) repnz inc sbb and push lahf mov add pop or mov fcoml rorl xchg xchg scas push aad jmp cmpsb shr or ljmp xchg out mov dec dec jno mov (bad) enter or les xor cmp imul mov addb and mov jb jae popf xor out int3 sysexit ljmp and aas mul popa pusha test or ja pop aaa inc ds sub decl addl cmp mov js hlt xor out add scas shrb fsubrs test jge subl out clc data16 fist inc mov fldt lods (bad) (bad) sti adc (bad) movsl outsl adc dec cmc mov pop rolb push cwtl cmp mul pop mov or push test mov push jge inc sbb outsb out jb push add and xchg out sbb cmpsl test fsubrs mov sub in and xor js push into cmp jge or dec xchg mov pop xchg jecxz jge jbe stc lock mov cmpsl clc ljmp adc icebp sub jecxz,pt dec pop jnp dec std xchg sahf xlat xor je mov jge and xchg test jmp pop jmp (bad) sub dec into leave and jns stc sub push mov lahf cmp sub add jne sti pop arpl cwtl jmp (bad) incl pop bound pop sbb sbb aad roll pushf push jo,pt daa ret addr16 mov mov out rcl (bad) arpl push jne int add cmp cld cmp imul jg pop mov out jp jbe in movsb push cmpsl (bad) rorb pop cld in xchg xchg rcrb mov popf int3 arpl mov pop or outsb andl xchg lret dec mov ror inc mov (bad) fldcw mov gs pop cmpsl cld jecxz jmp pop or xchg sub inc daa out or sbb ljmp inc mov in jle lcall jmp bound fnstenv and in fwait movsl fstpl pop fnop rcll dec or fmul sub test ds sahf inc add imul mov dec dec jmp or cmp inc addr16 and test push mov mov cmc (bad) movsl (bad) aas adc test mov scas sbb out mov mov fstps pop pop pop mov mov js cmp ret stos movsl out and push push mov (bad) in fisubrl shrb mov mov pushf (bad) mov inc fnstcw idivb clc mov add sbb mov movsb sbb jle (bad) push xor daa and std fwait aas mov dec adc lock fcoms pusha pusha mov mov (bad) fsubl frstor mov xchg sub jnp popf ror insl push mov (bad) aaa inc push in inc jmp sti hlt cmp cmp push inc mov dec (bad) ljmp fwait insb mov (bad) pop (bad) and mov cmp mov jmp xor dec push stos popa sub shl stos jo daa jno pop cmpsl sti xchg adc inc movsb (bad) adc stos add push fcompl pop shll xchg (bad) add rcrl pop into in orb cmp xor mov shrb and (bad) cld jl ret mov andl daa and imul test push rcll mov dec enter in movsl cmp xor mov xchg or rclb mov (bad) mov and add test in sub mov sub mov nop pop jg scas scas dec les sub sub (bad) xchg jb xchg add fildll inc mov cltd stos inc ja dec sbb xor mov rolb in xor pop inc adc mov add mov popf daa mov outsb dec jge sbb push leave cli mov int3 jmp mov and ret cmp or pop dec cwtl repz push push addl fadds sbb idivb mov xor dec mov arpl sti movsb pop xchg adc pop imul mov pop xchg fsubrs sbb nop jb out push xchg jo notl int pop mov push loop lea xlat (bad) dec push sub inc stc enter sbb popa jno push scas nop pop rorb jp add movsl xor push mov loop xor cmpps outsb cmp addr16 rcrl fld ds sub imul cwtl movsb pop mov pop pop mov in movsl dec outsl dec sti incb mov insl cmpsl ficoml pop (bad) daa mov pushf xor std mov cmp in fstpt out pop rolb sbb mov int3 adc (bad) xchg sub movsl mov popa dec inc mov add push stc jns insb xor xchg or gs mov or (bad) lcall test xor or inc xchg addr16 mov adc aas jecxz inc inc jo xchg lahf push xor notl mov fs mov fs mov and mov (bad) icebp fldcw mov popa pop sbb addr16 ja insb xchg jmp lods push cmp loop loop lds movsl add pop xchg xor push push xchg cmp fistpll mov cs sub popa in sub ficom xor xchg fcoml and add lahf jnp iret jmp sub in jno jnp nop lret cmp fistl (bad) mov test adc xchg xlat jb sub xor frstor sbb jo mov loop sbb cmp pusha xor arpl inc dec inc xor lds stc sbb xchg addb (bad) fsubl jecxz lret jle mov cmp fiaddl pop clc sarl movsbl fidivl jns jno in enter dec cmc popf data16 std test push and jg dec repz icebp cmp movsl fidiv aad popf insl push jae sti xchg xlat scas jne or xchg dec cli nop dec sbb icebp mov push cmp add xor shrb jg in jmp ret push add iret jp shlb ja mov adc push push aam aas mov (bad) js jecxz stos stos jb inc jnp das je (bad) inc fmulp jg outsl lods mov cmpsl fsub xor lret fcoms (bad) clc jmp mov sti jp mov or xchg xlat mov cld andb cmp jge movsb frstor add jno jbe mov or daa cli ret stos cld push call xor mov or in xchg loope jmp insl or sub xor lods push mov cmpsl push imul jb addr16 sahf ja stc push (bad) aad and movsl fs pushf add and or mov lret push mov inc jle (bad) insb cmp inc cli daa cs and push xor test jecxz adc cmp daa lcall push add and fldenv ss andb mov arpl movsb in jne adc mov shl in popaw jno in hlt lods sub mov int3 push xor pop xor repnz repnz es jmp cwtl add jne jl pop (bad) lret in mov mov in fnsave sub out xor inc xor mov les mov dec cmp xchg add sub lret inc movsl test shlb faddp scas (bad) xchg sub fmul scas cmp sahf xchg (bad) sbb int3 or and inc loopne and divb inc sub mov (bad) adc jl lock jno and ds testb sbb push icebp xchg addr16 mov lahf add movsl cmp push sbb int (bad) mov sub sub mov jg xorps xor cwtl xchg fwait inc (bad) xchg lods mov jnp inc out repz fcmovbe pop mov xchg or and int out daa clc aas dec fcomi or push ja jp jg mov mov fidivl mov mov mov into out ret xor je (bad) das jecxz sbb scas (bad) cs jo cmp xchg mov dec adc addb hlt sbb out in or xor mov add vphadduwq imul inc push xchg pop push mov lods add stc mov xchg adc pushf xor mov test add or lods in rolb ja out jae dec sahf or pop aaa inc jb xchg adc push push in test out aas mov jg aaa inc push rcll mov rcl jle xor push jg mov xchg sub repz daa add xchg pusha jl out out inc scas xor fsubs test imul pop mov fild mov ja outsb inc lret sahf repnz enter xchg pop dec ljmp cmpsl and lcall sub dec sbb ljmp xchg pop mov dec adc cmp out insb int insl dec mov mov aas outsl insb sub mov add sti pushf mov xchg inc dec xlat pop mov dec in pop jp jle sbb xor outsl mov mov sub mov xchg sarl (bad) addr16 inc pop lea aam lret scas xchg ret fcmovnu lea xlat (bad) dec out cli jb outsl aaa std cmc repnz mov aas mov (bad) adc data16 out xchg out divb push sub jns mov andb imul or adc imul (bad) stos cmp push cmp imul cmp subb lds mov into cmp pop mov sbb loop mov sub mov jmp and es stc outsl xchg aas pop shlb jge mov cmp cmpsb sub aam sbb jp mov loope shlb mov (bad) or repz cltd cltd movsl inc sub cmc or mov into aas mov add insb cmp sub out imul jg (bad) ret jae dec icebp in push mov pop adc test jmp in rcl sbb fldcw pop out mov (bad) addr16 fnstenv rcrl mov leave loop insl jmp dec iret cmpsl loop cmpsl dec ret mov xor jge xor mov cmpsl pushf jp dec cli aad pop push adc ds roll mov add mov xchg mov mov fcmovne jecxz rolb pusha jecxz mov sbb hlt push jno lret fs sbb mov sub (bad) cmc sub inc sub or pop fstps xchg sub add xor push lock js push push mov (bad) jecxz in gs cmpsl and pop fwait jae lods cmpxchg mov (bad) call std inc lret dec sbb inc in xor insl ret jp shl mov pop xor push dec mov (bad) incb stos test (bad) pop adcb bound je cmp dec cmp out popa rcr leave mov mov dec nop mov adc repnz (bad) nop in mov movsl ucomiss arpl arpl fsts pop sub rorb mov int ljmp daa out xor insb or add lcall popa cld (bad) fcompl push clc mov in addr16 movsb cli test jecxz mov dec dec jmp lahf lods mov enter fnstenv dec test cmp in mov or test mov loopne out lods cmp xchg pushf push fcoms fcmovnb xchg imul aad cltd insb out (bad) movsl fstp sar into dec sbb js adc in mov lds sub xlat xchg lds (bad) cli mov scas fsubs ret lods add in and sub push mov or jno dec pop push adc fisubl (bad) fucomip jle das mov xorl add mov fsubrs popf repz jno cli (bad) (bad) sti push addl mov jle dec insb dec bound xor push lea cmpsl add roll in fsubrl (bad) mov aaa add call stos cmc add pop leave pop aaa mov ljmp iret fs daa cmp pop sbb ret mov aad or jp orb js (bad) sti pop popa (bad) jns mov jbe scas inc mov sub fisub (bad) enter sub cmpsl insl hlt pop and (bad) repnz movsl xor mov movsb div lods fldenv jp test into (bad) (bad) daa sahf data16 outsl (bad) popa imul int3 and push add cmp dec mov fisttpll push fcomp lods dec fwait sbb push (bad) cli pop cltd adc dec xorl sub and dec dec jnp cli mov hlt loope mov aad test jmp ret jp and cmp mov pop xchg adc int dec stos mov imul jge cs ja mov std shrb mov popf mov int3 ljmp sarb xor push add inc in test hlt mov (bad) in cmp icebp add in mov pop in icebp xchg inc jbe and push addb or sub imul cmp ficom test and sbb xor jge pop pushf inc int3 jmp and cli popa dec fcmovnu pop pusha and adc or movsl or pop jp mov pop mov cli adc ret adc jne adc pushf xor or cmp inc push and and in mov sub xchg dec ljmp dec icebp inc lret xor dec popf sub sub (bad) inc imul out ja aad push ret cmpsl sbbl and stos mov jecxz scas lock jmp rcll lea orb inc dec and adc push out aaa sub test sub jno out aas push pop xchg insl or orl push cmp push arpl mov aaa adc inc sbb cmp jne fisttp bound scas sub pusha dec fld pop jecxz dec cmp dec inc mov aas pushf sti jb lea xor and lds sti adc xchg add sub inc sbb test push sub aaa lea dec (bad) fsubr mov mov adc pop adc push scas fldcw sub pop jb fdivp and jmp mov mov or cmp dec mov add mov push add sub dec leave stc sti lahf sbb mov xchg xor mov jb movsl xor jge test mov jle bound cmp and loop andl xchg mov call (bad) jb fstpl dec arpl shr test xor ficompl sti xchg and fldenv and or inc push mov clc cmp out sub hlt jg fcomps inc mov aas adc gs mov fnstenv aam xchg pop out inc push or mov (bad) sahf sbbb cli test mov clc push mov pushf xchg fnop inc jmp ja bnd popa sbb jnp sub pushf loope mov out pusha fldenv out test xchg add sbbb stc xlat ret in stc sub jno les rcrl push or aam add shlb cwtl xchg in push daa lds xchg loop cwtl addr16 leave mov (bad) pop popa rcl test aaa add sti lock push adc (bad) (bad) mov cmp and xor in dec inc push xchg jne (bad) imul push mov (bad) into (bad) mov test out stos movsb (bad) repnz pushf dec xchg cmp fild (bad) lock fsts lds (bad) sub or dec dec inc hlt das and rclb jne jp in or pushf sahf lods mov out rorb mov mov jmp test sarl push pop iret mov mov cmp add adc (bad) sbb sbb ds mov xor es sar xchg cli sub cli leave repz out sarb sub shrb popa adc clc in sbb mov mov inc aas jnp push (bad) dec push test es sub sub sub imul jp pop sahf daa mov cs repnz gs in (bad) pop data16 inc push cmp mov int3 in in out rol and pushf pop outsb jecxz sbb les hlt dec test shrb add adc lcall lds in repz xchg xchg negl push jecxz out lods (bad) mov in mov push (bad) mov push pushf daa bound neg leave sbbl jmp lods jle rcl fbstp mov mov das shlb cmp push popa dec loope xchg lock adc mov cwtl popa mov fimull mov jecxz mov lret jecxz pop pop scas mov mov inc (bad) cmp outsb daa loope into clc cs mov fldt inc ror sbb push add jb mov (bad) scas jmp insb stos outsb adc xchg jge,pn add lods mov data16 aad decl jmp enter xchg push add fsts push dec or in rcrl inc insl (bad) dec mov mov jno repz jae test inc gs ds mov push das lret std ja push leave sub push mov xor adc arpl xchg inc test cli mov ds sub cwtl and orl xor adc hlt imul out ret and shrb idivb movsl sbb mov jg out push push dec je sub push jne addl movsl push mov jle or mov jl or sarb pop stc out mov add inc mov mov adc sbb int in int aas jecxz jge jbe jns mov clc out mov mov pop xchg adc lcall fiadd sub cld enter jne adc jmp mov cld mov mov idivb push in je aas pop sub lret dec cmp xor push mov shlb call lahf dec sub out mov jbe jns bnd jae jp fcmovnu nop mov inc xchg mov in xchg mov mov mulb (bad) mov (bad) dec jmp jmp dec xchg sbb pop (bad) xlat jb bound sbb lcall inc push and (bad) dec test pushf inc cmpsl repz mov outsl imul mov jbe jmp out jns add pop cltd test das cmp mov mov ds cmp mov jnp jnp std sub adc mov mov and es lea jae push dec out lods loopne sahf insb in js pop dec or mov ret mov das call push call xchg scas adc (bad) into adc mov pop in enter jae (bad) mov sbb inc je faddl cli lock mov pop lret jmp mov lret (bad) xlat mov jns addr16 adc mov scas and xchg add fbld dec or sbb lret sub jns enter mov ljmp in sbb jge jo ret xchg xor gs out adc imul or xchg (bad) adc pop mov imul aam pop fsubs jbe insb test xchg dec lods cs inc aam jb out (bad) aas out sbbl into dec cld and mov int3 pop mov (bad) mov mov jne popa popa mov xor sub mov push pushf in ljmp xchg subl jb (bad) mov stos arpl adc cli fcmovne xor add sub cmp pop out mulb cmp or rsqrtps push xchg addr16 andb xchg push enter jp dec dec hlt or add (bad) pusha lods push fistpl daa loope negb rcrb push adc mov and xchg into inc inc and in das pop sub adc push ja lds lds cmp call jbe stos outsl test lahf je test call or sub fs dec (bad) stos and fldt bound in sub and mov movq icebp out push dec rolb mov mov pop ljmp pop jno push (bad) jno scas cmp out mov pop ljmpw ret pop push inc cs xor sbb daa push adc add xor out test dec adc pop adc xchg aad out push imulb sbb fisubl cmp (bad) inc add sbb jae mov or sub (bad) mov jmp sbb mov (bad) or lods cmp inc and sbb out pop movd mov outsb cmp fs dec pop aaa xchg icebp enter mov push or cld test into es call mov or cld test aaa push push ffreep mov imul sbb imul inc js sbb pop movsb pop outsb lock pop (bad) mov mov sub mov pop (bad) pop jecxz sbb and ret mov pop test cmpsb push cmp fidivr mov out mov sub jp shrb jnp push push dec lock pop sbb sbb cmpsb (bad) call cmp mov adc add lods sub jb xchg sub scas lret jno and mov jne stos mov mov push sub sahf cmp arpl mov xchg popa and push mov popf insb test xchg mov fisubl sub es jmp sbb shll icebp jne inc loopne push (bad) arpl mov sbb leave outsb inc xchg jo jp mov mov scas mov insl gs mov fs mov mov ja fldl2e ret jbe dec fstps pop bound pushf push shrl test mov xchg push pop sti cmpb test jo into adcb mov outsb js push lock sbb dec or jmp clc insb or jmp ljmp inc inc jae (bad) fimull and fmull pop aam jns,pt dec adc ss push fildll sub mov lods mov push and dec in cmc mov fwait lahf loop mov repnz jg push push inc mov dec xchg jmp ljmp fadds std jle cmpl loopne,pt (bad) insb or adc sub fbld inc inc dec add pushf pop stos lahf stos test jae or clc ja mov mov and stos xor hlt movsb nop dec add jecxz out push cmp mov lcall cmpsb cmp fidiv dec inc push dec cmc dec mov mov jnp or cmp ret push jmp mov xchg mov cmp adc adc sti insl out xchg xchg add push loop stc pop scas aad fwait xchg pop arpl mov nop nop adc mov mov negl cmp addr16 sub roll dec cmp dec (bad) xchg and in pop xchg popf adc (bad) xchg cs adc test clc sbb es sub inc add imul shlb sbb insl and pop roll mov ret (bad) movsl fwait sub test call aas pop mov push mov outsb sbb mov andl mov adc push lock pusha leave push xadd inc (bad) fmull cmp jne inc fcoml cmc test jbe inc addl push inc xor cmp cmp mov out lret mov sti push mov pop sub and xchg pop fdivs lret jno xor cmp mov jno decl dec sti pop dec cmp inc (bad) in fwait xchg in pop movsl sub into xor mov lret loope sbb out mov jp leave mov pop (bad) cli shrb lods cmpsb sub lcall lahf jge push jmp movsb pop arpl push out ret dec fwait imul add xlat insl push push dec cmpsl (bad) fsubp mov aad inc popa jo test jg call imul or cmp dec imul and daa ja sbb cmp or cli imul shrl nop mov sbb cmp lock les inc mov jl xchg push cmp sbb out pop in inc or arpl outsl cmp negl out xchg addr16 cltd fwait sub cld and daa add enter je and pop mov dec cmp mov mov xchg in xor xchg daa mov push pusha cmp ret pop mov lcall adc mov fistpl dec in out mov xor repnz xlat cld int3 int3 das and insb xor mov pop lds adc mov dec push icebp lods and iret push test and mov xchg (bad) sub ret jne pop dec je fs push mov push cmc cmpsl jecxz pop cltd (bad) loope (bad) sbb adc inc sti mov popf mov (bad) lock iret int3 inc adc test push push fild pop mov (bad) fisubrl pop scas fcoms ds lcall sbb inc jecxz push cli cmp outsl (bad) dec sub (bad) scas aas mov mov clc gs mov xcrypt-cfb cmpsl mov test mov and push cmp in bound stc xchg mov lods mov pop fcomps add aam out push ret or adc fimull jb push movsb mov push jl sub jmp nop (bad) nop mov or inc (bad) mov imul inc mov loopne and xor push ljmp push sub outsb and pop rclb and mov (bad) and (bad) jo sbb or jb jno ret sti mov loopne push call cmp or xchg pusha dec and mov jge jae inc dec mov mov sahf cmp dec (bad) xchg mov imul push lret inc lds fildll lahf sub dec mov test scas stos jno fsts mov sub mov aas push into xor sti sub add xor mov push jp test mov movsl push into xchg push cmpb movsb xor cs jmp shlb sbb xor push cmp ds pop add inc addr16 sub push pop mov movsl (bad) (bad) jecxz lds mov stc jae jae adc push movsb insb pushf xor call mov pop pop push es or pusha daa sbb push cmp insb fldt xor jnp inc xor ds jnp pop mov or test loopne sbb add mov repnz fwait mov bound push push mov sbb (bad) cli imul pop cmp into jmp (bad) add inc in lds js fistpl jnp and jmp mov mov and adc jecxz mov out lcall cmpsb bound inc adc sti jb sbb sbb shll loop sti movntps dec adcl push popf mov stos das mov icebp mov sbb push lods pop mov cmpsb lret xchg push pop jns push push (bad) scas out fnsave aaa xor pop jp and es cs pop addl ljmp adc enter inc xor imul call xor push dec daa aad mov dec mov mov ljmp andl outsb mov (bad) out fsubr stc inc jo mov fist cli mov push cltd add jae fsubrp insl addl sub sub fs data16 sub notb std (bad) push mov mov inc lods pop push mov mov mov lcall imul xchg push scas aas insb pop popf lret fdivrl mov push in mov je xchg dec xorb push aaa pop loop xor (bad) mov mov inc xorl shr sub mov test inc pop rolb mov ds in cmp (bad) ficompl pop jo popa out dec ret xor neg movsb mov add movsb iret pop (bad) ret mov mov (bad) push popa or inc lock dec mov cmpsl mov pop add leave orl or cmp jb push jbe les adcl call adcb je lods push inc ds loope cltd out inc xlat and sub sub jecxz mov (bad) insb addb mov or jg in in and in stc and loop cmp fsub xchg mov mov push pop mov movsb cmp cmc dec push mov mov inc or push lcall fisubl xor mov and pop fldenv xchg ljmp lahf pop xchg jmp cltd jns pop repnz imul sub iret mov xchg scas fiaddl inc and psrlq data16 (bad) and pop out and int into pop lock dec popf add add loope dec cmp dec xchg call (bad) inc shrl adc cltd cmpsw mov (bad) stos mov rclb lods adc mov push xor lea hlt lret jnp jecxz mov mov das dec outsl bound insb push std mov pop xchg ljmp pusha out das pop (bad) mov sbb ret inc je fisttpl or pop and in push test mov cmp and dec movsb dec outsb cltd mov shrb aam loopne xchg test sub out jl pusha sbb mov loopne jbe pop testl push sbb cmp mov pop addl add imul lock mov idiv aaa or jne dec cmp jmp xchg test or scas int3 push add icebp xchg jmp (bad) xchg sahf sbb out push (bad) ds ja cmpsl popa xlat lahf stos adc xlat jp or mov in je repz cwtl clc sub jg aaa mov mov inc jp dec es or sub imul es loop xor repz pop outsb lahf xlat jecxz xchg xchg push test paddb mov adc mov es or mov test xchg xlat in jecxz adc jle cltd xor lahf jo or nop lret or push movsl call repz int sub nop into iret mov lcall arpl mov andl push rclb sti in in aad inc adc add cmp pushf mov mov rolb xor mov pushfw ret sbb mov cmpsb imulb pop test cmp jl xchg xlat in or in insb cli aam jmp or sub dec mov pop imul aam imul ss mov push xlat loop outsb lcall cmp mov mov stos les sub aas push stc mov dec push fs xlat push add lahf fiaddl popf fs shr out (bad) fstpt xchg xchg mov test pushf stos add mov test xorl and dec jmp scas and sbb or cwtl mov mov repz sbb leave adc aas jo push out in shlb mov (bad) aad sbb in cwtl mov pop cltd push and roll outsl cltd cmc dec push fildl sbb mov jnp push pop faddl mov loop cmp mov cwtl fs ret in pop add ds ljmp sub push jl iret add mov jnp add or add jnp ja mov mov imul push (bad) dec mov (bad) push clc mov icebp int3 lock xchg xchg fildl out xor movsb std jp clc jge jmp cmc xchg in ss stos pop shrb and xchg cmp mov dec sbb ss cwtl cmp fnstcw ljmp (bad) dec mov loopne in sbb ss test or or es xchg add imul adc pop out adc xor insl lea inc jmp daa mov bound (bad) fs mov gs xchg add push les and adc rorb adc mov in subl pop inc lret clc loopne test sub testl or pop dec dec push pop push add aaa dec push push jns mov xchg lds nop dec into adcl mov loopne mov sub hlt mov mov mov and xchg shrl push lods mov sub pop cmp xchg pop pop ffreep mov fnstenv adc je jl pop and ret lahf xor hlt cmp cs push pop loopne or cmp sbb int loope fs inc in mov loopne adc push add xchg lock das jg mov test arpl sub dec out lahf fcoml cs jb push (bad) fimull cmp sar dec inc in sbb dec fcomps in push aad mov xchg imul jmp and pusha add pop and push pop outsb mov xlat pop fwait andb push cld or aad adc popf cld and add xchg jnp out clc fs jns out movsb jge lret sub mov scas into jl mov aas mov mov jb jecxz (bad) ret xor ret loopne and adc rcll xor xor setnp ja push test pop mov rorl mov loopne pop out push mov inc call loopne mov xchg inc shl imul xor outsb pop pushf shr pop push xor xchg and fiadd jbe xor cmp leave adc inc pop loope loop call fwait mov sahf push or mov int sub pop xchg (bad) jge adc adc arpl bound jno sub push and stc xchg je cmpsb push xor aaa dec movsl (bad) cmp pop out xchg pop add sub add jecxz sub lock (bad) cltd lret adc dec imul andl pop scas xchg int mov scas dec inc scas fsubl xor fdivrl mov test cmp xor ja push or cltd or mov xor jae ds pop sbb imul ret ror sub xchg outsb fidivr lret jbe cmp inc mov mov xchg pop pop pop and pusha in ja imul aam aad add and xorl add jp loope ja into rcl sub aas in sub and xchg sbb fwait sub mov test and inc aas fiaddl lret fadd mov or leave out dec test rcrb cmpsb lret pop inc sahf out mull out jle cmp lcall stos mov ret and jne in scas fld popa call inc scas add enter es lods jg push cltd cmp xchg pop in cmp daa repnz daa rorb mov jns xchg imul cmp fidiv adc pushl add fisttp rcll push mov mov leave inc (bad) or (bad) or mov jns mov addr16 (bad) pop jae push in jb mov xchg ficomp ret inc clc fldl (bad) fldt push lret mov daa iret out add fild ss pop notl scas jmp cld xchg dec scas mov mov sbb loop inc lret xchg xchg in push bound int fildll xor mov xchg push ret out xor clc sbb mov iret xlat pop jle nop jg jp es add mov sbb cwtl xchg xchg in cmp in push inc pop jmp inc hlt dec and enter push ja jb push xchg popf xchg imul movsl das sbb out in incl xchg out cltd mov movsl jmp or pop push pop sub pop fstpt leave push addr16 and cmp jg add jo pop fnstenv imul or jl mov pop leave push cmp test or (bad) cltd jns bts xchg js mov push xchg out ret dec xchg inc fucomi mov and add mov xlat outsl (bad) incb data16 cmp jle sbb pop pop cmp in shr push fisubr repnz push stc jb shrb loope mov sub js mov lea pop xchg sbb loopne repz ret adc stos cwtl xchg sub (bad) sbb sbb pop push popa mov ljmp xchg jo popf cmpsb stos (bad) xor arpl jecxz or jle dec iret and xor add cmpsl imul leave and jmp add jo popf or scas sbb test push xor (bad) addr16 dec (bad) sbb xor inc roll ds clc inc sbbl push pop mov mov test dec pushf add leave popf xchg add (bad) jbe adc popa mov mov out repz iret push es mov ljmp inc rcrl (bad) cmp bound jle add out adc imul popf es movsb cmp sbb pop cmp daa add inc scas and pop nop dec push movsb incl stc and mov int3 ret (bad) and leave inc pusha push and lahf lods std jp cmp or rcrl mov mov (bad) adc cmc ret cmp rcrl (bad) cmpsl dec mov xchg (bad) movsl hlt in pushf mov (bad) aad add lods push cld push fwait in sub (bad) xchg jmp ret inc or sbb pop cli mov pop incl xchg jmp or ficom inc xchg xor inc lahf push xor ja adc dec aas jle aad iretw insl adc add jne mov lahf nop push (bad) out std leave out dec xor add xchg cmp add iret mov cli xchg push insl mov aam adc xor cli pop out jae mov pop insb xor add jmp cmp and fisttpl repz arpl lods and push fmul dec (bad) inc mov dec inc pushf xchg dec jge les movsb jne fucom es (bad) (bad) ljmp inc lcall ret shrl shll cmpsb shll in sbb cli xor xor jecxz jmp or cmp arpl fcoml mov in (bad) bnd outsl data16 fsubrs or or stc fcmovbe dec cmpsl out mov daa outsb mov shrb mov mov sbb xchg adc or push cmc and fnstsw mov cs mov hlt push xchg dec add inc mov cltd mov pop faddl jae mov and inc pop iret sbb or lds mov and push jae test jg outsb mov adc or cmp das push addr16 mov mov adc lods in add push jg jnp enter jae dec gs inc arpl pop xchg daa ret lock xchg push lret pushl mov jb mov pop cmp add inc mov ffreep daa ja cmp ret inc push xchg cmpsl and add (bad) mov and stos push arpl daa iret adc aaa scas js mov mov scas retw or out cltd fsubrl fistp dec jbe into or add jge incl jns ja push adc cmc ds pop in ss push aad imul insl add cwtl jmp mov sti lret pop add inc xlat xchg xchg jno adc xor icebp sbb push cmpsl dec dec repz mov sbb add fwait inc repz xor ficom add leave jmp fnop xchg pop test cmp adc inc mov dec jg lods sbbl in cli (bad) decb sbb fs inc jae add or repz nop (bad) incb es jo xchg aad stos mov fidivr inc pcmpeqw addr16 pop push in rorb jle inc push (bad) mov loop sti and into push cli push movsl not mov mov cs iret mov std js xchg out or aaa adc ds jno lods fsubr repnz sbb adcl test sub inc pop aam push sbb dec and cmc dec jg fist lods outsb daa lock sbbb cltd (bad) test jmp mov lcall daa mov stc sbb cwtl (bad) in cmpsl rorl jge es pop sbb cltd inc pop jne icebp xchg mov and es xor dec sti push aaa lock mov (bad) adc rclb out out inc jle (bad) clc xchg dec and pusha mov sbb cmp mov aad les fistl test xor mov ror icebp loope les int cmp adc mov or outsl leave cltd fcomp loope aad jae adc sbb (bad) out xchg jp sahf push mov mov lock or xchg mov repnz sub out lret ficoml bound in cmp cmp loope lods sarb mov sarl mov push das sbb mov pop shlb ficom xor mov cltd inc jp ret lds loopne and sbb mov jnp xchg out mov insb call testl adc dec lret repnz mov out mov mov pop into insb jg xor int3 imul int3 jmp xor call ret arpl scas pop or cmp inc add and push out jbe adc mov addr16 sahf leave xchg adc mov xor test mov aas inc jp andl hlt bound lret (bad) fstps stos cmpsb negb sbb outsl sub add frstor mov mov and icebp inc add add (bad) cld lcall lds sub std mov and outsl mov pop add repz push xorb iret push stos stos into mov sub loope mov dec push loop cmc adc dec mov pop mov mov pop das dec cwtl test mov insb jecxz mov std aad outsb push sub xchg or mov xchg cmp cmp jns jl lahf (bad) aaa call js push subl push cmpsb ds test mov inc or lret ret outsl es sarl stos xor or or push dec inc jmp mov shld xchg xorl mov (bad) jbe std (bad) imul insb push push xor mov mov inc mov mov (bad) sub fimull (bad) fnsave jge ja pop cltd cmc add xor lea push daa cs push cwtl ret mov add imul loope sub (bad) das fwait sub xchg push mov cltd int3 and mov xchg js add loop nop pop cmc mov push or std ljmp sbb lahf sub rorb jmp xchg push mov gs adc jne popf ret js cmpl cmpsl fnstenv icebp adcl mov (bad) dec xchg and push cs and dec mov adc mov je pusha arpl mov push (bad) out pop pusha incl mov icebp and mov cmp xchg jno test sahf inc repnz inc push test (bad) sub or and insb out jae jecxz stos clc test mov pop (bad) sbb jmp shll adc xchg mov mov imul idivb mov mov iret outsl xchg xchg (bad) mov jns lea sub cmpsb sub movsb dec out jle les aaa sbb fcompl lods inc test ja jb sub bound repz (bad) popf mov je movsb and adc andb xchg stos in ds xor add sbb rcll adc mov mov (bad) jbe push mov sbb and dec push jp or in mov mov icebp push out dec imul and push nop pusha mov hlt rolb jle cmp icebp out mov js add xor sub sub sub int dec lock ret sbb das xchg daa pop mov inc push daa repnz cmp pop pop adc add popf xor mov test mov add xchg mov push sub jl test mov imull inc pop push ss inc inc fstpl xlat std aaa and stos ja jle aas sbb cmp jb push pxor add inc inc cmp cwtl add rorb mov pop inc xchg xchg and scas in mov cli or mov mov sbb push fcompl mov js sbb xchg lds mov jmp push xchg popf or xor sbb sbb scas ss fistpll push cmp mov movsb xor lods jae sub xchg bound sub push xor cmc insb push inc mov adc push lret cmp mulb in test xchg cmpsb jmp pop call sbb sub push popf out sahf mov (bad) mov mov mov es test lret fldcw jns mov mov aam cli pop cli cltd cli sbb jno adc mov lods mov ljmp nop and adc pandn xchg arpl pop test jne or mov and cmc mov dec (bad) xor inc int or aad sarb stos imulb cs and ret mov push xchg stc in and mov loope sbb push or iret push inc in xchg fnop pop les sarb sub stos (bad) pop adc das adc fwait dec add arpl ljmp scas jns cli pmulhw imul pop and lret adc loope das jp leave inc dec sub xlat push ljmp les (bad) jo es inc xchg cs rcrl push insl nop gs push pop stos fadds incl loope hlt cmp and adc mov pusha imul cmc xchg dec dec ds fisttp outsb push cmp pop rcrb cld cmp or dec xchg and aaa jp insb mov lret adc inc mov data16 out aas test negb mov and ljmp jo cmp push in sahf sarb bound movsb lret jecxz cmp js xor adc mov xchg xor fstpt adc jmp (bad) adc mov pusha lock out cmc cmpsb dec push movsl mov popf ja sahf mov add mov cmpsb mov gs cmp push hlt mov gs add jle imul std jl outsl test fwait xlat and mov cmpsl loopne stc inc das fisubr std sbb scas mov jmp cld sbb add mov sub dec inc mov ffreep and idivb jo inc dec into ror in test clc and ss movsb sbb lock fistpll mov mov mov (bad) sbb fstps push rolb sub fs and (bad) push and sbb xchg and outsb sbb mov scas pop sti into inc jp adc into add pop mov sbb popa pop roll jmp push xchg xchg sbb or cli lret sbb das jne dec mov lea das movsb (bad) fwait xor jg add adc jo repnz pop mov roll jb add jp (bad) repnz popa (bad) pop push mov dec scas (bad) mul push ror pop adc jl stos inc les and lahf imul push imul xchg jbe inc loope insl mov adc pop rcll or inc aam lret scas mov out aam fwait idiv sub dec cmp cmc aas imul cmp dec and sbb xor or call fstps repz out or xor mov sarb push scas inc pushf movsl lahf xor pop and aam in in jg sbb add xor sbb (bad) scas add pop push mov xorl (bad) addr16 fdivrs jmp in or mov xchg sbb mov pusha xor insl or sub jle sbb mov out sbb pop jno jns inc dec ja dec out cmpsl out jnp pop (bad) lret inc in int3 jp loop push pop cmp push xchg in push (bad) (bad) shll cli fcmovnb cmp ja and and mov cmp or ss jmp jbe inc cwtl jno lcall mov (bad) xlat adc jnp push mov test ja nop in int cwtl or sub xlat andb jle je lcall adc mov enter loopne imul add das adc dec daa pop movsb movsb in adc mov lods xchg cmpsb xor arpl js lret pop les or repz loopne push push sbb fwait sbb inc mov push xchg mov adc jae mov (bad) jge in call out adc adc arpl imul pop mov test add sub jg movsb push fwait out mov xchg (bad) jmp insl mov xor inc idivl pop jb xchg mov popf mov xchg jl jle movsl jno xchg inc push and lret cmpsl das xorl sbb ficom mov add (bad) outsb inc push xor scas rcll pop inc push dec out test lret repz popa rcll mov sbb push jmp (bad) sub or pushl jns push into cmp xchg mov lahf mov sub and mov addr16 xor outsl adc adc lods in iret aas lea les xor fwait outsl mov pop cmpl in push xor mov (bad) sbb adc fldt scas mov into xchg mov (bad) test clc add aaa push arpl push rcl aas mov xorps or (bad) outsl cmp dec scas addb mov sub sbb addb xchg das dec push mov sub das je adc (bad) add fidivl leave mov sbb loope sbb sub shrl popa mov add dec dec mov adc movsb cltd mov push xor leave ss mov sub jae xor out xor je sbb ds ds lock int3 xchg cwtl sbb and stos test mov and es lret jbe test pop (bad) insl jecxz lahf xor jae sub orl pusha insl pop and add ret cmp lds subb dec jle xor pop inc rolb imul jmp insb or les je pop repz test adc sub cwtl cmpsl dec xlat and sbb pmovmskb inc push mov (bad) dec inc mov sahf les ret jbe dec (bad) and or xchg xchg inc lcall xor popa insb insb dec mov inc jmp std and aam addl sub pop or or imul mov dec push or pop stos cmp sbb xor addr16 lods sahf dec mov dec and add pop mov dec dec xor sub fxtract mov shr xchg outsl mov call enter cmp inc jg lret sbb add ja (bad) mov loopne fwait imul push js (bad) sti sub xchg jl adc push cli sbb adc call xor inc mov inc or movsb fcomps loopne popf mov xchg or rcl movsl cmp pop je mov pop sub pop and in inc xlat shrl inc dec xchg jg ret repz pop mov inc cmp bound loope rorl xor mov mov xchg imulb popa cli jmp aaa addr16 adc xor scas lret xchg sbb pop xlat cmp in cmp jnp in adc lock and lahf adc iret add inc rol mov sub mov and sub cwtl daa lea inc push jne sbb ret push cmp push hlt sub pop int3 xchg mov mov pop push test (bad) sub in jg dec cmpsl cmp aad push outsb jecxz cld mov out fs mov cmp adc ss (bad) xor sbb xchg cmp xor xchg and xchg mov incl ret lcall data16 inc js imul fild cwtl mov mov push andb inc imul sbb dec je push insb cli ret hlt mov mov lds fwait pop mov or mov hlt lock mov test push push sub mov inc sbb cld int3 jo mov and jecxz mov pop push mov jecxz mov and jbe les (bad) icebp adc aas or or lock push sbb lods daa test jne sbb ffreep dec jp push cwtl jne jb iret xlat loopne push xchg clc xchg push jb or fdiv cmp mov jnp into fs inc cld in xchg jno push popa sbb dec and mov fisttpl test cli and fild rcll fisub xchg cmp cmp or mov push jl adc push enter push outsl pop xor cld fimull sbb xchg leave pusha lds add add pop test pop sbbl lret fcoml ret push dec add push das ret mov adc fist jae lcall sub jno adc popa pop and sbb or adc cmpsb (bad) outsl jp inc ja sub cltd loope outsl lcall mov cmp adc fmull addr16 pushw mov pop or loopne aaa mov inc fsubrl stos or rcrl sahf in loopne les push aaa pusha dec repz xlat xor rolb and sub clc lahf push ret or gs out inc pop cmc pop insb dec in mov (bad) je scas lret clc adc cmc jmp and xchg arpl test add pushl out add (bad) icebp bound jno hlt pop clc xor daa add sar aaa mull fistp adc movsl add add or xchg jne jmp in mov pop and jp cmpsl data16 mov dec ljmp les adc or or jmp push mov sub je xchg addr16 cmp adc roll js and loop adc push in fimul add xchg sub mov mov mov jo or adc sub outsb xor xchg test mov (bad) dec out or cmp add jg icebp pop adc stc sub mov loope rorb adc inc push loop jne mov test lock sub cmc sub fs sbb dec jae loopw mov push sub cmp cmp xor in pop sahf push (bad) popf shll mov cmp push loop addl jb mov push dec arpl ljmp (bad) repz iret fidivl inc mov fisubrl pop adc scas imul inc mov dec add mov test je push out adc adc hlt and sbb jg psubsw aad daa mov sarb sub aas mov andl mov cmpsl mov movsl cmp or ja aam mov (bad) xchg fucomip mov push add cli pop jo pop inc push jge push mov in pusha iret mov das loop sbb sub mov inc stos lret (bad) (bad) clc jbe hlt mov or out rcll add test cmp dec out iret into test push inc mov stc mov inc jb,pn outsb push sbb ljmp and xchg shrb rcrl pop adc xor and add movsl add push pop sub or inc push fstps cmp cmpsl push stc pushf ljmp call and (bad) or mov mov or call jmp sub sub push ljmp jecxz dec jecxz ds daa lret mov ss push lock lock push add jecxz bound xor addr16 jp jno inc lcall pop pushf lret fidivr lock lods movsl ret xor sub sub lds mov sbb lret es xor mov mov xchg (bad) aas sbb cmp adc dec and cmc imul sbb pop mov sbb outsb ljmp adc dec jb ret sbb mov and cmp ss fwait mov mov loop mov das leave xchg fnstcw ret in pop test lds ret sub mov xchg push inc int3 int3 xchg push data16 iret fdivr ret insl mov daa jge int mov xchg shrb imul js jp mov dec add mov movsl adc add sahf mov mov fs or fisttp mov jno stos in rcl test cmpsb popf outsl sarb mov lea xchg mov and jo ffreep jge outsl cmpsb leave testl mov int3 lods repnz sbb mov and inc and lahf sub fs mov iret psubb dec imulb aad notl mov insl sbb lret ss in sub cltd icebp lock ret enter test push loopne inc (bad) aad loope aaa xchg out aaa arpl aaa xor shrb (bad) enter clc mov aas xchg ja leave insl sbb hlt (bad) xchg pop push stos cmp jno dec push ljmp mov (bad) (bad) pop sub inc adc lods sbb lods xor pop test iret mov mov (bad) mov into test xor pop les dec ljmp pop or enter popa sbb lahf fsubs push mov mov inc jae stos or sub mov or cmp hlt sub cmp xor adc add jne or test orl dec xorl xor jb mov and pushf sub jno mov in jg cwtl dec mov lock cmpsl ds xchg dec insb bound or sbb mov call mov push or (bad) out sahf arpl mov loope fst mov jns inc pop sbb jle aad mov mov push jnp push lock stos xor adc dec popa mov cmpsl pop fmuls pop jle pop mov sub xchg jle daa mov adc cmpsl popl jno add mov je rclb loopne fs mov std lcall mov popf and push mov add xchg pop jb outsb xchg jmp orl pop call cli insl and in jle xor cmp mov scas sbb test adc pusha push sbb mov rol in inc xor clc mov lods das jecxz into xchg out roll inc or dec mov in stos push pop les fld push push orl test pusha push aad in push mov mov jle in jns cli in pop cltd aaa or or xor dec jle imul loopne leave jae fadds shlb xor scas jo dec das jo iret (bad) cmp in mov fwait je (bad) adc outsb dec pop or cmp inc movsl push lock dec call pushf cltd mov xchg test jge and ljmp xor scas (bad) push ret jecxz pop out inc adc decb mov push stos (bad) dec call imull jb imul xchg push and inc gs pushf movsl sti mov shll in (bad) jl (bad) xor fbstp lahf leave (bad) cli mov jbe es xchg cmpsb fs mov or push adcb xchg sbb addr16 ret js fistp xor int int pop in mov ja dec sar loope pop stos fsub addr16 mov lea pop std and cmpsl cmp hlt aas aas xor jb (bad) (bad) or add (bad) cmp dec xchg inc jb mov and inc ds cmp insl dec mov icebp vmaskmovdqu (bad) imull stos pop fidivr cld rcll or add shrb pop push push test call (bad) dec out push add xor cld pop (bad) fucomip pop test sarb rorl sub jbe femms jmp add ret mov gs jb sbb sub pop push dec jg inc aaa xor sarl sbb push and adc push aaa xor jnp push int cmp sbb dec insl (bad) rorl jbe sub xchg xor sbb call adc call inc pusha cltd test mov jnp xchg rcll pop mov inc call xor data16 inc ret fidivr adc int3 pop push negb in ja rolb jl mov dec mov sarb pop and pop (bad) addr16 div je cwtl cmp loope mov mov sub xchg das in sbb push pop outsl stos xchg jp xlat arpl lea pop je imul ja mov adc shll or inc or (bad) mov mov fstpt xchg adc pusha xchg ret push jb aam dec add inc pop test dec ret mov dec xor in push ss cmc in mov das leave rcrl insl adc add xor push movsl sub outsl das hlt sbb lods jo test push xor out push dec lea hlt sub fistpll mov cli ds dec aam out fimul jp mov or push add jle cmc xchg dec push mov test dec das ljmp loopne push cmpb stos xor jns jae jmp lahf ss pop cs aam fidivr cmp mov mov and adcl into adc ds xor cwtl jbe test dec dec adc iret dec sbb (bad) mov and sub cmpsl xchg idivl pop data16 loope int3 lea and insl xchg dec ss and test hlt lds arpl dec jnp jne or subl iret outsb sub fstpl popa push loopne shrb adc cmpl xchg fsubrp adc mov inc stos hlt shrb clc or test arpl ds shrb xchg lock dec fimull cmp rolb test fstpl and xchg sub xlat pop cmp rclb adc pop sub and fwait push ja shrl xor test cmp inc sub les adc mov insl or xchg in mov pop pusha test dec in sbb jge inc sub outsb sub sbb ret stc test xlat cmp xacquire pushf scas (bad) jne xchg pop aad xchg mov enter cwtl dec (bad) xchg fnsave jno std add add arpl and dec leave or mov scas and mov sub xchg scas mov pushl jge loop mov push pop outsb ret dec xchg std pop es pop (bad) ret int3 add addr16 sti push addl les fcoml js (bad) sub mov xor sbb jo mov lock jne jo pop cld push test fcomps or pmulhw hlt mov fldt add mov das dec push stc cmpsl pop in and mov test jmp inc shr mov cmpsb clc jmp mov jae out ja lock adc rcr add dec int3 add rorb mov mov sub push mov subl pop pop test add imul or dec xchg adc push movhps sub and cmp mov repnz scas into ja or scas lcall dec sub leave adc adc cmp adc in xchg push cli or das or js in add push test jnp enter sbb das (bad) mov push cmp enter sub divl movsl and in int mov jmp push push fisubr xor shrl adc mov jns ja and or mov inc lods dec out rorl in imul push sub rorb lahf push inc cmc cwtl test pop pop inc mov cld aam leave xchg lea jmp sar push xchg loop inc cmp dec and popa and xchg imul aam cltd cmp mov stos jne repnz cmpsb test (bad) int3 cmp jbe jne dec (bad) aam mov mov (bad) fisub pushf in aaa push dec rclb xor jl loop and mov push pop sbb cmp popa add pop ja dec xor inc or xchg (bad) iret xchg mov push mov daa lea inc or inc imul cwtl retw test cld sbb test or js add and adc ds mov cvtpi2ps xor pop jb lahf add xchg push pop pop int3 jmp or cs ret outsl imul cltd mov push sbb sbb mov das (bad) sti mov push (bad) jns lret add inc or inc jl xchg push arpl stc push (bad) jmp add jp xchg sbb adc roll ret mov add jge lds popa mov daa notb fisubrl pop ja pop test mov inc sub or sub dec stc outsl gs mov fidiv and push add (bad) scas out xchg and mov add cmovg popa mov dec add js and pop mov sahf clc xchg mov test (bad) or xchg rolb hlt gs cmc gs lahf push lds mov or lods addb sbb ds insb sbb pop adc scas lock add jns sub mov es aad (bad) (bad) cmpsl aad pushw (bad) push inc out sub loopne xchg mov xchg sub sbb push std add cmp call or inc pop and ljmp insb fs das cli cmp rol in adc sbb mov arpl sbb sti ljmp cwtl out popf ficom leave mov iret pop inc inc mov and sbb sbb push in cmp adc pop pop cld add (bad) loopne fs mov push sbb and xor data16 mov out div repz (bad) int leave outsl dec or loop das jge (bad) lods popa jmp jae cli jnp mov and dec push xor js insb das fsubr cmp fcmovne cli cmp repnz push xor stc std test fidiv sub jg jle pop adc stos test adc scas iret or sub mov and shll xor enter xor add (bad) cmp mov icebp mov push adc loopne mov outsl insb jne xlat stc jle mov xchg arpl enter xor dec imul inc inc dec sbb jl sub lahf cmp sub adc fdivr scas push pop xchg les xor rorl push movsl mov js int cmp insb dec aad push les add mov out nop sbb icebp push mov repnz push call adc test insl cmp adc jno inc and inc lcall sbbl cmp pusha and fucomp inc xchg arpl int3 stos jmp aas (bad) push pop (bad) mov outsb ds iret fwait test mov (bad) incb mov gs mov out xor jmp push inc adc push lock jmp dec sbb xchg push js jno xchg push shlb sub inc push sub or imul std dec das stc and insl lahf jmp stc das hlt loop or fwait sbb mov inc mov mov cmp lret fsub out test fsubr fimull imul out loope cs loop testl popa mov sub int3 (bad) lock fdivrl mov xchg (bad) mov add shrb push dec mov push ds shl popa pop call out das inc das cmp jg popf push lret sbb mov mov add xchg scas inc inc cmpsb mov nop fcmovnbe add mov (bad) test stos cs call lea xchg insb in sti and push mov dec dec cmp mov (bad) push cs mov add fs and push sbb sub (bad) inc mov pop fmul int3 cmp push (bad) inc mov repnz nop addr16 xchg es scas mov or xor add hlt and in or inc inc cltd cmpsl sub cmpsb and push loopne std mov jg xor xor and jg sbb scas add nop sub insb repnz lods push movsb adc hlt mov and scas jb and fcomps lds mov sbb adc push mov out icebp jle fs xor pop (bad) xor pop jno sti imul sarb or rorb mov jbe mov push xchg pushf icebp push sbb outsb sub cs mov div add lods xchg data16 lds mov test cmp and push mov and push jg push mov out fidivr adc pand loopne sub dec xchg jp or movsb arpl inc cmp in rorb sahf sahf jge pop repz mov xchg nop arpl pop aam or jo in nop jmp mov ret jne adc nop inc sub adc jecxz das push inc sarb cmp cmp loope popf fnstenv add jae jmp sbb mov xchg push xchg mov sub xor sbb ficomp jmp in xchg jmp fbld and scas imul jbe adc pop mov data16 jmp dec inc dec js arpl cwtl leave (bad) adc loop daa xchg sbb test xchg aad dec cmp cmp loop iret xor lret sahf fistpll imul fisttpl sub xor xchg pop pusha inc or jecxz and shll and scas pop sarl lahf dec sub mov arpl orb addl roll ljmp lcall sub in or pop mov adc dec cmp push std shrb mov sbb gs and xchg push rorl push push pop inc adc inc pushf divb adc push and cld mov fbld ret ret jge mov jmp mov adc lods in xlat pusha jns cmpsb jp sub push mov jecxz pop iret jecxz sub lret imull insb movsl xchg ret pop cs nop inc jp or pop mov es cwtl nop pop or push pop test cli ja fist lods sbb fwait push iret outsl out lods add cltd sub pop lahf pop dec mov cmp push or push inc or cmp (bad) repz les push (bad) pop fsubrp fwait add lock jl sub enter in sub shrl or xlat dec je push add lds lods fwait jae xchg push or sub aad addr16 sbb hlt rcr sbb sub std shr jbe fildl inc (bad) shrb pusha ret aam mov jge rolb xchg call or ljmp repnz lds mov dec dec inc and xchg (bad) cli jno (bad) xor stos or lcall xor sbb pop into add push fldenv jmp (bad) ret jle jg std inc cmpsb pop call cmp jg mov int mov out es xor test sbb add add push sahf or int3 (bad) and imul in push outsl sbb pop xchg fiaddl sub xchg push insl cli (bad) mov int3 and scas stos fistp mov int3 out xor push sbb jb je push mov adc fwait cmp or cmp ja sbb and lods sub push out push mov imul into andl mov mov push jns enter into dec pop lret data16 sbb movsb popf fimull mov gs faddl mov lcall jno (bad) test out sahf test lods mov mov flds inc mov xor sbb sbb add je sub jno bound insb pop ja mov xor inc xchg dec push inc popa mov push lret xchg lds bound rcrl inc int3 out pop xchg push jg pop insl jno dec or push jge out pop mov setp or sub cli adc push xchg mov cltd jo test push inc mov push push rolb sti add sub test mov test mov adc ljmp pusha or (bad) out mov dec cmp out sbb push test jnp pop testl dec mov test out inc es cs and cs push mov das push pop ljmp lahf (bad) mov and dec mov das mov aam inc sbb xchg ror mov mov dec test or xchg adc jg loopne or cmc sahf iret xor jae nop dec fistpl xorb push inc xchg dec sub lods fsubs ljmp test sbb into scas mov pop add mov stc add dec aad repnz or jb mov pop lds dec loop and xor or xor sbbl mov xor mov xchg in icebp mov xor cmc xchg shrb fdivl fisttpl in or movsb mov stos in aaa xchg mov fisubrl push addr16 in inc pop sbb sub xor jno sub inc pop jg leave push jnp mov int scas add mov imul mov or lcall mov lods mov (bad) mov or sbb mov lods mov cmc mov (bad) sbb jbe mov pop gs fsubrl pop in mov fdivrs lock jg aad pop xchg jbe add cmpsl loop (bad) hlt (bad) idiv push sahf shrb inc xchg mov mov mov fmuls out sbb sbb inc push dec addr16 test jbe ja fmuls out aad push sahf xchg movsb decl lahf adc jo imul push scas (bad) call push fwait and cmpl rcrl leave and sub or fistpll gs sbb ljmp lret cmp pop jle jg idivb jb jge adc or mov je out stc add testb gs xor fmul pop cmove mov push pop movsb sti test movsb movsl adc xchg cmpb int3 clc test push sbb notl xor mov push lcall lods dec iret dec fsubrl fistpll call sub xchg push xor jge enter aas data16 sbb out cwtl mov jmp jae pop cmp int3 push add sub dec out clc push inc stos mov iret jmp cmpsb add test push arpl jp mov cs rorl push addr16 ljmp pop ret subl movsl pop imul repnz pop and pop imul cmp mov and inc movsb addr16 mov cltd je adc bound mov mov sti mov sbb mov pusha inc loopne mov je fadds insb xor jg (bad) jg fs je adc out adc arpl add xchg xor sub outsb push or push in mov loop xchg mov mov xor or pop int3 std cwtl jae cs (bad) mov pusha add mov xchg js popf or lock pop cwtl (bad) cmc pop mov push dec add aam push and sub (bad) je int3 test xor mov lahf sbb add jo push jecxz test xchg nop (bad) mov mov or pop xchg popf mov imul push sub cmp lcall andl aam push mov loope stos add jmp hlt int3 in xor xor fidivrl pop cs ss pop test and dec pushf mov xorl out and mov into repz mov mov inc lcall stos adc pop in rcrb jp (bad) jge inc sub push fs icebp gs pop mov pop enter mov mov push sub sbb mov insb xor push jo out nop sub mov mov aas mov jns and rcrl pop test sti imul dec (bad) in push aad xor pop (bad) adc (bad) cli pop nop xor xor clc inc mov jge jb and rcrl dec xchg add or push mov lods bound mov lods xchg insb imulb mov cs out mov cmp fs lret push fldcw std repnz daa or (bad) jae into mov aam push sbb lahf xor sbb cmp daa adc sahf ljmp dec (bad) idivb flds and sub adc add mov outsb xchg out into cld jp (bad) mov int3 setb push in xchg cmp ss xchg push xor or (bad) push (bad) cmp or jge fdivrs ss js pop jb (bad) hlt es (bad) mov sub dec jbe enter cmp cld adc or jmp in addr16 push adc mov shrb push nop les cmp push mov dec in mov imulb scas (bad) pop jmp jns rclb or mov xchg add cltd cmp scas xchg cmpsb ret adc fwait ret mul xor xchg cli jns leave mov lods jns jns pop xor mov xor mov add in mov xchg ficomp ret aas add cmp stc add and pop sti xor aam dec addr16 imul int or pand jecxz xchg mov mov jae jp fldt addr16 ss aad ret call and sbb pop clc cmc xchg aam jns lcall inc xchg das and pop aas gs stos mov stos cmp adc or push test xor test std jae push ljmp sbb rcrb sahf ljmp mov mov mov mov out es stos and push and add xor outsl pop dec push or push mov ds xor mov lock adc mov inc pop adc dec popf (bad) mov rol and cmp push and hlt jno jne out and push addr16 fs mov xor mov mov mov (bad) xor inc mov stos inc xor enter outsl xor leave cmp jecxz lcall clc fist inc sahf aaa sbb mov fcoml sahf push cmp insb jo mov in mov sub xor data16 mov fstps push (bad) mov sahf ss fstl dec out (bad) movsb test cwtl mov sbb movsb inc jp add sbb dec repz sub mov std outsl repnz je les sbb aaa lret xchg aaa cmp fwait stc mov in dec and xchg icebp cmp dec dec xor js dec pop movsl cmp push in mov pop movsb (bad) xor pop sbb lds pop movsl (bad) inc das orb andl mov jnp jge sbb mov je repz xchg call dec mov jbe pop cmp in out mov push adc pop sbb push or dec repnz pop sub or cltd mov mov dec adc es out sbb or pusha inc jecxz pop in sbb jne test sbb fistpl pop add or push jbe std mov mov repnz xchg out mov pop xchg loopne or cmp ss aaa sbb mov jbe lods xor mov dec popa lret into mov sub addb or and jae mov pop test scas sarb les jb pop add add rclb xchg decl daa (bad) xor test push addr16 mov in jo pop and xchg popa jns adc cwtl xchg vmovsldup jb in mov mov hlt sbb push mov mov in ficompl pop (bad) pop jmp test or jecxz xchg dec sbb add and repnz dec cmp iret call fisttpl pop rcll mov rorb into imul or mov jne pop sti sbb xchg jns les sbb add out xchg mov clc xor pop jl je scas leave add loope (bad) jnp xor mov movsb pop jg xor cli sti or sarl and into sub jnp ss cmp mov mov mov daa ss flds lock mov xor or dec (bad) in mov dec fnop xchg loopne add imul pop cmp mov or sub mov push fucomip mov in jo and out jmp mov or int add test fldz adc cmp call sub dec imul xor movsl mov ficoml jb adc or xchg fcmovbe out add add outsb or push jae xor cmp out andl pop test mul add sbbb xchg lret sub std dec xlat pop push cmp in fildl dec adc adc in inc cmp or in stos aad mov xchg pusha imul inc push mov cmc mov mov in push jne add xchg jmp stos inc es ss jecxz cld fbstp std scas adcl pop cltd mov xor outsb ja lds addr16 int les fbld bswap pop dec dec icebp rcl or faddl pop dec mov gs dec movsb mov movsb add lea push jnp div (bad) push and cld or popf and dec sub push sbb orl sarl stc into and push stos sub adc imul lahf or sub es rcr or push scas cmp das jge push scas negb mov sbb sarl jmp sbb jno jo mov xor xorb mov cwtl adc sbb mov test popf jl push push adc pop cmpsl imul and xor push or pop pop out xor dec loop test inc sub sti push inc cmp inc xchg mov rorl popf sahf (bad) nop jbe push mov test frstor xor xchg push xchg add push mov fiadd mov cmpsb and clc pop into push das ret inc sbb jg jmp test xchg pop jg inc push rorl xchg int jmp and adc cwtl fidiv insb xorb sub pop dec roll xchg js test lahf mov call cli cmp rol jns cmp inc add idivb cmp lcall loopne js loop jg clc repnz test dec fsubrs in add lods cmp cmp mov adc fmuls (bad) sbb arpl mov adc inc cwtl xor xor cmp out movsb nop xchg outsl xchg ret fucom jmp test push dec pop dec and mov sahf fild (bad) xor fsubrl and pop test jo test test out pop mov out mov mov aas fbstp xchg shl notb ja mov scas jno,pn in (bad) cmc popa jbe inc fs lcall fimul add imul mov (bad) fdivl push imul sbb and cmp push cmp and push xor add cld push das mov ret nop adc push sub and daa add sub cmp adc in adc xchg sbb push and shr test clc shrl xchg pop cwtl popa xchg cmp mov mov loopne inc mov dec popf popf mov cmp jecxz or fsub in add jmp fdivrl icebp (bad) movsb lret aaa lret lds and dec pop push sbb jno add dec xchg out loop repz cmc pop add int3 xlat add dec (bad) pop push mov scas add loopne inc xor sub inc into dec (bad) jmp fidivl lods out jnp cmpsw push cmp fmull rcll push scas jl mov or mov mov or jo ljmp or sbb (bad) jae mov outsl in push les stc int sbb in mov int3 jb mov scas mov jne dec stc sub out push jbe jp mov shl push clc cmpsl xlat mov arpl int xor sbb xchg in cmpsl hlt fisttp or jbe inc (bad) xchg pushf aad stc and mov fs or cld push repz jno dec (bad) sbb xor mov repnz sahf mov lcall je mov fsubs jbe adc dec gs inc inc pop or roll into jb lods sbb push sbb fldcw mov mov movsb cwtl xor pop sub xor mov push jl pop stos push mov xchg dec sbb ja mov xchg test cli (bad) or out (bad) into into mov (bad) fcoms testl xlat ljmp or ljmp jmp icebp leave lret xchg push xchg mov jge inc inc cmp into jg inc call insl or pop fadds inc push jg xor fsubrs jo lds sahf mov sub push gs jl (bad) jmp test mov inc mov xchg dec addr16 daa or imul or out sahf imul cmp add xchg movsb sub cmpl xchg (bad) jae dec in loope jnp cltd aas adc mov ss dec repz xchg out mov daa pop push mov sub adc fs jle adc in push or insl pop lea iret addl add shl jb inc daa mov sti xchg adc xor jne push dec js nop xchg add push arpl daa xchg pop icebp (bad) je test add mov fwait cs shl bound cmp (bad) gs addl ss cmp scas (bad) or lret xor pusha push xchg out je mov rcl scas loope in sbb pop or insl mov cltd mov mov mov xchg js add in push sbb fdiv xchg xlat in mov cli js jg in mov dec stos arpl shld jmp adc bound push out loop ror jns sbb adc pop mov ds push lret imul in adc mov fisttp movsb push or pop aad push out adc divb sbb add (bad) stos scas pop test hlt mov into dec inc push jb xchg push cmp jmp push pop mov mov mov and pop mov dec cmp lcall js imull out inc adc sub lods dec mov sahf dec (bad) xor ljmp cli adc and and mov dec test dec xor roll mov std push gs js sub jmp cld lret adcl cmp (bad) pop xchg or cmp mov insl mov scas imul scas cmp cwtl dec pushf psubd out mov bound outsl mov mov mov push push lea dec xchg lcall push inc stc inc jl aaa iret out sbb cli add icebp iret lods mov jb scas pop int3 fiadd adc mov push add rcrl push fmull mov add (bad) lods dec fmull mov sbb dec andb out adc popa mov sub xchg call rcr loopne mov or xchg pop movsl add sub fistp lds jg sbb mov nop mov sbb mov pop and add xchg js adcl mov sbb xor jle hlt dec or sbbl out add inc lret addl into movsl cmp dec pop jmp mov xchg push inc sti ljmp (bad) jmp in in in cmpsl je sbb mov cmp popa and or cmpsl hlt scas movsb mov sub xchg mov cwtl jle mov dec jo js outsb lea mov pop les mov add push add nop lock inc xchg rolb int bnd test xchg sub inc repnz pop and xchg lcall cs add cltd or dec ss shrb jmp jnp test adc imul lock adc addr16 inc cli rcrb fdivp fisubrl arpl cltd aas ja adc add xchg jle add mov cmp loopne inc fs lcall stc gs push or dec movsl push pop arpl or cltd bound ficomp sub dec push sub mov mov es mov jbe inc cmp dec ret mov jae stos add aam cwtl mov clc dec jl cmp jnp xchg pmulhuw mov mov mov repnz xchg push sbb (bad) pusha cld pop sub add pushl jne mov jnp hlt or xchg jnp jp dec je fsubrs adc cwtl jl jnp mov popf jp mov mov sbb pop add cmp xchg mov sub xlat cmpsb scas inc jg dec mov popa stos scas mov das xchg aas je inc and popa xchg test lahf adc lods movsb insl repz loop pop pusha add daa xor (bad) xchg ret rorb dec jmp out (bad) xor lahf push test adc es or (bad) icebp mov cmpsl fs fs xchg lods icebp jecxz mov sub (bad) hlt (bad) mov dec pop ds mov mov loopne cmp dec cs int mov fnop mov imul scas sub das lock mov push pop sub and jb mov jp sbb cmp (bad) sti mov mov je and in adc pop lods mov cmc pop inc cmp push cli aas sub push cmp lods scas fnsave aaa xor pop mov (bad) dec and lds repz inc (bad) jns push push sbb lret sub rcl xor mov adc cmp negb add inc lods pop or add jg push dec (bad) xor mov jge enter fs mov mov mov add sub add in xchg push mov lcall push repz jmp add push mov js iret cmp xchg sbb xor and ja lea dec sub lods rcll addr16 (bad) cltd mov or shlb xlat in (bad) mov stc iret push inc pushf xor mov ljmp jnp sub lock cmpsl adc ror pop cmc cmp aam push iret fldl stos call pop push jmp std mov mov lds inc mov fisub inc int lahf adc mov push in fldenv jno sbb test jmp sbb push repz fistpll adc cli lock xchg fisubl out dec (bad) lds jno jb mov shll sub notb xchg push lret ja rcr adc popf or inc adc push mov test sub mov pusha icebp and inc dec adc test aas or fdivs cmpsl sbb add je movsb adcl sub (bad) mov scas jge mov xchg outsb dec pop int daa das (bad) pop mov arpl lods jbe insl pop pop and inc stos clc xchg sub (bad) cmp dec xor cld xchg notl sbb in xchg pop fwait push stos pusha sub xor jne jp in lret es cmpsl push adc sbb imul mov and inc push out (bad) icebp and clc hlt popl arpl and negb rcrb pop stos fmull ret aaa xchg push xchg lret lea cwtl xchg or lods push jg cwtl ds lret ljmp cltd cmpsl (bad) mov cwtl push xchg cmpsb and bound sbb lds addr16 ljmp inc ljmp js sbb stos test (bad) pop mov mov ds pop dec rclb cmp mov (bad) sub dec movsl pop jbe mov or or out loop sub mov xchg pusha bound jne push lcall icebp sub jae loop lahf inc stos fwait xchg mov xchg int3 call outsl jg mov mov repz pop mov and out mov call repz pop in ja inc add and repz daa icebp add sarb inc imul adc inc jb dec pop and iret push aas les insb sti dec into daa aas fwait xchg mov jnp xchg add mov cmp sub (bad) ss pop xor lret xor lea (bad) cmp jmp push push xor mov sbb sbb jge mov xor nop push inc mov adc mov adc adc mov ja icebp movsl rcr add pop mov aam lcall test fprem adc (bad) xchg and popf push xlat xchg rcrb insb mov pushf xor imul fdivp or out xchg jns fistp fdivs int inc js faddp dec std cmpsb (bad) jno sbb pop incb dec dec pop insb scas xchg dec ja insb cmp push hlt sub lret call loopne or mov push cmpsb ficoml adc or jb xchg inc (bad) testb xchg lcall xchg jmp stos adc inc ror or fwait mov or sbb mov int xchg pop pop sub cltd cmp (bad) in cmp xchg push rcll sahf dec lret sbb add sbb mov push inc xchg mov dec cmp inc mov sbb adc shrb rolb mov inc push dec dec clc cs ret movsb ret inc push jo sbb lcall xor out fiaddl repnz xchg push aad fs pusha xchg je jl inc insl call jp fstpt andl add mov icebp popa lcall mov cmpsb (bad) mov hlt mov aas leave jmp jo (bad) in aaa xchg stos add mov fsts ds dec dec add jg mov and es adc test iret lods ja mov adc pop ret mov fsubrp popa add dec push pop (bad) lods shrb je mov lcall rcll mov cmpsl mov push aad mov adc adc mov pop jp movsb enter push ret jnp push pop xchg std cltd ja jmp jnp pusha adc out int3 mov fnstenv sbb pop dec mov push mov ljmp jp push xor push ds sti mov push test (bad) fmuls nop xchg in sub pop jns add mov or cmp jbe xor cli stc (bad) sti sub pop and add jo out vdivss scas aaa add push fdivrs or push mov pop int into mov insl je stos (bad) fst xchg jecxz hlt scas fisubr sbb sbb cmpsl sbb lea loope adc pop and add testl mov (bad) lods xor push pop adc gs or loop es mov enter pusha pop xchg sub cmp pop js bound xor int3 pop cmp stos insl test push mov cli fsubrl aas or and rcrb add mov sbb fs sbb sbb xchg outsl jne mov sti xchg fisttpl mov cmp (bad) incb cmp fbld cmpsb (bad) mov adc jne or or jae push inc xor cmpb pop test (bad) hlt rcrl lds xor cmp push pop movb xlat addr16 mov sub stc test push icebp outsl jnp jnp sbb jecxz cmp mov or pushf cmp daa adc lods into jecxz cld imul fbstp and mov push adc sbb int3 mov add pop fcoml push loop dec insb dec mov add rep clc sbb jo add xchg dec movsl push stos pop outsb sub int3 mov mov int3 add outsl and popa push inc fnstcw push add adc sub add jne std mov jmp mov clc inc dec leave stos outsb pop (bad) daa push in test popa or xor int3 push call push shrb xor inc xor test push faddl mov aam cwtl xchg outsl add sbb push and xor jge mov lods js rcl push outsl sbb repz out sub iret jnp gs push sti pop insb movsl or add and mov xor fcompl (bad) xorl aaa ss sbb cltd pop dec push and ficompl js add das push and inc hlt lds jb jle mov xchg pop and dec (bad) sbb pop cwtl cmp mov and pop adc data16 cmp inc xor icebp je cmp lret xchg cmp icebp push sbb std movsl push sbb mov fcoml sbbl and loope sub (bad) imulb sbb mov dec mov pushf mov lods subl xlat pop scas iret (bad) out jo in loop je cmpsl jmp pushf pop nop cmc movsb xor pop out dec ds dec jmp mov test dec rcrb cs stc jns out mov ror addr16 cli jl fsubrs jecxz mov frstor lret mov jae mov adc sub fistp jbe and pop loop sbb stos int popa xor (bad) ja mov movsb mov xchg cmp mov sub hlt xchg (bad) es shrb out jecxz jo xchg lock cmp sahf xchg mov mov pop aaa in ret into jp jp int xor cli iret mov call mov lahf jmp xchg (bad) sub fimul push jb cmpsb xchg in push xlat adc mov jbe pop cmpsl mov mov mov lods push push sub adc mov (bad) sub jae pop enter imul mov mov dec sbb leave pop adc xor mov sub mov in adc loopne xchg mov lret jae jecxz sub out mov sbb cmp dec add fsts and hlt mov mov mov push sub add pusha add (bad) sbb adc sarl and aad movsl addr16 or inc cmpsb push cmc int in int3 pop dec pop sub xchg (bad) xchg and mov out mov mov mov xor cmp sbb aad or mov jb adc push out es mov pop mov or mov scas loope or push (bad) jl add gs lcall (bad) aas andl (bad) outsb mov jle and scas push popa lea mov sub jbe push cmpsb sti cmpsb (bad) insl mov out jnp lds fidivl stos jns or clc or push mov insb (bad) inc push dec out push cmp mov lcall push push xlat sub test leave cmp negl fiaddl jg inc and xor insb clc aaa jecxz jp in sub jb mov scas mov jmp or add dec xchg xchg dec fnstsw adc add out daa pusha popf sub mov cmp movb cwtl push add xor mov inc sub xchg jb lret mov mov xor lahf ja xor xchg mov xor or mov stc pop dec or rorl ret ljmp mov out (bad) mov ja outsl pop sub mov pop add xchg imul (bad) mov pop mov adc jno xor pop xor and ljmp fistpll mov imul aam inc test orl pop es adc dec aas jbe dec cltd test cmp stos dec mov sarb sub dec dec iret cltd jno outsb mov aas pop and ss mov dec das mov cld sbb mov jae push xor jns dec lret adc cmp stc mov mov rcl and (bad) xchg fisubl (bad) lret dec mov in mov and addr16 xchg fadds (bad) sti inc stos decb in mov pusha enter (bad) dec aam inc push pcmpgtd cmpsb and stc aaa dec inc int3 inc sub hlt xchg mov outsb leave int3 dec sub pusha inc mov mov shlb adc movsb sbb fstp fdivr sub sbb jmp (bad) mov dec rolb pop lock jno gs pop (bad) pushl xor cmc data16 lock sbb int jl (bad) mov sub push mov cmp loope or fcomi (bad) and push mov push pop (bad) mov push push inc push inc popf stos inc jne xor fdivrl nop (bad) fcoml sub push cmpsl or cmp test lea aaa mov (bad) cmp mov aad popf mov xchg pop mov mov cmpsb push inc outsl insl xor loope pop insb adc (bad) mov sbb je cmp mov xlat stos es outsl flds aad cli sub ljmp rolb and pop (bad) lock sub jp psubq mov adc push push adc aaa cmp scas sti add adc into pushf and adc cmp movsb rol lods push lods arpl push push push dec pop xchg sub mov sbb mov push fsts cmp (bad) cmp gs inc leave test ret push dec cld sub cli inc push test std dec mov jp clc outsl xor test pop popa loope dec imul adc mov mov bound bound adc push gs cmp pop arpl vpcomb mov shrb pop pushf cmp or mov and pop pop dec (bad) adc aaa leave jmp inc in aas add cmpsl (bad) and repnz cvtdq2ps xlat movsb mov mov rclb jbe repnz sbb xor lock fdivs mov adc rcrb or jg inc lock or out adc adc xorb xchg sbb mov imul lea add push jne pop push loopne xchg jg jl popf outsl pushl scas adc and daa or or out stos (bad) push cld pop scas daa mov sysenter jg gs mov ret sbb jle je mov dec ret popf sub les mov sub mov pop xchg adc push pop inc dec sub inc xor fist mov movsl inc cmpsb dec pop pop push inc dec add movsb pop aam sub jecxz fyl2x pop adc and pop ljmp movsl int3 negl nop icebp jnp cmp pop cmp movsl (bad) mov ljmp pop cmp mov push pop sub dec cmpsl add mov or pop xchg pop mov adc loop ds mov xchg into xchg outsb xor cmpsb jnp xor jo inc add mov pop xchg cmpsl shlb sub mov stos out xchg adc mov cmp pop in pushf sti inc sahf pop cli mov cmpl sbb xchg shll mov jns inc xor pop pop ja and mov out test dec les jmp jne add pop aad addr16 jl mov mov xor mov jecxz push in jo add push enter dec inc fstpt push jbe out mov popa imul pop add lcall adc in jge lcall std and stos lock pop fldl mov cs xlat insb push inc add (bad) shrl and pushf push scas xor and mov ja push aas pop xor sub jns adc loopne,pn mov mov adc fwait add sub push or fwait mov and (bad) push out je cmp xchg aaa cmpsl jo ret clc ret aam mov add imul sub outsl push xor enter and pop loop jns cmp aas push mov lcall pop stos mov fstl insb imul addr16 inc bound hlt loopne xchg cmp (bad) sbb xchg sub fcmove inc inc sbb outsb out jns pop sbb (bad) and and and adc sbb nop cltd inc xchg int3 adc leave lcall pop pop movsb jno cmp sbb sbb dec pop mov std in inc xlat clc push mov sub dec test add dec dec sub (bad) std shr ret in outsl xchg cmp xchg mov notl test xor inc dec js mov adc mov mov sbb or movsb push xchg adc xchg lds sub in xchg fstl imul sub outsb mov adc or sbb (bad) mov pop (bad) mov pushf mov mov aas xor lods scas out jo jnp stc lods xchg idivl scas fstpt cmpsl in out repnz jb aas fmull xor not dec and mov mov mov mov mov scas xor repz cmp in int cmp mov js repnz sahf inc fbld fidivl roll pop jo,pt adc jne sub push inc out mov nop loopne jge dec lods in aam push mov cmpsb jecxz mov insl pushl das mov rclb das andl gs mov scas mov mov inc decl aas or inc cld xchg andl fcompl inc fimull (bad) xor jns push movsb pushf or lahf popa (bad) mov cmpsb inc imul ljmp push lcall test inc push mov xchg xor and test call pop sub push (bad) test cmp repz mov sub mull xchg push fsts ret and inc movsb lock inc (bad) sbb in dec xor ret mov ficompl shr out lret adc add adc out movsl js sub ror in aad mov popf mov pop fisubr adc xchg ljmp fist lret leave push insb out and cwtl loop aam fisttp in add aad jnp movb adc (bad) fisubr test sub lods mov popf pop clc out adcb loopne out dec ds lea rorb pushf xor out test outsl sbb xchg clc insb xor mov pop xchg fnsave sub mov (bad) not adc ret clc add push mov test pop scas or xlat push xchg add loope xor insl lods push jle xlat sbb cld fnop xlat push sub pop pop mov popa xchg fildl mov lds loopne cwtl (bad) mov loop jl pop les loop stos mov addr16 cmpsl add xchg cmp loope pop in mov imul aaa sti mov stos adc push add push sti jle add dec cmc mov add xorl les cmp repnz nop sub enter mov int je sub lods or inc (bad) dec in arpl adc xor in or pop ror sbb cmc or or lahf push push sub or sbb fnstsw std nop pop ret lock ds (bad) movsb pushf jbe pushf sbb (bad) fcomip mov ljmp mov mov es cmp jg xchg out shll clc xchg mov imul loopne sub inc dec pop and jns int adc enter jmp cmc (bad) push out sub xchg mov or bound jge push out sub data16 int3 (bad) xor loopne testb xchg adc add inc pop (bad) mov sub sbb mov sbb jp lds push add repnz iret ljmp clc cwtl or roll in iret loop pushf js push push stos xlat arpl aaa cmp add pop push jle xor lret mov inc scas dec or popf test push push pop dec mov push mov (bad) pop xor push or andb mov push push mov in fs sbb mov popf xor popa jge imulb pop stc aad jge jno icebp aas pop mov (bad) mov push hlt jmp sbb lret xchg cmp out xchg cmp daa jae dec insl adc adc mov lcall push push push push cmp and push adc add or outsb sub mov fsubs xchg mov gs jo outsl push xchg leave fxam lods lods out xchg loope mov adc jb jbe and cmp or mov gs (bad) jno xchg lods and cmp cmc into bound test jge inc (bad) loopne test push xor adc and add adc push popf adc xchg adc negl popa xchg mov outsl mov cmp enter cmpsb cmp stos mov ficompl popa pop rclb in adc stos or popa fldenv mov mov mov jecxz inc in push ficomp push push or push fsubs inc sub std pop jnp xor pop mov movsl pop push loop fisubl imul dec int (bad) xchg jle es mov mov jecxz adc sbb aam mov add and dec test fsubrs (bad) sub push cmp or in dec aam dec sub and pop stc mov sbb fsubp adc dec xor sarl cmp scas xchg hlt adcw leave add push mov push pop jl int3 push in mov and jecxz inc lock mov das (bad) pushf out je push (bad) mov fmuls je xchg loop push mov sbb lods xchg imul inc jle cli push mov mov sbb sub mov inc xchg aam mov sub ja lcall outsb in sub xchg pop daa pop fisttpl xchg sub or mov arpl xor into push cmpps cld dec in and or push ds push stc mov dec fisubr cltd cld movb lock das lock in stos xor test fwait outsb xchg enter push cld cs aas out pop idiv fstps scas sub or xor push mov xchg inc ljmp test mov arpl lds addb call push cmpsl scas (bad) push jl push repnz imul cmp and cmp icebp or mov mov or dec mov add aaa mov push sbb mov or adc fadds and pushl mov fs daa js out pusha mov jmp mov inc aad inc cwtl nop push pushf lret lret add jae jnp fwait sbb xchg (bad) enter neg pop adc (bad) (bad) je sti jg inc out and icebp jg push into add pop mov in xor out mov pop out cld into gs fsubrl loop sub xchg cmp cmpsl sub cmovbe sbbb cvtdq2ps jge dec and stos jmp fistp scas in out mov in test jb (bad) xor ljmp mov gs inc push mov pushf dec pop ror ja mov pushf je cmp sti or test rolb xchg sub call lods mov jle mov je nop iret and xchg fsubl add cld frstor (bad) jno or adc cltd lret idiv sti rol pusha mov cltd outsb push cltd mov dec lahf aaa aas sbb in std sbb dec mov and popl and lds and add and insl sub push into jnp int daa mov adc jp sbb mov das in or insl or cmp and add rcl push lret mov test fcoml ror sub rol in dec adc pop mov enter lds xor stc mov sbb in mov icebp sbb movsb pop int3 or ficomp loop add jle rcrb xor nop fnstsw daa mov cltd mov and sbb push sbb sub out mov lret int3 lds jns aad adc mov adc lret negb subl and xchg inc dec (bad) (bad) shrl pop add jo in ss push shl pop sbb sub jnp movl cmp mov cli sbb pop mov daa pop cmp in sub shll xor sarb mov icebp or jle jecxz sarl std dec jg mov mov lret movsb mov ja mov cltd enter (bad) mov loop cmp cmp fwait ljmp jnp and daa add ja out jae cmp mov adc rcll lock mov repz fimull addl mov cmp ret insb add les push mov xchg cmp (bad) mov cmp (bad) push add dec mov ret xchg fiaddl xchg pop pusha int xor das and pushf lcall ljmp lcall decl bound dec mov pop test fdivrl xchg mov add test int push stos lods lcall lock test sbb out pop decl add movsl cmp adc popf stos cli pop cmc sub mov imul adc mov push pop pop movsl bound lods pop pop add stos in pop lret sti mov out mov cld je or and int3 es mov test xlat push dec jbe push repnz pop out bound jecxz add inc mov lea mov dec push nop jle test div fsin nop fcoms outsl add jmp dec jae push insb or sub or sbb pushf adcl add sub xor cmp mov dec sbb mov jg add rcrl add pop or pushf and xchg dec pop jne cld xor add mov cmc pop (bad) push jbe cmp adc icebp int3 das scas arpl and mov fucomi pop xor add mov mov dec xchg (bad) sub add jb adc sti add stc or mov mov aas lcall fldl mov mov imull scas pop les xor dec pop jp outsl popl sbbb iret enter lahf push mov sub or push loope adcl xchg scas fnsave jl insb pop adc scas call pop ficompl mov aas ret push sub nop push dec sub stc add xor add call sub push ret call je xor ljmp pop sub fmull daa sti scas jbe dec cs and ljmp aad in cmp inc outsb jb inc jbe icebp mov cli int out scas (bad) inc jg mov mov clc int jge scas insl sahf ficompl ret inc push push mov inc sub pop mov cs xchg push inc into mulb and jae sahf test lcall or fchs xchg jg fisubrl aam xchg ret iret sub and (bad) sub dec cmpsb and cmpsb roll data16 sbb xor fwait mov adc dec lret test adc je sbb mov pop push dec mov xchg add test loopne pop sbb or add mov mulb (bad) inc dec sub in stos xor pop mov fdivrl mov add sub (bad) sbb xor sbb int3 fbstp cmp mov inc mov mov insb rclb sbb sbb jo (bad) hlt arpl std lret idivl iret mov imul sbb ret mov xchg (bad) or mov clc cmp shl decb stos sub (bad) (bad) jmp jne scas jle outsb cs xchg (bad) mov and sub cmp sub or xchg cli insb dec cmp flds ljmp sbb jb fcomps outsb push loope add aad pop push and sbb sub jl (bad) icebp adc mov cs mov cs pushf mov xor rcl (bad) js or addr16 sbb shl push negl lcall ds add enter lock daa cmp or icebp gs lahf jg mov and dec aam mov dec arpl test lret mov pop iret cmp mov inc imulb in lods mov es outsl pusha dec xchg push pop cwtl sub mov clc push outsl xor cltd sub xor iret jo clc cld mov mov aas dec fdivl xor pushf jmp ja fistpll arpl pop fwait and sahf xchg aas push mov sub popa test add dec push inc add je adc add jmp in jno stos and xchg int stos movsl dec dec pop repz xchg jge add fisubrl enter mov scas dec (bad) jns (bad) xor push xor in add shl add std ss jo cmc std mov mov add cmpsb mov imul in add xor sahf push adc cmp leave sbb (bad) es sahf ret pop xor bound lcall push dec and enter cli lret icebp testl notl in imul sbb jg mov mov pop adc mull daa jp (bad) ja jge cmp add dec lods ret (bad) std lahf jns out dec and lret jb pushf in test iret pushf sub adc std push cmp (bad) addr16 mov out movsl ds xchg (bad) in les pop cmp xchg pop mov adc (bad) (bad) jp jle cmpsb les int3 std cmp push jns je mov mov pop (bad) lods iret aam mov inc int3 inc dec add dec pop pushf popa aad inc rcr sub dec scas (bad) add cltd lock test and push xchg mov mov ds mov dec cmpsb push popa mov push loopne pop icebp in add pop ss outsl ror fcoms fisub dec xor scas mov sbb and stc dec pusha xchg int sub test std sub xor nop pop cmpsl inc mov mov (bad) mov jb jge negb (bad) and adc mov ret jg scas add aaa mov or mov cmpsl mov inc add xchg idiv dec shrb repz mov pop push or (bad) movsl sbb cs aaa mov sub mov iret fmuls jp inc pop lods mov cmp outsl pop jae call ja xlat addb pop and out pop pop in dec fildll rcrl leave add (bad) fimul shll sub dec xchg idivl rcll or in xor subps frstor pop fwait mov and out jg int3 jmp lods lods orb pusha iret das decl push shl aam nop mov dec fistl in xlat cltd xchg iret dec roll and loop jo out and lret dec inc dec cmpsb add imul inc fnstsw xchg xor jb pop fisubl dec adc add popa mov mov xchg repnz push jg mov fstl xor add xchg das sti cmp outsl xorl stos jmp push ss cwtl jae mov or pop pop fmuls lcall (bad) mov dec xchg xor dec int mov std xor mov jnp pop and lea dec xchg and adc push stos lock adc test mov in adc or (bad) in push mov lods mov sbb cld int3 lea lods xchg mov aas cmp popf in sub inc push negb dec pop mov cmp fmulp enter push mov or mov (bad) cmpsb jnp sbb add cmp out cwtl pop out push sbb mov mov and sbb mov (bad) xor dec nop repz (bad) dec inc lahf inc jmp mov popw mov xchg xor dec sub dec leave in and cwtl subl clc dec gs sbb dec mov mov pop movsb icebp out fstp inc adc mov sub jg push jle mov or cmpsb ljmp iret das jmp mov xchg in xchg jg sbb leave push push or mov (bad) clc int enter in cmc cmp dec popa cmp arpl fmull lock xor push mov ja or fcmovb (bad) dec inc mov mov popa xor dec add (bad) ss mov adc popf out xrelease cld jns jecxz out cmp mulb or scas inc pop add push das and push aam jp in scas lea dec mov jb inc jge pusha adc adc jp (bad) and sbb subb insl jl and mov popf jle adc sbb jns lock jge jne in mov jae add mov ret mov or (bad) ja mov dec insb inc pusha mov mov lods adc (bad) cwtl aaa jl fdivrl scas cli push gs adc adc adc adcb add js shr dec sti test loope and nop mov loope rcll sbb sbb mulb popa inc fistpl sub ret out fimull bound jno leave ret aas divl test xor cmc movsl out js mov push in sti xor xchg bound inc sub pop jmp movsb in loope pop xor mov add xlat cs cmpsb shl mov inc aaa sub push mov rclb out pusha aaa mov stos inc push lcall jge or add repz incl pusha sarl pop movsb adc popa adc pop or sarb dec call lds pop movsb out xor stc ss xchg addb insl int3 stos in mov movsl dec lock jecxz xchg call fwait jg pcmpeqw mov and jb adc jnp dec xorl mov movb pop hlt add mov mov cwtl push js cmpsb pop mov mov pushf js aam jecxz rol rorb pushw test call (bad) js adc ja mov lea lret mov data16 cltd and cmp and (bad) std adc aam out mov stos mov int3 dec inc xchg lea sbb push mov es sbb inc fisubr loope dec fsubrs ret ficom daa push inc lods xor cmc push mov pop outsl ficompl cmp cmc inc pop lahf pop andb dec xchg (bad) inc lds lea add movl push cmc jne repnz sub (bad) sbbl repz insl icebp add jecxz leave enter rcrb mov or add shr cmpsl iret sbb lret adc outsl arpl sub adc test (bad) and (bad) (bad) jmp mov into (bad) stc test ljmp (bad) ja aam inc mov stc inc js mov hlt sbb pop out addl mov icebp adc or fmuls push mov add (bad) lahf push mov inc ja or js imul mov js pop pop out and popa sub cli sbb roll pop fsubrl push je dec stos mov aam dec mov xor mov push adc ss dec jl or rcrl lea sub push movsb cmpsb inc jge cmpsb and adc sub dec hlt nop jge imul cli add ds add repz dec (bad) mov pop mov mov mov jecxz stos push cmpsb (bad) or repz stos xor jns and cs aas push shrl cld fs jge adc jns or scas adc jbe jecxz jmp cmp (bad) sti out aad loope enter pusha cmpsb ret xchg inc mov push fcomps mov mov lods daa push cmp sahf cmp fisubrl xorl push mov cmc pop inc and in in sahf fwait mov test sbb sbb cmp mov pop sub addr16 imul clc mov test out xor lods cltd in andl scas aad inc aam mov add ja mov pop lahf stos sub pop iret (bad) xchg sub inc (bad) stc push (bad) pop scas cld jne popa mov in sub or adc loope fildll pop dec rcrb test pop outsb test sub push lahf pop mov xorl repz enter sbb pop fldl push mov mov ficoml mov and mov (bad) cmp push fldenv or out addb mov xchg sbb push out je cli and mov push mov movsl or adc lock popa in dec mov xor rcrl mov adc mov pop or mov and lahf cli push jmp dec mov lret push push insb (bad) fcmovb or lea mov cmp sub sti xchg xchg (bad) stc sub adc jbe push inc cmp nopl or test mov lret adc fisubl enter push jecxz in push into js int shrl js loope sub ja lret xchg js rclb dec sub setns lahf stc adc lods or (bad) pop int negb icebp fs loopne push lcall movsl ret outsb fistpl dec jecxz repz (bad) mov cli adc in sbb pusha mov or pop lret pushf push or push push push xor jecxz fiaddl pop loop mov jbe mov ljmp lret (bad) out ret xlat cmpsb jno inc add mov dec loop in (bad) lahf push jl rep repz cmp in scas sub data16 lea (bad) ret inc outsl ret pop cmc rcrl (bad) repz xchg add sahf pop aaa inc addl ret ljmp ljmp sub or cmc push inc and push cwtl lcall xchg and lcall mov shrl rcrb popa pop shrl (bad) pop jb fldenv stos shll shrl xchg sbb enterw (bad) jns pop fs mov ljmp jp jae jmp adc ret adc lret adc jl pushf dec mov inc xor mov repnz repz xor aas cmp clc push push mov cltd and mov (bad) mov aas out push or inc push lods fimull xchg adc ret sbbl jo sbb or pop and mov inc call inc lods out sbb int jne incl adc cmpsl out mov cmp mov sbb mov inc into xchg sahf sti mov jmp fwait mov jg lods sbb (bad) xchg aaa mov mov mov aas hlt (bad) fadd gs xchg sbb pop jp sahf and mov imul mov dec sahf pushf mov jg int3 rclb dec fimull into in add push lds decl scas je loopne sarb mov push aas sub lea push pop cmp push mov inc jns cmp or or dec or xchg push cli pop sbb fbstp notl dec jp (bad) mov jo and pop xchg and pop add mov mov loop pop loop jle in inc dec cld xor cmp jbe shlb adcl push xor sub cmpsl cmp jno cmc int sar inc rcl cmp xchg (bad) adc outsl mov arpl iret leave int fsubl xor jae cmp mov (bad) idivb emms jae sahf sub inc outsb dec mov ret jae xchg (bad) xchg jmp jns xchg roll test cwtl jo aam iret mov jp inc pop xor ret sti mov sub xchg push pop push fs or jne repnz sub icebp cmp jle insl and xchg jmp jg push pop rcr rorb mov int call iret or adc push cmc repnz stos sahf or mov leave call xor xchg pusha sub lret movsb (bad) dec push lret pop popf mov cwtl inc orl clc sti sbb lret adc jp dec xchg in jbe dec push mov imul adc add cmp xor cmp mov push pop nop and (bad) in mov (bad) mov scas jne test cmp stos dec sub add out inc dec push push sub imul bound pop cmp ljmp ja jmp insb lret mov loope mov pushf sbbb iret mov dec lahf adc xor jnp adc or int or mov or mov sbb lea xchg pop add xchg enter xchg test cmp jecxz fcomi loop bound add mov dec xlat jo jb fist push cmp imul lods daa sub jecxz cs or cmp (bad) pop loop cmc add jb (bad) jp sbb outsb clc cmp testl xor xchg and int out and adc sbb pop test mov test xacquire cmpl insl jl xor xor inc nop arpl in clc (bad) arpl inc imul mov cwtl fildll sbb movsb dec push pop push add sbb arpl clc inc in je jmp mov dec sub xlat mov inc ret mov adc or in repz mov pop mov push shll call outsl stos aam jnp lret sbb and enter int3 rcrl leave xchg or mov or xchg repz mov ljmp adc inc dec or int3 cld mov aas pop jo cmpl fnstenv enter sbb mov movsb push outsl mov in mov push cmp mov shrb push loope adc mov and fistpl call stos jo hlt test mov push fstp loopne icebp icebp or mov mov push fcmove cmp call fnstsw mov nop mov inc push std ret inc cmc sahf clc movsl rcrl test mov dec jbe jp repnz (bad) daa cli das or mov push ret lods and sbb and cld fsubl in shl lds jo sub mov jmp sbb jns aas xor outsb int3 pop call or push xchg pop xor rcr leave pop outsb adc pop iret and cmp sbb rcr clc pop ret or cwtl mov sbb mov into cli fs lea sbb jmp ret xchg add push add fstpt inc jbe aam (bad) int3 mov mov pop outsl nop pop (bad) jp sbb aam aas jo repnz (bad) (bad) in adc repnz mov or sti or push lock jmp xchg popa and test scas mov pop adc jl js (bad) ljmp adc jg iret sbb jge sbb cmp cmpsb adc mov daa shlw jmp pop dec push cmp xchg pushf xor stc or pop sti xchg sub outsb pop inc jne aas jbe or sbb (bad) push mov das or cld popa sarb les fstl pop ds mov push call dec jno shlb cmp dec add rol inc sub and sbb roll out idivl adc fimull jecxz icebp mov mov pop sub dec mov sbb fcompl aaa jp test cmp icebp cmp cmpl imul mov push jp out fidiv test cld add int clc mov pusha imul fwait jo cmc ja test out jmp jb pusha adc cmp xlat push mov fcmovne and lods in pop inc sbb jnp mov es ficomp pop jge cwtl push (bad) (bad) dec cmp popf xchg mov inc repz icebp hlt lcall pushf sar and insl mov repz inc dec test loop mov sub lea ja js mov leave add jo jl jns test stos jmp insl mov lea cmpsl fidivrl adc push iret loope sub cmpsb fimul push ljmp and lret xchg dec dec mov loopne mov fnop mov test xchg and mov loope mov test imulb fcmovbe fisttpl add jne pop pop dec icebp mov inc xor push pop sbb and and mov jo sbb pop fstpl pop mov xchg pop add mov sti push mov cmp iret mov (bad) int3 jl xlat sarb adc sti (bad) sub clc pmullw lock pop sub cwtl pop (bad) inc ljmp xor sub sub lea mov bound mov sbb push mov inc mov icebp (bad) mov (bad) xor call mov cs mov and sub lret mov in mov jo mov leave adc aam in add stos jbe sub xchg and js push add call sub cmp stc lock jns das add call xchg mov mov sub xchg sub jp or fwait pop out daa mov loopne enter jecxz sahf (bad) jno,pn outsb xchg (bad) or gs std lret adc xchg stos push pop movsb repnz es or pop fidivl test cmc mov adc es lods or jns in sbb or xchg (bad) mov movsl pop loop mov push arpl lahf jns nop fwait pop xchg out mov push mov aaa add and jo or repnz mov icebp adc arpl fild (bad) (bad) pop hlt mov push call in mov inc clc push scas out jge or adc rcll popa mov add push mulb pop cs stos imull xchg sub jns lds sbb hlt test mov test mull les adc mov js and add mov cmp sbb fs cmpsl cmp or cmc pop xchg cwtl push cld mov mov sahf cmpsl pop dec aas out inc sub test or lahf pop out sub inc mov push in push mov inc pop adc dec ds cli dec scas insb das push mov sub lahf aad fs (bad) mov stos sbb sbb sub mov out in fbstp test andl pop jmp scas ret jecxz mov mov jg sbbb mov inc mov mov add imul lods lock adc push mov fcoms xor xchg jbe int3 popa lret mov mov test inc inc jns jno ret pop in hlt jb into movsl cmp and mov xlat call push pop int3 outsl jmp iret imul outsl sahf packuswb pusha stc sub in push dec cmp bound jl leave inc mov mov test data16 aam xchg cmp in xor mov and in jb xor aas lret (bad) jbe inc inc es lcall mov cmp stc movsb xor movsb mov fnstsw pop repnz dec sbb jno into subb loop daa push jl mov leave xor data16 das add cwtl inc cmc sar movswl or inc sub out mov jbe lcall push xchg fidivr xchg jae mov sbb and xchg xchg jno pushf icebp add lock sbb (bad) sbb mov icebp and cwtl pushf aas in adc adc and or adc lds daa aas pop insl sub out mov xchg cli inc cmp (bad) pop pop or xchg push pop jl cli sbbl xor enter mov loopne int3 xor dec pop loope test int mov add sbbl inc jnp pop popa outsl xchg movsl adc pop sub add daa fdivrl (bad) sub fistpl sbb cmp or lea lods xchg xchg or jo cmpsl in orb ficomp mov js mulb lods pop cmpsb dec mov push bound insb sbb scas cmpsl test mov movsl or jmp (bad) (bad) (bad) mov or js sahf mov popa mov (bad) pop mov loopne sbb (bad) std (bad) aam dec sbb iret test cs xchg dec loopne cli push mov into movsb ffreep rclb mov xchg lahf mov ret jno lods in xchg call lret hlt outsl cmp sbb movsb subb pinsrw mov das nop std add adc aad sbb sbb jbe aas (bad) or jg aas mov jp call dec pushf scas pop cmp lea ret mov adc out lea adc pop repnz fnstcw dec test popf add enter mov mov xor push or push jp pop mov push or fist add aad mov adc jg xorl adc cmp dec insb dec cltd adc inc jbe das enter inc enter pop pop jo gs sub push arpl fistpl xor pop fs push xchg and inc iret cli add cld je xor or into xor inc sarl out cmc mov fs push mov das rolb pop repz xchg jo sbb in cmpsb mov and or fild das adc adc or divl mov call mov mov and mov lock push mov loopne js ljmp adc push (bad) fisubl fidivrl in (bad) daa add movsl adc pop jmp jmp das sarb adc aad pop ror arpl adcb pusha push mov mov shrb aam push std add or pop mov in pop pop xor enter cmp repnz jp rolb jp inc jb aas xor lods leave push lret sbb mov sub mov movsl stos loopne movsl pop clc xor out mov aas (bad) ficomp mov mov movsl xchg push push dec jp mov add lret hlt cmc ficomp test je test push sbb xchg sarl mov add add pop rdtsc clc aam mov mov push adc iret add rcrl (bad) xchg lret nop cmp insb nop jl arpl mov pushf xor lcall xchg ret push lods popf xor (bad) cmc fwait push mov test in (bad) sahf xor pop in cmp push pop dec add daa (bad) ficom jns add or jecxz fld1 rorl out pop in xor out add xor popa mov lods xchg lods mov mov xchg mov dec mov cli test (bad) sti (bad) mov dec add cs loopne pop orl cmpsb mov or dec push int3 or out jae xchg clc outsl div test jns fcmovb ficompl (bad) notb push inc and or jne inc aad dec sbb mov out cmpb (bad) push sarl pushl arpl ljmp ljmp sub test mov lods add pop xchg orb lds mov cmp enter cmc push sarb jmp cltd xchg mov clc xlat clc adc and lds (bad) cmc mov clc sbb mov in lahf sub xor lcall (bad) dec mov xchg mov inc out int cs (bad) mov cmp cmpsb add sahf jbe ja scas xchg es sub sbb pop sbbl xchg xchg inc mov stc cmc int3 outsl gs dec mov sti mov enter push sub aaa and or push pop xor cmp xorb fild jge (bad) push xchg call ds aaa (bad) mov pop scas jmp adc jg repnz jbe push or add xor sbb test xlat lods cli (bad) outsl test mov dec (bad) repnz pop push mov lcall inc cmc cmpsl aas jo jge adc jo mov cmp mov sti mov push mov test ret cmp mov xor push mov xchg push xchg movsl jnp mov cmp pop (bad) sbb push je pop sbb stc mov and pop frstor cmpsl in mov mov add (bad) push sbbl lret pop dec mov in cwtl bnd notb loope movb jg lret mov push lahf jbe mov adc outsb lahf mov jl lods mov jno insl jnp rcl imul cmp cmp inc imul cmp outsb sbb outsl aas xchg sbb fldlg2 in mov addl add cmpsl lock cmp and and popf lret add mov push (bad) mov (bad) test push cld ds xchg mov or cmp and jmp hlt imul dec cld xchg mov xchg repz push pop push fs jmp add pop dec xor aaa dec sbb push mov jns adc add scas or sub fsubrs loope sbbl push mov jl,pn xchg repz mov pushf inc mov add xor cmp cmpsb mov loop std out xchg test mov movsl sbb xchg push jo cmp loope push loopne mov jle sahf mov gs dec push lret addb lods stos test push rolb leave loope pusha pop jmp lods mov scas rorl xlat fs mov inc jno and in (bad) sub les sahf push outsl push (bad) jo sub movsb sbb inc stos and popf data16 mov es jne fcompl mov or xchg or mov test fisubr in out icebp add jns mov jb inc mov fs out loopne ret xor (bad) (bad) aad sub jne mov es mov int3 lock mov lret dec xchg and in andb dec sti loope int repnz xor sub daa in mov adc dec aaa cmp mov scas cli xor jl pop int adc test mov or jmp sarl push push mov aaa mov mov cmp xor adc add adc mov mov cli ss adc insb fld clc into lahf outsb sbb bound (bad) sub sub cmp scas mov rorb popa jmp or dec push ss popa pop repz outsb rclb lcall and mov mov and cmp into dec adcl scas scas and icebp mov imul jbe push mov push aam insb fistl mov add in lcall cmp lea inc arpl ficomp ret stos mov mov mov inc mov jo mov push cmp xor mov mov sub xchg bound push sub out pushf daa xorl adc pusha ret lret jb fldenv rcll sub cmp dec adc fisub mov and inc push (bad) cmc inc jg cmpl les and sti mov and je cld inc das inc dec (bad) test xor sbb lds test repz sbb or stos sar je lods mov and jo loop adc das fs icebp cmp xor pop sub ret inc jecxz out dec (bad) mov cmpsb int test mov jge ja ss lock and sub jbe (bad) incl jp xor cld (bad) lods xor cli fimul fsubrl mov or pop jns fisubr dec fldenv mov lods imul pop repz stc sub jl mov scas int mov jb pop pop rorb inc mov sbb or jae dec loop das iret cmp xchg mov ret dec push and or xor lods mov inc lcall push sbb push leave pop and jl imul dec in lret mov push inc fstps lret pop push jno cli xchg xor push pop mov mov adc xor mov pop add dec ffree jo push in mov inc jne stc add (bad) mov hlt into jmp sub push stos int3 sbb add (bad) adc lret lods mov mov jmp add or or mov sub push mov add mov and es push movsb jae cmpl mov xchg es xchg inc and pop sbb fwait push push xchg and sarl inc fiadd inc test xchg (bad) int3 jbe aam outsl and (bad) mov scas imul lods jno add jg sbb addr16 jbe or orb test xchg push fcomi inc fsubr sbb sbb pop cwtl adc xor mov out pop inc ds dec or pop mov jmp imul jmp repz loope pop adc sub repz mov fldlg2 or inc pushf mov in xor xor xchg inc sbb or sahf xchg pop pusha in add push xchg mov fwait cmp cltd cmp fistpll popf cmp mov sbb add pop and daa pop sbb add lcall jno mov mov insb cmp into adc and and adc movsl call mov mov xchg xchg es mov mov jmp mov cld les xor inc mov mov in test cltd or aad pop rorl cmp mov push (bad) negl scas out es and sbb cmp mov pushl jbe out or test idiv test outsl je arpl or sub iret xchg push and fxch cwtl lret push rolb data16 movsb push fimull pop shr cmp lea or (bad) sbb (bad) into fs (bad) decl cmpsb inc les imul scas das xor push xor jbe inc xor cvttps2pi cmp add (bad) adc fimul mov mov fisubr push jge int sarl insb sub fcoms dec inc leave scas iret rorl cs movsb jp inc cmp (bad) out dec mov aad cmpsl push mov jle clc dec nop ljmp pusha dec adc in pop mov xchg adc lea repnz xchg push mov repz scas idiv cmp shll (bad) icebp jnp cmc cmp mov xlat xchg xlat ljmp mov movsl cmpl xchg pop push jne xor add iret out pop fisttp data16 add in dec push test movsb jnp sbbb pusha mov int3 imul test dec sbb mov pop inc ljmp notb insb mov jle out sub xor cs stos mov or jno mov cld out xchg or icebp pushf in (bad) cld cli inc mov rolb mov push jb jecxz mulb out mov mov in xchg push das sub stc movsl mov mov leave out dec or in clc dec hlt imul cld and lret pop lret pause cmpsb and and aas idivb aad sbb int arpl or into notl mov jno sub add cld or jecxz inc ljmp push dec je adc (bad) mov ljmp hlt fldl cmpsl add pop sub sbb (bad) inc out pop jne and sbb arpl sub push add in adc mov aaa pop pop fisubl ds or (bad) cmpsb icebp push shll (bad) sub into or xlat ret les xchg sub (bad) mov shll test rcll or mov leave pop je add in push cld xor mov (bad) xchg je gs mov xor and sti (bad) or fisubl cmp mov mov pop bnd lds add incb lcall jmp pop in add decb in xchg stos cwtl test lahf mov xchg leave xor or xor ds ss push dec addr16 pop scas movsb orl fdivr lcall mov xchg fstl sbb cli lea fcomp mov jp pop ret jo xchg imul push jo cmpsl sahf sbb adc sub fs push dec inc mov in adc cltd sbb lret movsb es stc dec out (bad) mov and push pop aad clc mov fs int into fstpl sub adc jno in xchg sub jmp cmp mov rolb push sub push insl fucomip cltd hlt jne pop cmp mov cmpl gs insb lock sub iret mov in jmp sub ret stos fstps mov test mov dec sub arpl repz mov jbe sub and (bad) stc das test cmp or outsb dec jmp jo cmp (bad) aas lds stos in hlt je fs outsb or (bad) pop (bad) push mov fnstenv or popa jnp push in xchg xchg jno stc fbstp add div mov imull push mov stos in push pop lods xchg cmp sbb fs push pop jle mov (bad) fst loope pop xor mov inc mov jl data16 push iret es negl mov addr16 (bad) shrb mov imul mov pop adc es aas cmp pop test lods out jl sbb das jae imul pop stos push push fwait idivl ret aad cld std mov in adc mov xchg mov dec cwtl and pop clc lds data16 mov jns pop cmpsl add or test pop jb lea (bad) and ret or ret lds push lahf imul xchg mov ss add dec addr16 icebp mov sbbl insl push dec sahf xor sbb pop movzwl mov cltd pop xlat out jecxz and jge (bad) or xor aad mov mov xor aad adc lea (bad) sbb fsub push sub sbb pop mov jg je int sti aaa mov mov adc push jb jp arpl mov push (bad) fidivr xchg adc das sub mov push in sets fbld mov sbb and mov rcrb adc jl and jns push stc inc cmp inc add loop and (bad) and jo clc and leave sub int3 sbb or mov (bad) je dec stos adc hlt xchg mov (bad) fdivr inc cmp ja mov pop inc cltd dec inc js jmp mov enter mov jns fistpl pop outsb fs add sahf cmp in mov lret mov gs cmp add mov stos dec cs jno test add shrb add mov imul xchg mov fmuls rcr rorl out jp jl or sarl mov cmp sbb and (bad) and pop lea adc out mov sub ds mov inc repz pop das push pop sbb cmp out das jl inc inc mov jbe adc push jae add out cwtl xchg jg pop xor (bad) and enter test loope and or adc jg aaa pop fs jo,pn (bad) (bad) icebp fucomp hlt or jae pop or push mov mov mov in out adc pop cli add sub xor cmp adc and arpl push aad js mov loopne mov popf scas aas adc gs sub mov mov xchg push test cmc imul test cmp pop and jae aaa inc fidivrl fldcw xor inc xchg push push (bad) cmc out in or or pushf xlat sub jne xlat (bad) pop mov inc gs (bad) ljmp in xor (bad) mov xchg add push imul inc into bound sbb inc ret and and inc cmpsb js inc into adc xchg (bad) setge sbb xor pop xor call and jmp xorl pop add cld adc mov xor sub or popf test push mov movsb pop xchg and xchg push cli mov ljmp push lcall mov push and (bad) aas push rcrl pop stc pop dec lds mov pop repnz fsubl out push dec nop int dec add push or mov cmpsb ret xor mov push loop leave hlt rol xor or or or cld scas aam mov jb cmc out int3 aas out dec insb insb inc aad test fimul sbb lds jmp lea call xchg rcrl shrb cmp sub xor add ds inc imul in jecxz add sbb mov mov xchg sbb adc pop sub (bad) (bad) imul xorl cmc orb sub sub lds sbb push jp dec in jle mov push add mov lcall sub mov xchg jo rorb add fsubl sti add adc repz les push jmp fstpl mov jbe push lahf dec pop and fisttpll jno jmp test nop daa dec int subl mov stos jmp addr16 dec aas push stc lods inc push mov inc fcmovnb in jp outsb push in loope cmpsl pop or mov sbb imul jnp js jo push cmp xor jle inc add ret jne divb xor xlat int gs in mov mov lods (bad) mov or sub cwtl stc test adc xchg dec je cmp (bad) xchg ds aam push ds push push push mov loop pop cli mov sahf ret mov sbb sub test add push cmp mov xchg test cltd cmpl mov cltd test dec insl and test fiadd mov xchg test or xlat hlt ret out imul aam into fadds ret jno mov mov je ret subl test mov call jnp push (bad) hlt (bad) rcll stos pop jno movsl pusha or insl jge pop inc jnp lods addl jno andl inc and mulb out int sbb push mov repz pusha out or and (bad) adc pop push jle xchg icebp mov es mov push in cmp push mov xchg aad in push sti in iret movsl xlat lea dec cmc pop insl int3 push jb lcall jo xchg mov stos sbb in daa rol fiadd fs push fdivrs ds and shrl es or cld scas push xor js js dec push xchg push pop inc xchg inc clc jno push cltd dec dec mov fnstenv inc fsubrs ja sbb loopne data16 mov inc lods notb rclw (bad) aam loope lret test enter lock push mov fmul mov sub pop add push mov (bad) in ss mov fcoms add dec sbb push xor sbb mov or movsb imul movsl dec sub lcall jle dec adc cmp (bad) xlat out into in fiadd mov (bad) sub arpl mov jle out pop inc sub or jmp pop adc fs mov dec out adc mov xchg jae adc int3 push sti adc mov mov lods pop frstor arpl (bad) jo pop in jge lret pop mov add in cmp jl fcoms xchg cli divb inc xchg test xor adc pushf lcall sbb out (bad) (bad) aad cmp mov or std dec xchg mov movsl jge sub mov adc mov pop out xor (bad) ljmp fcoml xor adc and mov dec push insb dec adc ja ss mov fldt ss jnp mov pop and and jo pop popf mov pop stc and (bad) sub loope mov movsb cmc dec sub int3 aad in xor sbb int popf sti inc lahf (bad) nop bound pusha jp in cmp or jmp cmp jmp enter mov movsl loop out jnp adc loop xchg stos mov mov rorb pop mov xor sub shlb leave push and mov push pop addr16 push into mov shl cmp push lahf sub jbe cmp sbb fistp xlat push sub pop imul repnz ja push xchg call into pusha cmp int3 add sbb dec cmp sub xchg dec xchg mov and jno pop lea (bad) cli sub cli pop adc dec cmp subl xlat pusha sbb push or and push mov in cld fldenv xchg pushf and pop bnd lock cmp pop lret jle imul add loopne adc sbb and or cwtl ucomiss notb cs sahf lcall or fistl ljmp test lret aas and mov in iret xlat lock jno adc dec dec not das les lcall jge call dec or or nop mov xchg out dec leave (bad) mov (bad) xchg xchg mov sub enter jo push aam je pop push mov adc sub mov sbb push inc fisttpl mov cmp push sub mov jle sarb or int clc pop sub out leave (bad) sub aaa xchg test add jns (bad) mov mov sub lds adc ficompl shl fst mov aas nop ret sbb (bad) cltd jbe adc in fcmovb add shl enter pop in stos shrl dec (bad) dec mov scas adcl push pop sar jns iret sub add sarl lods cld adc das imul test xor push shrl ret mov push xor mov sbb push fstl or aaa pop rcll xchg test adc pop xchg jb sub (bad) faddl ds mov and mov dec cmp jne rcr ss pop in les ret xchg jnp jb mov cmp leave mov out mov sbb jmp sub cmp or shrb pop in dec adc add loopne pop stos fwait add dec dec je xchg data16 pop push hlt fisub inc add aad mov cmp mov mov imul (bad) lds push jecxz mov adc mov mov lds pop iret mov int3 jns lret mov pop outsb scas or lret and cmpsl push ja xor xchg pop or mov gs or (bad) adc (bad) repnz add dec push mov jp arpl mov aad xor call out aas pop mov and pop cmp out jno cmp lock setb mov pop shll fwait cmc das add and cltd add mov js mov mov imul mov or add mov pop les je data16 (bad) out lods xor fsts lret pop cmp popl mov inc or dec pop out stos sub and insb int3 adc shrl xchg dec adc cs fistpl mulb in mov adc fstpl test mov dec in faddl and mov dec in sahf xchg adc xlat cli stos jmp or fs cltd pop or dec mov adc mov lea negl mov cs imul lcall pop mov fldt mov xor test test cld xor aam jae jg cmpsl popf int3 or inc stos cmp (bad) inc jo or cmp or enter cmpsl sub (bad) lock mov mov inc lods test (bad) xor xor dec jno std rolb rcrl roll (bad) out pop bound pushf mov or sub call sub ficom mov or (bad) mov push daa cmpsl adc jmp adc testb mov insb and jno test emms pop mov cld daa jbe push in adc mov and dec add dec fimull lea or popa dec das (bad) cld push (bad) xor fnstcw dec sub sti in movsl movsl cmp and lds cmpsb mov push jae outsl imul dec int3 daa out sub into xchg sti aas jne out pop cmpsl lahf dec insl fisttp xchg dec ljmp int3 mov lcall movsb add js inc fstpl shll fstpl or (bad) cmp mov inc and addl cmp and adc add or scas and and loope aad mov mov mov repz stos rcrl (bad) jecxz aas fnsave fistpl lret inc in push fst movsl pop add cmp jns jnp adc dec das inc mov xsaves and dec fdivrs pusha adc sbb push ds inc sbb xchg jmp (bad) sub loopne mov and xchg sarb jecxz pop inc push insb mov sub xchg xchg iret dec xchg cmc push or xchg in pop lahf push aam inc jge xchg ss fsubr dec push cmpsb ret (bad) stos mov outsl lret and push scas xor push fisubr leave mov cltd jg lods mov icebp add push or cmpsb jmp addb add loope int xchg push outsl fnstcw (bad) aad push je inc int3 outsl subb add out add adc stos imul xor mov dec push inc stc mov xor dec dec rclb das push outsb dec jne adc stc ja mov movsb lahf sbb mov (bad) mov imul cmpsl or push lock lock pop mov mov and mov cmpb aas (bad) loope dec aas jbe jg fstl hlt in out mov jbe sti ljmp xchg bound movb mov xchg scas outsb add mov clc xchg pop out fsubrl push or inc orb pop pop sbb outsl iret fwait sarl movsl popf fs pusha sbb ret (bad) sbb push test pop dec cmpsb fildl dec mov aad (bad) imul push cmp nop or and aaa cmpsl inc imul (bad) mov push fwait dec decb adc lahf and inc sub in adc add int xchg rep sbb fisubl ja loope test mov cmp aad cmp cmp insl inc dec daa mov enter stos mov ret out lods pop loope and add bound movsl sub ss loope test xchg xor push fwait ljmp jle cmp inc lret push repz cmp popa ud1 xchg sub ljmp xor push mov fwait push or pushl sbb mov push fsubr sbb test mov cmp cmpsb push and addr16 and icebp js mov adc mov pushf mov fcmovnbe cmp push or pop sbb test mov push mov mov (bad) xchg test (bad) pop js sahf bndldx cld mov push rcrl dec aad test adc jl xor test inc jnp sub xchg cmp push xchg test outsl mov in clc sbb in cs es dec pusha movb mov hlt daa and insb sbb mov cmp or into xor (bad) fldl pop imul loope jnp jae push test aad mov jno jo popl add push xor movl cmp push push sarl push mov dec pop popf int xchg cmpsl (bad) outsl jmp or (bad) bound imul push push mov cmp mov dec sub push add mov stos add shll dec insb inc lods sbb inc or into hlt gs mov repz rol mov int3 add jno jne inc mov jbe out subl jns test data16 add bound rorb inc xchg out mov sarb mov pop push arpl sub pop xor push xchg int and pusha xchg and (bad) mov lret imul fs jae or mov fwait sub sbb js xor daa or ret push inc sarb fnsave repnz dec ss fwait xchg inc sbb and pushf cmpsl sbb cmp es push scas mov (bad) lea lret ror fadd push subl mov push dec test insl cmp pop jg in rorl mulb pushf xchg pop stos loopne aas ret mov mov hlt jo mov jg dec ret mov pop inc cs pop lock fwait dec lret imul add xor fisubl inc (bad) loop jmp push rclb lret rcr imul jmp cmpsb das jge loopne lds es out stos dec aaa adc and cld dec adc ljmp shll lock insb sub inc jbe xchg out nop lods mov mov mov cli jo jbe push xchg stos pusha xor add std lret rcrl adc mov mov iret xor sbb mov xchg add mov ss mov jb jnp int aam in es xchg pop cltd mov insb das add pop mov aad mov out popa sbb pop fld lea lock add ffree push bound out or pushf scas in jg sbb lods inc xchg push xchg shrl jnp pushf fstp nop addl mov push jg mov cmp es dec pop enter fnsave pop repz and sahf nop add es rorb out les lahf outsl repz jmp sub inc std aas cmc and lods (bad) cmp inc imul jno or es movsl xor (bad) mov xchg fwait pop iret insl mov stc push dec repz cmpsb les lret hlt ja,pt xorl int3 push adc (bad) xlat or call int3 ret cmp add and jge xchg jno add sbb jns dec push (bad) int pushf stos imul pop xor cs and push das sbb ds cli scas or cmp sbb movsb lea aas sub jno adc dec push cmp data16 sahf insb cmc lods sbb icebp push push imul mov or test ret and add aad jb and rcrb pop imul jle mov insl popf leave mov bound ret stc pop lahf fwait sub sbb and sbb les arpl mov mov inc adc fidiv fs mov sbb mov repz mov mov jo,pn ret jo xor mov sub repz jns dec mov leave test pop cmp (bad) ss xchg es adc test pusha aaa sbb inc inc in stc sbb std mov dec xchg in mov sub (bad) xor rcl sub movmskps push aad or xor je dec movsb pop test sub and mov cltd fldenv stos lret repz rcrl and int3 dec push rolb insl aad lret jle xlat inc fisttpll mov inc adc pushf add pop lods jnp loope lock sbb mov pushf adc xor jp mov xchg outsl fcomps insb push pop cli sub stc mov popf out cmp test pushf in fwait mov lahf aaa lahf sahf fs ficom je std lods jecxz fsubrs cmp fisttpll scas fistl enter mov push popa lret shll pop adc xor (bad) mov mov sbb iret (bad) stos push fs adc or or push movl ss inc lahf xchg jmp cmp je scas cmp cmp lods stc clc add xor jmp and sub jp mov pop xor icebp repz pop decl add daa lret cltd test notl aad dec jno xor cmpb pop stos fdivl loope xor mov push add pop lahf fs int3 in push mov outsb mov loop inc jl loop xchg sub (bad) cmc test add xchg cmp incb loope add push ss mov cmp pop in mov jns adc sub cld (bad) xchg mov sti adc imul repz aad aam movsl xor icebp sbbl push push jmp pushf push mov lret mov stc push neg scas adc pop and cmp pusha dec add xlat push lock or mov icebp mov sbb xchg or xlat pop xchg pop and mov aaa sbb (bad) insl mov call (bad) add mov push push pop imulb xchg cwtl adc and mov scas or test ret lcall mov in inc fstl jg cld aad enter xor jle add mov or adc fs jl or mov (bad) bound jle mov mov mov cld stos bound sbb cmp test aad cmp fwait imul jb push lcall ret aas pop frstor dec in jb loop,pt mov es mov xor mov jl stos push imul dec jp mov mov inc or mov movsb pop int3 xchg adc push out out les pop xchg pop cmp pusha mov mov and cmp fsub jmp clc enter lret add jl pop mov out scas cli jge cmp xchg repnz jg pop les fs subl pop aas add stos fwait inc movsl sub xorl inc aas fwait daa sbb mov cmp jne push loop ja adcb xchg add xchg dec cmc adcl or cmp test xor mov mov mov sub sbb shlb and inc cmp jmp mov inc dec jmp or test fist cmpsl sbb scas push push (bad) cltd mov test mov jne push and push or (bad) jmp arpl xor iret sbb inc cmc jge mov dec in test (bad) cmc xlat pop push mov sbb xchg jg lahf cltd fnop jnp,pn int dec leave pusha add cs push jae and pop ja xchg sbb sbb mov mov adc jge cs movsb jp pop mov sub dec lods int adc or or pop and das cmp sub dec fs jns adc jmp pop divb test popa ffreep fcmovbe lods dec mov enter jnp dec jnp lods ds leave adc gs hlt sti xchg xor mov into jmp gs xor subb xor call xchg pop ror scas lret mov xlat pushf inc xchg stc or out ja xchg pop fist mov sbb insb addr16 mov sbb fs and aas mov notl jecxz mov fcomps ret pop int or cltd mov cmp jo loope lret xchg pushf loop xlat push add orb sbb rcl ret sbb mov in sahf and xor cmp xchg aam push xor push xchg gs sub cmpsl shrl ja mov dec or aaa cmp adc dec sbb sub mov adc mov into pop aas dec push loope adc sub stc test fwait inc sub jns sub xchg and dec fnstcw cmp aaa and and fist add (bad) jp movzwl mov mov aad inc fildll and dec fsubrs mov xchg or cli shlb ret les sbb insb cmp psubb mul push push push mov sahf push fsubrl push push ret pushf test (bad) adc pop (bad) mov jbe scas mov pop repnz adc sbb adc push in iret out loope cli lahf test pop mov js int3 stos lock icebp cmp leave aad xlat ljmp adc jecxz mov sbb cmp pop xor xor (bad) fstpl sti cmp (bad) lcall dec sub jecxz aad imul cmpsl pop sub inc leave jo jecxz (bad) (bad) xor dec cmp xchg jp cmp pop jl fimull lods jp push xor gs (bad) jp cli mov and je pop inc push mov xor push fild sarl faddl jns mov enter sub or fmulp ret (bad) push mov fsubrl test (bad) cwtl jb push adc pop jge aas jg push or adc cmpsb add sarl (bad) xor sub scas in mov es add push shll mov mov aad adc cmp imul repz test dec xor stos inc sub mov mov fsubr fs hlt fistpll loop (bad) test outsl xor mov insl push pop roll outsb mov mov into pop mov inc test cmp out add icebp pop ds mov adc mov mov mov mov jne adc dec popf adc aad mov push mov cli cli in cmc xor adc sub sbbb in cmp and adc xor sbb jns add xchg push jmp insl sub mov hlt adc jb stos in or inc je sti jae (bad) fdivl loope add jmp (bad) or testb mov (bad) add and xchg dec sarl pusha data16 mov mov rcrb or (bad) je mov jecxz mov jg push and rorb xor jp push mov (bad) fnsave pop call jb cs xor dec lods leave jb pop lods push hlt imul jns lcall and push aam pusha fprem1 jmp cmpsl loope iret fwait shrl cmovg jge jmp test xchg xlat pop push pop xor or push mov ss mov repnz ss xor push ficomp cmp and mov mov pop roll push shrb mov xor sbb dec pop std lea jb out mov mov mov (bad) adc or (bad) push iret mov enter mov lcall insb es loope repnz jp insb imulb adc aam jmp mov ret addr16 xor das push mov inc xchg lods lret xchg stos arpl stc mov sub push push aas pushf lods jmp ljmp or mov repz mov aad jbe sahf scas add sbb mov inc pop roll jne push push cmp (bad) hlt jb std jmp fistl mov (bad) mov dec jp fcmove mov dec pop rcrl sar or outsl mov test dec dec imul das icebp push mov imul (bad) sub mov sbb je or xor sahf andb ja test push xchg mov xchg rcl lock aad sbb pop into mov repz xchg mov imul xchg inc loopne shrb mov shl lcall dec dec xchg ret mov daa mov add mov pop sbb cwtl and dec fildl fistpl les ljmp lock test repnz and dec incl pop sbb aad xor ret sarb (bad) enter ret and xchg (bad) mov outsb rorl lock fstl js xchg cld fs cmp sti or inc mov cmp call repnz std out xchg mov dec dec pop cmp jbe (bad) mov test adc mov push movsb sub ret outsl push mov imul mov xchg fmul push pusha cwtl jno sub mov (bad) (bad) mov jl pop sbb inc cmpsb in xchg cltd lcall mov pop mov mov js pop jno jecxz mov flds movsl and lret mov adc add test push push jg mov mov push popf jg fisttpl push fst mov jns push pushf je aas jl fnop xor push sbb popa out dec dec or gs sbb pop enter mov mov pop in lcall outsl xchg jmp cld dec push daa jmp loope ret sarl mov lcall adc (bad) fistl iret lahf dec fldenv out add jbe inc cmp (bad) addr16 sarl sub ficom sbb lods add mov ret clc jb loope clc cmp rcl push jp shll sub lret sahf add jl out mov fldcw in fdivs jno repnz insl jae jns clc repnz stos inc push jb ror dec pop enter xchg lods rorb movsl lods arpl pop loop dec inc cmp adc push push inc jmp dec mov cmp xchg rcl cmp mov pop mov adc or arpl inc fild call sub div xor jbe jl,pn pusha insb pop jmp mov cmp adcl and pushf mov loopne jb cmp aam out ja mov and (bad) jmp mov les add jmp xchg inc xor inc test and ljmp outsb (bad) mov add jne mov enter aas neg incl or adc jle (bad) rclb (bad) jp xacquire js pop mov mov pop mov adc call cltd adc cmp pop sub push adc fsub xchg sti dec sub inc jle push into or sti fiadd adc lahf shll pop int xchg jle xchg (bad) push out mov pop pop sbb loopne add cmp loopne or cs mov mov cli or jbe mov int iret sub add or sbbl imull aaa into (bad) sti push cltd cmp nop inc adc xchg insb mov pop loop push lret push adc mov je push dec in push pop cmpl out enter jns or mov loopne rorl xorb xor (bad) bound ja fidivrl lahf rcl imul push call scas sti pop int3 jns cli test mov jno or jbe scas mov or push pop cli jns cmovno or dec hlt roll or loopne divb mov cmp push push jo (bad) jmp adc cmp sti cmp pop fistpl pusha idivl mov mov mov inc sarb mov push inc and xor and xchg mov pushl pop int or cmp mov jecxz imul cli lahf stos or mov popa and dec xchg or into jno jno sbb sub cmp movsb scas scas loope sbb pop mov outsb fstl dec inc (bad) test sahf scas xchg inc enter mov lcall sbb push jo dec stc ds pop icebp into xchg lea add lds loope or popf sub lea sbb pop jp lods pop outsl enter xor sti dec pop jnp bound mov adc mov mov cmp insb mov add fdivrs mov je fstpt adc daa pop add push cmc fild jecxz lods in stos pop jae xor leave xchg mov fsubrs arpl sbb mov (bad) pop sahf in arpl or jl sti out add mov dec dec jle pop mov pop pop jnp sub sahf pop stos pop test dec adc mov dec dec stos or fildl sti add lds jb insl loopne les mov in and xchg in (bad) sub sahf pop cmc pop xor adc out aam ljmp lods aaa pop test lea sbb fisubrl sub mov pop insb (bad) ja pop sub mov daa mov stc xchg pushf xor outsl dec sti in roll fstps mov pop and adcb xor addr16 into hlt rol (bad) mov inc pop sbb pop xchg sbb std mov aad xor xor shr jp mov subl imul divl je test xchg es cmp popa aad cmc xor push insb pop dec mov mov das push in jl and inc add sub xchg xchg and mov aad (bad) es xchg inc outsb shrl pop (bad) ficoml xor ja mov cli pop pop adc xorb (bad) lock imul movsl mov stos and xor inc sbb (bad) xchg pushf ds jmp (bad) out inc jbe fnstsw into xor aas jo lahf pop nop loop rcrl popa stc mov pusha movsl xor jae scas movsl ror push mov adc push xchg ja jge cmpsb imul in fwait lcall pop pop mov je xchg in and mov shr arpl inc (bad) sub aad xchg and push xchg dec jecxz push xchg data16 mov dec (bad) pop mov loope mov sub add dec jnp clc sbb dec mov pop mov je pop inc cmp inc std cmp or jp add movsl cld lahf rcrb mov mov imul jb lds push dec and inc arpl (bad) lods xor mov adc jmp mov js scas mov mov inc out mov mov jne pop or sti das xchg xchg jle fisttpll inc dec fs int3 out pop scas jge mov subb lods insl xor mov loop ret shlb pavgb movd mov loope sub add stos sahf cmp sub jmp cmpsb pop aaa mov fistl out pop add shrl out jo movsl dec inc dec subb cmp in jnp jae idiv daa rol repz pop mov push lods push roll aaa jg fdivs int3 bswap mov fdivrl mov es ret daa into pop pusha lret daa lea out inc jns notl mov dec xor xor xchg jecxz mov add loop pop ret or xor push add fcoml jbe pushf ret mov pop mov imul add fwait sti or cmpsl and dec lret mov bound sbb jnp inc sub pop fsubrl pop mov pushl daa mov stc lcall sarl lcall dec sub mov sbb sub movsl into fmull mov ret ja pop daa js xchg xchg adc fldcw xor pop add inc stos add cmp ret cmpsb push cmp aaa fdivrs jle xchg cld subl movsl leave cmpsl ss enter push mov and pop cs mov mov or rclb scas or inc out or xor loop cmp or daa push popf popa leave adc insb negb xor inc mov and test adc rcll out jge (bad) mov lods sub cmp mov arpl subl test cmpsb ja scas mov fcompl push sbb xorl sbb je adc sbb out lods or pushf pop iret xor xor xor mov mov push bound js test xchg inc shrb jmp inc orl jbe inc pop or stc int3 and pop call adc out jl jne xlat test push xor push push mov je pushf lret xor dec clc pop xor fsubrs and in xor pop dec pop std pusha jmp push shrl xchg fcompl add int mov adc sbb cmp or push das xchg inc das in adc sub mov out fdivs lahf sbb xor (bad) adc gs (bad) pop or xlat or in xchg cmp push xor xor add out xchg add mov and add frstor xchg ret popf addr16 rcr cmp mov nop xchg jmp (bad) pop mov lds fstpl xchg int jp fild add sbb jmp outsb add fisubl push xor adc cmp or sbb std out sub or iret (bad) and mov inc arpl cmpsl sbb jg cwtl imul add cli mov int sbb cwtl add fisttp stos sub cs adc mov or test sub and push add push pop hlt stos sbb dec push rcrl xor push sub or dec xchg sub dec push (bad) cmp ds inc cld cmp daa cld sbb and int3 sbb dec ja sbb mov push and cmpsb pop cmp xchg mov lret sbb leave cmp or inc loopne mov inc (bad) je push iret xchg movsl popf arpl pop inc mov (bad) push popf sahf dec add xchg mov sbb lock cmpl js adc aad in sbb lods (bad) or cmp test and jb push test dec ja orl jmp cmpsl inc outsb and mov and repnz or xor mov aaa iret (bad) in nop add outsb jo and jl fsubr mov dec and divb cmc test push and aad adc dec mov or fistpll lcall pop ds inc (bad) fs push push sbb ds jg xchg in mov sbb adc pop in dec pop adc mov iret mov imul test fist fisttp fucomi pop dec repz scas pop into scas adc imul push sbb push addr16 dec pushf (bad) lret push sti outsb lods push (bad) fmull adc mov rorb or mov add and aad cmp adc fsincos mov cwtl or mov pop stc ret fucomp popa xchg ret bound sbb jne out cli mulb mov test pop lcall ja xchg pop imull adc stc test hlt mulb inc and daa cmp outsl shll mov fwait pop xchg out xchg repnz xchg mov out dec push mov pop iret jae mov mov and into cli jmp add hlt and test sub mov cmp push shlb mov jl scas std stos lock rorb je ret adc fdivs xchg dec dec and xchg lar adc inc or xchg fwait rcll cmp adc lds sbb movsb adcl bnd fdivl cmp gs (bad) lea lcall push xor push out ja fs mov pop mov ljmp sub dec aaa xor or pop aaa push push push test outsl and mov mov jae push jno enter out jge mov pop or sbb push lahf adc out dec add sqrtps jo mov sub lods addb aad in stc rclb cltd stos push adc and pusha jne std addr16 cmp js cmp aas adc enter cli jge test inc sbb mov push adc or jns pop push das loop flds lahf jo (bad) ljmp cmpsl xchg mov (bad) xlat arpl fwait cmpsb xor outsb push jno sarb ret push in lods sub cmpsb cmp scas out iret ds and jge hlt mov pop cs cmp out sbb mov push add aad lahf sbb xor arpl pushf imul sub mov jg andl clc and (bad) push mov movsl lret push cli sarb push aad les pop mov push bound jmp out in addb mov jno repz and pusha pop outsb and jne scas fsubrl ss lahf pop iret into addr16 in das rcrb inc cltd jle lods (bad) xor icebp clc pop sub loope mov push repnz lods cmp mov scas sub push test dec adc mov sub and adc push pop mov sub jno mov into cmpsb shll adc iret mov dec jo cmc das repnz jb stos jecxz (bad) fcompp and in push add push fwait sbb adc jmp aas mov cltd cmp pop dec adc testl ljmp add xchg cmp add arpl pop mov fild gs ljmp pop das push inc mov int3 in add enterw xchg jmp int3 je int3 addr16 xor pop jne inc addr16 dec loopne mov mov neg in mov pop push insl cmp jnp subl pop xchg inc mov fimul aas dec arpl and adc cli imul popf adc inc sbb test mov in outsb in dec icebp push add dec jecxz ret jmp xchg negl bound in mov dec xchg ljmp and xchg xor pop scas inc adc movsb aad xchg lcall mov aam (bad) repz test sahf scas xchg scas add or xchg xchg outsb jb xorl outsl lret mov or push jne mov in pop jb jo dec push pop outsl leave stos lahf xorb leave sarl push xor data16 mov or shll sbb fidivr jg sub or dec and jae and and scas daa xlat in aam repz pop mov in out bnd hlt dec xchg loope dec in jo push nop arpl inc pop test sub (bad) loopne jne xchg imul lcall fs xchg mov xchg leave mov xor dec push call fist repz lods add push mov adc aam inc xchg outsl popa xor mov push lret mov pop cwtl out imulb lock rorl mov sub mov mov or jg push mov rep xor push xlat add shrb (bad) cmp add movsl in push fsts dec jo inc add sub add pop push test int3 jge mov and xchg loopne enter jno fcmovbe adc push sub fs rorl lds outsl jp mov add stc pop sbb testb jae ljmp and xor mov xor sbb xchg test add push (bad) leave pop xchg (bad) or xor pop mov mov jmp mov add stc (bad) into sbb inc (bad) jl xlat pop lods mov adc repz enter xchg mov jo,pn daa orb push subl cs stc mov and mov ror in push int ret dec ret xchg inc rep dec add and aaa setge cmp add movsl jae icebp sub push push rcll (bad) pop xlat jbe mov add insb inc xor mov scas mov test sti xchg and aam ret test int cwtl push (bad) xchg iret addl pushf inc movntq or xchg repz xchg jnp add ds pop mov xchg stos add imul cwtl (bad) push fisttpll cmc adc outsl shl lods dec add (bad) pop int pop and dec mov imul loope (bad) divl mov mov adc imul sbb in repz mov jo ret jbe sub push mulb (bad) mov outsb push xchg add (bad) xor faddl arpl rcrb sub inc std jo adc jmp insb or cmp mov push (bad) cwtl push mov (bad) arpl pop mov stos std dec xor sub dec push sub add sbbl mov (bad) std ret and sub out cwtl inc push lds out (bad) xchg test aaa jnp les jmp scas pop push arpl shll leave push out (bad) in push jb push aam arpl cltd dec lods xor xor das jnp cwtl cwtl shll sub dec out cld (bad) nop dec adc push call (bad) dec mov sub adc (bad) test push cli cmp jl pop fprem loop and cmp test sub pop jge lock pop faddl sub adc dec les pop pop mov call xchg dec bound jg lret xor push mov add test fwait rorb lret xor xchg scas pop popf sub in cli pop ja inc imul pop and negb stos and mov mov nop mov fildll scas shlb sahf add (bad) pop pop jmp lds dec add xchg or mov push (bad) ficom jne push subb call aam sub lcall inc mov lea pusha divb mov ljmp mov pop xchg cmp cmp xor sti mov fwait ret dec cmp pushf out mov cmp pop cmc mov cmpsl fidivr sub jle pop jbe pop icebp inc test outsl lret xlat adc fldenv aam faddl lret xchg mov pop adc pop insb aad test mov push in roll or cli lret mov xor in shrb add push cmp popf lea enter xchg pusha dec xchg ror fs lods (bad) dec cmpsb adc jp push lea xor cmp insb jl frstor xchg sbb cmp movsl ficoml das fwait mov (bad) stos or jl sub rep push in sub mov aas xchg xchg movsl rorl stos mov negl test arpl in hlt sbb sub cmp xchg inc pop adc out jnp sbb or push pop inc lea movsl sbb mov push fisub pushf pop xchg roll (bad) xor sbb mov lds in xor jle mov lock shll mov sbb and mov lea mov loope dec push xchg int3 arpl inc (bad) sbb sbb adc mov jbe fiadd loop ja xor pusha loope sti flds add sbb cltd mov mov add pop sahf rorl adc or lret andb cwtl jo in daa ds push bound movsl mov jno das add or inc jmp dec sub adc push xchg mov inc cmpsb sub dec scas mov loope sub inc repz pop pause int3 xchg lret pop lods jecxz int3 das sbb (bad) into aas aaa loop jo call push inc jnp dec jge mov pop pop mov int xchg pop cmp cmp push mulb pop pop sub add aas xchg fimull pushf dec or dec lds lds aas sbb mov mov cmp pop sbb ljmp je loopne mov mov xor or ljmp xor sub pop mov aam cltd push cmp dec mov xor dec pop jl fmul pop and jge jb,pn pop mov psubb loope xchg mov loopne movsl cmc mov outsb inc int3 inc and pop cmpsb pusha xchg push cli test add frstor mov movb outsl add jp cmc into inc jbe xchg out test cmp cmp call sbb movsb cltd sarb xchg inc mov insb movb xor (bad) mov fmull lds xchg iret or jecxz push add aaa mov or repz mov mov dec jns push clc jle inc pop std jmp and (bad) xchg or (bad) and jge in jecxz std lock int3 jge mov pushf and sar mov or add add addr16 mov fbstp mov jne cld sub fildll lock enter push lock stos inc pop mov mov lock jne pop xchg fwait inc fnstsw imul and int3 cmp fsubp and and sbb (bad) pop rcrl bound test and adc mov dec push in xor inc in adc mov mov (bad) es inc xor mov (bad) rcr lcall rcr push aas ret test inc rcl icebp into loope arpl das stc sub mov jb lret hlt add jae push pop jo dec jae pop cs xchg repnz inc into lods push mov repnz aam js out je dec mov ret adc pop lret push fnop jg adc pushf push push cwtl je adc popf xor sub test and repnz call dec dec fdivr mov dec jmp insl xor sub mov pop movsl aam aam push sub or cmp mov xlat push jns (bad) or adc inc rorb mov sub inc inc pop xchg repnz add push les popf neg add xchg cwtl fdivrp leave jbe mov jmp addr16 out push popf jb popf xor sti int scas jp xor cmpsl cmp cltd xchg mov add and movsb jge pop pop fs xchg add xchg lret fiaddl and jle in dec mov aam stos push add sbbl mov mov (bad) mov mov xrelease mov es sarb out insl and ss xor (bad) pusha call mov mov cmp add sub mov inc ss rol push xor mov xchg add repz arpl icebp dec xchg xchg insb movntq lcall push jl scas xor mov stc mov loopne (bad) pop ret and jnp std adc aaa nop pop add addr16 idivb xor aam arpl fisubr jb test rcl into outsl mov xchg mov sub sub sarl push jae sarl or pusha inc xchg sub fs cmpsl xlat dec jmp rclb adc jmp mov sbb in mov inc add jae loope adc xchg aaa xor in mov fldenv mov test cmp inc daa scas sbb pusha rcrb ja and jecxz or xor sahf or cld scas add scas aad jl adc test sahf xor xchg ret push sub es ljmp add fdivp pop mov (bad) xchg dec xchg (bad) push xlat cmp fcmovu cmp call xor scas (bad) mov (bad) mov sub push inc lahf fldl sub jle fistpll rcrb aam test mov cmp loope roll fistl in aas mov fwait out clc aas leave dec les pop gs ret push bound in adc call inc cwtl and fist jp jbe int3 pop cmc add clc insb (bad) gs repnz and ja loope push xor mov (bad) pop scas sbb and scas xor mov sahf stc sub and aas test incb rolb adc imulb pop mov sub aad mov inc mov inc dec mov stc lcall mov out xchg jecxz dec std roll mov outsl and fldl jmp mov cmp insb outsl mov adc dec idivl jmp leave xchg movsb gs mov add mov sbbl in or inc cmp loopne fidivr cmc dec cmc aaa add cwtl pop shrl mov into das jge int out push in fiadd int pop das imul adc loop rcrl cmp mov int3 lret add jg xor mov cmp es jle mov cmpsb mov movsl adc xchg stos sub pop enter sbb inc stos ss pop dec int3 dec ljmp iret add mov pop pop xchg or test rcll inc in outsl mov adc pop (bad) cs adc dec bound lock inc pop push pop mov jb insl sbb lret or rorb inc jg fsts pop mov popf adc jne lods iret out mov adc gs mov adc jbe loop popa cld out jg inc dec fmuls dec (bad) pop mov fldcw stos jp std lahf add pop stos or fbld push (bad) insw arpl test fwait (bad) add cmpl push xchg lods mov dec insl enter sti iret mov icebp bound int pop ss stos mov fdivrs icebp sbb mov xchg ss je js inc ss adcl mov add jecxz loop dec ja mov add cli mov scas insb mov lahf (bad) push cli movsb mov dec xorl sub out in xor stc xor neg into cltd (bad) dec imul (bad) jo jns (bad) cli cwtl cwtl mov popa das and xor inc sub or das sub mov and jae jno call mov das stos aaa shrb mov mov iret mov (bad) or or push cmc mov int3 ficoml rorb lods mov icebp aad jo lret dec fisttpll testb dec xchg repz sbb xchg and xchg pop dec sbb inc cmp jmp sbb sbb push jbe imulb cwtl les jno loope push rclb xor lea (bad) (bad) int3 mov and daa add mov xchg add imul repz int3 (bad) popf cmpb call xor mov sub mov mov cmp aaa mov les mov jmp ja repz aaa pop xchg inc sbb push pop sub and in xchg inc and push sbb in mov pop pop pop (bad) shll inc cwtl xor cs dec jge sub jb in dec insb cmp iret loop mov sub sbb in cs sahf std cmp lds sahf out push sbb dec or and push or stc mov xchg shr addr16 jbe test sahf (bad) sub ss sbb out ja (bad) mov cmp (bad) clc sbb mov mov lds lret into add fcompl pop push mov push xor inc stos xchg pusha push call mov adc ljmp cltd pop shrb mov movsl mov mov pop dec or sbbb out and mov xchg xchg push notl jp mov imul push test sti lret enter dec lcall int ficom push int3 xchg lea push fidivl jl pop xchg lods inc stc movsb pushf push inc addl (bad) or cmp jbe cmp daa insb adcl push aas jmp jp xchg loope dec lret mov sub cmpsl xchg inc and in ja xor lea add pop iret ret or fsubs ror outsl push lods jecxz mov cmp test jno lret leave into imul cmpsb ffree adc push xorb into jns test pop sbb xchg out mov test and (bad) ja in jae xchg cs mov aam (bad) stc gs addr16 clc sbb fdivrp push mov sub ljmp rorl xchg js shl mov mov adc enter add iret lods jnp pop leave dec or imul push mov rcr inc mov inc jmp dec and mov nop xchg iret loop push xor jbe or movsl lret fiadd jmp sahf insb mov mov jne iret sub fucomi call mov sbb mov jg clc inc cmp insl scas pop or push rcl (bad) scas pop or out test dec sub ss sbb sbb fist popa test push cmp int3 dec jg sbb pop sub xchg shll stos sbb mov add add push dec dec inc scas mov loope push push imul push adc (bad) adc and (bad) test aam jecxz in adc mov fwait popa ljmp add stos dec pop out xlat cmp mov fadds sbb adc andl stos push aas push call cmpsb mov mov in push pop dec jmp xchg push push idivl f2xm1 jp cmp xchg outsl jecxz fs scas mov add fwait in pop sub xchg dec scas fdiv inc fcompl inc cli shll mov xor xor popa dec mov loope ljmp inc (bad) pushf sbb inc mov xor loop in pop pushf xchg lret push push aaa push xchg and call cwtl sti (bad) arpl sbb sbb icebp decl hlt mov in dec mov insl sub jge ret push mov pop leave xor cmp insl dec int3 imul mov dec clc hlt inc jno cmc xchg add sti (bad) push mov or and lock push mov add call xchg ret call or mov add fstp lods or xchg push push mov sahf mov enter adc nop pop lock jnp nop adc pop add adc mov push xorb movsl pop std test mov xchg rcll fwait mov int dec movsb imul push cld int3 cmc pushf dec cmp push (bad) adc lods xor (bad) jecxz das push fdivs adc outsl mov lock xchg (bad) aam push cmpsl sbb cmp stc insb cmpsl add xor dec out (bad) nop sub mov push int3 movsb mov popa add hlt and fidivrl test push xlat mov push adc xchg jbe int cmp xchg enter mov push cli dec in cltd fistp lret or scas sub cld xchg cs insb adc pop push inc out jo (bad) sub sub lock cmpsl add or and xorb sti ljmp pop lods push (bad) xchg out pop pop bound inc sbb inc or iret data16 xor pop mov enter nop scas cmpsl insl jg sbb mov ljmp stos push and icebp es sahf repz cltd daa jge mov sub jns les pop fnsave xor es ret mov cmp nop imul push add rcll (bad) pop xor adc fsts push mov and or and ret push push jecxz lcall cmp jb outsl cmc call adc cld mov adc fcomps mov popa push rclb fwait int3 ret mov in roll aaa xchg out xchg sub or push sar dec lahf out mull cmp pop jo std and jns popf lods test mov push insb out insb (bad) sub fcmovu outsb mov push loopne (bad) cltd mov push fstps push cmp fdivp fisub ficoml repz mov mov sahf xlat loopne mov daa pop mov pop sub and xchg push inc movsb jl fcomp mov (bad) mov clc mov sub mov xor movsl imul into lods sub enter loope mov inc push jle (bad) cmp pop in cmp mov add xchg je movsl xchg pop lcall fisubrl mov mov pop cmp pop inc push xchg or dec mov lock out mov sub cmp in jae dec movsl std nop inc test loopne xchg sub sbbl push xor movsl sbb popa sub scas ja add mov hlt or add ja popl imul inc hlt mov repnz insb es cmp imul iret mov loop pop stos outsl outsl je (bad) arpl (bad) add mov outsb xchg addr16 hlt ss pop inc imul ret pop inc pop cs orl ljmp mov fwait nop cltd dec lds sub in jae imul xchg or popa mov and xchg iret imulb lcall movsb rcl xchg sti xor jae jbe jne xchg lock sbb mov jmp not sarl mov mov push cld and std jnp addr16 lahf mov jae enter int shl negb xchg push sub push fsubs mov imul or sbb daa (bad) inc data16 adc or icebp fidivl pusha cmp adc dec lret push add sarl lds jp div in jecxz mov notl (bad) in imul popf loopne mov movsl and xchg (bad) aad test pushf dec dec notb cs aad push ljmp (bad) std sbb sbbl sub lods xor movl jle in (bad) mov mov addl fwait and mov jmp cmc aaa mov xor fstpl or mov xor mov aam xlat pushf shrl jae addr16 xlat jecxz cmp aaa data16 out cmpsl add sub dec or rol or inc mov lahf inc and (bad) sub sub cli loopne jmp outsb sahf push mov into add jo pop dec adc scas sub or mov stos in bound cli ret jae sbb cwtl cmpsl pop xchg loop or cli sarl sub xor push popa mov cltd hlt mov fcom push in and mov xor sbb xchg mov cmpsl arpl (bad) jle negb insb sub popa mov int xchg fisubl jl movsb pusha adc pop repz into or stc aas mov lods loop mov mov sub dec aas pop inc or xor xchg sub lcall jmp xchg cmc pop cmpsl sbb cltd jge subl or mov sbb inc call jp mov inc stos sbb rcll mov nop (bad) js and stos jb sarb fstpt out call mov imul xlat test js push add adc push data16 mov out pop inc push jno stos in jge loop push lahf cmp (bad) pop test es inc loopne push sar mov scas dec jns in inc stc push sbb inc jae mov xor sbb rcl adc xchg addr16 xor lds pusha mov (bad) lret cmp xor cmp cmp lock icebp movsl adc push aaa xlat out sbb or jg adc jnp dec push jp movsl inc scas icebp xchg add rorb pop pop ret and dec icebp imull into mov fwait loope mov pop mov jno loopne (bad) imul jl mov sahf jge mov xor pop mov mov cli adc jae mov mov mov fistl mov xchg cs shll mov inc call into js pop (bad) push jl sub xchg inc and cmp cmp add test xchg stc movsb inc je fdivl aas inc sti or (bad) xchg xor jno or roll sarl imul mov aas stos stos lods cmp add xor push jmp ret (bad) or jle out aas pop data16 pop inc pushf lods or mov push pop in scas mov add outsb dec jns and outsb xlat pop push cmovno inc lea (bad) sub xchg inc bound das and imul lret sub fild dec jecxz notl add pop add popf xchg outsb sbb sub aaa jp push cmc aaa pop pop cltd lea ja inc fwait mov int3 adc in inc les lcall mov fsubs iret jno xchg aam mov lahf das mov bound jbe dec ss xchg out and and mov or push pop ret jo and repz add sub jo xor sti dec (bad) pop sbb lcall inc or pop scas lea mov dec clc adc xchg ljmp orb cmp test mov stc jl or sub in ja jecxz mov (bad) mov inc incb cs jae addr16 popa sahf jp mov loopne adc cmp clc aas cmpsl pop shll jle mov adc xor pop jnp aam insl xchg enter adc fdiv pop das jae movl dec dec fmull xchg xorb and pushf mov stc je fistp aam mov std lods imul outsb or inc sub jbe stc rorb push lret scas sub test inc les sti xor out add rolb cmp enter xor push js xor pop (bad) pop mov jle stos lret dec lods je jne and out mov or inc pop shrb push notl xor (bad) pushf (bad) xor lcall mov mov aas in (bad) push lret scas inc xchg sub mov mov imul out in xchg push push mov (bad) mov or push xchg repnz shrb cmp or dec ss (bad) mov push (bad) aad mov (bad) out lahf stos out dec (bad) sub xor sbb je cmp fwait cmc mov cmp mov scas popa rcl add add dec js mov popf mov or hlt sub iret (bad) pop in or xchg shrb inc mov fisubrl mov cmp xor (bad) out add adc daa push ret add xchg adc or fmuls mov adc out xchg xor xchg fwait sbb stos or popf push dec pusha (bad) xchg popa movsl xchg int cmp mov lahf push mov sbb (bad) push push or into aaa popf jne mov outsl pushf cmpb dec cmc dec adc and mov lods in imul inc inc stc fsubrs xor aas lea incl faddl scas jo imul or ja inc or loopne mov js mov jno pusha push adc ret (bad) je adc jbe pushf sub add or incb pop ja jbe lahf xchg das inc imul xor es std scas (bad) pop popa sub cmp ficoml (bad) je or sarb xlat add mov clc inc into stos xchg hlt push mov cmc aas pop inc xor mov add js dec sbb add les and sbb stc mov xor mov add out mov push cmp jns fsts (bad) insb add sub xchg mov sub cmp mov scas (bad) mov (bad) popa pushf loopne xchg adcl jle and data16 pushf rorl xchg (bad) lret fist sti dec dec pop inc out xchg lods sub sub loopne mov pusha dec adc push dec pop fs xor lock (bad) shlb inc adc repnz mov aas dec pop lds out sub dec add and add jl add ret mov sarl and in insl or pop mov jno add scas or test das dec hlt xchg movsl jl loopne jl call lds cltd clc insl push push xchg pushf cs xchg fnsave sbb mov arpl cmc pop xchg sbb aad cld cs and pop mov xorl into xlat jo push cmp mov push aam xchg fstpt sub popf pop mov loop int jmp sub fs mov jge jl jb add add (bad) (bad) je mov mov and push in (bad) cmp dec rorb inc jmp adc sbb adc mov inc in inc or repz popa lods xchg cmp mov int repnz fcoml add hlt aam jnp cvttps2pi mov fildll (bad) adc jnp fnstcw push int scas xlat test shll cmp dec jne or das js add sbb inc jge push divb dec mov cmp push lcall xchg and jge mov jmp pusha fidivrl push xor xchg popf js ret dec or lock ja dec js cmp push mov lea (bad) xor jns adc rol ljmp lahf insl xchg cltd or pop enter mov iret in jb sbb fildll rorb inc mov rcll or mov aam xor repz jns and aaa lret ss add frstor fist out aad pop popf aaa insb loop aas xor les push in aaa ficom cmp jmp clc jb fiaddl rorb xor mov and outsl mov pushf jae dec repz and pushf inc aaa xor adc cmp add aam jp pop inc pop sbb clc jae aam xor repz (bad) notl xchg (bad) in insb aam mov sbb dec test cwtl pop push aaa (bad) test faddl insl or sbb pop or les inc cmp insl js cmp pop add mov loop movsb fidivrl mov mov cmc add xchg push pushf cmpsl movsl in leave das rcl les inc std dec cld invd (bad) cli dec push (bad) xor inc jmp gs mov jbe jmp call dec sti xor sub pop jmp into push repz sub subps lret push pop dec xor lock mov push outsl jnp sub fs mov and and cwtl xchg xchg jle push fbld in fcoms jae rclb lods dec sahf adc adc (bad) mov lahf adc push add faddp pop daa cmpsl lods in movsl mov popf test inc sub bound xchg adc pop or adc mov ss addr16 push pop stos lret cmpb jmp bound jbe dec mov mov mov sbb push mov mov mov imul mov xlat ret clc push ret sub (bad) xlat mov cld incl js push inc pushl or jecxz int3 cs dec pop mov xchg fsubp cmp fs dec sub lcall push dec iret jg mov cmp xchg lds jle mov add and loopne cmp inc stos push inc jmp cmp rol (bad) lret bnd inc addr16 pop mov or cmpsl and insb push loope stc add rclb xchg loope repnz pop addr16 fsubrp fsubrl inc cmp roll jo sahf push das ss or mov inc jmp cli arpl mov push (bad) push fcoms cli loope or or out mov push movsb push fcoml es cmpsb hlt dec in sbb fidiv insb int3 jb mov push lret cli lcall inc mov sub xchg cwtl pop (bad) add les dec mov add adcl daa aad js ret pop mov dec mov andb pushf insb xchg movsl adc dec sbb int dec add in and inc sub xchg pop stos pusha loopne aad pop fiadd lds sbb sbb leave into stos ljmp and xchg (bad) ja aam jo cmp lods push push (bad) lods stos fs mov and add mov adc rclb xchg in mov cltd xor adc neg cmp (bad) cmp cmp lcall push add lock (bad) jbe test mov sbb jge mov sub xor jle xchg imul push movsb cmc ret jae mov and popa push mov push pop mov in inc sbb stos cmp lock js aad mov out in loop imul push jmp xor andb xor mov dec in jge mov pushf ss sub pop and fisttpll add mov adc hlt fdivl xorl push (bad) fxch aaa je clc out iret lds adc lret sub out mov dec inc mov xchg xchg jp jnp jb loop pop imul xchg xchg xchg shrb test or jmp daa cmp push push lahf out mov fcoms leave add push bound jo lcall sbb out add mov mov (bad) sub icebp mov lea xchg in pop scas sub or mov sbb sbb fisubl sahf and adc adc mov imul pushf mov fldt aaa jecxz jp cmp in ja mov fldt test scas and fistpl ffreep icebp jne cli (bad) nop aaa mov popl xlat cmp arpl lea lcall sbb fnstcw out mov push xor aas jo int3 stos push in mov mov xchg push push rcl mov lea loope cmp jl popf fsub sbb shrl shrl daa lret lea les fs into sbb inc stos push fcoml add pop xor aaa pop or cmpsl inc out subl mov cs cli xor push dec enter fcomip fistp sub sbb pop lret in fcoms decb and mov pop mov sub aad (bad) aad mov push aaa popa sbb lahf jmp mov bound mov loope mov push and (bad) push pop and mov insl mov xor adc enterw sbb fildl mov bound inc inc adc jb or sub int3 jae mov dec push leave scas sbb addr16 adc xchg pop push pushl pop ljmp xor cmpsb xchg mov loope pop lods cmp mov movsb cltd imul data16 sbb jno lcall rol adc (bad) out loop loopne xchg int3 jb push aam adc loopne fs sub (bad) imulb xor inc imul xor or pusha inc int xor or in mov xor jo repz fwait push add push jo aam mov add mov adc sub adc sbb fistpll pop mov lods (bad) lret and mov mov jmp repnz push mov push sbb mov daa cltd mov rcr movsb movsb out iret push adc push pop out pusha cltd lods frstor fidiv out adc shrb (bad) aad or je idivb in movsl or and imul inc scas pop jl (bad) mull cmp insl mov xor pslld cli sbb mov xchg push mov sub jnp or loopne sbb stc push xchg lret in iret cmp push gs mov and jnp pop sbb mov mov cmp jp xchg out fimull mov inc cmp push dec stos clc mov loopne lods push bswap nop rorb mov out mov jmp lret inc mov push sbb mov xchg or movsb rorb insb push adc xor sbb sti aas loop push mov cmp nop push aad out xor scas xor das dec xchg add faddl mov adc add xchg mov lahf add mov pusha xor into sti insl pushf mov jo push push pop or enter into imul sub cld jge fildll loope mov mov pop fild (bad) or leave mov movsb jp out sub (bad) mov sbb sbb mov and mov xchg xor adc fwait insl jecxz (bad) mov sub push movsl ret jo gs push and std pop data16 and (bad) inc imul xchg push push add call lretw stos jecxz jno (bad) jg stos bound test leave mov enter js jns sarb add test xor and dec cmc sbb insl push adc clc js lds rorl dec push dec xchg inc test dec (bad) mov jl pop add daa mov pop gs (bad) mov nop (bad) push push (bad) loopnew mov lret lret cmp in (bad) (bad) out xchg dec xchg mov int adc (bad) hlt mov lods mov xor ds jno mov mov (bad) out cmp mov loopne pop inc pop push out lret mov inc negl (bad) addb fwait (bad) push xchg (bad) icebp (bad) arpl ret out lds das movsb pop cmpsb adc outsb fisub push and mov movsw adc adc push fwait inc outsb popa bound pop je mov xchg dec sub mulb cmpps cld and jl jae (bad) mov in mov das cmp jb xchg dec je loopne ljmp xchg sbb (bad) and dec ret sahf nop and daa shrb (bad) hlt mov jge inc xchg jg lahf cld rolb xor clc int3 nop test sub jle mov xchg xchg lcall jecxz divl xchg fsubl sbb cmc cmpsl push or (bad) mov dec adc aaa test mov mov popa stos sti mov add sbb test or inc mov (bad) fadds cltd pushf pop jns jmp xor pop gs sub xor insb sub push scas push sbb mov (bad) leave out xchg bound ret mov pushf fild mov cmpsb (bad) loop or outsl clc add js and ficoml jno or dec fstl test dec cmc rolb lahf xchg or xlat and pop sbb popa stos dec cmp repz sub mov int3 leave or jmp sbb xchg inc mov fwait push mov push jns cmp out cmpsl mov jns add test xchg lea jle sub xchg jmp inc insb mov enter std insb outsl mov add xchg sbb popa rcl (bad) mov adc push mov ljmp sbb xor (bad) sbb and and aas scas sbb sbb iret pop mov into mov outsb bound and add dec xchg sub cs jmp xor mov push stos cmp in pop cmp sub call sbb sub pop push mov (bad) adc or lret stos cs mov mulb inc fs mov mov add insb (bad) (bad) or test xchg in xchg adcl aam xor add fiaddl jne insl (bad) mov unpcklps jl aaa xchg sub pop lahf test in mov xor scas and in fisttpll push (bad) mov inc (bad) jp ret sub lock inc jle lret and add add push sahf and in push push cmp mov ficom lods int cmp adc cs dec inc (bad) lock or aaa scas pusha ret sub dec inc lea in ss pop xchg lods xchg addr16 or arpl test add add xchg xor scas clc mov fcomps insl jecxz rcl sub clc loope js cmc inc inc shr cmp cwtl push xor jnp (bad) mov dec xchg aam test lret enter sub idivb cmp mov dec pushf sbb in xchg movsb scas mov adc rorl mov mov adc pop fmuls popa mov push jmp popa orl imul pushf cmp cmp stos and cmp bound adc or pop mov adc test add fmuls loope ljmp aam daa xor pushf jecxz inc or test js xor dec je xchg stos xchg loopne insl adc mov xchg cmp or inc add mov and xor lcall stc add out (bad) jle lds sub push lds sbb dec cmp scas fisubl jne lds test lods push mov int3 (bad) and dec xchg dec (bad) mov fistpll std cmp imul pop sbb insl pusha dec mov jle aam stos dec cwtl sbb ret mov pop and jl cmp mov ja testb mov test rcr dec movb jb push dec mov or xor or mov push and and and mov mov jmp pop cmp cmp mov xor xchg repnz xchg cmpsl push inc mov shll cmp inc mov cmp fistp cmpsb jbe orb lds (bad) cmp aad add xchg pop repz popa xor jnp hlt inc pusha call lcall mov aaa mov inc mov ret imul push sub fdivr push outsl pop andl or data16 scas inc inc out inc jmp mov jno mov mov (bad) mov jmp fiadd adc (bad) adc pminub pop jb pop mov aam adc clc mov jmp jnp sub cmp or repnz pop xor mov dec sbb sarb xor inc mov cwtl mov fcmove fdivrs rcrb stos arpl fsubrs jb sbb jns mov das sbb push das scas cmp insb xor out xchg sub (bad) int ljmp mov add sub out push lea lods fwait dec sbb xchg xor in xchg mov cwtl jmp dec iret pcmpgtw sbb sub imul stos sub sbb (bad) fcomps add jmp sbb clc mov jmp fsubr xorb push jnp sysret (bad) xor or jg int das aaa js outsb (bad) mov repnz cmpsb lahf sub push inc lret cld pop mov out dec adc out xchg out inc lods outsb cmp xor inc sub insb in lods in ja in pop sarb cmp push pop jge pusha dec pop push dec ljmp mov lea push mov sub sbb mov in hlt jno popf add mov scas test sbb loop xchg inc insb sub loop dec paddw pop xchg pop fldl mov jo int push sub xor mov jl cmpsb add fbstp dec scas xor pop in inc dec fwait add cmpsb imul mov or out int3 loopne jns sbb inc fldcw dec xor cmp jg jmp and es daa (bad) fstps mov fcomps sub jl xchg add addr16 arpl push jecxz int mov pop sti lcall int call mov scas loopne pusha pop ljmp lret cmp aam xor mov outsb fbld scas sub lret ljmp mov xor jnp ss inc push aaa arpl icebp push cmp cmp mov or loop aas movsl mov dec std or ja mov jns scas mov in frstor ss dec aaa push sbb cmp xor mov cmpsb xor pop mov mov xchg add push popa mov ja jb out jb std inc ret fsubrs (bad) in pop jp lods inc inc out (bad) lret in push lods inc vcvtss2sd leave lods pop jne imul xlat cmp mov imul decb cmpsb outsb dec cltd xor jge insb test sub cmp fidivrl pop aaa inc (bad) dec mov xchg add mov mov mov jg dec push add imul stc fnsave mov inc inc mov sbb iret je dec sbb fwait int3 dec push dec mov test sbb cmc inc dec pop sahf fdivrl add adc aaa aam pop dec stc fildll fbstp cld xor jge and in dec aad mov clc std add pop in push pop xlat jne (bad) and daa add (bad) lret in test (bad) fstpt xchg idivb push (bad) (bad) jbe outsl insb mov stos addr16 idiv add (bad) (bad) xchg popf fstps push jle sbb jb jno lods or jno notl mov clc out gs rcrb or aaa es repnz xchg xchg cmpsl pop xchg cmp mov jle inc inc adc add stc push pop pushaw popf aad mov addr16 mov ret sbb mov int3 es into push pop stc sub inc dec xchg in add dec movsl iret mov mov sahf push add inc out fsubrs (bad) sub stos push push shl cmp mov sub jl xchg xchg mov sbb inc bndldx sub (bad) add jle push mov dec mov inc pop imul insb mov dec xlat rorb sbb and iret decb and icebp in (bad) or addr16 shll pop cmp repz mov xor sub (bad) aaa outsb cmp mov jns test fimul roll push jecxz,pn insb xchg inc outsb cmc mov mov xor cld and inc fs outsl hlt out cmp cmp test aam cltd int3 adc and sub in jns test push mov lret adc or loope rorb adc les dec xchg cmp sub loop pop jecxz inc xor and outsb fnstenv sub xchg xchg fistpll test icebp cmp clc adc pop rorb fidivl je lock sub nop jl leave push adc xchg stc xor cltd jb add inc dec pop xchg inc mov pop xor mov xchg idiv bound jg fcoml loopne insl and sub inc and aaa mov cs jns lods dec add mov rclb popa sbb lods or (bad) push int in fwait mov push mov xor int3 aad add xchg lods pop mov scas mov or push xchg xchg ds hlt pusha cwtl cmp cmp scas int3 sahf lcall lods dec (bad) lods int push xlat push mov (bad) xor je jle out fcmovb xor scas jns add and clc shll ja hlt jecxz call clc mov cld (bad) outsl dec not call insb mov scas fisubrl dec sub mov lods jge pop (bad) or add push pop enter mov mov cmp add cld inc addr16 mov jp xchg cwtl bound inc pop or sbb push mov mov mov sub or mov cmpb push dec or stos (bad) sub daa jb (bad) out add movsl push inc push jnp pop sahf pusha sub add lea scas repz gs fdiv mov divb mov mov aas add scas cs mov jnp pop insl cmp lahf pushf and xor incb mov jmp and or cltd out xor adc dec dec js jle xchg imul jae int3 pushf movsb jnp xor add clc mov adc fsubrp mov pop cmp in mov xchg jmp stos jbe inc scas ror lret scas mov mov or inc mov les lods sbb in pop shll mov leave jae jo sbb pop and push push lods jne shr cmp leave das movsl inc pop mov std mov test xor idivl mov in sub or repz cmp sub mulps daa or std aad fnsave push push lcall sbb bound dec jb in cmpsl lcall out xor rcll dec pop sbb je,pt sub sarl arpl dec loope xchg jmp inc and xor cwtl cltd mov (bad) jb fmuls lds test lahf out movsl pushf adc scas iret mov push adc sub pop or and pop pop cli add lods and mov aas sub frstor sbb and push pop dec ja jge mov or mov add xchg jb and aaa cmp dec lahf or fdivrs sti fnstcw cs aaa lahf cmpsb fnop ds dec jl sbb push sahf inc jae je insb dec aad pushf pop pop pop mov xchg xchg fisttpl sbb or out push lret pop shr pop sti test movsb lods dec xchg jbe xor aam mov push dec jb repz fnop or int mov into cmp cmp inc mov leave mov xchg lcall mov or test pop mov cmp add or jg aad lods fisubrl aas mov fldl xchg dec rclb add aas mull es or insl mov mov and lahf es xchg cwtl movsb bound in nop push adc cmp add cmp aas xchg add xchg sar data16 sub mov ror hlt int xchg pushf addr16 insl fidivl fs jnp xor pusha mov mov add cmpsb je into push inc cmp sbb notb add addb lods and push lret jl add jge movsl jbe pop fcom xlat stos repnz arpl loopne cmpsb mov dec leave fwait in fcmovbe adc scas jl xor shll pop aad dec or subl mov pop (bad) jnp dec repz imul jecxz xchg and fs and stos cmp pop mov cli xchg cmp pop les ja ret gs iret sub roll aad pop push loopne js in rclb outsb rcl (bad) scas scas pushf out (bad) into mov mov add push fsubs lock jmp mov xor in dec stc ds dec push jecxz,pn inc mov inc xor and loop imul cld (bad) or add inc mov jne sub sbb (bad) cmc out jno lcall std jle insb mov mov add es lock mov sub sbb cmp cmpsb mov adc ljmp and inc mov popa pop pop rcr adc repnz sub or loope mov fdecstp out adc jo inc js rcl mov sub xor pop dec mov arpl arpl xor sbb xor (bad) stos push mov push mov js gs push addr16 sbb imul mov or push aam mov (bad) into xchg pushf call fidiv pop in mov mov cmp and sbb fdiv push mov iret out shll (bad) scas aas jg inc cmpsb out mov push psllq out rcrl jae xor lods loopne adc das sahf rcl adc cs inc pop scas mov fdivl mov loopne inc pop jp aas ja stos and dec sbb (bad) das je (bad) add aaa pushf adc inc test in fcoms mov jb mov cmp mov andb dec aam out lea cld mov cmp aam clc lret push mov roll roll dec add shrl or fiaddl push in push mov mov mov sahf inc bound ds and inc loopne mov jnp fcomp notb icebp nop sbb push int3 bound bound ret fadds rcr xor in popa pop enter int dec sbbb inc or or fbstp arpl adc out hlt xchg xchg nop xlat inc cmp out test mov mov mov cmp stos in and test xor add rorl nop push push jnp jnp lods inc lcall cwtl push mov repnz push loop jmp xacquire or fldcw and lock jge inc xchg mov test loop adc out scas test outsb add fmul aaa mov pushf lret lret repnz pop jo bound cmp (bad) pop mov sarl imul lret push das cmp mov pop xchg jmp cmpsl lods (bad) icebp ret adc repz repnz or fs jnp rorb or jp pop int3 mov dec mov sub xchg pop gs div xchg push movsl push mov ficoml push repz mov cmpsl jmp in push adcl test add or fnsave pop clc xor mov mov sub ret rcrl scas jb shrl icebp loopne (bad) ficomp pop sar or jne add add and jo lret xor jno sbb int3 sub and int3 add outsl dec mov sbb and xor sbb adc ret (bad) in aaa add mov (bad) iret movb stc xchg bound add and out mov fisubrl out shr inc (bad) xchg or mov test lcall lret (bad) popf lcall jno adc pusha fwait inc lea insl mov pop movsb cmp xchg cmp hlt cltd and (bad) minps cmc pop data16 stos out xlat xorb loope jl lds std sbb ficom pop cmc in (bad) std sbb or mov dec jbe les sub xchg mov lods imul (bad) adc mov and cmpsl or xor cmp jns xchg subl inc aaa inc push sub inc cmp sbb fs test xchg jle pop mov and subl sbb stos cmp and sbb xchg xchg or xchg std repnz xchg insl push mov ret push pop (bad) dec add (bad) sub lcall outsb js xor sub (bad) adc add (bad) mov mov adc insb stos call push add adc inc fidivrl into jge mov int3 jne in cmp xor mov adc nop out pop dec (bad) jg decl mov xchg mov ds stos xchg scas jle mov ss fwait clc jae lahf pop mov imul pop ljmp mov add sbb aaa adc jmp scas or les push sarl inc leave jne jmp jmp jb in lret jl inc cmp jne adc daa andb mov rcrb adcl mov loopne cltd push stc fild test sbb xchg les clc fldt push dec (bad) dec dec aaa mov mov shl fimull push mov int3 push add das enter ret fnstsw xchg int dec mov mov les test cmpsb xchg add fs fsubrs cs out pop aam xchg mov xchg gs aas stos cmpsl adc je xchg fisubrl mov adc fnsave les sbb fstp js push std mov push push ficom sbb in js repnz mov pop cmp mov aaa movsb arpl repz inc jne sbb fdivrl adc movsl cli cs push repz insl jbe cmp xorb loope aad mov pop outsb test cvtps2pd (bad) scas jno jo mul (bad) pop dec inc mov xchg je data16 mov in jmp dec ja inc cmp dec push dec je out scas daa test js cli jne add xor dec cld sub and lcall sub push xchg push shr sub jmp add push jo in jb jmp jle in push sar repnz push es jmp aaa push sti jbe xchg pop fnsave in notw test aam push jns sarl in mov jno rcrb sbb jmp lahf xchg jae mov ret mov sbb mov adc inc push popl xchg lods mov lock mov cmp ror sbb pop mov aad inc dec shrb jmp outsl mov jno insb mov dec xchg ss cmp pop push jno cltd shll push rcrl or add rclb stos and push test outsl repnz mov (bad) xor xchg and inc push mov addr16 arpl cmp mov push sbb push dec mov pop xor adcb (bad) (bad) jbe push add out jnp mov xchg push push inc stc sahf es mov stos popf (bad) and sbb or add mov (bad) or push inc adc or xor dec in stos rorl xchg fwait jmp inc pusha dec inc jg sub mulb mov xor mov sub cmc and loope jns sub popf dec push mov cmp data16 inc mov hlt dec sbb and or jbe hlt push adc popa adc arpl xlat imul scas adc cmp xor sarb add mov outsb push gs inc idivb or lock arpl adc jecxz fnstenv fiadd das lcall push jge inc dec mov and or pop dec test mov ds or jg dec push insl push mov jbe int cmp lret xor mov adc mov rorw in pop ss aad push mov not xor insl dec sub xchg aam insl pop mov xchg ja push stos je mov out sbb add jle xchg popf stc add (bad) sbb add jge das mov push ret clc sbb cmp pop xor add push fisubr mov jnp inc jg scas int icebp rcr (bad) call sub mov sbb mov sub aad push cmpsl test mov cmpsb dec test imul ljmp and gs push sub pop fbstp sbb sub or xchg loop (bad) aam movsb imul inc pop test ja and (bad) jo test or pop aad mov shrd imul dec lret add sub ss movsl popa in pop xchg or or push xchg mov lock mov push cmp lods arpl cmp sbb xor pop inc mov cmp ss popa shr push es xchg outsl xor jb xchg movsl in and (bad) xchg xchg imul outsb cmp push jmp stos add in iret mov jb das push sub clc pop aam int3 xor and push fcmovne xchg fwait cwtl sbb (bad) out push mov lahf and leave pop mov cbtw rcll mov out fsubrl mov push push std add xchg mov fwait inc mov add ds cmpsb aaa inc dec mov pop test push xchg std subl push push es insl rcll jmp arpl jae stos rcrb xchg movl adc sub sub inc add sti repnz and pushf ret xchg mov jbe lock lahf mov add jns into cmpsl xlat movl daa jge jge in in data16 stos push (bad) lock aam in push xor test push push iret icebp std inc fs aam jp xchg push jmp cld (bad) pop (bad) jg iret mov sub or push addr16 hlt lea push pushf xchg pop repz push and pop loop pop les loop repnz test addr16 dec xchg cmpsb xchg mov adc mov lock fwait arpl aad shr sub mov xchg iret into ljmp lods mov outsw incb pusha inc xlat jmp inc lock xchg lcall aaa sbb out and jg cmpsl dec faddl je stc pop (bad) mov (bad) mov or movsb mov movntq (bad) inc and (bad) pop faddl inc and cpuid cmpsb call andb adc push ja xchg mov and mov or or push sub ror pop mov ficomp ljmp repnz test ficoml rorb jb mov js xchg mov stc movsb mov repz ret mov mov aad pop cmpsb (bad) (bad) mov xor jbe arpl inc xor add ljmp hlt (bad) inc int3 pop cmp mov jp fcomp in std add test (bad) repz push jbe fs popa or cmp fistl cld xchg or test xlat cmp and jp cld std adc or mov xchg cmp dec fwait out insl out in int stos jl addr16 jo adc arpl jo das stos int mov in outsl dec inc mov test dec add loop je mov dec loopne in cs sub xchg scas fidivr jae leave mov enter mov sbb mov mov ljmp mov shlb xor add add jae in or sub mov pop pusha pop jae aam sub xchg out stos out mov xchg pop lahf inc inc mov hlt pop ljmp insl inc xor cwtl push cld (bad) sarl mov stos (bad) repnz outsl push out pop out (bad) mov call repz mov pcmpgtw outsb jns lret pop out jae ret cli pop lret xchg scas pop std add mov orl in pop in mov scas push addl (bad) pushf dec mov loopne (bad) testb xor cmpb add xor mov inc cmp lea lret push inc repnz sbb negb xor inc rcrb inc mov and (bad) fstpt (bad) repz (bad) adc icebp lock sbb cmp fistp (bad) lahf cmpsl jns jnp movsl pop xchg arpl jp jne fistp push push dec and addr16 adc mov adc sahf (bad) pop sbb out jge dec push data16 popf sub shlb push and jne mov push pop in enter stc sub adc xor add stc xlat aad mov ds inc xchg sarb dec push insl out punpckhdq pop pop (bad) sub movsb push movl xchg fdivp mov out mov adc mov out (bad) loopne or lcall pushf xchg clc enter xor imul fs ret or or fldenv sub push dec xor xor pop in jns mov inc inc popf push pusha jno add test fldl push and lret xchg dec lea mov inc cmp cld out jg adc push push sbb cwtl mov xor mov lret out sti mov repnz sub int3 xor ja or movsl xlat ds in push repz lods scas fisttpll mov (bad) hlt xor scas lret push pop xchg (bad) xchg adc lods or (bad) bound pop pop mov mov and ret insl and jne sbb sbb iret mov pushf test cmpsb adcl jne inc xchg sub mov aas pop push pop mov pop push cli pop repz pop cmp sub outsb mov ret xor mov pop xor mov xchg (bad) and mov mov add sbb adc jge jb das dec sbb fnsave dec into out xchg jge mov mov cltd xchg inc or cld or jmp in faddl xchg fisub xchg mov mov adc sub in xchg xlat enter or or imul xchg int3 jno mov es and xor push cmp insl pop inc mov ret jp addr16 jecxz dec or ds test movsb and gs adc cld add repnz stos inc (bad) incl xchg cmpsb jg pop cmp jns jg xchg stc push idiv fmull ret test push repz aam xor dec inc insl cmp in sti repnz mov bound add lret aaa jae mov sbb ljmp jecxz inc test jnp imul loopne mov dec push xor mov into outsl add dec mov jg ret jp fcmovnb fildl scas sahf leave test pop (bad) pusha mov add lret fidiv push jo xadd add jmp push pop jo shr adc pop pop in mov push outsl inc and je out sarb cmc imul test das jae or daa test int stc xor mull mov (bad) jp pop mov push add movsb (bad) adc add fildl xor rolb inc and sub jp push push orb lret cmpsl je push inc in mov ss (bad) jg xchg push inc rclb sub jge gs adc or lods fistpl popf inc xchg ret dec arpl and mov and scas rolb xchg outsb push (bad) icebp add insb xor loopne lret mov iret adc fisttpll pop mov push inc cli mov (bad) mov mov lea jle dec mov xchg xor (bad) aaa sub lret movsb les mov ljmp cmp jg pushf mov sbb lcall jl dec lahf jp mov pop or push mov push xor out fbld xor pop (bad) add jo jae insb test sbb xchg add add cltd push js sbb jmp inc dec cltd aas cmp mov or mov push test sbb jb cwtl xchg out shrb cmpsb sbb jne pop sahf in mov xlat and leave aas mov rcrl (bad) nop icebp in cmpsl cmp fst and or lds adc jecxz jns repz scas jae arpl dec pop pop loope ret dec jb cltd mov mov (bad) push hlt shlb incb cmp and xchg xchg pop mov xchg xor jne adc xchg inc outsb mov xchg sahf (bad) jl xlat sarl jnp mov push mov dec in aam cmpsl mull push addr16 cmp sti ret insb int3 jg daa sti imull sbb iret repnz jo jae in test (bad) cmc sub iret mul call fistp (bad) ljmp dec adc xchg add popf sub pushf lahf inc push test cli add lret xchg xchg cmpl call mov xchg pop fstpt in push pop loope adc int3 sub nop adc add rcrl push lock cmp dec cmp jl cmp shrb pop xor xchg push je into mov ficompl cmp fildll xor sbb sub fldl xchg daa adc push mov clc bound inc lock mov jo xor sti push stos dec push xor scas scas stos lcall mov push pop sub pop xlat fbld jno and mov rcll push clc rcll sub jp outsl inc inc int mov jbe test imul xor mov jb inc ss jecxz stc mov scas adc call mov mov lods pop push outsl mov lahf (bad) cmp add adc loopne imul sbb xchg push dec jne loope jb xchg pop clc out cltd xchg lcall repnz ficompl sub clc jge rorl mov xchg pop pop stc xchg (bad) ret and sbb (bad) and add sub gs repnz daa ret sbb out repz push fbld sbb insl pop adc add icebp loopne (bad) xor sbb or lcall add jl sub jmp ds in nop rcrl mov mov mov inc pop pop test leave mov sti cmc sub aad lods jge sbb icebp mov jnp cmpsb jb lds xorl add adc stos mov scas mov fsts iret cmp mov xchg pop push fdivrs cwtl arpl pushf outsb jecxz add sub icebp int cwtl xchg or push test ret xchg add xlat arpl mov lret jo mov sbb mov xor loope jbe push sbb (bad) pop cli sbb insb cld and pushf fcompl mov nop sahf xor mov add addl sbb lds add icebp popf data16 fwait sbb dec stos fmuls pop test stos dec sbb pop mov sbb cmp data16 fcmovb jge push jb and xchg add mov test das aaa mov orl lea xlat cmc pop testl xchg leave push test leave mov mov cltd push mov das stos xor mov insb and addr16 icebp and aad sbb in mov push adc rorl dec divl cmp ss jle push mov out add jno jp fiaddl (bad) std repz push sti repnz pop sub pop and jmp cs cmp jp scas dec mov lret aas rcr adc lea loop xchg jle,pn mov out mov jg fs imul push popa xchg test dec cmp arpl add je jmp mov arpl push sahf movsb arpl and pop cmc sarl andl xchg xor cmp push ss fisttpll sbb sub xchg inc repnz icebp pop lods gs aam lcall leave ror sub mov cli mov in xchg in cmp das xor pop sub stos data16 xchg inc out (bad) jg cmp lods mov incb and loopne sub jge loop fsubs lock push and out (bad) aam or outsb add repnz push mov sub jae in ljmp sub mov xchg out lahf xor and sbb cltd dec gs gs scas dec xchg mov sub shrb (bad) dec jl shr dec cmpsb cmp test mov ficomp fnstsw enter mov fcmovne jne xorl sbb test inc addr16 push xlat data16 cmp mov pop rol mov or mov pop xchg scas adc mov out add dec fdivrs or mov mov jno mov fisubrl aad pushf pushf inc sub mov push dec (bad) sahf jmp xchg push mov icebp or or xchg fadd xchg stos xchg addr16 je aaa fcoms call loope jmp out dec sar xlat pushf into in outsl mov jae,pt fisttp pop (bad) ds jnp test xchg mov add jno dec lock cltd daa push cmp sbb sti adc mov repnz inc fisttp leave shrb imul cwtl sbb in test push xor test (bad) adc shlb xor mov (bad) shl push (bad) jae pop push mov add divb hlt mov xchg jp lret outsb leave mov mov imul jnp dec loopne mov sub aaa vmaskmovdqu leave negl out xchg (bad) shr dec pusha pop dec cltd ficom mov pop or fbld jl clc mov push loop mov arpl inc sarl sbb pop mov sub sbb bound into fwait pop stos sbb pushf sbb popf push leave xor movsb mov jns push (bad) dec cmp xchg push test jl mov test sub cmp (bad) fisubl mov test shld sub mov int3 mov rorl outsb stc push in aaa xchg add pop fs mov int add adc in into jnp out push sbb pop gs daa cld movsl xlat stos jb push lods mov lock or inc xor clc (bad) popf inc (bad) lcall cltd rclb dec inc rcr and or andl mov enter and stc dec lock orl test lahf imul sbb les push sbb mov pop bnd addr16 nop push adc inc push and lahf sti scas jl rorb sub or fadd inc jecxz andl or lret jnp cmp jmp roll aaa mov or sub add or add loope dec incl mov mov scas test sahf jg sbb xchg sub pop and pop int3 sbb movsl and fildll mov sti fwait icebp rolb pop push fisttpl add pop add cmp adc insl repz lahf out sbb orb (bad) (bad) and mov cld cmpsb jae in es pusha push pop gs mov pop sub push test aam push insb mov cmp dec inc jle dec dec xchg cmp bound xchg adc and lret test test dec (bad) (bad) mov movsl ret xor sahf scas mov sbb loopne mov mov push pop in push cmpsb (bad) int3 cmpsb xor jae mov and test arpl inc mov inc mov ret mov std test sbb pop scas push pop outsb mov adc mov fldt dec sub dec stos pop push add arpl or mov inc in cwtl fisttpll add adc (bad) cmpsl int3 sub mov sbb insb mov xchg (bad) (bad) ss and dec pop mov mov bound pop jnp jb fwait repz movsl sub pop push push push insl lahf jmp fcomps xchg lods mov jne out xchg push iret cli out mov push jmp add jg add dec fisubr js ljmp add and xor lods lock test mov cmpsl push lret mov out insl mov dec dec cmp mov ficompl xchg pushf lods (bad) insl ss mov mov out lahf push and sub pop andl mov add fwait mov push (bad) jbe adc pop insl sti scas lea ret popf push daa mov gs mov addr16 std icebp daa cmpsl dec decb lea jnp mov sub push repz ret rcl pusha xor adc cld repz sbb mov (bad) xor push dec lea outsl xchg lods xchg test jmp sub lret xor cld jp pushf das shrl out xchg jle and dec shlb shrl or adc add out adc adc (bad) xchg adc dec sub push jp ss cwtl subb mov dec out adc dec sub mov add mov outsl fcompl (bad) mov lds cltd xchg xchg test in lahf js leave lock popa sub repz js cmc (bad) test add push nop add (bad) je xchg adc movsb xor (bad) sbb fidivl test mov lret xchg aad and push in adc daa inc xor sahf arpl loopne fsubl dec inc shrl mov (bad) mov lret fbld push push push push stc (bad) xchg fldenv jno cmp inc pop mov ret shll push mov cmpsl mov jo,pn lock test push movsl xchg push push mov sahf pop adc mov xor addl dec or push daa mov (bad) xchg rolb push sub repnz mov mov sub mov popf mov pop sub scas dec sbb lods xor cmp xchg xor sub stos push dec das inc push adc arpl sub dec cld inc pop sti sbb or popa push jge popl or or push ret xor aam jne cmp jne sub inc stc int push insb insb hlt sbb jnp pop aad cmp orl sti jnp and mov fldl dec jnp stc jmp add mov sbb pop push popw cmp in ss ret leave jle mov call and mov (bad) mov or jbe push cmc jecxz fprem1 xor jle xor ret lret sbb pop roll je in jns pop sbb pop cltd inc fdivr pop popa push pushf add (bad) jecxz mov xchg mov xchg imul jle sbb or add icebp dec movsb add jp (bad) fistpll mov ror and jmp notl cmp push mov sarb or or (bad) test dec lods (bad) mov add pop js rorb (bad) lret cmc jne stos in std push stos dec inc hlt sbb andl fnstsw push jns sbb add sub iret jle rcrb leave out in xor bnd sti sbb test xor adc pushf sub xchg jmp pop cmpsl cltd push sbb push push repnz xchg and out xor in insl movhps push adc jp mov push lods shlb push lret mov mov adc mov mov mov mov mov repnz dec into cmp aas pop sub lahf jns or push push and out ja and push stos in pop in push sbb dec xchg dec das lret pop das jmp lds jo dec movntq and into lds or sub hlt cs (bad) test and and fcoml enter test cmp xchg dec or pop cmp xchg dec adc (bad) adc cs pop or dec jp cmp push int3 cli mov movsb je dec pop ret icebp into xchg xchg jae push in imul fmulp cli (bad) or dec push mov iret sbb clc mov jecxz mov icebp xchg or lods lods jbe fistl mov mov pop jnp sub sbb xorl jns cmp jg xor xor jmp xor ror sub cmp sbb not mov in pop mov (bad) (bad) loopne data16 sub mov scas sbb sbb xchg subb mov aad mov adc lret out sbbb xor outsl and test xor clc cmp cmp pop enter xchg loope inc cltd or fwait fs ror (bad) pop ror aaa dec sub sub sbb test xchg not cld dec push sub roll in data16 lahf mov jg sbb cltd loope xchg xor aaa imul popf or cmc lret push (bad) pandn xor sti (bad) (bad) xor ja (bad) cvtpi2ps jmp bound sub xchg popf stos xchg rcrl or fdivr mov js xchg daa (bad) ljmp ss test xchg dec pop xor cmpsl aaa decb lds push shrb les pusha js cli cmp add cmp in mov add in je in cs imul test push int je call dec cmp cmp sub pop sbb xor cmp jno cmp mov ljmp or push fisttp sbb mov rolb push jecxz ja fisttp push in sub inc sbb adcl xor sub push or dec or arpl ret push dec push movsb mov sub mov imul je jns (bad) lods (bad) and insl mov int jle pusha stos cli and push mov loope sahf in xor xor or pop add fmull adc call dec pop cmc das mov jns adc cmp (bad) (bad) push arpl and daa daa popf pop imul mov out orl icebp inc adc bound dec jle sbb sub push std jno xchg add sub push mov jmp lret mov movsl xor std push stos stos xor fsubs je fldcw dec jg adc jg scas add push aaa mov xor aaa cmp cs xchg imul push mov push sub push mov push xor in das icebp (bad) andb sbb mov push jl repnz push inc ret inc ss add add test adc xchg je mov or or and adc es adc sub dec sbb maskmovq divl pop xor and outsl mov lcall scas dec sbb xor cmp dec (bad) shrl mov xchg mov pop xchg std mov ficom mov call out adc and inc dec sbb fmull outsb in call jae push jo xor xorl push add mov pushf out arpl and rcrb stos pop call repnz ja je,pn fsts popf pusha lret lcall test push cmp sub mov pushf xor sub mov pop lret std daa cmpsl mov inc test push cmpsl imul lock dec out cmpsl outsb mov cwtl sbb mov jns inc and movl or pop pop jae and repz xchg lea lret and pop ret xchg adc icebp jnp aam rorb rol rcrl bound in push movsb jbe imul faddl dec cwtl cmpsb cmovns icebp or jne test cmp push pop insl add cmp xor mov add pop jmp dec mov fprem1 adc insl pop add inc es out test xor fimul adc push stc jp inc mov stos add push ret notb (bad) rorb lea repz xchg and inc mov inc sbb int3 xchg call pop inc dec mov in mull adc scas lea (bad) cmpsb shrl adcl or test sbb xchg pop test mov iret test cmpsb push test dec fbld mov loop lea int3 push cmp out pop loope mov fwait pop jecxz jp jle stc jne addr16 push icebp rclb push lods add arpl sti jecxz sub push adc into pop fldcw lahf jbe jmp mov xchg movsb inc lds imul xor int3 xchg rcrb push mov adc xchg jae sbb adc cli mov (bad) mov nop idivl fmul add jecxz cmp jbe xor dec pusha inc mov repnz ret bound nop int3 inc sbb (bad) mov test insb cs dec in in in ds outsl adc popl dec popa and inc inc sahf add (bad) je xor push pop push inc das adc int and push jno sub out xlat outsb lret cltd pop fwait or scas cmp mov (bad) dec aaa fiadd rorb lahf adc adc out lds ja loopne in repnz inc out pop sbbl test outsb xor test xchg shrb mov cmpsb lock test rclb (bad) ret xlat rcrb adc dec popf movsb mov push xlat popf mov loopne pop mov push inc sub xor ror mov mov js mov sbb sub bound dec cmc scas aaa fs cmpsb inc xor aam and mov movsb mov cmc xchg lret and mov test dec repz rcrl out enter adc cmpsb fcomps adc pavgw iret dec push ja cld hlt je daa mov in es test fildl gs mov push pop outsb mov xchg mov into dec mov or data16 or or movsb das mov (bad) xor sub imul fbld mov mov mov ljmp xchg jno jle bound sbb dec xor popf xchg sub pop pop loope fs push xor mov pop xchg lods cmpsl popa sbb inc sarl xor adc lods ljmp cmp xor lods mov dec xor inc in push cmp orl int out push mov pop mul scas xor imulb sti inc add subb out mov pop clc cmpsl fwait loope loop fwait sub rcl sub popf add aad lods xchg data16 pop shll jge in inc jp lret sbb or cmpl fcompl push cld test adc xor icebp sarb in icebp aad sti lret cmp sarb push pop aaa (bad) cmp faddp lcall dec cmp cld cld jmp insl loope sub mov in xlat hlt pop int3 shrb enter cmp mov xchg ret sbb mov ja cmc stos adc xchg dec pushf xor inc mov shlb xor push and aam js (bad) roll push pop mov mov mov mov lds (bad) jbe loope data16 xor stos xchg movsb cmp ficomp bound lods pop aad jae mov sti nop push or xor lods add cmp push daa jp movsb in pop pusha pop jae test inc sub push cmp in stc mov mov pop dec pushf mov xchg push xor jge das adc inc jnp pop inc das (bad) cmc lret mov push push (bad) jmp cmpsb dec insl (bad) sbb int3 jle inc mov jbe lret and pop jae lret insl aaa pop rcrb nop jb ret xchg data16 rcll ja mov xchg adc ljmp dec ret cmp inc fcoms icebp in cmp fild enter xchg jns lret dec popa imul fucomp mov add mov xor push lahf nop mov repz xlat and jo sub pop sub adc stc mov cmpb xor dec mov or fistpl xchg pushf mov sahf in and pop std hlt shrl ret push cmpsb (bad) cmp mov xor loopne sbb outsl sahf xchg xlat fsubrl repnz (bad) sar je mov mov push js mov rcrl lret in push data16 pop jmp cmp dec test cmpsb inc xor push outsl fcompl xchg (bad) or subl in mov mov call jno mov pop movsb add cs fstpl sub stc fisttp daa cmpsl cmp adc push sbb in ret clc xchg mov push jg mov inc sbb ja dec sub push mov cmp inc mov roll sbb ja pop dec xchg adc test pop add mov hlt incl sbb or repnz dec or dec push in imul mov test cmp lret jge in or mov sub shll adc idiv xchg outsl and mov or xchg out add mov jne sbb cmp or lock shrb push bound xchg push enter pop gs adc inc add cltd das pop mov (bad) pop adc adc ja dec daa adc (bad) push pop sbb sbb jle ja sub xor repnz xchg adc dec insb (bad) pop and mov fwait out xor mov dec js stc or dec jb adc push loop das aas roll adc xchg cs (bad) add mov (bad) int pushf xor pushf jmp adc push jp adc and push pop rcll pop loope xchg notl and (bad) lds mov adc jb pop or adc inc lcall mov sbb aam in mov shrb in xor data16 mov push repnz mov (bad) sahf cld aas mov mov idiv adc pop daa addl pushf js mov fsub sti in gs nop inc xor popf mov leave scas iret pop mov push and or faddp or sub imul inc jbe fucom test or gs arpl mov jl repz mov push push or (bad) and bound sbb mov dec (bad) pop add lcall xchg int3 pop fiaddl aas xchg lahf xchg leave add cmpsl pop inc cmpsl pop mov cmpsl xchg mov or sub loopne sti mov inc mov punpckldq in pop outsb jmp dec out fwait lcall add and mov movsb lock roll xchg leave xchg or lds (bad) dec or xchg (bad) dec test pop mov lock aad add xor mov pop xor push sahf in or and and (bad) sub jo mov push cli inc sbb push mov mov jno inc push xchg fwait test mov rdpmc test xor dec mov das jg test andb mov scas aad mov inc decl add pop push lea push and mov push test sbb and sub mov ljmp cwtl xor inc test hlt bound mov xchg lcall neg in (bad) mov cli jnp stos fcmovnu mov push inc packuswb inc arpl into sbb cmp xchg add inc mov cmp out insb (bad) mov push and arpl push inc pop cltd mov dec std add dec jp stos in sbb test jg sbb pushf out xchg cs mov repz pop dec (bad) cmp cmp sub and mov jne repz mov js (bad) sti mov inc or daa push loopne inc pop mov lahf mov mov call sbb xchg in sarl fcmovnbe xchg imul mov sub clc mov dec or add sub mov lods (bad) (bad) dec xchg dec inc push je imul xchg dec or mov lods pop or pop rcrb sub dec outsl jp scas loope (bad) incl fs inc aam push jae push add sub or (bad) out cmp xchg mov fsub cmpsb jne arpl inc pop inc js inc add xchg hlt test outsb dec mov xchg (bad) jl or jno loopne sbb inc loop enter aas sbb mov shl and dec dec pop lock adc mov lods fcoml fnstenv ss popa cmpsb int rcrb push mov mov pop movsl ja and inc sti andl into or dec call movsb mov add movsl lods std loopne loope ret sti (bad) mov bound jl loop lret es mov aad inc into jmp hlt sbb movsl fldt aas sub and mov push xchg jae mov or jo lock mov cmp icebp and ss repnz jo in sbb mov lods mov cmp out mov adc adc aaa add lcall mov jae jge loopne push movsb push jge cli jle mov lods fwait adcb dec or ds std mov or adc dec cmc icebp test sbb mov stc mov div movsl cltd clc xor and fwait lock or (bad) xchg iret popa or sub das mov inc jns rolb cwtl in lahf jne jb sti inc mov push push sub icebp outsl fwait ss inc sub jp push lcall and js inc jne cs mov mov call adc xchg imul arpl pop nop dec (bad) adc xor add data16 cwtl aam repz cmp aad jbe push ret or test movsb stc fdivrs lret cmpsl outsb das rcr xchg fs and cld sahf ret dec out div xchg jb (bad) cli dec cmpsb add gs mov mov mov adc cmpsl and jmp or push xor add pop cmp fadds push imul mov movsl fstpl insb in pop jmp or xchg cmc mov loop xchg xchg push adc jae fist inc jo nop std push mov in pop (bad) (bad) sub mov stc in or les scas cmp mov mov mov out shrb scas orl mov push mov cli sub add (bad) push jl insb push or xchg repz jbe fucom sub rcrl and jp and pop add cmc and cmp xchg mov inc into mov movsl adc mov fcmovu and fsts call or or jmp jns int fdivr inc fnsave out mov mov push test adc inc sbb jbe out movsb xchg mov imul or fistpl add push pop mov xor js pop mov ret push sbb stc push shrl gs movsb xchg popa out out loopne clc or daa notb jge pop scas dec enter mov mov adc cmp lahf add push cmc cwtl cmpsb jl (bad) test and int3 push aam mov mov cs add push ljmp (bad) ja faddl push (bad) jmp add mov push fstpt loopne shlb push imul dec test mov pushf sub popa sbb xchg lret pop jb xor insb pop jb xchg sub xchg mov mov adc mov (bad) out lods mov js int notb neg aas std insb out icebp subb xchg pop adc mov fnstsw push mov push das cmpsl cmp out push outsb xchg fidivr sti out mov pop fistp push mov rcrb or add cmp icebp scas sar insl and (bad) jns movb jne lock adc mov ret cmpsb pop nop in add inc lods push cmpsb std xchg mov lcall sub add loop lahf sub adc sub and cltd inc mov ss ss leave pop pop mov mov mov push lds jno jmp (bad) cmc movsl cmp sbb loop jg jo cwtl ret mov faddp mov cmp sub mov dec (bad) out lods fsubrs movsb mov imul out daa bound mov add das mov rcrl ds bound mov and and pushf cmpsb cmp mov rcrb push mov and jae xor adc popa xchg push dec xor ja xchg ret jae dec push mov pop xor sub jmp cmpsl out cmpl dec or cmp cmp and stos jbe popf cwtl sbb cld push inc dec mov arpl nop movsb lea jno mov sub xlat jl test adc add imulb lds xchg lcall (bad) jbe lods xor pop push push dec mov mov mov iret dec cltd adc push inc jecxz aas aam mov or inc dec inc addr16 lods cmpsb or push lahf icebp movsb mov jno fnstenv mov pop mov sbb lcall mov iret pushf clc push xlat sub lcall rcrl xadd movsl loope (bad) jge cmpsb (bad) ss insl xor sbb sti (bad) sub jnp movsb sub inc inc lcall fldenv insl jmp ljmp fs push or movb mov and xchg inc dec ret dec pushf scas jae mov test inc pop sarl sbb push push lods and inc rcl test xor xor idiv xchg pusha dec cmp jmp mov repz shlb fnsave pop in fs pop iret xlat xor inc daa js push loop sub mov jnp mov dec and rep repnz adc inc sbb enter mov adc cs movsl std js or scas fiaddl pop mov adc add xchg pop scas lock mov push xchg aam pop inc clc and in mov cld xor out loop test cmc and xchg xor push (bad) popa test fdivrl sbb xor jmp add xchg or pop or lds cmp cmp (bad) out push ss outsl sub mov jmp dec push repnz cwtl xor in push sbb shrb mov push sbbl popa lret cltd test cli int3 stos cmp ret ja std sub dec and mov sbb jge daa mov sub dec out sbb fisubr in lods rclb (bad) sbb or jmp or loopne dec and and stos sbb les (bad) xlat lods repz stc addr16 push pushf dec inc outsb dec xlat in pushf push push scas and mov jp dec dec bound int cld cltd jl xchg xlat sbb jle inc inc pop in add ljmp add and or fcomi cli xor cmpsl pop (bad) add (bad) fs cmpl mov xchg mov fsts inc sbb jbe adc pop push push dec repz in nop and and xchg mov xchg int3 dec fbld aad mov test jns push dec fcmovnbe scas mov cmp push inc jns xchg adc dec pop test vpmacssdd push loopne (bad) fcompl push push inc jg jmp and stc xor sbb mov jbe pop inc jg sbb out setnp xchg xor adc cmp (bad) inc cli imul xchg lret xor mov mov push faddl repnz pop (bad) into flds lock push (bad) xor cwtl xchg mov cmp mov sub push push jle xlat call aas out push dec fmul xor cmp fistpll xchg cmp xchg icebp pop iret sub inc pop aaa mov lds xchg movsb in lock adc stos std adc out fucomp mov adcl cmpsb shrb int3 cmpsb loopne push popa sarb xchg cli dec data16 shr or cli (bad) out enter fnsave fcmovbe aam jecxz stc jno sub mov xor leave push mov repnz xor xchg clc mov xchg mov and mov mov add push test jle mov pop hlt xchg cli out adc dec jb out call add mov or fsts lods int3 (bad) xlat xchg call jb add loopne push bnd cs push test lahf mov pop rcrb xchg adc adc fsubrs out jl jbe sarl je mov cld sub add push sbb and ja in aaa push insl and mov lcall xor cwtl pop sbb repz arpl cmp push add lds xor push loope sub jno pop test pop and repz pop xor cwtl push adc fwait movsl (bad) loope inc mov pop jne xchg and cwtl scas or push mov mov inc cmc push pushf fcmovu sub mov pop inc xchg test dec lods mov test imul mov mov jbe jnp cwtl mov push mov and int adc push aaa inc pushf js hlt inc in loop scas cli repz sub movsl adc (bad) sbb mov inc rcl sub shr shrl imul xor mov adc cmpsb mov pop fimull outsb mov ret arpl push and fdivr in xchg sbb cmp clc enter adc or push or cmp or scas jmp add fcoms ljmp stos imul dec mov mov mov mov pusha fwait es mov enter push ficomp sahf mov mov out popa adc jb icebp daa stos hlt dec lret push xchg cmp push jo stos repnz into sub mov (bad) mov fimull iret or cltd repz popf or pop shlb decl in divl rcrl notl les jnp adc mov ds sbb xor enter pop aam or push insb adc or cmp int3 xchg rcrb cmp dec inc sbb cs cmpl mov xchg inc ljmp in jns test outsb and ss mov xchg mov xor test mov mov adc pop push imul push ret shrl pop adc mov hlt out mov rcrb stos pop push fisubrl push mov jno xchg mov mov mov mov lds shrb push std fldcw jl dec push xlat lret or cmp ds pop fistp into pop idiv mov cmc lahf sbb les mov xor sub adc std call dec repnz inc loopne pop adc push push jle (bad) xor pop smsw sbb mov or fisubl xchg (bad) nop jns stos lods inc jnp jb xor adc lret data16 and or lret dec xchg cmpsl push dec cmp or jmp repnz int dec push sub pop push cmpsl cs fwait popa xchg jp mov (bad) cmpsl and ret lods dec popa xchg test rol stos lea repz dec and clc into pop mov sahf push sub and mov add lods inc (bad) ds xchg mov adc stos sbb add sahf push fldcw movsl cs mov push lods dec xor cs mov popa sbb bound sbb and cld loopne lods popa ds jb aas sub jnp jmp ret add notl xchg out (bad) push ljmp cmp dec daa stos mov sti scas push mov xor mov loop fldcw mulb (bad) dec pop push in sbb div cmp jg mov mov adc adc leave iret popa or aam sub inc cmpsl mov dec out inc lods inc inc aaa and aam sbb iret xor push (bad) movsl (bad) sbb and std add pop pop add push in dec lods aad add adc or stos (bad) mov adc xchg adc push xchg jns adc daa mov push loopne push sub push jl jl (bad) mov mov into data16 cmpsl adc xchg scas dec inc pop (bad) xlat leave movsl sbb push (bad) hlt adc mov insl sbb (bad) daa inc xchg jno (bad) je bound jl popf shrl jmp inc call mov mov xor jp stc mov fs lret sbb popf lret mov sub lret mov dec in and push cmpsl sub ljmp cmpsb inc inc push mov ret aad mov xchg inc dec mov test rclb xchg repnz cmc mov out inc clc mov cmc or cld pop sbb les jecxz push adcl fs dec (bad) sub out loop stc cwtl sbb (bad) mov jecxz out push in push mov test dec dec aas call mov insb movsl lds mov xchg inc shr shll stos lcall dec pop mov arpl pushf pop scas push insb pop jecxz enter into pushf jecxz mov (bad) mov push cmp pop and insl jg bound (bad) mov jle mov add fs add mov fs inc jmp lcall fisubrl div popf push xchg lods out pop jo adc aam icebp fnsave inc sub inc (bad) hlt (bad) push icebp dec dec ja and jp or in mov decb jp xchg adc movsl sbb sbb pop in imul pop rorl sub mov lock mov mov sbb sub push cli and pushf dec dec hlt and and les (bad) mov (bad) popf ret lret jno mov adcl push movl jnp fisttpl sub or fcmovnu mov and xor mov cmpsl enter fs mov lock sahf cmp call movsb in or mov pop mov repnz adc pop dec jg jp repnz test in sub cmp adc xor xchg fisttpll (bad) fisubl ss cli mov daa andl push inc and cmp fldl int iret mov cmp aas pop (bad) pop ja jl das xor pop fsubr orb ljmp fdivs mov cmp aaa adc (bad) icebp xor push and xchg ret stos aaa call pushl je mov ja mul mov pop mov push push or popf jae gs sbb lret mull adc add cs cmp or popa pop aaa cwtl and mov movsb sti cmp shrb mov add cmpsl subb scas movsb xchg push mov fwait add jo in cmp and xchg sbb loop fdivrs (bad) (bad) push fwait and nop test inc push fcmovnu fxch jmp adc movsl jb and dec or jns mov lock das or (bad) adc cmc insl vaesdeclast mov sbb push inc mov cmc (bad) jae inc or or aaa scas lods push adc scas fbstp loopne dec dec (bad) pop inc xor jecxz fstl add pusha hlt rorb inc out mov pop sbb rcrl lret inc adc adc mov or andl in xchg das inc pop sub lahf repnz call into mov jbe fistpll jmp or (bad) push in aas dec mov fldenv mov sub and or in mov bound xor push sub xor dec jg fs cmp (bad) pop shrb push jnp sbb outsb arpl pop scas hlt divb cmp mov cmp add iret and adc cmc cmp and inc mov cmpsl or mov push es add fwait ljmp mov mov or pop dec mov aam jg xor sub mov and lret sti add enter push out push or cmpsb jp fmuls adc loope icebp push inc cltd mov sbb jmp ret mov cmp inc ss dec pop es pushf call lods mov std mov push mov lcall shrb sub jne data16 lods daa ljmp mov cwtl mov (bad) adcl mov scas movsb add mov (bad) sub (bad) aam xor int3 test xor cli add dec sbb imul mov pop add pop ljmp jno test in jle lods mov push xchg push test or mov xor add ret sub adc xchg outsl (bad) in pop and jle push je out or dec icebp inc dec cs pop and rorb mov mov daa loope rcll xchg paddsw mov lods dec std gs push inc inc or adc dec jmp lret loop addr16 and rcl in ret test inc add daa cmp push add jle push movsl sbb in mov shl jmp (bad) mov dec and into js xchg popf dec lret jecxz pop adc mov dec inc ja and fnstenv leave xchg mov aam sbb test add cltd bound jmp xchg test sub adc roll mov rolb arpl test in pop xchg rclb jnp lret add (bad) jb data16 or cmp pop std sarb add lods test enter in inc test call or push lcall mov push xorl pop fmuls mov pop add popa (bad) stos push xchg mov movsl out lods inc dec jb mov sub xor pop sti sbb push loope lret push inc clc fldenv dec xchg out cli test push push add xchg mov (bad) sti jns sbb int lea or lea dec shlb es xchg push js pop sub add mov ds sub push mov (bad) loop loope test or (bad) icebp jbe xchg or into xchg in mov ror xchg cmp lret in leave xor sbb adc aaa sbb xor es dec repnz (bad) fmul mov push lods jne stos add xchg out stos and ja movsl movsb nop stos lcall mov (bad) push jp and outsl ret pop push clc inc mov shl fcomps cld pusha repz mov push pop iret dec test das fildl mov jb arpl mov push mov sub lods sub inc shrb sub pop dec dec jecxz rol xchg icebp daa and mov in dec in sarb test les lret lcall pop (bad) jno mov fs add mov add pop dec fsubs pushf add mov dec and and adc mov mov mov lock and or jb sub jae cwtl mov sub mov dec fildl xadd cmc lds sub mov in jmp jne loop insb dec xor mov scas xchg push cwtl and hlt xchg (bad) adc icebp test or or sbb in sub nop fisttp sub fnop xlat or adc es mov or mov cld stos insl xchg mov or pop sbb sti push lret mov sbb and pop cli xchg pop mov push jmp iret dec insl out xchg sbb xlat sahf movsl xchg mov inc sbb or adc inc aam sub pop mov popf adc call and rorb lea cmp in mov pusha or pushf adc cwtl std push or call xchg cli sbb lahf mov arpl jp mulb jecxz jge and xlat dec es fidiv repz jg adc sbb fdivl pop dec (bad) fnstsw sbb pop out (bad) aaa data16 std or sahf ficompl subl outsl and ja sub mov pop mov sbb rcrb in stos enter icebp xor mov jnp mov ret mov lods inc js xor call dec fwait inc imul and or pop cli inc fidivl sbb adc push lcall xchg jne call mov (bad) hlt sub cli aaa mov dec test lods push outsb outsl out pop push scas lods gs je cmc dec ja xor es pushf push mov add into mov xorl (bad) jecxz or outsb repz cmp or jmp mov jb scas mov (bad) cld lahf mov lret xchg das or ja gs scas push pop mov cltd sbb xor jecxz cltd pushw xor sbb sarl insl fwait sub push jo mov pop test add cld shl and ja pop push shrb je lret cmp and inc dec mov daa stc roll jno pop aad jae ficomp (bad) fstps adc ja and mov mull ljmp jns daa repz sbb outsb imul jecxz xchg cmp je stos dec mov jmp push push inc adc or and popa fnsave jne xor inc dec jg ljmp inc xorl imul jecxz cld mov adc adc jno pushw push adc lea dec insl dec fildl inc add push std and icebp inc repz int rcll loope cmp (bad) fdivrs pushf nop jle xchg ss icebp mov jbe mov ljmp adc aaa lods pop leave adc and pop xchg xor add pop movsb loopne (bad) (bad) xchg push idivl jo pop lods inc ds xchg mov add cld ret ret pop mov out mov fmuls pop adc cmp pop popf mov mov data16 cmpsb mov stc pusha pop scas (bad) mov sti (bad) sub ds jecxz push push jp mov xchg mov xchg cwtl adc pusha cmc add jae or adc in stos aas push cmpsb cmp adc or les das aas mov or or adc mov cs mov repz cmp or fldenv xor mov lea nop enter cwtl mov pusha lods push jle lea mov xlat test push jp lock pop push sarb adc add jg decl enter jl ljmp pop sar xor jecxz jbe xor out mov rorb cmpsb or movsb sbb xchg mov jle daa mov lods mov or dec xor push les lock roll mov leave add stc xor dec je or xor pop hlt and lret mov or dec imul pop hlt js movsl mov mov cmp insb and scas stos mov gs cli push fiaddl cmc dec fsts xor add sarl bnd addb stos les pop lret pop adc (bad) mov pop lahf cld test lods and inc or pop mov pop sub push add ljmp xchg js cmp mov and and scas fucomi mov push insb inc in add sub (bad) fistpll lcall js inc test fldt adc cmc stc (bad) leave sbb cwtl jns adc mov pop gs arpl push push jmp daa pop shrl in iret cmp sti (bad) fsts sbb in pop in cmpsb pop add cmc inc inc outsl cmp mov lods ljmp mov add (bad) movsb pop enter add aam aad stos sub mov push cmp mov and sbb icebp into xor and fisttpll dec push inc jbe shl scas pop rorb pushl xchg sti inc shll mov test and inc adc rcr adc out adc stc gs add movsl mov scas ja cwtl (bad) pop push pop (bad) sub sbb push mov inc imul add ud1 (bad) xor mov inc rcll into pop popf lods lcall test hlt div ret jno les jecxz dec (bad) in sarl nop xchg xchg stc es std pop les pop movsb lret aas and scas gs lcall cltd lds xor push mov jo mov cli jl push sub clc cmp mov sbb mov stos imul push or in out loope xchg jbe movsb outsl xchg in (bad) jnp cmpsb cmp leave loop xchg pop mov mov out (bad) imul mov insl mov push insl pop dec ja,pt fildl lret imul jae scas call jmpw jne call push out fistp cmc sub cwtl sbb (bad) sub mov ja scas add (bad) cltd test (bad) mov es cmp ds mov ret (bad) mov aad fist mov sub mov shll lret leave stc (bad) push mov sbb or fwait lret shr xchg rcll lods add ret out mov icebp xlat pusha dec fsubl jbe pushf in push mov inc inc cmp dec enter fcoml jecxz ret lds out mov sbb push sbb insl jns xchg gs lea sahf inc inc and jge pop lock jecxz movsb les mov mov addr16 pop add jmp cwtl fcmovbe xchg hlt subb jns scas jns (bad) xchg lret pushf mov fwait push jne push mov lods shrb das nop ljmp loopne xchg fsts imul fdivs dec add and aas cwtl push shrl xchg xchg popa in testw push cmpsb js and or stos lods mov dec adc mov adc (bad) out (bad) adc imull mov repnz pop pop cmp sub jge aaa shrb xchg xchg xchg add push inc push in icebp or push add mov test mov and jns add jb popf xchg mov repnz cmpsl js dec jl lcall sub addr16 mov sub and imul repz mov add pop jae xlat cmp jmp enter clc rcrl out inc lret leave inc xchg dec pusha loop sti mov lret pop cld fsubrs mov cwtl adc ror test leave ja sub xchg dec mov outsl lea mov inc sub in xchg add xchg inc adc mov negb add xor leave subl pop mov in (bad) lds fidivl cmpsl dec mov and jae jecxz leave stos push or sahf or xor fstps xchg mov sti ja (bad) fdivr lods pop cmc dec (bad) xlat rorb pop std dec xchg or leave push adc (bad) push push ss fmull outsb mov and sub call xchg sub jp xor push pop jge add cwtl std mov insb adc inc mov or cli push popa mov xor jae mov test cmp and inc sbb test popf pop mov sub les push int mov aam int3 jmp fcomps movl cmp and fdivrs ret push cmc (bad) xor idivb and dec mov xchg das mov sarl jns cmp adc rorl arpl inc xor (bad) popf jl cwtl or sub jp fildl or add dec xchg imul and ja sub push popf ja push popa pop mov mov clc (bad) in ret push mov lahf mov xor mov jg enter cmp inc nop pop fmuls pop ret sub jae sub xor fcoml fwait loopne insl pop sub add vmovsd push adc repz xchg out popa or loopne (bad) testl stos dec imul push ja xchg lret frstor inc repnz int xor aad add mov mov out lods fwait leave push jne stc loope jmp jno sbb (bad) xchg sub jp scas adc push pop lea pop pop lret ds add xor xor lret cwtl ja je push leave sub and call and xchg movsl fsubs stos lret push shll add daa mov inc jl pusha xor mov addl add ret scas scas dec sub fdivr mov jno imul jle out mov pusha jno fsqrt adc cmp popa sahf xorb jbe cmp stc out mov push pop fldcw mov fidivr cmp dec movsb pop jnp es inc stos or ss push xor cmp je or stos sbbb and lcall stc (bad) dec add mov push leave add adc fistpll orl fbld jle iret mov add and add xor adc mov sarl and or out iret insl fisttp pop push mov jae dec rdpmc repz inc aad int3 rorb xchg test shrl ljmp (bad) mov jnp lds movsl fsubrs and or jae xchg aad and outsl incl xchg icebp mov xor cmpsb push out dec add outsb xor mov movsb int3 sub (bad) jo jnp xlat mov rclb fcompl xchg sbb sub pop test xchg (bad) mov and movsl add das fdivrp pop hlt dec jmp out sbb cmp mov aad out fiaddl sub mov xor or sub pop in lea xlat or test sarl aaa xchg (bad) in divl xchg sarl mov in lret push mov jecxz cmp repz sbb mov add subl jecxz aaa mov mov dec and mov sub pop mov rorl sub push and scas inc jo clc ja nop push movsb jo pop mov sub cmpsl cmp icebp fs jg fstps pop cmpsb les mov sbb rcrl jb mov sarl fsubrs rclb cmp dec (bad) lcall dec adc mov int3 (bad) icebp popl pop xchg pop test fnstenv add xor scas mov decl lcall mov idivl nop scas (bad) cli cmp push push adc push sbb lret aaa jg sub cli xor jo sub int3 cmpsl inc daa add movsb xor sbb dec or (bad) jns fwait xor inc (bad) xor or (bad) dec cmp test xchg shr and inc mov and mov sarl ds mov jne jnp lock imul pop xchg sub in mov loope orl in stos shrl frstor mov jmp mov ss loope aaa fidivr dec dec sti push lahf ret ret xor scas mov and and pop add cmp jnp inc (bad) iret lea out (bad) pop loope test subl pushf cld addr16 inc add jle cs xlat (bad) shrl jmp jmp and not pop sub cli int cmpsl sbb enter ljmp hlt and popa jl pop js shr xchg or lcall icebp dec insl int3 jl pop and mov xchg ljmp inc das xchg fstl jp sbb sbb in sub push and xchg mov cmp inc (bad) aam xor cmp orl lret mov pop icebp mov sbb mov push xlat sbbl dec test pop push hlt or xchg test movmskps and imul xchg je (bad) pop adc xor dec pop loopne fbld xchg int3 (bad) jno mov mov (bad) dec mov adc or ds add pop scas xchg cmp call daa iret into lcall pop adc xor mov pminub fdivr enter adcb dec xchg pop lret rorl cltd or enter sub mov or pop mov cmp cli clc sub push bound and frstor es inc stc adc jle jno jnp or ljmp inc js loop inc pop into (bad) js fmul mov loopne xorl fwait xor addl jmp ljmp lods loope push cmp mov dec cltd mov adc js inc and frndint cmpsl sbb inc or in pop xlat cli xchg adc out push call pop cmc sub jne mov or mov rorb int push push (bad) ss sbbb or test movsl sbb mov pop lods sahf iret inc sbb dec jne and adcl or lret pushf cmp bound imul lods lcall scas sti jo sub mov mov and fistp into cmp cmc pusha jmp inc xchg fdivp pop add jbe sbb cmp scas jge add rolb dec xor in sbb pop test mov or xor gs mov adc mov jle push cmp mov cwtl adc jnp dec dec xchg (bad) sbb sbb sar (bad) jbe adc push aad movsb outsb repz jns call outsl out in aad sub push mov aad push or movsl push es sbb aaa rcr (bad) in fucomp fxch call cmpsb adc push mov addb mov add xchg push add call das ja xchg sub inc cmp pushf xchg sti lods push clc (bad) sbb notl sbb loopne bound mov repnz mov (bad) in xor test pop ja hlt sbb mov adc mov loopew pop fwait out scas movb and aad push rcrb sbb fldt mov fwait adc xchg inc push int sub xchg sbb xchg mov and movsl mov mov jmp loope test (bad) and lods mov aad js adc pop push pop xor ljmp mov lods mov add jl,pn dec scas xlat pop add sbb mov pop lret cmp das fnstsw and mov loopne mov xor or or lock sbb add or int fsub (bad) repnz push insl mov imul jne jbe jg mov and outsb mov pop adc jb xchg icebp mov add (bad) fsubr xchg pushf loope lock sub rcr mov ja test mov lock daa mov pop pop cmp iret fadds test fstpl bound dec stc push xchg xchg rcl stos push mov and cmp mov mov fisubl fsubs push (bad) repnz pusha add pusha movsl sahf lock lcall sti js stos adc (bad) lcall sub stos std loop inc insl jle jp nop jle loop outsb cmp ja into int lds jp sbb push movl mov xchg push dec adc leave mov fucomi jge mov add popa cmp test mov jbe aaa push sti and ja push (bad) xor fistpll sub clc test sbb and aad mov rol sti mov xor xchg mov cmc sub dec jecxz fs push incl pop jo cli iret fisubrl sbb mov push fist mov cmp sahf je ficom xchg lods leave inc mov movsl rcr andb cmp dec in adc outsl ja mov jmp push push lods aad sub xchg adc or (bad) jle (bad) pop xor es in dec dec int3 pop cld jecxz mov mov cmp jno js (bad) movsb jge lret adc xor daa ds cmc int sahf test mulb inc pop or int3 push in inc mov incb sub ds int3 jge cltd cs jmp shrb jb sub lret pop fldl nop lahf out pushf (bad) scas push dec pop jle lods push fcoms mov icebp sbb into inc adc mov or or xchg mov mov movsl mov ret inc add loop ds mov inc cltd cmpxchg (bad) jbe (bad) sar shrl mov es inc lea into pusha cmp fwait mov push mov xchg push andl inc sbb xchg divl sub cmp mov enter jl cmova cmp jbe inc les loop cwtl push sub jbe test add sub add xor inc mov nop dec cmp xchg ljmp mov ficomp (bad) iret in dec mov pop stos cmp sbb mov mov arpl cmp dec adc pop out push (bad) int mov fwait mov aas add les lret mov adc mov ss push or sub push mov pop xchg xor xchg push popf or and adc daa and dec ja xchg cmp fildll mov mov or and cmc add (bad) pop mov xchg icebp and outsb pushf loope sahf mov dec je cli call sub cld cltd fs mov cltd sbb addr16 mov (bad) xor insb mov ljmp mov data16 stos out mov int aas push mov dec xchg cltd adc or loop and inc sbb inc les sbb jne fs jle ficomp fucomip insl mov orb pop movsl fstpt loopne adc movsl addr16 xchg sbb inc les lods cmp jmp sbb push cmp in jbe movsl cld xchg hlt (bad) xor outsb addl (bad) cmc bswap sub xor mov lea sbb mov jae sti push sub in sbb dec movsb jp sub push sbb stc in or pop arpl sti dec sbb out btrl mov cli sbb imul shlb outsb xchg shl stc cmc or das inc inc adcl and test out pusha out mov in mov xchg xchg lods xor jp shlb sbb jns lahf push jmp or (bad) add test iret mov fnstenv mov xlat ss scas mov data16 call sbbl xor stos ret and sub xor lret int stc mov inc inc call cmp test jmp push cmpl pop pop mov fisubr (bad) ljmp inc mov (bad) enter cld iret fdiv jecxz pop (bad) (bad) aaa aas mov xchg pop subl dec aaa call lods push mov xchg addr16 ja xchg dec add lock pushf sti data16 push dec mov ss sub add adc sub inc sbb sbb xchg inc xor mov push enter push and loope jne hlt jg push pushl cmpsl fdivs int3 xchg adc dec sub es adc adc fisubr add out test scas mov dec xor adc ja enter push test dec popa adc outsl inc add cs mov cmp pop mov aas jle mov cmp mov inc int je push bound movsl pop jl and mov cwtl mov xor inc mov push jmp arpl fldl adc out push bound jno insl movl insb loope jg mov loop mov stos stc sbb push cs data16 ja sbb mov xchg mov pusha and test push cmp fwait push pusha cmpsb cmp (bad) sub xchg dec jno out (bad) xor leave add fs xchg lods adc adc cs mov int fidiv xor add in or mov mov inc push cmp xor cmpsb lds and dec or test and adc xchg mov das loop inc rcr xlat mov dec (bad) (bad) xor aam fstl push mov sahf scas cmp inc sbb pop cmp gs mov ret lds movsl pushf stc mov sub xchg adc fstps or bound inc inc pop or scas xchg stc call or mov daa mov dec adc int3 call rolb cmc or or inc jae adc mov cmp cmp out imul mov push mov dec pop xchg mov ret push pop xchg cmp das movb add insb std fnop sbb xchg add mov pop mov mov rcl lds push mov ret std (bad) jne xor mov arpl (bad) mov daa push loopne adc popf imul mov adc inc or push sbb xchg adc push not pop aam xor ljmp aas sub rcrl outsb or xorl movsb imul je mov inc stos sbb jo jns sahf imul xor push sub (bad) sub mov mov sub mov mov fmulp mov mov in rclb and lods mov and fldl jb mov adcb mov adc inc or mov adcb mov and jne stos xchg push push xchg sub mov loope ljmp push or mov and rcrb imul lcall arpl lods cltd adc fwait and add loope or adcl and inc bound push pop jae scas sarb add scas scas cmp inc adc dec jg rcrb ja cmp xorl cwtl rcr cmp pushf (bad) adc mov push (bad) pop mov jl mov enter jns mov and (bad) in pop mov xchg pusha fsubs pop push pop sahf int3 fldt push je inc ljmp out lahf call xchg aad sbb mov cmp int pop xor jnp jbe mov aas pop iret hlt cli ret cmc js dec lret sub addr16 xchg mov xchg sbb fscale pop mov mov xlat cs cli pop jecxz daa push dec dec popa mov (bad) pop push or ja or xchg scas call movsb add loop test and out xor jne fldenv inc pop rcl ljmp mov ret cltd insl pop (bad) xlat in sbb shufps dec lea (bad) pop and int3 mov lods mov xor aaa out lods dec popf xor out stc rol sbbl adc fwait repnz lret ljmp fistpl xchg aaa inc repz xchg cmp adc std pop push int into push jbe add xor cld in shlb ljmp mov fcmovu inc lods pop push or pushf out jp popf icebp cmp dec and int3 int jb rcrb pop xor sbb xchg arpl movsb fcmovnbe or inc out imul cld in pushf pop pop aaa lret push xchg jmp ljmp sub xchg xchg cmp sub orl out aaa pop cmc mov cmp das ja and stos xor mov pushf lahf enter test stos (bad) jmp int3 and jl pop sub xor in inc add push fdivr mov and lcall push adc ret mulb inc jbe jg mov push lahf or dec adc outsl (bad) pop movntps lock lods or lods int3 xor pop adc mov pop pop leave notb cmp scas sub sbb roll rclb jge repz add xor loopne inc popf add push imul outsl sti pop fwait vorps ret mov and mov shr movsb add cmp outsb ds cwtl scas into add mov xchg fxch xor out neg or and jbe inc cmc add test sub mov mov dec dec sti cli push sarb gs dec add (bad) (bad) insb jo popa dec imul adc out sub sbb mov xchg or mov stc pop (bad) mov sbb jle mov push dec iret stos shll js pop dec mov (bad) jnp pop shll mov cli pop (bad) outsl (bad) hlt or xchg loop test add idivb or idivb push and les push cltd inc inc lock pop pop hlt xchg cmc pop sub push scas fmull daa add cmpsb mov lcall adc jb popf or pop test jle push cwtl pop jae scas xchg add lret (bad) (bad) push je add addps gs loop jo dec dec cwtl inc jno lret mov jno cmp das ss sbbb dec inc mov test xor push stc sub fimul out ss mov outsb sti cmp je data16 int xchg (bad) sub cmp push push call cmp ds sub int inc loop pop xor mov jg in push ss jne (bad) hlt push clc inc jecxz pop xor xchg imull push inc test adc push ljmp adc jbe mov add int jo jg lret enter int xchg std lret push jbe addr16 pop lods sub cmc pushf pusha or int3 inc cld scas mov lods vpmaxsw aam nop test xchg loopne mov insl cltd jg gs mov fwait dec stc jge les pop enter (bad) call push fwait and cwtl jge mov cwtl stc mov cmp inc add mov and lea inc inc in push cmp jo rol jle mov sbb mov loop stc inc out jecxz inc xchg rolb push notl popa mov sub dec stc aam sahf pop stos loopne push push mov jne add cltd dec data16 inc sbb add cld sahf and paddusw or out leave sbb add dec hlt rcrb dec loope mov (bad) xor das mov imul xor mov pop mov sahf mov (bad) mov push sub pushf mov clc pop push sub sub cmpsl aad mov or add scas push push fdivp pop inc out daa mov in js dec jb lret mov andl cmc jno or xor cmp fstp xor jl int3 inc xor imul les adc inc cmp div rcrb test or jge out cmpsl mov jnp add jns add push fist push mov cmp pushf and fiadd lret rcl xchg call into call lods xor mov cld hlt out shrl inc fmuls add mov (bad) in adc push pop imul dec sbb or dec cli jno les dec push out pop pop ljmp jnp loopne imul sbb and dec (bad) xchg jo jecxz mov fcmovu cli lods sbbb daa data16 and jmp xchg mov data16 jnp xor or out jae adc rol addl insb add daa aad ss popf inc sub sbb push mov cmp adc dec inc push scas inc ss xchg and dec xor jle pop mov sarl ret jmp rcll pop mov (bad) xor jb pusha and jns fcmovu test add sbb mov jle add pop cmpsl addr16 outsl add add popf out mov sbb outsl add fisubl daa data16 inc cli ficom adcb insl xor cmc insl notb and lds fisubr and cmp clc lret movsl lret mov pop movsb cmc (bad) aas out imul mov adc xor xchg sarl dec add mov or add in inc or jns,pt jbe int out nop ja xchg push stc dec and rol fidivrl mov adc jge lar aaa outsl xchg or in push stos inc ljmp sbb xlat loop xchg loop and scas push mov mov bound clc pop mov cltd stos xor bnd loope or cli addr16 inc adc fnop fistpll push outsl mov ret and fcomip push xchg or lods or testb inc cmp call iret sti pusha jb xor notl aad pop inc cld daa jb mov xchg pop shl sbb movsb (bad) mov fs imul xlat jb fdiv pushf xchg sarb (bad) jge scas out std dec lret pop and ds add lahf (bad) cmc adc jnp jns out (bad) (bad) js sub or fsubrl xchg lds jl (bad) (bad) loop fsubrs (bad) xor imul call out repnz inc cmp dec jp add leave outsb mov sub adc js lea out inc sub je jle out fsubr inc leave lea out sarb cli dec daa mov sbb rcrl pop vmovdqu sub xchg outsl mov push (bad) sbbl int or mov inc ljmp cmp (bad) push cmpsl mov shr scas popl data16 ds in sub push cmpsl jmp imul shl pop mov sbb mov mov ds mov test and in aas jg adc divb xor fcompl xchg out and in lret pop mov adc lods push shll jge,pn dec aam ja cltd mov movsl mov (bad) insl fiadd sub rolb jb addr16 mov mov ret push and repz push int push add int3 mov sub into sub jmp ret iret pop mov jl mov mov daa out or cmpsb sar cmp mov hlt push decl pop sbb jle add xchg idivb and jmp sbb cmp and stc push xorl scas adc insl cmpsl mov jge jne xchg xchg mov loope dec xchg pusha mov movl sti push mov dec jge inc mul or adc xor cmp dec out rclb test insl aad sub (bad) je mov popf rorl outsb sbb jnp cli lds les sub scas repnz repz test or xchg aas push popf mov bound and or out (bad) shr sub pusha jns enter jmp xor add lahf in fldcw jnp lock mov or adc shlb and dec jns mov int3 cltd popf xor adc jg popa jle add bound push imul jg enter fldenv scas sbb or sar mov adc jge,pt sarb shlb subb test les and jl loope rcl sub outsb out outsl dec cltd sbb dec or in lcall jecxz inc cld jp mov pop mov push inc cli inc and mov jg or (bad) xor or (bad) int jle push mov xchg cli jl push out or jle,pn sti aam sahf pushf inc sbb cmp int3 push enter fs sub sub adc dec leave xchg mov fcmove xchg dec cmp es pop xchg rcll mov mov add ret call sub test int dec fs jmp outsb repnz mov shlb add jo mov (bad) mov scas mov or mov jb pop movsl cmp jg lret rcrb mov nop in cmpsb fnstenv iret pusha adc out add lods mov push outsb scas inc push jo sub ljmp scas mov xchg std int pushf fstpt add std lods (bad) jno inc inc cltd das add cld push add fimull fcoml into and out add sub cmp mov mov jge dec jecxz aam push push xor hlt fdivs jb add cmp fcoms (bad) sub fist push and loopne mov sbb pop mov shrl enter push xchg mov iret and pop jle dec subl mov xchg adc sub xchg cli adc mov add test xchg dec jge lret pop aaa (bad) mov push leave pop lock mov jecxz movsl push add jno andb add push push mov push and in orl imul jnp jecxz adc jp repz pop fidivl jg (bad) mov std jmp sarl mov fisttpll lret shrl cmpsb inc xorl push sti fs enter sbb jl sub nop pop iret dec pop adc cld decb or jbe fcmovne push movsl aas pop int3 pop inc adc daa arpl in mov rcr xor add or (bad) adc (bad) outsl test sub int ja lret stos pop sub aad (bad) movsl test call push jb out jp pop mov bound andl or hlt push xchg jge in (bad) fcoml push push adc loope ja sbb sub in ljmp lds in outsb inc js cwtl in push cmc es mov imul cmpb dec or pop rorl test xor (bad) iret scas stos mov daa ret mov jo add cmc imul (bad) pop dec int dec cltd (bad) xor cld xchg out mov outsb cmp call pusha xchg jb movsb ss fdivs sub mov lcall pop orb cmp xchg mov (bad) clc pop jp mov movsl pop stc ret push mov scas jmp dec pop cmpl or or insb add mov add dec xorl mov jl hlt xor jmp fild jno cmc lcall xchg fcoml jo mov sub jno mov icebp sub subl jecxz adc mov push icebp inc adc es ret sbb xchg mov daa jb fsubr popf add push push cmp ss mov mov mov (bad) ljmp (bad) aas sub lcall mov add pop (bad) pusha cltd cmpb in pop loope aam sub lcall or mov mov leave or (bad) or inc mov std fildll sub cmp or push mov scas fs dec aam iret ret sbb adc loopne repnz cmpsb dec add adc test push out cmc dec and cli jge push xchg push mov push pop fcmovbe xlat gs sub movsb and insl (bad) mov andl (bad) dec mov into mov ret add push in movsl mov bound mov inc das mov sbb ja in jmp lcall or xchg pop adc and fcos jbe dec pop pause cmpsb push xchg jmp mov (bad) out mov xchg push gs sbb out cltd dec test aad pop jae lret pop mov dec mov fcmovbe fild popa xchg fs xchg push movsl sub test sti das movsb or ret insl pushf dec test mov dec sub cmpsb or imul lock xchg push add or xchg mov xchg pop cmp pop jl pop and mov dec popf mov dec jbe add ret sarl fldt jp xor fistpll sarb mov inc mov inc pop or push dec dec jb xchg stos sarb adc lcall out jb jbe push push lock sub pop jae and insb repnz fild enter mov (bad) lret in jns xchg add pop mov add or fsubrs cs or pop push std lret pop les adc jg sbb out add and je mov lds je mov push push js push loope mov imul pusha dec (bad) dec dec cmpsl pop aam inc repz cli in mov les or jno and je int3 cmpsl jbe in shll cltd push xlat lock cltd inc stc mov fisubrl es add (bad) push add mov sub mov inc xlat (bad) clc iret mov sti cmpsb cld stos jg sbb or es popf jns stos dec and test sub xchg je sbb push jecxz sbbl mov dec jg ja stc jne lock cmp push ficoml adcl mul les xchg mov test mov mov mov inc fs ret stos iret stc clc xchg fdiv repz inc pop mov les arpl push push jae cmp movb addr16 (bad) xchg das sub test cmpsb aaa inc dec add ja xor into nop je push imul sbb stc repz jl lcall and sub sbb xchg pop push push test or mov sub ljmp and (bad) daa adc loop (bad) pop repz int xchg xchg fwait cmpsb jns adc aad mov pushl insb sbb cmp nop ficom std xchg mov add (bad) aam imul jnp push inc pop mov xchg mov fldl cmp fs add nop movsl les es xchg mov mov pop xchg pop fs adc push xor jecxz mov (bad) xor mov es inc (bad) stos sahf push inc imul addb lock pop sub pop adc std jmp fcmovnbe xor in mov cmpsb add mov jne xchg (bad) iret insb dec cmp (bad) leave cmp xchg lea push clc mov add mov push das jp repnz pushf sahf mov cmpb jmp cmp inc popa adc sub inc enter xor ret jo,pn cmp jbe call jne push or add sbb in and movsl leave jno fdivp push roll mov add and push sbb fsubs rorb fidivrl jo stc imul nop inc jbe cmp cmp xor test or fldl aam or cmp xorl mov pop or mov loop gs fisubr sti ss mov int jl and add loopne mov mov mov lds xor xchg loop xchg das mov mov movsl add (bad) out data16 aam cmpsl adc mov roll jg xchg dec push idivl sti and mov mov cmpsl sbb lods mov out push ss lea adc les mov loop lds pop add mov mov out cmp push test outsb sub sub cmpsl das pop jmp pop sbb cmpsb rorl ljmp mov cwtl loope adc mov dec push jge xor jl mov cmpsb xor cli sub xchg mov push pop push lahf int repnz imul or pop and inc movsb push inc icebp cmpsl xor pop mov inc push and mov inc and pusha xchg arpl xor and push or push jle or mov sbb call mov imull in test xchg loopne ret data16 dec dec and icebp mov adc sbb push scas dec pop out mov jae jecxz arpl mov xchg (bad) mov stos cmp loope pop outsb ficompl xor icebp mov xchg pop inc pop dec fcmove aam jl sar mov ss adc and add push mov imul sub jg mov iret and cmp mov mov sbb mov push outsb insl sub sub scas in addr16 mov and sub aad xor mov mov dec sbb shl dec imul cmpsl jnp jl roll aam movl js and pop incb jle sub call mov dec xor movsl push jge mov hlt sahf loop sub mov cmp test cmpsb in mov add pop mov nop inc adc ret xor cmp adc or push test (bad) jmp cmp cmp rorb outsb andb clc xlat mov scas jg pop cmp dec sub xchg pushf xor and (bad) adc popf push fisttpll jmp (bad) data16 xchg pop mov aas popa mov ss aas cmpl sub ss insl sbb fsubs xchg cmc mov fisubr push jae mov fwait das cwtl mov mov rcrb and adc int3 cmp std stos je stos pushf sbb xlat push fcmovnb sbb lret adc adc mov outsb adc test and test pop dec movzwl add mov mov fxch sbb rcl andl push inc leave dec mov data16 sbb jecxz xchg les mov (bad) sub pop daa sub daa xor xor add xor popa jle cmp sti sub push jecxz dec mov and xor adc jg pop cmc stos xchg outsl add pop int3 adc sbb insb xchg leave pop pushf mov jo sub and and cmpsl mov inc mov pop dec push add retw mov and xor mov pop aaa les fs dec cld push sbb mov mov jge frstor dec xor mov inc fimul pop or test jo,pt sub xchg cmp and xor insl dec inc xor std jecxz shrb out fdivrs iret mov (bad) scas je int3 or adc sub mov pop (bad) rolb jb pop outsb add and es push fcoml add add adc out jns mov jmp push mov (bad) stos or mov and push jmp test ljmp outsb ds sub fiadd std mov adc push add icebp push add jg bnd test lods and lahf test fucomip jle jmp or dec icebp fist negb xor jns xor ss xchg mov gs test inc sbb or and sub inc int3 inc std aam fstpl mov or ret push fnstcw inc ja repz (bad) (bad) adc testl push test fdivrp xchg pop sbb rep mov cmp aaa dec in mov dec jnp sub mov jg sub push fs ss mov push (bad) lret gs xchg in jo gs adc pusha xlat das adc sti (bad) dec sbb mov mov mov sti pop addr16 inc dec dec aam icebp xchg repnz popa inc fs and push clc add dec add jne xor mov mov push test (bad) lret rol rclb (bad) push (bad) sub lret in rclb inc inc rcll mov pop cs shlb or repnz insb fidivr int (bad) popf jl and and out add es jmp jmp lcall sti dec pop jp jp in xchg hlt lahf mov push in or test pushl push sub (bad) jp mov ficompl mov (bad) xchg xchg jnp sbb inc adc addr16 cmpsb daa xor sub hlt xchg add enter sti cmp push shr add dec cmpsl mov lret ror pop sub je cmpsb mov xchg xor movd insl jbe call pusha lret jmp xchg sub inc sahf dec add pop test mov sub and cmp add mov test (bad) ljmp lahf std mov (bad) xchg subl mov jo shrb mov int clc mov mov or add mov mov dec shll xchg (bad) lock mov mov es push les or aas test das (bad) mov sub and fadds mov dec mov jp inc pop mov and jbe and cmpsl add fidivl pop xchg mov test (bad) fisubl dec mov mov (bad) and addr16 cwtl mov fistpl jmp out sub pop (bad) test or push mov jo mov insl push push mov or stos in out cltd testb psubb insb das sti sbb mov jl add mov hlt movsl out xor adc insb lds mov mov imul push lret dec mov jnp and mov jle call cmc push pop xor mov aad cmpsb mov cmp mov dec mov dec test mov cmp ss jmp test js outsb dec pop adc aam jae jno dec jns adc mov mov add jecxz aas das push or int3 js jne xchg (bad) pop or lret and push pop mov test and aad leave jnp in push sub dec repnz out aaa adc (bad) pop ds inc insl sbb loopne int mov mov scas fwait out xchg lret add mov jmp pop scas rcll hlt leave lods notl iret into or sbb adc jns sub loopne popa push aad rcll mov jg cwtl jge cmp sub inc (bad) and xor clc jnp ret lret jno xor push ja jge xchg bound adc or pfcmpgt inc fsubl xchg popf sti xor pop sub (bad) push adc mov cld aad adc lock mov pop jnp add pop gs sbb cmp addl lahf mov mov rorb (bad) in aaa xchg popa mulb push jp sbb or sub repz test roll xor and fwait jecxz pushl jecxz mov mov mov mull mov pop (bad) pop aas xlat cmp dec int3 push in adc add pop mov inc arpl push mov call gs mov push les fbstp add out stc iret add cwtl xchg cmp push push inc in popa jb fldcw mov or xor or xchg insb ja cld fnop shl cmp push dec int3 xor (bad) daa sti sbb lock call sarl aaa dec mov call rcrl fld movsl adc scas push loopne fdivr (bad) mov mov fstps adc pushf cmp aad jns push fmuls aaa dec aaa loope jmp push cmp aad and int3 push outsb push pop jno xor push fdivl sub sbb in sub cmp adc call xor push int clc scas jne pushf cwtl into mov aaa insb xchg push push cmpsl mov sbb lret dec mov (bad) pop jb pop inc in dec inc pushf int3 xchg aas or insl xchg lds pop test aaa aas loop or arpl lahf movsl jle imul sahf push stos dec xor loop jb outsb fwait pop dec sti data16 pop (bad) arpl cmp lahf inc movsb push lods ljmp xor scas inc in lock dec jne xor (bad) (bad) (bad) (bad) lcall mov cmp mov mov out jns or mov jmp adc jl std jno,pt jne lea xchg mov sub push push jne add jno insl pushf dec xchg or pop inc xor or (bad) leave pop jo fs pop jns add jl fisubrl out push je pop rcrl pop sbb cmp cmpsb sbb jno mov roll test mov sub jno push and push mov and sbb adc adcl fistp icebp addr16 or cmpsl out aad add sahf jb xchg inc ret fidivl fmulp cmp daa sub insb inc sbb mov fisubl shll and repz cmpsb faddl (bad) or lock int3 jb jns sbb cmpsb jmp or jo scas or popf or mov add dec popa mov mov out inc insl xchg aas test out jge dec imul fwait or iret dec cltd sbb dec (bad) repnz cmpsl xchg cmpsb fwait push and push xor sbb xor mov cmp loopne pop mov add gs (bad) je jbe sti fcoms xchg aaa popa aam dec xchg xchg cmp leave jnp mov xchg sarl (bad) sub add and test cmp ljmp jns scas or pop adc xchg mov and inc xchg daa test mov adc xor pop pop pop addr16 pusha inc in data16 std out scas pop das loopne test es movsb sub jae xchg fwait sbb add stos fnsave jne clc inc imul fsubs in daa arpl mov xchg xor xor jmp pop fidivr rclb aaa mov mov ljmp jl mov scas repz xor icebp jecxz sahf repz jle (bad) gs lock aad insb mov int3 or das fistp mov (bad) dec push jmp push adc push xor outsl add sbb mov push xor rcrl mov ss mov fdiv cmp (bad) sar mov outsb js inc jbe xchg fsubr mov fildl les dec push cmp and sub stc fdivrs rcll in cmp pop test popf inc fisttpll ljmp int sbb iret scas sbb adc xchg sbb jne mov jbe push frstor dec insb aas call repz movsl cmp in and pusha inc push cmp fistpll fcompl (bad) cmp aas int3 rorl jg sub fucomi aas cmp pop (bad) mov push sarb shr shrl sub clc and ljmp dec cmc pop cmp imul popf dec or xchg lods mov vphaddbd scas jno dec sbb cli ja cmp idiv mov adc test xchg jno out out mov dec mov scas aaa pop (bad) loop call aas and and inc sbb add pop movsl mov inc xor jecxz push sbb cmp stos push icebp sub (bad) pop mov stos in cmc test cs xor lods shll or mov inc clc add cmp in pop mov ret jge xchg mov aad push pop pop enter data16 shll lock xchg add jge mov mov sti out mov mov jmp lods xchg ret clc enter dec int mov xchg lahf in jo push pop pop dec fcoml rcll ljmp mov sti or sti jp pop jge mov shrb inc cmp pushl cwtl mov cmp adc cmp and push xchg adc pop xchg jl inc ror fnstsw add scas add int3 addr16 stos repnz jae ret sbb dec sub or pop aaa sub push gs push jl jbe and enter dec notb dec or stc shl or lock pop cli inc enter cltd mov xor orb add jge dec cmp sti mov iret jb (bad) xor mov aas cltd addl loopne stos push push mov pop pop in (bad) outsb push dec outsb aad ret sbb ss rolb push ss sahf fwait into mov push dec add cld xchg push sbb sbb in mov icebp pop cmc (bad) lcall or cmp sbb bound add mov nop mov fstl cld int3 mov mov jle sbb test mov popf std sub mov inc pop jo leave or and loopne in sbb stc cmc mov jbe jns cli xor cmpsl push in mov cmpsb scas (bad) pop fdivp pop pop add mov (bad) out out mov gs bndldx mov imul or push inc jns mov pop into fsubl dec lret popa push and fs xchg mov in jmp test pop aam out je push push push push add cmpsl pop jns aad dec or sbb insb pop sbb pavgw insb mov dec shlb xchg pop cmpsb imul xchg mov dec mov inc and hlt cmpsb dec jmp xchg jbe lods cmp arpl inc xchg pop jbe jp mov pop push pop or rorb inc jnp out cmp jb imul je or fildll push mov scas das sub adc inc push pop push xlat jo lds mov push (bad) (bad) fwait sub dec xor or cli lock sbb rol adc in inc lds pop hlt int3 pop sbb cmp je ljmp std xor add push pop jle add stc xlat shlb sub sbb aaa aam mov xor pop push arpl xchg cmpsb cli lods xorl ss loop loop jne adc push jno loop shrl test push dec xor (bad) (bad) jae sarl je xchg retw mov rclb movsl inc cmp fs inc lahf ret scas imul fisttp cmova lcall fmuls test and pushf ret xchg sub add mov pop and pusha inc icebp mov xor stc (bad) jnp daa inc mov (bad) or jp lea xchg sti jo (bad) mov lods inc sahf dec mov mov out pop xor xchg js insl pushfw pop dec dec popa push xor (bad) fistp jle call ror jl inc add (bad) adc loope and xor jg sbb repnz inc mov push lds push cld clc stos fisub push jge inc jge in jb data16 xor jo popa push out xchg xchg inc test lcall jge sbb test xor mov popa repnz pushf imul inc into jo (bad) cmp cmp out xchg and fstps mov sub loopne push push popa ss lods cwtl xchg or push xchg sbb sbb int3 aad repz mov loope mov jnp lcall add push and daa add ja (bad) in sbb jg lahf fidivrl in mov or inc pusha je pop xchg aad adc ss mull js cmpsl stc (bad) ds data16 pop imul cmp in pop daa add cltd mov popa popf cli out jp fwait sub jecxz adc (bad) sarb cltd lahf icebp inc adc push jbe xchg and sub rcrb or test call adcb (bad) aam adc or jp xor xor negl out out sbb iret flds or leave cwtl (bad) mov aad xchg mov mov fdivr lea notl sbb push lock mov cmc adc sbb fdiv je dec test into cmp (bad) hlt mov test add std sarl jbe aam inc dec pop sti imul (bad) dec add mov pop add and xchg icebp cmpsb push and outsb jecxz push add mov gs mov popf sub test popa xor adc xor pop sti out sub push movq mov bound (bad) or push lret pop ror adc push push jecxz iret jp pop or jmp xchg jge and lds cli fidivrl pop in mov cmc shlb repnz jecxz lock inc cli or lock in mov clc (bad) mov fwait xchg inc lods inc lods gs or rcl sti fwait into gs dec mov add push sbb mov scas mov and ficompl in jge add in pop out orl mov jl icebp pop mov test mov mov pop jns ds or dec cwtl push mov stc lods mov rsm pop jo lods inc pop or call jmp xor shlb lods rolb rorl cli inc gs lret add jg lock jecxz in and adc add mov into add lock inc sbb cmpsb cltd jmp mov popf imul adc lret adc fmul out adc push flds scas rolb push mov cmp sarb fidivr mov cmpsb dec or dec sbbl mov pop inc sbb inc lea (bad) inc lahf cs inc sbb in mov (bad) xor pop stos subl or and mov sub lret pop inc fnstsw ja pop fs sbb das xor in lock pop out mov mov cmpsb mov push aaa inc out jg and aas (bad) gs aam fs aad (bad) mov sub inc pop inc or idivb xor xchg jle fs push mov popa inc sbb ret fldcw ds inc jp pop mov shl dec stos das mov mov pop adc pop out sub scas iret ss adc or xchg inc (bad) inc loope bound cmp jmp mov fstps mov enter and inc lods push clc and jp and dec adc lock fisttp adc (bad) aaa inc sub add mov mov clc je pop or ret push dec cmpb cmp sbb jbe cmp mov nop cmp xor sbb adc and jae xchg add pop pop shr sub adc cs mov sub mov jmp popf adc jg (bad) sbb dec mov movsl xor jns push out add jp mov loopne cmp outsb pop and push pop imul stos dec jmp js test imul (bad) xchg inc cwtl sub mov and std jge sub cmpsb test pusha jnp pop in loopne scas fnstcw data16 aas push ja stos pusha xor daa gs ds inc fdivrs mov fisttpl stos out pop and scas mov stc or inc push adc adc pop cmpsl iret adc adc mov or (bad) frstor rdmsr push adc xchg lods xor pop or rorb xchg adc daa push add mov push paddw mov movsb fstpt jo out push outsl in daa jno xlat sarl sbb pop and cmovge call test aad in dec pop roll mov pop mov push fimull fsubrs add and mov scas and adc pop das cmp xor mov fcoml and mov jp shrl push jbe pop ret pusha lea or ja cmp ds cmc xor les xor fdivl stos int push mov adc mov xchg stos jecxz test jge push cmp ss loop (bad) into stos cmc push dec andl adc pop repz dec cmpsb out testl daa ret jmp cmpsb jmp cmp jns (bad) pushf or out fnstsw mov mov adc outsl ret insb cmpl and push mov pop lea push imul sbb add mov mov rcl in push sarl rorl cmp ja pop pop decb test in or cmpsl imul test xchg int3 (bad) cld mov xor mov xlat mov pop cs (bad) pop dec cmp mov aas sub shlb clc or mov jle xchg lods mov in in imul add mov lods add hlt les inc leave cltd jb popa fadds sbb dec xchg mov mov movsb ret arpl fwait test and faddl push push xchg push (bad) xlat scas pop sub int sbb daa daa (bad) enter xchg xchg in in test mov gs clc (bad) inc inc fwait jecxz sbb pop sbbb roll lahf push mov cmp in xchg or es pushf mov into divb das mov (bad) mov and xor mov fcmovnb xchg cli push inc leave pop rclb sbb sti xchg sbb sub cmp mov cmp sub xchg test aas stc dec aam frstor adc add ja sub push dec push sub inc dec imul xor ljmp xchg fwait movsb pop jg in jge jns dec inc movsl inc adc inc lret ret sbb ficom pop add not inc sub imul lods xchg sbb mov scas fs loopne and or mov sahf std cmp icebp sahf mov (bad) sbb je out xchg adc add adc fist call inc fistl js or pop inc packuswb enter adc mov xchg xchg inc adc pop jg and shl push and nop repnz insb sahf test sub pop push cmc insb jnp and adc (bad) mov mov in push cmpl push cmpsb imul add out inc loope lret rcll dec aad fadds fldcw incl push cmp xor pop xor mov cmp xchg push icebp stos insb rolb dec insb nop dec pop data16 stos add (bad) xchg movsb mov and pop inc icebp stos push mov (bad) nop or rorb sbb push mov inc call or adc dec ds mov mov lahf pop and andb adc aas sub popa stos xchg sub out aam lods jmp cli roll mov mov out out test notb notb xchg add into rcr popa (bad) (bad) xor or dec sub je enter cld mov inc lcall jecxz push cld fs divl mov mov fwait loop ljmp mov mov mov lods insl or lds xor imul sahf fwait aas bound lahf fnstenv cwtl sub sub jecxz mov push xchg iret movsl cmp mov aaa fcom push pushf adc add (bad) and xor xchg cmpsb pop dec in cmp js test inc lea insl adc sub lds clc cwtl inc mov jecxz ds push lcall insl out inc mov cmp adc adc mov movsl mov mov aas pop dec push popf mov sub or pop loop fisttpll xlat bound add in loopne insl pop rcll dec imul jle push fs cli stos add jnp mov mov lcall push adc inc int3 aaa stos push mov cmpsl loop jno loop (bad) ja out fsubl imul popf in out pop movb (bad) pusha push insb ljmp xor das cmpsb or roll in aam cmc jge loopne inc stc mov jae jno leave pop cmp xchg adc loopne es out outsb lds ds sub sbb pop fstps stos lds mov test lret enter pop aaa mov adc cld call dec bound icebp inc mov lods push or dec int aaa insb jle lcall fldcw dec inc and push push stc shlb inc cmpsb enter mov fwait lcall push push mov mov mov (bad) (bad) repnz sbb pop add (bad) dec mov xchg add mov jmp gs mov out mov mov nop xchg mov xchg ss out add movsl clc inc enter mov ja or imul neg pop lahf cmpsl jne lods mov imul push sti sbb fdivl lods pop decl dec cmp sbb aas movsb ja mov inc cli leave mov pop ret inc pusha outsb scas adc ficom pop iret popf mov imul ds or cmpsb mov cltd adc std jo gs (bad) push lea and jle call jmp jb hlt dec cmpsl xlat (bad) enter xchg enter fcmovnu insb or mov mov mov mov cli sbb xchg aas aaa gs xor cmp mov jbe cld xlat es test scas xchg sub cli (bad) ss sbb ret imul push mov push cmpsb leave aas jns ss mov leave hlt das shlb (bad) scas push mov nop sti inc (bad) movb (bad) mov test pop or or xchg and enter call fidivrl and frstor inc aad mov rcrl (bad) call inc jmp xchg (bad) loop or jge push xchg xchg fs test imul mov dec jecxz das jge pushf in sub cmp jae ljmp setge adc orl push push pop incb lret call and sub jecxz mov jb adc xchg iret sub inc cmovle xor mov jns push lods (bad) in ljmp push pop adc dec push (bad) lret sti mov and aad aam xor dec divl sub (bad) pop jne rorl or pop cmp push push enter divb repnz mov test add xor inc push mov mov xchg mov inc mov mov loope in stos adc and dec cmpsb sarb lds inc popf jmp and testb mov mov pop iret dec jecxz sub xchg xor insl (bad) jp pop pushf (bad) loope push mulb and jmp inc dec mov push lea lcall inc inc adc inc and js add les sub lods fisubrl out push in adc mov stos adc mov (bad) es pop pop mov mov je imull cmp sub sarl (bad) std ljmp out dec stos andl in mov inc jle mov jecxz xchg rolb adc adc pop inc xor jnp jns adc (bad) inc cmp jl fs sub mov push and movsb clc xchg sbb xchg test dec sbb roll test pop xor push lcall (bad) in xchg adc sbb fimull pop sub ljmp pop sbb bound cmp pop inc pop daa pop lods stc inc and (bad) shrl mov lods (bad) xchg mov stos in xchg mov mov xlat ret and lahf ds xor mov int3 es mov sbb pop sbb inc add adc adc loope jge popl fisttpl (bad) mov je sbbl inc mov push add fs and or bswap adc aam jo bound pop mov push loopne ret jns inc pop andl or jns scas lea (bad) mov cltd mov mov jns fucomp rolb sub outsb into (bad) int3 xorl es imul mov movsb lahf ss fisubl iret xchg mov aaa adc fimull pop and (bad) fsts outsl shll jecxz dec out (bad) jo lods push jl sbb cmpsb popl inc mov pop inc add inc hlt js mov push xchg sti mov pop aad daa jb repz adc cmp xor add mov xchg dec idiv add imul xchg cwtl lea inc movsb adc mov mov cmp in jne xlat loopne or sub cmp std inc dec jp add daa enter mov scas add mov cwtl int3 dec enter clc decl jne dec mov mov sbb mov call movsb add jge mov mov fnsave mov and aam sub mov fwait out add (bad) mov jecxz xor adc lahf test sti xchg sbb psubsb cmpsb ret xor lds adc bound inc inc dec rorl fstps js repnz popa xchg fstpt int3 outsl mov dec or or cltd (bad) pop sub nop insb push mov loop xchg incl or and adc jle (bad) pop loope repnz and mov clc cmc and mov jo jae cmp xlat sbb fsubl hlt cs sub loopne or lock int aaa add adc lods jbe (bad) (bad) test mov lods jae scas mov sahf pop xor dec and insl sub push jnp ja jp dec jno (bad) mov test hlt icebp stos jecxz cld pop and xchg popa xchg push push pop push mov push rol mov push enter xchg stc aad pop mov clc sbb jecxz pop inc mov repz loop adc icebp fidivrl and mov and xchg sbb or out (bad) cltd fcmovbe cld ds push sub cld mov jb or inc pop rcl mov cmp (bad) decb xor ja sbb xchg or (bad) jo jbe (bad) rcll jnp subl jbe pop jecxz push push mov add push std dec jo add mov std or sbb lds mov add add fiadd lods fsts mov mov sarl imul mov push sti (bad) shlb adc test das adc push pop movsl lock jbe jle xchg jl roll movsb and (bad) enter pop xchg fs test dec (bad) xchg lret popa sti or push xor mov cmp mov inc or push xchg daa jbe cli pop mov movsl and cltd sbb lods ret jge test lock push call jecxz popa js shl (bad) cmp cld ljmp ss push cmpsl pushf loopne sub scas test dec leave mov jns mov imul mov aaa or mov enter pop mov dec insl das push ljmp lret stos mov in mov dec les imul mov adc xchg imul ljmp in (bad) (bad) ljmp xchg adc push jae sbb jp in or dec stos inc sub jmp and scas push aaa jge sub popf mov int in (bad) cmpsb repnz or inc jbe in jecxz sti sub mov test push jge out add fist adcl (bad) cmp int3 or inc adc jp aas xchg mov and xchg xchg jge xchg jne pop arpl sti repnz shr jb jp imul cmp cmp into scas pop aad xor iret pop aam ficomp insl sbb imul insl loopne loop mov ffree or lock xchg pop jg jbe mul (bad) call gs pop jg and and and pushf outsl sub test jle mov or cltd xor rcpps ja push push adc mov sub (bad) add pushf mov and lods or lret (bad) mov mov das push or sar adc add sub dec jle xchg inc fisubrl lods nop std out xchg dec out inc leave cli iret mov (bad) leave icebp add out pusha daa ror mov push cli cmpsb push xchg dec or fistpll jge lcall or inc adcl leave push (bad) test jo test cwtl xor inc inc jae (bad) xor xor test inc movsl cmp aam xorb aaa std cli mov mov add pop shrl ljmp or mov add add cld loopne scas cmpsb jb pop xor jl ja mov (bad) pop xlat dec pop outsl inc fwait and add mov (bad) lret (bad) out (bad) cltd test sar sub std repz inc jecxz adc mov mov mov lret jecxz movsl mov push or and dec add sub jae mov aad sahf dec xchg dec and push js sub pop pop rclb pop mov fsubrl xchg icebp pop adc pop mov lret (bad) fnstenv test cmp mov or outsl xchg xorl sub fwait pop roll sarl cmp jne add movsl out leave push jge,pn add hlt (bad) ficompl push out pop cwtl lcall sbb ja mov pop inc cmp xchg je xchg jecxz loope pop push clc dec js sub mov pop inc mov pop loopne cmp xchg js cmp fistpl fstpt inc and cwtl ficompl movsb in (bad) mov pop gs fmul mov dec xchg jl iret mov lea fisttp lcall mov or push adc cmc jecxz mov push adc iret sub fidiv sub inc mov or ss cli jbe cmp rolb cmpsb xchg (bad) out jg call mov scas pop into jnp push pop xchg push fcoms jae rol lds or scas sub mov dec mov mov (bad) sti mov fs lret test lea inc movsl sbb movsb jge enter jnp cwtd les popa mov bound andl test lods (bad) (bad) jp enter mov ds mov test adc adc push cmc cwtl dec lods jmp dec arpl repnz lret push cmp dec mov xlat inc loopne in mov jo add adc pop jmp int push aad inc inc push (bad) cmc jb mulb loope fidivr pop outsb jbe loop ds adc adc mov ljmp adc scas mov fmuls push js push (bad) mov xchg shlb test enter or and jne push enter push pusha lcall pop xor (bad) icebp lcall std inc xlat dec or negl fldcw push aad lea sbbb or lcall pusha cmp pop test adc inc push pop push into and xchg cld xchg clc idivl push cmp jne inc or jno add pop (bad) fild sub bound cmp and test push out mov fildl and adc cmpsb sarl rcl xchg jge xchg loopne inc daa dec lods cmp mov adc jbe outsl sub insl dec test adc add jg fwait jecxz fstl mov xor test cli mov sub repz hlt and mov inc and adc scas xchg sbb test outsl pop int3 das jne daa fwait jl mov (bad) pop (bad) stos or jp ss ret rcll std push jnp sbbl or lcall xchg cld mov int sahf xchg fsub cmpsl inc int3 mov fucomp pushl xchg fmuls imul pop sub adc insl inc or aas add mov mov cld pop cmovs xor movl xchg mov sarb (bad) out dec mov pop jb dec cmpsb rcr and outsb sarb dec push adc sbb mov push inc (bad) mov xor dec lahf rcrl cmpsl dec xchg sahf push pusha movsl imul ja pop add (bad) mov mov (bad) and jbe cmp (bad) mov bound pop push mov pop movsl jns leave out outsb iret mov push cwtl or inc inc (bad) cs call dec inc imul js jge add sbb cli mov loop ret nop cmc dec movl int3 in (bad) das scas repnz mov mov dec mov mov outsb leave inc sbb sbb sbb ja pop mov xor call arpl cmp shrb loop popa jne (bad) mov or movsl or leave or pusha cmp adc xor adc mov icebp insl stc es xchg lods dec push outsb adc gs sbb cmc test and (bad) mov mov aaa test out add btc jnp jle xor int sub js mov pop (bad) pop pop and enter cld mov jne pushf daa adc movsl pop mov es xchg jp push adc push shld test (bad) adc xor bnd js hlt and add push stos dec pop std cmp pop pop jne test add jnp int3 icebp adc nop mov loop aad fsubrl or xor xchg jp mov xchg xchg sbb sbb icebp movsl sbb outsl inc mov push cmp fwait in dec in dec dec push xorl ja pop outsb stos lock jnp and sub aaa xchg xchg shrb aam push or lock and inc out fcom call aad cwtl push std mov sti stos jecxz clc int3 sub ja push (bad) bnd inc push push movsl in jge push call leave cmp add fldenv outsl jmp popf xchg jb pop stc mov xor mov int3 xchg jno fstpl mov and xor push push push dec mov xor repz pop into add jno and push inc (bad) inc push adc fstp xor sub dec push inc jle,pt (bad) incl pop lock mov cmp cmc xlat ror addl cmp inc fistl jno in aam cmp (bad) jge adc xor js push ficomp sub cmp xor imul push data16 and xchg pop sbb ds dec cmp inc test clc fwait mov mov mov mov clc outsb push aam xor in (bad) pushf mov out fisttp movsb cmp sub out lods cs lcall lds dec cs push ljmp and shlb jg dec lcall in out push jns jne pop inc push in jnp hlt insb xchg xchg mov iret xchg aam pop cmpsl inc clc sti mov es nop mov aas dec jmp xor add cmpsl aaa jbe mov push icebp pusha sbb mov sar out clc test fs mov ret je mov es pop push fbld and (bad) (bad) and mov and push lds mov jle enter xor sarb pushw outsl xchg pop rcll pop test clc jns orb inc xchg enter iret iret out jno subl push sbb xchg adc (bad) gs cld or sub daa imul xchg mov mov jb clc (bad) cmp test or sbb movsl bound ljmp and and mov or in push test imul inc mov jae cmp aad jp cmpsl nop lea popl mov dec sub pop mov jl aas in pop dec and xor sbb mov cwtl push gs mov fstps mov mov iret jmp sti mov movsl mov stos insl (bad) jle jmp stos popa sub mov and sbb cmpsb push movsb cmpsb jle mov out in sub push jne ja pusha inc mov mov add mov fcmovnbe dec stc outsl nop orl iret jno ror cmp lret (bad) outsl sub nop push andl push fdivr dec xchg stos dec jecxz push aas jno mov rcr hlt xchg imul mov mov rcll jg pop fild iret jb call push mov or lea push or test xchg mov mov push xchg dec mov (bad) or sbb add arpl daa xchg mov jnp add and xor mov push adc or pop lcall cmc les push xor leave notb jb dec bound lret sub ja pusha (bad) mov push sti icebp lock (bad) cld lds jmp mov mov icebp jae mov inc cmp xor int3 xchg cmp out mov push sti jns sub int3 add movsbl mov pop or cmp sbb dec or mov sub leave rcl into cmp sbb and popa xchg sub (bad) dec in xchg test test stos bound lahf pop jmp data16 leave lret inc jecxz push out push lahf mov scas and movsb cs pop xor mov std imul je or or or in es dec roll test sub push push cmp pop call sbb mov or pop pusha cmp mov popa inc jp cld jle shr dec dec pop inc lahf in push arpl repz sbb mov adc test adc aaa not cmp dec fsubrs shll pop nop and push ret mov daa or clc jnp out mov lea sub jecxz rcll cwtl mov in mov mov addr16 or or mov jmp sub sbb add adc cmc and sbb inc jne std insb or or insl jb negl push lcall out aas cmpsl lcall sti scas cmp jmp push lods outsb dec idivb push adcl mov lock jbe clc in icebp fdivrl push sub inc mov stos fwait dec sub test sbb xor dec std xor sbb inc sti sub (bad) mov push push or popa pop aam loopne mov xchg cmp pop dec dec lret sub add scas aam lret push xchg insb jmp ss pop xchg add push addb or jo bound mov fist dec scas xchg cmp lods orb mov cltd in push addr16 inc pop jns xor in arpl stc cmp pop int3 test jle xor test mov adc fyl2x add out add ret incb test cmp jo pop adc and xor aas inc mov outsb sbb arpl mov add xor pop mov bound loop add lods adc adc notl xchg sarl mov lea cmc movsb dec push gs inc mov mov cmp rclb mov loope fistl jae sar je xchg mov cmp rol clc divl enter jnp mov sbb push push xor xlat sub bound fdivrs dec inc jl jl movsl jmp dec mov sbb pop xor sbb push addr16 imul mov pop in push jmp add aad sub mov or fnsave xchg pushf xor adc aaa xor pop inc xlat mov lret cmp sbb sbb popf movsl inc cmpsl int push out imul cld push mov test jns sbb push adc test mov inc bound hlt ds mov mov mov addr16 sub je adc cmpsl divb jp enter (bad) test adc jl cmc and loope mov dec add sbb xor mov outsl aaa jg aas stos test test push cmp fild add mov push add sub cmp add push add lock mov mov xor je jl adc pop pop imulb mov insb xchg test or and call add pop adc cmp xor int3 xchg call or and push sub cmp out movsb ret sbb push xor mov scas inc addr16 cwtl mov cltd lds repz xor repnz fiadd pop dec cmp loopne xchg aaa je mov in popf lcall fdivrp push cmc mov fistpll insl repz ret test subl js mov xchg lret xchg arpl je loop mov out (bad) add cmpsl or lahf mov pop adc mov out cmp mov aaa or sahf notl pop inc aam dec sub push jb push repz and pop xor inc mov adc int inc xor (bad) loopne push out leave shll xlat andb ljmp mov sbb ret lock push stc xchg das in scas push and daa add cmpsl sar mov fcompl mov or xorb xchg dec sub pop cmp cwtl mov (bad) pop mov push test or stc rorb lock and jecxz cs inc xor movsl sbb adc adc imul cmp add push (bad) cmc cmp inc hlt mov hlt arpl push adc mov fstpt fimul out push inc in or xchg stos fadd iret ret das mov movsb test out pop sub mov test js fdivrs mov sbb stos cs xor mov pop ds sub sbb lods add sbb push inc push popf pop sbb out ljmp int xchg stos or es sbb icebp xor cltd sub (bad) fwait cmp stc sbb scas dec push pop (bad) outsb xorb cmp mov mov or cmpsb dec mov lea (bad) jae (bad) fimull pop or popa mov repz std outsb dec mov jns xchg cmp insl rol cmp (bad) pushf push inc or (bad) push mov and mov jp mov jle and (bad) push lea call lahf mov faddp push sahf ja cltd cli add jmp push insb xchg sbb pop sbb leave jns mov cmp mov push out inc ss dec shrb xor inc je jne adc fist in inc sbb (bad) sub jge shrl inc xlat outsl ret dec addr16 loopne xchg cmpsl dec pop mov bound pop rclb mov loope popf and cs test shll out out inc sub and inc pusha inc enter jp mov mov out pop sub dec je push ss icebp pushf cmp add sub add fsts icebp lahf xchg push sbb aaa cwtl xor sub mov xor push clc dec inc dec lock jne inc xchg xchg mov mov xor dec push pop ja mov and jbe push xchg fwait mov das imul jne xchg sub repz mov dec and push jns push lret cmp bound addr16 (bad) icebp or mov jecxz aaa sub fist jg cmp dec aad mov xor inc fcoms push cld inc fiaddl push and adc cld stos add mov mov cmpsb inc push stos push mov inc sub mov add sbb stc mov or insl mov cmp or (bad) sub add or cmp mov rorb enter push out popa in xor mov lods push aas arpl je xchg inc adc lcall lock mov cmp inc dec inc and adc push inc mov aam lahf mov pop lcall cmp fidivr shrb jl sbb sbb sarl daa fildl repz std fisttp add and sbb dec or call (bad) adc push insb jns jge and xchg adc cwtl arpl push mov jg imull cmpsl lcall jmp jbe or test mov pop sahf shr jns js mov decb cs out cwtl sbb psubd test xor fdivl ret test xchg xchg xchg xchg push or repz lea dec fimull mov mov lods movsl mov movsl into push sub cmp inc fidiv jge into lahf test add popa cld pusha push sub out test rcrl enter jbe popa arpl (bad) sub addr16 aas sub and dec cs cmpsb push insb adc xchg fisttp mov sbb inc xor ss pop in lret leave or pop imul xchg xor lahf pop popf cwtl loop cmp inc pop cli xor sbb xchg cli mov aad (bad) and test aad ds (bad) inc cli add mov lods mov stc or sbb sbb mov jge lcall sub loop gs cmc jp fwait cmc les pop jo mov out hlt (bad) and and cld or sbb jp cld call add adc insl aas dec xor incb sub (bad) and cmp and lods outsl jno dec ljmp dec incl and clc xchg call insl addr16 push mov xor dec fcomi hlt mov mov movsl xchg jmp lea jnp fisttpll mov push pop cmc cmpsb pop pop jbe aad imul dec pop js mov xchg mov add into mov fs aas call in inc cmpsl dec push dec sub incl add adc mov call test (bad) test pop rorb dec mov ljmp decl push popa icebp pop jnp ds cli test mov sarl es enter ficompl jg rcrl ficomp add cwtl sbb fdivr loopne clc mov and add rol stc lcall mov fadds repnz cmpsb shrb jmp stos adc push loope dec xor adc insl pop popf adc mov pop add enter inc mov and sub push icebp ss jno dec (bad) (bad) stc das cmpsb cmpsl xor rcrb cmp or xor dec pushf pop lock pop jecxz xor adc dec insb fwait ret stc in adc rorb xor and xorb fsubrs mov aas in pop jae test fdiv push pop out adc and scas ljmp enter xchg or insb mov add (bad) mov inc cmp jmp xchg cmp and ror outsb popf push fnop pop test ss out stos je mov (bad) cmovne int3 sbb push lods addr16 pop cmp fcomip inc mov in shlb hlt jnp cmc sti mov in jne inc sub sub push lahf bound ds pop lock pop pop jge pop jle ss mov or sub in sbb inc sub cltd cmp test jle aam pop xchg push dec cmp (bad) jnp test cwtl lods dec out aam push xchg outsl adcl pop cld add hlt popf and das (bad) or and fldl cmc mov subl cmp ret push loop movsb and (bad) scas js dec sub push loop xor fidivr sahf rolb pop sbb pop pop inc dec add xor pop mov xor or jmp cmc popa mov std and popf pop inc (bad) loopne call jl pop inc mov and dec loopne test in lods cmp mov nop mov ljmp fcomip iret jg add sub mov xor push inc bound call (bad) (bad) jecxz push fs in popf add cmp fmull ss lock scas add sbb fcomps sbb icebp dec push (bad) pop imul dec jl (bad) icebp lahf xchg scas lds xchg (bad) arpl jl xor dec cwtl shr and xor imull movsb or je add or mov xchg icebp ficomp push sbb cmp and xchg addr16 dec out mov mov cmpsb cld or mov mov (bad) je push ljmp pop push mov stos cmc (bad) ficom aaa jo pop xor fistp push fadds fwait cmp es sbb lods je fmul in cmp aam sbb jp add and xor pop mov lcall je jge fildl push loop mov cwtl pop andl pop or or push and and (bad) push jecxz mov test add outsl inc cmpsb dec mov pop out sbb lock xchg frstor icebp enter dec aas lret mov (bad) add push sbb aad (bad) pusha ljmp jp ret ja outsb mov adc in xchg cmp repnz (bad) mov cmp repz jnp adc in dec lcall xchg popf jae or test push negb mov repnz dec push and mov cltd sub add pop xchg leave bound xchg (bad) push fcoms xchg xor pushf and divb dec (bad) mov out sarl and jb fistpl mov test pop push adc leave call push mov aas cmp jne mov pushf jnp cmpsb sub andb (bad) into sbb sub bound mov rolb out aas pushf (bad) lods in pop push jmp jg and aam inc mov out jl pop and ljmp scas (bad) fsubrs xor adc add push jo sbb jno cmpsl or fisttpl sbb movsl cmp push cmc xlat sahf stos lock cvttps2pi sub cmc cmp test ret xchg ja insl mov icebp sahf xor and jno sbb mov sbb or lea inc and inc mov std xchg jecxz shrb adc and cmp pop add dec stc arpl lods mov movsl xor rolb rolb inc int or sub or xchg dec pop sbb sahf fwait mov ret (bad) pop adc (bad) inc incb cmpsb dec sub pop aas in add fwait cmp je add lds leave jge pusha ja mov dec loop and jnp adc test repnz mov (bad) (bad) in repz adc pop stos and fbstp (bad) fcomip sbb icebp int jae pop insl push das pop push inc (bad) into test sbb cmpsb mov call inc lods andl dec cmpsl or inc inc pop jp out (bad) hlt jb out hlt cmp movsb or jmp pop sbb in rcl push pop jmp dec mov dec addl sbb xchg xchg in cltd sbb stc sbb (bad) and adc and xchg xlat xor mov in xor or mov dec leave icebp push xor negl rcl (bad) xor cld inc aas stos inc cmpsb xor xchg cmp ds repz add loopne sbb jl,pn stc jmp xchg sbb pushf dec pusha dec inc decb and icebp out idivb out popf insb pusha jbe movsb cmp dec repnz adc jne,pn mov xor sbb sbb push rorb jo lcall and ss cli insl mov mov inc dec or or es jle or out adc add rcr sub push scas adc ret lcall repnz dec into lret mov add outsb repz mov in lret lret sbb es rolb adc add (bad) mov pop lahf lret cmp jns loop push es xchg ret jbe arpl scas aam daa aad mov sahf and mov ret ret dec mov in push push popa icebp and mov xor xchg stc cltd cmp jne sbb adc out (bad) pop fisttpl test cmpl cs xchg xchg imul jp and dec add fwait int3 cld mov sub sub aam fsubrl jno fisttpll push sub rcl inc sbb (bad) adc mov jns arpl push in (bad) xor pop mov xor push cwtl gs cmpl lcall xchg enter push movsl outsb push push mov push xchg (bad) (bad) mov nop popa add aas jg mov fidivrl setno ds fist xor (bad) pop test stc test xchg xor (bad) sbb testl fs insl je xor lret sahf xchg fninit imul movsb and jl jp sahf inc outsb xchg gs cmp push pop inc (bad) sbb sbb jmp in mov movsl add out xor test rorl mov push (bad) neg sbb out mov or addr16 xchg mov pop addl pop pop mov adc lods add and test jbe loope or pop xchg mov xchg xchg aas mov icebp scas into lahf xor bound test lret (bad) xor stc loopne movsl lods xchg lret and aaa lahf jne hlt inc in cli pop fdivrs mov shr hlt push dec push fldcw loopne inc fldt pop pop jmp xchg jmp cwtl xchg mov sub mull hlt sub sti ret aam push push inc push test or (bad) xor loope (bad) fmulp xchg arpl stos push adc and adc mov ja xchg mov lret (bad) dec cltd mov jge cmpsl adc movsb cli mov mov fmuls insb inc loope notb push add arpl sti fmuls pop insl in and sahf dec and push xchg inc mov xchg mov idivl xchg jne dec ja fistpll xor sub out adc scas jmp lods mov test (bad) fisubrl push (bad) (bad) push add jae xchg idivl and std mov mov aad ret out cmc jae pop pop and testb jne outsl pop lret cmp les in js lods and pop negl (bad) cmp sub xchg add incb inc pusha pop or push imul xchg sbb loope push jmp mov mov xchg push lods push test (bad) add scas dec cmpsl mov jnp nop push fwait lods push inc fistpll inc mov loope jmp jb inc pop inc pop out movsb aad push iret enter jbe pop sub out mov test xchg lahf dec sub or lahf jmp dec inc js cmp jg xor sbb mov icebp imul frstor jae mov sub mov cmp out jp insl cmp ret mov mov or sbbb pop and les xchg call adc pop pop mov mov push pop xchg or test sbb push jo cmp sbb rcrb jl in mov insl mov movntq inc mov leave jecxz xor and repz (bad) (bad) mov dec fwait jecxz in fwait mov adc iret push push jno repnz stos or aas xchg add ret aam xor cmp mov inc lods sbb add pop mov leave push lret mov mov outsb push adc inc mov xchg sub xlat jns cmp fbld outsl adc bound loopne and dec push fsubr adc cmp imul mov cld das sub push mov mov sbb xchg out pop call rcrl (bad) adc adc mov nop je cmp daa pusha stos test pop mov je icebp inc sbb mov les test mov sbb mov jecxz loopne aas or out bnd cs pop cmp pushl outsb lock mov cmpsl neg push dec movsl movl mov lods sti icebp clc test stc xchg repnz shll or xchg mov enter dec sub pop pop int3 lret sub cmp or loop lea cmp loope cmpsl popa push popa fnstenv pop xor je (bad) mov and add addr16 stos leave mov shrl into shll sahf and lods push jnp,pt fcmovb mov imul mov mov ja pop mov enter push push push cmc sub ja mov fisttpl xchg mov ss mov pop adc push fdivrl mov arpl fs mov cmp lret imul pop imul mov pop lcall push lret shr pop pop and xorl fildll jb outsl sub xchg push mov cs push out adc xor add push xor out loop shrb in fldt jae inc sbb jnp loop in sti mov xor jno inc xor lods movsb incb mov cltd arpl sbb sahf and stc test outsl xor jb and push fstl stos pop mov gs lahf stc dec dec adc and rcll lods (bad) stos test pop (bad) repz sbb repnz scas pushf mov lock jb pop or pop insl pop and ds loope mov dec mov je out or aad les jmp inc inc add mov mov jecxz xchg imul xchg mov les nop cmpsl in outsl rcl je ja push fstl inc pusha cmp inc add cmc mov pop cmpsb sub into gs repnz (bad) ret sbb jno rolb adc cmp push mov sbbl fdivr add data16 and out imul ret mov pop pop ss lods in push je cmc movsb stos xchg dec mov iret daa cmp jbe (bad) cli mov mov xchg sbb lret push popa sti push or mov mov stc sahf push and ja or rolb xor mov pop mov push imul in mov push push dec xor outsl push sahf fs sti pop (bad) lret outsb and jg lahf divl rcrl mov mov mov cmp dec call lret inc js shrb mov pusha loopne push mov mov es xlat jge pushf rolb (bad) push (bad) jo inc pusha jns outsl cmp pushf lahf adc hlt imul stos inc out movsl pop int push fwait push rcll jo jns xchg rolb (bad) pop lods adc add mov es (bad) stos jmp into or outsl mov jmp (bad) push xchg push lahf xchg adc dec clc cmp enter out stos test mov fcoms push pushf aas sarl inc mov pop into xor inc ds adc out pop lods roll mov iret test push into push (bad) xor adc cmp movsb movsb lds inc pushf cmp sbb and fmuls in fwait or fld btc cmp ror rcll add mov cmc or cmpl or test pusha mov inc ror mov dec inc inc roll sub je mov sarl outsb mov push mov cmpsb out sarl mov adc jle test lcall (bad) and aaa mov or mov mov mov movsb (bad) mov std dec pop outsl ret mov test add push and icebp or cmpl data16 in ja pop lret inc insb (bad) push test insb stos inc aad gs mov aad mov jge mov push sbb int xor push jmp jb and pop or pop or inc iret jnp xor or mov jno push and arpl push or mov sahf and sbb xchg int3 xlat xchg (bad) movsl mov pop ljmp and xlat push mov jl mov pusha stc add incb push int aam mov add cmpsb testl pop inc xor xor jp lock or aaa jo dec push es xor push mov or pop mov add or mov aad cld adc adc xor dec adc leave cltd push mov add push jne mov pop adc pop test stos sub fdivs ljmp xchg cs (bad) sahf lahf hlt xchg jnp je pop lret jne and cmp pusha jo testl push enter xor arpl cmp lcall enter sbb dec fwait inc add adc pop lea cmpsl mov jne (bad) out adc mov mov lahf adc dec lret inc cmpsl test or adc int3 and add or rolb stos mov test push jb pop mov std adc lea insb add addr16 cmp jns fsubl dec adc sbb nop lea repnz fs push mov stos in push cltd or pop mov inc pop out mov xchg cmpsl (bad) in mov mov repz aaa (bad) adc pop fld1 push pop pop cmpsl out adc mov and mov fstps leave pop mov (bad) dec aam jecxz mov scas pop arpl les mov dec push fucomi ss cmp cmp (bad) cli dec out jmp decb cmpsl jg (bad) push sub jp mov iret lret inc leave popa push sub push push outsb jbe lcall cs int3 lret dec pop mov mov data16 test cld lahf ds sbb nop dec daa pop push mov test nop addr16 mov cmp divb and js sub icebp xchg mov and cmp and outsb and les leave or scas pop push xchg js sarl sbb cmp sbb pop xor aaa jnp xchg sbb std scas ja dec repnz xchg mov test aam or call int3 icebp or sti iret or dec inc daa repnz and je push jne in shll (bad) inc jno pusha arpl xlat lret add aam xor sub fstps aas scas sahf jno xchg pop je push cmpsl mov pop fsubl in mov ja cmp int xchg stc xor pushf ret in mov push pushf pop cld repnz repz xor mov mov push push xchg add in adc push enter iret lds jge xor leave (bad) sub pop push push in ret movsb or pop imul fsub pushf ds or adc jge xor js mov int3 push movsl jae popf inc (bad) inc loope data16 lods jno movsb inc in mov jecxz jg pushf mov stc lds pop (bad) xor ret lock or mov push and jmp add and push inc dec push aaa mov ss sub or push cs rcll adc xchg cs mov test insl xchg out scas inc shl aam sbb jbe mov jl (bad) or lea dec imul fidivrl test cmpsb dec mov cltd in js add xchg out pushf cmc mov repnz pop sti cmp inc insb test xchg outsb ret adc jb pop pop scas into xor pop mov dec int xchg mov (bad) mov fidiv jge mov repz mov test lods and xchg fadd ret pop ljmp fnstenv xorb or scas jns pop wbinvd inc dec (bad) xlat (bad) pop sub sbb sub int imul adc faddp leave sbb (bad) (bad) pusha jg and test rorl pop or pop and sbb insl pop adc je adc ficomp cmpsb adc popf jbe cmpsb cmpsl xor ret fdivrl clc and push into in sbb sub cli dec in lock sbbl nop jno lea out pop scas xchg out ret jb jmp pop pop and (bad) inc mov and pop std adc aaa cs push sub insb or das cmpsb (bad) mov out xchg imul lock inc std dec jnp aam mov mov sub push pop lds add mov nop mov jnp loope adc xchg dec sbb push mov fdivrs inc push in pushf shll out iret outsl jle rorb outsl movsl add cmc mulb adc jge ja gs jno mov sub push sbb and scas movsb jl imul fs mov inc leave inc out jb inc or jl leave ffree int3 xor in daa leave movsl dec push mov add mov es or popa call adc shl mov leave std cmpsb js sbbb mov (bad) mov sbb pop int push add hlt ret (bad) rorb ds pop (bad) data16 repnz sbb ja fwait cmp jo and adc mov sbb mov xchg push out lods (bad) out imull shll (bad) xchg ror aaa shrb shr test sbb and mov out leave outsl (bad) mov das push jo xlat sub inc cmp lret dec bound cmc dec sbb adc (bad) lods int3 out adc test inc pop mov loope lcall gs call sub mov cmp aas mov mov pop sbb sub (bad) mov (bad) insb daa (bad) pop push sti pop negl sbb cli movsl lret int clc in mov insl jl mov xlat rorl and push (bad) sarl xchg mov and mov cmp jmp clc test sbb test aaa or xchg out inc xor stc jge int3 fidivr jno jb pop jmp clc or aam jo mov jnp imul cmp scas fisttp ljmp mov cwtl addl int adc lods insl mov pop adc pop jge nop sbbl outsl cwtl and and imul int in mov movsb cld in rcl push jle test push sub movsl inc jmp add insl test push fucomip adc loop xor jp adc jg sbb pop jge jecxz insb mov adc mov xor jnp cmp and fmuls in sbb test cmc mov pop les mov inc push test hlt jge sub and pop sub fildll xor es fwait and jb js aad fidivrl sarl in dec dec loopne fwait (bad) and pop cmp pop sbb jp jae mov fs jl push xor mov and (bad) daa cmp out fmull fsubrs (bad) ja xor jp ljmp enter xchg repnz push (bad) jo into and push int3 xchg loopne mov outsl xchg sub mov push mov das xorl jle mov cs and aas pop scas ret mov inc push (bad) in cs xor push ret test ja mov push sbb adc ret jne add lcall mov repnz push mov xchg dec test cmp pop loopne fild dec pushf mov fisubr xchg xor xchg loopne movsb icebp push rclb push sbb movsb add (bad) dec or lret xchg orl fiadd mov call lock push data16 jno les pop enter repnz daa lret push push mov (bad) push repnz imul int cmp or rcll add (bad) cwtl dec inc in pushf (bad) scas gs repnz push add aad mov bnd pop and mov push (bad) jnp sub dec sbb adc push and or jg mov dec push mov shrl add inc into out cmp mov and cmc inc shlb in sub out pushf pop ret stc (bad) (bad) adc inc sbb jae dec cltd sub in nop adc dec int (bad) arpl mov sub insb rcll aaa fstl inc cmp je push (bad) xchg push inc enter adcl stos outsl (bad) xchg icebp fwait test cld inc mov inc sub add dec push js rclb mov int3 enter daa fimul or push (bad) adc lret popa cmp jle mul or nop or adc (bad) mov (bad) adc lcall xor lds xlat and iret ljmp pop popa mov adc (bad) push jmp xor vfnmaddps ret loope and outsl adc fistl or xor dec stos cmp push fwait cld pop inc inc and (bad) insb mov mov cmp sub (bad) pmulhw sub rcr mov fs inc cmc cmp lret cmpl (bad) fadds xchg inc mov sbb sti lods popf cld jg inc (bad) je mov lods cmpsl mov xchg mov mov fs push jno lock mov imull clc aad mov mov adc test inc jo or (bad) or mov xchg cmc jg imull dec dec inc cmp lret push pop sbb loopne imul mov jne mov cwtl push bound lock jns push mov inc lock pop ret push cs data16 jb or (bad) xor inc push adc mov icebp mov cmp lret mov ljmp fistpl js pop call ljmp sub mov aaa test icebp movl push mov jns dec lcall mov ja stc shl mov xor (bad) and lock out (bad) out dec sub cwtl and nop pushf inc push sbb ret mov jno cltd add stos jne stos push repz (bad) cmp test inc sbb pop mov cmp clc sbb lret call test inc jns ds xor rcrl ficom jge mov add aaa pop lret int3 and dec xor sbb lds mov jo adc mov stos pop test adc add flds push cld scas les cld mov aad pop jbe das mov fwait xor test pop adc outsl cs aam push inc lock fstpl mov mov mov sbb leave fisubl adc xor mov daa ret test push mov lahf xchg inc push xlat aam cmp repnz shrb or iret sbb negb cwtl dec pusha sbb ret aas arpl shrb iret push fdiv outsl cmp dec push in lock popl imul jmp dec stc and jnp loopne cs cmp xchg dec jge out inc cltd dec lods addl or fnstsw pushf in sbb sarl xchg add and fimull or push mov ss fwait hlt sbb out jne pop push push inc gs jmp (bad) mulb adc add (bad) into push mov add imul shrb xlat fcoml pop lds sub lods mov xor sbb adc jae (bad) cmpsl xchg dec lock aad fistpll outsl insl mov lods xlat mov cmpsb sbb insl sub push cmpb and (bad) lock add add stc mov cwtl xlat jo add popa sbb push and int3 or mov sub push sahf mov pop call xor add movb adc ljmp outsl push jp mov movsl out add icebp xor mov pop inc mov aad mov push sub sub adc lock adc pushf inc mov ret rcr fcmovne out bound sub fadds rcrl inc jg imul ja rcll cmp repnz scas jl out insb fistp mov imul mov sbb jmp clc lea ds rcrb cwtl insl shrb lock iret lods fs push pop xor ja jb scas (bad) jnp mov jae cmpsb sub push jns xor jecxz rolb das xor adc notl fs pop xchg aaa push mov fbstp pop loopne daa mov add cmpsb (bad) xchg ja jb negl iret push cmp or out add in mov andb cmp push (bad) mov push pop push rcrl fnsave xlat ljmp sub cmc add dec lods xchg jp cmp cltd inc xor add and xchg adc lret stc xor sahf rcll loopne mov stos lods divl mov inc jbe sbb mov jb iret jecxz mov and mov fldenv (bad) jnp mov xor pop sbb jo insb and pop in push icebp dec xchg lret sub lsl (bad) das or bound inc add add insb stos lea adc imul dec sbb push enter pop adc scas rcrb mov imul sbb daa sbb jp aam pop add arpl (bad) repz imul xor inc imul mov in pop push cli std lea push icebp jmp stc fiadd mov (bad) pop loop or inc dec pop popf mov or inc push adc pop ret sti cmp push jge (bad) mov int pop mov pushf inc jns jge mov stos fild mov and push stos xor sbb xor push push dec mov or or xchg nop in add ljmp inc (bad) sub faddp ss pop lea mov xchg mov pop out cmp cmc aam orl out inc xchg sbb mov in je mov sub dec xchg or push and xor inc lea push imul ss push cmp lods and xor inc stos faddl cmp imul fs jl inc mov ret stc xchg mov mov mov in adc inc ljmp adc lahf iret outsb call fwait popa scas lcall scas test mov add pop cmp lret bound inc stos inc sarl jnp xchg shl loopne cmp adc into orl jg xchg add pop push push fwait and dec inc cmp sub pop adc or (bad) or pop out xor test inc mov imul mov std push ljmp sub xor dec mov sub sbb pop lcall gs in dec jbe,pt rclb cmp je and stc adc gs iret xchg mov dec dec jmp ror jg lods ret mov xor mov mov lahf fistl or cltd enter movsb hlt cmc mov add fdivrs xchg out (bad) in lods lock mov je jecxz and mulb in push nop pop nop pushf pop aas pop cmpsl in (bad) fwait stos shlb xchg popf fistpl (bad) and inc (bad) pop aas cmp dec add inc repz or sbb mov jl lods push fbld (bad) jle repz lret (bad) call or sub mov outsb std test into in jnp sbb lret stos call sub test ret out push imul push jecxz frstor outsb stos fnstcw popa push cmp cmp cmpsl repz xor pushf inc or insb lock xor dec push jae lds jo out jns sahf sbb loopne lret ss xchg in loop inc or jmp mov mov leave popl cmpsb or mov rorl mov xor xchg sbb and lods push lahf mov bound jnp dec lods int mov loope add dec std enter popf cmp lea sub jno jle orl aaa mov lds (bad) cmp jbe clc aas cmp push out outsl sub outsb loopne cwtl (bad) call inc sbb jecxz pop dec ret dec out dec sbb movsl gs loop add push ret push decb iret mov iret loop ljmp lea dec ja sar and daa jmp add pop inc sub dec cmp loopne ret lods hlt xor test push mov and inc (bad) test xchg enter push xchg lods sub int3 lds out sub mov jae movsb (bad) push sarl dec pop lods rol push dec pop push pop xor nop loop call or cli push leave pop insl sbb inc inc bound iret clc push xor mov scas cmp mov sti and pop shl pop push lcall (bad) les rcrb mov cmc cli js imul inc out loopne movsb add lea mov js negb pop sub push push call push pop popf or push lret adc addr16 pop push mov inc or aad ljmp push aam iret mov mov inc jp push pop or push sub inc push lea pop cmp out rclb and lcall in aaa pop rcrb pop cli pop cs cmp (bad) mov ret jmp ja mov lcall push fdivrl sub cmc stos jne xchg sub fcoml cld sbb adc aaa test jb lods pushf iret dec or mov xchg repz pop add ljmp stos rcll out cltd sub (bad) pop hlt mov mov imul fimull push inc push mov xchg push rclb mov outsl popf bound pop insb jmpw jb stc je mov adc add test pop mov push lds out in and xor iret scas adc hlt fsts call out and outsb push push inc hlt addr16 cmp cmp push sub add enter ror das jp jmp inc or push cwtl rorl out leave cmp icebp repz test pop aad and imul sub jns fmull jne fsincos shrb je fistl cld lods out mov add out mov (bad) mov lahf xchg inc push out in into mov push mov test nop in jle das pop xor ret (bad) int stc mov jae add add clc in mov ficoml into into xchg sarb mov mov jo gs int3 arpl enter push repz xchg add xor loop subl sbb arpl and push lret inc fadds xor dec push push sub lret mov add xlat mov nop mov stos inc add aad es mov pop xchg xor std sub sbb dec js mov sbb mov cli (bad) fmull adc mov sarl xchg (bad) gs stos fld test popa mov pop call femms test stc or imul push add xchg add inc mov xchg add or cmp in push jne xchg push or rcl mov xor pop hlt sbb or mov pop jge mov ss (bad) or push sbb pop or scas sub xor xor lret jo ss and sub sbbl and dec push scas hlt lock jecxz mov jns adc repnz in lcall or fucom pop cmp ret gs adc adc fnstsw pop in popa pop xor addr16 testb dec push add or shll in imul sub mov aam dec popf orl dec lds lea pop pop push lcallw mov dec jge sbb jne jae mov and xor jo ja pop inc divps push in push clc dec orb sahf sti inc div inc sarl fwait iret rcrb aaa sub testl pop fsubs out mov pushf mov insl fidivr and sbb jge icebp cmc adc testl xchg cmp jno or aam push cltd jbe flds xchg pop sbb daa fdivp sbb adc cmpsb loop inc sti xor push cmp test into push inc stc test mov cmp xor mov xchg mov dec or push test loopne sub add popa scas or dec push push js dec cmp out mov in ja jnp ja dec add out push sub leave dec mov pop inc mov pushf and mov addl fsubrs jne jbe aam fwait outsl cmc addr16 dec test hlt sarb dec pop repz add cltd adcb jl pop pop push imul out in or sahf xor or sti je xchg xor mov sub adc or or ss push dec jecxz add and push pop jo repnz loopne data16 (bad) arpl push rorl lods pop inc mov xor ja cwtl outsb sahf xchg add popa xor stc xchg xor roll call xchg cmp call (bad) stc jp mov push mov ret (bad) fisttpll pushf sbb cmp repnz daa in bound inc rcl dec jg mov or ret scas pop ljmp fildll mov lock jg cld ret push jg cmpsl lods sbb stos sub xor mov outsl xchg dec pop xchg mov (bad) push adc aas outsb repnz cmp std test loope ficomp (bad) mov push enter cld icebp and movsl pop es das stos jbe das adc jno add sub sahf shrl ficompl addr16 inc insl sarb mov jmp cwtl cwtl mov mov mov and pop ds sti mov push xchg pop mov andnps xchg push lods (bad) jge dec adc ljmp test pop popf or (bad) enter sbb fcoms rclb inc cmpsb xor mov inc andl sahf mov dec cmp fsubl (bad) aad xchg js pop inc mov sub push insb mov clc scas icebp test xor sbb ds xor repz in dec mov outsl jmp ffree shrl dec mov das jnp sbb stos pop fmulp sub pop rcll lret shr mov aam sbb scas ret xchg xchg sub lcall ret stc gs sub jne insb test mov outsl xor xchg push (bad) in jge leave stc daa push ret cmp add lds decl out fs add hlt pop sbbl sbb jp std mov pop cmp cltd addr16 sub pop push test mov mov fdivs mov pop je fcoml shr xor xchg lret stos add gs mov fldcw (bad) mov div popa mov test (bad) jo add enter stos lea std sbb or pop inc mov jb mov subl sbb sub cmp insb inc or aam jp inc sbb or cmc xor xor jl aam and mov mov push gs xorb xor loop inc dec mov sbb mov stos and ret xor iret ret xchg pop xchg xchg pop push cmpsl sti aad jne dec call mov subb adc fdivs push faddl jbe cmp and sbb mov inc sbb ret xor mov aam mov sbb dec aas shl cli mov (bad) inc pop stc in imull pop jae or mov (bad) aaa clc data16 test fwait jp jno dec scas inc sub sub shll sbb jo add jo nop add pusha push and mov mov mov mov idivb mov sarb pop mov addl cmc push cld xchg into cmovl fldt lret jno cli sti cwtl add daa enter lahf int or (bad) scas pop lret pop fdivrl xor icebp aas dec pusha pop xor (bad) mov frstor jmp jb (bad) jg sar scas ret fnstenv lret (bad) push jge add xchg inc fnstenv (bad) xor push rcl xchg push repz and mov cmp mov and aad cmpsb lea push sub mov mov pop xchg pop fwait mov xor shlb cmp aad jo mov mov push push gs push outsl iret movsl cmc pop iret sarb sbb (bad) insl shrl xor cmp adc (bad) cwtl mov arpl jb std je xor xor inc insl adc ja jle repz push ficom nop popa stos test jnp add push scas (bad) lret out push jb jne cmpsb add sbb in cmc movsb fsubs xchg sub mov xchg jb push fistp jns in jge xor (bad) div outsl push sub test xor jecxz test xchg adc pop adc jle (bad) and mov das adc bound les cmpsb mov pop cltd mov dec add jns clc rcll shrb iret fidivr (bad) xor sub in rol pop shrd cltd popf imul es sbb or mov sbbb sbb adc ret dec imul jo ret xchg mov je dec je popa mov and sahf dec adc adc cmp std (bad) hlt call pop push (bad) cmp jnp and jecxz push fsubs xorl roll inc xchg sbbb mov or jno lcall sbb (bad) nop xchg ret push bound xlat mov dec jle (bad) and pusha push outsb sbb pop (bad) test test faddl das add mov test js push push jmp lods and or and cmc push xor (bad) js addr16 mov lds and in cs push lret push sbb pop add punpcklbw (bad) (bad) lret popf ret enter add cmp mov inc mov movsb mulb fwait inc xor add xlat and lods cli inc loope sbb and push sub add sub out lcall dec push icebp cwtl cmpsb and xchg lcall rol cmp xchg int outsl or add inc sbb or cmp cltd std add clc push fs loopne cltd pop call add inc (bad) jae xor std rclb push jg int hlt cmp mov xchg jne iret or popf cmp xchg bnd fisttpl jnp push sub mov dec roll pop jnp or in fmul xor jecxz mov xor fsubr mov cmp ja test movsl pop adc test xchg pop inc cmpsb in dec and arpl sbb mov in loopne or scas nop mov push or sub xlat fildl sbb scas cwtl gs xor sub into mov aam jnp push mov clc ret inc mov int3 xor inc fnsave ja pop in jnp std stc jge xchg cmpsl sti addr16 mov or fwait in cmp cmpsl dec mov xchg sahf inc xchg xchg hlt divl adc or mov aad inc push and xchg je jns ret and sbb sbb xor dec pop data16 and cmc mov (bad) adc xor jnp push push lds or pop clc add xchg mov scas mov adc movsb sub and ljmp or cmp xchg mov add mov add sub xor dec mov loop je or insl imul add sahf (bad) lret lret or jecxz iret frstor inc xor out sarl rcrb mov push aam cs fimull cmpsl repnz int adc inc push roll xor scas ss xor mov mov sbb mov dec add cmp adc sbb add push insl popa popf ljmp negl push cwtl xchg lods or xlat lds adc (bad) mov lds lret xor jmp mov mov outsb push dec in and sub das push mov aam cs or pop lods mov ret pop out sbb fmuls aad lock sahf std xorb inc mov dec inc (bad) stos addr16 icebp xchg lcall lahf pop dec lods es enter das push xor js mov out popf pop mov test fsubs adc rorl into negb bound cmpsb popa sub jne popa inc movsl mov xchg xlat rcrb imul cmpsb inc sub jne,pt pop gs (bad) (bad) mov sbb (bad) push dec rol scas push adc pop sarl dec xlat xchg cltd cli subl mov aaa in loopw push out and xor sbb (bad) cmc pop jmp xchg out lds int sbb xchg sub jl xchg mov arpl jle in js hlt xchg xor cmp pop pop push roll push and loop xchg std inc mov les mov ds js ja stc lret jno pop jne inc popa mov and inc or (bad) movsl xor sub adc mov jecxz sbb pop aaa inc fsubp into sub pop dec or adc into lcall mov jbe pushf dec movsl inc adc cmp (bad) mov lret inc dec or mov mov push and in push dec pop xor popf dec fidiv cwtl out imul xchg out insl xchg jns test jl xor addr16 in data16 nop adc xlat inc inc test mov int3 je pop andb add incl popa mov in jae pop pop insl sbb lret scas push insb in arpl or pop adc mov (bad) repz sbb rolb fsubrs ja lods lds mov fcompl dec insb dec lea test and fcmovb mov loop icebp call stc mov iret cwtl push cli outsl cltd (bad) loope jmp cmp lea pushf out popf fwait sbb std data16 cmpsl lret xor divps jb xchg xchg (bad) mov xor and push loope fbstp dec and fwait and test mov or mov push pop xor xchg or sbb xor scas push pop stos adc leave test lods dec lahf sub hlt cld push cmp xor in pusha mov loope inc push and lret push sbb test push xchg fcmove cmpsl xchg push cltd dec sub pop movsb fisttpl mov scas push mov (bad) jmp push in lds pop push repnz (bad) call das clc das lret push or sbb pushf leave and xor pusha notl sti push imul sarl sbb mov pop xchg imul push mov in xchg in dec je push nop push pop aaa divl test fimull addl pusha jnp sub mov and lea xchg int inc jmp ss adc lret loop int dec jo xor repz sahf sub or sub in add je sbb mov in jle lea cmp lahf pop hlt pop sar jno (bad) sbb aaa pop je cmp cmc and out dec adc enter pop mov xchg mov push not pop or xor (bad) xchg xchg sbb mov xor out push push cmpsb test sbb mov lcall in into into mov xchg aaa stos fs or adc inc pop and imul jno or sarl aaa lods fisub stos nop dec rcrb dec cmp pop inc mov xchg pop imul inc or mov adc fcmovne push push adc dec xor or lock mov aas push in mov iret ds lock subb pop mov lock pop sbb lret xor test pop cmovae xor sarl add lock lahf cltd inc lahf sub in push lods mov push xor mov inc gs cmpsl dec add inc shll add mov adc shlb xchg inc cmp pop adc (bad) or jns in jl cmp sbb lret mov cmp xor or ret orl iret cld xchg insl icebp fwait arpl mov xchg mov int3 fsubrl xchg iret fcom roll mov dec and mov mov leave pop lret (bad) outsb test es in or push rcll test sub in mov test xchg or imul xor push add fcompl jns leave inc jbe adc jne or push icebp add fmul inc (bad) cmp leave pop inc scas jge (bad) mov aas pop repz adc sbb (bad) fnop aas stos stos scas (bad) les aad mov mov adc adc ret add lret pop sahf inc rcrb mov cmp push aaa or xchg (bad) clc cmp mov add iret dec inc push mov in pushf cltd sbb push jns insb sub adc add in movsl cmpsb popf xor icebp jbe cmp adc add sbbl sbb push cld cmpsl mov mov mov mov (bad) mov mov movsl imul arpl ret hlt lods fmuls or ud2 ds icebp pop cli cmp (bad) xor jecxz add cltd int3 inc pop pop cmp jmp inc push inc cmpsl sub mov mov cli fucomip aad lds mov ret mov jecxz jne in mov dec (bad) shrl jp insl add pop push (bad) jp aam sti aam xor adc add lcall insb mov into stos jmp leave jno enter iret hlt mov mov and pop loopne or push cmp mov mov jle dec dec push xchg mov mov cmp xlat jp push dec push xor push (bad) mov push (bad) aas repnz icebp cli movsb cmp aaa daa jl aad testl jns fs or mov pusha in adc adc loopne jb mov or xor mov or stc lret lcall jns or movsb and and test push out fstl (bad) push pop mov jo mov push cwtl mov push xor inc sbbl and testl pop and fcomps jb fwait es lock cmp adc and pop and fdivrs mov adc push cmp dec mov push je pop loop push out pop jb aaa push psubsw in add push sub int cmp jae xor add hlt data16 dec sbb int3 sbb mov lahf dec shlb (bad) adc add lods test fcoml mov add sbb lret xchg ficompl mov push adc pop inc out shl js xchg mov lahf mov ja repnz sbb pop dec imul sbb out mov scas mov rcrb jle cmp enter popf push mov (bad) arpl fnstenv push enter pop lds xlat je lds sbb cmp lds cmp adc lcall icebp call nop or dec dec icebp in (bad) sbb jl jbe jns pop stc aas rcll add stos ds test inc jg pop lock xchg xchg hlt les xchg xor lds (bad) lcall sahf and (bad) (bad) xor xor aas lret add jns or mov mov addr16 xlat xchg stos ds stos sub xchg or push push out insl push jge mov nop minps scas adc loop adc test sub lahf mov mov out es or addr16 jns mov dec in into je popf and push pop repz stos push nop adc jl popf int js mov jmp or inc ret leave lret or adc xor mov xor outsb js pop mov (bad) mov outsb bound push sbb add iret dec jp sar cmp outsb in icebp (bad) es push fisttp (bad) xlat pmaxub adc cmpb jbe mov adc in xor int jbe test mulb jmp mov lahf out sub cld mov pcmpeqb pop pop iret bound repnz dec icebp xor xchg pop mov aas rorl jae scas aam inc adc lds xor xor xchg jp mov int3 cwtl push (bad) hlt sbb es cmp (bad) sub das xor sub icebp xchg cmp mov cld xchg and sbb mov cmc or fadd daa jle push dec add loope pushf xchg jae fiaddl fdivs inc in clc (bad) (bad) inc addl add mov fmull in push outsl sub shrl in fistp push pop mov xchg xchg inc mov xchg add (bad) ss or dec movsl cmp sarl mov and fwait clc jae adc (bad) daa cmpl insl pop lods lods adc dec mov cmp sbb or xchg sahf sbb or and adc sar call (bad) and sbb mov add xchg lret popa add insl push pushl or and lret xchg fwait jmp inc pop ss out push inc ss push mov mov push int3 sub nop pop ret adc adc push test xor popf xchg add ret pop xchg lea push (bad) push jnp (bad) xchg inc inc pop mov loop and mov popa xchg adc repnz jmp mov daa push fwait xchg push les sbb nop xor ljmp push push pop outsb push jns jb lret fistl shrb popf repnz gs pop pusha iret mov pop stos je lods push and xchg pop faddl sti sub fisub cmpsl adc (bad) mov pop aam sbb incb inc cmpl ljmp fmull add dec popf aas ja sbb test repz les xchg leave in fwait xor cmp sbb in xor arpl aam add xor data16 mov mov ss mov faddp mov movsl pop xorl mov je loop int3 test push (bad) out push or sbb mov and mov sbb js rcr test cmp es mov adc dec js mov add jg ret pushf sti pop dec xchg inc mov mov adc popf iret insl mov scas xchg outsb mov dec bound shrb mov (bad) icebp jmp xor pushf sbb inc mov dec xchg gs add sub das push (bad) push (bad) mov jns jmp leave mov (bad) arpl jp adc imulb pop xor pusha jb (bad) (bad) cmp cmc (bad) hlt (bad) lods test sbb adc push mov lret mov sbb add mov mov leave lcall jbe inc dec mov nop adc mov (bad) add rcr lods sbb sarb pop jp pop lcall pop sar mov push xor or push fidivrl push aam shlb (bad) sahf int3 ret dec pop sbb rclb sbb out mov inc xchg mov and shrl xlat sbb outsl in lret ljmp invd and test bnd xchg push cli loope xchg aas gs push dec bound jne test adc mov out pop sub push mov outsl andb mov pop mov jnp dec mov fbstp bound xchg (bad) sbb jp enter push stos pop mov hlt mov js aas dec (bad) rorb ret das aaa sahf push and jmp test mov or ds es cmc mov loop aas dec je sbbb in call daa (bad) jp xor inc and dec and dec repz aas push (bad) mov or pop and js mov stos or mov xor test repz movsl arpl push jne adc or sarl inc movsl push (bad) lock or (bad) repz cmc hlt sahf cmpsb js test mov jne aaa jnp dec lock in push rclb outsb lods adc sub fildll imul aas lods jnp jecxz push ficom inc ljmp inc inc adc sub sbb xor int3 push aas (bad) lret and xor mov add popf fidivr out sahf arpl mov in test repz clc xor xchg lcall lds sbb bound mov xor stos xchg adc cmp nop xlat aas test cmpsl xor xchg jecxz add fcoms lea imul jb and or push out mov mov push and pop push fisttpll mov dec adc cmc pop xor lahf xor loope outsb cmp loop dec push and daa add cmp xor push sbb pop mov sub pop cmp inc adc mov imulb xor test cli adc ds dec mov test jb je repz sti sbb fs or jo out mov lahf rcr mov ds call not jg jge loop push cmpl xchg xlat in movb popa (bad) frstor lds in aam sub loopne push mov inc inc push jae std add rcll push arpl sbb and es ficom fs push (bad) cmp or repnz scas sbb sahf leave mov shrd adc and lea mov xchg dec xchg scas lahf cmpsl dec xorb (bad) jbe lcall call inc xchg jp push xchg mov mov mov lcall inc add push dec ret aam and mov or lahf test lock cmp je shrb inc sub jne in pop das mov sarl or aam and cli mov aaa cli add fisubrl jge std mov (bad) sbb mov mov das adc lods jmp icebp xlat inc insl push push dec sub loop push movsb fmuls (bad) xchg xor push sub or loop jno popf add push dec imulb or test fcomps sbb dec cltd in loope sahf jl adc mov sti mov jnp outsl jb mov sarl lods mov mov popa jnp xchg cmp mov fs pop pusha xor (bad) mov es ss pop cmp in popf fwait cmp pop adc and std mov ret or dec (bad) decl pop or rcr xchg dec push pop xchg stos ja pop add cmp sbb push cwtl leave imul out ret inc outsl (bad) fnop mov sub xlat imul loope mov nop fs movsb xchg push adc fmull pop pop xchg sbb add addr16 (bad) mov out mov adc out mov fldenv in dec and lret movsl add in jg cmp push in push xlat and inc fldt xchg shrl cli rep rolb and push pop jg lea dec pop xor mov jo push icebp addr16 cmp sti addr16 jae push sub and mov (bad) in mov jo jnp jle xchg fistl push pusha mov int3 fnop aad mov pop inc ds ret scas fs xchg cs ret jb sti pop js rorb loop das push cld in add xor add dec data16 xchg jno jnp into sbb int3 push loope ret xlat mov dec scas aaa jnp inc sahf adc pop push loopne lods cwtl and js adc sbb and add jno lds add add push cmp pop rcrb xchg lock mov sti rorl pop jae fbstp test or ja push inc cltd xor imul pop and mov arpl dec icebp cmpsl aaa and xchg pop fidivr out push je xchg aad leave or inc ljmp roll mov fldl jg shll add aaa push in int3 loope cs (bad) insb mov sub rol pop in ffree pop cltd or hlt jbe sub mov rcl stos icebp mov push and and pop cmp and mov sbb cmpsb test movsl xchg mov adc xchg imul jnp jns jae test aam test lcall mov data16 fs idiv fs (bad) xor mov mov out ds fldl subl inc int3 je xor adc push fsts fwait mov divb jae push andl aam cmp mov or jnp dec and insl stos sub push inc xchg jge cld pop push rcll scas movsb push lret aas sbb and rep pop sbb push inc sub mov (bad) push mov dec out fstl lcall aas nop mov or pop faddl repnz repnz mov push sahf mov add or xchg mov ret fwait mov call pop repz outsb push loop xchg lret xchg cs adc movsl vcmpps int pop cld lahf lock dec inc xchg pusha xchg and inc pop xlat dec sbb scas push in add push pop mov sahf pushf add xor ja js outsl cmc mov cwtl push xchg cmp popa dec mov arpl pop lods lock adc in mov mov out add mov stos fild adc xor aad mov fild mov sub jle je mov into jmp push pop add outsb add cmp adc xchg add push shrl mov mov loope decl ds jne imul fisubl jno cmp daa dec xchg add lock repz das mov stc je int3 in insb jge add or xchg push nop jae int out dec jno push mov sbb mov imul jge mov mulb int fs xchg mov xor das cwtl (bad) fiadd mov and js mov adc popa out stos and in or je fdivl sub pop aad scas ds mov jmp cmp jnp daa test out jns sarb out test and push iret sub pop xchg jns mov lods push out and sub nop sbb inc push (bad) sti shrl (bad) scas push popa and stc adc xchg and jns out xchg add inc dec mov push push test sti pop mov arpl pop shlb inc rcl jg arpl jecxz movsb push call jae ret inc xor ss ljmp (bad) lcall lods int3 mov cmpsl in jg fiaddl cmp add xchg lods mov stos add leave stos cmp cmp xchg jns stos and push dec movsb add sbb test imul xchg fucomi mov inc sub scas inc ja mov loop xchg test bound xchg jp imul in mov lret popa dec and hlt inc jae sbb add mov movl shrb inc enter popa ja lahf xor jp xchg fdivs push jae inc (bad) xchg adc bound inc repnz sub jmp sub sub mov scas cmp lods sub (bad) notb dec push dec test fs dec movsl das jmp lcall or adc and sti cwtl mov mov aam fndisi(8087 add lcall lret test or or in out xor outsb jo and les fistp jno jae adc repnz in jb inc out loope (bad) mov addr16 inc mov js aad dec xchg add or sbb lret xorb sub aad cmp pushf outsb mov xor movsb imul roll mov aad fisubrl xor aas std and add call stos es push mov push push aaa sbbl sbb jge fdivl ret loopne aad cmpsl or jmp cmc sub in dec inc and movsb hlt dec fisubr pop in push cwtl mov in (bad) push mov jns fs mov (bad) mov pushf nop (bad) dec and jmp (bad) or lea cmp pop cmp mov in xchg push mov pop jnp dec or xchg mov mov or lahf (bad) and jno (bad) xchg dec cmp mov pop sti pop out into imul push popa sub xchg int addr16 clc sahf inc mov adc rcl clc inc stos notb sahf xchg pop or mov pop mov lret pusha (bad) in shl push xor push leave pop call gs cmpsl fist mov pop adc (bad) pop inc int dec sub add mov leave push sbb nop cmpsb and scas mov ljmp inc dec cmp inc rcll inc (bad) in xor js mov in lds xor fstl mov in (bad) push lcall pop lret inc xchg xor inc clc adc scas push pop sahf cltd movsb call pop fbld fdivl insl cmp push push pushf jb mov pop loopne sbb andb jge (bad) mulb mov dec mov jge jb fcmovnb hlt jp in in fmuls jo cmp lds cwtl gs (bad) in mov pop in test pop add std add mov pop mov lods fcomps push ret (bad) sti adc mov add popf subb nop cmpsb sbb pop pop ljmp pop push mov mov pop add sarl cmp push sub int3 (bad) fbstp in dec xor outsl cmc paddw (bad) int adc (bad) je rcrl scas cmc leave fcoms push cs add pop lcall pop push mov fbstp (bad) ds hlt arpl lret fimul inc leave push std push or push test bound fiaddl add xor and sbb out out xchg (bad) and out xor ljmp xchg inc mov or stos out pop repnz push cmpsl (bad) neg mov test inc xchg in cmp xchg (bad) jmp or inc ljmp push cmc ljmp mov xchg jnp mov in adc jno jle mov mov mov sbb out nop mov mov hlt mov or adc pop clc cmp enter and lcall push cwtl lret sub adc ss add xchg adc leave and sub cmpsb into fs lods les imul dec lahf in lcall in xchg push in (bad) dec push pop out add and lods movsl sbb xchg aad cmp mov dec dec mov fimull and dec mov mov out mov xor (bad) dec xchg sbb add push js cwtl rolb xor ljmp (bad) in fsincos sub adc sbb jb scas jbe fmul mov pop lret incb mov (bad) mov ljmp sbb sbb cld jae mov test xor or inc add sbb mov mov stos jmp (bad) dec sbb insb pop sbb xor jle push xchg sbb cld stos add sub and ret clc jge adc xchg push xor daa ret sahf push mov mov xchg hlt push mov out in xor push pop dec fmull jle jae mov push pop in add movsl in es movsl mov rorl cli push jb addb lahf mov sahf dec sbb imul lods aad lret imul or pop test insb xor pop jne imul idivb jle mov and (bad) aaa (bad) out call notl enter sbbl andl out and dec sub mov mov int3 lock stc xor adc cmp xchg insl add daa int push daa test jmp out inc bound pusha out jmp cmp or fisubl shrb sbb popa or out cmp stc lods mov push ret push imul adc imul mov xor out lods sbb mov pop subl sub sbb mov sahf push dec mov pop hlt mov shll cmpsb ljmp in mov ficoml ficomp inc sbb xchg mov fisubl popa mov mov lret xor mov sub int mov ss fisttpl sub fildll (bad) loopne adc mov fcmovne cmp data16 jmp mov lret xchg inc mov insl pop inc inc ror movl inc int3 in sub jge (bad) or adc iret out ja jb orl fsubs sbb bound es push movsl cli cmp push mov mov out cmp xor pushf inc pop ror (bad) stos cmp pop cmpsl fildl mov jp jecxz or pusha into dec xchg mull (bad) mov inc inc add into lds xor sub jecxz scas or lcall test popa ds jp cmp shlb outsl adc sbb cli sbb pop daa rol pop jmp cmpsl (bad) xchg pop mov enter mov call stos mov repz inc iret mov xchg sbb mov xlat cmp push mov xchg mov push inc sarb mov pusha daa stos scas jo je dec in adc test loopne mov sub and aaa dec jp outsb scas mov shrl popf pop xor shrb add mov lods cmp push push movsb and andl int3 adcl xchg and stos cmpsl sahf outsb test xor or divb sub data16 enter sbb fisub xor cmpsl push scas out (bad) mov mov repz cmp adc mov loop movl mov sub test enter enter xchg cmp repz int3 (bad) aad xlat jne call int fstpl ror xor and mov test mov lock mov cmc jae dec and jmp jo out inc icebp mov pop icebp dec inc ja ds setp dec and pop stc lods gs test dec outsl or or mov mov cmp lret sarl dec popa mov jae dec mov mov in mov insl dec xchg and push cmc jb mov pushf icebp sbb sbb popf fild mull lret pusha mov or (bad) scas pop jnp popf outsl mov mov aad mov data16 jp sahf sub fistl jne js adc ja xchg or jge add lahf jle (bad) loopne inc adc cmp hlt sysenter shr sbb mov lods xor push cmpb fwait jbe cltd or scas and in cmpsb out ljmp or pop call (bad) add lcall jmp in mov lret (bad) inc pusha xchg sbb adc pop cmp pop test dec and cmp and mov mov mov ljmp sbb pop call xor push adc icebp insb bound xchg mov out loope pop lds popa or cmpsl pop jnp pop jl (bad) aam addr16 inc fisttp or sbb mov or xchg fucom mov push mov or cmp xor sbb popa push rcrb mov aad adc dec imul into pop mov add out mov test push mov sub pop inc xor insb push push test dec inc cmpsb lahf ljmp mov (bad) lods (bad) jl mov pop mov xchg scas jnp add jg,pn stos fstpl cmpsl ret sbb clc push popa or into mov xor mov add xor fist mov imul mov mov and fbstp inc jmp push fstpt int (bad) out iret inc (bad) repnz dec push xchg pop jbe into scas in and hlt scas hlt loopne mov sbb or test add jb sbbb loopne mov mov xor pusha lcall mov clc dec mull jp lods lods or test loopne sub leave mov sbb rcrl mov mov fstl xorl outsl mov cmpsb dec stos pop jmp sbb lcall and stc sbb in cwtl fstpt sbbl cmp (bad) xchg outsl ja repnz stos mov mov or push movsl cmc pop inc and adc (bad) divb and mov test or (bad) mov js mov sarb inc sahf inc push mov mov push adc xchg mov out push mov lock xchg jne mov aas jecxz inc sarl mov push jnp in pop cmc or addr16 push push imulb mov popf mov xchg mov mov xlat test jns clc pop and test cmpsb ret hlt cmp sub xchg lock subb jnp (bad) scas mov sbb stos pop jb mov push (bad) je pop mov lods rclb and jnp cmp add add loope xchg das jmp xchg pop jns sub dec addl mov imul fmuls xchg (bad) sti rclb add dec mov push inc jg lea (bad) movsb cltd test xor push and mov push je sbb lea es ret in adc (bad) xor mov jno push test popf lret cmp or into jmp inc bound jle push mov adc dec dec pop inc jno daa pop xchg out sbb repz add stc subl movsl xor dec mov shr (bad) repz incb xor xchg mov sti sbb mov jmp xor adc cmp iret pop push push das aaa push stos (bad) push pop xchg adc nop leave stos dec mov popf xchg and mov mov inc imul icebp sub sub repz icebp ss or mov nop fucomp lds in ret mov int3 jne pop add pusha imul icebp cmp loopne mov std in insl pop mov adc push xor jns in fidivr or test outsl cmpsl jp loope dec jne mov jl push xor scas xchg cld pop xchg sbb and pop cmpsl sub dec xor dec leave cmc js xchg cwtl lock (bad) pop movsb push fidiv add cmp lcall mov out mov repnz arpl jmp fisubr pop inc mov (bad) test loopne jmp push gs fistpll je xchg movsb aas pop pushf inc rol jo inc add ds call and pop jne,pn out and pusha pushf dec out jnp fiaddl addr16 icebp mov push pop sbb push cmc mov add mov dec xchg add daa push dec ret outsl pop xor int3 or xchg mov dec xchg call test sub push das mov nop adc mov daa test pop push push dec xchg cmp and and fsubs mov cmpsl jae shr orl inc fstl push (bad) fldln2 or ret in mov movsb or aaa sti pop fcmovbe xor xchg add into fldt je jle cmpsl mov (bad) mov sub enter sbb push adc (bad) mov pop xor adc xchg inc arpl mov ss adc loop cmpsb mov (bad) fucomip out inc movl test add lds push and (bad) fdiv xor out sbb ror popf inc add mov xor shll addr16 incl daa iret lret mov mov cld mov pop cltd sub gs pop test test push test add in mov cli insl dec jo mov gs lods mov and imul mov push popf pop push js into jecxz fsub xor or lods add stos fdivrs pop mov push notl sar cmp jg (bad) lret iret mov dec inc (bad) xor int mov and pop mov lods mov repz push mov sbb mov mov loop test jp push inc add pop addr16 push shll stc sub xor sub sub xchg ret test aaa inc pop aaa dec mov inc cltd mov cmpsl jns gs mov rorl pushf pop pop test xchg icebp sahf pop push pop cmc push pop add hlt lock adc clc jae dec loope (bad) adc lods jecxz cmp mov (bad) stos jp cmpsl inc push mov enter adc sub out pop leave ds sti xor push (bad) lock dec test adc test push int3 int3 jp xchg fwait (bad) fist ret push (bad) jne call and rcl sub mov fs fs sub insb sbb outsl dec pop cmpb insl mov movsl (bad) mov mov lret pusha fadds addr16 idivb xorb mov test (bad) jns push sub daa mov or xchg xor jge cmp stos or push dec dec lcall (bad) clc push daa jge cmp xchg inc (bad) fsubrs adc add mov xor out cmp outsl or inc xor test into add arpl (bad) sub dec jae jg iret lret cltd int jp adc bound popw xorl cmp pop sahf sub mov jl sarb inc push xor fs notl mov addr16 push push movsl mov sub mov xor lcall adc in outsb fwait lods je sbb mov sub in jl cwtl mov add cld int lods insb pop inc jnp jnp adc and (bad) imulb or xchg lret and test mov xor punpcklwd dec mov lods sub gs pop testb jo sbb outsl jecxz loopne jns shl daa adc inc icebp dec dec icebp fisubrl inc bound mov xor sbb popf or xchg scas mov push dec push fsubl popf push jno mov sbb and cmp add sarl mov daa fprem1 inc stc jmp shrb aas pop pop cmp jns (bad) mov and dec or incb icebp pop hlt popf pop or mov dec leave (bad) loope cmp cmp or stos mov push insb push test push pop mov lahf cmpsb and int into loope iret ss dec mov sbb jge cmp mov jge jmp les or pusha mov popa inc mov push mov (bad) fucomi and xlat hlt in mov push and movsb xchg into (bad) cmp push jne jne pop mov aas lods sti lahf push push popf jmp pop hlt out (bad) dec pop sub xchg icebp xlat repnz mov jge test push pop dec sti mov inc xchg cmpsb cmp outsl rorb push into xchg mov adc call adc aas pop repz movsb cmpb push fstp adc je pusha call adc andb js pop ret mov nop stos xchg test jle insb dec fimull fbld adc loopne fs sub add in mov lea mov sub mov pop cmp enter push fwait xchg stc scas arpl pop and inc das fstpl sub mov js stos adc ficoml jle mov xchg mov push pop mov mov pusha cmp repz xor test data16 stos pop fucom and bound je add xor out jl fdiv icebp push fsubrl and jle and lret sbbb xchg dec les mov add add inc icebp jnp mov es mov adc dec mov arpl loopne jecxz ljmp cmc or mov out xor sti pop ljmp inc outsl loopne mov mov xchg stos pop jge jo sub and out pop lds fidivl pop xor int aam in xchg dec push (bad) cmc sarb psraw xchg jo das mov test aad xlat and aam push imul mov mov dec mov pop cmp into dec mov xchg push std das stc dec std mov cmp cmc sbb lock push (bad) jo sub test gs xchg xchg pop mov mov push add mov (bad) jecxz or mov cmp out cltd push sbb ficoml xor (bad) sbb xchg scas arpl xchg pop mov mov jp push sbb pop icebp xor xor loopne or out jg outsl mov lret repnz lock das cmc cwtl pcmpeqw call jo call stos sub cld xor push mov cltd sbb rdpmc loope outsb add xrelease jns and test cld hlt xor pop in mov test in jle mov push pop adc (bad) cld movsb rcll testb nop adc int sbb cmp mov repnz addr16 mov (bad) clc sub (bad) (bad) pop add insl ret stos pop in int3 jg pop or inc popf loop movsb mov inc add jbe loop cwtl pop out cld iret push dec sub loope xchg mov ss iret and and push mov jg or jb sub stos scas adc mov stc mov lret rolb test inc jge test sbb jbe jg in sbb xchg adc sti dec jno sti xor jae adc stc dec mov mov in or inc and sahf or mov sbb (bad) test cmp test mov push pop sbb sbb mov add call je fnsave jns mov sti jne xor inc fnstenv scas cmpsl movsl push inc rcrl push cltd in mov jo push push cmc aas loop mov sbb sbb rcl loope sahf pop pop jmp aaa insb push xor xor (bad) xor mov mov inc aam test jo mov lds test sub xor and and mov sub mov or les mov jl leave call or jb xchg stc leave bnd hlt (bad) icebp adcb sahf inc add daa mov mov pusha pop loope inc gs cmp outsl xor mov jnp add repz loopne cmp xchg pop aad xchg pop mov sub mov popa lret xchg das push cmp aaa (bad) xor add pop cli and leave inc std stos mov lahf jecxz add gs jg push xor dec adc das xchg adc rol ret cmp mov pop xchg pop aad adc loopne pop fisub mov int into cltd adc push ret divl fadds pop mov ret (bad) mov inc and sub outsl add (bad) dec (bad) mov loope push cmpsl inc rol js push enter (bad) jb (bad) jo push push idivl xchg pop lcall ret (bad) cmp fwait lods sarb test mov lret and loope push in std shrb loopne sbb je aaa insl xchg push sahf mov push push nop ja (bad) adc mov sub stos in push (bad) sub daa or stc mov push xor jge jge jnp dec cltd stc (bad) rcr movsl push cli fnstsw jle mulb je mov inc js push daa imul mov fdivr js adc shll adc dec xchg (bad) jge mov adc js jmp sahf ljmp inc int3 pop or arpl (bad) sti cmp mov leave jae mov insl das or outsl cmc outsb mov xor dec sbb fnop sbb cmp and aas xchg fidivr adc lods add nop add xor popf cmp (bad) xor (bad) xchg mov push arpl dec cld inc pop sub cmpsb mov add jl pop adc cmpl jl xor (bad) repz (bad) sahf test test and adc xchg push (bad) test xlat inc xchg jge lods aam cmpsb dec mov arpl cltd dec movsl or add mov cmp jl in inc jg inc ret mov mov enter mov repnz clc mov cs pop pop push fs add xchg int (bad) mov jecxz lock inc jmp mov or and in lret dec daa (bad) sbb addl fdivs mov sub daa pop dec test mov push or inc ret popa push cli push adc add stos adcl inc jl and out sbb dec pop adc cmc outsb jecxz jp fs pop ss cmp add cmp pop mov and mov mov adc lds iret rol out test cltd lahf dec insl and pushf sub sub dec out mov adc mov ret mov aas arpl cmp iret stos imull nop jmp and aaa pusha and aas inc xchg xchg sbb lret fistl hlt out push emms dec loop fsubrs or sarb aam and pusha ret inc push add aam mul mull sbb rorl test add or and incb push cltd in adc inc mov mov push rcll out pop xchg adc push jns cmp imul add pop jne enter xchg adc test test push insb pop into (bad) jae movsb rclb and push adc sub jle (bad) loope mov and add and cmp dec rolb test dec fistl xchg adc popa mov or repnz loop jne shrl xchg jno cwtl daa lods cmpb or into xchg push fcom push sub repnz stos out sbb inc inc add bound xchg test add bound (bad) ret ficoml cmp push or fcomip loop pop dec sub sbb lahf jmp int3 loopne add xchg push dec jmp push or add clc sti xlat jle jnp sub in scas out and jg fdivr xchg push aad dec jle gs push jnp bound cmp jne movsb popa out nop sub mov and sub popf push inc cmp stc xor adc popa push dec lahf fcmovnbe mov in vpminsw mov lds adc mov pusha dec lds lds mov (bad) pop mov jo mov fs lahf (bad) xor fimull lea pusha mov mov or jp jl adc add mov jge divl lods adc scas mov mov pop ret repz sti aas insb clc (bad) cld jnp push sub out ja out pop add (bad) ficompl xor inc aaa jo push inc testb int push mov or sahf add and adc pushf mov cmp call pop into (bad) and movsb jle popf (bad) ljmp sbb arpl lea stos aam push jecxz pop sbb movsl xchg mov out pop ret loop sarl cmp adc div push andl inc ds jns add sub jne mov std push test rcrl jle push xor aaa xchg out fwait js adc xlat dec into mov outsl pop add jge subl orl sub movsb or ret adc cmpsl out int3 ret repnz jp push inc mov jmp add into add sbb pop push scas test xchg stc out mov pusha sub stc mov xor (bad) mov dec clc mov test mov or in jne cs insl loop ljmp sbb call fs pop ljmp in xor pop cmp pop xlat sbb inc mov add leave mov jge jne xor in rcrb and jle mov dec mov lds mov or sbb push push adc mov push mov mov jmp jno scas add pop mov ja xor loopne in cmp insl and pop lock mov bound in out xchg xchg add mov xchg lock test mov fisubrl add xchg dec lock js pop mov xor movl pop fcompl push mov sub bound mov inc mov and jne sbb sbb (bad) sub repnz or mov mov jbe add mov mov jmp adc stos fiadd mov sahf fwait inc scas ret dec xlat dec mov push sbb mov aad jbe lcall loopne adc xor xor cmpsb mov xor jae mov mov fbstp xor ret movsl or in test daa sti (bad) xlat repz xchg nop mov jp push add push or aaa inc sub cli pop bound adc sbb scas xchg arpl mov ret lahf inc xchg out jns lock aaa movaps loope xor adc jmp jp loope cmp push addr16 test daa in and cmp fwait xchg push push mov mov movsb into adc enter mov movsl lock sbb add push add (bad) sub dec sarl imul lea pop test xchg jmp jle xor and adc adc aaa mov push pop dec outsl setno mov jno adc data16 xchg or pop cmpsl pop repz notb xor repnz inc pop test aad in inc pushf aam ds and mov dec and mov push lcall cli es xlat int mov jnp icebp loopne and iret jns jmp push in jnp lret push xchg mov push lret jle pop jo fsubrp add insl jecxz jo,pn mov pop jl push popf je pop xor cmpsb sub jge mov stc imul gs cmp add mov frstor scas jae lods adc test dec adc dec mov out lcall es popf cmp mov test stc xchg data16 inc lea sub pop and dec or and or (bad) sub scas cltd dec loope dec or lods mov inc xchg aam dec jae mov xor insl mov call xchg inc lret sub xchg dec outsb nop mov push int repnz test push rolb nop fistpll movsb dec movsb inc adc test xor jno scas jo cmp cs pop (bad) js pop pushf fild dec fs push add dec cld xor xchg sub lods test (bad) push mov jecxz ret mov adc and cld xchg inc pop cs adc mov cmc adc sahf push insb sub jb pop xor cmpsb cmp std mov xor loop sub inc xchg and das cmp dec push fldl dec mov stc mov or test inc mov std inc xchg scas mov jp sti leave imul pop inc mov xchg xorb (bad) cmp std fnsave test pop xchg dec cmpsb mov adc mov inc xchg jmp jl inc outsl shlb pop imul cwtl clc cmp jl adc fistl js mov and out jg xor xacquire loope jg,pt stos (bad) push push repnz lock loope mov push out sbb add dec cmp fsub pop icebp lret arpl into xchg and jle mov js es insl mov xor cs fadds xor dec sbb les adcl add push stos sbb lock pop xchg add (bad) adc imul addr16 sbb push aas pop jno decl xor pop adc dec mov inc mov loopne stc rcrb xchg les cmp (bad) hlt and in jmp dec ljmp cmp jl jmp sbb push pop inc mov imul push and sub (bad) imul jg inc dec leave or inc sbb xchg xor lea cmp or addr16 push jno pop mov inc jbe or dec cmp test loopne dec mov test mov cs or pushf outsb daa mov dec mov pop xchg jp sbb xor fwait nop out jns xlat fldt rcll xor sub adc rol ret lret addr16 (bad) hlt ret adc mov popa popl repz lods lahf outsl pop adc push sbb sbb ljmp mov sbb test inc les fildl or lahf inc inc xor dec mov aam xorl and lret (bad) sub xchg test aas lods fdivs mov ret adc push mov pop sahf jecxz int int sub or cltd jl add out movsl jbe adc inc fcos fisubl jno add mov pop inc popf jbe es sub cmpsl pop rclb dec ror dec es fcompl xor ret push lock and pop sub (bad) push xor out scas inc shrb mov mov mov xchg (bad) ficoml xchg push jmp mov and insb fsubrp dec outsl (bad) jl call clc lea imul inc mov out je mov in mov out sbb gs and sub push ret stos xchg jl mov enter mov sbb push xor in sub insb stos (bad) (bad) movb ja dec pop rorb and mov test es mov jbe imul sahf in push push mov lds or xchg cmpsb fwait orb cmp movsl test insl xchg adc fmull and sub dec adc jge imulb popa mov in xchg aas adc xor push adc ret add mov in pop mov mov cmpsb das pop pop inc lret adc popf call jp cmpsb dec sub pop add aam ss cmc arpl mov (bad) xchg sub mov insb jb fisttp jmp repnz aam pushf xor add jnp dec movsl push (bad) lods mov or pop sub cmpsl mov add cmp fsubrs popa outsl les rorb push mov mov inc das movsl fbld dec push xchg notl lret (bad) or xchg cmp pushf aam mov mov out in mov xchg in mov repz out shrl inc mov das adc movsb (bad) push jmp adc sub pop les (bad) repz and xor test mov push fwait xor push xchg push add jecxz fs scas cmp cmp (bad) scas mov mov xor fs rolb mov ss cltd pop in imul in aam in inc in and sti rcrb dec jg xchg scas mov pop sbb mov add cmp mov pop fnstcw or mov xlat adc aam xchg arpl inc sbb fs dec fistp aas or add adc pop or fidiv jno mov gs pop xchg fwait pop add adc jmp (bad) fisttp test mov sub test add inc cld iret test scas in out xchg insb xchg xchg bound mov sub cmp (bad) lock xchg leave pushf hlt cmpsb xor std test test fcompl or cmp pop add dec adc push cmp or cmpl (bad) hlt dec dec in xor iret inc inc and mov pop inc sub test mov pop or adc lds push add sub pop jle push addl adc and xorl inc sbb daa rolb popa lret outsl addr16 pop aaa mov dec scas lods stos stos mov insl sub lods adc lds sub mov pop into fs in mov rcr dec test cmc mov sahf pop (bad) int3 dec push (bad) iret push adc add sbb test mov repz sub mov fwait (bad) cli std imul pop fnop dec in pop xchg into mov sbb mov nop push mov lret popa out fwait or fnop fbstp cli pop in enter out dec cmp pop adc xchg mov fwait pop or (bad) cmp jae aaa pop cmp cmc jecxz leave loope cli push das stos push mov loopne out xchg ja loope or mov mov push xchg and lods arpl (bad) rcll mov xchg and iret aaa sbb xchg es dec dec cmpsb adc lret cmpsb mov lret test push sub lret aaa out ret loope bsr cmc orb leave xchg sahf dec lea xlat (bad) adc mov outsl cmp sub dec (bad) jb popf rorb dec loopne aas push (bad) loopne mov int3 push (bad) ds cwtl jge cld in sbb xor push push popf xchg jmp lods mov outsl gs into cmc lock push sbb cmp out push sub cmp add repnz mov cmpsb add xchg adc mov out or pop push mov xchg insl rcr mov fs mov pop lahf mov imul sub int sbb pop or pop jno inc cwtl daa jno mov fdivrl pop xchg lea sub ret pop push out cltd jo dec pushf push cmp test cmp push sti cmc js fbstp sbbb lea xchg fsubrs pop or rcrb mov cmp or add mov xor jns mov js or ss imull jo dec fldl inc inc shrl mov loopne jnp jg ss cmpsl sbb in lods movsl cli jno cwtl add or ljmp adc fmull cmc imul (bad) mov imul xor inc loopne mov fiadd fsubs int xor in data16 or push fwait lret js jg outsb mov add mov test loop out inc sbb in insl mov scas (bad) lods rcrl jge inc scas jb dec fsubs sub sub push sub (bad) jo scas movsl ret mov movsbl sbb mov lcall sub cmp lea rcr out xchg mov ss ret inc outsb ret mov in inc lea call outsl nop sub or add les (bad) aam dec dec ds sub mov arpl cmp xchg popa mov gs mov stos nop add cwtl and ror cwtl sbb jns cmc cmp jbe in mov dec mov jg cmp es ror divl push xchg (bad) int bound out (bad) stos or data16 movsb mov imul mov fiadd mov lea idiv sub aam cmpsb test cmp push pop sub xor mov add xchg addb divb push arpl pop std or loopew scas xchg xchg out pop pop int3 das mov dec xlat xor fstl pop aaa test daa dec or rcl lret sbb mov sbb adc or mov inc and mov aaa addl pop sub jle jecxz rolb inc je adc jmp popf aaa jae test and or or or addr16 add aam push sub mov pop adc pop stos push add inc adc sbb cmp xchg in cmc jl gs loope gs fcomps mov and sahf jns sub fistpl scas inc jae clc cmp fmul test jmp xor pop mov pop mov xchg push shrb punpckhwd data16 mov and and and pop pop jg int3 jp push imul cs lock mov sub sub int push adc lcall movsl dec adc xchg sbbl cld sub lock in out pop push loope inc lcall movsb lock dec inc xchg adc in mov adc das mov mov subb in jmp aaa sti lods inc mov add pop pop push movsl mov mov je out inc out sbb add (bad) push sbb xlat sbb and jbe add sub push test sbb pushf pop or sbb mov int3 test inc cltd cli aam jb das add sbb cmpsb jp and data16 ficom sub incb xor cmpsl push stc loop arpl adc lret mov mov addr16 mov mov jp mov or cmovbe mov in mov sub es (bad) inc pop xchg xor (bad) fsubrs push mov push popa insl jg (bad) and jle lcall daa (bad) xor nop lea pop mov add mov xchg xor fisubrl popf pop aaa incl lods jns jne pop push outsl das adc pop jecxz mov out sub jle or jae and jns xchg push jp cmp mov mov xlat (bad) aas (bad) insl fcomip aas sbb arpl xorb and adc push mov stc sub aaa outsl xchg fwait mov pop lcall loop loope mov xchg in int3 out lock icebp mov add cmp xchg ds sti cwtl loopne fucomp adc xor es mov lods and jne (bad) mov repnz xchg mov mov lods fcomip repz fsubrs push pop orb fldenv jp lea inc dec adc push out es pusha mov loope dec mov cmpb inc fsubs push gs add mov jns pop xor fidivl jg mov (bad) cli add mul inc inc lods sbb inc aaa push mov out rcll ljmp das cmpb pop xor ds push xchg jnp test sti and (bad) int pop inc jmp inc jecxz pusha stc fdiv xchg mov xchg jg mov (bad) mov add add in pop hlt js jge push scas jmp sarl push notb cmpsl mov ss cmpsl in nop cs inc lea add in fcomps negl cmp (bad) xchg pop xor adc ficoml in test sub stos mov mov cmp int3 add mov and sbb jbe push jge leave inc or xor jne fbstp cwtl arpl icebp adc push pop fildl pop jmp out lcall cmp jg or mov hlt adc cwtl (bad) inc xor imul dec cmp popf std outsl cmp pop or inc and xor dec jmp sbb rol jmp and mov mov shlb cmpsb sbbl sub in and xor int3 adc mov in mov cmp stc push xchg and mov jg mov neg rcrl fwait out lcall inc add mov enter jecxz das push (bad) and das nop adc sub aad sbb mov xor test pop lret mov push popf ret int3 ror fcoms test lret or dec push test fcmovnb push pop dec loopne xor jns dec xor cs jbe inc dec cli jnp idiv add or out cs pop daa jge enter or push test fcompl ret aam dec lods movsb (bad) mov xlat xchg mov push mov mov pusha and lods pop xchg inc cmp sub adc mov add and roll xchg outsl xor pushf inc xchg add nop mov popf push call in jb pop shll fadd sti sbb mov lds daa aam jbe mov jmp clc insl sub out loope mov mov stos add std or sbb test push lea imul call push cmp lock sub add daa add mov cli xorl mov out rcrl add dec mov shrl or icebp shrb (bad) adc cmp data16 lds sub jne popa imul cmpsl in push lods lods sub clc adc pop test xchg aas pop or test sbb mull repnz mov fs int3 js sub sahf clc lods ds sbb and jb fadd add stos xchg sub das mov mov mov test jge cmp mov jg fiaddl mov in or popa jg out push sbb or or jmp and and push jp cmc fnop mov xor push lods or shrb cld in cmpsb sbb push mov pop stc cmp in outsl jo cld pusha lock dec push pushf inc cltd lcall mov sahf jne cwtl cld sbb ljmp mov icebp pushf sbb or adc cmp mov mov in push push aaa repnz pop (bad) push xchg push push dec adc sbb mov xchg dec xor xchg and clc or push inc idiv xchg xor add hlt jno xchg sbb mov ja rorb daa pusha stc btr out int3 int3 xchg mov daa push push inc and (bad) or xlat mov (bad) (bad) rorb sbb and xor inc call inc sbb cmp gs push xor xor push lahf dec pop in stos mov out or inc dec pushf adc (bad) movsb out xorl cmpsl popf test xchg mov adc fnstsw inc xchg (bad) idivl xor jne cmp daa inc jle aad movsl add or mov pop jmp mov insb (bad) out adc lods stos pop dec pop or aam ret das (bad) in cld fucomp in leave mov push sub loope call mov mov loopne fildll cltd jbe stc pop cmpsb mov push jecxz loope lods mov fldenv fsubrs mov push xor pop jne hlt test leave cmpsl and movsl rcrb stc xchg xlat jae outsl fstl cmp sti iret bound int pop and dec ss push pop mov mov inc aaa imul psubw fimull insl ret fnop clc mov in mov xor mov push sub inc adc sub mov mov jns (bad) aaa adc popf lret pushf hlt insb jmp mov leave xchg add xchg loopne pop push dec in mov xchg cwtl outsl aam jge xchg bound imul mov or inc mov dec xor (bad) call or shr jle imull xor push pop adc push jae adc jg sti pop sbb repz mov mov (bad) add lock (bad) xchg mov imul inc icebp (bad) xor fldz mov pop outsb dec mov push pop in mov repz push sbb sti dec push lcall fcompl les push mov xchg ja cmp mov or and in lcall adc push adc outsb cmp jne scas pop sbb mov call out push in fsts or mov sbb pop aas pop outsl (bad) fcomp sbb mov dec pop jno je pop addb sub hlt cwtl jl arpl mov mov insb mov mov dec sub nop es or mov adc in mov add or mov iret xchg mov ffreep (bad) adc cli sub push or or mov in ljmp icebp fs cmpsl sub or push jp add cmp aas iret mov enter in jmp jmp mov add std (bad) mov test (bad) sbb outsl pop jno lahf push xchg cmpsl int mov push mov sub into push adc xchg sub push jnp pop test aas inc fs cmp loope mov dec dec push aam rol mov idivb mov imul lea xor pop rorl fsubs in xchg dec leave cmpl pushf std out add sbb loope pop pop xchg bound or jbe pop push js xchg out push push fwait cmp pop hlt fcoms aaa shll ja ds pop (bad) (bad) stc lock adc push mov sub xchg sbb cwtl dec shr cmc sub hlt xchg stos fabs or add movsl das stc xor fldenv mov cltd xchg sub outsb jne add push ficom aaa mov push jno and mov sarb jmp mov mov imul insb inc popa or or mov scas pusha sub and hlt mov jne rcl mov cmp std and outsb dec loope and mov das les scas inc scas push mov movsb test outsb push jno cmc jl sbb aad in leave add xor xchg lcall xor push lds rolb lret pop rcl movsb lret daa mov fisttp jb addr16 mov lret jno push add inc es adc push xchg cmp mov mov rorb add test mov clc push sub lret push or sarl push jbe sbb data16 js push nop rcrl pop push sub sub fnstsw pop cmp dec test mov mov xor cwtl stc nop sarb ret dec mov add xor repz hlt sub jecxz jg add pop and or or sbb loope imul in sbb ret cmp jo mov stos sub lea in and mov dec dec lret shrb leave fucomp lods xchg cmp test cmc mov mov fs and mov adc add test cld icebp adcb mov out and (bad) fnstenv jnp cmc push pop inc sbb shr sbb fwait fs or js cmpsl lcall mov inc xchg jb sub mov jl and lods push sub jns shr pop cmpsb dec xchg mov sub xchg pop out pop mov (bad) or or in sub or push imul jno pop xor into mov rcrb or mov daa sahf fwait dec mov rcl call cmp pushf xchg in xor outsb add pop cmc aad bound lahf mov mov push cmpsb insb inc sub or mov xchg add dec frstor push xlat mov sti cmpb pop fistpl lea jle cmp push mov rol sub int cs and es aas lcall out and jae xlat jp aaa scas test (bad) aaa or (bad) in (bad) repz inc mov mov (bad) lahf add cmp mov or cmpsl mov inc push stos adc cld pop mov push add mov xchg dec pop nop ja mov jge jnp pop xor jae daa js hlt andl xchg leave ret cmpl (bad) aas and ja cmpsl cmp fwait mov lea in test add shl call sub test pop rolb mov popf iret test rorb mov popf mov push adc (bad) or xchg popa mov mov fstl call push add cmp in inc rol sbb pop pop aaa adc push sbb insb dec pushf daa popa mov fsubrs mov fildll mov enter in mov push (bad) xor inc fnop gs mov mov in in les mov cmp mov rcrb mov adc dec xlat cmp cs sahf xchg or (bad) movsl iret adc jb movsb mov std push imul in outsl adc sub (bad) leave aam xchg insl mov and (bad) and ret fildl js (bad) rcrl fistpll and outsb sbb fwait xor call inc or out xor movsl pushf insb mov add sbb sbb or cmpsb sbbl xchg out rolb cmpsl dec ret xor repz std dec lret movsb mov sub scas dec or test sbb xor cmp mov mov xchg sub inc mov jmp cmp xor inc add and popa cmpsl stos loopne mov stc fcmovne fnstenv loope dec add mov scas xchg sbb loopne mov stos sub sub out int3 pop cld push es pusha mov sub bswap stos dec jb mov adc out cltd xchg add popf mov xchg fisubl (bad) lret xchg int3 inc mov xor pop xor mov push lods jecxz pop outsb add ficom mov fldenv jns inc push pop xor cld in lret stos and dec mov adc sbb (bad) xchg ljmp jno,pn pop jb shll popf jns clc sub xlat (bad) fsubl pop jp movsb ja scas sarl repz fwait (bad) dec and mov js (bad) imul aaa outsl sub push sub enter scas pop xchg sbb outsl iret loope mov lock xchg cli lds or jmp mov inc and pushf enter out enter and mov fwait ljmp (bad) loopne,pn mulb xor lds add mov add daa push add out mov stos sbb dec arpl jp or adcl jbe mov out scas push lahf lret mov mov daa add cltd sub addr16 add mov jbe mov adc test das jae xlat test xor and adc enter adc push push rorb call mov sub imul test push sbb jnp xlat sarb mov gs ret das aas mov daa fwait call mov adc push loope,pn in push adc enter add sahf test notb (bad) in aas push adc inc rolb mov imul je sbb or gs inc pop xor pop mov leave cmpsl jge repz add pop repnz inc mov fsts sti xchg inc arpl dec sub rclb inc lret push int3 scas jo sbb mov sub fwait aas loope mov hlt cmp rcrl xchg outsb js ret push mov gs cmp sbb mov popa jbe in dec xor xor mov or insl xor cld jg dec xlat cmp cli lods mov mov mov mov rep scas das or imul xchg xchg sbb fsubrl insl push ja push jns addr16 outsb push sti int nop test xchg cli out clc xor pop mov push or push outsl adc fcoml (bad) lock dec add (bad) dec add data16 outsl inc pop xorb mov jmp or bound jmp shll mov push jg jmp mov imul ljmp aad pop push push push mov mov loope (bad) outsl test inc pop sub test les and js repz mov push insb sbb gs cmp daa cltd gs daa fst or cs sub stc cmp cmp call dec dec mov nop sub jae movsl pop inc push jmp sbb pop adc in int out pop fwait test pop mov pop jmp out dec dec or or jge dec or cmp jecxz pop cld decl cmpsb fisttpll jb pop mov mov inc aaa pop aas lret ret ds dec mov mov xor push jae cmc cli adcl sub in hlt pop xchg add jo shl je leave mov stos pop movsl add lea sub mov jle insl adc add pop pop xchg sub insl popa sbb cmp fisubr push dec add fwait ret ljmp out gs dec sub xor stos fcomps add cmp aas jbe mov xlat sbb fwait push dec shlb xorb inc outsl lods (bad) mov or sub mov pop jecxz xchg cmp arpl bound and mov in ret push cmp aaa jo pop stc cmc repz cs mov xorl mov pop icebp push dec jmp inc adc jnp int3 lret hlt ds xor mov in fwait lret pushf fadd push sbb into iret jge inc cld cmpsl sub lods addr16 or xchg mov ficoml push xchg mov dec push mov les ldmxcsr mov mov mov sbb add mov push mov cld mov push shrl icebp dec push movsl lret and pop mov lahf mov push push cmp test int3 sbb mov add mov ds xchg inc test or jmp scas sub mov das in mov cli sbb cli gs addr16 dec jle pushf imul lods jl enter mov ret pop loop cld or and daa add in iret (bad) sbb cmpsl add (bad) xchg xchg or push push mov fdivrl fcoml xchg xchg xchg mov (bad) sahf fxam mov ret popa jne xor out jmp add push push scas xchg sahf mov dec and popa loopne jae push sub push jbe daa int3 mov repz lds test mov jg data16 ret cmpsb xchg sub pop es sahf add rolb mov rcrl dec cwtl das sahf aam sbb stos es imul sub repz adc sub xor std sbb in mov (bad) ficom xchg xchg jp ljmp lods popf adc es cmp mov iret xchg sbb push mov dec push fs ffree out cmovs das dec int (bad) xor xlat xorl pop addr16 loopne repz outsl test mov aad mov js sbb call fs cmp gs nop cli jg sbb sbb or movsl and mov fs inc test (bad) fldl js in sbb inc xor mov and cmpl push pop mov mov mov (bad) mov pop scas adc sti mov push xor scas (bad) (bad) xor jne daa rcl push mov xchg dec adc sub nop repz loopne inc (bad) dec pop mov movsb jb dec add imul add jg outsl dec fmulp test (bad) mov aas sbb sbb mov hlt jecxz ret lods mov pop test in insb mov xor mov jge,pn mov mov pop into xor and inc jge mov mov cmp test outsl xchg inc mov adc xchg mov rorl cmp jno notl loop fcompl sbb cmp and xor pop ret popf ds mov das xchg cld mov xchg mov rol sub cmp cwtl cmp sbb in dec test jb es add (bad) int3 pusha pop and push insl ret leave xor cmp dec fwait pop jp fistl mov arpl subb or cmp or jo mov jg fcoml (bad) mov jle adc xor out mov or (bad) mov les (bad) int imulb mov jne loop mov sub mov and push add mov push sub add mov push daa decl (bad) mov sbb pop xor and pop cmpsb push cmpsl jns popa test out mov cmc les push lock xchg cmc pop push stos aad adc pushf bound mov rclb scas imul lcall fbstp pop dec icebp jae scas xor push test dec fldcw inc pop fildll daa pop xchg repnz lret outsl lea or cld rcl std sbb leave ja,pn ja add mov push xchg adc sbb outsl hlt push ja mov mov push sub (bad) fnstsw in icebp ss fdivrp fwait xchg jbe loop jecxz sub or rclb cs aad xchg cltd sub (bad) mov cmp or xor jl std fcoml and popf push fwait imull insb xchg out dec adc pop pop cmp js push sbb outsl mov mov imulb punpcklwd daa adc adc lret mov push lock les mov jge jp iret cmc push out dec xchg mov mov jb sbb clc pusha push imul or repnz add dec imul sub pop test inc mov pop adc insl add lods sub cmpsb inc xor dec add cmpsl imul sbb sbb and rcrb push sahf (bad) in out jmp cs inc dec outsb in or ds shrb fildl lock push daa adc cltd push xor xchg xor cmpsb les sub insb cmp cmp pop shrl inc xor sbb rcll mov cmc and rol hlt cmp fisubl fstps icebp mov add push pop mov pop js xlat adc mov cmc sbb int3 xor in fidivl ljmp dec inc fcomps out xor pop stc imul dec lahf (bad) adc cmp fmuls xchg cmp push jle ret rcr fistpll dec (bad) mov and movsb movsl sub je and int inc std sub sbb outsb cmp push mov cmp stos or imul push out jno lea pop and sub movsb lea or push iret mov push (bad) into in inc ret mov push (bad) bound je inc jmp sub mov fwait sbbb cmp jne stos lahf pop mov mov insb rorb xor xchg mov enter jae cmp jg mov test popf sbb sbb xlat jg xor xor stos push mov out mov loopne dec sub and aaa das lods and sub inc sbb jle aaa pop arpl push mov ret leave dec sub aad pushf dec sub lahf ds push adc xor ljmp mov cmp adc imul imul fisubr xor int3 and loop mov push push jle shrl es cwtl add sub pop sbb psrad insb es (bad) inc sbb divl sub mov adc ljmp jp outsb (bad) push and (bad) pushf mov mov hlt pushf enter into call sbb (bad) mov pop pop cmp inc lea jp in popl mov jmp xchg cs shlb ds leave nop ret movsl cltd call popf jmp fisubrl xchg iret fidiv (bad) jecxz loop insl dec adc xchg test outsb add adc leave pop imul mov movsl fsub mov (bad) call add out xchg ss cmp jb pop jmp inc faddl (bad) mov mov jmp out (bad) pop cmpsl mov call in cmc addr16 enter (bad) add sbb jp ret outsl push mov jmp mov dec outsb orl lea fwait lea imulb sub sarl jg es and out lcall jle pop jns pop (bad) leave loop (bad) movsb mov dec inc cmpsl mov xor mov popa outsl sub mov inc mov fstpt push and insb frstor rorl es hlt jp fstps movsb push aam xor xchg loopne stos imul cmpsl push xchg insl add mov fnstenv xor rcl sub pop fwait inc test aad fimul pop add call fwait dec cmp push fwait add stc inc lahf pop subl mov ret in jno mov je (bad) xlat test cmc cltd stc ljmp mov jbe test jo,pn cwtl adcb jmp out bnd jecxz bound add cmpsl add leave adc inc push sbb sbb into mov push push push jno sub outsl dec nop lods xchg pop in inc sub je or outsl adc jnp rorl inc hlt in cmp jb or aad cmp mov enter jmp (bad) sar aaa push xor cltd mov mov or mov pusha fs and dec mov es mov ret dec aaa push jg inc lret cwtl (bad) fisttp mov out insl mov loopne into xchg inc es movsb dec push lods push insl or mov mov lcall pop leave jbe fisubr ja dec xchg aas (bad) fildll out icebp je xor jae mov movsl inc cmp cmp gs rolb add (bad) sbb lock mov mov mov aas cmp mov dec scas push and loop ja push ret rorb mov (bad) jmp cmp pushf lahf test outsl push roll push (bad) aaa xchg test les icebp push adc imul rol and aas js cmp repz outsl ret xchg test mov sbb data16 pop je mov mov lcall xchg pop popf das call enter mov dec inc es in pop add call push lahf add sub in andb mov sarl ret jbe add add push fcoms lahf cmp xlat bound cwtl cs inc pop popf flds lods inc lods (bad) sbb fistp and and push jl mul dec mov mov inc popf push sub popa imul gs sub leave cwtl mov aaa jg or add adc sub jb faddl (bad) and ss test push (bad) cmp frndint aad ss jl dec outsl pop xchg popf xchg mov add pop xchg (bad) in addl cmp insl inc inc jne in ljmp and scas mov or mov faddl jp jmp in xlat xor fs outsb mov popf andb lock jmp xor mov add aas lret inc scas or mov (bad) in mov mov jg xchg scas shlb aad inc in inc mov jg ret out (bad) xchg popa cld push shrl dec and sbb mov xchg pop jp add pop mov dec lock gs pusha cli push xchg and ret pop push cmp add push jecxz push pcmpeqd ss mov cmp cmp mov hlt lahf clc jl (bad) cmp dec sbb fs vsubps jbe add dec adc daa decl out jmp adc push into hlt dec aam mov icebp and rolb jmp sub aas mov (bad) pop (bad) (bad) mov int daa mov das cmp into faddl into jb dec test and push and mov add out add adc insb loop in jns daa aam lods outsl sti mov sub hlt xor fisttpll in jp pop or inc xchg dec cmpsb dec movsb pop imul inc pop add dec push or mov leave lods xor dec lahf adc and insb mov and ljmp jge push mov jno mov fsub imul sbb and mov outsl cld pop imul fwait cmp mov loope cmpsl cld (bad) outsl push dec push lods mov jecxz cmp mov aas mov add pop sbb testl sub sub fldenv imul or mov out insb xor xor lret adc jl stos rcll pop or rcll cld bound testl (bad) jae cltd shl data16 xor sahf push inc push lcall fisubrl mov test jne dec add out mov ret dec lock cmpsl or sbb insl jno jge (bad) xchg rcll les sub fbld mov mov xchg pusha je lea mov lret sbb or inc mov rcl (bad) stos shlb cmpsb push inc test xor xchg sbb dec sbb jo roll mov jae sahf stc outsb push outsb push mov xchg mov arpl fiadd cmp out cmp je lret cmp mov leave dec add in dec or push lret push daa sarl cmpsb dec cmp xor push lock push repz sub rcrl push dec movsl push cwtl xor pop push mov mov sbb or stos cmc mov inc int cs dec adc loopne js loopne dec jl imul xlat dec lods sbb (bad) jo jno scas cmc daa test inc cmp stc inc imulb decl jg inc lcall xlat jp inc adc imul cwtl mov (bad) xor in sub push and xor mov cmp cli fdivs setbe xchg lret loop push sub jl notb lock addl (bad) lock popf imul outsl loope and test imull sbb sbb dec int3 mov mov sub mov call daa xor lea pop fidivrl inc push pop mov lock ret dec xchg loop in dec dec rorb pop aaa movswl loope faddl lock push int pushl fwait lds xor adc cmp int jnp xchg and sti add sub cld gs test xor xor push pop imul daa pushl (bad) call jl sub jecxz ret scas fwait dec dec push adc xchg cld lock sub sbb les inc adc insl jns std dec add pop push pop aam fildll fs shlb js dec aad jle cs imul sbb repz sub test mov es push mov call (bad) xor mov (bad) into jle mov cmpb xor xchg xchg sarb or (bad) jne and fxch imul clc pushf cmp push cltd ljmp sbb divb jle pop loopne and subl jp insl idiv pop mov ret cmp inc outsb js push push arpl xchg jecxz mov mov cmp add or arpl xor in push dec jl in rcrl roll (bad) in inc inc sbb xchg bound call imul js (bad) mov sbb lds aaa jl sti ret int fwait adc lods push lahf dec aas jge fnstenv add xor pop cmp cmp inc scas jle cmp enter (bad) cmp fwait fs adc fcmove (bad) inc fwait jne cltd xor cmpl push popf scas data16 cmp pop add icebp inc jl cmpsl (bad) dec sub xor stc dec jecxz repz cmpsb imul cmpb pop mov rcll lret sti in int cmpsl ss sarb out out test ja test (bad) and pushf mov repz fiaddl stos xchg cld negb test xchg mov in out aam lahf lret out or jno int3 pop jmp and or mul out aaa repz mov (bad) mov (bad) add push mov push dec cld inc add int3 orl mov fldcw sub scas and mov pop sub mov sub ja xor testb int test repnz into int in iret jb xchg mov popf enter mov ret fldt push aad je jns shrb cmpsl inc aas push arpl in fild adc stos jnp adc pop push in or jmp mov mov insb aaa mov push and jge aad sbb mov nop inc faddp gs pop sub lods mov mov add mov xchg aad (bad) mov lcall lods or pop insl sahf cwtl cwtl inc pop sbb cmp or pop int pop adc aam mov and out stc xchg push cmpsl sub xor out adc (bad) mov xlat popa verw sub xchg outsl stc cmp mov sub mov popf loope push into (bad) std repz pop (bad) jae in jg mov (bad) mov dec aas jns clc jno ss pushw fs sbb out sub rorb adc dec into inc pop (bad) sub ja popa push jae xor add leave lcall jg pusha cmp mov add mov sub cli pop cli lods mov lea push xchg (bad) adc loopne inc in gs dec and sub mov push sti gs int popa xor (bad) aaa (bad) lods mov mov adc cmp pop (bad) imulb in inc xor fwait add stos adc dec and repz fisub jb in mov and push ret cmp loop lds pop int mov fs adc stos fs ds nop ss xchg dec aad inc loope movsl or sub pop push pop pop leave and jae jl or mov jo push popa imul in mov pop aas mov adc aam dec cwtl jnp lods cmp mov dec inc xorb ret mov lret pop xor (bad) inc push lcall xor lock mov inc adc xchg (bad) stc outsb in mov test mov lods push pop sti xor out mov repz pop outsb insl jge pop and mov popa sub popa mov int3 dec (bad) out stos push outsl stos into sub icebp addr16 jmp test or inc ds loop cmp push loopne lock pop cmc cmpsl lods sbb mov and pusha xchg test adcb fildll mov mov xchg or or mov jns (bad) ficom push pusha push clc sub mov decl and fwait sbb lret push adc (bad) mov push lahf jae add jecxz add pop xor movsl and push ret push hlt addb mov or jnp add fdiv movb sub push push ds inc mov adc xlat mov xchg ljmp lods inc push pop rorl iret pop gs xor push aad pop fildll dec cs imul (bad) jmp pop xchg mov inc in dec and in lods xlat inc xchg xor mov mov ljmp jle enter fcoms and out bound enter cmpsl stos xchg fnop jl and fwait mov outsb sub inc inc scas pop sub jns inc mov xor pop dec bnd add xlat pusha push stc mov in insl sub pushf fnsave mov pop popf inc cmp imul add mov ss lods mov icebp idivl mov adc mov dec add xchg xor (bad) jo out test or dec or xlat dec pop add push fnstsw imul xor clc fcmovu adc mov fildl or icebp dec std in add es cmpsb mov cmpsl mov hlt cmc test cmpsb inc ret call bnd sub pop rcrl push out jo sub test xor sub xor (bad) jae arpl jmp mov aad loopne nop leave dec jecxz push inc cltd aam xor fwait loop fs cmp xor jl sahf sbbb and inc sub push cmp rol inc not ret cmp jo xchg lret adcb xchg jne pop xor inc push add pop jp inc cmp fs and pop push arpl sti xchg mov fsubrs xor aaa int3 pop fmuls mov jecxz gs test sbb daa and cli ret inc jns and aas fs jo repnz test loopne sub xor fwait arpl movsl add add push mov mov xor pushf and push cmc xchg lahf outsl mov js test cmp push clc sub rcrb bswap insl int3 (bad) enter (bad) cmpb push les divb int3 mov je pop in test sub push (bad) xchg stos xor mov push loope lea push cmp pop jns add cmp adc add dec sub sub mov out (bad) sbb mov out stos xchg pop imul cmpsl sub cmp add orl or or pop stc sarb lret fnsave dec pop sub scas std in cmp in test cmp push pop loop fildl dec fbld xor and add test sahf (bad) ja sub aas outsl fadds scas push mov ljmp pop mov fwait cli cltd and jmp push push jae in arpl (bad) sbb xchg jns dec mov inc xor out out std popa push adcl xchg fldcw (bad) mov inc dec inc or mov das mov push jecxz mov adc pop xchg add xor adc rcll aam push test xor add sti vmaxss mov pop dec repnz stos testl dec pop fcoml jmp xlat stos adc push inc pop fs sub adc cmp push ret cld mov jp and add xchg fwait test push scas fidiv xchg pop bound rcrl push or mov add fs ret bound hlt stc jle enter movsl outsb addr16 add insb mov mov push test imul fidivrl repnz pop in loop and cs mov adcl loopne xchg adcb fs sub popa cmp push test adc dec (bad) ret or cmpb sbb nop in xor das test sbb test jno inc je gs clc push test xlat mov xchg mov add cmp sti xor jge pavgw (bad) sub mov mov imul jecxz mov adc test or sbb jne icebp mov es pop cmp fdivrl lret divb sub mov mov xchg scas sti dec pop xchg cltd pop data16 mov lods sbb add fidivrl mull adc cmp mov sahf cmp daa sbb movsl std test out xchg ret shrb dec (bad) gs push or and (bad) push dec xchg pop addr16 hlt mov sub in or xchg int3 sbb out cs add pop adc mov fnsave mov or xor faddp loopne jbe test inc jl (bad) out inc stos mov jmp xor iret aaa call xlat sbb jo mov imul mov mov push iret cmp cs hlt lds dec jecxz shll aaa ss pop mov icebp stos icebp mov push fwait scas dec add out sbb dec lods xlat sarb push adc xor std sub push mov mov mov aas jge (bad) dec cmp sbb fadds fistl pop xchg shr sbb xchg adc or fwait lret (bad) sub mov lahf test stc jecxz mov inc (bad) mov ret dec inc jo lods mov mov test mov lahf mov inc or sub xor xor sbbl add adc mov lock and push fwait pop push push mov xchg decb in in out xchg ljmp movsb mov cli lcall mov pop adc idivb gs or jmp ret enter cmp fstpl mov outsb loope push scas std xchg or sub mov xor psraw shll (bad) sahf sbb or icebp jbe pop es add testl or test xchg mov ds icebp mov sbb sbb sub sarb mov mov fmull dec data16 push loope jmp aas pop adc lcall insb push cwtl test adc cs mov adc adc fnstenv cmc (bad) or lea popf cli (bad) out punpckldq out adcb and mov rcll (bad) fldenv cmpsl add jne (bad) jae loope lods jge xchg loopne pop pop cld packuswb repz repz (bad) movsl and lret adc and out fmul movsl inc into insl sbb inc dec mov lods inc jns jbe cmp or cmp cwtl dec sub fwait jb lret rcl ja cmp jbe loope push sub imul mov add cli mov dec dec test test out mov mov out mov dec pop test out add fldt xor stos jae stos or ja jae sbb lods or ret movsl adc mov jae out movsl cmc outsl or jge and push sub push inc adc movsl inc fdivrs sub sub push jmp lods out fisubl sbb sbb scas cmp test lods pop xlat add sbb add roll aaa jl sbb (bad) mov push xchg dec rcrb clc adcl lds mov fs (bad) jae pusha jae andb movsl sysexit and fsubrs out or mov lahf cltd daa mov push out lret lock jns pushf sub stc vsubpd or add jns dec lret call mov jecxz jb inc jmp mov mov sahf dec out or mov jnp mov add outsb xchg jl push jnp inc cmp das aaa inc mov dec pop lds test subl outsb std fst stos mov pusha aaa adc arpl jno cmpsl xor les mov xchg cmp cltd jmp inc sub daa aad (bad) lahf fstpt aas shll test inc iret xor in sahf insb and ja sarl stc push gs jno dec dec inc fbld jne minps add lods lahf cmp lahf sub scas ret add stos adc jg dec gs mov inc push enter test lcall cltd jns add mov (bad) jnp dec xlat (bad) add movsb add pop inc loopne mov das pop mov xchg cmp popf or mov es (bad) loopne or sti mov neg outsl (bad) add rcll mov add jnp sbb lret insl adc jnp sub inc mov loopne sti mov idivl and mov inc dec mov inc popa and fcomi push stos (bad) inc sub inc adc lret clc sub cltd lds lods addr16 (bad) push int3 fstl xorl mov shrl mov adc outsb mov lea int lds and ret test mov scas imul xor imul mov aam andl cmpsb (bad) mov mov dec out xchg divb mov (bad) std into dec icebp add mov push mov add int3 in bound test out cmc or cmc xchg (bad) ret mov les inc adc fidivrl adc fildl mov mov and cmc lea mov in decl cli bound and call mov add (bad) push sbb (bad) cli mov and loop jae mov jne xlat push movsl adc repnz or out inc pusha and imul dec cltd push pop ret add scas (bad) cli and cmp add cld mov push pop cld mov stc popa int scas movsl xchg sbb sahf inc lcall mov xchg adc fwait out mov dec addl mull jne (bad) outsb scas jo push push adc pusha fcompl mov cmp out xchg test scas inc dec dec je out cli stos repz jg (bad) sahf aas out sub jne std lret inc inc stos jl mov sbb inc mov push inc xchg adc pop xchg pop es dec dec cmp xchg and or movsl in xlat jle xchg mov lock pop icebp push stc adc pop call mov pop test inc cwtl shrl popf cmp jno icebp pop fs mov cmpl insb adc fnstenv pop insl dec loopne pop push es add sbb lret sbb mov xor ljmp scas scas popa jns gs add pop jecxz cmp cmp or mov sbb jecxz test fcoml psrld scas out repz mov cmp mov pop nop js mov or out sbb ja jl dec xlat and out addb xor adc pop lcall or jle sub dec popf inc xchg pop dec inc xor jne dec pop push popa decl enter (bad) adc ja cmp mov mov mov aaa enter ret mov (bad) or mov pop xor and unpckhps dec jecxz int jo push pusha sbb jmp adc or fisubrl (bad) ja sbb jecxz js,pn mov cmc sbb subl lcall sub rolb sub xor mov mov mov or dec das fwait jl sub xorl pop xchg std loopne jo mov lret popf enter pop rolb mov add out outsb mov xchg in push sub cld lock cmp out aas ds (bad) add sub rcrl cmp test (bad) int enter push adcl jmp mov or test push repnz pop adc jb pop ja pop jle movsl xor mov stc and ja popa adc das js xchg lock mov mov jg jns les push jo jg xchg xor adc addr16 hlt inc fild ss xchg aad pop fst mov push mov jo push or xor cmp jecxz sub mov fnstenv sbb cmpsl addr16 mov jmp cmp or enter push sbb cmp mov or dec js xchg je mov cs out jb lods (bad) stc mov ljmp add or loopne outsl mov orb dec mulb subl pop subl iret mov aam push arpl push mov mov arpl mov push cmpsb adc mov loope inc xchg and cmp in and jg lods xchg iret enter stos scas movsb add daa cli mov ljmp hlt xor (bad) call out enter cmp push mov push adc shrl push mov xchg je pop adc add or jge repz fsubrp lea aas jl push mov pop sbb inc add data16 and xor adc sub mov jo das aam test fdivrs (bad) and and int3 lds sbb xchg adc ficomp popa imul enter je xchg ss lahf das add lods iret push jb adc stos mov sbb mov ret fild popf cmp insb enter test xchg jnp sub pop lods cmc inc cmpsb add adc add cmc into jg (bad) lea lock orl vhsubps push pop sub insb mov in pop or sbb fisubrl jns stos in mov popa sub imul pop dec in mov xor je outsl cmp and out (bad) das fidiv adc nop mov out cmp ljmp add in das push in aam or cmp sub cltd add sbbl xchg mov in xor inc data16 cmp cmp lahf shll pop sbb xchg fidiv je movsb cmp adc cmpsb stos xchg dec mov test sbb pusha dec inc mulb sbb arpl pop cmp or adc loopne cmpsl sbb xor push pushf mov cwtl out inc (bad) ret mov xchg and mov add dec inc ret lock jo insl and lods or shl hlt das popf xchg xchg sub adc mov or jl daa (bad) fisubrl mov dec sub aam cmc imul icebp mov jne std sahf mov adc (bad) leave mov push hlt fwait push inc inc mov daa fdivrp lret mov xor mov (bad) jge ja jmp movsb mov dec sbb cwtl xchg movsl sbb ja sarb dec or je (bad) int pop std lret push addr16 push sahf fisubr jle clc addl loopne stos xchg dec mov cmpsl xor idiv je cmpsb push inc in shrl jmp xchg fst std in jmp pusha fsubl rol lahf and xchg pop (bad) frstor addr16 xchg out es add or (bad) dec nop bound or cs stc and xor add xchg or outsb cli sbb mov or shl out lret inc movsb cmp xlat out out fsubrp jo ds ds std pop xchg sub jmp aas lock mov pop les inc sti cmpsb rol push aas hlt test in aam push out or mov lods in imul enter (bad) loop stos (bad) mov pushf or (bad) mov cmp cltd xchg sub dec push das lods and inc dec std outsb mov or sub enter or mov mov je (bad) nop and (bad) in sti push mov mov out out notl sbb pop sub cmc xchg inc jle leave cwtl inc inc lods sbb push je pop inc (bad) xchg daa sti in dec stos insb movsl mov aas cmp (bad) in cmpsl into fs or inc pop and scas push mov add sti fldt sbb lahf ds loop fstps add xor insl sub or sbb xor sbb ret je mov les fimul popa out cmc and push xchg in pop lcall shll mov jl mov xor lahf dec sbb push subl sti loopne pushf cli andl adc dec add out hlt insb fbld mov fwait pop fstp add pop or xlat je and pop pop or sti adc mov cld insl sbb cmp std push icebp stc pusha dec lods es pop sti loop adc dec mov out inc fstpt push fimull adc loopne mov pop (bad) push lods popf sbbb call test mov int adc lods divb js jmp inc cmpsl adc mov sbb (bad) mov (bad) mov inc cmp push mov add sbb mov sbb adc xchg pop push popa popf mov sub bnd sbb inc cmp cmp pop cltd and out sbb sarb and scas sbb jecxz das loope lret xchg loop push mov mov mov ltr sub (bad) jae lret popl stos mov mov test and inc xchg ss or pop (bad) mov ffreep gs dec sbb sub jb cmp xchg dec dec cmp aad xor test sbb dec negb sub (bad) mov pop xchg inc test pop pop out inc jmp cld cmp push repz mov or in (bad) mov call add pusha (bad) and mov push jge popf jg cmp push mov hlt (bad) sbb stc pop ds dec sbb lock and jb xchg cmp je pop push lds cwtl inc mov shlb mov mov ret push aam add xchg cmp popa ret int sbb and inc shrb stos mov xchg or pushw jae mov dec enter data16 jle (bad) mov pop pop loope ret add imul inc ds push imul mov fs or ficompl or mov shl dec js cmpsl (bad) ja popa arpl mov adc lock popa aad jns icebp mov add push mov xchg mov ret movsl roll stc out dec scas jecxz jp and push adc fstl orl jg adc (bad) or sub test int3 js or cwtl test inc sti mov push adc enter sar inc xor adc fimull or aam fadds xchg xor xor in and xor popa repnz sbb inc sub es cmp stos fisubrl imul nop leave (bad) sbb cmpsl or inc push sti je test mov jo test jnp ds lcall in push gs les fmulp mov in xchg push push sbbl mov popf inc ja lret (bad) pusha pushf rcll fbstp push xchg (bad) inc call fs ja aaa mov repz fimul sub shlb popf jns jecxz cmpl ljmp lahf sub jge test js jo popa movsb pop cld sbb pusha add in push push xchg lods cmp pop data16 pushf cli imul repz rcll stos jg xchg mov cmp popf add sub outsb mov aas adcl gs xor scas sti xor fs outsb jmp cli xchg loope inc icebp adc (bad) adc pop or xchg mov mull add movsb addl sub sbb pop push clc and mov sub dec test loop jl leave mov inc orl dec pop pop dec jno jp or (bad) stc xor add std add cmp outsl push mov pop movsb or aam cwtl cmp pusha lcall lcall jmp jno xchg adc imul arpl adc push mov test or imul dec push pusha xchg sbb sub xor ss loop push adc mov push outsb aas inc in jno pop and mov mov bound iret push or xor icebp insl out sahf insb sub xchg jae cmpsb cmp xchg jp jge jecxz push repnz mov dec jnp push sub ljmp and pop jbe iret dec xchg icebp lahf in pop jnp pop fldcw cmpsl pop push in mov addl popa mov int mov dec repnz sub sub adc push dec ds or xchg sbb push dec sbb inc imul push push mov loope loop adc pop cmp aaa and fcoms loope mov dec push mov add les jb test and scas pop (bad) ja sub rcrb mov into inc jp mov sub insb out icebp es out imulb shlb mov mov jnp in icebp jge,pn adc scas and cmp xchg xchg outsl cwtl sub sbb popa addl into push loop repz mov jp jl dec cmp jl into pop ret movsb pop insb notb push push dec xchg mov or xchg and xchg ds loope js daa xchg sub bound sbb pusha (bad) xchg (bad) nop subl sbb lods add push push and subb test mov add (bad) cmp imul adcl shr dec push popf inc xor adc sbb sahf cmp icebp fcomps pop jns sub out adc and pop mov (bad) dec ja movsb stos cli stos or jb les add xchg adc inc push insb and (bad) out jle (bad) dec movsl jmp stc push jg xor fiaddl dec lahf mov xor fidivr cmpsl mov sbb sbb cld add add fcmovbe fnstcw (bad) lahf lods fsubr push push mov or das fild mov mov push adc cs das sub in dec in ret sbb cmp mov xor (bad) in jae popa mov dec sbb pop je clc clc fidivrl cmp mov xacquire sub push mov cmp jne sub jle mov aaa push sti arpl pop and dec fisubl xor cmp insl sbb push mov dec mov adc sbb test pop xor push mov fdivs sub jbe mov sarl call mov ja lea mov call xor subl lcall and pop pop jbe xor jmp (bad) sub push cmp mov pushf adc daa cmpsb xor pop xchg or mov push pushf mov sub add dec mov mov xchg jo jmp jp cmpsl xchg (bad) imul inc sbb fdivp xchg mov xor mov jmp inc das fs cmp aad test push push and pusha push push es or push in rorl stc push adc inc cmp js add sbb (bad) ficom (bad) add cmp mov (bad) fs dec add (bad) cmp dec push or stos xchg mov and push fcmovb hlt jbe push lahf or sbb or mov pop xchg jno je mov sub fdivrs xor roll fstps mov xchg push (bad) jecxz jb ret adc (bad) cmp pop push pusha jae jbe cld cwtl add pushf xchg iret scas xchg scas mov pusha bound mov (bad) loope push rcrl pushf and xor aad adc pop pushf add cmpsl outsb lods (bad) aam fcompl mov push push in repnz push mov sbb mov rcrb inc out fisttpll fisub mov popf sub push addl push adc sub mov pop push (bad) js (bad) xchg cmp add pop leave call mov hlt lea cmp pop mov jecxz popf fsubrs mov or push dec mov mov cs sbb lahf out in data16 and lret pop mov adc aad loop mov mov sahf (bad) inc int3 lods (bad) jae sub lret fwait lds shll dec sbb jp cld pop test xchg pushf gs pop aam cli mov push outsl xchg mov jecxz mov (bad) jns mov out out adc or insl dec mov sub mov vrcpss inc dec sbbb push out dec fiaddl loopne out pop (bad) outsb shr xchg lods (bad) jmp pop ficoml lret ljmp pop fcompl in mov fnstenv and mov sarb int test add lods ja mov mov insb sahf jecxz inc ljmp sahf dec pop rcrb pop sub dec mov mov mov roll setb js and or cmpsb int ror pop int3 dec (bad) lcall or adc (bad) jae sarb bound clc in push push jne movsb xor jb and lcall insb adc sbb cld add aaa and or mov jp popf bound or pop iret scas in nop aas cmc dec adc push and add jo adc mov fisttpll (bad) jmp jbe imul stc enter jl jb ffreep cmp lock inc cmp sbb cmc and daa jb loop dec inc sbb push inc xchg daa clc jne sub repz xchg pop pop les jnp in in scas push loopne enter xchg loop data16 lods sbb pop movsl cmpsb cmpsb cmpb loop push fwait sti stos (bad) leave mov sahf (bad) lods and fmull aad pop mov insb mov pop xchg inc inc negl iret es test arpl inc inc or jo loopne sti cmpsb push jno cmpsb and xchg hlt mov pop jecxz mov sub jg mov lcall xchg sub xor push dec sub add push mov add or daa sbb call (bad) pop add rcrl or mov popf add cli scas (bad) cli in mov xchg jmp lea mov mov adc in sub pop add loop sub cmp mov mov clc cmpsl fsubp jnp jmp outsb adc pop lds loopne dec sbb push js bound enter insl repnz stos cmp add push daa add out aaa aaa icebp inc and jmp jmp lcall add pusha mov out pop inc test pop jb orl mov mov xchg arpl dec jne add sub or jp (bad) push ss lret sub sti arpl mov (bad) adc xor loope mov push cld push rol and mov jnp adc nop xchg cld ss cli int3 xor out pop sbb xchg pop pop inc add enter lcall cmp xchg (bad) nop cmp sub add shl das xor in pop sbb xchg jae sub outsl and js notb data16 or insb jg (bad) jp mov jle sub imul hlt push adc shr mov push rcrl scas mov sbb mov mov arpl mov inc xor mov add lods dec imull push push test andb shlb gs cwtl jle fnstsw les into inc stos ds stc js or push xchg insl popf mov jmp nop pop dec or push and dec aad sbb add jnp stc add xchg mov sub lret mov sahf jmp in out clc xchg sbb rorb je mov add or (bad) nop inc xor push int dec adc mov or cmp mov cmc jno adc cs rcl addr16 mov pop imul cmp add out dec jbe sbb test and psllq jno (bad) aad xchg dec outsl mov jne movsl jle ss add or xchg mov movsb imul push cmp repz jo mov test (bad) push inc cmpsb push sbb es and outsb add nop scas dec (bad) test xor js data16 or movsl cltd add (bad) mov inc stc pop jb outsl loope arpl sbb fimul mov out cmpsb stos (bad) pop aas inc adc pop vshufps mov sub (bad) xchg sbb cmp scas jo or or xor xchg test and js in add pop icebp cwtl dec cmp push repnz fwait pop outsb test fs sbb mov ja mov cwtl mov lds in or enter mov pop in arpl cmpsl and aas mov sbb jg loopne pop test repnz in int3 fisttpll repnz pop jo icebp inc xchg pop mov icebp shr push push pushf cs push cmp int3 loope mov push cmc fnstsw push cmc (bad) imul adc (bad) and or cmpsb hlt sub out pop xor scas add scas ss rcrl cmp push test adc je push adc mov mov rcll push fidivr stos jb incl jge andl mov and es jb test pop cltd or inc icebp ret lahf loopne mov (bad) in pop sbb push gs into inc or cmp add lcall (bad) out push sbb inc lcall dec mov jae dec adc pusha push jg fs inc (bad) lahf clc push pop push dec and cs (bad) mov mov (bad) xor ja xchg aad leave clc lea repz lahf das lea sbb (bad) push lret inc jbe test scas add sbb int3 and jg ja jecxz cmpsl xchg and fdivrl leave cmc or pop fcoml in iretw cmc push fbstp sbb sti movsl and scas fildl or out cmp mov es cmpsb add jb in out iret cli xchg pop push (bad) outsl push cltd adc add mov or rcrb and sub mov aas cmp and jle sti sbb jg jg add (bad) xor cmpsl daa ficoml and pop cli in je add dec (bad) sub cmc cmp loopne jg xlat nop xchg mov ja push xlat fwait call push cmp popa adc lds and in cmp test mov ljmp roll fildl (bad) fiaddl jecxz inc scas gs loope mov loope fidiv mov jle ficomp xchg add rcrl pop mov scas fstpl sub sbb dec loope inc insb push mov push js sub bound sbb or and cltd mov jnp xor tzcnt and repnz daa testb mov sub mov das cld lahf (bad) mov or repnz les std jns (bad) js xchg adc lret push test (bad) je hlt stos xor xor inc sbb jne and (bad) mov inc xor je and xor inc jb pop test push jmp mov es data16 aam xchg data16 insb jmp pushl push gs and mov push adc mov xor sbb mov cmp xor push mov jl and (bad) outsl jecxz addr16 jnp testb cmc and add pop inc cmpsl into and mov push adc cmp inc dec sarb jns data16 (bad) aad mov sub int3 cmp xor ret ret or mov call mov mov add sbb push shrb insb bound sub mov inc cltd and leave jp stc ljmp push mov xor cmp jmp sarb and adc xchg push inc fmuls push (bad) dec dec pop or push xchg stos sub mov jmp (bad) sbb and adc adc dec or push adc shl sub movsl in sbb mov in out into lcall add dec xchg ds mov stos dec (bad) fwait inc les push (bad) les jle stos push mov sbb adc subb cltd pop nop and sub mov insb pop fisttpl daa push mov mov cmovo jge int scas mov sbb push nop sbb cmpb dec lcall aad imul dec cmpl cmpsl sarl and in xchg sti (bad) int3 outsb ljmp pusha das mov lcall arpl mov mov sub mov mov loope test data16 (bad) or cmp call dec inc or lods in inc pop adc (bad) mov (bad) adc sbb mov shrl sahf addr16 shrl add in sbb sbb clc lods fsubl ror lahf jecxz daa push sbbb mov mov adc jb (bad) fidivl andl add maxps inc inc (bad) stos hlt in std push outsb sub pop std mov push cs daa push fisttpll mov xchg bnd sbb mov dec aam insl sbb mul add cli fdivrs imul adc out inc in gs cld (bad) jno lock arpl lods rcl cs test sub jnp xor mov shrl out test jmp xor mov lahf jg dec gs xor ljmp jmp dec scas pop jbe or mov mov test test ds repnz sbb cmpsb pop arpl inc inc ljmp inc cmc adc loop xor sub or bound (bad) or lods (bad) sbb lods add movl mov out or insb sub push lock adc lret or adc cmp sbb or jecxz inc stos cmp lret arpl call push lock mov mov sbb mov jo push mov xchg jb and mov ret mov pop xchg cmc bsr iret push dec das sbb cmp (bad) xor push test push popa data16 loope addl push xchg popa outsl addr16 adc fstps add xchg aad push sbb mov scas mov jp pop jmp add jle test jge mov adc jge shrb xchg inc fildll pop cmpl aas inc in aaa mov push push mov mov dec cmp test pop sbb stos jne mov sbb pop xlat inc sub jnp into mov out (bad) xor sbb pop sub pop mov rclb push xor jge cwtl aaa js imul mov or xchg or aaa lret dec mov lods jp loopne (bad) iret adc decl cmp aad jne mov sbb mov inc mov prefetch or cmpl inc imul fwait mov les lea xor test cmp pop mov and iret mov aam push out fmull cmpsl dec mov outsb add scas aaa test into push mov je popa or jbe div in fcmovnb pop mov data16 out mov pushf pop sbb lahf lods inc dec (bad) loop and mov test add cltd pusha pop je sbb push (bad) adc jb sbb out hlt inc inc pop push or int3 popl cs into mov out inc cmp add or xchg in mov lds sub pop cmp push nop mov push mov jmp out jnp outsl jnp mov jg sbb je fwait and (bad) in addr16 pop adc cmp xor fwait mov mov xchg adc lods inc test adc lcall jp adc xchg push adc data16 push stos adc (bad) sub cltd pop (bad) add int add (bad) jno jmp cmp popa sti cld inc jno add sub jp mov aas imul fmul pop jg in cmp lods repnz xor mov popa je push sbb (bad) shr add add pusha imul mov mov imul cmp jecxz in mov test mov push test ret inc jno stos mov mov push dec scas aaa lret aaa ret pusha fistpl mov es xor cmpsl das jmp lods dec jae xchg shrl fwait (bad) cwtl xchg sub mov icebp jl or mov mov mov outsb xchg ret and int aad xchg hlt sub xor add fs fisubr scas scas inc outsb mov jg cmp ret ret or mov call mov xor movsl std push xor inc xchg lret jl leave ljmp pop mov add pusha push arpl xor jno mov lods mov or cmpsl data16 mov sub add repnz pop fs pop pop std sub xchg mov lods xor ss jecxz jle (bad) push addr16 insb mov (bad) repnz rol cmpl or sub es sti das add cmp inc jge into mov imul push mov pop enter pusha loop loop add pop push test xor call xchg cmp inc push fidiv outsl repnz and push jge sbb repz pushf test loop jo dec (bad) adc (bad) cmp and xlat pop and push shrb fwait xchg add (bad) (bad) int shll mov outsb mov xor xchg cmp or mov mov mov mov loopne jo (bad) lock jne negb mov imul ja adc cmc cmp jnp adc movl xchg fistpll or lea cmpsl ljmp adc adc xchg lret push sbbl ret cmpl mov imul popa fistpl push jbe push aas stc adc or push ljmp xchg push pop or and imul test push orl jns mov pop outsb and push repz mov mov inc or inc push add lock leave and aad (bad) sub jecxz int cli sbb ret pop mull out imul les pusha stc xchg stos gs push inc imul mov aaa adc out mov test fildl push push bound pop aad call and nop sarl push dec ja add mov lea pop (bad) in sbb frstor xchg dec dec sti push aas xchg je pop movsb cltd ret or jae leave cs arpl loopne cmp push shll iret divb aad fdivrl push leave hlt stos sub xchg sub (bad) push xchg mov fdivr mov cmp mov and je js sahf (bad) std mov xchg cli or cmp or in icebp or stos arpl and jl or xor jb pcmpgtw rorl mov out sti movsl adc arpl pop imul mov aam xchg sahf (bad) push mov push pop mov jo push sbb jno push and in mov mov xor shll (bad) sti insb inc aaa aas (bad) xchg cmp add gs adc fdivrs test add test mov sub pop clc sbb sbb add inc lods cmpsb jle aad adc sub cmpsl sub fucomi cld test sub es inc jae lret xchg sub push cli xchg jmp adc rcll pop push pop test adc in imul jmp cmp mov aas int3 in sub cltd push out std adc inc shrb sbb lcall jbe movsb fidiv les xor xor hlt inc xchg negb lods mov adc or mov and mov test push adc lahf xor sahf fs jo in aas insb pop push das mov test cld mov (bad) mov add into addr16 mov ljmp icebp add and mov xchg cmpsb cs lods and je (bad) xchg mov fcoml push jns les insb push es push jno pop mov dec mov xor cmpsb (bad) loopne sbb sub stc and xor dec jmp adc test dec push mov add int lahf push cmp pop push outsb dec in dec daa xchg sub xchg mov movsl shrb adc xchg add and pusha adc sti insb add jecxz fisubrl dec outsl ds push stos xchg xchg cwtl mov xchg out sbb fistpll xor (bad) jns mov lahf dec popa iret push mov sbb in addr16 sbb fmull mov imul xchg xor sahf push enter mov xor dec cld jmp aad clc jge cmc push jp shrb out xchg inc scas jecxz fsubrl sbb shrb push outsl xor adc call mov (bad) movsb push and sub pop fxtract dec cwtl movsl popa push jg cmpsl xchg pop xchg data16 test jl inc dec xor xchg mov xor pop mov adc ficoml repnz xor jb lods sarb mov stos sub mov adc cmp iret lcall outsl mov xchg xor push dec ss in or jp and popa sub data16 addr16 jmp xor or (bad) xor daa sub divb out mov sub push jo inc push mov adc orl add cld pop or sbb push cltd lret fldcw lds add leave fidiv xor cmpsl cltd lds into mov jge jge mov dec xor and mov dec (bad) loopne sahf nop out mov pop mov sbb sahf or dec dec sub stos inc (bad) inc gs out cli dec outsb lret jnp adc dec arpl fcomi insl inc (bad) out pop mov sbb lahf mov stos jle imul (bad) mov mov add sub shr jne roll out push out stos rclb mov pop mov imul inc and push ror dec fistpl mov push js xchg (bad) dec cmp mov cld (bad) cld popa fs es and fiadd insl popf movl pusha lcall clc lods push pop fwait out pop das popa outsl sbb mov adc jp jmp pop bound mov xor lods mov push pop (bad) xlat mov scas push inc inc lock push mov scas mov mov xchg lret stc xor push jl inc outsl das fs pushf mov in jp fsub ja,pn jo or inc add ror mov jg sar mov (bad) add data16 cmp cli mov outsl sbb cld mov iret add repz lret out adc or loop cmp enter daa cmovg or adc mov icebp popa inc nop movsl or sbb or sub mov mov push and jge fs lds dec mov outsb mov pop hlt clc push subl jmp sbb push or stc addr16 out xchg sti inc scas add mov js jo push lock mov cmp pushf out xor inc dec add repz pop dec jp mov add popf xor fisubrl lahf xor mov inc mov inc fwait adc xor dec xor int3 cmp loopnew jae cmp cmc fsubrs movsb dec and arpl clc leave paddw cld pop xchg cltd aas sub gs mov stos xchg imul push jecxz add xlat pusha jo xor push mov aaa (bad) xor dec and fwait pop lods sbb jp xlat scas push movl push adc pop repz and jle and (bad) mov call xor andb leave xchg (bad) xor sarl mov jb jmp sub mov cmpsl add push push and shrl jae jecxz or cs nop out mov clc test pop adc scas push xor clc (bad) and test jns cmpsb add aaa inc gs jb adc sub mov cmpsb push or insb xchg dec das dec inc iret lcall xchg clc push xchg lret mov xchg jge push pop scas ljmp (bad) outsl lcall sub jbe adc shll jmp inc ss fwait dec mov lock jmp or enter enter sti inc xor and jno aaa cmp add jo or shrb insb dec dec gs lcall lret rcll jmp cmpsl lods jmp pop pop repz push inc dec mov sub add mov mov aam or addr16 sub and cmp fcomp inc stos push out xor das outsb jns pop mov movups je mov dec mov cmp xchg adc repz shrl pop jmp aad repz jae test jnp push add push enter add or cmpsb (bad) std pop fs (bad) out pusha fwait mov mov xchg lahf push and (bad) fidiv test push aas and pop jl cmp add or fidivl mov in mov (bad) aaa xchg lods insl jmp xchg test xchg mov repnz nop scas fdiv test jno pop (bad) pop xor push mov mov jecxz outsl mov jne jp jno rorl nop adc sbb ret sub jp sbb push mov pop mov rorb outsb ljmp push les xor pop (bad) jb pop sub add out arpl imul (bad) pushf sbb sub xchg fcoms mov pop cmp jmp pop dec gs cli mov lea jmp pop loop and xor dec leave sbb js mov cmc adc cli pushf adc pop pop push pmaxsw and stos dec or lea mov xor mov sbb xchg dec xor into mov jae rcrb leave orl cltd mov jae pop fwait leave (bad) fidiv mov jp and cmpsb movsl ljmp in stc rorb imul sbb mov int or push add pop ror jle pop or lods nop push icebp jo int (bad) sub (bad) cmpsl mov cltd je fidivrl sub pop cmp dec (bad) les mov or fimull and jmp dec fidiv lds xchg jmp dec mov dec push or (bad) mov in enter insl addr16 cmc es js lods and adc jae xchg adc pop inc inc in sbb movsl fistpl lods push dec sbb lret fnstsw dec cmp jno sti insl mov push je pop jbe in negb sbb sub and lahf sti js mov jae mov push jge andb into push stc je mov lret aad sbb stc movsl sbb and mov pop popf loope lret fsub mov cmpsl test dec stc test push ficomp movntps popa pop sbb add jl xorb pop out orb cmc pop lret cs stos sahf test mov jno fucomi incb mov rcl mov ja imul pop test orl ftst fsubrl rclb jge mov mov dec popf ds movsb add and stos or mov or aad (bad) aaa xor sbb xchg pop movsb cwtl pop pop (bad) adc cmp inc enter aas and add data16 fwait leave or jp ds jne scas out cmp dec sar sub lahf mov addr16 lock outsl adc or test jae dec xchg jo xchg xor push mov sbb xchg decb shrl sub out icebp adc int3 (bad) pusha mov ret jnp and aad dec fcomps (bad) add ljmp jno daa jmp jnp imul repnz dec mov rcrb mov test push imul int3 ret dec cli xchg movsb mov xor insb ss add adc mov inc mov test xor into push mov lods and dec adc dec mov xor push orb ror pop fstpl add xchg xor cmp pop push sbb xorl sub scas mov mov pop xchg pushf inc push mov insb adc aas icebp pushf (bad) jnp cmp pop outsl fcom lret push cmpsl adc dec neg dec xor lock sbb cmp outsb mul jbe jne sbb out loope pop orb mov mov and xchg sub mull lret push dec inc jnp lods push ret mov push sub jp xor push mov outsl or lahf cmp pop ss fcmovne test push xor mov lcall pop inc insb (bad) cld out setge enter push out cli pop in jge imul fidivrl sahf fisubr or push loope aaa (bad) mov arpl hlt adc andl adc test (bad) test jmp cmc cld xor ds mov daa pop sbb mov test (bad) fdiv fildll jnp and sub jo cmp aaa cs ret movsl and or fucomi (bad) aam scas mov mov ds cmp push mov inc in ret imull mov dec xor add mov gs (bad) adc lods fldl enter add inc fiadd add lds mov mov clc jbe add lods rclb jnp xlat xlat cmc mov scas ljmp loop cwtl sbb or roll out (bad) arpl test inc ret je adc and mov aam inc cmp test add iret insb dec mov or aam add pop add lea push test ffreep call cmp push leave mov lods mov inc jp mov fldt scas outsl lret mov push cmc cs mov into xchg repnz add cmp mul jb mov dec adc inc push data16 pushf in nop (bad) int rcl mov gs inc xlat ret jl lock mov mov (bad) pop insb repz jmp hlt into mov inc mov or push push lods loopne mov push hlt xlat mov mov mov push mov dec inc mov and cmp cmc dec and (bad) mov lods cmp int3 lcall scas sub xor pop scas push sub outsl cmp add repz jne fwait push dec pop or imul cmp insb or fmuls mov popa inc fistpl fiaddl mov push mov flds pusha mov cmp pop add mov push sub sbb test int3 jb es lock leave jmp sub mov and jg jl clc mov jmp xor mov test xchg jae push adc adcb and fcom push mov cltd lahf mov xchg rorl mov cmp cld ss add adc gs xor cmpl push into dec xchg cld std ss dec cli fbld cwtl push xchg pop into jl das push packsswb sbb test push dec sbb inc inc cltd xor jge nop jg aas push mov push popa into aaa adc inc (bad) popa out ss cmp xor jecxz les inc stos push and (bad) fidivl test jmp push add leave jecxz mov mov stc mov cmp pushw mov stos enter mov pushf lods out loop aam xchg mov adc test or jo cmpsl sub in (bad) ja or jle jae insb pushf add es in xchg push adc call imul push nop icebp sbb pop rcrb lea ret bound stos les or stos ss adc adc cmpsl insb xor ljmp aaa popf jbe jbe add xchg fbstp clc subl ljmp dec inc mov mov dec dec xchg mov popa (bad) out push aam lcall out dec xlat mov in cmpsb movsb mov pop mov mov push jne daa mov loop jne test dec push lds sbb pop gs popa pop (bad) sub adc bound ret mov and fild ss push int3 fs mov inc cmpsl mov fxch insl xor sar adc out fstpl sub add jl popa imul push dec orb addr16 loopne sub cmp fldenv inc out icebp fwait popf mov scas cs les pop cwtl mov rcrb (bad) fwait mov xchg jae mov pop fisubr movsl loopne fsub dec repz mov inc pop push push jno push leave fs clc pop mov mov and ret xchg ss push mov sub movsl xor imul push test hlt xor ret inc xchg pop lret jmp mov cmp les pop or gs mov jle scas jl or loopne add and call pushf adc xchg hlt and push (bad) add adc pop mov nop pushf dec ja or push int3 insb stos std sbb mov add xchg inc aad adc imul dec cld test mov lret divl je mov dec test inc dec push testb mov jns xchg enter rorb dec cmp sti test pop data16 dec mov push mov jg pop insl inc or push repz mov jne push mov lcall rorl mov sbb adcl mov mov ret stos outsb nop mov jle or icebp sub dec add mov stos cmp push pop xor in scas jo nop or out mov jae and ss js sub lods push test push leave hlt dec test testb mov and stos cmc mov mov fcoms xchg ss push add push movsb add fadds push xchg dec add aas mov enter ljmp mov add jns push push cmc addr16 mov repz pushf outsl fsubrs and adc jo popf jbe and test stos pop repnz ljmp outsl add lds lods jp dec test or jnp lret mov mov mov je sub nop push lea (bad) sbb mov and adc adc xchg es loope inc out xchg and pop mov mov fs cmp mov mov push (bad) repz adc sub cmp add jle lds pop mov push lds jb mov push test or cli loope in and mov das leave repnz xor insl nop daa outsl mov mov pop mov or roll sbb pop ret xchg add aas add push sbb mov xchg xor xchg mov pop imul movsb sub mov lcall arpl jg aas loop das and or mov loopne mov inc lods add rorl or mov push (bad) pop stc lods mov test mov push mov dec push and insl shlb inc jmp jbe pop pop pop insl or and dec cmpsb test outsl cmpsl sarl cltd add nop cmpsl test call insb cmp push int jbe pop cs mov sbb fstpt jne push mov test pushl repz xchg fnsave (bad) stc sbb inc and sbb sysenter dec sub xor pop mov sahf stos loop repnz mov mov fs fistpll fsubrl push jl icebp sahf or lods xor fmull pop ljmp imul arpl pop out cmp sbb mov movsl mov mov push movsl mov int pop das mov outsl stos push cmc mov cmpsb dec fnstsw push xchg andl std lds (bad) popf mov rorb jge xor jnp jge enter mov dec mov sub sbb xchg call fcompl ljmp movsb inc addr16 push pushf add adc data16 sub mov dec push mov adc fcmovnbe dec inc jl push ret cmp nop leave icebp (bad) (bad) adc mov aaa andb mov stos inc mov mov int or cmc jg add adc and stos add sub into xchg pop push push jo outsb lock arpl je ret mov xchg int repz cmp lea aaa scas xchg sub inc rol mov aaa stc push mov (bad) jnp leave xlat repnz xchg fwait sbb push mov push dec lret or and iret arpl adc jp adc (bad) cmc inc shlb xor cmpsl popf nop daa jmp ret pop (bad) fildll cld pop mov jg sbb int stos movsl inc inc add sbb call cmp mov push mov xchg in push mov pushf dec bound pop or add or insb push int3 mov lds insb xor stc xchg cltd (bad) aaa lea xchg out adc mov mov stos sbb dec jmp sbb rcr jecxz adc mov push imul lods fs mov sbb enter movsb aam test mov or ret mov hlt inc scas out dec mov push jecxz pop dec out sbb std insb adc pop sub sub xor cmp and xchg popf sbb in xor ds fisubr jno pop jae sahf dec in cmp (bad) in (bad) pop and inc sahf sub lret scas sub stos lret adc ret dec push inc mov (bad) incl andb sub cltd nop dec out in in dec (bad) shrb dec add adc sbb sub lcall push daa movsb outsb mov cmc jae mov cltd add inc stos popf adc xchg sbb out test add jno push push mov lret (bad) (bad) adc fwait ud2 int je dec pop loop pushf jp add jle push cld and adc lret repz and or mov rclb xchg insb int3 jl stos adc jns xor jecxz cmp cmp nop pop push add mov mov push (bad) push loopne,pn insb sbb fmul inc mov mov cmp or lods pop subb test or into sub pop cmp fcoml pop sub xor cmpsb pop fwait push mov xchg je int3 std pushf popf lods ret adc cld cmp aam sub and dec xchg pop cmp out inc leave icebp insb hlt femms jnp aam push lret int loopne mov jno lock rep xor or imul cmpsb ja pop sbb fildl cwtl cwtl dec mov jne fldenv clc add lods push and in mov add stos push es xchg pop (bad) jp bound jnp dec and cmp outsl mov pop sbb es shlb daa push pop sub lret mov popf insb xchg cmp lea sub in add sbbl js sbb sahf jae dec dec jge sbb rol xor bound or push rorb nop and hlt xor or pop or mov cmp sbb cld mov pop push ret pushf jbe fs decb mov or mov xor mov enter adc sbb sti adc sti mov sub pop pushf sahf jl out outsl out fisttpl lret sub jno iret imul dec adc and jo or pop push scas push or lea call mov or dec cmp cs fistpl movsl pop in xchg xchg test add mov push repnz repnz push mov shll pop loop adc lods stc (bad) or in xor gs in (bad) pop rclb cs pushl cmp leave (bad) push mov stos fnsave inc jno mov in pop ja dec inc popa shl loopne iret or jp (bad) mov in mov out cmpsb mov xchg pop js sub lock movsl popf push or and push add or xchg mov or pop push je (bad) mov addl push xor lret dec cmc xchg incl mov int3 jmp pop pop cmp pop mov xor add das dec das into int3 lahf push out sbb rorl jecxz outsl dec or int lcall lcall cwtl dec sti or rcrl cltd enter add push out sbb (bad) xchg cs outsl xlat adcl cs aaa pop jns aad bound aad lcall and and (bad) mov outsb sbb call xlat hlt ds ret and fsts push jb add xor out pop adc fdivr (bad) inc inc adc dec cmp mov adc or sahf add dec mov mov pop or out jp xor inc fs mov sub test lds sub pop fidiv shrl xor adc adc dec lret xchg pop xor and out in sbb iret mov fsts pop mov cmp enter jecxz dec or sub lock outsb xchg push add adc outsb mov insl negb movsl out mov repnz nop pop mov rorl (bad) std divl ret push loope rorl xchg jae (bad) and pop std mov fwait sti sbb pop dec mov pop and and out insb (bad) jae or mov popf xor ljmp rcr or test cmp sub sbb mov scas test daa pop in sub dec (bad) dec adc (bad) cld mov cmp int3 into lahf sbbb inc pop sub mov test or in imul lret xor ret push subb repnz push fstpt int3 xchg sbb add int mov outsl mov or in jle push mov adcb push fwait or (bad) addr16 loop xor dec push in jbe call add mov push les mulb xchg mov lock push hlt out es outsl xchg pop aas cmp fs cmpsl or lock jecxz pop lret mov add cli js inc test je int inc push push leave adc jecxz and cli mov xchg sbb push mov jnp jbe in cld xor jp rcrb movsb mov call sub scas cmp push jge and fsubr in mov shr das pushl lea (bad) mov jns push cmp jle loopne outsb sahf pop sbb mov dec pop add push pop mov arpl out mov in or aas sbb adc adc pop shl bound sahf roll rcll lods xchg sub sbb and sbb cli movsb popf popa gs movsl jg cmp lods stos fdivrs adc add ljmp inc jae mov push sub test cmpsl aas push std inc aam pop mov nop bound mov dec jnp xchg dec movl fisttpl xor cmp or push popf inc (bad) hlt fsubrp (bad) lret mov movsb aaa adc xchg sbb mov cmp nop data16 (bad) insl fdivl jne pop ljmp int3 inc loop push pop out adc mov adc push in addr16 and fstl pop xor jp cmp pop inc xor jl in cli xor mov (bad) fucom mov (bad) cmp addr16 repz inc dec fcmovne fsubrl jle gs enter add xor jne jmp mov cmp push push imul adc push adc push xchg xchg out mov cmp lahf repnz cmp nop test jns mov ret das jp pop aam test div mov sti and lret inc dec imul pusha pop (bad) mov enter lret divl lret inc sub fcoms dec push inc push push stos pop xchg cwtl mov inc lds ror insl repz push push imul pop inc add call mov movsb adc rorl mov call or cmp outsl fcomps sub in lods leave sbb jae or test aad mov fdivs (bad) mov imul xor (bad) mov imul jmp lret mov (bad) mov cmp jg repz enter ljmp xor fidivl mov scas stos daa mov xchg in mov nop outsl sahf push shll into pop (bad) es mov fdivrl mov push jmp and aam pushf xchg cmp pop pop fwait mov (bad) jne test push sbb lcall or adc pop loopne jb dec mov mov mov push ljmp lahf inc es dec es lret daa insl mov jecxz xor jg mov bswap inc inc lds push or outsl push movsb (bad) push inc push sub or lock mov jbe (bad) mov (bad) mulb ret ja and and dec loop inc clc lock (bad) or cs insl aaa dec and rorb (bad) in xor shrl ret jb sub jae add inc fstl (bad) in loop adc arpl mov loope rcrl (bad) mov xchg xchg scas aad aam js cltd jb dec aam cmp push pop les mul stos xchg push jo clc cmpsb xor inc xchg sbb adc add lcall mov ja and ljmp lahf mov inc ljmp pop mov in sbb (bad) jo cmp adc mov pop mov sar outsl sub push fwait mov les stos mov add lahf xchg into not popa iret xor sbb push mov sbb sbb ljmp add scas dec jp mov insb cltd lret push arpl inc sbb and outsl add push out jb loopne pop jg xchg std out addr16 mov push inc es sub dec cmc mov jecxz inc inc adc test mov mov rorb rclb and arpl lock outsl insl or xchg add popf mov rol cmpsl inc mov sahf cmp repz clc (bad) xor movsb jp (bad) int3 sbb loope xchg jecxz out lahf cmc fldl or xor setbe scas leave pop ret loopne leave fwait enter dec leave sahf xor (bad) and pop movsl fmuls imul jb ljmp aaa sbb mov adc lea cmp mov lods out push sub out rcr dec int (bad) sub mov addr16 inc repz sbb movsb stos mov daa inc loopne xchg sbb mov bound call lds sub add push loop aaa fild mov xor or daa adc inc mov movsl and cmp push stc ljmp jne cld xchg xchg dec mov push (bad) imull mov aad mov scas xchg jmp js jecxz push xchg mov jns add cmpsb inc cmp outsb cmp out pop cmpsb push xchg xchg in mov lcall xchg xchg cmp mov imul xor lods fwait jg jno jo jae mov out xchg dec fsubl pop mov mov pop mov cmp push frstor sti mov fimul icebp outsl mov cmpsb iret pop mov test xchg bound or dec (bad) jb lret mov mov (bad) bound mov push pop mov xor ja in and pop movsb xchg sahf je repz dec stos clc jbe push popw xchg mov adc mov ficomp clc lods sbb or mov or scas je push loope mov lds out adc push notl fs dec lcall mov jl mov mov cs cltd hlt cmp (bad) lods dec int or mov repnz mov mov test mov data16 (bad) in push popf push sbb jae lods push mov leave cwtl nop nop clc das add add fdivl faddl cmp push divl lret xor clc push adc mov lds or cld and xchg rorl xor or lret pop jmp xor inc xor xor sub into dec repnz in dec imul mov ss cmp inc je jecxz ja xor inc jle fadds lds sbb jne lock push xchg jg pop int3 ss call iret scas and stos sub dec std ja cmpl fisttpl adc leave adc jns (bad) xor sarl mov stos std pusha fisubr cmp in movsl push or sub or repz jp xchg popw lock sbb and call mov imul dec jl fsubrp (bad) in dec jae pop sbb add cmpsb add inc dec sub iret mov cs jp push jb fbld enter jae mov xor cmp adc (bad) outsl outsl adc test mov jo test loop in cmp out (bad) adc xchg pop sbb xchg xor or dec dec loop push fsubl sbb mov pop ljmp in add lret daa cmp sbb jb (bad) ds cmpsl xor jl aaa sub (bad) daa dec push aaa fild inc mov push push mov sbb adc pop mov adc movsb stos mov dec or pop mov pop cld (bad) push int aad cmp xchg bound hlt std pop jae or xchg ja orb loopne lds inc addl ret pop popa xor mov stc rcrl pop xchg nop movsl add stc aad fcomp insl jecxz cmp repnz or push fisubl popa sti dec jp jmp mov mov mov lahf adc inc adc movl lret xchg (bad) sbb cmpsb cs add mov sbb arpl mov inc fcomip add inc jp test das into jae adc add scas hlt test jae lcall jmp jecxz add jne imul cld repnz clc loop inc xchg and lea je adc pop fistl imul mov xor in mov or push aad pusha mov lock in daa jno mov dec mov aaa ss orb jle or mov stc (bad) dec xlat dec sub rorb mov add inc iret dec add nop add addb mov cmp movl shl ret jne inc sbb in in cmp sub insl push cli jae cmc pop add (bad) mov (bad) into and int mov loop push sub orb nop sub jle cmp movsl scas rcrl in iret daa xchg das aam push les jp push jecxz out fdiv popf gs or adc or (bad) hlt dec loop (bad) mov sub sbb adc div pop add push add out dec pop cs rclb loope jle push jb hlt mov std (bad) mov mov push push je in cmp mov mov gs stos cmp sub fildl mov lcall xchg jl insl inc cmp mov dec loope idiv test fldt (bad) iret push sbb dec fist sub add mov lret lods push bound je mov lcall jb add addr16 ret push or sub rcll mov incb div aaa sahf xlat cmp jmp or xor shll mov jmp mov inc adc jbe mov sahf add xlat ds outsl sahf mov mov sahf push bnd and roll or pop cltd dec pop loopne push lods adcb imul sbb inc sti dec loope xchg addl inc xor and xchg aaa sbb jbe into jno xchg cmp inc shrl mov insl inc cmpl arpl or lock movsl mov inc out or es jg js mov pop roll inc jmp push test movsl lds ds xor out sub mov mov pop inc (bad) test jae incb xor adc dec add dec mov xchg in scas xor (bad) push cmpsb fwait jmp mov test pop repz leave mov lods inc jmp jge pop loope pop stos jl test mov lock rcl add movsl xchg rcll pop int3 neg test xlat test inc sub nop xchg fsub sti (bad) and inc sbb (bad) hlt mov add jne jo mov xchg fwait and jns xchg dec pop (bad) push fmuls xor jg jne or jmp jecxz js xlat jge out mov push in xorb cmp adc jbe dec lods subb jp in loopne and dec cmpsl test dec push idivl les sahf jmp icebp mov pop cmpsl lea lods pop (bad) ficompl inc in push jnp mov jo in sub and daa add mov jne lods jle pusha rorb cmp test icebp aam dec lock pop dec stos fucom inc sub jo leave stos mov outsl sarb mov stc shl inc mov add sti mov leave aaa shr mov sbb pop mov jns sbb (bad) mov xlat out pushf aam xchg inc and mov cmp cmp jo cmp pop sahf test dec das iret xchg mov aam cltd sub push add dec or dec dec sub mov rol (bad) ljmp sbb lahf mov out sbb or jle pusha dec lcall popf lcall push cmp add icebp inc popl ret dec lcall mov (bad) jmp aas hlt inc cld fwait add mov shrl loope sub xor xor pop mov in int3 mov inc dec daa add pop out mov andl mov idivb repz cmpsl aas dec leave pusha pop scas jne pop cmc ss mov fsubrs xchg mov inc inc lea cwtl sub (bad) daa or enter lock xchg fsubrl or or jb aam scas (bad) mov pop iret cmpsb sbb pop inc or add fadd (bad) aas xor dec je cmp mov sub sarl ljmp jno cmp mov jae mov dec cmpsb sbb ja fisubl adc test inc jecxz xor daa mov inc add push ret (bad) adc push (bad) lea fdivs loope cmp mov jo ror add xchg mov cmp jns lea fsubs add mov rcrw jg pop iret pop and test sbb inc iret inc clc pushf cmp jnp fisttp in lret xchg fldl adc jge scas or jb pop test (bad) repnz xor jnp test lock scas push icebp cmp emms push cmp and in (bad) shl mov sbb cmc dec add and pop mov rcll call adc sahf inc dec cwtl aaa mov pop test jne (bad) lock cld mov mov clc ja add hlt inc movsb mov enter sub insb test cmp pop xor xchg add cli fsubrs mov test aad int3 xor out leave dec arpl adc out pop movsl and adc xchg aas addr16 push or xchg rcrb xor lcall jg push and and dec lock repz mov xchg (bad) aaa ficom movb xor outsb fs dec dec imul xchg ret jae xchg or (bad) rcl jmp les sub adc jle test push dec xor and es push loop jle cmp mov ja out in sbb in adc add cmpsl mov roll pop and xor movsl mov fistpll addr16 jb mov mov andb dec mov mov fistpll jb push hlt jp xor cltd out push mov fistl push push pop fcmovnbe xchg add int xchg fsubrl cltd cmp iret dec jge add cmpsl lea cmc push sahf jl jne sti rcr insb pop adc mov test pop call and mov xor lea dec push push sbb cld daa lea pop aad shr and es push cmp das in les jne sub or je sarb lahf ljmp out inc (bad) sub aam in inc jge adc xchg enter lods imul lahf bound sub shll divb aaa xor out fucomi ds lds out mov xchg cmp lcall dec cmp lret test add call test jae mov mov pop and sarl lds xor adc push fnstcw sbb add insb addr16 mov or xor pop or push dec push lret sub mov cmp mov mov jo adc sub jge mov in mov add dec inc mov dec xchg stos clc sahf cmp mov fs mov xchg orl addr16 and sub cwtl xlat lahf movsl sbb in (bad) std mov nop xor pop adc push fs adc sbb (bad) xor int dec mov mov movsl cmp leave jns (bad) hlt fisttp jle inc es mov (bad) pop ficom (bad) push aam xor add push jp mov lret lret and (bad) add mov and xchg and add xor dec inc mov mov lods cmc xchg xchg fwait and pop push xor enter test mov jne in sbb xchg xor js inc fisttpl sub add loope inc dec and mov bound in sub dec xor inc pop negb movsl fist scas int add ljmp out add or cli xor out (bad) int3 imul xchg (bad) lock fnop lds imul sub loop mov pop sub (bad) int3 hlt or jbe push nop push xor push push repz or sub inc xchg lods clc imul sub (bad) jne pop je and mov mov or lods xor imul aas xchg sub sub hlt outsb (bad) loope gs xlat cmpsl mov jae,pt push divb lods push sub cld js fmul loope fsub or loopne cmp pop xchg mov es ds lock fs jmp mov pop jnp addr16 imul inc xchg roll lret jne xchg pop mov test lods outsl adc test sbb push cwtl or xchg push sbb inc loopne lcall mov adc fdivrs in out addr16 jle inc jecxz xor sbb test loop ss negl fiaddl adc fnstcw mov int loope inc sub fwait xor jle test sub mov push jno sub xor iret sub inc inc dec adc out mov (bad) (bad) mov jecxz or enter test out cmpsb sbb jp test lahf imul adc mov jmp cmp mov push mov loopne into call adc pusha jl pop or leave decb sub je iret (bad) jg sub sahf jbe dec out fmul aam xchg push push lret add dec dec in pop xchg je jl push cmpsb imul loopne mov roll inc int adc lds inc pop fsubrs out mov xchg rep jge mov in sbb sbb sbb in pop enter faddl jle loopne flds jae bound push and xor sbb jnp mov fbld imul lcall fcompl jo out inc jge lcall and xor mov mov jl outsl cmp push test lea ret mov adc xor repz adc das jno bound ljmp sbb aad adc and fldt movsl mov in jo ret imul sahf xor lds enter popa add adc mov xor int or insl shlb xlat mov and push scas fldlg2 (bad) clc cmp cmp lods rclb ffreep mov jl test xchg fsubrs mov push fs inc stos xor das sahf sub cmp insb push lock (bad) pop sub pop cld in in aaa in jmp inc pop in shll bt jno int shll scas xor jge insl (bad) enter fisubrl shlb rcrl xchg iret mov test push (bad) stc in mov xor divl callw ss add adc adc bound mov (bad) in mov pop mov aam outsl dec testl sbb lahf ret mov repnz dec pop jbe add jo cmp push sbb or add mov cld push xlat int3 xor and cltd (bad) cld orl lock push add call repz inc lcall lret das fldenv int jnp jae lods xor je adc xor pop ret and inc xchg ffreep and mov (bad) dec lods loop mov fdiv mov ljmp sbb scas adc repnz jl outsb sahf (bad) daa adc or jns sub mov add scas (bad) xor out stos pop fidivr jno std cmp lock xchg sahf sbb xchg and cmp (bad) xchg mov and ljmp add mov mov test mov popa paddb jl inc cwtl mov mov leave popf add inc adc mov lds aam dec cmp sub jo (bad) hlt mov sub mov jns loopne sbb push movsb cmp fsub mov hlt ljmp pop ljmp xor lods fistpl ljmp mov fwait cmc fisub rolb push xchg ret out inc loopne into lods andl jno clc mov es aam loope mov cmp lock xchg push aam ret ret mov xor inc push jle nop sbb sbb inc jmp or aaa sbbb sti sarl dec push xchg xchg (bad) out lret mov (bad) addr16 fbld xlat lods scas repnz mov pushf add and faddl mov xor in rclb bound adc or test stos bound dec cmpsb in jecxz xor imul or push in lea idivb adc inc mov out push fdiv cmp gs (bad) mov nop fsts test out mov aam cmp sbb out pop shrb adc or or jb pusha xor and mov insb sbb pop xchg movups ljmp (bad) xchg dec imul push mov sub sahf retw pop xor mov jnp mov mov lods iret mov icebp fcompl sbb scas sub out repz ljmp push mov inc sbb dec ljmp cmc adc jnp test mov mov icebp jno sbb cmc dec dec mov inc xchg mov adcl (bad) (bad) out push sub fild pushf and pop ficom push xchg xchg int3 inc sub sti outsl (bad) cltd (bad) mov add outsl jg sbb jp mov pop lahf (bad) fidivr je fs adc jnp adc (bad) gs (bad) push dec inc jns std cmp fisttpl outsl push adc adc add in inc add or mov (bad) (bad) push sub mov cmc xchg lds lock add aas lods clc and mov xchg imul orb adcl add lret mov jecxz ss leave push in mov ja test mov gs mov ja and (bad) xchg lret inc push out and sbb adc sarb hlt into xor leave ds cmp scas pop xor (bad) push lods lahf (bad) sbb mov inc lods addr16 jp jno mov or in mov dec scas pop adc and mov leave xor mov aas pushf push pop addb cmp adc mov dec gs push js mov jle in subl xchg sub lock movsb push fdivl cmpsb fwait mov loop sbbl adc arpl in insl sbb jne test dec dec pop nop out cmp mov sbb and mov out test mov mov mov push lcall scas or test pop subb js dec jle inc lock aam sahf or xor cltd jle pop fcoml jl and (bad) (bad) negb or adc add (bad) jge push inc sbb fs dec xchg addr16 sub outsb out adc or out fs add cmpl xchg sub inc mov bound mov xchg xlat jle (bad) stc push rcl xchg fisttpll fcmovnu adc add lods pop inc or ds inc divl mov shll (bad) in leave add out xlat mov dec cmp daa mov pushf (bad) in xchg (bad) jl mov jb push or add lret sti out push lods fwait dec jb dec data16 mov push sub or xchg je adc stc pop in cmp xor push mov sbb add std xchg scas sbb push dec aaa fimull mov push jne hlt (bad) popl cs jmp pop cld jge xor loope sbb insb cmpxchg repz insl dec pusha jecxz sub xchg or push pop sub mov sbb mov out xor sbb pop lea (bad) out xor jb pop cmp into out or inc aam stc nop jmp sbb xchg cmp fisubrl inc aas pusha lods sub xchg mov sub cli ljmp sahf and stos mov movsb shl add cltd dec mov rep jl push mov hlt hlt adc sub lret jae fwait rcll in int3 fldenv cmp mov pop pop sbb push mov test js test mov adc sarl pop int3 rorb jl sub xlat sar dec mov or or push sarl mov fsts test adc mov xchg inc test add sbb mov or dec (bad) in ss int3 outsl sti mov and cmp lret mov dec mov push dec xchg push sub inc mov push (bad) in movsbl (bad) repz add inc push xor (bad) sub pop test mov repz jmp test ds mov or sub stos or scas and dec das pop movsl inc mov daa jp loope push mov clc test subl fisttpl in dec xor aaa ljmp negb mov add nop rol inc loopne push xor xchg mov hlt adc es aaa xor fcomps jle pop or inc fnstenv jnp mov push addr16 lcall sbbl inc sub sub in gs lock (bad) dec cmp (bad) in out sub push scas dec out lret fnsave mov add pop mov imul xlat jbe (bad) out adc popf pop jns pop test lods sub (bad) aaa std addl ja rorb lock push popa inc jle and imul repz jmp jnp or aad pop adc es cmp cmc sub out pop xchg out mov xchg cmc sbb adc xchg sbb mov inc cwtl (bad) in dec xchg push pop pushl jne aas dec pop adc dec repz mov aas add mov jmp sbb sub dec ljmp js sub ret pop and sbb jb xchg cmpsb jmp insb pop loopne into mov dec aad (bad) push push inc mov int3 sub mov mov jo jl cltd sbb push dec in dec fwait add cmp gs adc insb mov mov jge jp mov and imul cmpsb dec xor outsl cwtl mov push push add lods mov mov (bad) (bad) push push mov or leave push or adc pop scas inc bts pop xor (bad) xlat sub je mov mov pop (bad) pop pop jbe inc mov insl test mov inc xchg jns mov fiaddl push mov sarb push lods sub cmc lcall dec idivl lods pusha out imul add and sub inc push fbld fstpt push pavgw xlat and jb cld jmp dec das dec and jae xor or push sub pop aad ret mov cld gs stos clc pop fcoms dec jle sbb sbb cmpsl push mov adc mov mov dec inc ljmp xchg leave adc lret sbb stos addr16 aaa jnp lock lcall ds js fsubl cmpsl in mov push mov add enter outsb test leave mov push dec xor out fwait stc and push lods ret xchg ror jb mov sbb cmpl xor mov sub and out cmpsl inc aam dec pusha xchg je push dec sub mov mov rcr xor pop inc lret lods cmc sub lret sub inc push sub lret (bad) pop sbb sbb mov stos add jb jmp scas ja rcl repz test mov mov lods icebp imul inc pop jno push sti mov mov fdivr adc dec jo or shrl pushf xchg aas xor pop loop xchg in or stc (bad) and out addr16 xchg sub into xor xchg lahf mov ljmp lock adc push cld (bad) push mov movsb mov je xchg sub bound (bad) sti ficoml aas pop (bad) mov and jle cwtl push and mov mov fbld imul bound mov icebp movsl xchg jns jae mov ror ss outsl stos cmpsb sbb xor push stos cmpl xorb xchg repz pop pop mov xchg cmp mov clc (bad) and jl movsl popf pop sbb xor andl out (bad) (bad) and aas adc imul fist pop out imul cld movsl cli inc int3 punpckhdq adc (bad) sti cmpl sub pop mov sub movsb jp push push dec aad mov ljmp sub loope xchg mov pop popf mov adc fildll push outsb pop arpl xor mov pusha cmc inc nop in shll sar xor sbb pop out je insb fcoms pop mov inc gs loopne sub sbb cmp sub jmp xor subb xchg dec insl xchg or in mov addl scas vminps pop sbb sub aaa sbb je imul out inc (bad) xor bound int3 xor scas hlt jle mov (bad) sbb sbbb ja or jo lods daa sbb movsb imul cli fildll push jo inc jbe xchg nop jne xlat mov mov fs mov popa les mov decb mov mov ja loope out pop movsb pop mov (bad) push sub xor dec ret (bad) enter mov sahf lahf fcmovu adc std xchg out xchg imul test movsl mulb cmp xchg jno sub rorl and inc mov stc xlat mov sbb sbb sub push mov cmp pushf xlat lods mov jb mov or mov movsl btr xchg jge inc mov fnstenv std repnz movsl ja or popa or cmp cmpsb mov (bad) test bound xchg hlt adc dec or cld xbegin sbb add add adcl test add cmp outsl mov scas fimull xlat lods pop ret mov inc in incb pushf mov add adc ret dec call rolb cmp xchg and gs jecxz scas ret push mov mov test shlb in rcrl cli (bad) cmpsl insb add test in xlat das push movsl sub lods ja,pn scas int3 aaa mov mov addr16 out mov sbb dec lea (bad) mov cs std cmp xor std test xchg pinsrw jne dec inc xchg mov loope das test adc cmpsb les adc mov xchg shrb jl je pop lds out lea jp xor xchg mov xor jg sbb out pop lea xchg std (bad) push aaa mov rcrb sub (bad) lea jb pop pusha lods (bad) iret enter jbe pop push mov adc mul popf sub inc push push xchg dec enter or inc cmp test cmp (bad) addr16 xchg push sbb pushf pop stos add icebp int sub xchg or cmp ljmp hlt js stos cmp stos rcrl mov stos inc inc and test and or psrad lcall xor mov out rcrb gs cltd add bound xor hlt mov movsl into scas std push pop adc xchg insb jnp leave cltd adc cmp loopne adc aas (bad) cmp mov mov sarb cmp sub inc mov rcll ret pop add fldenv dec sahf pop pop pushf jno imul mov mov ret cmc mov pop mov mov je arpl cmpsl stos gs std rolb mov jmp xchg or sub push jne test mov in (bad) sarb inc cmp addr16 js data16 or rclb jb (bad) jmp rcr imul fucomi mov mov mov into imul mov cmc dec sub loop in mov and loopne out jae xchg xrelease dec lods inc out stos (bad) adc push rorl push (bad) mov jle fldenv and sub mov lret cmc or adc xor mov cltd inc inc and mov jp mov mov sbb js add or fwait xlat in mov cwtl inc push add xchg cmp into in shrb lret cmp cmp push out mov xchg lea inc mov jne dec pop ret cs divb cmp and jbe and out jp (bad) sub mov dec cmpsl xor cmp in dec int3 fmul adc push pop mov pop mov and xchg neg xchg and test mov or cmp cmpsb repz outsl mov push imul or test cmpsl xchg in cli jle ret cmp mov repz dec mov fwait xor xor xor sub ss pop (bad) sbb sbb jne in cmp or in and dec mov lcall push mov and inc add andl sub push xchg and and sub xor cmp scas fs or push xor jne pop mov mov psubd jge add loop pop push push int3 cmpsb xchg lcall jl inc int push data16 mov xor test pusha sbbl les add add xor idivb mov ja pop xchg jbe adc sarl cmp pop lds xchg dec in xor sbb lahf imul and in mov jmp insl and push mov add fwait jge mov add cwtl cmp mov inc (bad) fisttpll (bad) ja mov sbb xor mov fisubl or jnp out or inc inc mov dec cmpsb xchg in jo outsb imul shrb (bad) sub push inc movsl fisub sub icebp pop dec sbb fwait cwtl scas pop inc push jge or inc cmpl shll adc lods xor mov cmp push jp cmpsl mov test arpl push and ret dec add loope dec cmc lcall inc js stos inc jge cmp mov fidiv add xchg fs xchg lods xchg rcll fldcw (bad) rorb mov mov xor xor add jp jo or cmovge jmp pushfw xchg cmp xor pushf mov xchg fsubl fcomps pop xlat cli cwtl jae repnz mov cmp mov cmp sbb dec ss bound jp sub ds mov sub scas jecxz addr16 stos insl pop mov loop les mov lcall je and lahf push or mov loope insb stos mov jno test cmp aaa fidivrl in mov inc rolb push out neg ret scas xor push push xor fisubr es shl jo js push push xchg sub mov sarb in xchg xchg dec leave xchg inc rclb hlt scas repnz jne sti lods adc (bad) jbe imul (bad) jb jl imul lods xlat into add fldt lods loop (bad) into popf push mov and push or jae out xor cltd in xor (bad) mov fisubl or cmp into insb fcomps loop pop adc push jecxz cmc and xor vmread xorps add aas sub lret push adc lods xchg in mov lahf jp mov dec in les pushf mov mov jp insl jecxz lret sti daa add mov sahf jb xchg jae jns inc outsl (bad) adc jne cmp pop cmpsb inc push pop loop adc add cli add movsb scas xor clc notb iret xchg xor mov repz iret ljmp aam aam outsl push sbb add pusha rorb sarb mov stc arpl mov sub subb inc and adc daa push popf push dec ret mov dec jmp pop xor push std jge mov sarb xchg cmp ljmp (bad) push fwait xchg cmp mov cmp loope cmpb fs mov daa sahf dec or fistl test jecxz stos (bad) rolb pop add into xchg outsb mov pop iret dec in jecxz sub dec decb xor mov jge push pop repnz cwtl xchg cli insb cmp push inc pop in lea dec pop outsb test jle cmc fnstsw scas mov xchg pop ret mov mov cld pop jmp repz push mov test xor xchg fidiv popa mov popl pop ss imul jecxz bound loop mov lret cvtpi2ps sarb xchg jp repz sbb test sub stc mov (bad) sbb lea mov jns aaa xlat dec lds movl pop mov jmp addb add dec js leave jnp loopne xchg and ret xor pop repz add lea mov push xor andl jg fmull lods movsl scas lea stos jne dec hlt test or push mov test cli shrl iret in cmp add mov (bad) lret sbb ficompl inc pop sub pop mov or fild test in fnsave mov fwait push bound imul ljmp sbb inc dec push mov pushf inc xor das cmp dec mov pop dec (bad) mov and aam xor sbb mov fcomps adc xor pop rorl int3 data16 test dec cmp lcall ja mov or add insb pop outsb and inc jae or pop pushf pop cmc loopne cmp jecxz daa sbb cld and mov push notl test mov inc jecxz div cmp int jno pop outsl gs mov test (bad) mov ljmp popf sub mov mov int3 data16 (bad) xor mov ja leave mov ret sahf pop lcall mov lret mov xor inc inc test xchg pop jo cmp mov cmp inc iret push sbb push pop iret (bad) mov mov add and cmp mov pop jp (bad) mov popf or mov and mov push out ljmp adc cmpsb ret dec jb mov leave jp insb and push clc jg out sub and sbb dec and out cmp xchg mov sarb lock stc mov fldenv repz sbb mov (bad) fs ds or sbb xchg sub out test pop push sahf mov shrl cmp and xchg lret or pushf and addr16 sub jne mov jle into adcl ja inc or into fsub adc addb mov outsl scas or add push int3 test sbb pop add repnz fisttpll sub adc arpl out scas inc stc inc cmc mov es mov jo lds out mov add in adc les ds sub hlt cmp mov pop push popa cli jg xor dec movsb jmp sub sahf xchg inc cmp cs testb xchg xchg decl lret imul xchg cmp rol sti movsl (bad) int pop inc arpl mov dec or pop cltd add xchg sarl mov add or xor popf jno repnz pop (bad) scas outsb inc push xor icebp xchg jmp adc insb or or mov push fimul and xchg cmp push lret push pop fildll push stos xchg addr16 add out (bad) xlat inc (bad) popf pushf adc cmp cmc push sub mov loop pop notb xchg lock out xor (bad) jp imull mov sub xor je ror jbe sub dec sub fstps pop xlat jno mov pop notb cmc xchg in sbb pop sbb cwtl fiaddl xor loop aam lods test hlt jno outsb cmp bound lods imul pop xor movsb aam std mov mov mov jbe repz jns dec into daa mov sub imul dec into pop pop les mov das (bad) bound mov in and jne add pushf sub jb xor jle mov inc pop (bad) leave xor dec mov add push xchg clc data16 scas push js cwtl sbb setle gs arpl pop adc mov dec inc subb inc adc and repnz or mov popw mov mov pop and punpcklbw push cmp add ljmp pusha cwtl test xlat mov cmp popa repnz mov mov cmc ret pop cmp subb xchg push inc test arpl mov push pop js fidiv fsubl adc add add rorb out cmpsb jl scas loope adc inc lret add xchg pop faddp or cmovg mov inc int popf out add enter or xchg out fldenv test stc fstpt hlt repz push icebp pop inc int pop and mov jecxz push out pop das ret sahf and mov lods mov jecxz mov fcompl int3 mov push or adc popa (bad) jae ret push dec adc test sbb push mov push adc mov mov mov sub push sub and fistpl js aas adcb lss xor testl std adc (bad) out dec arpl sub add cmp adc inc in push mov inc and sbb xor outsl jbe xor test push jge arpl aam sub xor sub lods sti fidivr inc in mov adc push fs cli in imul sub cwtl dec adc repz fstpl insb or scas jg mov test adc scas fcompl mov icebp dec cmp popf mov sub inc out push push xor jno lods xchg (bad) jno sub int3 xchg push sbb lea sti (bad) jb xchg pop push and and push xor mov xchg (bad) cmp mov xchg cmpl std lret sub inc loop in add pop mov mov xchg xchg rcl ret mov js push dec mov adc xchg subl pop cmpsb test std sti adc adc repz dec sub aam mov daa repz pusha mov cld cmp dec xchg dec jecxz inc (bad) mov mov mov jb or add fisttp movsb inc mov and sbb loope iret lods cmp fadds push add pop adc add loope jae pop (bad) lret adc mov cmp add xchg iret xlat sub loope sbb jb add jnp ret adc sbb adc ret xor jmp xchg mov cmc jle inc js jle outsl pop aam add and dec xor push aas adc cmp rclw mov scas sbb sbbb loop inc mov mov jg add and fwait loopne or xor dec push sub push and mov iret sbb push (bad) sub dec ret or push xrelease jp jno loope push sbb test neg das push (bad) mov or jecxz add adc leave mov sub mov enter push jmp adc movsb jnp xchg push ret fadds addr16 or cmp jne adc orl cld rcl jae in pop outsl pushf (bad) push test notl mov rcrb push clc pushf dec xchg cmp mov fist lret ja out inc cwtl jo cmp mov je jp mov not clc jge mov push push mov lret fwait xor imul out mov dec insb call js movsb cli popf imul inc or imul jnp insb pop jno out dec sub jns movsb lcall xor adc cli fs lret lock sahf inc xchg out mov fcmovu les repnz jbe out push mov jnp pusha iret leave add jg xor dec adc or mov ret push pop cmc mov in mov cwtl fildl pushf push into cmp dec das (bad) jae in popf enter (bad) mov pop dec push xor lea pop jl pop rorb cltd or fisttpl lahf call aam leave push sahf mov xchg cmp push dec push sub mov int insb mov push repnz mov cmpsl test xchg sbb pop cwtl add (bad) dec ret lock cmp mov and sahf cmp mov pop fcmovnb divl loop bound insb xchg mov fs sbb mov lret push sub sub fnstsw jne and lods pusha inc ret daa mov or in push inc adc dec inc push lods and (bad) fcoms pusha cmc jns scas xor popf cmp mov mov mov hlt jae xor add jo insb lahf sbb jnp (bad) mov (bad) (bad) sub shll cltd lds lret xor ds pusha popf add movsl and xor es dec mov stc (bad) push int xchg hlt aam inc aaa adc rolb into sbb mov push pop lock inc out adc data16 mov into outsb in fwait outsl sub push xchg mov cmp mov dec popa imul outsb xor cwtl mov rolb dec push jne sub pop repz mov aaa into out mov push jmp pop cwtl adc mov cld sbb add or imul jge sbb jmp in pop dec xchg add in iret sbb fcomi cmpsb mov cmpsl pop jbe lret jge add dec out jne,pt mov jmp cmc xor mov scas jl ret clc or mov sub xor (bad) xchg popf and (bad) inc or jnp adc and fisubl (bad) test dec int mov xchg mov mov sub xchg das subb adc push fdivrp fwait sub aad (bad) xor mov add fild xchg outsl push (bad) and cmp stos jmp cmp daa in mov add add push xchg mov loopne xor cmp pushl xchg data16 cmc inc ja cmc scas lods cmp ffreep mov mov lea pop sbb push and push rcr aaa sahf psubd pushf fcompl out jnp in xor inc sti ret stos mov movsb sub or inc dec (bad) sti addr16 call ja or xor mov jecxz mov aad addb loop aaa scas mov (bad) (bad) loop mov lods rorb sub fs loope gs ljmp and and cmc jae (bad) jg rcr in das jnp dec out dec sub js je push test jb lea pop inc stos insl mov xor mov pop fs daa xor mov out mov movsb cltd and mov pop sbb xor (bad) sbb mov flds insb aad sbb add test push or inc mov adc mov mov imul mov aam mov jae lds pop push mov mov cmovnp movsb xor rorl (bad) arpl dec pop je (bad) xor and dec inc jle jmp mov test cmc scas pushf mov or jmp pop test xlat lods inc mov push cmp imul push jmp mov pop cmc lods mov mov jmp fisttpll add rol int3 ja mov push mov mov mov (bad) or je out roll jp push iret pop mov movsl cmp inc jg int lods mov dec pop repz shrb sbb nop xor add sub cs push xor lods mov and xor add loope sbb dec imul fidivr xchg insb pop fisttpll test clc out xor (bad) pop pop jle jne fwait xchg add xor cmpsl push xchg cmc mov pusha and jl sbb idivl cwtl mov push adc and test push mov sbb add notb mov or add outsl shlb pop in adc gs xchg leave js,pn jge xchg loope xchg into (bad) hlt cltd or or ret xchg cltd imul cld test pop ds xor pushf cld sub ds fadd sbb sub aas popf pop inc and cwtl lret pop sarl dec push push mov scas fsts in loope lock fs push cli inc xchg dec outsb sahf xor out scas inc mov mov sub mov cmpsl into pop aaa jmp (bad) cmc repz add rcrl xor jne or sahf data16 rcll das xchg dec mov push jp jnp fwait cmpsb sub arpl fmull lea lcall cmpsl (bad) xor sub jp jle clc add push mov (bad) and and addl sarl xchg (bad) mov xor rclb push xabort fldt sbb inc adc sbb push ds adc xchg inc aad xor data16 mov pop jle repz scas and test (bad) nop xor dec dec fcoml push and sbb scas mov fildll lret xor mov push arpl aaa rolb sub push mov lcall adcl ja sbb movl jae jge repnz xchg jns dec pop in sarl aam cmp fstps mov fiaddl enter mov lock sbb cli sbb lcall push sbb (bad) aas or cli sub xor loope jmp jl add pop (bad) jecxz push mov mov movsb push xor gs cmc push imul aad add (bad) mov rcll cmp inc dec dec or jnp mov jl xchg mov scas iret rclb inc daa sahf xchg adc xchg mov enter lds push rorb sub push sub inc sarl pop xchg cmpsb jo nop dec ja shl lds mov add or push mov mov dec out cmpl inc out inc inc jno pop jbe jbe dec ret sub pop inc cmp pop mov and jle add cmp jp sbb dec lock lahf cmp addr16 jno scas outsb mov das dec enter cmp pop lods inc push (bad) mov xchg daa mov lods pop xor sti aam in jecxz pop ss (bad) repz dec mov mov push enter pop pop lret xchg sub push sahf cmc ucomiss pop inc aas mov jmp mov mov popa insl jl scas adc (bad) xor mov outsl or sar popl cli inc ds push test pusha mov jge xchg jmp mov mov fistpl daa push cmp xor push pop in cwtl test test lods sbbl andl push or and mov inc adc or and ret or mov (bad) (bad) cmp stos xchg loopne data16 mov cs lods jge mov push sarb xor lret idiv mov icebp xchg ljmp (bad) push loopne es dec loop adc clc ja push pop mov push into push ljmp adc xor stos xchg out fs jp push push inc not insb leave int3 int aam lret push in jo,pt imul sub repnz (bad) popf jns mov mov cmp pop test push dec xchg sti or push inc sbb ret sub test cmpsb jle inc movsb insb mov lret sub test pop sbb call es sbb mov jo xor jecxz mull insb out jnp mov loope or out mov sub inc div sub mov mov push add pusha xchg dec jae (bad) je cmp bound xchg insb lret in shll sbb inc xchg push int3 mov (bad) dec cmp xchg dec push dec (bad) jae sbb push xchg jne jae stos mov mov outsl std in pop inc insl mov imul aad sbb mulb enter std xor push xorl les fwait pop dec outsl xchg fs lods mov push decb cmpl jmp jg inc inc xor add adc jns scas push pop pop push adc nop imulb int std ficom or xor hlt sar jg add push shlb xorl push push push jns mov push fwait jmp outsl lahf scas sbb stos or fsubl lods aaa lcall pop arpl pop mul push bound popf test aad xchg mov sub popl shlb cmp iret stos push (bad) cmc mov xor xor (bad) push or add pop iret std repnz cmp jbe roll xchg addr16 xor mov mov push lds bound clc scas cmp movsb in jp jns push (bad) rol xor jle add cs fimul decb sarb sbb cmpb out test pop ds pop jae jbe mov or (bad) pop imul xchg clc scas xor cmc push pop imul and fs shlb gs cmp inc adcl pop lods ret push sbbl push pop mov adc mov jo out jmp push or mov hlt mov int mov clc mov fisubr jmp les nop mov sub cmp and addl lahf cmp xor arpl adc sahf test imulb mov mov xchg or lret fs fildl leave sub mov fs pusha fidivrl lahf mov dec add daa jne dec mov cmpsb or pop or daa and inc xlat test fnstsw insl int3 mov xor or add mov mov lret xor cwtl mov ja outsb mov push jo popf (bad) cmc xchg pop sbb pop jecxz fwait mov insl jge push dec movsl mov add leave mov jl xchg xchg stos repnz and push and insb data16 cltd pushf mov or jge bound xor pop pop (bad) jae jo mov mov push fsubr cmp pop adc stc push xchg imul mov xor push lock mov addr16 mov or sbb xchg aaa pop mov xor sub push popf into xchg push call or cmc mov cmpsl cmp divl cltd xchg cmp mov cld sbb stos cld inc icebp push mov sub push loope aad xchg shrl inc outsb fidiv iret add je jno test js icebp dec sbbb xchg scas cld dec ret adc stos pushf xchg out cmpsl cltd push push sahf out aaa add pop sub add mov scas rolb inc mov xlat inc popa ds js cwtl sub aam jle jge pop popf (bad) (bad) jae repnz dec push sbb lret ret push in imul sub cltd xchg add pusha xchg scas jmp pop icebp adc pop jl jo test popf push cmp pop cli mov pop das test and push out stos dec push lds repz subb imul xor jns cwtl mov flds inc mov scas int dec or es sub cmp imul mov mov das cld fildll jbe cmpsl lret mov insb or adc dec leave jle (bad) icebp jb cmpsb sbb ss faddp push (bad) lods scas jl xor pop insb mov (bad) cmp stc sub push inc jle dec push inc push hlt push push out add or (bad) mov icebp (bad) xor dec xor incl push pusha out cs ffreep inc out jne push pop push testl clc loop imul lods mov out add sub add xchg xor ljmp add shrb in fistpll jb sbb daa nop mov jle xor or xor sahf or adc std pop mov adc ret dec and or inc push clc dec xor push xchg popa xor fbstp push sub (bad) cli orl xor mov out cmp jmp inc lahf adc lods lea dec sbb subl dec sub add out imul lcall aaa pop pushf push mov int3 jb inc jae sub adc cs js outsb dec mov xor pop xchg js lcall imul mov cmp lods jecxz test jmp cli lret sub push dec mov cmpsb adc pop push movsb mov lret xchg out adc mov loopne mov loopne test cmp (bad) xchg push adc pop frstor cmpsl mov and add mov (bad) arpl mov pop jnp jl daa inc jns repz xchg jae test in inc lods mov ljmp in pop icebp pop aaa ljmp fcoml add iret in stos addr16 in jnp jle mov inc jb mov (bad) call jecxz rclb pop sub aas leave inc pop xchg pand aad ret dec pop data16 incl mov (bad) mov in stc xchg movsb insb (bad) (bad) push out ja das (bad) mov mov push stc xchg dec test shl mov fbld cmp jne shrl mov movsb rcl cmp xchg cmp xor (bad) frstor cmpsl mov out adc outsl inc nop lods inc and push jecxz xor int3 negb mov bound mov mov fadd sahf repz mov mov sbb xchg sbb popa stos arpl push cli pop adc or mov xchg ss lock scas aam mov test imul inc scas movsb xchg cmp push stos jbe push fwait nop pop (bad) bound sbb pop fld xchg cld jbe mov pop outsb test sbb xor jne or xor jns cs mov into pop test xchg leave cmp lods sub adc mov jns or loopne dec mov dec push and mov mov std lea fs mov ret inc loopne (bad) (bad) in mov notl in push imul mov add pop jne pop mov sahf add and (bad) (bad) lods cld sub mov arpl pop add int3 dec adc push jnp push mov inc pusha mov loop jp pop push bound mul adc imul cld xchg xor mov push sub aad lret (bad) jge inc adc aas ret imul fwait mov jle sbb add sar fiaddl arpl xor dec push lret repnz pop xchg sbb inc imul jb sbb test mov scas add mov leave dec inc push (bad) or inc int fwait adc inc dec mov mov sub jge add mov push xor adc jle xchg push xor nop cmp mov cmp dec adc scas and (bad) cmp ret (bad) push leave mov mov sub push xchg cmp popa dec fadd push aaa mov push mov mov sbb add arpl adc mov movsb cmpsb lock jge pop in ja ret in jge xchg dec rcrl test mov inc test iret xor or dec outsb rorb inc (bad) movl jg push jg pop into xlat and xchg cmc movb stc xchg (bad) into mov enter js adc jmp imul fwait push and jno (bad) pop int xor mov xchg pop inc cwtl int3 push popa cwtl dec call jp and in push sahf cld scas push into mov fiaddl test mov pop in or cld ret jmp loope insb sahf jo pop xlat or inc insb sub xadd lcall mov sbb push test call mov fsubl out sahf sahf sbb sub push push adc fs loop and pop in mov mov ja mov pop stos in (bad) pop sub sub lods sbb and push lods inc repnz js push mov in imul jb mov adc andl sti leave loop andl or mov out pusha enter pop pop loopne add ret xchg inc stos repz pop or adc cltd (bad) cmp ljmp aad inc arpl inc push jno xlat shr shr xor dec and scas adc jle push leave movsb inc (bad) mov out sbb mov mov lods mov push cmpsb es push or lcall jo push and out sbb mov add and mov lcall inc movnti mov xchg sub sti mov (bad) ja or cmp xchg faddl or fstl push sbb pop mov cmp or pop aaa aad push loopne xlat sbb mov popa inc aam push hlt cmpsb or pop sbb dec add xchg rorl add add mul iret push ljmp sbb xchg ret dec ss dec xor or inc pusha dec jo cmpsl sub dec iret xchg into mov rdtsc shlb mov lret imul adc adc push sub add push in push sbb lods mov pop aam orl or jo push aam push mov mov push repnz pop ret aaa xchg (bad) repz js mov pop (bad) sub nopl loope mov stos lret inc jb add mov jmp and sbb cmpsl adc xlat xchg mov mov hlt cmc mov and lret cmpsb in sbb es cmc mov mov arpl repz pushf test ss jmp mov pop test xor and dec leave cmp xchg cmpsl dec ret ror mov xchg jno and adc mov dec ret ret or pop or sub fsubrs sub pop inc mov out out roll sub je negb push mov dec mov push mov sti iret adc push and ja adc mov imul push pop adc fldenv push in stos subl jno stos mov iret jns xor inc std and fiadd jl or aas call sbb data16 inc jb and ljmp sar mov sahf push push jmp loope pop jmp call sub aad adc dec adc mov or (bad) mov cmp ljmp nop push cs cmp mov adc cmp inc test pop lret rcl jp jecxz enter mov mov jb cmc popa pusha and or pop push scas sub sbbb sub icebp enter and aas adc mov mov push iret dec cmp data16 cmc add (bad) adc dec inc fisttp mov push xor out pop cmp xor inc mov fadd ss icebp test in jns sub aam test and dec addr16 mov sbbl stc aad mov dec cld pop dec hlt cmp push pop fcoms fs mov mov adc cmp jae outsb xor xchg add test cltd out and test or cmp ret icebp outsl xchg ljmp rorb or daa mov dec in insb adc jne sub in fnsave xor insl dec int cli jge cltd jns jge test ret sub pop (bad) cli lcall scas rorb xchg iret and imul mov ds add mov gs dec shr xor sbb lds out (bad) adc fwait inc mov inc xchg mov jle nop aas les loopne jle out je push fmull dec mov call add test jns add push or aas cltd xor push cmp xchg fwait sub sub xchg mov in repnz dec add xor jae add mov cmp xchg fadds push (bad) lret adc data16 fbld mov or std cli lds pop mov dec pop add and mov sbb sbb repz jbe sahf std lea mov cmpb shrl int lods cmp ficom in in mov lock cli lock lds (bad) div mov les ss xchg jge mov jmp das pop mov sub rol xor lahf push cmpsb or out or cli stos mov sub or jp mov cwtl cs mov mov inc xchg mov sbb xor in lcall sbb inc into mov jmp jmp in xchg jl test lods les sub movsb stos (bad) jb mov cmpsl jo fsincos rcll push (bad) fcmovne aas sahf outsl pusha popa xor dec insb fldt xor push push sbb mov dec shrl inc aaa jb (bad) enter lods push aas mov adc xchg inc inc (bad) bnd sub das dec dec or add (bad) loop dec jae mov sub add gs outsb fdivr pop sbb (bad) xchg xlat and jge push jmp lods push cmp jecxz data16 leave mov in in jbe cs adc pop pop daa (bad) cli mov out push roll std inc jo insl aas lret inc fbstp jb dec jle hlt pop sub push cmpsl jge imul cmp push inc jg aaa xor pop or mov jbe mov sub and and or cmp push cmp rol iret xchg adc add (bad) jnp cmpsl bound push cmp outsl test icebp inc inc adc mov push fs pop ss push scas and inc jl inc xchg outsb pop fnstcw cmpsl xchg inc out stos fidivrl mov iret cld xor sbb stos mov pop sbb addr16 lret outsl dec dec ret lods push into xor scas fs push push mov cmp dec or idiv jnp (bad) lods stos xchg popf cmpsb mov add cmp lods and les xor mov mov dec (bad) xchg popa xchg mov imul nop xchg push clc jns mov faddl sub cld mov aad sbb enter sub cltd out dec jg pop xor dec ret aaa adc out mov in int addr16 std or imul inc std push (bad) frstor add xchg notl adc and xchg push adc aas mov out fild sahf loop call sarb hlt sub jno xchg inc out lea add iret sbb mov cmp (bad) flds mov mov sub dec outsb jp fs adc sub cmc add out add push cmp xchg leave push mov jecxz jmp fldt arpl into out aaa inc or cli ss mov rclb fsubrl (bad) push ja xor push inc xor jnp shrb mov cmp cmp jne push negb xor in ror or mov jmp stos jge and jno scas mov lea pop cmp (bad) mov adc test in out mov les adc xchg jns adc jbe mov lods xor mov in xchg leave push xor andb mov dec in fisub adc mov sbb jne sub xchg sbb mov jo rorl dec movsl loop movsb cmp sbbl in enter je aas cltd out jg dec nop repnz fstl int3 sbb cli arpl inc pop shlb pop mov scas pop arpl das leave jp icebp orb inc daa jg cmpsl fmull cmpsb sub into sbb lods out mov insb (bad) jecxz aas cmp loope dec fldl outsb mov jp (bad) ja ficoml mov sub push adc mov jle pop test xchg sahf ds or les mov (bad) aad (bad) leave dec dec xor mov jl or mov inc jns dec dec cmpsl lds pop repnz adc repz or cli dec dec cmp call ror mov test ds add adc push dec xor popa outsl mov dec push mov loop xchg pop xor sub cltd outsl sti cmp ja xchg inc xchg sbb xorb cltd clc pop rolb add test insl (bad) into sahf dec stos (bad) dec ret mov xchg out rorl jge,pt jns insl subb aad les cmp daa lret stos loope cwtl xchg push push push daa test sahf int stos jmp inc int divb cmp fcomi mov jg mov mov lock rorb pop and popa push xor popf enter stos cmp scas push insl bound leave rcrb imul mov ds roll int push loop pop pop inc popa push outsb imul xchg pusha test xchg mov inc sbb sahf sub fimull xor sub xor imul (bad) add stos stc adc dec loope add mov sti scas iret push loop mov mov testb xor dec js stos in jle and cli mov or fiaddl repz add loope mov insl pop test pop cs xchg outsb pop mov bswap clc adc or iret xorl (bad) dec repz add jmp aaa mov xchg xlat jp lds es cs out pushf nop out push mov das (bad) pop push sub sbb cmpsl out cmp fstpt xor cmp mov pop mov inc pop jb inc inc and lods or push xchg and jg in cltd (bad) adc mov outsl (bad) and fs js,pn shrb push loopne ret addr16 out lahf fcmovnu push jl and mov push sub jp in stos pop xorps in (bad) jbe fwait jl mov ret fsubrl lcall sti mov push adc xor push xor les push mov in (bad) xchg incb idivb mov or or jbe popa mov cmc fadds stos shll xor jge xor add sub dec inc mov pushf lods cltd lahf dec xchg pop notl test adc add xor in cmpsb lock adc push inc scas mov sbb aaa jp mov int pop outsl adc imul add (bad) pop sbb cmpsl movsl mov cmp xlat and sbb jbe push xchg or hlt mov dec xor mov test arpl adc xor mov es loop dec nop rorb into inc pop mov xchg pop mov rclb les (bad) pop aaa jmp dec inc add xor xchg ljmp test iret dec or push inc pop bound mov and lods xlat pop in push fsubs (bad) sub ret push push pusha (bad) notl and ror inc adc xor pop (bad) mov cld fild fnop inc dec pop sbb push add inc jl repz sbb call cmp fildll rolb mov pushf bound call xlat cmp pop in mov xor cmp dec or divl popa test (bad) mov cmpsb inc xchg call ds xor loop (bad) cmp std clc sbb dec xchg pop (bad) xchg repz push test and and jle mov sub lods mov (bad) (bad) mov add cmpsb sti and loop lock scas push iret ffree add (bad) (bad) cmp cmpsb cwtl mov cmp pop xchg das push add jge adc fiaddl mov ljmp mov dec pop xchg out mov xor pop or mov mov std hlt (bad) cmp xchg cmpsb jle cmp mov jns punpckhdq fildll pop jno scas push pushf repz and sarl rorl dec test icebp and loope (bad) test adc rcr pop push dec pop stos mov (bad) jo mov dec mov sbb cmpsl mov loopne mov in mov hlt xchg test std dec push es test mov jmp out sti xchg and push inc jo and mov xchg lret xor (bad) xchg pusha rcrl xchg test add sahf clc in push or cmp sub mov jg pop adc cmpsb bound cld shrb int aam sbb sub and adc insl inc jge jae in jb cli jl loop (bad) mov mov jnp push fs mov out adc or jnp jecxz add adc (bad) mov adc outsb or fildll jno sub lods insl mov mov nop rorl (bad) (bad) or dec adc mov bswap int movsl pop clc push or (bad) jmp jae lods inc and push pop dec dec adc fild adc fisubl mov cmpsl xchg into mov je ss adc adc int sub xchg shlb inc add ds or xchg jnp out js jo (bad) ljmp add adc xor jmp xorl xchg xchg lods lods cmp cld enter xchg test sbb xchg mull out rol loop (bad) cmp mov outsl lods repz xchg negb ret jmp sbb add pushf in lea inc pop loopne movsl sub daa jb daa xchg xor mov loop push fmull out xor movsb push sub push jp (bad) scas push aad xchg jle out lods xchg lret or xor scas xchg fucompp jmp mov and insl sbb pop xor push sbb sub add in sbb xor shll mov mov bound test inc xchg das (bad) mov fs and inc rorl dec mov lods add lahf cmp and out (bad) add push andb and loop cs cmp (bad) out jg (bad) mov mov and mov sub insl lods je sub int sahf nop jns jl inc mov arpl dec outsb sbb jo jle test rol mov aaa lahf pop scas sub mov pusha inc mov pmuludq pop sub adc mov inc mov out jmp out add sbb sbb (bad) jb sub (bad) jae dec push mul cs or pushf jmp mov scas repz and lock inc adc cmp in das add jno xchg xchg les in push movsb ja lods in xor loop push xchg (bad) int3 sub mov cmpb ds mov add xor or orl cmp in mov pop ss insb out inc push ds pop dec mov fstl andb ss mov test dec mov adc jno outsl cs test aaa and adc dec ljmp (bad) add call xor pop ret lret and repnz mov xchg sub test int stc jl xorb stc hlt and imul pop fidivr fadds imul leave daa sarl xchg cmpsl add cmp mov mov fsub pop daa pop nop mov pop mov jle push or test adc fisub mov xchg addr16 push js xchg sub icebp push ficom and out aam adc xchg sbb adc movsb mov ja dec cld in jne fistpll xor jo jns adc movsb imul frstor sbb pop je in adc mov clc aaa addl (bad) mov imulb out (bad) and add or xchg inc dec sub add adc adc push stos inc adc je sbb fildl push aad lcall mov cli push push pop xor add jae adc inc subl dec xchg pop inc ljmp rclb xchg cmpsb sarb add jns cmp jecxz or mov or jns pop loopne std push add repnz dec data16 (bad) fistpll jmp imul sarl fstpt cmpsb enter mov cmc sarb ss mov (bad) roll jmp (bad) pop subb out mov in addl dec mov xor jmp xor pushf rcrl repnz loopne or add push sub popa dec enter lcall and xchg mov out pop rorl inc loop mov ljmp popf cmp scas cmp sbb adc jno mov xor push (bad) sarb ret aam js pop in insb inc jmp pop mov sub mov cmp xor sbb enter movsl cltd enter loop mov js and cwtl (bad) dec mov push lahf push scas mov jno hlt mov sub inc jp inc fstpl outsb and repz insb data16 arpl mov loope lret xchg imul in icebp and shl inc mov out fild or xchg outsl sti mov or inc sub pop xor mov fs into unpckhps and add cltd or stc lock stc pop out adc sub inc add pop xor cmp movsb jno dec jbe lods loop xlat lret jnp or cmc jmp pop sub loopne or mov sub mov inc outsb and push cli call mov and test adc aam clc test inc dec pop insl mov cmc add add int3 xor adc cwtl mov fs ret movsl rcrl or mov (bad) and outsl cltd sbb bnd (bad) es adc les pop pop fcompl dec sub fwait outsl pop bound fild divl xlat ja mov insl push cli mov push ljmp mov addr16 mov divb mov adc push out (bad) ja lods (bad) iret adc sub ds adc or call push xlat adc xor daa popf lret mov fnstenv popf cmp stos sub fdiv mov xor je outsb imul stos xchg push pop popa gs inc jle pop in cmovge pop jecxz cmp inc lea mov jnp cwtl mov mov imul cmp das ds xchg mov lds fcompl mov addr16 and leave rorl insb dec pop mov nop lds jae mov cmp sahf pop mov loopne and cmp fdiv mov stos (bad) int3 mov movsb mov lcall lods mov aas add icebp iret lahf loope pop nop dec push mov enter scas or mov aad (bad) (bad) (bad) divl mov add lods jle mov cmp mov out sub cmp mov incl or lret and fstpl cmpsb (bad) mov jp or adc outsl fisttp imul inc ljmp pop popf addr16 in sub lahf repnz add push push mov pop sbb lods and aad pop stos pop mov xchg insb mov xchg or jo outsl cmp dec popa arpl aaa std test add dec push shl jnp push xchg into or push jecxz cmpsl enter stos ficom ret sarl fidivr sub cmp outsb pop jne add insl icebp test push js mov push push movsl jp mov mov pusha xchg add or lcall (bad) pusha (bad) rorl out int adc push mov xor nop pop dec jecxz (bad) jo dec call not (bad) pop mov adc push mov push imul imul addr16 loop or dec arpl fsubl sbb push stos mov (bad) hlt mov (bad) out adc adc pmulhw sbbb (bad) (bad) mov adc scas test nop (bad) std lock das xchg xchg jle (bad) stc mov inc lods sub cmp pop sbb mov pusha in inc in adc and pop inc and das mov pop xor popa push xor or dec popa sbb lret mov sbb xchg pop mov js enter jl inc inc xchg push sahf enter arpl enter jmp mov in sbb iret rclb enter scas jbe jno (bad) jne jp fimull mov push jae cmc hlt pop dec test pop jne xchg pop sbb stc lret cld inc xor sub push push jnp xchg push or aam popf adc repz pop sub clc fdivr (bad) lcall ds sub push inc mov cli mov std inc cmc test inc inc push jecxz (bad) daa xchg or inc inc repz push xchg mov xchg fs std mov push push jp icebp jmp outsl inc fbstp push addl (bad) (bad) dec loope cwtl insl lret call pop imulb xchg xchg add sti pop and mov push sub in cmp stos mov lret push rorl dec lcall xor xchg xor jmp mov test popa sbb icebp fwait or push inc jns sub (bad) push test adc pop loop orl shl leave dec clc dec pop cmpsl adcl sbb cltd ret jl loop mov in inc fsubs popa ljmp pop dec outsl sbb dec jle addr16 cmpsb je subl jne cmp pop lret push stc dec pop xchg mov stos jle test adc scas push decb stos outsl jne or imul fistpll mov call mov outsb xchg sahf mov pop in xchg lds cmp mov enter out (bad) aas pop out (bad) adc and jns xchg stos outsl cmp pop std ret jbe rclb lea mov arpl jle sbb andb push call adc sub sti sbb loopne orl das cmp xchg push jae ja daa pusha arpl xor in into scas jp scas xchg mov pop jns daa xchg lahf shrb jnp xchg es push xchg mov outsb pop add fadd pop test in xor adc xor pusha pop mov loop stc push pop in addr16 push dec mov scas xchg ret mov cwtl inc push pop dec cmpsl jbe js aam mov xchg mov mov rcrl icebp cmp sub in hlt insb jnp mov adc mov mov and jge sub (bad) mov dec sbb in jp jo imul sub cmp leave fistl mov stos xchg fildl subl int mov mov jge imul jb test hlt outsb sarl fucomip imull (bad) sbb lods inc add sbb lock pop dec dec or or mov and and sti and xchg loope push jne stos (bad) std xchg and pop fdivr push imul push adc dec cmp mov sub test enter addr16 lahf dec pop cmpsb pop add mov pop stc mov ficoml stc data16 pop pop mov mov test int3 rol add icebp sbb mov dec rclb add dec xchg sub jo dec cmp cmpsl mov mov and out test dec pop and leave mov rorb dec xor mov mov adc aas mov mov sbb adc mov xchg into fdivrl clc lock int mov add aad pop or insb scas ret cmp incb je into mov sbb jo lock cwtl xchg rol jp cmp out adc cltd inc fsubr or mov negl xor jnp lods cwtl jge mov repz inc stos push sbb out cmp cmpsl or outsl ja cltd inc aaa cmpsb out jge lea xchg or out movsb mov ret insb test mov gs mov and hlt popa test adc lds fldt cmp cmp adc push xchg das sbb adc pusha xchg xor (bad) (bad) xor add call cmp test jno push std push cmp add in mov xchg mov mov mov (bad) jbe push mov sbb xchg inc vmread lret sbb insb pop xchg adc sahf or shrb xchg sub mov addr16 push movsl lret pop ret scas xor out jno push jle orl cmp call pop stc mov js sbb loope xor cmp dec arpl or xbegin jo xor dec mov cs cmp xor ja dec in and lret dec and mov out mov pop jl sub in jnp mov push icebp jb arpl cmpsl leave push sub xor lea mov or mov add test loop je sub mov stos data16 cmp adc ds test fidivrl mov flds or mov std jecxz daa mov sbb xchg testb addr16 sahf mov cmpsl fcomps jg fmulp lret jle xchg xchg sub and (bad) in pushf lahf lea sub pusha mov fwait xor push jbe mov je jg mov out jp,pn sbb mov sahf imul mov fistl testb lds je loope sub xor test inc repnz imul sbb mov cmp fist sbb lods dec jmp ds mov inc cmp das imul into mov mov setnp clc xlat and not insb cmp ret jnp mov pop mov stos ljmp aaa inc roll adc or loope adc mov mov rorb xor movsb push addr16 xor outsb lret sysenter cmc out jl cmp xor in jne pop (bad) dec xchg aas (bad) sbb or dec mov dec mov fisubr popaw (bad) fidivrl mov ja addb mov jb push je adc xor adcb push pop fs dec push dec and xchg pusha xchg cmc mov (bad) mov add inc (bad) cli or or add aaa sub jle in mov and add lcall lahf adc call dec aam cmp xchg cmpsb lock les inc jecxz decb mov sbb clc dec pusha leave adc sahf xor sub out or xchg jecxz sbb pop lock xor mov mov xor mov pop adc jne das lock ljmp int3 cwtl inc sbb (bad) xchg mov inc mov push test or pop fstpl repz pusha test sub fwait rcll push inc xchg fsub dec xor ss jno cmp pop jmp inc jo lret out loope or aam pop xor mov into push dec dec mov add test or insb cmp push jge xchg jg dec jb xor or ss jns,pn fldl repz aas std ss and jp movsl cmovne dec dec inc jp pusha push and ret push int3 jne hlt sbb xchg xchg into pop out repz aas aaa (bad) insb inc fs or mov jne loope gs jmp mov sub jno inc outsl sbb pop stos std or mov lahf test test add sub lret stc xchg and repnz cs sub add dec sbb ret xchg pushf sub hlt mov movsb pcmpgtw sti xlat or cs adcl insl cs int3 sbb fbld lock mov pusha lcall cld pop mov loope jp stos xchg sbb mov mov repz loopne repnz int3 jecxz rol inc (bad) ss jge cmp int xchg mov das ret add test test xchg shr adc fstl jecxz fdivl cwtl xor pushf sub ljmp popf mov scas aam pushf sub cmp push adc sbb mov push pop xorl mov inc pop in cli pop scas mov push arpl cld mov cmp sub jecxz xchg and add popf jg add mull jns mov sahf push dec add pop rclb or sbb (bad) jae adc out xchg mov leave fsts and cltd cwtl mov fidivrl out xchg fwait or sub or cli lret subl dec add lods mov inc mov sbb mov cwtl out mov insl inc adc scas int3 sbb gs (bad) cmp jle push cwtl ja in addl outsl mov and iret push lret adc adc (bad) push jnp sbb into nop sbb fwait push lods inc jb mov and mov aas sub push sbb ret orl cmc out mov push dec mov jae aas pop in xor xor outsl push inc nop fstl cltd and jle jbe scas sti ret sbb decl inc cmp arpl mov xchg pop (bad) or sbb mov cld xor mov inc nop cmpl push xchg sub jg jne mov lahf cmc xlat jge dec divb adc xchg mov jge push test js movb dec fcmovb int inc test (bad) dec xor fbld imul push fadds xchg (bad) xor cmp adc jne sub lret xor and insb add ds sub or add lcall (bad) sbb mov repnz push inc repz cmpl pushf cmpsl push push jnp mov (bad) sbb xor inc mov rorl push dec cmp push insl movsl pop mov add mov push les std leave sti iret xchg insl xchg or inc mov dec rcr aaa jb popa push ja xchg fldenv mov cmp in mov push mov call mov sub cs test sahf pop mov xor push xchg pop cmp mov xchg mov push cmp push jmp sbb movsb mov xchg cvtpi2ps mov aam (bad) ljmp xor pop add insb loope ja pop adcb in mov jno push aas jo or push loopne fnsave cld push add jns adc mov jg adc sarl iret push push mov (bad) aam repnz add mov roll mov jb (bad) pop adc mov popf cmc or sub sbb dec mov incl test push cmp and sbb scas xchg in push dec push fstpt pop out mov cld push (bad) rorb or sub mov sub int cli pop xchg adc inc and or adc movsb push push call dec push push pop xchg sub lret imul cmp push insb repz dec or mov xor adc pop loop sti inc cmc push mov add dec stos push xor push test inc dec push push and mov mov int fisttpl ret xor mov dec jnp push mov mov mov jne sub dec ret imul out loop shll repnz pop pop mov mov xchg or xor adc test fsubrl inc mov dec aas jmp or cmpsb jl les int or sti mov add fnstsw cwtl xchg pop daa push jb lret cmp mov mov mov cltd cmp sti jl cs pop adc push push push cmp js lret movsb add inc repnz jmp andl ljmp fnstenv add adc call int adc pop pushf lea xlat iret iret bound dec test idivb mov sahf dec mov add xchg fsubs pop mov xor mov lods lcall push jle leave and sbb or jle and xchg ds icebp and test shrb add jbe je pop jp sub test jbe lcall sbb cmp pushf jnp lret cmp push mov cmp imul push movsb fnsave add stos aam lret stos jl dec lods xchg and jmp (bad) mov out push jo inc mov ror je mov shrl outsl push (bad) stos xlat cld popa xchg fnstenv ss andl pop (bad) jle jbe jne fistpl mov mov push mov nop mov repz sbb jnp iret cmp mov cmp out nop je cmp pop jle push and mov enter call popa adc cmpsb mov or xor inc out xchg xor sbb xor fadds push inc insl lods jl imul stos dec mov subl popa (bad) cld add cmp pop test push (bad) ja cmp add mov out inc xchg movsb jmp scas mov push and ret insl loop pop add (bad) xchg dec int3 jbe adcl xchg bound xor rolb or (bad) xlat dec xchg cmpsl test stos push inc cmp dec or pop fldl lret repnz pop mov sub call xchg mov nop xchg jnp mov pop sub jns inc adc insl in pop fimull fwait add pop inc inc stos mov jae jae adc sub jg pop add cmp lcall push into sbb mov xchg and test jns and push mov movsl sub stos jg sbb (bad) sub pushf mov stos repz pop out shrl push cvtpi2ps cwtl in mov stos (bad) add into std cmpsb sbb push and repnz sub loopne xlat inc jne cmc mov pop push mov test pop test (bad) xor mov loopne in data16 inc mov cmp jg loope ss out dec inc push mov pushf add (bad) xor gs pop xchg xchg loopne mov jmp sub dec scas jmp test fwait push int3 outsb fidivl cmpl xchg adc mov mov lds sti xor out pop adc cwtl sub xchg into xlat scas repz jp xor adc shll enter leave xchg mov cmp shll lods nop sahf (bad) xor jbe cwtl push mov inc mov (bad) jo test push cmp push dec mov pop fidivr in ljmp jge in mov xor aaa (bad) ss fbld pop and je imulb push out and clc call sub outsb mov add mov add gs nop jno outsl push in xchg shrl xchg sub aas sbb mov mov xor out fwait test insl cli push sub test xlat pop or jmp adc jno cmc pop and inc push in jmp outsb adc pop int3 push jno mov rolb test mov cmp aad popf in or sub inc fcomi mov xor adc xor cmp pop (bad) cwtl fsubr test inc sub sub add test mov insb pop icebp add push sub cli inc repz or (bad) jmp adc repz xor xor adc inc leave push mov ss (bad) fimul (bad) or add and mov push and or inc fcmovu xchg pop data16 loop push in test stc addr16 and out in and stc sbb mov add jg fildll jo jne dec xor pop imul js or xlat jp add lahf dec jmp repnz in jl or enter dec mov das fmull mov aad repz das jns pop pop cmpl and stos rclb sub push mov aad test mov adc mov ja inc fsubr xchg xor dec or or scas stc (bad) (bad) dec xchg out mov (bad) and pop mov mov pusha (bad) in shrb xchg stos sbb xchg pop lcall sarb inc pop mov clc jmp jle mov mov addr16 mov scas ss sbb pop cmp pop lcall dec jge into mov ds xor inc add xchg dec test xchg iret popf inc inc and fld je dec insb mov and lds je lea fisttpll je in jle in lret mov sub shlb scas or push jge mov jecxz xor mov idivb ja cmp jae inc and gs mov and dec lock push jns push mov or mov int fcom jbe aaa int fwait cmp nop loope push sub or sub jp stc andps mov jg outsb (bad) inc dec inc push jns enter sub push jge sbb and pop xor jne sub mov cmp cmpsl mov jmp clc add inc ret and push imul inc icebp xlat in enter lea mov mov mov stc mov sub sbb and pushf inc notl pop std int stos add jg (bad) mov jnp dec mov and cmp cld jp popf mov dec jg iret loopne pop (bad) dec adc cltd negl in pop pusha jns (bad) cmc faddl inc and rcrl jg ljmp (bad) repnz fbstp fistpll mov dec and or cmp mov mov xchg stos sbb lds ret cwtl fisubl mov aam sbb sub sbb mov add lret xor arpl fcomp fnsave int3 adc addr16 data16 xor add adc adc push daa jmp lock cmp mov jecxz adc ljmp and mov add jmp scas (bad) sbb mov xchg or scas cltd adc adc scas push or inc cli and pop ljmp cmp fs jmp lds pop push fnsave fstps (bad) or jo outsl sub movsb mov xchg or xor pop inc sarl push sbb cmp (bad) enter std cmp inc lahf clc or mov decb push out adc xchg movsl mov dec nop sbb inc push je out cmp int3 xchg insl inc in gs or mov mov add and pushf mov and mull imul fildll pop sub inc ja or dec dec dec push push pop lods gs ret mov pop dec adc adc ficoml adc bound xchg (bad) pusha ljmp xchg data16 or mov xor call xor scas rcll xor mov nop fdivrl push mov xorl sub jno idiv fs jno not add inc fstl shlb mov rclb aad jge dec cmp leave sbb xchg in xchg repz pop cld sub pusha inc rclb shll mov rcrl in sub adc iret xor rcrb or call xchg inc cmp and loope cs bound repnz nop sbb xlat and adc into sub sbb cmp aad fsubl jge aas push shlb push mov into aam call sub cmpl pop ret dec (bad) jbe add push adc mov jns dec out dec call inc mov out mov fbstp test and push push sub mov add jae stc add sub push and push dec aaa jo loopne (bad) adc outsl pop inc fimul push lret fidivr (bad) repnz jno xchg ja aas fstp aam out scas mov dec repnz flds mov lret add add and pusha lds add cmpb rcr push adc int3 mov mov xorl sbb (bad) fwait je rcrb (bad) push sbb in push add jmp add cmp xchg (bad) cmp popa iret das cmpsb into lret aad js int3 dec cmc xchg push scas jl scas scas rol push inc jb ret lea xchg mov arpl mov stc adc jmp jae test jae adc or cmp std xchg outsb (bad) repz xchg and jp ret mov mov add jno movsb pop push test fisttp roll sub int3 dec sub pop cmp xchg dec int3 add outsb lcall in iret xlat loopne rcll cmpsb pop dec inc pop dec jge mov add (bad) (bad) xchg (bad) pop cli push cltd mov pop gs xor lret jmp (bad) adc cld push mov outsb scas popf mov sti stos (bad) divps and push sbb lods test popa das or pushf cmp pop jg orb xor inc addr16 popf std je lock loop jns mov jns (bad) dec add mov shrl add cmp enter cltd je jg push nop add pusha push mov cltd (bad) and push push push pop aaa in (bad) jmp inc int3 inc movsl aas loope loop or shl das xchg sub lcall lods xor inc jbe adc loop mov and jecxz leave fs cmp call movsl jbe mov insb inc sbb idivb aas arpl mov cltd or and gs sbb pop clc (bad) fcomps mov dec xor and outsl outsb cmp leave mov hlt jae inc cmp and sub (bad) or (bad) sub push push into mov push in hlt mov mov add jbe and cmpsl in mov pop popa daa mov mov mov sub dec loop movsl imul or inc adc sub orl mov pop inc loop mov aaa jb out adc mov iret aas mov pop push xchg xchg push jmp cmc add outsl fidivr jecxz cmp mov adc xlat mov xchg add cltd cs sahf lock stos jno lahf mov stos idiv inc inc les cmp cmp sahf push push pushf sub or inc or dec jle push sbb cmpsl aad call pop ja dec loopne,pn in lock cmp scas mov add push stos ss pop pop lods adc sbb cmp ret (bad) mov jmp arpl cmp mov mov inc cmpsb xchg push sbb add sti outsb cmpsl lock push inc inc xor lret hlt push cmpsl hlt push fmuls mov mov pushf nop gs jp dec (bad) repnz jno cmpsb mov mov xor mov (bad) xor test cmp (bad) insb fnsave sbb repnz arpl add cs dec pop das sar dec push (bad) daa fidiv inc push js loopne adc andb test movsb and int3 mov (bad) clc in mov or shll lods cmp rep rolb mov imul outsl lret or push enter dec xor imul addb insb xchg shrl out mov dec nop fnop ss test mov pop int3 and ret sub and pop (bad) pop or sub xlat cmpsl scas les inc mov arpl insb jle mov test daa push cmpsb fwait aas pop xor or iret ljmp mov jle loope aam movsl jecxz mov aam pop ret rcl mov sbb int3 sbb fbstp adc xchg push or xor or dec jle es jecxz test mov outsb dec and je fsubr sbb pushf fst icebp jne sbb xchg (bad) aad outsl mov lahf jb imul dec stos cwtl lods nop imul pop mov xchg cmpsb push aad cmp out jae inc imul mov cmp cmp inc add push cmp mov push out lret sahf dec (bad) dec shrl les and jne mov mov cmp push mov inc xchg hlt (bad) cmc push mov push or cmp les add sbb pop sbb xchg pop mov shrl add pusha ds gs shrb icebp cmp insb cmpsb adc fsubp mov push adc sbb push cli xchg inc (bad) mov or movsb ret mov notb rcl outsl mov add les repnz jmp xchg or mov cmpsb ret mov insl xchg fidivrl out nop pop and andl sub es inc sub inc mov push js sahf pop adc cwtl ret dec nop int3 push lods and xor int movsb (bad) pop and mov mov mov push inc stc or xor (bad) xchg subl cmp icebp gs lods push call outsb push lret sbb cld push cmp pop fsubl fistpl jge insl lock add outsl mov rol mov jns es ljmp lcall fcmovnb movsl cltd jnp notb inc adc into cmpsb inc fadd clc mov lret mov daa adc into insl xchg pop push das fdivrs add push cmpsb sub and push and mov add inc sub cmpsb and pop clc lret push int sbb cmc ja add cmp cmp fs pop lods out sbb mov lcall cli fdivs (bad) adc mov push out lea adc add jl js adc or jno push push fldcw dec sti test out inc test jg stos mov daa cmp cmp or test push not fiaddl adc add inc push jp shll cmp jbe ss push push dec pusha gs mov add test sbb scas shrl cmp push xchg idivb data16 shl inc repz jp mov sbb rorb aam jge lock cmp cmp outsb cmp ret jle jecxz pop inc cmp mov cmp xlat in (bad) inc add mov in or sbb (bad) arpl and pop leave shll pop ficomp dec mov iret push sub pop fs and jbe loop addr16 fistl xchg jg inc lret xchg mov add push dec pop adc sbb push pushf cmp jg add jecxz out inc xchg stc stos add lret frstpm(287 sub (bad) in sub mov lahf cmpsl add (bad) popa sbb adc call add add jp jecxz and sbb outsl mov or xchg dec pop incl jbe xchg mov (bad) adc addl add xchg adc jp dec lds sub cmpsb inc les sbb sbb (bad) sbb jg jl movsb lea dec pushf inc ja adc sbb aas mov out cmp in jmp sbb sbb test mov pop hlt stos iret push and out cmp stos mov movsl loop das clc fisttpl insb adc adcb (bad) in xor in pop scas test in xlat dec int ror pop iret insl out cmp jl jnp aad inc test sbb or lret jo inc inc out movsb fimull jl leave ja in sub push and jecxz test (bad) xor and mov ss xchg dec fwait divl mov (bad) cmp clc inc mov (bad) lods ret adc stos mov and out scas cmp xlat cmpsb dec loope repz cmpsl in (bad) testb out cli fimul fs add cmc enter mov add aad pop cmp fnstenv dec or cmc dec dec inc jmp mov popa ljmp sub push sub outsb adcl cli jg sahf and inc (bad) in cli scas add (bad) aaa xchg in stc mov std scas or call cmpsb fs pop mov fs imul push arpl imul dec pop out iret xchg stos xchg inc test ret mov xchg pop mov mov fcmove xchg push rcrb pusha mov jae jg sbb lods cmc frstor push lea mov into sbb lock dec inc (bad) pop test shr jp (bad) fbstp int std cmp loopne inc outsl sar popl testl es xlat cmp pop (bad) dec mov mov xchg lods and dec imul mov cmc fstpt and mov and sbb jne ljmp out gs les popa adc out ja mov iret leave add push js scas pushf and cmp cli xor mov in outsb ret fsubs mov mov fs xchg cltd push leave ffreep fs or outsl jg (bad) mov fidivrl dec or dec repz in in xor incb mov xchg gs dec imul adc fnstenv lds inc stos cmc repz dec inc add fst sub das out adc dec jne mov pop cld in mov push ret pop add add cs sub pop add aaa or xor addr16 or sbb pop sub fidivl cwtl clc sarl (bad) mov add syscall mov andl jl das inc (bad) mov pop inc insl xchg push jnp pop push (bad) (bad) mov and test xchg int3 aad mov xor dec rclb rolb aaa mov sub or les rorl aas jae and lds (bad) fucomi insl test mov xchg fcmovbe aad mov fdivrl jae leave adc add fldl pusha popf (bad) mov cmp (bad) in es imul fwait jns imul cmp ss cli fisttpl jecxz inc cwtl xchg add (bad) shl xchg jns ss sbb lret mov pop out cmp rolb push inc adc aaa jmp stc mov ss jae xor push and jbe loop pop jp leave scas (bad) fist dec inc push xor aas xchg dec (bad) mov xchg and pop push aas dec mov inc inc pop xor push sub fidiv cmc push cwtl fsubl mov sarb pop mov xchg pop mov fwait in roll aaa cmpsl ja popa sub and add movsb push cli cwtl push xchg aaa jp and inc test mov roll push mov daa cmpsb fidivl mov in pop push out inc arpl cmp adc cmp jmp (bad) testb pop cmp mov loopne in mov xchg mov hlt xchg pushf dec les xor mov das int or cmp adc adc in mov jecxz mov pop lret xlat fdivrs mov adc std xchg sbb pop sti insb mov push nop mov das dec lds mov xor xor movsb in adc and loop cmpsb incb in xor out xchg pop push cmp out mov (bad) or dec out icebp jmp mov rol lods stc mov cmp dec popa inc sti jb xchg imul cmp or fild xor jae push ficomp push outsb xchg push and dec xchg cld mov lea xor inc test inc bound pop cs out mov addr16 sarl rorl fidivrl mov aas xor or and add es dec push jp loopne (bad) mov or loop into jl mov xchg in andl (bad) int3 xlat imul stos popf les data16 out imul mov stos mov adc xchg hlt fisubrl fildll fistp push jle je pop stc push or into adc mov push add cmp inc cmp inc jns push jnp jg push sub xor movsl mov incl stos pop sub lods and or lret icebp mov ret push push fsubs test jo sbb xlat xor jl xchg jmp lods mov and test pop es and mov mov jmp mov inc adc cmp mov xchg dec cmp ret xchg loope mov mov cmpsl js iret lods add ror cmc test or push sbb mov and sti adc xchg dec stos push push adc icebp andl fildll push inc jae cmpl sbb jne cmpsl sbb ja mov (bad) mov inc addr16 cmp shl jl sub out pop ret dec aaa dec popf jle adc nop (bad) popf das (bad) outsb mov scas or loope lcall jae ret inc bound sub das or inc push push (bad) lret sti fs xor pushf mov push jg jb or in in subl sub mov cmp push test mov mov daa mov cmpb ficoml and pop clc mov (bad) cmc arpl xchg test adc bound lock and out out stc jo out call ret add scas jl jp stos jnp sub push cld sbb loope pop adc sti or rorl call mov data16 pop jnp movsl pop fs push daa fwait mov pop rorb mov pushf test je adc test out insl pop mov scas mov cmp subl push es pop or orl sub push inc (bad) xor js rol in mov add xchg sbb lds mov cmp xchg iret jl adc dec out ja aas imul pop pop mov mov xchg xor (bad) pop mov int3 mov mov and jp cwtl ss sub js outsb out gs out dec int mov sub sub pushf xchg fnstsw xchg incl pop mov adc inc data16 lcall xchg or or insb je fildll aad inc inc add push and daa jg jg rorl mov ret cld and repnz pushf ret mov jle sar inc fwait or xor bound jbe xchg pop sahf pop (bad) mov cmp push cmp fwait insl pusha mov jg pop adc inc ljmp insl mov inc mov xor sbb xor cmovge rol add pushf test aas fiadd loop mov fild xlat inc push push fstpl inc je ret sub rcll loope sub cmpsl mov lods pop xor shlb das cwtl ret add add dec ret sbb ljmp sbbb xchg pop sub rcrl push aad ds sbb arpl xchg sbb mov inc sub add push lret inc xchg cwtl sbbl orl hlt imul push sbb ds dec jp xor stc inc gs pop lahf enter mov add xchg dec das inc fldt inc pop movups inc xchg jnp lahf mov mov pop fwait and jo xchg dec push imul jmp add rcl mov xor icebp mov iret and push xor pop out leave xor sub adc sbb mov jbe push mov adc push mov pushf add out push arpl fwait cmpsb jle jmp shrl xchg leave xchg imul adc inc xor mov sbb out xor test outsb lds ret jmp cs dec pop cmpsb pushf shrb dec mov addb call jnp mov clc lods gs outsb push sahf sbbb popa pop sub lret ret mov in cld pop sti lock iret (bad) mov movsl mov or ret dec stos js sbb nop push pop pop jbe add outsl test dec mov dec les cwtl loopne imul cmp orl adc push (bad) mov in gs or insl pop pushf les pop icebp and push cmp adc aaa aad inc push push addl stos (bad) push or sahf xorl insb div es inc sub (bad) int3 test mov dec and push sbb std pop sbb outsb imul arpl jl sub rorl fidivl mov lods cmp out jne mov out xor mov sub inc push jecxz ffree push int3 sub jge aam icebp pop and push add inc xlat pop sbb adc loope das lock jnp fwait bound enter jns fnop push (bad) rcr ret mov sbb sbb push les mov clc pusha add arpl fwait xor fdivl or clc xor incl fcomp leave xchg sub sbb adc imul lods xchg neg and lret (bad) jle and dec inc adc das add push cmpsl sub scas push ret rcrl into (bad) adc adc and adc hlt fucomp out arpl bsr xchg fwait popa ljmp ja (bad) mov or in pop push std mov mov loop gs mov cmp inc loope add cmp movsl xchg movsl and subl mov stos repnz into pushf add mov dec jns ror imul adc repz aas add lret inc ret sbb dec out or sbb (bad) ret aad (bad) mov sbb and mov jmp xchg mov fiaddl sbb int3 lock sbb pop icebp mov and cmp bswap ljmp inc sub arpl mov mov xchg fidivr mov mov jl cmpl loopne lods lods stos inc mov sbb rol imul inc fcoml add add pop in pop inc movsl mov dec pop push mov lcall mov push loopne add stc mov mov aas add push fnsave fdivs es (bad) outsb sub cmp cmpsl movl enter add stc clc clc scas arpl pusha aaa mov out out (bad) outsb outsl inc addr16 jle inc mov dec loop jl movsb add jae mov push cld sbb cmp shr mov mov into xor lea enter mov insl daa std cltd lahf loopne into jb mov mov gs scas xchg sub dec nop leave adc mov loop inc sahf inc vmovupd insb repz dec fwait aad out or or (bad) pop mov outsb rcrb call ss mov mov lods clc outsl fwait es mov (bad) cld outsl or mov cmp scas or arpl jo mov insl movsb cmc out xchg movsb loope dec fdivr adc add jmp sub push jge movsl push inc nop pop cmc popa dec sbb mov aam push cmp or das jecxz xchg mov mov int3 jg popa push aas dec mov push adc sahf in push rcll pop jmp inc cmp stos enter addr16 aaa cmp push leave (bad) jno call cs mov xchg outsl out mov jnp cli (bad) inc (bad) xchg stos jbe lock repz into imul outsl aas push fwait in inc subl lret mov jl jge in loope xor adc or jmp arpl jecxz iret inc leave scas loopne lods stos inc idivb xchg sbbl mov (bad) mov rcrb xchg pop mov xchg fsubs xchg jne addr16 pop movsb cs push cmc mov ds inc addr16 push mov cmpsb jge or jbe xchg ljmp es mov and cmpsl pop out or icebp jno int lret stos jbe loopne or push icebp sub (bad) mov (bad) mov pop adc cmp mov inc jmp inc xor push shrb inc divb test mov jne outsl dec in mov jmp cwtl jecxz aad (bad) xor cmp imul jae es imull xchg loopne nop cli xchg into jmp sbb cli cmp sub ss mov lret popf (bad) jbe jo fldcw inc aad xor pop dec xchg in push mov adc test cltd fstps adc jae mov mov das movsl pushf mov sbb or and push pop mov xchg xchg or add jmp insl das jne cmpsb aam popf and or xlat push cwtl jecxz into enter pop nop and rcrl loop test pmulhw nop and inc xor mov (bad) es ret hlt cld add push and popf sbb rcrl jp sub and fcmovnb fs jmp inc test ret lret cmp lds jb (bad) cmc push cmc cs mov stos cmpsl popf mov (bad) push xor xchg or fs out or mov pop inc lret mov mov push cmc stos sub adc int loop stos push and inc (bad) sarb or dec xchg outsl cmpsl movsl pinsrw inc pop xchg cs cmp inc cmp icebp notb xchg adcl sahf adc jbe inc xor loopne mov arpl xchg popa cltd jnp jg mov push movsb sub mov jg out stos push or cmc movsb dec mov mov jl out (bad) nop and stos loope and push mov inc jb fnstsw addb push cmp std fisubrl mov mov xor jo push xor scas push jae mov (bad) sbb xchg call lret mov jae test fiaddl mov and subl inc push sub inc mov sub xchg cmc lock jg fwait add dec stos jns outsb mov lock xchg (bad) fwait mov fmulp lcall sbb stos lock mov push xchg or in bsf rolb pusha ljmp repz faddl pop rcrb das add adc outsb xchg insl push cmc stos ffree pop aad add mov movsl test cs inc nop lcall inc mov add xor ret ficompl repz out pop movsb ds sbb lods out adc jmp sbb mov out fs pop push inc (bad) xor (bad) xor fistp xor inc mov jno out cmp (bad) mov inc jp xor jl fs jo out lea loopne stos xor addr16 dec int add mov cmp mov sub insb jg adc mov pop mov cmpsl pop gs and pop dec movsb lcall pop jnp and adc push cmp fsubrp sub mov adc arpl mov or lcall iret dec push push jo jae pop push into mov adc jns pop popf stos cmc ja jg and mov aad int3 data16 mov loope push pop jnp aad xor imull clc in fldl out sti sbbb and and in inc fild pop stos mov pop mov popa push xchg ss xchg and and or shll iret repz cmp cli std into ret fcom inc push sarb pushf dec pop xor jae jmp sbb sbb mov xor test sbb mov out or push aas xchg sbb dec in adc (bad) add imul pushf not sti mov push ds shl mov aaa lods les popf clc loope lret or adc ffreep shll jbe mov xchg pop addb push pop pop popa mov outsl clc popa or shr out adc popf call cmp popa (bad) fxch divb test sbb dec cs xchg adc xor enter and mov fisttpl push repnz xchg mov hlt push dec std sarl mov loop int xchg cmp mov mov aam movsl ficompl push xchg sub mov outsl inc sub pop jge std stos dec leave jmp pop outsl ljmp aam sbb ffreep and push rol jecxz sbb ret out sbb pop adc adc pop mov repnz outsl jo (bad) push out adc pop inc sbb aad pop dec cld add inc xor mov cmp shl in xchg repz xor stos push (bad) or cmpsl (bad) arpl mov and mov fild sub insl je aam fidivl sub jae fdivs out inc test lods (bad) jl lea mov adc ds jmp ja sbb push pop xchg and rorl pop jbe mov enter push adc or sahf sbb je out lret jmp fisubl mov push and movsb sbb mov xor test mov rol ret int3 daa add mov sbb push push xchg mov negl std push add pop pop lahf lods pushf xor mov push fidivrl cld pop outsb jb mov addr16 int and aas jnp int3 or cwtl aas push pop cmp and rcrb popa push stos sub sub mov dec sub mov ljmp sbb fdivr xchg mov out jge cld stos std mov xchg jle inc pop push mov pop daa mov pop xchg (bad) test push test dec jg das into mov mov stc and aam fmull iret jmp xor aam push lods jl fidivrl push or and and movsb lret xchg sbb jmp insb popf xor stos push cmp mov (bad) pop sbb sbbb sti stos daa leave jnp popa dec inc adc adc fs (bad) jo inc (bad) loope insl cmp jle mov decb xchg nop lds lock daa push pop push sub jo pop cmpsl repnz pop xchg lret (bad) mov in and add pop popf dec cmpsb mov dec sbb movsl and in mov dec and ds push mov shll (bad) scas xor in ret gs fldcw sbb sbb inc sbb mov mov fildll aaa daa xchg sbb int iret mov in sbb aam cmpsb xchg mov adc lahf scas sbb lods mov mov mov add jecxz fdivl adc dec fild mov or adc adc stos jg sti mov mov leave call push and in cmc cli xchg rcll fwait inc inc inc mov fstpt dec fsubrs lcall das ja lock lahf lcall inc mov mov sub into dec scas push xor aaa das jecxz adc mov iret add in push scas in rcrb fbstp cmp push add mov enter xor gs cmp jne dec jg sub in jecxz xchg pop inc cmpsb sbb stos das mov inc inc push fs movsb push mov jnp ss mov mov lods mov add mov push test rorb ret inc pop arpl and les pop pushf inc fnstsw push sub add loop fcmove ss xor outsl sahf loop sub repz push js stc out out mov sub adc push push (bad) adc test out push xchg lock test rolb jecxz xchg sbb dec pushf xchg dec inc call or push adc dec stos add sbb repnz xchg mov push mov xchg xor inc (bad) js repz enter adc cmp stc adc adc addl push scas (bad) imul lret lods addl movsb arpl jecxz dec adc sub cltd xchg fcmovu inc pop in aas mov fnstenv xchg xchg lock xchg (bad) jb shrl dec or sarb and push lret mov cmp aaa mov cmc scas dec xor stos aaa sub jb cmpsb and sub inc mov xor insl imulb fadd test iret fwait sbb ret and cltd imul insl xchg jmp lret out jg mov jno (bad) and inc repz mov sar (bad) sub mov pop pusha into sahf mov loopne jecxz lret stos jne and adc ret sarl xor cli push call (bad) js push pop pop cs xchg add int3 mov xchg or jns jle pop mov cmp xchg fstl mov (bad) add out scas addl mov dec movsb pop add pop (bad) jae repz repz inc xor cmc into out clc inc pop fnstsw cmp mov mov aas cmp mov insl loopne pop push jb outsb add jns lock gs sub ja lods rcll lret test inc aam jnp dec sbb jnp dec mov jne popa imul jne push imul push cmp mov mov mov xor cld and push sbb dec mov sbb (bad) and shll ds adc loop mov in mov and and movsl inc out cmc jl mov xchg pop (bad) xchg fnstsw cmpsl xchg mov cmp xor cmp lock lahf adc mov xor (bad) mov mov mov inc xlat fs xchg or mov ret jmp pop cmc loop push cli push lea outsb movsl xchg cli shl mov das pop (bad) and ret xchg adcl arpl jne jge sbb nop adc push sbb pop jns icebp mov dec mov es push fnsave mov imul mov jno outsl or or sub out pop sub inc xor les gs cld inc jb sub insl xor xchg pop sub imul fidivl mov push (bad) stos pusha fild adc pusha movsb (bad) (bad) xchg stos std cmp jp mov xor loopne add (bad) (bad) pop push (bad) cmc dec add pop aaa lock lods in in jle das mov mov ljmp or stos xchg fs fstps and mov mov dec push lret mov into inc dec mov enter xor inc call (bad) lahf mov and mov test xchg sub jl in mov push dec adc mov and mov loopne imulb int jne xchg dec sub mov push fmull movsb aas cmp iret pop arpl jnp mov inc sbb adc add insl and mov inc popf push inc incl loopne sub out sub or add mov aaa daa xor push pop ret add pop push cld loope mov sbb pop mov cld aad rcrl sub daa xchg andl jno mov or jbe,pt lock (bad) dec xchg dec add cmp jp stos inc std mov cmp cmpsl daa popf sbb fsubs pop stos test adc sub mov call loope xchg cmp pop cld out ljmp dec int3 mov and and mov (bad) stc hlt movsl mov in nop scas pusha bound vandnps pop shrb adc sbb (bad) into and mov mov scas stc dec ret push in mov fistpl jecxz jmp or inc mov mov pop and lods jecxz js inc push mov inc adc add inc xchg xchg cmp mov mov les fisttpll test out or cli or pop cmpsl adc lahf dec (bad) notl cmp andl xchg pushf sbb lods xor xlat std add out cmc xor call popf jecxz inc mov addr16 (bad) jne mov sbb lret shlb shll dec push xchg mov cwtl cs sub or mov xlat and mov or pop inc sbb stos sti lret scas test xchg (bad) and mov push out test lahf push pusha lods mov pop inc xor cld inc pop xchg cld inc pop jb data16 xor mov inc dec or (bad) pop sub (bad) mov mov mov cmp xchg push pop shlb ffree add je xchg jmp inc mov flds ret testl sbb mov es pop data16 mov pop inc inc iret mov out push pop sarb movsl xor cmp and jae add mov xor clc loopne inc insb pop in jl dec cmpl cmp cli je data16 je nop sbb out (bad) into jg mov je mov xchg add cmp outsl sub fdivrp xchg (bad) cmp xor xlat pusha dec xchg jns xor mulb fisubr cmpxchg pop cmp sub aas stos jno addl es sub sub mov je xchg mov push (bad) xlat call mov lea jge daa push add ret jb push jne jg ss jne pushf xor icebp insb into pop mov int3 cld inc and mov das inc or lea lods data16 xor pop je mov or mov nop lds cmp in and pop nop mov fidivl pop arpl jno lcall pop adc xchg pop jp mov xor or mov push sbb cmpsl daa data16 and xchg fildl sub and mov pushf xchg dec jb (bad) test cmp xor mov xchg mov lea cmp mov cli daa cmp daa fcmovb dec lock lea mov (bad) dec fiaddl (bad) jno jno aaa jae loop dec shlb pop outsl idivl jnp stc lret rolb je inc imul jns jbe ds dec das loopne stos fidiv lods out popa and and clc test inc mov dec xor dec daa rcrl int dec mov mov sbb repz mov shr inc sbb (bad) xor add in adc adc mov xor jnp decb pushf movsl mov xor jbe call lds pop dec jnp jp imul xor and jg popf jmp xchg push rorb xchg mov xlat loop xor aaa cmp movsb scas repz int call xchg xlat and out iret popa lds popf jmp in rcrl push mov sub ljmp pop aaa scas fsub pop xor jns dec pop repz xchg adc xchg stos sub pop mov push sbbl call inc out fdivp lcall test std lcall test lock pushw cmc or xchg sbb pop inc rep adc dec ljmp mov pop mov sub cli lret xchg and jne imulb pop test jge jg movsl fs or sub (bad) jecxz loope push add andl pop push int call inc mov jno xchg push out mov adc mov pop jecxz jae cli cltd push clc inc mov sbb push ljmp mov gs int3 mov insb cmp jmp mov (bad) adc rcr xchg test aas add hlt mov add inc cmp ss fidivrl fisubr cmpsl lret jmp fldt mov lods (bad) adc mov cs cmc mov imul xchg fwait xchg pop sahf sub shll and hlt insb mov mov int xor cli add (bad) sub inc dec add call cmp je dec mov cld dec xor es (bad) in mov xor mov jnp or mov xchg out xchg push in mov sub dec nop dec aad jp lea inc adc push mov outsl xchg fldcw push insb sbb cli jbe and and outsl notl mov ljmp ret xor mov xorb xor xlat bound iret push cmp jno les pusha data16 mov jb jmp mov or push mov fs push push scas in mov and jbe jnp add rcll jecxz mull ja and mov inc jecxz mov jo cli push jg mov dec jmp jae hlt xchg fldt or mov add add cmp cs xchg test cmpsb jg jge adc (bad) cmp jmp mov mov sub pop cs out (bad) je xchg sub add mull popf ficom es dec gs mov xor sbbl (bad) mov repnz pusha sbb arpl mov loope pusha adc int3 lods xchg mov out add jbe cltd cld push cmp sbb jnp fs xchg sub and and cwtl outsl inc cmp aaa cmp sbb sarb inc mov enter daa jp lahf arpl sub faddl push sbb dec aam insb fimull dec push sbb push outsb test (bad) mov repnz pop nop das inc rolb mov test mov stos popf jecxz push jne repz aaa add ds and imul pushf inc lcall loop test js or adc or mov add inc xor mov xor sahf jae fcompl jne inc aaa mov or xor in jns mov push (bad) stc cmp push mov pop jne sbb imul mov loop dec pop or loop sbb or sub jmp dec pop sub jae out adc (bad) jne or cwtl xlat xchg pop xchg pop xchg xchg or sub dec add addr16 push int int outsb jge out lahf nop mov xchg xchg and cs les iret dec les pop sbb jle aam xor push les sbb or and pop popa fs adc pop icebp shrl mov jb mov das add loop sbb mov mov call mov enter pop ja imul cmp bound push cmp lea dec loop cmp inc jl,pn xor aas xchg rorb into xchg rorl mov push xor sbb and (bad) fcmovnu inc int3 outsb adc es xor fucomip adc movsb cmpsl shl in mov lahf xchg pusha es sti addl inc fistl mov or and dec int3 push test ljmp mov pop xchg into lock sbb aas test fmull (bad) sahf cmovnp loopne jp fisttp or outsl popf add fdivrp imul stc jb mov sbbl fdivs jae jns std (bad) mov or cmc daa add jns in jno xchg pop add xorb ljmp lahf mov xor xchg push lret sti or pushf lcall xor mov cmpsl mov clc push ret push xchg andb and mov fistpll adc stc mov sti mov push jp js,pn leave insl dec cmpsb jnp adcl int3 pop in jmp fsubl insl out (bad) cmpsb ret ss sub mov imul xchg dec in xor clc dec adc in addl test loope test sahf fiaddl ret test lods jp or push ss leave lret jo xchg fwait cs leave pop into and movsl jo divl cmpb addb push mov mov pushf jle jle dec rorb sar enter xor push lock pop push push out ds fucompp jns pop out sub loope mov pop xchg mov push cltd es inc xlat cmp pusha xchg adc movsb dec jbe cwtl mov out rol fiadd (bad) ljmp sti mov stos ret mov fucom ljmp lahf jb xor xor mov icebp pop adc fwait pushf or fwait xor sub data16 inc sarl inc mov inc fildl ret (bad) loop popa push push lods inc out das andb lock cmp (bad) pushf test xchg aas (bad) fs mov cld fidivrl sub or sbb (bad) movl pop and jmp out lcall lods fbld push cs pop repnz out jnp,pn ss jae pushf pushf pop sub add (bad) loopne xor inc jno mov movsb jbe fwait test fs lret lods add sbb or push movsb dec mov notl pusha sbb popf push push push repnz xor push cmp (bad) jl pop mov jb mov mov pop test sahf ljmp addl popa outsl xchg and ret jge jge cld shlb add (bad) mov js iret xchg mov shr (bad) iret sub and test call popf sub jmp cmpsb pop bound jbe repz in pop jne push ljmp iret nop lods mov cli and add jl pusha or aam mov jecxz not add sub jmp out cwtl insb lock cwtl mov je push jmp cli ret push cmpsl jne mov mov shlb insl mov daa rol adc stc stos negl ret aam je mov dec (bad) and xchg sub fs or lea cmp shrb xor imulb ljmp push icebp mov scas roll gs pop (bad) jl std insl les imul sbb ret insb pop in jmp stos lret std mov loope push icebp outsw out and and mov jmp inc stos das mov inc push sbb jns push icebp add sbb mov cmp pop fs je stos sbb pop cmp popf (bad) mov adc mov sti dec fwait mov and inc cltd add int3 (bad) loope (bad) js sub jnp test movsb mov xor sti sti inc xchg daa mov das mov repnz mov mov cld xchg xor push and ljmp clc lds jge inc ret mov repnz bound je insl dec inc aad push das scas sub sbb gs push fs outsl jne pop mov pushf mov mov jb lcall inc mov ret std mov cmp repz mov leave push xchg call and fs ljmp ss ret ja adc xor fisttp insl cmp cltd cli inc push push scas adc pop inc repz pop sahf dec and sbb pop repz add pop imul (bad) (bad) adc (bad) jl out in inc lea pop jne das cld sub mov xor and mov (bad) icebp push cmpl insl jmp xor fucomip scas dec dec (bad) and leave fwait adc sub lods cltd jo lods cltd or sahf adc jbe add adcl movsb xchg fadd jns (bad) xchg push insb jge pop and sub bound push data16 aad (bad) jo pop movsl jmp (bad) outsl pop mov (bad) idivl mov jo sbb adc (bad) ss cmp xor push xchg (bad) xor mov das cld into cmp roll xor cwtl addr16 popf xchg mov jle adc test push imul xchg cmpb andl xchg jmp lods repnz add push push jmp or mov scas in pop adc (bad) mov xor jne std mov andl lods (bad) mov lds icebp fist sbb xor sbb lds xlat jge std and xchg pop mov or or aaa mov inc aaa inc cmc dec xchg dec inc es sbb movsl stc insl loope stc cwtl icebp lret call pop in mov into cmp repnz aas hlt dec scas or sub aas cltd mov lods ret jo mov push or bswap stos push lcall mov xchg mov popl push mov and adcl lcall orl or adc and popa cmp out pop adc cld xchg and and sbb xchg je,pt leave inc mov xchg sbb mov ja jmp es sub int3 arpl pop (bad) push push scas or xchg (bad) push sbb adc add dec ret and adc push inc mov outsb or or xchg jne gs inc lret push mov push fdiv mov sub cli dec dec or jge std rorl sub cli sbb xchg out fisubrl enter dec lock cmp add or cmp inc push mov mov push sarl push lahf and or xchg pop loopne ficoml sbb loope push fwait ss inc in stc arpl adc add and sbb imul push cltd sahf bnd jle idivb cmp sub (bad) lods imul fisttpll neg push insb mov xchg icebp pop aaa mov cld int (bad) int3 xchg cmc ds out xor xchg out add inc jge xchg push sub repz fdivs and inc xor inc cmp lods inc lahf fsts ljmp lods orl outsl sub push ficompl sub ja inc (bad) notl or or repz scas out cmp mov hlt mov imulb mov push and mov sub bound mov mov imul pop sbb pop or mov clc mov lret inc dec nop fnstenv int dec outsb sbb sub test mov mov xchg imul cli cltd loopne clc dec adc mov cltd addr16 push and cmp xor push hlt sub shrb movsb mov jecxz fs mov mov cmpsl ljmp test loopne mov mov mov iret scas sbb pop fstpl sub das cld add dec xchg xchg daa daa (bad) cmpsb aaa popf xor mov and xchg js imul pushf sar xorl fdivr pop mov sarb cmp stos es jl jecxz leave push and or inc jns xchg jecxz mov sub int jge sbb add xchg and push shlb sub push inc call or xchg test test iret (bad) mov and into jle pop push rclb mov roll fwait adc or or push mov (bad) insl adc mov push sahf scas fstl adc jbe pop popl inc pusha andl adc stos mov cmp lahf mov rolb mov cmpsl in push xlat daa movsl add arpl into in (bad) or or cld scas sub xor jmp movsl jg int cmp mov pop sarb cmp push add jmp xor cltd dec outsl aam sti mov (bad) mov push pop int xchg int3 andl xchg aaa test divb cmp das inc lahf jecxz push fisubr add dec out jle or por (bad) xor mov iret into jno or lds jnp out test inc insl mov mov xchg enter dec test fidivr push mov iret jge pop xlat xor jg (bad) sbb adc pop jne add xchg xor fdivl xchg pop test cmp loope jecxz lds pop mov jmp (bad) lock call jae (bad) mov out (bad) sarb lret or out push jecxz or sbb dec dec xchg or test pusha push icebp jns movsb cmp lahf in mov call loopne arpl cmp jle je das mov into push enter insb sbb in cli or xor push sub test fimull fs mov cmp fisttp daa sbb ss push cmp iret in mov mov mov sbb cmp jno sbb sub or mov test icebp sbb int3 push sbb jp xor cwtl xchg sti push adc lea int (bad) dec mov ret pop scas rolb push rcll xchg pop gs (bad) into mov xchg dec mov xor ja xchg cmp mov xchg clc mov popa cmp mov sti xchg mov dec cmpsl push jnp rorl sbbl mov jb push in fcoml jne rclb ja pop aad pop nop lods ja (bad) sahf stos shrl setg mov (bad) lcall nop repz inc xor lods push jle negb or (bad) xchg test mov jle (bad) sbb not add push mov pushf nop cmp jnp je hlt xchg int lahf pop pop jmp cmp imul (bad) fs and xchg fs sbbl inc pop data16 fidivr pop nop stc imul cmp cwtl loopne mov dec dec xchg mov out add add pop xor aas jecxz sub jp jge mov insb jns lods ret sub cwtl jo in push pop sbb mov out mov jp fwait cmp dec sbb in int in out daa fidivl xchg xlat add jo not data16 out out or movsb mov fidivl leave lea cmp adc push cmp xchg dec dec or or out inc int3 fcomip sbb cmpsl (bad) rclb dec loopne inc mov daa shrb rol mov fwait add je js sub gs xchg push push sbb cmp mov ljmp out test pop and lds out sub mov mov test movsl and es sub dec and sbb stos rorl dec dec mov pop pop mov aas mov mov aaa pop ret pop fldenv inc stc cmp out inc adc in mov jge ficompl jmp push test daa xchg lods mov and mov push xor dec out add inc pop mov inc add subb ljmp test xor jns xchg rolb sub push cmc decl lcall mov xlat loop xchg stos fiadd or sarl push es xchg das fldl mov iret jno aam mov fmull aam scas lea push jecxz in int3 sub push xor add jns mov and cmc iret mov pop or data16 dec scas (bad) mov mov xchg stos push mov mov (bad) lret push (bad) adc stos inc aaa ret sahf jmp mov pop sti shlb xchg dec or jge (bad) xlat cmp push mov dec out mov call or insb lret dec and cmpsl adc push push push cmpsl ret fs int push dec popa pushl and add daa mov adc push (bad) lods ja stc mov scas add mov lcall push push xor cmp fsts adc inc mov cmp lods jp jecxz cwtd int cmp out insl sub into bound jle popa inc ljmp sbb cmp sarl aad xchg mov and cmp scas insb cmp jno inc outsb nop cmpsl movsb dec adc (bad) or stos aaa aaa mov (bad) lock sub cmp xchg add mov cltd mov outsb cmp cwtl fs ror and sub mov jbe test divl add mov pusha rorb jbe outsb mov sub hlt mov adc dec dec jmp aad cmp cmp mov adc inc and lods ret sarl pop push cmpsb or and rcll cmp enter mov test sbb imul adc xchg push fwait enter sarb lock jns lods fcomps mov or mulb jbe test movsl sbb enter xchg jae jnp in mov jne into push repz or imul ret or imul dec jp insl in or mov gs or mov stos imul (bad) pushf mov rcr sbb lret (bad) cmp jle lcall div addr16 cmp popf insb xlat in sub test ja pop or leave pop out xor xchg orl jecxz jge aas and inc cmc mov fdiv sub push test mov test mov (bad) dec test rcrl pop push pop sub xor test test xchg mov jp jae fadds movsb push push sbb gs dec fistp jne adc out push jbe lds mov shlb leave call fmul push sti enter out fmul mov std insl aad mov test in mov xor mov jge lea add jp inc outsb (bad) or mov mov insb cmp xchg fnstsw adcb or cwtl or xchg cli in lea sarl jp adc mov sbb xlat push xchg push in out mov iret push mov lcall cmp arpl movsb adc xor cmpsl or sbb (bad) cmpsl sbb mov mov sbb sbb insl dec aad popf xor jne mov jmp leave mov lods sarb aam fnstenv js mov stos fiaddl mov loope fstpl test mov cmpsb lret int3 sub and stos bound pop or xchg and enter cwtl xchg xor mov (bad) sarb cld add pop mov scas inc mov mov push jo push setp lock sub lea stos in fidivrl jg ficoml adcl fisttpll out daa mov sbb out fwait push mov ret rolb mov xor dec pop lret aaa dec cmpsl out mov cmp pop les dec mov and repz sbb mov cmp clts adc cmp pop loope or adc adc or ja pop jle jmp jae adc xor cltd jae mov inc push dec inc mov arpl mov in add fscale icebp arpl and adc xor mov cmpsb lcall loope das pop push outsb lret cmp push jg fsubrp aas sbb xchg push repz mov andb cmp fs dec imul mov cwtl cmp lret mov xor outsl mov test and mov add xchg jb das add add iret jmp mov and push gs adc loop roll or pop push shlb add and or mov divl sub jne repnz dec cmp sahf adc loopne (bad) mov push daa push mov push dec push ficompl enter sub push push loop add or fsubs mov pop xchg loop aad (bad) lcall scas div and in je sub inc lods sbb pop mov add push sub fsubl cmp ret sbb sahf (bad) dec add or mov jge sub pushf adc insb mov dec push (bad) jno pop pop mov xor push mov pop and dec add in in daa cmc and push imul push push aaa dec fbstp (bad) int icebp call pop sub lahf mov cltd mov inc push or mov inc dec xchg lock pusha scas push (bad) insl faddl xchg and cmpsb leave inc insb scas mov jp adc pop pop jns pop adc enter (bad) pop outsl jo in push lds testl jle shll nop stos inc dec daa scas rcr sub fwait repnz add sub decl adc push mov jmp popa aad jge or fstl sbb ret lahf jmp sarl pop xchg push pop cmp sbb sub sub les mov sub xor lahf in sbb cmpl test mull into jg call push xchg sahf ds cmpsb mov push push mov mov adc decl fiadd mov dec sahf mov lcall ds cli xor add sub scas inc or ds xor add add add mov sarl ror push xchg xchg pop stos cmp mov repz cmp movsb fnop mov fwait dec dec or dec xchg and lret mov sbb jns icebp jno adc inc dec cmpsb pop pop jg cmp pop mov mov test je lds sbb movsb jge popf push imul sub repz adc adc xlat mov ret js sbb lret test (bad) or add in dec cmpsl push (bad) cmp or jno movsl outsl mov fsubrp in xor mov sbb xor dec pop ret loope push lret mov lods push lret xchg pop xor sub cmp cmp sub fld into mov int3 mov jl dec lret dec (bad) lcall sbb inc inc test iret les push sbb lret jmp loop shlb sub xchg cmp sub mov jbe mov std aad jns sub mov fucomp jp (bad) cmpsb jns xchg xchg jbe jmp sub push sti and aaa push push cmp mov pop test cltd add (bad) leave pop lret and lret dec xor or xor mov out lahf jecxz cmp cmc inc sbb movsb leave jle pop add xlat inc or inc adc roll std jg pop gs (bad) ljmp cld or xchg jle inc dec sbb popl xchg fcoms leave mov into fdivrl inc cs fdivr (bad) dec lsl leave adc addr16 (bad) stos mov arpl int3 mov fsubrl push orl lds lods aam imul ss (bad) int cs popf and sbb and clc dec inc sub je out adc mov push and dec xor das std or jnp mov scas mov push (bad) in mov add ret test push mov (bad) lods jmp push ja mov lcall jp xchg icebp or ret loope (bad) mov mov inc arpl xchg int and fdivs push jge sti jge outsl cltd or lahf mov jmp xchg rcrb rcl jns ret jg mov fldt loopne dec (bad) mov mov scas scas ja sub pusha dec xchg lret iret sub insb pusha mov out dec jae adc cmp insl popa push pop sbb inc push scas add jb inc pusha (bad) and inc mov js pusha xchg sbb cmp dec mov add adc fildll imul sbb xchg scas icebp fsubrs out popl daa mov sub repnz lahf cmp or pop and (bad) repnz cmp repnz fucomi mov cmp leave mov push xor scas add out adc xlat jne xchg stos mov cmc cmp sti roll lahf mov into xchg jmp add push int inc and lret mov dec data16 lcall aam dec aad insl jno mov cwtl mov arpl sbb xlat les test or inc cmp mov ljmp inc cmp inc add or mov mov sbb add subb adc or repnz dec rcr inc xchg je btsl stos into hlt (bad) jmp adc or je cmp (bad) shrb sbb lcall xchg pop mov jge sbb push dec jo and stos ficomp mov aas cmc aaa push cmp or xchg insl movsl mov shlb and push cltd fs push mov aad inc mov and cmpsb and cmp mov mov mov mov push cmp lods mov ret sub inc xor stos sub cmp loop sub insl aad pop cmpsl pop or xchg sbb sub repnz inc cs (bad) imull clc insb mov popf jns out imul insb lea xlat mov and sbb push subb mov or cmpsb sbb sub adc jns sbb andb popa and mov xchg rorl sub adc loope in scas hlt xchg dec movsb pop ljmp stos pusha xor dec out int iret or add aad subl adc (bad) in in out int (bad) testb push pop cmp arpl jl addr16 je sub cmc fnstsw stos int3 add add and shl pop std adc fs or lock push push xchg mov xor std fildll mov sar mov ficomp jae negl mov dec sbb repz dec popf xor (bad) in mov gs ljmp sbb mov pop push fwait rcr nop xor mov mov aaa xchg mov stc jae pop adc sub pusha sub pop pop (bad) aam pop sub cmp xor ja fbstp cmpsl jnp shr mov mov cmp rcrb icebp fisubrl lods push push mov dec popf insb sbb pushf lods cld xor sbb jle fs cmc pop nop fcmovnbe das mov outsb inc mov test sub fistl push push stc cli bound out add dec jp ds leave fidivr push mov (bad) adc dec rorb dec fxch push ja pop mov clc xchg pop (bad) stos cmpsl insl push mov mov sar and loop sbb pop xchg mov adc xor inc movb lods addr16 push push fcmovnb inc (bad) xor xor mov jl (bad) push sti mov xor pop mov cmc call mov imul ds in lahf hlt xchg jl mov dec xchg jp mov pusha test or mov dec push test dec popa cmpsl push xchg inc inc adc dec aam daa mov lahf sahf enter aas je adcl pop cltd mov mov jns push or cs in dec dec aaa jo pop xchg outsl cs addr16 mov push fcompl mov mov outsl loope xor push cmp aad add cmp sub cld fwait inc xor mov inc push add mov cmpsl addr16 aam orl (bad) cmp dec adc push jnp or mov push shrb inc rorb sbb idiv push pop cmp lret (bad) into or inc push push add jb jg xchg and jno aaa push out int test adc xor adc mov lea outsl or push cltd fmulp mov fstpl ficoml mov dec in in jl jbe pop xchg imul mov cmpl cmpsb mov dec rorb adc pushf cmp dec sti imull sbb bound cmpsl add push push fwait out dec (bad) aas hlt cmp mov or imul jnp fcoms lods out mov adc jle jnp js subl loop jnp ret xchg repnz sbb fmuls push inc mov or das ficom adc mov out sub (bad) out sahf cmpsb mov pusha aad cmp xchg sbb test adc (bad) jb push dec or enter add jp inc sbb and fsubrs mov fs fdivl fs frstor leave das push das mov mov xchg inc pop scas fldcw fsubrl cmpsl out xor cmp mov stc loop xchg popf std inc adc out add loope mov (bad) and xor mov sbb bnd cmpsb inc adc mov popa sbb pop jmp mov mov imul in (bad) lock lds jge aad pop xlat loopne xor fsubrs push jmp sbb pop sbbl dec mov (bad) jmp pop addb pop (bad) fsts rolb arpl roll add roll sbb cmp or pop int cmp lret mov mov adc sub mov les sub cli push lcall pop mov and bound and mov in xchg in xchg and cs enter jae and lock pop sbb xor mov not push (bad) test jecxz mov push mov dec sbb adc pop (bad) jo imul loope mov sahf push cmp movsl adc lock cltd imul xchg mov in mov mov cmp mov int3 int loopne adc fildll out mov cmp dec pop dec push lods out ret (bad) pusha fincstp pop mov cmp test imul and push lcall out out std addr16 fisubr and stos mov insb mov jl loop jle cmp (bad) mov lret lds push mov out jecxz adc inc xchg mov cmpsl pop add mov add xchg aam pop inc jb pop nopl out hlt addl test xchg fistpll or mov fimull les imul lods cmpb ret and addr16 mov stc (bad) jbe adc iret pop int in sbb insb decl loopne cli clc je inc xchg pop test call aam add push test xor inc outsb pop inc add pushf xchg cmp into xlat xor sbb cwtl or int cmpsl xor (bad) rolb popl addr16 jg mov xchg scas xor and pop into jae xchg xor adcb xor lds push mov mov mov test ja xchg jnp push (bad) xchg dec add les sub push xchg push dec mov outsl jo add mov cmpsb jno stos leave or mov cmpsb je lahf das loopne sbb push les jb jecxz movsl push jmp cmp jge cmp inc xchg je enter divl inc dec and sub in rorl jae pop loop insb lahf out xor jae dec aas (bad) sub data16 cmp add push xor rcll push mov pop xor mov mov dec pop sub scas push push aaa test lods (bad) stos inc or xor (bad) xchg cmp in xor inc jle aam xchg lahf and inc icebp mov fstpt xlat jle scas xchg aad add xor js push xor ss inc les out pop (bad) mov push cltd push pop sbb imul and add into sbb add push out adc bound or imul sub js jmp pop js xor fdivs xor push int sbb push and xlat sub adc xor push loopne add ret dec dec add sbb and mov push push in mov addl mov or adc clc test std test les inc jne aad xor xor std xchg outsb and cmp test cld rcrl test outsb adc pusha jo jge fdiv or mov test (bad) pop gs bound stc cmp scas push mov mov scas jne mov data16 xchg popf mov jmp popa shr pop inc jo daa xor jmp xchg add xchg leave or jmp test push mov xchg cmp sti inc push (bad) fldl pop movsb cmp outsl sub pop pop aas mov lcall dec jg outsb xchg mov lea repnz xchg negb sahf das dec sbb outsb mov das insb out addr16 push ss js mul jno xor idivb cmp rolb ss fidiv ret out leave mov std xor push pusha int3 es es out (bad) sbb adc xor mov xor xlat pop push jnp out cmpsb mov mov in ret jns jns repz dec nop and and lcall add aaa movsl loopne fs cmp aad adc fdiv out int and xchg nop sbb xchg and push dec push jecxz push ja xor test cmp shlb test jle ret inc sub imul and in bound loopne adc dec xlat inc shlb (bad) add fnstcw enter sahf dec inc push dec popa add (bad) stc lret ret push cmc (bad) flds mov out cmpsb dec hlt jecxz and rcrl scas jecxz push dec sbb stos ror pop repnz faddp push and sub sbb cmpsl gs pop out lock mov ret sub or fs leave push cmc jge fstpl ror fisttpl adc mov out add (bad) push sbb cwtl mov lea outsb xchg pop xchg dec gs stc es add pushf or xchg add cmp lahf inc bswap sbb add fsubr (bad) popa test pop mov dec mov mov jnp mov xor (bad) pop into mov mov lods lret xor test addr16 fidivl call test jno jg and imul jp push bound push push in not rcr jno xchg insb jne aaa add add jl pop nop scas ja (bad) dec je sub jl jp and (bad) hlt rol sbb sbb sbb mul dec rorb xor cmpsb mov aas fnstenv mov xchg sub scas rcll sbb xchg in cs fstps sbb mov repnz arpl mov aas int3 mov (bad) (bad) arpl jge cmp inc sti mov popf add pop mov int mov or xor inc push sub push loopne into jnp dec jne sbb pop or xchg sbb test dec ret mov aad sub inc jge outsl js push outsl aaa sub jmp in inc xchg mov adc dec cli fsubl hlt les pop push pop mov adc jg in lds and movsb add xchg mov idiv mov clc (bad) pusha mov int3 ffree ljmp fs clc cmp dec jae pop inc int xor les push std mov je dec cmp cmp rol out jecxz sub push lods xchg mov in fcoms test and in mov cmpsl cmp mov pop mov push pop jecxz inc xor int sub xor enter dec push call aam gs xchg lret movsl sub ds mov mov clc xor inc adc fs idivl popf push push lret subb aad mov dec xchg pushf ljmp mov xor cmp push into js ffree (bad) xor add or xchg adc or xor test sbb pop int3 jg sbb mov adc pop add xor outsl pop cwtl cmp pop sbb or test push cmp xor push xlat jp mul sub jge or or xlat ret xorb mov sub jmp mov mov sub jo pop dec inc mov jbe sbb add stc mov mov cld mov into andl xor rcll bound jne stos xchg repz dec ret test xchg dec aam dec in cli xchg mov sbb mov repnz lcall dec aad xor sahf jmp call cwtl cmp mov xchg cmpsb add les js pop mov pop inc bound pusha movsl aam test shlb pusha dec insb mov add call xchg jp aad fdivr rolb cmp ds lea add cmp popa adc inc rcll dec imul lds cmp xor and push js pop push jle xchg pop jmp rcr or xor push jns pop xor mov sub out les fldl pop mov aas std imul fcomip stos xchg (bad) dec push ror aaa sub ljmp sti repz pusha push xchg lea jge fdivrp out lcall (bad) pop insl push imul nop insl shrb xchg adc sbb jno push imul out bound adc (bad) mov push adc into jne cmp inc jnp shrl jp or cwtl shl cmpsl and xor daa nop rcl push mov xor inc movsl rolb xor gs ja cli push ret sub aaa ds mov call in or jecxz sub push (bad) fsub jl clc pop cmpsl into mov out cmpsb mov mov and inc mov scas mov clc add ljmp lea bound aas dec mov loop lret mov sbb push or adc mov (bad) mov adc cmp mov adc aaa push push fdivl imul (bad) sub lock ret mov jp cmpsl jg jb jb mov cs xor sub mov jb test pop push dec dec fdiv mov cltd or mov pop in (bad) mov or aaa pop imul inc rcr jne or fcmovnbe popa sbb mov jp fs rcrl outsl loope sbb aaa mov cli fs inc push loop mov fmulp inc xchg imul adc hlt mov scas jno sti xlat push pop add mov xlat lahf call ss or daa rcll inc stos sub (bad) ficoml clc icebp pop sub adc pop add stos jno sbb mov repnz popf fcompl and fmuls nop lret lret fisubrl sub ljmp xor jnp xor movsb and ljmp cmp aam pushf and jnp push mov mov ret aas pop out pop pusha push es or inc or mov push sbb mov cmc int3 adc xchg std bound popa push pop inc add arpl lea les (bad) aaa pmovmskb ss (bad) cli cmp aad mov add cmp clc daa adc out repnz push ret cmpsl loop (bad) jbe add xor pop (bad) fwait mov jp fsubl dec or dec jns cmp data16 loop aad cmp add cmpsl daa cmp int sub sbb jle (bad) fdiv shrb cmp push adc mov xchg fs negb lea xor scas xchg insl xor scas jo nop (bad) (bad) int out jg imul clc sbb xchg cmp xchg dec std jecxz mov add sbb jp movsl jl ss cmpsl push mov pop xor andl add aam push cmp fwait xor or es sub jecxz bound clc push pop repnz aad incb test or sbb aad stos xchg mov mov cltd pop jge icebp das push mov mov xchg pop push test and cmpsb out enter jmp cltd mov (bad) pop adc fstpt movsb and mov mov mov or push (bad) int or push loope fdivrs adc sbb dec lahf mov movsb mov mov popa jb mov adc ss js mov pusha mov dec adc aad xchg jnp out in xchg test mov add or lock add aad xchg sub pop clc xchg mov (bad) sti push dec jbe dec mov ljmp jno scas enter mov imul jecxz aaa push dec xchg jl sbbl insb pop test ror fsubs dec sub inc or sub and adc sbb mov xchg bound lcall inc xchg in mov call movsl pop iret push test ret enter or loop clc movsl mul xor divb ret in dec cmpsl test out loopne sbb and imul popf insb mov fistl jl jg aad (bad) push loop sub inc (bad) iret insb test mov ret mov (bad) xchg xchg inc imull in jnp and dec std cmc mov push or xchg repnz sbb mov insl in mov inc push std push fdivrl inc decl inc ret (bad) in jne (bad) add xchg int call dec fwait push and or mov add stc push push sub out cmp sub xor xchg inc aas xchg fs addb insl push inc lods aaa sub dec repnz fcomps pop (bad) jb jge dec pop call push jns dec cli test mov mov inc ja ljmp call push addb dec cli mov xchg les aad cmp pushf mov (bad) lods mov push daa inc fildll add cmp and mov pop hlt mov or inc sub daa ret adc inc push aam jnp push add xchg lods hlt (bad) adc mov xlat mov xor xchg jp add gs fild je cmp jns or test mov pop imul in pop push stc mov (bad) out xor addr16 sub xor addr16 sub mov stos jo movb lea pop out sbb pop xchg dec mov dec add clc ret xor dec mov sbb inc scas (bad) out es xchg jl fs sbb sub mov mov (bad) lret xor cmpsb xchg mov scas push faddl mov aas notl scas push daa stc pop std in pop mov pop fimull fbld push sub aas pop mov mov sub and adc inc push mov sub std pop std jo dec packsswb in pop mov pop fnsave cmp loop cli aas imul rol adc add es push into mov xor js popa decb and lret test sahf in (bad) aad push jle pusha cmpsl sbb fidivrl sbb sub in or int3 and mov add push (bad) pop mov mov mov xchg orl cmp push cmpsl cmp test clc sub dec addl or mov and fimul fistl and jb in fwait xor leave lds roll das mov xchg rcrb mov xor jns adc mov add and cmp xlat repnz push stc sub push popa pop xchg push pop mov (bad) (bad) jb sub mov add sub dec cmp (bad) outsl ja icebp cmc (bad) mov jp cmpsb mulb cmp cmp popa out lahf xchg mov mov jecxz cmpsb xchg outsl insl jnp lahf fptan add inc lds sbb jno pop es sub je cmp sbb cld sbb mov xchg jge mov out dec stos mov adc xchg and pop push or push int3 xor test and xor cwtl cmpsl cmp out fsubrl in dec cmpsl stos stos jo sbb lods mov inc sahf mov stc push sbb (bad) scas cld cli or fiadd jbe mov test repnz test mov or aaa add xlat repnz (bad) mov mov xchg cmp shlb mov inc dec mov faddl rcl mov lahf dec jecxz cmc loope mov pusha dec pop popa daa mov test mov jmp andl mov adc xchg sub movsl rorl push out fistp inc sbb ret push (bad) or and and cltd pop inc xor sub xchg (bad) inc cs pusha mov jns stos push adc dec adcb in test jp fimul popf sbb sub cmpsl sbb add mov jae enter lds adc sti cmp dec and lahf add mov mov jbe ds mov cmp (bad) movb inc iret sti popf or insl mov cmp notl out pusha sub and push or inc outsb cmp imul push imul int test or outsb andb (bad) sbb dec fs and lret lret and add ror cs mov jl (bad) cmp (bad) into mov enter call jo movsb in pop inc ljmp or ds or sbbb lds add mov jnp pop xchg jmp (bad) sbb sub ret out outsb int3 xor xor add call ret (bad) or xchg out push dec addl call dec add es ss push lods pop jl mov aam iret push addr16 arpl xchg divl lret ficompl xor popa stc arpl add jno add xor cltd push push lret xlat sti or jbe or dec orl xlat ret ljmp mov test adc jmp fbld in fnstcw cmp jge push cmp jo lods lods pusha xchg stc or xchg nop pop inc jne jo fldcw mov in into popa fucomi pushf popa lahf sub or and test pop adc lret lock push dec jae call cmp aad jge xchg inc mov and mov std cmp xchg testl mov jp push ljmp je je add pop xchg sbb pop dec cmpsl ljmp shlb adc (bad) lock and (bad) cmpsl mov xorl xor insb push sub repnz push or xor pop add sub jmp mov in push push dec push push imul mov xlat fidiv push cmpsb push inc negl mov loop jnp loope jp mov pop jl jo dec icebp push inc xchg cmp add scas jns mov pop xchg cli xor js lcall jb test inc sbb popf push pop inc add pxor pop xor jle sbb (bad) (bad) jno xchg icebp sahf mov outsl add rcll cwtl shrl movl push mov jb mov ret mov std mov adcl and test fsubrl sub cmp stos scas ret out and jg dec and inc inc or pop mov fwait pop cli pushf jg fucomp mov jb pop test xorl (bad) decl icebp stos das call xor adc cwtl bound mov mov or xchg adc lahf loope and push (bad) adc xor (bad) xor (bad) mov mov sbb jb mov add cmp xlat sbb cmpl (bad) mov inc sti pop cmp shlb rcl gs push push lret or into push bound cli xchg sahf xchg mov dec nop dec sbb fnstenv sbb mov (bad) repnz fs test aad sub cmp call repz and fsub xchg and stc mov stos cld xchg test inc add imul add jne push dec insb cmp sbb mov fist lea add lcall lods pusha lods or repnz push sbb push shrb jmp and jo push and adc xchg pusha push inc sbbl lock fldenv stos inc int cmpsb test and enter dec lcall mov jge into hlt ss inc rcrl jb das divl mov stos xorl js mov pop fbld inc mov cmpsl mov inc mov dec sub aad xor sub inc and test mov lods adc mov stc inc cmp ss adc and popa pop ret sbb adc mov inc cmp pop and (bad) icebp call sub fcmovu ret testb aad mov leave mov inc rorl push fsubrl push loope and xlat xchg out pusha adc pop jge (bad) rcrl test add andl xchg xchg cmp aad xchg and xlat pop jns test iret mov sub xchg mov pusha pusha jae push inc sbb int3 pushf enter test (bad) insb imul or cwtl aam add and test xor test or lea inc in int shrb ret subl pop js xchg cmpsb pop dec inc mov test inc pop dec (bad) xlat cli jecxz pop push pandn dec das sbb and xchg das pop add xchg and mov lock leave std cltd sar lock inc loope imul call inc mov pop test das or pop jb xchg pop out pop fnstenv test call mov das rcl jae push push mov popa leave dec lock mov sti sahf in cmc push pop in mov mov fsubrs (bad) pop out or push movsl jl aas shlb loope cmp iret push add lret cmc out adc arpl ss insb pushfw loope or fs jae clc mov add add jecxz cwtl xchg push leave fprem1 dec cmp ss jo mov sbb jae add aaa aas xchg jl and xchg test cmp pop jecxz loop jns push mov movsb push sbb sbb das mov nop xchg scas pop (bad) xor adc xchg call mov push cld dec mov jl or and and (bad) xchg dec in clc lods sbb arpl sub icebp adc scas mov rolb daa xchg es pop in imul jmp xor cmpsl or fidiv push inc int3 pop shlb inc in (bad) xor push add into jg lods mov imul rorl adc adc xchg sbb and xchg dec cmp cmp xor in scas (bad) push cmp imul pop daa jbe outsl xchg lods in lods add inc pop jmp jo push xchg (bad) cmc fisttp inc inc dec movsl fnstenv mov cmp push adc jmp fnop aad xor push mov mov test and sub or or xor xchg sti dec cltd lahf push (bad) sbb ja cmp dec push or mov cmp insl cmp nop push dec mov idivb lcall cmp inc or fldenv inc mov test lret push sahf fs cmp cmpsb mov and pop sbb addl xlat push inc inc sbb sub cmp outsb xchg xchg mul xor cmp fsubl push xor arpl clc into mov cltd and lods (bad) fnstenv push das divl pop or mov mov out and addr16 call add out push cmp dec fstps mov iret nop xor dec test lcall outsb sub das pop mov jne sub inc sbb sbb aad jl pop lahf dec test add mov adcl and or add lea (bad) mov inc jmp mov jmp cs dec inc sub adc test (bad) test xlat stos icebp lret and jns mov xchg and ljmp mov lock imul push flds mov adc clc enter or fnsave faddl out dec (bad) adc cmc jns shrb sbb rorl mov jp mov stos and pusha lock adc jp int sbb (bad) ss ss loope ret scas in add jne adcb mov jle push movlps cmp sbb mov ret add rclb cmp scas into out dec test inc ret adc popf adc jg shrw imul test jmp out lods sub inc pop push jge (bad) (bad) imul dec rclb mov (bad) enter ljmp or jne aam inc stos test popa fldenv scas mov xor fstps mov dec loope aad leave nop sub (bad) es push (bad) and hlt pop lret lcall dec mov scas pop loope xor loopne stc pop inc lret dec xchg movsb mov mov in jns or or xchg sbb ret int ss lret pushf push cs xchg sti xchg push or ja pop push pusha xor mov jp insb in lea dec lret xor pop mov add icebp leave stos in cmp mov push outsl gs or fstps negl inc dec imul adc out mov fild cmp jb sub fmull and es leave mov pop dec cltd hlt adc lods mov adc stos stos sarb out in call jnp mov and jbe sub in dec aaa jp inc and adc arpl out dec pop pop xor rcll adc xor in mov fcomps jo push jecxz rorb rclb xchg loope fs cmp les outsb inc add mov out xor (bad) mov mov fmull in jo (bad) stos mov dec pushf iret js pop sbb (bad) nop push icebp pop or and adc sub call lea push test daa sub repz and outsl addb in movsl nop test jbe mov cmpsb fcompl gs pop sub xorl xchg pusha push mov mov mov xchg out enter stos aam push decl sbb push sahf mov addr16 divps outsl cmp xchg psadbw sbb push xchg dec in js int3 sub xor pop mov mov xchg loop das push xor (bad) stos (bad) setp push xlat pusha sbb cmp jmp call out popf push scas imulb jno test test push fmul add lret xchg add mov xlat cs daa dec or idivb inc pop xor cld cmp and mov inc (bad) add jne ret ret (bad) out fwait adc ljmp inc loop enter inc or jecxz movsl xchg stos sub (bad) push in insb pop xchg scas movsb mov rcrl movsb roll push (bad) mov stos sub aad mov insl mov ja popa aas jno push test popf (bad) push jo mov mov jns (bad) out mov imulb fdiv (bad) jmp inc push mov fistpl nop or je add (bad) adc (bad) mov or mov aas xchg aaa add xchg (bad) cmc stos insl bnd xor (bad) and pop cs insl and pusha jecxz or subl pusha test iret mov xchg push xchg push jnp aas pusha (bad) int3 mov repz insb das scas out cs sub push jb test aad fcoms xor or add (bad) jb nop js adc add scas adc out test icebp mov sbbb in int3 test add leave scas fs jnp mov mov sbb je sub and xchg push andl xor lods add into sub sub (bad) pop push insb ss adc cmp pop stos mov or xor loope or imul xchg clc enter xchg (bad) movsb xlat pop and popa inc out fsts mov cltd mov cmp jbe lret jb aas jmp mov adc insl fidivl sbb mov inc dec cmp push movsb xchg loope imul sub mov xchg and aas add and (bad) loopne (bad) dec mov jns cs lret out (bad) insl or adc jne or inc mov sub inc enter (bad) or cmpl cmp (bad) jmp xor push les imul mov sbbl repnz fadd gs cmpsb mov ds ret pop or sub mov loopne dec pop dec ucomiss inc fdivl dec (bad) out push aad lahf std loope or cmp mov out push dec scas aaa pop jge leave repz xchg adc dec icebp jmp rcr ja mov test push lret mov inc pop (bad) leave out xor (bad) ja push jmp call sbb cmp test aaa jmp pusha andl (bad) imulb les bound out add xchg loope fcmovnbe out adc imul inc cwtl andb stos push or mov pop adc adc lcall pop pop mov (bad) rorb jg push dec push ret inc adc fiadd incb xlat push js and pop mov inc xchg xor xchg dec jecxz cmpsb pusha or fdivr sahf jbe jmp movsl push or aad cmp nop push jo in dec push orb test pop push in repz das cld and imul mov cmp sbb into pop mov push subl jae imul fwait insb adc (bad) mov push lock test dec sub in mov jae insb sub pop or add or sbb es cmpsb push or mov subl std jle aas (bad) mov adc repnz lods jp sarb leave int3 out push (bad) cld das xchg jge ficoml add xchg mov pop aaa jae inc or push mov and out push or imul adc imul out dec jns mov scas and push jmp stc jecxz mov repnz mov cmp sub add mov inc test scas add pop clc pmaddwd nop mov jmp mov push clc aaa sub lock xchg das lret dec xor inc jp jp mov jg paddq xor clc (bad) xor mov cmp shrb psubq ja cmp jge inc std outsl cmc xor cmpneqps or cld mov xor clc inc pop scas sbb mov jns cmp iret aaa mov mov add fdivs fisub (bad) sub cmpsb cmp inc sub jmp add and cltd xchg sbb leave icebp cmp jbe notb int3 push cmp data16 sub jmp adc insb icebp loopne imul dec test outsb (bad) sub or movsl aaa add test (bad) daa jno xor cwtl sub mov xchg mov pop ret adc mov jno pop xor or fadd mov push std and inc lahf lods (bad) mov mov call (bad) sbb ds mov sbb cltd cs mov data16 repz enter popf pop jge xlat scas stc jecxz movsb into add into das sub mov (bad) pop movsb mov add aaa movsl or cli pop cmc inc jg ja stc loopne or popa mov cmp lea xchg dec push jp or shrb sbb mov test jecxz call sbbb icebp rcrl popa pop inc loope lahf jmp jne add pop lea jb add int3 and out jne ret (bad) repnz cmpsb clc pop sbb mov call xchg jno movsb pop movsl mov ret ficomp jnp dec and push pushf jae sub rcll stc imul insl movsl add dec ret loope in sahf lret jge sub xchg jge push sbb xor xor out gs mov fisubl ja jp push or jne mov push insl (bad) xor jae cmpsb test shrl mov in pop clc push add daa cmp fistpll lods push loopne or cwtl xchg addr16 sub rep add add push rolb sub notl push xor push pop enter mov aaa dec call xor xor xor mov dec les dec push mov and xchg xor xor in add lds data16 push stos cmp mov gs adc sub sbb nop fadds sbb pop iret xor popa ljmp cmp xchg sahf push dec jbe push jl cvtps2pi lret mov sbb out sbb call (bad) das xor push cmp dec cli out mov sti test int3 mov data16 push mov add adc xchg ss or push ljmp jecxz mov dec and sub cmpsb sbb pop js adc sub cmpsl arpl mov std push pop xchg add push jno imul push adc push lds jbe sbbl dec imull and push inc dec mov dec cli aam or int xchg jb add mov jle xchg cmp adc mov lret cmp or cltd xchg mov mulb dec sub pop add xchg dec ss xor mov imul outsl lods leave lock insl shll mov cmp and cli mov dec jecxz repnz cmp movsb roll mov imul leave jae push cltd lock das insb bound roll loop adcb and adc cs jl sbb cmp cmpsl in lea sti dec lret adc or out add lea das jg ja aaa pushf xchg jbe bnd bound add sub jmp sahf mov (bad) (bad) dec or xor fisubr fistl mov aam stos clc push sbb cwtl inc in rcl insb out jg adc cmp and dec test inc pop das cmpsl repz stc push cmpsb dec ljmp cs js out test jae mov out negb sub push jb mov mov sub mov jbe mov cmpsb push dec mov sbbb push push sti rcll in sub rolb iret mov loop fisttp ret xchg mov cmpsb scas or int sbb mov jnp stos repnz or xchg cwtl mov rcrl mov cmpsl int mov insb (bad) negb mov mov add fldcw sti and jecxz addl push loop bnd sub int push inc jo adc adc outsl mov sub or push and stos xchg inc xchg adc icebp das mov dec jg pop dec ret xlat (bad) in mov fwait mov and and inc mov outsl jg cwtl stc out (bad) fisubr loope mov mov pushl xor mulb dec push in hlt push pop jl mov or push sbb or jmp add mov sub (bad) mov xchg xchg ds subb lods cld and inc mov cmp (bad) std jb cmpl pop roll inc inc cmp xor push fldenv push rcl xchg mov adc jbe xchg emms xchg sub mov loop and pusha das sbb sti push test jae stos jmp push in and jp xchg push pop fwait cmp add in loop jg lds mov subl xor push pushf arpl jae inc mov ret xchg mov repz in cmpsl xchg in mov test push stos shll inc test and cltd loop mov mov jns xor sub or jnp mov inc or sbb xlat pop stos sti jae fcompl pop inc cmp in xchg sbb xlat cli mov inc das repz jmp mov xlat jae sub jg repz lods frstor xchg mov rorb out cmp jg xchg mov xor ret xor cmpsb in fnstenv pop pop sbb std adc loopne add adc mov hlt lcall mov sub cmp sahf and adc sub das std mov pop outsl out inc mov sbb cmpsl ret fsubs lock in add xchg lds or scas pusha adc cmpsb xlat das dec fwait lahf adc mov pop stc add dec mov fildl (bad) mov (bad) mov loop lods in or in cmpsl test adc jno out jg les jmp jmp decl enter jmp dec jns aaa pextrw cmp lahf leave lods mov sub fisubl mov je out sbb adc or inc std decl mov jb int mov rclb xchg data16 inc out adc rcrb repz mov inc dec frstor pop out popf lods in (bad) loop mov testb jb loope cmpsl or int3 jg sub xchg push push mov jg lret mov adc jle fstl cs insb push jecxz inc sub ret add arpl (bad) xor test dec mov and stos movl cmp out add lds push sahf push and cld dec enter inc out xchg outsb fdivl xor data16 out stos adc xchg stos loope inc idivl out mov inc push xor dec sbb daa mov mov loopne frstor and mov inc sub subl lds push adc out sbb dec test sbb fcoml gs jo fdivr xor push add mov aas pop mov push stos xor inc jge addr16 and add sti iret mov mov movsb lcall adc (bad) inc cmpsb mov int daa inc insl push cmp loop notl int3 mov lea sbb xor mov jns mov dec jecxz cmp test push jmp icebp xor jnp test push xchg das lcall test dec scas loopne mov sti stos jb or mov and xchg xchg cmpsb jne fcomi sahf fbstp mov call xor xchg lcall mov mov jmp lods ret cmpsl cmp adc lock inc int3 arpl (bad) cmp xor test and lods mov and es cmpsb arpl lods (bad) icebp cld mov push in pop ret cwtl inc inc dec (bad) pop mov push insl inc xchg inc push pop jnp (bad) (bad) xor imull in cli into sub jp movsb xor adc xchg fwait push push iret inc out (bad) xchg (bad) pusha or pushf mov push jp popa push inc and imul xchg xchg syscall scas pusha jle fisubr (bad) lret and popa adc and push xor ds pop xor aam cmpsl je aas stos prefetchw or mov fcoms and mov mov sub inc push call lock mov jne dec jae add jne sbb pop fldl (bad) mov xchg push dec lcall cmp add sbb dec jle pop out btc mov in scas repz xor aaa roll jp xchg jp jnp,pt and dec out cmpsb adc push int js adc ja xchg inc jb std cs nop (bad) mov xor rclb or mov jae jmp test subl addr16 jb lret repnz xchg mov shl xor mov mov or and add cmp inc hlt add pop orl test push mov mov mov sbb jle lods test pushl mov jge into in xchg mov (bad) iret cmp std xor adcl xchg sbb shlb pushf cs pop jecxz cmpb mov mov enter fistpl dec shrb push xor and adc fisttpl sbb dec xchg fwait cmp push int imul mov stos ds dec scas fmulp out dec shrb xlat cmp mov cwtl fcomps loop fmulp out (bad) push pop xchg outsb (bad) test (bad) push inc pusha test push insb (bad) fwait xchg dec loope pop in inc inc cmp adc adcl sbb jb xor (bad) xchg cmp cmp jne dec fstpl enter pop jns and mov lret lods push mov cwtl ret lea and in out xlat pop ljmp xchg stos jecxz insb inc dec mov or in lcall imul pop push hlt push cld cs pop lret jnp add and pop fist cmp iret ds xchg icebp dec fsubr xchg out xchg jo sbb adc mov stos mov xor mov add xor enterw xor shlb popf push inc fdivrs out lcall push pop or and mull jae jl adc aam (bad) repz mov push mov ret jns js mov mov aam (bad) inc adc out and fdivr mov lock fldenv insl in sub cmp daa xchg ljmp jae in (bad) mov paddw or stos or sar jnp push lcall mov inc dec shlb xor push xchg outsl fs sub push in add cs inc push or outsb je sub out push pop lock sub sub dec xchg ja sbb inc rol xor add mov fwait out sahf nop aas pop enter mov ret jno pop jmp dec push fmulp (bad) pop (bad) dec push pop cltd rcll int in inc cld test fiaddl std sahf aas jo dec fild mov leave xchg inc clc and loope rclb cmp pop or inc divb adc cmpsl mov ret pop dec push movsb ret test int fldenv ds inc rorb in or sbb fbstp loopne or and or pop xor adc lahf and push cli addr16 push fisttpl iret inc push pop pop add xor mov add jg mov push pop lret (bad) (bad) push adc cld sub out xor add and cmpsl test ret push or mov (bad) ds add pop cmp cltd imul aaa je bound pop xchg arpl in cltd cmp stc push pop icebp sbb imull jle (bad) and mov rcrl pop xchg nop incl xor dec imul dec loopne mov push mov flds lcall cltd push ret mov ret push xor popa jo cmp sub or fwait imul fsts sbbl mov mov or cmpsl (bad) mov mov bound stos adc int3 je jecxz addr16 push push xchg jge lret (bad) sbb xor xchg mov repz imul ja adc loop cmc aaa mov and insl mov xchg jg pop sub aaa xor repnz repz pop (bad) and int imul add cld jne adc push push movsb dec lods insl mov adc fbstp inc shrl out test push mov push pop adcl sbb les push add xor inc xor pop jne iret xor mov xchg xor test loop data16 imul lahf lea dec mov dec nop jmp shl or arpl imul cs adc lcall push xor add xor ja xchg imul ret xchg xor cmp xchg jl mov adc (bad) lret lods imul mov cmc push xchg out mov xchg lods and cli (bad) in add gs into mov pop mov push imul or xor jp sub fmull aad mov jnp xchg cmp loope sbb adc out es or sbb push jae call push and pop js das loopne cmp fwait adc int3 test repnz fsubl imul mov xor mov add cmc pop roll int3 movb (bad) jns aas jne pushl insl fs jnp and cmpsb fsubr cmpsb jo inc add mov movsb clc jle mov fmulp jle loope rorb inc xor and aaa das sahf pop push jno mov inc or insb out out cli (bad) shr out fbstp pop jae lods mov cmc adc dec xchg jp sub lcall outsb jae cmp mov cli pop sbb adc pop jno ret jnp stos rcll mov sub add jne neg scas sub int pusha movsl rorb idiv and sar dec xchg sbb cmp or dec push xor fwait je loop add xchg sub pushf stc push cmpsl ss adc mov scas cli es xor dec and sbb test mov aad jg movsl dec xchg dec pop sarb pushl and negl sub cltd cmpl add scas jge rcrl jbe sbb mov lock jae xchg xlat fisubr fistpll lret push pop pop push cmp add or sbb mov (bad) or dec pushf push and lahf bound pusha mov and loope and sbb idivl jo jne sbb aam jb cs inc inc insl lods idiv repnz sbb loope shrb add arpl add test jae jp test cmp inc ret adc sub push dec mov adc or ljmp (bad) adc jns in sahf push adc mov mov fdivrl fildll jae int3 popa outsb int test mov inc mov adc xor push scas lea mov js xchg rcr sub ds cmp mov jp sbb repz clc push int3 packssdw dec dec inc push jl nop add call fidivr ret cmpsl js mov inc jp repnz sub jl pushf mov add lahf fisubrl add popa call addr16 mov mov lods popa sbb icebp dec aam xchg jno lods iret cmpsl mov jecxz rcl sarb mov dec arpl lret fisubl (bad) les dec fs inc push loop in das movsl popa or jmp xchg sbbb ja enter inc sahf aas xor insl hlt or sbb cli add ds add mov hlt cld inc mov cltd inc fsubl cmp sbb fidivr leave jnp xchg or mov sbb cltd sahf (bad) in loopne mov push rcrl dec es mov jl loop jo,pn das dec mov stos adc push dec int3 or mov or inc sub inc addr16 addr16 outsb and pop ret push or mov popa inc fimul dec (bad) mov mov mov aas imul mov jg into xchg xor sub inc fnstenv cld pop cs stc mov movhps test jo int dec sub fcomps (bad) sub mov and test fstpl clc js jge mov loop xor aaa mov ret xor in mov mov out addb (bad) dec pop lret push aad and shr and pop xor lahf sbb pop aam cwtl pop cmpsb cmpsl lea or inc jecxz stc out lcall aad inc jo repz dec icebp xchg cs das (bad) mov sbb add xor rclb ljmp and sub (bad) pop jne in and push jecxz test ret test in out mov enter pop push decb in js (bad) xlat in es daa mov ljmp pop adc xor lret inc ror stos add test in mov xlat sub decl shl mov jae xchg cmpl (bad) jbe pop dec jmp bound ljmp fadd insb lret dec lods inc push shrb mov push jle rcrb or dec or in mov icebp mov push xchg fs (bad) pop or jnp and mov icebp mov stc cmp cmp xchg sbb sbb pop add ret sub movsl cmp pop pop adc dec imul subl movl mov pop push jbe pop stc pop mov cld (bad) jb nop fdivr outsl leave in cmp fucomi scas (bad) jbe sub data16 decb ficom xchg cwtl mov inc mov push push daa adc mov fisubr movsl iret jb scas xchg adc pop fs xor jo cmpsb test xchg mov in (bad) popf fimul sar add sub xchg (bad) jno out icebp push mov push pop adc cvtps2pd into xchg dec (bad) xor js push mov movsl dec decb std fstps ds (bad) (bad) repz add sti lods and outsl dec jbe out cltd sub mov adc js xchg into mov jne in loopne jl cmp mov xchg out inc stos into repnz cmpsb in (bad) mov mov mov cmp ljmp push and cmpsl mov in xor in dec sub push adc inc fsubrl xchg daa stos mov icebp fldcw mov xchg test icebp ds xor pop inc test into pushf mov pushf in dec inc or mov mov loope sarl dec lods (bad) mov mov out sbb mov sahf cmpsb pop adc inc pop fs loopne fimull movb or adc adc popa or inc inc notb xorl (bad) mov inc mov mov cld ljmp out push je mov or and mov lcall add pushl adc fmull in push (bad) cs lock and loope ret mov sbb inc xchg hlt mov fwait mov (bad) cmp ds push jne lods loope pop cmp mov mov mov and jmp sbb mov fadds pop inc mov push in lods fstl loope add mov dec cmpsb scas dec popf ror sbb imul push lods out movsb adc stos in jle mov ljmp ljmp mov or pop out cld (bad) into les xchg xor ljmp dec sbb adc clc sub ds fldt ret or int3 jo and jb cmpsl cmp aad jmp ret out popf lret scas jmp (bad) pushf in sub mov lods jo and or out add and in inc (bad) pop push out subl dec push enter mov sbb ret icebp jno adc iret xor mov dec scas fstpt dec jmp adc insb jmp jne xor aad or popa sub inc lods movl adc dec stc inc or (bad) cltd jle popa ja or mov and insl daa xchg testb pop mov fsubrp std xor mov repz hlt pop add jl sub and fistl lret mov dec dec (bad) xchg adc mov xor mov mov jbe and (bad) push outsl mov sub movsl adc push mov mov sbb test xchg gs or adc mov andl stc xlat ljmp loop jbe push mov sahf std shrl pop pop inc dec ss call scas repz hlt or mov or je lcall inc mov or lods adc cld add mov jecxz add js bound sti inc push xlat scas inc mov sub cs enter sti and push sub push ficoml or mov xchg pop stos push xchg imul cmpsb lea enter add sub sahf sti sub or sub pop xchg les rclb cmp add or push jne lds stc mov lock or push lret cli das cld sahf (bad) stc lds out cmp pushf insb cmpsl int sub sahf jne xchg jmp pop mov xchg inc lds sbb mov mov mov jb iret xchg loop xchg repnz cmp cmp pop sub icebp mov and xor mov xor mov mov pop push pop loope inc pusha testl mov out les rorb mov scas mov addr16 adc mov jmp mov dec push add pop sub roll out add jne push mov mov fisubr popf cmp sbb stos cmc mov sbb subl (bad) mov xchg divl sbb cmp sbb adc leave int3 sbb imul lcall addr16 cmpsb cmp test xchg cmp addr16 inc mov cmp cmp push jle loop inc jno pop iret fwait sub negl sub popf or mov xlat jle cltd dec jecxz in lods lret lock add or movsb mov xchg inc cmpsl test imul mov sub mov (bad) pop shll mov pushf (bad) fiadd dec mov jns iret addr16 mov jmp into sub pushf dec jns rorb mov mov xorl adc jo ret push adc xor pop cli cmp hlt pop inc jg cmp ja mov mov mov xor push mov ds ja fistp pmaddwd inc gs jb dec pop jge adc push push ret sbb and mov add repz cmp aam cwtl lods mov in in rorl movsb sub mov fld pop (bad) subb xor adcl or int3 (bad) inc push cmp cs sub mov add sub mov xor cld sub or (bad) mov push movsl jb mov mov jbe or or loopne dec push mov mov popf or push call jae stc sbb mov daa push addb pop jecxz cmpl and jns adc jle cmpsb fmulp xchg decb int lea pop insb lock mov dec add stc mov cmp mov aaa in mov sbb (bad) dec dec pop outsb roll dec shll (bad) lcall repz int3 pusha sbb movsb dec mov adc pop dec call sub push or or mov xor shr jecxz int3 sub in rcr mov int3 xchg xchg sbb sahf popa sub ja ss mov cli or push mov push lods imul test xor add pop std lret mov and and jl (bad) jp lea sbb pop push stos and cmp mov lods push mov sbb push rcrl cmpsl and lret enter loope pushf adc sub movsl in lock mov fwait (bad) jmp mov (bad) fcoml push ret push inc js jno jecxz cmp jns aad adc ljmp int mov aaa lahf jg cmc cwtl mov leave cs iret gs inc out addr16 aad cmp xlat sahf flds pop sub adcl rorb mov jp inc mov sub jmp fnsave ljmp mov lahf out mov xchg mov je pop mov sub dec (bad) push (bad) xchg test rorb xchg or xchg addr16 loop sbb add mov pushf ds out fisttpl pop or mov jnp or pop roll mov mov imul adc lret ds movb test les movsb ss lcall sub fwait pop and js test push and sbb push lea mov push pop pop mov mov dec mov mov fdivs into scas cmpsl gs lods pop mov fbstp fdivp (bad) jecxz fs data16 adc fstps stc mov lods cmp xor mov sbb pop inc fsts mov mov mov stos add cmc add xchg sahf and cmp add sbb fildll (bad) imul out les into pop enter iret aad jge lret pop decb and adc jle sbb mov sub sbb (bad) addr16 stc mov mov in out sti out shll fmulp adc pop leave lcall int3 js and and jecxz cmp outsb push inc test and dec and cmc outsb pop pushf push and sub jl lahf mov sub pop bound push xchg imul test or inc enter lret inc lods dec dec shlb sbb xor leave loope in addr16 jns int sub ss pop or and ror add pop push repz lret (bad) stos out (bad) fcomi mov add test rcl xor lret cmp lea dec imul xchg mov dec sbb aas xor push insb push gs aaa mov icebp xor scas jg pop imul clc adc ret iret cwtl cmp xchg xchg into mov ds out ret and daa add imul sbb daa adc sahf jecxz pop nop sbb pop scas fistl lea push push push lret sbb or cld loopne outsb mov fstps cltd inc jns mov and in sbb daa cs jp jecxz (bad) push loope push lods addr16 jo into insb jg cli pusha mov stos (bad) or add loope cltd js je addr16 inc xor ror in jo inc sbb push mov dec nop mov mov fcomi dec jp test pop jecxz cli mov dec mov (bad) jo loopne (bad) fstpl xor aas in and cmpsl sbb lahf fwait ljmp inc in test push cmc dec adc sti ja inc lds fsts xchg aas cwtl add pop or dec dec dec sub pop xlat mov test jp aas loopne and sbb mov sbb aam ljmp shrb outsb les cmc mov call jl cmpsl (bad) push sbb push sti or add mov add repnz push sbb mov push dec jp (bad) leave mov xor lret js pop and inc add std pusha cs mov or sub or mov lods loopne mov sbb cmp inc xchg movsb (bad) out sub (bad) das out add jno dec aam pushl inc mov mov stos stos in xchg popf pushf xchg inc scas icebp mov insb jge sub xorl mov add outsb add (bad) or ss mov mov cmp cli sub pop test jge sbbl stos (bad) aam lods js pop mov xor scas mov hlt xchg insb das and push sub leave test mov (bad) sti xlat mov pop jle fisub lret fcmovbe add mov subl dec addr16 mov outsl pusha stc inc pop mov popf (bad) pop sub loop repnz mov mov sub aas xchg xor mov adc jmp hlt mov mov jge inc (bad) mov and cmp data16 pop mov dec inc inc pop (bad) clc jnp repz jg and jp cmc jo jecxz sub sti push xchg sbb xor mov stos xlat jae adc ljmp in pop cmp xor push xchg push push pop fldenv iret aas je push dec push inc jae int insb mov push loop mov cmp idiv xorb adc sub jns xchg cmp enter push mov pop push sbb mov daa and mov sub fist rcl sti enter ficoml xlat cmp pop rcll in mov mov add movsl sbb cmp testb sbb fnop outsl mov sbbl dec out shlb das lods out xor call leave ja sbb sarb loope fucomip ds shrl mov ljmp out dec pop loop mov arpl sub (bad) das ja std pop mov loop push aaa or std and ficompl xor jg leave jle cmc sahf lds pop ret cmp mov out mov fbld sub in cmp aaa enter (bad) icebp cli push (bad) icebp or pop les add (bad) scas pop inc popa in lret aam xchg inc or add (bad) jl pusha insb lock ss sbb int3 shrl xchg pop (bad) fdivrs sbb dec jno sbb add stc es inc or mov pushf in pop mov pop lods add sub repz dec dec decb or sub xor (bad) xor out data16 sti iret rcrl out add pushf xchg cmp test insb jmp or les adc and sahf mov add inc xchg xor dec pop mull sub or push ljmp sbb data16 test push jno (bad) mov adc ret (bad) sti in (bad) or dec xchg adc js cli xor inc cld mov aad sbb test sbb push pop sbb and dec ret ljmp xchg mov mov mov mov mov les cs ljmp sub cwtl mov aad gs pop cmp sbb cmp xrelease push andl inc icebp hlt dec mov xchg test add inc imul mov and bound loope xor int sub xor inc in jp jo jnp push xchg out std adc push je jb test fcmovnbe mov sti lcall mov or imul into mov push jne (bad) sbb mov mov and dec sbb daa nop/reserved roll sarl pushf imulb inc pusha out fs mov pop pusha jne lea enter mov lcall xor insl stos gs or pop mov (bad) jno push icebp xchg mov out mov rcrl sbb cld mov call aad aaa (bad) out and and pop ja and stos (bad) cli enter mov or push lods xor dec dec mov pop nop ret lret cs lcall mov hlt (bad) mov cmc add rorb sbb xchg or pusha or clc rorl repnz packsswb movsl pop cmp (bad) xor adc dec cli pop stc jno fimull or out loopne push jge add mov fdivrl xchg outsb insl ljmp add inc mov mov aaa sarl std push inc mov mov cmp jmp imul and xchg imul sbb data16 (bad) ret mov aaa mov (bad) mov xlat fwait cs out repnz pop xor and pop inc xchg lret inc cmp add push mulb mov mov popl lret fild mov cmp xor test mov pop sbb add push pop cmp sbb (bad) into mov aam dec scas push jne cs shrb xor inc stc scas mov inc and cs test add pushf and or xchg stos cmc lret inc ss test mov xchg mov xchg rcrl cmp scas pop mov push (bad) push push push hlt push or sub je,pt sub ds arpl and xor loop or cmp xor dec xor mov cs cmp test (bad) push out add stc add cli dec mov rorb dec push add fcmove fwait dec cmovb aaa fisttp mov out (bad) mov fisttpl add repz cmp add jb xchg xor ljmp (bad) adc ret jge mov cwtl mov icebp insb jl xor inc sti cs (bad) push loop out out outsl cmp sbb adc xchg mov dec dec xor mull cwtl movsl divl or out xor mov adc cltd jo std xchg dec sub enter movsb cmc pop mov xchg in aad pusha cs in lds push push add mov fild mov xchg fwait mov imul push lock pusha lret ret jnp (bad) or icebp sbb in adc call pop adc stc mov add jmp inc insb sbb add sbb popa add je enter jl mov popa adc int mov fnsave outsl mov or std iret test loope jb mov (bad) fildll pop lcall fmuls inc adc in push ror and adc lods fwait mov (bad) pop je pop pop test insb cltd out adc int3 add nop (bad) dec (bad) mov dec fucom add popf outsb int sbb scas cmpsb pop bound lret and mov pusha addr16 fnstsw mov roll jae jmp hlt jg xchg outsb fcomps sbb lret cmpsb adc fs lcall mov mov sbb pop add mov mov jno pop out imul sub lods divps out in lods jge adc ds (bad) xchg dec adc int add xor lods movsb adc sub icebp (bad) pop sbb sub das jne mov arpl push add popaw push mov mov loop aad and aaa negb das les xchg sysenter dec loope popa addr16 popa mov xor mul in fstl lcall in and jbe jl call mov loope lds and mov pop sub mov xor jp push cli adc or mov inc sbb pop adc cltd cmp sbb arpl lcall mov (bad) jbe,pt inc (bad) push and mov popf out ds clc push mov push mov mov popf mov mov std adc mov or (bad) jge enter pop mov mov rcrl inc dec dec cmp scas mov xor xor xlat mov adc jno into test (bad) adc add push rcrb mov in out lods rolb pop or adc add cmp sub or adc xchg sbb (bad) fnstsw testl fildl in pushf pop mov popf outsl loope push mov xchg in mov lret inc scas jo xchg push or (bad) int movsb dec aaa sahf mov push fiadd fsubs repnz repz ffree xchg mov je and or mov mov add mov and scas and push mov mul push push ret mov xchg cli movsl xchg jnp stc sbb xor ds or adc push (bad) enter stos out push xor cmp push ljmp movsl adc mov dec fs sub jo mov stos xchg mov inc cmp je mov in adc mov jae ss cmp aaa sbb int test mov test add ds adc call cld jmp js sub cmpsl push add inc xor outsb push test mov nop in jno js imul imul lock cmp ljmp pop ja and jg stos xor sub icebp stos mov je adc mov pop fsts je mov cmpsl aas jg fdivrp dec jb sub sub shl (bad) dec push insl dec popl hlt push dec clc bound mov mov jle,pn push jns cmpsl fiaddl int3 in int3 cmp subb fwait bound in sbb xchg push out pusha xor (bad) jmp inc nop aaa fisubrl aad in xor dec add cmp push test jae sub mov nop xchg inc scas fnstsw sbb (bad) fnop fidivl bound addl test pusha into mov mov lcall add inc dec das add aas cmp test or dec imul enter mov hlt (bad) inc les lcall aas jo into inc mov (bad) xlat pop and mov call imul out lock test mov jmp pop pop cmc stos cmpl in lods dec rorl pop cmp in xlat push clc xchg fxch inc and pop mov dec lahf sti arpl or inc (bad) stos int sbb push pop aam popf scas xor push mov (bad) push orb pop repz cmpsb push or fcoml popf repnz xchg jno out or dec sbb je sti mov test mov jae arpl fnstsw das xchg ja cmp aad pop arpl fcmove mov cmp loope addr16 xchg inc imul jbe mov insl adc pop adc jmp cmp sbb jmp das sti jo adc cmp bound out (bad) iret mov mov clc mov iret gs add mov ljmp mov in sub fstpt push pop mov push aas inc and jecxz xor (bad) enter out aaa jae adc dec daa ds mov inc push loope pop test dec sbb lahf and jb cs inc sbb inc daa mov jge loopne (bad) cld pop aaa aam sbb test enter jp mov mov sub lods rcll in scas scas mov (bad) imul push subl dec push xchg popf loop adc out (bad) xchg out cli lret mov mov dec aad sub (bad) std pop and inc sub jp inc cmp jle out mov mov pop test (bad) sbb fsubp mov (bad) rcr lock arpl lret call push insl std inc daa scas cmp pushf sub pop fisttpl cmp mov loope (bad) (bad) out add out faddl je mov push jge mov inc jns cmp sahf inc mov mov stos lods jp or mov lcall mov (bad) (bad) xchg mov xchg push leave inc jmp add ss (bad) sub es sbb adc sbb push or mov clc pusha iret cwtl mov (bad) lcall xchg cmp and lods jle dec lds das jo jge bnd ds inc mov inc mov lret imul cmpsl fld std xchg mov lret xchg jmp jecxz gs (bad) (bad) ja mov pop jle das sbbl mov mov cmp jmp outsl push sub push decl adc add fs sti inc negl std divb in xor pop xlat push jg sti push mov out xor mov dec ret adc mov adc add or aam mov test hlt jno scas je (bad) in imul jmp push lods pop or mov mov das add add mov cs cmc mov pop lods xor call scas pop pusha and pop je xor mov pop mov inc pop xchg mov (bad) mov mov cltd loop add sarl lock pop imul das xor cmp jg adc push test cmpsb mov pop jp lret sub (bad) jb popf adc mov mov (bad) mov sub icebp insl ljmp sub test cmpsl je out push lahf inc test push movsb or mov xor addr16 icebp cltd movups lret cmpsb jp (bad) cli pop pushf shlb push out xor imulb inc ret aad xor aas popf xchg inc std inc cmpsl cmp xchg jnp or and ret mov jl dec cli popf jmp jns lock push sub mov and mov lea call in cwtl pop pop fnstenv dec add dec dec inc je (bad) in mov cmp out loope les mov inc push sahf dec mov adc (bad) mov es jnp shlb pop aas test push addr16 repnz fistpll icebp jnp sbb sbb mov sbb mov into pop or stos test ljmp fdivl cmpsb mov adc das pop jp inc dec hlt add adc xlat scas sbb (bad) push outsl xchg or inc jl and push (bad) adc add pop pop movl xchg mov lcall fwait gs fisub js lret call mov xlat pop mov fidivr insb lods scas in jl add xor stos xlat xlat sub cmc test and mov add fisubr out add push pop arpl pop xchg mov lcall pusha fs or stc jg (bad) push xchg fcmovbe xchg sub sahf ljmp push xchg subl fs js mov pop xchg mov lea (bad) lret aaa inc cmp lcall frndint pop jge jae push mov add fcmovnbe push fildl dec addb test (bad) cli test nop mov xchg add rolb jnp aas sti cmp sbb lret shrl inc xchg inc shlb in xchg dec cmpsb int sbb cmc push mov fstps scas inc cltd lcall fistl fnop xor insl sub pop outsb cmp xchg adc (bad) scas sbb iret lret into pop fs push aam negb lcall cmp inc fs outsb pop ja or cmpsl imul or or stos sti xor sbb jbe xor leave icebp popa mov popf and xchg rcll and jmp test pop fninit mov mov loope imul mov lahf insb (bad) lods jle dec push outsl sub inc stos addr16 jmp shll nop jns sub cli loope mov mov call inc ss jmp jecxz in push xchg clc jbe das sub push lret fimull call (bad) mov jl fist (bad) and mov sbb add (bad) (bad) jbe (bad) js dec adc arpl add push mov dec jl (bad) divb ss ds stos mov xchg mov add mov inc jno bound mov or ja ret inc adc ret arpl or pushf inc call dec sbb nop imul sbb pop add jmp push jnp mov adc push sub push cmpsb stos dec mov pusha pushf stos (bad) sub rcrb (bad) or movsb xor jg push cmpsl push into pushf sub pop mov je jmp or add notb test lahf in mov sub inc outsb sbb mov add inc jns sbb mov or add dec pop in adc push and xor cmc rcll inc loopne mov sub cwtl mov xrelease and mov and ss sub adc push imul xchg ja push sti push movsb (bad) cltd jg mov push inc fiadd lret addr16 insb xchg scas cmp fsubrl adc rorl cmp adc out pop sbbb cmp sbb dec mov out push push xor stos inc out imul mov xlat sub xchg (bad) xor sbb cmpsb inc pop lds push xchg fnsave mov push pop mov das dec mov in pop pop scas mov pushf int3 jb lcall jmp add loopne mov jle cmp insl push icebp out inc inc mov lcall sub test fwait lea xchg pop jg adc test icebp icebp sbb scas es popl in mov jbe iret mov jo mov (bad) jmp jno test pop in pop push (bad) pusha test and adc sbb and lods push or (bad) cmpsl lods fwait addr16 fidiv sub and movsb fldcw xor pop xor xchg pop (bad) sti cmp (bad) leave movsb mov push ret mov out les bound sahf mov inc cmp mov lods add xor push cmp cmp pop jne mov inc and mulb scas cmc jnp daa inc repz (bad) lea (bad) fsubrs nop xor (bad) and aam popa outsb in sub (bad) ljmp jbe jne,pn out dec loopne rcr enter arpl adc rorb fidiv ret cli mov and loop insl sbb dec adc into adc push stos inc dec nop std rolb (bad) pop jp or xchg les pop dec or movsl outsl cmc xor bnd das cmp aam lea inc pop test push mov jp inc add push gs iret dec or pop out (bad) lods je jg notl loopne addb rcl fist std pop rol sub push sbb (bad) fisttp cwtl aaa outsl cmp scas in cmp into cmp adc add cmp jnp enter in xor mov fucomip push mov adc dec inc shll call push les call mov lret pop xlat jae xchg and les or popa fcmovne mov insb outsb mov pusha jo setl int and pop mov lahf nop addl xchg jns xor and push test enter enter and mov test repnz lcall jns pop push xchg sbb out mov lds and out cmc lahf xor mov ja pop xchg and fs test sbb fwait out push test stc inc jl decl xchg pusha jbe loope insb cmp mov insl add decl adc and fs push test jno and mov sbb stos test pop into adc adc lea leave test inc add in jae subb and mov mov xchg mov pop cli jo adc push aam jo fwait jne adc and scas les insl and mov aad mov mov lret push (bad) xor in cmovne cmp inc jge xor adc call cwtl cmp in cld xchg out xchg (bad) and sub ficoml les pop xor aas inc lcall mov lahf test sbb jecxz stos test push cmpsb fimul outsb cltd jbe sbb xchg jmp jmp add dec cwtl mov lea outsl push push and mov inc sub out pop adcb jo pop jns scas jnp or dec insb pop fstp jae lcall call out lret pop sbb dec (bad) imulb sar mov hlt xchg mov jg repnz insl hlt jp imul out adc leave cmp jbe mov sbb ret inc pop cmp mov sbb push pop pop bound lret int (bad) adc dec sbb iret js xor (bad) in fnstenv mov out add scas bound mov hlt jno repnz xlat (bad) faddl inc lcall sbb adc sbb mov mov imul mov lods xchg daa xor cmp stos call dec sbb and cwtl inc pop add mov int mov nop insl push es push aaa lock adc (bad) xor mov xor test push in cmp mov push mov (bad) xchg mov hlt pop outsb scas das fnstenv inc cmp jle leave mov sub loop adc sub aas pushf out sti aas lahf jne mov inc decl inc icebp sar xchg push mov adc sbb sbb popf lods mov dec xchg imul or jb icebp mull push cli inc jns lods jo inc sbb xchg fnstenv sbb inc jp insb jl or or cmc sub lods sahf jae mov and ret xchg ds jmp jge daa in lods mov cwtl mov xor inc push cli pop dec mov jl shll sbb lcall push ds aad xchg dec xor sub std call add pushf pop gs scas inc lcall in inc sbb jbe insb insb gs adc jp xor andl fsubrl and add jae sarb stos adc sarb lods xchg cltd mov test popf fdivl popa mulb pop jb or mov push (bad) popa xchg xchg dec (bad) pusha fidivrl icebp (bad) insb jle cwtl xchg jo ficoml mov lcall mov jo fiaddl push xchg sub out out jp xor sub (bad) xchg jp jle fidivrl pop mov cmp pop rorb fcomp push daa jl int3 in call rcrl clc call mov dec sbb cmpsb iret shlb call xchg mov out mov stos mov cltd jecxz mov jbe jge pop into les imul lds push jp jl mov adc in jbe push sbb jnp paddw mov call xchg cmc mov inc sahf bnd push rolb jno adc dec andb cld hlt mov rcrb mov jbe add xor adc dec mov adc and push mov inc out add dec dec lods out call xchg dec iret add xchg inc das push stc mov sub mov push incl and xchg dec in iret and mov adc pop (bad) in mov push adc cld leave nop jno cli test or push icebp in ja jb or int iret (bad) ret (bad) fldl mov lods loop xor xchg push adc clc js es (bad) or pushf out in jae cmp inc add sub pop in lods les shr and cmpsl cs mov out mov inc test cmp mov das ret sbb jo push adc mov cld mov fidivrl push popf rorl or mov cmp rorb add out push jb or lret lock sbb adc pop sub call sbb ret inc and jns dec shl clc xchg pop loope pop sbb bswap jle cltd sub lods insl jmp sahf lret add pop in test push mov fs fistl fidivrl mov xor scas and dec std rcrl (bad) aad mov test rorb cmc das adc ljmp lahf xchg bound cmp rorb jp and es lahf xor aam aaa sbb xchg and mov shll xchg std gs push add sarl test jmp (bad) mov loopne dec inc (bad) data16 data16 rcl and test mov jmp mov inc (bad) mov test (bad) or jge add sbb xor cmpsb arpl fmul fwait lds mov jge pop xchg js ficoml mov cmp cs js clc inc jle push mov in gs dec inc pop inc adc mov jae xor push outsl mov pop jo test test aam add sub mov inc test mov cmp xor mov js out nop inc shr cmp aas enter xor jno insb test xor pop jecxz call xchg add xchg js xor inc cmp push iret mov rcl xor movsb pop or leave addr16 or xor (bad) or add or stos jmp push add add sub mov (bad) icebp adc sub inc push jecxz mov daa push sbb fwait inc mov jle test stos push cs fmuls dec mov cltd loopne xchg outsb sbb cld sbb jo fsubrs cmp jl sub inc das adc test push jnp mov inc mov cwtl into lods pop hlt push mov xor xchg mov data16 pop call mov xor stos orb lea ret xchg add arpl cltd sub dec dec pop cmpsb jecxz jo xlat jo inc or adc ljmp into icebp sbb push sbb and lret (bad) mov xchg sbbb push sub dec add lret xor roll push loope adc in loopne xchg gs js in jmp jae jge fnstsw push lds movsb inc pop adc jbe negl out jne add inc in test dec std lret add mov and pop fsts push and cmp sbb test dec adc int3 push outsl imull imul movsl inc xor nop aas test lea lea inc (bad) jp pop loopne mov push (bad) mov lret xor xchg (bad) add cmp and stc (bad) leave jbe ret lods mov fild sahf out test push cmp enter int3 mulb and insl mov pusha pusha fdivs mov cmp dec icebp push push xchg cwtl cmp xor aaa iret into or ds xor std pop mov xor push orl dec (bad) fxam test or sbb xor adc sub (bad) cmc jp sbb xchg fcos mov (bad) jo (bad) jae jle rol cmc push icebp sarb (bad) fcmovu xor mov adc movsl loopne add (bad) xor and pusha inc ret int3 in mov cld ror loopne dec jb xorb xor jp sbb cmp movsb or xchg lock dec call roll xor mov inc in cmp jbe dec fucomip mov inc les aas sub jle roll enter shlb mov or mov mov fimul (bad) ljmp cmpl push insl cmp mov lods sbb (bad) or push push (bad) out fidivr push xchg insb in push push xchg fdivr scas and rorb or ss xor xchg cs out in mov mov sahf outsl out repnz jb fildl jae adcl nop cmpl mov and mov iret nop or stc in sbb jg inc and xchg add push loope lahf fidivrl cwtl arpl fnstsw inc and jg mov cmpsb dec cmp (bad) aaa stos out cmp das fwait dec lret push fs psubsw jne and dec je das lods (bad) call add scas mov push movsl sbb sub lcall ds loop ljmp cltd dec lret mov outsb xor test js jle xor jge mov inc cwtl or and inc fsubs cmpsb push lahf mov aad sub jmp mov mov stos fs or jb scas sbb mov push push pop or (bad) xor or pop lret add stos or mov jmp adc xor mov ficomp enter fisttpl test mov inc fldl xchg lret aas adc adc add sbb test lret popf cmp fs cwtl call sub push (bad) dec push pop stos pop or insl push cltd cli loop cmp jns clc (bad) xor in mov jl ljmp push loope or push loop cmc bound fstp jo movsl mov cmp jle jl mov and jmp decb push mov mov ds push push add sbb cmc dec lods rol mov in fsubl sub mov shr jp (bad) outsl push mov cmc dec notb jle incb mov lret test inc int3 xchg inc sbb rcrl xchg lea or and imulb mov insb mov in and imul and push pop in xchg dec loopne or push leavew andb nop add rcr lahf pop push leave ficom test in lret mull cmp addr16 mov inc subl pop push aas cmp mov lock dec jo jg push gs js int3 jnp jl cmp adc int3 mov ja iret (bad) jbe mov inc xlat aad insb push aas negb dec imul bnd inc outsb pop jae pop inc mov cmpsb es xor xlat out icebp aaa cmp pop (bad) addr16 shrb mov pop out mov jle or test cmc ficom dec lock sub lods and test adc mov gs jns or cmp push ret and push mov loopne xor inc loop into scas lret test add jmp lret inc dec ja addr16 push push adc cmp xor mov add loopne cmp arpl jge aas lds pop (bad) mov pop pop dec inc scas cs mov (bad) test mov add into push rcll ds rorb cmp cld lds inc and or nop xchg nop int3 sub and je fwait scas dec mull sarl push dec icebp mov sub (bad) mov (bad) xor mov xchg push popa in fidivr movsl sub xor mov push movsb cmp mov sbb xor movsl xchg lret orb stos int mov xor jge lret push ljmp jbe jl out and pop mov sarb adc and jecxz pop lds adc lods rolb add daa aam (bad) adc in inc loopne pop les jmp sbb into mov mov xchg pop loope jbe jle dec inc sbb mov add mov std sub jg data16 cld push test imul adc out xchg pop mov inc cmp push xor pop subb pop adc out mov cmc out mov push cmp mov push mov xor es ret add (bad) and je xchg dec js fwait adc or dec xchg mov jl inc or jb push inc sbb hlt mov mov fwait ss out lea inc dec adc adc in jle xchg int movsl jno pop ljmp xor push mov pop sar call adc rorl out es push dec loope outsl aad and adc test sarl mov ljmp insl ficomp or mov mov les arpl adc fnstenv clc es std xor adc out mov rclb fcmovnu das lds jmp gs rorb inc push cli inc mov out test (bad) add sub ret adc cmp pop inc sbb loopne dec ret mov cmp roll loope jp inc inc inc test push aas dec movsb daa mov enter add jmp outsl in cmpsl subl scas and test sub pushf sub loope icebp clc ja mov mov xor fdivp imul push adc (bad) push adc and hlt push mov mov das fcoml pop pop and adc jnp pop fldt cmp xchg jne loope sub fcmove push fcoms dec nop jbe mov mov and mov and lock mov fildl test (bad) pop push and hlt out mov mov (bad) (bad) mov es sahf sbb movsb js jns aam int3 repz add jle ret jo xor sbb ffreep or outsb xchg mov (bad) sbb fwait scas sub pop pop sti xchg pop mov push fs mov cltd cmp mov icebp mov or nop and icebp iret sub sub push xor jl mov cmp int (bad) and rolb imul pop jnp sbb out xchg cmp dec push call add sbbb xchg add fsubrs test mov scas mov stos fisub fwait es rcrb js ficom out insl and arpl mov aaa nop jae aam push or jle int3 pop shrl mov sbb xchg setge lods lcall jbe stos and test xor nop xchg pushf iret iret xor (bad) cltd sbb push and test push es outsl rcr add test xor jne adc nop dec lea mov sbb adc sbb daa mov pusha out cwtl push je pop pop (bad) shl inc sub mov test xlat pop rcll (bad) mov (bad) jmp mov dec sbb mov pop jbe leave lcall sub stos nop sbb fisubr jae push rclb mov jae mov dec ret (bad) xor push rcr mov imul lods inc cmp lock js pop aad pop cmp popa test add cmpsb mulb icebp sbb loop iret push mov mov sbb test test gs js push rclb ficompl lahf into add cmp imul cld fsubrs dec inc xor test mov cwtl (bad) loope sti jnp xchg pop pop mov mov fsubl bound xchg outsl sbb mov cmpsb xchg fsubr repnz mov inc dec dec aad clc sahf shll xor sub data16 push jecxz out loope shrb inc sub in cmpsb cmpsb in imul sub int aam xchg mov cmp fcompl and push pop mov fwait (bad) jbe sbb pop pop cmp sahf dec popf xor in stos call xchg pop mov pop cmp mov cmp adc xchg sbb das (bad) mov dec stos xchg push (bad) or fstl popf les les push lods (bad) adc (bad) mov out sti push test cmpsb ret mov ret (bad) inc cmp pop cmpsl adc ret and dec sub ja inc sbb ljmp jle pop iret popf push fiaddl (bad) dec fxch add cli in and subl lahf and ljmp or repnz dec or ljmp xor adc inc das rcrl sti mov push jo inc mov adc and sub sahf and int xchg dec (bad) bound fiadd mov ss xor or push pop push dec and sub mov fnstenv adc insb dec in pop mov push or push das mov fsts pop mov es rcl and sub or jg xchg nop adc ja add ret pop fsubl or fptan imul mov push mov out movsl lcall scas or sbb mov (bad) cltd cs sub js and dec mov int stc xor jne daa outsl lods insl cmp ds xchg cmp xchg xlat xchg jge test movsb or or and inc sbb ficom adc popf add mov adc sbb dec icebp mov dec add add mov mov in (bad) imul inc pop xchg xlat int pop jno call fistpl pop mov test pop outsl icebp in pop pop das out inc mov pop sahf pusha xchg dec xchg (bad) pop jnp rcr adc jne xchg sub in es test mov iret mov fcoml adc add rolb mov sbb add (bad) mov inc mov adc xlat (bad) mov (bad) xor inc dec adc xchg repz or jge cltd adc and rorl rcrb leave mov loopne inc sub mov push add jno push popa and fnclex in sbb xchg adc mov xor dec pop cmpsb add mov out pop jb into mov xlat mov out fisubrl jns adc sub pop dec mov jno nop push ljmp out and sub call test mov push xor in push jb push sarb icebp outsl push add aaa fwait fs and imul sbb movsl xchg mov ja cmp cwtl out and sbb mov out gs sbb jnp nop mov aam or dec ret icebp cmp aam iret xor dec cli xchg push mov mov sub push das push or jnp inc out shrb div pop lds sbb test imull fwait popf push jno outsl mov sarb adc jno stc mov enter xchg or add pop jmp pop pop mov mov mov mov out xor cltd out push daa je pop jb or xor aad lcall xor push es idivl cmpsb push inc push jecxz aas mov aad dec daa mov sub gs xchg es sbb or addl in mov lods inc pop pop rol xchg push fcmovbe fldz cmpsl and mov outsl lret mov sub sbb mov sbb lahf fcoml fsincos lock push (bad) in lock push xchg loop adc mov dec adc or imul xchg icebp mov xchg popa jo and movsl dec pop dec aaa adc add or pop call mov loop sti mov out dec and jnp jno cmpsl aam push divl repnz push (bad) lret ret arpl push push cmc lods cltd (bad) mov or je add xor outsl fcoml xchg leave notb jecxz repnz (bad) (bad) lock sbb jo loope lds xor sub jbe mov lret stc out insl enter stos sar mov push insl adc lock or cltd cmpsb sub test xor dec jl cmpsl cwtl sar adc pop xor movsb adc ds mov cmpsl pop je xor mov ret push pop ret jp dec addr16 jl dec leave stos dec xor ret int pop call xor pop movsb mov int imul pop fs adc jge lret data16 pop sahf popa pop jle sbb adc ljmp cmp adc mov hlt pushw nop fnstsw idivl (bad) hlt mov sub xor and pop lea mov mov aas ficoml scas lret pop scas xor ljmp outsb (bad) cmp pop andl fildll rcll and push xchg nop hlt pop xchg inc iret fwait xchg push ret lock lea add icebp sub repnz mov mov jge xchg incb fadds mov add pop pop xchg push cltd jae movsb and lret add sbb loopne xlat and jne inc shrb bound aas sti sbb andl push push (bad) insb sub mov sub cmp das pop lret jp adc mov movsl inc scas and daa scas inc sub repnz dec adc loope adc gs jg dec and cmp call inc (bad) pop in leave sbb (bad) ret inc inc pop enter sbb sub xchg mov or shrb in bnd cli into inc mov (bad) repz repnz popf fisubr sbb data16 lret mov xlat push dec cmp pop and lret and sub add push inc shrb mov cmpsl out pop jg push fsub into ret imull (bad) jl adc xchg (bad) in xor icebp lea out inc lea fsubl aam loop push out mov out inc outsl mov xlat cmp add cmp pop movsl push pop cltd and mov or fmuls xchg push dec lahf iret in loop lods lcall or clc xor mov inc iret pop add jb or insb and dec add xchg mov data16 xor repnz adc (bad) xor inc das cmpsl aaa bound mov pop mov mov fwait xchg out movsl loopne lahf imul adc mull cs jge sti in (bad) stc sbb mov pop mov ss (bad) mov dec cli aaa mov and lea cmp mov movb ss push sbb int3 bswap dec outsb js jecxz cs jo pop pop jo cmp xchg pusha add cs fdivrl in adcb int je push (bad) lds (bad) ficoml imul fwait xor notb push ja lods ret lret mov and ljmp cmp sub call and clc addb sahf push insl enter ljmp push popa ffree push clc adc in add adc fwait pop push mov mov ljmp insb push test hlt cltd jnp hlt ret (bad) jge (bad) lock clc dec (bad) push pop ja scas lret fidivr and popa in mov movsl xchg or xchg insb inc mov inc mov jecxz xchg or rcrl lcall jle cld les popa inc out mov lods adcb sbb sub pop inc pop sbb cmpsl es cmp repz adc adc mov jo stc popf aam cmp jp add or push pusha out xor jg leave mov popf repz arpl lock xchg xchg jmp inc or dec push jmp test pop add sub call clc pushf into stos ficoml jbe adc cmpsb gs mov sub ljmp add iret mov mov jns sbb xchg xor mov movsb gs in sub mov jo cwtl mov dec rcll int jbe out pop lcall xor mov push xchg and jae adc mov dec popf es call adc dec cwtl je (bad) mov jl test adc imul inc mov mov cmp sub xlat jl sub mov mov test mov xchg out sub xchg pusha push aam test sub jmp sbb xadd les sub mov mov test sbb pop adc pop push out repnz xchg mov stos shll and or mov sbb adc outsl pushf and cmpsl lea (bad) xor fcomps popa xor mov push jo sahf dec rcrl dec pop aas fdiv cmp jp mov jl lock stc pushf push fisubl pusha mov mov test mov jl mov pop daa adc in mov lahf shld out lds push jle xchg ret jge mov inc icebp out adc dec add jnp pop xor inc or leave imul adc shlb pop fcmove (bad) dec adc rolb push jle aaa es loopne repz pop adc stos mov xchg inc xor (bad) xchg adc aam sbb out clc mov mov jecxz add jmp inc add mov push cli stc dec cmp stos push push (bad) popf test lock into xchg notl cmp out mov aaa sbb sub xor imul sti in (bad) mov fldt aam mov lret fstpt xchg enter stc mov cmp lfs adc hlt sarl and in push int aad lods jmp js arpl shrb mov in (bad) xchg or add and enter ja aas xchg inc std (bad) popf je push repz sbb mov pop fisttpll sbb sahf mov dec pusha mov rol jecxz ds lds sub or lcall push inc popf jle scas aad outsl dec jb pop push out push sbb mov jmp cmc or or (bad) leave pop aam mov sub xlat ret fwait imul dec test jbe push xchg gs cs icebp out push std (bad) in out xchg mov push push mov mov (bad) out inc mov test adc ffree pop dec and sbb dec repz in xchg sub ljmp jns inc pusha repz adc dec mov cmpsl fdivl leave sbb arpl jmp mov aad dec dec jns (bad) mov xchg sbb inc test mov lods mov sahf and bound pushf push cmovne cltd and push mov pop ss mov fs movsl mov cld scas int inc lods xchg pop push in jl mov out (bad) mov xchg cmpsl push popa and ljmp inc pop mov dec inc or (bad) mov int shll mov mov adc stc pop push std dec (bad) jb pop jne jne cs pop addl js xchg mov dec (bad) rcrl in sbb jnp addr16 call or push test lock lods out cwtl jecxz aad xor stos es sbb mov pop pusha fucomi mov pushl mov loopne fwait shll das adc cmp adc negb aad mov arpl xor cmp jle cli call std xor mov add dec cmp inc icebp xchg pop call cmp jecxz push icebp (bad) jp mov loope cmpsl pop sub dec int pusha mov bnd mov into lea push cmp test dec fidiv ja and jo xchg ljmp pop fadds and cs cmp push cmp lcall psubd lret cmp inc jbe aaa jb imul (bad) out push scas fmul sbb and jae xor lods jecxz mov xor cmpsl jb xor cmpsb mov iret sub mov xchg xchg dec push fimul lods out mov loopne ret ret aas gs mov sub jns cmp ret gs push pusha inc push imull pop mov push es in jnp loop aaa pushf jge shrl call dec pop subl std ja sbb push push idivb leave cwtl mov and loope divb jecxz sub jne clc mov lret mov xchg mov sub sbb imul dec add jmp pusha ret jnp in mov add mov or adc or inc loopne adc rclb jmp rolb mov test sahf sbb int addr16 xchg stc pop cmp loop cmp icebp xchg fmull adc add mov add out (bad) cmp outsb mov (bad) arpl and inc dec mov mov sti insb xor xchg cs xor adc mov aaa fs rcrb cmp cmp js out popa fmulp pop (bad) sbb push pop test pop je sahf xor mov movsl iret jl pusha or insb dec pushf mov (bad) pop push dec test je arpl or cmp lods add push cmp in repnz xor mov mov sub scas je pop shrl (bad) es mov stos int popa inc mov xorl scas lcall push pop sbb pop xorb push push push (bad) aas pop int adc sbb mov incb xchg mov enter mov and jne mov mov pushl mov cld dec movsl add mov andl sti call adc stos mov or out faddp dec mov mov jbe or fs ficom mov mov mov es pop mov fnstsw sbb jl mov out les mov or incb dec out std adc out cmp add mov xor (bad) cld inc loopne shl push into insl ret aas mov mov jbe push and pop xchg mov mov je clc mov xlat mov ret cmp (bad) jecxz cld or sti mov xor loopne fstl adc add mov scas push and and test lods das xchg (bad) dec and xchg mov cltd movsb out push sbb outsb jge (bad) mov inc push stc insb xlat sub cmpsl adc ss add jo xchg or and push and in sbb mov push mov inc mov ret inc mov mov inc sub add push mov mov loopne (bad) (bad) sub lods xchg mov btr test jbe mov pop rcrb cmp jge and stc add and enter sbb addl in jne stos (bad) mov cmpsl ds scas or mov into (bad) js scas js out or jecxz ljmp jns jmp xchg (bad) std arpl out icebp and rcrl sbb push lcall inc push push dec pop popa movsb insl mov push popa enter pushf outsl inc cmp pop push loopne adc in cmpsl mov hlt adc popf mov push or loope movsb pop xor pop and adc xchg mov cmp add inc mov test out sub adc (bad) mov addr16 pop shrl or jnp cmp or or mov rcrb add push push loopne (bad) jle push fucomp rcl pop jo mov or es in mov mov jne dec ss sub dec into jb pop push pop push and and jge aad mov pop inc lret aas lods nop repz loopne imulb aaa xchg jne testl pop push and sar and scas mov (bad) push push stos call inc mov cmpsb sbb mov xchg dec ror loopne loopne push or mov add scas fstpl push inc insl lret lcall rcrb mov inc movsl icebp loop movl push rorl jnp mov mov mov xor xor cmpsb sbb inc mov sub iret mov and xor xor add jne and or (bad) inc mov cwtl cmp cli in jl imul pop arpl aaa mov pop dec movsb iret push pop in popf fwait fs pop jmp enter adc pop aad xor push xor cmpsl jae jne iret (bad) in pop mov or or mov insb push jecxz test aad xchg sarb jg push jmp fsubrp mov mov or mov cmp add mov xchg sbb shlb call push mov mov adc call test incb xor pop dec fsts fwait out adc mov lret mov cmc xchg fwait int3 jl ror stc insl mov out insl xchg sahf fdivp push mov cmp cmp add lods jns mov xor out mov (bad) dec das aaa mov cli rolb pop jmp pop sbb xor and pusha mov test jge das cli and jae fstcw dec mov lret or sub mov divl ss imul std push and cmp cmp pushf out mov and fcompl push movsb (bad) ljmp cli jmp iret or sbb ret dec mov dec xor movsl push sub (bad) addr16 fsubr cli push addl mov dec ror ss adc lret jne outsb add cmc test sbb loop and fidivr daa xchg dec xchg cmp fstl inc and jmp int and leave test pop xchg cmpsl out (bad) loope mov and fsubrs push fdivrs push (bad) (bad) xchg ret sbb test enter mov jge sarl jae jmp and repnz xor in dec sbb dec hlt push sti movsb xor sub pop mov mov test mov cmpsb adc out sub popf cld mov aas mov hlt push divl jno jg cmc jae fldl cmp mov int loop cs loope ja gs cmpsl cmp mov test mov wbinvd add pop mov push lds xchg in sbb jbe xchg sub mov cmpsl sub leave (bad) mov iret mov nop adc push call inc outsl pushf push adc in sbb les inc push mov xchg pop out push xchg xchg pop mov push xchg sbb cmc cs pushf mov adc cltd into cmc repnz jmp out lods pop fimul out mov jbe jb and xchg adc cmp add xor jne bnd fisttpll dec fwait sbb adc rcl jno cmc addr16 into scas movsl ret push inc lods xlat addr16 push repz sub adc pop out imul notb leave fcomps jg or or dec lock jp popf cmp jmp rclb mov dec (bad) xor pop cmp and ret mov fbstp pop sub mov jbe xchg adcb jb fsub xchg imul mov push cmpsl lods push inc pop frstor mov mov test mov xor or std dec mov les mov aas in lahf adc inc movsb inc inc or (bad) cmp jle jno push test js adc mov stc mov or inc mull ljmp sbb adc and aaa mov out js cltd pop add in not scas incl std test mov mov or imul js add jne xchg test es mov dec mov push cmp pushf mov push mov dec sbb negb stos cmp sub add adc sarb cld jne xchg and mov popa adcb lahf xchg mov jne jp mov cmp sbb jnp inc xchg push hlt sarb add dec stc and arpl add es int3 imul adc out inc pop cmp xor cmp mov leave mov cwtl mov mov pop stos xlat fwait push fsubl out test mov jmp inc dec data16 jnp pop pop test sub pop jecxz inc xchg cwtl dec insb push xchg (bad) push add mov jo ljmp xchg ljmp js mov pop hlt cmp sahf imul insb jnp xchg sbb mov lcall mov adc mov inc add rcll xor inc ss movsb xlat pop jb xchg fiadd lds add arpl sbb in mov fisttpll je,pt jg shll cmpsb lds sub roll sbb aas scas pop (bad) add and xlat mov out pushf flds sbb (bad) arpl test movsb (bad) inc pop mov adc sarb lods xchg rol stc adc cmp (bad) cmpsb scas mov fs cmp ljmp push inc repz es push mov rcll test outsl jno dec push jbe adcl pop mov xchg andb jle lahf dec test adc mov push lret adc rcl fwait sbb popa mov daa push push insl mov decb je dec stc mov inc and sahf dec mov mov sub roll in test int3 fildl add and and ret xor sub push push std sbb ja mov mov bound jmp jb push jge jno lock sbb je sbb mov imul (bad) xlat cmp scas stos std (bad) loope mov lods add aaa push int3 imul xor add jmp and loop inc (bad) xchg sbbl mov (bad) scas in xchg dec add mov int adc jae out jns ljmp aas rclb movb push iret adc or addb push xchg int mov out cwtl sets sarl inc add fistpll sbb cmc inc popa jle test xor mov ss inc aam cmp imul mov out lcall pop sub mov and jo jo ja cmp cs push lock out and ret sub rorb pop roll push cmp inc xchg out cltd cmp (bad) pop shll loope add inc fsubrl movsb or mov inc call mov lods adc mov movsb push pop sbb adc (bad) and sbb sub in inc mov sub dec js inc sub lahf xchg icebp hlt jp dec lret int3 aad push mov std push push idiv lea ss mov mov insl stos (bad) adc enter adc mov push mov pushl ja lret mov cmp xchg mov pop xor push push stos jns push daa repz and pop xchg cmc xchg push jl mov mov adcl dec rclb popf mov aaa jp shrb push insl add mov xchg and popa push movl negb mov test sub or mov lods hlt xlat loopne fsub repz clc jo in cmpsl pushf sahf fsts movswl adc mov fcmovb scas nop cwtl sub pop add lret pushf adc xchg mov pushf or adc inc pop test mov adc jg inc push add sub test or push and sub xor das pushf and test inc divl inc push adc pop or sub je leave mov (bad) stc adc and icebp push (bad) mov lahf out inc add in push inc sbb adc es xchg pop faddl ds pop orps pop mov add ret aaa into shr (bad) movsl mov push xchg flds jp,pt sub cmp sub les mov movsb adc inc xor sbb lretw xchg scas adc gs les xor jae ret into leave or sti fisubl mov insl stc sti popf arpl mov or pop lods loope mulps cmp ret mov or xchg cmpsb push xchg fs xor cmp add add add les sub (bad) rorb pop ja cmp cli jae dec test pop or cmp repz cmpsl mov leave jo aas pop cmp lds (bad) into ficom aam adc jno dec cmp fisttpll xchg dec cmp pop js movsl and notb fcompl shr add dec bound movsl cmp clc add mov push aas out stos pop (bad) sub mov clc mov dec loope adc mov pop mov fwait hlt repnz cltd adc outsl daa dec push sub pop loope out jp shll and int sub inc xchg mov aaa push jns repnz mov pop cmp add imul scas in data16 outsb js ficompl or push stc (bad) repnz pop cmp imul bound lea push lea sbb xchg rorl push in jo out jno cmpl dec jns mov (bad) fdivs add fisub aas fadd div cli jbe sbb push mov mov cwtl (bad) mov mov inc push aam std repnz ljmp jnp call rcrb frndint sbb fs incl rorl cmp ss fdivrs mov std and (bad) mov lods cmp sbb jge out pop roll outsl sub negl add fbld int roll outsb mov scas push xchg xorb outsl repnz outsb fiadd (bad) pop idivl dec (bad) fimul mov scas iret ret and ss jle and lods movsl xchg mov xlat into sbb sti (bad) jo lods leave scas push mov cmpsb nop xor xchg or jge stos sarb (bad) fisubrl (bad) clc movl arpl frstor pusha mov sub addr16 in mov or mov mov push stc mov mov xchg pop xor (bad) jnp mov das and lea imul out jle loop std xchg mov xlat lods aad inc jle push aaa shll xlat gs loop loopne das adc dec fadds mov xor negb jle loop or push dec inc sub jbe adc sbb cli push or sbb jecxz mov push jmp or fdivrl in rcr mov sbb adcl xchg out cmp sub and mov xchg lahf cmc sbb sub popf xor sbb insl mov fimull pop outsb dec ds inc rclb gs les stos mov jmp mov arpl outsl mov (bad) mov nop test inc push (bad) mov add cmpsl pop jae and xchg (bad) push (bad) dec push push outsl fwait xor stos mov sbb mov data16 lods jle in popa insl and shlb aas push mov sub (bad) jae mov scas icebp frstor and sub pop pop lcall hlt scas aaa sbb cmp mov insl xor mov push mov ja cld dec sbb dec add fidivr pushf dec pop sub sub adc mov les push xor jp mov jbe jne mov xlat lock pusha cld pop movsb mov fsubl in mov orl inc xor jne int fldl lcall outsb int lret xchg dec daa mov dec dec adc std adc sbbl xor cs popf sub out mov fildl jo in aaa add mov xor inc daa lock pusha jne shl pop cs mov (bad) pop mov mov xor rolb jno pop or pusha add (bad) enter sbb jg sti jne rol or xor int ds jl (bad) xor (bad) or jecxz cltd mov imul cmp repnz ss add repz dec jp mov jne add (bad) sub dec add repz lock leave stos in jne scas out pop jae sbbb test out stc mov ret and mov pop inc pop addr16 out push pop pop adc dec lahf cmp jmp jecxz out (bad) and sbb stos push inc nop iret out arpl dec out adc aad mov pop or xchg sti (bad) sub pop mov adc cltd fist cld cmp pusha fs stos adc add (bad) sub sub cmp out jl adc adc outsl or inc jne mov jb jns pop add xor repz fistpl pop dec dec in pop pop mov es jne dec imulb pop paddusb mov jmp sbb push mov ficompl gs xchg inc adc shlb ljmp call andl sub or mov mov std mov nop lock shrl mov mov sbb adc jge cmp jge inc adc cli popa fimul cmc scas iret jno loopne mov out jp mov push (bad) repz sub int (bad) out outsl mov xor push dec mov adc std dec dec add push mov xchg leave lret scas (bad) incl bound es xchg fwait jne mov rcrb jecxz jl xchg rcl fcmovne lret xlat fwait pop xchg das push stos arpl or pop daa mov pop sbb xchg sbb enter adc incl imul cs ret xchg and dec loope shl cmc push push fimull cmp push mov test jecxz je push add aad shr xchg ret pop das or andl push lret pop push mov in or out ret sbb addl jae insl inc ljmp mov js jne dec dec adcl ret das pushf test in mov cwtl insl dec dec push (bad) dec js dec mov pop mov lds jg int3 xchg dec sub xor inc cmpsl sbb aas jbe pop ljmp repnz dec pop pushf fdivs (bad) testl loope adc sarl negl es push xchg xchg in das cmpsl and fnstsw clc add ja jmp dec pusha add xchg mov cwtl mov xor stos (bad) imul lea mov sbb dec enter or inc sti outsb iret imul and ffree (bad) fsubrp inc movsb int push icebp push jae aam dec fwait add dec push mov mov lea popf cli fstpt test hlt loopne or jl pusha dec inc loop aad cltd popa ficom adc test fldl2t pop in (bad) mov lea inc mov mov scas push push scas ljmp jp jne subl adc adc mov shr mov push movb ficompl jmp fcomps lea adc xlat add stos sti fildll mov in inc lea pop pop stos pushf int3 std adc stos and xlat mov into xchg push das xor outsl imul shrl jne pop jp sub insb sbb pusha stos imul mov mov popa jg hlt cwtl jge mov daa popa and fldenv or and (bad) stos fisub mov adc add and and or jecxz popf insl into into (bad) sub scas ljmp nop ds xchg lea jae pop pop ror push cmp je sub mov jnp cwtl pop jge ret xchg out shrl bnd push jnp push stos sbb insb ja inc inc movl iret add jp pmaxsw popa sbb inc out xlat inc iret out push popf cmp pop repz ljmp frstor test rcrb xchg lock ss jge mov lahf (bad) cmp add insb in pop (bad) jbe xchg fdivrs push mov aam sbb fild push (bad) movsl or mov lcall sbb inc or leave mov mov adc out iret adc and xchg cmpb sti cld (bad) sub sub outsb inc out jle ljmp xlat pushl inc cmp icebp push jo cltd jecxz mov sub jne xor addr16 sbb sbb dec adc jg jne pop mov aam int3 pop iret clc dec add dec in and jae clc mov mul jno pop push push mov fcmovu arpl pop sbb jecxz sbb in aaa mov repz insl popf jg mov xor subb dec dec inc cld sbb xchg test mov push std decl (bad) std mov cmova rcl sbb mov stos cmpl add pop lods in repz cmp in mov out lock lret addl std pop xchg push loop ficompl mov sarb test xor data16 add rolw out mov adc and aam (bad) jbe popa adc loop stos xlat arpl or addr16 mov push push jl xchg jle aam ss push cmc inc jl dec gs daa add and xchg imul test and push push mov dec mov pop push adc fisub cmpsb fisttpl cmp inc (bad) clc cmp (bad) aaa lcall into lds cld xchg and in pop mov out or cmpsb daa add adc push (bad) lahf jnp sub mov pop mov xor aam adc aam fcompl cmp mov mov bound inc fdivp js jns cli xor jo stos pop mov lds repnz add (bad) sarl int (bad) mov xchg mov add fiadd xor add and (bad) push aam outsl adc xchg dec inc cmp negb stc mov inc mov push insl push and scas mov lea insb inc imul iret (bad) (bad) int3 jo push push sub arpl ds ss xchg xchg es jb daa movsb mov test sub jp push add push and mov jne and decb mov mov insb mov adc lcall imul sub or mov mov lret mov mov into and sbb xor ss loop mov iret icebp aaa push add mov jecxz dec xchg pop inc mov test sub aam ljmp xor jl sahf test ret rclb ja dec or add outsl mov aaa (bad) rcl ret sahf cmp mov mov je jnp ljmp inc call dec push cmc add jb pop (bad) push pop cmpb icebp lods mov inc enter cmp bound pop mov xchg sub push pop mov dec invd (bad) popf aam cltd ja cmp ss sub movsl das outsb xchg jecxz repz lock movsl lods in adc jge add aas jno cld pop pop xchg call aas aaa sbb inc dec lea imul sahf mov xchg mov dec xchg pop loopne pop jbe or push into mov mov and outsb sbb xchg jle jecxz cmc push push jmp xorl cmp push push xor pusha sbb dec inc jle mov jp (bad) lods xchg and and mov daa push pop sub xchg popf mov fwait dec dec lahf outsb pop addr16 mov cld dec sub jmp jge dec xor enter xchg push sbb xchg (bad) cmpsb push mov call mov mov xchg and cmp sub jae lcall loope insl cmp jae inc nop nop fs xchg clc and xchg sub vmovdqa add sbb insb scas or add fidivl adc dec popa (bad) push setns les test aam add sbb (bad) repnz mov je,pn fnstsw sbb jmp xchg flds lret inc cmpsb sbbb jno mov lds stos aas cmc aam das mov adc mov xor cltd mov push out insb pop into mov jbe in xor loope push push fcomps jge dec cltd adc repz xor adcl subl clc lods loop popf fidivrl push jg sbb xchg push jae mov pop xchg popf push jae loope out insl xor xchg in js sbb jne mov in shll (bad) xchg movsl jg sub fdivl sahf jl iret loopne std sbb call cs and and daa repnz jge and dec outsl (bad) sub into fldenv xchg pusha repz (bad) jno loopne mov or sahf es ror and and cmp or ss into sub gs leave mov ficomp cmp les pop insb js das pop xchg push lds dec pop push inc and or fisub mov mov xchg lcall mov rclb mov pusha into push shrl stos cld cld loop jmp cmp dec mov cwtl add pushf dec push xchg xor push dec add insb aam pop (bad) pop xchg imul xor sbb cs je xor and mov push xor (bad) dec fstps gs jle push xor sub lret mull inc aas sarb inc adcb jne lds mov aam (bad) mov (bad) inc jmp or fadds sbb (bad) leave xchg fadds cmp push je sti push or out sahf ss (bad) cmp out push add xorl aad js xlat fisttpl aad push mov fwait scas repnz int sbb (bad) pop (bad) mov pop shlb neg stc fstpt fwait outsb rolb fsubrl aad fs pop add xchg pop and lahf inc dec xor add pop jg cmp dec pop es fucomp outsb cli loope test cltd pop mov imul sub insl or in jno in jne into lds inc hlt add pop fcmovne and aad insl scas sbb inc add inc pusha (bad) ljmp xor bound in xchg pop std jp jle lret and dec int icebp (bad) and push stos push push test and sarb dec enter sbb ficomp xchg mov mov jmp into sub dec mov repz push push inc lea push testb iret sahf mov mov push pop movsl sbb fmuls stos adc jno xorl or lds cltd movq arpl cmc sub cmpsl lahf in dec pop lret scas add push mov mov mov cmpsb in fsubl sbb lods mov xor push jo pop addr16 lret pmuludq inc fistpll lods ret sub push mov mull mov jo jl lock mov jge lods pop jne mov arpl je mov ljmp xor add ljmp push and mov adc sbb data16 or sub sbb aam into ja rcr loopne inc inc or push dec pop mov inc pushf jg mov jno int lahf cmp dec repz mov dec mov mov inc fwait negb rolb xor hlt sub jmp cwtl loop add dec lahf imul int sahf jo dec lret cmp push (bad) enter add loope loop js cmp orl push cwtl or add fisttp or inc cmp lock sub les lret in pop nop add aas adc (bad) fmuls shlb mov inc aam dec stos mov test adc push aam (bad) in out inc lods scas jb mov jae enter cmp dec nop cmpsl mov sarl shr jle dec or stos cli repnz insl subl and das data16 mov jo movsl gs pop mov pop dec lods test in (bad) cmp xchg scas inc xchg outsb add (bad) (bad) out pop (bad) fistpll sarb dec (bad) adc (bad) sbb push jg pop pop sub inc pop in test movsl hlt sub (bad) cwtl icebp push insl sbb das sub and jp rcll lret out rcrl mov aam adc aas cli xchg mov xchg in xor mov imul daa add scas push movsb stc ret ror mov nop sub test push or push xor and inc xchg push inc add jbe push js mov cmp jmp mov xchg xor pop xor nop dec ret stos inc mov push sbb sub cli push xor mov je dec push imul mov cmp xchg or (bad) icebp jb rorl push adc push scas cmpsl movsl jae push in mov insb cmp xchg imul insl arpl lret xchg rcr jp add or test adc push cmp insl pop push mov mov sbb inc and pop inc leave ss add add jno cld cmp jno and inc inc lret jo mov (bad) out mov scas int jb jb and and lret push pop adc add cmp xor inc or in mov das pop jmp rcr (bad) adc mov daa mov pop hlt xlat movsl mov mov and add push mov mov loope cmp inc decl and xchg scas push insl outsb mov xor jge mov js mov push sti aad in add mov leave test mov pop jne jl insl stos push sbb scas cs dec cltd sar jae scas mov push fmuls cld mov repnz mov out icebp jae mov and sub es push jmp sub pop mov jns jl fdivl xlat ja (bad) mov bound sahf imul cmp notl push imul loop cmp stos es js inc pop cmp sub sub pop jno ljmp dec push sub mov mov pop mov add cmpsb cmc aaa (bad) ljmp and xor arpl push mov dec lods add out mov insb inc imul in inc inc int fwait xor xchg dec dec mov std jne les aam aam cmpsl ljmp cmp lcall xchg xlat fnstenv jo sbb cmp dec gs mov inc gs mov push inc sub out lods xchg roll addr16 out fwait cmp xor sub je inc push dec cmp mov lret xlat inc popa insb jb test scas adc jbe or adc lods dec push imul adc js into cmp push je lcall xchg or or lods xchg and jge mov lea cltd dec lock sbb mov mov xchg in xchg inc dec int sahf xchg cs fs mov push cmp lret fsub mov xor ficom jecxz xor movsl sbb nop cmc pop sub (bad) push test dec sub add xchg dec pop mov push sti xor sub dec bound jno sahf xchg out jbe int adc or jmp std cmpl pop fs add lret enter mov push mov movsb mov dec sti cmp xor cltd cs cmc xchg mov jl sahf xor repz mov cmp dec call das cmp and pop dec (bad) sub imul dec push popa stc mov mov stos jecxz loopne scas fcoms je enter dec stos xor test insl sahf or push lea jmp cld sub and or (bad) call je int3 cld insb test repz and movsb jecxz ffree mov mov popf cmp or (bad) xor cld mov cli call add ret stos mov add jo pop (bad) ss cli adc xor or mov xchg push cmp mov adc xchg jle test (bad) sarb xor mov cli push pop cmpsb mov sbb sub cmpsl sub (bad) clc jns adc dec rcr sub dec das push fdivl dec lret ret (bad) daa out push and inc cmp add cmp cli stc sub mov dec inc xchg push inc ror push push lahf xchg sbb cs dec jnp rorb gs insb jge inc sbb jmp icebp cltd stos xchg xorb pop dec sti or aam jb xor add dec inc push or dec mov sbb int3 cmp inc pusha flds jle clc jno dec int addr16 mov stos outsl push inc push fcom lea xor cmpsb mov std sub scas push cmpsl mov lods sysenter (bad) fmuls sbb (bad) xchg jae in addr16 je rorb cmpsb pop inc fcmovnbe ret pop outsb mov aaa std lock pop rclb arpl push mov adc mov ror push push arpl (bad) jo std xor push or pop loopne add push outsl sub sbb cmp inc iret cmc pushf movsl movsl and test ss stos fdivrl jnp shll adc push mov cmpsb jmp mov push mov sub or aas push xor aaa and repz dec daa ret xor aas rcrl xor and fldl and xor xchg xchg push xor ljmp test lret add les pop adc (bad) cmc adc add lcall fnsave imul mov push shlb iret pop adc jb xor jg sub sahf sub cmp into movsl pop mov insl dec mov out jno jnp cmpsb sbb dec mov push xchg or mov push jns adcb lret and cli iret arpl cmp mov pusha jp in jmp lret xchg xor roll xchg (bad) pop cmc dec dec cmpsb jne int3 es imul inc and sub lret (bad) data16 aas fnstcw sarb or dec scas sub mov add dec negb leave (bad) daa arpl test push mov hlt cld das pusha popa xlat mov leave adc inc daa out push lods fnstenv xor movsb adc cmp (bad) mov or cmp pop mov pushf loope mov movsl mov cmpsb push repz (bad) int3 jecxz rclb mov (bad) rorl mov iret jne add insb jne push mov cli stc pusha mov cmp dec dec add (bad) mov lahf cmc cmp cmp or add (bad) inc data16 fmulp push sub inc cmpsl lock xchg jnp mov mov adc push stos jns cli mov lds aaa call roll lahf cmc test rorl lahf mulb sarl jae notb lret push jmp push mov mov adc leave into outsb loope or mov xchg add push test jl jns xor ret hlt jno (bad) ljmp imul into pop lea dec lahf dec xor lea sub cmp sarb dec push fwait out loop roll jb jg add push xorl scas mov jl lea pop repz xchg test jo aaa mov pusha (bad) pushf stos mov xchg std movsl pop mov xchg repnz add insb xchg fcomps jns and sub or ret adc sub sbb arpl pop push dec ret xchg pop xlat cwtl add dec movsb and repnz inc push mov xor xchg pop sar xchg test mov stc inc sub sub jecxz lret lcall inc lods mov fcomi push adc push push das pop test cs (bad) mov std mov add sbb push pop shrd mov pop dec or sbb pushf in lock xchg and adc jo addr16 push xchg pop add adc cmp sahf jp cmp rcr or sbb std out imul (bad) aas jp movsb lahf test sbb je xlat xchg push into sub push (bad) or or addr16 mov aas push inc outsl sbb iret je xor in (bad) sbb insl sub and sub jne xor jb ja out cmpsl cld mov xchg nop fs fidivr repz pusha in jne mov idivb jle jae test sub cmp call pop or add pop jp dec push cltd outsb roll lock sub mov sub pop xor mov push jbe jmp push add mov clc test aam inc mov cmpsl cli push push fsub mov addr16 push outsb in sub xor xor iret mov pop sbb and mul stos add int fldcw fldcw cmp aas in add jo jmp nop mov lods (bad) mov loop cltd pop (bad) insb and lods xchg inc sbb in mov mov pop adc test aaa xor add jno mov mov mov pushf ret mov and scas jle jg loope pop mov sarl inc fsubr pop mov and (bad) aam movsl dec cmpsb rcll push loopne,pt (bad) jb inc mov lcall cmp xlat jp and xchg inc push outsb xchg ret fidivrl fimul rorl jno jno lods cltd adcl fmull shr jo int3 inc push xlat push push mov sub lock pop mov cmp fs mov mov sub push mov jmp cwtl push sti (bad) loopne data16 xor mov bswap cli sbb and fcmovu dec and hlt movsb pop mov inc and push adc push pop movsb outsb cltd andb xor imul sar jno incb inc add add out xchg cmpsl adc inc mov jno adc int mov pop popf mov scas push mov jp push and jecxz pop jnp cmpsl das and inc adc out xor std pop or das jl jmp cmpsl icebp mov mov bound add mov stos arpl adc jecxz sub loope dec outsb (bad) sub pop cmpsb pop (bad) lock ficom sbb addr16 dec push inc and push test and mov insb int3 popa fmull stos jp adc mov mov ret aam in lods mov sub lock repnz mov sbb ret sbb pop inc add movb sub pop xchg lahf outsb and jmp out push aam lret in imulb mov aaa sbb jo arpl stos pop add out mov data16 dec test add add scas push imul push push (bad) lds push mov fs sub adc stc jmp insb sbb xlat ret fsubrp inc sub ljmp inc (bad) addr16 ss or shrl mov add xchg mov inc nop imul je lods clc ss mov fdivl adc outsb mov out dec mov popf dec mov rolb mov pop mov ret das push sarl mov out out xor sub dec insl adc sbb (bad) loopne sub inc and xor and fisubr mov int pop iret lds mov out fldcw mov ret sub insb (bad) (bad) jo pop mov mov sbb cld (bad) enter (bad) lock dec scas int3 dec scas addl add call push imul std dec mov pop add mov lret mov or popf cmp push cmp fistpl jl out (bad) ljmp test push (bad) cs frstor sbb push xor mov out sahf push push movsl les sti mov pop push push cmpsb push push out in push jne pushf lock push sarl cmp add js test adc jmp sub push xor clc cmpl out push mov add push jecxz pop outsl scas jae popa jp subl mov addl xor (bad) sbb cmp mov aaa hlt popl xlat jb mov out push (bad) sub or lea and repnz (bad) cmpsl negb sbb push jmp inc test pop movl scas adc lods xchg cmp push xchg aad mov mov (bad) and jmp gs maskmovq negl lcall stc push pop xor out insb push scas mov es cmc cmp cmp aad loop mov cmpsb (bad) dec andl pusha add sahf inc rcrl xor test dec fildl sub and rcrb pop int3 (bad) les dec add sub add (bad) fwait js xchg jle xor xchg push lods out xor lock fistp arpl lea pop out mov cmp jb mov xor (bad) pop sbb call fldcw cmp mov (bad) mov shr adc fldcw rcll dec les loop xor sbb je pop fiaddl sbb dec add xchg mov in adc rorb fcmovbe movsl daa std das push in aas imul arpl jo cmpsl jle mov pop lock and sbb inc cwtl mov cltd mov imul or cmc dec cld inc and mov xlat pusha or cltd icebp fstl xlat movsb sub pushf xor mov aas int cmp sub push ret cmp decb xchg adc hlt pop sub loope jo ja cltd jl mull dec in mov inc iret mov mov adc scas in insl push cs notb test (bad) stc (bad) mov call mov aas cmp das jns push jle mov pusha (bad) push pop lret sbb loopne jnp std pushw cwtl idivl sub aaa adc sub sbb jns and mov (bad) fbstp stos mov insb mov inc ja jp (bad) aaa pop in dec rolb mov in mov (bad) xor movsl xchg push hlt out xor jge mov push pop lahf and and add arpl inc lea cwtl pop sub mov xchg mov jne push push adc lret into mov jg loopne add xchg xchg fwait imul into int or pop pop out mov push and cs mov sbb ret (bad) pop sub dec out pop inc dec cld and sbb lcall cmpsl mov pop aaa test adc std mov add sub sbb mov ja mov sub xchg clc xchg (bad) mov jecxz das and xor insl sub ret es das sti dec movsb clc (bad) sbb inc cmp movsl shrl nop xchg fldcw call sbb push and flds push test loop mov inc scas js pop into adc lret stos fsubrl in rol mov cmpsb dec fs out xchg rorb mov (bad) jg ret test movsl xlat aad push out mov mov sub mov daa notb daa push js ss sbb jno hlt lea xlat mov pop sbb cld ret (bad) sbb test jg or cld test ds mov lods xlat clc lahf sbb imul movsb adc push jg mov push xor pushf int3 inc jne (bad) out jle xchg call lcall (bad) inc ja jg je mov xchg cmp cmp xchg mov adc rclb maskmovq imull loopne dec stc cmp inc jmp cmp dec lahf mov pop in scas jge js xor stc out scas inc enter inc lods pop in clc mov dec sti aaa mov add adc cmp sbb mov mov inc aaa inc sub mov inc imul les push sbb test mov jge in insl jge fistpl mov jbe mov lock and push xchg (bad) xchg (bad) (bad) mov icebp sub bound or inc inc (bad) xchg ds movl dec push inc fnstenv sub push fsubrl daa cmp lret addr16 mov jmp mov or loopne add cmp roll jne and insb into jge push jne push fs ds xchg dec or leave ds lea mov fcoms cmp lods mov rcll fldl cwtl inc gs mov inc (bad) xor in add (bad) or mov dec jae mov outsl xchg lods xchg ljmp inc jl push sahf aad aam movsb mov scas (bad) adc enter pop xchg lods repz adc mov cmp pop sub loop,pt push stos fildll inc iret adc jae out fsubrl ret dec ret ds mov push sub sbb test sti nop and (bad) in (bad) dec das insb cmc repnz pop sbb outsb add push or call add mov int3 sahf data16 inc jns aaa stc jo pop and call xchg xlat aad mov xchg cmp push sbb or add and dec clc push jg adc add pop bound out fs sbb mov mov test aas repz popa xchg lods xor xchg sarl ds fwait notb adc fidivrl fisubl push (bad) cld (bad) and mov scas push call add xchg cld xor mov xor outsb push orl sarb jg je pop adc and lock sbb xchg lcall fcmovnbe fcom add xchg and sub jnp gs xor xchg fbstp stos fbstp cmp (bad) mov decl insl stos mov and lahf ret cld push cltd std int adc cmp out mul push mov (bad) les loope push pop in push leavew insb mov lcall dec pop (bad) jg fisubr sbb test pushf dec inc movsb test or (bad) xor and pop inc jl pop scas add sub aam dec popa aam dec cmp aaa cmp inc outsb push ljmp add ss cs roll sbb adc cmp es dec jp stc cmp mov in push or mov jp mov mov hlt test std out xchg lods arpl jp sahf push je rolb outsb cs stos rcrb mov int3 test mov repnz sub cmp cmp iret xor fsubl inc arpl imul addr16 mov jb and xchg (bad) cmc push push rcrl dec test xchg pop add pop pushf push outsl mov sarl push mov es mov loopne inc jnp xor hlt jl repnz adc mov pusha cmp lret sbb mov cmp push cmp xor (bad) movsl insl xchg in lods push lahf pop arpl sbb ljmp in test adc push adc pop aad inc in sub les in test sbb lock andl or (bad) test ja out cmpb lods mov inc in cmp popf sarb add (bad) ljmp mov xchg xor or addr16 les pushf pop iret jae sbb mov cmpsl shlb push ret outsl es sub imul pop or push adc jl cwtl cmp insl push jns loopne cltd jnp,pn jecxz mov fisttpl cltd push jmp jl jge fisttp iret sub mov lcall or jbe out nop subl push pop (bad) jle faddp mov loop aaa icebp push out cmpsl xor add adc (bad) shll and inc lods jge or push subl std cmp inc xchg (bad) dec (bad) and stos out dec rorl cmp (bad) fstpl faddl lahf push data16 mov sub into mov cmc cld loopne sub arpl loopne pop inc mov add ret xchg std jae jo fmull jmp gs add push loop test xlat push add mov sbb mov mov jbe fadds jne negb es dec out imul mov repnz add add mov rorb shlb sub pop out cs sub dec imul fwait mov repz xchg in leave test sbb adc hlt sub adc insb jne popf (bad) cmp loop (bad) stos add cs leave (bad) sub cmp and inc call xchg inc and or inc add shlb pop or daa pop dec popa mov xor mov mov ljmp call (bad) sbb or in mov xor cmpsl or out xor int fimull mov fstpt je mov pop cltd mov inc ss mov insb clc rclb gs mov mov inc mov shlb xchg test push sbb mov xchg movsl jno mov pop stos dec cld push xchg xor sub mov or inc dec lcall adc lock add sub mov cmpsb mov stos fld1 loop or pavgw xlat dec popf inc into fidivr mov aad jg push add inc xorl jle in fstpl (bad) and sub imul mov or ds mov jae mov jo test gs enter dec scas lea push and pop xchg aas in (bad) movsl dec dec aaa jmp daa mov push pop jne mov mov aaa icebp adc aam cmpsl out iret push add out cmp mov lret stc imul repz push xor sub shl jno rorl jl pushf sub jno sbb int gs xchg xchg inc dec lahf jecxz sbb mov outsb imul addr16 lods xchg adc and fmuls add xchg adc data16 jnp jmp cmp push cmp cmp add add adc and push mov push lods (bad) mov mov add movsl pushf imul in aas or sub adc out jo sub mov or pop cmp pop loope add mov adc imul mov adc xor push loop notl div and cmpsb pop add test or mov mov orb int inc push flds rcrb imul lcall outsl xchg push inc arpl jns sahf mov aas daa xchg add loope xchg enter push add in (bad) divb pop mov mov fsubrs sub xchg xchg sub shlb insl mov sarb or fbstp pop xor push jbe outsl mov test icebp pop sbb push mov fwait daa lret imull not sbb sub add push or das fisttpl scas je movsb cmc and adc xchg adc lcall lret xchg or movsl int adc or add sbb jb dec loop mov pop mov out (bad) add cmp ds js lods into test in sub jnp fstpl push jno cmpsl pop mov jle xorb in inc adc xor es sbb cld sbb test popf lcall gs or in sub int3 repz xor xor dec and mov sbb pop xor adc pop adc adc add inc xchg mov mov sahf jg push or stc adc call push rol inc loopne pop sarl iret (bad) out in mov or mov clc jge cmc add mov dec ret je mov mov stos pop jecxz test and push lds fwait lcall orb push iret shrl cli nop mov cmpsl inc pop lahf jbe dec dec or and or fsubrl xchg cmp lods mov andl inc inc cmp xchg inc xor fstpl int mov lods xchg jo or inc push scas hlt movsl outsb cmp popf cmp fiaddl in inc arpl (bad) push int mov xchg push sub inc xchg in mov adc scas lahf out jl cmp movb loope push xchg xchg and ja cltd dec call pusha or jnp xchg sub incb jnp push mov insb clc ja clc lock repnz or xor lods jecxz mov xchg scas loope xchg and adc idivl lods out out xchg popa pop gs scas pop (bad) mov jecxz jge push jns pop cld xor xchg call mov enter lcall mov popa mov mov hlt mov stos (bad) pop in in mov cmc dec inc lcall fcmovnbe adc int or shl std pop roll fs out insb pop cmpb (bad) insl jns xor bound imul fistpl push sbb popa pop jno push loopne sub sub pop (bad) xor scas mov push scas dec ljmp add lahf roll lcall inc das push add cmp lock mov push sbb test mov and pop cmp in push lods mov fwait ss lods jmp mov (bad) fistl xchg inc or xor enter gs shll popf or das mov std and lock cmp jo ficomp (bad) pop xchg xchg shr xor mov popf ljmp test pop lahf dec pop sub lea adc in push imul in cmpsb aam jg sbb test add pminsw mov scas add fucomp jno stos xchg sbb daa cmc pusha das test int3 dec inc jl repnz frstor in xchg pop pop rorl daa scas cmp mulb mov sbb pop ja adc ss mov rcrb (bad) popa inc cmp and inc sar leave pop mov popf (bad) in push (bad) sub sbb roll sbb mov roll push icebp jle xchg out sub cmp pop jg add imul or fstps dec push push pop fimull sarl into (bad) add fs outsb cmc xor cmpsb pop push pushf cmc jb int3 es add adc orb sub lock fdivp push pop mov fwait cmp std jg jae mov test inc fcmovnbe pop mov movsl xlat or arpl cwtl pop pusha jmp pusha jo cmp jge rcl mov lret mov fnop ljmp xor pop iret cmp mov aad leave fnstsw outsl add (bad) cmpsb adc and (bad) cmp dec mov or push add xchg popa and (bad) aas loop loopne jl xor mov xchg mov fstp out pushf or (bad) or out xchg pop subl sbb mov push in pop jbe cwtl movsb pop ds sub push cwtl js fadds cmc aaa stos sbb sub xlat jge jbe imul pop xor movsb (bad) push pushf scas inc mov add cmp cld mov les sub popa (bad) rcll outsl outsb call xchg mov xchg in std lea pop sub les lret xor ds push cld push clc insb fdivs movsl and mov lret adc dec in cli jae ja xchg dec data16 dec mov in in xchg mov mov push aas or sub lea (bad) adc daa push dec push aaa xor xchg dec push das cmp push pop sub push fcmovnb lret mov or (bad) mov daa sti scas (bad) in sub push mov lods cmp mov pop in jb popa (bad) add loopne push adc fsts out xchg and xchg mov insl or mov and inc inc lret cmp lds jl ss fcompl popf icebp inc leave aaa insb popa push lods pop mov mov sbb aam and repnz lfs test pop in clc dec insb add cmpsb (bad) mov add (bad) xor je dec jns sbb mov aas xchg rcll test shrl lret loope inc (bad) jecxz leave inc repz adc and mov je lret icebp les pusha (bad) test mov iret sbb lods mov in cld and adc test inc mov xchg push inc ja fstl inc stc ljmp pop out push add jo jecxz sbb dec mov es aam sub mov js ja push sahf mov mov adc cmp bound loope and xlat adc push pusha xchg aam jmp movsl cld or loop (bad) push aam js aam mov inc adc adcb call dec dec add cli push adc icebp push mov dec cmpsl or int mov cmp dec rorb push out push jae insl or jl fidivl dec cmp pushf loop pushf int jg mov fmul push test mov idivb add iret jmp mov pop lods cmpsb (bad) lea scas adc or jge (bad) ss loop lods inc (bad) or insl pop xor lea mov sub jb xchg mov mov pop push mov inc rorb sar inc jno les pop push arpl inc push movsb pop shrb ljmp ja cmp jne mov ret in dec jle dec popa js clc mov mov out cs pop xchg sub dec add xlat (bad) sub mov or popa insl xor mov adc fnstenv mov xchg imul testl popa add mov out add insb scas adc (bad) hlt cmpsb fiaddl adc xchg lret mov pop push mov shrb rolb popf inc mov xchg xchg xchg push sub and in mov pop dec xchg repz sbb mov inc jmp add scas lret rol pop lcall cli xchg mov jecxz mov mov push push mov scas pop adc cmp sbb or adc sbb stc xchg daa jle inc cltd mov adc add sarl xor out fildll test (bad) adc sbb and xchg cs mov scas hlt lret adc test push xlat inc int3 daa dec dec jmp movaps fsubrl std cli lahf lock pop pop outsl addr16 lods sub incl or aad je lcall dec mov (bad) mov cwtl and rorl imul data16 das pop pop xor fild std call add in subl popl inc xchg mov sub enter out cmp sbb cltd dec scas pop cltd les ret icebp and icebp sbb (bad) clc sbb mov mov mov lahf loop je les xor and int3 into xchg ds arpl out pop cmp in mov sub sarl insb xor mov in loope cli mov popfw test shrl and sbb add cmpsb cli pop int sbb aad (bad) enter adc in dec repz cmp jp mov dec xlat imull mov mov pop into (bad) lds mov inc pop push pop and fadds fdivp pop into mov mov push jge mov ja incl dec sbb xchg pop repnz test nop dec mov cmpsb arpl adc inc scas inc imul adc pop lret jno mov xchg mov fdiv pop mov or ret fmull mov cmp xchg outsl push notb xor and jo and sti push imul sbbl lret cmc push flds jns (bad) fwait adc adc pop cmp cld (bad) fxch pop mul dec rolb inc xchg xor or dec (bad) sti fwait fwait mov mov mov mov pusha mov mov cmp jnp sub test in mov or push (bad) std mov mov pop push loopne mov or fwait adc add sbb fdivl and fnop push fdivl inc add xchg and jp mov mov ds push cltd sub aam mov fucomip pop das jae aaa push cmp dec iret sub cltd iret push or outsb cmp push mov insl adc push sub push push dec aad jne rcl clc jmp mov clc aad in xor sahf adc dec lret out (bad) ja xchg inc daa cmpsb inc popf repz repz xadd (bad) pop dec xor cmp xchg (bad) sub xchg dec clc rolb cmp dec mov push jne repz jecxz and jecxz and sbb push (bad) fmull inc inc sahf cmp jns pop inc call (bad) sub jnp cmp scas mov scas cmp loop mov dec lret fsts ds inc (bad) jmp xchg cmp pop xchg sub lods (bad) sbb (bad) in icebp or insb test xor push add rorl sub xchg (bad) ror push ficompl sub loope std push inc push mov push jnp and dec imul inc push shrb sbb not (bad) xlat popf push xchg decb jno xor test leave mov insl es icebp (bad) pop cltd and pop ret imul ds mov adc push rcll dec (bad) fucom test icebp jp divl sub loopne cmp js mov cmp notb in fisubr xchg jb int dec pushf dec xchg fnstsw pop outsb (bad) mov (bad) in pop jp or dec cmp mov aad jb mov jae xchg dec movsl jg out or xchg sbb scas and icebp or das xlat mov ror mov add lock in cmp mov fs bt jb aad mov mov pop sbb inc mov in mov or dec or dec sub jp loope mov mov sub xchg or int push jno sub mov in adc xor push addb or scas inc mov orb insb clc loope mov push cmpsb in push out mov and iret aaa aad pushf mov or adc subl dec or cltd mov jbe push outsb sub or pop pop movsl pop scas jl pop adc adc (bad) pusha sahf out es sbb mov push mov les adc xchg js ret movsl fistpl sbb (bad) sti daa mov out insb cmpsl icebp stos pusha popf mov jno ret or dec jge stos fisubr mov push cmp mov push hlt adc stc icebp das mov mov inc push outsl ret dec mov jae jne dec mov jmp mov mov inc pushf scas and pop roll pop cwtl jns mov loopne jl,pn jne clc push mov bound lahf pusha dec mov repnz dec adc adc xchg cmp cmc std pop adc adc mov loop mov daa adc jns xchg setae mov stos das pop enter leave xlat jge push fwait rcrl lock push jge push xchg cs inc movsl pop (bad) and and std cli nop mov cli stos nop push sub pop out das and mov xor jmp ss inc jb addr16 cmpsl and pop sub sub and (bad) push insb shll hlt pop ja int3 insl hlt loop cmp jb xor sahf push sbb int mov xorl movsb inc mov mov rolb aas mov call bound xchg jle (bad) jne inc int3 (bad) or inc (bad) in int3 insb push dec cmp lcall ret (bad) cmpsl pop mov xchg adc adc int3 dec outsl pop or cs adc cs sbb inc push dec inc rcrl call lahf xchg fisubr mov popa sub imul inc xor (bad) shl adc mov add add inc (bad) ljmp (bad) into dec loopne cli xchg lock xor loop loopne cmp xor add push jl (bad) stos push xchg or jmp cmc mov mov push mov test jae pop jnp enter (bad) cmpsl decl or lahf addr16 out mov sbb imul sub pop and loope decb pop adc sbb mov data16 ds int sbb outsl jno lahf hlt dec sbb add add pop inc (bad) ds mov xor outsb ljmp fimul int ds lea fs ret (bad) mov int3 sub arpl inc mov jecxz scas outsb cmp clc push and jp (bad) hlt hlt mov jae (bad) mov jo (bad) and lret mov lret mov xlat xchg sbb gs popa add loopne loop add mov das mov idiv jo and xchg (bad) int3 repnz cld iret push pop roll push jb push dec xchg adcl push mov (bad) ds (bad) xor push clc push (bad) mov sub ret ds aas jnp fisubrl pop aaa or mov pop stc insb sub scas inc stos jecxz pop and mov lods cmp dec inc push (bad) call lahf xchg dec fdivr adc mov mov inc mov aad dec (bad) cmc sahf movsb mov sbb push xlat sbb pushl push inc aad dec inc fstl jmp or loope sarb push test mov mov mov int3 aaa xor fmul push or addr16 xchg leave je xchg mov pop sbb orl stc in out and (bad) icebp nop add nop pop and je mov jae lcall or push pop je insb mov add movb xor es hlt test sar (bad) divl cmp sarl adc lret inc aas dec pop fcoms fidivrl negl xor jns or in sbb xor rorl mov pop aaa testb aaa scas xor bound jecxz dec enter sahf mov in jmp mov add lret fsubl and or add pusha loope push mov cmp sbb out outsl test mov push cltd rcll (bad) adc loope mov test and (bad) out push das hlt loopne jbe jmp loope stos cltd sbb add ja mov xchg adc xor inc out popa (bad) mov popa push insl mov add mov mov pop xorl or ret jmp mov add mov xor push ss (bad) in mov ror mov inc rcrl add push mov xchg dec movsl dec and xchg fdivrs or repnz loopne dec jnp sbb adc das jge enter in mov pushf shlb pop and pop hlt jno daa add leave lret stc pop xchg je mov mov xor inc ss cs fs xor dec fwait pop popf cmpsl cmp fwait cld andl dec loope adc les mov stc lcall in out mov dec dec inc and or xor clc pop stos add fiadd inc pop imul sbb xchg push or rclb jl sub jne or and sub jecxz insl les push fst jno xchg and xchg jo sti push (bad) cltd sbb das mov cs sub int mov mov bound outsl cmp (bad) mov pop out or loop jle dec imul adcl xor adc mov stos sbb daa adc jnp xchg sub xchg pop out cld inc scas adc mov sti enter or jp pop dec (bad) jp push cwtl dec out dec dec or and or push and xchg (bad) add pop mov sub mov fsub mov aam xchg cmc cmpsl loop (bad) mov in movsb mov inc pop fbld xchg ret sbb mov jno push hlt cmp mov imul add data16 mov test into sbb adc add sbb repz mov xorb lods pop cs push aas mov sub cmc outsw jnp arpl cmpsb popf shrl jge mov fildl push bound test in adc arpl incb mov sub xor jnp ljmp mov add mov pop pop jno sub data16 (bad) xchg add sahf mov subl pop movsb dec in and stc rcrl or xchg jae out jmp ret mov scas or or cmc cmp (bad) aam mov test xorl sbb popa and inc (bad) add mov popf cmp xchg mov pop (bad) fcomps fdiv inc jle push outsl imull sbb and and lcall (bad) xlat sbb sub xchg mov push cmpl out push aam out fsubr fnsave inc or sbb repz mov dec inc aad push rcr repz sub loop js cmp mov fildl icebp daa mov xchg or xchg dec out (bad) adc loop xchg or push pop pop (bad) or and je mov sbb xchg mov jle mov fmull xchg cltd inc out cld lods or cmpsb push xor cmp in aas cmp xchg popf adc xchg cli mov js push stc and cld mov jae mov scas call and inc inc mov sub inc (bad) pop jb mov add and inc fcmove pop jnp mov loope xchg mov popf lods lods (bad) test add or and insl adc jo inc sbb stos xchg sub inc jno dec jp outsb (bad) rcr jnp push mul loope fwait out incl repnz mov pop adc daa push (bad) test pop sub in out dec sbb mov mov mov and mov movsb loopne outsb pop and fildll rcrb jae (bad) and xor les jmp aam ret in jge mov push fnstenv ficom pusha or xchg add mov aam inc sub and cmp pop cmp sub inc jge or jne inc mov add cmpsb sbb jp mov (bad) jle cs fldt adc or jae pusha ficom inc mov mov in loopne xlat push push push mov ret xchg add mov (bad) int3 xchg mov adc fdivr xor (bad) push imul (bad) lock mov popa mov jmp ljmp rcll xchg mov inc (bad) leave mov js dec data16 and pop (bad) das jnp out xor push jnp xchg xchg xchg in repz mov inc fisttpll arpl sbb push xor andb dec sub jmp xchg cmp jmp or mov cmpsl xlat push shlb fldt (bad) dec mov jns mov cltd loopne sub add adc pop sub out pusha push nop adc stos mov or imul pop and pop inc push xor pop mov (bad) std loop dec adcl ficomp sub mov jge fsubrs cmc mov mov sub sbb mov in fisttpll cmpsb popa rcrl push imul adc mov test ljmp in lods push gs shlb jmp (bad) scas shrl lods int and xor mov aaa xlat adc lret xor mov sub xchg push push fidivr movsb in cli jmp adc xorb lret dec mov xchg lea lcall out (bad) arpl inc cld mov jns fldl mov mov enter push incl cmp ret test int3 and add lds adc out jl sbb sbb mov (bad) or dec pop jg out and cli pop mov and xchg inc xchg mov inc test rcrl gs in mov inc jne inc fnstcw popl je test faddl xlat add ret and mov cmp in adc push and movsl pusha xor push pop rclb sub or or and sub int3 push test and int3 repz push les jecxz lret mov push add arpl inc mov daa dec cmp mov inc jg leave cmp mov pop jne sub rcll xchg pop mov test add inc inc push cli aam pop ljmp int3 aas mov inc movsl lds aaa fsts push popa (bad) mov rcrl xchg xor fwait test (bad) xor push jge les mov push push and aad and mov ljmp inc hlt sub iret inc aas mov std and daa xchg push lcall bnd ja cmp lods js out icebp sti repnz add and and sbb or or sub (bad) xlat data16 cmpb dec pop fild pop rcrb ja imul pushf dec lcall (bad) xor push or inc add mov (bad) push sbb sub or (bad) mov pop pop sub or inc int push inc pop les xchg rcr (bad) icebp clc iret nop into sbb pop sub imul (bad) pop fsubs cmc push leave addps (bad) jecxz dec scas loope (bad) repnz pop outsl push push push or es mov mov popf sbb dec push std icebp rcrb mov jmp mov and inc add dec add js xchg mov inc cmp addr16 mov mov daa stos rcrb ja,pn adc and jnp outsb int divl jp (bad) es sub daa add or dec or sbb mov pushf cmpl adc lods cwtl arpl dec xchg adc jmp divl hlt dec inc ds cmpsl lods pop shrl in imul sbb (bad) mov xchg pop mov stos push pop pop mov inc movsl (bad) enter xchg pushf sub sbb call mov dec andl pop lahf std push call scas pop (bad) mov into and inc imul rcll enter pop mov fnsave lods push mov cmpsl mov sub sbb push insb setg mov repnz or mov pop push pop mov mov and (bad) xchg jne pusha dec push mov inc mov movsb cmpl arpl jp in rcl cmc fs (bad) scas pop add sbb push dec outsb lcall cmp xchg lods sahf cmp lock xchg cmpsl cld mov dec cmp inc movb in sbb dec insl sahf pop push mov cltd push int3 bound mov or mov in lret outsl int3 (bad) mov aaa pop lock adc cmpsb cmp mov add add xor insb mov mov pop mov ret insl je rcl jne (bad) ds (bad) cld adcl repz pop xchg jo ds imul stos cmc cmpsl mov mov fwait div fisubl ljmp test dec stos cmp popf insl and sbb xchg push sub cmp stos dec pusha icebp and adc into popf jae mov dec pop jns xchg and pop mov mov clc adc loop test add sub inc sbb inc or in (bad) sub and into add (bad) add inc sub xchg ja sub roll stos lret inc (bad) sub mov les push pop (bad) inc shld stos dec pushf push inc pop mov cmpsl push subl cld jecxz (bad) or pop xor pop int3 lock cmp pop xchg add lods xchg cmpsl cmpsl fmul in mov (bad) mov mov mov add insl mov decb and nop popf jle cmc xchg push add iret xchg arpl (bad) fimul into inc mov and xor inc enter jns push dec adc lods or pop leave pop inc test cmp or adcl mov and add xchg add das push dec push adc loop imul jg add jb ljmp mov test add xor sbb jae sar add rcl cmp sar jp cmpb push sub pop iret mov xchg push sbb shr mov pop mov inc (bad) and mov insb idivl das fdivr mov push rolb into fwait add cltd (bad) loop mov iret sbb out clc add mov mov fcomps mov and mov add aaa mov pop cmp out es ret adc inc push ds or cmp cs inc out cmp cmp mov cltd pop std dec data16 loopne xor jg push mov or not (bad) icebp out imul jne and xchg in mov add out ror outsb movl stos fwait sub or rcll aas xor shll push xchg fisttp enter loop xchg or xor mov dec js mov dec js add jle ds push pop cld cli inc out pop cld push lret int3 insl mov loop fldenvs and or sbb faddp push test in je sbb xor and pop add xchg pop pop ret outsb xor mov mov jge loope movsb popa xchg lods xlat fs mov (bad) jne out push xlat jecxz or (bad) fidivr cltd jle or fldcw pop hlt (bad) ja iret xor jg pop lcall pop insb mov cmpl adc sahf iret stos pop mov scas cs jp popf jmp pop cmc cmc pop pop sti push negb test stos test or fistl pop add dec sar pop jae jno sbb dec xor out cmp pop insb sbb sbb ljmp adc or mov pop insb and out insb xchg and dec fist (bad) and sub insb dec mov out mov mov or shll test xor repnz cltd pop mov mov addb ret dec cmp mov mov xor jle sbb fcmove ret aam dec (bad) or cwtl stos push out in lea int3 mov push or pop xlat cmp jp cli int mov sub (bad) fcmovne loope adc lahf ss mov push lods roll inc push in enter dec ret call adc mov add aaa ja sbb (bad) mov add gs pop dec stos inc call (bad) pop dec outsl inc jg xlat or xchg pop adc rcl adc jae data16 jne mov and in adc mov popf sbb iret xchg dec adc movsl cwtl mov mov ret (bad) xor pushf popf jle jo mov je mov imul fs push hlt xor jmp mov push sti sub cmc faddp mov aaa xor std xor loope cltd dec inc push adc add ja lods xchg incl cmp ja dec scas das sbb sub lret repz mov cmp jmp pop mov jo inc lahf mov nop jmp (bad) xor lea xlat or add cmpsb imul mov std dec xor adc popa pop push movsb fdivl or adc pop lcall into call leave (bad) cli xchg and int3 lahf test idivl loope aas (bad) into ficom (bad) mov xchg push mov mov shlb cmpsl loopne jmp mov cmpsl cmp cs into inc (bad) jb xchg aad sub mull inc cmpsb andl and mov jo cmpsl (bad) cmp insl fcomps push shl cmpsb enter (bad) iret cmp rep mov xor jo fild xlat mov inc test lcall jl (bad) nop inc fidivl xchg xchg js pop rcrl mov push std dec test add mov push jle out call xchg sbb adc and pop xlat mov mov push pop ljmp adc outsb push jl jl jl test mov dec mov rcrl xor sarl mov inc iret push fcompl xchg cmp (bad) mov aaa test loope dec dec pop dec mov insl push jno imul pop jge adc pusha incb or push popa mov stc or test jo cmpl push lahf loop (bad) dec jle sbb dec inc call cld sbb mov push js push inc push outsb push xchg adcl nop pop iret and test cs shrb outsb stc imul fwait mov lahf cmp inc jmp (bad) imul push fs insl and add imul push or dec fwait jb cmp jle out xlat mov xchg adc xchg loop mov inc xchg std and pop inc xor mov out push mov ficompl cmp or mov iret mov enter in adc popf cli mov sbbl jg xor jg inc mov push jl add lcall push mov pop mov fcmovne dec (bad) scas push and cwtl lods sbb (bad) cs jge jns fisub ret sti mov (bad) mov test sub sub jne push lock mov push pop sub shlb inc xor arpl xchg cmp add sub jbe and sub cmp jns xor aam movsl cli sbb lock pop fstpt jne es mov test xchg mov scas dec dec xchg mov shll push in sbb add in loope dec mov xor (bad) pop add add jno cltd popa fwait jae notb mov sub js dec fistpl adcl lcall cld fucomip cld mov repnz repz pop or pop jne pop iret mov in or hlt xor fscale push or in and jae cmp mov jecxz aas mov lahf xchg mov mov adc sub cwtl cmp jmp dec in cmpsb sbb loopne inc jge mov pusha or jecxz adc data16 dec push pop dec leave enter sahf jg pop push or clc mov (bad) scas in popf daa jp cmp mov cwtl dec push bound add cmc or sub mov jo loop and dec sbb leave ds icebp into bound icebp pop call add cli sbb push test lcall (bad) mov xchg scas xor pop loop cwtl or mov test lods push mov lock repnz add sub pusha dec and add jecxz fbstp pop mov jmp sbb push in insb inc jl (bad) mov mov in push (bad) jmp shll jns push repz add imul outsb mov lds sbb out jecxz mov pop push rcrb shl jae sbb stc lcall std fsts rcr push test cltd ret sbb fldcw sub fcoms push sti xor jbe loop ljmp enter lret jmp bound fidiv jge pop aaa sbb pushf jmp dec test jp fdivl and (bad) jo mov leave dec jge dec xor cmc mov jnp pushf mov lahf cmpsb jo sbb lock sub mov ffree or jp (bad) pushf (bad) jnp add (bad) ret mov sub push xor add adc push movsb push int3 add lock adc mov fidiv popf into xchg xchg (bad) ja mov push pop movsb sbb sbb insl sbbb (bad) aas jp pop dec hlt xor xchg aas and mov jnp cmc mov (bad) loopne jnp mov das push lahf push scas insb add fwait pop stos cmpsl sub jp ja lahf repz push mov sarb mov xlat inc inc and sub sbb fwait punpckldq lods cmp mov scas enter xchg adc jge mov sahf pushw gs ljmp outsl pop push dec mov or out rcl cmp pusha dec arpl mov (bad) fcoms insb imul test pop mov into clc data16 (bad) shrb aas popa sub cltd movsl dec fdivrl adc in lret inc iret icebp xchg lcall out outsb push (bad) mov cmp xchg test hlt mov cmc push pop fs xor push fsubrl mov push cli xchg and ret cmp adc (bad) repz mov jg add xchg subb or add pop inc inc pop ljmp mov xor out mov outsl xor into cmp lcall and sub inc jle in fldl nop aam aaa repz or in adc pop add xchg and lea hlt in imulb push or lahf es and push sbb push sub aam (bad) out mov pushf les loope adc xor inc jecxz sbb xchg (bad) insl adc subb test dec pop sub adc mov mov in stos out or movsb mov jb xchg and sbb pop rclb add enter mov ljmp ficoml sbb leave pop insl lods ja (bad) into xor push stc sahf inc ret xchg mov mov movsl loope inc xor popa dec stos adc sub data16 sbb aas add mov cmpsl sbb mov lods hlt js jb inc jg lods out nop cmp test mov cltd pop (bad) (bad) roll (bad) into jne insb loope outsl jns xor lods dec out xchg int3 inc sbb adc (bad) sti hlt fcompl xchg mov lahf lods sub pop adc (bad) mov daa inc dec mov out std pop mov ja aaa ds mov fcmovnbe or jno jg sub pop cli fisubr mov cmp test mov inc cltd xchg insb fsub push ja cli jmp clc cmp dec lahf leave ss cmp and cmp jp ret gs roll pop sbb mov sub mov idivb xor rcrl pop fdivrp sub pop xchg xchg negl fistpl push je test cld xchg les pop xchg adc mov mov in in ret clc in negb lods push test add mov lods push scas xchg cld jno les imul int test add clc jp push test in or xchg (bad) ljmp jne cmpb inc ds fwait hlt enter xor cld dec xchg pop mov (bad) repz adc insl jl inc xor mov sub sub shrl or mov lret push int3 lock aam lcall aaa jnp push int push gs ret cmp les fstpt mov lahf fs mov sti mov sti mov (bad) repz or dec in aad inc mov loope cmp pop aaa mov movsl lods lock cmp fcompl dec sbb pop bound jb test int popa sub cmc fdivrl lret push inc dec add push push or rorl popa fisubr mov mov cmpsb xlat movsl rclb jl cmp (bad) out sub arpl xlat fstp dec das xor cmp push mov insb or pop aas xchg mov jg sbb (bad) pop pop inc cmp pop sbb mov cwtl jnp aam iret push std fidivrl (bad) lcall pop mov js enter test xor lcall cmpsb data16 dec fstp push jl or addr16 lahf dec call lock pop pop inc fwait sub mov and mov cmp sub test iret add mov xchg in cmc scas cmp lods lret pushf lret dec adc add pusha sbb mov leave cwtl repz pop push add rcr pop jmp pop mov jl xchg (bad) cmp push daa jl fistp mov adc add insl mov mov mov xchg fsubrl cmpb test cltd jp push jmp mov in not cmp inc (bad) cli cs insl out insl dec lcall sbb in (bad) jne mov cmpsb sub (bad) movsl jb rcll fimul sbb lods test int inc mov notb adc nop fs cltd push cmp sub mov and cli outsl pop xchg jnp cmpsb push jbe,pn fistpll jnp andb (bad) adc mov jno add dec cmp or dec pop cld dec inc sbb leave sahf push fdivrp mov mov inc scas mov (bad) fwait lret scas cmpl dec mov jmp sub add (bad) imul imul jno testl inc push mov push xchg jp in rcrl sbb adc scas push repz aaa int3 dec or lret lods testb movsl lahf or aaa in mov fdivs mov adcl and and cmp pop popa mov push xlat push mov mov and (bad) and jecxz mov lods push or imul mov push shrl cmp or (bad) xor cmpsb add (bad) sub repz mov adc bound incb mov jae push mov mov ret aaa lcall cmp in cmp jle loope inc ficomp stos shlb cmp adc das dec or je,pt mov dec push out jns clc subl cld push inc int3 and xchg mov fsubrl es adc push pop push mov add and iret rcll insb add pop mov fcmove mov imul or ret ffreep dec add out add pusha push cmpl and xchg das add orl push into (bad) push add ret mov jo scas inc lahf sub push insb (bad) scas jne (bad) adc lret jmp xchg jmp ror es xchg push into cmp mov pop mov mov lock fisub nop leave movsb bound call scas mov enter and mov in inc lock xor daa movsl test test ss cmp mov mov push jg xchg mov int mov ret pop insl push imul clc inc or mov or in pop fs ss int cmp lods (bad) das rorl push xchg sub push jnp sbb arpl (bad) aaa and in fsts mov sbb or bound cmp fbstp adc add inc add mov and inc pop add movsl sbb (bad) xor adc mov inc in test xchg sbb jb jnp inc stos addl pop out lret jle jmp inc lods pushf aas (bad) mov xchg shrb xchg std out aad (bad) cwtl xchg repnz add push scas aad xor daa sarb xchg add cs mov xchg jecxz lahf inc add and pop inc inc sub pop je sti cmp push sahf (bad) roll jne scas out xchg mov out add cli int3 cmpsb popf out push cld jnp xor xchg xchg lods sti jbe ror mov cmp call (bad) cmp out mov sbb es push es sub mov adc (bad) rolb or (bad) jl mov std sbb mov cmp adc outsl push jp mov mov jmp xor xchg scas mov dec dec ja out mov cmp ficompl mov popf lea iret inc inc inc stc add addr16 in in sbb xor jb mov xchg orb cmp out (bad) mov sub fs fsincos xchg cmp cld dec xor mov test mov push lods negb data16 jns scas pop dec mov cltd and xchg rcll push mov es push cmpsb cmc cmp sub or lret mov sbb mov test (bad) leave movsl mov and add cltd in out in mov inc dec mov jg jmp cmc popf stos sbb mov inc mov push fidivrl add (bad) aad sbb rcll shr sahf jmp jle mov xlat or cwtl dec cmpsb int (bad) sub sbb sbb fisubl jns xchg or push aad ret call add daa push lcall inc add adc mov dec dec sub cmpb iret in ror mov icebp test cs push mulb xor and jg popf or jnp and jmp mov pusha push push fsubl mov icebp xorb push je jb cmpsb mov imul mov ds jge lret int add je aas ljmp inc push pop cli push pop int and and mov sarb push in xor xchg movsl push invd push dec dec inc xchg xchg addr16 out jns add push stos xchg and mov mov mov xor stos push loop push sbb andl jae mov mov dec xchg or push pusha jo pop adc decb mov inc fsts jnp fwait xor xchg das and inc push xchg fstpt jne,pn push sub pop sbb cmp xor lods sti addr16 mov mov mov add adc popa adc inc je xor fst adc pop ud2 std cs in sarb cli xchg aas inc roll bound push inc or xchg or jae out out lds in inc lods (bad) leave rorl adc je mov add dec (bad) ja mov roll ds mov (bad) mov ja mov jo xlat and mov cmpsb xor dec xor jle dec insl and cmp int3 pushf mov pop adc xor cs aas scas sub mov mov xor sbb mov dec mov add add mov cmp shlb mov repz idiv sbb cli lret popf add push fnstenv imul imul sub inc pop fcoml roll divb iret and add ret xchg jbe (bad) ja add push sub dec rep sarb loop jl adc icebp fist lea push mov sbb fisubr pop mov adc mov scas fcmovnbe insl pop inc mov jbe dec dec xlat orl jnp adc push adc cmp popa mov (bad) sbb xor add into jae subb mov and (bad) sti xor inc imul test in cld jae mov in inc dec aad mov mov loope mov mov dec jmp repnz rcrb pop push arpl shlb xchg out push cmp shrl fs xchg jl xor mov mov fiaddl iret mov jecxz cmp clc mov pop cmpsl pushf cmpsl out xchg xchg pop fistpl pop or lods sub mov mov test in mov aam adc jmp mov xchg xchg jg out push ds mov gs std xchg mov popa rolb (bad) loop fldenv sahf inc mov inc lahf pop int3 inc pushf out xchg call jmp jmp (bad) cltd push fimul mov add and push (bad) mov push xor lret pop mov shrb push testb (bad) mov in scas sub and jne fstl inc mov pop xor out and adc push xchg mov popa pop add inc xor (bad) inc fcompl xchg movsb jns sti shr push lods int3 sub (bad) sub xlat sub popa mov mov xchg xor lret movsl lret push outsb iret sub insl sarb cmp stos add mov push push (bad) jo (bad) aad into loope adc pop jno pop mov jns mov and push add xchg xor pop insl mov (bad) cmp add dec cmpsb sub pop enter mov fidivr popa stos fmul leave sahf or cmp mov sbb mov aas inc push popf test gs fnsave or sbb lcall popa test clc hlt cmp jp push pop jg ret fldt insl dec aaa jp mov aad mov fstpt aam jae iret jmp daa movsb push or daa clc mov fwait repz cwtl inc mov jns jecxz int cmp push jae roll add mov add dec and cmp (bad) repnz sbb lret imul mov pop sub pop out lahf push adc xchg cmp fnsave mov dec push push bound pop dec rorb orb inc dec (bad) aaa jle inc push imul repz and mov arpl xchg and xor add in subl mov daa sbb jb lret scas (bad) xlat cli lds pop pop sbb scas xor jb sub scas jnp in add pusha pop in sbb adc pop les inc pusha inc (bad) adc mov dec test (bad) out jne arpl add lcall mov jle cmpsb pushf push mov add (bad) jns fistpll xchg test (bad) (bad) fbld mov rcrl push push cmc (bad) in mov rorb push insl sarl aaa mov dec lock xchg out sbbl movsb insl fnstenv popf mov sub inc xor mov aam std iret xchg fstpl movsb fwait xchg aad loope xor mov les cs cmp mov xchg push jb mov (bad) je daa shr or mov jmp out popf xor and inc mov clc push mov lret xchg lock push xchg bound (bad) test dec ljmp jmp xchg sub subb mov xor mov lods aam dec pop sar mov (bad) or leave xlat lea sbb sbb sbb sbb dec mov pop sbb jle xchg xchg shrb pop jbe cmp movsl push mov jo mov mov push data16 stos fmuls mov push xor push iret cmpsb in jg add adc pop sub test dec inc loope sbb fwait (bad) fcompl (bad) or adc xlat clc rcrb sub lock cmp pop cli push into nop mov jmp jbe jge xlat lock push or sbb and mov push fs lret sbbl jge jle pop and dec sbb pop xor add out mov jns lcall iret xor mov inc add inc fcmovu shll lcall mov pop bound andl les xchg shlb cmp int3 or pop add jbe fldz stc popa add fs lcall sub mov cmp pop mov jmp xchg push mov stos movsb fistpll lock repnz mov shlb or pop push sub cmpl xorl insb pop (bad) mov mov insb mov fidivrl test inc sbb add mov add xor sbb sbb sub pop gs test inc mov repnz lea xor pop mov pop sbb cltd or and in cmpsl cmp outsl mov dec (bad) push sub das xor orb bound cmp sbb pop fdivrs mov ljmp pop ljmp inc outsb lea (bad) (bad) ret add mov or outsl fwait sub mov imul dec jl dec push sub mov sub cmovnp push lock push ret xor mov jl lds inc iret insb scas adc (bad) testl loopne in movsl hlt inc adc push push push popa jno mov sti das mov in inc inc mov cmp jne lods xor jno lea lret inc push ja and cmp xchg cmpsl sub lahf mov in pushf sahf ja xor psllq xchg stos mov and xchg sbb mull jg cmpsl mov adc notl sar ret mov ror lcall arpl jb sbb dec orl mov mov pop pop xchg fimull out xor das inc ljmp sub push outsb xchg loopne fwait push push mov rcr (bad) jne les enter arpl xchg push xchg loop repz call push addr16 outsb and dec sbb push sbb xchg inc daa repz mov adc test push xor add cmp stc jae push fucomip pushf mov push aas jle push (bad) jae lods das stos push xor adc jnp outsb add or icebp (bad) sti lret inc or les push and jmp out fldl decb call sti pop lods es cmp pop xchg adc mov js cmpsb mov mov jg imul xchg and jo push dec daa dec add stc adc jbe ds movsb mov lock dec adc jnp cmp test daa imul in cld adc repnz cmp push test xor aaa xor jbe nop rcl inc mov cmp movl jnp mov jns jo push daa pop xchg jo dec pop (bad) popa lods mov push daa jg push jnp pop inc jb jne inc lret outsb insl inc popf int repz (bad) sahf movsb pop or (bad) xor into jmp icebp and mov cmp mov add pushf push fwait pop insl inc insb movsb lret xchg aas or in sub jmp rorl mov mov xor into or mov into push ljmp fwait scas lea add mov outsl les jb rcrl pop dec or push or or jg in out push push pop lret fs ljmp sbb xor cli sub xor rep lret bound push jo jns cmp push arpl xchg mov dec in out les mov sbb in sti decb mov ds outsb loope iret mov jno imul jl mov push addb and mov jge aas leave jb xchg call insb ljmp cmp js stc or sbb mov sub xlat popf jmp (bad) sti dec push out mov dec popf jno jns and test insl add inc pop mov fcmovnu pusha jmp mov fsts sbb test push cmp call popa insb iret mov out adc jo dec pop scas push mov sbb xchg hlt or int aas and mov xchg jp cmp mov data16 and and outsb scas cli fnstsw jne lahf clc xor dec into (bad) and pop fdivrl test jmp sbb inc clc or hlt arpl aad je pop shll imul in lds adc mov push in aaa loop mov test push rcl aad jle inc mov sub mov push cmpl pop dec add sbb jecxz mov cmpsl mov lds stos fimull inc pop lret mov (bad) int3 cmpsl xor dec insl insl out xor enter jmp cmpsb test and push push adc inc cmp rclb test idivb inc xchg add dec jg sbb add scas xchg xlat (bad) fidivr mov std or shrl jp,pn adc in cli mov int3 push mov lret sbb addr16 inc insb ret xor dec lret or outsl mov jecxz mov sbb scas adc pop mov add aad outsb sub aad roll in ds rcl outsl (bad) imul insl pusha jg pop xor push mov aaa aam cmp vpsrlq sub rorl mov dec cwtl andl arpl test imul jbe cmp fsubrl fiaddl push push adc mov fbstp mov xor std popa fcomps and xchg push rcr inc iret mov (bad) test sbb sub aad sbbl fcompl adc mov xor inc mov dec and ja repnz je frstor cs insw pop out notb pop xchg arpl cmp push sub test es rcll cld outsb mov add jl das sbb add jmp (bad) push push pop inc add gs push inc (bad) sbb push xchg clc jb ret xlat sbb sub fxtract cmp cmc dec js fwait pop sahf adc iret and mov js mov in inc (bad) mov cmp aam ffree movsl add out cmp xchg sub sti jns mov mov or lods enter cmp xchg sahf cmp pop push jl pop mov jecxz lret fs out add (bad) jae adc add xchg xor sbb out cmpsb dec aaa xchg jl mov mov dec xor inc or push or jne sbb sbb in je (bad) je inc fstp jno mov sbb adc pop cmp ret adc or mov test data16 dec cs cmpl jb rorl rclb repz mov test mov xchg add jl sahf (bad) and lods sub and pop (bad) sarb mov pushf int3 cltd imul push jg xor xor sbb xchg xchg sbb ret jbe fwait loopne gs lret (bad) inc xchg xor rclb lahf insb dec adc popa ret jecxz cli xchg or out repnz add mov sbb clc sub sbb mov fcoms insb mov fs aad pushf lock das add test push mov and or ljmp push ss and cmp sarl cmp jnp repnz daa sti xchg lret mov popa jnp insb lods add popf dec in std cmp mov and mov pop mov jmp sarb fwait mov inc outsl cmp push jecxz ja xor ds xlat sbb dec sahf adc clc (bad) fcoms mov mov dec and and jne fmull cli les push xchg mov jnp cs scas scas loopne sahf cmp pop xchg stc insl cli pushf mov dec into sub clc das add popa cmpsb (bad) in das std in cs cmp mov jae pop cmpsl stc cmp pop daa mov clc out add xchg bound lea aas jecxz adc in push cmpsb in push out xchg sub xchg xor and gs ds adc mov sti cmpsl push inc testb sbb loopne js (bad) jnp fsubrp add mov fs adcb outsl jg inc jg push cltd cmp rorb clc js ret ds enter or fdivrl cli lods movsl pop (bad) inc icebp aas repnz aaa cmp bound (bad) and add dec ret stc jge sahf inc je sti inc xchg mov jo out and (bad) mov hlt sbb push jp pop faddp pushf (bad) and fldcw daa cmp cmp mov and stos loope adc rclb insl dec push leave fsts (bad) mov and pop outsl or mov std jnp scas and test cwtl jl movsb cmp sbb jns outsb andl int inc pop jo fwait dec lret (bad) lret lret rcrb je cs dec inc mull loop,pt jmp (bad) xor mov xchg xchg mov imull jnp mov test imul sub push int repnz cmp mov xor mov std or xchg push cmp daa sbb dec sarl push pop dec push mov imul xor test insb mov push mov psrlw xchg and lods fsubp cmp cmpsb fstpl bound (bad) std jle lea imul outsb fstpt dec mov popa pusha cli les jnp inc test call jecxz xor negb nop inc stc sbb aad xor cmp movsb mov data16 ja jl,pn mov test inc push ret cs es jb insb inc es enter jle adc xchg out xchg mov out (bad) jg repz jecxz mov xor dec pop pop out cmp push push and jnp xor adc ret movsl pop subl jp mov pop dec xor push pop mov flds imul repnz in es pop cmpsl inc inc adc xchg (bad) or adc jp adc mov mov subb add add (bad) add mov jg loopne xchg shrl xchg inc std insb push loop jo adc lea and or inc mov lret fisttp sub adc pop movsl rorb ljmp (bad) lods pop loope xchg fs xlat cld pop fwait lock pop cli sahf sbb les in dec (bad) fstpt shrb mov shlb mov jl sub cmp mov fwait js mov fcoml aas mov mov jle mov mov hlt repnz adc repz inc adc adc repz cmpsl mov jae std aad mov mov mov mov cmp xchg scas ret mov (bad) out bswap test fidivl mov xchg sub xchg rorb jns in and cmpsb fistpl inc in jg mov push push ja cmp mov inc jecxz std mov sarb or repz in dec insl mov cmpsl std mov push insb add xchg sub in cli jb mov out mov add stos ret push sbb push xor xor or cmpsl adc and jb rolb cmc jp mov (bad) push mov cmc movsl divl and push aad lahf inc dec rcrl add push fcompl rorl jl push lahf ret xchg push add popf and stos or add add jl out dec (bad) jl sub push xor dec xchg jmp mov or es mov (bad) sbbl scas pop or insb jb mov and jl push sub into adc stos es mov ret cld fs jo lds stos cld movsl mov loopne,pt xchg inc inc and cld xor lahf mov adc icebp xchg ffree int jmp aaa pop loopne stos iret stc aad test xorb sub stos push pusha lret push xchg int3 pop mov (bad) sbb rclb test inc aaa cli lcall call sarb in into into shrl dec das nop in pushf pushf lret stc push sbb xor nop (bad) mov (bad) shlb inc xchg or cltd les stos mov cmpsb rcll rorb pusha cmpsl mov jp sub xchg rol outsl in cmp ds cmovae mov lahf jne imul movsl out shrl and shlb push aam cmp inc add rolb movsl rcrl sbb sbb mov inc lock jmp in push inc sub test fxam aad xchg mov or inc xor inc lahf adc test sarb mov mov mov rcr xorl jne sub add jns fnsave rcrl pop mov pop out sub arpl lock out pop icebp (bad) mov xchg adc xchg and jne fcoml mov movsl sar shrb call jmp addl cmc mov cmpsl dec pushf xchg cmpsb dec or (bad) or arpl pop xor mov sbb sarl mov sub sbb jo and push xchg sbb ja push cmp push (bad) icebp sub fiadd jae inc or mov push roll or jmp jbe and xor imull jbe sahf push in inc ljmp cmp pop insl dec mov out icebp pop pop aad xor add scas fcmovb sbbl scas xchg mov ja insl sbb ficom xchg lret inc in das mov dec pop popf add sti ja pop adc mov mov mov push cmp test add into sub xor negl adc aam std jne ffreep mov scas popf (bad) cwtl out stos jge loopne cmp jp rorb ljmp in sub push and mov dec sub pop in fwait pop add jle addr16 loop dec jmp rolb inc adc push cmp pop (bad) inc adc dec in inc pop or cli pop sbb add add out out jle popl mov mov or jb xchg adc dec xchg sub js and mov dec enter mov cld add arpl add xchg scas test lret ljmp and fs jb xchg repnz and push inc dec cs test fldt push lea loope (bad) jne aaa cmp roll (bad) lahf cli sub sbb ds cmp jl adcl mov cmp xlat cmp lret jl sarb test test jle or sbb mov pop jne in daa cmp stos les push push mov (bad) cmp popl sub dec sub lock mov das inc int3 testb and stos dec repz mov or jmp lea push pop lea xchg sti push idiv dec xchg je cmpsl mov icebp nop insb xchg push int3 inc cwtl pop mov je icebp mov xor sbb mov dec sub pop jnp xchg mov iret sbb repz das loop loopne lret in xchg imul and inc jp,pt and push hlt xchg jne fnsave push push fistpll jns mov scas insl add and dec (bad) je in mov xor sbb (bad) out pop (bad) mov insl addr16 out popa jmp mov mov (bad) jbe adc push push in cs xchg push pop lcall mov inc inc jle jae add xchg push or mov cmp pop in jo js mov test cmc add cmp cmp xchg or sbb jge push and bnd loope in or jg mov jns xchg mov (bad) cmp add mov cmp loopne clc mov jnp je add cmp push push mov insb stc add mov jae mov mov js testl das into rol aam push adc xchg xor hlt sub addr16 mov add inc call icebp lods cld and std cli (bad) adc clc aad mov jmp dec cmp sub aaa cmpsb clc cmpsb addr16 in mov inc push cmpl mov jmp or pop rorl hlt pop adc mov lea cmp cmp enter aas or push (bad) jbe sub jecxz jmp fdivrs push add out dec mov mov xchg push dec jo mov (bad) push inc cli cli lock out jmp js in hlt lret push and movsl push insl adc out pusha fwait cmp jns popf inc push sub jb cld int3 pop test nop fwait mov outsb aad lods mov lds and cmpsb lock (bad) xchg aam aaa sbb lods adc sbb mov push loope stos pop ljmp pop jae lcall sub sbb adc mov xchg call xor dec adc inc fstpt (bad) (bad) nop sbb jne jb mov cmp mov adc lret mov sub cmp cwtl data16 add jle xor cld negb cmp (bad) push adc or jns mov mov notl add jl push fiaddl in test adc in jnp hlt divb push add in stos test stos sub or cs icebp les fldt add sar popa and jmp add inc fidiv dec add mov jbe shr call enter fldenv mov lock int xchg mov mov aam lea out jns dec cmp push popa loop data16 cmc sbb add jl sti je decl or loope into sub fs sub addl mov cli inc mov xchg jns dec ficoml mov std nopl sbb test (bad) lcall data16 xchg std sbb mov aas inc inc lahf scas cltd push fidivl jecxz add xchg mov xchg scas add mov test call jns jle push test jl xchg lea imul mov out int3 sub dec mov fbstp mov mov loope and fs pop loop jae cmc fild add mov faddl iret dec or imull clc adc icebp mov loope jmp adc clc sub jnp mov (bad) jno jge jle sti loopne jmp sub mov cmp dec les xor test pop sbb sbb (bad) inc test in push adc add loopne fcomip cmpsb fimul and in stc data16 add (bad) or fidivrl pop cli pop aaa add pusha ja push cmpsl sarl int mov push lret andl push mov fs push pop clc fwait sar add pop mov imul repz add scas push fidiv cmp pushf lret mov js stc jl outsl jmp fisubl pop nop jo popa jae xor and stc sahf ljmp sub test mov jmp test jnp fimul ljmp (bad) jno arpl dec es add dec xor jae (bad) je sbb fisubl xlat sub bound mov into sbb adc add push movsb rol call jno dec lock xchg out push mov (bad) or insl adc jo lock jnp into fwait pop or pop sub ljmp xor pop adc iret ja push loopne adc mov mov in jl hlt push dec pop test fsts sub sub icebp or inc out add aas ret cmpsl gs popf mov mov movsb xchg push dec pop cmp mov inc je dec pop in inc or cld xor mov sbb addr16 inc sbb jnp cmc inc jle cmp (bad) jmp outsl xor (bad) xchg pop lret mov (bad) jno xor int3 sub push hlt stos xchg xor in fbld ljmp and setg mov and pop pop ja sub aam adc cmp and mov into xchg ljmp cmp clc (bad) fldenv inc xor pushf iret mov fidivl pop pop scas es push mov (bad) push cmpsb loopne out mov cmc inc icebp lods loop mov cmp sub or add hlt xor inc push jmp (bad) mov add mov jp ja addr16 (bad) push div loope sbb andl sub xor (bad) arpl aad icebp loopne cmp icebp insb mov sub adc dec stos lcall pop movsl jge xchg inc test imul pop sbb dec js mov or sub out mov lods rorb imul mov leave jb adc pop jno and push js add (bad) aam fucomi iret xchg mov pop jecxz in mov aad and ret aad jns (bad) scas push pop mov dec dec cmp fidiv out mov inc push jnp,pn in inc (bad) loop jge ss jmp inc sahf fdivp (bad) jbe sahf out lods std cwtl mov sbb out adc iret jmp and cmpsl dec aaa cltd lods test aas movsl xor lret mov sarl ljmp iret pop jmp lods repnz mov or dec movsl lret and ds (bad) mov push or jp xor enter cltd mov pop lods push jge mov mov xor sbb hlt mov inc decb and pop xor leave scas mov popa pop and jmp push stc or dec pushf mov popa dec int hlt xor movsb out into and sub gs push push lret xor jp pop ret jl xor sub xchg aaa movsb pop jnp xor jns gs dec inc mov aad adc fstp xor jmp push push (bad) pop push arpl (bad) out mov mov adc into xlat pop cmp dec (bad) jae orl scas sbbl lret push idivb add sub push imul cwtl fdivrl push stos jge ss enter push es xor mov in daa xor jmp jle (bad) sbb jb cltd loope cmp aam ret inc jo mov into or adc scas mov add fwait dec adc andl dec xchg dec sar sub mov psubusb or or jne stos jne cmp enter clc sbb (bad) jg ja out lret push (bad) fdiv mov mov adc mov imul push lret test xchg xchg sub scas and jo pushf dec pop and loopne stos add loope,pn cmovge fistpl xchg cmpsb mov inc fwait mov push sbb mov je sbb or test mov lret push mov aas mov push imul xchg adc cmp ret insb stos insl dec add or jo mov pop xor ljmp jmp rorl cmp out icebp jl wbinvd cmp pop imul cmp add jl ljmp imul pop jp add sub les push sub mov mov xchg jnp mov lea sub add pop bound aas (bad) xor dec jne adc cmpsb gs out add or cmp rolb push pop out sti in mov fwait pushl mov int3 mov lret ret in cmc js leave adc push add sbb lret sbb push xchg add push clc inc out arpl xchg dec xlat (bad) cwtl (bad) clc jp movsb cmp pop das inc cmp repz or leave call dec fisttp adc lock ja dec adc test movzwl lea jl (bad) lods popf sub add outsl push out dec inc mov push aad ja adc sbb jp push inc xor stos pop test in stos and fwait addr16 pop js or add iret fwait bnd lock (bad) cmpsl inc adc jno lea enter mov imul inc mov mov or jl jbe push cmp test leave (bad) xor xchg jno stc dec (bad) mov (bad) adc test rcl jno fiadd fwait lahf sbb push cli add outsl fiadd mov mov insl mov sbb cwtl mov aad dec and dec push mov (bad) fwait sbb dec push and (bad) add out mov shr ljmp adc and jns fs test es xchg mov add mov jle stos lahf mov xor loope mov sub mov (bad) movsl add ljmp dec jle andnps fiadd or (bad) and xchg or outsb jecxz jo and add xor ret lds arpl mov cmovns jmp shrl jmp or out (bad) fisttpll dec lock rol pushf loopne mov or sbb js and sbb or jno test (bad) mov adc push pushf lret jae pop repz lds ja push mov pop mov add dec cmp adc outsb (bad) adc popf push popf jp mov add push and pop dec lds loopne push pop popf imul lods rcl (bad) xor cmp sbb std and mov mov aad jge (bad) arpl adc or out xor inc jne adc fsubrl fidiv xchg and lods cmp cmp or aad lds (bad) jl out mov lcall insb jmp roll cmp leave ficoml cltd dec out in sub outsb xchg enter movsb ret stos jg add test mov xor mov (bad) xchg jl xchg mov jle add inc cli sbb jno and add mov stos mov cmp push xchg icebp stos push (bad) sti in fildl js xor push nop scas pop addr16 add rorl aaa xor mov fsubs addl (bad) iret lods mov shrb call sarl gs pop pop shrb xchg fisubr sub fnstsw add jmp inc mov jb popa xchg cltd out subl ljmp insb outsb test push mov sbb and insl push mov lea pop inc dec stos jb pushf lahf mov pop stos add push sub push dec lods (bad) lods lahf xor mov dec mov mov inc lret fcomps push dec (bad) and pop arpl add (bad) lods fbstp (bad) scas and or data16 mov pushf jle jp,pt shrl dec out out add pop mov test or nop rorb (bad) into or dec sbb jp (bad) and jbe sbb fisttp lods in daa mov pxor push iret xor sbb and mov sbb pop hlt (bad) call push jb xor sbb push xchg pop cmp ficom push and dec loope jmp push into sub negb adc stos xchg nop (bad) cmp sbb and xor mov out ds push hlt cmp js mov iret xchg mov inc sub (bad) repnz in inc xorb push jge dec mov jl cmpsl (bad) mov lret pop int3 ret (bad) xor movsl ljmp es enter mov fdivrl ja das jae divb pushf add xor (bad) loope jns mov mov xchg dec dec lret rcr in push jecxz pop fwait push into adc in cmpl push push shrb call add or out jge mov in (bad) pop popf jle fidivr mov pushf jecxz mov test andl aaa fs mov dec add in lret mov inc xor or mov sbbl adc out push adc out cmp arpl (bad) std ret mov add xor push adc rcll mov data16 push push or out inc lea cmp aaa sbb lock push js movsb cmp add pop jae out sub inc cmp lock xor out dec jne out fcmove out add les mov outsl sbb call inc or lcall pop xor mov mov mov (bad) fisttpl stc call sub or outsb sub insb rcrb (bad) loopne adc sbb inc mov inc enter mov inc mov add (bad) rorl stc cmpsl dec data16 lahf adc xchg add mov mov xor mov out scas inc lret push and inc lret jno mov sti sarb mov subl mov or imul xchg xor xor mov xchg pusha jo mov mov jg inc dec fidivl and fwait repnz into aaa sub mov mov adc leave add gs inc push push clc in xor add (bad) pop jnp daa aas out pop popa mov mov icebp jecxz inc mov hlt jmp sbb sbb lret xor aas jno rcl mov pop mov push xor sub daa cmpsb ljmp rcr roll sub lret (bad) clc iret stos orb inc bound cmpsb rcll sbb in ljmp cmp ret repz mov add outsb pop xor test ljmp and repnz add add mov xchg mov ds (bad) insl (bad) jnp cli mov out sbb aad ds add das fsts dec jns add cmp and mov dec jne mov nopl sbb addr16 aas ret (bad) jl jne mov xchg insl pop add lds xor push lret aas sti lret add mov es pop sbb mov test or inc fisubr mov test jle mov pop pop pushf stos call popa ds movsb arpl push and xorl (bad) mov mov jbe enter loope sbb popa test mov in pop ds jecxz dec jle les je pop arpl dec xor rorb push mov dec mov inc icebp cmp mov pop rcrl push adc mov and fstp and adc mov and push outsl pusha jns push outsb outsb inc ret in xchg fucomp sub dec clc lea mov imul jno mov or mov and push sbb notb bound ljmp and and cmp repnz rorl in xchg dec inc pop cli pop lock ret jge stc xchg popf jl repz imul sahf aam int3 mov mov mov mov pop sahf pop jnp sbb xchg outsl push (bad) add (bad) popa ds sub mov shll dec xchg adc lds push je test in cmpsl mov push lret pop test push jo fnstenv and iret push sub lods popl push addr16 cmc mov jl icebp xchg clc mov std and iret (bad) mov data16 cmpsb inc sub pop mov sbb sub push pop or cld add pushl xor sub and push sub aad cmp jmp (bad) jae loope mov stos clc xlat jbe mov xchg jnp cli dec ja movsb jl inc repnz mov nop pop pop jp mov test and or xor sbb test xchg xor inc testb mov idiv mov inc cmp pop in cmp adc pop mov push pop dec dec in pop jecxz les aam adc push enter hlt iret int adc ror data16 rclb sahf jg dec push jnp mov jno cmpsl rorl sub sbb sbb in or stos (bad) jae mov xor and mov iret out push mov or jmp gs jnp push pop aad xchg push jle cmpsb push test jne mov lds dec mov sarb enter mov push rcl pop xor bound xchg or addl lahf into mov cmp sub mov cmp adc repnz test mov adc add cmp lods popa add sahf test add sahf inc jg mov or insl iretw sbb (bad) jg add inc sbb psllw iret push xchg std xor aas and and idiv outsl xabort nop mov or scas jge data16 add jmp fwait mov cmpsl icebp inc ja cld push rorl imul repz clc adc aas and xor imul jne inc sbb pop or inc std adc aas in push add xchg or lods cmp pop inc mov and add mov adc jne inc vmwrite xchg cmp hlt hlt adc cmpsb cmp cli add push push and hlt adc fs leave call (bad) pop pop shl adcb jp lret mov push cmpsl mov mov xor dec xor nop adc xchg dec fcmovne sti into movsb and in out mov rcll inc mov dec daa in (bad) dec jo jne xchg into inc mov enter in (bad) xor adc lret or mov cmpsb inc pop das mov push sar test add adc in push xor push sub dec push imul sub ljmp push aam mov mov je push in sbb adc inc cwtl add fwait sbb (bad) pop xor popf or outsb out sub pop arpl push sbb ret aaa cmp scas out push test ss mov shlb pop dec push fs cmp mov adc ds mov fisttpll fldl jge in repnz test push rcr inc mov (bad) stos xor adc add out fistpll xchg mov clc std dec and leave movsl jle (bad) adc cltd mov jmp stc xchg (bad) pop jg leave xor out mov scas inc ss inc sbb lods sub mov mov fcoml (bad) in pop rep xchg test xor mov mov ficom mov jb xchg dec stos dec adc dec rorl mov inc mov (bad) cli std or fsubrl sahf xchg insl push test jnp mul pop pusha je imul jne call pop mov lret cmp repz mov leave add adc dec je faddl inc ret fldl push inc fwait bnd adc jbe and jnp add test daa push sti and add cli sti sarl fucomip mov mov and iret (bad) in or out mov cmp ss or cmc jne fildl pop insb fadds sarb fdivl sbb dec mov js aas lods pop cli inc data16 lret and mov repz dec fisub (bad) xor mov ss mov outsb subb push loope das jge imul int3 inc rcl dec aaa rorl sub push fimull mov mov adc or or (bad) sbb mov sbb cltd nop mov insb les mov sbb jne,pt add cmpsl jle add les xchg or adc (bad) xor fstpt (bad) icebp mov inc aad lods rcl lds lcall or jmp ja (bad) lea fsubp int3 sbb inc adc mov sub push mov inc dec adc outsl cmpsb into std mov or bound mov cmp mov sub or xor bnd sbb inc inc aas push and pop scas scas shll mov lret add aaa and aam loope inc cld in stos je xchg int fcmovbe (bad) fistpll test mov jle cmpsl shlb ss xchg popf shr loope scas outsl jns push loop cmc mov push ss repz clc jmp call je xchg les fbstp add and push nop inc jge cmovl insb pop fcoml mov bound popa mov test mov enter xor arpl fisttpll data16 mov pop mov scas dec pop jmp test jmp shrb xchg adc out sbb cmp fwait adc xchg popf les sbbl js jbe cmp sub rcrb jo cs inc stos arpl (bad) mov call lds and enter daa xchg ds arpl cld aaa push dec iret insl (bad) lock pop sarl cmp loope stc xchg adc test cmp fwait adc and stc xchg mov cli mov or mov and jp fstp sahf and outsl add jl mov gs adc movsl je shrb sub xchg enter xor cmpsb sbbb jo inc dec inc add mov inc mov fwait mov lahf negb ss cmovns pop rolb push ljmp pop inc (bad) loopne pushf mov dec mov loop or mov push mov mov lret daa pop rclb adc lea sub mov add inc pop pop (bad) jb adc and adc mov mov fimul mov lods inc daa fiadd pop jl mov push fxch enter push pusha inc sbb sbb imul push inc lret mov (bad) out (bad) mov pop ljmp pop and int3 ds and int3 mov enter nop mov in mov ds push cmpl mov sbb bound aaa dec and adc ds pop push xchg cmc in loopne (bad) ret (bad) jns mov stc dec aas pop dec pop mov and inc mov add aad lods pusha cmp mov sbb mov dec pop adc loop jno or add xchg test mov jge mov hlt lods add rorb mov jo sub inc mov push call (bad) adc inc adc push hlt push adc arpl or inc xchg (bad) icebp mov dec inc in or mov call fiadd sbb jnp imul cmpsb testb leave dec cmp pop test dec add adc xchg mov cltd cmpb or aam push cmc into mov insl in add or mov outsl sti pop fldl cmp stos mov out sti sub int3 addr16 aaa or orb add bound out mov pop in icebp sti sbb or pop enter pop rcll ret stos mov dec sbb cmp mov mov lcall iret sub add inc mov adc xor inc popa mov xor orl inc or dec jl shll cmpsl jle iret mov cli mov lea mov cmp (bad) xor or ficomp fiadd mov fwait adc jno add jge or sub push mov into sbb mov dec shl out lods mov in test push fstpt mov (bad) movsb pop into js adc loop xchg mov movsl jno pop out mov stos (bad) movsl sub daa lods mov test or lahf add test test popa lods cli adc mov add push fistpl sbb (bad) aad (bad) int3 pop data16 sahf popf cmp inc out mov add ljmp fimull aas sbb inc mov (bad) cwtl fsts xlat jb xchg ja negb movsb mov gs or inc daa add mov push cmp sub sti fs jbe addr16 jl jne push out arpl mov add and inc repz pop cmp insl aad rclb fsubr movsb scas and push pusha or add sub jns int3 loop leave loopne rcrb sbb int jno repz test adc sub addr16 mov test adc cmp cmp adc pop and jo scas rcll cld cmpsb pop cmp inc mov or js bound or stos dec sbb neg cld mov inc pop xchg imul stos mov aam mov jb call xor inc pop sbb jne pushf shlb mov add roll sub adc jae (bad) scas pop testb popa lcall mov ret das inc mov ljmp push mov xor jb xor mov pop pop or ss xchg xchg aas jb outsl daa test lods inc fistpll inc pop ret ret mov or push pop adc es mov xor mov inc call mov xor loop cwtl push decl testb push sbb in lds sbb and pop xor dec xlat or popf xor dec cld popf dec std push leave mov mov inc lock fldl adc scas (bad) js (bad) ret add lahf mov cmp (bad) outsl arpl push push dec dec ds cld movsb in cltd xchg xchg pop or xor andb cmp xchg dec mov in pop sbbl aas test jg and shll js inc insl test (bad) lret sbb test testb inc adc adc sbb sbb mov fcomi icebp int3 adc ds out mov cwtl mov xchg (bad) push les push xor cwtl cmp outsb jg sub add and into test cmp stc loope sbb into xchg arpl xchg movsb hlt mov popa mov lea arpl fstp test mov mov mov or roll insl lret daa push jge jo or sti ja ja lods mov xor loop cmpsl stos outsl mov aas xchg loopne fwait rcll or jns sarl je xchg pop or mov data16 mov pop bound pusha sti push mov aam dec ret stos sbb test adc in movsb (bad) jbe inc xor push and mov mov mov hlt dec repnz je xlat movsl icebp xor das add mov push fimul dec inc inc les sbb adc mov mov and idivb dec fadd add xchg adc dec repnz cld and add dec lcall xorb int cwtl sub push jae xchg inc dec sbb nop add pushf pop leave jg scas nop (bad) and lods pop xor out sub test xchg ficoml mov push mov adc mov xchg rcrb or xor cmp lret adc sbb adc and data16 mov jle jge sarl sarl xchg inc insb cmpsl xchg adc or or shrb inc fistpl xor xor mov mov insb mov out jo mov testl cmpsb inc je inc push out (bad) sbb sbb test adc xor imul sbb insb fnop xor and outsl mov xor out popa mov test and add scas cmovle jge pop outsl ret scas out ja idiv movl sub jns (bad) xchg es jno test xchg xor outsb mov testb int pop push rcl mov add je xlat aam leave out mov xchg push sub pushf lcall add mov mov fcom cwtl xchg sbb mov jge dec jl enter or push push push inc (bad) push add fcmove das dec push mov xor cmpsl jnp cmp and xchg cmp not stos divb test jno insb and push cmp mov fldl jge cmc and mov pop iret sahf mov jp aad cli add cli pop sbb mov es xor or ja pop mov xor sbb xchg push pop add and test mov adc ss jle pop ss push sub andl pop xchg imul das addr16 sbb lret jge dec sti cmp fiaddl outsl mov lret pop in stos pushf and adc les nop ret xchg nop xchg mov mov mov stos xchg sub mov inc and inc push repz daa inc adc or sbb pop pop cmp or dec notb rcrl rcrl mov push push or add sahf int3 out cwtl lea and pop cmp (bad) (bad) lods or mov (bad) sti dec es adc shl pop push or repz mov int3 jb (bad) cmp pop adc fistpll icebp cmp movsb js adc cmc inc testl ret (bad) dec inc pop jnp fs mov dec adc sbbb inc inc in push pop mov and mov push push add (bad) ficom jle in out xchg or faddl addl xor xor fs adc mov adc add push or mov xchg cmpsb mov sbbl daa in dec pop pop mov lds jnp out and jecxz inc or push cld mov xchg out jae xchg repnz jle xchg push (bad) adc pop sbb sbb dec sbb jl sub fiaddl jp sub addr16 mov push mov mov call es push cwtl adc test and test add pop test and mov pusha es out sub or inc xor into cmp in insl ss mov xlat push cltd test mov fisubl pop int3 inc out adc jae push rclb (bad) jecxz sub imul dec mov popf dec dec sbb xchg in pop fwait outsb enter sahf mov mov adc out sahf sub xchg xor call int les lahf jne add mov cmova into inc in es sub cmpsl negl lret jnp or add and mov enter test hlt outsb mov sbb xor hlt (bad) ljmp add jmp insl or adc aam les cmp test mov (bad) mov xor out or rcrb mov in mov (bad) jb bound int3 inc mov adcl push insl push sti inc xchg (bad) pop and or inc in inc jno popf in dec adc push and mov aad jno fsubs dec pop rorl sub je jo cltd out (bad) cmc out subl jge test sub mov mov test dec ror test dec adc pop (bad) rcrl sahf push mov xchg je fidivl das cmpsl ret cli fucompp or pop lea sbb (bad) xchg push fstl sbb repz dec adc push inc jae jl mov mov xchg mov cmp cmpsl lods or mov jne shlb data16 push sub stc cmp lea mov ja ja (bad) (bad) fild sbb and out and mov stc mov add xlat mov fisttpl jg shr add xor jnp sbb ds ret arpl mov jnp jno mov in imul mov fistp mov sbb xchg dec lods lods dec mov clc iret sahf aam sbb jae xor jns fdivrl ret jg aaa cmpsb jl mov mov cli sub aas adc xchg dec sbbl cli jne lea mov std sbb mov mov adc icebp outsl mov in fcmovb test jl (bad) fimull and imul or fisub jp ret lret repnz or pop fadd adc push mov (bad) (bad) xchg and movl mov mov add mov stos xchg test dec int3 in xchg aad cltd mov and xchg inc lods xchg pop aaa cmp fstl dec sbb imul pop (bad) push mov mov lods mov sub lret stos mov call dec icebp mov nop cs popf or in lcall rorb rclb es xor into les cmp xor das xchg pushf adc and sbb sti jp dec dec hlt xor cltd push in arpl mov in push lock push repnz roll fs add cmp cwtl rcrl sti dec sub push repnz int3 add dec pop mov xor popf clc mov (bad) dec jno mov in out mov int imul lock iret and xorl out xor test push dec mov jbe sbb mov xchg jne call nop cmpb mov jo cld imul idivb lods cmc ljmp and and xor add pop fld push fs stos cmpsb mov cli mov inc ljmp sub jecxz cld cmc push jae jbe (bad) rorl pop cmp lds out push lock cmpsb and sbb jl scas mov mov fistl lahf shlb add sub push in sub icebp xchg inc jns pop fadd (bad) ss xor out adc inc cli insb clc sub push cmc jb mov mov dec xchg mov fcom mov jns insb ss xor xchg es xchg imul std (bad) int push outsb cmp adc mov ljmp int3 aaa adc insl pop cmp xchg sub sbb fdivr sbb adc mov mov pop xor int3 jle pop lahf (bad) stc dec sub or in in mov out pop (bad) ds lock popf adc or and lock dec out into (bad) xor jns sbb scas cmp andl xor frstor push out mov std stos jge and hlt pusha into and jle push jbe lret xor mov popa add jge fsubrs jae aas roll outsb mov xchg int pop std inc (bad) mov loope cmp pop ljmp scas rcrl and je add adc lea loopne mov scas scas out jae mov and pop es sbb pop in mov cmpsb scas add cmp (bad) dec aaa xor or add jae fcomi fild and loop enter mov add neg les xor loop mov push fdivrp fs mov aaa push hlt xor mov sti jge cmpsl sbb cmpsb test (bad) lock insl mov push jo mov cltd cmp dec or popl fimull jp and je mov jbe popa sub movsb mov cmp sbb sbb es mov loop mov aas cmp ds mov pop loop imul addr16 lret addr16 add add rcll pop or xchg fdiv (bad) mov mov mov dec mov int add lret or outsb push pop xchg movlps or int dec sub ja (bad) int xchg push popa sete dec (bad) sti call aaa (bad) push lret dec out outsl mov mov lock adc (bad) lods int sbb lock ret mov ret pop cmpsl test fistpll les negb pop pop stos fld (bad) xchg shlb cmp mov sub insb adc sub sar data16 pop cmp pop add lods outsb je xor pusha (bad) ljmp or or loop sbb or sbb fimull mov add movsl lods clc mov sub clc orb xor mov cmp cmpsl jbe,pt mov push cmpl sbbw dec out sub enter mov aad sub out add jg popa pushf and push mov xor or jnp lea nop ret repnz add cmp xor sahf xor xchg pop dec loope andl mov stos inc sub mov or or cs pop mov sub or lds and or pop xchg aas add push (bad) lret lds pop test mov ret leave mov mov mov dec ss jecxz loop bound sbb jne xlat mov in push imul outsb and mov lcall test mov dec fdivrs sbb lods push aas pop mov cmp imul mov cmp jne pop popf jno mov call lahf mov mov jmp test jne stos aad adc push push jnp test dec push inc pop sbb das push or out jb lods js mov dec es (bad) aad aas xchg aas dec lcall fstl jge xchg jnp inc fs (bad) iret mov mov lret cltd push sbb test jmp mov inc add mov dec push mov iret jns jno,pn cmp or push jo xchg xorl mov push lahf mov xor jmp pop cmp test das lods test inc cmp pop shrb ficom sarb subl mov fistpl cltd nop cwtl adc dec xor js sub (bad) push out pop fdivrl arpl ret std and stc cs cmp inc push pop jecxz test jne cli cmp mov inc es push scas out bnd loope inc jbe fs stos mov mov jne mov js or mov mov xor scas arpl xchg repz mov sbb mov js cmp jge adc mov pop or cmp sub stos lcall dec push rcrb fnstenv inc push test aas fsts movsl or jmp and loop jmp inc cltd pop jnp sbb xchg mov and arpl mov push test mov and push aas mov testl jmp pop insb push xchg loope shl rcll push push jnp fwait clc das xchg lods in xor add (bad) xor fnstenv mov ret (bad) fsts or cmp (bad) mov cmp int mov mov xorl jae or in mov pushl xchg das lock inc out sub aad jecxz clc call sbb push cmp aaa or (bad) es sub insb push fistpll outsb xchg dec jne (bad) test sub repnz xlat ljmp jmp jo mov ret and pushf pop dec xchg testl inc jno sub cs sbbb or cmp and daa scas mov mov push mov sbb mov icebp in jae mov popa rorb das fwait push mov dec mov shrl int sarb test (bad) enter cmp int3 inc mov nop dec mov fwait in xorb ss dec push cmp cld shrl gs dec fs imul xlat scas cmc addr16 and jmp out mov jb pop (bad) sub rcl pusha mov jo fcompl mull fmuls pop ret orl popa ds push cmpsl jne (bad) jmp arpl pusha sbb lahf rcll out or ficompl mov rclb gs outsl rorl push inc jns or mov jne pop xchg and add insb shrl xbegin or in lret sub loope (bad) leave push pop xor dec jp inc lret enter ljmp jb mov xor xor ret jno pusha sub xor out push add push pusha jg fistpll pop mov add out push cmp xor sbb sub xor out fs repz shrb fistl adc fstl mov xchg mov jmp je push push push push jmp in mov pop mov enter sbb dec jle scas pop mov loope out out lea jne pop cmp inc lock mov xor add mull inc les and pop pop add lock sqrtps mov sub fs les imul jnp cmpl and sbb (bad) push test int3 inc xor mov stos test (bad) out inc into jmp data16 (bad) stc addr16 mov sbb push sbb inc imul inc js inc stos cmp or dec test xor inc nop push add push mov cmpsb xchg or mov fwait dec push lret push leave fcmovne push lock jge test jg mov or jmp mov pop into push adc testl mov aam icebp test and cmpsl dec push push ficomp ljmp insl xor jns mov movsl jp fldl fistpl cmp push jae (bad) or stc cmp inc cmpsl into hlt sbb cmp sbbl sub iret fwait or cltd cmpsl mov nop mov push (bad) mov lods adc sbb push dec test (bad) shr sti adc das cmc sub xor cmpsb push add out sbb int3 cli adc or jl adc sahf mov pop repz add xlat inc cmp fdivr cmpsl hlt mov (bad) aam les xchg cltd stc andl stos sarl call (bad) outsb pop inc pop adc fcomip mov push push xor rorl dec mov int cmp lahf shr incb or fwait mov cwtl push push push xor dec inc test adc repnz xchg gs mov pop xor (bad) into or inc jb bound xor jl push sbb cs jns fimull inc mov fistp pop sbb arpl fmull adc mov ss jecxz out js or jmp cmp wbinvd lahf dec call fs js push repz push push in jbe out lods aam rcpps mov mov outsb orb dec push loop jo push out xor addr16 dec push xchg (bad) scas movsb in shrl inc (bad) adc push jne pop popf ja lods mov jne daa xchg cmpsb lods lea aas jo fidivrl repz (bad) jl fisub cmpsl in sbb lock mov pop (bad) jg xor pop sbb or or pop and adcl jne pop lods fstl dec mov add mov mov mov gs jae (bad) ja xorl out int3 shrl push sbb es scas cmpsl or jns jae hlt push inc mov pop mov push ficompl cmpsl insl imul les mov mov and push pop sub mov test dec call and jp adc pop ds stos xchg mov sahf mov bound lods mov aaa pop ret adcb mov sbb cld push push cmp cmp das jae push (bad) mov cmp sbb xchg adc and jb or mov xor sub clc jnp dec sbb jae dec xlat cmp lock aaa inc xor sub js testb popl sbb insl mov imul bound pop jbe call push push mov (bad) mov jle xchg (bad) mov stc mov (bad) icebp mov xchg outsb add dec sti jge,pt dec xor std push out or movsb and mov movsl lods arpl shr dec insb and aad push and push xchg cwtl cmpsl push mov daa pop (bad) int3 movsl jno pop (bad) sbb daa (bad) ss xlat ret xchg popl jmp jmp in and das inc sub imul sub push repnz fwait add imul int jl inc pushl push mov xchg or aam xchg mov jp xchg js cmp mov xchg fwait daa aaa xor in cmp lods inc push sub inc sub xor or out lahf addr16 (bad) fucomp cmpsb test arpl aad dec sti sahf and out gs sub je inc adc icebp cs sbb pop sbbl push sbb andl xchg hlt xor mov pop lods in adc sbb sarb or jno loope cmpsb xor movsl cmp lret xor cmp int3 adcl hlt jnp sbb fisubr add dec ss pusha jp cwtl shlb out pop mov enter repnz mov outsl or dec mov int3 out pop adc adc adc insl jo movsb rclb test (bad) stos cmp xchg insl mov repnz pop lock inc jne cli jno mov mov lret cmp lock mov xchg jle cmc iret xor mov jne or xchg sub mov call imul add dec movsb ret add das or mov jge mov or js test das sbb or xchg push mov and repnz pop pop cmp sub sbb popf cs mov das orl fs xchg aas pop mov mov imul sub popa dec mulb pop stc (bad) adc jl sub je repnz in pusha mov out push hlt aas js jnp,pn dec jno adc dec jb jnp in lcall movsb daa ror int jae or mov or push pop mov nop xor mov fs dec cmp inc lahf lret sbb leave ret es (bad) hlt add mov mov jnp mov mov mov dec mov (bad) loop mov mov xlat cmpsl ficompl test xor or icebp dec jecxz bound xor int pop mov in or pop xor push adc std cmc mov aad or cmp fcoml ret push gs inc xor xchg daa adc jg sub mov pop or dec mov pusha lods sti icebp add sub movsl and xor and cwtl scas adc push daa sarb pushf aam and test insl inc cmp jae fcomps scas dec dec test bound adc stos inc xchg mov imul fwait ret inc inc aad pop es addr16 jecxz mov rclb sub add push daa push or pop jae xchg dec xor xlat add add insl mov adc xadd pop cmp add mov inc push xchg dec mov jo das push (bad) arpl cs in das sub jmp clc (bad) lea mov fdivrl leave jno and aaa adc inc add pop das push sysexit sbb popf mov js lcall imul outsl lahf push call lret sbb push ret mov test fbld enter mov pop jnp ja jle push xchg inc xchg inc dec pop (bad) dec push jo add push stos aaa daa int3 div sub sub or aas popf dec adc in sub loopne and in ljmp adc cwtl adc popa (bad) aaa clc jno bound pop cmp and lret (bad) gs xor jmp es sti fild (bad) mov mov dec jo movsl lds movsl cwtl lods adc jp sbb mov int3 pop lea ret xchg mov cli xchg sbb (bad) sub fild or les cmp out shlb sub shlb sbb popf mov mov test adc (bad) arpl adc adc xchg pushf test iret dec jae fldl loope and push test rorl lods mov add mov fs (bad) cli xor jne cltd fdivl icebp bound loope dec push fidivrl call push std sub and popa cmc and and push pop scas cmpb jl enter cs adc lret dec fdivrs fwait nop js roll faddl push scas mov push mov mov mov sub js sub jae stc (bad) ljmp mov jecxz mov jp xchg jo mov movsb arpl int3 mov sbbl or cmp or cmpsl (bad) shrl das or push scas mull ss inc dec pushf pop sbb aas (bad) cmp shlb stos outsb jmp inc aam popf mov in inc dec and pop inc mov mov mov sbb mov push lods mull lret scas mov icebp cld rcll loopne sub (bad) lret xor je push mov xchg mov xor ja xor es test cmpsl push cmc inc xchg add leave enter pop xchg (bad) cmp hlt jns xchg push sub xor in lret in xor jnp (bad) fwait or and dec out hlt popf push add sub aaa cltd ds (bad) (bad) mov lahf xchg insb inc lods out imul xchg insb movsl in jnp sub mov sbb adc fmul fwait sbb imul push push stos outsb add out mov ret adc add fcoms mov pop rcrb cmp inc popa nop (bad) fcompl andl loop hlt cmp das arpl add std sub or pop jg adc imul mov mov push iret imul xlat xorps jns mov lea mov out iret sbb mov inc inc (bad) popa mov xor add add lea (bad) loope adc add and scas inc test sub out inc xchg mov xor add xor jp cmpsl ja pop daa mov arpl sbb in jecxz test sbb push daa xchg or add mov mov push fcoml inc mov gs push call or in add push out ficoml push movsb in std daa or loopne clc inc cmp sub mov jno adc fcompl pop mov lret lret mov in add lret dec lods shrl mov jns add cmp insb pop insl (bad) adc popf xor xchg dec add and out scas push pop sbb add push das dec outsl push dec xor pop rclb sub cmpsb inc xchg mov jnp sbb lea ja pop pusha push push mov adc pop jge xchg jge movsb inc repnz rcll jnp rcll and dec (bad) data16 rcrb jo or adc add cli sub push shrl test insl pop jb inc and out jo and in rcr hlt pop imul sub in sub add mov aas mov sub test sbb inc into pop cmc es push xchg push dec or cmp sub push add or jb mov cwtl ret hlt fnsave incb xchg mov mov je inc xor xor adc rcrl rcll gs sbb mov je outsl insl iret pop add xchg xchg ljmp sub mov adc fisubr test (bad) xchg outsl pop fisttpll cld mov test dec repnz mov (bad) mov dec and inc repnz addr16 dec pusha inc add testl popa fisttpll (bad) iret scas mov aas or dec or ficompl iret push or divb fiadd add dec sub xchg int3 test xor scas out jnp dec add cmp add pop add push sbb mov ret in jo mul xlat push daa lods std or inc xor sbb mov leave inc xlat (bad) xor (bad) lods shlb outsb (bad) adc std mov js into or insl divl popa daa les aam inc mov iret adc cli fwait inc lahf out ja jns inc pop cmc adc sar xlat push jbe mov scas (bad) inc lret cmp adc lea add pop mov lods outsl xor pop jmp pop or in pop rcll bound and outsl cmp xor push hlt add mov inc (bad) jno fcompl movb out rcrb fidivrl (bad) cmp sbb imul fldlg2 jp arpl add stos adcl into add arpl inc dec inc mov lods push xor sub mov cmp scas pop sbb sbbl xchg cmp clc inc xor xor xchg test lods cwtl aad aam jbe lret jnp aad pop gs mov scas test sbb add lods rclb cmp mov gs jle es pop cmp jmp push mov gs dec arpl inc push ret sahf std test mov fwait xchg xor jl divl mov out ds lret xor xorl cmp cmp out je sbb add dec test stos lahf mov push fiaddl mov push ret xchg and xchg pushf mov inc in fwait jo cmp push repz movsb jnp fldl xchg cmpsb jecxz sub addr16 cmp mov lods cmp ja pushf aas fs mov hlt es mov mov mov lret pop test xchg add gs or inc inc ljmp fsts test or xor icebp pop fstpl mov outsb lea fnstenv loopne mov shr (bad) repz and addr16 jo xor icebp inc push push and lcall nop dec push insb adc call dec pop lea xchg sbb popa sti push mov cmp sbb mov (bad) idivb jle push fnstenv icebp jl or mov adc adc and jb cs mov push out mov mov (bad) aaa lahf in mov or hlt xor jecxz push add std stos xchg mov hlt add imul xor lods mov mov and sahf mov fsubrs test jnp jne jo insb out mov xor insl mov dec xchg adc mov jecxz adc incl fs (bad) mov mov popa sbb mov aam pop sahf daa ret fsubrs jg aaa mov loope xor mov sub cmp sbb cmc cltd outsb mov out sti xor (bad) mov jmp ds rorl mov xchg xchg mov popf pop scas push movsl idivl jmp stos ljmp mov or xor bound out push (bad) iret aam stos mov imulb das dec and mov pusha xor (bad) movsb enter cmp jnp lret std xor sbb inc sbb mov push or xchg jl pop xlat (bad) sbb out mov or mov aaa lcall pop dec jecxz out test add push mov shll ficom jae in fist into mov mov addb ja stos add out sbb adc ds insb push sub les mov mov out jecxz push cmp frstor jp imul xor push xchg insb push out out add mov mov imul mov imull cld enter int sbb mov pop ljmp subl mov jg in call ja dec and rclb xor sbb aam sub pop or (bad) jl ljmp sub xchg lods clc mov mov add jp mov push mov mov push leave leave inc and pushf cli lods les jge cmp (bad) mov nop cmp test or inc dec cmp flds jno mov (bad) loopne jle sarl insl mov orl add in test imul test hlt dec add xor cmpsl dec jns add and cmpsb sub call ret fisttpl cmp mov aaa dec cmp inc push pop sti (bad) mov push dec xor adc cmp leave mov sub mov fnstenv adc ja inc ss xor push es (bad) dec add mov mov rcll xor cmp enter dec lcall movsl push jp int mov fyl2x push fisubl xchg jae jne fs fmuls xor in sarb jne mov ja sub xor lea adc mov imul xor inc insl xchg pop pop sub or push sahf enter dec pop mov add inc pop mov xor cli xchg in cmp sbb or cmc stc add aam push dec ss or sbb insl xor pusha mov cmc jecxz jmp out sbb lods ja xlat xchg mov jl jp fs and ja pop pop les add popf mov xchg out fsubrl aas inc stos lret cwtl push lahf push push repz mov jne out cmovne adc jg cmp jne adc inc fisubl dec jns movsb and addr16 mov pop jmp push fcoml inc adc jg add xlat dec stos dec ret (bad) arpl inc fsub je adc enter outsl add sbb ljmp icebp in push out push xchg ret iret mov in pushf and (bad) es gs dec rol fmuls mov push fwait xor outsl ret mov call int3 fcmovu xchg mull add andl cvtdq2ps add lock fwait jmp (bad) and popf icebp orl push mov shl push dec push ja fnstsw pop sarl aas mov cmp cmpsl loop jp mov cmpsb out fistpll cmp into shrl popf dec je push push and push jo xor in mov jne adc stc in data16 dec pop icebp (bad) addl test ja mov or out push ja addr16 pmulhw xchg pop aam movsl sub fsubl rcrb mov xchg test mov repnz sahf pop and jle ret jp arpl lods and push mov mov (bad) pop jbe xchg push xchg faddp popf ds xor popa test outsb push sti inc cmp cwtl mov or bound fldl lods lock xor imul mov (bad) xchg inc icebp xchg fidivl popl mov mov (bad) push push aad js daa outsb pop sbb (bad) repnz addr16 xchg sub mov xchg jl add mov popf mov pop out jle outsb ljmp (bad) ja (bad) lret or test sub ficomp rcl arpl aaa jnp xor mov and adc lret xor (bad) fmul mov mov inc repz cmp aam jge fs pop and bound cmp frstor sbb in dec fcmovb push lods lret int inc ret xchg and mov cld jecxz fiadd cltd mov mov xchg call adc icebp mov lock mov loopne mov jns int3 jge flds mov in cmc mov sbb pop xchg rcll cli adc into cli sti mov adc imul adc add stc mov divb (bad) mov hlt mov jmp sub mov mov sti jmp test sbb cmovb inc xchg aam pop aam test sbb mov out icebp adcb out out jg icebp sub jae inc xchg leave xor fldt cmpsb and cmp faddl dec lcall shl xchg xchg hlt pop sub xchg xchg stc pop xor push bound add popf movsb pop lret sbb cmp jne sbbl add cmp xor testb and (bad) jae add inc jbe pop sub pushf inc fldenv sti jno sbb mov inc cmp incl int xchg xor or jae es std popa ds mov cld cmp jns stos rorb stc sbb nop mov lods jae es test stos (bad) scas sbb test add mov pusha shl (bad) int incl dec movsb jae lods or leave xchg pop mov dec mov outsl mov mov dec cld sub push je add mov jmp out xor loope xchg inc xchg jo (bad) sbb adc sbbl in jp xor ss aas and cmp daa notb xchg or push (bad) (bad) xlat xchg cmp dec imul in fwait iret pop out fldt sub pop mov subl jle ret jl xor mov and mov neg jmp sarl insl and cs mov loope (bad) pop mov xlat fadds les adc cmpsb sbb fwait bound mov jne rcll lods pop mov (bad) in jl popa inc aam jmp inc jnp dec pushf orb inc sbb add pmaxub cltd pop fldcw jmp mov push lea mov mov shl mov call leave adc imul insl mov sbb out and stos or fwait cmc sub in push mov jle (bad) mov jp aas imul xor adc jmp (bad) mov andb jecxz or fs imul sti outsl push sub movb push mov je ret sarb insb cmp movq mov cs call cmp or xchg push stos ja mov test in fstpt das adc push xor or adc movsb and insb pop mov cmc jne jo pop sub fcoml jo (bad) ljmp jp mov rcll and and mov mov jno pop jns scas xor lods lret sahf pushf inc (bad) or cwtl loopne dec in push incl pop and jns push and push xor sbb imul shlb push mov xchg nopl xchg mov mov xchg adc jae mov add insb lock test and or xor aam aas xchg mov dec fcomps dec sti cmp cmp cld adc push mov xchg imul lods hlt insb aaa mov jmp out aas xchg mov es and sub pop test pop mov xchg jne enter mov mov cmp stc or add jl test test hlt popa outsl loopne xorb cltd lahf ret sub dec cmp (bad) fisub add es cli sbb push push jge inc aad std imul push sbb add inc mov jle inc std mov adc test insb push pop xor jae pop or mov lret or mov (bad) cmp pop lret push sub fwait stc repz dec xorb imul ja jg nop add rorb pop pop sub int3 outsb roll test loopne dec mov ficom ljmp cmp lret push mov push and jns lods fsubrs adc repz inc sub sarl shll mov pop adc mov rcrl jno test (bad) xchg cltd push and daa add inc lods xchg rolb mov nop or push ds pop push or sub inc and jl xchg jecxz fistp pop iret jge std daa lds (bad) (bad) hlt cmp les xor sbb inc cmp xor ja and jmp and cwtl pop or or sahf xchg mov or mov xchg add in pop dec xchg popa pushf xlat jnp pop in jl cvtps2pd push add jne jbe sub cmp icebp inc dec mov outsl int3 or sarl lahf out jecxz out stos mov popa call dec stos out loop mov inc mov adc push pop fwait sub repnz inc (bad) push aaa cld into mov stos xchg movsb inc mov jns (bad) push jbe or adc jns xor jp cmp push popa ret and jecxz mov xchg mov mov mov loop inc hlt push (bad) fcmovnbe scas xor mov mov jecxz xor dec loopne push mov mov pop jmp pop iret jb and mov es sbb push call sbb sub add push setp scas daa jecxz mov cmp xor mov cmp rcr sbb add stos insb and inc fimul cmpsb ja xchg outsl cmpsl dec push dec jo arpl xchg xor mov inc and dec sti in clc jmp cwtl (bad) (bad) ds mov nop jno (bad) ret and add add inc adc jne,pn cmp nop push fnop adc xor nop es sbb ret loope lret mov adc int3 or xlat stos test rcll test push out mov pop outsl stos or lods fisttpl clc mov in sub mov adc jp,pn push inc mov pop xor repnz push call sbb mov sub and sub mov add bound out pop ret sub lock xor lcall inc push test arpl ljmp arpl not in in les mov pop (bad) mull xchg lret and dec dec cmpsb decb mov icebp repnz gs adc (bad) mov fldl ja sbb popa mov pop adc mov mov hlt fnstenv cs jmp mov jne pop insb cld lahf cwtl sbb cmp dec or shrl push mov xchg inc out xor (bad) (bad) push lret mov lcall xchg cld (bad) lret jne shrl es mov pop sbb insb mov lahf mov fisubl or fisttpl sub arpl mov fnstenv pop adc sbb fbstp xor movsb xlat pop subl sub (bad) test push dec daa popa push call sbb outsb jns push aas in xchg mov push lcall pop sar (bad) aaa sbb pop cmp cmp lea stc mov mov or ja sahf sti or (bad) aad aad mov push and mov loopne push repz fdivrs and (bad) rsm sub dec shrb test fs mov outsl dec stos hlt das daa adc ficomp shrl jae xchg insb js jmp mov pop mov add mov push xor (bad) jae add test push mov daa xor rcll adc add mov sub aad faddl fsts add in lahf aad add shrb icebp push aas test subb xchg mov push xchg movsb inc inc cmpsb xor (bad) xor mov fsubrs adc dec stos xchg mov lock int3 test pop and jnp in mov aam jmp pop aad imul pop fwait (bad) in mov and sbb pusha push in jp sbb or xor into push jge cmp insb mov (bad) cltd or sbb inc mov std and loopne sub sbb mov mov xchg adc lret add push insl cmp sti movsb mov push pop pop fs push jo (bad) xor inc incb sbb add push and jle pop dec sti dec out test sarb mov outsl push mov pop outsb mov xchg out jb outsb fnstenv push icebp add leave int enter lods cwtl outsb mov fistpl inc lret sbb jne pop xor xchg rcr push mov jo xor sub jmp mov lahf test lock fcmovbe rorl negl and call mov imul push adc add and jne loop xlat add ret fnstsw mov fild inc mov jg push fnstcw outsb mov mov pusha or hlt mov mov cmp dec dec sbb bound jecxz sbb dec inc mov loopne adc (bad) iret movb (bad) pop xor add pop enter sbb push push dec in add ftst lret and daa mov or or (bad) mov jnp lret clc xchg cmp scas sbb jmp push rcl jl adc mov cmp sub inc nop dec mov gs xor mov xor jmp dec lds inc rcrb sub push jl inc adc sbb jo mov into push fimull pusha mov xor cmp xchg xor cld sub dec and mov cmc mov rorl sbb lods insl inc mov fwait and push xor sub popf xor mov testl out iret daa mov pop mov repz jnp sub or fmull jp xor jecxz stc xchg cmpsl int xchg (bad) (bad) and cmp jo mov mov fbld jle out jb mov test (bad) (bad) notl popf xchg bound lret jb fisubl gs es es cmp cli adc out sbb loopne xchg test shll and or aam sub or (bad) or mov jg jle stos lods std repz outsb shr mov xor xchg insb cld dec add (bad) cmp hlt in mov mov inc xor pop jle idivl pop popa pushf orb (bad) ss xchg mov xor xchg test inc fisubl inc jo das std lea icebp mov (bad) push jae adc aam cmp out sbb out add aad cmp mov movq cmp movsl mov mov imul sub sub mov mov mov and out add (bad) negb adc fnsave push lock push cltd pop out pop sarb movsb pminsw addr16 jge and lea cmp xor jnp xor mov add mov pop orl out mov ljmp push add push mov clc adc repz mov inc jmp jge bswap mov mov sbb ja push in jno xchg inc mov mov fstps arpl bound adc cld push push out call adc out push loop sub fimull bound cmpb mov leave call pushf xchg xor pushf fnsave mov lods ss mov lods stc fsubl popf xor (bad) mov mov pop mov stc lret enter ss pop inc cwtl xchg mov sbb push cs adc cmp mov scas cmpsb aaa test or xchg dec mov fcomps iret lret movl nop fstl repnz ret arpl sbb xchg pop (bad) jo mov aaa jl,pt lret xor rol jp jno or xlat aas sbb sbb sub mov imul sub add out push mov ljmp jae inc pop in out add inc add fmul xorl das in dec in lock in xor dec mov popf dec fcmove loopne aad add xor enter add (bad) xor cwtl fidivrl testb xchg xchg inc (bad) mov jle clc int scas or xchg repnz xchg adc sbb or mov jnp mov push out mov mov xchg sub or add sub dec inc scas mov out ficom fwait xor push imul fs (bad) jns mov jbe (bad) jle sti push out push mov xor pop out int3 gs popa adc dec push les mov pushf lds ljmp int3 xchg adc test mov (bad) stos xchg jns in stc fs pop ss cmc add pop mov stos test mov dec push mov dec int xor xor rorl dec lahf lock xor cmpsl fistpll mov push inc call jne mov and xchg fwait nop pop lods mov xor cmp sub je or rorb push mov xchg mov dec repz (bad) jb push rcrl fidiv lcall inc (bad) sub fcoms mov inc insb setns xchg mov fdivrs and sbb xor push test pop sbbb sub cmc push lret jecxz mov test pop aas loopne mov sbb das (bad) cmp mov mov js xor mov cmpsl jae xchg insb pop je mov outsb insl jno and jne pop cmpb scas rdmsr mov mov mov add mov xchg decb (bad) mov cmpsb clc mov pop jne push les inc cmp lds loop lds jb (bad) imul add fabs xor insl or scas and mov push mov or orl hlt mov mov push mov aas inc clc cmpsb inc cmp (bad) xor nop in data16 adc xor xchg pop sbb testb movsl cmp xor mov jle fiaddl stos sub cld xor jae in push xor repnz xor imul pop ljmp repnz pushf rcr inc xor add xor mov sub jge popa mov sbb lds push xlat data16 fldt andl cmpsl outsb hlt push jecxz dec repnz addr16 inc push cwtl adc mov out inc jno popf adc add (bad) mov into push or out loop test stos sbb (bad) aam test mov lds fistpll mov (bad) sbb aas jb int3 test cli xor dec xlat jecxz pop or jge pushf fst xchg in bound sbb fs fdivrp pushf or lods push xchg mov arpl fidiv out add daa aaa xchg cs mov rcl shrb xor and sbb sarl mov push (bad) xchg or (bad) mov add adc repnz sti in mov sub int3 mov cmc jb mov stos fsubr pop das (bad) sub lahf dec notb in sbbl mov aad jmp outsl or cmp je ret (bad) mov mov or fldt adc xor pop out and inc inc popa mov (bad) repz pop mov push in mov lret jle popa fs pop out iret dec push sub in rcrl fidiv push pop test out int3 out es inc dec bound mov bound pop lods xchg sbb (bad) xor xorl ret icebp inc scas rcr icebp lods outsl cltd popa pusha movsl imul std enter xchg jle cmp mov lods (bad) sbb pop test ljmp in (bad) iret dec jo rcrl jnp stos mov adc dec stos nop icebp fistl fwait sbb (bad) push enter adc add add add dec add lea das mov shlb add test outsl shrb mov and adc ret push in mov out pusha push (bad) mov xchg sar aas or jne cmpsl inc sub insl in adc xchg push ds movsl sti inc jbe mov dec in push xor push gs jl sub iret and data16 add push push dec pop cmp inc dec test cmpl lds inc imul lret and cli sub enter lret inc js sbbb dec test xchg mov out fild aaa gs (bad) stos idivb pop leave adcb sub data16 cli cmp pop mov mov or mull mov fisub cmp fcomi jne test mov hlt add into inc push mov mov inc or popf or dec cli mov and (bad) xor hlt (bad) lea mov sar loopne out (bad) in pusha and pop cmp add inc xchg push jecxz mov mov in stc imul imul xor je stos fstl iret push jne jg bound insb xchg jle mov pop (bad) scas sbb fldl dec js jae pusha pop jnp rolb adc mov imul pop into loopne repz data16 les mov sub stc lods in jb (bad) out and fwait and jp mov inc enter cmp xchg popf mov repz dec adc ret into mov pop (bad) push in sub (bad) aaa jge mov jns imul repnz cld pop or mov sub leave pop pushf add push les push stc xchg cmpsl xchg cld movsl mov fstpt xchg lds dec cmc inc dec cmp dec enter mov push inc sub arpl mov (bad) cmp int push adc ret cmp outsl jg cmp mov cmp sbb sub xchg push dec in pop jle jmp (bad) addr16 push rcrb push xor mov mov adc jmp pop ljmp jp loop test hlt scas sub (bad) jmp inc xchg sbb or sub push sbb cmp shl stos mov lea sub xor mov xor push imul jl (bad) xchg lea xor sub pop insl arpl jecxz int3 unpckhps fidiv mov push call or scas dec sbb daa cmp jp and adc nop pop mov fbld push mov sbb lret popa push mov and cmpsl push jne push es aas mov cmp xchg int mov inc mov (bad) xchg in std sub push and (bad) dec test cmpsl pop or cltd movsb push pusha ret cmp (bad) sub (bad) fidivr mov movsb dec mov test jnp mov clc xchg xor pop out mov ret mov cltd loope inc sub mov and and leave mov arpl xchg fstp jne xchg js xor fcoms sbb cld arpl mov push sbb and movaps fs mov jle xchg dec sbb ror in mov lcall and bound sbb insl jge sti and add mov addb arpl fisub addr16 js stos inc scas mov aam xor xor dec fildll sbb dec mov xor orw push or mov aad inc loopne fbld xchg repnz jns xchg push dec sbb movsl or jbe fcompl and pop mov rep data16 lahf inc push lret inc mov mov out ja mov cmp xlat cmp xchg xchg pop xor mov pop inc mov or imul sub rcr (bad) xchg jno sahf or xchg inc add fwait loopne mov jb fisttpl push jge add xor push jmp lret mov loope xor stc popf jmp mov cmpsb mov push jbe cltd pop mov imul loope es mov fnstsw popa or sbb popf imul add and mov ret sub pop jg and daa into push dec jns cmpsb add push aaa into push jp and cmpsb jnp ljmp je pop push loop daa xor dec push rcr das (bad) cmc in cmp std into cwtl lret pop dec pop xchg sbb adc mov ss inc rcr cld out inc push mov mov lds push pusha ficoml inc in addr16 pop xchg inc mov xlat std ret pop movl or add dec and mov pop push cmp dec mov or dec popf xchg test cmpsb jecxz es into pusha scas das push and icebp mov xchg jns cwtl lock mov push xchg push sbb dec mov pop movsl push jno and push cmp cli mov inc pushf aaa pop xchg jl scas imul jg xor inc sbb scas dec (bad) mov mov daa xor movsb mov mov stos mov (bad) (bad) jge dec sub sbb jb mov cmp jnp xchg lahf mov xlat inc imul (bad) push (bad) sbb jbe xchg lods jp inc mov bound dec push fstl es dec push sahf jb jns dec or mov out add mov dec mov pop xchg xchg data16 rolb push and (bad) push sbb mov add mov sahf enter push cmpsb push test ds dec lds xchg sbb popf xor notl fisubr es cmp cmpsl push in les cmp and push jg mov (bad) fsubs add insb in sbb inc lahf or cmp hlt subl out rorb push pusha push test cmp add or cmp rorl jl fdivs xchg pop movsb lods leave cld rolb repz jge fs scas pusha jecxz push (bad) cmp mov mov jne out cmp call fs popa dec xchg xchg cmp dec adc out stos sub insl xor insl mov mov iret cs popa into add mov push jns xorb out jbe loopne cmp je push int int3 mov std test cmpsl fs xor add imul xchg inc mov sub sbbb cmp mov faddl in in insl loopne outsl lcall mov or jne sbb push mov sahf idivl fsubs stos adc stc sbbl pop rorl mov or sbb sbb jno gs das add in sbb decb ja jnp fisttp push movl test push outsb xchg push jle leave xchg loopne movsb push insl adc popa hlt (bad) out outsb mov jg or (bad) push sbb pop push dec sbb fisubr in dec xor jb mov (bad) push xor dec mov stc adc push push aas jmp scas xchg fisubl (bad) (bad) and dec ljmp fisubl cmc push inc or xorb daa pop mov jne inc xor int3 clc dec xlat or xchg mov (bad) loop ror mov push mov jae inc in insb and mov sbb insb sbb jae scas push mov (bad) or scas add mov or mov inc int pop sub dec fsubrs (bad) repnz pop cmp adc push (bad) cmp cmp sbb fldenv mov loopne lds push insb mov addr16 clc movsb imul sbb or dec push inc ds xchg or cpuid sub clc mov adc outsl pop dec mov fmuls mov xor xchg mov jno inc and xchg int3 lds out insb stos out or (bad) xlat ret pop iret xorl add mov int addr16 enter push repz std xchg mov mov push stos aad (bad) lods sarb dec jp imul scas insl mov ljmp cmp bnd cmpsb dec and push popf cmp daa sub and xlat cld lods into ja push outsb clc inc leave mov dec add adc roll stc les sub pop imull push inc mov js mov sub sbb jne fimul push cmp and ja jb adc lret add jg daa call and out xchg xor or insb adc test push aam mov mov mov pop xor and xchg xchg stos mov fist sbb fild int les mov xor fsubp (bad) or das in push lahf out mov test pop pushf and inc xor in fdivl icebp test lcall xor in movsl imul xchg xor or adc clc addr16 icebp insl mov xchg cmc push cltd push cli cmp in outsl jge insl loopne xchg and scas es adcl movsl xchg xchg and fadd push push insl ficom rolb xchg push xor pop cs jbe lahf fdivrl lock insb sub loope sbb and mov xchg lret ss scas pop pop aaa jg and dec push dec sti jle daa dec mov je mov inc pop les and jbe xchg repz sub lods sub js call loop mov mov fsubr mov adc add mov jecxz push jno inc jnp push aam mov stos mov shrl icebp orb mov sbb push pop dec add stc inc or imul das xchg in cmp adc xor add pusha push leave and cltd nop lods (bad) aaa call in sbb add cmc or push into lret add in je pop cltd sub out mov mov push jge and lcall out shlb (bad) cmp push pop push mov loop pop out pusha (bad) out rcr add mov and int3 xchg pop in fstpt (bad) mov lods enter push or xchg xchg pop or adc and xor inc ret sub push ja insb mov mov pop inc mov enter fldl arpl sub imul dec fcomps jnp jmp test ja and mov stos insb adc adc adc sbb mov in sbb aam jae jecxz and jp popf inc mov icebp pop sbb adc push inc rcrl ret pop std or add fsubrs adc (bad) adc shll or sub pop sub pop out and sbb mov (bad) sbb ss add add pop lahf mov inc rcrl fnstenv arpl add xchg jne pop or push mov mov mov lret decb mov push jne movsl jecxz cmp fild push mov pop stos cmpsb stos loop andl stc jns cmp vpslld dec ret adc and leave adc popf in lods xor and popa fwait repz data16 insb xorl push pop imul jnp leave call dec fistpl ret cli dec xor loop popa jns test cwtl mov test (bad) adc sbb lods aam and pop imul std lds cmp mov sub xorl xlat pushf call outsb dec cmp test cmp fisubrl loope adc aad sahf fcoml cmpsl int mov sbb inc loopne cmp mov std xchg outsl push sub call mov roll fwait addr16 push loopne iret dec (bad) inc (bad) out mov cwtl cmp rorb mov add push icebp adc mov jns push (bad) sbb fisttpl dec jne push cli jp mov sbb out inc loopne (bad) in xchg add insb (bad) jo adc jge pop mov stos int3 push jl pusha cmp dec lock ljmp aas cs repnz mov aas ds outsl popa imul xor mov xorl xchg adc rolb lcall xorl mov in sub cmp ja xchg test movsb test add dec (bad) (bad) cmpsl repz out aas call adc pop imul pop mov fiadd or outsl mov jge cmpsb bound jne mov xor nop pop (bad) xlat mov dec fsubs iret bound adc sahf sbb out sahf sub dec inc jb enter or sbb push outsb mov xorl add dec inc cmpsb jle js jbe scas xor addr16 push fsubs inc (bad) mov in cltd lcall jb cmp pop cmp mov sbb mov push loop cli inc mov rcrb add or repnz inc out in adc (bad) xor mov xor push inc xor xor mov scas out xchg bound jno mov cmp dec in inc (bad) and cs xlat pusha cmpsl aam xchg adc je inc pop add xchg sti xchg or popa vaddss frstor mov xlat mov push xchg push stos inc and cs js nop add mov (bad) stc subl and pop and mov scas sbb cld pop lcall fisttp sub push aad into push adc fiaddl pusha jno aad and rcl push sub sbb stos cwtl xchg std dec dec cmpsl and and in inc int3 mov hlt cmp push add (bad) mov lds stc sbb and sub test test (bad) cli adc jmp int (bad) sbb repz (bad) lds inc pop jne popf and pop gs call push sbb xrelease pop (bad) cmc imul sub xchg xor out hlt pop add cli rclb push cmpsl in lods cmp rclb (bad) jne xor (bad) mov ficompl jbe orl xchg dec cmp (bad) push lds add loope jmp xchg int3 sbb sahf jae nop jecxz bound lcall xchg push mov gs out push mov or push jg sub xchg mov cmp mov mov inc inc in ja shl sbb pop cmp xor loopne rcrl fdivs ficompl pop xchg xchg int3 scas add repnz aam cmp xchg scas push roll cs mov fwait sbb push call nop mov (bad) mov (bad) inc xchg js sbb insl ds out cld leave int push cmp xchg mov test adc mul push (bad) push pop mov sti mov mov popf mov push and jg (bad) mov call enter pop out and mov (bad) fdivs push je into mov or xchg xchg xchg incb lds push mov xchg push push sub popa mov push pushf faddl sbb adc ljmp inc sub mov insl or insb and and lds push stos shrb mov mov sbbl insb sub adc ja aad pop push repnz xlat jg ret movsb push push mov dec mov mov add (bad) jne fstpl cmp xchg dec add jbe xor or fnop sub mov jns push fistpll push cmp mov sub sub pusha adc cmp mov aam xor jbe and lods jl cmp mov jle mov xchg rcrb xchg cltd jno mov iret push fisubrl add jp (bad) dec mov aam mov jl popa movsb pop fcomi mov inc arpl test push or mov xchg enter jbe cmpsl sbbb fidivrl lret pop inc ror loope pop cwtl xchg pop mov lahf add jnp into cmc cwtl xchg cmp ja sub sub aam or les mov inc lock shl cmc addr16 jp out es xor iret mov mov iret mov sub loop add mov jmp (bad) xor push cmpsb jbe push std mov push mov mov push add out mov xor stos sub xor pop pop push aam pop es insb sti sbb pop sarb rorb add dec cmp jge mov fidiv ror fiadd stc imulb dec repz hlt jnp ficomp enter pop je cmpsl adc fisttpll or out mov test xchg dec (bad) mov jbe or or mov (bad) adc adc or loopne adc in lret cmpl jae mov dec or jbe xchg mov pop sti pop cmp in dec test imulb out xchg push push mov popa rcr mov dec xor insb mov js adc (bad) mov iret pop adc dec mov fwait insl pushf daa or test arpl std das cltd pop cmp iret sbb jmp jmp mov insb jae jbe jmp ret lret sub push jge (bad) in std xchg add and inc sbb pop movsl rclb xchg or mov inc shrb aam mov pandn aad decb cltd xor repz push scas inc jno sbb push testl lahf stc arpl movsl xor call sbb mov insb pushf inc xchg push mov idivl in jp imul stos add fstpl out dec or (bad) cmc mov mov xchg inc aaa or or stos adc jle test sbb mov insb xor pop hlt xchg out leave (bad) mov int add loope shrb push cs mov lret subl pop add sahf xchg pop jns imul pop and inc sbb and loop jle mov sbb inc inc repz movsl adc ss xchg and pop push pop add cltd or mov lret repnz inc mov push ficom xchg test xchg pop and cli hlt ja or setle in jmp int3 jne leave test out mov jno mov sbb mov push push xlat pop (bad) sbb aas cmp leave lods jns push stos ljmp shrl mov mov jo call gs add xchg scas daa arpl aaa dec mov dec mov xchg inc mov pop cmovbe (bad) aad pushf inc enter add pop mov and daa add jl push pop aad movsb js in outsb lahf sub dec imull loopne pop sbb scas mov mov pop shlb pop sbb or pop jno xchg sub insb inc cmpsb dec out jb push push pushf in mov fnstenv ja ljmp jle mov imull enter mov in ret icebp cwtl scas sub (bad) inc jecxz shll inc jecxz push aaa xlat add mov sub or sbb leave sbb vmread sub inc push fnstcw dec (bad) repz xchg ds jl or fidivr aaa pop out jmp and jns xlat dec das xor mov dec jno shr sub fcoml cltd daa adc (bad) cmc sub push cmp stc aam (bad) hlt or mov xor or add pushl hlt cli xchg inc in mov jle push mov pushf fimull mov negl mov outsl es sbb (bad) mov ds movsb rcl adc dec and xchg add repz push rol push mov into sub push arpl inc jno cltd mov hlt mov fs mov fmul outsb shl lds cmp popf jecxz add xor pop frstor insb nop shr lds out mov mov data16 into jp movsl jle jnp nop inc (bad) sub inc fisubr push and scas xchg mov (bad) add arpl ret or loope push dec movb rorl jnp ljmp movsb pop lods loop mov out mov test mov fmul push sub aam scas movsl loopne xchg jp mov sub das jmp fnstcw out movl loop inc cmpsl insl mov xor iret into adc or add clc xchg and jle adc stc jg ret sbb (bad) (bad) aaa dec bound ss test push mov mov jmp xlat pop inc dec test cltd (bad) ret adc cld or jl ja xor push ljmp inc jmp pop mov je dec test in pushf (bad) xor lods jp mov icebp (bad) js inc mov bound adc imul lahf lods cmp enter ja insb icebp pop lock ja inc xchg and (bad) fdivp repz and aam imul add or stos movsl sub push test fist adc cmp xchg imulb in mov ret dec cmp inc loop inc sarb mov stos mov into mov push push js cmc mov cs insl xchg xchg jmp dec arpl (bad) push sub sub jl es fwait popa adc adc js jmp fadds test inc ljmp fimul out pop aaa cmp dec lods and push int or sub push cld notb dec test xor ret pop sar xchg jo lea adc pop ror and xor testl out or shrb push aam cld adc or in (bad) test sbb push ds repnz aas add cmp and mull stos (bad) sub fdiv ljmp (bad) (bad) pop cld lods or jae into sub shrb stc arpl scas push mov xchg cmp adc mov lds mov fcompl in push scas fs cmp and sub repz jo test adc test xor sbb (bad) outsb bound (bad) jae and push or in fiaddl and daa sub mov ds pop or movsl mov fldenv jmp xchg (bad) cmp and dec insl sarb xchg ljmp inc push stos rcrl stos push shlb push fxtract mov iret divb and dec fmuls repnz popf mov idivb pop pop push addr16 push fnstsw stos inc ljmp mov pop push pushf cmp lods cmpsl sub daa pop pop lahf sbb (bad) sahf rcll push pop ret push push push out int3 jnp sub je push ret es imul jne repnz push data16 pop pop or mov adc xor jg ret mov leave mov (bad) mov jns pop stc xor insl fwait jecxz inc mov sbb lea clc int or fwait xor sbb jae mov js inc pop cli fwait pop mov dec mov (bad) xchg jne jle ljmp mov jg movsb mov adc adc xchg lret test and mov add (bad) lods inc xlat jno aaa push adc push out inc hlt jb rcrb in loopne jp mov mov pop inc and cli pop xchg fdivr out fcoms aam inc mov adc or ret stos cmpsb xor dec add xchg mov dec (bad) std testl cltd mov inc mov mov mov das pop fnop mov add clc outsl sub cmpl and repnz inc jne test sub add xchg sbb test movsb stos cmp icebp movsl movsb jne pop cmpsb push mov adcb jb xchg jge nop insb movsl cwtl jns mov (bad) xorps cmpsb in sub lret mov pop out and pop jl xlat dec popf adc jns lds mov jg dec adc pushf jg shlb sahf add add jmp push sub push in xor mov repz outsb leave or adc cltd out jmp lahf pop mov movsl shll data16 mov leave jle pop hlt in pop aaa mov pusha (bad) mov mov xchg cwtl pop in outsb inc jmp mov int inc incb pusha push outsb xchg clc push test pop aad xchg (bad) gs ljmp mov inc dec movsl dec sahf jno rclb mov int shrl lods cs add int3 flds jecxz test sarb aaa sub cmpsb jp xchg jae xchg ds es jmp test mov xchg jnp test push xor aas mov sub cli out scas repz shrl fsts adc gs cmp out fucomi inc xchg divps daa loope mov ds xor cmpsl decb frstor lds rorl sbb popa test jg add jmp add pop mov sbb stos lcall fs int3 pop in xchg xor dec jmp sbb mov rcl out pop xor out dec cmpsl push addr16 pushf lret roll dec sbb repnz ficoml out cmpl pop sti xor mov dec movsb xlat or iret jnp and jo out xchg mov dec jno leave jge mov jno (bad) gs fwait aad (bad) repz mov or fs or aaa in movsl push mov or (bad) divb ss imulb ret ret sbb or rolb ret and pushf xchg iret into cwtl jp adc mov iret lcall aas sbb push ret rcrl xchg pop mov jl ret nop pop test icebp ja loope sbb andb adc jl (bad) mov out sti pop outsb lods or outsb sarl outsb (bad) mov sub push jnp fdivrp js mov and and adc ror push and (bad) cmova adc lret xor add cmp lret mov jmp repz cmp xchg lcall scas negl ja push push in outsb lcall push call xor xchg bound insl fcomp mov jne and test push mov dec pop mov cmp push test lds testl sar or sbb sbb insb jg cs inc xchg or pop mov sarl outsl xchg test fldt and adc mov stos inc cld xchg addr16 (bad) pop mov xor enter sbb addl pop test adc fisub call (bad) adc sub add add ljmp or xchg jae sbb dec fcoms outsl leave and mov pusha mov rclb insl loop aas (bad) hlt mov adc add sarl shll jecxz sbb pop push sbb pop ljmp pop sub mov (bad) int3 jnp push pusha fcmovnb mov mov adc dec push add aad pop or push out sbbl insb mov mov cmp cltd test int gs insl movsb fwait dec cld adc outsb jle arpl xchg arpl (bad) pop mov push inc (bad) mov mov mov lds inc cmp aas ret xchg push lea pop lret mov test inc shrl test jge clc push and fs or out aad mov cmp pop pop xchg (bad) jp repz sbb and or fimul pop (bad) mov add xchg cmp dec mov sub loop pop add imul pop outsb leave sbb xchg cwtl sbb xchg nop aad xor cmp rcrb add and sub pop mov jno dec adc inc adc pop jns out mov negb mov mov ret xchg xchg stc addb add (bad) arpl cmp out xchg mov es dec xchg cmp out je movsb mov xchg or and mov insl sub lods sbb adc push int3 push pop in jg cmp mov xchg sbb cmpsl mov (bad) fistp adcl jbe sbb lret int push enter gs in addr16 inc dec push in mov pop (bad) mov pop aam xchg add cmp sbb stos jo in push mov subl outsl cwtl mov rcr xchg jae out scas add fstl frstor pop inc and xor push sub pop xchg daa sub jp test pushf jle mov das cltd in scas dec sub pop add jmp mov insb rcr notl addb xchg call sarb cmp mov pop and dec inc cmp mov and insl cmc jo add adc xor and dec mov (bad) pop sub hlt xor ljmp push jmp lcall mov int pushf mov xchg rcrb int fs out jecxz sti cmc pop in push xor inc enter cltd mov mov mov fs mov btc jne push out xchg or jae cltd lahf and or cmp js shll xor aam sarl les push lret dec in inc daa jnp push xchg (bad) pop xorl std cs xlat (bad) or lahf stos rorb sbb cld xor idivb test push mov aam xor gs sbb mov (bad) sti xchg add and sub out add cmp cmpsl lds mov (bad) xor mov xchg negb (bad) mov cmpsl jb cld cmc dec cmp sbb inc pop xchg fsincos lahf insl lds popf jmp ljmp (bad) and xchg push dec mov popa stos cmc fnop and xorb cmpsl gs das ja ja in xchg adc pop shrl lret add pop sbb sti xchg mov cmp lds pop pop lcall mov movb das popa lea cmp adc mov fnstsw sub mov xor or rcrl rcr in mov stos xchg sbb xchg sahf jmp mov loopne (bad) repz inc mov push dec inc xlat rol xchg sbb js fcmovbe lret je (bad) out fistl mull push rcrl lods cmp and rcrb into sbb pop ret data16 inc pop mov out fs cmp inc xchg dec addr16 add sub arpl mov fildl dec test pop repnz test into mov jecxz leave fbld fisubl jae aas (bad) shrl shl push aam xchg adc shll xchg or loopne mov in inc mov sub scas fucomp int inc mov adc (bad) sub and stos mov lea in stc xchg pop fsubrp rclb sti hlt rolb xor dec lea jne push or pop cmpsb push adc lahf xchg adc or push push ret pop or les (bad) mov xchg mov mov shrb cmp mov mov inc xchg cmpsl fmuls scas mov mov arpl adc stc enter mov cmc fbld push stos jp rcrl jno aaa lret push icebp lock push cmpsl add adc aas movsl sti std mov je mov adc jl rorl lods or (bad) dec xchg sub sub inc xchg enter sbb inc mov stc out or jo mov repnz cmp leave pop sub cmpsb hlt (bad) lahf into jmp cli outsl lods cmc stos push (bad) mov pushf adc lcall mov dec rorl ss loopne dec ror ficom adc cmp lea notb pop sbb jecxz push mov lret or lea (bad) leave ret cmp jge xor in push pop aam pop rcrb pop (bad) ret scas aaa adc (bad) leave aam cmpsl mov aas xchg das mov ret jno es pop (bad) lret adc dec xchg in ss dec push xchg mov mov sub jp dec sub enter add fndisi(8087 into (bad) xor mov std lea fdiv loop pop in js mov jp mov push or lret inc int sub or jnp mov cmp mulb scas movsl mov mov mov pusha arpl xchg rolb push dec fisub xchg fldt lcall xchg call aaa sub (bad) push pop push mov decb pop stos lret mov xlat dec enter jb fdivrp sbb mov rolb adc mov arpl imul push dec pop or xchg gs and enter lahf out in pop lret int3 pusha jo push xchg (bad) sub mov pop adc xlat aad fwait clc xchg popa push sbb popaw mov test imul (bad) lea insl mov ds and xchg xchg jecxz movsl lea dec jle retw data16 fdivs loope jbe cmpsl adc lods pop sub pusha cmp imul sti jbe cmp sub sbb xchg and ja mov xchg mov shlb inc pop add in out fbstp rcrl (bad) test adc or or nop mov xchg addr16 call lods int3 jle lds and push sub (bad) sbb lea add movsl xor or mov outsb (bad) xchg push xchg adc nop mov js (bad) pop add xchg fsub js in cmp rorb data16 push jne dec jmp and in cmp or dec in das mov push inc aam sahf cmpsl and adc add test sahf cmp push and push mov add ret push (bad) mov lods and out fisub adc pop out aad cld mov mov popf and repz loop sub fwait xchg (bad) xor je sti rorb mull sbb ret xchg and push (bad) int daa pop push subb xchg ret xchg inc inc mov bound cmpsb test add cmpl dec cmp dec adc push jb jmp add lods shll pop movsb aam inc mov sbb push cmp and lahf std cs lock movl or (bad) lods inc sub dec adc fistpll sahf icebp push add fsubs out xor inc push addr16 adc arpl pushf sbb adc mov out xchg out sub sbb mov fisubrl xchg sub cltd jbe ds in sub ja pop mov and mov lods add xchg mov jmp (bad) mov into (bad) mov adc loopne cmp aaa cmp das pusha cmp ljmp dec (bad) sub mov mov ds outsl (bad) mov (bad) insb sbb imul leave xchg or inc inc mov movsb scas mov jns js (bad) push pop cmp lahf push xchg or mov xchg popf inc add sti jo adc sbb mov lcall push mov adc pop add pop dec call mov jnp pop xchg les lods fcompl in xchg mov lret sbb sbb mov iret lock pushf in jbe scas lret stos divb js mov ret xchg mov das cmc daa push push lcall mov xchg lock push cltd loope push fimull stos jae push imul and or sahf in push loope enter dec push arpl sbb ljmp movsl pop call jb sbb pop sarl jg shlb mov repnz out pop jno and das fmul sbb or or jp out testb ror push mov popf repz push test and mov inc daa insl lcall mov scas xchg pop loop call xchg and shll jecxz jl sahf jbe jnp loop pushf lret ret movsl lahf dec and inc mov pushf xor lret stos xchg orl jge mov xchg in sbb fsts pop lret cwtl mov and sbbl and insb adc cld (bad) movsb paddd roll test mov das fstpl jnp mov cltd pop or ljmp ret icebp in xor dec mov and push dec add lds test jle imul enter scas push pop sbb imul and loope mov shlb mov dec lds jmp jns fistpl adc mov fsubs jne (bad) pop shrb jmp mov xchg cli insl dec xor enter jbe std pop in adc pop fidivr push movsl mov out jge cmp mov jg mov push mov pop (bad) mov add mov push xor fisttpl mov xchg jb lahf loopne xlat pop test and sub jl pop mov cmp mov xor cwtl xor inc jl xchg enter out jnp in popa jne in hlt test xchg dec xchg add std daa popa xchg mov mov dec insl aas mov aas lcall mov outsb xchg push mov scas ds xchg mov inc std mov and or jns imul fs je dec cli mov xor in jnp sub push test loope negb (bad) idivl inc enter mov inc in les lcall inc xchg insb dec lods and std movsb pusha jle lcall xor pop fs ficoml pop xorl push inc mov cs loope xchg cmc fsubr arpl xor add outsl inc lahf mov fsubs leave pusha add sub out test inc sub adc sub sub xchg add in arpl mov fwait pushf dec and pop stos or in test fildl or hlt mov cmp pop mov cmp cmp dec dec cmpsl lcall lock adc arpl pop shlb mov and fisub cwtl mov adc pop fsts int3 cmp mov leave inc mov bound invd xor lret pop jmp ljmp mov xor js mov lret fcoms mov fisttpll mov jno (bad) or std sbb jb adc jnp inc loopne mov test sub mov fmul sub mov sub sti shl ret fwait outsb test andl ljmp pop mov (bad) jmp cmc imul mov pop enter sub jae data16 out pop xor sub add push sbb and jo jo push daa ffree xor pop xor jae add cli or push jbe in xchg ror xor add sti and cwtl dec insb mov call push cltd and inc sahf data16 pop movsl xor lcall pusha lock pop hlt push xor xor bound push mov adc cmp push cli sbb push dec btr shrl or jnp fs movsl lcall stc mov push jmp aaa jmp xchg push xchg loop shr mov inc push xor imul pop adc pop iret sbb xlat push (bad) xchg fild or jne jg gs mov mov aas (bad) xor sub cld sbb stc and or mov outsl cld test adc inc or dec xor inc mov adc loopne mov jmp adc (bad) into push sbb adc shrb push rorb (bad) fs clc ljmp inc and fidivr out bound cld ljmp rclb std jle fimull sub push movsl jmp mov xchg in outsl neg (bad) jns fwait inc xchg xor pop jo xchg sbb es push xor jbe cmpsl inc ljmp andl adc sbb xchg push fsub pop and jmp dec mov jne add sub ja lcall push and stc arpl and pop fs out add je xchg mov iret lahf mov sti cmp stc clc or stc pop mov imul or fcoml inc cmp addr16 int fiadd icebp (bad) mov mov add into mov jmp and pop (bad) or rcl ljmp out fwait push pop out jle mov mov je leave and xlat loopne or xor add mov pop or les sub xchg test or (bad) and mov fldt push dec int add sbb aas ss cmp fwait lods and roll and sub mov or mov bound sbb cmp xchg addr16 rcl inc insl sub popf js movsl repz or xor enter fiaddl cmpsl repnz fwait lods pop mov adc mull scas outsl adcl add mov or dec cmp daa incl sbbb clc aam stos jnp dec sbb sub enter (bad) dec mov pushf push jo les mov outsb andb divl in cltd lea loop dec int3 push mov cmc dec inc push jl das insl (bad) mov push (bad) pushf (bad) jmp pushf fxch or popa and iret arpl push pop mov mov mov (bad) or sbb jmp mov in jg sub lahf sbb mov sub xchg sub call dec aam lahf xchg movsl mov test pop dec xchg int3 mov les ficomp js mov imul mov adc out add cld or shrl test mov int loope ljmp cmpsb jns push mov pushf push fisttpll and xchg sub stos cltd sbb adc or jno popf push xchg jecxz sub xor jns cltd xchg (bad) fisttpll pop ja mov pop incl popf inc mov ret mov jge shrb xlat lock std leave mov shrb xor mov pop cmp fisttpl add scas bnd xchg pop mov pusha imul mov jae lock sbbl mov faddl cmpsl sbb mov out jae mov cmp scas sahf sub add pop inc sti sub adc cmpsb dec pop int3 (bad) cmpsl inc cmp into mov (bad) adc mov pop jb mov and bound int (bad) fimul push push pop and pop inc (bad) jb nop mov xchg dec loope out out pop outsl jne stc xchg mov pop jae jo mov cwtl loop daa arpl jg cmp push and fsubrp cmpsl mov mov ficoml enter hlt insl cmpsb push cmc loopne in fld daa sbb dec xchg xchg dec ljmp pusha rcr dec subb stos sbb push xor mov push jl sahf mov xchg adc mov jecxz ds lds fcoml sbb movb push push shrl ljmp mov pushf jecxz jp push cmc cmc std daa in xlat lods cmp lock aad aad lret push mov mov jno hlt mov imul mov lods lret pop addr16 jge mov aaa les pop jl sbb cmp and sti sbb xchg lret push pop cmpxchg clc lea sbb push pop and mov sbb cmpsb pop (bad) jg movsl push inc sub fs cs popa push xor outsb (bad) sub fild les xchg (bad) jae (bad) cmp add sub and movsb pop ja shll in jge (bad) idivb mov js dec mov clc pop add or in mov add sub stos pop mov scas and sbb jns adc xor mov adc push push ja push not sbb mov in (bad) stos jg fistp sbb push cmp sub mov inc jnp icebp adc mov xchg dec push pop jl push aas fnstenv push xchg push (bad) pop pop leave push ror lret outsb dec jae addl jae stos outsl or call adc xor fs or push pop sbb lret rclb fs xor cmp enter pop cli mov enter lret icebp testl and add leave iret lods add pop xchg scas loop mov and add nop or movsl sti rol ja add sub sbbb mov int3 test data16 xchg push rclb dec lcall hlt cs (bad) fistpl inc cwtl sbb push pop rorl (bad) test push cmc or cltd inc sub xchg mov incb mov jo jl imul es or and push sub fs adc mov ss xchg in and ds pop imul nop repnz inc and rorb (bad) icebp and ret out dec jno scas in ja pop mov push loope dec out call mov mov or adc mov mov test cmpsl and mov cmp jne idivl aad (bad) int3 fldl2t xlat add mov scas or and cltd and cmp js mov movsb or or push lods cmp mov mov mov sbb push (bad) cmp xor inc insb fcoml dec pop lea stos lock in mov sbb repnz push lahf movsl xchg add negb mov mov js cmc fsubrl dec loope mov leave mov jb call scas pop adc add jbe fsts cmp js fbld fst sub jge popa inc and push dec cwtl outsl and sub sub stos lods mov in jmp call cmp cltd pop mov rorb push and inc pusha pop daa push jns,pn xchg pop roll pop ja nop jns or dec imul push and sbb (bad) test xor cmpsl int movsl dec push jp nopl rolb sbb sub (bad) mov dec xchg mov jns mov lods jae daa xchg fldt cltd jecxz es inc arpl data16 cmp scas cs aam cwtl jmp cmpsl adc mov mov or cmp push (bad) jp xlat push push stos insl das clc dec sub fimull cltd fwait xlat sarb pop (bad) jno insl scas das into stos ja pop cmp pop sahf outsl push aam mov rorb outsb xchg push scas jne mov lahf mov in inc xchg out sub xchg cli jecxz xor push je add xchg mov mov jbe jns mov outsl subl (bad) fdiv dec jb dec jno dec gs cmp cltd inc aaa call imul unpckhps lret jl test cmovp or sbb iret call push test dec movsl imul sbb fisubr notl sahf pop pop and mov mov cmp das sbb or out scas mov add push sub ss fcomp pop lcall stos imul out lods dec fnsave mov (bad) jno adc jo mov in pop or sub and adc lret rol jp call roll mov das (bad) jne add cltd lods daa jns pop cmpl adc xchg jne or outsb repnz lret ljmp mov es jns pop sbb adc daa xchg jp mov mov imul clc (bad) mov ljmp xor xor mov dec pop mov orl cli xor lods ret ret push cmp sbb cmp fdivs add jmp repnz mov xchg dec push inc xor dec fcmovne cld adc lods (bad) shrl xchg inc jmp add fwait loop les adc jg mov jnp outsb das cmc lods dec movsl lods push (bad) clc mov inc jle mov jp daa leave cmp sub stos xor jnp and outsl xchg push clc fist pop lods in jp lds dec mov fcomps push inc sub push pop movsl mov rcrb lret sbb orl pop cmp ds or dec push stos mov adc sub ja mov pop (bad) dec add jnp xchg movsl jne pop insb insb or inc in mov pop imul sub dec pop cmovae jae popf imul xchg pusha xor cmpsb cmp rcpps push fs test lods mov inc jmp dec inc loopne cmp add fstpt pop push add fwait sub pop mov iret push cmpl xor cwtl clc hlt enter pop ss jb stos inc mov jne push xchg testb sahf mov inc cli sub repnz lret daa or test adc orb shr mov addr16 scas jo inc (bad) push popa rclb data16 repnz mov movsb jecxz cli inc jnp movsl xchg (bad) mov xlat cmc sahf mov les inc repz mov ret xchg stos shrl xchg test inc inc xlat das inc (bad) jns cmpsb adc add sbb mov cltd xor test jno lahf sarl insb loopne cmpl fdiv push dec pop jo push sti dec adc or cmp out mov sbb sbb (bad) mov sarl cli loope xor mov lds sub inc in movsb shrb lret outsl mov roll sbb adc and cs aad push inc jecxz int3 adc sbb xchg jp ret push imul fsub popl out push push inc leave pop xor jmp dec push adc mov ja clc mov sbb pop loope adc dec popa cwtl dec jo cmpsb mov aas push push mov jo sub int3 aaa movsb rol cmpsl dec aam and sbb aam or push sbb (bad) jae mov and sub adc adc or xchg pop add dec daa sub fucompp negl ret push pushf adc cwtl idivb push pop fwait ds cmp or dec scas mov add divl add xlat int3 mov fincstp cmc repnz neg dec mov jle cmpsb or sub jl repz js cmpl outsl lock das (bad) add xor xchg idivb divl xor and loope xor jae mov jo bound mov ret into push fnop les xchg test jl pop mov cmpsl ret (bad) enter pop int3 jb lods cmovo mov cmp sbb insl aas xchg movsb xchg dec nop jo mov loope sbb mov mov dec lcall fisubr popf adc outsl imul daa lea adc xor ret dec leave enter jnp pop jecxz push adc mov aaa jnp mov xor inc popf int3 push scas dec jne cmp mov mov sub dec push adc gs mov dec lds enter fcmovnbe dec aad lret leave fwait ret aaa loopne popa andb mov test xchg jl fsts test cmpsb inc mov (bad) mov push (bad) lret jle mov cli (bad) repz adc adc in dec adc js push pop sub push es loopne push and inc xor loopne (bad) stc mov mov (bad) mov lcall jle push les icebp test jg sar call pushl jnp dec aas jge test in lret pusha or rep cmp pop sbb push jmp jmp jmp ficom test movsb fwait iret fimull fdivr xchg rorb and fs sub rcrl add lds test ljmp xor loopne sbb mov push divl jl (bad) dec pop push jae jno xchg aam or (bad) lock int cwtl mov insl mov enter jbe loopne,pn pop mov pop cmp adc mov fmull push mov outsb cwtl jno and mov xor sub jp push jmp mov cmp loop cmp cld jecxz pop test mov test jns mov mov (bad) fsub push mov daa xor mov dec test jp jae dec ds mov sbb (bad) out repnz int repz test dec hlt lahf sub fsubs stc out insb enter mov es shrl push add xor andl mov in mov and vandnps add faddl dec mov jl mov fcompl inc dec ja lock je add jo mov sar int or jmp ja int out cmc (bad) in pop add movsl in in leave rcrl jmp aad jnp push mov xlat push push cmp cmp or jns or lret iret xlat rolb or ficom mov inc push scas scas inc js push sub dec test enter aas in cmpsb jbe out dec sti loope das mov xor cltd mov inc mov hlt stc sbbl xchg push cs inc mov jg call call test jo push sub loop sbb dec xchg cmp std int3 mov jo (bad) out mov rcrb outsl xchg fstl stos xor pop and ljmp add sub inc insb out dec jecxz cld push mov (bad) cli pop sbb mov mov jl icebp pop push lock lcall or xor pop mov dec sbb rcl (bad) adc test cmp (bad) mov inc sbb mov int stc jl aaa pop jle stos scas pop or cwtl and (bad) jnp fcomps jmp mov scas (bad) mov popa dec sbb and sbb fnstenv push ret sub loope (bad) call mov jl sub and inc inc loop add fsubrl mov pop je sbb sbb (bad) xchg add sbb das das or insl dec dec sahf inc les lahf xlat xchg mov jl jb loopne cld pop cmpsl add jb pop stos jo stc popf mov cmpsb (bad) into movsl jge lret mov xchg scas fadd in jo nop pop inc pop inc cmp jnp stos sub sahf add adc mov mov scas sahf inc mov cmp jb xor pusha sub test (bad) or mov sub dec sub mov dec iret mov push adc into push mov scas negl mov jb and push sub pop in mov pop sub into popa dec mov fnstsw pop sub outsb adc out xchg nop push pop mov rcrb in rolb dec out out ss popa mov push sub inc mov je imul js cmp jp mov push adc add inc hlt cmp or or and mov pop mov xor mov mov jbe enter adc cmp push ficomp rorl sarl cmp sti jno or pop aad and pop add xor shlb xor pop jno xlat insl imul cltd cmp lods outsl (bad) (bad) rcrb mov cmp daa aam pop js pop gs cmp cmc sbb fldt inc mov in das stc cmp xchg pop aad mov mov imul sbb add push or (bad) stc popa lret ss inc sahf scas inc or pop cmp add cltd sbb sbb cmp sar xchg xor cmp movsl adc stc jb mov cmpsb cmp or movsb fcmovnbe sub dec dec ljmp mov mov mov outsl in dec js jge outsl xchg xchg mov aaa push xor and sbb mov adc inc flds cmp repz out pop test mov and fsubrl daa pop adc pop pop movb jle cmp mov js clc mov adc push dec dec pop jp (bad) mov push push or test aaa shr pop outsb xchg mov jg adcl pop mov popf or jle xor es movsb or mov mov jno push add sbb sub test dec xchg mov push enter shrl push or stc and cmp outsb mov push cmpsl adc aad xchg enter inc addr16 xchg and jo sbb mov dec lock jne xchg mov sar sbb loope lods icebp fildll (bad) aad lret jno or imul add pop cltd fsubl outsb and bnd mov gs mov popa and cmp jns pop mov inc sbb repnz int3 je dec sarb pop or addr16 push adc inc sbb les push out inc test in pop mov jg (bad) and popa sbb or (bad) scas add inc pusha xchg mov jns daa mov add inc shrb int3 cmc adc xchg imul adc in jmp (bad) fnstcw push shl push cmp adc inc push inc andl push cmp jecxz shrb arpl jmp popf repnz jb ds mov or inc dec dec pop mov es jg mov or mov fldenv dec pop (bad) je ret sbbl repz fmull inc std imul dec inc addr16 xor in mov imul test test pushf fwait xor or int pushf out imul pop jmp adc or mov addr16 je lock and xor push lahf inc mov push jmp scas pop or mov rorb insb and (bad) aaa inc mov (bad) ret adc push inc sub push cld les loop ss ret mov js in or mov scas push cmc sbb iret and loop jl mov outsl add ds lea in xor sbb sahf pop pop fcmovb dec mov jns es push push push inc hlt loop test and lret add adc stc mov mov cmpsl or cmp cmp or pop mov scas add mov sbb inc loopne mov mov push outsb jl adc mov test not popa addb daa mov gs sub and imul shrb je cs or mov mov push pop add and sub pop insb (bad) lret ficomp (bad) mov jecxz jbe imul loope inc jo in mov insb fwait mov fisttpl jg mov in sub xor addl add xor mov out sahf addl sbb loop,pt rclb repnz stos lcall mov insl addb mov ss dec iret lock xchg push or push cmp xchg sbb xchg fsts cmp push inc cmc sbb xchg push cmp out test (bad) or mov pop adc xchg sbb push lock (bad) mov mov sti adc add test loop out inc sub sub pop addr16 jle pushf mov xchg adc add popf dec aad stc jecxz mov xor cmpsb xor and dec mov testl scas or push sub test sub popf incb insl insb sub dec pop popf sub dec lea scas xor out mov push ret pop aas push push sbb ljmp cltd sub pop or xor cmp mov ret jnp xchg mov jae mov rcrl daa aas push sbb (bad) in shr aam fwait adc add mov aas adc xchg mov jmp jl xor add aam dec shll stc cmp das xor mov inc or lcall xor icebp sti dec scas add shll cmpsl addr16 dec imul push test mov repnz mov mov fisub imul push test insl xrelease or jp and frstor ds inc push xchg sbb push or fisubrl int3 mov lret loop std out sti pop sahf (bad) or xchg push jge cmp pop mov cwtl push mov lret adc test int dec mov sbbl mov mov jbe dec fisttpl mov daa imul jbe dec or xchg (bad) lahf or pop loopne insl int inc int3 data16 xchg fnop fsubr mov cmc mov daa loop in mov add out cmpsb aas xchg xor ja mov jo pop mov ds sbb jae andl pop imul xor movsb xor jnp cmp push mov add push inc out test jo mov push xor je jnp je adc pop xchg aad scas imull pop mov das sub push lods lahf xlat in aad push cmp sahf (bad) addr16 (bad) xlat lods sahf inc jle pop cmp xor mov sub test pusha hlt xchg add and push pop cmc add sbb jo fisttpll movsl mov jns dec inc js xchg jne push mov les and sub fstps sub mov out xor jg mov push in xlat pusha call gs arpl popl add jne insb mov in xor dec lods fldenv out add dec pop cmc mov lcall jae out jmp pop pop push push pusha mov insl cmpsl mov adc dec out jle pop jecxz mov mov and fidivl push sub stos aas nop dec xor mov fadd test mov jecxz xor repz sub gs mov clc jp jmp dec les sbb xchg push adc dec pop (bad) xor inc sub jno aaa sbb add add lahf fwait adc jge jecxz dec pusha aam mov loop pop mov xor jne xor push sbb jns dec pushf out mov mov hlt sub (bad) ds or je push pushf out into push sub adc andl je,pn jmp mov popf leave out mov nop sub or and push xchg inc push pop sarb jmp test test test in dec inc (bad) (bad) std inc adc mov cmp lods mov (bad) xor popf ss mov ds iret inc decl xor lock inc and push xchg add call pop ret xchg in movd bound sub and test dec out sahf xor arpl pop je jge sub out inc pop fidiv arpl mov hlt push stos xchg jne sub gs xchg xchg jae rcll cpuid xor adc pop dec mov mov pop inc (bad) int into repnz inc int3 mov (bad) hlt mov push cmp and mov mov test popf mov adc mov lahf std add cmp or xchg and push scas out (bad) int test xlat cmp dec and jge xchg arpl xchg push rep inc lods test add adc or jl es popa movsl push mov push jg or sbb pop stos pop push shrl cmpsb ljmp test or lret popf arpl repz and mov pop dec data16 inc push mov jecxz scas dec jle or xchg lea cmp jle pop cmpsb outsb (bad) pop pusha jne mov cmpsl loopne add add xchg scas stos cmp cld movsl popf (bad) push push push hlt frstor jge cmp (bad) into xchg mov ds adc adc sbb repnz cmp pop icebp loope in inc mov xchg aam adc jg and (bad) or cmp repnz jge sbb dec ss cld pop es pop mov out lods mov pushf std or loop daa rolb inc (bad) jno pushf rclb lret sub ja lea pop cmpsl fadds sub adc cmpl mov xor jecxz ss out pusha out shlb insb mov push test movsb adcl popa sub adc movsl test (bad) fdivrs jecxz mov shl push gs sbb sbb jl sahf js xchg or lods pop pop lods fidivr stos dec add push xchg lret mov enter xchg addl scas aas inc (bad) mov xchg inc ljmp shll xchg int int3 outsl cmp pop bound test jo sbb xchg push test hlt rclb clc fwait adc std xor push sbb jns sbbl mov cmp mov xor insl cmp xchg and jns (bad) incl and fwait inc xchg jg popa js push pop cld add jecxz add lret (bad) repz cmp xor sbb or stos push xchg and ficompl iret popf xchg xor je push mov imul sbb (bad) xor popa pop xchg outsl bound std imul mov jne dec cld pop dec adc xchg pop loopne (bad) stc push mov push lret int3 xchg and (bad) jbe sbb mov in ds jae xor jp gs call xor xchg fldt cmpb adc add cmp jmp sub addl mov dec sub es jne mov mov pop mov cmp in xchg fisubr and sbb pop mov sub cwtl mov push xchg das pop mov sub sbb outsb loopne or xorl rclb aaa sbb add adc lods outsb dec pop inc leave xchg sahf fistl sub (bad) mov aam and icebp fistl cltd xor mov push inc popa (bad) fxch lds sbb in orb cmp ret mov adc std iret sti lcall inc call mov test movsb int3 movsl sbb sub inc jle mov ret or clc fsubrl hlt push shrb imul hlt jnp lea lods inc jae cli lods cmpsl hlt xor xchg nop inc dec out das mov icebp ficomp fs sbb addr16 xor dec cmp sub jl fwait cmp cmc or mov ds insl sti adc mov cmpsb jne data16 sub cmp fcoml xor add es sti loopne arpl addb leave test aas dec xchg scas dec cmc xor lods add sub nop cmpsb push clc icebp test mov mov pop xor popa pop fsts (bad) leave mov adc jmp cmp push mov adc jg inc jmp inc mov aas sti lods dec sbb fiadd cmp data16 sub adc iret test jmp sbb mov dec mov loop pusha cmp scas fs ret pop push lcall sub enter aas stos pcmpeqw xchg adc daa cmp jne (bad) or popf fsubr bound cli scas loopne sub cld jne in fldenv ja jbe and (bad) std and sub pushf hlt and pop pop xchg cwtl cmp ja xlat mov cmp jno outsl inc lea adc rcll dec jb push aam mov and pop push scas or into rcrb jns mov dec and mov jmp ljmp test and mov fwait xor or int or mov jle popa push popf loop cmp int3 mov testl xchg mov lcall clc subl xchg adc adc xchg mov push les add (bad) jo pop call in or mov cld inc and push xlat in movsl es clc jle rcrb xchg nop repnz push adc int3 cmp lock psubw sbb pop xchg dec xor imul jbe and (bad) mov fdivl jg pop (bad) fwait dec cmp sub mov ret cltd or movsl push in cmp dec mov ljmp pop adc inc push push xchg bsr rorb and add enter dec mov je pop int3 out push xchg sbb (bad) jne stos lds push pop mov push mov fcmovu movsb fistl cwtl mov fwait jb mov cmp repnz push mov testl pop clc xor push sbb shrb push je ja and pop push cmpsb clc sub lds popa push movsb pop push fiaddl ss fs cmpsl outsl inc push or iret movsl mov ror pop les insb xor data16 jg out mov xchg dec cli mov into mov sbb xorl and lods and push fistp sahf pop lahf inc ret mov ljmp inc leave mov test (bad) xor andl adc mov negl mov mov jbe mov xchg test cwtl mov loopne inc xchg arpl mov push push sahf lods xabort cmp fsubrs mov jb hlt xor mov out subb lret leave lcall mov das lock mov mov outsb data16 (bad) je lret sbb dec repz xchg les sbb into sub push je add xor (bad) out cwtl mov mov cmp or xchg xchg pop and cld cli xor mov and adc aaa movsl add (bad) mov fs mov ror jno (bad) adc insl inc sbb arpl pop cmpsb jb lret mov in xor or nop ljmp in add fisubr cmp (bad) out stos ret jnp dec push in and add or outsb sti (bad) xor and jns mov js and sbbl mov and (bad) cs cmp pop pop rcll push in lahf dec das or cmp push stos mov add (bad) pop lret (bad) sbb adc jno push ds dec rorb daa lret push xorl movsl mov sub sbb mov (bad) call lock add pop (bad) or add dec (bad) stos bound xor insb mov jns sub cmp mov bound push sub xor sub notb (bad) and dec call repz fadd and mov sbb stmxcsr fsubrl xor cmp test pop ret daa mov add frstors insb lret cmpsl btc push xchg pop xchg push push pop xchg lret jo dec (bad) pop das xor aaa or sub mov sar pop pop adc sbb sub (bad) std loop xor cmp ljmp ficom dec ja xor (bad) and inc insb pop test lods mov stos pop pop stc cmp icebp in mov pop test push pop and lds pushf xchg or mov in outsb movsl mov outsl jp mov dec in popa adc and mov jmp inc xchg adc mov rorb and test das and mov push ss imul outsb aas ss jne jae hlt sbb dec scas jae (bad) fisttpl cmp sub pop xchg sti dec mov roll lahf push flds xchg push inc cmpsb rorb (bad) ficomp sub mov lret addr16 cs out push add into adc and sub jo xor fnstcw sahf add js cld aam mov (bad) inc inc fisttp rcll ret xlat and mov jle test js fld pop inc pop into jl fdivs cmp push paddd out dec dec loop rcr cmp insl push je ficoml jl pop sbb inc imul mov jl test lret loope jns ja sub nop pop scas dec inc xchg adc in (bad) into jp and dec sbb std outsb lods jecxz push mov sbb lcall pop sahf mov mov jecxz dec adc sbb or mov cmpsl pop add movsl lahf int lret pop (bad) movsb jnp dec pop mov adc dec (bad) incb cmpsl sub jo ret mov rclb and inc (bad) aad int3 imul (bad) jmp jecxz mov mov inc mov add pop and lock pop sub or lods xor and mov flds push dec jmp loop sub pop lods mov jge mov mov xchg xor dec imul sub inc movsl jl repz pop lea add or jmp cmp push pushf sarb and stc fnop adc gs jle dec add jns sarb jae sahf push inc xchg sahf or pop jmp lcall mulb ret dec jbe jo push pop xlat fnstcw int3 sub xchg imulb xchg push mov pop popa xchg push mov push push push shrb adc inc and adc cs jmp ljmp mov inc popa xor mov leave jmp cltd cmp (bad) mov ljmp loop or stos clc popf into or sub lahf push ja mov mov mov std push addl mov mov and js dec jnp sub fist pop rclb jl movsb inc cwtl int loopne jo mov mov pusha dec insl dec or stos (bad) lock test cmp or xor loope dec mov pop insb mov cmp mov jbe and adc clc outsl mov xor stos clc bound mov lds mov ss je fdiv ret adc add inc arpl popa repz cmp lods push cmpsl movsl imul cmpsb or pop mov add int testb ja adc mov fisubrl or int out mov shlb int3 in ljmp jnp lock push outsb xchg icebp (bad) cmpsl lret xor inc or sbb mov xchg out push or jb dec (bad) lock and or fldenv inc cmpb add rclb jg loopne shrl loop inc aad inc push jne dec mov into test mov ljmp rcrb pop mov dec xor in jae and insl sub pop divb or xlat gs cmp scas out pop add or or adc cmpsb outsb addr16 push out add xor mov cmp test (bad) imull sub mov es pop les sub sub pop sub jb jno leave dec jns fild (bad) data16 jae xchg xchg out mov mov fnstsw negb lds or adc push les pop cltd (bad) pop (bad) inc adc dec sbbl dec dec in sub nop adc sbb sti xchg inc jno push clc hlt cs or push popf xchg inc sub inc test cmp mov out cmpsb into in push loope pop mov jae xchg push dec adc lea jns (bad) mov and leave das std xlat jp test leave in jl scas stc adc fsubl cwtl and pop xchg add enter lods jne cltd enter pop inc sbb ret adcb push pop adc ss int3 inc jns mov mov testl mov jne add inc int3 mov test loop sbb lock mov rclb pop mov mov inc roll inc mov rcl nop mov jl xchg in xchg mov out adc (bad) xchg (bad) xor mov add lods jne fmuls testb push push in cltd (bad) ljmp ja sub out fwait adc pop cmp (bad) outsl xchg cmp xchg sbb (bad) jge jno in repz test popa sbb xchg pop inc adcb sbb lds mov dec or es aaa xor jmp dec dec nopl pop or sub pop jecxz mov aad repz out cld inc insb fs imul cmpsl dec ss sub push (bad) pop lret js icebp ljmp inc test scas cld ret sar mov push dec jb (bad) inc mov mov push inc icebp xor aaa sbb mov ljmp jbe movsb (bad) dec jo cmp sub mov push mov lahf push sub test dec inc push inc mov (bad) in xchg fsubr pop add je (bad) inc inc dec leave rcr fisubrl inc test nop nop mov and or sub ds shlb inc aad and and scas adc pop adc std and jo sbb mov add stos loope scas ss enter addr16 cmp lret dec mov lret lret scas cmp scas jae mov inc xchg add addr16 in and cmp jo cwtl xor test cmp inc aad mov mov or dec push (bad) adc sbb fsubr xchg scas xor lret cld rcl cld cmp mov iret pop ss testb jl push jge lea sarl xor (bad) xor push mov xchg sub sub sbb inc fmulp sbb push or sub and in and lea add mov lea xchg sbb mov cmp std mov ljmp jle add dec sub clc lds movsb scas sub sub out push lret fidivrl jl inc push mov inc jb adc test into sahf pushf psllq int3 push xor scas jmp or fist and shll or sub aas add mov mov mov out and lock or sub sbb or sub xor inc ljmp mov cli loopne cmp jae jbe insb adc mov out imul pop xor push imul jno mov push insl jle or mov sub add push dec jns xchg js cmp lods daa jmp sub repnz loop add int xchg lcall xor xchg in cli push lods or mov xchg (bad) mov movsb dec xchg mov jg les and insb insb cld sub notl aad sahf mov mov ja (bad) adc mov xchg cmp pop xorl in push imul es mov inc add push jns stos cmp fmul test cmp (bad) (bad) fistpll dec mov mov jl mov and cwtl stc dec das ret push inc rorl xchg mov mov xorl inc and sahf pop mov pop xchg push fbld into insl in mov mov sbb mov mov in mov xchg aas xor pop mov fisttp lret sbb xchg fs ror inc sub outsl lock (bad) or jp mov sub (bad) add (bad) mov je sbbb lcall orb loope fcmovu sbb add adc add push icebp push aad dec les sub cld pusha stos xor xchg pop icebp add dec mov mov enter lret repz sub xor jl jmp or cmp ret mov adc push outsb push inc repz lea dec and xchg out dec pop lcall in mov mov xchg in loop mov push outsl mov aas jnp test pop out fmull (bad) fnstsw push js xchg popa stos jae pushf les repnz ss es pusha int3 cld push or stos in or shr (bad) and dec cs mov push adc fdivrs ss and xor xor push rolb icebp sbb pop or add and xchg or pushf fnop mov mov add fbld insl mov insb jae (bad) mov mov sub mov push pusha outsl rol push in inc test popf scas adc out into push sub push or mov sahf ficomp xchg push les arpl mov jle push int fmuls dec test je cwtl imul sbb sbb fisubl pop adc mov mov fwait dec pop ljmp or push mov test dec int mov sub popa cmpsl ret jle insb inc push add and scas dec imul test pop fldt adc outsb fs lock das and mov xchg mov pop pop push add cmp xchg inc (bad) sub mov movsb pop pop cs xchg pop loopne sub cld add add imul repz pop cmpb mov cmp mov push cmpsb rcr dec pusha dec test pop lret push mov or xchg mov mov lret mov xor shlb xchg test dec sub xor adc adc adc push int mov cmp daa iret call sub mov nop sar push pusha loope push fldl ds or jae mov and or rorb fistpl divl pushf aas rcrl or push dec test and fs stos push inc or sub in mov pop mov adc std push roll loop dec imul adc lcall dec mov mov hlt nop pop arpl jmp push xor sub addl dec out lret ret push push xchg sbb add dec rcr aad mov mov lea sbb xchg jo push xchg popf push add lret fistpl call (bad) sbb (bad) xchg dec xchg icebp sub bound push mov mov jo mov (bad) daa pop xchg jmp fisubl shlb rorl movsb mov popf jg dec lahf (bad) xchg push (bad) gs and mov lock push sub xlat in scas std int sbb push inc int arpl and (bad) jno dec out sub cwtl enter enter inc lock iret fcoml adc inc in jbe mov ljmp push mov cs mov roll or mov repz xor add loope int dec push push mov mov inc lret xchg inc leave loopnew imul arpl adc mov shll xchg pop aas push inc sub hlt or in aad mov mov sub dec sub lock loop jnp push ficompl mov pop ds ljmp push mov scas add fsub aaa dec iret leave xchg mov leave mov lods jmp addb stc mov mov insl (bad) out (bad) (bad) fmul jle nop pop jle xchg cmc mov jmp lcall movsl mov jns cltd call cmp dec inc test (bad) int out lahf out repnz into aad lret xchg mov mov or xor cli jae fcomps movsb test adc mov repz clc pop sbb in mov dec add fwait incb push dec xchg mov pop incb lret divl cltd outsb sub lds popa cs inc mov cltd adc (bad) test mov ficoml push fdiv mov mov dec mov jecxz push or je mov arpl (bad) fstps adc adc cmc push movsl roll sub mov pop xchg xchg mov repz sbb add sarl test sub faddl aas xchg inc popa fwait sub daa (bad) sbb push adc pop adc push negl inc (bad) mov sub test into loop inc sbb sbb jl sbb rclb mov jno out aad push fsub cmp jg add test jae adc clc mov adc dec cmp shlb jl adc mov leave pushf in dec sbb (bad) mov stos jo rcl aad in and fidivrl in sahf ficoml sbb xor je lds mov icebp mov (bad) pop orl stos add push push adc mov xchg rcr gs xor push test cmp cltd sbb imul and js loopne shlb ds push dec mov iret data16 mov adc lods out mov cmc push or addl mov fwait dec xchg xchg js or pop das or xchg fimul gs adc es fsubrs movsb sub or scas cmp xchg xor lods ss lds std jle nop lock lock and and and and inc (bad) aad mov mov sub test loop mov mov and pop push jl mov pop leave lods mov jecxz mov out in (bad) enter inc pop scas sbb inc mov xor dec lods adc push xchg mov xchg repz pop mov ds add lahf mov call xor push adc pop or dec or (bad) adc xchg outsb scas add jge cmp and sti mov pop mov jns xchg mov in sub xchg aam lret mov fist push inc imulb scas push dec xor loopne or mov xchg lods (bad) mov pop imull mov (bad) cmp daa xchg xor inc les sti and hlt cmp aad mov or test cld xchg xor push int3 gs adc pusha aaa loope mov (bad) sub jp cmp insb push pop outsl aas scas call mov xor scas int jno scas cltd push or xor xchg cmpsb decl or cld sahf test inc inc sub pop arpl mov or nop xchg adc pop mov mull call mov xchg lcall xchg and arpl pop std jecxz imul dec sbb (bad) dec mov adc xchg sub ret popf lahf idiv mov into fnop jo mov stos cmc mov out sub adc jb movsb jle adc sbb sbb push dec or sbb adc jns ret mov push (bad) pop popf mov push sahf repnz addl iret lcall add or push and call je ja sarb cmpsl fwait inc adc js out loope ret out xor pop sbb dec outsl sub fbld js imul xchg mov into xor jmp les insl fdiv xchg (bad) gs inc push push cmpsl xchg pop and inc sbb mov enter mov add movsb js (bad) (bad) cli scas es sbb js jbe stos iret push imul inc dec jle pusha dec add push adc dec or scas pop mov lods jns ret std dec sbb aaa sub pop xor cmp cs out cmc dec lcall out loope inc lods mov outsb (bad) (bad) jmp inc jns pusha outsl mov inc and fs test es data16 leave add jle dec ss pop inc fldenv mov and mov jno inc sbb je lret lret jg movsb mov inc mov nop or jmp xchg sahf sbb ds dec jnp lret stc jns stc scas mov insb pop mov sbb insl daa icebp scas out test xchg imul pop dec in or ss mov divl in repz lahf gs (bad) data16 pop or xchg stos xchg (bad) mov (bad) (bad) sub xchg lret (bad) jp shrb je rorb loop jecxz aas icebp lock aam and leave repz fwait mov dec cmc xchg dec repz daa dec push cmp push mov pop push stos sahf and lods jg cmp mov mov mov mov dec in push push loop fcoml sbb sub xchg jecxz pushf push or mov fs (bad) mov dec cmpsl sbb into inc adc pop pushf dec adc cltd adc and mov push mov cmp add popa sub (bad) movsb inc adc fldenv and add xchg stos pandn pop mov dec mov mov imul lods jle or movaps cmpsb mov push in cmp inc jecxz icebp mov mov js in inc daa adc push out sub aaa sbb push addr16 (bad) mov mov cmp mov ret idivb js xor push icebp lea lret popa sbb or aam push pusha mov xchg lret sti fwait call and test push in in adc mov bound pop sub shll lret adc inc int3 insb incl ja in leave xor nop call pop cmp mov imul aam std test dec push dec and lock add xchg jbe addr16 or cmp loop repz push mov into std sub jns xchg cwtl (bad) xor mov hlt arpl inc mov cmc sbb sbb into bound mov inc outsb dec push mov xor adcl jo fnop cltd push (bad) mov insl ret jnp xor jg test jne addr16 adc call cmp dec dec notl movsb mov loopne dec (bad) pop inc inc xor add imul decl or int3 insb aas dec mov and outsl mov (bad) cld add iret andl and jne rolb jb push test lock popf inc movsb insb mov lock adc lods ljmp jp lods test rol or push push rorl sti outsl pop jnp xchg fs xchg jo pop rcll xchg adc pop je out gs mov or lret scas adc or sahf cs fisttpl jmp mov imul jmp mov inc jne lods xor data16 hlt mov pop mov scas jae (bad) loope ss cmp mov stc stc xor in and sti xchg push lret jmp sbb lock icebp enter pop pop aas hlt add xchg inc fidivrl movsl xor mov mov mov sbbl loop loope movsb or (bad) test or nop stos dec push sbb aad inc popa jb dec (bad) cmp push outsb sbb pop mov dec xlat xchg add aaa xor (bad) in icebp dec add arpl or aad outsb shrl jns divl push sti daa imul std inc cmp mov add mov mull aad cmp push loopne xorl xor sbb stc pop scas enter (bad) insl pushf ljmp pushf cmpsl sub std (bad) xchg xlat int adcb movsl inc inc (bad) cltd out movsl lds stos mov sub xchg out aaa or push add ja and and sub imul scas (bad) ret int3 fwait jae or mov enter fnstsw sbb pop add push lea or xor inc xor int3 cmp ret cmp mov push rcrb repnz les out or xlat mov xchg loope imul outsl repz (bad) icebp push dec ffree popa cmp aad loopne push repz (bad) mov sub loop fcmovnb outsl pusha repz inc insl or adc xchg and popa xchg and aam and movsb stc scas add dec imul hlt sub push lods push xor fsubl popl in add aad cwtl adc or mov pop (bad) mov movsb lcall iret scas mov je jp or outsl mov (bad) dec or fs movsb mov cltd scas sbbl cmp popa sbb inc mov mulb xchg adc pop jne jecxz cmp fisub mov sbb mov pop jb xor sarl lds ja aam cld leave xchg sbb push scas movsb jmp shrl and dec sbb lret cltd (bad) leave xor stc scas pop inc stos or mov iret das and sbb cmpsb push inc mov push inc add push pusha push jns dec stos sub bound push inc movsb in sbb xor icebp adc inc in push pushaw mov test orl xor js push sbb or sub push mov and inc mov jb push (bad) rorl cmp add pushf cwtl pushf shll int push sbbb adc popl (bad) push nop jbe xchg inc mov call mov push into fidivrl repz pop inc mov rcrl inc push inc popf mov in vcvtdq2pd lds pushf push jecxz cmpb fildll (bad) cmp inc repnz test jnp ret cmc push mov xchg jge jb movsl pop test inc arpl cwtl cmpsl jo rorl aas adc dec sbb inc cmp xor out lds daa add adc hlt shlb lcall jbe rclb and sbb in shrb sbb inc test push dec mov data16 cmp add pop adc les outsb movups push std inc and add and xchg cmpsl sub ror and sub mov inc sbb jns cld jecxz stos xchg sahf ds jns mov pop mov jge jg mov dec push add test imul dec sbb nop enter outsl sbb jne in dec mov pushf cmc ja leave or xor insb xchg adc push mov sahf and aad push jg js lods sub adcl (bad) xor or outsb lret cmc cmp adc adc and xchg hlt sbb repz push out push out xchg push je mov jnp test aaa movsl cmpl sub test dec mov in sti push in in les add pop std add or ja clc fucomp jg imul aas lea fldln2 test push xor cld add (bad) mov out ja mov sub dec lahf clc outsb mov (bad) jle lods mov fnstsw test rcrb scas jp sub sbb aad sub scas pop xor ret mov aas push lret adc mov jl sbb jmp mov std dec sahf ret add xchg enter test xor stc and push fiadd ret sub mov in scas jmp or push loop xchg fs dec xchg mov xchg inc js loope sub jne and stos and ret fs xor sarb loopne cmc sub stos jns xor jle jge sub jle ret lock fldl pop outsl arpl call add xchg mov xchg aad jo jg sub repnz pop sti mov sub mov test cmp jb jle mov rcr or jns or pop ror jne insl nop jecxz push jmp xor loope rolb (bad) loopne stos xchg scas (bad) es dec lret bound fidivl (bad) aad sub dec test gs mov fldl xlat ficoml sub mov pop cmc jmp in and push aad inc dec sbb mov repnz cwtl cmp mov out pop pop xchg mov in push pop mov sub popf xchg mov lods (bad) xchg popl lea nop inc mov aad (bad) enter imul cmp jae loop dec and jbe cmp (bad) (bad) push (bad) xor mov mov push into xor lods mov jae mov das mov popf scas cs loop stos stos fwait (bad) fadds addr16 xor loope xor stos dec mov (bad) mov jns aas jne aaa ret mov out or loopne push insb sbb mov test in mov cwtl or (bad) clc xchg imul nopl subb rcpps sub fsubs fsubrs jp inc fld testb scas sub sbb icebp push push and loop hlt xchg jo inc mov mov and addr16 movsb and xor divb dec inc xchg insb notb cwtl xchg adc adc sub fucomp test mov adc or xchg cmovl lock insl adc jbe mov leave add pop cmp pushf aam inc push jbe mov adc inc movsb add js lret rorb test cmp fnstsw mov cmp jne cmpsb std (bad) bound xchg aam (bad) mov sub jmp or or sbb or xor mov mov add and in add mov shr cli jmp pusha add mov iret mov int3 xor (bad) xor sbb repnz jl jmp jbe inc pop addr16 or sbbl xor mov fldenv push sahf dec (bad) incl cmpsl sub nop inc xchg cmp dec xchg mov sbb popa adc outsb add cmpb ja mov fcompl mov aad xchg cmp call adc movsl sbb jg pop mov lret xor std pop and xchg push jecxz mov lock add rcrl repz std hlt dec cmpsb shr into xor and std ljmp insb ds xor push mov xor xchg add mov lock out xchg test outsb sbb stos dec nop nop int imul mov cmp aam popl pop adc xlat fcomps mov inc and xchg fildl mov or mov ds (bad) push xchg sbb stc lds lret aad push mov cs ss xor jg mov in jle mov pop and es lcall test pop addr16 iret test out and or fcmovu sub lock push fxch lock nop push mov shlb mov gs (bad) enter pop xchg xchg dec ret pop iret ss (bad) cmc negl push (bad) sub adcl bound push pop sub jns inc data16 push adc repz push mov hlt sbb imul imul incb stos jns inc cmp jb ljmp mov loopne scas sbb xchg xor mov mov mov xor sbb leave adc and mov xor xchg fdivrl imul sub ficompl mov lret jp or cli iret xlat test pop cmp mov pop (bad) xchg lret cld insb cmp mov xchg push mov jge out mov iret pop pusha call inc jle std mov add aam sbb ret jl and pop xor in (bad) data16 inc test je shll mov pop sbbl js (bad) loop push add sahf inc mov dec lods sub addr16 cmp adc dec bound imul pop in mov mov xchg and cli mov or (bad) xor in lods outsb (bad) push fmuls add movsb dec jle in sbb (bad) mov test sbb add lret sbb aas push adc push lea fldenv mov sbb sbb dec lcall dec test pop sbb stos mov push popa andl cmpsl pop call xor scas fldl mov push sbb popf fidivrl mov xchg ljmp mov pusha roll ljmp out insb ficoml cmp jecxz sub jae loop mov in ds ret loope in outsb cmp pop xchg sbb cli mov push sbb dec mov add cmp sub pop pushf cmp inc pop mov xchg inc xchg sbb jb out out sti bound aas cmp and or shll jb pop faddl dec sub and jp lahf fldenv mov dec cmp insl outsl add jl cmp aas mov sbb add std pop mov (bad) icebp sub fcmovnb inc (bad) icebp cltd and adc cmp xlat mov jge pop cmp lcall js scas push inc ljmp jne push repz icebp mov pop movsb loop jl dec pusha mov fldl (bad) hlt stos xor (bad) ljmp mov inc xchg (bad) sbb xchg mov imul inc push jnp hlt mov sbb mov insl pop sub popf (bad) movsb cmp fnstsw in sub mov dec pop add mov sbb pusha xor ja mov out cmpsb mov fidiv (bad) mov xchg les popa mov add cmpsl pusha lahf aas pop pusha subb mov add inc push push xlat test pop cli (bad) xor inc and (bad) jae xchg mov (bad) jb push hlt fs cmpsl lcall sub sub pop ja popa ja cld jne lock pop into leave fiaddl aaa imul fisttp cmp pusha aam inc mov movb cmp gs push and or mov stos mov push mov dec movsl (bad) jbe jb add xor mov mov and ret addl clc jecxz pushf dec mov into out push pop clc gs cmp adc ss pop or cmp adc ficom iret rcr das dec imul imul push add pop push and sbb dec pop jecxz icebp pop cmp add jecxz (bad) jmp inc jp popf xchg rorl jle mov jbe xor in das and into stos cld fcmovne pop push scas inc cmc lods scas add dec scas cmp xor mov mov mov inc xchg xor mov test sub xor mov fdivr or nop test orl sbb (bad) lret sub mov enter lods inc sbb add xchg rorl pop mov mov lahf (bad) int mov shlb inc rorl leave push mov push fistp cmc arpl subl daa xchg pop bound pop out (bad) fldcw adc lret int3 pop movsb ja bound nop out lock lods cmpsb jge subl pop mov outsl dec adc inc cmp movsl or xchg dec ljmp into mov (bad) jbe cmp addl inc or (bad) sti xor inc sub outsb xor dec iret cmp popf pop in pop adc hlt pop xor outsl popa (bad) mov popa pushf rolb iret dec leave pop daa or add imul fstpl icebp fstl push js and xor jg or out mov cmp cmpsl mov pop leave ret loope clc cli sub pop mov fildll lods out lods mov xchg xor dec xor cmc cmp xor inc cli scas int3 push jb icebp pop add or insb pop notl (bad) push pusha pop fcomip cld add dec movsl aad inc jg push clc dec fadds xor push add sub xor nop out or in stos mov cli sahf and in pusha or mov aaa dec das cli mov pushf in into (bad) int3 sub or loope xchg mov das jg jo mov mov jb inc je push lea cmp (bad) lret jns hlt adc data16 enter mov xor shrl fcmovu xor movsb xchg andb mov xorb push xchg aaa out fisttpll jmp xor push jg mov loopne call iret lock dec sub jle xchg jne ret push and data16 xor out ja adc adc push mov fisttp jnp out xchg sar test pop jecxz popa dec lahf pop les insb lcall jl movsb lret mov (bad) popa std mov push das jbe (bad) dec push pop (bad) test sbb pop pop popa subb push xor jge stos xor jb cmpsl mov dec sub sub clc nop xor cwtl xlat pop pop pusha xchg je jnp test sbb xor rcrb jl or push and lds push pop call aas int xor lods repz pop test shll sbb pushf push push mov mov fiadd and and ja sahf data16 shll add leave mov sub call fs lret loope in dec inc sarb clc imul push aaa jecxz and ljmp and imul ss mov sbb mov jge sahf in ds dec xchg addr16 adc cld sub js xchg fsubrl jb jne,pt jg xchg mov inc mov xlat (bad) push pop xchg mov loopne add icebp mov and cwtl push mov inc pusha and pand mov xchg in sbb xor faddp imul jmp adc mov (bad) xchg stc xor and stc or xor arpl fnstsw fmulp roll push sbb pop xor jns push pop xor adc (bad) sbb mov iret add das inc mov (bad) (bad) mov imul fimul imul pop outsb mov mov sbb jg push aas or cmp xor notl cmp cmp mov mov jae lock ficoml push or ja cmp push or in or mov push xlat pop das out xor or add inc or mov jo fist enter inc xchg add outsl pop mov adc inc std lea jns lds and aad push ss jae xor xor (bad) les cwtl mov push and push inc inc pusha dec outsl rorl loopne or imul test mov mov mov popa fwait ljmp mov ljmp lock daa or add scas icebp enter mov push icebp (bad) mov adc mov ret out mov cs nop jnp cltd jnp adc xor xchg pop loope mov stos xor imul ret repz jae jecxz mov lock test or mov xor sub and inc les sahf jmp dec mov xor andl push or dec scas cmp call pop (bad) repnz andb neg sub icebp faddl or push dec jp insb inc rclb shll jae fdivp sub (bad) (bad) in lds cmp dec shrl rcr sub pop mov xchg mov pop jae pop imul pusha ffree mov cld xchg xor mov std fcomps loop int aaa incb std mov dec and ljmp pop (bad) xor in mov (bad) xor inc andl (bad) and xchg or shrl sbb pop mov call cmp cmp stc dec bound cltd xchg (bad) aam setns imulb gs push inc scas xchg push cmp rep jae fstpt repz pusha mov scas jg imul add xor hlt sbb lret jb adc inc das mov adc repz mov movzbl jno sar inc sub sti cmp test loopne test inc addps test pop and (bad) lock and jge and fstpl bound pop testb sub inc mov cmp xor push outsl test jle loope lock inc or pxor jg adc daa or cmc cmc jp pop mov imull xor jecxz xchg mov sahf dec xchg or ds jmp punpckhdq push cltd rsqrtps lahf fidivrl repnz mov pop or pop adc arpl popa not test out or (bad) push aam add mov in stc mov insl mov cmp arpl mov fistp imul jbe push adc xor sti les ret cmp lea inc andb dec mov lahf add shlb jle gs cmp mov stos mov int sbb andl xchg add jl mov (bad) insl push push push sbb xchg cmp mov into sub lahf dec addl push or sarb inc in xor push adc or cwtl in jecxz sub mov pop out dec cwtl mov popa (bad) dec mov jnp mov pop push sahf xchg jne outsl inc addl mov imul psubw sbb addr16 fisttpll inc insl fmul sarb (bad) hlt push inc xchg subl mov pop and aas add std hlt mov inc inc push push push jmp jbe mov (bad) lcall popa pop mov add jmp cld cmp push lds shll mov scas test xlat pusha insb push outsb in mov ss out mov lods shrl pop push out mov cmpsl lds sbb test nop adc push mov popf jne dec rcll cmc rclb mov repnz pop mov pop (bad) fistpl iret add sbbl loopne (bad) sub pop call fimul in fdivrl outsb dec out cmp sbbl xlat adc push lock hlt push mov mov ljmp cli mov inc jb push imul lods xor inc push dec inc add add add add or add jbe xor xor add add add add add jle add add add add add push je imul add push add clc add add push push add or add add add inc push dec inc add add or add add add inc insb outsl bound add add add inc push add or add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add xchg add add add add add add addl add add adc xchg add add add add add xchg add add and add add add add add add xchg add add add add add add add and add add add add add add xchg sub test or add add cmp add add add jae add add addl add add add add add add add add add add add add add add add add add add add add add add add sub test adc xor mov adc push add add add add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add lret add add jg pushf add adc add add add add and add add add add add sub add add inc add add in test mov in mov arpl imul insl outsb je insl jae outsl jb imul gs cs imul inc outsl jb jae insb js xor push dec ja dec inc insb outsb xor imul pop pop imul ss jns imul jne arpl add mov in movsb in mov mov xchg in and scas in mov in fwait in stos in popf in test mov mov mov in mov dec bound arpl jns je insl add add je outsl fs outsb outsw add jae gs cs gs arpl outsb add je jns add je gs outsl fs dec gs bound dec outsb outsw add je dec popa insl add jb outsb add pop inc jno popa insb imul outsl fs popa jae add jbe imul mov in mov mov add mov in mov mov add mov in and (bad) in test xor add mov in xchg mov add mov in popf in mov in mov mov in mov dec imul jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insl insl gs imul imul je insl cs arpl imul je addr16 jo jns dec inc jb jo outsl push jb outsb jae outsl jb add jae insl bound inc js gs imul outsl jb inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je inc jae gs bound inc fs popa outsb add outsb jne gs bound xor push imul dec popa outsb popa gs je dec gs jae je dec push add gs je inc arpl jo outsl jb push outsl inc jb popa jns addr16 inc outsb je jns outsl imul pop dec gs popa add jae popa addr16 outsl js push push imul jae insb je in test mov in mov in mov mov in mov in xchg in mov mov add mov in cwtl in mov mov je push imul pop dec outsl ja inc fs imul outsb fs outsl jo dec gs push push mov in mov mov mov mov in mov jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul jns jae je add add add outsl add jb arpl add add add outsl add jb arpl add popa add popa add add add inc add je dec add push add je add add jae je add add add jne jb imul add jb jns jo je outsl add jb popa add push add inc add jns jo je outsl add add outsb add data16 jb insl add daa push add popa add jae data16 jb insl add imul insb add insb add arpl imul dec insb add js xor push push add ja insl add inc add add jns imul xor inc add add push add pop add inc add dec add xor add dec add dec add add aaa add add add outsl add add cmp jno imul add push add cmp pop add xor push add inc add inc add dec add jno inc add aaa add add inc add add jae jo inc add js inc add add arpl arpl jbe jno inc add xor cmp jbe imul add inc add jne add dec add push add add jae je add add add insb add arpl je imul add jae jae add bound insb add add dec add popa add add cmpsb fisttp mov pop jo add mov pop push sbb mov pop pop adc sbb sbb adc add adc push add or add push push and sbb sbb sbb push adc pop adc sbb sbb or pop add sbb and adc adc sbb adc adc adc or and add push add adc adc add add xor and add adc add add add add sub adc add add or dec push add push adc pop adc sbb adc sbb sbb add adc sbb adc dec add add dec add or adc dec add add or add or add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add add add push cmp add pop add and add pop add add outsl jb js dec popa imul jb gs insb add add add and 