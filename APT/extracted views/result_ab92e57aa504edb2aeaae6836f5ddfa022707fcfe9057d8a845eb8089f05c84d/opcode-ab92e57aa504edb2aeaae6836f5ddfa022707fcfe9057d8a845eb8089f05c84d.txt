xchg pcmpgtd push xor data16 or imul or data16 or data16 lahf or pushw add data16 xchg pcmpgtd bound data16 or xchg xchg push data16 pcmpgtd or xchg pcmpgtd inc push mov pcmpgtd and adc lretw push push sub data16 pcmpgtd add dec insb push data16 add test data16 or retw data16 in out push pop (bad) or adc push scas lahf or data16 add addl inc add add add add add mov mov loope adc push inc add loopne aaa mov or test xor add add add add add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add in jne (bad) xor sub sti push mov add add add add add add popa outsb fs fs addr16 push je inc add add add int3 xor add sub clc repz sub sub mov iret inc out dec mov icebp iret dec cmp xor or stos add xchg mov add add or bound insl gs gs or popa jbe imul outsb add add inc add add bound insb outsl addr16 add add add hlt add add add add add add addb add add jo outsl jne add or inc gs outsl jne add push add add pop pop or push adc add add add addb add add jo outsl jne xor add or inc gs outsl jne xor add js pop or push adc add add add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and sbb inc add add add add add adc push inc xor add or or add sbb adc xor add (bad) decl add add add add add add inc add adc js add jle add mov add mov add inc push inc jb jns popa je xor add fs fs addr16 push je add add add add add add add (bad) (bad) incl add add and inc inc inc add add add lea rclb add add add and add add add adc add add add adc add add add adc add add add adc add add add adc inc add add add inc add and add pop add add nop and (bad) (bad) (bad) incl adc mov mov (bad) (bad) incl add add adc add inc add adc or inc add adc add add jl inc add add add add (bad) (bad) incl add add inc inc add add add sbb add add add inc add add add add add inc add add add inc add add add push inc add add add inc add add add inc add inc inc add add add mov add and add pop add add nop and (bad) (bad) (bad) incl add add add add inc add mov mov (bad) (bad) incl add add inc add inc add adc push adc add add jl inc add add add inc add (bad) (bad) incl add add inc add add add add sbb add dec pop inc add add add inc add add add inc add add add inc add add add add add add inc add add add inc add dec inc add add add inc add inc add pop add add nop and (bad) (bad) (bad) incl add add add add inc add mov mov (bad) (bad) incl add add inc add push inc add adc or inc add adc add add jl inc add add add (bad) incl add add and sub inc add add add lea test inc add add add add test inc add add add add mov inc add add add mov push sbb lock inc add add add mov add and fsubl inc add pop add add nop and (bad) (bad) (bad) incl add add add add mov mov (bad) (bad) incl add add inc add adc or inc add adc push add add sub clc repz sub sub mov add add add add add add insb adc dec add add add sub scas dec lahf jns ljmp add add add daa or add add int3 es add add lcall dec mov xor xor add add add add add add inc add add add add es sub dec test mov and add add add mov add add add pop and add push add add push adc xchg jle repnz add add add mov add add add add add add add add add xor add or add adc add add add add add add add add add das inc add (bad) (bad) incl add add pop inc add inc inc add add add xlat popl mov add pusha and add add mov add xchg sbb add nop sbb add xchg sbb mov push push inc add pusha inc add add add adc add add add add nop and (bad) (bad) (bad) incl add add add add inc add mov mov (bad) (bad) incl adc cmp add and inc add add add push mov xor inc add add add adc cmp add and inc add add add inc add and add add push pop inc add add add inc add adc or inc add adc insl pop inc add inc add inc add adc or inc add adc in inc add inc add adc push adc subl jmp subl jmp add add add mov add inc add (bad) (bad) incl add add add sbb inc movsb scas mov push lods mov add add add add pop inc add and or add add add add add add add (bad) decl add inc add add add and (bad) incl add add add inc add (bad) (bad) (bad) in and sbb inc add add add lea (bad) incl add add add inc add (bad) (bad) (bad) in and and inc add add add sbb add addl add push inc add (bad) (bad) (bad) in and xor inc add add add lea (bad) incl add add add (bad) (bad) in and cmp inc add add add incl add add add (bad) (bad) call and add add and inc add add add add add add add add incl add addb add add imul sub add fs fs addr16 push je add bound insl gs gs add push popa addr16 gs add add jb gs jns add add imul insb jae dec gs imul jne push add popf sbb inc out dec mov icebp iret dec xor sub adc mov clc repz sub sub mov and adc mov cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add test inc add add add add add add add and aam inc add dec lods xor or stos add xchg inc gs outsl jne add add jo outsl jne xor add add add dec add add add add jae popa add add jb imul xor add and push add xor and push add xor add add js inc add add add lods xor or stos add xchg adc add dec add outsb add bound push insb add add add add or or push inc inc ss dec dec add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add inc add inc inc add jbe popa push je inc insl jo pop pop jbe popa inc imul add pop pop jbe popa dec outsb push je inc add jbe popa push je dec outsl jbe add add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs bound add add jbe popa dec bound gs adc push mov (bad) fs xor shrl inc add scas aam mov jmp sub scas dec lahf jns ljmp jnp (bad) push call scas fisub lods or inc add mov add int push js into dec jp adc and push lods mov fxch jns ljmp xor xor mov aam sub sub dec test xor add xchg out popa mov xchg data16 sbb ret aas inc imul or mov insb sub dec test mov and pop out pop cmpb gs cmp popa faddl sub mov hlt (bad) jo inc femms or in inc mov (bad) fistpl adc adc xchg jle repnz add stc adc mov inc out sub add inc adc adc xchg jle repnz add popa faddl sub mov hlt (bad) jo cmp xor or stos add xchg dec add add add pop add jb imul je insb insb popa jbe sbb add and (bad) (bad) jmp add insb popa jbe xor add add fmuls add movb add add add add int3 xor add insb sub dec test mov and add xchg data16 sbb ret dec lods xor or stos add xchg pop add add add add add imul insb jae or jbe jb outsb fs imul add and (bad) (bad) jmp add gs outsb fs imul or add inc add incl add int3 xor add int dec mov xor xor mov add int push js into cmp xor or stos add xchg pop add add add add add jb gs jns or popa jb popa imul outsl jae imul add and (bad) (bad) jmp add jb popa imul outsl jae imul add add add add add in add inc add incl dec xor add mov scas dec lahf jns ljmp push mov (bad) fs xor shrl iretw adc pusha rcll into pop add leave pop add add add addr16 gs add popa jae popa aaa add add inc add jle add insb je add add call pop add add add add add add add add add add add add add add jle pop add cmp data16 fisttp outsl mov push stc fdivrs out repnz pop das mov inc sub arpl jbe loopew mov inc xchg cmp xor dec aam push rcr out arpl dec sub imul jo (bad) loop xor je movsb dec or mov subl sbb sub mov pop jp dec xchg push xchg mov into std rol xor aas mov mov add cmp xlat mov ja enter outsb mov add in sahf mov aaa test fisttpl shrb pop nop add cmp data16 fisttp fdivrp cs add push shrb out loope mov fist aam inc sbb aad dec lock pop sbb lcall inc repnz push xor and pop mov dec push cld mov inc repnz xchg pop ret jmp into mov mov ja ret cmp lcall aam mov mov stos adc lods std std mov push rolb adc adc aad xchg push insb xlat iret call nop int cmp cmp int or xchg lahf sahf loope nop push movl lcall dec aad mov test jns add sbb jne ja mov sahf insb adc dec out ret test add add add sbb xchg inc (bad) mov and das divb xor cli mov sbb pushf mov and adc cs insb pop dec popf ja mov fildl push sbb out pop mov (bad) (bad) adc fstps or adc pop out inc cmp sub je xchg push add (bad) xor or mov sti mov pop (bad) fistp hlt nop dec in outsl inc in fwait xor clc les mov adc std jge dec or xchg mov add fdivs aam sarb cmp cmp icebp adc sub and dec jo and mov ja dec mov pop xchg lods fucomp dec jp mov (bad) jo dec inc incl jp lret ficomp and mov mov (bad) mov pop sarb or push jae push mov jbe push jecxz pusha lods sub in cmp dec aas push in lcall push cli pop inc addr16 mov fnstcw ror xlat daa push push mov add les mov cmp xor (bad) or add add rcrl cwtl mov insl fcompl dec int jle fistpll mov test ds mov pop mov and enter call in sbb push movsb fs xchg push cmpsl divb push jg add push fcomp clc idivb mov insb (bad) fsubrs dec inc imul jne add ficomp (bad) or cli sub ffree push in addr16 jg fistp xlat leave pop (bad) mov ficompl push xlat repz adc cld lock fwait xchg inc sbb xchg xor add add add jl repz rcll inc js lret outsl jbe dec cld jmp mov jae push inc fsts inc jnp das inc adc cli push cmp bound mov xor sarl fistpll inc inc pop pusha cmc in insl or pop adc pop aaa lret cli sub mov inc cmc pop jns popf outsl ds pop mov aad push jmp js xchg scas sbb subb xor cmp sahf ja mov dec int mov add mov push cltd stc loope stc in or ret fwait add add add sub push fwait xchg rorl lods add leave jae mov stos bswap js inc mov rcll xchg adc nop pop push add sbb jge sbb push mov or pop fistpll xor push jle jo add add or mov sub pop mull jne or (bad) mov and jp mov cltd lahf stc leave ja pop cmp add dec sti cli fs pusha xchg fisttpll xor adc sub jg and jno dec mov push add add add push sbb ljmp adc in repnz pop aam mov ret jns sub cmp xor dec xchg mov cmp inc xchg jecxz shrl xor int sub stc push inc cmp cmc jbe aas xor fldcw out sub push mov ss sbb lods cmp cmp ret cmpsl xorl icebp jg xor sbb pop push pop in (bad) movsb ss ds stos in mov lret std mov mov xchg or imull inc push stos cwtl pop mov push cmp test popf aam or les ficoml addr16 dec push push xchg jno and jns cld inc pop mov inc neg or pop add les lds adc fcomp cmpsb andl not jb nop dec pop in push adc test pop imul jge sub pop sarb insb mov iret sbb pop pop aam ret sub ljmpw inc out and sub push push stc cld cmp enter xchg and imul xchg sub mov into pop lods dec ja push mov das les pop ss mov add in (bad) sbb mov mov call sbb insb inc or lds or sahf push ret jne rorl mov mov xchg fbld cmp xlat push sub iret xchg sbb inc call loopne sti pop loopne sbb xor inc mov arpl mov mov sub in xor inc adc sbb mov fisttpl mov jbe (bad) dec xchg adc pushl xlat enter or rcll (bad) or ja cmc dec mov repnz pop dec ss ss sarb loop pop popa jb or insl add mulb xchg mov xor cmp lea sub push cmp mov lret aad inc (bad) xor jecxz inc adc nop add cmp leave or push sub jae add scas idivl mov gs negb iret lds adc rolb scas inc add daa out stos pop dec lahf jle jmp xor push mov scas jle push and shlb jae fcmovnbe pusha adc pop push push xchg jns mov add add add push in fidivl aad jno cltd cs dec mov xchg imul ret sub xlat call cmp popa mov push dec and leave pop sub push jbe les inc sti lods mov mov push cli icebp mov js inc cmpsb adc icebp adc push aam insl jnp aaa fimul push mov in inc nop inc lea cmpsl push (bad) mov loope gs movsb pop xchg data16 mov xor fwait pop sbb popf push jb xchg decl sub subl xor xchg push push push add add data16 cmpl xchg iret lahf jl les xchg (bad) pop xor pushf ljmp mov fstpl pop jl stos es gs push jge jne mov (bad) js xorps add call mov mov aas mov loopne and movsb and inc scas sbb mov aam int3 mov and add xchg aad repz loop pop fcmovnb daa sarb mov outsb js sbb scas iret pop sbb dec (bad) std xchg xor out loopne stc and add out jmp popf xchg xchg push xchg mov mov stos (bad) aaa ljmp and mov bound add adc push cmp jp pop in cli and sahf mov jbe inc icebp mov movsl mov jb pushf sbb outsb dec inc fwait xor dec pushf icebp sbb mov mov sub cwtl scas sub push lea mov xor inc (bad) cmpsb sbb adc (bad) aas ret fcomps mov call push or pop cmp sub inc push xchg pop dec fs xor add xor jl test xchg pop sub xor jbe fistl pop xor cltd push cmp ret xchg cli adc int3 dec mov add xor adc (bad) in xchg pushf mov in jl (bad) int inc in cmp lds notl and and dec jb cmp jae loopne scas movsl mov adc and cmp lods hlt pop shr inc and bnd pop loope (bad) out jmp jge pop fcmove or jp (bad) bswap mov cltd mov cmpsb popa aaa ljmp add add push push sbb lea adc pop pop sub daa and sub sub mov push mov pushf push (bad) aad hlt dec push xlat adc iret in jbe sub adc pop fs add pop mov pop cmc ja mov pop outsb xchg rcrb je sub dec add mov (bad) mov test rcll xchg test test add outsb sarb stos pop loop or ficoml push lods cltd (bad) in es lods jns lcall mov xchg mov adc adc les cli int aas and outsb mov out (bad) and movsb and idivb sbb fwait jne (bad) xchg cli repnz ret adc sbb repz jb fldenv out cmpsb jmp stos or and testl mov and inc xchg xchg and dec popf out fisubl (bad) icebp and xor fimull outsl push jb fcmovne ljmp test pusha mov xor out hlt jnp mov add jle adc popl push call mov mov fiaddl push pop rcr aam pop push daa pop xor fnstenv outsb mov add add add ret or addr16 cld xchg jl xor push sbbl jp shr xor fcmovnbe sti or repz lea push imul movsl push push mulb sbb and shll jle cmc pushf (bad) inc iret xor rorl insb lahf repz inc or mov sbb je cmp xor aad (bad) pop push leave mov add ret and (bad) jb mov sti mov mov pop int3 hlt dec or inc loopne je xchg stos add and and sbb adc jae std jo (bad) push test xor xchg and int mov jns pop stos mov pop mov cmp iret adc mov pop repnz jae rclb popf (bad) out out xlat sbb sub sub xchg jl dec loope insl nop (bad) fist push test andl inc sbb das jo aam sub test xchg push jb subb out loopne push test mull adc sbb cmp and rcrl mov dec fdivr hlt mov sbb add add xchg fucomi push inc mov les out repz aam cmp cmp jmp in add test push sahf movsb mov lea fdivs stos add cmpsl fucomp test and sub mov jle pop popa dec in (bad) into scas xchg popa push shrl xlat jge lds sahf ret sbb xlat lock mov inc jnp jne pop loop add mov xchg call in push lods push xor push (bad) xor fsts daa inc sub add scas aam xchg outsb nop (bad) pop dec test ret pop scas aaa mov add add add mov in rcr cwtl ja in cmp in mov sub add aas mov fmuls outsb movsl xchg shll push lock pop cmp sti fdivrl pop popa stc xchg movsl jmp dec adc adc int3 push dec mov popf pop lods div mov push je sbb xchg cmp fist fidivl pop shll xor or cwtl jp nop and mov dec adc fmuls rcr aas lcall pop lret shl test shrb cmp cmp pop sbb xor mov sti add add add add push adc fdiv pop ds xor aaa push adc inc mov pop push adcl xchg add add push std xchg add and sbb iret xor xorb push loopne jno adc call and shl and jb or sbb rorb in fadd cmp out mov ljmp int lret fldt add and cmp push ja jg jne or pop out in sbb push pop push lahf inc or mov push scas add pop stos jo (bad) movsb js push clc cmp inc xor xor dec ja jbe out pop xor rorb fdiv in lods jo and adc xor sbb ds in jmp rcl pop sbb adc (bad) enter pushf sti sub jecxz repnz sub jbe xchg dec subl mov xor sub es ja dec (bad) mov jg sub pop cs cmp scas and jno lock cmp std xor fldt jmp add add movsl push inc sub inc push xor cmp cmp mov adc pop dec jl dec sub fsub xchg jge ja mov pop jl inc adc jp (bad) repz mov cmc fmulp loop nop jg es rcll notl (bad) lods sbb scas inc pxor js lods mov mov xchg test mov es mov fbld addl mov adc mov mov xor sarb inc inc mov (bad) je jp xor (bad) cld scas icebp cmp add add add add or push xchg das cld xlat cmpsl lcall (bad) jo inc mov call (bad) repnz add js cmp pop icebp sbb or loope data16 pop pop pop pop xor push jbe mov jecxz movsl push sbb adcb scas mov inc inc xor sbb mov aas bound dec xchg and push arpl push and into cmp xor jbe sarl cmp lahf dec jo jl mov cmp mov pop ds sahf icebp aaa xor add add add add shll pop cmp dec pusha bound jns outsb test inc jg pop stos stos adc sbb stos sub xlat sbb add cwtl pop adc les push lret adc aas or pop and mov xchg popf sbb (bad) inc es je dec lret jge call test add cld jecxz,pt dec (bad) and sbb insb aas lods flds adc insl fdivp mov outsb and xchg dec mov mov inc push xchg jle sub je cmpsl aam xchg push iret jae lea bound add cmpsl push pop fiadd mov movsl xorb psubsb mov mov lcall mov inc jbe ret lret cld je mov adc sub test ret ficom jl jmp sub cwtl and mov sbb loope sub inc xor jmp jle mov jae push push fbld push mov loope jmp and push gs mov stc jbe mov dec mov cli and cmp mov add add add shll dec dec xchg jle popf loop bound cmp pop in inc sbbb sbb add push repz xor mov or sub mov jne ss cwtl push rcrb std test popf xlat pop es xchg push or cltd xor mov rclb cmp mov or mov out hlt imul mov mov out mov stos adc jb aaa or paddusb dec or dec fwait insb in pop mov fcoms cmp cld je xchg and cmpsb pop xchg ja push push add add mov je jae cmp stc pop nop (bad) cmc mov loop xchg jmp fwait pop pop xchg push les outsl push (bad) insb fadd dec mov sahf aam shrl jbe mov adcb inc imul fwait test push jb in subb jnp dec xchg nop insl push sbb jle xchg xorl cmp pop mov adcl xor jp jmp ja sbb pushf push or sbb mov das aad mov sbb aas lret sti movsb sbb dec add add add add add or es and cmc jb iret dec aaa push and fistpl subb mov fnstsw push push mov xchg mov xor push popa push ds fwait ds (bad) cli push adc cmp mov add mov clc out sub cmpsl jle cmc fdivrl adcl xchg lcall inc pusha mov aam cld cmp or xor (bad) das popf sbb adc push out jae and ret dec sbb stos jp data16 sub addr16 sbb add jecxz cmpsl jl and (bad) push add add call sub call mov decl mov push jne push dec cmpb add cmc push sub push js cmpsl mov iret movsl clc cld xor nop jmp into testb xor mov mov pxor div adc popa mov sub jg and lret add mov jl into push mov fdivl stos neg scas inc imul (bad) lcall sbb hlt and adc les push in hlt inc rcll sub aas xchg mov dec adc xchg xchg add add add push repz mov pop sub xchg jmp idiv jo sub mov std test outsl xchg movsl mov test mov mov cwtl test ljmp xchg popa (bad) cmp iret xor push and sub and mov aaa rcrl push and iret rcl jns inc xor mov mov fisubr dec ret cltd sub xor in loop add push arpl shr scas push repz cltd ljmp cmpsb stos cmp jne dec outsb (bad) xchg movsb popa test add add fisttpl jmp mov push jns cmc sub inc push jmp jp leave repnz bound xlat push pop aad mov cmpsb jb pusha or negl or xor push and mov test pop push xor xchg (bad) dec sti xchg mov int adc mov mov inc push add movsb andb dec sub jg inc fcomps rorb dec jns ja cmp scas and or stos cmp push pop lahf dec cltd dec out mov jg call cltd adc adc jno add mov sbb stos pop sub add add cmp adc adc push inc cli push cmpsb sbb mov push movsb out (bad) adc fs dec ret cld dec mov fldcw scas mov lret (bad) icebp push aas jnp daa stc (bad) xchg fwait aad lea lret mov jbe and xchg dec adc mov or jo (bad) and lret xor pop pop xchg inc js shrb (bad) loop call test stos push insl stc add cwtl and cmc ficomp jo ret in and dec arpl add arpl or rol shr add add add add iret cltd pop add pop sub dec jbe pop fsub lahf scas mov or iret sub add notb push push scas push sub js mov jl repnz lea les (bad) lcall int ret adc lret inc std dec mov inc add repnz cmpsb adc imul in xchg shrl pop jecxz ljmp xchg clc push mov xchg sbb aam out iret mov nop js lods sbb shrl clc ss fs add add add jp cmp cli or mov mov push imul jo push bound test xchg mov mov dec inc icebp xchg lret stos push push inc xor mov sbb icebp fdivs adc in jnp aam scas pop xor adcb and or sahf xchg add in sub pusha inc cmp and mov push in mov inc jbe pushf faddl mov sbb mov popa lahf insb and bnd insb push push mov sar mov stos test ficoml add mov add add add add aas lea mov test adc or xor xor mov cwtl xchg lds (bad) scas push repz cs jbe scas push pop pop sub pop (bad) imul xor fcmovne jmp mov js pushf sub xor (bad) pop in xor daa fbstp push jns jmp mov mov jmp in xchg jb xor xchg rorl sub int3 incb cs xchg xchg xor mov ficom sub mov lcall mov lahf aas stos add add add and insb mov or jne sub sub enter (bad) jae push std shr leave gs ficoml jae xchg or frstor push je push ret ret (bad) mov dec pop test pop and or insl xor mov dec loop mov lds or pop add jg enter mul (bad) xchg mov je cmc dec or movsl and jae adc aad cli or imul lret (bad) iret fiadd orl add add add fmuls sub jge in stc imul fldl imull shlb add or enter int3 ljmp test xor rcrb pop push imul out enter pop push sub dec dec mov add or cmp pop mov imulb push sbb enter (bad) pushl jbe add xor cld daa mov std outsl dec mov fs movsb mov inc (bad) int push scas mov adc or xor mov add add add and sar das outsl dec mov push jbe xor lock mov push out sub adc or cmpsb mov sub loope sbb pop xchg fidiv (bad) mov cld mov push inc jge adc cmc push inc lahf dec push lods add cmc out (bad) jne adc mov xchg mov sbbl lcall add dec addb ljmp add fdivrl mov cmp mov lods xchg jns sbb jns add add add rep fcomps sbb in jle out push push sub shr dec mov mov stc cmp mov or inc mov fcmovnu insb mov or and leave pop repz addr16 mov mov xor nop cmp insl xchg ds xchg sub pop push dec ret out jecxz or pop add int push pop mov inc cltd and (bad) ljmp icebp inc cmpsb ds dec mov dec pusha imul push lahf or popa sbb add add add pop ljmp popf inc lret sahf lods xchg cmp xor addr16 ljmp mov subb cmp mov outsl and icebp mov and mov jae mov enter das shll sbb (bad) rcr or mov pop cmp mov pushf mov int jo mov enter nop das decl nop pop cmpsl loopne sub mov xchg (bad) mov sub rcll jecxz add lods pop push xor push xchg iret lea nop cmovnp out add add add pop into xchg pop xchg rcr scas sbb cwtl dec add shrl aad xchg or sarl add sar sub (bad) xchg test pop sbb adc mov sub lret mov xchg mov in scas mov inc pop jmp xchg push xchg mov dec test mov in xor stos mov xchg fmuls mov mov ljmp mov lea jne imul mov adc ljmp add add add add xchg jp incb xchg ss mov fdiv iret stos mov add jb adc xlat aam jmp mov lea fildl movsl in adc cmp jb mov in fwait pop xlat jns adc mov xlat jbe and sbb sbb imul divl xchg ficoml dec gs push inc lea jb sbb push mov out iret je mov sahf daa das js sbb cld cmpsl push aas popf (bad) jge es test push dec xchg inc sub sub add add jbe (bad) mov repz jg jmp lcall loop dec lret leave mov out aaa pop push pop test leave stos (bad) mov or mov mov xor push dec outsl pop push mov adc ficompl roll push mov pop add pop sbbl ret xor mov push mov inc movsb mov mov lock rcrl out nop mov pop cmp pushf sbb les js mov or jp cmp int cmpsb aam rcrb dec mov stos add dec sti jbe cmp pop call ficomp sti jnp int popa push repnz fadds divl jle mov jge push ja pop mov fs pop push fsubrs inc mov push mov in (bad) ja sbb and mov (bad) sbb repz mov lret xor push aaa (bad) pop add cmpsb test mov jge add mov inc and dec add xchg pop add inc jl mov xchg push jmp pushf sbb dec insl lcall xchg pop inc test js fstpt fdivs sbb aad pop loopne jb push ja loope sbb icebp pop xchg push adc scas and mov lcall inc cltd add cltd xlat je mov mov or mov cwtl or cwtl pushf leave adc movsl jp mov inc call inc cmpsl sahf jb mov and (bad) (bad) dec push insl sti stos push es lret enter call loopne daa out hlt inc xor inc fadds in stos sti dec xchg cmp xor cmp test mov add adc pop lcall stos sbb mov xchg mov mov mov aaa mov push mov js pop push js and mov add icebp stos add das pop fiaddl pusha stc dec inc (bad) jo xchg mov or push fcoms lret cmp fidiv daa cmp mov inc insl pop add sbb adc adc cmp (bad) data16 mov adc pop push xchg jb imul nop stc decb cltd mov jge dec pop movsb das push jb dec or xchg fisttpll mov sbb mov jno cmp lea add cli int popa dec lret cld aas mov ljmp add xor insl push stc jge incl and inc xchg adc pop or mov cmp mov (bad) push jb out dec bound movsl addr16 ljmp inc push inc push or in ret jno popa outsl xor sbb dec cli push stos and pop and cltd (bad) or mov pop out hlt inc inc scas xchg xor dec mov lods inc outsb pushf adc or mov jo nop outsb ficom and dec sahf aad in out sbb adc cli ja inc stos mov xor pop cmp xor xchg mov test mov mov xor mov pop clc add cmpsb mov mov add jne and mov shr pop sahf les mov outsb cltd sbb jnp mov xchg outsb jl (bad) mov movsl mov pop roll xor scas in jno jno mov push pop popf xchg jmp mov mov cwtl xchg mov fisttp pop xchg bound add testl xor add add add sbb xchg lahf jp pop mov hlt mov leave mov push lods xchg and lret dec or in push ja cmp (bad) lods in mov cmovle xor push adc int3 mov push out cmpsb and mov divb out cwtl lcall pop imul ret lret mov addr16 pop push cmc push xor das lds dec jge aaa lret add ja cmp dec push out adc fisttp jne in into xor enter and jecxz add add add cltd jmp sub lds pop rclb shrb add sub add loope xchg mov popa in fs mov bound push hlt pop push xor inc ficomp push sbb test push lods les insb mov mov inc fdivs mov shrl mov inc cltd sbb cmpsb inc adc (bad) stc stos mov pusha inc das lcall cld popf scas stc mov mov out xchg out adc (bad) mov push daa add mov push dec clc loope sub xor or inc (bad) add (bad) shlb pop in std jb enter inc xor mov mov pop dec push sarl mov cmc mov push adc push (bad) jmp mov imul aas test popf dec inc or addl (bad) negl cltd lods std cmp inc into dec and pushf push (bad) imul cmpsb and (bad) inc imull pop hlt ds lahf stos mov jmp pop decl pop inc push repnz sbb stos cmp mov mov sub daa jnp and inc aaa cmp rcll mov lds int3 incl xchg insb (bad) sahf arpl repnz test sub or jnp push mov jle rcl movsl test sar ror inc mov jecxz cmp adc and lret or pop add dec dec (bad) in test cmp test outsb stc cmp add js xchg xor cltd push dec lods imul fistpl addb add add add and std scas out sub xor mov aas jl or push adc fnstcw mov and sbb mov outsl lea and jae loope and (bad) hlt mov ljmp les adc push into inc xchg loope (bad) xchg mov and jl push fs mov je insb lea adc lret jp mov mov arpl and xor push fdivl aad std aaa (bad) cs dec push mov add add add add push cmp in inc dec (bad) add mov sub sbbl fdivrl push mov push and test jecxz lret dec add pop mov add xchg cmp ja mov popa mov mov jbe ds and pop cld adc sahf push nop in xlat pop dec fsubrl rorb cmp cld inc pop or fcompl xchg out adc mov jecxz or push test rol mov enter sarb mov xor leave add add add jp jb std into mov push cmpsb lods enter sbb lret out pop cmc add xor rclb bound and push stos xor jmp rcll popa cmp sbb xorl (bad) hlt add add call fimul sub mov sub gs add aad in adc fldcw movsb sbb inc and jecxz cltd mov aaa int mov add xor mov sub lcall popf sub in cmpsb js imul inc xchg ds adc push mov add xorl push mov sbb jo cwtl push add jp (bad) xor repz rcl dec mov inc add push xchg pop sarl push (bad) std pop push mov jne into in sbb js mov sbb (bad) dec or push adc clc fcomps and xor lahf ss das xchg outsb jnp lds mov sub test cmp andl add or mov add add add add push mov xchg rolb nop imulb in into xor rclb mov adc cmp ljmp cltd jmp mov pop imul mov sub sti fwait xlat mov cld ret push int popf outsb outsl push jno jmp and add and addr16 ficom and adc scas cmp adc add sub mov in or out add fcmovnbe test xchg (bad) dec push cmp jl pop imul or sub or call dec push mov outsl imull sub mov adc out data16 (bad) shrb or xor and rcrb mov lret sar add and push xor mov cmp lds push cld mov xor push lret daa mov fmull jle imul xlat (bad) pop clc roll popa add xor lock sub mov jbe jl leave sub aaa (bad) rclb lea insl dec cmpsl or sbb or push pop lock mov aas je jns lret mov adc mov mov (bad) loopne xor inc dec cmp aad pusha mov pop or test movsb mov testl sub addr16 xchg rcrb hlt fwait adc sub push sahf ja push sbb (bad) push popa sub decl mov jo sbb push das jbe inc enter xchg or push inc push insl add mov pusha mov faddl dec pop pop loopw out add add add add adc push mov pop dec mov jne sarb xchg adc xchg push je jo dec cltd fistpl adc std cs sahf pop xor mulb jae dec mov jns mov insb mov mov loopne jo adc lcall popa mov out iret cmp pop cmovne scas inc (bad) dec mov iret out mov repz repz mov mov (bad) sub jmp es aam popf fistl fs jp cmp push cmp iret cli push sub lods adc std imul dec lret and and fadds mov mov rolb adc cmpsl scas ja cli cmp xor mov gs xchg cs jmp repnz cmpsb pop fisubl dec push sub das push xor push cmc mov movsl push sub push and mov scas mov mov scas inc insb jl into or pop mov cmpsb adc and cmpsl cmp (bad) lea sarl xchg mov cmpsl out add in cmp dec ds inc jne (bad) inc outsl js push cmp stc sub adc (bad) sahf add add add add xchg push cmpsb insl loope orl dec fwait stos out ss inc fstpl movsb pop das leave cld mov push repnz aaa sahf in inc add gs into adc (bad) lods push xchg xchg cmpsl stos movsb testl aam repnz call add ss insl mov push imul xchg adc int3 mov inc insb mov cs mov repnz test pop inc fidiv loope pop jae push (bad) je sub lods (bad) or mov jne inc xchg add adc pop cmpsb pusha ret add add add inc mov divl cwtl nop aaa cwtl imul inc jne and mov lret scas sbb out sub mov mov pop (bad) push mov mov addl jne jne inc pop nop insb (bad) mov inc scas jmp sbb cmp jo mov mull sub xor xor in pop pop adc addr16 sub cmpsl jge (bad) aam jo rcrb pop mov mov cltd jl loop xchg add xchg mov sub cwtl cli fiaddl push lcall add add add jo add in mov cmc cmp xor and push pop mov xlat loope repz pop loop sahf (bad) fchs inc push cmpsb sbb test aas int3 inc xchg loop sbb mov stc imul rcrl pop adc scas or or rcr or in dec mov test mov nop scas sub cmpsb xor in int3 cli (bad) jne fcmovnbe add mov aas xchg xchg movsl sub add cmp cltd enter imul sbbl ret mov jmp rclb negl outsl cmp mov mov sarl pop and data16 adc daa orl (bad) stos mov pop lock sub cmp insb or sub lea mov test lods int add ss pop out mov xchg fsubl jp xchg jb xor push test movsb dec stos pusha (bad) dec in ficompl mov (bad) enter in xchg das lds or cmpsl ljmp bound cltd pushw les xchg sbb add add clc xor xchg (bad) push sbb jns stos in dec or stc or xchg ss jmp lret lock add lock test or inc cltd fyl2xp1 sbb lods mov lret movsb leave dec divb aas std aam jne or pop dec rcll lods jecxz pusha push test imul cltd push jg fisubr push or add js mov xor mov jecxz fwait je loop gs xor mov add test push mov push (bad) inc cmp xor pusha shrb jae jb push mov add add add imul into mov add sti sub mov adc (bad) cmp in jns mov nop lret push sub mov rsqrtps cwtl repz or sub and scas ja dec popa ss (bad) mov fisubl sahf (bad) jg push and js mov inc lret adc sub mov imul and (bad) outsl js pop orl int lds add add (bad) jmp dec add (bad) aaa jp fldenv sbb fimul or add in es dec add sbb jge repnz push lea inc sbb dec mov mov outsb scas or mov daa aas aam sub fstpt lret cmp sbb test das push sub jns ljmp into popa (bad) sub mov push xor dec add xor cmp inc in jns pop (bad) int3 outsb cmc xor jne mov imul (bad) adc scas push inc sub and mov aaa or sub lret movsb jecxz add sub push popa mov rcrl loop or push test add add add (bad) repz xchg cmpsl fsubs sub mov dec inc sub stos jg (bad) leave mov stos or dec int push shl jae xchg jmp cld adc movsl xor mov dec cwtl mov jnp xor fstpl and movsb jb,pn loope push xchg mov fnsave inc test sbb addr16 loope add test xchg cld sbb inc mov mov inc ja push loope gs jecxz (bad) mov mov xchg outsb int3 nop insb mov test xchg out dec or jp jmp add add add add pop pop add mov imul ret loopne inc clc jbe mov arpl inc fs xchg sbb push movsl mov lods hlt es mov out call xchg push sbb mov adc (bad) mov ror jg cmp push lea and das fsubl bound xlat nop jp xchg mov or inc mov fadd pop pop je xchg jmp ss add pop daa mov aad pusha sarl int imul mov orl cmp add add mov add popaw sub dec push push xchg sub inc push mov pushf mov fistl aas daa pushf lcall out out jae out xchg shrb jp add mov mov stc std cmp xor mov ja lcall out out pop insl inc fisttpl stc pop les pusha mov int3 xchg (bad) push dec imul and pop daa xchg (bad) popf ret adc mov popa push cmpsl mov xor fidivrl cld mov repnz inc aam imul scas pop movsl scas fdivs shll test xchg xor push jo add add add add xor cmp and fnstenv sbb ficoml cld out stos xchg out mov add divl dec jecxz and bound xchg sub cmp cmp mov jge mov fbld jb std inc (bad) sbb lret cs adc inc int3 out jnp aaa push push pop iret mov pop repnz sub sub xchg mov movsl mov in sbb pop pop cmp (bad) mov jge jnp stos sbb push pop aas pop xchg daa xlat lods add dec jo outsb nop and out aas push pop mov jp cmp cmp add pop test fimull lahf lret push or cmc loopne je aas push stos sbb sub test or adc into mov xor (bad) mov pop ret addb mov cli inc mov push adc ja addl out sbb stos sbbl shll sbb and mov das sub ret dec hlt push inc sub pop push xchg popa cltd mov adc pop sbbl add add dec mov adc adc rcll daa mov ja mov and jecxz nop dec repnz sub in xchg sub lcall push pop lcall push outsb aam mov cmp jno imul arpl enter scas sub mov add cwtl fisttpll fild mov mov add and sub pop (bad) loopne (bad) mov mov or push lea pop xchg test lods jne in roll add add aaa minps sbb loope or jmp sbb mov xor dec shll dec cli jmp int ds iret enter jbe fldcw push loope test insb add out inc jo lds jl std dec add mov fucom push (bad) stos jl aad in mov mov sti mov ret inc je dec add cmpb lret jno jb (bad) loop jle dec gs cltd cmp ja push popf adc push inc inc or dec fcoml cmp jmp add add add add ret rclb subl sub shll (bad) jmp pushf int out aaa jp jns and (bad) scas xchg (bad) jno lods mov fiaddl push das out and pop and cmovbe jmp mov mov or test dec addr16 cmp and pusha mov inc fwait repz daa mov imul out or test pop mov jo or xchg sbb inc dec inc aad or and push add scas daa mov xchg push add arpl jl pop add add add fcomps mov ret mov add xor mov bound push mov sub mov mov hlt and lcall cmp push jno int daa lock xlat mov mov in mov mov jg cltd push jno out adc fwait push andl mov test repz gs lea push xchg test mov jge jmp xchg sbb lea sub sub mov fnsave add imul add add add add or xor movsb int stos popa sarb faddl pop cmp mov lahf leave loope nop xor cli nop push jg pop pop mov out xchg addr16 or adc jb in xor inc insb decl (bad) jle cmc pop mov dec es out inc fldenv sub xorl mov jmp aaa mov bnd bound cmp nop add xor inc jb dec cmovne hlt in fdivp je icebp iret adc xchg push add (bad) (bad) fstpl hlt inc adc xor mov inc mov cmpb push lahf push push lock ret cmp adc pop (bad) xor mov xchg cwtl and pushf das sti push and stos pop test xorb xchg add adc pushf cmpsl pop sahf or rorb add (bad) mov ja jp pop pop ss pop popa sti xchg or sub cmp xor scas inc fdivrl push xchg pop and xchg out adc and inc and hlt fidivr and cs jnp cmp add add add add (bad) xchg sbb pop orl push (bad) hlt faddl adc pusha xchg (bad) pusha adc and fimul fsub faddl sub push pop push (bad) dec or in in adc out adc jno push aaa mov (bad) in add int3 mov xor into mov add insl sbb into jno jp bound mov sub mov push mov in sub mov mov mov andl adc scas push das arpl loopne fidivrl (bad) cmp pushf pop sub add xchg or add dec pop cltd pushf fildl inc dec in and mov je gs xor mov loop lcall push js dec push (bad) dec and punpckhbw push or adc pop add and jecxz jle mov jo mov pusha inc xchg and push shlb inc xchg pcmpeqd test aas (bad) mov fisttpll fldenv fcomps adcb jnp fistp xor or std xchg sub lahf jbe push shll outsb mov add add xchg daa in jns pop push pop aas inc jb out pusha es jns xor pop lds jge popf inc mov (bad) addr16 adc lahf fisttp add mov and sbb jne cmp sbbl and push add xchg movsb inc (bad) lret (bad) cli (bad) das test in inc (bad) ficom lgs or (bad) cli scas nop cmpsb ds sub insb stos inc outsl rclb stos add mov stc leave fcoml stos mov add add add (bad) dec inc push mov insb ds push (bad) xor xchg sub lock loope movsb clc daa fnstenv xchg enter sub mov xor test aaa les push or fs xlat adc (bad) enter jecxz xor test cs pop fwait add mov setl (bad) pusha push lods or repnz pusha mov rcl cmpsl and or mov imul jg mov xor (bad) je lcall ljmp pop (bad) jns mov xchg (bad) cwtl adc pop inc rclb pop mov flds repz and sahf mov jnp adc aaa std and xlat sub out out in (bad) lock test stos ja inc fdivs cmp nop dec jge cmp adc (bad) jbe cwtl cmpsl inc mov cmp arpl js je pop lret (bad) ror mov mov push jno sbb gs fdivrl cmpsb sbb jbe fstpl push jecxz mov cwtl cmp push push add mov cmc xor pop int3 pop add cli pop add or mov pusha iret mov mov cmc jns push out sub jno stos pop dec sbb xlat stc add or pop insb sti daa nop loopne imul cmp cmp pop lret push fldl hlt dec ret aam mov pop push dec stos fldl scas xchg test mov jbe testb mov sti mov scas jno jge xchg cmp add sbb mov int outsl and shlb (bad) pop push inc push jne dec xchg daa inc bnd sbb xchg mov rcr test mov stos jp lret fmuls out add add add and mov dec jne rol fs cmp lret addr16 in sub adc bnd stos and inc cwtl repnz pop fadds xchg (bad) mov cltd pop mov stos ljmp insb mov pushf inc inc lods push js cmpsl ret incl mov outsb push cli mov lock mov out xchg movsl push mov cltd jnp pop lods fcompl jl xor imul cld dec gs iret push cmpsl outsb iret nop arpl fldenv sub jno pop add hlt (bad) leave pop adc jecxz xor das insb adcl xchg mov fnstenv and bound and and push mov adc xchg mov pop gs pop inc je push cltd push push movsl aaa inc fdivrl or lea and jmp stos push stc movsl in aaa (bad) xor int3 mov xchg jbe lcall mov scas push xchg ror pop sbb push mov xor inc xchg es fwait sub (bad) mov repz adc lea add add add add loopne data16 xor mov mov xchg mov inc inc mov adc daa cmpsb inc add push icebp pop sub pop sub mov push test push dec mov mov test lret push lret cltd jns jnp iret inc insl pushf adc mov add adc cltd or cmc sbb fisubr push hlt inc sbb inc push xchg roll xlat sahf mov push dec fidivl push xor out xchg sub add test cmp pop addr16 lods mov pop or pop fnstsw inc jne (bad) dec insl adc sub ret repz add add mov add (bad) jbe sarl lret sbb pop out pop xchg dec push test test mov adc int3 stos int xchg outsl sbb push les inc pop push jb dec pop jecxz jle mov add sub test popf daa (bad) jo fild xchg insl inc xchg push test cmp mov popf xor insl insl mov cwtl (bad) aaa and dec rcrb movsl out pop inc stc push jne sar sar fsub mov xor std dec cld jmp mov xchg cmp and add lcall negb fsubrs out stos or dec and add jo,pn inc fucomip cmpsl pminsw add data16 faddp call stos jo jo push loop fsubrp cmpsb popa xchg ds stc int3 mov jge mov sub daa lock mov scas (bad) lock push es and decb dec xchg call inc jo push xor mov push insl mov sub pusha movb sbb in mov sbb in aas lret insl mov cmp sbb add add add in dec loop arpl jmp lods push dec or jl out mov mov push xchg repnz xor inc dec ja out call pop shrl call jo fsubrs cltd in mov inc lds xor test mov dec shr xor sub (bad) (bad) pop in cld inc cmpl inc stos sub adc pop lods push clc jns out jmp and (bad) dec cltd in lret lods and cmp sbb test mov xchg or and cmp imul lods mov hlt bound repz aad cmp cmp lahf sti insb cld mov pop fwait addr16 popa sub and (bad) and or fwait push lea jnp enter cmp push fcmovb cld lds and (bad) push mov mov orl push jle push frstor dec in (bad) mov imul xor xchg ret cmp jle cwtl int jns mov mov mov cmp lds lret add xchg push out sub sbb sub les cld std enter jecxz jp adc mov ret cmc in stc lret stc push inc cmp add bound xor or jle test mov scas xchg out sbb xor call sbb lret enter or aaa lock adcb insb add stos and jne mov imul mov outsl mov nop fsubr lret xchg fs test mov jae ret test sbb movsl cwtl (bad) scas add in mov add add add add push mov out jge icebp jb jp jge dec jmp xor inc inc pop push shrl rolb sti pop pusha sti dec xchg push out dec add sarl xchg stc rolb sub pop ret stos add sbb das insb andl shlb jp addr16 mov pop xlat dec test push inc fwait xchg xor das mov mov pop mov out xchg mov cmp cli push cs cmpps mov add push lods push mov sbb mov mov add add add lea or mov out mov add mov xchg inc push (bad) ja test inc adc clc movsb ret std adc cwtl cwtl dec fstl outsb push lds fsubp int pop clc add in xchg and ds mov stos xlat inc sbb (bad) mov sahf mull pop cmp fwait movb out outsb inc add sub aam out jno inc xor sahf movb js lods mov and fnop jae out jns inc orl sahf cli sub addr16 pushf gs xchg shrb mov imul add add push popa xchg out and dec dec shlb lcall mov (bad) aas rclb arpl push nop xchg repz adc jae push (bad) jb xor lds dec mov or cmp movsb xchg ret inc loopne pop mov jno add pop push fstpt (bad) ljmp inc sbb xor pop outsb jo ret sahf add ja notb pushl inc insl loope clc inc fcompl std push cli (bad) dec push sub push mov mov andb mov adc xlat add or add add add or dec shrb in (bad) push fstl (bad) xchg sti std (bad) scas fdivr jne pop sbbl divl xchg adc mov outsb nop fwait (bad) push hlt and imul lret pushf dec add push dec mov add mov outsl push loope or sbb enter rcll lcall in xor jno add into jp xchg frstor fwait imul add pop fmull dec (bad) stos inc mov push jb add in jb mov insb sbb push imul add add add inc pushf arpl xlat pop inc pop sbb xchg cmp inc add push jl icebp cmp sbb imul sbb sub mov js ret aam cld push push lret mov cmp orl es and sub and leave mov xor in add out xchg ret scas adc outsl sbb or or cmp pop hlt out nop inc es dec jb mov cmp pop mov addr16 push or dec push sahf in xor add add add mov pop xchg and mov js sub add and cs mov rcll xlat pusha data16 or std cwtl test xor fnstcw inc mov int insl divb jg mov ja or and cmpsl aas movaps scas mov (bad) xor add sti daa lret fistl dec jmp cmpsb gs add push cwtl jns inc ret iret adc repz popf mov mov xchg pop mov lea mov outsl movsb popa fwait xor in bound arpl adc add add add xchg mov je rcl std in xor sbb imul mov adc cmpl push cli mov gs cmpsl ss jno mov cmp lahf and pusha es push outsb pop xchg xchg pop leave movsl xor xchg and push jne dec lods mov push add mov test inc cmp mov push ret lret je pop in add nop mov outsl push lret ds es pop call push xor dec cmp mov daa add lcall nop mov (bad) or add add add js pop xchg popf pop test shl or xchg sbb leave and es stos out jae mov shlb inc lods push (bad) mov or jl popa sub test cmp xchg insb ss and movsl std jne pop sub mov mov push das sub je pop push push jg (bad) mov das clc and mov push (bad) dec add inc jecxz popf ss push cmp mov fistpll (bad) icebp in (bad) or xor lret mov in cmp out cltd add adc or or xor push orl (bad) lods outsl sahf push add cmp (bad) cmpsl adc leave xor out push xchg jmp add int3 rcrb ljmp out lahf and xlat jno cli sub push in dec cmp addr16 pushf adcl (bad) (bad) push pushf sar add pop pop subb pop outsb (bad) imul inc xor fwait scas adc fisub pop lahf jae orl add add add mov jo xlat adc jp and fistpl and repnz mov inc addr16 mov jl pop rorl movsl dec js jns push jb lea xor pusha mov jecxz push icebp leave xchg out arpl cmc subl add mov or pop setae (bad) les mov dec pop mov cmp fildll fistpll add inc inc std arpl mov scas push dec fs cltd and mov insb std jecxz call mov add add add add xchg and dec jl (bad) xorl enter inc (bad) pusha add cmpsb sub push out sbb mov hlt jb add outsb sub add inc (bad) popf std pop adc dec push in fisub (bad) and adc sbb pop loop lret xchg mov jne mov fwait data16 xchg adc fcomp pop (bad) movsb jle jb nop aam inc fwait pop mov iret mov push or jo sti adc adc ljmp out rolb xchg sbb or int mov add add add xchg jmp mov pop cmp mov inc jbe call shll mov mov incb cltd add fnsave sti (bad) pop cmc jne mov pop jns or pop jle enter (bad) adc and add add lea fistp arpl iret scas adc enter shrl out push xor outsl sbb (bad) ficom xchg mov xor jg mov (bad) push sbb mov mov cmp in push and add add fist mov fdiv ret pop inc movsb sbb nop push dec lea add mov into xor (bad) cmp mov inc mov xchg ja push aas ret (bad) cld inc or fbld push pushf sti sub leave test xchg mov aad xchg cmpl (bad) mov dec sub or ss sahf pop xchg inc hlt add lret dec dec jge jle stos lret jns jne pop shrb movsl pusha mov (bad) or int mov push jne mov cmp pop addl add add cmp inc lcall mov cmpsl inc xor inc cmpsl xlat sbb mov xchg push lea add jg (bad) inc nop popa fwait xchg pop lea outsl jo gs fadds push mov cmp addr16 xchg mov push cmp fcmovbe scas (bad) xchg in cwtl cmpsl xor ljmp (bad) lock pop add gs jne data16 lds cmpsl sbb call and popa dec lret in imul stos xchg lcall mov js mov add add add sub cmp sub push cmpsl push mov adc pop xor pop xor mov sti xor push pop (bad) jmp jb (bad) shl mov gs mov cld enter (bad) cmc sub mov mov pop push gs xchg popa hlt orb mov sbb dec mov lret xchg (bad) pop in rclb xchg dec push adc dec inc push sub inc insb mov sbb jne push xchg xor xchg stc out xchg jge insl pop push push jp dec xlat push jae call pop adc addl add add rcrb xchg mov xor cltd aaa add adc pop fnsave mov (bad) pop bound and (bad) or pop push pop loopne sbb adc and enter jb or enter add xchg adc lock jns int3 sbb (bad) shr test adc fimul cli cmp movsb ret sub (bad) jmp repnz adc add push loopne add data16 xor mov das push xchg and sbb mov jmp xchg inc outsl fstp inc add add add add fidivrl les xor rclb int xchg fiaddl jno xor inc stc inc push dec imul sbb repnz out mov push push dec insl cmp aas sbb dec js xor pop enter fnstcw pushf jle ja hlt pop pop sub sub iret adc scas sub inc adc push mov ds ret jmp pop pusha jmp incb hlt mov (bad) fldt daa or aad mov mov dec test sbb pushf mov lahf addr16 sub out test sbb lahf cli push mov xchg fstpl in dec ljmp cmp (bad) cwtl cltd and push test jg addr16 popf and mov fnstsw loope outsb push repz scas pop lods (bad) fistp stos push arpl inc push xchg rcrb pop xchg dec mov sbb xchg mov je jmp (bad) lods push arpl mov cmp add xor shlb mov les loope out inc cwtl cmp push sti iret ffree cltd xchg mov push add (bad) lcall add jg fwait or jp inc push arpl movsb test movsb enter (bad) mov push add or xor mov les roll mov lea loop add mov jns (bad) shlb imul mov push stos mov (bad) mov enter add mov idivl inc (bad) fxch push bound in test mov sarl inc cmp xor mov sub jne (bad) dec cwtl jl push aad gs iret xchg jmp add add add mov sbbb adc xchg popf inc loope xchg int3 leave jg fcmovnbe push fwait idiv divb cmp mov cld add repnz and test lea ja mov dec jmp and sti cmc lret stos repz jb adc pop cld lcall sub bound add in dec loope scas xor adc imul fstpt dec loop mov sbb aas fs incl add push xchg lret es pop leave out push or sbb int3 mov inc ret add inc mov mov jecxz push mov add add add jle roll sarl xor loop mov fldt (bad) jle enter dec lods jp xor data16 inc xchg repnz add sti mov inc cmp imul shl repz sbb lcall jb push and mov cwtl dec fisttp xchg stos popa in or stc andl cmp bound and add bound pop ds int mov cld dec cs add aas push out sbb test inc mov call fidivrl sbb inc mov mov jge xor cmp lret mov or mov jne nop stc xor xchg loop mov adc out mull (bad) lret in add loope sub dec dec stc mov cmp mov in cmp movsl and xchg or add xchg sub cwtl and jbe es xchg js or test jae mov mov repnz aaa jle adc loop inc adc cmc jb jnp popf jb (bad) mov lods aad cld nop testb outsb inc mov test xchg loope lcall add add add das jecxz pop arpl into out cmp jne mov xchg or inc pop lock inc mov jl scas (bad) sahf adcl mov sub mov test mov cld out dec push xchg leave lret sbb rcll out out stos adc daa pushf dec into lret inc cmp nop pop iret sub cwtl ret fisttp dec inc imul mov push rcrl loope sti in mov mov out push pop int sbb mov ret cltd aam shl stos nop mov ret xchg je mov add add pop rol das shll cmc jbe bound xchg adcb out pop je inc or or add jecxz mov xchg cmp push popa push inc int mov add out add mov fsubrs pop pop int daa dec jo sub cltd pushf push cwtl or js scas out pop pop out enter ss xchg cmp mov or insb movl mov sub mov push ret loop scas lcall ja adc pop les addl add add add mov ss push cli pusha inc arpl and mov push mov rorb xlat mov mov ljmp pop mov xor test and aas pop xchg retw dec and pop iret (bad) jb jle jno lea (bad) xor inc scas into dec jge cmp cmp sbb xchg dec icebp in in mov aad mov add cmp loop in loop pushf mov (bad) inc aam jmp jo scas xchg dec adc dec xchg push pop push (bad) sbb shll pop add add add add aad insb loop sti test vmovups fwait pop or and fimul lods push loopne test mov stos (bad) mov lds inc mov (bad) push push mov mov aad cwtl mov push jge and test rclb in and in (bad) sub sub decl fcmovnb movsl push jp icebp or pop jmp add sub aam pop mov sub jl (bad) or mov cmp leave fnstcw les leave mov push push dec xchg sub bound popa dec std pushf add add add xlat (bad) in sbb (bad) push mov jmp mov inc xor cli into jnp mov dec sahf dec ret or (bad) push repnz sub xchg jae nop mov and shlb mov dec sub adc in mov xor pop ja dec mov dec push ljmp sbb cli jecxz adc repz out cmpsl in imul jg mov scas lock push loope pop pop lds and inc lods andl mov dec in jle and aaa sub xchg test js add (bad) mov or nop data16 adcl fild (bad) bound (bad) das sub jle mov arpl and sti aas mov (bad) fsubrl repnz lahf add ljmp enter insb (bad) mov lcall into pmaxsw dec cmpsb add mov out sub enter cmp sub cmp fisubrl xchg mov cltd dec xor jmp lods push and mov mov pop mov jg adc outsl mov in lods xchg cwtl push stos aaa js stc andl jmp push pushf cmp xor and or mov mov xor jge ret rolb cmp int3 mov pushf rol sbb cmp ds lea dec pop and aam xchg imul mov mov (bad) cli mov outsb test xor jg mov out mov push dec add cmpsl test xchg dec ficomp xlat pop (bad) pusha push sub (bad) xor rolb adc scas sbb xlat enter inc xlat arpl add add add (bad) cmp mov fwait and out aad stos mov mov pop jnp mov imul cmp or sub outsl insb aaa sub idivl mov and icebp std push stc ja mov dec rclb cmp pop jle mov js sahf inc sbb mov repz fcmovbe or in push outsb push pop inc pmulhw mov cmp inc bound sub mov jne roll adc cmp in (bad) imul jmp bound test movsb mov lar cmp es jecxz in and push cmpsb mov push popf pop (bad) jg (bad) fild mov (bad) sub hlt mov inc notl daa lret fwait mov mov shrb cld test cmpsl and (bad) and clc outsb and ret jmp ja and test mov pop stc and and aam dec rorl add pushl and add xchg std loop or xor js mov enter insb rolb mov mov inc inc dec iret xchg inc xor add add aaa sti mov in js loop dec sbb aas loop jo nop cmpsl mov js insl lahf aad inc add jmp inc inc push xchg xor subl out push scas mov mov adc jge daa sbb or mov and je std cltd xchg stos or mov ljmp sbb pop push dec cmp loopne sti nop jmp mov add data16 mov test leave mov psadbw inc stos ret jle push mov rorb icebp pop roll addl add add mov pop dec mov or mov ss sub sub repnz add mov push push pop add int3 (bad) cmp pop jnp into iret test dec lea outsb pusha dec cld pop repz lods xor test adc cmp lds ljmp xor les xor fisubrl mov cs adc iret push (bad) and rorb lahf mov or outsl xchg insl pushf pop (bad) sbb push cmpsb push inc adc push aad outsb push imul add add movsl inc loop scas out iret and sbb xchg inc push cmp mov loopne insl sbb cmp mov mov in std pop mov add inc shl pop ljmp movsb and (bad) cmp jno dec dec fbstp sub mov in mov insl repnz sbb cmp data16 into add (bad) rorb push mov lock sbb pop popa inc divb dec inc sahf mov dec fsubrs popf mov mov rcl std adc pusha fsubrs int inc add add add add test xor int pushf fs sti xchg rolb or jmp and dec sub cmp or and pop xchg neg lock fwait bound (bad) mov repnz fmull mov adc jbe cmp fstpt jl out mov sbb and sub pop dec inc mov jle sub pop mov cmp dec cmpsb cmp cmp cmp cwtl push cmp xchg lods ret (bad) xchg or jnp fnstcw xor add sbb outsl faddp std push dec sbb pop push or fnop cmpsb stos out adcb test stos aas loop dec aaa inc mov jne aad xchg fwait inc int3 cmpsb les cld inc mov fldl adc sbb xlat dec mov int3 xchg push ss por inc insb stos jge (bad) or (bad) loope cmpsl (bad) fildll cmpsb loop pop inc imul cpuid test inc mov lods stos mov dec mov icebp xchg mov dec enter or add add xchg and xor pop (bad) xor fs hlt mov pop rolb les mov xor push in jmp cli into cmc and mov push icebp xor dec cmp pushf mov daa cld mov lods xchg push jle and in lds clc push je orb jg jo xor out inc fldenv fsub out fdivrs xor pop or or jae sbb insl and mov push mov pushf addr16 dec rorb add add add pop mov push repz mov jne daa mov (bad) call pop xchg insb push adc ficom sub enter push neg mov mov ret subb cmp dec sbb pushf rep mov inc adc stc jmp mov xchg inc adcl aas jl (bad) aaa test aam xlat add dec pusha mov push pop cmc fcomps pop fbstp es subps cmc or les lahf pop adc adc push dec lods mov jno jns mov jl add ficoml pop sti mov lea sahf inc imul into and sti jno cmp xchg lock js ja cld stos ret jle adc mov mov stc arpl mov jle popa arpl (bad) adc xchg aaa scas fnstsw (bad) cmp mov adc xchg push (bad) ss adc lds mov dec popa and sub (bad) popf movsb pop cmp or shrb fucomip lcall adc sti lds and add add add xchg punpckldq pop push inc je add scas push fmuls jge ficom aaa in jb xchg mov cmp repnz (bad) je test adc cmp mov xor dec jnp and add pop mov std jne dec inc (bad) xor sahf push dec push cld xchg add fwait das jge repnz push (bad) lcall scas ficomp cltd pop xor movsl jns nop out popa push imul xchg cmp cmpsl addr16 dec lret inc scas daa lret jg sbb sbb dec mov roll push lea adc jns mov adc add add add add (bad) clc adcl std xchg adc inc pop decb arpl into leave xchg cmp addl popa mov inc mov cmp fdivr hlt inc push sub push push (bad) sarl push sub or test aad inc add outsl pop les lcall mov pop inc cmp lss mov xchg or ret pop fwait jb and add sbb clc int3 cmpsl dec arpl push aas adc cld enter je xchg or das ret and add sub jle xor into rorb cli rclb mov shr test push lret mov and xchg pushf (bad) jl test scas (bad) jbe sbb fistl xchg out push test lret pop mov cmpl fimul dec call fnstsw aaa cbtw sahf cmp fsubp jno cs mov popf add mov add dec stc stc fdivrl lret inc fwait test pop cmp popa mov jb aas mov fcomps push cmp mov add (bad) sbb jae dec cmc cwtl jno sbb les jmp sub ret frstor add add add and dec (bad) mov stc mov jne adc or lahf add in sub cmp cs pop pushf insl mov repz push pop or mov ss xor or addr16 dec mov mov andb daa adc loop fisubrl xchg or inc sbb daa popa test (bad) js mov popf in lock out test xor push xor pop in insb out ljmp xor jle cs cmp je mov das mov (bad) sbb xchg mov lret frstor add add add add loopne xchg dec mov and (bad) pop push cmp je add pop mov inc dec and inc jb sti cmp ljmp push cmc dec mov decb sbb jno xchg pop in xchg push aam inc ljmp sbb fidivr test movsl fidivr cmp movsl icebp sti mov mov cmp xor cmp (bad) loopne mov in in mov sbb int3 mov sbbl lods adc clc out xor mov add add int rcrl fs fimull call dec sub mov aad loop jo sti outsb jne jb push in dec (bad) lods adc stc jp into cli adc cmc jmp push adc or repnz (bad) insl xchg mov aaa mov mov dec jle add or sub movsb (bad) dec ds inc mov jae insl adc fiaddl xlat mov add (bad) enter sub cmp and sahf out jo js out dec jle leave cmpsl out mul add add add mov push cmp (bad) stos pop mov xor lock sahf mov aas outsb inc inc icebp mov (bad) mov sbb icebp xchg dec sbb sub stc and inc mov (bad) in in aas loope sub add or pop pop or in mov lock xor cmc rcrl dec stc icebp test shll pop jp outsb jp mov sbb mov push and unpcklps in xchg hlt sbb jge dec outsb test test sub nop sbb add add add mov sbb aas lret insl shr movsb mov (bad) mov cmp pop addr16 push nop inc (bad) adc dec push arpl cli jbe push aam jnp ljmp adc mov pop or push push adc push sbb (bad) pop dec pop stc jmp enter and xor (bad) pop xor mov or dec xor inc sub cmp mov xor push shll bound push cs and dec mov jecxz (bad) ljmp sbb aaa add add add add popf sti movsl lock sub outsb mov loope xchg (bad) insb and enter mov ret jbe les dec cmp outsb xor ret mov mov out ljmp push push xor daa (bad) rolb adc cmc sub pop xor lock ret cmp mov enter mov cmp add dec sbb sub fild and sbb or rclb jo gs inc sbb icebp sbb pop outsl push pushf push add add add add push jle loop aad add movsb mov adc cmp lock fnstsw lret stos rolb mov aaa (bad) mov sub inc mov dec dec fstpt ret int jbe cmpsl xchg mov adc pushl mov insl push cmpsl cwtl dec xor imul sbb hlt data16 inc mov lret and icebp pop andb jg insl stos js mov imul pop int aas add mov dec mov add push subl div xor xchg dec mov aaa inc out adc mov add add (bad) mov icebp xchg pop or into scas xchg fcmovne inc fldl inc jmp pop ja movsl data16 (bad) into mov xchg xchg stc aaa popf mov roll addr16 fistp fistpl and pop add shrb movups dec (bad) sahf lea push pop movsl arpl sbb outsl add sub call sub xor pop mov insb push jne xchg xchg sub sbbl aaa or and (bad) mov shl cmp out loope jp jae and sbb xlat fisubr jl sbb add add add (bad) mov sbb frstor sti std mov and into aaa inc and ds mov inc int3 push repz and test scas test sub push sub mov in push popf leave cmc pcmpeqb push add sbb push jbe adc out push test sub fiaddl out dec mov (bad) lret mov call fs out xlat ja inc push repnz sub push xchg xchg sbb xor sbb jmp stc dec adc jmp sub test inc adc pop push ret xchg outsb add add add ja cmp push lods repnz out xchg std mov push add push imul imul inc shll loopne xor mov push sbb xchg iret xor mov pop sub mov pushw out mov fcmovne cmp lahf in scas jecxz mov roll (bad) sti imul cli dec test subl mov mov push adc sub loope,pn fisttpll in and scas inc scas arpl mov or inc or pop arpl icebp hlt bndstx shrb jecxz mov add add add add pop cmp pop cs and and int out sbb shr cmpsb (bad) imul cld pop mov dec xchg (bad) int aas push mov or or cmc xor lret add mov test movsb ss push mov dec (bad) (bad) fimull jmp in int clc pushl add xor mov inc fistp std xchg cmp xor adc into add add and stc xchg xor fs fldl in (bad) shrb notb push int3 push or rcrl out leave sub mov add add add add mov nop mov popf in and push jl popl stc in xor clc jmp or jl xor inc push data16 aaa aad pop js add lods inc lahf mov idiv jne or test sub sbb les inc mov pop (bad) aad or out into inc ljmp push ljmp jno aaa scas cmp jle arpl sbb int3 sti jne cli xchg push pusha (bad) jl sbbl pop test jnp int3 xchg stos jo push jne add add add imul lock and shr fcomps add sbb inc cmp js arpl add es adc cld cs sbb out inc das cmp cmp lds sub and (bad) fdivp jae arpl ret pop mov je out mov (bad) push adc add cmp int3 mov iret (bad) orb mul or push xchg clc insl cmp cmp out push dec jnp push sbb push sub cmp clc inc jno (bad) clc sbb outsl push daa divb add add jbe lock adc cmp fdiv int3 hlt lahf outsb mov in push mov lret mov sbb loop cmp mov pop int3 repz imul out jle fnop xchg adc pusha xchg mov in mov sub bound cmpsb inc jg (bad) xchg andb out idivl mov cmp arpl in roll or inc sbb pop sub xor adc jno lock adc pop pop mov mov int3 xchg mov add add add add adc cmp and sbb cmpsl mov push int jmp mov add outsl out xchg iret enter (bad) (bad) test aaa fstpl add cmpsl push in stc jo inc adc icebp fs cltd lods scas test out dec rorb inc popf in lcall fsubrl xchg adc cmpsb sbbl sbb push out (bad) xchg call pushf and sbb mov icebp dec js icebp in (bad) push push lds pop aad pop outsb or pop int sbb lds rolb lods ja dec add sbb adcl (bad) int3 icebp and inc mov ret mov fisttp pop mov repnz arpl push push push push sahf sub mov pusha ds loop push stos mov jmp (bad) repz xchg add jne jae sub rclb xchg sarl in lahf inc fisttp popa call lds adc mov sub mov dec mov outsl sub stos test loop lret sub sbb aas sbb xchg jno cmp mov insl sbb mov cmp add add add negb jl out enter dec cmp bound jb stos pop pop loope and add pop lods jns leave into cltd xor push jp (bad) lret nop ja dec jp xchg or mov push pop imul out (bad) mov adc jge xor push es ret add sbb rcr hlt das movsl andb in ret pop repz fistp mov mov aaa int push xchg add lods ret add stos addl pop out les (bad) push je (bad) or push push add add imulb imul aad pop mov fs aad in jge stc daa and fild loopne cmc arpl shr mov jb cmp push xor push out mov je jp fnstenv movsl andl je addr16 pop ret stc push cmpsb std sub ja mov xchg (bad) lahf out inc xorl insb add adc cmp call jp lcall enter mov cmp push incb fdivl mov add add add adc sub pop (bad) mov scas cmp test (bad) mov aad pop movswl mov addb pop inc rcr mov repz mov sbb push jge sbb scas js std jnp and mov or fstps lock xor cltd fnop cmp imul adc ljmp pminsw push fbstp imul and jo dec pop inc mov adc in cmp fisttp dec mov mov in push jp flds daa sbb sarb mov sbb outsl add lods sbb (bad) xor and or jecxz fucomi scas adc sbb add dec je xchg pop mov jne daa and sti call push jle fstps fistpl (bad) pop in imul cli inc lea push leave cmp movsl in test mov mov (bad) jbe icebp (bad) push in cmp addr16 pop add mov pop (bad) int jle call jno ffreep in (bad) jp into xchg call fidivrl adc test jne sahf lret push sbb dec rorb push or mov add add add adc adc pop mov mov lret sahf cmpsl test daa sub mov inc jns jo jle xchg fmulp dec in movsl push inc xchg int or add loopne iret and movsb mov (bad) adc rcll js dec sub fsubrl mov jo inc scas lret and das cmp std (bad) in loope rcl sahf inc movsb into scas cmpsb jo out inc fadds mov mov arpl add mov xchg push mov mov mov and jmp inc or add add add add push (bad) xlat adc rcll stos movb pushf (bad) sbb outsl sub dec cmp mov addr16 outsb ret hlt loop in add push xchg xor ret add push inc push loope icebp xchg pop add and (bad) icebp je cwtl stos xchg orl cltd adc xor ret push je fimull aad scas popa mov mov movsb jmp xor es push rolb xor and sbb pushf lret outsb cmp mov dec jg inc push mov test xor lock sahf repz mov outsb test jbe in test mov xchg leave scas sti fs xchg and jg push cmp xchg mov fisubr lret adc scas stos or ret jmp leave int cmp mov jmp jns fdiv push rolb lret pop cwtl icebp xchg aam push (bad) adc (bad) cld out jle sub xchg testb mov (bad) imul nop aaa outsb and add add add add add mov mov sub push cmp imul mov stc and adc stc jmp lods sbb push nop xlat out xchg lret dec (bad) sbb cli xor call push xor jge cmpsb jae xorb dec jae jmp pop adc sbb mov sbb sub test popf (bad) out xor movsb dec imulb pop mov cld idiv lahf enter cmp loope rcrl push jp arpl jle jecxz sti mov int jno push adc nop push fsubs insb mov add add dec jmp popf insb mov jnp push mov xchg cmc or jge stos mov cli test rcrb and mov pop add in je sti rorb xchg and sub jno (bad) and inc mov popf xor imull mov cwtl push mov pop sbb pusha sahf mov add cmpsl jbe mov dec outsl jle addr16 mov cmpsl mov int rcll les popf lock pop adc ja mov movsb pop std clc int jbe push lcall loopne je add add add add outsl dec adc ret pop shl cmp out iret and daa (bad) sub movlhps loop sbb mov add sbb shlb stos push movsb xchg stc mov ret arpl pop sub fsub and dec push pusha push dec cmp xor test pushf fwait and or lock lds mov das sti add xor (bad) call clc mov aaa je push or out hlt dec (bad) mov mov cld fwait sub sahf add mov xor ds iret hlt xchg dec test add pop or cwtl lock pop scas fbstp cmc stos sub out leave mov inc movsl das dec mov mul and inc insb andl mov dec stc repnz stc out fwait rorl fcompl jle lds cltd pop sub int3 (bad) mov or stos bound fdivrl xchg idivb stc jno cmc or and xlat pop fcoml xor xor and pop clc dec mov dec mov mov cmp shl or add dec je push out aam pop aas imul and rcrb jbe adc mov mov or pop jae cwtl jmp les inc jecxz or jl mov sahf cmp sub push orl int mull icebp dec dec jp xlat pop cmpsl imul inc pop pop dec jo mov fisubrl shl (bad) jecxz jno mov out push or repnz add jne data16 inc push out insl cmc je loop sbb add mov push ja inc xchg jae fstps add add add add in cmp cmpsb sbb pop test add dec dec jb jg sti inc xor sbb aam (bad) int mov aam push addr16 push repnz fisttpl outsl sub add pop enter sbb lds sti leave jnp xor sbb jbe dec repnz and adc aad xor bound (bad) mov jle push xchg es mov sbb lods into mov cmp fcomps (bad) push pop push iret pop mov jnp dec arpl mov and andb jmp test mov pop sbb add add into jp and scas out call shrb fstp sub cmp push addr16 (bad) xchg add nop scas pop and hlt mov push (bad) sbb mov ror sub pushf lcall das (bad) mov outsl aad cmp cs clc je daa fisubl es aaa fcoms xor (bad) jmp jno outsb (bad) xor jne add lret adc nop adc into cmpsb jbe push ret mov mov xlat dec pusha mov shl xchg sbb mov cld sub (bad) rol cmc inc pop mov add insb aam into in jo mov cmp xor sar jg movsl mov aad lock negl cld sbb insb cmpsl sbb mov out or pop sub pop hlt inc pop mov cmp stc xor sub mov push or (bad) mov leave and cmp das pop pop or out rcr push (bad) icebp mov add push xor and ljmp push jbe push bound lds test sub and mov bound push cmp sbb sti int3 xor imul cmp add add add add or adc mov pusha push aaa inc stos lea and add pop popf xchg mov jne sbbl insb outsl jmp (bad) xor cmpsb pop data16 sbb les inc test push test sarl cltd movsl pop adc cmpl mov (bad) jnp xchg jecxz aas push (bad) pop in std xchg icebp sbb xchg pop gs jecxz xchg (bad) icebp and fidiv ret jo mov cmp jo push mov cli mov jg incb mov fsts add (bad) cs mov or pop cmp sub jae popa out (bad) lret inc addr16 (bad) popa inc sub xchg imul lcall push aad fadds aam cmp in sahf (bad) push stos push inc mov dec sbbl adc loop daa data16 mov cmc xchg std in xchg cmp (bad) in lret cmp cmpsl xchg movb jge jmp ss fwait and pop pusha inc cli jmp div shl push xlat dec in mov jge daa sbb add add add cmp addr16 cltd call xchg (bad) cmp sbb je jg adc mov add mov sbb ds scas cmp cmp fadds (bad) jmp fcoml xor fisubrl jb push mov or (bad) mov scas cmc mov scas out mov mov mov push push ret mov mov jmp and mov stos xchg sbb imul daa jmp js push mov pop cmp movsb fidivrl jnp add add xor cmp cmpl loop idivb inc in sbb sbb cld pusha or mov mov dec cltd xchg mov xor shlb (bad) negl lahf jg repnz movsl into cmp insb cmp (bad) jbe mov pop lcall clc sub std les (bad) dec and xchg inc push shrb mov jle movsl gs stc test and mov incl stc add outsb scas aas pop nop mov xor dec jge in (bad) test sahf push (bad) jno and js insb inc pop dec or mov add add adc inc mov pop adc lret xor dec ret xchg not pop lea insb aaa push mov jle and ret out daa mov mov push adc leave xchg push xor cs ds pop xchg call mov xchg sub fnsave iret dec xchg pusha push xchg sub sbb pop (bad) mov lds gs adc in shlb cwtl (bad) movsl lcall in cli xchg jo pop mov and fsubs imul mov add add add in mov loopne xchg frstor add movsb sahf xor dec test loope enter cs xor push test shrl jne xor add out outsb out xchg mov lds sarl arpl clc ja hlt in add stos loopne jl imul loope sub outsb mov dec cmp mov shrb cmp mov in cmpsb pop push mov enter stos clc pop bound mov in push cltd repnz mov inc sbb test sbb add add add mov mov jne (bad) cld in stos daa push mov inc dec incb inc mov out mov in cwtl aas add inc or jmp sbb mov inc (bad) dec add pusha and push or xchg adc adc xor js inc jbe adc jmp insl adc xor dec fisubr fcomip xor in loope lods or mov mov push fildll xor xor or xor cmpsb in scas xchg or inc xor loop inc or ret jno add jmp add add pop cmp lods or and mov (bad) pusha lret cmp mov mov fwait push dec int das mov xchg test scas rcrb imulb les mov fcomp adc jbe lods lds in fucomp pop xor js ja cmp insl adc scas pop js xorl cmpl notl movsb xchg aas xor xchg stos sub repnz sub add mov push xchg jp or scas pop fisttp dec outsl icebp push jmp add add add xor nop and inc jmp fcmovnu mov aam adc fucomi or inc lds mov jl out inc fsts dec inc or mov or push mov popa xlat addr16 jo push sahf and lock movsb lea call (bad) (bad) adc adc icebp vzeroall stos push push mov clc inc loope idivl xor inc out jae jecxz cwtl push mov sbb in and pop xchg jo (bad) notb xor daa repz lret adc movsb add and and add and je adc mov inc sbb pop xchg and es stc fwait enter mov js push and inc ljmp lods stc frstor mov jl pop idivb or push mov hlt out mov icebp cmc pop out xlat mov test sub lock loope int3 insl ret icebp sbb dec fwait in cs loope push mov arpl or lock lea pop inc scas mov sub mov mov mov dec ret int (bad) pusha push and add add add sbb adc testl out (bad) std addr16 sub (bad) push xchg sahf out insl jmp mov cltd jmp je sbb dec lret jp imul ret pusha mov fnstcw mov in dec jmp dec xor movsb aaa pop mov jmp sti inc dec movl pop xor test sub movsb push mov stc jbe movsl adc pop rorl xor scas and or lcall movsb out or jge and jbe add add add add inc iret adc call mov dec pop dec jg in xor ficomp sbb add sbb hlt jo lock sub (bad) or push push jbe cs fiadd inc push and aaa test xor jne dec jo mov add fadds dec loopne clc push sub and (bad) repz aam cmp xchg popf ret aas push jp push pop arpl adc mov mov push xchg push push jmp and imul mov (bad) adc movsl (bad) repz mov imul add add cltd out fstl stc je inc or cmp mov ljmp mov and mov mov out jp push add mov xor cmpsb popf in sbb movsb lret push ljmp stos outsl nop sbb outsl dec push and dec lret xchg push push scas pop out ljmp and add fisttpl (bad) les mov xor in mov leave jl daa dec inc or add fdiv cmp pop mov test pop push jle sub dec xchg div xor push (bad) xchg push add add add subb dec mov lds cmpsb push imul ljmp ret test xchg mov mov push xchg mov xor dec idiv sbb and rorb push sub (bad) jge adc fs ffreep (bad) loopne mov and addl add scas inc jle les mov icebp or lock xor mov or or (bad) mull pop lds pop xchg lret dec insl (bad) xlat xor push fsubrp sub jno xor and scas sahf pop and jae or cwtl (bad) adc jns adc mov cmp pop jl jno scas inc testl (bad) std ret add or jno xor aad jp test ljmp aad xor inc daa lock mov pusha test jbe idivb leave (bad) add mov add jae jle es mov in pop data16 fdivrl push sub adc shrl es cmp into (bad) ljmp add add add cmpsb (bad) mov movsl fidiv adc jbe loope in add xchg jge sub sbb in inc insb inc stc mov loopne je inc fisub sub in in into cmp movl (bad) mov (bad) cltd jmp dec mov in xor cld mov ss jo inc mov xchg add ficom gs push fadds push mov shrb fadd xchg repz fmull shr jae ficomp cmpsb (bad) insl adc lds (bad) dec add add add add stc sub (bad) hlt mov es push jg iret les popf mov in ss adc fidivr insl data16 imul xchg cmp jo sahf sub xchg push ret push jp xchg mov shrl pop test xor xchg xor out sub push xchg hlt dec fwait stos ljmp shr inc lea test sbb cld sbb sub stos jb inc dec in (bad) in add xchg mov xchg push mov jp xchg inc xchg insl ret cs orl enter add add or add pusha jl das cli pop fdiv int or loope push sti cmp lcall scas adc mov es sub mov out sub push adc rcrl push cmp jns icebp ficom test lahf sbb out fidivrl je ficomp push test stos movsb inc popa push movsb dec rcrl cltd sar cmp aas mov and dec getsec rcrb sub jmp mov fwait aad rolb (bad) icebp push xchg lcall js cmp add mov jo and mov add adc sahf scas insb inc push mov add jae ret push mov or push out and in and out mov cmp sub sbb inc xchg cmp rorl jne jge call add aam leave movsb test cmpsb lahf (bad) hlt insl push xor lret sti bound xor popa insl stos xor leave mov lods push popf lahf push jmp mov mov xchg (bad) out loop into sbb xor pop cltd pusha inc jne daa bnd add add add aam xchg adc aad cs (bad) sbb adc cwtl push stc push cmpsl enter or imul add cld cmp in pop repnz fisubr sar aaa dec sahf (bad) ljmp or mov add mov jecxz jo lahf adc sbbl fimul mov (bad) cmp std dec jb xor test adc and lds call pop pusha sbb or iret dec (bad) jnp pop fbld dec cmp adc inc inc dec inc dec repnz add add add pop dec cmpsl movsb sbb or lods mov cwtl (bad) fcompl mov xchg movsb ljmp mov ret dec orl xchg and pop mov fstpl insl pop lds push mov xchg mov mov lds jmp (bad) insb aad or (bad) leave scas test xchg fstps push pushf push cmp adc xor push adc mov imul dec arpl int jl pop (bad) popf pop cmp push or push (bad) mov push mov (bad) add pop stos lods movsl add add add or js push push gs aaa push (bad) test mov cmp push clc outsl inc mov cmpsb (bad) les sbb cmpsb bnd outsl push insb js mov bound ret mov and test repz outsl sub fadds dec xchg adc add jbe into es dec mov lret push sbb mov addl stc hlt (bad) cmp imul add and in aas inc inc lret or inc add xor add add add fistl lret ror repnz loop int3 xor imul jg dec leave fisubr mov and pop mov and mov lds mov push movsl test stos (bad) cmpsl das les sub scas mov fdivrs or fimul aas mov push aas add and push test mov insb mov (bad) (bad) rorb pop std in (bad) (bad) fildll call rcll xlat in loope insb notl xchg repz inc xor fdivrp call aas lcall addl or jg add add cmovbe mov push js enter loopne cmp pop sbb test jp scas jle xor jmp mov fild mov pop jecxz cmp inc push cmpsb lcall xchg push (bad) adc popf mov mov xchg lods js cmpsb mov test mov bound movd lds notl sub jp outsb loope shlb sub movsb in jge pop push gs inc mov out in sbb cmp mov xor dec fimul cmpsl popa jecxz mov add add add add lea cmp orb mov out scas dec testb mov mov mov pop push sbb add out pop fmull lock outsb lret mov leave popa dec loop jb mov out push cmc insb add mov or call jp pop push or fcmove mov push sub xor lods jbe cld jg jl xor mov push addr16 add fistpl jle sbb jb enter neg xchg xor daa in or lcall add add add sbb or sub mov jl sub stc loopne xchg jecxz loop clc mov call std push adc lcall push xor out addl pop xchg pop add cld inc insl ja push das lds popa pop jp mov daa (bad) cli sbb sub push in and adc mov stc icebp stos mov adc (bad) into mov push enter jecxz push mov jo out push add pop mov adc arpl in lret cld in adc add add add pop addr16 test add js pop lods lds dec stos mulb iret data16 sbbb es push xchg push mov mov sub lret or imul scas loope mov imul in enter xchg sbb nop pop sbb push xchg insb mov sub push and inc push insl scas scas les lret jae aaa push jb imull sbb outsb push fidivr js arpl mov xchg dec pop inc addb jns pop jo int3 xchg mov gs test add add add push xor sahf mov xchg pop cmp js or pop dec nop (bad) dec fbld sbb jbe xchg orl adc aaa movsb leave or addr16 in sbb sti fist bound nop xor push (bad) xchg into inc outsb leave (bad) data16 mov fisubl xor stos nop sbb sti dec mulb xor sbb adc add out mov ja fnop pusha clc mov loopne in dec jle push xchg enter inc movsl xchg int bound mov adc test rorl sbb lods ret test mov sub xchg movsl dec jmp lods xchg adc cwtl push mov dec repz mov aad pop cs inc divl bnd out mov inc add jg aad mov imul adc cs ret mov mov (bad) push add or cmp in push add mov xor cmp mov jge mov nop pop ret outsl inc sub cmp cs and jmp xor mov enter add add add add cmp or fwait das mov cltd aam pop mul cmovs loope sub xchg and cwtl jo cmp jle lea xor cmpsb xchg cld scas lock add nopl jp fnstcw and js sbb push ja (bad) into adc jg aam xor in push sarb popf stc (bad) xor push mov pop inc pop sub daa or aas ficom push pop aam in data16 flds add inc (bad) outsl push clc outsl mov mov dec xor dec aam push lahf repz aas mov add add mov push jl jae cmpsb pop jbe test add mov and mov and inc push or or push cld outsb cmp aas rorl rclb (bad) fldcw mov shrb push adc and gs loop aad enter push pop xor jne xchg or adc je jae mov in add movsl pop (bad) shl pop sub dec add jb loope pop pop xor sub push movsl xchg jae loope cmp ss movsl jbe add lea int mov dec stos in int bound dec sbbl test nop in imul push mov jnp jge mov dec and inc inc mov mov jp mov sbb push sub and inc or out jns or cmpsb fnstenv cmpsl push adc sahf pop mov mov and xor aaa fidivrl push inc xor xor jne loope mov pop mov cmp sub fsts pop mov mov lret xchg add add add es jmp in mov xchg push rcl mov xor dec in movsb outsb mov adc push jno test mov fs push (bad) repz adc imul mov loope cwtl outsl maxps and test andnps cmp call mov push les ss jl xchg mov and and pop or xchg (bad) jp pop outsb lea and decl lret mov or fisubrl scas pop push mov push add add mov dec out stos jl lahf mov andl or stos push push lret lds clc je or div shlb mov test cmp hlt (bad) sub fsubs push mov or imul or push mov repz ss push arpl out (bad) cmc imul mov sub push out sub pushf inc jge sub push adc clc push sahf jecxz jae dec hlt pop push lcall mov mov or (bad) loop sti movsb leave mov add add add xchg mov jmp sbb jno adc lock sub std fxtract sarl jge imul cmc pop lock pop adc into and mov cmpsb mov aas rolb (bad) repz fidivrl sub fidivrl mov stos mov jo adc decb dec push inc arpl mov add mov add sti (bad) pop inc xor imul xchg ret lea cmpsl sub rcr test inc or (bad) ret sub cli add add add add jp test int3 sub xchg mov imul mov xor fwait dec adc mov fidiv sbb jb je xchg push (bad) stc outsb pop dec hlt push jge add pop ds ja cmpsl and inc iret or out into mov ficompl (bad) (bad) (bad) je jge or cmpsl push enter push pop mov cltd jg jge xchg adc pop mov les iret loope inc out xchg cs mov sbb subl xchg ss lock inc sbb mov sbb fwait push pushf flds add add add or in cmc xor push and mov fcmovu xchg test xor aam cmpsl push addl iret js test jl aam std add xor pop aaa mov jns daa imul dec mov sub stc into ret pop (bad) jge mov xor fisttpll (bad) (bad) jns out pop fwait nop lret idiv orl pop sub mov mov jo jno stos loope lret adc pop mov mov or jns ret cmp aad lods (bad) nop inc mov ja (bad) push call mov add add add rol cltd lods cmc mov je push pop ficomp iret jmp out orl jne (bad) mov push call iret push mov push sar mov lret jg jne pop xor aad (bad) cmp ds or ret push repnz (bad) std or pop imul sbb lret test ss and test xor fstl shrl or mov xchg repnz ret push sbb data16 jb notl sti pop dec and lret (bad) mov xchg and sbb push add jne inc daa sbb ret (bad) stc (bad) mov dec fidivl testb inc int3 iret ljmp add mov push lret mov xchg mov cmp push stos hlt push mov push push in insl es fdivrs ljmp in xor bound xor mov sub ljmp pop push sbb fs xlat (bad) loopne stos in pop mov stos fstps ja (bad) or shl stos (bad) addr16 (bad) dec cmp (bad) pop push ret lods or xor adc jo mov jl andl xchg mov imul inc sbb xchg incb mov jmp jmp sbb sbb imul cmp push mov (bad) add pushf pop aam shrb jns pushf jne int3 js sbb xor cli add movsl mov mov imul (bad) or mov sbb mov clc stos lret hlt les mov add xor pop hlt pushf add add add sbb xchg xchg pop inc mov xor outsb push mov jge cwtl mov push mov add loop js call mov push cltd leave and fwait sub icebp (bad) mov xchg shll mov jns mov fwait lods mov pop cld repnz sbb mov mov dec retw or push test lock in std xor jecxz out mov push pop and xchg sar push adc add lret add add add shr jle mov in cltd jb xchg mov cmp sbb inc mov xchg fisub cmpsb xchg out cmp push pusha aam outsb inc aas out xlat add adc mov mov subb test or jg sbb pusha sti (bad) lcall mov loopne sub js cmp mov mov in jne xchg sub out test add stos aad jecxz push fs and push mov push dec cmp xchg je clc adc add add add orl fwait (bad) lret and fsts mov loope dec (bad) dec adc (bad) rcrl sbb pop pop adc daa arpl lds insl cmp out mov mov mov movsb aam leave pop insl cmpsb lea lods xor in not jecxz aam xlat fistpl aaa xchg aam xor aaa xchg jnp jno sub (bad) bound adc cmp dec push sub xchg pushf sbb xlat inc pop mov or xchg pop rorb cld xlat sub sti jo ja pop dec cmpsl jecxz (bad) addr16 pop push xchg mov cmp inc jg mov ss clc push int in dec out in xchg xor mov pop sbb nop xchg sub sub aaa sub cld je and add out ljmp stc aas mov fildll loopne push aaa lods xchg scas fimull loopne popf and push mov jne jns cmpb cwtl jg adc repz pop les insl mov and ja jp dec inc xchg add fs push mov mov cmpsl jne mov and stos push nop xor in push mov xchg mov mov and add add add popa ljmp add or mov lret js inc and stos (bad) xchg pop rclb mov leave scas dec sub mov mov push inc cmpsl cmp xchg rorl data16 or sbb fisubrl in jg mov pop and push xor and (bad) insb xchg sti in sub inc sbb cmp outsl or pop lock mov (bad) cltd inc ficomp (bad) push sub or imul call out cmp rclb push push imul sti mov clc shlb add add add lahf loop iret lods dec outsb xor in test sub xchg loope cmp test test xor mov stos hlt stos xor cs aam push (bad) jae pop insl jns pushf mov sub js (bad) dec faddl mov icebp jnp push sbb pop jle enter pop lods aam add jae movsb mov mov lods inc xor cmp pop popf cmp arpl cmp mov add ja sbb pop or out stos jg inc or xchg dec jle push dec mov loopne,pt test add add or push jecxz aam pop sbb jg notb int3 (bad) stc pop pop lahf inc mulb mov pusha cs sarb ds sbb or fnstenv add jo and mov xchg (bad) push mov out aam mov add mov inc fildl movsl xchg push fwait (bad) (bad) loope inc negl popf mov pop lea repz aam sub pop pusha lret push push lea push and int adc leave lret call sbb repnz pop das add add add cmpsb xorb xor addl pop mov sbb aaa xchg mov add mov add push jg jnp sbb fucom inc xchg add xlat or rcll mov mov or arpl test rorl (bad) pop lds adc clc cmpb pop xchg gs ret lret adcl or lods jecxz add out (bad) notl jg and cmp mov lcall jns cli add mov add jle popf jmp or sub mov adc jmp push cwtl arpl adcb out (bad) mov sbb xor mov mov int in lods mov inc and adc add mov scas cltd (bad) stc jnp xor imul sbb mov inc mov fnop loopne or push xor cmp rol jl jp inc dec test and cmp test dec call jbe inc mov sbb hlt inc jbe jne sbb add add add add mov out lods push loope mov test or imul into xor sub xchg dec push ljmp and push in xchg xchg lret and mov jmp add jo lds (bad) test out ret jne leave or jnp xchg and sbb jae insb fnstcw outsb ret sub mov cmpsb xor lods adc mov scas stos faddl imul cmp push push das test mov xchg inc pop shlb dec aaa mov xor ja add add add add pop cmp or scas icebp imul or xor sub lea into mov fldenv rol rcrb push push mov inc mov mov xchg loop aad xor out repnz stos xlat pop mov xor push aaa or in ror pop cmp mov mov inc lods mov push add push sub mov call ds js mov dec or ret jmp push xor add das or inc jecxz rclb xor add add add add sbb out out mov sbb ja mov or fildl mov decb data16 int sbb inc pushf push pop add enter xor (bad) sbb inc pushf dec sbb dec fdivrp sub sub aad xor jge stos dec je mov (bad) out (bad) aam out mov mov xor pop add nop push movsb jne pop inc inc pop xchg movsl adc divl mov lea aad ljmp mov repz dec mov icebp cmp (bad) imul add add lret mov cld shll xor popa cltd inc jg sub cmpsl dec add jns xlat (bad) int dec mov dec lret push xchg sti or sbb and sub sub push mov dec add inc leave enter xor cmp push sahf push call cwtl push cmp adc out out mov dec dec adc jne sbb cmp fisubrl add int3 cmp loop push int3 (bad) jg jecxz jno hlt lahf pop jae sbb dec iret out cmpsl daa xchg adc cltd inc adc mov add push sbb push sbb xor jl inc adc stc fadd (bad) push inc adc ret lds cli (bad) adc sarb fidivl xchg imul leave xchg nop mov arpl (bad) xor sti outsl ds movsb scas lahf lods cmp mov das xchg sbb loopne loop lock aam les xchg sahf sti ljmp in mov xor fisubl xor std and ret gs pop (bad) add icebp jmp sbb cs jp into int fucomp mov and xor add add in cmp inc lcall addb loope mov lock lods mov add mov adc push nop push add pop add inc push push mov dec xor pop lcall jno adc testb in push dec add or enter jmp negl and jns out or mov les jo dec xchg icebp jmp and fiadd call add fnstenv call mov (bad) stos mov pop in add lods pop xchg xor (bad) lret sbb add add subl or dec mov xor cli imul push movsb xchg scas pop xor mov xchg jecxz call mov add in sub out push test and pop js testb push (bad) into int pop arpl repnz xchg cmpsl arpl pop lcall push or or rolb sub xchg dec mov jmp jns cwtl mov xor xor fsubrp xor mov hlt jns out add pop ljmp add add je add adc addr16 in xchg cmp mov fldenv add inc insl jl imul pusha push jmp loopne fidivl jge pop mov shlb mov fisub push hlt ret ljmp test or push jne push pusha fsts mov test cli dec int xor cmp jbe lea insl gs mov push inc and fldl jle xor in testl int orl push pop notl dec add xchg sbb dec adc (bad) loope outsb pop es jle mov loop push shrb leave inc clc mov jbe sti lock pusha imul dec movsl aad lcall inc jo lcall push in arpl shrd xchg das sarl cmp push dec leave sbb xorl (bad) jp xor in mov cmpl aaa cmp push cmpl popf stc jmp mov cmp adc push xchg xchg ss pushf cmp push movsb stos popa and out repz xlat pop cli loop out imul mov lods lahf sarb daa mov (bad) (bad) push enter sub repnz jmp aaa fmulp or inc insl lret pop mov add sbb sub mov push cwtl icebp shrl push dec in cli leave js jb nop movsb les rcrl xchg cmp adc or sti rcll rolb data16 xchg out jbe jl shll je fdivr sub std lcall lahf push imul inc mov add rol xorl add pop pop lods jg xor inc adc iret xchg daa insl in push adc ret leave fwait cs xor and dec fs stc stos pop sar and xchg sub cli push fs sahf and (bad) sbb sbb out xchg je (bad) pop jg (bad) jbe push push pop inc ffree xorb lock dec push aaa std fildll test mov jge push rclb adc jmp data16 dec loopne sub dec scas fldenv pop inc popa inc push rcl dec mov inc dec gs cld jge xor stc jmp (bad) cmp aam add add add add ret jmp popa and pop rcr mov mov mov mov push cmp lret out adc sub mov iret jl xor pop add push dec cli xchg sbb imul xchg xor pusha mov aam jnp das and scas sbb addr16 stos jge sbb flds mov jl xchg push mov ljmp sbb fbstp jns add sbb mulps add cld pop sbb (bad) mov (bad) cmpsb cmpsb and (bad) mov pop fldcw add add add (bad) fisttpl nop xchg (bad) lds inc jg xor (bad) pop lock (bad) xor rcll add mov imul cld mov in mov lcall arpl out popa adc push es cli shll popf dec xor test push lahf xchg cld les sub push aaa xchg push cwtl mov push jae shrl imul pop jns xchg pop rep in mov shll pop mov pusha cmp xor aas sbb mov sti jp or test xor dec sbb repz xchg inc pop and lret test repz jno or aaa imul loope pop pop notb mov fcoms cmpsb cmpsb cmp and les repz clc movsl pop mov sahf push mov repz sub dec mov pop jbe pop lea push out mov pop sbb mov je lret out stc sub push imul mov sahf mov out ret (bad) (bad) xlat into add push pop nop push lods and sub jge xor insb xchg push inc cmp sar ret or leave fistpl add jno adc inc lcall mov in mov xlat mov (bad) cltd in lret xchg jne mov mov mov jo push push data16 mov pop push jo scas xchg xchg or jae pop or cmpsl push (bad) lds cs shrb add or (bad) repz cmp xor insl ljmp mov loop sub jb test push scas lods lods sti ja pop mull or add mov or jns ljmp sbb push aaa out sbb jns aaa lahf repz popa fsubrs xor cmp add enter adc sub add imul shlb test push mov add push sub and bound int3 (bad) ja jne xchg adcl daa ss sti push popa mov and inc cmp fmuls dec daa fisttpl jno loopne dec push sub or andb hlt lea mov stos dec fldcw dec cmp cwtl mov push jl ret push lcall mov rolb call add xchg dec add add add jo sub jecxz (bad) cmpb add mov stc (bad) lret negb pushf in enter sub sub (bad) shl es fmuls mov test rcrb scas mov cmp adc clc out push add mov or jae rep loopne xchg cli (bad) jae enter xlat imul aam mov pop mov mov pop pop mov stos jmp sub adc insb movsl daa je push jmp cmpsb push cmpsl sbb mov lahf aad and arpl add add add xchg test mov out xor gs lea lea lods xchg push lea (bad) jbe jl xchg xchg (bad) cmp sarl js mov bound ljmp xor aaa insb xchg lods sarb lret lcall or test xchg cli jbe out imul xlat mov out cmp cs std push call push and jne sahf call xor (bad) xchg push sub inc jmp test loop jle dec dec sub add aam pop pop adc ret test ja enter cmp aas test in mov dec call jo inc dec bound sub or not (bad) cs stc mov scas fbstp insl arpl mov add ja imul (bad) (bad) push push xorl mov int3 pop test mov inc scas fwait leave push fdivrp push inc push mov mov inc enter loope shll sub andl stc mov test sahf cmp cwtl pop testb mov addr16 fnstenv jbe cmp add adc mov movsl jo movsb ja jecxz push scas push pop push mov mov (bad) cmpsb pop xchg cmp aas pop test out test mov (bad) mov fsubrs popf mov scas sub and psrld lret fadds jns xchg inc aad mov out out push js add jp pop in jnp insl aas mov or push (bad) pushf mov sub inc fmull add pop ds and add xlat fistpll sub mov insb idivl cmp repnz mov add add add add stos in stos jbe adc popf imul and pop mov mov cmpsb sarb (bad) inc subb inc cmp adc pop mov pop or push call push data16 cltd ret add xor dec mov addr16 jg out insb mov xchg sub sbb fildl mov ja or sub add xor push mov mov jbe cmp fwait lock jo ret mov mov test roll add add add stos rcrl xchg (bad) lahf or sti mov mov sar cwtl shrb outsb pop insl sbb mov fcmovb inc pop ret lcall jp dec pop xlat and call cld test ret sub lea insb jmp cmp jns jmp jbe mov mov or sub or push jnp stos sub pop pop aas das lret pop out (bad) dec xchg imul ja pop in mov rorl push mov js push jae add add lret (bad) mov push rep out pop sbb xor popf es daa bound scas jle pusha sbb les jl lretw sbb loopne jg insl pop test int3 mov adc xchg xor cmp ret and jb (bad) mov les lock (bad) pop or gs xchg jmp xor pop add mov xchg pop mov lret hlt mov mov xchg dec inc cs sbb xchg out xchg popa add mov (bad) xor push dec int3 (bad) jge dec and in outsl inc xchg addr16 popf and and pop xor add add add add add and addb popf push dec sub les mov mov xlat test dec sbb and and shlb dec xor or dec mov mov leave cmp test push add xor cwtl push or cmp dec (bad) repnz mov pop pop cmp addr16 out stos jmp sub in icebp mov dec data16 fsub push pushf test jge hlt cmpsb nop dec ret xchg pop cld loop ret mov push add js outsl mov out rcr mov add add add inc stc mov popa cmpb and addr16 cltd add xor cltd push fwait jbe push repnz or js add or xor popa inc es ret js add xor push fistpl (bad) in push dec add cmp lods data16 (bad) lcall push adc add aas insl jecxz push mov dec jecxz je sub cmpsl adc mov xchg xor data16 arpl movsb insl xor pop mov aaa pop push aaa pushf hlt add scas or fildll es icebp add add add loop stos cmp arpl and and cmc dec lock scas or dec pop cmpsb imul mov popa mov pop test lods jns pop sub ret xchg ss add aaa ficom fiadd sub fdivp inc leave push xchg test (bad) in and sbb sbb in push mov or pushf int and mov mov add cld xchg pop out pusha mov sbb popl ficom jo mov ss (bad) pusha fs pushf out adc test push add cwtl jae pop iret sbb movsb cld movsb sub push popf mov ss push scas (bad) mov fdiv lret (bad) pop inc cmpl and (bad) mov jle sbb add or leave inc rclb push cwtl cltd or adc pop push fdivs or jae imul cmc or mov cmp add in lcall rcrb (bad) rcrb push jecxz faddp out pop adc sub neg mov pop cmp icebp (bad) push jbe outsb cmp inc pop lock xchg add xor add add loopne adc popf out mov push cwtl pop inc and jno fdivr add adc int3 push fdivs xlat add mov adc mov fisubrl jbe (bad) pop aas lsl fisubl gs jo or (bad) bound xchg sbb add loop pusha orb dec jg pcmpeqb stos pop test sub xor aaa add sbb iret cli xchg xor (bad) lock in arpl xor mov jns sbbl jne (bad) stos push push push mov push and and add add add add mov lcall pop nop int3 xchg movsl add sub ret jle stc lret mov outsb idivb jl (bad) dec mov adcb push xor ret out pop out push push lret outsb mov (bad) idivb fs or (bad) bound xor call jmp cs ret push push bound movsb xor mov and xor ss movb mov cs (bad) mov fwait test aad dec inc arpl outsl in popf xor mov cmpsl insl fisubrl add add or pop push movsl xor loop mov shl loope ret lret (bad) outsb mov popw movsl lret sar cmp sti add xchg mov add add mov or out cmpsb in pop mov lret into lret xor inc jns cmp cmpsl aaa pusha scas cmc dec into jnp xor scas sbb data16 call mov mov subl mov inc sub mov sti xor pushf mov popa aaa enter xchg xchg test jle outsb pop (bad) add add add (bad) incl cmpb jmp sub lock inc fnstenv testb imul lds cmp cmp data16 mov ret or (bad) and es dec stc jae push jbe inc lea mov (bad) xchg incl (bad) pop out insl negl imul mov xorl fwait sub movsb inc lds sbb (bad) lock ficompl add jno rcrl sub and cmpsb insl sbb (bad) call add add add fcomps jnp dec stos pop pop sub xchg lcall push (bad) lock jecxz int and cmp xchg mov pop mov inc jae or shll sbb and lcall dec out movsl sub mov jge sbb loopne mov and mov mov mov pop lds xlat xchg xchg popa jbe or push lea push push push xor pop xor ja pop jae mov pop or jg or or call aam push cltd addl add push jmp cmp sub inc pop jo push inc es out subl xchg push out paddsw mov dec inc iret add leave cmp sbb mov dec sbb (bad) ljmp call pop pop (bad) (bad) int3 cwtl cmp test and addr16 mov jb loopne push mov pushf jmp xor mov xchg std in jmp jg dec cmp hlt pop clc mov and push xor loope (bad) add jo cwtl lret (bad) jg pop ss add add add inc adc jge icebp js adc lock push movl and jne loope pop adc push fisubrl jmp rol fcoml xchg inc movsb pop adc out inc jno lret test mov dec (bad) cld mov pop in daa jmp xchg mov lea and movsb or pop pushf aad je xchg insb nop icebp rcr cmpsl push andl out add fmuls xchg scas mov loope push inc aad popa sbb pop into ret sub ja adcl mov and mov push add add add add das rol push push into or mov int sub movsb push add inc or lods outsb jp jle inc call (bad) cmp test les in rcl mov mov cld sub lcall pop (bad) gs adc mov pop sarl sub call lcall pop pushf pop push dec dec imul jg scas add mov xor call and mov push xchg xchg out lods jne cwtl pop inc dec sbb imul dec mov dec sbb jb xchg jge xor add add add add (bad) pusha repz into mov aad and xor repnz outsl icebp dec xchg cs push test icebp sti mov stos pop adcb and mov fadds popa xor sub dec insb push ret inc pop inc test out and aaa xor and fstps dec inc push negb out push notl subl stc cmc test mov dec rcrb fmuls sti rorb clc mov adc loop cmp (bad) (bad) cmp inc push loope mov (bad) xor jb faddp fchs rcrb mov add or or push sbb out nop scas dec fwait jno imul ljmp mov stc pop jl xchg push js scas cmpsl xlat push bound pop repz das repnz lcall insb int3 ds fcmovnb push clc xchg pop push adc xchg rcrl outsl clc movsb outsb (bad) add cmp pushfw in rcr xorl and addb sbb ja mov (bad) push or push in in mov addl inc fcom and jg (bad) mov cld aas arpl add add add add imul nop add cmp xchg shrb push jge insl sub push dec push pop cmpsl cltd dec xchg fsubrs ret cmc loopne fstp out in jnp imul orw js test xorl jb loope pop insb adc daa js movsb ror lahf push push inc cmp lahf mov shl jmp sbb cmp pop inc pusha pop mov pop mov repz cmp ljmp popf leave das imulb xor push stc cmp je xchg add fisubl add fidivrl mov sar loopne xor jno cmp aam addr16 push xchg testl dec scas out gs enter int or nop dec or jg int3 xchg daa das xchg cmp jns out insb pop in jbe sub xchg add in std movsl adc mov mov mov sbb cmp mov and xlat test in xchg sbb push add (bad) sbb lods insb jg push out fcomps cmp leave (bad) mov cwtl fistp in add (bad) mov add add add add test adc (bad) sub lea mov cs rorb jge outsl mov sub inc gs ljmp popa push cmp (bad) aas es (bad) negb test movups adc push mov push aaa inc in test sarl ss push push (bad) nop js call (bad) pop into (bad) sub into adc das mov cmp das sbb mov adcl aam aam nop mov xchg std add fcomp mov test pop jb sub mov push loope add lcall scas mov jb xchg mov pop dec out jg test mov les sbb insl jmp clc sub bnd add call mov dec jae fmuls and imul and mov and adcw (bad) loopne std sbb into loop enter in add mov lock hlt push adc inc and cli and push mov pop lods xchg sbb jmp in out enter mov sbb out out add add add pop andl cwtl sub jp xchg mov pop divb aaa or icebp push push push mov adc mov sbb pop shrl sub fidivrl out fmuls arpl ss inc mov fcompl inc fisttpll cmc add neg jns add out mov dec sub (bad) aad push pop insb scas cmp mov push sub add jmp test inc pop pop dec pop sbb mov lgs mov inc mov xchg jne or jg inc pop lcall int3 push ret cmp mov add add (bad) xchg jnp cmpsb in lahf cltd les roll hlt mov (bad) fdivrl and (bad) divl movsl inc stos pop xor out adc hlt idivb pop cs and dec (bad) sub push ljmp lea int3 daa repnz js loop pop jle,pt imul cmp jge mov jae pop pop push mov cmpsb or outsb fldz add mov mov mov push out fstl aaa and sbb sbb cmc scas push fsubrs sbb add add daa cmp mov (bad) outsb gs imulb shlb aas daa sahf stos int outsb out mov pop test mov loopne push add sbb pop lret jnp xor or in stos sub xchg adc mov sbb hlt cld inc fwait (bad) in sbb stos in (bad) (bad) cli jb (bad) fincstp ret mov dec or push pop push pushf test icebp xchg test rcll es xchg push and lods or and or adc (bad) or mov addl popf mov add mov cltd and in inc aad ds jecxz jecxz pop pop jno subl das mov xchg leave test es iret sbb cs je (bad) xor add mov call aam add or xor cmpl in cltd xchg mov mov lods enter addr16 test fcoms outsb inc pop pop mov imul jl cmp inc and mov mov fcmove outsb mov and add add add xor jg adc xchg clc (bad) push add sbb imull (bad) mov mov xlat leave add in test ret sbb mov adc push dec in rcrb jle daa jns dec into cmp (bad) int jecxz cmp andl and mov or sub push popf add pop in lds lods movsb dec inc out jo gs ss mov dec (bad) data16 and pop mov fbstp loop jne,pt addr16 xor stos (bad) mov or aam jnp fadds sub out add (bad) xchg add add add arpl (bad) sbb or mov (bad) cmpsl or lea cmpsl jp fldenv rcrl ret inc sti in xor dec and bound clc pop test pminsw out (bad) push adc dec dec repz repnz add cwtl or je loop adc sti mov stc imul nop in in dec inc fsubp ret add mov js xchg pop cwtl xchg pusha and lcall pop call xor xchg cmp scas sbb shrb xor add add add (bad) inc add jle pusha fwait gs mov cmpsl xor sbb mov imul or es cld fs sbb xor rcrl sub movsl jae mov push xor inc adc xor mov sbb dec xchg into lods cli pop addr16 movsb fs shll jne in out cmp jp aam jo mov and ja lods pop or es das inc andl xchg repz rolb add add fidivrl jb cs and mov orl fst or xchg and jg inc pusha loopne jbe inc imul ljmp les mov lds cmp mov jbe mov fucomip pop mov ja jg mov pop xor sub cs adc out test cmpsb in push cmp test inc dec or push cmp mov pop adc les xchg out mov test xchg call push lcall add xchg in mov mov xor mov fldcw divb pushf sahf stos test cmpsb mov mov or aaa adc xchg push or negl sub push push jecxz fdivs push mov popa (bad) xor pop rcrl aaa add inc and jo cmc fbstp inc push cmp lcall pusha arpl test inc stos jmp (bad) xchg mov xchg xor dec aam fdivl push ljmp mov inc xchg pop test and push and lret push or adc or loopne lods mov js imul jmp push call cwtl dec lcall mov ss dec mov and and mov arpl repnz enter dec lods inc das mov data16 sbb cmp int3 out in cmp sbb mov lret fnsave or inc fstps stos outsl in shrl pushf jnp out pop pop dec aad cmp loopew inc aaa fistpll mov or cmp pop jecxz jg mov stos jg adcb add add add pop pop leave xchg jmp stos (bad) pop out adc sub mov inc push pop fisubl dec mov push fnstsw push ret mov mov push das cwtd dec cmp push jb mov or mov cmp (bad) or (bad) out jge xor inc push test jo cmc xor xchg mov stos add mov lds out adc mov mov mov and push add push mov test push enter lock jbe dec imul enter add add add dec pop insb xchg outsl xchg mov mov xor movsb (bad) push aad mov mov bound mov sub rorl icebp cmpsl xchg jbe out push divl dec lods sbb xor sub push outsb pop gs repnz and pop jnp xchg in xor xchg mov outsl (bad) sbb xchg lock aam mov xchg xor xchg sub pop xchg mov mov push test movsl jno push hlt (bad) popa lea bound jae fwait add jo lds call mov sub rcr (bad) push pop mov xlat call xchg in inc or sbb mov jg mov mov inc lret sbb pop pop sub mov sarb mov dec fistl xchg cmp bound ds pop gs xor ds data16 cmp aad jnp movsl push cmp ret push inc rcrl push sbbb xchg and int rorb mov pop push inc outsb adc std xchg add add add cmp mov fwait push jg test mov das push mov stc jecxz loope iret jae sbb inc out (bad) xor xchg les inc out loopne call jns and shll in fcomp cmp loop inc inc nop idiv mov imul dec cwtl jl sbb cwtl fs cmp fmuls mov in xchg sbb xor lahf add iret cld fistpll push rcrl xchg jae pop sbb in and dec add add add add sti pop jne mov push (bad) (bad) je or in jecxz dec addl push aas cs call movb shlb sbb pop pop push xchg pop xchg jne mov sub xchg ljmp push int ljmp fcoml or cmp iret cld out sahf sbb (bad) fsubrs xor jecxz sbb sub sar and xor cmp aam jge and arpl sbb push or in pop roll (bad) dec jnp clc add scas scas dec inc fdiv call aam arpl pop mov sbb pop jl add loop test xor jbe push pop out and test mov xchg imul das jecxz int xor ljmp packuswb lods push je add cmp dec push in mov outsl adc pop lock jns pop lahf jl sti pop dec mov mov pop popa mov and mov std lahf sub xchg xchg inc aaa and rclb lock inc jns add dec and inc adc mov jge mov and (bad) out pop cmpsl cmp aad pop fistp xchg stos (bad) jns dec jmp mov mov adc imul pop cmp push or sbb jge icebp mov cmpsb cmc dec ja adc cltd xor xchg mov adc mov (bad) enter mov lock divl pushf mov aas sub jno das sbb pushf pop xchg pusha lock mov ja sbb mov out mov or dec add insl inc push inc (bad) sbb ljmp clc (bad) jmp pop jmp mov add fsubs sub and inc lods stos and loop cmpsl enter js (bad) push pop out cmp loope push lock push mov std jne mov test push sub cmp std (bad) adc stc mov fild xchg mov test roll push test xchg inc mov data16 je push arpl inc and adc push adc es xor pcmpgtb mov popf mov mov dec xlat add mov mov pop adc mov leave adc and xchg sbb xorb mov add push xor imul rorb insb out add in ljmp cli sar subb pop js imull (bad) sti adc rorb mov and mov cltd or aam cmp dec fldl mov mov xchg adc xchg out clc xor pop loop cli mov shr xchg pushl or stos cld xchg popf movl xor add add xchg sti inc fisubl cmp mul xchg (bad) mov insb push mov mov cld (bad) scas lret adc jnp lea addr16 sbb add push xor mov push or insb dec jmp cli xchg xor xor (bad) adc and jo push add sub push cmpsb mov fs cmpsb pop cmp sbbb and mov xchg negb pop xchg and lcall movsl pop aaa mov aaa cltd les out dec (bad) jnp popa pushf inc bound aaa bound and add add add add cmp cmp int3 addr16 push fidivrl mov mov imulb (bad) fidiv push jmp xor dec out pop pop xchg imul mov in push popa movsl outsl stc fadd sub inc jp lods sub push int fdivl cmp (bad) xor push xor sbb sbb inc adc lret mov jns adc xchg mov repz jecxz sub mov sub sbb adc mov push in (bad) cwtl mov mov roll mov (bad) sub iret inc add add add mov push das outsl and lcall xlat into movsl shrb sbb sub mul inc xor dec mov dec push bound and movb jg mov cmp mov rcll push mov cs mov inc push stos cmpsl sahf pop sbb sub jmp and adc loopne mov or ljmp add mov push fdivrs fsubrl pop mov shr lret and jo mov jno jle jns add (bad) int3 or add add add add (bad) jno fdivrs pop add dec jmp xor xor mov call aam imul pop jbe dec dec push cli cmp lahf xchg push inc pop pop pop hlt test jecxz cs mov mov ss mov sub jle rcrl or xor dec xor popf push (bad) inc pusha adc jecxz sbb cld sub div andl jmp jp pushf lock sub jmp fiadd cmp and shl addr16 int3 jnp lods and add add add stos sbb rclb add pop lahf adc mov jnp imul inc mov daa mov sub fwait pop xor jbe adc popa adc and js sub pop rep shlb (bad) push jb mov (bad) movsb push das ljmp pop (bad) jne push test into or pushf test inc fisub outsb push sbb cmp fadds dec and in fldenv loope inc mov jg xchg push mov add xor movsl das pop fs cltd add adc int jp fmull add xchg fadds (bad) or rorl test add cmp sub fisub mov cmp daa or xchg push imul jnp or mov or out push mov pop insl dec cli and (bad) jb mov mov fnop iret mov add jb aaa mov xor mov mov lods xor lea jb movsb (bad) pop out dec dec xchg push ljmp loopne xor cmpsl ljmp add add add jno clc dec js ret xchg jns push and out sbb loopne push dec in sub (bad) xchg imul scas cmp in mov rcrb loopne lds mov std icebp loope fs sub cmpsl in loopne hlt add into aas stos out into lret cltd and mov pop dec divb jbe adc cmpsl aam je outsb popf insl mov jae sahf lahf adc sub adc push dec mov adc icebp int imul sbb imul stos ja popa iret repz les shrl add cli into push (bad) cmc sbb cld add add add xchg insl (bad) xor inc xor clc adc lock and sub imul mov adc (bad) addl lea add into jb adc cs sbb mov mov das xor (bad) push mov gs shlb xor mov pop xchg xchg movsb fisubr inc imulb int3 fistpl push mov aas jae jnp lret in push aas in (bad) dec sbb push adc jg movsb movsl and popf in mov add add add rol dec pop add lret sbb sbb lock push adc pushf sbb lret mov push fadds and addr16 into vpackssdw pop xchg push pop jae cld xchg mov fstpl jge aaa nop stos adcl push or shlb jge cmp cmp test cmp and loop out test sub sub sarl mov dec xor dec cmp lods sub cwtl ret imul (bad) pop jge mov xchg subl pop mov or add add add adc or movsl lcall xor cmpsl and rclb call fiadd shll js sbb (bad) lods or xor shrb data16 mov movsl xor mov aam push jae jl pop push cmc jnp out or sbb icebp xor cmc adc jno mov int outsb test fldt cwtl aad mov sub (bad) cmp (bad) out dec and leave into (bad) cmpsb mov xor or xchg xor pop scas sbb cmp mov int enter add add add fs xchg mov lds add dec scas push aas lret inc stc cmpsb adc pusha addr16 sub push push and ficompl xchg inc (bad) dec cltd mov cmovp stos (bad) fidivl cwtl pop stos mov push xchg and adc cld sub arpl addr16 xor rcll pop stc test ret cmpsl jne aaa fwait inc cmp (bad) gs ret jecxz adc pop xor adc mov stc dec cmp popa cmpsb test jp out es lret add lret rcl and add add add add pop pop inc (bad) pop fcoms add jmp jmp mov leave ret xor inc out mov sti and daa mov (bad) sub xchg enter sarl dec ret adc mov mov and fisttp (bad) xlat (bad) pop mov add out add mov outsl call iret ret outsb and sbb orb mov stc mov mov fiaddl mov aam dec jbe cmp call popa add mov adc cwtl (bad) mov xchg push ja sbb mov or enter add sub add add xor jno es icebp repnz fs iret cwtl mov xor jns inc cmp lcall dec gs cli jg sbb insb or aas sub ja cmp sbb fwait push xor imul es lret xchg fisttp xchg xchg fxch repnz sub daa inc and fstpl pop mov movsb dec rorl add pop sub mov pop in mov (bad) jo push stos push cmpsb dec cmp add sbbl cltd inc mov test arpl lcall dec in imul add add add add jmp jo ja (bad) repz pop fwait lahf jns sar repnz (bad) jno add pop cmp or jb ret fwait jg push lcall loop mov ret imul pushf insl sbb sbb aam push add mov mov jge enter test adc loop mov sub lods cwtl ljmp stos and aad jg mov pop cmpsb das fsts aaa add leave test add aad xchg daa push imul fldl add add cmpsl mov pop jp mov push xor cmp jge add out fwait sub push sub cmc (bad) ss (bad) or test dec loop mov lret jg xchg (bad) in dec xchg lret ljmp ss aam popf jl xor inc sub sbb fildl lret aas movzbl mov dec fldt mov jb add xlat neg xor pop sub adc fcomps or dec les rcll repnz push es inc pusha out (bad) xchg mov and aas dec lock inc ss shlb stc cmp add call dec movsb xchg mov fnop jno (bad) repnz fld adc push and xchg dec push push gs mov mov loop nop stos fsubrl (bad) mov arpl jbe dec (bad) push mov lds inc push pop add dec rclb or fwait jmp mov test lods (bad) mov in inc rcr fdivrl mov aaa sub loop hlt and pop out mov icebp lret cmp shrl in add and push push icebp sbb inc imul lahf shll push jno gs push out call orl ret jge lahf rorl shld leave mov pcmpeqd xchg scas shrl mov sub cmovo arpl les push jl xor mov (bad) pushl mov gs sub add cmc test push push mov cmc aaa les pop movsl xchg mov xchg imul or into repz jne (bad) out mov add add add adcl xor fs (bad) push in dec sub (bad) add hlt jb jae or (bad) outsl lods shlb mov leave (bad) call jle sbb leave sub ljmp xor jne push adc pop into or dec or mov fsubr jno xor add (bad) (bad) decb sub fdivr cmp mov or ds jnp sub inc andb push push jae sub cmp imul iret mov xchg jp add add add fistp lea pusha sub push mov lds push in jae ret pop mov and inc mov cld sub gs lea xchg outsl cltd dec jl and xchg lcall jns cmp push fmulp fbld pop ss dec test sbb (bad) frstor shll jns,pn insb movsl push aam call mov jo adc mov sbb push and ret shrb inc scas cld jo cmp ljmp and mov mov test cli push sub add add add out dec iret (bad) fmulp outsb es (bad) cli rol adc clc insl or push xor jmp shr push scas js dec call lahf jp sbb xor mov in ret ds insl out ss mov xchg inc add mov dec mov cmpl pop shrb mov hlt jecxz or ret cld popf aas push pop es dec outsb sbb dec imul mov or pop lret push int fs push lock mov (bad) mov and jp js loopne fcoms add add andl insb push fidivl xchg mov lcall adc mov arpl test out out leave pusha lcall push and sub sti jb lods sarb leave insl add jne add gs adc or pop inc rorl xchg sub fsts or dec cmp mov pop mov adcb cmp lfs add mov dec insl arpl adc cltd pushf repz ror inc cs cmp aad sub jo cmp ret mov subl add add add push sar push mov dec jle cltd test je jmp in jl jmp (bad) (bad) mov jo in xorb cltd xchg aam aad mov add arpl jns pop xchg lcall mov pop daa adc jmp push rolb addl push dec sahf adc cwtl daa cwtl movsb dec aam inc xlat out xchg (bad) xor clc scas je aas inc (bad) (bad) fistl rcll inc sbb aam or outsb and pop add jp and adc sub enter repnz iret mov jge daa xchg xlat cmpsl dec cmp push push mov (bad) sti repnz xor xor lds mov sti sahf ja mov add dec mov or xchg mov fmull cmc (bad) fidivrl push mov jg push ret ljmp mov mov test dec rcrl inc mull or in in lahf or push outsb aam adc inc xor loop popa int mov inc mov xchg mov inc bound add test jg stos notl add loope sub out push call popf push push stos out rolb pop loope and cmp mov dec sbb imul mov repnz dec (bad) pop std call xchg sahf jmp jecxz sub out mov push loop pushl jb insl push jle inc call insl mov bts es mov bound arpl mov jae dec fs cmp push pushf daa adc call cmpsl stos inc pop icebp or roll mov inc outsl iret lock mov stos inc lcall mov inc xor xchg mov gs test cwtl dec notl ret xor int3 mov les mov out xchg out gs dec xor dec dec and into stos call addr16 mov mov cmp rcr int dec popa movsl movsb xchg jo pop sub add adc cltd mov and jg test (bad) aaa imul stos leave pop xor data16 lock rcrl jl fwait in iret test shr and scas mov sub insl jmp repz add add add add add sbb jmp sbb addr16 inc int jo pop idivl mov xlat stos (bad) in cmp adc in cmp cmp jne lock jecxz add jns clc imul stos mov dec aad and and inc xchg mov (bad) outsb xchg fisttpl xor mov xchg (bad) pusha push scas in nop mov rcr insl and into inc test into iret fcoms or mov jle dec dec aaa sar cltd ficoml cmpsb jbe adc inc add add add fcmovu jnp cmc iret mov cmp fwait popf sub jp pop inc jmp xchg sub icebp mov xchg popf jle pushf add repz leave jnp adc push data16 xchg dec mov sbb sub out pop aas ss pusha iret or int outsb call pop jp push mov popf out lods xchg sti sti test mov sub and outsl cwtl and out cmpsl in daa xor mov xchg cltd mov out mov (bad) or and adc ret frstor add add add add mov push jecxz mov popa jno mov xchg dec shrb fldcw push jbe sbb sti cmp push nop mov xor inc lods sub outsb fstl fdivs dec lret (bad) pushf cmp push out push outsb push mov inc popa imul (bad) (bad) test shlb into xor cmp push decb adc subl addr16 mov (bad) jae pop sahf lret hlt xor jae pop bswap add add cmp fs into lock mov push inc movntps dec aad mov add add add jae insb mov pop leave inc push mov test imul jne pushf (bad) cmp pushf icebp dec add add gs push imul or push cmpsb push iret (bad) jo out gs rcrl jo data16 push arpl sbb inc ds jo jno xlat xlat int addb jge mov adc push add lock fs xor aas inc frstor sti mov fidivr std pop popl hlt mov mov andl mov rclb cmp add add cmpsb aaa ljmp outsb aad or mov cmp pop aad mov lahf repnz push je dec repz arpl lods push fs call rcrl xchg inc fisub scas mov fdivrs leave xchg mov rcl inc addr16 xchg jne mov rcrl pop add cmp dec jb ja cltd (bad) jle addb jg xchg rcl test in fdivs dec mov shll sbb mov mov mov mov adc or ljmp add add add fldt mov data16 pusha inc add aas fnstsw mov xchg out xor cli daa das lahf mov sbb push aad cwtl lods xor lea xor sbb jmp loope jmp inc inc mov stos data16 lcall lret je xor imul fildl mov outsl mov test scas mov das sbb pop mov jg decl lods push mov cmpb dec test fsubrp pop nop outsb add add out pop cmpl test xorl add add add pop aas push push subl sub mov hlt add out xor sub lods hlt fsubs mov mov imul push sbb int xchg repnz adc fidivl push inc mov cld lret push push mov dec or sbb mov push ss dec ret xchg clc mov sbb or out ss insb xchg mov mov and adc js (bad) lahf add insl xchg leave push jnp (bad) adc mov add add add add add dec cmpsl cli insb lcall mov subb mov mov fisubl stos int3 jno add pop adc jbe sub jle add and negb adc (bad) iret out fisubrl jo pop pop sub mov add jns movsl xor bound xchg in or sbb fdivl gs xor out dec or stos mov mov or pop push xorl cltd push scas add xchg pusha mov aam std aad (bad) cld or sahf sbb mov and add add cmp rcll ja fistpl mov mov cmp push (bad) dec xchg pop push fnstsw xor in ja mov and push pop xrelease aaa ss pop sbb jmp in or sbb sti (bad) pushf in shll dec rcrb mov imul fiadd push cmp xchg pop movsb mov sbb fiadd or addr16 loope and jge fidivr xlat fimull leave sub loopne cmp mov addr16 dec or jb inc cmpl add pop lahf mov and loop jno lahf xchg dec ret addr16 sub out lret or adc xchg data16 mov aaa mov sbb (bad) lock pop dec mov movsb add sti sbb jo add es jmp in mov out push jns rorb call pop and ja (bad) xor jbe imul add stos mov sub shlb mov bound mov (bad) insl mov sub das iret fstps xchg loope sub pop sbb sbb cmp jb bndldx or inc dec add add add or or mov pop mov dec sub inc mov adc xor mov jns cmp outsb sbb jmp sbb popa jne jnp mov add nop jecxz sbb adc (bad) scas dec push dec sub jns xorl mov jl scas add outsb outsb jno mov addr16 sarl lds add pop movsl adc xorb or dec push loopne jmp int3 pushf dec pop cld pop ja outsl test mov loopne lock lret pmaddwd sahf jle call xchg add add sbb xchg or dec or outsl insl cmp sub jmp fdivr out hlt jo or mov pop mov addb test mov ret negb jmp fidivl cmp adc sbb jmp cmp cld into rcrb sbb subl jg out cmp fcoms xchg xchg aas test xchg repz and fisttpll cli and or cmp push push dec push pop or sub pop mov arpl rcrb inc xchg cmp cmp pushf popl add add add mov add insl sbb jg out add lock mov iret dec sub daa jae xchg pop (bad) pop mov fbstp into mov xor dec dec ficompl outsl jg rol add nop add push lods test (bad) leave push push jnp jns pop in int3 ja popa mov inc xor lret push ds sbb jge sub in mov js cmc push xchg mov gs mov and jb xor icebp cld sbb xor push repz mov and pop add call cmc dec cmp add sub xor pop (bad) cmp (bad) stos pop test inc xchg jle in adc xchg in pop xchg pop xchg ljmp movsl aas (bad) xor push movntq cmp jmp arpl call mov and (bad) data16 icebp sarl or out out and cltd loop jo out jecxz xor mov pop cmpsl xchg fistpll in fnstenv sbb mov incb insb adc mov jne pop outsl mulb insl (bad) cli repnz pop push mov add loopne xor js jecxz icebp out xchg repz jae (bad) jmp pop das sub mov jo xchg mov int fcomip jb mov and add xchg lret sti jno int inc out scas dec test mov dec xchg (bad) sti jl push bound or jmp or inc fbstp in jnp iret in add testl in daa pop pop mov dec sarb inc lcall adc ret inc lods pusha movsb repnz mov inc aam stc push int3 sub fwait cmp add add and enter jp (bad) jne jo in ret stos pop or shrb fcmove xlat inc jmp imul insl and adc mov pop test mov inc mov lods in lcall (bad) test bnd aas out pop js jne jle and cli fidivr mov and push jecxz xor mov mov cmp les mov jge pop notb rorl mov lods lock and ja cmp cmpsl jae dec dec sahf mov cld add push or jg add add add add cs outsl xchg sub mov xor adc mov cmpsl xor or jecxz das in pop mov jno mov and data16 mov sub arpl jns andl lds sub lcall movsl std fist inc jb into jmp push fldenv pop lods xchg cmpsb push das ja pusha das loopew out outsb insb js lahf sub out xlat movsb push xchg stc aam stos je xor faddl pop mov and jnp dec pop push outsb adc push loope in inc ss push or add add fdivrs sbb xor xchg and clc int out insb mov ljmp hlt int outsb in add pop loop scas fldt pushl and xchg dec mov (bad) out into jb mov push jl imul mov cs std (bad) popf mov pushf gs loopne nop jle sahf adc out mov cmp inc idivl cltd push std push das je mov or in jae jle sub push mov add add data16 pop sbb jg add add sub nop fwait mov scas push fs nop adc in adc fmuls pop (bad) or test ficompl mov inc sbb call mov (bad) mov test pop adc and test ja xchg xor cmp xor stos and ret iret js movsb mov mov mov hlt and cmpsb xchg popa push push lods xor jge dec daa jg mov popf pop out imul (bad) sub dec mov cli xor ret sbb add add add movsl jne cwtl lods adc fmull nop data16 loop aad dec pop xor inc rcrl mov aam int (bad) xchg jecxz jnp and outsl aad xor into adc repnz insb jo (bad) aad iret lret leavew lods mov out push dec cli sahf mov inc or sub std xchg pop jns mov in inc cwtl movsl dec sbbl xchg js add xchg inc mov xchg mov ss ss aas mov add outsb aaa movsb jecxz pop leave or loop das mov clc mov sbb add add add add dec stc popf sbb mov cmpsb or mov daa in test in imul pushf dec sub pop push call pop call mov push jae and xchg popf mov scas pop aad mov mov lcall mov loopne and lret lret xor push lret lret test xchg loope mov fistpl push mov lods test adc sub mov roll jl adc (bad) mov sbb add int inc add outsl cmp enter add jp jo jp loope sub push and lahf in mov out lret jne jge fldcw mov xor stos lock iret and lods mov cmp insb mul imul push jbe mov cmc mov por in adc jbe clc aas jecxz adc mov sub js adc pop mov xor jmp pop mov imul repnz jg,pt pop push or mov fwait or push (bad) sarl xor (bad) push add add add add mov imul xchg fld jno iret and fisttp pop cli lcall push jns push fiaddl adc inc or pop das mov mov push and jo rcrl jnp fimull sub mov pop or out fsubrl pop arpl data16 bound aas mov push push mov lds test mov int3 xchg sub fisub jne and mov sub xchg movsl mov aas and and fisubr jnp xlat rol ja xor mov or fisub add scas pushf loope push mov add add add mov push (bad) daa in mov or fcoml jp ljmp sbbl in xor mov xchg push add xchg out sub push mull addr16 xchg lret push icebp jnp pop dec jo xchg into sahf call mov into fnstsw jge mov test es iret xor cmc inc pop jmp sub mov out in or and push lea adc js jge mov (bad) repz sub xor add add add mov jp dec push mov dec pop std scas jae shll int3 xchg and adc das test pop lcall add jge xor dec mov dec sbb mull xor icebp adc jnp sbb push inc jecxz xchg iret shr dec jmp pop dec xchg rorb jl,pn (bad) jae dec in pop and mov add sub test stos mov out cmc fildll mov push inc or pop out das inc push insb dec push stos xor cltd or sbb pop add add add add cmp test add sbb mov cltd notb dec scas bound test pushf xchg sbb bound jg adc mov mov fnstenv imul inc xchg loop inc movsb ficom push stc hlt rcrb stos test fs sub nop dec imul clc in xor aam lahf jl fwait repnz pop mov (bad) nop pop ja pop push ficom inc jne push into js and fnstenv sbb icebp mov cli fstpt mov sub pop add jp xchg in dec jno mov cld ret xchg movsl in sub (bad) pop (bad) ss lcall (bad) jne or mov pop mov mov xchg push fmuls in aad daa cmp lret cmp sbb stos pop ret pop inc pop inc push dec mov (bad) dec int fiaddl sub pop xchg lods mov adc outsb ret in pop (bad) or or and les push add adc out pop iret popa repnz popa ljmp sbb mov loopne lahf daa lahf mov div add add add add xor cmpb fiadd cmp arpl pop cs dec push push aas outsl test inc mov call aaa (bad) ficomp fs inc and jae lcall sbb inc pop cltd pop nop (bad) iret pop or push dec pop into mov pushf jnp or mov fldcw or into lock out dec rep jbe xchg ret jg cltd sbb add push je inc or clc jbe push incb ds (bad) int3 repnz cmpsb pushf push mov mov out jb stc ss out add data16 adc sbb ljmp mov push lcall lret xor (bad) ficompl xorb lea fldl xchg mov fcoml push cmpl sbb adc sbb daa jbe hlt data16 cmp pop rcrb popa rcrb sarl fcoms int3 push lahf push inc push push imul fnstenv popa lret dec popf flds adc clc decl in jae les inc nop call add add add add xchg sbb fsubs mov xchg nop xor adc jmp stos das sbb repz pushf mov (bad) std out (bad) xor mov inc sub sbb push mul xchg xor adc add xor rolb xor mov cld pushf sbb pop call subl inc rolb push stos pop pop mov lret rol lret sbb movsb sub sbb jmp xor repnz arpl xchg add stc mov and add add add add push add pop nop xor xchg inc insl aaa les push adc jmp sub xchg (bad) int3 dec sbb xchg sub or mov rorl or fstpl push fiadd hlt add sub loop cli push inc mov pusha cmpsl test push adc movsl addr16 leave jbe push and push (bad) fs adc and dec addl lods xchg inc jle mov fiaddl push divl adc push cmp mov adc fidivrl cmpsb (bad) out sub add mov xchg mov pop pushf scas pushf pop or lods mov pop (bad) adc mov sbb lea iret pop icebp hlt sti and arpl movsb in rorl ret mov lret and aas ljmp and hlt incb dec popa movsl ret lret icebp mulb repnz out cmp mov xor inc fcomps push mov jmp out loopne addr16 imul loope in pop sbb dec outsl test sbb adc (bad) mov flds test sarl cmpsb loop jae add add add adc mov jge repz mov jae lret dec aam in and repz add add insl cmp mov leave repz dec je xor or js pop sbb mov (bad) xor pop xchg inc dec mov cmp fimull xchg push pop roll cs cmpsl test sbb ljmp scas into xchg jecxz in cmp push imul movsl mov mov sub fcompl push into ds insl mov cmc jne mov push cmp lods fsub add add add add movmskps pop pop lds pop xchg cs mov mov inc popf pop pop mov data16 mov enter mov mov pop into ja,pn cmp jl in pop sbb dec test cmp rorl cwtl cmpsb shrb (bad) xor mov xchg pop and add cltd out sbb (bad) pushf xor and push nop jmp push (bad) sbb enter mov outsl imul jge pop fbstp dec ds icebp or pop xchg jge popa ss ljmp jmp xor les (bad) (bad) rclb xchg fadd aad sti cmp fst aam cltd lret ds ret jno imul arpl cwtl das jnp xchg enter aaa inc cld push add adcb push ja dec jno iret or fild imulb add pop (bad) dec push add imul and push (bad) cmp insl test push fldcw sbb fmul daa and shl and cmpsb add repz mov lret loopne sbbl (bad) xlat mov mov repnz ljmp mov and add add add add jno shll icebp bound mov dec jnp pop lcall and and add popa pop pushf xchg loopne mov or and ds fucomip dec fstl add cmpsl lods jae arpl adc add dec cmpsl cwtl daa notb sub xor lret cmp in clc or jb loopne dec inc lret das dec gs xlat pop popa xchg jns inc mov sbb es sbb jecxz dec bound dec mov repz sub std rcl adc sub (bad) fdiv sub (bad) mov repz roll pop cmpb xor dec mov adc jecxz ret add sub clc call hlt mov sti jae inc xchg nop testb push jne mov mov inc inc xchg std fsubrp rep inc and add jbe daa mov and pushl inc add and ds lret shl mov cmp jl push int3 cmpsb (bad) outsl jns mov repz lock sbb dec aam mov add add fldenv inc inc or mov pop mov pushf jns sbb cmp mov dec xor sbb fs xchg test fmul jno cmc flds outsl mov fsubp sbb inc mov sub adc das inc mov xor adcl adc sub push inc dec out mov pop sti rcrl jge in adc leave jecxz addl inc outsl ljmp jne popf jb lret scas fisubr cmpsb std nop mov and add std sahf dec popf jg jo cmc sbb inc popa dec add add add popa mov or mov pop or js sahf jb insl jl sbb xorl fs cmp ss cmp jl das out popa ret aaa je jle or sub add stc push out mov xchg ret lret (bad) cmpsl cmp and fcompl xchg mov sbb sahf outsb add pushf jmp sub adc repz fsts shrl test jg fwait mov and or test adc mov stc jmp aad loope mov jle jg mov ja and add add add add scas mov ds je or xchg jecxz push push jl inc inc rcr cmc gs adc push lea mov leave cli xchg mov ljmp add js mov iret imull jle mov sahf js add mov roll cmp push pop cmpsl js mov sub jmp xor sbb cmp sbb add iret mov pop shll adc dec push push mov mov in push cs xchg push roll or xlat xor xchg (bad) fdivs lret sbb cmpsl inc pop and adc sub jp xchg dec jns dec inc mov das push mov push jb mov push fs or add scas jmp push imull inc push int3 push sub hlt insl cli mov les sub dec sbb (bad) (bad) lcall xchg inc (bad) ficom cwtl mov (bad) jno xchg or scas mov sub mov ss add ret pop cltd fsubs (bad) enter jb ficoml or iret dec aas aaa enter jecxz lcall add add push inc add and sarl cmp xlat mov out addr16 or sub test divb mov sbb xchg mov cmp inc loope gs test and es mov jle cmp lret mov test dec mov add aam mov and jnp movsl add iret inc test test stos movsb in adc cld ret xchg inc lahf xor sbb mov cltd pop (bad) cmp jno in in sbb or pop jg popa ret lret daa dec dec mov enter add add add add adc cmpsl ds inc push js lock enter jmp inc pop add (bad) es out outsl dec outsl mov xor mov adc and movsb out out aam jecxz mov jno das inc cs mov (bad) mov inc jno and ds mov cmp outsl int mov fildl sbb movsb (bad) or push aam and xor daa test test inc out outsl sub add (bad) mov mov fistpl shrl fdivs and dec add ss jp scas icebp out adc lock pop movsl es push popa lret xor lret test test (bad) or pop rorl xor ljmp inc je push mov pop inc imul das dec sahf test and inc loop fidivl clc test xor cwtl mov loopne jnp lds push out push out jmp fmul mov clc decl add into in and ret or xchg aaa in flds dec int sahf cs mov xorl inc lods int3 add insl lret or call add pop cwtl mov push pusha inc or ret sti mov insl js ja (bad) je fstl fstl inc aad sub mov (bad) dec dec rorb enter pop (bad) ror dec jae rolb test mov int3 sub fisub inc out (bad) pop cmp or rclb loop (bad) test sahf push mov push mov ja push sub (bad) jo sbb movaps jne jmp add add add das loope pop xlat imul cs mov mov stos dec (bad) cld jns jl outsb ss xor cli push mov push jg mov cld mov clc test int pop ficoml sub fisttpll loopne inc outsl mov cltd mov (bad) jo add jne fild push aaa call je adc lret push out cmp leave or mov loop dec sub push sbb jg pmullw lods fistpll ficoml pop cmp ret iret cmpsb fldl add add add xchg and lret mov pushf push xor and test fild dec push inc and inc dec test (bad) icebp repz test xchg cltd fnsave jbe mov gs cmp outsb ret or xlat hlt test cmp add or dec mov outsl sbb mov pop mov xlat dec imul es shll (bad) cmp cmp and cmp and cld adc mov nop popf insb clc loopne xor cmpsb daa cmc jbe mov data16 (bad) sub mov stos imul add add andb (bad) push xchg pop xor les lahf (bad) (bad) iret jg out xchg or cltd cmp push cmpsl inc jnp pop sbb mov (bad) repnz lods rclb dec shr int3 xchg push mov jno mov adc stos mov cmp pmaxsw (bad) mov and xchg loopne insl fadds cmp inc movsl pop loopw mov pushl lea cltd cmp add inc pop aaa addr16 out les mov in loop xchg stc movsl fcom movsl mov dec mov sti pop (bad) fs xchg sbb scas fdivl dec push inc jge inc aas xchg sbb lods fldt cwtl movl cmp cld inc rcrl das mov mov out enter inc add bound ljmp ds inc lea and jbe xor outsb call arpl js mov or popf cmpsl xchg or in lock inc ror adc fld call (bad) mov push ret fisubr mov cli out ret enter pop in xchg icebp insb sbb lea hlt enter add add add ficom das imul ret gs fldcw xchg cli idivb jge dec ja ret (bad) outsl inc cld call mov cmpsb mov test ficom mov sub stos imul insl cltd dec mov icebp les cmpsl mov (bad) shl mov mov hlt sbb roll incb push pushf mov push dec cmp decb jle inc lock icebp sbb push in movsl rol ror pop push pop mov ret arpl aas les push data16 add add add add xchg fdivrs sub not inc ret and mov addr16 sti js pop xor push jge aam (bad) cmp bound cmp sbb xchg movsl psubusb loop cmp jne rolb xchg nopl cmp xor pop lcall leave or pop sbb mov aam addl daa or cwtl xor das mov sbb out std mov inc jns inc aaa mov jae cmp sub push idiv in add add add dec movsb shrb mov lea loop add mov adc movl out (bad) cld xchg jmp adc repnz stc hlt loop mov sub ret push or clc stos dec xor call insl test sarb inc push mov loop xchg jns (bad) out cmpb mov pop sbb xchg push fimul jge fisttp cmp imul lret out cmpsl iret adc stos adc (bad) push inc xchg das scas lret adc dec mov sub adc and add add add or (bad) (bad) and xchg mov fs sbb mov fist adc xor mov inc lds (bad) cs and inc in mov adc and mov stc or std lods mov imul sub jg xchg xlat scas data16 in sub imul pop xchg pushf pop out or and mov cmc mov js arpl pavgw (bad) mov jp push (bad) xor insb sahf sbb scas cmpsl adc jns mov mov xlat inc add add add add call dec into sti dec or and aam and mov inc add push xchg test das dec ja sbb arpl pop xor popa push xor xchg (bad) test sbb clc mov ja adc (bad) mov faddl outsb xchg ror mov addr16 in fnop shrb movsb ja adc xor in cwtl mov mov mov lahf xchg inc aas pop lods cwtl mov (bad) jbe rcrl add jecxz fwait xchg or test insl test mov jbe adc add add add test movsl mov aad cmpl outsb arpl pop (bad) push mov pop cld scas loope inc xchg inc pop clc and ret mov inc adc insl cli pop cmp outsl (bad) iret aad imul cltd mov les imul mov xchg jge ficompl stc mov (bad) mov mov scas and cmpsl lret test outsb sub mov or mov bnd stos mov mov sbb in loop pop mov push mov xor outsl stos mov push add add add hlt add jle mov shlb movsb sarl xchg js or aas push inc mov sub push mov mov jbe out fmull test jns sbb or lret xor das mov aaa push ds mov fs pop or test insl or loopne stos mov int3 mov jle pusha pushf inc xor xor dec pushf xor out mov repz lret mov mov cmp push loop test hlt test (bad) jo daa sbb clc movsl jmp and add add add mov add pop call inc lret imul icebp mov rorl outsl dec or pop adc nop (bad) sbb dec jecxz ret popf ja push sub push je mov push inc fstl mov lea cmp sarl adc lcall adc sbb jo mov and iret or les inc mov lret dec in dec cltd mov jne push jnp adc or divb mov xchg popf pop aad xor rclb pusha push jb fwait or loopne and cwtl mov add add add add push jo inc lea insl pop bound ljmp insb mov inc jge fiadd test hlt adc (bad) xlat xchg lock pop das enter pushf shlb loop mov push pop (bad) data16 je call test xor fstp xchg data16 and push mov pop (bad) (bad) cltd es (bad) insl lcall (bad) mov inc test fidivr add idivl xor ds xlat inc loop test adc rol lea xchg xlat dec into add pop xor (bad) cmpsl xchg dec dec jno,pn add add add add loopne push je add add or (bad) dec cmp mov push inc adc inc sub je xchg call lock shrl xchg xor pop sub nop add mov cld fisttpl das cmp mov mov and pop inc (bad) setbe inc sbb daa in mov mov adc aad sub fldl2e ds (bad) es outsb fmuls lea shll aas ja movsb pushf adc adc scas mov xor movsb jne pop stos rolb xor lock cltd jle or add add add and dec inc arpl or jle insl (bad) and add outsl mov pop cmp mov scas decl mov pop mov mov insb repnz int3 ds ds imul stc mov jecxz inc xor or sub test jle std lahf cmpsb in add mov lret lods xor lahf (bad) gs in or and rorb rcr xor int jmp icebp cmp test gs pop std outsl lret repnz es add add add add dec push (bad) fnsave jecxz leave repnz rorb in clc mov in jno lret push test in lock sbb xchg jg out jbe sarl dec subb jecxz fprem1 nop xchg mov mov je xchg push outsb adc iret (bad) fwait cmc and and or jmp bound pop push pushf cld repz outsl mov (bad) out xchg xor sbb mov mov xchg dec (bad) push pusha ja shl jns out or mov int mov je inc dec out rcrl jp imul aas and jne sbb xchg and andb inc xor sbb repnz pop sbbb insl fidivr mov push mov idiv mov cmp iret int fs aam jg add fwait xor jle stc xchg js cmp sbb dec das dec cmp mov jbe pusha xor popf dec cltd test movsl fdivrs xor stos sbb xchg adcl jp cmp jmp dec (bad) add or sub in into nop mov insl adc dec adc add add add adc and lea (bad) sti sbb dec jo add inc lcall sbb in or loopne adc clc fcomp pop imul mov jl pop add cli dec in cli flds jns push mov ds outsb lods jns mov out add push stc mov sub add pop mov push imul sbb mov xor pop cmpsb xchg std add cs push mov insb pop stos dec mov and add add mov movsb cmpsb je mov cli and mov add test and in or and fstps sub movsl sbb les out inc pop mov outsb pop pop cmpsl xchg push fs dec add aad test loope push xchg and cmp push xor jecxz add addr16 test inc inc shr pop movsl cmp in inc xor jno xchg enter xlat aam or mov add mov mov aad sub and lock bound cmc push aad aaa arpl xchg rcrb add decb mov dec pusha imul cmpsl lret hlt stc imul jecxz cltd jge outsb add mov scas jmp mov pop pop xorl jge jns ss add dec cmp mov out cli imul push mov std in mov inc psraw pcmpeqb mov cli cmp int imul sub xchg cmpsb jae call adc aam sub ss push ss mov test pop mov mov dec xchg inc adc add add add add add aas insl xchg mov jne and xchg hlt add movsl fisttp lret addb adc sbb xor push repnz pop cs insl movsb mov push mov sti mov imull (bad) push (bad) mov inc fcoms inc (bad) mov sbb scas sub push jmp ss push push rep es and test mov fimul lock loopne and xchg out test (bad) sub jnp,pn jp enterw scas jmp (bad) dec gs add add dec lods inc dec xchg and data16 mov notl or mov scas ja mov mov aas jo lret sub (bad) pusha js mov mov mov and sbb cmp data16 or jno jp inc inc pop fisubl mov fsubrs pop pop fistpll popf mov pushl adc pop in arpl lods jg ljmp pop mov or int lods cli add sub fdivs inc movhps push adc lret or divl sti dec cli mov add loope jb xchg mov inc loope test inc mov and sbb mov sarb loop pop aad mov adc out adc jne popf clc fidivl lods inc or lods jle sahf adc xor add data16 jbe mov insb lret into imul push in sbb push xor rcl fidivr les xchg add dec jl adc xchg xchg mov cmpsl iret pop lods inc arpl mov cmpsb enter pop inc add add add add into adc push and insb adc or and push pop js fimull mov (bad) cmpsl or in std sarb fdivs xor lcall pop daa xchg mov icebp xor sbb leave xchg stos inc fwait test mov mov jmp cmp and sbb pushf mov cmpsb lods xchg adc mov das imul pop adc es fdivrl syscall cmpsl negb loopne aad cmpsb insb mov push push js jp or sbb or add add add add jmp pop cmpsb imul iret (bad) test sbb loope jns mov jb adc imul sub dec outsl or out ret enter test xlat jge nop xor gs icebp cltd pop or push (bad) fnop push mov ds pop cltd roll ljmp sub rorb and daa push and jge sahf sbb xchg sarb sahf int3 sbb jmp adc jbe mov out and mov test push sar sub xor sub mov add mov mov or and pop std shlb mov add scas add in bound jno imul mov addb xchg jnp int3 fisubrl pop ss xlat sub bound mulb pop fnstenv dec movsl dec lock icebp cmp mov out mov outsb (bad) jmp stos pop xchg addl lods or pusha mov andl adc cmpsb lods je xchg adc jno or add add add jae xlat repz push insb imul jns or mov lock lock mov lret jno in jno and rol outsl fstps ret daa lret inc ljmp into xor fs mov xor and or or aaa popa sti xchg sar pop sbb mov mov repz adc jb mov add lcall cwtl jmp or ds loopne dec (bad) (bad) xor jg mov jp jle jno add add add add or adc jae ret cmp lcall xor lds in insl cld mov (bad) mov adc pusha and sahf or cld int mov scas or enter out pop idiv xor insl inc dec orb mov loope repnz mov cmp mov mov (bad) mov imul scas sti insl cmp xchg jmp add and inc sub out push jbe sub jmp cmp fisub sub xchg cmp test outsb mov pusha push xchg jge (bad) mov xor int3 jle push jns out or je jo imul and rcll mov mov mov bound xchg dec popl lahf xchg adc xor shrl sahf push pop add and repz insb inc push repnz popf ss fcom fidiv or sar mov pop call mov xor xorl js mov sub and pop cmc mov adc mov enter push pop or cmp ljmp add add dec inc pop mov xlat push mov outsb popf sub arpl sbb fisttp mov cmpsb mov fadds push jg pop xchg xor lahf xchg ret pusha jae loop and xchg int3 cwtl dec mov sub out sarb pop out inc mov in les xor mov push ja jg nop inc jne mov xchg lock popf fldenv fnstcw or (bad) xor ret insb stc es jne jns or pop in inc inc addr16 clc adc pop pop test pop push cltd das (bad) ffreep addb add add stos pop adc addl mov mov fs rcrb nop scas or cmpsb dec aas or pop in mov insb repz jb test sbb dec cltd mov mov fiadd cmpsl mov test flds ret push pop fild insb jp in test int3 (bad) mov in divl jge cli jo mov dec adc push sbb test mov data16 ret out xchg xchg hlt cmp push inc xchg dec mov xchg cmp cmp add add add add cmp inc pop mov test sub daa jge push stc ficomp negl push mov (bad) sub push pushw lret add push xchg add (bad) adcl fildll pop push fwait add sbb gs fdivr fcoms loop rol aas cmp stc cs dec sbbb movl pop int sbb pop sub (bad) xor xor cmp mov push cmp (bad) stc and mov push enter mov lcall xor cmp cld mov pop xor xchg jl push mov xlat orb ss addr16 std (bad) push mov or faddl jbe rcrb inc divl sub imul in jae inc rolb repnz (bad) mov lods mov mov (bad) jmp sbb inc and mov cmpsb xor mov add push push hlt dec and loopne cmp mov mov data16 dec jl nop cmpsl in sub mov out push cmp jecxz data16 xchg xor scas and xor jecxz (bad) movl add add rcrb ret inc xchg jg iret xchg cmp cld xor call mov int3 int call or inc cmpsl push in adcl hlt mov shlb jne pop pop jnp (bad) jo mov repnz dec fstpl sub data16 mov dec dec arpl or es pop add push outsl in sbb insb out rcrl dec sbb pushl ret sub rolb ret (bad) xor or add add add add cld sub xor push mov (bad) xor adc sbb xchg sbb hlt fadds sti nop arpl addb dec dec jbe rorl movsb fwait pop (bad) dec mov mov cmpsl lret leave or dec dec dec das arpl movsl stos mov ret sub insb lea cmpsb iret sbb fcomi cmpl xchg dec lcall pop (bad) in insb cmp ljmp (bad) dec push add pop sbb xchg lods in in cmp inc sub je repnz hlt and outsl sub mov pop (bad) (bad) daa mov sbb add add jno jge lret mov or outsb sqrtps push dec out mov mov (bad) cmp es xchg push (bad) push and sarb jo xchg sub (bad) xor xchg xchg call cmp adc imul out (bad) fcmovb ljmp ljmp dec rorl mov mov je jo mov jmp xchg outsl xor inc popa push rcrl inc icebp fbstp dec and jno pusha push ret mov ret (bad) repnz gs scas ss test add add jmp add jne fs movsb add lret mov or jge lcall mov or (bad) mov lret or jno xorb pusha lret jns jmp hlt xor adc and mov sarl mov fbld push (bad) pop push stos or add sub hlt dec sub mov stc push imul in add xor out stc dec mov adc push fst jp and insl mov dec jo push add add add adc push insb aas mov adc or out and jo cmpl in (bad) (bad) cmc push and aad loop lcall sbbl nop call mov fisubrl inc push jg pop (bad) dec dec push lea jle sbb mov fnsave adc decb inc sbb jmp jbe out into lea add or cld pop mov fscale roll fistpl mov adc imul int3 adc sub (bad) aaa xchg pop add add add add xor jl xchg sbb jp cwtl gs push jnp mov dec aaa sahf jecxz insl aaa loop ljmp (bad) mov nop movsl add decl cmc pop cmp stos jnp inc sti xchg mov add sbbl dec push cld adc insb gs daa sbb stos mov std xor pop scas jbe cmc ret cld adc adc aas loop mov inc fcomi or js jo cmp iret in in daa inc ficomp xchg std js incl push and dec loop push outsb xor mov imul add add add add out push ljmp and fdivs mov cmp sti pushf flds loop inc dec sahf and popa pop cmp lods jl (bad) mov cli dec pop push paddusb jno dec icebp test clc jne jae mulb shlb xlat add cmp lahf sub cmpsl xor adc je pop mov push add stos lret mov rol xchg pop xchg mov or cmp sbb push mov sub mov out pop fsts cli jno fadds add add add push lods pop insl (bad) cld pop sub test in imul dec pop lret rol dec cmp movsb sbb mov or jns das int inc outsb cmc mov dec iret test cltd adc jno js ret jg inc dec cmpsl sub enter call sbb adc sahf cmp movsb scas or dec cs popa int3 mov in cmp xor js xchg xchg and aam sbb jle xchg push xorb jle push std outsl cmp aam cli call mov test ret clc fbld mov adc xchg stc in outsb jmp pop and mulb hlt fdivl inc stc sbb iret lret xor sub call xor inc clc and xchg loop or stc stos mov fwait add roll out fstps (bad) jbe out sbb mov inc fcmovne cmc sbb jmp and insb push in (bad) mov dec sbb mov fsubrl (bad) lahf in fsts mov adc rclb arpl inc xor pop cmp test outsl push add add add add push dec mov fisubrl xchg mov (bad) inc cmpsb jg mul (bad) mov lret lcall out lret in stos jno sbb js rorl or pop mov loope sbb mov xor pop lret adc sbb pop (bad) push loope (bad) xchg loopne aaa insb mov cld insl cmp inc mov adc sub or or cld addr16 addr16 call pop arpl out hlt mov cmp shrb adc dec in adc lret mov scas or add mov jne adc or jns mov cwtl jl xchg pop test sbb mov stos push jl and jge cmp cmp ja lods xor dec addr16 and test xor iret mov mov aad mov shl daa sbb lods sub insb cwtl icebp and leave arpl out mov in cmp push push jno or sbb mov jno add test loope xor xchg shrb outsb mov jo (bad) and mov mov sub mov add add add add jmp dec into inc or out aas imul cs mov sub dec cmp loope or push lds jno push pop out int3 mov mov test adc sbb lcall inc or jbe dec mov xchg sub add xor out das aam ljmp dec dec mov mov inc cwtl add addr16 xor or adc outsb add ret sub xchg idivl cwtl cmp adc cmp sbb inc icebp out xorl add add mov cmp xchg cmp cmc adcl mov or sbb je push add test rcrb fsubrp mov popf pop sub adc sbb mov repnz add pop sti (bad) in out cmp (bad) push into scas lods mov loope xor mov cmp (bad) mov mov xor pop cmc arpl aam mov fucomp scas sub out mov scas aam or leave cmc sub sub jmp push mov repz das dec add mov pop xor fsts out scas mov aam mul les push push mov xchg lcall push aam pop mov daa iret dec mov rcl pop das scas mov mov jp mov push jg scas into and pop inc insb and negl rorb pop jb and xchg test aam ret xchg out mov in test in movl lret lret add push fsubp mov sub cmpsb in data16 inc or add add add add (bad) loop out (bad) les les lea les in mov jl xchg rorl js adc and repz cmpsb sub (bad) js insl and mov out out and push sti mov dec xlat pop mov cmp out mov lods inc xchg aad lea stos popf jp (bad) cli (bad) popa dec or xchg xchg loopne mov (bad) cmp cmp faddl mov test and adc jg mov in push cmp add add outsl out pushf imul mov mov inc movsb sbb in shll mov jecxz cmp push pop les cmp inc subb push pop (bad) sub sbb ret shlb pop cld (bad) xchg jmp outsb push xlat xlat xchg mov arpl das jo mov pop repz push gs fildll cmc cmp pop sub pop xchg (bad) push cmp pop lcall jl pop cmp jecxz cmpsl mov mov je fisubrl sti jmp out js mov fildl add dec sbb out sbb add xor (bad) mov cli cmpl sbb out inc push cmp xor cmp xor ja pop xchg add subb cmp inc gs xor adc pusha or outsl pop lods aam icebp sub dec or pop sub rorb dec inc pushf push fisubl pop xlat xor push loop (bad) call inc sub mov and andl and (bad) in in adcl jno cmp pop xor adc sahf shrb clc pop add add add loopne lods or arpl enter mov ljmpw push adc bound dec mov in push or push sbb dec repz mov xchg add push mov fdivs (bad) mov pop jnp test dec lds ljmp pop fwait ror sbb mov out mov daa (bad) pop add adc fnop insb loopne cld cltd push outsb aad popf mov call pop enter std mov push fwait lea into or mov fwait divl (bad) cwtl lods (bad) xor enter cmp jmp add add add add push icebp adc pop inc xor inc ds dec mov in iret orl lock mov or stc fimul jne push fldl cmp and mov mov pop fistpll iret xor mov (bad) imul add notb mov mov add or sbb leave movsb (bad) and loopne jge ret rclb out into (bad) fwait inc mov cmpsb (bad) frstor inc (bad) in push push dec popf test add int xchg xchg rcl sbbb int lods inc cmp fcmove sub lods (bad) pop or sub movsb popf in loopne pop in pop jp jb sahf and or inc lret fsubrs mov movsl and mov fisttpl sahf insb stos in test mov add add adc sti xor repz insl inc jnp in imul hlt cli xchg mov xchg inc xor incb push fnstcw push hlt mov or xchg sbb bound jl adc fmuls inc lock xchg in add push xor pop xchg repnz add add add gs leave jp pusha sub out xchg das insb ret add hlt fdivl rcll lods ss test test stos mov rclb xchg (bad) fwait cmc xor clc das xchg sbb xor or data16 sahf mov xchg mov movsl sub mov pop ret xchg es (bad) out scas add xchg data16 adc iret pop stos sub lods fldt xchg mov outsb sub in shll (bad) fcomps hlt cs sbb inc jo hlt cmp pop pop ljmp add add (bad) lcall repnz pop dec adc and fisttp mov xor xchg fcomi movl mov dec leave test jnp push dec movsl ljmp mov outsl pop xchg and lret int3 mov xlat mov lods mov cmp jg sbb adc cs push and sbb and jb mov int nop mov int mov gs sete fucom sub call sti xchg cmp fimul stos scas dec inc jnp xor notl inc xchg add add add jge pop sub jne out ljmp jno and shrl lods loope lea lret jb cld and cld mov pop or addr16 mov lea mov idivl test and add fcoms loop repz lcall popa je bound jle bound lret adc shll movsl fcompl jp repnz movsb or push pop xor and jg jae push data16 cwtl pushf int or outsb jmp test jns loopne add fs outsl xor (bad) lock jg fiaddl test movsl sbb into out mov nop push xchg inc xor cmp (bad) lock dec add sahf test cmp je rcrl scas xchg push or stos (bad) ljmp dec in inc ljmp subb (bad) sarb out cltd dec ret roll fidivrl jg scas int3 adc sub rcl loopne xchg cmp int3 inc ret es adc in leave rcl and imul daa dec adc xchg cmp cwtl sub std dec int push daa sarb add or jae test stos pop add add add add push test inc jns mov push es sbb movsl (bad) jae rcll pop stos jp data16 clc adc stos gs pushf mov sbb outsb sub mov push jae fild push insl hlt stos clc aas int3 pop divl sub (bad) out or clc test hlt mov mov (bad) leave mov push cmp lock clc stos ljmp arpl jp cmpsl xchg fisubr sarl pop mov push divb jmp xor outsb je mov xchg (bad) icebp pushf jbe mov dec pop pop int pop or addr16 lret add xchg js add add lcall (bad) repz in push daa pmaxub rorl mov pusha pop xchg pop lcall inc scas inc sub outsb mov (bad) imul les insl xor cmp stos (bad) ror repnz add mov mov leave jne nop ret inc xchg in aas in cwtl sbb shll cmp add inc ret pop adc xor data16 fcoms jne sahf lods ds lret pushf jno fnop and inc pop stos adc pop clc inc popa adc adc xchg add add jle jle pop ds std call sbb jns out orl fldt push mov fwait imul lahf and (bad) ficompl sbb push enter fldl dec icebp std shr cmpsb inc jno pop shrb xor addl jecxz lret aam jns jecxz push xor outsl test inc cmp rcl jno repz outsl sbb xor push cmp pop adc mov mov sbb push inc cltd insl and subl cmp movsl cmc rcl mov pop mov mov add add add add notb andl push dec je lds scas xchg and and outsl inc pop outsb mov pop or cs bound stc (bad) ss push xchg push and icebp je aas out mov loop push sub mov dec outsb mov (bad) mov jo sub test enter and into inc ljmp repz mov push pop cld push jns out xlat (bad) push (bad) push mov push (bad) pop pop dec aaa iret adc pop jmp inc mov xchg add add add add cld pop (bad) scas ljmp inc push cmpsl jns stc outsl ljmp sub sub sub stos xchg and lea notl pop jbe shrl push xor ja je jae jmp cmpsl sti mov repnz pop mov fsubs pop push hlt scas xchg and popf loop lods not fxch push pop push test mov inc idivb or rorl (bad) adc lds std scas jns jbe imul ja pop inc sbb sbb mov movsb aaa sub add scas (bad) data16 hlt xor mov sbb add add sub bound jmp (bad) fnstsw cmpsl sub cmp ljmp lds add stos in push out push cmpsb inc jge jg leave dec (bad) and pop adc aaa mov mov stc mov (bad) or add push push jnp pop cmc dec xchg cmp cmp arpl or and ljmp mov or pmaddwd adc jmp roll mov andl call mov ds stc dec and notl fidivrl add add add jge adc xor sub es dec arpl (bad) inc movsl aad xchg bound mov arpl lahf enter cli in pop push xor cltd mov test adc mov inc xlat cmp add push fwait (bad) stos bound or les int3 popf decb or mov fsub loope cmpsb pop xchg ljmp iret mov mov fidivrl push aam bound adc in sarl loope fistp (bad) pop dec push scas mov sahf mov aas mov push inc mov add add push jb mov je mov jns stos insl fucomi std mov push les or adc hlt ljmp clc mov adc jo mov negl dec fwait daa cmp ljmp adc jo jmp repz mov or addr16 push testb arpl sub push or xchg mov mov inc insl scas jno pmulhw jl pop fdivrs sbbl icebp inc rcr inc pop jle das jge xor dec clc xchg adc adc lret aas add and mov mov (bad) dec cmp pop or and in push jp ja fnstenv cli bound push xchg bound (bad) adc enter sti sbb mov cmp add mov inc out adcl (bad) (bad) das stc clc (bad) out mov mov add jle lock pusha jmp out cltd jo xor adc pop into push je dec lods enter in mov imul adc test dec aas adc or int add pop mov add add scas push popa ja adc sbb xchg and add (bad) mov and aas and fmul pop adc mov pop sub movsb loope mov sbb rolb sbb les sbb add cs shr loopne xlat mov std push aad push cmp push iret mov mov test xchg dec lds cld test popf adc sub jge out xorl scas jb mov cltd add jne mov cltd ficoml pop imulb test pop icebp ficompl into jmp add add add add mov mov push inc adc push test cmc jb nop cld mov sbb mov es popf cmp leave pop aas jl sub cwtl rorl out pop outsl xor pushf cwtl fstpt icebp repnz or xchg cld (bad) inc je sbb cmp aaa movsl push jbe cmp pop xor mov int3 imul aam inc fistl adc (bad) je push jg rcl pop cmp pop push outsb in imul int dec lcall xchg push inc mov add add add add shl lock push std jbe scas test push mov sub daa sbb sbb pop dec scas cs mov push jne and stc outsb or adc jnp insl (bad) dec (bad) push sti (bad) jbe mov or jbe das loope lods push jb xchg mull aaa pop mov in xor hlt cmc dec stos clc cmpsl jae lods dec enter jl lea mov imul pop fucomp int pop (bad) cld inc lcall mov or mov dec fsubrs pop test add add xlat add xor cmp dec nop int3 sbb mov inc aaa in lret sub jns ljmp das push mov rol mov xchg test or repnz or sub lcall imul cmpsl sub cmp mov stos rolb jge js mov mov or out jecxz inc jne and mov rol pop call mov push pop cwtl cmp mov sub xlat fidivl or sub sub hlt scas sub gs call add add test adc push movsb pop (bad) aas fsubs mov xor adc push fs cmp punpckldq pop out pop xchg (bad) cwtl into fildl cmp stc and daa inc cmpsb dec fist imul inc movsb or dec cmp mov mov and inc (bad) shll ja or push cmp inc or dec sub xor aam xor addr16 test add inc jno (bad) mov xor (bad) cmp test xlat fmuls fcmovnb ret iret in xchg mov idivl cli inc (bad) jge sbb iret xchg adc push or xor loop sub and cmp ret adc (bad) outsb es iret shrl imul lods bound addr16 xor les pop scas int and xchg cmc pop jp in dec mov aad insb aad mov push scas dec jl and shlb dec leave jg repz cmp mov fs daa add insb fldenv (bad) xor repz popf push jle negb inc xchg mov push imul pusha pop fwait sbbb sbb addl add into push negb ss out sbb jae es fldl cmp sub mov cmp and loope int3 mov mov mov push pop imul inc jmp cmp in inc shl insl das fs jmp mov nop fmul loop fimul mov adc xchg (bad) adc cmp enter pop cli sbbl cld inc neg call bound sbb lret pop clc js flds add add (bad) in lea cs cli outsb dec inc nop mov int dec bnd or in mov fbld mov pusha out cld sbb sbb (bad) mov in jo lret lock dec fdivs cmpsl add pop scas repz dec mov clc cwtl xchg or sub call pop xchg decb adcb lret mov xchg sbb daa lret sub jb xchg popl push pop inc aam js cmp mov mov cmova add add add add aas cmp add test fisub pushf lahf pop int pop rcll and jp imul std xor jae jno iret lahf cli mov or sbb mov sti sbb lret and sti mov out sub mov fs out lcall or cmpsb jg sar movsl xorl stc adc dec xor jae ljmp dec jbe xor out in repnz sbbl mov sahf test or pop pop dec sub dec popaw clc pop movsl sti mov pop mov jecxz add add add add jle dec mov into push (bad) xor and fadd mov and jnp cwtl bound out xchg mov jle dec sub scas sub cmp and and cli fwait sbb int mov (bad) insl rorb stc cmp dec add gs or popa shlb add mov pop jbe push into out out arpl not popf cmp inc fnsave add inc testb cmpsl leave sbbl movsb mov add add add cwtl test mov xchg pop divl lahf call sbb mov inc or mov fildl push (bad) pop jns sub ss (bad) lret add mov jl jge shlb out adc aam xor and xor xchg int mov addr16 stc jne dec and lods mov xor pop sub sub sbb xchg adc cltd or jno cmpsl jo sbb mov cmp push or call mov les sbb out dec cltd cltd pop stc dec pop mov out mov inc mov jns mov mov test mov cmpsl lahf sti xchg ret and insl out mov pop inc adc bound pop mov push rcl jo outsl cmpsl add and sbb adc cmp jo and mov push lcall pop enter fdivl das jmp cmp test pop jo imul xchg hlt sub fcmovne movb inc es add push rcrb inc or fbld push divl nop imul loope fistpl mov add add add rclb add dec xor cmp arpl xchg inc das int3 cmp aas fwait jne jbe mov pop jmp std pop jne mov stc or das xchg (bad) clc in and bound push pushf icebp push mov xchg ds push inc xchg into mov or add aad hlt (bad) jle sub adc fsub or pushf pushf inc dec mov jo (bad) shll cmp test push inc sbb imul dec sub clc lods dec mov icebp sti es jns xor add add add mov adcb mov and jnp sub inc jp push jnp xor push (bad) ja insb in add out lods add xchg jge push add and sub jo mov lcall repz mov mov pushw xlat jmp sbb popa outsb lret ret xchg mov ja push pop xor iret mov aad sub xchg pop dec icebp pop and and test (bad) negl shll jb js lds add add push jo inc mov add mov cmc xchg pop sub insl mov push mov dec mov xchg mov inc mov xchg addl cs dec sbb sub mov dec (bad) rol jp fcmovbe test mov fs and inc cltd loope pop or and dec fsubl loop test sbb xchg int3 mov push jne sub loopne stc idiv in fbld sbbl mov jb test inc jge das leave arpl add add add add lahf ret jmp xchg adc fcomps mov (bad) cmpsb pushf xchg dec sub push mov cmp mov pop (bad) dec and add add leave sub ja out mov fsubs (bad) aad int test hlt mov out dec imul js add cmp pop loop scas sbb incl repnz or sub outsl xchg inc dec or ret jmp (bad) sbb outsb and jb cmp pop mov and inc cmpsb aas push xor gs out pop and int xor mov ljmp into push add add add jmp lret mov fwait pop out out jns pop lea jle movsb enter jae dec dec inc sub jno mov or xor lahf into push pop or pop jge out inc dec scas or repnz pop fidivr jno imul xchg mov popf mov adc shlb pop movsl cwtl adc popf test push out or popa cmp sarl fmul jge push idivl add cli xor enter xor xchg mov dec inc inc fucomp andps mov lock add add add pop add into fs outsl aam ds ja dec pop mov lret inc dec add adc cmpsb dec and mov pop pop stc ds xor xor aaa outsl das in jb ljmp das inc pop test imulb aad mov dec outsl mov into mov push into outsb test sub lds mov sbb lret mov sbb aas test add cmp push rcrl pop mov inc cmp mov fisubrl sbb add add add inc test cltd adc in (bad) insb enter test and pusha jmp ljmp int3 push xchg scas roll jae lahf aaa insl push aas or add mov push js dec sbb mov push roll icebp mov xchg popa loope mov cltd (bad) fdivl jmp adc or inc fincstp lcall je out xchg hlt sub push test std add cmp adc pop mov ss cmpsl mov ljmp mov lret push jp and xchg sub or scas clc cmc fmull ljmp shll pop jg ret mov mov in loop cmp daa inc sub sub xor push pushf sti in push div scas jg sbb aad mov xlat je lahf mov xchg ss lret cmp sub mov lret fs sahf aas mov xor mov iret aam xor and jmp fisubr xchg push push mov jmp ds sub add add or je into push push pop mov lret sbb push mov sub dec out pop fs xchg or loop bound das sbb sub xor aaa fistpl pusha add push pop test or shrl cli lea sbb pop or mov test pop push xlat mov push add and cltd mov outsb jbe mov adc xor mov rcrl dec in scas sbb or mov (bad) clc repnz pop mov popa sbb add in mov add (bad) or shrb mov imul mov jecxz fimull mov jns xor jge cwtl xchg outsb push clc inc push (bad) loope cmp shrl jns mov mov jbe or sub jns gs lahf xlat roll dec popf stos push xor jne insl addr16 push fistpll ret mov cs cmp lret ficomp xor mov push push xchg (bad) aam xchg jno push sub jmp xlat xchg mov (bad) adcl jae stos adc rcl in in mov jle mov aam rcrb subl call push outsb scas adc cmovs pop fnsave cmpsb sbb xchg mov or imul imul jbe popa push rorb lods jnp dec xor jg pusha fs (bad) mov mov add jecxz xchg push sbb push bound test push (bad) js jne aad icebp push cltd mov xlat pushf (bad) popf or repnz aad jae cwtl daa xchg xor sub push mov (bad) and mov imul add add add andl repnz jae inc outsb idiv jl adc ret mov bound stc ljmp dec push jg pop jbe mov jmp add push fisubl test mov pop pop jge fstpt fdiv jmp iret test pop jg rclb dec and and pop cmpsl pop mov (bad) jp aam mov push aas jnp inc jbe popa (bad) sub xlat xor and and pop mov or sbb xor loopne call data16 dec bound aad scas aam sub add add add mov lea insl cli mov stos xchg neg dec or cmp sbb mov fiadd pop push popa or andl in fwait sahf addr16 sub jmp xchg pop mov adc dec push out xor mov scas mov je add cld jbe add leave cmpsb popf xlat adc repnz aas inc (bad) idiv xchg js je mov lret xor pop xchg sbb ljmp or ds pusha (bad) or call scas out fisttpll pop mov fsts add add add in out mov int and and mov pop sub xchg (bad) stc mov lea add push sbb push dec cmpsl xchg dec push (bad) dec cltd popf and pop fmuls mov into sub test jns scas xor mov daa jno fisttpll inc pop xchg or and fnstcw fldcw insl les ftst add sub jo decl cmpl aam xor adc jmp lods inc cmc push adc or ljmp fimull (bad) cmc arpl or mov cs repz sub or add add add add pop ja inc push movsb jns add stos mov (bad) fmuls cmpsb xor ret push jnp mov jle,pt addl cmp mov mov iret das jp cmp xchg mov and mov jecxz test xor or mov inc or and cs dec fwait cmp (bad) fdivrl (bad) (bad) dec mov and xchg rcrl ja mov adc push and stc lods loop mov aas imul mov gs movb add add add rorl ds mov imul vpaddsb adc aas xor (bad) mov lret sbb lret shrb lret xor stos mov dec int push cmpsb cmp xor jmp insl sub ret lret dec imul movsb push aam out add (bad) mov fistpll mov test jmp dec insb (bad) sbb jl push cmp push jp or test jbe lahf xchg sub adc pop jo mov push add add add adc js fisubrl rclb bound sub jne adc in movsl adc mov and mov rcr out (bad) mov adc mov sbb add notb adc pop mov inc pushf rclb movsl adc in nop inc sahf push std and arpl lcall and xor dec stc repnz mov xchg int3 pop add push insl ret shr push das hlt dec jecxz rcrl jmp mov jg add add cmp repnz shr inc test aas pop xor lods dec mov insl inc je pushf sbb pop mov paddsb mov xchg sub orl pop test inc call adcl shlb xor fmull cmp std inc or jb jbe dec (bad) pop nop mov (bad) in stos test mov bound xchg (bad) pop ss dec (bad) sub daa movsl (bad) push mov push adc mov adc ja push rdtsc mov mov test pop xchg aam pop xchg sbb mov iret aaa add add add gs push jo imul movsl xchg cmp mov repz dec ljmp dec call push (bad) sbbl aad cmpl mov fisttp and sarb negl das aam in add and push add mov sbb fwait jne cmp sbb and mov mov sbb pop push mov dec jae or pop xor or sti cltd push dec xor pop mov std sbbb aas lcall or push cmpsl dec mov add add add add mov test mov mov maskmovq negl int3 jmp dec xchg lret es imul add ret in jb les mov and std icebp sub shr inc repnz scas bound es push in addl out cltd in fistpl gs mov in popa iret data16 sarb leave push outsb imul add loopne sarb scas lds (bad) leave sahf (bad) leave mov movsl push imul shl stc mov int3 fdivrl loope mov pop icebp mov add add mov mov adc std sbb push sbb dec int add add rclb test push gs inc rorb sbb mov push mov lret lret es pop mov jnp add mul xchg ret mov xchg out daa adc pop push cmp scas mov sub ja data16 sub cmp in dec push divb mov pop xor jmp mov add sbb push jp xchg and and mov fldt dec sbb xchg sahf xchg and aas mov js movsb pushl out (bad) lock cwtl in add add add sbb movsb mov mov data16 call cmc inc mov pop out pop pusha or mov xor sahf pop xor inc ds enter hlt inc je inc lea fs jo xlat jg je jmp imul mov aam das sti jno adc cwtl xor mov add push outsl dec clc sar cld adcl cmp add dec fs dec pop fcomp mov int call nop insl lcall xchg or out stc pusha lcall (bad) mov push ret xchg rcrb pop xchg lods outsb js iret mov push sub ret jge das dec andl (bad) jle jne insb push add loope divb add xor sbb sub test data16 and mov gs scas sub and dec test leave inc out cmp insl movsl add xchg scas dec lea push mov sahf xchg push and cmp adc lods fs inc sub sbb (bad) and gs xchg pusha stc xchg das lahf stos add pusha cmp add jle,pn das push hlt or mov mov dec test sbb lock cli sub mov jo mov insl xor push repz jno insb cmp sbb push add lods into cltd sbb push xchg (bad) jmp xlat cltd push ret pop (bad) jbe cmp ja subl cmp pop imul incl inc loop sub xor (bad) addl mov pop jb cltd push ret or xor fistl mov dec shll (bad) in ret add add add add call (bad) aas mov sarb sbb into or dec out mov or sti dec shl sub mov mov inc mov push adc push xchg ret and mov into dec mov arpl adc cmp out lock sbb xor jbe cmpsl ret lcall lods icebp gs jbe int3 cmp or dec jp xchg pop push cmp mov lods add mov sub cli cltd jmp xchg mov (bad) clc jl jmp stos shrb dec fstpt out out fldt inc dec sbb mov add add add xchg sbb (bad) sbb jp dec das sub loopne jne mov pop cwtl adc mov mov cmp push jle mov insb mov and push inc cmp mov or sti idivb data16 mov mov sub out sahf xor (bad) cmp mov mov inc jbe insl mov test leave inc sbb pop xor pop jl or xchg dec in jge jecxz or mov dec (bad) mov aas test stc push or in jns or mov dec xor and dec pop std ffree mov pusha ret in push push xchg inc sbb bound jae fistp push push xor mov sub js enter rcr dec adc mov dec and rep lods mov jno out mov dec cli add lock and dec dec cs sub xor loope fdiv ss arpl and fcoml jmp test dec cld test pop nop lods add pop cmp xor stc mov fdivrs adc mov add add add push pop cmp mov ds xor std test and xor les and stos xor insl inc add mov leave adc call mov test cmp in dec sti push mov imul daa flds ret imul popa les dec adc dec or ss lods mov ja in sbb dec cltd jecxz dec inc push push addr16 in add push loope das outsb inc stc dec adcb add (bad) jge mov out invd xorl hlt sahf adc add add add push xchg movsl cmp jl push ds sbb pop insb fnop (bad) jbe cmp adc dec mov mov cmc sbb dec shrb dec (bad) (bad) rclb xchg push jl pop jns in xor inc loop push sti mov in mov mov mov xchg scas into push cmpsb jne hlt pop xchg add jle pop dec das jae and and jl jg sub dec jl xor dec push stc lret sbb std rorb test inc fs cwtl mov jbe xor mov inc ret dec sbb add add add add dec jae xchg dec mov aas jp xchg add and inc mov cmc inc (bad) xchg mov ja dec xchg fdivrs mov xchg and push lods dec fidivrl adc push enter lods xchg inc or (bad) xor sbb jp (bad) (bad) (bad) push out ficomp mov subb outsl xchg push inc xor call ss in fsub cmp and rcll dec push es pop sahf and mov in push xor movsb add add dec les cs bnd iret mov mov imul mov cli xchg xchg jmp mov mov scas mov lods ja repz lcall dec in add add push xchg lahf clc sbb ret cmp imul dec out stc and shl sti and mov scas out cmc and faddp add lret push mov repz jge push cmovae mov cmpsb scas (bad) mov bound in clc or repz gs add add mov int jl fldt push lret aas jno xor push test lods jge push lret bound punpcklwd cli sub iret jg js clc xchg adc out cmp jae rolb xor sbb xorb sbb stos pop xchg jb mov xchg add jge lock jg sti dec aad mov int insb jne jmp daa icebp in iret dec clc xchg insl adc out (bad) loope stos jo,pn or scas ret inc aaa xchg mov daa jns cmp push jmp ja out add add add or adc js ljmp fs pop pop jns call mov push adc or pop dec leave stc xchg sti push or cmpsl mov pusha push xlat mov mov mov stos push sub inc mov cmp jns sub outsl push ljmp loopne test jge cwtl int adc jmp jmp lret dec mov push pop sub sbb cmp nop sbb or aad (bad) sub (bad) or dec push adc inc nop xor add pop das mov and loopne roll add add add cli loop int3 pushf sbb iret sub cli clc sub into push pop aas xchg pop adc pop mov mov adc into dec mov stos pop and adc mov mov mov push neg pop and jp mov int3 cmp leave push push mov xchg frstor popa scas dec hlt mov aad pop cmc xchg scas in fldcw sub lods in cmc or and ljmp mov sub add out dec adc adc add add add call daa aam adc mov enter jbe dec ljmp mov and cmp fisub add jnp mov or or mov imul ret push nop xor cmp jmp mov rcrb jle xor cmpsl push and movsb cmp jle ror mov sti push rolb loope xlat lcall stos insl xor xor insb push notl movsl jno jns sub xor popa stos loope (bad) lahf hlt adc stos sub (bad) loope add add add daa or movb add call push in mov or inc cmp mov pop mov adc leave call push jmp pop cmp jp ret ffreep fdivrs shrb push mov lods stos (bad) aaa dec stos fist addr16 inc shrb inc lods aas fnstenv mov mov fiaddl rorl inc jne cmp add sbb adc outsl fdivrs lret push jb mov jge sarl push pop test adc push sub add add dec push (bad) popa pop mov ret out sub and (bad) jne and repnz lock sbb leave (bad) stc (bad) jg adc fimull ss mov out push xchg ret out adc push and dec push mov std pop push add das fwait jns,pt adcb mov sti gs mov fwait xchg icebp dec in pusha jge sbb je xchg xchg dec lods xor sub icebp sbb sub clc cli and inc xchg mov mov mov (bad) arpl addr16 jae int3 adc xlat add mov out jo loopne loopne jne push mov sub dec cwtl jbe icebp jp stc mov icebp rcrb leave xor add fs sub (bad) push jae shrb mov stos cld ss popf inc xlat push lea fsubrs cli cmp jnp arpl and mov test aam cwtl mov xor or pop pop popf xchg xchg ret add push xchg pop pop jo je cmp je int jnp mov ss push cmp subl idiv push cltd pop (bad) hlt insb lcall and add jp and cmp repz push out iret push dec fldt paddw (bad) das jmp or or mov arpl and movsl jl pop outsl out push mov adcl dec sahf mov fdivrs jle xor mov nop pop dec cld cmpsb mov aam (bad) push jne in dec pushf mov jg adc push mov adc ljmp xchg jp mov sbb or sbb pop mov ds add add add mov adc sub test subl cmc mov mov clc scas gs jo pusha popf sahf (bad) cmpsb icebp loope sbb cmp lahf rcl (bad) fdivr into fdivrs stos pop hlt jnp icebp adc xor enter cwtl insb out sbb les in mov lods in test rcrb imul in lods je flds jae rolb dec push mov mov call push hlt adc imul or jge jae test push push dec frstor inc add add add add mov rolb sahf jl repnz lret cmp push pop (bad) fisub add jns cmp cmp mov xlat jo cltd lcall or outsw int3 js pop test fldt adc outsb add sbb add mov add xorl gs push sub push pop movsl inc cli lds lahf push jmp mov sbb add js push mov hlt cwtl fwait bound (bad) test sub pusha jg into outsb xchg negl insb fnstcw sbb jnp mov add add sbb mov mov jg or addr16 or enter add in int sbb js xchg aad pop dec cmc inc ljmp xor cwtl daa movsb pop add jo test sub and jmp pusha movsl fsubrl ficom cs repz lods push jne xchg push xor push adc xor sub mov dec add jo sbb push arpl cmp xchg cmp out mov xor dec mov mov lods push add (bad) ja lahf pushf sub nop lods fnstcw add add add iret mov movsb mov dec or daa pop lret and mov pop shrb adc sub cmpb xor jae out fsubs sub fdivrl or sbb cmpsb and ja inc add lahf ljmp adc mov test sti inc xorl test outsl xchg sbb imul fmuls das mov xchg mov lret insb mov ret mov pop fnstcw push and push add add add add scas stos lahf call lahf lret fldt in mov (bad) mov dec pop (bad) xchg mov fwait and jmp movsl pop mov (bad) (bad) pop mov dec mov push xor mov mov jg rorb into imull aaa ss dec dec ss fild das nop cmp loop movsl push jp sbb (bad) aas mov push xor mov adc sub movsb mov stos lds dec push xor push test shl scas xor stos push jp decb repz add add add mov leave (bad) cmpsl cmp mov cmp (bad) aad pushl push push jns adc jnp xchg cmc adc mov adc iret mov push (bad) xchg push inc std loope sub les ljmp add xor inc adc adc loop mov outsl repnz add sbb (bad) stos inc pop pop lods xchg aas insl movsb mov adc js outsb in inc xor sub dec jns loope inc and lret pop shrl in xchg hlt dec sub bound pop dec push (bad) in in lcall inc inc pusha add add add add call jge mov sti and adc sbb adc pop sti jno repz or nop adc xor xchg (bad) out jo and and adc pop xchg ficomp xchg dec jge int3 ret cs lret mov test mov sbb outsb xor and rorb dec pop jbe in subl mov add mov mov sub mov cmc sub fidivrl es push jb imul jle mov jmp xchg dec add xor add add stos movsl mov and jp mov roll xlat jne pop sub sbb test ret lds cmc or (bad) pop xchg xchg mov mov fbstp xchg test sarl std hlt pop jp dec pop and or add mov jmp (bad) inc mov adc clc cli mov add aam and sbbl xor leave into push ret cli push mov (bad) lret ja hlt jmp adc add call cmp adc or imul add add inc hlt lret mov (bad) into push jo mov mov pop mov test int3 or xchg insl test aam ret lret cmpsl or iret pop (bad) jp arpl fist movsb daa stos (bad) loope lret ss fistp sbb ljmp movsb mov popa fidivl jae and mov and mov call pop xchg scas mov sbb in in pop xchg push outsb je lret dec pop jg outsb movsb mov lret sbb xor mov repz jns inc cmovbe mov adc nop aad pop or add add add add mov and dec ja fwait jae popa sbb mov icebp mov pop std addr16 mov sub push cmp ret cwtl lea jne (bad) sbb mov push std mov xchg and mov (bad) loop ss push aaa dec pop fcomps (bad) imul adc add icebp xchg leave out sub lods sbb inc push add repz mov mov push and test inc or and push pop xchg scas pop cmpsb movsl push xor stos jge fwait xchg mov pop int pop adc push sbb mov mov jmp pushf push cmp aas fcmovnu mov stos xchg popf jecxz xor xchg gs inc gs shr ljmp and xor push adc sti xchg jmp sub sbb inc je mov push inc sbb xlat test pop addl ljmp loopne adc dec pop test inc jbe and in mov push dec in popa push (bad) cmp pop clc xchg in or mov add add add push fs pop mov (bad) and push test insb xchg dec jmp pop scas cmp scas dec loopne mov subb hlt pop out fisttpl xor out mov loope mov cwtl mov push (bad) push add or jne xor call or push mov sti mov or dec xor sub sub icebp and mov js pushf aaa lds les cmp push inc xor push pop in jg sbb inc lods popf or jmp mov repnz add xchg (bad) icebp (bad) hlt mov in and mov scas ja push insl mov add jle jg xor das dec xchg mov nop and sub xchg test push mov xor sbb ds out roll push cmc jmp push xor push jo out sub stos movsb bswap inc mov movsb jbe int movsl inc jno and loop fidivrl jne inc aam andb lds push inc into mov subb xchg and pop stos mov add sub add pusha mov add add frstor sbb into pop mov arpl dec hlt ret pop cmp xchg mov (bad) dec insl sub push mov mov (bad) in push sbb movsl push mov aas loopne mov je bound mov pop pop ss in jne cld mov dec aam outsl out outsb jbe test sbb mov mov pop jne add inc jno inc adc mov stos and adc mov insb bound ja mov arpl fidiv xchg fisttp or ss out mov faddl push inc in icebp mov add add add push xchg and (bad) push rcl xchg int (bad) lret lret inc adc jle jns pop cltd jae stos daa xchg jmp shr jmp movsl sub xor push sub leave imul dec jg adc xchg xor repnz xchg mov scas outsl mov (bad) cmp loopne (bad) hlt xor jp add aaa fistl inc cli and int decb or rcl ja (bad) push sarl and and fwait adc or rorb icebp xor inc inc sub xor jmp stos fdivrs sbb ret jo add add xor fisttp cld clc scas fs ss adc lock and lret dec insb cmc aam fstpl insb push test pop push mov icebp fstl insl mov pop sbb out sub scas cltd dec lods pop dec outsl das (bad) lea pop pop or or sub push movsl leave adc xchg xchg aaa adc mov add cld jecxz aam jl mov lds cmp jg fildll out enter in decl mov mov aam outsb inc mov push lahf stc int add add add loope adc out sub add out pop jns scas mov adc leave out insb pusha adc lcall mov arpl jns dec hlt jge out xlat mov inc jno mov adc das cmc mov xor push jle add mov addl mov fs repnz cmp jge test cmp sub dec dec inc xchg pop sbb pop push inc pop mov test push aam or xchg stc icebp daa dec xor sbb add hlt xchg mov add repnz and fimul in lods imul dec push add and adc ljmp jns or mov inc pop xchg out jnp outsb sar xor jmp sub xchg xchg in out cmp jo mov stos mov dec push scas (bad) lock jge aam push fimull dec fs out daa pop aad icebp clc test jp mov mov nop sahf into sub loope pusha jno sub mov cltd (bad) and adc loope loop mov loope add add add add cld cmpsl lret inc pop and mov ss lret jns push cmp xchg bound dec xor jl mov pop stc mov pop mov jbe add (bad) icebp outsb nop and jne jmp xchg jg push inc sbb adc or or pop push adc xorl cmp xchg testb xchg cltd shrl imul test rorb aaa stos cmp mov ret test leave cltd pop fcoml and mov idivl ljmp sub out loopne push inc or mov add add add or int3 dec stc rcll sub sub push sub fimul push fs pushf cltd test test (bad) clc pop cli xchg (bad) mov sbb mov rcr push and jge push jle dec dec mov xor outsl mov ret adc pop dec dec dec aas xor nop fbld or pop xchg pop xchg mov jle mov sub je push cmpsl push inc ljmp jmp sbb push xlat repz test (bad) stc xor pop popf adc ds add add xchg out push fldcw inc loope dec adcb lods jecxz cmp jns aaa inc lret inc loope jge imul xchg daa ds sub repnz loopne pop push aam mov les (bad) insl fldcw fwait ds std push rclb fiaddl fsubrs insl jns cmp clc (bad) mov add cmp and jnp mov rolb imul inc pop out pushf mov movb mov fmull test dec repz sbb loop mov pop push mov clc popa cltd repnz lods mov dec sub arpl mov ds fnop lods xchg inc mov push inc xor dec popa sub lea rclb sub lds sub mov add and push les push in cmp fiaddl mov jno das xchg arpl xchg ds mov jle adc popa dec xor aam in xchg leave and rcll pushf out xor aad or fwait cmp (bad) stos rcr and adc mov stos mov cmp sub pop cmp mov pop mov mov mov nop lret push mov std adc sti leave and mov cmp inc cltd jecxz fistpl aam jno jne out add icebp sahf jne iret inc cwtl pop inc sub jbe fs mov lods (bad) xchg les mov jns test mov mov (bad) popf sbb (bad) sub or iret adc add jmp xchg add fsubrl leave pop push inc iret popf cltd pop cwtl push sahf xor jle (bad) sbb scas repz roll add mov xchg test inc inc inc inc popa sbb xchg out inc cltd mov movsb (bad) pusha jae jp push mov in cmc loop cmp movsb push add mov xchg xchg sbb fnstenv ficomp and xor lcall xchg sub icebp push jl mov in pop nop xor sub jl movsb mov call inc fwait cmp mov fldcw aaa sahf pop out iret mov js fild (bad) stos (bad) pop lds lds jl mov cwtl in mov add add and jae int fimull mov ret xchg xchg inc lods sbb cwtl test xchg mov into pop sub xlat aad lock push (bad) or outsb adc scas add fwait test in orl sbbl clc xchg mov fstps lret push jge xor push pusha push or popf and mov sbb cmp pop jmp dec inc ret in xchg in in fsts inc pop jns lret test fisttp jnp lea mov add rcll add add cmp dec mov mov loope sbb push (bad) js fildl mov adc enter jns cmpb mov neg adc dec icebp sub xchg push lcall (bad) pop xor aas xchg jl pop cmp dec cmp aaa ficom mov cmp mov mov add pusha and fmuls sbb jnp cmpsl enter mov outsl out cmp and and es movsl call mov adc xchg pop xchg (bad) dec dec inc dec pop add cs bts add rorl push mov adc jge mov mov inc mov cld mov leave xor fs xchg inc mov inc shrb cmpsb in jne dec scas xchg popf push push (bad) cld stos pop push lret pop xchg f2xm1 sbb inc adc mov addr16 lahf sahf repz (bad) and ret sar mov push push rolb sub ltr xor xor std repnz cmp jl int pop pushf fsubr lea add stos xor pop or imulb rcl jg add add add push jmp and lods mov sarl outsl or aad pop fisubr push jno jge (bad) mov push pop mov lea psubsw nop (bad) stos xlat jnp cmp mov cli fistpll into xor dec sbb push fsts mov lret or xlat nop test and clc xchg (bad) jbe loopne pusha lahf fcmovb out aad pop pop das add bound push mov rclb jl das out ja push or mulb dec pop mov rolb push xchg adc imul mov inc aad lahf adc and (bad) mov xor (bad) sub insb stc addr16 cmpsl pop push inc add sbbl inc inc loop into pop outsl (bad) mov inc clc inc ljmp in pusha popa fadd mov cwtl push dec ss pop cmp push push lea jmp lods push mov sbb adc mov sahf push cmp orl mov adc pop aas ror xchg jbe insl xchg loopne jo ds insb adc push insl adc outsl add xchg push add add add add sub scas add repz push fadd shlb adc es ficom loopne sbb ret cwtl sahf jb hlt sti fcmovne in inc leave dec mov rorb jnp call push and icebp je cli lods scas lahf aad pop fs inc push (bad) mov jbe mov (bad) sbb fxtract mov fs mov xchg gs push xchg add or push out (bad) rol daa and lahf add cltd dec xchg pop nop dec and push clc and xchg add loope ja fnstenv xor jle mov je imul es lcall inc fnstenv repz aad cli cltd push push mov inc pusha call dec sbb lea out imul xchg push loopne stos and outsb adc or pop jecxz push cmp stos (bad) adc std cmc xor mov lcall mov imul in cltd dec cld jmp push das or and inc add jb jno cmp add test pop adc add xchg mov out out scas jne loope adc inc ret adc cltd (bad) and xchg ljmp stos sub outsl rcrb adc flds and insb dec scas mov into hlt and and mov lret and (bad) movsb or sub (bad) cli ret or sub icebp mov sub sbb sub cmp mov test hlt sub push (bad) fnop mov sarb pop pop stc pop dec mov mov ljmp inc out xchg mov xchg into mov pop xchg cmc mov jno and and xor arpl xor (bad) loopne in popf xor add and outsb test jp sahf xor sub jnp loope jo pushf insb ret inc (bad) outsl or or sub adc in in into push inc aas add repnz inc cltd or cmp jno fildll xchg sub test movsl jbe andb lcall aam cltd mov mov mov dec pop xchg push xchg movsb aad aam jbe andl dec mov mov cmp pop test and imul cwtl inc into insb dec ror (bad) sarl in xchg imul (bad) loop add jge push sub add add add lahf inc out push pop cwtl jmp aad xor in adc mov fnstsw es mov push arpl insl add shrb adc sahf pop or fimul lcall dec mov iret lods mov ja jg rcr adc adc js repnz ljmp xor xchg lods outsl lods mov or leave scas add or pop or or pusha add cli xor cltd stos sub xor xor (bad) fdivrs aam insb adc cmp adc (bad) cli pop xchg shr add js pushf imul jecxz mov mov inc cmp jg movl mov sub sarl jg in sbb xor xlat mov out in jmp lea pusha pop out lods pop push adc push (bad) out mov sub mov push repnz fwait cmpl out fdivrl inc jbe cmp inc dec daa mov ret dec xchg decl pop inc cmpsl lods adc das cltd jae sub mov mov dec das stos mov jl or add add add cltd xor or aam sbb lea loop sub add push mov icebp cltd and adc fild xchg or lar pop mov repz push fldl fnstcw cld mov fs push fs cmp test pusha jp push out dec imul or or fwait mov mov xor adc xorb add enter aam mov jg fmuls inc jns push into sbb push mov xchg add call add add jne out std adc mov mov dec mov mov cltd push (bad) jo arpl lret insb cmpsb fsts ja pop std repnz outsl je push push test push mov mov int3 sbb fs in push pop adc (bad) xor call cmc leave mov addr16 test sti pop movsb pusha mov push add imul xchg mov xchg push aas pop aam xchg xor adc in dec xor sbb aad jg imul push add add add pop (bad) mov out xchg cld mov std stc and mov fwait pop js push mov ret sti mov imul add movsb inc push and pop jae rcr sub loope lahf cltd imul jnp in dec or mov pop and pop mov out pop jne push xchg push cmpsb je mov cwtl mov push movsb jl in out inc ss jns int3 mov xchg scas fwait mov in or mov les pop clc imul icebp adc addl add add insb sbb les pop insl int3 dec cmp mov mov adc jmp sub adc arpl xlat inc je cmp mov push cltd inc jno aam mov (bad) cltd cwtl imul push sbb cmp insb mov out test mov pop lods lods hlt repnz xchg jnp inc push in pusha xchg in push jmp add inc cltd cmc pushf pop andl ror loope fildl dec cld je clc add ja ret (bad) mov or pusha or fs push addr16 loop sbb add add add cmc xorl xlat xor nop mull ror cwtl out add shl xor add xor jmp out inc outsb or (bad) mov cwtl leave fs not and add (bad) lcall insb stos (bad) (bad) push imul xchg test mov mov jb stc pop sbb clc dec stos mov jecxz add cmp pop arpl fimull push or adc loopne ret imul cmpsl xor daa mov push (bad) mov cwtl daa negl push leave push lret jg push xchg add add add add xchg pop out pop jbe shrl (bad) xchg stos mov sar mov sbb jne cmp pusha jnp and mov add jb gs cmp cmp xchg mov adcb fidiv stos adc popa fucomip stos pop lea inc lock lcall bound fsts mov or xchg mov mov das jno pop adc test icebp loopne jg jg cmp mov cmpsl cmpsb lods mov cmp mov int3 xchg mov or add add add add jbe mov popa roll pop jl mov ss into mov es loope xor nop into imul cmp or pop cwtl stc jnp push loopne insb stos xchg shrl push lea add (bad) jecxz (bad) mov cmc imul into daa mov pop ja,pt dec mov adc das xor leave mov fwait idivb push mov cwtl inc add icebp sbb cltd inc leave xor leave mov icebp xchg fistl fcmovu sbb (bad) test popa notl jae pop call mov inc gs inc jmp add add cmp dec xor xchg lea push pop lcall pop xor in add or insl mov pushf outsl add and cmpsb cltd inc lock fnstcw sub xor xchg sbb lret xchg dec (bad) xchg sub cmp mov daa (bad) icebp mov out pop push jl popf push mov mov sbb test pop js lcall add sub inc sub adc ror int3 ljmp sub cmp sub xor je push push (bad) add add add add repnz sbb mov call xchg mov sbb popf loopne adc imul xchg ljmp mov jns jmp cmp push iret inc mov xchg fisubrl and mov cmp sbb jnp add in sbb mov mov xor leave (bad) push stos pushf shll fdivr fiadd test dec sub lds sar fldenv out pop mov mov add add add add or mov push test push aaa xor sbb jle push repnz insb jnp mov inc lret pop jno mov call out mov lea fild xchg cwtl inc gs scas outsl or push sbb hlt inc push fs xlat div cli sub sbb or aad data16 enter jb push sub sub xchg xchg movsb push aad (bad) xor aad cmpsb mov or mov push imul loop movsl mov aad sub add add add bound fstps jle mov into xchg pop in bound imul xchg insb jecxz mov jp mov add aad sub cli cmp (bad) movsl jno,pt hlt lea or or das xchg dec dec imul fisubrl out jno jbe jb popa (bad) fdivr pop inc iret cmp pop decb mov cmp ja leave fs push dec jl or sub cmp ss and xchg jae popa imul mov mov mov mov aas mov fsub sub js jns xor sbb xchg daa cs fisubl cltd or std jg insl and jmpw das push xchg jp or aaa int outsb lods ljmp push cld mov dec cmp add xor (bad) jo mov stos sarl jbe pop xchg sbb out hlt sarl xchg mov dec or out pop pushf push fwait mov mov jp imulb mov loop mov sahf nop aaa jnp or and xchg testl add add cltd fmull sub pop (bad) insb test (bad) xor shlb cld inc iret ja or sub lods xor sub inc sbb test sub je sbb data16 jbe out xchg fwait pop xchg arpl je fucomi xor and add test ljmp scas mov jecxz in mov test movsb ret jo lods inc sbb or std dec inc mov jae jns adc je out inc xor add mov jle mov leave shl int icebp and xchg into mov imul lods mov lcall ds shlb mov pusha cmc fwait jg xchg clc cltd imul sub mov cmp repz inc int3 lds in inc rclb dec in sti adc xchg mov mov in in and lods mov xlat push inc and ret hlt mov dec ficom and mov stos lcall mov addl xchg mov mov outsl hlt mov xor jecxz mov lcall push mov stos add add add add mov inc sahf (bad) jg movsl or sbb ljmp enter xor or hlt cmpsb aas adc int or mov inc pop (bad) adc fldenv and mov xor add rep pop mov mov dec pusha or dec cmpsb push mov push dec outsb mov addl and fist into test cmp mov loope lret call das sub (bad) cmp inc decb stos aas in rorb shll adc cld cmpsl lret add iret inc adc mov rclb mov movsl xlat push outsb xlat and mov fs int jne cmc xchg sub dec sub sub mov cmp es in insb inc jns mov dec mov loope insb xchg leave dec jns into mov daa lods jp fadds out push hlt (bad) push or jmp cld cmpsb push icebp push push hlt ss jne lcall mul mov insb cmp in jo (bad) cwtl ds pop jae inc jecxz and test xor (bad) mov (bad) fildll add add add add rcrl xor (bad) mov icebp scas out add stc aad push fisubr xchg ds sbb or lahf ret adc cmpsl (bad) adc xor lahf dec dec sub xor or xor out mov dec xor mov xchg out lods cmpsl xchg mov cmpsl clc call arpl mov pop shrb iret pop sbb push movsl aaa inc mov sub fsubr push dec in popa inc (bad) cmp (bad) lcall movsb and test dec pop aad clc xor rcrb gs lahf jne outsb adc pop in mov ljmp stos fimull mov das mov add aam pop cmp dec sub mov jge jle push lds push orl (bad) sahf icebp or jp fildll cltd mov popa jne and inc push lret arpl jae repz nop fs out cmpsb pop stos mov stos inc sbb aam jnp out aas stc jle adc fisubrl inc or mov jge (bad) das mov imul mov jns adc jno add add add fs xchg mov mov xchg out cli inc out pop mov clc sti out mov sbb test jmp mov add sub lret push mov xchg sbb add lock mov imul add inc lea mov cmp cmp inc dec or add mov mov icebp outsb push mov mov ljmp sbb iret inc jmp xor xchg out loop xlat ret scas je fldl arpl test ret xor sub ja mov dec sbb in dec enter subb stc jbe push xor mov pushf ret pop rclb jne ljmp push sub faddl movsb outsl jmp shrl jmp inc mov xchg xor add out cmp pop push add add mov push or fwait mov mov jg inc cli fisttp ror imul pop mov cmp dec or stos jnp jge mov sub (bad) (bad) xchg jno popf xchg push sarl push lret cltd icebp cmpsl jg adc pop sub int3 mov push jns mov add cmc dec lahf inc pop fisttpl jl leave in std push mov arpl pop lods cld sbb push jle dec mov out sbb jne jge adc (bad) dec xlat stos cmpsb mov pop push mov pop sti xor daa xor xchg pop fsubl cmpsb leave in out sub sbb loop push push loopne movsb ds test sarl js imul mov into xor jmp cmpsl pushf fs lret cmpsb insl cmp lcall xchg (bad) jg lds jno gs mov add add xor mov add fsubs push gs in jno push mov adc sbb pop cmpsb popa adc sbb xchg inc sbb js pop cli add icebp ljmp fldcw mov and jl or push jle xor jge lcall xchg xchg fsubrl xchg cmpsl ds sub (bad) rclb insb pushf jns (bad) jp sub mov sbb mov daa mov lea mov data16 fisttpll adc add mov jnp jbe xorl add add add add push out cmp jg jmp stos out fstl int3 adc (bad) jp imul push (bad) fwait sbb sbb cmp mov add hlt push mov fildll sbb pop jle sub jns mov and push std addl mov test in pushf xchg pop shlb sub xchg out xchg imul push inc sub in mov inc xchg bound repnz sbb dec push or ds jae xchg mov or dec ret pop push int3 xchg mov (bad) addr16 daa daa (bad) sahf add add add jmp fsubs and sub (bad) fnop add daa xchg gs mov lret xor dec adc js test pop cmp and push test mov or sbb in faddl ret pop add dec or test mov out aaa inc rclb mov addr16 rcrl fdivp aaa pusha rcl xchg jecxz fdivrp out jbe push in in add xchg loope jmp aas push pushf andl xchg dec adc xchg sbb aad testl cmp add mov add sbb add add int3 inc sub xlat add (bad) bound aaa cmpsb ret adc aaa inc in mov bound adc jo popa mov jecxz in out inc xchg fs push push jge sbb insl cs add xchg fidivr insl nop or dec pop (bad) fmuls call imul repnz xor movb add hlt cmpsl jo sbb jb fildl ret fwait pop fild fist jmp mov pop xor test fidivr dec fwait mov ds scas adc sub inc jge lea add add int3 std inc (bad) addr16 daa xlat cmpsl push sub lock out and pop repnz xchg xlat xor and icebp lahf insl and and add movsl dec test or je cmpsl lret gs nop out aaa dec shrb aad xorb jb add cli cmpsb push je xchg pop and pop mov (bad) divl rep daa dec rcr lds cmp inc repz cs xchg and and mov je or xor jae mov mov mov lock sub loope jb scas cmp add add insb add ljmp in dec pop ret cwtl sti mov subl sub xchg push cmp lahf push sub and mov lahf mov and sub (bad) aaa pop mov test jecxz mov jns ret pop lds add pop inc push pop push pop out adc jmp int3 (bad) hlt repnz add mov sub xchg stos and jmp mov cmp in outsl mov pop pop pop mov gs repnz adc xor pop popf sbb fisttp adc in push add add add add test add xchg adc add or cli js dec (bad) enter mov inc cli xchg mov les leave and or insb add sub jmp jmp jo jb (bad) mov call push rclb rolb xchg fsubl (bad) stos dec out repz pop movsl cmp int3 repz cli push lahf loopne (bad) loop mov jno stos into sti jbe xchg mov icebp sub repz jl enter add (bad) stos stos ja push into dec cmp add add add add cwtl int3 outsl mov out lea sahf fwait enter sub mov push and (bad) mov fist jnp jbe jnp mov inc aas mov jb push rclb test cmpsb cmp call jecxz js sar dec js lods pop adc lock lods mov pop mov mov cmpsb cmc sbb (bad) data16 lret (bad) icebp pop out xchg and and ljmp xchg (bad) clc push aam jno mov xchg dec xor addr16 mov scas test sti mov add inc loope mov or push icebp in jne enter jb adc mov dec pushf mov call jg int movsl dec divl sti cmp (bad) cmp push mov dec loop adc lods add movsb inc jbe addr16 sub push mov inc mov (bad) inc sub inc lahf mov fstpt incl ret jle outsl cwtl scas fwait pusha inc xor xor lret iret jge (bad) push xor inc lds out outsb imul xchg pop fwait sbb xchg out leave gs pop jae sub mov sbb mov dec push push dec out pushf fwait dec dec fwait (bad) push subl fdivs movsb xchg dec or add xchg sub insl int les push shll sub dec lret fadds cmp (bad) in dec test pop es pop mov sarb (bad) pop test jle popa inc mov lahf daa loope lcall dec lcall sub data16 aas fsts mov add add add ret push inc pop outsb out sub dec (bad) popf xchg or out ljmp mov shrl mov cmp addr16 in fsubrs pop jns mov push mov lret movsb mov fsubrs adc insl xor sub mov push orb xchg shll sbb xchg cmp sub cmp lock mov fwait paddusb mov movl shl shrl call add cli out pop ds out xor popa (bad) mov add movb add add add add fwait mov jp push xchg lea (bad) mov jae cmp (bad) lcall gs jmp push jmp push iret dec decb dec aam mov aad jbe cmc mov or mov or mov jmp aam stos aam jnp inc clc push aam lea insb pop into jns or in add sub outsb ss adc sbbb dec add insl add loop inc and mov xchg jmp add pusha repz pop (bad) fdivl sbb push (bad) movsl sbb add add inc adc xchg pop roll ret out add dec jg test mov mov (bad) lock incb aas lods adc mov xor sbb jns adcl gs cs iret jb insl outsb out in cmc push das jle cmp fistpll pop sbb inc shr xchg dec leave cwtl xchg cmp mov xchg hlt sub sarb mov push fmul sub jae iret pop jo xor xchg jbe arpl and inc cwtl and mov push mov mov add add add jmp mov lea jg hlt pushf sbb cmp mov sub mov dec je push ror xor cli mov adc ds jnp or sub outsl push lret lea inc jg dec xor sbb mov ja ljmp sbb nopl arpl jno sbb jp cmp xor inc mov es movsb xor push gs stos int mov ss insb std jg popa fimul ror mov mov pop shrb out mov add add add inc xchg lret sub cld jns adc lea sbb scas mov jp int pushf enter imul fwait lea aad iret and lea xchg xchg mov pop inc jae lock rorb cwtl ror stc mov adc test push mov xorb pop rcr push imul iret sbb out punpckldq outsl sub xchg cs push jae imul insl pop lcall inc ds add std ja mov jg pushf fcompl pop push movsl push inc mov jne pop jmp cmp push xchg xor in jns and int3 push jmp jp push fstl enter inc or shlb xchg sub pop xchg js mov sbb pop (bad) jb xchg cmp fist inc jge mov push adc pop mov incb pushf and sti or or cltd rcll or inc add sub pop push add (bad) (bad) mov xchg and push dec (bad) fwait or sbb sbb add add add fbld sbb pop cmp adc ficoml repnz fs gs mov stos cmpsl jg push pop inc adc (bad) sub inc notl jb cmc or loope dec out pusha fdivrl or popf test leave sbb dec add jle sbb push ret mov sbb mov lea xchg clc mov add jecxz xchg rolb test decb lret sub loopne int3 ja arpl inc bound repnz mov (bad) adc outsb mov pusha shrb pop mov (bad) out (bad) scas mov add add fldcw pop xchg cs push mov les ret addr16 ret faddl and icebp rcr sub dec ja xchg push sub imul mov jae lock out xor mov cli out push mov push lcall xchg lds cwtl test lea scas or (bad) ret add or dec lret or pop mov xchg xor jb aam dec outsb and mov je pop jg mov ret movsb lcall add inc insb xchg pop inc out dec or scas ss cmpsl pop lods add add add and and jp data16 int movsl les push sahf jmp cltd mov xor fwait inc mov hlt and push sub out stc lret addr16 ret jmp lcall pop push or lea loop sbb xor clc leave ja ljmp mov (bad) jo dec das inc imul repnz mov test es xchg xor imulb jo jge in sub popf stos mov xchg adcl mov stc stos xor jecxz pusha in jb and bound fdivrs add add add mov xorb sub fist xchg and jo xor in jmp push mov fadds leave stc (bad) adc pop cmp xor les xchg loop pop sub (bad) pop mov sti stos pop push scas cld jbe loope ficompl jb sahf mov pop sub mov dec add jl mov mov fidivrl rclb ss mov pop rclb fwait in stos fxch inc xor aam (bad) in and repz shl pop or mov loope out dec data16 aad adc in sbb out cmp mov xchg sbbb rclb push lcall xor or repz cltd mov adc mov xchg adc fisttpll add dec mov (bad) pop and pop test mov js inc dec (bad) or add xchg and ds and mov lret outsb out xlat fistp jae lea js xchg in (bad) cmp scas aaa jle jg stos jmp mov stos enter lret add or push daa and inc sbb pop push dec mov xor inc out into cwtl arpl subb std int3 jp lret stos std or cmp jb mov (bad) jbe jns cmp imul rclb fucomip mov xchg scas faddl cld add int (bad) rcrb aam xchg aam dec jle inc mov das mov jo test push lret lods sti (bad) in and pushfw xchg pop pop mov aad pop mov jb addl add add add add int3 cmpsl out push (bad) lret popa pop daa sbb xchg std clc pop and cmp rol cmp loop jl lret pop add jne fmuls jbe cmp popa jmp test mov out in push xor or fildl xor popf push push mov invd push les adc xor cmp or sub lahf push pushf outsb adc insb aad adc jno ss cmp out lds out or scas push mov (bad) cltd adc add add add add and fcmovnb (bad) and adc mov cmp cmp test pop pop dec ss push fstl jge xor fbld mov lcall stos addr16 add (bad) test daa inc (bad) test xchg add idivl or jg pop push jmp test ret pop bound in jmp stos push pop dec push fstpt adc daa in outsb cwtl adc out push adc in dec lret or xchg push (bad) push xchg push ret out or dec data16 adc add add pop aas imul xor out xor iret adc mov cld mov aad mov ljmp xchg jecxz sbbl add (bad) inc or fdiv enter aas imulb test push enter mov push lahf icebp nop/reserved lods lret movsb add movsl int3 mov movsl adc mov jb (bad) xor xorl mov pop int3 (bad) aaa fwait and int adc (bad) mov pop (bad) (bad) dec lret into (bad) mov shrl movsb sbb add add add shll mov arpl xchg inc push sti repnz fcomi mov xor icebp pushf adc pop lea cmp in popf add aas add out push cmp jp dec clc xchg popf xor pop daa dec jge lds addb and adc sbb out pusha xor xchg mov cltd push pop clc add int3 push leave shll lcall leave pop leave push ret push stos into jle add ja adc add inc enter test push jmp enter pop (bad) jecxz cld fidivrl imul add add add add inc jecxz ss or cmp jle mov sarl daa adc int (bad) sub and out xchg sbb xchg mov frstor xor leave and cmpsb mov dec ja jb outsl xchg mov add loope xchg (bad) mov pusha jecxz in hlt lret lret popf lret mov mov pop adc insl mov sbb mov jmp stos repz mov push imul and lahf loopne mov mov push (bad) lock mov jns add add add add jmp or add imul sub cld insb nop js or or push inc stos (bad) mov or pop push add xor out lods into ja mov cli icebp sub pop sbb lds lret mov mov mov mov dec xchg cs adc pop (bad) mov shlb js adc jbe,pn cmp pop add (bad) xchg pop (bad) jbe pop mov add dec mov repnz loope out add data16 xchg stos xchg or sub pop and jbe sbb add add add or xchg (bad) cmp rolb mov clc xchg lods lods pop jmp jge pushf sbb xor cmpsl fadds inc inc xor jb or dec mov jg out jns fcoml les mov push mov jne stc insl (bad) dec sbb sbb push push jp (bad) loop out sbb inc bsr sbb out loope jg inc mov ret lcall mov push adc mov fisttpl jb pop lock sbb sub test xor pop adc add add add add mulb daa or ret mov gs arpl mov sbb adc mov cmpsl les sbb mov xchg push sbb mov sub jno les sub rcl repnz arpl sub cmc fcoml pop popfw ret jnp pop sbb or jge sub cmp into sbb shrb loop xchg aaa sub sbb scas mov inc sbb sub jo ljmp dec dec xor pushf push test in push sub pop mov addl push jnp mov add add add call sbb jb cld arpl inc stos je sub xchg push shrl cmp pop popf shrb pusha push scas xor xchg adc pushf mov hlt xlat out push lock cmp mov aam and pop mov mov cmp pop cmp mov mov ror out sub rclb imul (bad) jmp ret das les mov (bad) pop xor repnz push call loope test sbb in in jns add jae fdivr mov pop test sbb dec jg inc insb clc inc jns dec mov outsb push scas inc push mov arpl dec inc mov imul inc dec mov lods add aaa inc jno sbb pop and mov sti pop jg dec fisttpl enter adc pop insl sbb jl pop les xor xchg insl cmp mov adc cmp fiaddl or fdivr sbb mov (bad) xor sbb sar xchg leave jns sub mov xchg add and dec mov xchg fxam push popf (bad) stos mov mov mov hlt xchg mov push xor pop mov (bad) (bad) sbb insb ss or rcrl arpl dec and addr16 adc xor mov loop lret imul pop lret in mov dec insl cmp mov push pop fbstp mov and xor mov jbe xor jne ss mull mov outsl cmp ljmp (bad) iret out mov adc in gs (bad) movsb push mov fcomp ja mov packssdw mov aas mov add jecxz stos or xchg cmp ljmp call faddp pop daa pop fsts xchg fs into dec (bad) pop pop cmp jae inc and push std pop fistl js push mov std (bad) xor mov xchg push mov outsl loope pop rcl or ret lods xchg mov call repnz pop popa pop inc nop add icebp (bad) int3 (bad) mov mov imul insl push and ja addr16 push and adc add subl xchg mov xor push mov (bad) cmp jge data16 add add add add mov mov cmc xor nop dec jae test mov test (bad) push loope outsb icebp scas mov leave aas sub inc aas sbb and cli push jo ljmp mov jge xchg (bad) (bad) inc lahf (bad) fisubrl (bad) test pop mov fdivrl push inc sbb call and (bad) nop div mov jecxz xchg cmp mov ds hlt leave arpl mov push ja dec inc mov xorl stc stc pop sahf (bad) dec mov mov mov fstp scas jne xchg and mov xchg lods push sbb add add add movl sbb test in lods and icebp cltd cld and das test xchg adc (bad) or inc leave dec mov inc and aaa xchg stos and jl mov jle jnp fdiv and test (bad) loopne roll mov outsl (bad) mov lods loope mov enter jnp mov pop nop subl movaps xor enter adc xor cmp arpl aam xchg cld sbb push adc mov jbe jo add add add andb adc jle jnp mov mov lcall (bad) popa sbb mov add loope adc push jbe imulb inc cmp sub out sbb and arpl adcl mov (bad) mov scas bound and push lret mov ljmp or sti lahf data16 mov ret pop and repz mov mov mov cli loope,pn dec add mov (bad) out cld stc cli sbb test add add add add icebp mov std push inc lcall and or in aad addr16 or jl test or arpl jge jmp rclb mov popa mov fcmovnb loope pop mov xor sbb jmp or mov lock adc or sub into sub ficoml and lds scas inc xchg mov imul shlb pop in dec fisub out dec iret lcall ja es fistpl in mov mov lret cli popa add add add sbb mov ds das mov adc fdivs mov add jmp gs push pop dec test cwtl loope gs prefetchw iret lods jo clc mov and pop aas out adc or adc jl fsubp loop iret dec cmp xchg sub out in mov mov ss xchg sbb and aad fcmovnu sub aaa out cltd (bad) js add xor test add or cmp mov negl popa sub cmp xor push sbb mov cmp xor xor push mov pusha sub push dec pop es pop and xchg ret out arpl clc mov mov or (bad) mov sub adcb cs lods jecxz fs lcall push fmuls inc xchg cwtl sbb mov scas cmp xor pushf push cmp cmp xchg popa shl sbb je push ds xor movb test scas jl mov jnp lcall xor stos xor xchg jmp xchg xchg lds cmp push and mov cmp add gs inc mov mov cli xor or cmp xor loopne das xchg jo ja xchg dec sbb xchg xchg or mov stos shl enter sub dec enter std cmpsb frstor outsl lods dec push and lcall (bad) int3 inc dec inc rorb lock push or pop pop test dec lea adc jnp out or insl jmp flds add add add (bad) or clc sbb sbb insl cld mov push inc or or aam dec fs cmpsb add (bad) jl cmp test jo cmpsb pop stos shr fstps iret lds stos add daa cmp or jle cmpsb inc addr16 mulb cmp jge fcomps popa movsl loopne inc xchg mov test sbb xchg fsubr sbb loop or loopne cld subl xor jne inc sbb icebp jge int addr16 popa lods sub movsb mov pusha aas jb std in invd dec jg add aas in je ljmp fidiv add add add add pop loopne jnp dec cmpsb (bad) pop push dec push mov es jl rcrl outsb dec sbb adc xor cmp lret insb pop add jge out mov push pushf (bad) mov outsl mov aam jg aaa jmp repnz je pop sbb (bad) test sub jns cmpl pop adc pop mov inc ss insb pop xor jl xchg sbb test pusha or push int3 xlat push fistpl push fimull rclb mov idiv dec cmpl (bad) je dec pushf fiaddl jns es sarb inc inc leave fcoml bound pop int mov bound movsl nop mov pusha lods shlb adc aaa outsb and or add orl xchg add bound mov nop clc xor push add jns pushf fstpl aas loope inc add jl (bad) int3 (bad) in sub icebp push jmp add fwait jne call and lahf jae popa cli daa xchg stc pushf dec imul pop add int3 iret arpl pmuludq xchg arpl sbb in fimul add add add jle aas test adc (bad) stos mov cmp inc jnp dec jmp movsb jg push fimull push xor sub inc scas xchg icebp and sbb addr16 jno movsb scas and test xchg inc pusha arpl mov dec repnz add imul add mov push fildll add dec xchg rolb mov jne or mov mull js addr16 andb xchg adc mov fisub scas xchg outsl clc lods adc aam push xchg adc push dec ret mov sbb adc cmp out add add add add xchg arpl xor repz mov adc rcl popw imul push xchg push dec adc inc adc push and mov divb push mov pop sbb xchg inc mov mov mov mov or (bad) xor jecxz push (bad) pushf andl mov ret and (bad) sbb into add add repnz mov dec (bad) stc push fcoml inc outsl adc or push (bad) push jb lahf inc xor jecxz add add add add cmpsl xchg sub mov sub je test inc mov add cmp out enter test mov or adc lcall imul pop in (bad) fdivrl clc sub mov cmp test adc pop lret jmp cld sbb pop and or pop adc (bad) mov dec inc fwait mov or lcall fsubl ja push call pop push xchg fild in pusha daa fwait sarl (bad) pop pop out insb arpl test out int3 dec ret push addr16 ljmp pop mov pop jmp sbb push dec or sub cs cli and les js mov (bad) int3 cmpsb loopne lret pusha jnp push (bad) dec lcall pop mov out cmp rcl mov inc adc pusha in and popf mov cli and sub dec mov enter mov mov ss pusha out push or aam sub fwait arpl aas je cltd ja dec adc cltd frstor mov xor ret (bad) call add add add loope fimul mov fiaddl push rcr daa fucomip sub mov or jmp sbb roll mov sbb mov cmp jae cmp mov pushf mov inc mov cmp iret push add mov sbb rcll aas sbb mov ljmp jmp adc inc (bad) sbb and ja gs mov je lret fistpl and xchg xor pop inc in roll xor xchg xchg icebp and xor cld mov add add add add (bad) insl sub loopne sbb cmp cli xchg ss pop mov xor incl dec xor outsl in cli sbb out test (bad) rorl addl into lret rcl test scas xchg inc and xlat push push sub daa or mov pop sbb inc sub pusha mov and je aas fs insb cmpsl sub push or out sub out xor adc mov fstp pop dec dec cmc xor popa into sub jb xor and or xchg inc xor jns inc add icebp add add add add cmpsl insl push call js aam ret mov mov arpl pop cmc adc add mov pop (bad) loopne jbe iret fwait jae pop outsl movsl push adc push wrmsr outsb mov inc pop push (bad) pop shl xor or aad or dec push sti xchg (bad) or jge pop xor test dec pushf fdiv jmp push leave stos sub rcrl ja mov loopne push mov out mov (bad) into push ja fcomi (bad) lret sbb mov jmp xlat lods cld push icebp xorb or xchg enter push dec sbb fcoms or ficompl or cs je rcrl out adc out or inc dec adc xor ret xlat mov inc ret pop xchg rorb pop stc cmpsl pop lock in movsl notl sub mov (bad) lea les jae mov rolb test cmp fsubrs adc je jns lret fcomip sahf daa iret mov push pushf xchg data16 test add pop sti push fistl jbe das adc in sbb mov push or add add add add and in lock dec pop aad mov popa pushl mov inc (bad) lret fisub out dec test cmp fist mov pop fsubrp enter mov callw sbb les shll jae push insl push repz addr16 enter (bad) or lea loop cli std repnz imul out js cmp cli out jp lcall loopne fwait adcl dec and push mov stos lcall popa incb cwtl mov subl add add add mov and pop fisttpl stos (bad) mov or movsl aas xchg jb,pn adc out int3 cli mov (bad) pusha xchg inc lods ret sub or fnop or fbld loope repnz sahf add jg jmp clc cmpsb in pop sti dec pop js xor jbe les or outsl push push fdiv mov inc xlat xchg daa loope std push mov and mov rcr (bad) sbb cmc sbb cwtl es cmp roll je add fs and or outsb ljmp add add add add push xchg adc scas sbb xlat push mov outsb fmull int mov jnp push (bad) sbb movsl jne cmp jnp ret xlat cmp dec outsl les leave sub lds call test bound bound je stos xchg (bad) mov stos mov sbb fidivl ret out cmc push addr16 fisubr xor pop xchg pushf movsl pop cmp push subl sbb dec sarl push add repz jnp dec mov mov add mov test add add mov fistp xor push (bad) mov mov sub aaa cmp mov out aaa mov xchg add or (bad) add hlt cld in adc xchg cli bound inc adc xor bound lret mov pop push roll jo jne adc inc jmp xlat leave mov ljmp (bad) mov cmpsb in pop arpl fadds orl test mov sahf mov push lods jle dec xchg popa faddl (bad) lock fildll mov lods sub ret dec mov push mov test in or lar pop pop out xor (bad) jecxz fildll pop inc inc addr16 icebp xlat fisubrl andb dec pop add fstps inc repz sub sbb or icebp pop cwtl pop (bad) adcl stos test and mov fdivl xchg pop arpl test pop gs sub cli popf or fiaddl fnstenv push push mov mov addr16 jne cmc xchg subb ret mov inc pop lea add add jmp out dec ds fldenv dec ds inc jl jmp loopne sub dec (bad) (bad) sub xchg dec jl sbb movsl sar inc imul xor mov fwait xlat cwtl enter sub xchg hlt shll stos sbb jne and pop sub mov stc jp jbe sub fisub movsb and fisubr pop into pop cmp dec sbb ja js mov xor pop shrb adc stos loop jo outsb xor push popf push and sbb loop in inc sbb add add add push ljmp or mov push ret pushf sbb mov mov dec xchg jns add daa inc xchg cmc sbb dec stc mov repz mov int3 out ja in in cmp inc repnz out pop mov cmp jmp cmc xchg insb sbbl mov pusha jecxz (bad) mov lock popf outsl mov inc xor shll jmp sbb dec mov stc xor inc or xor mov mov jne lds xor insb sub pop insb add add add xchg xlat xchg add mov lea (bad) inc push jecxz or jno rorl fs (bad) loop popf jmp (bad) icebp jge xchg lret aas test adc cmp js mov ja dec outsl dec dec jb dec or ljmp sbb iret ret loop stos inc jno pop imul test xor stos lret jp scas fnstenv and xor (bad) mov rolb cmp push and loopne mov mov es sti push mov or pop push add add add in xlat xor cmp xor mov push cltd movsb sub sti cld pop mov cmpsl inc jmp je cwtl or mov js cmpsb fwait mov inc stos jmp out int mov push fidivl jp hlt dec pop pop sub push jl fnop imul aas xchg mov call xchg xor leave sbb or add leave jns dec repnz sub jnp arpl push loope add lods pop mov rcrl adc js push push (bad) aad mov outsl inc pop mov add add sbb mov mov andl mov flds nop ret cs shr fistl sbb call xchg stc test fsubl push adc gs rcll shrl mov cmpsb mov mov std fsts imull push mov ljmp push in pusha sub sbb test out push mov mov or repz test sbb loopne call (bad) sti out xor (bad) aaa cmp loope adc test add add add repnz popa jp nop test iret repnz sti mov xchg and (bad) sbb pop dec lahf fisttpl mov test stos iret pop jle sub xchg (bad) xor sti adc (bad) sub fcomip add mov adc sub addl movsb cmp iret sbb movsl push (bad) mov fidivl dec sbbl (bad) loop inc jnp sub push mov std and mov shr fnsave mov outsl add popa mov add add add push push (bad) loop loope pop pop (bad) ss sbb les out fsubs ds mov xchg cmp leave iret adc add rcrb xchg aaa jl aam jnp imul jne out push sub xor jmp lds mov mov daa enter aaa mov lods sub cli movsl push mov pop push jge test rcll flds or aas push xor mov outsw inc or subl adc jmp daa xchg cmp sbb into hlt out dec outsb int fimull push add cli cmp enter jl fucomip shrl lods xor mov pop outsl in lock add pop inc leave lahf mov mov fdivs or jo lock mov ret mov mov push adc movsl (bad) repz rorb sub cmc xchg xor xor stos xchg inc sub pop rcl dec sub daa jb pop ret mov enter in and xor repnz cs lcall push lret add add inc bnd xor aam jae push test pop leave ret cmp push inc xor out sbb lock xchg or cmp xchg add push and loop mov movsl ret test fstl inc test add rolb loop lret fs adcl xchg arpl pop push test mov or loopne and sti push or pushf push popf jl xor push out inc xchg lods pop pop jmp stos arpl push mov sti adc mov mov mov cmc or rcrl push push sbb jbe cmp add and test sbb and rcl sti add imul adc jbe cmp loop xorl js xchg lea das xchg sbb pop in aaa fwait into and lahf in push mov jbe xchg enter insl push rcrl test hlt mov cltd cmp (bad) push mov push in sub jle dec dec fldl ret push dec scas mov (bad) pop mov push ja outsl loop les add add add inc ljmp push (bad) mov and dec sub mov mov jge data16 stos push andb cld mov pop push mov mov adc sub out mov pushf sarb aas jnp push cltd and jle dec in insl jge jle mov mov arpl or jl inc out and mov jbe (bad) mov jle les cmp mov adc cmp jle mov cmc (bad) ss cmp jno cmp pop adc lock sub insl (bad) xchg jb lods in cmpsl call add add (bad) jae dec sbb mov pmuludq adc pop inc mov in mov push ret jno clc or (bad) cmc jnp fs mov popf aam mov push test add cwtl cli rcll cmp push sub stos pop push scas call call inc push das mov mov js clc lret and std push lea sbb out jmp ljmp lret and mov das fldcw jns push daa test call push sbb aas ja daa fcoms cmp (bad) adc add add add fisttpll adc cmpsl ret movsl inc jae out sti imul jb movsl repz les shrl scas dec mov pop fmull pxor add mov inc jno repz loop sbb movb leave (bad) in loopne mov sub lds gs and loop sbb inc mov enter xor jo addr16 outsl ss cltd stc fs dec fmul lahf inc cmp sub dec lock mov test int3 out cmpsb mov dec jo rcrl sub add add scas nop mov scas jo sahf sbb shl pushf pop je cld push outsb out push sub mov dec cld sahf dec mov dec jae lods outsl xor pusha jmp out jmp push add pop out dec push push out sub inc jle inc xchg mov (bad) jae sub push int sub dec xchg jmp testb mov adcl lock stos mov or rolb stos mov js iret mov into pop dec loope xor cwtl std rclb mov ljmp add add add lds xor push pop push cs mov inc push push inc sbb lods dec testb js xchg int3 add cmp fisttpll out dec dec sbb mov push sbb cli or xchg lcall dec adc jno adc es loope adc psrld stc fildl push lret fisubl cmp jl icebp inc adc out (bad) mov (bad) ss stc lods mov (bad) out mov mov dec leave enter push and hlt cli out cmp mov add add add (bad) xchg push outsb push cmp pop lret or fwait mov and push loope ficomp in xchg hlt sti jle mov jb scas pusha out ss jmp hlt cmp pop xchg sub push lea (bad) repz jle gs fcmovnbe push lcall mov repnz cmp mov and push mov aaa cwtl adc inc cmc ret push cwtl xor aad pop lods lods sbb out mov dec inc test dec nop and hlt jb add idivb shrb add ja lea jns push dec cmpsb cmp add add add int cld dec or loop nop scas dec repnz push loop or mov movhps jne int3 popa inc (bad) xor mov in ret lret push mov xor cmp jnp push dec clc mov and lea dec dec (bad) mov aaa test cmp mov stos add hlt jge pop push adc mov je xchg inc sbb xor rcll pop mulb scas aad dec xor lcall dec aad xor lret shl (bad) leave aas and (bad) mov dec cmp (bad) xchg shll sti push sub add add add add mov push jns and arpl mov das and movsl nop pop test mov jbe jmp lret adc pop push fwait scas sub fsubrl imul ds add nop movsb loop rcrb dec mov jp dec adc and cli sbb mov cwtl dec push cmc xchg mov mov aaa sub fwait cltd dec or in cmp aas dec mov aas pop mov mov dec pop out cmp dec cltd sbb cmpsl mov arpl xchg sbb in cmpsb xor lahf jl mov hlt (bad) or add add add insb push popf fwait js imul sbb jmp aam int jge add test lock insl negl cld lret clc mov lock and and mov sub es xchg cmpsl test test int aad add cmpsb or rclb xchg dec pop cmp cli sub adc test imul lcall and popa addr16 ja xlat push dec push in in fdivp xchg sbb movsl push movsl gs lods lret cmp dec dec adc test (bad) shll pop cmp jecxz add add add js rorb mov clc (bad) dec or lods ret or mov fstpl stos mov and jns jb dec mov (bad) and nop cs lret std inc xchg mov out cmp mov mov mov sub mov mov push fbstp arpl popf push lcall ja cld and repz les jae mov cwtl dec sub std dec adc mov pushf out and sbb dec xor xchg push les stc xchg daa cmpsb push dec repnz out xchg pop push or mov into cmpsl mov les fisubr pop add in orl (bad) (bad) mov push jecxz push dec and vhaddps ret mov cli fs int3 push mov adc dec pushf push (bad) add dec or dec push add lret rcll movsb test hlt aad push push xor jge call test addr16 push mov cmp arpl in jge lcall push iret sti movsl cli pusha loope or gs into add xor int3 add mov imul mov xchg pop push cmpsb leave js cmp mov add pushf leave inc adc or ljmp repz cmpsb dec cmp test mov sbb insb xor pop leave rolb or orb lods pop test sahf cmp fisubr xchg mov and mov aad adc sub add mov and stos stos rorb xchg push push shrl xchg push or jo xchg xchg imul cmc call push or add add add pop insl push scas imul mov daa (bad) mov outsl (bad) sti sub loop dec pusha (bad) sub jns push or aad daa jle inc adc test dec imulb xchg or iret (bad) ret test pop jns dec test mov js jnp (bad) daa mov sarb mov arpl jg and pop je mov aaa jns rol (bad) adc jp mov movsb les adc cmpsl or push inc mov mov xchg (bad) cmp mov sub sbb inc jl add add add add nop test push ficomp add lock ret mov push fistl jne xchg adc adc cmp out and (bad) into cltd rol daa gs fcomps cmp js add push mov mov arpl push pop stos push cwtl (bad) xor xor mov adc or mov fwait push xchg dec xchg mov push mov fs push push pop sbb or adc and pop loop mov repz iret pop push dec or add add add inc and outsl add call xor adc adc mov insb pop aad ja rcrl dec sub movsb add xor or (bad) jb testl (bad) pop dec xor mov jl iret cmp xor hlt fnstsw push popf add mov shlb bound js pop orl cmp xchg stos xchg jnp mov xchg mov adcl and dec dec or (bad) add dec add add mov mov stc (bad) mov inc aad popf mov pop clc jne cmpsl scas cmp xchg (bad) lock push push gs push cmpsb mov push xor in cld sbb in jge stc pop shrl push fdivrl nop ja adc pop jl inc xor pusha mov bound aas sub outsl lock xchg push out cmp pop or scas cmpsb fiaddl stos mov aad lods mov je adc add push shrb (bad) scas jo fldt data16 (bad) into xchg push mov xor cmc sbb mov jmp test push pop push mov jle push ror popf xor imul jne iret inc jne inc (bad) pusha mov fcomps clc push mov mov mov lahf sub es adc aam cmp adc mov fisttp ljmp repz push test or mov jno fnstsw nop push push xchg sub sti jge popf xor pusha add jp bound sbb push and jg mov jge jb adc out repnz dec xorb xchg or insb (bad) add add add (bad) call push sbb ret mov out movsl sub ljmp sahf xchg jb cmpsl jnp add pop inc mov add leave or pop ds adc in fiadd cmp addl fs or cmp adc lods jae dec sub jecxz and rorl fdiv mov bound mov and cwtl mov aam popf or push cmpl std nop (bad) ljmp dec and mov or jb sbb repnz add add add add xor jne rcll in and xor push sub mov orb ljmp sbb fistl movsl push cmp out mov mov (bad) (bad) push pop scas cmpsb xor (bad) lods jb push fcomps daa cmc jl xchg sbb negb pop cmp outsb out adc mull lcall ljmp add pop fdiv mov scas aas loop and loope pop pop mov dec jmp orl call cmp mov call xor mov add add add push mov cmp pop sti rcll mov cwtl sub dec movsb adc out lret cmp mov dec sbb ret js and cmp push push dec repnz dec lds inc ret hlt jo rcrl or or popf and inc dec mov loopne pop mov mov loop movsl negb jge imul sub sahf (bad) (bad) je cmp sbb sahf jg push mov dec pop inc cli in in inc lods inc stos jae out sbb or mov scas jmp (bad) add add add add jo call scas cmp add sahf sub cwtl imul mov cmp lock (bad) aam pop xchg adc mov int3 mov push icebp push mov xchg popa mov jne and out lret imull sbb pcmpgtb fnop jb in mov arpl mov cs adc sub in pop adc ss ret sahf add inc sub sub int3 xor or aas mov bound cmpsl cwtl push or lods sar ret movsl jb daa rolb out mov pop int jp lcall and add add add xor repnz push mov pop stos popa pop pop aaa and mov pop into roll (bad) and stos pop fidiv lcall push or fidivl mov cmp push pop or push enter hlt push bound scas jbe ret mov pop sbb fwait loop sbb mov or mov cmpl test imul pop xchg cmp xchg sbb fiadd xor out or add add add sti andl add or xchg (bad) and lret add xor xor cmp insl fwait imul dec fsubp imul cld sbb inc mov or inc call dec ret in xchg das dec sbb cli push cmc pop ja mov inc mov enter xor xchg mov push (bad) iret mov push push mov aaa push inc mov inc dec jno dec push leave mov jge xor push xor rclb add xchg pushf xor cmp gs add add pop inc mov pop jns adc push jns dec jp bound sbb and lock lahf xlat test or xor adc pop pop popf jp mov push dec xor adc add and pop push aas mov push xchg mov lret lock leave jl push ret pusha push sub jp or (bad) xor xor jne inc jp int jmpw (bad) ret sbb mov mov and cmp and dec insb rorl mov add add add fs xchg insl sub jae out loop scas jecxz mov fistl outsl stos lret dec sub int3 lods dec outsl lcall push in and dec ds jnp add scas xchg xor jge dec call je pop iret test cmp mov es stc dec aaa mov and cmp popf push mov out pop lods xchg push leave mov jl xor xchg js jmp xor out push adc cmp cmp push push icebp jns push cmp inc gs xor sbb add fcomps repz (bad) cmp dec aam dec scas adc insl mov adc pop jnp cmp or and mov jne aas and dec je movsb dec test pop dec pop or icebp fistl xchg mov dec cli fldt push in out mov pop or push xchg stos into mov dec pop mov push arpl push mov arpl cmp add sbb inc jg pop mov sbbb ds in imul push lahf shll push popa cmp push mov bound insl add add add add xchg out cld addb mov sarb xchg pop push pop ja movsb lds insb arpl sub fstpl jl les mov dec repz and lahf inc (bad) xchg push fstps sbb mov pop mov ret push sbb and inc mov out add add and movsb sub dec sub adc sub notl mov jnp mov scas les sub mov xor and push jmp or xchg in daa and (bad) pop test add add push adc xor push or jp arpl fcmovnu enter sub scas inc jmp mov cmp mov out add jmp cmp mov scas add lret mov inc aad idivl pop mov in cmp pop cld xchg lock jb (bad) into fiaddl or scas jb test mov jmp jb or mov xchg xor sbbl dec push pop sub call icebp lods int3 test lea lods popa and and (bad) fsubl jmp lcall add aas fwait scas movsl iret pop jbe push addl loopne sbb iret pushf cmc das adc aaa bound mov mov das add and add xchg in mov mov shlb enter inc add pushf loop clc pop pop mov dec sbb call xor jp pop inc cmp xor pop pop ret pop rcl and sti cmp dec jae mov add sbb out jnp dec jae cltd dec sbb lods loop mov in icebp cmp xor add add jecxz and sbb xchg sar jl iret xchg fwait out les mov (bad) repnz fistl push loop sub hlt loope and pop call jmp roll repz mov data16 fisttpl sub arpl mov ja scas shl pushf ss push adc cmpsb stos add inc pop stos data16 dec mov mov addl movsl and loope mov sbb popf jae mov je insl mov add cmp add roll out lea mov mov rclb repnz call add add dec mov cmpsl xchg push scas sub leave and and movsb xor in jl pop and rorb test mov or in cmp dec mov sub stc and movaps in inc push int cmp ss add and pop push leave push out lock xchg push mov xlat xor pop cmp mov push cmp jmp lret sahf leave movsl push je inc fstp mov inc cmp int3 (bad) xor bound jl (bad) sub add add add xchg mov lods push scas repz pop xor ret test mov or shlb pusha fs and sbb out adc lds adc cmp lret insl xchg pusha and cld push out andb dec sbb ljmp test sub orl dec inc mov (bad) fstpt cltd hlt mov pop clc push xchg popl es mov xor or sbb pushf and jmp fisubrl lds lock mov test push mov mov lods pop push add xor loopne cmpsb and out jnp mov sub pop insl mov push xchg clc lea and mov lock popa lcall gs in (bad) mov lahf xchg inc mov push mov out lds push (bad) mov jbe mov adc int addr16 shrb inc dec or pop add dec xchg lock popf aas daa call maxps inc repnz push popa jg dec xor push dec mov (bad) cld xchg cmp dec aaa push inc movsb mov mov add add add push add rcrb das jg scas or jnp pop xor dec loop decb fwait add inc inc pop mov inc sbb xorl adc sub mov sahf sub leave mov repz fildll into adc test lods dec mov add mov pop push fstpl jbe adc mov lock xchg int adc mov mov test (bad) leave adc mov jns mov ljmp xorl sarl push shrb mov xor add add popa or in sub mov nop lods repnz inc (bad) dec addr16 daa out pop aad ds ds mov mov mov jl mov loope out mov pushf mov pop xor mov push mov jne cmc pop outsb dec nop popa lcall popa push pop jo std insb cmp aad dec std div or jmp lret int3 lcall dec xor loopne outsl out fidiv icebp or loop push cltd stc or dec pop or imul add sbb movsl out push stos popa leave jmp add movsb pop insb and mov xor jno aad and nop shrb and pop insb ror or fsubrl sbb jecxz sub fistpl mov jmp sarb push mov dec push je add xchg pop jmp insb imul and jg inc scas insl xchg out mov mov in insl push (bad) (bad) xor rcrb mov mov or out push cmpsb add add add jmp fistpll repnz xchg cmp shlb pop add xor das sahf sub and imul dec btc aas (bad) arpl repz js bound in mov lock inc out xchg in les loop jmp jle (bad) jo push cmp aam jp mov xchg es mov sbb jp pop mov mov in mov mov scas mov push rolb andl cmp mov mov cmp cmp inc insl push xlat enter add add add dec cmp xchg fldenv xchg dec and pusha push jmp stos nop test adc pop int3 mov (bad) out in push les push cld mov pop xchg pop xchg inc or cltd mov repz mov dec in in stc and int3 sub clc rcrl pop push test arpl sub dec mov imul hlt adc mov mov rcll shrb xor cmp rclb xor mov dec aam loope sahf outsl fs nop inc int mov repz fdivs xchg sub inc lea sbb js push das daa testb int mov fwait sbb push mov mov lock mov das bound pusha (bad) mov lea jae jmp dec inc (bad) dec push (bad) pop dec pop and fiadd mov inc jbe (bad) xchg mov adc lea fidivr in sub sti xchg iret lock pop adc push mov xchg xchg sub and mov cli xchg pop shrl stos lea cwtl stos stos imul pop mov add add mov rep cwtl cs fidivr jno (bad) sub xor fwait dec xchg lds enter int3 fstps cmc xchg jne subb xor fldt adc push jmp mov add add ljmp dec stos sbb (bad) cmc push inc push push addb cmp or pinsrw rclb pop out sbb mov js push int3 and mov mov sub jnp je xor sub scas movsl dec scas call add add in outsl lret inc dec add adc cmp arpl fs insl ljmp (bad) and nop xchg mov sub shlb push int sbb dec in pushf outsl xchg negl fsubl loop out add imul pop jmp sbb cmp fisub test pop mov pop ljmp mov and lods dec fldt push out inc mov and adc rcrb mov sarb sub sbb icebp stos aaa inc pop push icebp xchg ljmp add add repz adc jae shlb cld xchg fsubr mov and sbb xchg (bad) std or add sbb clc lret fwait (bad) sub fwait and inc cli lods sbb int3 cmp std xchg and sbb loopne arpl mov mov (bad) movsl int3 jge and mov inc enter leavew xchg loop sub dec inc jae and ljmp push iret jns mov insb cmp incb movsl mov inc jne cmpsl (bad) ja or nop mov dec mov in push scas push dec sub pop mov pusha test add add push and insb aam movsb stc cld test xor lods sbb mov ss jbe rorl sub jb mov inc (bad) jo cmc addr16 popa pop sbb inc mov adcl sahf test mov mov fs sar cmp add loop fprem jl mov sar (bad) std arpl ljmp fs mov jbe sub push int3 movsb sbbl int3 xor pop aaa pushf scas out outsb dec push cmp push push pop push aas imull sbb inc pop xor insl inc inc or dec mov add add and ror inc jbe jae push and cmc inc xchg sub push cmp pop jns pop fdivs lds out in xchg xor mov es pop jns addr16 mov dec mov incb out loopne push inc pop out int push jmp insl jbe,pt or stos xchg adc popf (bad) mov mov outsb movsb jle out cmp mov (bad) (bad) adc xchg js pushf and fildll mov xor loope push loopne cltd jbe push shl xlat stc (bad) sarl movsl pushaw mov push dec in mov add add add add pop pop fdivrl sbb cmpsl loopne or or data16 aam sbb out inc push add daa cwtl (bad) jle ds hlt cli lds or or subl sarb push (bad) in ds dec enter add xor add (bad) or dec je aas push push sub adc jo cmp xor mov xchg test and cmp xchg test mov jecxz lret push add push in jnp and mov and push (bad) popa bound mov or or pusha int3 outsb add add add popa push loop imul je addr16 jo mov xchg outsl dec flds xor movsl push push les sub cli mov movsb xor xor cs push (bad) fimul lcall incl ljmp loop add gs xlat ja push rcrb rorb adc sbb or push adc mov xchg iret js (bad) jnp nop mov andb popa fcomps xor and mov mov in pop fwait or push xorl hlt push jmp out loopne add add add dec mov push xor sbb imul insb cmp mov in arpl cltd popa clc adc or pop fisttpll lahf ret and xor or jo inc sbbl stc dec mov into cmp ss dec mov ret add fstps or fucom testb cli push daa lods ja jne hlt loope cld ret out cmp jle sbb or and inc cmpsl andl nopl cltd and jo ja fs test add add add insl inc add imul das (bad) std fcmovne das or inc into xchg xor sub push (bad) leave (bad) xchg xor int ret add mov ficoml daa xchg int3 inc repz (bad) push jae mov cmpsl out mov test inc mov insl push inc mov test adcl clc les aas arpl ret pushf mov jle addr16 cmp add sub into rolb add bnd xchg and imul mov out cltd lea add xor and cmp add add add add mov inc or loop jecxz or and mov jns scas dec imul pop test test dec inc push decb pop (bad) mov xor adc xor aam call repz xchg xchg lahf sub mov dec dec daa mov push inc push add gs daa lock add mov insl outsl jbe inc imul test adc clc or add cli scas add test daa nop setg xchg adcb pop mov mov and sub push jns (bad) (bad) xor jb jle daa subl xor enter inc outsb jecxz jbe cmpsb pusha mov cmp daa xlat icebp (bad) dec iret hlt cmpsb out in (bad) adc enter hlt rorl rcr adc ret icebp xchg mov lahf jae xor imul movl cmp jne jb sbb or pop pop shll sub popf jle outsl inc sahf mov cmpsl lret std rcr mov adc sub or mov inc dec outsb sub aam jns fcoms add add mov xchg fstpt inc jle xor les and out jmp mov addr16 and sbb rol mov clc test pop cmp andb push lcall or push scas push pushf insb jnp cwtl mov in mov cld repnz lods fistp sbb sub dec ss jmp push out (bad) mov jmp jns dec mov lret push ljmp movsl mov leave sbb xor (bad) enter push xchg jg sti pusha xlat xchg sub add add add add imul loopne or xor icebp push xchg inc aad sbb adc movsl xor mov mov push fbstp (bad) in and icebp jo sub cmp je mov adc dec ret pop mov xor jno jne and push decl fsubr outsb or (bad) xchg pop out sarl insb inc les inc push mov pop movsl dec adc movsl ret lods aad add cmp adcl lock test jbe lds adc sub iret (bad) lods mov add add add outsb ja sub push ja or aas sub cmp movsb push jne orb fcompl ljmp mov fiadd in xchg out (bad) jb pop daa inc cmc jecxz rolb sbbl ret mov and loop mov cli inc xor lea (bad) jne es clc aaa push mov and sbb and enter jb sbb push inc mov mov (bad) popf inc inc int int3 jo cmc xor push sbb call pop and add add add add mov pop (bad) cmp fsub data16 sub cs xchg imul push stc mov nop ss inc int call xor or pop mov aas mov jg push shrl dec stos inc cmp and scas mov leave dec cmp mov cld cltd lock lret or cmp (bad) fnstsw (bad) cltd xor push into sub les fs push addr16 shrd clc cmp and lahf pop dec outsl cmp jb push fldenv mov imull sub jbe adc js pusha xabort divl push test xchg fiadd add add add int sti scas and dec insb pop jmp inc lahf ds enter in scas jge outsb rcr inc sbb fucomp movsl sbb stos out xor mov bound push xor or fdiv je call test and (bad) push pop push sarl cltd sub sbb cltd sti mov xchg push (bad) mov loopne mov sub rclb mov cmp jno xor dec push inc negb xchg test int3 notl xor xchg fiaddl push add imul cmp push sub sahf imul xor in fwait lods cwtl jno stc mov cmp and repnz add mov cmp rolb lock pop lret lds (bad) cmp scas dec int3 sub jae jo inc jp enter (bad) mov mov lret cmp mov aas adc out adc je lods and lock dec add jmp (bad) stc push fisttpll push insb cmc or mov je mov hlt out cmp test sbb add add add inc movsl push stc xchg (bad) dec jo jmp or sbb daa pop dec add int3 push pop mov cmp sbb arpl aas jle pop adc mov pop cld adc dec sub lret lret add jle in fbstp cmpsb push and push dec stos cmpsb or in loopne jns fistpl imul pop sbb pop shll adc xchg js pop (bad) and subl push xchg fcmovbe paddusb jmp cmpsb mov (bad) scas jns out mov scas nop add add add add cmc imul fdivs cmp out jg pop clc (bad) in dec leave jecxz push jae push daa sahf push stc js outsl mov sub dec pop in inc cmp xorl cmc (bad) pop inc std pushf aaa mov xor pop (bad) ss jecxz (bad) or lret mov mov jp sahf lods dec mov (bad) dec popf push pusha mov out movsb add push test cmp xchg lds in mov xor scas popa xchg xor cwtl mov jnp in xorl lcall cmp jnp das inc jnp popf push push mov add add mov dec cld xchg dec xchg or arpl inc xor xor push or dec loopne xor lock ja addr16 dec loope or or ljmp or pop inc stos lods lret ret jnp cmp jmp (bad) outsl fisubl popf and add cmp aaa out mov les dec push sbb pop (bad) push or outsl inc xor outsl je out sti bound and test mov fisubr iret into inc xchg stos xchg push jp adcb (bad) dec dec xor mov call imul xchg lret popf imul stos (bad) out call jecxz fbld mov xor out cmp test outsb pop test jg dec sahf stos sbb fs call xchg dec jo,pn xchg mov addr16 pusha and sub cmc gs mov sti pop pop add sub cmp lods cs les xchg stos mov pop xchg call mov pop jmp nop cltd imul cmp push jno mov icebp call lods push fidivr icebp cli lods es loop into inc lock add add add add xchg pop push insb mov fwait sarl enter data16 cld dec stos insl popa adc lock loopne mov sbb inc dec xchg adc xchg into jno mov lds aaa jno inc sub adc lock movsb jnp aam mov out mov fdivrs hlt mov pop inc xor stc insb sbb clc orl jbe mov pop cltd inc stc outsb pop rcll adc fistp rclb push loop fwait test and repz dec add push xor cltd leave clc ret das lahf or lcall mov xor xor pop pop lock ret sbb aaa movsl push out jecxz mov aas cmpsb mov ficoml xchg cmp mov lret lcall lret shr (bad) push mov and setne inc int push mov sbb adc aad cltd fmulp imul adc cs mov loope and and cmp insb stc movsw pop jecxz jge add je rclb push xchg add cs incb add add add pop xchg cli inc (bad) loope int (bad) mov push push fdivs and and pop inc push cmpsb fsts xchg icebp mov jmp push fdivs inc dec sub fistp (bad) jg adc mov cmp and inc inc cmp testl ficompl add xchg and aam pop pusha inc xchg cmp into outsl and mov push mov pop adc sub dec pusha mov (bad) push daa mov pop jle das out mov out xchg jg addr16 xor cmpl push (bad) mov fdivs add add add add add fdivl pop popf test in adc or test mov xlat push adc adc imulb inc or movb sub xchg add stos push sbb mul jg sub add popa bound fs pushf push and cli inc cmp insl repnz fs or movsb out pop sbb cmp in jg dec inc push aad cmp mov ja (bad) jns int3 sub xor push inc inc or cmp mov inc dec dec sub add add add mov push add (bad) sbb mov aad pusha inc fstps sbbl mov push mov jg cmpsl mov mov pop or sub bndldx sub push xor cmp out jecxz inc stos xor or neg or dec vcvttss2si mov add test leave ljmp inc or push (bad) jg enter pop enter push cmp out fbstp out and sbb pop (bad) pop mov lock dec xlat pop roll int pop and fwait inc out xor jno add fisttp pop mov sbb xchg lret xor pop fdivl int3 push pusha popl dec (bad) mov idivl enter popa mov out lcall leave std pop cmpsb shll scas insl adc scas sbb iret pop stos sbb sub and inc mov mov add xchg jns xchg pmaxub loope repnz addr16 aaa xchg fiaddl adc mov sbb xchg fist insl clc mov and fst movb add add xchg xchg pop inc (bad) xor test (bad) jmp ljmp loopne outsl iret push dec daa push cs xchg stc mov addb loop rcl test lret orl mov adc cs test jns (bad) nop icebp imul add ljmp add inc adc jb sar maskmovq testl push mov fdivp repz iret and jb clc fwait push mov or ret in aaa sbb jmp push lock pop xor out sbb sub cmp xchg jb jp add add add mov neg inc xor mov stos je popa orl std loope xor jae sub bound mov sub ret stc xlat push clc cmp sbb adc popf int3 mov pushf stos cmp addr16 cmp cmp dec mov and push (bad) (bad) int3 xchg addb fwait out mov rclb xchg lods out hlt pusha hlt div mov fnsave mov and jl pusha scas pop jg pop mov pop push inc mov mov fimull out and mov add add add add dec xchg shlb arpl inc dec ljmp stos jl cmp xchg dec mov scas dec out cmp jle mov sub pusha sbb in sub ret mov ficompl in dec sub (bad) jns mov mov out (bad) scas addr16 fildl cltd ja ljmp jg adc lods rcr pop ljmp mov cmp sub sbb je dec cwtl xor sbb sti jns fucomi gs adc xchg jbe,pt (bad) aas leave dec out bound (bad) jge mov pop jecxz jnp jne dec push xor movsl pop aas mov in dec adc mov ljmp imul inc in adc mov xchg or nop mov xor sbb push jmp push (bad) sbb pop sti leave xchg sub inc shrl mul scas jp jg xchg (bad) pop fs (bad) test adc jno pop out fldt xor es jae (bad) jb sarl ret mov rcll fnsave test push int3 add outsl push mov mov sbb insb das jle in cmp (bad) xlat and push add lock mov sub shlb xchg lahf push dec aam ret dec cld int push sub imul and mov xchg mov ljmp and rcr jmp mov jmp in mov add movsb outsb adc das out jae dec mov push mov adc lods mov fdivp push xchg or shr stos iret xchg sti cmp loop lods std jg jecxz daa fnsave pop idivl imull nop call add mov out ficom subb pushl add add add jb push ud2 or mov jns jne negb adc add jle mov mov (bad) inc sti pop jge imul pop aam ficompl les rcrl mov mov ljmp fdivl mov in push or mov js pop adc sbb and adc cmp fwait mov add daa jle xchg push (bad) cmp mov cmp out (bad) aad call add add add push jmp fsubs sbb adc mov les mov push sub push out inc adc add mov mov (bad) xchg lods sbb dec xor out lods adc lret andl push sar xor cltd sbb lea pop xor loopne (bad) jno dec cmpsl outsb (bad) pop sarb mov in (bad) xchg movsb cmp mov dec jno adc mov cmp sbb mov xor rorl mov xor push mov pop jge mov jb push ds jo idivb or add add add add pop and popa sbb sub mov mov stos out sub push mov dec nop dec cli ljmp push dec sbb (bad) jg jne xchg das movsl in push hlt test dec out call repnz pushf sar cmc and in xchg push and lock adc leave inc jg fsubrs outsl or test into inc push arpl pop loop mov or out scas fdivl jne inc aas dec shr cmp mov fdivrs add push (bad) pop and xchg xor sbb scas (bad) aas xchg adc jb (bad) jbe add add add outsl ror std push xlat mov sbb push stc jmp cmp mov push out mov mov mov divl adc adc jns repz gs (bad) int3 jl mov jp fs xor xor js inc cld bound icebp push xchg and push js outsb daa shll xchg adc in and out bound cs sarb mov mov xchg int shl lea les pop out push mov add shll scas or std mov jmp add and lret fimul add add inc xor mov add sub ret mov mov push cmp xchg mov ss mov xor add push xchg pop hlt daa add xchg popa add dec mov push sub fwait adc inc add and rcll orl sub push mov out out sub jle sbb dec pop dec pop mov fmull mov rcll sbb mov sbb mov addr16 fimull movsb gs ret sahf rclb add loopne adc sbb repnz jno and mov jl test sub jle push pop mov shl mov sub xchg mov dec inc pop add dec out mov mov popf popf scas icebp shrb scas out push lods sbb mov cmp cmc bound aam fldt aad dec mov test es fdivs loop adc pop hlt movsb xchg mov jbe cli inc data16 ja or popf cmc inc add pop popf popa push sti mov xor xchg xchg addb push es (bad) xlat aam icebp xchg fsubrl mov shl dec jne sub xor out xchg std xchg jnp mov test adc cs xchg sub daa push inc ud1 lret mov cli adc mov lock sub les dec push negl das pop cmp lds mov mov testb pop add in jmp adc mov xorb inc int3 cmp pop rcll add mov sbb jbe jo cmp sub in test aaa push mov cmpsb sub xlat lret dec sarl test jl,pn xchg dec std mov lahf pop cs jge mov pop push fdivrs or repz mov xchg clc loope jl cmp stc cwtl add dec add mov mov sub mov adc lds sbb xchg xchg (bad) fwait mov and pop push xchg imul sbb stc jb pop and (bad) cli mov movsb shrl test jne or adc add add add mov add cld adc or stos pop pop cmc stc and cltd fcoml int3 or mov mov adc pop or gs gs pop sti jns jb mov (bad) mov das lods cmp fiadd out ja div stos ljmp xor (bad) mov mov adc jbe (bad) ljmp popl decl cmp nop xchg inc stos xor jle cmc pop dec mov jge sub xor push jnp mov pop scas divb xchg cltd pop add add add or repz movsl add cld sarb out mov xor subl lret wrmsr mov mov xchg sahf (bad) fcomps ret mov dec pop daa ret pop bound mov mov lock mov jg (bad) arpl fnsave cmp cmpsl idivb sti sub and inc scas or jb loope mov mov xchg pop jmp stc out imul lods aaa fs xchg push or push and dec roll push jmp loopne fdivrl fcoml add add add adc cmpsb mov hlt dec mov ror lret and lock jns insb pop push pop sub mov imul outsb pop push mov cli xchg inc test jno adc (bad) xor pop mov sbb je xchg insl push pop xor loop mov lock push sbb dec je jnp and sbb jbe cmp add sub push add lret orb pop out repz jb stos paddsb bound sub cltd bswap pop push lahf lea stos cmp add add add cmc mov dec jge inc loopne xlat mov insl lods xchg push cmp lock outsl pop mov aad cli outsl inc test stos add insl inc or inc hlt add inc adc pop pop ds nop mov inc das aam add xor out sub cmp lret je ljmp mov ret jl cli mov psraw ret loope bound cmpsb (bad) adc cmc mov pop lods jbe sub aaa or add xor fcoms or lea add add add ds or and adc pop stc iret fnop xchg jp ss insb test adc xor out push jecxz mov xlat xor xchg (bad) jb xchg add fs sub clc or sbb lods push outsb mov and pop testb in fs cmp sub lret mov aas enter xchg bound loope imul mov fwait mov ret (bad) int push or vfmsubadd132pd mov cmpsb cmpsl add jno mov or loop ret ret jmp gs add xchg in pusha aaa loop rcll ret mov push aas pop test lds add and xor mov int mov xor clc cmp outsb out inc (bad) rolb repz add lret sbb ficomp mov add imul xchg aaa sbb aas gs add lea jnp sub insb (bad) ja jge fisub pop or push sub (bad) mov mov outsl mov cmp add add add add int3 and (bad) dec xor or call adc jmp aad sbb inc in adc imul mov pusha (bad) and je call xor loop out lods (bad) mov xchg mov lret and mov xor pop adc mov or scas cmp jge out fcoms les mov addr16 decb mov hlt lods pop push in cli pusha out fwait insb aaa cmp fldcw adc lds jecxz mov mov mov loope cmpsl jle add add add add icebp out cltd (bad) fist pop pop cmp aas (bad) adc out lds lds js xorl push push fdivr fistpll jo cmc fs jns pop jne jge inc clc shr xchg mov scas or sbb jmp add cli or sub fisttpll or xor fisub jbe mov xchg mov outsl adc cmp or mov (bad) mov push xchg dec inc mov in push mov and add add add add scas add mov lret pop xchg xchg xchg pushf jb jbe pop and out xor push mov mov movsl loop xor dec xchg sbb mov aad into add arpl ret (bad) jae push push aad cwtl xchg mov mov fdiv mov jno into cmp inc and jecxz mov adc xchg outsb mov push xchg rcr cmp inc popl cs lcall xlat (bad) adc cltd outsl or xchg aaa ret outsl aad lock movsl mov mov xor add mov xor add fwait push sub or in insb outsb dec inc inc cld inc (bad) out je sbbl jle push xchg daa inc daa mov loope daa add add jp movsl jo fisub repnz clc outsb cmp (bad) cld adc fisttpll mov scas stc mov push ds pop add icebp push (bad) mov xor test jp rolb mov sahf sbb mov nop or cs popa (bad) std cmp add popf xchg mov sub mov sbb push mov xchg or sub fcmovne adc cld pop add add add inc and xor jns inc push rcrl lods pop test ja dec mov sbb xchg (bad) in or sbb lahf mov es mov dec jns add xlat ret and add sarl adc push inc or jno iret and sub adc or test add and xor dec dec add insl mov inc in test lea xchg push pop mov jmp loopne add ja in push mov and rolb mull ja xchg int movlhps bound add add add add dec in out inc scas xchg lock andl adc cmpsl ret fnstcw iret test ret out adc fnop pop test ljmp sbb jmp xor dec (bad) lcall les lahf xlat or aam outsb int3 (bad) dec paddusw fs and ljmp fadds cld flds fsubl std adc mov or push les sbb jp js pop es (bad) mov dec lret mov cmp xor sbb adc cli adc add add add add or orl sbb call push mov or loop aas nop (bad) fsubl or xlat cmp xor loop or inc pop js xchg ds xlat aas imul ljmp (bad) fisttpll sbb adc (bad) sarl es xor sub pop xor stos outsb mov dec fnsave das faddp test data16 xor sbb sbbl lret pop sahf mov sbb xorl add jmp fisubl idivb mov mov xchg jnp jbe or push mov stos das or jb mulps jo (bad) jno lcall sbb sub idivb loope dec fs mov adc xchg bound sbb inc ret clc cmp xchg scas jb fidivl jae lock dec aad push xlat mov inc sub mov mov cmp xchg add push les mov loope outsb outsl jp rcrl adc push or std lea add add add add fcmove sti inc mov mov push aas pushf pop daa out and push or fdivrl xchg ret adc cmp decl arpl mov outsb cmp cmpsl ret shr mov mov call cs inc out notb stc sbb (bad) int3 xor xor jae adc jge stc pushf decb (bad) dec mov repnz in repnz jbe cmpsb cmp enter rolb inc adc fwait int adc mov (bad) stos pop mov ds adc (bad) push mov enter test xchg push add jbe insl mov jbe pop and mov in lcall test push jb jg mov or xchg enter (bad) repnz push aas or loop imul pusha cli rol jbe mov int outsb orb fbld lret cmp mov (bad) roll pushf incl mov cmpsl mov jbe pusha push (bad) fstl mov add lods xor fnstenv mov cmp mov popf sarb and les pusha or add add add add ss lea xor inc pop (bad) xor push call cmp mov and pop fs mov ss insb rcr fsubrl lds sti xchg jge fidivrl shr push cld mov out cmp adc loope rorl into inc shl mov test fisttpll sub and xor cld pop mov or outsb fcomi bound lret stc sbb sbb js out jmp test lret jne xor add pop inc mov adc mov xchg js add add jg xchg xor std arpl mov stc roll push adc push int3 mov call out mov sub mov inc pop (bad) lea jb clc out and rol xorb movq cmpsb inc rorb mov push jae or mov popf jbe f2xm1 enter mov xor push sbb sub shll push sbb push push xchg sbb (bad) jp or cmp cmp xchg and jl adc dec into gs into ret lret lock adc mov sub push add add add add fsts sbb mov mov loope,pt jmp cli fstl dec mov xor mov or inc fwait mov (bad) xlat push lds jo mov (bad) mov in add mov testb mov dec insl loopne enter test jno push fwait sub mov nop nop or and out adc orl imul push xor adc and xor lea mov mov movsb cld push mov push clc (bad) inc out jmp mov add add sub push sub pop jl,pt adc or add or dec ret add pop add aad sub lret rclb xor and jno das fsubrl mov mov int and mov (bad) int push out rolb lahf jae mov jno in jb iret inc lahf out mov sub in dec imul aad ds int or in lret stc fiadd jg test test ss std add lods into lds stos xor push adc add add mov lahf xchg dec test adc out mov repz movb ja dec pop and xor push dec push icebp mull std call mulb sub dec ret stos mov lahf data16 cmp pop (bad) ja mov call lcall mov fs orl mov cmp or inc dec push sbb call mov cmp ret and idivb bound or ret ljmp adc sti daa lcall lret add loopne neg pop mov rorl jae jmp call mov or dec dec (bad) repz pop fbld mov loop fcomps adc jno sar and cwtl sbb scas faddl jmp rcll cltd out cld xchg outsl mov inc xchg cmp sahf jns and into dec or test mov das movsb aad and mov mov push mov adc mov mov xor or sbb jne jecxz sbb arpl push and sbb pop repz insb adc or arpl bswap mov cmp xchg or addr16 ljmp sbb or cltd out sarb sub xchg mov repnz nop xor ja adc repz sti jg pop call dec movsb push mov xor and aaa mov push inc fcoml out outsl addr16 rorb mov inc jmp adc pop sbb bound test and mov subl mov mov in ljmp (bad) adc pop lret add add add call stos test aam in inc jle dec fdivr (bad) (bad) cmp (bad) (bad) fist mov jo xchg ret sub mov aad inc sbb movsb imul push out mov xchg jp aad and push dec rcrb into imul popa pop dec dec mov outsb lret (bad) fmuls mov jae fsubrs int inc js dec push mov cltd dec clc addr16 loop out insl jle dec call inc jp je lahf inc imul and int push (bad) fucomi inc in outsl leave test push stc lods jb scas add pusha sub jb mov pop push dec imul insl pop in push sbb out inc push or scas and movsb dec dec push push xor push mov inc imul jae lcall inc std and dec fistpl cmpsl jbe loope cmpl shlb xchg pop push push mov fwait adc bound jl push inc fbld pusha or or lret and das mov pushf add sub sarl dec call add add add add jno cs jl jmp jae cmp or mov jmp (bad) pop jb scas push push or add sbb addr16 loop mov loope repnz push dec mov ljmp outsb (bad) push pop cmpsl repz fdivr and pop add push dec cmp sti pop aaa xchg cmpsb ds out push push out fldenv lea (bad) adc and mov in ret fnstenv and or and lock addr16 add sub (bad) negb add lret shll cld inc in ret jmp outsb out mov cmpsb push aad inc out and ljmp mov popa mov hlt je enter pop and mov dec or and ds mov cmp dec xchg (bad) or bound in adc adc lock cmp lret and std sbb cltd inc js,pt and inc add or outsb mov int3 adc cmpsb mov jae lret scas and sbb push mov and mov add add (bad) jne fisubrl pop cmpsl cmpsl push mov mov mov lds mov jne js (bad) test (bad) lock fs scas aas mov es ret je mov xchg test ret mul scas daa imul ds mov leave daa je adc xor mov pop pushf mov movb (bad) call jmp iret xchg pushf shrl rclb push lods mov xor jg jo (bad) push and jno lahf push pop bound popa jmp or icebp lret add add add add call or dec jecxz mov cmp addr16 or xchg sub dec sub outsb and pushf push inc sub cmp mov jnp push ljmp adc add daa hlt jb push sbb and jb jecxz xchg sub dec or data16 xchg scas xchg lcall dec fxam pop testl sub pop imul and ror mov iret inc fbld out fdivrl cmpsb fs push fdivs dec jge push cmp add add add loopne and (bad) adc imul cmpsl popa call ret or add xor or pop call cmp pop movsb jb test push mov pop ror sub jle mov inc dec inc aas xor incb dec mov (bad) into jp xorl mov xchg cmpsb lret add cmp (bad) cmpsb mov in mov sti push dec in adc add mov mov rol jno (bad) mov lahf orl jae fdivrs cmp mov lods sbb rcl daa and cmpsl into stos mov xchg dec xchg or lods sbb outsb push mov xor xchg movsl (bad) mov xchg std mov add pop pushl in push psubb jne nop dec sub (bad) mov add add or fstpt lds or sub lret enterw add into sbb rorl in xor cli jmp ret lock lret inc push (bad) shlb xchg fstps sbb sub add add add add aad jns clc jne push mov ret jmp shrb fsubrs stos scas and sub inc cmp cmp xor mov push roll cs scas mov mov and push cmp sarb adc xchg xor dec je jmp xor push clc in jmp stc lret outsl add pop aad pop arpl stc cmp (bad) cmp mov xchg in sbb add mov sbb sbb sub mov int (bad) adc pop add mov add add add in xlat xor imull lock lret dec aam sbb push ljmp sbb popf out sbb mov and negb pusha loop cmc and aaa lahf js sub into ljmp and sub (bad) mov int leave pushf std scas adc std jle das mov pop ds fist adc lcall sarb inc loop jae (bad) jae nop jp and in insl out cld (bad) mov xchg or cmc sub in sbb inc (bad) iret scas inc insl in xor dec stc mov add (bad) negb test rcrb sti xchg loop push push iret mov jne sub or inc movsb sbb in nop mov loope push stos sbb ret ja push add int hlt jmp add stos dec xor push (bad) sub scas addl mov push loop xchg ljmp hlt les test push lods in rorl and push maxps xchg cli clc sbb push call jl add mov add add cmp inc nop mov notl push imul stos clc (bad) push mov ret push icebp cmpsl (bad) jecxz pop or push fisubr (bad) out jnp mov imul dec pop mov jecxz icebp jns mov mov xor mov neg cmp xor xlat inc dec adc outsl sub int (bad) divl mov sbbl pop inc cmp inc adc or fild out adc enter mov fistl mov popa aam nop pop in test jnp ds rcl add add add jg (bad) mov cwtl inc bound fimull (bad) or jbe icebp sub mov loop pop lds ds or mov mov scas lds ljmp jb xorb fs sub aaa and scas lret movsl mov cltd inc adc enter lahf (bad) jmp cmp mov or adc dec dec xchg test nop loop inc lock push mov mov or sub jnp (bad) mov nop loope xor ret bound add add add js xor sub fisttpll jle pop icebp push leave pop popf jae dec inc sbb dec leave sbb jno or mov xor pop fcmove inc xchg add movsl sti fldt popa mov es push sbbl out aaa stc pop clc mov sub leave outsb mov in repz add xchg xor dec mov cmp inc decb stos (bad) push lds mov test jo jmp push loop cmp (bad) dec js pop inc fild jp sarl jmp add add pop les movsl std stos pop pextrw popf jb add gs sbb push or cwtl aaa stos inc xchg dec int3 shrl sub sub cs cmp jecxz fsts popf and dec or loopne pop add fwait adc dec js jmp popf roll fbld fimull cmp pop xlat scas cmp fsts or sti imul or xchg jae cmp xor xchg push sbb iret xchg (bad) rclb mov dec pop or xor mov test add add add add int3 (bad) scas push mov sbb xor int3 pop cmc pop sub or and test push out inc popa fst pop ja push dec xchg add mov dec ljmp (bad) inc je mov dec inc addr16 repz jno mov mov pop and push mov sub xchg cmp iret sahf outsb cmp xor push inc add cmp push or call daa clc sub sarb out or mov add push jnp mov sbb mov add add add adc test pop mov leave clc or subps push fisubr dec fmull xlat mov aad xor jo out jle rcll sub mov jp subb sbb leave inc push xchg pop and (bad) imul jle mov sub fwait and lods mov stc mov fs lock mov pop mov repz into shll add scas pushf rcrb mov sti call dec lods mov in or push stos scas mov add adc bound imul fucomi pop and (bad) xor cltd inc fidiv push sub or in hlt fs mov sbb ret gs test fnop call push push stos addr16 in inc (bad) (bad) pop jecxz adc mov scas test inc lcall outsb adc cmp and mov aaa pop add push fcomp pop pop sub fmul push aam add dec sbb in in les add push pushf out mov fsubrl mov (bad) inc fadds add ss out add push pop loopne or sub test pop xchg shrb dec jnp ret sbb bound jecxz pop cmp (bad) mov inc in loopne pop (bad) jno xchg jne out scas pop dec push jecxz sub mov cmp test iret fs sub mov mov pop out push repnz fisttpll dec pop push push add lcall out sub rolb inc movsl xchg mov jmp pop mov jnp fs mov mov test sub push jle daa inc roll jg push mov and push pop (bad) js test rcrl inc ljmp imul mov scas xchg cwtl pushf bound add adc or outsl jge in in ret stc xorb (bad) xor add movsl ds ljmp jmp adc or stos into jns mov rolb mov test dec lock je xchg or sub push cli sti or sbb rorl fldl add sbb cld test dec jbe adc sbb sub push fistpll mov pusha ret lahf popa fsubs fcmovbe add mov xchg iret outsb (bad) jb lcall mov xchg mov mov xor mov xlat jg jle add inc int jge inc cmp (bad) mov sub outsb xor dec push jo push sbb mov in inc lods repz sbb push repz (bad) cs push sti int3 mov std inc mov dec int3 pop (bad) fild cmpsl add mov sbb cs dec push jecxz jg test into xorb xchg xor call add test xlat sub xor leave aam and dec jo,pt mov pop adc lret add inc jmp sub mov xchg inc lret push nop pop bound add pop dec inc dec loopne xor call or push mov sbb lea sbb push inc sub jne ret jmpw int adc jmp mov fild or sbb stos in lods lcall sahf inc pop bound (bad) lahf popa es lods mov inc mov pushf mov add lods das popf inc out test mov mov lahf scas cmp not pop insl hlt insb fs adc jecxz adc cmc xchg lret pop mov stos stos cmp cmp mov loop add pop enter sub pop add lret or (bad) mov cmpsl out mov mov xchg inc popf sbb dec cmp and inc test lret mov movsl jge push xor add sahf repnz and cmp lods jns push push lods lret insb mov mov call lods jmp add add add xchg adc mov loope (bad) (bad) popa out inc dec rcrl mov and xchg mov sbb call sbb xchg ds (bad) fistp rcr leave add cwtl cmc sub das mov rorl fwait inc jge bound mov push and loop mov mov mov and aam pop cli push xlat or stc (bad) pop cltd fmuls inc cmp scas adc rcrb inc (bad) and ss outsb loop jnp and scas cmpsl ljmp je fsts jnp or cmp and mov add add aaa inc lods dec (bad) aas pop inc dec mov ljmp ljmp xor hlt mov gs inc fiadd aas jb mov cmp movsl add shl dec sahf cmp (bad) jne cli js add test adc xor xlat aaa fdivr je popa enter dec adc jmp cmpsb scas in inc fldcw pop lock push loopne inc int3 out fsts jbe push pop sti jecxz or mov mov leave mov add xlat xchg rolb pop scas sahf pop xlat jb (bad) insl push sahf fldt dec aam mov pushf add add add popf ret push stos arpl mov xor mov sub push lcall fdivrs xor xchg mov dec iret push pop mov lret mov push mov mov cltd push mov mov inc les cmp inc cs dec and push push mov xchg les test jae rorb aam fs fildl out pushf xorb cmp jge cmp pop pop mov xchg lock test ret pop icebp dec adc sub imul add daa or push into enter ds clc fcomps add add add add inc stos jmp sbb pop outsb or jnp dec sbb jbe (bad) (bad) jg xor inc pop (bad) int pop sbb loopne aas sbbb or inc dec and add aaa jns pop popa jns or add cs mov xchg sbb cmp popf in mov adc ljmp daa push and hlt xor add mov jnp into mov out pop xor lds lea lods leave fs outsb cld fcoml add add add add sbb inc mov mov cmp dec fdivrs in pop pop add dec and xorb lret sbb xchg pop add lret pop out addr16 js addr16 setle inc add sti inc adc out (bad) and mov inc fsts adc xchg stc pop cli cmp jecxz pop mov xor scas shll stc lods xchg mov mov lods popf push lret lods mov jge pop mov sbb mov (bad) pop mov test (bad) adc jns add add add add in int3 and (bad) out loop stc roll mov out push leave cmp ja or into out cwtl jge loope rcll out ljmp sub mov mov popa pop out pusha mov or jl leave sbb add and ds icebp (bad) pop loope pop and lea sub push adc nop sbb dec test pop shr push lds ret and (bad) mov xlat push mov and jne outsb push xchg cld (bad) xchg sahf cmp lret adc icebp xchg pop fbstp jge adc nop (bad) mov aas leave (bad) cmpsb repz outsl and arpl imul clc es fwait jns jp xor add ljmp sbb scas cs lock pop lahf xor sub and mov rcrl repnz sbb add clc jb dec cmp outsl jge lcall mov lds hlt dec cmc add (bad) lock push jecxz xor cmp daa stc ss sbb cmpsl js xchg or hlt test pushfw call xchg es push mov add jl sbb cmp mov add mov sbb jp daa mov pop add (bad) xchg call inc mov adc std rclb outsb fisttpll in mov sub adc stc lret insb mov pop jg cmp pusha enter cmpb mov mov and cmpl sub fnstenv std inc sbb (bad) hlt xchg xor mov andb movsl sti idivb mov in pop pop push aam jp cmp add daa pop test imul xchg out push ficom adc xor mov int add mov (bad) fidivrl popf insl pushf xchg (bad) mov sbb mov movsl cmp aam jge add je lds pop aad mov mov jmp xchg mov stos or loop adc cmp shrb cmp sbb das xchg clc mov xchg or psadbw push dec shl movsl and pop int3 neg imul popf mov fdivp lret cmp lret mov pushf add add add add sbb cmp mov add dec aas pop jmp push enter sbb je inc adcl push jno (bad) push fldenv arpl ret and cmp subb xor scas pop cmp push roll dec sahf int3 call sub jnp xchg mov call in rolb daa push and sub leave and test cmp js and dec jo call lcall rolb jmp ficoml dec (bad) pop int3 sub ficom sbb add add add xlat mov add or inc jns ja fs push push sub add sti std push divl push jecxz lret sbb or sub cld and imul test push out xor add in les xor dec movsl mov inc cwtl pop in rcl add mov (bad) pop push clc ror ds cmp test cmp and rcrb mov (bad) loop dec lock addb loope adc dec dec mov popa data16 jle arpl rorb mov mov popa sbb loop jo fldenv xchg fsubrl jp add add mov test add lock and xchg aad call sub js,pn ret and lds cmpsb in in push les mov pop (bad) popf sbb pop push imul (bad) movsb scas es jne add and (bad) ror arpl mov cmp mov in shrl aaa pusha scas mov xchg rcrl xchg or sbb and scas adc sbb int3 popa mov sbbl add add add jl jno cmp sub loop mov dec test iret jne inc sub push divl xor test cmp hlt test faddl faddp sub hlt sbb xor out or lret and ss inc mov mov cmpsb clc and pop push inc cmp dec jo mov adc test and aad xor arpl cwtl or push sarl out (bad) or sbb xor sarb scas adc jl movsl gs out sbb add fimull add cwtl jne fs das imul in mov jmp call or rcll xlat pusha push in cmp mov jno cltd mov cmpsb (bad) mov add mov and idiv dec pop flds int stc clc pop loop mov add outsb dec push cmc out int3 loop pushf jle std lods mov jecxz dec pusha ja iret test (bad) jbe aam scas sbb rorl fildl adc add xor mov pop or lcall pop add hlt add add add add mov (bad) xchg adc popf sbb test mov dec test and insb sarl mov push (bad) subl rcl notb add mov es sub scas lds fld1 cli sub cmp or pusha inc sub xor loope dec popf xlat fcoml aam jge add shll xchg cmc das adc lods adc sbb mov sub icebp test fiadd loope or les mov icebp cmp sub mov add add inc pop repnz in lahf inc adc and jp rorl stos into iret add repz add comiss pop (bad) cmp imul fstl fidiv push pop fcmovbe rcrb fist push adc jge shrl or lods data16 fiaddl dec data16 jecxz cmp pop movsl loop pop aam sbb xchg xchg (bad) or (bad) xor (bad) or mov xchg out xchg lods mov int adc icebp xchg sbb leave and or cld rcll cmc add add add sbb inc pop or icebp jg (bad) repz mov mov lock stos pop cmp lahf push out push repnz ret or clc cmpsb fxch (bad) lea cmpsb inc aas repnz lods push cmc icebp cmc lret ss xorps cmp mov xor int push mov daa sub decl adc mov jno cmp mov lcall jecxz fcomps pop fcompl push rolb push lock sub jbe adc push shll out mov ja add mov ljmp mov mov clc add sbb in bound dec out sbb andb mov xchg lret push pop push outsl sahf cmpsl mov jo mov push rcrb mov out and mov jge push add lahf stos fimull sbb fwait subl push cmp icebp mov scas jns dec xor (bad) push mov push std mov sub mov (bad) jbe test and test pop inc inc das push cmp cmc loop leave dec data16 ffree mov jg aad repnz add (bad) jle add (bad) loopne shr dec into xor shlb jb adc xlat scas cmp aaa jg out data16 (bad) mov ljmp push jb and ss xor mov scas das mov xchg xorl xchg xchg les cmpl push insl sbb jmp add mov fnop std imul loope and lcall adc stos or lret gs loopne push mov decl insl pop dec adc stc outsb push stos adcb mov jb add add add add int3 sti int3 xchg in push pushf mov jnp imul into cwtl and imul pop arpl outsb fwait mov (bad) fs call push out leave lret push (bad) mov lcall adc sbb popa ljmp int pushf mov or sbb xor inc sub (bad) xor xchg out add mov mov outsl out (bad) adc pusha sbb cmp mov jb inc ret mov sub pop (bad) lock mov cmp mov adc add add add inc push jg call xchg imul es lret cld pop enter insl mov fwait xlat push or sub jge push sub add jno scas leave jmp fidivrl mov shlb sub inc mov or push test ret lcall insb test lcall lahf cltd inc push sbb mov and jb add xchg sbb cltd jmp mov ss cld pop dec in iret pusha sarl mov popa dec and mov xchg lods add add add adc cmpsb js mov jnp add sar inc vpaddd xlat push cmp mov push (bad) mov dec mov lock xor adc enter test fs sahf push rorl movsb inc jnp fisttpl aas lock lretw rcr pop insl (bad) aas mov jp inc mov dec fdivrs (bad) push sbb xchg aas push and lock cmp pop rolb cmp cmpl dec mov dec clc stos daa test ret pushf push add add add ja (bad) xor jl,pt push or push dec xchg aas loopne add sub jge iret sub or inc dec and dec lock insb or aad xor jb fbstp je cmpl push std inc (bad) dec cmp pop pop insb aad inc js mov cmp pusha push (bad) xor ficom lret xor cltd pop clc push mov lea jl pop sub test sbb scas (bad) imul insb lahf adcb stos out (bad) test lea add add shr rolb xor popa aas (bad) enter or and cmpsb out (bad) mov lds scas iret mov sbb add jecxz addr16 cmp xsavec les fdiv pop arpl arpl subl nop mov mov call mov and jae inc push cmpsb insb pop mov cmp outsl out lcall repnz jae sbb sub test sub das push daa inc sub and orb fnstenv jno sub clc inc pop notb add add add or jbe fnstsw push sbb jg jne clc xor push das or ljmp cmpl inc leave test enter mov orb and out mov inc push mov in dec cmpsl mov (bad) mov inc and stos es ror je (bad) adc popf std out (bad) xor xor fcmovne push inc and push xchg jbe test or popf int3 imul imul mov push test pop add outsl lret std addr16 push scas aam inc negb jl loop xchg add add add add add mov in addr16 arpl (bad) std (bad) push je xchg sbb iret pop xchg inc cmp dec pop sti xchg dec sub xchg (bad) push add dec outsl mov push sbb ljmp cmp xchg call cmc dec lahf stos std jae lret mov mov xchg cld cmp out js mov jns jo mov test inc push ret ljmp cld fwait scas mov adc push cmpsl push mov xlat cli ljmp push cmp mov in divb fist add add lret test or rcrb data16 jb fisub mov and loop (bad) sub rorl mov xchg popl test mov or inc fwait xchg or push jle mov shr xor out push into push loopne jecxz mov fldl leave jne int3 pop mov push enter (bad) xor and hlt sbb aas repz xor in (bad) lret dec add jg pop xor ja out lock add ja xlat dec in inc add (bad) out fisubr add add add jmp mov xchg test pusha lret lret dec aas shrb popa stos rcrb mov daa dec mov dec scas jmp or sub jns outsb sbb in gs pop ja cltd ds mov jp movsb repnz mov roll xor mov shrb hlt roll cmp mov pushf dec mov iret outsb outsl sti mov enter por xchg cwtl and aam sub xchg pushl dec movsl pop popf pusha sbb out in ficompl inc fistl mov dec pop add add add add dec push and mov and push cld push outsl hlt int3 push cmp xlat cmpsb sub adc push mov cli scas iret lcall frstor mov out sbbl addr16 pop mov fiaddl jl mov jae enter pop push (bad) out int3 add jle mov (bad) repnz and rclb xchg mov mov xor popa mov push out mov movsb mov iret gs or movsb or (bad) cld pop loopne lods lret xchg push shrl imul sub add add or adc aam test push fwait mov leave push idivb mov sub (bad) lods pusha mov jb mov cmpsl push movsb loope bound (bad) bound leave mov push jno xchg popa cmp das cmp jo adc cltd (bad) xchg mov outsl aam sbb rcr mov stos pop into jb and inc data16 std inc cs int mov xchg popf pop cmp xchg push out push clc or test mov push orb imul sbb popa push sub nop push clc outsb sub xlat and pushf xchg aad repnz movsb out pop mov sub insb sbb pop neg ret jnp insb rol movsb aas jae cs and mov push lods in pop sahf inc fsubr xlat inc dec adc or sahf add cmp imul sbb addl inc push outsl in adc aaa icebp ljmp add call cmp dec lcall xchg cli mov adc das (bad) leave cmc adc nop test int3 or clc mov mov jne cmc sub mov in add add add sbb jle xor pop mov es sbb xor jmp loop addr16 mov xchg cmpsb mov or cmp fsub pop push test sub addr16 fs cltd in sbb lret (bad) sti test orl fisub mov push cli popa ljmp fs add addl push cmc shr pusha pop lds ds jmp clc cmp ja inc mov push mov add jge push cmc mov das mov loopne xchg mov adc add push mov jbe js sbb and adc jmp int jnp lahf mov or enter fisub xchg ficoml inc or movsb push and jo cmpb xlat lcall inc cmp sbb out addb mov sub or and push adcl and inc mov xchg add sub xchg je and pop das xchg pop push insb or lret mov int mov pop or and pop mov push addr16 (bad) hlt bound dec daa imul loop push iret cmp add add push fist cli push lock add pop cmp leave inc jns inc test lods dec inc sbb fistpll dec and repz dec push daa fildl fbstp sub enter push hlt fcomip push insb lret (bad) ljmp ret pop push jbe dec jl sub xor lret adc mov fmul out cmpsb pop push (bad) lcall inc or lea mov test pop push out fs int3 std sbb mov push ret popf mov xchg sbb xor fisubrl ja in lds sub test adc add add add into out pop jl mov cld out fldenv shll leave leave push lret mov sub pop mov dec dec (bad) repnz cmp shr and in movsb enter mov imul cmp out inc and inc loopne pop rorl jmp sbb in dec pop jmp stc hlt push aaa cld mov mov pop ds mov stos outsb sub loop popf popa mov (bad) push clc mov lea call aaa bound mov mov add add add pop gs call ret into shlb pop outsb cwtl inc mov lea cmp xor xchg in dec js xor pop cmp jns jne xchg dec subl mov insb inc paddq mov sahf lret jno stos les iret (bad) es jns int3 in iret nop dec add popf fstp pop bound push inc mov push dec mov (bad) jo pop and bound movsl xlat pop mov jne rorl lods mov retw jns es push loope js insb pop out jbe flds add add xchg test or shr adc mov inc out xchg push lret popa aad sti mov xchg dec out mov add mov leave pop cmp inc pop add sbb pop lret mov sbb add adc iret dec out xchg cmc (bad) stos out push xchg shll add cmpsl fnstcw fimul nop or mov mov jnp jl aam (bad) mov lods and cmp std popf xchg jb push jge adc push mov cmp jbe jnp fsubl nop (bad) jb leave push xor je lcall and in and imul dec jnp gs xchg int xor fs test mov add (bad) ljmp jb fisubr ret cmp jnp aas (bad) mov pop xchg inc jl pushf jno (bad) fsubrl je pop cwtl jnp loope mov fucomip cli rep test (bad) mov in frstor insb jecxz fisubl push xor jb ja std pop and repnz jb aam popf cmp insb xchg (bad) ja neg cmpsl xchg sbb add add add hlt dec (bad) (bad) mov push or (bad) adc push mov cmpl iret sti jbe or hlt mulps sub push pop cmp inc xchg out fsubrs push mov mov (bad) pop mov or jbe mov adc jb sub pop lahf sbb fwait mov cmpsl test sbb mov jns mov cmp xchg out les imull sub imul sbb in dec pop mov xchg jnp sbbl lret add add add (bad) add pop jns stos jecxz sub sbb popf (bad) and jle push or push xor add add sbb jg jmp aad inc mov mov rcrb into (bad) sub in push out imul sbb lea lcall (bad) xor out adc mov jmp mov jbe ds sahf in inc add inc rorb mov sbb repnz fmull fldt into stc push push inc hlt push add out push test add add add pop mov inc adc inc sbb or inc js loope decl das nop (bad) jge dec loopne mov aam lods dec fnstsw push jle mov cmp pop out xchg inc or sbb divl ds push dec imul dec outsl dec xor in pop int3 push mov lret lret add jns sub sbb lock lcall jmp aas adc xchg pop insb push (bad) ds dec push jae (bad) xor out bnd lcall lea ja lahf adc inc push adc pop and js cmp dec lds mov adc aam lcall push (bad) fisttpll xlat mov adc (bad) fstl or arpl test inc or mov lahf inc inc lcall scas cmp xchg xchg push test cli push test xchg (bad) (bad) idivb adc loopne jbe outsl in stos fmuls adc or loop dec int jp (bad) in push fwait or fcmovnb mov sbb mov (bad) out cs xor lret jae cmc inc fisttpl aas add add add add cmp je lret dec (bad) inc dec pop xchg or imul popa pop stc or and sub addl (bad) jne jecxz (bad) dec ljmp xor movsl jge int3 inc mov lods xrelease add or fiaddl xor jno mov mov sbb out sbb aas adc jo sbb and mov daa add inc out js lds stos mov gs jge pop fwait cmp adcl mov jp pop jg test jge dec out add add add rorl movd inc repz push cmp fisub lret movsl sub insb add neg cli push or (bad) xlat add pop sub (bad) psraw xchg cmp sub cmp in inc mov add and insl mov bound sub pop sub testl sub xchg test xor aas insb lcall les mov jmp inc rcrl or in cmc xlat xchg adc and shll popw stc arpl sbb xchg push cli add gs sbb std jle adc cmp sti sbb or sbb int mov call lock jmp lea pop imul inc fs dec cltd add push xor jbe (bad) out rclb loope dec fldcw lret sbb sbb sub cmp lea insb and mov mov adc adc das outsl test out mov call xor popf sarl add or orb xor jae lock jae test mov mov push pushf add rorb ds sti (bad) enter int3 inc cli sarb cmp jl dec dec mov mov popf pop xchg xchg lret test (bad) cmp push cmc xlat loope js mov xchg mov (bad) fistp adc stos insl out push xchg xchg or sti arpl cmp mov cwtl jns xchg dec clc adc push inc mov adc insl mov mov das sbb rclb popf loope movsl jbe cld sbb sbb sbb inc pop and xor add add add add rorb call out lds mov repz jno scas (bad) dec add in push sbb gs lods lret (bad) ret jns pop leave call pop xor mov es inc std repnz movsl lret and adc scas push stos loope xchg jnp mov cmp push add sbb ret inc jb rcl test adc fldenv jae mov dec jecxz xchg loope lret adcb ljmp sti dec cmp sbb dec jp mov lahf xor lds pushf add add add add stos aaa test push imul fidivl push mov je fcomip pop sbbl arpl sbb fldenv int3 icebp addr16 mov sbb add dec push repz sbb push mulb add ss out push arpl lods insl add push xor pop cmp mov test rorl cmpsl inc pop sub ficoml pop xlat add sub dec jno out out dec cld sahf inc pop xchg inc add dec xchg jns ljmp pop in push stos push insl inc ret rorb add add add push scas aad std mov push sub xchg repnz lret pusha pop negb inc scas mov dec das cmp je mov (bad) addr16 and test adc in or int3 dec jg sahf gs (bad) xor sbb mov fisttp fld add dec jo bound or decw bt mov dec pop in xchg jno jb sub rcl push add cltd into mov insb mov dec insb scas pop test cld imul fist scas push dec xchg jnp pushf mov mov ljmp dec cwtl xor xchg sti sub adc push call ja (bad) xchg movsb inc jae cmp pop dec push sub out aad inc pop adc jle sbb add jmp (bad) sbb into jb dec mov imul fsts aas fstps xor mov bound add pop fild mov leave pushf sahf incb hlt cmpsb inc ficomp sbb inc or cmpsl mov add xchg xchg push sbb lsl push xchg fcmovnb mov add add add add in sti add dec jne mov jbe,pn fsubs adc ss enter inc inc inc pop scas inc mov push push lcall test (bad) push and mov and sub in scas lahf mov jmp das mov adc xchg (bad) fistl test sbb out inc fstpl cs xor inc movsb lods or add inc push mov les cld adc jo (bad) test (bad) mov fidivrl sbb mov dec or mov sbb pushfw xchg xchg or (bad) in test add add add pop mov push mov push sbb decb jno sub out xchg (bad) nop adc pusha (bad) cmp repnz mov fnstsw cmpsl and jbe sti and scas sbb fs rorl leave nop dec xchg xchg xor decb inc mov stos lds cmp push mov mov les jge mov push pop sub mov mov or inc (bad) imulb flds jp loop cltd dec subl sub test mov mov pushf stos inc adc aas mov or add add add add out adc jne dec stos cwtl push push push inc test mov cmp lock jecxz or mov test cmc lds lahf movsl xchg mov cld mov movsl sti mov mov push gs rol xor push rolb and div fs lahf je lahf mov addr16 aad (bad) xlat (bad) scas mov inc dec jle aad cmp jle and nop rcrb leave in jb xchg xchg add clc push cmc cltd out lret add add add add insb dec pop lcall jge add jmp adcl lret xchg repnz sbb mov cmpsl lcall and (bad) dec mov cmc insl mov sub cmpsl adcl jge std in and jmp scas andl iret out lock pushf notb or xlat push lds dec dec pop call cmpsb xchg popa out jmp outsb push cwtl lds dec out dec adc das jae sti insb and sub lahf or pusha pop loop mov pop sub dec jns pusha push add add add pop inc push stc mov sbb mov jnp xchg out add mov adc xor pop cmpsb loope xor sti push rcrb ret xor (bad) mov iret test push cmp movsb fcomp mov xor mov ret inc pop jmp addb mov fwait (bad) icebp xor lea or xor outsb lcall (bad) fcomi mov lret js inc pusha out add pusha ret sub cmp mov cmp test data16 aaa (bad) mov add add add fnstcw mov rcl sbb dec outsl mov mov inc pop xor fldl scas inc dec pushl mov xchg (bad) repz push leave sahf inc (bad) mov in scas jbe jle push pusha loop lcall outsl repz pop mov adc lods add cmp or adc daa xor cli cmpsb jne fwait mov push or xor out sbb mov daa jnp push mov frstor inc inc out in (bad) in inc jo inc loop cmp push dec xchg aam cmp add add xor int pushf into adc dec and aas (bad) mov push push jno movsl nop push sub pop adc outsb cmp or inc repnz icebp add and sub xchg shrb cs in addl mov mov jo jnp mov test popl and sbb inc jmp aas push (bad) push cmpl emms das imul mov or push mov sahf lret dec jg mov (bad) xchg inc adc sbb xchg xor jle lock add add add jo cli or dec arpl dec out sti shll add add dec dec lahf dec xchg arpl (bad) pushf push mov int popa rcr push inc add mov subl jl adcl add mov xchg lret push shrl movsb (bad) mov push mov cmp inc sets push adc xor jne mov neg adc aaa sbb pushf mov and in rcr incb xor adc jno arpl xchg pop subb mov or jbe mov add add add add push mov aam pop jno add inc ffreep aas xor or into dec mov stc sbb dec aas mov xor rcll push scas sar (bad) dec sbb rcrl inc aaa pop xchg or and mov andl sbb cwtl sub add loop push dec ss add leave mov mov flds ret dec dec pop and aas push xchg jmp mov gs mov aad aam xchg shr xor (bad) push movb sub xlat out jo lods mov jbe mov add add out (bad) lods mov or lods adcb sahf mov inc mov loopne orb xor push out push ja test lods push sbb jecxz mov js es js push dec (bad) bnd aaa ljmp mov mov stos push in sti in leave cmp mov movsb outsl add daa pop adc xor and movsb mov sbb sub cmp xchg imul (bad) jl aaa data16 (bad) add xchg xlat cs dec mov ss xchg or addr16 push aad inc add add add add add or (bad) push sbb js lods shlb fnstsw xor mov in push enter int3 jmp jg lret mov cmp scas mov pusha imul add int xchg rcrb push or (bad) (bad) push leave fsubr or xor scas aaa xor iret iret fldt push iret pop daa mov hlt push lret or lret stc xchg in outsb daa xor jmp push scas rcrl xchg pop push or sub pop jns add add add (bad) fcompp sub xor sub je (bad) std add mov jo mov into mov dec insl cmp push repz cmp cmc xor mov mov jae xchg arpl repnz insl das insb xchg in cmpsl jp pop in test roll xchg xor mov mov out jo (bad) push add and pop inc mov and sbb push jg sti clc cli out insl std lods push or (bad) and xchg sbb repz test cs nop rcr or mov dec gs test addr16 xor bound or mov (bad) jo imul addr16 movsb pop fisubl jne cltd ds jmp enter jne and leave outsb xor mov cmpsb fcoms bound stos pop mov leave jg fwait (bad) jns imul mov and stos sub movb xchg sub add inc jmp jns dec fwait out jmp add loop (bad) xchg add jp push push jge sbb cmp jp andl pop (bad) xlat push outsl cmp push mov js cmp add add add jns in lock gs jb mov in inc pop clc add cmpsb push push es dec bound ret xchg jne adc mov in cmpsb (bad) jae xor xor push add inc xchg mov imul lea jno lds fidivr fbstp clc loop mov dec push (bad) nop lahf ja xchg or cmpsb stc and sub or lock ja (bad) dec pop daa lret mov and add xor loopne addr16 es cwtl into (bad) lahf push xchg pop jns popf inc aad push cmp call add add cwtl fmul bound mov sbb sbb xchg loop cmpsb cmp jg sbb gs sub dec mov enter ljmp das test push and stc imul sub pushf cmpsb add ja leave (bad) ljmp sar cmp orb or daa push adcb (bad) fidiv pop pop pusha cmp and xchg les ds dec int3 in sahf add inc cld loop jb leave inc xor add stos call lods mov leave clc xchg loop pop or sbb add add add es fcompl sbb (bad) pop ret xchg mov mov jns sbb loop movl jnp adc out mov inc sub push push lods push xchg add inc subl sub mov jo loope mov lret jg pop aas mov in push cmpsb test inc cli lock rclb mov xchg and mov lahf (bad) sarb test scas jns in mov inc (bad) ss into push aas cltd xor adc push les (bad) adcb in add test cwtl adcl mov sarl inc jnp stos int das out loop mov pop mov scas add gs (bad) nop push fidiv mov push leave (bad) xchg out inc cmpsl xchg dec in cld pop jnp jns call dec inc sbb xchg dec loopne and pop jl movsl pop add movsl pop jecxz xchg mov push int3 or repnz xchg addr16 mov dec in or ljmp add cld repnz sub adc xchg aas inc pushl add add add pop aam or mov cmp roll cmpsb lret mov jae xor icebp lahf pop xor pushl loopne clc icebp sahf mov fwait shl out out push iret mov jno adc imul sub (bad) arpl mov sti aam loopne xor cltd push clc mov add movsb xchg ja push imul xor cmpsl pop push lret lret call cmp cmp imul or movsb insl movsl and mov int in std out push loop rcrl jno movsb test imul add add add add and xchg cmpsb push xchg sti into mov repnz rol sbb or mov addl ret out xor lahf subb fwait (bad) cld xchg test test jge mov fwait mov sbb lcall sub adc aam gs sub jl sub scas repnz jge push or lds sahf push iret adc (bad) aad jmp pop add cmp xor not or jno lods pop mov int3 adc pushw mov loopne divb and daa dec dec add add add mov pmaddwd cltd ja arpl lock sbb scas or sbb push xchg out sbb addb cmovno insl fidivrl (bad) (bad) mov (bad) into in hlt sub iret outsb jp sahf call sahf lods stc lret ret sbb adc jno jno inc sub pop adc scas and dec pop inc les pop mov (bad) cli fstpl xlat fistp out fildll fsts (bad) pop fchs sub call out nop push push mov fistl (bad) mov mov rdtsc pop sbb in lods mov imul add ss jge pop ss outsl loopne xchg lods adcl jne adc mov int3 jne outsl add mov xchg mov add or inc outsb cmp dec mov xchg lock fsubr rdtsc subps das cmp sbb mov daa out cwtl and cmp fwait stc pop fidiv sbb xchg fldcw xorl lea shrb mov cmpsl nop dec push mov sub mov js adc mov aas mov mov push out mov and cmp add add add add ret (bad) testl popf cld mov add inc in jns xorb mov sub inc inc xlat pop cmp sbb xchg adc jmp or xchg adc aam sub add test xchg popa add mov mov ds aad decb add push mov or xchg push lcall add jle push ss inc fwait sub inc clc pop cli sbb sub ja (bad) mov mov iret sarb xlat sub and add add add add jl add jmp mov daa pop cld and test rcll mov ret dec hlt push push lds shll mov xchg jge and dec add mov inc pop sbb jns clc stc es mov dec sub mov test addl mov mov pcmpeqd rcrb xchg cli cmp pop cmp pmulhw mov inc and jecxz sub jge lods add inc push test add ret stos les repz add ja jne rcr fwait inc mov push nop xchg ds call and jg mov jp sub and fwait rolb and mov and pop mov das or cli pop sub xchg mov lds addr16 (bad) mov add inc mov and leave mov ret in cmp mov push (bad) xchg gs jns push stos mov mov push jbe jnp jmp dec lock and push xchg dec test sub inc test xchg jp pop pop add add add mov push push sub adcl sbb test and cmpsl mov add mov sarl ss mov lret ror fcoml dec pop sbb pop mov fbstp (bad) cmp xor imul cmc xlat loope cli insb or push mov lea xor mov xor imul out xor add imul movsb push shrb mov xchg mov mov je push clc arpl mov add add imul mov repz aaa dec sarb std inc push mov push mov ss cmpsl fs in jnp adc sub ss cmpsl sahf xchg push shlb loop int sbb adc and xchg bound insl sti cld and bound sti imul andl or cltd (bad) jne ret hlt sar orl iret mov cli loop stos and movsl jns mov lea cld js nop adc cs inc push add adcl jo pushf jne pushf jb cmc dec xor fild sub add add add push mov andl cmp scas pop lahf cmp push add cmp and xchg fildl lods jl xchg mov cli ljmp mov adc aas ss aad mov cmp mov dec imul shr int3 mov mov push inc pcmpeqb jg aas xor test pop cmp mov xor pop jg es adc sbb mov jo pop pop cld or es inc adc fisubr cld (bad) lods fld mov movsl and dec lret popf mov fbld dec test xor jmp movsl and arpl dec popf icebp mov (bad) fmulp call outsb add fdivrs mov mov jns push mov mov enter pop out pop xchg push (bad) mov xor mov mov aas cmp les push ficom sti add add push xor push outsl or pop inc (bad) sub shll push arpl inc xchg mov pop ja js (bad) aad jecxz jns mov lcall add add add int outsl shl (bad) repz xchg cmc fistl test fcmovnu mov call aad xchg lret data16 js ljmp add (bad) out pop cmp outsb and push lods push xchg test xchg mov mov outsl mov xlat orl adc mov dec cmp xchg arpl loope rcrl pop jmp jbe pop push aam je push movsb std cmp movsb lret and push cmc movsl mov scas jbe push or movsl dec mov lcall add add add lds mov nop jle dec push leave loope pop inc inc repz or jmp sbbl cmp jecxz and in dec sbb test in sub (bad) jne nop fs dec loop sub push add add lds and dec arpl mov out cltd and test arpl push mov lcall in mov loope inc dec cwtl add mull and xor in (bad) mov xor sbb insb adc xchg (bad) (bad) hlt inc mov add add inc push jne mov mov enter or fidivr inc mov lods mov sbb jnp int3 mov adc mov arpl std into ds dec mov (bad) sub fstps lahf add cs fsub xor pop lea or daa jns es cmp or xchg add mov jae push add insb pop fidivrl movsl mov xchg (bad) jmp mov aad or xor adc cmp fwait lcall ret add add add xchg inc into (bad) pop lods cmp std lods es enter mov sahf jno lahf movsl xor and imul push pop ss mov push insl sarl jmp dec lret and cmp xchg dec gs cmp xor jmp jge pop andb cmp inc add xor adc adc mov xor icebp ret mov ficomp clc (bad) cmp sbb int3 lods incb jg mov pop shr pop push out xchg push fidivrl add add in dec sahf test fwait rolb add and mov into dec xchg mov pop mov lcall jge cld ds cwtl pop push xor xchg out jns jl pushf cmpsb xchg es xor stos popa clc adc das mov clc xor imul addl mov and cmp xor rolb pop add (bad) xchg insl mov mov outsb sbb jmp mov sarb push pushf or add pop add dec xchg inc fidivr call push lret cmp sbb or mov fsubrs sar xchg inc fstpt shlb adc jmp mov inc and xchg fsub mov (bad) call data16 lcall cwtl cmc adc or mov ja jns movsb nop int3 push movsb or inc mov inc imul sub addb popw in cld imul test rcll xchg jmp lods mov pop mov jecxz mov pop or xor add add add aam mov mov or pop or jno inc addr16 fist fwait cs mov pop adc jg xor scas xor mov insb pop ret in nop jp jne pop in fnsetpm(287 into icebp scas mov inc aam mov clc dec lea les dec mov ljmp test or mov in or jb jns imul jae add arpl (bad) call xchg sub cs mov jae inc or sub push mov add add add add mov fstps imul add pop (bad) outsl lret xor push out dec pop inc fnstcw fisttp mov dec inc lods and sti push push pop fidiv les add add cmp sbb jb mov cs imul add add mov call shlb shlb leave mov pusha pop mov jno push jbe push push jmp pusha mov scas gs xchg into sbb ret in add jmp mov xchg ret jg outsb out mov or les loop cmp dec scas nop dec les out adcl movsl aas and repnz and (bad) call call mov sbb sub addr16 divl cwtl mov movsl icebp fsts outsb aaa mov lret popa andb xor test lea mov repnz das lds inc rclb lret pop pusha cmp decb and cwtl daa fwait xchg jle out adc jg and xchg daa mov xlat push clc out adc mov xlat mov dec push add lods pop out sahf pop leave imul push mov loop shrb push mov push sbb add push cmpsl mov dec xor (bad) int mov leave icebp add push mov and add jne js dec call cli rorb ja jae repz sub mov (bad) stc or les gs dec dec fsubp stc (bad) mov adc test fdivs mov dec scas stc mov adc insl lock dec xchg sub adc lcall lcall xlat cmp sbb pop jnp mov js mov adc inc fdivrs inc je push add fisubl insl repz test sub jns add test and adc loop mov hlt jl add push pop pop (bad) mov cwtl popa and cmc test in popf push in jp (bad) mov clc lahf mov add mov out arpl bound outsl sub (bad) iret push fwait mov inc lea add add mov dec sbb mov sbb sahf xchg daa and fstl outsl scas (bad) cld push mov dec lds in dec pop cmp pop mov outsb hlt sub aad inc mov sub pushf push adc mov xchg stc xor fyl2xp1 sub cltd jno ja clc icebp xchg lret sub fistpll (bad) je xlat test lock jbe clc cmp xchg adc mov cmpsb jb inc push cmp and imul lods and cld inc jb xchg pop pop iret push xadd pop ret sbb add add add jne sarb ljmp and int jnp mov xchg pushf xor lods std inc iret lock mov movsl push (bad) leave outsl push push jmp add mov push adc out xchg xchg sbb sbb sarl movsl add scas mov pop dec xor ss cmpsl and inc imul jne insl sahf or test inc mov dec loop pusha cmp daa cmp dec mov ret xlat fstps mov repnz in jecxz and sbb imulb into lods push cmp enter add add add add outsl (bad) mov cmp outsl xchg (bad) sti push aaa mov fwait in hlt dec js andl mov clc xchg mov ds or andw in cmp dec test xchg mov (bad) lods pop shufps fsubrl call mov je sub mov cltd cmp push jge jb enter divl data16 push mov pop dec bound adc cmp and lods inc dec decb add add movsl les repnz (bad) mov data16 loop int3 scas add add add push adc xchg (bad) paddw push into jmp (bad) les jae test inc outsl sti push pushf test arpl aad xchg xchg neg mov mov out shrb andl xchg xor adc push iret sub ljmp andb jp or scas sbb xchg rclb or pop add adc pop push inc aas push loopne jno cltd mov lock divl in insb int jbe jg sub pop mov xor sub and add mov inc add add add cmpsb (bad) dec jnp push scas lahf mov jg outsl mov xchg push aam popf jle ss add adc sbb cmp cmp in (bad) xchg imul movsl bound pop jg scas lods into repz sub add push and repnz jmp sbb push (bad) jle scas inc stc and ljmp fcoml out (bad) jne ret pop mov movsl jbe ficompl insb movsl cmp leave es dec (bad) dec jo fldl cmp push jecxz pop pusha cmp mov mov jmp dec add add add adc jbe les mov sub (bad) cmp int3 insl add dec into and push aam lahf adc sbb lret jbe cmp pop or ret jp inc mov and cmpsb inc pop mov cmp add and pop dec stos pop cmp jo xor sbb adc fstpl pop add pop pop popl or aad jl jl dec ljmp xchg test cld pop cmc cld pop xlat lret mov mov push inc cmp pop xor mov ret add aaa pushf xor add add add add and pushf jnp int3 mov in dec ss in add cwtl fnsave (bad) jbe out pop add in pushf ret adc push out push add sbb aad gs and dec test mov dec cld xchg frstor (bad) scas imul or ds js aam add lock mov mov sbb cli jo popf mov add add (bad) adc push fisubrl and mov pop shlb or push sub jns mov push inc dec mov mov dec mov add add add mov lret cmpsb sbb lret (bad) jecxz cltd fwait add and movsb stos into adc ljmp xchg stc sbb inc stos fildll test xchg lods lock push or outsl jns ret push mov jl xor push ret push stc and sbb cmp pop cwtl roll push or repz int (bad) loope inc push pop (bad) jae ret or (bad) andl (bad) in fadds push fisttpll rorl fwait xchg aas dec add fisubr outsl outsl adcl testb push add (bad) cmc pop scas cmp pand idivl xor scas out jne clc jno add bound cmpsb pop mov addr16 sbb ret ss movsl xor fbld cmp fwait std push (bad) cmp test xor imul lds add pop push popf daa mov sub add test in cmp lock adc or add or xor adc fs popa mov sbb xchg jmp mov movb sahf in (bad) pop add in addr16 lret in data16 (bad) mov cmp imul fdivl test or cmp pop andl mov je test dec mov lsl jne hlt (bad) pop into loopne mov xchg das (bad) sbb aaa dec adc add lret int mov test dec cwtl data16 popa pop jg cs cmp repnz jno dec jns pusha cwtl shr mov inc mov orl and lods push and xor das fisubrl inc add add add cmp push inc int3 idivb loope mov ret pop pop jmp rorl jae es or jns iret mulb mov cmp push xor inc inc popa adc mov shll out stc int jns mov (bad) cwtl imul or ret push xchg loop xchg xor jl addr16 lret dec imul xor push ret inc imul xchg jmp xlat loopne lret cmc les mov cmc in lret cmpsl xchg cmp inc sub movb (bad) daa add add add data16 test popa dec jae loop xor sarl xor xlat in in dec jae mov and arpl xor in bound inc lods ja das lods aaa adc xchg test add push pop pusha pop gs cli hlt gs pop pop cmpl push out sti dec sbb xor arpl into pop xor pop xchg bswap mov mov lea pop xchg inc pop xchg dec cli jp das sbb and inc stos mov xchg dec dec rcrb xor jns ret fsubs in xor add add add fimul int3 in shll mov fimull lea fild or mov ljmp push and inc frstor pop xor insb daa cltd adc stos in jb sahf or (bad) in cs xchg sbb lcall push xor add pop out push push mov vcvtsi2ssl femms ds repz daa sti icebp imul rorb arpl dec pop stos push (bad) pop mov cmp insb sbb out rcll or mov lock inc adc add and add add add add mov push add jo lock pop jle ds lret sbb jno aad sbb insl gs xor mov xchg add lods sti push mov bnd add addl mov les (bad) div cwtl inc and lcall rcl rorl xchg inc (bad) mov xchg xlat (bad) int pop mov add pusha addr16 loopne mov leave cmpsb jo (bad) mov lret test adc xchg add xchg aaa test leave add mov xchg imul sub add add adc add idiv (bad) mov mov and sbb mov sahf push imul sbb es es push lahf sahf sub jo test jae stc (bad) (bad) xchg ficoml push out int3 dec iret dec fstps push push mov std pop (bad) adc dec hlt push mov inc xchg xchg cmp push ret stos xchg jno push mov insb hlt clc movb stos movsl fwait add and jge mov fwait inc orl pop lea sbb cmp in (bad) sbb js pop mov push inc or mov xchg stos inc test adc es xor jns sahf lock jmp xchg jno push pop cmpsb mov dec mov mov mov mov add pop inc int mov movsb fdivr (bad) and cs lds dec dec lods mov sub pusha (bad) rclb shlb (bad) add insl pop jbe data16 inc jp mov test lea js pop sti jns inc stos call nop into inc cmpsl in cld xchg aam popfw cmp xchg add add popa jp stos pop inc icebp aad push lea rorl xor decb imul mov add mov add in or rolb sub mov incl pop hlt in call stc sarl jmp push mov icebp mov add inc (bad) aaa sbb xor push sub sub enter xor and mov push mov xor lds add mov xchg mov or outsb mov ret pop test mov fdiv mov test scas add add add add int outsl in xor xchg adc cs stos jg (bad) jmp jae cmp ret bound push int adc inc (bad) push test jg add mov mov mov sbb popf cwtl mov je dec jmp int3 aam aam pop inc cli test add xor pop mov mov loop out pushf popf xor xchg icebp jne sub dec mov rcl insl rol rcrb int3 lea idiv test jno jge add add add add test add xchg iret xchg or xor adc jmp push push aas mov push pop ret imul pop and add mov cs movsb pop (bad) xlat sbb lahf add addr16 sub jb mov push jo xor cwtl adc in mov fsubr push sbb sti enter dec adcl fisttpll daa fdivs stos jns xor or mov movsl dec popa or mov rcrb and mov mov bound sub sbb adc fadds cmp xchg test sbb cmpsl xchg lods bound or inc aad jno jle sar fwait mov inc insb cmp pusha sbb cwtl xor mov push (bad) js fwait movl aad (bad) mov and cmp mov out sarl mov cmovo jno push or pop test stos sub (bad) add add (bad) push and lods iret ds cmp cmp lea ret fisubr sub push xchg mov sbb nop or sub push add add add imul mov mov adc repz mov mov push mov dec aad jbe hlt rclb lock or adc mov cmpb xchg cmp inc push mov cmp cli inc mov sbb mov test into push or ss inc dec mov lcall (bad) int sbb lret cmp imul inc add inc mov push pop cmovp fnsave into or adc mov insb icebp adc mov sub add add fisttp cwtl aad pop fnstenv sbb bound (bad) aaa mov mov mov xchg cli out in scas (bad) pusha test dec loope lods outsl mov add decl lahf mov mov mov jno clc add and mov sub dec mov subl and inc add aaa outsl or loope fcomps jno and mov jmp mulb mov test fs rclb or lret cmp dec and cmpsl push mov popa adc jns (bad) fildl add add add add jle jp mov sbb sarl cmp cwtl lock shrl jnp push (bad) int xchg pusha sarb sub mov sub adc mov cmp xor and mov sub xor sub test (bad) aaa mov pop sti mov sub popa cmpsb add fucomi jp adc std sub out push mov xchg xchg mov sbb (bad) icebp out stos mov stos jge pusha and mov and mov jmp cmp add add add add fcoms inc pop add mov out hlt outsb lock sbb dec (bad) aam dec adc in jnp pop scas mov pop xor xor insb inc cmp addr16 stos push pop (bad) jbe jmp shll out adc outsb mov adc mov mov dec jno (bad) (bad) rcl fidivr ds js push jg mov cmp leave sub jae mov jecxz jns push arpl fsubs aad adc pusha push call in loop mov pop mov add xchg add add add adc cmp in (bad) stos movsb rcr mov mov mov sub loop fdivrs xor gs adc shrb repz inc inc mov iret jnp sub xchg in ja mov cltd ljmp test out std cmp inc xchg lea mov mov xor inc pop lock sti sub lods mov (bad) jge cmp loop pop or or outsb loop push icebp or or mov stc sub cld mov sti stos and mov mov insl adc push mov movsb stos fs inc sbb xchg add in xchg xchg push sbb cs hlt push dec push (bad) repz test add add dec jbe fstps (bad) cli lea dec inc jl and shl lcall dec out inc or popf lods mov push ret hlt repz or xor sbb pop dec loope lods daa jp mov jnp ficompl lods sub and lahf jecxz test cmpsb xor ret fwait inc add fsub repnz imul aam jp xor cwtl icebp mov mov (bad) jne shlb add push fs sbb icebp fs xchg cmpsb xor and cmc sbb mov dec add movsl or pmaddwd test jnp jae jb test inc adc outsb js gs push and mov fidiv insl pop and mov lods out or cmp ror (bad) push jb jne cltd out pop mov xchg (bad) jns clc int3 ja inc inc push and sub mov xchg mov imul ss and jb jge mov aaa rolb add add add sub push loop std push jp mov cmp ret arpl call sbb push lcall push loopne sbb sahf mov out sub or or and cmp dec in inc pushf mov out add xor loopne fisttp lock jl xor mov jnp ja mov mov jne pop pop popf xor lods enter mov inc mov mov lret inc sbb int (bad) out pop mov sbb icebp cmp push mov inc popf xchg stos sub xor pop push call inc leave (bad) loop mov ds pop dec add fxch sub dec mov lods pop mov int fmuls add push mov mov lds mov movsb call stos mov pusha inc jno xchg mov cmpsl or xchg pop push cmp and popf mov sub mov or push pushf adc dec sbb pop xchg daa shr inc dec mov icebp adc push sar cld ret jmp std cmpsl add add add add cmp std rcrl les fadds mov dec out push es in sub sbb mov jmp jbe into out add out out mov mov pop in (bad) js cmp mov inc jle sbb jge test push imul push sub (bad) scas imul (bad) mov mov sub lea cltd mov push hlt les daa pop and sbb and jns shrd imul jne out cld movsl jg mov (bad) mov cmp or das or pushl sbbb jp rclb clc pop (bad) hlt daa mov push lock pop fisttp and mov inc jns scas je out mov insb stos mov mov rcrb ret insb icebp rcl (bad) inc fisttpl pop nop fnop xchg nop sub iret stos xor imul aad lret push int cmpsl frstor push ljmp lcall push rorl xchg jo inc inc jns roll mov mov mov jmp sbb jno adc push stos out mov add add push adc in sub lret mov cmp mov inc gs shrb aaa xchg add cmc push or mov rclb lods (bad) clc fs mov sub push sbb fwait insl loope or test adc imul and int3 ja,pt mov (bad) pop and pop mov enter adc faddl ja dec adc lods inc dec scas and das sbb adc in pop les or leave fstps cmp mov mov dec add add add add mov mov cwtl or loop call in jecxz mov jp insb sbb fstpt mov xor (bad) in mov lea xlat call and pop shlb fsub movsl sbb and xchg sbb add enter add xor cmp jmp cmc addr16 ret fdivr imul push pop push or (bad) mov pushf mov xor lret push popf mov nop mov mov or push int rolb psrlw push jg (bad) out add add add repz cli ficomp and in arpl push mov movsl out div and loop test div fwait mov jg inc adc icebp es stc in pop pop push inc mov push cltd jnp pop mov test (bad) and push or or loope repz cltd aad sti pop pop pushfw xchg fidivr mov pop push cwtl in and jne push cmpsb and sub repz sub xor sbb insl and mov aad mov fistp or std mov outsb lahf mov add add add cld hlt add std cmp lods inc sub js cmpsl cmp mov negb xchg inc jmp (bad) mov fdivs sub scas int pop lcall jp pushl pop movsl outsb leave mov incl xchg xor fwait cmp dec push mov outsl push repnz mov clc sarb jo pushf mov outsb sub loop pop jle fcoml andl inc test jmp fidivrl push test fldl mov js js xchg cld jecxz pop rol inc sbb lds iret mov inc test roll cli nop cmp add in jne push pop dec lcall mov aad ljmp sbb jecxz jp mov mov dec outsb in dec (bad) imul popa dec (bad) lock dec dec dec mov push pop psubb (bad) out cmc popa inc ja jge mov and jle sub jmp fiaddl sarl aad push pop mov dec push mov psllq add add add add and push or aad shrl mov push int3 or (bad) fnstenv leave lods leave movsl imul jge (bad) mov mov push aaa cmp sbb sahf mov add push sarb addl adc push mov stos pusha (bad) mov add int3 xor mov stos xchg jne popl sahf xchg adc idiv pop mov sbb jmp leave push adc loope xor orb lock mov pop mov imul (bad) mov or pop mov add out inc (bad) ds divl dec dec xchg and repz pop into (bad) pushf mov fdivs xlat add mov sbb or into (bad) repnz or push insl rol aaa push inc xchg jle popa inc notb jp xor mov (bad) jmp enter test cmp stos cmpsb jno sub sub xorl cltd mov pusha insl gs stos movsb nop scas jb jp bound push or icebp (bad) (bad) dec ret (bad) test xor std adc arpl sbb xor add push arpl mov inc pusha push outsb inc cmp popf or mov or (bad) insb add imul add pop mov sub (bad) fsubl les js addr16 jp add pushf mov push dec or and (bad) aad movl mov rol xlat adc mov add xor loop xchg leave (bad) test add ficoml mov call jg clc pop sbb xchg mov or or out or shl test add inc dec popf scas inc xchg pop inc inc add (bad) jo mov xor fs pushf stc ss xchg pop push test push (bad) pop sbb jo scas dec (bad) imull mov call lahf lds mov lahf inc pop incb daa inc cmpsb dec mov xor pop sub xchg xchg in dec lock mov add pop in nop xchg cmp mov lods sbb aam push fmuls rcll lods jnp or mov lds fdivrs jns jbe pop push hlt (bad) fldenv out push dec xchg ret and add add add add add ds push sti lods push mov fild pop cs mov clc das test lret mov mulb mov push lea nop push mov xchg aad fwait outsb loope aad or aaa in push (bad) out adc xchg inc push stc jmp loope xor lret push xor idiv push sub mov iret aas nop sbb fwait data16 inc cmp and cmc cmp fsubrl add dec mov mov sub push lcall xchg mov jo fisubr and es jbe stos mov jg ja add add add pop out inc adc ss in test cmpb inc and les push push or dec cmp sub lods clc iret mov push or xor out je test and mov das daa roll xor jo sub inc dec lods lds clc lock cwtl repz ja mov cmc cmp fdivs push stos sbb push push sbb test xchg ret jae ret jge int dec jle cmp jmp cmp ss test add bound gs imul add add add das dec dec jmp push arpl aad pop ds cmp xor jge mov addr16 js (bad) loope out loop xchg sub mov push adc and mov jne xor mov fimull xchg inc mov jo dec adc xor sub mov int addl ljmp adc test and in in in jbe cmpsb negb idivl sbb mov mov push clc mov mov sbbl sbb (bad) jo and inc addr16 inc mov add add add xor adc cmpsb jp jo mov ja (bad) das xor xchg fidiv add pop dec jge or and rcrb sti or pushf test xchg imul lock push sbb and (bad) inc pop xor add push inc jg and push push cmp xchg aad cmc aad dec (bad) out adc out jge jge add or xchg daa fist dec pop (bad) repz sub mov mov pop in outsl popa (bad) push sbb xchg sbb sub push fadds in xchg stos sub add add add leave cmp (bad) push pop (bad) movb or in rorl int3 je fdivr cltd sbb sarb addr16 mov sub mov sub das mov mov push mov enter scas mul sbb ja insb xchg inc pop cltd sti inc in xchg fldt pusha lahf xchg out mov in dec adc and xchg (bad) cmc xchg and clc popa sbb xor dec (bad) cmpsl inc jmp mov test push ss push call js dec repnz and decb dec out jmp add add add inc movsl fisubrl (bad) test popa xchg addr16 out add das repnz mov int3 mov rorb xchg mov cld stos push push loop mov jnp lods loopne addr16 sti (bad) adcl cmp cmp lds daa cmpsl adc xor enter outsb sub test leave add sbb enter mov or pushf (bad) popa adc stc cmp or test dec stc mov push add out push add add fwait mov fild adc (bad) jmp mov jns xchg gs in lret dec outsl mov pop insl ja pop stc push popa out ret arpl imul sbb dec and add mov push jns xor and sti int movsl inc in and dec gs ja ljmp aaa roll sbb jmp jno mov pop add stos jmp jns lock mov xchg xor sbb cltd dec fistp mov out (bad) push loop cltd in mov (bad) sub pop and imul sub add add jle lret adc jbe xchg iret cld insb shr adc arpl sub mov or and adc or sbb xchg js or gs cmpsl cmp aaa scas or inc jmp mov (bad) iret pop decb mov add jo frstor fisttpll add rol jl push inc jg stos xchg js out shr adc inc scas or leave jmp popl test aam ret (bad) aaa (bad) jb push adc sub arpl sub xchg lret pushf pop xor or and add add and dec pusha xor add aas adc xor push call sub loopne push dec push popa pop adc cmp std fadds pop notl sub sbb push pop jb rcr push aad movsb adc cli hlt add push incb pop adc call faddl jmp out cmp add es adc xor dec mov rorl jmp sti inc cmpsb add inc out xchg (bad) pop enter jb pop add cmp fld mov add add add pop insb mov cld inc and push fistp out and dec aas jae or repz cmp hlt loope jle aaa mov jle rol xchg leave jo and push push pop fwait je mov or adc dec xor pop fnsave adc pop dec leave in out sbb test cmp push insb stos or mov adc nop push in out mov lret scas repnz fdivl gs int3 fwait pusha xchg jmp dec xor mov add add add add adc es mov jmp scas pop add jo jecxz in inc mov or mov and mov fld sahf outsb pop and cmp cmp cmpsb popa imul inc cmc jae dec icebp lea pop mov fmull (bad) cmp xchg dec add dec xor sbb or (bad) mov cmp xchg sbb pop pop popa xchg fs fwait bnd inc popa outsb cltd mov jb lret lret test in clc mov add (bad) icebp jge rsqrtps add add add xchg in mov stc add add xor cmp lret test fwait xchg and or adc jns or call rcrl mov inc repz cmpb ja push jmp insl inc xchg mov imull shll sub imul das leave push pop ret out rclb (bad) adc dec cmp loopne xor jmp pop or sbb dec fiaddl mov mov push sub ds push imul push add push popa mov sub repz outsl mov pop push pop mov mov lahf es outsl rcrb bound inc daa test adc sbb bound cmp jns add inc sub outsb sub aad fcomps or gs call sub (bad) push mov inc mov jo ret sahf jge or xor cmpsb mov std test (bad) aas add xlat inc inc sbb inc pop mov ss mov les adc (bad) add add sub xchg jg sub sbb fwait lods adc mov xor sub pushl hlt adc pcmpeqd leave fsubl push mov mov leave mov rcrb and adc sbb popa cmpsb cmp add inc jp loop xchg enter scas push mov sub cwtl (bad) fsubl std xchg inc lea mov (bad) mov and lods jo sub jp sub std jecxz mov sub lods inc adc xor daa add pop nop ficom nop mov repnz sbb mov icebp popf rorl js cmp lock fist mov outsb mov cmp sub xchg and add aad call popf mov sbbl aam (bad) iret jmp inc sbb xchg repz les leave xor bound pusha dec lds test jle jne lcall adc int3 repnz pop jp fwait in push es dec push mov push jmp lods xchg jnp mov inc (bad) enter repnz inc call (bad) lret pop add add add rorb test nop pusha cs pop mov pop jge mov or inc in hlt enter jecxz loopne mov xchg and push loopne,pt roll and pop mov (bad) insl addr16 icebp (bad) pop mov in push test xor fiaddl sti add jno and bnd cli xor loope js adcl clc fdivl movsb or andl and mov add bound jle dec outsb icebp sub push imul popa addr16 push loopne jg adc xor add mov add add add xorl insb or push scas stos fwait dec adc jge call inc les cmpsb lods inc insl mov mov mov out pop sbb fistl scas les aad or push inc repz pop mov in sbb ljmp (bad) pop mov pop or (bad) jp dec mov (bad) bound pop in imul xor icebp (bad) ja add stc jp imul xchg mov mov outsb or jge push pop jle mov push js or loop cmc ret push aaa fstpt stc lea and insl cltd jecxz push push pop mov add add add add mov in enter lea bound dec adc (bad) mov rorl add call jp sarl jbe or fwait xor jne lahf push jl xor push jne loopne sbb jge in jns (bad) cmp and mov xor daa jbe mov dec xchg and cmp inc add push cmp inc mov dec popa cmp push mov jl out enter pop or push shr push cld adc sbb mov aad test xor cmp insw xchg lods rcll cmp xchg fldl add add add pop xchg js pop fs sub xchg jecxz rorb push scas xor xchg mov sbb xor adc int inc repnz inc cld mov (bad) std jle cmpl xor mov inc sub (bad) fimull mov jl inc dec movsl arpl and inc jge dec mov ret sti jp jle pop or and sbbb cld ljmp inc mov pop mov loop xor out lret aad es dec add push add inc add mov and cltd xchg and inc mov jl out sbb mov jne push push xchg or fwait and mov jno or xor inc movsl cmp iret (bad) xor or (bad) addr16 xor aad bswap fsubs ret je idivl jp mov sbb ja arpl arpl xorl adc shlb shrl xor sbb dec lods aam sbb mov popa clc je and fistpll (bad) jmp scas insb add add add in movsl xor mov push inc (bad) icebp pop movsb cmpsl sub cli add add sub loopne data16 std xchg sahf and scas jle and into ss push stc sti leave das (bad) cld jo (bad) or insb jg ds sbb (bad) sub mov pop incl arpl out std jb push lea aas cmp test fsubl clc test mov addr16 hlt fmul mov mov repz stc xchg in pop fdivr mov mov push sar jns cwtl mov add add add push icebp push jg mov imulb out test rolb mov stc adc pop push mov pop lds pop cmp fbld imul jle pop inc lea or jb aaa sub aad xor jno mov fwait xor ret call jmp in pop nop push cmp in and or incl movsb sub (bad) fwait leave and jle imul imul mov push xor pusha jnp sub movsl xor sub imul movsb mov push cs add add add cmpsb inc lock daa std jno mov subb mov (bad) clc push adc jecxz push lock popf pushf mov xor adc mov sbb and daa cs pushf scas inc xor sti addl dec sbb rorl mov add je cmpsb mov inc cwtl jo std mov add cltd ja pop xchg (bad) xor (bad) push (bad) imul out divb sbbl xor pop mov andb shlb dec pop pushf mov xor mov push cmpsb add add add jno test test xlat fbld jecxz movsb fcoms aas sti dec (bad) jg data16 out cltd sbb jmp in dec xchg jae fucomp in fldt dec xchg push hlt mov pushf dec fmull imul movsl pop sahf je push jb cmc add jne (bad) insb aas hlt es or scas bound xlat xchg push jmp inc out jnp and aam aad push add adc and mov sti pusha and sub mov xchg (bad) pop decl mov inc add or leave adcl out das jnp int3 clc jge aam pop push or xchg out xchg mov out xchg jle jo mov bswap dec hlt in test in adc aaa pop sbb int3 pop inc shrb (bad) dec out cwtl popl ljmp je idivl rorb jnp mov enter add ret outsb repz xchg cmpsb fs mov fstl (bad) out or (bad) jbe pushf xchg je mov add lcall xor shlb fdivs or roll sbb adc test les insl cmp out stos pushf sbb ja sub je adc jg mov pop sarl cmp cli stos hlt pop aam push and sbb jp gs ja xor in sub js,pn mov stos pop xchg mov hlt test test push or div ja (bad) jae ds pop xor outsl stc and outsb mov or jl sbbl repnz jp leave in mov test adc shrb sub jge adc add add add add inc pop aas pop inc and js jae bound pop sub (bad) and inc or dec call aas cmc cmpsl jge and dec cmpsb xchg push test mov mov movsb push sub imul mov fistpll int adc sarb dec nop scas xchg lods xlat jecxz vphadduwq dec add sub sub push js pop aam jb out mov es push inc test stc or loopne push test divl mov (bad) sbb mov aas aaa jmp popl add add add stc fstp aam cmc cld pop or jnp mov mov addr16 sbb pop push xor stos rolb push pop lods jno mov ss fwait movsb mov pop stos or (bad) scas loopne sub aad add cmp cmp jbe mov inc inc adc push repz fisubrl hlt jb in mov mov inc (bad) adc dec mov lahf pop and mov popa sub push pop sahf jo lret inc mov mov mov xchg pop aam loopne or push in jbe cmc mov add add add add mov outsl or inc ret xchg jns push and sbb mov popl imul das call cmp dec fxam jmp (bad) outsb sbb mov add jl mov repz sbb xor and repz pop mov inc and ret ret nop jmp movsl aaa paddw stos dec loop push push jg mov das inc push or es pop jns scas fwait pop adc in fisubr mov insb xchg hlt aaa movsb inc push mov (bad) mov adc fsub cltd pop push (bad) lods xchg inc sub int3 repnz sub xor movsb cmpl shll in dec outsl insl cmp cmp mov push and xor adc adc mov call push out cld rolb js je or (bad) push mov out repz out mov pop pop push outsb push push hlt mov adc (bad) out rcrb pusha or scas xor or cmc das dec fabs std cmpsb inc rcrl cmp daa mov mov int sub adc flds pop xlat loopne ds icebp add add add test daa cmpsl sub lock or xchg jecxz mov xor add pop ss ret adc icebp fimull cmp shr mov loopne aas inc add xor out mov mov cmpsb xor mov jge dec outsl mov call push cmp ret jecxz aad push into pop sub leave dec popf das sti sub mov push sbb pop (bad) lods jge mov mov add out xor ja mov sbb jbe call (bad) (bad) jae add add fistpl adc mov mov push mov dec jno je fcmovbe hlt sub jg inc aaa add pop fptan mov xlat jae add lahf xchg sarl out gs sub out xor pop jb dec dec lods jnp loopne mov scas push in dec mov dec xor arpl jae sub cltd sub lcall jg jge mov loope in lahf mov sub jp (bad) out aas mov adc jge inc pop in icebp in aaa xor mov int3 imul int3 mull fisttpll add add add test je ret pushf pop adc mov inc xchg ds mov xchg and fdivl add hlt nop pop arpl out xor in sub mov jle testl pop push shrb fwait sti and dec aad xor mov xchg roll jg jmp xlat xchg add stc xchg xor push mov cmp jl adc sbb popf nop sub lahf in es cmp fdivl sbb add (bad) sbb add fcmovu xor and mov arpl leave xchg call mov (bad) mov lds sub aam bound insb mov std jno dec popf lds lods pop loope and xor ljmp pop dec incb nop cmc loop sahf movsb cmpsl pop push push mov adc cmpsl pop mov sub mov mov xor leave mov out pop into jmp push inc pop xchg imul inc cmp lcall rclb ficom mov dec ret aas mov aas call add add outsb adc sbb repnz pop aas and outsl add jmp stc jbe nop out pop push mov pushf out test mov fiaddl cmp sahf aas movl rorb out mov xlat (bad) clc cli inc iret xlat in lea inc adc pop push lods push mov ljmp push (bad) insb sbb mov aam fistpl inc mov adc sub dec pop ljmp (bad) repz push mov mov fisub sbb rorb add pushf clc pop xor js les mov sub cmp pusha xchg repz cmp push xchg add out push leave in inc and jns js std xchg andb shrb jae lahf xchg fnstcw rcll ljmp pop and ds jbe inc xor mov in out es addr16 bound and cmp mov adc jne mov repz jle and les mov icebp lcall int3 pop or add add add add xchg sub inc popa test fcoms addr16 les jno or cmpsb cmp push adc pop cmpsl stos pop sbb cmp dec dec es xor pop bound in ret (bad) xorb push (bad) push jo out inc add mov pop shrl push mov add imul mov mov enter stos (bad) pushf push pop int3 sub scas mov ds jae sub push inc mov xor pop shrb clc lret cld jbe adc mov cmp add add add cld or out (bad) (bad) pop in dec push (bad) jp push (bad) int3 or adc inc sub andl imul xor aas scas inc es loopne sbb iret inc dec push pop or stos mov or insb pop not (bad) cmpb arpl pop jo xchg adc jl iret call cmc jle or xlat rcll sbb imulb decb sbb jns int sub es push sbb cmp ja sahf sbb movsl mov dec mov arpl add add rolb stos enter push (bad) adc xor jae pop lret xor je mov add push iret xor (bad) cwtl sub pop xlat rorl in mov cmp push jbe sub and xchg adcl jae mov (bad) sar frstor lcall xchg sub sbb dec mov and lods fwait dec fwait inc xor jns cmp add aam pop (bad) loope adc cmp sbb push popf dec sti xchg and cmpsl rclb clc and orb jmp add add jb dec mov dec xchg add jns dec call mov mov loope cmp rclb popf mov rclb xor loope adc fdivs out xor jnp (bad) or or add sar (bad) adc aas inc pop push daa cmp inc sub mov pop popf test dec in (bad) and inc xor xchg jo insl lahf std ds mov xchg xchg aad pop les jg sub xchg push (bad) xchg add cmp inc mov add add mov jb jns inc lret sar lret aas insl in pushf xchg pop je mov fwait das hlt jge sub dec aaa ror scas punpckldq ss inc movl dec and mov pop in xor int insb jmp push (bad) rolb xchg fs sti (bad) in lcall dec pop jecxz inc xchg jae decl lods mov cmp icebp jnp and push (bad) fistl mov pop inc into mov stos sbb ja mov leave mov imul pusha incl xchg sub add add fnstsw loope mov int3 sbb testb sub shlb xor push jle pop cs push xchg adc cli das test pop cs inc es out or (bad) sub int3 push das (bad) out xor xchg divl dec shll (bad) pop add sub lret dec mov addl push xchg movsb push cmp test (bad) push cmp std cli mov jecxz cmc lock xchg jmp cmp movsb adc mov movsb in bnd (bad) cmp push dec lahf pop lahf inc mov addr16 stos and cli aas js and ret sub add add imul popf or movsl or xlat ds cltd pop das hlt xchg repnz sbb mov xor stos push and sbb nop xchg ffreep fidiv scas inc fldl leave outsb dec imul sub test repz int pop (bad) sbb out imul xchg lahf lods push outsb xchg xor pusha clc push loop add dec xor push repnz repnz xor stos sub inc and gs (bad) pop clc cltd add fcomps sbb test push data16 cmc dec daa mov insl mov add add add adc jmp xchg add aas jmp mov fild shr lcall mov loopne and lods push xchg sbb repnz xchg inc popf sbb mov sub push lret cmpsb xorl xchg xor incb dec and mov push mov into jo cmp push xchg pusha adc (bad) icebp dec cld xchg (bad) mov lret lea pop repnz sbb or inc mov (bad) mov jp popf or nop sti mov aas (bad) fist jne pop ret mov add ret aad sub stc dec ja iret sbb leave icebp test cwtl mov stos sbb pushf (bad) rol pop scas pop inc xchg lret xchg dec aas mov out loopne fild sti enter pop pop in dec popf enter out mov pop inc pop push std lds pop lods loop or inc mov mov frstor lcall je mov jle mov sti xor pop lret imull (bad) mov rorb or inc add sbb mov sub and cmpsl add or jle and mov cltd adc leave ret and inc lods adc or push mov sar pushf add mov ja inc mov jns jl jecxz repnz mov imul cmp je lock cld xor pushf icebp pop sbb adc jecxz inc gs mov mov icebp lods or mov (bad) sbbl das ret pop insl mov rolb das insl or pop xor or inc or mov cmp mov mov add add add push div jae fistpl mov sbb jmp insl xchg repnz sarb psadbw xor insl mov cwtl or pop fmulp (bad) fisttp mov lods sti mov insb xor data16 lods mov pusha push sub pop jge pop dec std dec ret ds lds push repnz cltd mov jne (bad) inc mov mov push dec add dec movsb dec int ljmp lcall mov rolb aaa fld fwait imul jecxz dec movsb cmp sub out icebp es cld int3 add out dec stos cmp stos aaa lods mov aad cmp xor cmpsl and out movb fcoml and sbb fimul push cmpsl mov cld test jbe pop scas (bad) repz insl shlb jle pop xor sub pushf jnp sbb cmp ficoml dec cwtl mov mov adc out imul jecxz xor mov pop arpl cld xchg mov xor jmp add add add add pop mov repnz add adc pusha mov pop push jns cmp inc leave cmovae icebp sub or jmp pop movsb sbb daa sbb das and cmp inc sub mov fxch cmpsb mov out lret cltd adc (bad) cmp add int cmp lret pushf fmull cmp push mov adc fistpll fwait sbb push dec mov lret das cmpb add mov scas jmp pusha dec jbe dec lods bound add sub enter mov push fwait push inc and lods es push ss fnstsw push jl outsb xchg add jnp out adcl add xchg stos insb out mov ja nop ror or rorl mov inc mov push stos or pop jp sbb mov lret mov pushf mov cmp sti adc shll sarb or cmp dec sti andb gs scas lods notl adc sub jl adc jle int3 jmp cmpsl test (bad) mov add add cmpsl and jge,pt push (bad) in jo xchg nop pop jl dec lcall or div js jno push sbb test pop sbb push in pop daa je mov sti and fmul push aaa add jmp cmovnp stos xchg lock imul movsl mov ljmp ljmp jmp movsb and xor jle fisttp bound pop pop adc add mov pop jg (bad) push xchg pop or push mov gs mov aam mov in push pop mov mov mov mov sbb je push mov or cmp popa inc and bound mov jle add xchg mov sub inc fadds xor iret mov pop jne pushf (bad) mov lods sbb imul jecxz sbb mov test push insl adc cmpsl push fpatan rol push ss scas shrb jne jle mov jg fwait outsb sub inc dec inc sbb adc add (bad) mov adc mov popf out xorb add icebp mov mov xor push in arpl test jae dec mov out cmc push push fadds dec adc notl jg stos inc cmpsl in jle inc mov fld test icebp jb movsb xor imul icebp pop mov dec inc pop sbb add dec int3 es dec sub pop add lcall insl into push ds insl mov or mov lock popf sub cli push shl std out pop mov add add add out movsl clc xor fisttp push fiadd les push mov pop add mov fidivrl (bad) adc mov sub (bad) data16 mov or in push mov jg add popf mov out nop dec sbb xor lds daa daa pop mov sbb cs inc aam xor mov out dec adc lods add mov ffreep mov fcomip test jmp (bad) in cmpsb lahf push in jbe aaa inc stos dec lds std clc leave and loopne ljmp push pop cwtl add add add lahf subb das lahf xchg push popf imul mulb cmp mov arpl das pusha fildll scas cmpsl fisttpll sbb pop clc jnp inc add mov push sar mov sbb insb dec mov (bad) pusha pop pop mov sbb sbb xor push loope and cwtl iret add pop insb out hlt pop loope lahf test imul pop jmp and in add out push mov sub cmpb pusha and repnz shrb leave lds adc adc into mov int3 mov xchg cmp xchg pop push ja mov mov adc jmp push rcl cmc in pop rcrl adc out xor ljmp call out adcl mov push into cmp inc lcall jg push adc rcrl xchg lret (bad) das mov sbb repz daa and incl fldt in mov fldenv jecxz test push fmull pop push aam jnp sbb adc leave xor test orb mov arpl sbbl (bad) cmp popa cmpsb xor or add add add xor pop jno test test mov dec (bad) and iret gs arpl push push mov xchg cmp icebp mov sub fnstcw imul (bad) mov jno movsb inc jbe push nop (bad) cwtl dec imul aaa (bad) xchg sub lods enter inc fwait test outsl pop adc scas cmpsb pop daa sbb loopne inc cmp cmpsl pop sar fdivrl sub pushf repz mov jmp daa ja cmp xor push and push xor and add add std dec ret jg rcrb je adc mov rsqrtps or aaa mov cmp xchg jle dec rolb mov mov mov outsl push ljmp pushf loop ja popf out mov jb icebp adc push (bad) int xor pop out incb icebp test movsb es mov xchg movsb or mov jmp xchg (bad) lock mov out or add add jle loope js push fs push pushf add mov cmp pop pushl loop push mov es orb push dec loop mov lods cmp xchg call jae shrl call add mov add pushf cmc pop xor sahf mov dec outsb ja fisttpl pslld sub sarb dec xchg cmp call push jo sub add push sbb into cld cltd add cmp cmp loop jne and cmpsb loope aam fcmovnu sub push or xor das enter (bad) cli xchg es cmp gs mov outsb addr16 add add add loopne add shr insb inc mov js dec test xor push dec decl lret mov flds std or pop jae mov mov insl dec shrb fidiv stos mov popl in push cmp cli lods jne inc in je rolb rcrb mov sbb push ret and xchg popa mov adc dec (bad) push scas adc ljmp xchg pavgw fiadd jl ret stos rclb je pop imul xor add add imul add add mov ds les adc dec add push sti jg popf imul inc fnstsw in loopne icebp add inc mov mov (bad) sbb xor xchg xor std (bad) jne (bad) jb xchg aaa cli and and (bad) xor aam pop lods xlat shl imul cmpsl (bad) setg or movsb mov dec mov jno xchg push mov mov mov fbstp xor xor jle popa pop mov cmpsl hlt cltd incl sbb add add add orl or mov add sub popf test imul imul inc jle xchg pop adc aas fstl jle jns push es add mov (bad) je sub inc (bad) adc add js addr16 and pushl adc jp jo cmp fcomip ficom or sbbl out mov sarl lods mov rorb jb jne fisub dec lods push movsl scas inc pop xor xchg mov xchg push dec xchg inc jo pop cmp loope mov or scas add add add std mov mov push sbb outsb imul xchg (bad) adc mov and rclb (bad) pop dec ljmp jecxz mov or jo aas cmpsb aas fs int3 inc aad push ror mov mov hlt repz push pop jne stc cmp outsb pop iret sbb sbb sub dec mov movsb jge call push jbe,pn mov mov sarb movsl in sub dec cli mov orl or inc or mov xor sarb jmp sub add add add inc mov insb or enter scas mov divb pop aad push popf cmp pop popf sti sub mov mov arpl pushf mov adc inc jb rorb jnp insl pop call add pop aam (bad) insl inc dec jp push fmulp mov sbb mov xor adc mov fidivr push cmp mov outsl xchg pusha push mov adcl cmp mov int3 in cltd call push mulb dec jp pop (bad) (bad) sub push movsl stc xchg mov add add add mov out lds push outsb xchg out mov cmp test mov and cmp xor xchg lods out pop mov adc cwtl xchg mov dec jo sarb stos (bad) mov xchg jmp ja int3 cmp inc add cmp and scas imul push xor pop arpl cli negb jle pusha aad xchg dec cmp pop or jge popa adc fcompl sbbl sbb dec ret fdivrs imul pushf mov cmpsb jno es adc ret fwait xor add ss jecxz js int out sbb popf cmp push and lret mov into dec mov xchg push sub mov je sbb sbb cmpsl mov gs xchg je fimul insb push xchg push and loope jmp sbb xchg dec inc subl jno cmp ret daa push and imul jns mov xor xor and lahf ss xor clc mov add dec lods stc (bad) ret add add add mov test xchg add jg outsb jp inc test add out (bad) int3 sahf jl push add cs cmpsb jnp inc fsub clc xchg btc es loope or sbb add das cmpsl push dec repnz mov jmp xchg add xchg test lret lret jp xchg mov xor out jae push xor sbb push cmp and cwtl ljmp mov inc lds xrelease push aaa fistpll push pop mov data16 mov sbb pop add add add add das mov push pop call and stc divb pop (bad) jp ds or (bad) or sub repnz les pop jmp sub jno and std adc (bad) and (bad) repnz xchg ja xchg fiadd in repnz lods push out imul inc sub ja inc push cwtl dec leave out or nop shrl cwtl pop ror cmpsb incl jae and mov fucomp cmpl cld adc or movsb lods mov mov sbb xor xor dec mov outsb dec fiaddl (bad) xor xor jo (bad) sbb cli adc (bad) mov sbb clc xchg rcrl jne inc incl out sbb add push xor dec ss stos aaa cmpsl jecxz mov sti or dec (bad) cli test xor xchg enter mov cmpsb je mov xor cs lods cmp lahf testl ja inc and fs pop cmpsw or or aas mov add add add imul js fsts inc je add rolb enter ret cmc sarb pop nop addr16 xchg cmp outsb bound sbb es mov js pop mov das push xor sbb inc mov sbb aaa (bad) repz push imul pusha ret or and and add cmpsb repz fistpl mov loopne into movsl out mov (bad) icebp stos imul scas (bad) shr jns pop aad xchg pop bnd adc mov call imul add add xor scas cltd cmp ss movsl (bad) cvtpi2ps fcmovb push mov xorl sbbl in mov mov pop pop cmp xor in mov test lret (bad) fiadd (bad) imul or adc xor int or (bad) fstpl in loopne aas push cmc (bad) mov mov sbb mov push dec pop stc inc lahf ret fnstcw mov add push adc mov sbb adcb icebp out dec ret jnp push ljmp fnstsw mov mov add add add add mov rclb ficompl xchg push fsubp fidivl lock sar cmpsb xchg xor in pop jne sub aas aam inc mov mov push enter bound rcrb push andb inc mov fisub pusha popa mov repz pop push stos incl dec rcll xchg pushf jmp cmp dec xlat stc imul popf daa xchg push or push ret inc lea xchg (bad) int cmp cmp movsl lret sti rcrb inc imulb push pushf cmp add add mov scas sbb cmp mov orb shl (bad) loopne mov cmp sbb and and jle (bad) mov sbb xor pop sbb sbb jp idivb jle xor cld adc sub out and jp cwtl mov arpl jb shll dec push sub push adc lret les mov dec sub mov mov test rol movsb inc jne sub ret push loope add add add add andl sbb mov adc or insb loopne in xchg cmpl inc hlt icebp cmp xchg sub daa and mulb dec scas xlat mov ret mov cli or jmp out outsb pop rorl adc pushf mov rorl or ret push jbe popa pop pop push jnp js jo add push insb in xchg jnp adc inc push push cmp jmp mov jp jnp adcl mov sub lods inc in out rorb dec jb lahf add add add fcmovb das popa movsb or push into pop test xor inc aad sbb mov test outsl pop jnp and ja sbb ds enter repnz into js mov in push aam dec push fdivl repz imul aaa int mov sahf pusha (bad) shlb jae push sub leave inc dec stc sub test (bad) mov sbb scas orl sbb dec test adc mov or or mov sub lea add add xchg adc jp lahf or cld pop push jae xchg jae jmp sbb pop dec add dec mov inc ret nop jp das sub mov add hlt pop mov cmpsb stc mov lea test pushf cmpsl ret jge mov sbb (bad) out pop push inc mov into push push fistpll jmp rcrl adc pop loope outsl popf or ret adc stos add leave loop movsl jp adc or pop jmp int3 leave iret xchg mov (bad) sarl dec xor push mov ljmp mov jns mov cmp into push scas jp xchg xchg into iret test sbb xchg add push jecxz cld dec push fstl ficom dec adc icebp repz jnp mov (bad) int stos pop call fnstenv (bad) add (bad) xchg inc push xchg arpl pop bound or jb stos or add dec movsb and lcall and loop pop dec mov nop jno dec or xor jnp (bad) fisttpll inc idivb and sbb push out in rcll bound add add add add int3 mov cld aaa jl cmpsb (bad) sti repz cmpsl push out add cmc jns jo push mov sti xchg and sbb out jg mov jmp mov and (bad) jg xor adc aas aam mov rcl jne into scas jmp xchg out mov jge jne sti (bad) popa arpl jnp and push out test sub dec inc (bad) cmp cmpl cmp cwtl pushf icebp add jge and hlt push push inc clc imul pop sub mov (bad) ss add add add mov pop mov clc sarl mov adc xchg and sub and cmp push push andb je,pt xor je push add mov pop jmp jmp cmp fnsave mov jge ja movsb push enter xor or inc cld mov sub (bad) mov sub imul pop daa xchg adc popa jp or imul dec xchg fistpl lods push std scas sbb jle fsts dec add add add push ret adc and cmpsb lea lret imul test mov sub je push fwait test mov dec (bad) mull push sub sbb sub push add or (bad) mov test xchg les inc xlat mov sahf loop daa add cmpb loopne mov lock jbe sbb ret outsl out mov mov shr mov (bad) fsin pop lods add add ret outsb pop push addr16 sbb mov or (bad) mov xchg xchg nop and or lret mov add add add test stos test sahf cld or pop std sti and icebp pop in push jnp add insb sbb mov and pop pop xchg jmp cwtl pop mov test (bad) push repz popf inc pushf lahf gs sar inc fcomi mov mov mov and (bad) test or jb dec js lods and xchg (bad) xchg pop add xor pop xchg jge push or (bad) mov or pop outsl sbb out frstor fwait mov cmc leave fisubl inc call inc or cld add (bad) sbb mov sahf stos sub (bad) push adc add stos or jb jnp fisubrl xchg int push std push dec aad and xchg xor mov js nop push mov outsl gs (bad) stos jo add out xchg mov jge jne mov push sbbb lret insl jb xor ja jo mov sub add cmp xor sub inc roll add pop test mov push push cld mull fist lea jp fistp out cmp or dec shlb fmuls jnp rcr enter neg add jmp out lret mov outsb xor (bad) aaa mov and xchg es out inc and cs jno push push (bad) xor dec shrl or mov cld mov push out mov push in jno imul lock fnstenv dec addr16 add dec mov adc popl sbb ja scas andl add add add jp into jle push mov jo pop jns cmp push outsl cmp das push aas (bad) pop add pop in call in or aas roll add xor out daa fsubl sub popa mov mov addr16 (bad) mov ret jge mov sub in xor inc or movsl mov push pop adc inc inc hlt mov scas bound push xchg test inc push in jecxz (bad) idiv or fisub jb out push enter mov (bad) cmc ret in sarl lods hlt inc jno add add add jnp orl xchg cltd neg repnz xchg mov sub sti je insb cmp (bad) out mov dec cmp lret cmp pop aaa sti aaa xchg iret inc mov sub and bound loop mov cmp repnz icebp inc jo cmp pop xor mov jo in loopne hlt jns dec or push (bad) cmp pop xchg jo sub jecxz mov pushf movb sbb mov xor rorb sub loopne clc cmpsb rclb data16 xchg sahf push inc sti test add add add in or inc ss dec and jle ret jge imul mov lds and jl (bad) jo xor (bad) mov mov sti or pop mov leave or dec std popf aam xchg sbb outsb in clc pop lahf push dec jle xor pop push cmp cmp cmp jae ror and pop aad mov sub jno inc arpl add into lea jae popf fistpll sbb sbb pop push pop sti mov lret sarb js mov jg notb hlt pusha fs xchg add add add bnd repnz fiaddl (bad) push and int xor lea xchg cmpsb jg in jecxz pusha inc dec in lahf xor sahf lret sbb fstl or movsl cmp ljmp insb lret call push sub dec enter xchg fdivl fwait loopne outsl inc in inc push aaa sbb sbb pop xchg add push sub int mov dec xchg lret pop push arpl xchg lcall mov inc jmp adc mov add add add push push test mov or (bad) jl ss incb adc ret add out push inc cmp sub sub push arpl flds pusha leave dec out sub adc cmp push mov clc jle lock adc pop int3 pop xchg sbb rorb add inc or xor in scas ret xor out jne call loopne mov imul xchg inc (bad) fdivrl or es sub adc jmp add add fucomip fs push cmc repnz jnp lock icebp xor xchg sahf adc call shll imul out jnp sti lods lea js mov idivb push nop enter push pushf aaa fs popa imul sbb stos fstl lods lds mov sti nop or add sbbl in mov test pop push imul pop jae cmp mov aas mov cli inc jae push inc cwtl sub into add nop movsl lds jbe add add inc cmp scas mov fistl cmp (bad) sbb and (bad) xchg lret or jbe in jns popa ret sub fiaddl insb (bad) fcmovu push sub add pop and cld and iret cmp jle xchg (bad) lret adc (bad) fnsave shll mov and cmpsb out pop test cmpsl sbbl sbb pusha into in cmp push arpl jle das fsubrs inc cmp out sbb out cmp (bad) jbe je enter jmp add lahf jle jb xor add add sbbl dec (bad) xor cmpsb jns mov mov cmp les stos pop push jb loop sti jb test nop mov inc std out sbb mov scas loope push (bad) imul pop data16 or jle pop fs dec int3 rclb (bad) mov and and add jns adc mov add in (bad) xchg and imulb aas jecxz inc inc lret xchg cld jae test aas sub insl jno dec loop push ret ja add mov ja in arpl xorb rcrb add inc and call push lcall or (bad) mov adc jno cmp cwtl gs scas ret rcll loopne in adcb test (bad) out lea mov (bad) lcall test adc loopne daa lahf lods fildll (bad) push or mov vmread (bad) xchg xor xchg adc popf mov imull and (bad) mov fwait xor shll scas xchg test xor popf aam sbb and pop sub add add add mov inc cli pop lds mov pusha movsb cld xchg sub sub bnd in mov add sbb and adc sbb and in cmp scas and add lcall cmp cld or test or rcrl sbb and pushf push aam (bad) jge sub lret lea ficom push ja inc in xor push pop xchg popa push and jno dec jne push aaa mov mov pop or int3 in pop sub dec aas push outsl clc xor add add add cmp inc sbb fsubl ss xor xchg rolb mov out cmp fadd mov mov xor mov das push or rolb cmp fs stc mov mov adc lea dec fadds insl dec mov xchg push arpl xor inc mov test repnz xchg sub jl out jae sub mov rolb into pop sbb test test mov loopne mov repz scas xor outsl fsub add add add add xor sub fbstp gs (bad) dec repz mov jae adc cmp nop idiv xchg xchg lret cwtl sbb jge in daa mov ss cmc jnp jecxz,pn push je cs sub lods dec mov cmp std mov adc out dec cltd and shlb les push sub or scas loopne cmp adc hlt mov cmc mov xor incb adc ljmp loopne inc sbb pop (bad) fiadd lock add add cmc xor xlat repz mov inc cld incl test mov lock mov sub repnz add das mov dec dec mov jno lret data16 icebp cmpsl js adc mov fidiv pop stos stos lds pop ret lcall inc mov xchg and xchg sbb mov cltd scas mov sub inc mov cwtl aas add test push cmp insb xchg jp andb lcall push push lret out adcl fs jecxz sbb add add add out fistpl adc aam mov mov push inc cld stos add out in outsl push adc push fxtract sarl ljmp mov mov or xlat add repz jbe sub mov das test sub es inc std lcall xchg lret mov sub cltd loope sbb in fst xor cs mov jne shrb push pop iret stc lret orl pop gs incl or add add add js je pop jbe pop lods push mov (bad) mov pop loopne mov cltd movsl daa push add iret test mov aad mov inc adc mov push ds or pop xor test (bad) fsubr mov push inc inc lods jbe pusha cmp cmp push cmp jne sbb push mov into mov push insb subl sbb outsb es sbb dec mov call xlat lcall xchg jecxz pop sub or (bad) inc lret jb jnp fisubl jmp add add add add sbb jns cmpsl dec lods sbb dec sahf outsb out lahf mov mov pop cmc es (bad) ss pop stos pop popf adc dec leave push or out and rcrl adc call or mov push sahf push add insl push inc lods adc jmp jns adc push xor mov lock mov rolb cld (bad) outsl adc in add scas or or out mov sarl xlat lds cli iret popa jecxz add mov xor pop rorb mov aaa add add add data16 xor dec mov ret mov in mov paddd cmp pop or lds cli xor ss insb pop or mov adc push mov in mov push loopne mov xchg adc dec out aad jp pop sub sbb and xlat mov dec mov das test je call pop jle xchg ljmp es cmp dec scas repz iret in gs xchg jns push lock jbe data16 add add add add mov mov pop sbb xchg push call adc in or mov xor test mov mov mov push mov xor rcl (bad) out cmp ret xchg nop pushf sbb mov sbbl shll sub loop push xchg enter jle dec shll clc ret js (bad) (bad) mov test divl cmp pop pushf test jg lret jbe subl cmp mov mov pop into mov add lods cmp add add add add (bad) dec xor outsb dec loope mov pop xchg inc test mov and dec (bad) jae or or jecxz mov jmp sbb sub int pop sub jo in subb jbe repnz fxch cwtl pushf jge in xchg lret pop and mov test adc sub mov cmovp sti scas lds movsbl iret movsl pop mov xchg cmpsb cmp mov xchg mov add loopne mov cmp jle arpl xor lds sub rolb (bad) jg test add add add fs rolb jno push adc xchg push cmpsl aaa pop mov mov push arpl xchg loop cmp lods pop and jmp aad inc cmp xor nop xchg xchg in call add hlt rcll jg inc jae add xor or test fiaddl xchg notl sahf out push fiaddl sbb cmpsl jb jge jbe xchg mov repnz and and cld push push gs pop cmp stos adc test dec mov add add add or cli and dec push leave push xchg push mov xorl inc outsl loop fimul adc bound push cmp stos iret fstp decb repnz jle out jb loopne xor inc sbb enter sub in push mov push sub outsb mov pop mov les mov cmc in nop jns or or xchg jae dec cs bound in movsl mov add adc gs cmc inc add mov imul adc add add and dec cmc (bad) sbbb rcr in stc push mov ficoml cmc and jge rcll int3 orl cli sub out fmuls imul int3 pop add in push call mov inc xchg pop movsl out push dec movsl mov add pop aad lock mov lds call mov jmp mov rcr sbb sbb rcr movsl sarb (bad) leave xchg mov mov pop in push (bad) or xor jl movsl enter out add jno add add add lods inc pop xchg outsl es test fcomps mov jo into mov inc loopne leave shrb test pop mov repnz and mov repz rcrl adc es mov mov mov inc ret iret cld out (bad) fcomps add add xchg (bad) movsl xchg lcall cmpl addr16 fst mov rcrb insl ret cmc push cmp mov (bad) cltd movsb xchg sbb lds inc jp (bad) push push cmc ljmp in mov sahf ret pop add add add test dec mov add shll and sti mov jno dec aam out loope jbe cmp sbb stc push (bad) out aad xchg dec xlat cmpl pop aaa test xrelease lods cmpsb and insl dec jg rcll (bad) leave hlt jae mov sbbl mov xchg cld xchg pop mov imul insb aas cmpsl imul and push movsb rcr (bad) pop ss dec and add cli sbb jmp or inc fnstcw mov enter xor mov pop out test jmp inc orl bound add add add adcb inc and add mov push xlat sarb sahf push dec daa adc mov out add in cmpsb inc and mov cli push or push pop push movsl push outsb pop mov icebp sbb shrl add imul jl inc cli push ss ffree jns cld stos cwtl xor aaa ret outsl sub xchg movsb int3 dec ret mov add repnz mov adc sbb fwait fwait and insl cmpsb sbb test pop jae ucomiss inc std push and mov xlat lcall jecxz in jb call add add mov sub or mov (bad) iret xchg sbb in (bad) mov (bad) call loopne sub lret loop jo loop dec or call fsubp loop pop jp ljmp fmuls mov xchg and bound add jp (bad) clc xchg test popf mov jae fwait lahf sbbb jg iret int cmp orl (bad) xlat push mulb fld into push mov push jmp xlat inc xchg into xlat lahf jnp lahf insb cli jns mov cltd aad add fmuls sub add add add (bad) in xchg pop add test xchg outsb pop aam add add test and adc pop scas jge scas jne jo sub xchg pushf int aam sbb sbb adc sub fiaddl leave faddl xlat in jno lret mov mov sbb btr mov test jae (bad) les lods mov mov mov jbe fwait imul push (bad) fdivrs inc in dec cmp adc or es and aam xchg dec add add add cltd adc data16 enter ret xchg inc xchg testb dec or dec sub (bad) jl cli nop push lock sbb outsl pop sbb dec (bad) mov cmpsl xlat cli scas inc mov or xor repnz jl icebp sbb cmp imul aas stos or fstl xchg push ja int sub stos or xor push testb add (bad) icebp jecxz push xchg cmp inc insl lret jmp pop pop mov roll scas movsb dec push (bad) jne sbb ss adc stc add add add test stc pop lods fistpl jl int3 cmpsb movsb push mov bound (bad) ljmp mov sbb sbb pop cmp mov stos (bad) push mov cli or test fwait sub movsb push sbbl cmp shrb mov stos jmp jae (bad) mov mov hlt and (bad) ficomp dec pop les and mov push mov dec adcl and in cld push in enter pop sti inc adcb notl sub xchg fcomp sbb xor add add sub fucomp iret in adc or das rol mov cmp scas fldl xor xor push cli jmp push in ds lods lea divb sbb (bad) mov xchg jp sbb dec and (bad) mov mov aad pop shll mov repnz (bad) dec xchg push mov loop pop jge fwait adc mov jmp xchg pop imul aas jno sbb cmp push dec out (bad) out repz or test pop inc (bad) mov dec or pop mov xchg mov add add add lock pop scas pop sbb sbb add fildl or icebp mov push (bad) test in adc adc sbb sub sub mov ficompl or push (bad) aas or mov mov pop enter push cmpsl js cmpsb fs jmp sahf mov and jle xor out js pop sbb inc mov mov mov imul jb adc subl jecxz,pt xchg pusha std sub insl and fidivl add add in neg mov ljmp mov sub mov outsb pop nopl lds cld enter addb hlt stos rcl les cmp loop scas int jb ja lret in imul mov xor dec mov mov ret lcall cmp add sub and or sbb mov lods out pop xor arpl adcl sti pop test scas das addr16 lret fcoms (bad) jp (bad) jge out xchg outsl xlat lea mov push imul add lock aam into lds sub sbb add ret jns mov ret scas les xor sub xchg dec in fildl mov mov pop outsb sub outsl push push test subl sbb fbstp adc sub mov or mov mov bound fldcw xchg and mov sahf xor jbe lds (bad) jmp push cmp fisttpl je sbb jge out add sub jbe dec xchg pop dec push enter add add add dec jge lods test mov int stos inc push push sbb in outsl cmp addl mov daa cld dec pop push int3 inc or and pop ficompl sub cwtl push sub adc jae push sbb jne cmpsl pop pop repnz mov mov pop jne xchg jle mov push pop jae aas stos cs clc (bad) xchg subb aam mov pop enter sbb iret cmp popf mov aaa mov lea sub mov ja jg sbb inc pop ljmp xchg add add add add push dec ret out gs pusha shlb clc mov jge pushf lock pop enter xchg cmp in dec shrl sub ss mov ficompl out ss and fistpl (bad) sub sbb rcr lcall int3 cmp dec or (bad) adc mov inc jmp and mov jae sub int jl ja in in sub fwait in adc data16 inc sarl sub push (bad) imul pop jno test add inc std xlat pop push push and jae mov add add adc lock xor sbb fbld or inc inc and inc mov pop andb or and lcall dec out inc fs mov jns adc mov loope ret mov gs (bad) jbe ret lods and icebp aaa mov scas mov les push and pop jne mov lods sub sbb jne (bad) arpl cmp xor jne push aad add add add xor mov arpl loop mov cmpsb std aaa (bad) dec je sbb sahf aad (bad) ret push pop push xor cmp insl dec loop xchg jae inc mov add or jne inc (bad) call push sbb push and loop or add out pop xor stos cmp repz ret outsl or xrelease out (bad) cld lahf push mov adc and cli lods cli fildll in xor jg mov out add sub sbb xor (bad) mov pop cltd popl add add add add xchg xchg cvtpi2ps lea sub xor js mov gs movsb and inc out enter xchg xchg pop scas idiv imul int3 mov add adc cltd xor dec and out sti xchg aad push push mov sahf bound xchg inc lods adc dec mov push mov mov aad int3 jl push lods mov xor inc jle aaa and outsb fnsave stos inc xor insl stos cmp mov mov add sbb loop lret xlat movsb xchg stos cmp loopne lods cmp jbe push aad divl daa jmp test or or fwait jnp cld les xchg mov sub movsl push int test gs jle push fld in (bad) mov daa dec in das push cs mov dec fstps popa adc int3 lds pop repz jbe inc xor mov pop cmpsl push xchg xor dec stos (bad) (bad) arpl and cmp sbb push pop cltd outsl data16 pop ja sbb (bad) decb hlt les sub xor or and add add add sub fdivrp xchg test (bad) lods rcrl xor jb nop inc xchg or add push pop mov test cmp jp sbb int3 or mov lcall sub cli aaa pop int3 xor or add les pop mov (bad) shr shl sub jg jo pop movsl push push imul lds sub movsb cmp push pusha fdivrp sub daa adc (bad) lcall ja mov pusha repnz in rol jl in add add add add xchg jbe mov or mov jmp repnz mov mov or ss test dec outsb mov fildl or sbb inc scas mov add lret jg pop inc or mov or aas pushf cld mov sub ja hlt int sub aaa xchg (bad) or in xchg sub stos call test sbb and add add test mov imul adc outsl cmp and into shll aam rcrb repnz xor int3 inc mov xor push roll add add add and mov pusha je call test sub das fimul mull inc ret mov loopne lock xor and dec mov int3 xor add sub adc (bad) std xor sbb mov lea fsqrt mov mov aam cmc repnz xchg dec (bad) mov ret fild das push aas repz mov sbb jle in loop jmp rorb cwtl arpl jp mov (bad) push repz add add add loop (bad) out mov pop std inc int sahf or xor mov and (bad) outsb jp ja stos lock xor data16 popa xchg jecxz xchg in xchg call pop adc mov mov loop inc jle push repz or je jp in mov inc fucom inc out push mov mov test (bad) outsl outsb sbb in in mov mov inc out pop adc or xchg dec sbb lahf aam add les pop insb dec mov incl add add add add add cmc mov pop mov or mov outsl aam inc fmuls int3 insl pop int3 xchg xchg outsl adc out jg cmc iret mov cmp aas mov test push mov mov mov shlb mov subb xchg mov fs movsl clc mov add jno insb mov push jl mov cmpsl adc push (bad) xlat xchg test scas movsb mov lods daa iret mov imulb sarb jecxz and push jecxz and push insb mov add add lods inc aaa fstps cmc dec jns jno jnp push mov pop jnp pop xor push or int3 cmp stos (bad) ss xor gs push jbe test jp insl cmp std and push xor out stos mov cld stos leave adc aam push stc pop lret push into dec insb fdiv pusha push sahf pop adc pop add ret shrb loop imul shll xor lret cld repz sub inc push int sub adc jmp xchg mov mov lret insl mov fsubr movsl out xor push outsb xchg rorb add loope xchg (bad) (bad) add push jbe jmp iret (bad) lock cmp pusha bound mov cmp mov out leave lock sub insl dec loope xor shll scas movsl push pop jae divb sbb cld and xor les hlt mov push fsubl loop sbb xchg xchg adc rcrl ficoml ljmp adc pop fmul insb nop aaa lahf mov xchg popf jg or gs loopne mov fstpt frndint xchg clc inc xchg xchg aas sub js jge pop lods cli add add add or xor xchg pop add lcall scas mov movsb out movsl imul adc jle xchg popa pop push (bad) jl in pusha jae pushfw sbb dec jg pop mov iret mov pop or js cmpsl jns (bad) das insb out pop fcmovnbe push push mov repz push ret mov add je xor push and sti lcall mov out sub ret loope in or add mov push loope push push pop int lret lock pusha int or add mov and enter inc jbe shll movsb mov push outsb jg mov jnp test push mov int3 adc sti push mov push sahf pop xchg mov jne movsb test xchg test or sub aam lds (bad) ss lcall imul stos jno xlat dec inc pop gs sbb inc pop stos jnp jb ja xor mov xchg push cmp das jecxz test loope push clc inc cld inc out lahf outsb mov cwtl jo mov mov inc mov (bad) dec aam out mov lret in add jl add add add je icebp mov pushf xor jecxz scas int3 xchg int lcall xchg arpl add cld shlb lods dec jmp and idivb jecxz jo jnp ds stos movsb lret pop adc rolb les or sbb cld mov add or xlat stos cs xchg pop sub mov jle inc lret xchg jns add push sbb testb pop (bad) pop and das repz stos sub lret mov movsl jnp pop xchg dec add stos shrl dec and add add add jmp pop dec lods mov xchg je clc and sub mov cmc pop jb pop loop (bad) adc xor mov ds lahf fildl mov stos lahf mov ljmp xor inc js push movsb mov jp dec xor ljmp fmul mov mov lahf adc push (bad) mov dec adc sub xor fimull repz mov mov clc mov data16 in push mov cld in xor jl ret mov (bad) pusha test nop push imul pop sbb mov iret jmp rolb dec cmp and mov inc cwtl inc ss jns sub (bad) bound call outsl ret mov inc mov into mov faddl out test mov in cmp insl mov pop jmp jns in lahf inc jle dec push repnz pop ljmp mov jno add roll jecxz insl loop ds jnp mov dec mov cmp dec pop mov iret loopne (bad) push xchg inc mov fs fucompp pop mov xor mov scas (bad) jns arpl sbb push cmc pop jo jmpw lret mov ret lahf scas sahf sbbl sub jns icebp ficompl shll inc sub cmc push (bad) adc stos push mov or (bad) pminub inc jnp pop rcrl les into in xchg cmpl icebp fcoml shrb and mov push mov pop inc in lods or pxor xchg pop cli mov jl es aad jp arpl incb mov inc or push js add add fistpll iret cmp stos aas out add cmpsl and add addb xchg je sbb loopne lea xor jbe popa mov and fsubrs sbb sbb outsb sub xchg push popa jp mov push cmp scas sub inc (bad) test rcrl jge int3 movsl cmpsl xchg fcomps xchg sahf mov xor sbb outsl lea (bad) xchg fwait ss jge lret dec push js xor cld mov sbb mov daa adc lret in add add add daa sub rcrb adcl jl into dec cld and icebp das loopne pusha inc xchg sarb mov inc fcomps dec mov xchg xor into sbb out pop jecxz push stc (bad) scas push pop std int3 test inc xchg xchg and stos add pushf fldl jbe and sti sub pop fidivl addr16 pop sub scas push popa clc scas push mov lret out lods (bad) imul dec int3 jge sbb ljmp xlat jle stos sbb mov and in aad cltd push add add add and and dec or push jb test lods jo sbb gs mov test into jg leave arpl push rclb jbe sub pop xchg jns cmc mov iret xchg fild int3 (bad) ds pop dec dec jnp mov push test int test sub dec fwait loope mov sbb push pop push push xor and outsb and adc cmp in mov inc mov jns sbb sbb dec cmp push add add add dec out and mov and mov jl jl les dec xchg sbb pop arpl fcmovnu insl add inc cmp call ja shl imull push (bad) lea mov call cmpsl nop pop jb call ds cmp xchg mov into popa arpl ds ds adc loopne and lods sub cld jl inc push in pusha lea pop or repnz adc in and push jg add mov add add add stc inc ja and xchg rorl or pop sbb cltd imul popl inc imul bt lcall and push mov rorl into mov xorl mov js flds xor cmp dec imul jmp mov or popf xchg push lret iret mov es fildll or jl sub arpl sahf hlt pop sbb cmp mov xor outsl xor add add add sti into xchg and cmp lock or cmp sub mov mov inc and lret xchg sbb test lods adc sub popa xlat lods movsb xchg loop pop sahf xor sub lods scas add push cmp gs cltd je dec ss xchg punpckhdq test pop lret mov xchg adc mov movsl and jg popf fistpll out or int3 and rol jmp xor push inc dec xlat mov xor dec push sti or mov mov not pop sbb mov add add mov push clc stos xor add rol jmp lahf ds pop adc enter popf fsubr out push loope jecxz mov xor inc and cmp jp inc xlat dec lods leave hlt test add xor add cmc or adc lea ss mov mov cmp shll scas pop xor lock ljmp movsb ja out addr16 and (bad) and roll jo rcll lock inc mov add arpl ret mov out jecxz push mov pop sbb outsl jns dec jns add cld pop inc dec popa mov xchg ljmp aam inc jns insb aam inc jbe paddusb inc mov adc ret and or mov andl shrb mov nop add dec clc xor mov jno addl and test out xchg int3 pusha jae dec add sbbl xchg push sub or das sbb (bad) pop xor (bad) jne stc aad jne xor jae mov pop outsb bound cmp outsl add jns dec pushf xorl add pop fsubs sbb xchg cmp int3 sbb repz or pop push and test das in push js lock mov int or jmp loope mov xchg gs cli les mov xor mov cltd sarl and inc ret fistpll cmp jno mov mov nop lds sbb xchg (bad) clc dec xchg dec sub cld lcall jp fnstcw inc pop jnp cld fsubrs dec jnp imul pusha pop jmp fldl add add add outsb stos ds fs test cmp xlat xchg jb xchg jecxz test sub push cmp cmpsl (bad) fistpll pop mov leave and xor fnstcw repnz sub or mov movsb push imul add pop enter jns (bad) pop sbb push xor mov (bad) jne pop inc xor stc xor push int rolb in dec mov scas xchg insb xchg cmpsb aam rclb and outsb xchg xchg pop mov inc lret fucomp mov jmp cmp jmp xchg adc add add add rcrl add popf sbb inc dec jmp cwtd lahf (bad) fdivrp pop movsb jnp sbb mov adc dec push test int cmp and jbe out dec inc xchg dec jno sbb iret xchg test xor jb pop inc cwtl push cmp dec sub lcall mov sbb mov inc inc fcompl xor and cld pop mov push (bad) jg daa mov loop movsb xchg ret mov pop gs and out sbb push pop push outsl std rorb sti je subb lds add add add mov in lcall dec std and add rcrb dec insb mov aaa xor fstpt (bad) outsb stos pop mov out mov and lock sub stos sbb jmp xchg pop dec jp mov sar repz jecxz cmp sbb mov mov jmp cmp sbb and xor push outsb jbe mov pop inc xlat movsb push inc dec cmp outsb sub popa in or fs (bad) fsubl ja,pt or pop sbb sbb das sahf add or and into shl add test movsw inc (bad) xchg cld or jnp ffreep xor xlat fidiv rcrb mulb ret outsb dec ret gs sbb cmpsl mov out negl mov dec jno push and xor cmpsb add jg xchg xlat (bad) sarl aaa jmp pushf mov fsts cld dec leave ret mov jns or lret xor dec and mov fimull mov fstpl test cli lret lcall dec add pop push sub mov mov or pop xchg das and adc imul call daa pop (bad) aad push pop adc dec adc loope sub ret imul sbb jb add pushf clc test add jo jmp int3 in (bad) xor incl push (bad) dec and sti mov push (bad) mov mov pop nop and jbe loope ds and jne sub push loopne push int ss (bad) mov sbb sarl testl add add std inc jne cmc push leave mov inc add push mov imul dec sub cmp push lea pop outsl mov mov push inc aas cmp xchg es das aam inc imul lahf mov mov aas adc lods pushf dec cltd data16 pop xchg stos test pusha and mov cmp mov sub or (bad) pusha pop pop adc popf jns (bad) dec sub mov xchg lods push in mov adc mov mov fnstsw ret in mov popa pop jne mov add add mov sbb test jnp push rcrl push out push xor jo xor lahf (bad) lret jb cmc insb lret add and sarb mov add ret movl out jecxz mov fistp movsb jmp push iret pusha mov jmp mov call sbb and or add jg lret adc repz test push in push icebp adc lds es inc mov add pop adc cmp jno fwait xchg add jl (bad) xor mov sarb jge jo add gs cmp mov dec mov nop dec decl add push ret inc (bad) adc js iret xchg sub cmpsb xor loope cmp outsl cmp pop xchg mov mov and js inc sub sbb int3 outsl aam lods (bad) push jmp out shll lds shrl xchg sub int3 lock inc dec out movsl adc or int fsub repz add add add add push (bad) repnz jg inc jne,pt je and fbld int enter xchg div and (bad) mulb inc mov daa insl shr pop inc pop clc ret push push mov mov lods ror cli pop sti inc cmp jecxz and jmp and or sbb gs mov mov outsb fldt sub out int3 out or sbb mov rcrb push push loope ljmp bound pushf cmc shr xchg fidivrl xor psubusw fninit add add add push pop jle in lods mov out and fistl (bad) lcall push adc dec es xchg cmp push std sbb cmp pop xor pop cmp sub and or (bad) imul popf je mov mov mov xchg xor mov dec xchg inc mov rcr lret leave vpunpcklqdq dec aam add sub rcrb or inc pop das mov les xchg inc cltd lret das mov inc enter cwtl imul pop imul mov jbe dec stc and mov es fs pop or fdivrs ja incb adc ja inc roll ret (bad) inc dec in adc iret push pop popa jg inc or (bad) pop mov add fimul xchg int3 lods mov pop adc mov lret dec cli ficom sbb jmp and sbb (bad) mov pushl test in inc jmp mov jbe loope jecxz iret mov and mov xor xlat dec inc jbe ja jle inc jp inc xor cmpsb sarb outsl and xchg add add aad leave sub adc ja orl or loope inc fcomps fsubrs add js and leave or pusha sahf test js sahf pop insb mov lock mov int ret (bad) lret scas cmp icebp mov into jp mov xchg enter sbb lcall or lcall ljmp and and sbb cwtl jae add jno clc xor push mov xor shrl iret mov into test and jmp in adc add add add (bad) jns (bad) fldl fsts push call push and cmpsb aam cmpl xor adcb lahf jbe ret mov pop fisub dec mov das (bad) and lret cmp add push inc mov rcrb loopne ja cmp mov sbb inc xchg dec ds xchg dec test jb pop inc lods add and dec xchg in (bad) pop cld out insl inc int3 enter push xchg and sbb lret sbb cli dec mov divb (bad) rorl xor jb test sbb out inc push and cmpsb add add add add mov push xor in and jle out (bad) pop movsb dec popf jo lcall arpl adc and lret dec ss cmpl sahf sbb leavew icebp xor fmull les into cmp jle pop dec sbb aam sub cltd shl sbb sub cmpsl andb mov jbe mov pop sub cmpsl pop mov repnz lock jae gs notl mov xor cmp (bad) es aas sub jle add add add add adc insl lods fistl inc insl xor xchg mov hlt shll mov or cld push xchg mov repz add inc or in inc sbb popf jns test sbb mov sub lcall movsl jb rorl mov int data16 test pop call in test fldt xlat push jno push lock sbb fwait bound sbb xchg sti cmp xchg inc pop stos pop js mov iret inc dec xor mov adc rorb scas stos ja lock out (bad) cli xchg xor and les clc out pop add negb mov int pushf push pop xchg stc lcall sub or adc push ljmp loopne movsl in xchg add push icebp comiss aaa insb cli frstor xchg mov enter mov out out into xchg jb jl push lahf sub stc das sbb dec lds sbb clc adc aad mov mov jae and out data16 mov loop dec pop jb fsub mov insl mov scas mov cmp daa and or cltd (bad) out inc add dec sbb pop lods cmc int or inc jbe push data16 mov sub insl jl cs icebp out test dec or nop bound insb jae mov arpl sub into jo (bad) loop sbb jmp jo pop jo out nop scas (bad) cwtl rcrl pop outsb inc or fs (bad) addr16 nop adc lret dec add jge ret in jg push (bad) int3 test jle out popaw inc xor xchg push cmc sbb hlt mov nop lcall pop aam add lods enter and cmp jno adc xor mov mov dec xchg gs (bad) jl popl adc dec popa jo clc add mov mov sahf cmovbe call lea rolb xchg push push add sub mov push xchg jns xchg inc repnz push scas jb orb xchg pop push dec je mov adc sbb ljmp adc insl mov insb scas les add add mov cmpsl jae clc mov (bad) div mov inc mov outsb imulb dec jnp aas lret (bad) jo mov jnp sbb sub iret sub mov inc sub aas cmp mov inc xchg dec outsl adc cmp push jo popa adc loop ret cwtl cmp jmp mov fs sahf jne push imul pusha xchg insl mov cmp pop mov fldt and icebp sbb sbb jnp js jmp jmp xchg jmp push (bad) shl xor pop xchg mov mov std fwait test call push pushf pusha pop sti notl lods sbb jo push xchg push je jns fisubl (bad) (bad) push and xor loop sub cs clc or sub jo test dec mov shr sub es ljmp inc sub lds iret sti ss mov add jmp sub lret mov jmp aaa mov xor test out xchg cmp mov and inc xchg mov lcall add lods sahf stos cmp xchg pop xor xor je arpl loope outsb ds push push pushf push dec mov cmp jg pushf out loopne xchg test sub jo insl jae (bad) xor std sbb subb push pop mov movsb dec dec je xchg jmp fwait jo push inc pop sbb dec in in mov loope xor mov push scas imul shrb xchg jo dec in ljmp stos pop ret mov pop add fsubrl add call pop xchg cs movsb pop sub mov in inc cmp fisttpl pop inc sub aam or hlt jne and mov stos icebp jno std mov or ret fsubl inc push cli push sub fistl aam adc lret add repnz jmp cmc sbb cmp mov mov sbb popa in inc lods sbb pop push dec xlat pop sbb sbb sbb pop push mov decb and mov mov je fsubs (bad) jbe lcall add add add push cmp sti adc ja movsb in roll jns call and xchg dec jae cmp aas scas sub mov pop cwtl gs push sbb push aaa adc leave sbb xchg mov mov push inc jp fsubrs loop mov pop dec jg aad inc inc adc aaa mov je mov jae test mov repz xor pop aam cmc sbb mov add jl mov xchg shll sarb jns mov sub push add xor dec arpl outsb orl adc mov loope cmp push sub bound sbb sub icebp cltd loope movsl aas or cmp fs popf mov mov (bad) call or leave vpunpcklwd pushf (bad) and in or jb push sbb or and in std lahf mov push xor xor jne pop sub jae push (bad) push mov jp sbb cmp loopne enter pop push (bad) push mov icebp mov jl adc and ret in pop push jae inc (bad) xor add add inc leave sub out sub adc jno dec inc xchg inc xchg pop fdivrl adc and mov push mov in rcl outsl ds or cmp jmp lret dec mov rorl lods jo,pn test jne icebp and mov enter ja mov jbe adc jnp dec jne cmpsl or mov cmp push cltd push mov das ja (bad) lahf (bad) out (bad) ja mov dec xchg rcrl cmp pusha mov dec icebp or lea sbb xchg jb xchg ret repz popa add dec sarb pop stc arpl imul xor jp mov lock dec hlt mov xchg pop jle cmp out scas push call rcr fwait int3 sub mov cmc push mov adc and add sub les faddl scas inc (bad) in mov mul mov dec mov mov (bad) out cmp adc dec mov insb lock lock ljmp iret jecxz sub into cwtl xchg mov cmp cmc fucomp mov adc sbbb in and imul sti pop mov loopne icebp add push push mov lods push test and dec xchg loope dec jns xchg jp add jae jmp inc testb iret xor nop mov or dec dec (bad) xor das dec jle cmp fmul xor mov dec adc lret sub iret sub sbb bound lea adc xchg mov xor inc cltd xlat lods mov (bad) pop mov jnp (bad) in (bad) imul add add daa adc fsubrs xlat daa cltd arpl lds nop mov mov jo loop ja adc mov jecxz gs frstor iret mov (bad) or test rcl pop movsl out or mov pusha xchg inc cmpsl push (bad) out (bad) rcll rclb ja cmc jg push and hlt mov adc fisubrl mov out ja pop jbe out mov stc sub out push jge mov popf sub adc mov out pop sub mov add add add adc lret push out cmp xor xchg fwait in addr16 leave sub out cmpsb popf jecxz lock lahf or sti fcmovu test sub insb cmp jecxz push add xor add out aad mov add jp xchg cld mov imul cmp mov test mov mov in imul push dec cmp sbb or fst loopne (bad) lds or clc or movsb xor sub cmc out shrb aas insl mov fistpll test add mov xorb push xchg pop (bad) imulb adc add xor das test cli out fidivl shll mov dec sub lds and stos imul jns jl jbe jno adc loopne pop fs lock rorl (bad) ret shrb push cmp jecxz aam fldlg2 xor jno test push mov js insb lock int jp sub cmp mov cmp push pushf sub arpl lock ret add roll (bad) jmp in add lahf in bsr xor xlat jae and mov aaa cwtl hlt dec adc jo cwtl cmpsl imul lcall insb cmc mov lahf (bad) nop xchg add mov lahf js loopne mov or loope sbb (bad) jno cltd sysexit imul sbb push push dec shlb ljmp adc mov rolb mov (bad) int hlt push in inc repnz mov inc (bad) scas push fwait test enter jne repnz cmp cmp jns fsub in sbb clc fcoml add add add fildll (bad) arpl dec jo cmp outsb add das mov pop fdivs (bad) nop cmp sbb mov icebp nop xchg jbe imul popf out addr16 lea sub shr sahf or insl notb ret mov dec out stos sbb sbb dec loopne (bad) xor fisttp test inc mov xor pop pop mov out mov rorl xor mov cmpsb jae jns jmp adc sbb fsubr cmp aas push sub jo dec stos jno jge pop mov inc add add add pop mov cmp sub imul loop lcall cmp push jns add scas shrl jecxz out add mov mov xor leave les xchg in dec xchg cwtl jns daa cmp cmp inc stos mov scas mov mov into orl sbbl aas ret sub pop cmpsb add es and add inc add ljmp xor aam loopne jo,pn or lret es es jne sbb add aad sub daa xchg movsb adc das aas jmp xor jecxz pop mov ret pushf sbb jb push jne aad stos xor adc sahf push jae cmp lahf mov push call xchg mov and or test test repz out xchg xchg xlat aad adc ret inc int3 mov test dec out fidivrl pop xor add (bad) std ret mov mov jno adc (bad) ret xchg sbb or mov rolb sbb add add push jl int3 ss dec sti xchg adc std mov lods push xlat pop add rclb mov xchg jle pop push jbe dec mov test cmp mov jbe mov fnstsw adc jne sbb std ja xor sbb ret push imul xchg jmp fistpl or dec cmp es mov repnz scas (bad) loope add out stos mov mov outsb pop lcall add add pop adc adc add out xchg inc sub xor mov mov add jp sub push push dec jg dec adc mov cmp sub in push mov inc jl lds repz or xor mov ja adc jb xchg adc out sbb inc fidiv push or pusha cmp push mov add pop cmp int3 out mov outsl mov sahf lock jns outsl cmp cmpl (bad) repnz and and adc lock add add add add cmp test sub sub or js sub scas test cmc shll dec pop sti and xchg gs mov lret in jg test adc stos pop lods out pop add adc cmp jns sub add sub add pop into daa popa dec jne jne xchg (bad) std cli mov sub mov pop lods (bad) sub addr16 or int3 adc out mov jns lea aaa into cmpb addr16 outsb ret push (bad) push push lods cmp dec ljmp add add add inc pop xor shlb test movsl push fsubs out mov outsl ja pop sub std addb xor into popf or jl shl jb int3 mov cmc mov insl aas pop pop test and test sub (bad) adc inc sub stc in addr16 adc loope cmpsl (bad) ret push jle fcoml dec jae aas pop mov pop aad lahf les inc das ja pop fistpl xchg xor call (bad) into mov test (bad) mov repz (bad) insl dec (bad) add sub ficomp (bad) stc xchg xor push test cmp movsl pop mov xchg xchg lahf incl pop mov leave test xchg or andb scas aad movsl out push jns or mov and stos jg cmp or xchg push in or ret pop xor hlt mov xor add mov je orl fwait aad and push mov hlt and mov cli mov repz dec inc xchg sbb rorl aaa shlb xchg inc scas pop jno push ret cwtl mov lea add add add add es icebp pop in fidivl push in and lret pop mov mov sub ret shrl inc cmpsb mov lock sub jb sti xchg xor xor js inc mov xor adc dec rep jg es sahf (bad) mov out cmp pop mov sub add stos or rcrl jp loop ljmp aad in into sahf push mov ret int3 jge xchg and jo or cmp mov add and push sbb rorb lret fistp sahf cmpsl mov leave inc scas xor xchg scas jb xor jb pop nop sbb imul std div in dec jne imulb mov shrb jl add es (bad) out cmp cmp and dec jp xchg or out xchg pop cmp (bad) test adc mov add pop (bad) (bad) or icebp insl and jl xor cmp cmpsl shrd aaa out push scas inc and jnp push pop sub mov in and add ret lahf addl add add std pusha xchg cmp jp push jb les test cmp dec or idivb cmc ret and popf sub mov inc lret xchg ja sub push in dec fwait jbe push jbe lds jl or push mov inc ret cwtl and (bad) nop daa push mov iret sbb xchg shrb cltd sbb adc xchg mov and or jp sub pop mov pop das cmp and (bad) push aad jmp inc dec into jne push fidivr dec pmulhuw and add xchg or pop addr16 push mov or dec arpl dec mov cwtl dec rclb setae mov std and repz bound mov pusha mov mov popa cmc mov xchg fmulp lret test xchg pop add lea sub in push inc dec mov and pop mov xor lret js mov movsb loope xchg adc pop or daa dec mull add cltd sub pop push (bad) je sub lock xchg add sub mov (bad) adc and xchg adc jns repnz nop inc adc test push ja xor pop mov in dec push popa mov fmuls ds cs mov lods fild pop add inc mov cli sbb (bad) push inc in imul ror ret cmp inc jne lea sbb imul push scas inc adc mov push iret xchg sub arpl push push les stos pop (bad) adc arpl push test ljmp fmul int3 cmc push loopne dec aaa lret mov int3 ret sbb jecxz push out pop mov (bad) shrb push in nop stos and ja mov mov inc lret (bad) leave stc dec inc sub test and es popa icebp push fdivl out ss inc xlat mov shll sub pop xchg cmp lahf cmpsl shlb (bad) mov dec and mov rcrl icebp push ficomp push xor xor cmpsw (bad) mov cli insb rolb xchg dec push (bad) (bad) lcall add add adc ds int3 clc dec mov imul aas iret or ds push fbld inc pop sub xchg imull fdivrl or scas cmp test jl scas cmpsb orb stos fwait std cmp popf inc pop xor mov adc clc data16 repnz mov mov cmp stos jmp cmp mov jae dec and mov loope and hlt sbb je xchg enter movsb aam add add add mov sarb mov sahf push jg imul dec movsb jns movsl enter js cmpsl in pop add push or inc dec bnd lods push mov xchg add std and adc (bad) mov hlt in mov pop ffree cmc mov rcr push test dec xor dec adc sub xor imul push lock xchg jmp xchg nop out xor ret xchg mov test nop sub mov iretw xlat pop mov mov xor add add push movsl push (bad) fstl les lods stos sbb push fcom in push xchg int3 out sarb pop adc mov pop sti and sub arpl jo out inc scas lret les and loopne arpl jae and xchg add cmc and (bad) or dec dec ljmp sahf into mov loopne andl out pop je jmp test aas fiadd or adc stos pusha jb nop mov dec ret out loopne add enter xchg dec xor fdivs add sub mov mov fsubrl stc test in std insl insl gs (bad) lcall or sub cmp in cli (bad) pop movsl sbb je pop incl pop xlat dec (bad) je adc jnp inc icebp or sub fs pop sbb mov jne jecxz rcrl enter into loope lock mov cld fs pop push dec cmp call push insl mov pop mov loope jne add mov adc (bad) jnp pop sbb scas decl pushf rclb add add add sub mov mov cmp add sahf mull jne add (bad) nop sbb in stos punpckhwd cmp add jae mov push push inc dec movsl pop dec repz lahf mov insl insb (bad) jmp test adc xor cmpsl xor mov or iret in pop add jnp test xorb (bad) mov insb mov pop xchg jp ss nop fcom inc lock (bad) in add mov mov add movsl imul stos jmp ret into fldcw xor and add add add iret roll mov jle popa push ret xchg call and sti out lods ss out pop popa fidivr mov lods in mov cs mov ja jns imul (bad) mov push movsl cmc push sub add add out arpl aaa or mov imul cltd or lods fwait push jge sub (bad) aas inc xchg push add out imul and jecxz fcmovnu fimull jl mov and (bad) ss cld or fs pop imul inc fidiv (bad) pop add add add push fdivl or dec push jae popa push (bad) adc aaa or mov rolb jecxz icebp mov mov mov loop adc pushf (bad) sbb adc mov dec mov aam mov js pop push xchg (bad) jle xchg cmpsb sbb add mov mov cld or sbb insb in ss and or cmp xchg hlt lock mov imul les sti mov movsl lret out loopne sub mov sub add add add add dec fidivr mov pop sub fsts dec fsubr inc int add jo addl and andl popf sub (bad) jne pop iret (bad) and mov add aad dec imul cld push sub sti in cli mov popa aaa xchg push and pop xchg mov (bad) jo insb pop mov cltd daa xchg (bad) icebp dec inc xchg and data16 nop dec mov rcl fidivl ljmp mov push call out mov mov fnstsw std cmp jae sub cmpsb push popf out add xchg imul jle mov add add add add ficom test xchg sub mov fldenv ja addl jne push pop pop push sub (bad) in push pop test dec loope (bad) (bad) gs sbb pop ret repnz and sbb (bad) or adc jnp mov mov mov mov cld and and cmp mov mov sahf das fwait sbb sub jnp mov mov movsl inc stos stc mov lods in dec sub pop sbb sbb (bad) and jecxz add add in jne rorl imul or mov rclb adc bound jmp bound xor lds imul and out push aad lcall sub mov inc clc jmp and sub mov mov pop push mov sub daa pushf mov dec ljmp lds sub adc xor or xor outsl adc add add add add add adc mov loop adc push adc adc pop movsl bound pop call sbb cmpsb xchg lods or mov scas data16 xchg xor add pop out (bad) inc arpl jle jb and push adc cs push inc sbb scas aas pop mov fwait sbb in mov das mov aas (bad) mov mov mov mov aas xor pop cmp xorl gs lock rorb (bad) int jmp inc fcom inc pop in stos aas pop (bad) inc in add add add add fisub xchg insb les fwait adc aas sti fs std sbb imul in xor mov dec mov fsubp out xchg xchg push dec xchg pop pop daa push vmovupd cs (bad) or or xor mov fmulp adcl repz rcr jnp inc cltd sarl xor ljmp out adc in dec sbb sbb sahf outsb or pop (bad) in push test ja xchg xchg push or cmp mov mov popl clc (bad) lods add push pusha pop enter add add add mov cmpsb add outsb push cmpsl pop test push (bad) xchg std inc add dec ds sti (bad) jo xor cltd or mov jmp bnd or ss mov int3 test fidivrl add and inc dec cmpsb loopne cwtl in (bad) insl loop and (bad) stc pop addr16 int3 daa jmp jno bound shl xor pop testl pop jae xchg jle or popa xchg ds loope ftst es std fadds jae mov fcompl ffree mov movsl das sub push test fmuls sbb fs lds mov mov rcll push in adc ss daa push jge mov inc mov xor sbb cmp (bad) fsub stos xchg addr16 or ret lret mov and fwait sbb push cli cld andb mov cld jle pusha outsl adc dec xchg jge push repz in das pop lea out add rcr jge mov and fmull inc add test jb in lret add xchg cmpsb inc fsubs addb push test add add mov imul push xchg push jecxz les and push xchg ret in push jns sub or lods push ficompl and lahf popa shll (bad) sahf jl push loop test test dec mov cmc cwtl fidivrl or or aas jg std mov adc movsb pop leave cwtl inc or repnz add pop int3 cmp sbb or pop mov jecxz push andb xchg aaa cmc jb dec xchg hlt sbb in pop push add add add xor imul rcl in in mov mov call sbb sub imul imul jg mov es addr16 sar jbe icebp das or pop fmull push movsb sbbl cmp imulb mov cmpsb in sti aad out mov add cwtl fistl xchg rcrb cmp push push jp sbb rdtsc lock fsts imul push das jp inc hlt adc sbb xor lahf sbb sbb or inc jmp orb cmp test mov xchg sub add popa xlat push dec inc out adc mov sub sub pop jle mov xchg xchg push push cmpsl ljmp outsb dec movsb ljmp loop xchg jg jnp inc outsb dec pop mov js loopne test out mov xchg cli (bad) mov nop (bad) pushf adc fwait mov movsl cltd fwait test mov jl lret stos mov add ror lods decb stc fwait xchg push insb (bad) shll jp mov (bad) push imul divl push push mov add add add push sbb fwait push test xlat daa xor loopne mov nop cmp imul xchg pop push cwtl into cmp in add mov les outsb sub aas mov xchg push cmp inc xor or hlt test popa rcr into ret lods mov mov aam pop or push sub add fistpll mov repz lcall xor push jmp adc fs inc mov (bad) ss insb sub insb adc push mov (bad) xchg sub add or sbb into add add add add xchg call or sbb inc ret sub mov sti mov xchg lds or sbb aaa (bad) mov cmp mov jmp andl jne adc push test dec sbb add mov in pop mov pop xchg sbb mov xor cmpsl ss xor mov (bad) lds out mov int3 imul repz inc and icebp jbe movsb rcr add add stc push or stc cwtl add pusha subl or out cltd and inc rolb pop push xchg rorl leave aaa mov xor push call mov and mov imul fcompl xor or xchg mov iret xchg cmp cmp mov or lahf mov push cltd sbb sbb mov das add adc dec jnp xchg sbb (bad) jmp call movsl loope xor in mov or cmp pop and int adc or lods jl push popa bswap cwtl insb shlb repz push mov or jp not imul insb call outsb jmp (bad) movsb shrl popl hlt test das mull add (bad) daa pusha arpl vandnpd sbb gs adc inc push xchg xchg adc sbb pushf add rol xlat and cltd aam rcll repz mov jns pop mov jle nop mov or mov cmp cs clc jle loopne xor (bad) adc xorb or add add add les adc and sub push lea mov jl repnz fsubrl fs or push cwtl je inc add pop sbb inc pop add dec and or sbb mov shll and mov pop mov addr16 ljmp pop test adc xor cmp insb cs movb adc sti lods push pusha dec or test faddp cltd ror jg pop (bad) test adc push add add add pop shr push fcomps inc leave imul jne fnsave inc xchg andl dec test loope sbb sbb or mov xchg xchg cmp xchg xchg fcomps xor fsubrl aas imul aam sub push pop xchg insl pushf lahf outsb pop cmpsb or insl fistpll dec lock inc dec les imul (bad) fs sbb mov scas push ret movsb cmp and jge iret fwait fwait push xor scas inc lret fild add add add mov pop or xor scas icebp jl adc mov xchg sbb sbb cltd sbb xor pop xchg push cli xlat inc pop xchg mov lret shlb push jbe sbb lds imul adc sbbl outsl xor pop mov cmp int3 (bad) sbbl cmp or repnz test mov pop xchg test adc or adc dec xchg xchg cs mov jb sub xor mov sub sbb loope scas pop adc inc add add add add mov pop jne mov std mov sbb in ds shll sub mov cmpsb adc lcall cmp imul daa iret imull and iret ss push pop addr16 fdivrs push sub out cltd dec dec sbb mov mov fist hlt je pop ds mov mov arpl ss push aam mov int3 cmp cmpsl push ret shrl js mov mov or icebp and and vcvttps2dq add add mov imul inc adc dec push test lea out (bad) mov pusha and xor ret inc push dec test sbb into inc or adc sub push xor test jb data16 scas fs lret mov sub or add mov out adc imulb imul xchg (bad) repnz out test dec add xchg pop dec pop cmp js sbb or outsb xor es cld into or repz pop xchg mov mov add add add inc cmpsl mov jbe mov mov lods sub mov in movb xor cmp bound or call mov shll push ljmp pop in push xchg shll popa ss inc cwtl sub adc int3 data16 and xchg mov das mov out xlat xchg sti (bad) (bad) fiaddl call clc mov mov add incb dec mov inc xchg bound stos mov add in mov sub mov jb mov add clc lret add add add ret fxch pushf mov push icebp loop neg std sub (bad) fild sbb add jno xchg inc lea mov lcall push adc mov jmp rcrl push cmpb movsb push ljmp roll ficoml imul jg imull lret and pop jle (bad) test xor or iret (bad) mov push mov mov fs and (bad) test pop sarl pop pop aas sbb add add add test fsubrl mov dec jbe out shr dec (bad) push xor in sbb jl push xlat (bad) push mov jle aam cmp xchg fmull clc popf pop xchg sub or and pop or lret mov sub sbb (bad) xlat push add or nop test and outsb hlt cwtl cltd mov pop pushf icebp lds mov cli xor add push xchg fwait icebp push das loop pusha xchg jns iret and stos xchg data16 insb mov (bad) mov arpl sub pop lock add add push xchg lret cmp pop cli adc mov outsl out insl cmp add jne jecxz enter adc push jecxz idiv inc add test lods push push mov fistpl roll mov call fcompl (bad) ja push push sbb pop out mov fistl dec loope add inc or add sbb cmp mov jb aad xor imul or inc dec loope rclb enter aas bound fs out (bad) aad (bad) xchg (bad) xor jmp fwait lds add add leave pushl lcall (bad) outsb pop or (bad) inc mov mov (bad) cmc xchg and or lcall mov ja hlt repnz sbb or shrl mov clc shrb pop add aaa xchg mov sahf (bad) add subl out lods dec pop addps in aaa jne jnp mov mov cmp fstpt aas imul mov mov jg aad aaa jg mov lock into test add lahf mov xor xchg aas inc dec icebp inc mov enter (bad) and or ret arpl xor pop test cmp dec xor mov adc int addb data16 imulb sub dec and faddp out mov mov jne xchg xor daa loopne fdivr test add push mov sbbl sbb ret xor or mov jns test sub jmp nop push and int ljmp repnz shlb add xchg and sbb inc mov mov test jae icebp rcrb adc mov push mov sti mov inc mov add inc lea pop stos xchg das cmp or cmp gs lods std loop inc push push mov adc lahf cmp jp jnp movsl mov push cmp lret pop (bad) popf sahf out fldenv dec cmpsl mov pop xor xor leave push jge mov cmc push in les outsl test mov movsl leave bound adc add add add int imul addr16 lret loop mov gs xchg cld int3 push jae mov shll in scas jle fs jl pop xchg in out out sub mov push inc lahf pop aas mov cs stos stos dec fildl push xchg push (bad) push movsb mov jo xchg mov inc lea jae xor push cmpsb int or sbb in cmc inc dec mov hlt shrb shll dec insb (bad) pop add mov sbb loop fs daa lcall outsb movsb addr16 mov add add inc fsubr inc sbbb xchg les movsl xor mov neg dec mov rcrl aas jmp (bad) repz dec stos in inc cmp sub pop mov jg dec mov ds pop sbb shl sbb xchg dec sbb push adc stos lock adc popf test out and add dec xchg or dec push adc pop xchg test cmp add fcompl hlt cmp gs mov jg lds jb (bad) je cmp mov lahf lcall add add mov bound sbb or fs and jle aas mov scas dec push mov aaa data16 mov sbb push and hlt rol (bad) int3 addl xchg je adc jp repz xlat xor ss mov fisubrl push mov aaa cmp jb fstpt idiv or in add rcr push fcmovb rolb in sahf stos insl push mov cmpsl sbb stos or insb xchg mov nop push insb cmp jbe sbb or enter fs in aas (bad) stos es mov add add add jge jb notb hlt out push mov push in xchg cmp add pop mov xchg ret and mov mov nop es cmp out dec data16 aad xchg dec cmp push scas call add xchg mov push out aas jns xchg sub out outsb sub aas or shlb popa nop shrl outsl adc mov sub mov int sub sub push in repz sti popa aam add dec fsub mov ret rcll scas xor inc jb mov arpl dec int3 out ret push gs sarl ret in or xchg push or sbb mov add and addl adc xchg jne je ljmp or lods gs mov xor ljmp mov jo jno (bad) mov inc insl nop arpl cmpsb lods cmp loopne jmp mov (bad) xor das cmp xchg add lret stos iret ja jae int3 mov push lods outsb push enter add add add add dec lahf (bad) loope xchg pop mov ds or sub pop xor dec inc ja or mov (bad) loop mov fsubrl inc mov aaa cmpsl and arpl or mov enter loope divl cmc pop in test outsb xor (bad) jmp lods push sub je into imul je mov dec lret repz daa in xlat jne sub or cmpsb test jo jns xchg pmulhw xor lcall add add add imul in cs dec push leave cs cmpsl aas sti or sbbb mull vpscatterqd out arpl inc cmp push leave adc sbb sub cmp fisttpl dec push jmp or test inc or das arpl adc adc fs adc xor sbb test test popf xor aam in mov jae (bad) sbb pop dec sbb and adc dec test daa mov repz data16 lret mov mov adc dec mov lea dec dec cmp in inc jmp jmp insb add cwtl sbb popf lods das jb stos lcall rcr icebp mov lcall xchg jg (bad) fisttp mov mov push arpl pusha mov iret cmp inc aam mov popf rol jge jo cmp es xchg fcmovnb imul aad mov movsl mov add scas test xor test pop sub xlat inc sub push addr16 andl ljmp and add add lret hlt aad cmpsb mov xchg sub pop out dec sbb (bad) add lea stos add or aam pop movsl pop jp clc bnd add cltd push cmpsl fisub stc mov cmp mov sub out loop push cmp sbb cmp test subl lds and push call fistpl jl push icebp lds and pop mov cs sub mov mov jge imul push mov xchg lcall ds or popa sbb pop popl add add add clc and xchg adc and adc mov das and sbb rcrl xor jno icebp mov inc fisubrl dec das (bad) pop mov cli int gs out mov pop test adc movsb mov add repz test mov rorl daa (bad) neg sub push out ja dec pop leave in sub pop loop push addr16 fsubr sub int3 out rcll imul movsb (bad) mov jecxz fadds pop add push shll mov inc sahf fdivs sbb ret add push push sti mov loopne inc pusha cmpsl jno scas mov and cmpl xchg sbb pushf xor outsb xchg jae or stos pop sbb push pop fldcw xor out (bad) sbb lea icebp nopl adc dec call and (bad) or repnz addr16 ret fsubrp in jnp sbb arpl xor sti inc pop xchg sbb out jae sbb es loopne fwait adc addl rcl push lahf jle mov xchg add push jge adc sbb adc popa pop pop loop push (bad) sub add add add adc mov sarl pop cltd fprem lret mov pop push xchg xor jns outsb inc adc cltd fdiv shrl xor and mov xor xchg sub mov pop and xchg rclb mov cmp xor sub sub adc adc mov fs fisttpll mov ss push inc orl mov fadds or mov ja dec push pop mov mov jbe add add add pop je fs aaa repnz lcall pop bound or cltd imulb xchg pop fldl sbbl cltd aam add add call imul push imul xor adc dec ret repnz dec sub push fwait nop icebp insb aaa lea fistpll add jnp mov in (bad) loopne cmc xor pop cmp fistpll dec dec shlb cltd xchg sub icebp jg xchg and xchg jmp cmpsb jmp dec xchg mov or add add add push movsb in idivl push int3 ss dec cmc mov loop cmpl aam arpl jg pop jb mov lods jl arpl fstps adc mov call mov jmp pushf dec jmp sti lahf add in loop mov into add xchg test mov repnz hlt fstpl imul jmp cmpsl imul xor sti ret push dec hlt sbb mov hlt fsts inc out loopne movsb push and push xor add add add add add pop std jno mov inc mov pop ss (bad) dec or out lock ss add dec (bad) mov aas and cs cmp mov call pop mov inc rcrb pop and mov or lods fxch push pop jne shlb inc sti mov int std pop xlat loope mov mov int3 js push out cmpsb add xchg adc mov std jp in jecxz in mov test data16 stc inc mov jl cmp mov add sbb add add add push scas cmp (bad) (bad) std lcall mov mov test jmp mov jp jae ss cli adc jecxz jb mov roll jle pop mov dec pop sti mov cmp fnsave loopne (bad) lock cltd dec in pop mov leave pop jg call jae xchg adc lds lcall popa es jp in sub (bad) jno hlt test mov mov cmp or jns fs fsubp inc or add add add lret inc sub push aas mov cli js xchg scas jmp jo and fcoms mov clc mov jmp and push jp aas and or loop out je pop fcompl lret adc insb fist push ljmp sbb mov mov ret push sbb gs in jecxz xchg std push jae jne iret aad and sahf mov (bad) mov pop into test jecxz push mov push xchg movsl adc loope cmp sbb lahf fisttp repnz jle int add add add icebp mov sbb daa mov add push scas jae rclb ss insl ss int3 stos sub mov mov aam es mov jb add pop fwait icebp sbb lock xchg push popa hlt insl icebp sub jno cmp arpl xor bound push dec and jne mov mov lock (bad) in dec ja and (bad) pop dec sti (bad) stos incb and push jl cld popa adc subl fsubs cmp adc out jno lret adcl sahf pop outsl xorl xlat mov mov add add add add and mov push push test fistpll insb ljmp pop pop push mov dec adc mov jecxz scas movb into scas std cmp adc jg adc xchg mov mulb mov xor mov les or pop das mov testl and in xor pop mov mov bndstx xor das out fmuls lea cs mov insl orl (bad) (bad) outsb lret lret sahf pop popl cmp add add add iret mov adc popf (bad) fs or sbbb les dec dec mov cmp popa mov test adc leave (bad) ss fldl sbb push mov push sahf test jl xlat loopne inc inc aaa cmp push fild test das das (bad) ljmp push es push insb inc xchg sub jp push mov mov jmp paddb addr16 pop out loope and addr16 xchg fwait mov out sbb dec fcompl mov arpl mov add jg (bad) jb in mov add add add leave rcl inc xchg in mov insl or sbbl arpl push lea jecxz (bad) mov fistpll dec repz pop bound lea fisttpll mov fdivs pusha mov test aaa mov stc xor mov fistpl sub push push add sbbl shrl push push mov and mov mov std repz mov pop mov or lahf mov mov mov daa std inc inc mov stos testb call jl test lea push cltd out mov add and int3 rcll ljmp or jecxz loop add into pop xor fisubr inc dec mov add fsubr in out and ja out aam push mov out cmp (bad) mov loopne sbb adc daa loop shr mov leave lret ss fsubrl and out push test sti mov ja lcall push inc scas inc add or lods push lock jb sbb nop mov jno js jmp pop jge and pop ss pop add add add add dec or js and hlt dec jae rcl push sub mov out into leave lahf inc inc push cmpb mov pop imul shlb iret sub add or aas jnp in xchg cmp bnd jno call xchg scas adc aad lods or xor das lcall xchg outsb mov lret bound adc cli mov add out aad mov popa xor cmp test iret sti clc cmp add inc loopne add add mov test icebp sbb jns inc movsb and and mov xor mov adc loope out (bad) add test add or aam imul add add inc cmp mov ds fs sub push pop mov adc in or and sub shr mov (bad) jl into addr16 int and inc cs xchg ficompl xor fist pop jg loope loop dec das push xor inc or mov insl jnp ret arpl add add adc inc loopne adc jns adc mov shl jo shrl addl cmp stos int jae xor es jl pop lds mov push xlat pop shll cmp js repz inc or das mov pop ss and aas faddl inc add push mov mov lcall mov in mulb sbb cmp addb jle mov mov add jl fnsave dec pop dec pushf xor push sub pop insl adc sbb add add add les adc pop (bad) data16 rorb push pop add push js and js inc fistpl imul out test sub les out mov inc xchg and mov push pop push imull dec ret xchg adc aaa add pop std out (bad) orl mov rcr (bad) ja fwait lods cmpsb pop rcrl iret sub mov iret pop sahf sbb jno mov daa lds fptan xor dec je inc cmp call add add adcb sub jnp adc push jecxz das pusha sahf cmpsl aad mov mov movsb ds lods mov leave test test add inc jmp xor pop out add add push lret mov inc (bad) sti fistpl fmull or movsb or adc and aaa or cmp jns test push xchg add mov inc out in or push in dec mov pcmpgtw jg addl dec xchg cmc lret add xor (bad) sub adc leave or je xchg sbb into cmp movsl lea jp jge (bad) in lods test push mov imul lods in adc mov cmp fwait in (bad) int3 subl mov call (bad) lea xor sub loope out sahf add and adc and add jge and jle inc mov into (bad) in mov fsubrl lods fcmovnb dec sbb rcrb (bad) or sbb adc shr jle pop push outsb push sbb ret enter xchg test loopne cs dec movsl push loope cmp inc addl add cmp pop (bad) outsl and stos outsb mov mov outsb sarb pop imul xor lret out sbb or out push pusha cmp push jbe idivb (bad) inc lods sti nop addb pop sarb add inc sarl push pop pop out push inc frstor test xor in mov sbb sbb sbb test and stos pop jecxz xchg xchg loop pop (bad) imul das add sub jp (bad) fadds pop push jmp xor imul xlat js pop push inc add add add add repz imul sbb xor mov lods sbb stos (bad) jecxz and pop mov sbb dec or bound test xor add xchg ja in jae (bad) (bad) pop in int call ds fmul cmpsl daa xchg jns test add mov add add mov xchg or call push rorb (bad) ss xchg push shlb mov xor in cwtl in mov pop aas mov dec and pop xor dec lods jge mov jg or add add add or iret mov fistl jp push cmp dec jo jo ja repz dec icebp sahf sub or lea xchg dec pshufw jecxz aad add dec mov aaa lods sub cmpsb cmp or fwait rcl inc insb lods add shrb inc push jno ja lret add (bad) cmp addr16 xchg (bad) jne mov (bad) mov enter mov pushf lret aam js dec aam or xchg sub clc out ficom pop outsb push xchg mov out and gs (bad) xor (bad) ds bound insl outsl and lea mov jno dec daa test sbb inc pop fldcw ret dec pop mov push bnd mov and add add xchg rcrl movsb decl lea xor or xchg or std sbb add daa mov hlt hlt enter inc fmuls imul and and push push orl pusha movsb insb ja repnz add mov mov bnd push imul out jne (bad) jl inc pop into pop and lret adc mov add add sbb jns loope test test xchg mov dec ret sub dec add fnstenv sbbl (bad) addr16 or repnz sub xor pop adc insb movsl (bad) sub dec mov push je xor xorl movsl lock xor stos stos std jnp jo nop and xor pop out stos mov fiadd sbb push fsts inc mov mov fneni(8087 fs sti xchg hlt (bad) mov adc iret cmpsb icebp cmpsb shrb adc sahf sub daa pop gs sbb data16 add add sub scas sbb mov cmp (bad) inc push pop mov inc sub es sarb dec and sub popf cmp (bad) cltd lea aas pop hlt mov dec jnp movsl frstor mov pushf stc and adcb ja push push mov mov imul adc dec jp insb xchg jbe icebp mov xchg sbb bound jl lock sub xchg jno mov lret cli sahf dec mov aaa sub sub (bad) fcomp mov std xor add add add add inc cltd sub mov sbb jmp xchg cmpsl pop (bad) rcrl out bound loop sbbl sbb test xor data16 popa ljmp sti aas jnp pop lods inc shrl push jl stos lods pop lahf mov in mov xchg int3 cmp ja mov sar xor fiaddl xchg bound push roll pushf mov adc mov lcall lock (bad) and aam jp adc mov cmc mov out scas aad ljmp or inc xchg and inc adc (bad) xchg lods mov xchg fisubl jbe das push ss jo gs jp mov (bad) hlt loopne mov mov push daa les mov (bad) movlps scas leave insl cs lds out std pop icebp xchg xchg add or repnz bound std loope jg jmp lret jns scas xchg negl scas mov push dec jl arpl inc cld jecxz int3 xor jl sbb push pop push (bad) jl adc lret pusha sbb inc xor call data16 inc mov dec xor into sub add add add mov xor dec mov dec dec jp outsb (bad) or (bad) push das out rol or push scas sub or push stos sbb (bad) mov lret nop bound xchg mov jo dec imul fnstenv bound clc xor xor xchg stos jne je pop imul jo notb or mov jae mov je lea adc std inc xchg outsl push popa imul sub sub ret rclb or dec mov (bad) fs lret rcrl mov call mov test stc adc scas dec test outsb stos fcomps or out popf flds pushf or (bad) imul rcll ret ds sbb js mov mov push into or inc add add ret sbb mov sub fnstsw stos xor aam mov lea mov cmp int3 mov lahf gs aas jp jl or js add mov pop xchg fnsave jle iret inc arpl dec xor xor das negl int3 mov in xor dec pop movsb jns inc insl sub and jmp sbb and mov adc sub dec out lret cmpsb insb or push adc jecxz js and add dec movsb adc loopne loopne sbb es lods fnop call cld (bad) mov scas pop aaa push sbb dec (bad) mov and aas ja cs add add mov mov js (bad) nop stos aaa aas test pop fstpt enter into jns add sbb fdivrp clc fwait adc test nop push jns mov cmp mov shrl mov cmp mov push and ret sub adc es ret ret jbe xchg sbb pop pushf stc add and jg dec push cmp inc xchg mov jecxz mov sarl jns adc loop enter mov cmpsl mov loop test sub sbb cmp add inc add add add add cmp lahf and inc popf cmpsb stc pop cmpsl aaa bound jg and aam push cmp push add lahf xchg add out ja mov or xor enter neg into push jbe xor push xchg push push ja lods add loope sbb xchg pop ds mov rcll aas int3 lds mov test fistpll icebp or arpl lock add dec xchg xchg adc pop adc jbe sbb jp sbb push add push es les push jne mov aam xor inc dec mov dec frstor movsl fs ss jl dec mov imul cld in add dec test inc xor loop adc add movsl add decl pop or jmp das ret mov xchg clc xor mov push loop pop (bad) int (bad) lret lds out sti pop inc rcll andl jmp mov outsl mov inc cmp and sub sahf cmc push arpl fcomi outsb aaa std test add add add jbe mull ret mov mov test adc xlat ret out enter xchg adc sbbl insb mov pusha iret inc cmpsb daa ret out push adc ljmp mov jl pop inc aam dec rclb lea push adc pop push (bad) mov in mov in push (bad) jno shlb imul into or movsb loope outsl sbb stc cld orb lods pop or push xor mov popf xchg sbb lods pop add mov mov and add add add and insb inc sbb insb push inc add mov loope aaa xchg (bad) lods lods out xchg xor cmp rclb pop push dec push add sahf mov sub jne push js pop pop lea mov repz or mov push add mov dec mov fwait test sbb jmp pop xchg aad bound addl sub rclb movsb push jo out fistp push out (bad) ja and mov or push pop stos cmc mov add add add dec jge mov mov add jnp into push push jg stc and inc repz xorl inc (bad) mov das in icebp scas xchg mov js jle and hlt and popa rcr and push xchg mov stos dec add pop hlt dec cmp xlat mov mov pop pop js pushf pop jmp cli leave movsl pop lods lods pop mov ficom xor lock xor dec xor jp inc movsl dec (bad) ds fdivrs sar movsl int3 (bad) aad sbb out enter mov in dec jl or add add add (bad) mov test (bad) sbb push mul push jno and test xor (bad) fs fdivr pop es or cwtl push inc mov inc (bad) sbb xchg lock cmp pop cmpsl lret xchg sub fwait icebp mov rcrl adc push rcll sub cmp sbb jae push data16 xchg mov into pop mov test fadd mov mov xchg ss lea push xchg add je inc pop fs ds xor xor stos add lcall mov mov movsl rcll sub adc in and xchg pop pop jb cmp roll iret mov xlat and jmp xor movsb inc adc xchg fsubs rcrb idiv xlat aad inc xchg sti cs mov inc stos aad cltd mov ret aaa dec mov add or rcll loope clc hlt fldt adc es mov lea xor repz ret fcmovne insb (bad) mov jb pusha adc xchg adc push stc and add add add jns adc loope f2xm1 mov and nop outsb nop mov inc mov pop mov sub imul and loope addl ret (bad) loopne rcl neg inc and outsl sub xor dec popa push pop jmp rcrl sub scas (bad) jge pop and jmp push xchg pusha pop xchg lret add or push popf outsb xchg mov fcoms lret push xor iret add insl outsb xchg xchg push and js inc mov jnp pop test cmc jo lods add add add add aam enter lock mov jmp lret cmc push mov lods ljmp pop xchg es add out sub sti mov cmp jg out lea lock fsubl xlat inc jecxz mov mov bound mov or sbb orl dec stos mov sbb mov je in add adc xor movsl adc out xchg hlt pop es jp pop sti sub roll (bad) shl mov push cltd dec jmp sub and add add add add inc sub in pop push shlb aam pop and fwait outsb dec sbb and xchg pop pop and sub adc les repnz or pop jnp ss xchg aas mov cmpsl sub loopne sub mov mov movsl (bad) xchg or adc loopne push popa insb xchg roll out fdivl ja popa xor fidivl dec jbe and setge (bad) bound push daa jbe push (bad) mov movsl out bound cs dec sub lret adc int3 push imul add add dec jg xchg (bad) sub xor mov jno outsb lahf jmp std mov or push mov jl jg addr16 mov int3 loope dec addr16 ret fisttp mov rcl or ja inc jmp mov aaa pop repnz pop inc or lea ds bound cmpsl cmp adc test scas cwtl xchg dec addr16 jns hlt (bad) xchg and push iret xor fdecstp callw add sti jl mov pop loope cwtl es xor or add add ret xlat mov call xchg and pusha mov int xchg sbb xor pop push sbb xchg inc sub lret mov ss bound fnop fxch clc cmp movsl xchg add in xchg daa pop cmp ja mov movsl mov cmp stos lcall fild pop add sub cmovp out cwtl xchg ret ds hlt fcomps mov imul add je idivl rcr fs js rcll mov pop les into pop adc add add add pop dec push (bad) ficom mov mov pop adc pushf sbb jne aad lea jmp andl mov lret movsl test adc and nop inc mov (bad) test roll stc sub xor lahf dec push adc testl add movl fnstcw lock mov je lods cmpsl stc (bad) ret and movsb cmc mov inc repz rolb test cwtl sahf push mov cmpsb and xor add add add cmp mov mov jo and (bad) push mov or test sub fisub out mov inc or dec fmuls mov enter pop lea inc cld data16 sbb enter test es lds leave push xor repz mov (bad) mov dec cwtl pop movsb jp enter or adc in rorl xor lock insb jg xor movsb in jecxz or stos mov and mov add add add add mov out add pop test (bad) xor push add arpl std pop adc sbb imul sbb or push jp clc dec and cwtl std dec cli cmp je inc jne sahf dec call lret pop and push cltd and test add test jle addr16 push pop stos sub in or add pop fcoms leave scas rcr push pop (bad) jbe insb push sbb cmpsb subl cmp les inc enter or dec dec jg mov imul outsl xor stos add and ljmp pop jo mov mov mov dec add sbb cmp pop gs push mov insb out add mov and or sub in mov jo test ds mov (bad) cwtl outsb rcrl sahf mov (bad) inc cmpsb divl call inc and mov inc sbb cmp pop test jp push aad mov sahf sbb sub out dec or dec js xchg jmp add add add add xor dec mov aaa outsb cmpsb nop xor pop xor data16 ror in sarb add cmp aam adc adc leave push mov jo and lcall or movsl push push xor (bad) mov rcrb mov js and mov sbb les fldln2 sbb test or lods pop (bad) cld out add jmp dec push dec lahf cmp push fldcw ss xchg inc stc js xor ljmp in pop xchg gs icebp mov stc add add add add or dec xor mov into xchg imul mov adc mov call or call xor fsincos or xchg pusha pop cmp jae pop jb addb (bad) xor bnd in push aas or lock mov lea insl add dec sub ljmp mulb std mov stos or fdivrl jmp push rcll mov (bad) loop xlat add fmulp cmp mov sahf bound roll add popf outsb jne aam pop unpcklps pop dec push inc jb cmp cmpsl jle mov sub lahf sbb or xchg push outsl int3 imul add lcall jo neg mov les cs sti ret or and and stos je xor into fiaddl pop mov repz (bad) mov test rclb fdivl incb fsubrl bound in std rcll aaa sti mov xlat (bad) mov aas pop adc push push fildl mov pop (bad) imul sti sbb add add add fstpl cmp popf cmp xchg iret sub cmp xor pop jecxz xlat xor xor jl sbb addr16 addr16 or inc fsubl pusha aas adc int sub and xchg movb imul sbb std inc shl cld xchg push loop (bad) pop (bad) icebp es sahf xchg dec xchg push sbb popf adc outsl dec (bad) int3 fsubrs xor mov jbe jl rclb mov lcall cmpsb mov fmulp clc js pop pushf mov aaa loopne or jl dec push dec mov ljmp js mov jbe or scas jecxz,pn (bad) and adc ljmp test stos and add leave xor nop (bad) stos les pop jbe insl mov imul aam xchg mov pop sti cs sbb insb mov cmp lds lods (bad) clc dec cld inc mov jle enter mov mov mov fucomp dec arpl lahf inc jbe and enter dec push int mov sub fimul add mov mov dec xchg add add ljmp add add xchg or dec sbb and sub sub xor cli push add jp sub int3 mov push dec jmp push vpunpckldq loop cli add pop mov mov scas testb rorl mov xor push mov aas xchg dec push enter lret imul push cmpsl fisubl pop movsl and movsl outsb sub test in (bad) nop int3 sbb bound mov mov xchg xchg or adc cmovbe insb jp sar (bad) and outsb (bad) cmpsl rcl mov push xchg ljmp add add push mov jecxz adc sub mov or pop inc ja push or and fwait es push cli mov xlat push dec movsb and (bad) in fs push cmp push mov push loop fimull push inc faddp add shrl daa test cmp fmulp mov and fcompl mov test aad in sbb jae mov jo gs inc adc imul adc out faddl ljmp xchg ret mov inc pop xchg addl add pop sbb push push sub fildll xor sub gs addr16 sti insl rorb mov jmp jno sub ficoml movsl xchg orl jecxz push mov jne lcall out sbb loopne cs mov add mov (bad) roll call (bad) sub pop mov stos mov add cmp jae xor sub cmpsl cmp loope shr push andl pop loopne stos in arpl es jb test push lahf lea dec dec add mov xchg aam mov popf cltd push xchg adc lods insl jns jl leave sub les or (bad) and ja add andb sub pop ret (bad) xchg fsubrs mov adc jo xchg mov cwtl je push lock frstor pushf out (bad) pop push ljmp sbb sbb jno or cmp mov xchg and sub stc movsb das pop xor adc repz (bad) in or pop movsl scas leave imul dec or lds push das dec adc movb lds xor add stc lds movsb aam xlat or xchg sar test mov sub shlb imul mov insl into dec inc das xor sbb arpl push in mov adc int3 xchg je jl push cmp stos aas sbb sub outsl jns sbb in or out add stos cli mov push scas cs jbe rclb imul stos sbb jp int3 repz xor mov repz jle cltd pop icebp test add adc enter aaa mov add add int3 push inc test aam push jp dec int3 in pop adc adc out add xor dec mov mov cmp neg cmc mov mov into pop gs leave nop test cmp xlat mov cmp xchg stos imul (bad) xor icebp push (bad) jb add mov sarl dec lods ja aad mov aas repz inc cmpsl stos sub loope ret dec das in les cwtl pop xor fbstp mov je inc inc push dec rcrl jo jns sbb add loop test sbb dec call out mov xor sti nop int inc mov outsl test add sbb movsl sahf test push cmp shrb dec jecxz (bad) data16 sbb jne add repnz cs lock pop movsb je pop sub xorl xor xchg push sub push push (bad) cli xchg push pushf sbb sti sbb std imull or push xchg dec cmp and jmp add push iret sbb cmpsl movsl mov mov stos or adc sub add add add jl notl sbb js in mov ja sbb sar add or aam hlt js,pn cld or pop test xchg mov fimul shlb stos fnstsw jo xchg and push jmp mov sub test scas fmulp mov dec pop cmc sbb decb mov data16 jo (bad) pop lret (bad) in lds ret inc or sarb inc lcall cmc popa fs daa and insl es aam jbe out (bad) rolb add add add add sbb cmp xchg das adc add cwtl repnz xor cmpsb test mov push or and bound xchg in fisttpll xor push mov or xchg pushf inc inc stos adc jmp push loopne cmc push push add adc gs fcoms add xor stos lods mov mov test mov lcall outsl xor divl cltd xor xchg cmp shlb aas cmp out loope and in add add add add into repz ja push adc std stos cmp mov add stc jo adc dec test add cmp sbb ss sub inc arpl stos push xchg testl xchg adc test jno sbb xchg dec jle xor lret repz outsl mov mov aas mov push pop ds xorl and pop inc pop push sahf fsubrs xor or mov push xchg xchg popa imul dec pop icebp pop xor out cmp push xchg dec and fild pushf xlat add movsb add add add or adc cld dec dec imul int3 xchg call cmp sub cmpsl add (bad) lock mov jo data16 xchg xchg (bad) push jl and push fbstp xchg sahf pop xchg pop inc lcall test push es mov inc sbb jl mov mov sbb mulb mov scas mov push sahf push jl add inc data16 addb xchg out xorps shl lcall (bad) rorb ss pop inc loop cltd jno cmp mov outsb packuswb xchg (bad) jle pop add iret mov mov pop add ret stos pop iret xor test imul mov dec fsubrs addr16 push mov jl adcl loop rorb stos and dec add scas dec fsub pop cmc stc xor mov jo (bad) dec jmp int and push mov fwait adc pop dec mov pop or mov sub jb cli or mov push and (bad) jmp adc or pushf mov or inc hlt rcll lods fldenv add push es popf mov mov sub inc push mov add sti inc fcomps jne jp rep es negl jl jnp cmp xor xchg pop inc addr16 or imul (bad) sti fadd in pushf dec sub movsb (bad) in imulb pusha add dec add outsl fcmovnbe dec jecxz cli repz add leave pop add adc in outsb ret push fs mov dec mov mov mov or imul push jae test mov push js je aaa push fiadd lret scas cld mov nop clc frstor xor add lea pop dec jb arpl push jp mov std xor aam mov xchg into jmp mov addr16 sub scas add lods push pop push fs adc adcl mov cmp je pop xchg lods sti outsb sub sbb stos test pop jp pop hlt lret mov in test dec fisubrl lret xchg pop pop or out imul cmp scas idivl sti int3 test pushf sbb loopne bound shlb repz int3 and add popa out jnp add cmp outsb inc jp rclb scas push inc jo pop repz xlat (bad) mov (bad) rclb sbb outsl movsl (bad) dec inc jnp js scas mov loopne lea inc outsb jno dec jl cmp cmpsl push jle cmovb inc gs icebp or in ror (bad) popa in jnp jbe,pn xchg les mov xor iret into (bad) rorw inc or add bound fidivl and and icebp xchg adc out inc dec mov jecxz or out pminub enter das out sar dec cmp dec xor or ss icebp xchg outsl int cwtl cmp mov (bad) loopne jl cwtl lods pop sub jle pop repnz push cli push (bad) repnz fcmovnu cmp out lds pop out push out cmpl jae outsb or mov out lock sub mov std out cmp and lcall pop jg popf pushf add sub dec xchg add mov jge pop sbb jnp aas push cmpsl or add add imul fsubr pusha iret add mov outsl int test sub (bad) out mov sahf fcompl es mov xchg (bad) cwtl inc in jmp mov test mov arpl jno jo stc sbb jb test cmp popf jno jge jp and out pop sub or jne ret mul test aas data16 push xlat (bad) fisubl arpl subl ret daa adc xor fadds mov mov dec pusha push xchg das leave or in mov es mov mov add add mov xor int lcall mov imul pop xchg pop int3 dec js (bad) lret sbb push orb pop (bad) stos push sub xchg out inc roll pop popa xchg mov push push in (bad) scas repnz mov sahf (bad) aam sarb test pop jge or xchg push or daa mov hlt (bad) cmp mov jp lock (bad) jbe mov fdivs repnz scas fsub fistpll lret mov dec (bad) sti mov add add pushf jl pusha incl nop push sub jecxz add or xor jg inc (bad) push repz sbb test push mov repnz mov dec scas out ja xchg aaa pusha mov xor ret in repz leave xchg (bad) icebp xchg adc (bad) adc sub mov mov xchg lea mov ljmp and bound aaa pop out lock icebp pop int3 movsl jo push push cmpsb mov bound shll repz sub dec mov (bad) aad mov add add fucom inc (bad) xor imul dec jno loop cmp mov push lods mov and inc repz or sub and cmp cli mov popa adc sub test push scas pop jmp xlat stc fstpt rolb mov lods jecxz lcall and pop xor out jno call ficompl test sub xchg lcall out sub mov pusha mov mov mov jp push xor mov add add add pop gs jo adcl jb pshufw jb and and mov sbb bound das cmp outsl adc outsb je ljmp rol sub arpl fwait jp icebp inc subl sti sbb hlt arpl das adc lods jle xchg jp sti add mov xor inc xor push shrl in cmpsb dec mov add push sti dec sbb jns cmpb lods dec andl jb movsb push or xchg popf out je xchg inc add add add add and daa mov lret lret xchg mov addl mov pop xchg and movsl incb sahf or add xchg negb loopne fisub enter js cltd loope pop lds addr16 add outsl cmp lock pushf cmp sbb js and dec icebp out xchg (bad) sub inc jmp adc jge gs aam loope push dec nop cmp jg stc cli push xchg out push and (bad) emms lahf mov jne adc cli inc pop insl scas and jb inc popf sar add add fistpll cmp sbbl push cmp mov (bad) and ficomp adc movsl test pusha outsb loopne push enter lret insb pop and addl push mov outsb pusha or dec test insl movsbl inc in (bad) mov push js inc xor jmp add das mov add lea mov sub xchg or in loopne (bad) movsl pop aas pushf jo xlat cmpsl (bad) loop push inc test data16 sbb mov pop jmp push aad push xor add add add mov pop xchg push or dec mov popa ljmp cmp jl push out push add xor shrl jecxz,pt xor push sub push adc icebp stc cld inc mov mov (bad) scas xchg xor std mov pop fild adc stc sub xchg or test mov xchg dec xor or sarb xchg hlt mov pop mov das fwait mov notb fsubrs rorl pushf xchg inc xor mov sti loopne or adc add add add add (bad) sub pop adc sbb xor cmp loopne inc inc movsb and pop movsl cwtl outsb sub enter nop adc sub les paddsw fcmovne sbb loop shrb sbb xchg cmp sub cld je outsl pop fbld iret test xor mov fcmovnu in (bad) lods scas push test call sub and movl push xlat push adc sub sarl imul pop mov adc cltd xor add add mov aaa jae cmp mov jb add mov xchg push popa dec sbb mov imul jno imul movsb cmp rcl xchg mov dec movsl cmpsl lcall fwait push jo lds adc and inc loope push sbb or inc xchg (bad) xchg dec (bad) (bad) push sbb sbb push lods rolb inc jmp int adc inc mov push loop popl inc dec movsb stos movsb cmpsl or jg lea stos push aam mov jb je jo ja popf xchg stos dec insl jns add add add adc (bad) sbb or jnp aad push pusha xor test rcll es in jb das (bad) jmp xchg and mov mov bnd inc and cmp mov xor pushf je xchg xor push jbe xor sarb outsl adc cld inc notl pop aad movsb dec mov push mov add xlat aas push (bad) lcall (bad) push fs stos lret mov mov pop sub inc mov push sbb dec lds fadd mov in push or imul sub out notb add add add adcb vpand in mov imul push push mov imul mov (bad) jl sbb add jmp inc lods add repz jg xchg cmp dec out lods das jno (bad) sub mov inc xchg jge icebp lea push inc fstpt in sbb dec scas pop ja aad imul (bad) sti mov rolb mov repz pop inc (bad) das and (bad) lret mov call mov jge mov adc lock aas inc add add add add jo xor cmpsb aam ficomp pop pop jecxz and push pop push pusha push pop stc aad cld mov (bad) xor jg pop les js fdivrs fcmovnu jmp test (bad) dec pop dec sub notl insb sub pop pop xchg mov mov ljmp repnz mov push nop fsubrs jg fnop fwait test xchg push dec push and stc add jbe cmp into pop inc ds fdivrl mov cmp sbb fidiv lods cmc pop cmc sub mov js jg add add add add or (bad) push es ret push stc xchg xchg in out in mov mov cmpsb fstl adc push or sub jg lods outsl ss cld jns jns push mov in out adc cmp mov xchg out ljmp fwait xchg adc xchg mov ret push rcl cmpsb add pop and les inc pop sbb leave push (bad) (bad) ljmp xchg repnz dec fwait ja cmp scas mov rcrb stc ret repz dec jb scas cmp add add add jecxz sbb mov das jmp pusha fimul mov mov push mov cwtl cmp dec jbe mov lods mov jns movsb jmp jbe aam jmp mov cmc sahf sbb (bad) mov pop neg outsl mov or jmp xchg int3 cmc mov std test outsb add pop jbe out shr in ret popf xchg cmp fs dec push xor loopne push pushf mov push fdivl jge pop nop add pop xchg cmp jo int3 icebp add mov mov adc or lcall jg repz dec (bad) insl xchg loopne aaa adc pop sti in imul das popf out mov das xchg jle jmp mov sub hlt xchg (bad) xor mov (bad) push aaa pop (bad) std fisub stc dec arpl push sbb jne sarb jbe sahf daa fidiv mul loopne cmp jle rorl xor aam daa aad mov cmp adc push sub cwtl rcll movsb ret cmpsl cltd cltd lret repz int lss push jge dec jle mov add add add sbb call pop hlt pop mov pop sbb popf sub shll movsb popa mov cmp adc aas sub fisub mov fstl jae inc sbb xor repz lods loope sar pop aam mov mov faddp push mov outsb xor push (bad) push xchg push push cld or negb cwtl outsb loop push jae jo js jb add mov add shrb ds pop (bad) fisubl push cmp pushf push cmp lods std xchg sub pusha mov or vmovmskps push jne push ret mov add add add dec dec mov mov mov push lret cmp add repnz repz cmpsb ffree cli fs mov mov push jb sbb adc mov xor aas mov sub enter iret mov int3 inc sub fistpll or jg cld ljmp mov xchg add cmp jmp fldl imul jbe or cld stc subl fwait jns sbb adc mov test pop mov insb xlat add add add test lods xchg iret push inc dec out add in pop ljmp fcompl js outsb cmp sarl daa call sbb mov lods das jns pushf and loop loope dec fistpl cmc cmp int jne,pt hlt mov jae jmp xlat test jmp insb jns add lods pop mov mov loop enter sbb xchg fwait clc mov push jno lret xchg sbb pop pusha pop mov sbb xor nop xchg jp fldcw inc cs dec sub repz out (bad) movsl fiadd mov push mov pop xor notl pusha pop adc lahf xor add dec sbb adc hlt sbb mov mov xchg movsb pop xlat or scas add cmc cmp in jp hlt mov mov orb push sbb rorl xchg mov push or mov (bad) sub stc dec aas add stc adc mov in popa sub in int cmp adc stos push sub aaa jnp mul das jb das rcl rcll push pop ret cld (bad) stos adc add add aaa jp jae ret sbb push dec lods daa jne cmp (bad) hlt cmp mov sarl out push (bad) mov mov pushf fisubr hlt xchg fiadd cmpl insl insl test sahf das and mov dec sbb inc jmp pop or mov mov cmp daa mov ffreep popa xchg (bad) jae leave jg sti pop nop (bad) sbb pop fisubrl les enter dec jo cmc daa outsb out sahf push and jb fmull cs mov jp or jnp ds push jo adc stos xchg lods jecxz or add add add lahf dec fs dec cmc mov in decl dec add mov (bad) jmp xchg ds dec mov sahf and lds stc aaa test lret movsb je adc inc sbb imul add sub cmp inc xor pop lea in lods jbe repnz adc adcb daa shlb lea adc push mov pop clc sbb and jp fist sti rcrl inc or cmp sub ljmp add add add sub add insb scas mov pop scas mov lds and movsb out jbe jb pop fdivrs enter pop sbb aaa push add mov cmp fisubr push hlt lahf mov add mov mov xchg lcall lock mov cs (bad) imulb push mov or dec xchg mov xor xchg movsl adc jp mov jmp outsl xlat pusha (bad) add mov xor lret sarl cld cli movsb mov fcomip dec aaa add jnp add add add mov (bad) mov jb xor ret outsl ror push xor sbb hlt inc pop loope aad lock mov mov mov loopne xchg lods les push pop xor sbb inc push dec sub ljmp or add pop adc imul hlt mov dec pop jg aam ret xor roll faddl push jns xor arpl xchg xchg inc out fcomps mov dec out xor mov out dec jge mov add add add sub iret (bad) loop stos (bad) mov addr16 sahf xor xor aas loop inc ss mov fstl movsl jb and arpl xchg mov sub push sbb int and rcll push loope xchg cmp (bad) lret sub jno xor or pop xchg in xor clc sbb push add adc jle adc int mov sub mov lock int3 (bad) pop cmpsb inc das pop popf call ds inc jne mov int add and jnp or add add add add add sub xor xor cmp add or xlat mov mov (bad) inc rclb dec insb ror std inc xchg fnstcw (bad) test loop mov mov xor pop je mov sbb lds mov mov (bad) (bad) into cmp pusha push mov icebp enter inc popa test mov pop add pop outsb push adc (bad) and dec loopne out repnz (bad) notl push test jnp ret add insb aad pusha push sarl dec add adc and mov add imul pop fdivrl mov sub ds test dec lret xor leave mov (bad) test fistpll xchg pop cmp bnd cmp into fidivl jg lea pop sbb mov call pop fdivrs fldenv cmp lahf dec (bad) (bad) push insl pushf mov pop loope test jmp push daa pusha das outsb adc ljmp adc mov fstps es fnstenv add movsl dec push jl or call pushl (bad) rep dec sbb aad in loope jg mov add fisttpl mov pop push add mov in cmp mov fisubrl push clc dec call inc stc inc sub call mov iret jnp sbb sbb fist adc cwtl mov (bad) jo punpckhdq mov (bad) je mov test mov into call int3 or jo scas jno rorl mov mov test adc push cld adc jl cltd (bad) pop ror jg mov js jne (bad) fidivr dec popf xchg cmc sahf or jnp push jmp push add add add cmpsl dec add jmp xchg cmc dec out or push mov movsb ds in push daa dec sti push sub ficom xor or pop pop scas je test (bad) pop call fsts lahf clc add test mov cmp movl push les pop add push pop push or ret aad std cwtl mov xor and push add addr16 (bad) icebp je out stos sbb out movsb cmp push xor iret jmp fbstp les mov sub jmp imul add add mov inc lret inc gs lock xchg iret rcll int aad jmp sbb test push out fcomps loope inc imul xchg and fnstsw pop sbb sbb inc sbb sahf jg jl mov ss xchg push xchg pushw imulb mov add cs jg inc lret sbb ret stc pop gs movsb popf iret xor stos push je cld ret fstpl sbb or inc adc mov call pop mov push and add add add adc jmp jne mov xor sbbl cmpsl mov ljmp sahf add test or lahf lods aad daa jmp adc data16 loope (bad) dec lock dec lods pop mov fdivs cmc sub outsb mov test nop inc jns test sub les scas and sub push scas mov mov (bad) jno loopne pusha pop icebp cli mov cwtl and and inc mov push and bound adc mov into leave mov sub jle insb mov and rcrl sahf xchg sub inc aaa movl fwait hlt and mov jmp mov or mov push mov lret (bad) sti mov lods pop outsl sub je inc in mov nop xor test aaa mov fadds stos (bad) in pushf jp xor ss push xchg or xor ja (bad) dec pop sbb ror prefetch stc xchg (bad) adc insb xor hlt mov pop ss lds cmp mov sub ljmp pop into inc rcll push hlt int test push fisttpl stos xchg icebp f2xm1 (bad) jb fwait jg fisubl cmc inc inc xchg (bad) and (bad) (bad) test push xchg xor or inc push daa andb lods inc dec jmp out sub (bad) movsl ss (bad) and or sahf (bad) fstps orl popa xchg or or test into cmc inc (bad) orl (bad) imul loope push in dec jecxz inc in mov add inc mov xchg push or aas aas test sbb jo xor adc jmp mov add add mov imul fnstenv pop mov dec xchg lock and ss mov mov push and imul sbb cmp mov push (bad) movsl cmp push xor lods in mov pop stos fcomps xchg ljmp and fnstsw hlt rclb pop mov and popa movsl push imul (bad) in in jo cmp xchg xor lds popf out xchg outsb sub dec in (bad) pop loopne xlat sub pop (bad) fwait lock cmp add add pop js push cltd mov jg outsb int3 sbb push fwait jg add adc pop jmp cmp je and decl mov (bad) push xchg popa pop inc dec push jl test or mov stos push sub movsb aas xchg inc xor sbbl into and (bad) iret inc (bad) repnz lods subb (bad) fcomps lret mov or inc and shrl sub xor push or (bad) dec xchg add add xor outsb add jb into arpl mov sbb pop add dec inc add in push es jns cmp out sarb lods sub pop test and cmp adc dec repnz in imul xor sub (bad) std mov cs out movsl inc sbb mov mov mov or (bad) leave cltd inc loop icebp (bad) lret push jg jo adc mov imul out data16 push in mov in ds shrl add leave xchg into xchg adc sbb add add add mov sbb ret bound aad iret insb and mov cmp mov cltd mov cltd cmp fcmovb xchg mov insb jno in and xor lods inc sbb (bad) lret pop adc add xchg and enter sbb cmp mov push mov push adc inc sti sub xchg dec cmpsb adc add decb or push pop add jnp or dec lock push out cmpsl adc xchg pop imul add add add add jg push rolb jns (bad) cmp gs and mov mov lahf xor sub pop ret test xorb imul (bad) cmpsl sahf add andl stos push hlt push dec rolb ljmp aaa cmp pop out push xchg or mov xor add mov mov lret loopne mov add psrlw xchg pop mull push imul mov inc pop cs imul stos push imul loopne loope xchg xchg cs cmovg insb jae ret pop jbe in push popa in inc xor loop bound dec push fcomps mov pop pop nop jecxz xlat dec dec push cmc les cwtl jge cmp xchg movsl fcom push addr16 js mov xchg dec neg sbb add xchg jno,pn dec shlb dec xchg movb rorl imul ss push mov out cmp in icebp or sub push mov loop (bad) call mov cli in adc xchg jae add add add add xchg shld mov icebp popa ljmp fbld out mov subps xor xchg repnz sahf ds and insb insb push or pop sub xchg add add or ficom pop pop add rclb push test (bad) cmp pop or xor mov dec add adc cmp arpl xor nop mov add mov cmp pop das or add outsl xchg addr16 jmp std fmuls add add sbb outsl cmp ss cmp rclb imul std and push cwtl loop mov jb rcll xor ds pop js dec pop pushf push mov adc jae in fsubr cltd fmuls mov enter fdivr aam clc xchg pushf push (bad) xor in mov cs cmp idivl sub outsb scas shll das imul jbe dec and jbe mov dec mov cld push lods test push or cli sahf jbe lods aaa push cmp mov cmpl outsb into idivl es fmulp push inc pop mov arpl add add add jg adc pop (bad) enter test inc je insb dec cld lds jno xor jae and xchg das iret xchg xor fiaddl ja mov mov imul (bad) popl push mov dec mov pop sub outsl sub xor dec or pop movsl movsb rcr clc lret push inc mov jo fdivl stos in and push sbb movsb xor dec je lods lock xor fdivrs pop pop fimul aaa xchg hlt lret inc xor push or jne in lret stos sub add mov lods push mov js scas shrb dec std adc dec aaa pop push add mov dec clc lea sbb and inc cmp cmp jle,pn rep jb sbb cmpsl dec std lock repz xor inc fdivr cmpsl insl (bad) fidivr lock pushf mov mov popa out ret or ret cmp int3 mov insb out cmpsl mov lcall outsl test daa push inc repnz cmp fsub (bad) scas sbb pop adc cltd es fcoms ret dec popa add add add dec test push aas stos scas mov ljmp nop mov addl loopnew xchg loopne mov mov jle inc xchg stc scas stos ja lret das push pop stos popa lret rclb fidivrl call and aad lret mov mov push imul orb pop inc iret push xchg lcall (bad) push ss dec mov ds pop test (bad) dec in pop dec mov loop insb out pop push cmp frstor shrl mov mov cltd xor add add add push push into add imul mov (bad) lea movsb mov repz cli jbe sbb mov scas mov dec aaa fwait outsb lods jmp nop ret mov in sbbl push (bad) arpl subb xchg enter movsb push into fcmovnbe adc mov pop int3 (bad) mov xor push jle and lea iret dec test loopne and stos push (bad) imul int cmp pop dec fnstsw lods je xchg cmc orl push leave fwait xchg and lret scas add (bad) rcll add add add into or (bad) xchg jne add into outsl adc or pop and mov sbb cmp xchg fs adc add and add pusha pop mov pop inc (bad) jno lcall pusha sbb and cwtl mov xor jb xchg dec push dec sbb (bad) stos cmp int3 jnp pushf jne jno jp in lods mov push mov lcall or add xchg out pop fsubl out out mov xchg clc div clc pop xchg decb add add add imul sbb cmp push jno mov inc add dec cmp cltd sahf enter rorb leave in inc lods test sbb insl in movsb push xor cmp or jp ret mov push xor lahf add adc icebp mov sbb push inc (bad) jecxz (bad) leave movsb sbb xchg push sbb roll mov pop ret add jo or in cmc sbb icebp fnstcw inc mov pop scas mov jge hlt jbe add add add cld xor repz das sbb mov xlat jmp in push sar cwtl push std fwait inc arpl addb xor (bad) imul sahf cs dec pop into pop into mov inc sub test add jae jmp pop add xchg stos xchg inc or xchg push cs jb push mov (bad) jmp sbb int3 inc ljmp lods loope or sub and or xor repnz pop mov and inc sahf insl in or pop xorl mov mov or out sub pop cmp nop cmp mov adc cmp or mov push popl cmp cwtl xchg popf lods leave jge clc (bad) int3 ljmp inc fs mov test lock mov shl sbb mov mov imul push add ja push pop mov dec pop pop lods sbb mov or push add dec cli sbb jle push mov enter add pusha xor dec jmp mov add sub xchg push addr16 shll repz xchg mov cli xor outsb adc adc cwtl lret push popl js sbb jle (bad) cs sbb pop mov notb ret (bad) cwtl sub mov insl fidiv test pusha in popl jle push and mov scas add cmp cmpsb into inc out clc lret push lcall cmpsb imul (bad) and arpl fs andb or jne les mov add or xchg imul cmp shll lock dec and fildll fisubr cmpsb pop rorb pop inc dec add sbb shrb clc xchg cmp fidivrl ret pop push ja lods fldenv mov fstpl mov out inc les mov pop fxch mov jae sub push xor xchg fstpl xchg icebp mov pop fcoms std jg (bad) xor insl sbbl ja mov pop mov je xor loop ret ljmp add add lret cmp lret (bad) rclb push jp lahf loope clc idivl xlat xor js aaa push (bad) dec xchg jecxz sbbb jg and push dec addr16 lahf repnz lret std sub xchg xor test xchg fsts loop push in out mov loopne dec mov xlat jns xor mov or (bad) lea jnp in scas mov adc inc cmp shll fiadd jnp sub jecxz fisubrl int loopne jbe rorl in movsl mov je and or nop dec mov xchg or add add dec outsl jp and jae cmpsb jno pop mov in inc clc mov scas js loopne or xchg add jnp mov in push shrl pop or and stos fcmovne lods pop inc xor jae gs mov mov addr16 test dec or mov push loopne adc mov (bad) xchg adc mov mov mov mov mov sub pop out lods xchg cmc ret cmpsb in xor or inc inc sub lods jbe mov fistp cmp movsb les popl std (bad) lock call add add add dec popa iret or sub add pop add loopne push sub rcl pop jne popf dec outsl test push cmp cmp (bad) cs jb data16 mov xchg sub sbb sub popf repnz outsl int3 cli or xchg outsb ljmp and es pminsw push popf dec fwait jae cwtl (bad) dec xor cmc andb test adc outsl iret cmp jnp test pop or mov jmp cltd (bad) mov cmp cwtl pop xor or out cmp dec mov stc enter lock push nop xchg sahf imul cmp and jg,pn cmpsl or sti cmp nop jp mov loope cmpsb out xchg mov nop or fimul out bound out inc call sti dec inc jno je iret push (bad) xchg push (bad) (bad) sbb movsb ljmp inc lahf cmpl add push test loop into mov insb fistl mov fsubrs or out pushw or pop jl mov sub (bad) into adc jo leave movb add add gs mov dec dec scas and test test sub pop scas mov mov mov fwait lret leave inc ss shrl xchg adc fisubrl pop push test mov (bad) or and ds pop test stos push inc mov (bad) pusha jns movsl xchg fcmove lea jno popa shll inc hlt (bad) mov test scas push pop sub mov into mov inc ficomp ficompl (bad) mov rclb dec aam jp xor sbb mov mov xchg clc adc add xchg adc pop ds cmp lahf aad pusha xchg loop ficomp jge pop xor inc int sbb mov sub daa pop inc push pop es test pushf cmp mov aas jle mov xor push hlt or mov insl jo mov inc aad or cld in insl add cltd mov fldenv mov push aam call fadds add daa pop add mov mov jae dec or rorb int xor aas addr16 adc pushf mov ret add add add (bad) fs mov (bad) lds fdivl adc rcrb xor dec jno xchg out and sbb jnp add pop fwait mov sub and xor adc mov fwait les pop out pop rcr xchg add and cwtl fstpl cmp cmp ss cmp mov jb pop das das imul (bad) int data16 xlat mov cmp nop jbe adc jle pop je inc mov xchg jmp test mov pop andb dec adc xchg pop add add add add adc movsb sti mov adc ds (bad) push (bad) out sub xlat movsl pop pop dec faddl insl fadds adc shlb (bad) ljmp adc leave fisubl xor aam aam scas clc dec dec aaa movsl dec push lcall jno test inc push jp mov push pop mov shll cli pop xor adc jg mov jmp jl rorl enter push out jp je sbb mov inc mov movsb pop jl cld pop out dec loop mov lds cmp add add (bad) bound mov cli pop jle inc mov or push test mov push fchs pop mov sbb adc sbb xchg sbb insl mov xchg arpl mov (bad) jo rcrl in cmp sbb mov (bad) push daa sbb int cmp std and add sbb hlt mov out inc or out outsb mov mov push dec xchg pushf xchg push das jp lock push scas dec aam mov dec jbe pop mov fbstp dec dec pop stos add lds mov pop or pop ljmp fmul push popf pop aaa sahf xchg pop (bad) int3 pop dec cmpsb xor mov dec imulb dec loop fwait lret imul or pushf mov data16 cmp rolb jl inc mov pop dec iret dec insl add pop push repz dec pushf xchg xchg ja in sub pop pop mov cmpsb das sbb push movsb or outsl xchg pop int3 mov cmpsb ja push cmp mov pop xchg cmp lock cmp mov mov cwtl sub add add add jae or and xor dec dec iret scas pop sbb nop cld sbb mov int3 sub mov (bad) dec scas xor lods mov xor cmp sub fisubl push mov stc mov pop jnp sub xor in jno mov xor gs xor outsb jle mov dec in sbb mov mov xchg and push mov into les ret dec sbb test pop pop dec in fcoms mov mov add add test xor add (bad) in (bad) cli dec jge pop test leave adc add enter dec xor rorl vpaddb jmp mov jne test fs bound push roll pop xchg pop push ficoml lock or aad inc xchg jl mov jne fidivrl jo xor xchg inc jl add shrb or popa or ja lret and repnz push sbb add mov jl cmp mov sbb cwtl rcll lret sbb sbb int3 cmp fsubrs dec (bad) mov mov jge in cmpsl mov jnp jle sub push cwtl adc fwait (bad) xor fcmovb int faddp pop loop std sub popf mov ljmp and in pop push sub mov push xchg jge and cld or out add ret jno stos inc or cmc test xchg adcl adc sub dec dec inc in sub xchg sub leave pop jge mov xchg ret pop mov push or add add pop mov xor push rolb je or cmc push cmp mov mov sarb imul int3 fcompl pop stos jmp or adc mov inc xchg mov push loop (bad) pop sbb push mov loop cmc xor xchg outsl (bad) or cmp (bad) out jg push sub sti cmp orl daa or fnstsw fistl adc jne (bad) sbb fcoms mov pop and mov push cmpsb mov fcmovb mov loop jo xor dec sub add add mov ds pop and dec sbb shl pop jno sbb mov mov cltd lcall aas dec xchg in jno enter fisubr cltd and jl shr push lock popa mull outsb or or jns rcrl mov iretw sarb ret jg jge (bad) pop call sbb xor cmc sbb jno movsl jbe out adc sti repz (bad) pop in jne inc sbb sub jne mov sti mov dec add add jmp add add mov add cmp (bad) cld jmp sbb add and jae and clc pminsw jecxz cmp mov lahf and jb push cld shrl xor xor lods insb mov les in (bad) pop push (bad) mov and in lds sub out repnz (bad) je ficompl imul xchg mov sbb push (bad) xchg lds out and psubb icebp repz imul (bad) add ret mov push jb popa mov es out mov push scas aam and pop cmc inc sub aam rorl aaa push mov out test mov clc repz loopne pop mov mov std ss insb (bad) (bad) xlat loop push xorb sub xor xor stos adc and fistpll inc add mov jbe mov (bad) divb outsl mov sbb rol lret stos sbb fs inc push cli pop jg adcl push es sub push repnz or ret mov sti pop push mov lea pop jns ror cld xor pop popa pop jmp setae mov das sbb stos cmpsb adc ret xchg ret lea mov ja xchg lahf insb in mov push jge enter pop inc mov and or pop inc orl push (bad) imul call pop aad je mov sub arpl add cwtl mov pop jae cmp ljmp mov addl sub adc rol cltd add rcl hlt repnz scas rorb addr16 outsl testl cmp pop (bad) jno push (bad) and add xor cltd cld lods in cmp push aaa daa lcall (bad) add sbb cmp rcrb addr16 sbb dec and test outsb pop mov mov adc in mov adc andb or loopne pop jno aam (bad) pushf sbb hlt pop fxam cli sbb icebp popa fstpt sub inc outsb jg add stos push insb ja or fdivrl add add sub scas cmpsb inc inc mov xor js int add dec sahf or int3 xor sbb dec dec push or xchg arpl into (bad) stos add sbb pop or dec lods scas push ljmp jne push xchg movsb or stos add push pop adc test ret pop mov jne lds jg (bad) int3 leave jae jl idiv call xchg sub imul add mov push add pop pop jo pcmpgtw lods or imul adc xchg push testb bound jp or push pop lcall in inc adc and sti and loopne and enter xor xor add add out pop or cltd mov add jnp mov dec jmp mov movsl imul test inc mov adc in push insl fnstcw stos addl jo lret and and sub xor daa lahf loop inc mov mov mov rorb cmp cs push ja mov loopne xchg sti pop imul pop imul xchg inc movsl cmp add dec adc outsl jae pop nopl aad push add or mov minps push pop fisubl jno scas out cmpsb push lods in push in ds rcll xor adc (bad) cli test pop jle sahf push mov pop daa dec sbb sbb xor out sbb sub cmp popf pop mov in aaa mov inc push push add iret push neg test (bad) scas (bad) add add add add xor ss push push test push xor adc cmp inc in cwtl mov sub push or mov std adc inc lea pop cmp imul arpl or nop rolb lock bound add jl (bad) xor out mov test rolb mov dec in call mov (bad) xor push shl inc lock scas add aaa into fiaddl movsl cwtl call sub pop into pop dec inc ja (bad) mov test push addl jne add ret (bad) adc add cmp inc xchg out xchg lea das xor scas or sub xchg push popa add pop dec in push nop fsubrp xor xchg sbbl out inc xor fisttpl cltd xor lds out mov pop in xchg out cmp pushf imul decl xor push sub stos nop jo pop sbb or mov and or mov into adc mov cltd fstl xchg inc cmpsl ja loopne dec mov pusha xchg std or add add add add fisubrl pop mov add jbe jle xchg push std fdivs inc jecxz sub daa dec dec add mov adc mov int mov js,pt or mov (bad) dec cmp cmp in enter jb call inc push test xor add jbe and rclb mov or cwtl (bad) add xlat lcall or mov sarl cmp xor movsb add pop int3 mov pop movsb (bad) xor and fcmovnbe and (bad) lods aad stos ss mov add add add dec scas daa fsubr lcall jne xorl shl pop lock jno aam sahf inc (bad) les or pop xchg mov in pusha jbe pop sub scas cmp mov or adc pushf mov push mov sub inc test mov inc inc adc loopne mov jmp or cld incl cld mov les out add daa add xor mov dec test push xlat push jge adc jle xor gs push (bad) jno pop dec jge adc cmp adc add add dec out xchg es add add sub lds jecxz idivb or jns pop int in sbb xchg insl sbb push orl (bad) nop xor mov pop mov push movsb jp adc push fidiv sub (bad) mov lret mov cmpsb cmp ss mov (bad) das les xor sub movsl mov sub aaa cmpsl dec adc or adc mov pop mov sti in inc nop imul (bad) dec cmpsl scas shll inc push adc out negl insl cmpsl mov dec (bad) leave add add add add or mov stos lods sub mov inc lds test inc lret xchg into pop xor aam sarl push rclb jge and sbb mov mov lock add dec fistp and push push and jg or ds enter call pop push mov add jp mov jmp repz sub iret mov pop call cmpsb adc testb pop xchg lret inc pop jo inc sbb js lret pop xor repnz les (bad) mov test jp add add add test dec enter mov clc lock pop cmp out mov shrl in jecxz fstpl dec subb stos enter popf push mov insb cmp jle pushf repz stos dec cmp test xchg gs insb adc or dec xor push xor sbb sbbb es inc (bad) stc or dec into sbb add iret xor fwait hlt mov dec rol cmp jbe xchg jmp or mov stos mov fistpl inc cmp mov cmpl add add add dec inc imul or jecxz xchg xor pop aad rcrl movsb (bad) xor lods pop mov pop and into xlat shl xor mov mov inc push divb pop sbb mov imul jl push mov in xor int3 inc cld sahf or adc sub inc in arpl cmp push pop push es push sub lea sub int mov fadds in xchg jmp clc adc movsb call xchg or gs fs sti enter add add adc push loop fidiv cli inc test test pop mov roll test das cld sub dec lret jp pusha jns and inc sbb aas (bad) jle mov sahf adc lahf push test js gs xor pop adc fdiv mov jo std fstpt out xchg in nop dec cwtl dec shll dec sub lret adc call int3 lea in adc cmp sbb and cmc jbe xlat mov xor js push das inc xchg add add add add mov mov cwtl ljmp inc addl ja xchg xor dec xchg out xchg dec or call out xlat aaa ds dec (bad) mov sbb push and es test into stos dec cmp push sbb jle mov mov test cmp cmp pop lea (bad) pop dec addl cmpsl sub push imul jge mov enter inc xlat cmpsl and xor leave test sub push ljmp add add add shld inc test sahf mov xlat adc mov icebp xchg stos xchg iret cmp iret jecxz mov jp ja add push mov lea test int3 pusha (bad) mov push jmp (bad) cmc out insl cmp push (bad) js and sbb mov sbb test xchg jmp jnp xor mov mov pusha add lret cltd cli adc stos xor mov xor in (bad) sbb rolb sbb inc cli scas arpl add add add add push stos lods ljmp not int3 fwait sub fistpll push pop jno xchg (bad) std out std mov aas sbbl test sbb rclb aad fisubl xor lret add and cmp cmc out add jmp rcrb hlt cmp imul loop mov jo sub in sysret mov fs scas test test adc sbb push outsb sbb insl sti movsl cmp pop mov iret fdivl pop sbb lret inc push xchg in inc imul pushf lcall or pavgb and loopne add add add out mov lods push aaa decb into lahf lds pop cmp xchg mov setge xchg push (bad) and data16 pop es out sbb popf cmpsl (bad) loopne loope aad add mov out dec mov jnp and mov lea mov loope push push jle inc hlt sarb (bad) arpl cmp in cmp nop inc cs xor dec inc out imul mov xchg fcmovnu add sub xchg cmpsb xchg rorb imul mov loope add add add add dec (bad) sub nop imul jle pop push (bad) fldl jmp loop and jno addl into xorl inc mov test or push mov jne cmp xchg dec push and pushf leave pop push xchg jle ds les sbb jb push ret xchg mov aad push sti and inc dec cmc mov pop mull and xor stc stos nop leave pop test sbb jae popf pop inc inc add inc add arpl std and adc jno add test pop mov jp outsb inc cmpsb push push and add jne xor sub xchg inc jmp jns mov movsl sahf (bad) adc repnz add fwait (bad) (bad) movsl inc cltd aad std inc jge jge lock in mov mov outsb jnp mov push lods out sbb jb cmp movsl lock cwtl mov jge xchg xor xchg inc push push insb pop out mov dec jle or addr16 lock pcmpgtd orl sahf (bad) jo roll add inc flds add add add add push (bad) scas adc jno call dec js faddl movsb sub test mov mov cmp imul and and mov fnstenv jmp loopne mov pop push lret daa into sbb xchg aam and xchg or enter inc xchg clc in sub lea push mov fs or sahf pop test cmp das pusha lahf (bad) push add push fdivrs add aad loop sub adc js arpl aaa arpl mov cmpsb cmp push lods lds pop cmp xchg mov mov fsubl cli or inc addr16 stc or add pop mov xchg mull les icebp mov lea dec cwtl mov test arpl je int3 decb jne adc mov outsb cmpsl jg jmp or rolb jecxz mov jns rcrl and (bad) repz (bad) mov inc insl subl ret xchg add pushf jbe loopne ret push add add add xchg push cmp mov pop lcall dec mov xchg movsb in mov ss test aad jo test adc sbb out fstpl subl out ljmp sti outsb jo insb es outsb cmp sbb leave mov mov rorb test sub adc out ret cli movsl push nop (bad) xor mov mov (bad) cltd inc adc and inc clc mov xor or mov (bad) imul repz add add add loope pop dec push cmp ret dec (bad) (bad) lea jg push popa fld imul lock out cmpsb lcall rolb jg push push ss (bad) cmp adc pop cmp loopne (bad) jp test jecxz out sahf xchg or add lret or xor adc ficom sub mov roll jp pusha (bad) fidivrl sub fucomip inc add enter sub jb cmp pop icebp and and or out cltd das cmc mov or lods in lods adc dec sbb add add add mov ds popf aam pop notl mov repz adc ret (bad) push mov or shrl nop jns cmp sbb leave icebp inc psubsb lea shrl sub imul xchg jo cmp xor xor mov out cmp cmpl aaa cwtl lret cltd sub push subl stos mov xor mov push mov and aaa ds jbe clc cmpl out push ret (bad) aad div rep (bad) loope daa mov dec or decl bound dec xchg mov jnp out cmpsb sbb mov or ret mov mov enter (bad) xor xor stos lret push pop leave dec mov mov in add sbb data16 add push or outsb and sub inc movsl jnp jae xchg pop (bad) mov xor sub dec ja pop jmp xor mov outsb std ljmp xchg dec jp iret push pop imul lret jmp add fadds adc lret pop (bad) or popa dec lret or inc je test sbb jmp cmpsl cmp (bad) jno std or movsl sarb and push mov es je out cld call cld push in jecxz,pt push popa (bad) or adc sar push pop (bad) xchg inc cltd out (bad) jne mov push aad ljmp mov gs addb outsl or ss cld fcmovnu cmc pushf jmp cmp mov mov imul repz add add add and sbb cwtl imull adc pop adc jge inc out adc xchg xor cmc pushf cltd mov xor jnp push adc adc inc mov das jbe jnp popa adc sub dec stos ds xor xlat jge into (bad) pop pushf adc es xchg xchg inc outsb aam push fnsave or divl add mov (bad) jno push pop push scas fist adc cmpsl or icebp test (bad) decb cmp push adc xor leave loop mov rcll dec jle and mov sahf mov add add rolb test cltd jmp addr16 or (bad) push shlb test lcall (bad) mov dec jmp add dec in mov add test movsb (bad) arpl jg mov cmpsb cmp push push sbbb test inc inc lea loopne (bad) in cltd inc cli fucompp push cmp dec sub in sub dec es data16 cmp cmp xor ret mov inc cmp dec adc stos pushw mov int3 aas cmp jbe add add add jb xchg test clc pop cmp mov imul jbe xor cwtl fmuls mov test cmp and dec jecxz hlt cmp xchg inc mov push dec scas adc mov shrl rcl push in jbe pop aam push pop in and out daa and gs sbb aas jg cmp (bad) fmul push movsb repz fidivr or xor sub ds es ljmp aaa mov mov jle cwtl xor xlat inc ja cvttps2pi ss mov nop jmp js (bad) popa inc outsb insb add push imul mov adc inc jb pop push sbb je popf stos aam or and push ljmp sub pop fldz jno pop es insb lods fsubrp mov dec pop aaa and notl cmp mov pop fild or outsb xchg jb push mov daa adcl mov and (bad) and scas in xor push mov std lds jmp ret les (bad) hlt and test push push cs neg scas mov incb add add add (bad) mov xchg mov cmp xchg jnp popf fidivr sub movsb lods lea stc (bad) dec bound push pop in push aad jb jo popf (bad) insl aad rcl pop adc mov push inc (bad) adc (bad) sti push mul pop mov lret (bad) clc inc jbe xchg (bad) cli aas sbb jbe cmp push jb ljmp sbb xor pop jae add imul lods xchg ffreep es jno push imul into dec sub scas pop iret lcall (bad) (bad) into and stos aaa in je,pn push cli lret add inc inc fistp dec out rol and cmp call fcoms or ret pushf and jb jb cmp out push fsubrl mov nop push div popa (bad) and rol xchg aam dec mov push push dec adc push je out sbb loopne pop add std pop xchg mov stc ret mov sub or sbb nop xchg add repnz mov dec orb aaa aas inc jae sti subl xchg insb add imul sti loop,pn pop fsubs mov jp add lods outsb add add add add stc dec loopne (bad) andnps cmp lcall mov ret cmc pop rorb enter outsl rclb mov mul ss sar ret gs mov scas lds rcll inc in push scas les pop fnsave adcb adc dec mov mov adc in add sbb mov insb and sbb fcomps sbb iret xchg ret lcall push mov popa sub dec dec push pop mov inc out add and inc jo jle (bad) or cmp add add add cmp push dec pop out repz sahf inc lcall divl test cmp inc pop out mov lock mov lock das xchg inc or popf and mov lock sbb jno roll mov sub mov ret pop add or dec pop mov push insb jp mov test mov in lahf test lock loope add lock mov mov adc enter xor test popa into (bad) jae repz xor aam gs and add incl sub std stc mov movsl sbb mov lret mov out movsl xchg or or repz xchg (bad) xor movsl sub and rorl and ss ficom adc jbe dec popa dec xchg and lahf in rcll gs or shll and call ret sub mov jnp cmpsb fwait js sahf mov pop mov (bad) sub leave fwait mov insl popf fsubr adc mov shll cmp ja sbb imul ror xchg enter inc add add add add orl inc lahf call adc or xor fxch sarb lods cmp sub mov add sbb cwtl subl xchg shll popa xchg fsub lcall je mov cmc lret push adc rolb data16 rcl movsl aaa (bad) mov lds xchg leave mov in adc negl add in mov fimull out or mov mov aam negl popa insl decl adc adc add add add divl mov push pop push sub loop das push ret add fiaddl in fisubl cmpsl insl ror lea or (bad) (bad) loopne inc mov push lret dec push sbb cli sbb push mov inc test add test (bad) popa sbb fldt testl fwait lahf inc push cmp popf or sahf dec sbb xor dec test pushf ja fwait dec repz mov in ss pop rolb or stc and (bad) sbb inc mov nop daa mov or aaa cmp add add add add push add push inc fdiv (bad) mov shrb imul js cld pop test mov or sbb ret (bad) aam lods jns cmp sbb push pop mov iret dec push push idivb or test shrl lods xchg fcoms xchg sub lcall sbb cs xchg test mov mov sahf out aaa push sbb inc dec jle (bad) scas daa in sarl lahf pop sarl sbb dec pop scas fldl mov pop jne out push xor add add add mov xor jnp loop fidivrl popa (bad) mov dec fs fidiv jl sub popa (bad) lods (bad) je add xor ja sbb adc pop vphaddbw dec push and mov nop pop push jo adc cmpsb movsl cwtl lcall and add stc lret push push test fldt lods sbb xchg mov add orb inc pop dec mov jmp sti dec je fwait xchg dec xor sbb jge jmp rolb std mov sldt add add add xchg incb dec push insl lods pop jmp jle adc popa out loop (bad) lods xchg push lret pop out repz test movsb xchg mov test xor imul pop enter mov and repnz cmpsb (bad) inc in sahf mov mov mov pop mov xor cmp gs divb or scas inc bnd in stc sub mov hlt mov inc jge std popa push insl adc xchg les roll rcrl ljmp mov cmp loope push add add add imul xor jne cmp xor ficoml sub xor inc adcl (bad) dec adc hlt lods scas xor fstp push mov ljmp pushf lds xchg scas jns (bad) mov cmp iret push and mov dec insl addr16 pop and repz mov xor jns inc dec add in push push xlat mov xchg pop fwait ja and dec mov or sub popa insl shr cmp or lock loop fistl in jb fwait icebp insb hlt adc and add add je sub xchg xor add loopne xchg mov les es add xchg pushf and sbb (bad) hlt mov jmp (bad) jge cmp repnz mov cmp inc test out mov sub add stos or mov adc mov sub imul ret pop addr16 jmp mov lods mov cmpsb movsl push leave adc mov sbb dec add hlt jbe jg pop icebp es scas nop dec es xchg lcall fnsave jae cmpsb in mov jmp out sbb add add add inc xchg jp loopne sub adc cmpsb sarl or mov xchg (bad) and pop rolb xchg xchg xor in and jg cmpsl repz test cli test stc iret movsb addr16 sub xchg jmp jecxz popl cmp sarl loopne sbb out sar cmp mov data16 and inc lock ret hlt jmp sub xor jl mov or int3 out sbb mov loope,pt mov aad stc jne mov pop (bad) jge adc (bad) cmc scas cmp add add add push or or in stos stos icebp mov inc xchg jns adc (bad) sbb jno popl mov leave pop lret andl outsb cmp mov xchg les or inc mov inc dec jle xor (bad) jp or mov jnp (bad) pop mov dec mov sbb sub ds cltd push ret or ss add sbb mov (bad) (bad) aas xchg imull (bad) pop lret fldenv mov pop pop jecxz gs aaa cmpl inc sub aas add add add inc fwait outsb mov repnz pop push or xchg mov in ja (bad) lock xchg fwait into jnp xchg add xor fs ds divps test movsb (bad) (bad) and nop (bad) sub add lahf inc lods xor xor pop or ds in pop pop icebp lea lret sbb int3 pop cmp cmc xor sub xchg push cmpsl out int dec outsb (bad) fimull mov lretw sbb push jge or shll outsb in xor lock inc mov jmp aad add add cmp scas dec lcall aas pop not js mov ret and pop sub loop pop and mov rclb push (bad) (bad) xlat ja hlt test add mov sti ret das ret pop imul add adcl inc test push mov inc push je pop xchg idiv inc adc mov (bad) stos repz sbb adc xchg or les movsl dec cmp int3 sub mov lock and pop lods xchg dec inc ja adc lds (bad) or add add add insl rcrb sub (bad) xor and cmp pop cmc or out dec sbb add popf mov pusha in les fnstenv ja test lds sub in cmpsb std add ds push test lcall add pop ffreep fist rcrb leave into pop push (bad) out shlb arpl and es pop add (bad) loopne jmp leave lret lock add mov dec inc dec addr16 cmp shl mov aaa pusha add sbb js arpl pop xchg xchg add add add add ja mov and mov jp pop lods mov push rorb lcall mov push jp sarl cs pop lcall jbe (bad) fstl data16 mov ret inc iret mov outsl test fwait rcll out cmp fisttp push mov insb adc fwait mov pop jp in leave push and iret repnz and (bad) pop sub aaa fmul push inc (bad) mov jbe sub stos sbb mov ret and add add je and clc insl add inc mov push out clc lock xor ljmp inc mov inc jmp and mov lds daa xlat addr16 packuswb pop repnz mov mov fisttpl test call mov shll mov rorl mov adc test loope xor scas lret xor popf movsb mov xorb mov dec or pop shrl dec rorb jg add add add rcll out lahf arpl push sub rep cs mov mov sbb aas jecxz jae scas pop pop adc jle inc stos int push nop fucomp outsb das cmp arpl dec or add xor pushf ja dec push jp inc push cli pushf cmpsl fdivrl and sbb in and sbb lods dec push ljmp xchg add inc outsl and (bad) testb pop mov faddl mov mov mov xor pop aas and data16 mov sarl and out add cmp jns imul (bad) dec xchg ja push lret loope jns repnz scas jb fldt add add mov movsl ret mov pop mov fisttp shll punpckhbw mov enter lahf aad arpl test sub faddl mov push xchg inc iret in outsb (bad) (bad) xor jle or sub mov (bad) dec enter mov xor jns jle ret sbb mov pop cmp aaa notl fdiv into xchg test add add add test adc out and (bad) cwtl (bad) aad jle movsl xchg jae inc sub jg add xor ja lcall (bad) das cmpsl outsl pop cmp cmp rol jnp mov pop std and jns ja ss adc out inc mulb dec stos ret sbb lcall movsb inc ja stos inc pusha adc sbb jns lods mov lret rol aad dec ja cs iret adc push pop mov jae cmpsl (bad) (bad) jnp sub jmp mov int daa nop add test mull sbb lahf or leave cmpsb repnz cmp push out cmp lds lret iret ljmp arpl sti mov int3 inc mov mov pop xor cmpl inc jns sbb xchg leave test (bad) cltd mov adc dec mov outsl negl test push pop and mov xor imul cmpsl enter ja xchg ja xchg and cmp repnz mov (bad) dec cmc test mov pop fwait sub aam cwtl stc pop mov cmp jl in ljmp add add add add imul adc cmp movsl sbbb cmp adc bound mov incl test mov in push stc aad nop xchg xor mov push mov aas flds add (bad) cmp or cmp popf in cmp in sub jmp imul mov pusha push scas mov lahf or xchg mov iret icebp shlb add ficom fidivrl lcall add in sub xchg dec cmp cmp arpl add add add out or push daa push mov stos aas xchg pop mov sub pop sbb inc addr16 ret je jmp outsb jb in push int push movsl cltd pop push xor bound and int add xchg jns shr and insl lret mov inc jae cmpsb xor loop shlb push testb dec stos std sbb pop and cmc and leave cmp mov dec fdivl inc dec sub and push popl fs in inc dec dec cmp xchg loop and in xor and jmp add add add clc jecxz aam incb push jl adc rolb mov es push mov imul push iret mov jle cs sub mov pop fwait test int3 cltd bound push ljmp and add loopne fnstenv loop or cmp sahf jle (bad) mul inc cs push xchg or push pop loop (bad) out loope jg adcl push push add out push pop rcl into push unpcklps sbb insb or mov pop cmp stc cmp inc dec sbb mov int3 sbb mov add add add add inc scas out dec ret rorb mov sbb adc mov push xchg cmp push popa cli or pop movsb imul mov xchg rolb jg add out push xchg std bound sbb xchg sub xchg pushl fiaddl scas aaa fcmovbe loope adc mov mov mov or aad lret xor pop clc pop ficompl cmpsb sub outsl sub sub cwtl (bad) or inc test fimull adc lahf xchg fisttpl sub adc pop and add add add pop cmp aam xor push and xor dec idiv (bad) cmp jmp mov fs int3 stc fwait and fidivr fcmovb sbb inc adc negb sbb inc iret movsl test (bad) fnstsw pusha push sbb addr16 adc lahf jns dec (bad) jne xchg mov add lret inc insb les hlt sbb test sub xor mov jbe addr16 loopne je push jmp xor inc adc inc xchg push call or aam adc adcl jmp loop fbstp add add add pop cmpsl cmc ffree mov sub jg lea test clc jnp jbe jnp stos pop jg sub pop pop in clc inc fidivr shll mov js jmp or sarb fstpl hlt aaa jne roll jl add jp cld cmp aam ss dec pop push (bad) inc sbb rcrb mov out push pop js inc pop dec fnsave (bad) fdivrs js (bad) jae out getsec ds test sbb outsb dec popf shr xor mov mov inc nop into fisttpll push fcoml add add add xor aaa mov lea mov rcll adc lock lcall adc scas loopne adc jb loop mov or ds (bad) in cmp mov cld pop cmp pop inc mov out fimul cmp sbb mov xor xchg and fstpt enter dec inc jl dec mov pusha sti pop xor jecxz push and cmc cmpsb aas inc jae push mov fstps lcall sub (bad) into (bad) arpl cmp cmc xor sbb outsb lahf and adc (bad) lret aaa cmpl or in lret nop mov in mov pusha lret mov xor xchg xlat (bad) aad stos movsl cmp jle arpl test jmp mov fwait ret xchg xchg cmp mov (bad) cmp lock pop push inc push cld adc ss cli stc pop je sahf (bad) jb loope push je cmp lcall pop int3 fldcw in in sbbb ror xchg dec jae xor add add add add int3 mov adc jns adc int testb jb inc lea das pop stos clc stos sbb in and inc push nop add cmp lcall push inc or ja insb (bad) or lods mov rcrb sbb das xlat and sbb or (bad) sub adc fmuls rcr or jle and pop adcb fwait call (bad) cmp sbb inc sub stos adc call lret ret sub data16 test cmpl call add add add add (bad) push (bad) jae fwait and push into sbb icebp push fidivr clc pop (bad) leave nop inc insl sub jmp imul aad add lret test and cltd pop xchg mov push aad jns fcompl cltd xchg sub fdivrp sub or push xlat push testl add (bad) lods jb lret out or sahf test stc jnp push cs stc lret movsb scas inc cwtl sbb fild stos pop fistp pop adc push sahf ret popf fs test add add add ja popf dec repz popf jge pshufw pusha std pushf aas fisubrl scas sbb push inc jae test or inc fninit aad mov loope jns call mov (bad) xor mov cwtl jae jne xchg clc roll xchg in xchg lret fstps push push inc sbb mov push loope sar mov mov jno lods push jp pop or sub orl mov mov mov jo das les pop les lea adc xor data16 add add addr16 ds inc push rcll dec sbb lret sub mov adc enter pop movsb call shrb add test add pop push loopne pop pop xor push in jno xchg repnz stc mov sub dec andl out mov xor gs xchg in dec add mov pusha push jno adc cmpsb lcall lret fisttp dec int jb (bad) ds outsl (bad) ja stos movb rcll cli sbb leave or add add (bad) pop leave (bad) xor fnstcw push in xor cld cli mov push lcall std push mov inc cmp shr out enter dec mov mov sbb pop pop or pop xor mov maxps stos lret push popa xor mov xchg ja fdivrs cltd insl fidiv ljmp xor out xchg cmp fldcw inc lret pop pushf mov insb loope push ja jb icebp mov mov idivb js dec fimul loop sub sbb sub xor ret xor add add add cmp lret jecxz or jno xor rcll dec in mov push mov out (bad) lret inc enter cmp rcll pusha lret (bad) mov outsl adcl std std icebp clc mov mov mov and ret int3 adc push and das mov repz or xchg fistp xor (bad) out or dec clc pop int adc rcr nop dec jp inc mov rcr (bad) dec divl fisubl (bad) lods lea fwait ss add add sbb test xor mov cld (bad) mov aas or add add add add negb ja mov fsubs dec cmp call cmp or lcall jb (bad) push mov lods pop jae scas rcr pop cmp pushf std movsb sub dec setne jns jg dec sbb and das xor add lods jae dec inc mov or mov and lods aaa mov push andl xor call int cmp adc adc movsl pop sub dec into mov xchg nop cmpsb stos addr16 sub pop jp xor dec jge push add add add add dec lock xor test stos adc cmp mov xlat clc fcoms std test mov mov (bad) loop scas push jo lock aad sbb pop rclb cltd mov adc mov sub cs cmpsl std cwtl jge and outsb inc fcomp in cmp stos negb or and (bad) cwtl (bad) cmp or cmp pop cmp xor nop cld and adc dec sti adc ret cmc and mov lret pop loope into dec mov mov xchg out (bad) repnz add add add aam jmp mov movsb add ja xchg mov ror cwtl adc cmp push pop stos cmpsb cmp decl fdiv jb add fwait mov loope test and (bad) in xchg mov mov int3 pop pop mov mov dec aam popa mov je pop mov push stos jg imul and jns mov bound mov fldl out add addr16 dec cmp pop into test (bad) xchg jge inc cmc mov fimull pop pop mov xchg das cmpsl push lods fsubrl add add add add fadd mov pop test out outsl xlat cmpsb xchg je cs iret mov out fwait adc xchg fsub mov push dec mov fsubl lock call negl adc adc push insl jg cli cmp into cmc seto in pusha jne xor jns mov mov (bad) mov (bad) xor lods mov mov xchg mov jg in add or (bad) js nop sbb sub ljmp or dec scas jns xchg int stc daa int dec cmp fmuls (bad) mov add add add scas xchg jno jns mov std jbe roll enter push test add jp sub cltd lock sbb mov test push and jb push inc loope xor cld sub adc dec iret dec out sub stos mov mov mov ret lcall leave sub nop jmp es add gs cmc pusha (bad) aad sbbl jmp outsl aad or inc sbb pop into aaa add nop mov ret insl out xor mov mov lock sub add add add sbb adc cmp mov sbb (bad) jo pusha cmp sbb loope adc scas stos pop jp sahf stos mov out mov mov inc cwtl jae sub or cmc out xchg repz idiv aas inc ficom push mov xchg push push dec or sub xor inc mov pushf (bad) mov loope aaa mov xchg cmp cmpsb pushf sub call nop dec popf jmp fcoml lcall adc (bad) popa or mov inc out jmp mov pop leave add add add inc sub adc xchg mov mov (bad) xchg hlt push inc rcll mov fisubrl jp dec cli mov xchg mov jp lcall pop mov out loopne and fidiv fbstp sahf subl mov outsl adcl mov jl stc xchg pop shr sub cmpsl test pop daa sti js loopne adc sub scas or cmpsb sbb cmp ja jle xchg ja popf popf cmp adc sbb ds fimul inc sahf pop frstor rcrb rcr or inc and adc (bad) add mov cmpsl mov inc jbe xchg push fs in mov xchg inc adc mov pop mov in push pop es out push stos push or pop enter out mov inc mov fmull (bad) cld jae mov push lcall cmp xchg lret js dec xchg out sbb in dec rcll and addr16 in adc iret subl cmpsl aaa push mov stos lock in stos dec in in outsb aas adcb adc jb enter push shl sbb (bad) gs add and aam popa and xlat mov jno (bad) rorl imulb inc push and mov fistpl pop je adc xorb cmp sub minps dec add inc add push adc loop xor sti loopne mov dec test sbb or test inc jae mov cmp push pusha or out cs xchg xchg pop testb jns push jge in mov jmp add xor test call daa scas mov mov add add add mov add test sub lahf iret lods scas cwtl fs mov xchg vmovlps loopne lea cmp push push mov push mov unpcklps mov fcomps pop loope pop lods xor daa jg bound pusha xor out bound ja inc insl pop pop shrl and dec scas and iret jae cs xlat push sub in dec int dec jnp add repnz mov dec inc cmpsl hlt pop xchg jp stc and cmp sub xor add mov adc jle xor xor lds cmpl dec das cwtl mov or push es sti int or sub loop sbb xor pop jp pop cmp xchg cltd or jne adc movsb out push sbb into or sti lret addr16 pop lods push out in push add clc in into popa rcrl sub pop and add fldt add xchg push lock es in mov push arpl (bad) adc aaa ficompl sbb mov test mov inc dec fwait pusha pop xor cmp sub add pop push int lret mov jne sbbb sub sbb insb push scas and mov inc lds cli pop sbb ja push clc mov divl mov jl sub jne xor or rolb mov add cmp (bad) call addr16 mov pop xchg aad fcomps sub inc push xchg xor adc loope pop and push dec lock loop adc mov mov inc into ret decl repz xorb push inc xor add add add shrl xor negl movsb ds lods aas (bad) xor push add mov dec inc add inc mov jnp (bad) or mov call insb xlat jb sub es sub cmp add pop push out xchg in repz sub icebp sbb dec adcw addl inc push push sbb and fwait clc mov fldt jbe push push mov sbb adc sub mov in mov and sti xchg sbb out jp addr16 fnsave fcompp xchg cmc andl push sti movsb sub lods add into std push push out sbb pop sbbl shll popf and xchg or fistp and cmp fdivp or mov xchg mov fiaddl inc popaw rep mov pop (bad) sub scas sub imul jno jle adc fnstenv shlb push cmp nop push (bad) jo mov mov pop add and jecxz pop push je push add sub outsl stc jp ja fwait cld cld dec xor mov jae mov mov icebp shrb add add add xchg inc add pushf xor cmp loope dec sbbl arpl hlt inc sarb sub xchg add inc arpl mov ja les mov cwtl lods xlat hlt aaa and enter xlat fdivrp mov xor mov out cs int3 stos out (bad) out mov in push loop mov pop (bad) hlt popa cmp and cmp and mov pusha mov adc loopne fwait aam mov ret neg dec sbb adc cmp es pusha and clc aaa popa daa push add add add jmp aad popl js sub push mov sub (bad) mov cltd push movlps jns iret sub push xor sub mov xchg xor incl (bad) call push xchg (bad) adc jnp cwtl push (bad) jmp inc (bad) shrb xor mov jmp adc pop into mov pushf std int3 mov pop push outsb pop mov lods xchg cmpsl xbegin nop pusha rolb add adc cmp sub pop rcrb sub add add add sbb mov push fwait repz sbbl fldenv stos push sub aas repnz mov adc and mov mov dec (bad) sbb add or std jns mov xor xchg roll ljmp addr16 sub stos push out mov pop popl sahf jl pop pop cwtl cmpsb aam sub push add movsb setg sbb or loopne ret jmp push inc repnz mov mov or jge sti sbb in shlb and jmp add add add add call push mov imul (bad) mov aas xor stc shlb cmp inc addr16 ss mov and xchg mov xchg or lods jecxz add ss push lret pop and mov mov (bad) cmc sbb rorl andl mov cmp xchg pop aad add negl fldenv lea push ret sbbl or jmp ss mov pop xor icebp push add lcall xchg push sub movsb cs or inc mov lret mov cmp xor xchg jae adc xchg dec fs inc xor (bad) les lcall or (bad) cmpsb add scas xor inc repnz push cs or cld mov call sbb push jno scas lret ljmp and cmpl mov push je (bad) inc pusha insb shlb jp inc pop mov lods dec out push ret pop adc pushf sub add add add push add xlat or iret jg dec jno imul add and mov test in pop inc add or sub jne,pt insb in hlt lods cli lret mov xchg mov aad pop in dec test and stos nop pop xchg std adc rorl push mov pop cmp push faddl pop daa inc repnz push test stos pop dec fnop vpaddusw push lock bnd (bad) jnp sbb notl mov aaa lcall pop sahf stc rcll xorl pop int imul jnp dec arpl add add sbb pop lds adc xor orb inc lods pop clc mov cli pop bound imul out ret xchg sbb shrl jno popa or adc mov popa cmp or cmp pop cmp inc lret out sub mov loopne,pt fadds addb xchg pop pop mov jno enter enter pop mov jp in iret ficoml inc push into xorl sbb mov cmp lds jne push xor and test add add add inc outsl gs pop sbb mov push inc (bad) cmp push dec lret lret fwait imull pop sbb rorl xchg (bad) ret xor pop dec loopne adc push jno jo (bad) ja aam push mov scas jg cmp out outsb fstl mov pushf or inc jge sbb xor dec ja outsb jle lds enter cmc xchg (bad) mov cwtl pop sahf mov push inc ret out inc adc data16 es jecxz test xchg in or sub movsb loop std xor in add add add add jl xchg iret aas push push jmp jne push (bad) fwait push push enter out jne mov popa repz lds xorl out sub push movb jnp ficom aad sahf gs lods mov jecxz mov mov or sub incl push xchg (bad) int3 pop rorl push push loope add icebp cmp mov mov push rcl ss xor mov ficoml mov cmpsl fsubrs pushf mov mov (bad) lcall pop pusha je add add add add out dec mov mov add xchg xor test xchg fsts add inc jl aad xchg repz ror cltd fidivr loop pop mov out adc adc dec jne outsb mov shlb fldenv cs lea stos jge dec pop inc sti pusha adc mov ljmp and cltd cmp xchg push ljmp icebp sub imul push outsb jbe aas jmp push out je pop movhps pop dec mov lods cmp jecxz out jg push fcoml stos sub out mov fiadd push cmp xchg repz test jae (bad) pop (bad) mov xlat sbb pop mov push outsl adc xlat pop daa lret call inc (bad) jmp push jmp in and sbb lods pop push fdivl ds inc mov lods add jae mov (bad) icebp dec jno add fwait mov xchg push sbb fcom mov addr16 xor sub loop mov dec iret or adc sbbl mov add add xchg mov add (bad) (bad) arpl pop pop cs loop cmc imul (bad) sub mov pop test cltd fbstp stc mov pop sub ret fstpl adc xorb stc int mov cmpsl lcall pop mov cltd cwtl adc sbb cld jne dec (bad) leave clc test push jbe movsl popf cld adc (bad) adc inc mov sbb sub xor out out sub data16 loope lahf cmp icebp sbbl add mov add add add add daa std inc int nop pop inc insb test inc out adc push (bad) jbe mov ds (bad) sbbl insl int3 lret js jns xlat dec mov sar (bad) adc shrb lea push sarl inc test fidivr outsl clc lods fwait cmp ljmp test dec xor daa mov aam add loop popa jns ljmp adc pop push pop sahf or jo sbb (bad) lret outsl outsl mov xor in fist jns pop jns inc cmp movsl out sub into jge mov test and (bad) pop test or aaa sbb xchg xor icebp aad xchg out fsub les enter scas inc inc loopne out mov inc movsb jno mov rol and outsl in daa rcrb and xor and fdivr hlt adc dec push dec fldcw and jnp mov in sbb es test int mov push cmpsl cs jg (bad) xor mov outsl dec sbb xor jp,pn mov loopw scas mov push fidivl push outsl jl lret loop cmp (bad) push xchg repz add add add dec rorb xchg xor or push fsubrs sbb xchg mov lcall jg hlt dec mov and cmp jg and enter fs rep test jnp loop ret sbb mov outsb (bad) mov in lock gs push fsubs xor lods push mov xor push roll icebp lea (bad) cwtl fisttpl jle (bad) cmc loope jo dec pop or and xchg lock push add add fadds pop push add adcb jae rolb jne add fsub fist pop jmp icebp xchg je dec mov pop lds inc cltd bound jne outsb in (bad) fs js cld cmp stos cmp sbb data16 cmp push inc pop inc sbb stos sahf add inc and cmp mov dec and je xor add jge mov push out push (bad) dec sahf pop jbe jbe lock cltd dec (bad) popa icebp mov (bad) movsl lcall scas insb insb and in and adc add add add add add fimull cmpb scas pop xor xchg or sub in adc scas ret jae xlat or insl jno or cmpsl adc lcall outsl inc jge jne into push or add test mov xchg pop clc loope dec sbb ret add out mov xchg ret shrl push out ja jb,pt mov and dec call dec cmp (bad) mov imulb push aas push add addr16 adc pop mov inc mov imull jecxz out jbe add add add xchg cmc shl scas in jne les test push popa push add xlat push adc inc jmp mov es jp pop es rclb mov jns cmp fcmovnb pop loopne cmpsl mov loop loope repz test test fdiv xor cwtl dec fcomps lret mov or xorl mov xorl cmp loopne insl xchg mov xchg pop inc cvtpi2ps sbb jns push push push mov or and sub push mov adc int3 cmpl movsb pop or add es ss repnz add add add add mov mov jecxz (bad) ja in jbe or dec fiadd mov dec stc pop jmp mov leave bound imul mov cld popf mov pop (bad) je fucomip in inc and pop xor push ret stc fist mov ds pop inc into jg pop pop xlat jl in or test adc arpl in jmp cmp jmp into sbb fmull adc movsl dec xor sbb pop int xor (bad) push jb dec fiadd mov pushf hlt loope sbb add fimul lods pop xor cmp out stos dec push (bad) aas push pop into sbb pop jmp jmp repnz ljmp jbe fwait sub sahf jmp fidiv out lods push or xchg adc dec data16 outsb xchg mov (bad) sbb add mov paddsw sbbl pcmpgtd or js mov dec aas mov mov xchg sub (bad) cltd push and stos call inc fnop mov mov mov pop mov negb sarl jo (bad) jno ret dec add pop ja repnz sub xchg sub lock outsl push or jl jle js imul into scas aaa in push pop cmpsl and stc jg rol dec pop inc xchg dec aaa in jo outsb xchg xchg or aam mov cs fwait or in dec push outsb or inc jo fimull imul std repz das test push in rclb adc xor mov hlt jb jp inc push (bad) mov mov mov (bad) mov dec aaa scas movsl push adc sbb sahf add add add stos sub cld testb mov mov (bad) push mov xor push mov lahf pop and arpl enter cmp insl (bad) insb lea push fsts insb stos nop xor (bad) jns xlat loope sbb mov inc push jmp mov sti mov data16 mov bound dec pushf enter jbe xchg lcall xchg lcall fdivrl fiaddl sahf ja rcll add cmc lcall cmp in or clc mov cli and lret dec xchg push inc aam fwait add add add roll fs icebp cwtl stc fcompl sbb fstps sahf ret mov or andb dec sti cmp movsb scas cmc stc mov jp xchg rorb and xchg bound push mov jmp push in xchg lods ficom fcmovne adc inc push mov jnp xchg add cmp es pushf or jg loopne nop sbb rol xchg pop add pop out cmp add (bad) aaa inc aaa sub rcrb xchg mov dec sbb arpl icebp je stos dec pop psubsw push fnstsw xchg cmp add add add add add mov sub push pop iret dec pop mov stc (bad) fldt adc lahf out jecxz xchg std movsl push mov in cltd xorl pop inc and enter stos adc aam mov xchg mov jg inc dec in xchg or fildl xor test lret jecxz lcall xor push sub mov cmp lock (bad) (bad) flds mov lock aas mov clc dec and (bad) fs cmp mov sub cs sub (bad) push ja out in jl test mov pushf mov jb out test imul lods add jg xlat mov ret sbb test mov and mov xor cmp sti gs sub mov push sbb jp lea movsb pushl jg and adc ret jmp mov lds dec xlat xchg cs xchg (bad) mov cmp loop mov adc (bad) insb into xchg lock std or add mov xchg push es mov mov insb mov mov xchg stos push push adc push lret js cwtl sub sub popa (bad) out fwait and (bad) or sbb scas out test jp push arpl xor stos pushf mov fidivrl jo sbb lds aas sub bound mov aas xor clc pop mov ss arpl push roll xchg jo test push lea mov daa jb jg test scas repz movsl or pop test outsb sub add add add add nop mov jle pop dec xchg push rcll std (bad) loopne cmpsl pop push mov cmp dec test adc (bad) sbb cwtl ss and outsl test (bad) imul movsl pop push lods je repnz hlt sti mov inc out test sbb push hlt (bad) xor call lods sahf adc mov adc adc xchg je icebp in les cmpb push pushf adc inc insb cmp add sarl mov push inc dec in lea push ret insb das fs xor in leave jae lcall add mov mov push imul aad fs cwtl mov aas icebp (bad) xor push les loop push xchg sub loopne loop (bad) fdivrl jl xlat jg int pop cmp sub mov in pop xor movsl adc rep scas push xor push cs jp mov (bad) icebp adc std or cmpl sbb sub mov shrb in or jmp inc jle dec mov pop paddq in xor xchg and mov add scas repz add xchg and repnz out pop aas js inc lret mov adc fwait int into mov xchg fstps and jl push inc push fnsetpm(287 mov xchg outsl (bad) data16 dec xchg dec imull and pop xchg cmp into pushf shll into xchg add les lret test les xchg ret lahf lea lods pushf roll ret pop in mov push cmp xor xchg mov push sub cld lret mov (bad) ja mov cli in jle mov (bad) (bad) icebp add es adc push sbb in enter mov scas jmp sbb add mov adc push jge dec xor push cmp dec cmp push not (bad) push pop daa mov cmp (bad) jmp adc inc mov push mov push insl fisubr aaa pop ljmp add fisubr out mov xor cmp xor jne dec xor fisttpl sub cmpsb aas addr16 sub add test (bad) std mov add add add add fdivr enter cmovle dec xchg out mov dec es pushfw push test sbb es sti test push ja pop adcb js cmp pop clc add dec dec gs movsl or mov push loope jbe in mov shr leave push subl jno les fs cmpsl popa add test xchg push mov loop ror pusha ja mov cmpsl lret add xchg out cmp pop mov push add repz in or dec fistp dec pop gs fs push repnz out add add xchg imul xorl mov push cmp lods xor lods jmp inc pop push data16 dec push add shrl mov icebp cltd push sub fidivrl push cmpsl outsb call push jno pop push push xchg fstpl add push stos mov rcrb ret add mov pop js lret mov dec fist mov dec or clc xchg (bad) jg jns mov divl push sub lea and and jno inc jmp xchg inc bound mov add add add xchg sub cltd imul cwtl loopne xchg (bad) pop ret fimul out mov mov lcall inc pop mov sub mov mov sub fldenv mov add xor sub sbb ret mov out push aaa adc jecxz inc sbb mov clc sub dec stc adc imul xor adc aas ret mov cmp cmp clc jo sbb movsb cltd mov jnp jbe jae mov dec jp bound ret add add add inc nop xchg jge push addr16 lcall nop and icebp xchg fs xchg push mov pop imulb cmc aad xchg dec (bad) adc cmpl cmpl mov or daa jo jb push cmp jb movsl sahf sub adc push in repz mov sbb mov jp nop mov (bad) add push imul xor idivb sbb push addl call loop inc dec or sub inc aas or xchg cli jp or les sub hlt cwtl adc push jb movsl aad pop xchg cld jge xor mov mov ss pop mov sub movsb into cld fidivl fisttp cmpsb jo xchg mov and pop (bad) call sub das push mov xchg cmp add xchg pop sbb jb jmp mov test test (bad) icebp jnp cld inc call aad leave lcall loop adc sti lret punpckldq cmpsb mov (bad) mov lock adc scas rorl mov xchg in and js add mov jmp daa mov cli stos mov add add add or rorb fisttpl inc out or addr16 (bad) push and (bad) pop jl push jp dec xchg pop out es sub ret fwait dec (bad) sarl sbb mov pop fadd fimul mov mov adc jecxz imul xor fcmovnu jl pop cmp xchg pop jns mov inc add ficoml add or and adc and loope pop or imul ds divl shrl jmp add add add add shll inc jns inc mov sbb jns call adc adc push adc addr16 ud1 outsl mov push mov cmpsb mov mov adc das mov jmp add fldcw add xor cmpsb mov mov cmc aaa cli in lret leave fldl inc daa mov ret dec sbb push cs dec xchg dec jmp and jnp daa sbb insl stc out pop je cmc test jo imul mov insl hlt rcll shr add mov push enter add and pop sbb cmp pop cs sahf push cli mov hlt pushf pushf pop jns,pn xor mov lret inc push mov cmp (bad) dec mov rolb add shll or hlt fwait fs js ljmp jnp out data16 push lcall scas dec cs dec (bad) jl (bad) sbb pop movsb outsl out or cmp scas cmp shrb cs push add cmp outsb inc and (bad) xor or call and lods sub loop mov repz mov test add add add cli inc add arpl clc dec adc call add daa movsb popl int ret and mov mov dec mov dec aam sbbl cmpsb leave pop in outsb xlat or or push ja enter push loope lret dec adc or sbb xorl scas pop inc jl push push (bad) jne mov adc repz push out test push jl jge or adc ds out out push jge inc and pop aas int pop xchg xchg divb iret add add add push mov and sub or stos loopne stos sahf repnz repnz lock fstp fldenv mov pop lods ret cmp xor fdivrs xchg mov addr16 (bad) cmp aaa pop mov cmc gs fadds xchg push lods ret push into cli dec es icebp fnstsw movsb aaa pop hlt movsl neg xchg xchg cmpsl jae push or inc sbb test mov add mov dec xchg popf xor jae lods insl cld mov xlat (bad) into xchg xor or lcall adc xchg inc add ds movl insb loopne sub fs in scas shll jae inc push or xor pop lods dec nop pop jne pop mov jb push sbb adc sub xor xchg sub ret movd bound mov in push dec or rorl mov xor dec adc aad xchg jp data16 mov or and lds ret sbb inc sbb mov (bad) jnp addl lahf popl gs imul (bad) xlat push clc pop mov add add stos shll loop movsb push pop push mov imul aam fcmovnb aad cmpsl inc loopne mov mov xchg mov iret push inc sahf fstl pop roll xor ret out scas xor sarb test add sahf scas hlt mov add ss sub add stos aam xor cmp mov inc xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov movb cmpb je inc dec mov push loop push push push mov add jmp pop jmp pop inc call push pushl push call cmp je call push dec inc dec dec xor cs dec dec and call inc push push dec outsl je data16 arpl push add add add jne push call mov rdtsc loop jmp jmp dec inc xor movb cmpb je inc dec movl jmp dec inc xor mov movb cmpb je inc dec pushl popl add jmp pushl popl mov movb cmpb je inc dec mov push pop mov movb cmpb je inc dec mov mov mov push pop mov jmp dec inc cmp jne push pop cmpl jne push pop mov push pop push jmp dec inc mov pushl popl mov movb cmpb je inc dec add push pop mov movb cmpb je inc dec mov mov add push pop mov jmp dec inc add push pop lods push pop test je add push pop mov bswap inc cmp jne jmp dec inc cmpl jne pop pushl popl xor movb cmpb je inc dec push push pop push movb cmpb je inc dec push mov push push pop push jmp dec inc push push pop push push pop push push pop call jmp dec inc add pushl popl ret movb cmpb je inc dec push pop push movb cmpb je inc dec push mov push push pop movb movb jmp dec inc movb push pop movb push pop movb push pop jmp dec inc movb pushl popl movb cmpb je inc dec movb push pop movb mov mov add movb cmpb je inc dec push pushl popl push jmp dec inc push movb cmpb je inc dec xorb push pop mov or push pop movb jmp dec inc movb movb cmpb je inc dec movb push pop movb jmp dec inc movb pushl popl movb movb cmpb je inc dec movb jmp dec inc movb mov movb cmpb je inc dec call push pop push push pop push jmp dec inc push movb cmpb je inc dec addl push pop call jmp dec inc mov pop pop pop pushl popl mov movb cmpb je inc dec push push push xorb jmp dec inc xorb movb cmpb je inc dec incb push pop movb push pop movb jmp dec inc movb movb cmpb je inc dec movb push pop movb jmp dec inc movb pushl popl movb movb cmpb je inc dec mov call jmp dec inc push movb cmpb je inc dec addl push pop push push pop pushl jmp dec inc call movb cmpb je inc dec jmp push pop pop jmp dec inc pushl popl mov movb cmpb je inc dec mov jmp dec inc mov movb cmpb je inc dec push pop push pop jmp dec inc movb cmpb je inc dec push pop jmp dec inc pushl popl movb cmpb je inc dec jmp dec inc movb cmpb je inc dec push pop push pop jmp dec inc movb cmpb je inc dec push pop jmp dec inc push pop dec jmp dec inc dec mov sub test jne movb cmpb je inc dec mov mov mov pushl popl xor pushl popl movl pushl popl push push pop pop jmp dec inc add movb cmpb je inc dec mov pushl popl jmp push pop cmp jne jmp dec inc add add mov call movb cmpb je inc dec pushl popl call inc sbb sub push jge in adc sbb daa dec adc xor dec adc aad fldl test adc dec adc inc xlat movsl add (bad) dec xchg insl pop inc nop imul xchg dec les jmp or push push dec adc xchg push movsb test fwait jmp scas adcl dec jge pop adc push pop dec cld repz xchg push movsb mov push or xchg push (bad) dec lea add (bad) jmp pop adc adcl dec jge pop adc mov popf dec sbb (bad) rcrb push push jg jl inc push pop xchg scas inc or arpl adc cmp jp dec adc out adc xchg push dec adc xchg push (bad) in iret popf inc cld push add int sbb adc push sbb les in xchg sbb (bad) xchg push dec sahf scas popf dec inc call sbb lds int3 cs dec adc xchg push int3 outsb xchg dec dec adc xchg push dec sahf fcoms movsb pop adcl dec jge inc adc inc jb and adc jnp dec adc scas add iret (bad) xor xchg push les std push dec adc xchg push dec jg jmp dec sub xchg icebp adc push movsb dec (bad) push dec dec sbb cmp adc xchg push jl movsb jmp fadds (bad) sub pop or xchg mov loopne into ljmp dec adc xchg push (bad) pop in xor xchg push pop std xchg sbb lds xchg jl jg (bad) mov pop xchg ljmp std jb dec adc fcoms movsb lock dec jge inc adc push pop dec cld xchg add iret decb push mov les xchg dec movsl mov sarb (bad) pop xchg incl std sbb sbb jge fcoms movsb jmp jge inc adc push pop dec cld cld add iret dec sbb popf add jl pop adc fwait push dec pushf rcrb pop xchg decl xchg push pop std lret adc inc add int3 call std ficomp dec adc xchg incl xchg push pop std scas sbb sbb inc jg jle add adc jl ljmp int xchg inc sbb sbb mov push dec adc push dec dec jl pop adc cwtl push dec pushf rolb lret adcl dec jl pop adc cwtl push dec and lahf rorb mov xlat rcll push (bad) nop or dec adc mov push mov add dec adc or dec adc push add popf popf dec push sbb cmc adc push dec xlat popf push repnz aad dec and xchg jl ljmp mov loope les decl push lods call add (bad) mov push aad dec push xchg push ret inc add push movsb mov sbb push xchg lods pop inc xchg int dec adc lods push cmp insb pop adc cltd popf pop pushf add push adc xchg push adc loopne mov push sbb rcrb dec xlat aam dec inc jge inc adc xchg push (bad) push mov movsl inc test dec xchg insl pop inc nop jmp dec adc xchg dec movsb sbb jl pop adc lods jmp (bad) push cltd adc std sti push dec adc push push dec adc aad pop cld mov popf dec pushf rorb ljmp dec sbb pop dec adc xor dec adc xchg dec movsl cltd cltd push dec inc push fwait jmp mov push dec dec jge inc adc into inc pop jno sbb xchg push (bad) pop mov mov jle movsl std push mov loope dec ljmp dec adc push imul xchg mov aam dec pushf loopne (bad) push cltd lahf mov push sbb xchg lahf dec jg jmp inc sbb popf adc xchg aad rcl jle adc jge inc adc sbb lea xchg push (bad) dec mov push dec jae dec dec jae mov mov dec adc xchg push (bad) dec lds dec sahf lret mov dec adc adc dec adc popf push dec sahf adc dec adc popf push dec sahf lret (bad) insl push dec adc xchg push (bad) jmp rorb xchg push jl movl adc inc sbb loopne dec adc mov inc je xchg push dec adc xchg push dec adc insl push cmp call adc and inc adc popf push dec jg jmp dec popa jbe mov push push pop adc push pop sahf rcrb inc addl xchg push inc inc jge inc adc mov push dec adc cltd push dec adc and inc adc xchg push mov push dec adc xchg push dec adc xchg push dec sbb fisttp xchg inc (bad) mov push xchg dec sbb xchg fisub add lahf mov push push inc adc lahf push dec sahf adc inc adc lcall xchg xchg push dec adc adc inc adc xchg popf lret push dec pushf adc inc adc push xchg dec sbb push dec adc xchg bound xchg push dec adc mov push push or inc adc sbb pop std ja dec adc xchg push dec mov pop mov aaa push push int3 imulb dec adc sub sbb push dec adc sbb adc lret dec into aam (bad) jp push movsl cmpsb lahf push dec std xchg sbb adc push xchg push sub push inc sahf aad (bad) lcall hlt adc fnsave (bad) mov sbb push push and adc push imul adc dec add les dec adc xchg push push ljmp dec adc (bad) jmp into sarl push dec adc nop push inc adc push inc sbb xchg push dec adc (bad) jbe (bad) lds dec adc xchg push sub xchg popf or sbb mov (bad) push std jno mov cmp lret into aam popf push and daa mov sahf call aam adc push pop sbb sbb (bad) pop mov pop sbb adc sbb into aam lahf add push xlat or lahf add xchg push les popf add jl pop adc pushf push dec ljmp inc adc sbb dec jmp fmuls sbb fwait popf or dec jno dec jo push adcl movsb sub rolb xchg jmp inc jg jl jg jl jg jl sahf enter enter inc xchg mov lcall pop in mov xchg push pop std push push dec adc xchg push (bad) pop in clc add ljmp inc jge inc adc jl pop adc popf push dec ljmp jl inc jl jge es adc xchg push mov xchg popf add popf popf or push dec rcl pop pop jg popf inc ljmp cmp push inc inc ljmp dec sbb mov or push add jl ljmp sbb lea fcoms xchg push movb popf pop adc pop sub movb aam adc mov iret sub jmp pop push enter iret sbb xchg inc movb jg ret in xchg sbb inc xchg push dec jae jo jae out dec push push pop dec adc in cmpsb sbb adc push pop sahf ret addr16 jmp inc nop mov push jg jl pushf outsb xchg mov (bad) popf adc xchg push into aam inc movb jg inc xchg mov lcall dec test dec sahf ficoml movb pop gs sahf popf add les xchg dec movsl sub push movb aas adc into in xchg sbb aad push dec xchg sub inc adc push pop dec cld js dec adc xchg push (bad) dec popf xchg mov sbb int3 (bad) loope dec adc xchg push dec adc lret es sub adc xchg popf add xchg inc adc xchg push dec jg popf sbb inc xchg mov lcall pop xchg decl std adc sbb rcll mov xchg push sbb ret daa push int3 stos imul dec adc push into stos imul leave sbb adc jge dec adc xchg push dec sahf fcoms movsb and jge dec adc xchg push dec sahf rclb dec adc adc lret push dec cmp xchg leave adc push and pushf insl adc adc push sbb adc xchg push dec adc xchg fsts or dec adc push sbb mov dec in mov adc xchg push lea adc notl xchg push inc xchg add dec adc xchg sbb pushf xchg push dec sub xchg xor xchg adc popa loop push gs dec adc xchg push dec xchg loope jo xchg push lea sub pop (bad) idivb inc test js,pt bound sub outsb jo xchg push lea adc dec adc jle into stos add sbb adc fadds xchg push dec adc xchg push mov add dec adc xchg push movsb push push mov std pop dec adc jmp dec ljmp fisubrl push dec (bad) je dec adc or mov mov jmp fisub ljmp cli adcl loop adc mov loope into in xchg (bad) call popa xchg push dec inc call and ljmp jle (bad) jbe xchg cmp push push pushf outsb xchg mov push dec inc call mov push int xchg push (bad) dec popf jmp and ljmp cli adcl lret push dec pushf rorb (bad) out adc cmp jmp dec ljmp adc cmc call push daa adc in fisttp sbb in decl push movsb out fwait push dec dec push or in and aad jl aam pop sbb loopne dec fstl (bad) dec sahf leave xor loope inc and pushf pop sbb push imul xor (bad) fstpl pop jno fs adc add popf pop adc xchg mov repz jae loopne into sti xchg sub xchg sbb dec adc adc lock lcall push mov inc (bad) les iret xchg fdivrl adc push loope pushf dec popf dec pop xchg in cli push sbb sbb sbb inc imul mov arpl outsb lahf dec pop push xlat dec pusha inc dec adc loop lock lcall push xorl adc xchg push dec popf cltd sbb movsb (bad) (bad) adc aad xor adc adc dec adc push cmp xlat xchg mov xchg push dec imul mov pop dec adc adc (bad) xchg push (bad) lret movsb (bad) jl movsb fistpll aad add adc sbb mov push push imul cltd xchg mov test dec pop movsb fcomip adc push dec rcll aam adc xchg dec into sub enter xchg push dec adc jge dec adc enter xchg or (bad) jmp dec adc adc dec add push push inc adc nop push dec pushf push popf or nop push pop adc xchg push push pushf enter sbb xchg jbe loopne movsl in push dec sahf loopne int3 rcll (bad) movl xchg push int xchg arpl adc loopne and ljmp sbb push movsb mov sbb pop sahf loopne int3 shrl dec adc xchg xchg mov loopne movsb leave xchg push dec dec jle movsb mov push dec dec movsb fistp inc jge dec adc adc dec add movsb fistp inc jge dec adc xchg xor std fistl dec adc mov rorb rcl dec inc rcl dec inc rcl dec xor rcl dec dec rcl dec inc rcl dec inc rcl dec push rcl dec pop sar dec sahf loopne int3 shrl dec adc ret jmp daa adc (bad) pop dec adc push push push adc test aad jo sub fcomps int3 aam or daa adc call and inc push insl pushf push popf cmp adc dec or inc jge rcll into rcrl pusha mov push lods push ljmp (bad) push cltd adc dec test push (bad) push cltd popf lds mov dec adc dec adc imul outsb push les popf idivb xchg push dec adc call daa adc xchg push or pushf push popf cmp adc dec or jmp (bad) xor inc imul adc push fsts xchg push dec dec call daa adc call daa adc rorb into sub jmpw xchg adc push out dec sbb daa mov push fs xchg push adc adc xchg insl jmp jmpw xor dec adc push push jno movsb ffreep dec mov sub test jo cld xchg lahf xorl dec adc push push pop sahf aad les xchg movsl pop sbb into aad jo add arpl xchg pop mov xor sbb push adc xchg lods push cmp push adc sbb (bad) sbb cltd popf sbb popf popf adc xchg xchg test pushf dec popf xchg push subps fistpll loopne sbb xor dec adc push push pop sahf xchg popf adc adc adc dec inc xchg push dec pusha jg cmp sub and dec popf adc adc dec lahf mov push bound sub loopne int3 insl xchg cli inc inc sbb dec movsb int inc movb xchg adc les nop push push dec adc mov jl lds inc std push dec adc arpl push lea mov into stos lea dec adc insl adc sahf mov dec adc sbb (bad) (bad) push (bad) dec pushf xchg xchg movsl adc cltd inc sbb test dec sahf sbbl mov sahf lods les pop mov adc rcl sbb mov loopne mov pop adc sbb jno es adc push push pop sahf xchg popf adc adc loope movl pop and lods sarb loopne (bad) push test push std lahf mov push push inc adc std push dec pop xchg inc daa ljmp jno fstps gs rorb push aad xchg xchg push dec adc dec jo push adcl dec or jmp dec ljmp mov (bad) jbe popaw jmp insl adc adc imul cmc push dec jne jns imul adc (bad) cmp push lea xchg xor aad dec push loope int3 imul jbe jmp or daa adc imul aad sub imul pop xchg jmp or sbb push dec adc xchg push dec adc xchg push dec (bad) xchg lods insl adc push popf adc adc dec add loopne movsl jl jmp int3 (bad) xchg or (bad) xchg cmpsb adc jge dec adc rcrb dec adc xchg push adc dec adc sbb xchg jbe loopne (bad) pusha cltd xchg mov xchg jl jg jl jg jle adc (bad) ss rcrb arpl push push push adc push dec xchg push aam adc (bad) xor ljmp mov xchg jl jg inc daa adc vshufpd (bad) dec mov and inc (bad) jmp dec sahf leave xor xchg sub pop adc sub add push push imul push bound inc daa push std push pop adc push sub adc cmc push sbb (bad) adc push dec sahf aad (bad) push sbbl or aam adc dec adc (bad) xor fnstenv inc pushf leave xor jbe mov (bad) jl xchg jle push xchg jle push jg jmp inc nop add dec adc push push imul (bad) das mov adc lods loopne into outsb xchg push cmp adc lock mov movsb fcomip adc push dec push (bad) sub push out push push mov aad jbe loopne into outsb xchg push cmp sbb mov (bad) in cmc push les test sub into outsb xchg add out xchg mov loopne adc scas scas cmp repz adc cmp sbb dec rcl adc adc xchg push into aam xchg mov adc dec xor push add leave xor (bad) xor (bad) xor lods aad pop adc xchg ss arpl pusha jg rolb into (bad) lahf daa test aam jbe loopne sub adc outsb outsb scas cmp push push mov sbb mov jle mov scas les push int3 in xchg es adc push add (bad) xor leave xor test int xchg arpl mov push dec adc sub adc adc aad aad decb in push push jbe inc sub (bad) arpl jae std ret ljmp sub fcomps inc rcll rcrl (bad) bound loope cmp aaa mov sbb xor std mov mov mov bound xor fstpl inc (bad) cmp pop insl and bound outsl inc loope aas popa loopne insl pop lock outsl xor mov sub ja jno xor pop fstps inc cli jo (bad) hlt sub jg addr16 and dec sbb and dec push pusha out sub inc sub jg jnp inc cmp bound xor aaa mov cmp cmp pop sub outsl aaa mov sub rclb inc iret bound xor aaa mov movsl int jmp and mov cmp cmp pop sub movsl outsb jmp dec inc xchg push dec inc xchg pop dec and push dec pop xchg pop dec std xchg sti mov aam sbb adc aam jo xchg push movsl loop jmp dec pop xchg inc dec sub cld mov xchg push dec adc adcb adc xchg push dec adc xchg push dec adc xchg push dec adc lds dec adc xchg push dec adc jge movsb ljmp sub push movsl fnstsw push cld sub and sub lock dec std (bad) pushl cmpsb and std ret ljmp aas jo jb jl jb (bad) out movsl cmp mov lock outsl sbb and decb push or push sub bound gs jno popa dec std push mov sarb in and loop sub jp adc push sbb gs push movsl ss mov lock hlt cmp gs repz std pop (bad) mov (bad) jae jnp jp daa xchg (bad) cld cld push push jo pop sub loope aas addr16 fs std push pushl push out and jns jo (bad) mov jl bound je push and jne insl xchg (bad) (bad) push sbb cmp aas jp jae popa shrb std cmp ljmp or or jge cmpsl ljmp or dec std mov jae jno jg jo (bad) popa ljmp or push and lock and lock movsl in jl mov stc jns jo ja jno jae std test mov (bad) jae pop cli js inc hlt bound push xchg (bad) (bad) push or push and ja jno jg jo push movsl test out sub lock aas jp jae retw scas fs or bound jp jae addr16 jne data16 movsl loop jmp and cmp and gs push sub loope and jae pusha repnz cmp bound pop out ljmp cmp jae pusha repnz cmp bound sbb mov (bad) jp jo push movsl sbb std jae jns and std xchg cld mov (bad) jle jns push xor jo push movsl mov mov loope and (bad) xlat std push add jg jns push xor jl js std sar mov (bad) addr16 bound inc cld cmp jp jo jns insb xchg (bad) pop in jmp cmp js jo bound jge jae jno decb push add sub or dec std jmp mov (bad) addr16 bound jbe inc and loope sub fdivs jp outsl dec std mov bound jo push and jae popa sarl hlt jb std in out ljmp and jle jo jb std inc clc mov (bad) jnp ja inc cld jae pop repz sub jg jnp incb push or arpl push mulb arpl inc aas jp jae xchg (bad) push cld push sbb fs xchg (bad) pop cld push or jnp jl jb (bad) out movsl xorb pop lock push stc jp jbe (bad) mov push aam dec std pushw adc push dec adc push dec adc insl jmp dec std adc mov fisubl xchg (bad) jns push inc mov mov out xor out mov clc cmp and pop and pop dec das or jne fidivr mov inc flds les or jno push xlat xchg ror sbb pusha cmpsb mov ljmp int xor (bad) xchg or (bad) sub sahf js movsb call dec xchg lcall xor sti test cmp or lds mov sbbl mov addl scas xor test pop jl inc fdivs sub movsb jnp adc adc cmp cwtl fsubp das sarb nop hlt jno xor inc add call repnz jno sbb lock popa in hlt movsb or cmp inc mov and adc jecxz xchg cltd imul pushf mov jmp xchg push dec std (bad) mov xchg push dec adc push jp,pn jg jno jae jo (bad) shl push dec adc jge mov xchg push dec std inc loop ljmp mov adc push dec adc fs dec std clc (bad) mov xchg push dec adc xchg push dec adc popf push inc adc pushf push dec adc pushf push dec adc pushf push dec adc pushf push inc adc xchg push dec adc nop push dec adc nop push dec adc xchg push inc adc popf push dec adc xchg push dec adc xchg push dec adc xchg push inc adc nop push dec adc popf push dec adc popf push inc adc pushf push inc adc xchg push dec adc pushf push dec adc pushf push dec adc nop push inc adc popf push inc adc xchg push dec adc xchg push inc adc popf push dec adc pushf push dec adc xchg push inc adc xchg push inc adc pushf push inc adc nop push inc adc nop push dec adc pushf push inc adc pushf push dec adc xchg push inc adc xchg push inc adc nop push inc adc xchg push dec adc popf push inc adc popf push inc adc popf push inc adc popf push dec adc xchg push inc adc pushf push inc adc pushf push inc adc nop push dec adc xchg push dec adc nop push inc adc nop push inc adc xchg push dec adc pushf push inc adc xchg push inc adc xchg push dec adc popf push dec adc nop push dec adc popf push inc adc popf push inc adc pushf push dec adc xchg push dec adc nop push inc adc nop push dec adc nop push dec adc popf push dec adc xchg push dec adc xchg push dec adc xchg push inc adc pushf push dec adc pushf push inc adc popf push dec adc popf push dec adc xchg push dec adc pushf push dec adc pushf push dec adc xchg push inc adc xchg push dec adc nop push dec adc nop push dec adc xchg push inc adc nop push dec adc popf push dec adc popf push dec adc pushf push inc adc xchg push dec adc pushf push dec adc pushf push dec adc nop push inc adc popf push inc adc xchg push dec adc xchg push dec adc xchg push dec adc pushf push dec adc xchg push dec adc xchg push inc adc popf push inc adc nop push inc adc pushf push dec adc pushf push inc adc pushf push dec adc xchg push inc adc nop push inc adc nop push inc adc xchg push dec adc popf push inc adc popf push inc adc xchg push inc adc xchg push dec adc nop push inc adc pushf push inc adc popf push inc adc nop push dec adc xchg push inc adc nop push inc adc pushf push inc adc xchg push dec adc pushf push inc adc xchg push inc adc xchg push dec adc popf push dec adc nop push dec adc popf push inc adc popf push inc adc pushf push dec adc nop push dec adc nop push inc adc nop push dec adc nop push dec adc popf push inc adc pushf push inc adc pushf push inc adc nop push dec adc xchg push inc adc xchg push dec adc xchg push inc adc xchg push dec adc pushf push inc adc xchg push inc adc xchg push inc adc pushf push dec adc nop push inc adc popf push inc adc popf push inc adc xchg push inc adc pushf push dec adc xchg push dec adc xchg push dec adc popf push dec adc nop push dec adc popf push dec adc popf push dec adc pushf push inc adc xchg push dec adc nop push dec adc nop push dec adc xchg push inc adc popf push dec adc xchg push dec adc xchg push dec adc xchg push inc adc pushf push dec adc pushf push dec adc popf push dec adc popf push inc adc xchg push inc adc xchg push inc adc xchg push inc adc xchg push dec adc pushf push inc adc popf push inc adc popf push dec adc popf push dec adc xchg push inc adc pushf push inc adc pushf push inc adc nop push dec adc xchg push dec adc nop push inc adc nop push dec adc xchg push dec adc pushf push inc adc xchg push dec adc xchg push dec adc pushf push inc adc nop push dec adc popf push inc adc popf push dec adc nop push dec adc xchg push dec adc xchg push dec adc xchg push dec adc xchg push inc adc nop push dec adc popf push dec adc popf push inc adc pushf push dec adc xchg push dec adc nop push dec adc nop push dec adc nop push inc adc popf push inc adc xchg push dec adc xchg push inc adc popf push dec adc pushf push dec adc xchg push inc adc xchg push inc adc pushf push dec adc xchg push inc adc nop push dec adc pushf push inc adc xchg push dec adc xchg push inc adc xchg push inc adc nop push inc adc xchg push dec adc nop push dec adc pushf push inc adc popf push dec adc nop push dec adc xchg push dec adc nop push dec adc pushf push dec adc xchg push dec adc xchg push dec adc xchg push inc adc xchg push dec adc xchg push dec adc nop push dec adc popf push dec adc popf push dec adc pushf push inc adc xchg push dec adc nop push dec adc nop push dec adc nop push dec adc popf push dec adc xchg push dec adc xchg push dec adc pushf push dec adc nop push inc adc pushf push dec adc popf push inc adc nop push dec adc popf push inc adc xchg push inc adc xchg push inc adc xchg push dec adc pushf push inc adc xchg push inc adc xchg push inc adc popf push dec adc nop push inc adc pushf push inc adc pushf push inc adc pushf push dec adc xchg push inc adc nop push inc adc nop push dec adc xchg push dec adc popf push inc adc xchg push inc adc pushf push dec adc pushf push inc adc xchg push dec adc nop push dec adc nop push dec adc xchg push inc adc popf push dec adc xchg push dec adc nop push dec adc xchg push inc adc nop push dec adc popf push dec adc popf push inc adc pushf push inc adc xchg push dec adc pushf push dec adc pushf push dec adc nop push inc adc pushf push inc adc popf push inc adc xchg push inc adc pushf push dec adc nop push inc adc pushf push inc adc popf push dec adc nop push dec adc xchg push inc adc xchg push inc adc xchg push inc adc xchg push dec adc pushf push dec adc xchg push inc adc xchg push dec adc popf push dec adc nop push dec adc pushf push dec adc pushf push dec adc pushf push dec adc xchg push dec adc nop push inc adc xchg push dec adc xchg push inc adc pushf push dec adc xchg push dec adc xchg push dec adc popf push inc adc xchg push dec adc pushf push dec adc pushf push dec adc nop push inc adc xchg push dec adc nop push dec adc nop push dec adc xchg push inc adc popf push inc adc xchg push dec adc xchg push dec adc xchg push inc adc nop push dec adc nop push inc adc nop push inc adc xchg push dec adc popf push inc adc xchg push inc adc xchg push inc adc xchg push dec adc nop push dec adc popf push inc adc popf push inc adc pushf push dec adc xchg push inc adc pushf push dec adc dec jmp dec xor sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop sysexit pop cmovge stos int out adc lea jnp sub inc outsl popa cltd out xorl push idivl in xchg mov mov insl aas cmp test and clc int3 mov pop fiaddl jl,pn rolb (bad) pusha sub add enter add dec jp mov aad lea dec push lock pop in test int and pop fcom mov (bad) cltd sbb mov nop pop stos sub lcall pop fiadd and cmp fiaddl mov rep insb inc in ljmp lock mov sub ja je out jmp xchg mov mov dec int jmp cmp std push and jp xchg repnz cmp jbe xchg leave mov cmpsb pop enter inc cmp fcomp pushf pop dec cmp in mov lret psubsb or (bad) dec loop (bad) lea sbb (bad) mov mov cmp dec push adc adc pop dec enter js cmp and dec pushf sub popf andb mov xor mov (bad) into dec inc pop adc cmpsb push xor sub push inc lret das addr16 aaa fs pop scas jnp sbb leave lahf mov xchg xchg pop add dec pop in jge out rcrl insl and or and cwtl scas adc xchg fwait bound popa xor mull jp int mov jg int3 xchg stos sbb push cltd mov (bad) and sub push push je adc jmp nop mov mov out test repz insb xchg ss sbb push std ja out imul (bad) icebp cli (bad) pop cmp adc jae cmp push (bad) add movsl jle cmp mov loopne aad sbb aaa mov outsl sub xchg pop outsb enter js cmp and or sbb mov mov into jo pop ret dec push xor daa sub movsb sub lret das scas jnp sbb leave lahf sbb xchg pop pop add xor pushf in adc push mov and mov fwait cwtl aas popa stos jl bound mov jg int3 xchg imul faddl sub pop das sub je adc jmp mov mov aam mov repz xchg inc rol push fadd ss sbb imul xchg out cmp (bad) pop cs jae (bad) jae cmp adc fildll pusha push movsl jle cmp jb xor aad cltd inc aaa and outsl mov outsb sub dec or enter or sbb adc cmp mov lea or stos jge xchg pop mov out cmp and dec sbb xchg sbb mov imul dec dec sahf (bad) or loop xchg and mov insl lret faddp pop pop add adc mov icebp add adc (bad) out das jae insb push test in test js aam out mov or inc jb popf cs push sbb jle lahf inc cmc inc popa add lods adc rcr mov cmp (bad) les pop mov rolb stos jmp test push test sub push ret arpl jg sub pop sub inc mov push out in push xchg sub push mov sti and add dec or sub cmp xchg pop xchg sbb add push popa inc mull adc xchg mov aas lock xchg adc or xor inc mov mov clc cmp test jbe loop xor pop imul jl hlt mov popa in (bad) loope sub mov jae inc pop inc adc xlat xorl aad cwtl lods sti xchg les lods push mov and cmp jns (bad) (bad) lods mov inc or outsb ds in push repnz pushf add xchg fsubrl xchg (bad) mov es aam dec jno mov cld mov fstl iret inc dec test je sbb outsl (bad) sbb dec sbb aaa movsl mov xchg sbb lahf sub push mov sti and add dec or addr16 sub and xchg je pop jmp into in rcrb aad data16 testl stos xchg cltd movsl andl movb mov jle lret cmpsl test loope stos push fistpl andl ds mov push add add loop out mov lret dec mov rolb imul iret or add jbe out test mov mov shr stc lea jl jb lds (bad) frstor mov cmp add and fcomps inc ss outsb sub test lahf insl (bad) or mov mov hlt and fisubr pushf ret dec pop ret enter mov int mov popf test jmp out mov (bad) jno mov enter nop push pop add into je fwait jmp (bad) aad orb add popw mov xchg cltd xchg andl (bad) ja jns adc (bad) jecxz mov xchg imul inc stos out fildl sub and daa add push arpl mov loop mov rolb imul iret or dec sbb mov call mov push sub jb lds (bad) (bad) shlb jo xor fild aam cwtl inc ss xchg sbb and pop mov mov hlt cmp mov and dec faddp mov mov push pop (bad) cmc test flds push (bad) pop test push lods imul or loope leave dec mov imul shlb out jo xchg lock jns and push xchg test jae outsb cmpsb add rcrl xchg inc or lret xor (bad) lcall lret cs test sbb pop lods arpl dec loope hlt xchg xlat out push ljmp mov ret xor hlt and test sbb cmpsl xchg fsub in daa push sbb (bad) jmp push outsl xchg inc mov push out cld popa xchg and sub repnz mov es xchg xor lods (bad) jne add notb movsl stos in aam js insl adc cmp pop jns mov pop mov jl xchg push pop mov mov lea and sbb cld and popa push scas imul or loope leave dec icebp fs dec fldt ffree mov lret mov lock cmpxchg mov out test add movsb shrl mov or pop xor inc lcall lret jno fsubrl lods test dec push inc hlt arpl loope push xchg fcmovbe jg ljmp xor ret and hlt call test fadds ret jge insb jg std mov popf outsl push out xchg popa xchg mov sub repnz mov iret adc enter lods rolb add nop pop mov cmp xor in xor into pop insl mov jl dec push pop stos inc lahf xchg aad xchg push mov adc push or jne push adc dec inc lahf in inc mov lea test not jo cmp imul pop scas push mov lret repz pusha jmp loopne inc (bad) mov jno ja inc mov test rcrl out cli arpl pop xchg stos xchg xchg (bad) aaa clc xor popa jg sbb popf cwtl inc cmp mov (bad) xor lret xchg fcmovnb sub stos rol dec mov scas out mov adc cltd fmuls into pop xchg xorl outsl push fldenv out movsb mov test sub sbb mov and add jbe hlt dec pushf icebp add out sub call push sub aas (bad) setp cmc lods xchg xor mov adc jge leave xor push push (bad) dec jne in adc inc jp lea divl test imul mov jnp pop mov repz mov inc pusha mov (bad) jp mov jno test push pop pop (bad) je arpl pop xchg out xchg ret mov stos dec dec xchg clc iret mov xor mov int3 cwtl inc or pop popf push mov (bad) xor ja lock fild lret xchg fs sub lds cld dec in scas das sti mov fcomp dec fcoml into mov pop std or xchg pop outsl pop out movsl mov movsb mov test sbb jecxz add jbe and pushf shlb dec or sub subb aam (bad) jmp and mov das out mov in andl xchg lds insl push mov stc cmp push fldl mov ss xor out (bad) cwtl outsb pop shll roll mov imul stos lock mov or xor stos ret movsl lods mov or (bad) lret enter ficomp add cmc imul loopne xchg xor push cmp int3 in inc sbb js idiv sti mov (bad) stc out pop fldl xor dec jecxz xor sbb int mov adc inc out push mov and leave rcll mov sub hlt icebp lds cwtl fmull jne dec fmul daa loopne ds add push repnz testl xchg daa ss jl into jnp inc sbbl push inc push jp cmp fsubp mov lahf and (bad) xor push adc mov adc xor sub xchg cmpsb mov cmp xchg mov pop addr16 decb dec cmp bound scas pop dec jle lods xor sarb pushf aaa outsl cmpl pusha popa mov and lcall sahf arpl jecxz fnstenv sbb sub leave stos or sub fwait add mov (bad) stos popf and std mov aad mov das jb pusha and pop mov dec sub xor jge data16 push pop jns icebp lds add mov out fcompl jne fcomps loopne add imull lods repnz ret fstpt jnp push sbbl push or jp cmp push loope or and (bad) push jbe sbb adc ror dec mov adc adc xor cmpsb mov int3 les js mov dec sbb scas pop cmp xor pop dec sarb lods aaa outsl enter popa mov and pusha adc cmpsl xchg cli lcall cmc test jecxz fbstp mov sub mov mov test stos popf mov mov nop jb mov mov dec cmpsl pusha jo mov in sub xor jle data16 jge sbb hlt icebp cwtl mov out fmull mov enter mov jo out fs loop mov mov lret jmp inc insb or dec mov push jbe xor mov sub into rclb (bad) sbb and jg push data16 scas jno xor cmp add and xchg jns adc sub push cmp sub and lahf dec cmp pop mov cmpsb jae adc rcll cli test (bad) jne sub xchg in shl iret popaw jns (bad) stc lods sbb mov mov je pop lea in jb lds fdivrl les movsb pop bound cmp fbld jp mov sbb and insl xchg cmpsl dec sbb in mov hlt fildl mov jge ret in fisub aas enter mov jo icebp pop fs loop out mov lret jmp inc insb repnz or dec sahf jbe xor push sub into rclb (bad) adc jg push data16 inc add rcrb cmp and sbb adcl test dec push mov sub push and pushf and ret daa pop jae pop push push cmpsb xchg adc mov sar ljmp xchg in shl leave popaw or sbb mov sbb mov pop aaa jnp je fwait lea in js lds les bound cmp fbld jp movsl ss aam sbb and dec std dec imul fnsetpm(287 stos mov fmulp jns mov pop push stos push mov loope push in jge dec mov and push mov and push and dec call and ret and mov movsl lret (bad) push adc xor inc aaa mov sub repz addr16 jae imul nop (bad) sbb cltd stos fbstp inc sub adc cmp dec test dec jl xchg arpl add mov je jp inc jmp cmp je mov (bad) mov mov popf xor test jnp dec daa dec sbb insb insb frstor mov popf int out jo xchg xchg add cmp mov or adc cmp pop pop cli xchg movsl or fwait in xor faddl push jns mov loope cmp pusha mov sarb and ja and push and dec call and sbb mov movsl lret (bad) push adc outsl lock push mov xor sub lcall xchg add sbb pop xor inc sub ds adc (bad) cmp dec test dec jl xchg arpl add mov add jp inc jmp cmp je mov (bad) mov (bad) ljmp cld xor andb xchg fs jle sbb add int mov xchg out rsqrtps sub iret push les xchg es sub cmpsb pop dec inc sbb in pop jbe xchg cmp cmp fwait in xor fmul inc imul lcall sarl inc aad insl enter stos leave xchg testl adc inc fdivrs das jle cmp out es scas mov push adc mov xchg jmp stc ss add mov mov jecxz add je arpl cmp or dec sub fwait iret sbb and call sbb sub aas push (bad) xor xchg lock mov outsl xor jne push mov stos inc inc in in scas (bad) sti pop cltd jp in and jae mov test cmp pop or repz int nop movsl pusha lea inc xorl ja inc sub jns pop cmpsb mov cli (bad) dec ds xchg (bad) stc aam les int3 mov popf testb test rorl enter ret adc push stos dec shlb adc inc adc cmp out jle push adc fcoml std scas outsl hlt push dec xchg mov add and ss mov mov jecxz loop cld sbb add out pushf xchg pop sub dec sub and call or add sub aas cwtl (bad) insb xor fbld outsl xor or xor stos jne in mov scas inc sti pop in fimull mov test cmp cmp pop pop int nop movsl repz inc addl jno test (bad) pop ds or fisttpll ljmp shrl popa and cmp mov jle or add lods mov xor add inc (bad) adcl rcrl mov push or insl push and push sub push mov pop into push movsl mov adc jmp insb mov je in xchg pusha or aad test js cltd clc out aas pop mov mov jae lcall or lods (bad) ret jg lahf mov (bad) dec aam movsb faddp sarl in pop and pop mov leave push es cld insb push nop (bad) loopne test (bad) jl ret arpl sub std lock hlt outsb mov mov hlt xor xchg je imul scas movsl ja dec mov imul sti fcomps das mov mov or add lods mov xor cmp add addr16 mov test push push daa mov test in lds jge dec sub push and lea sub fs mov pop into push mov adc jmp orl enter shl into test js aad out pop pop mov mov jae popf mov or jnp jbe ret jg lahf mov (bad) dec aam movsb fisub xor mov pop push es cld insb leave or dec pop nop push repz xchg jl ret arpl cmp std sub mov mov out mov lret xchg and scas je jo mov dec popf mov inc sub sti fdivr int xchg cmp sbb data16 outsb or out mov popf lock sub jo data16 xor stos jno mov (bad) sbb mov cmp (bad) jb testl jge cmc sbb dec (bad) inc xchg xchg add mov jae inc roll jp aam ret cwtl push sti repz mov cli das pop (bad) jg dec xchg jp lea pop arpl jl imul lahf clc outsl pushf lret xchg out push push (bad) aas add les leave into xchg cmp xchg and aam dec adc shld fidivrl in sbbb out jecxz rcrl xor int mov push in sbb mov pop jnp nop mov and adc sahf gs imulb lods test lea and ljmp mov movsb leave outsb or push adc xor mov scas repnz icebp jo data16 xor push jno stos dec (bad) stos mov sbb mov jb testl jge cmc sbb pop dec cmpsl bound inc xchg cmpsb add (bad) out mov jae jns inc jmp fs mov lds mov fildll pop test xchg cli xchg jp lea pop arpl mov fsubl clc add push (bad) xchg add push sub aas xchg cmp xchg aam dec adc shld in pop pop stc (bad) dec or (bad) ja jecxz xor mov push push mov mov in mov sarl and jbe gs imulb lods (bad) dec out pop lea xor or sete add pop fistpll lahf loop lea popa loope sti sbb mov push jne and fwait bound in or cmpsb mov lcall incb ret dec or cmp out jae mov fidiv fldenv xor mov xor or int3 test cmp mov mov sahf jl xchg adc mov xchg adc add ret lds or test jae outsl clc pop enter popf mov pop ds cmpl sub mov add fs stos out mov xchg popa jmp cmp and imul aad les push aam out or stos mov loope cwtl fwait xchg sub cli leave sbb push sub sti pop icebp hlt mov push inc cld mov xor mov and imul adc movsb mov fbld dec (bad) test ret iret insb jp adc mov xchg inc add mov sub lea je mov in cmpsl push ja jbe nop scas mov cwtl (bad) or int3 test sub repnz pushf fdivrl mov lret lods adc sahf loop xchg xchg mov lcall sbb test clc pop std add outsl popf mov pop ds orl jns outsb and sbb pop into stos int out adc out lock out cmp cmp aad pop xchg xchg scas or aam push or out mov stos rcrb cli leave fwait mov sbb (bad) rcll sti pop push inc icebp mov pusha mov cld mov das data16 imul adc movsb and cli mov (bad) test ret iret insb lret fstl jmp mov xchg inc inc mov lea je fidivl mov jbe nop scas ja cwtl ljmp stc repnz sbbl fdivl mov sahf jl xchg adc xchg shrl rolb lcall ss pop std jae outsl clc mov popf or dec pop inc (bad) in jns outsb and xorb out into add mov xchg push jmp cmp and aad les push aam out or pushf jg rol mov ljmp dec inc sbb pop inc movsl adc xor in push inc enter and pop xchg adc jns pop push rol inc lock xchg adc jmp mov xchg cwtl aad and pop mov xchg push test sbb ss mov js lret sbb jle lret cmpsb fs and push xchg sahf addr16 fiaddl out loop je sbb or lods mov mov add test mov xlat xchg (bad) mov or jne in arpl pop call out stos clc dec fdivrs dec cs les cmp adc jo jl hlt or or push mov (bad) add ja push fistl jecxz inc pop pop sub or lahf cli inc les sub pushf jg rol mov mov int inc sbb inc and (bad) (bad) jmp add jae popa aaa add add add cmpsb add add add incl aam inc add inc add inc add add (bad) (bad) incl add add push inc add (bad) (bad) incl add add cs add add add cs add cs add cs add add add add add add pop adc add (bad) (bad) incl add add cs add add add cs add cs add cs add add add add add add or inc add (bad) (bad) incl add add cs add add add cs add cs add cs add add add add add add adc inc add (bad) (bad) incl add add cs add add add cs add cs add cs add add add add add add jl inc add (bad) (bad) incl add add cs add (bad) (bad) incl add add and nop and faddl add add and inc add inc inc add add add (bad) incl add add cs add add add cs add cs add cs add add add add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call call movl mov mov pushl call mov mov mov pop pop pop leave ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call call push lea push call mov mov mov pushl call lea call call mov movl lea lea call movl lea mov movl lea push call mov lea call fld1 push push fstpl fld1 push push fstpl fld1 push push fstpl fldl push push fstpl call fstpl fldl call fstpl push call mov push push pushl push call mov xor test je push push call fldl call fstpl pushl call mov lea call cmpl jne push push call movl jmp movl mov mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl pushl pushl call neg sbb inc neg mov lea call lea call movswl test je mov lea call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl fwait push jmp lea call lea call lea call ret lea call lea call lea call lea call lea call lea call lea call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call nop mov call jmp ret int3 int3 sahf sahf sahf sahf insb xor (bad) (bad) (bad) (bad) (bad) ljmp add add add cmp add inc ss push ss bound add dec add xorb add ss nop ss test add mov ss fdivs add ljmp add aaa add push aaa add mov aaa add xor add dec aaa add push aaa add outsb aaa add test add xchg aaa add popa add andb cmpb add (bad) aaa add fidiv add lock add add add adc add and add lods add andb xor add inc cmp dec cmp pop cmp mov add outsb cmp js add mov add add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add push imul xor mov pop popa fs data16 gs xor rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo mov pop popa fs data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa inc imul push add dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul roll pop pop jbe popa dec outsb push je inc add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add lods add jbe popa inc jb gs bound add bound jb gs je 