mov pop sub push aam cmp or mov xchg fimull push mov rcpps jae lahf push mull mov or or sub jmp in xor and out pushl and push push ror int push or cltd xchg movsl subl in lahf adc stos test lds lcall sub mov dec test enter inc pop jp and add call push in push xor (bad) or jg outsb bound insb lahf push add push jmp and arpl aas xchg push fistl scas addr16 (bad) mov mov adc xor pop (bad) push cmp add rcl mov pop pushf mov cmp fldt lcall pop mov dec or add dec jae inc gs outsl outsl outsb push gs imul add jmp stc bt stc cmp pusha lea je cmc cmp call clc pusha test xor pushl movb movl lea call jmp lds out push sbbb sub sub add inc stos pop addr16 and arpl fwait mov loopne,pn mov lds scas mov divl cmp out (bad) sub sub in jae sub aas jle sbb or jo push cwtl inc xchg addr16 add mov iret jno icebp cs xchg dec lea call pushf jmp lea je jmp pushf movw pushf movl push pusha movb movb movl pushl mov lea jmp add pushf pusha push lea jmp lea jbe bsf ror shl mov bswap shld btr pusha add add movsbw bsr mov lea ror ror setae add shl (bad) icebp movl or mov lea clc bt cmp push call pushl popl movl mov mov movw pushl ret mov stc inc mov mov mov faddp sbb pop aas rorl imul xchg xlat fnstenv in test addr16 dec das jl fwait adc sarb out xor cli sbb repz and mov push mov jnp cmp add inc iret jl cld sbb out or push adc jle sbbl push dec pop xorl sbb (bad) sti xorl push cmp lds lods (bad) or add (bad) movzbw pusha jmp dec dec jno lds (bad) aas mov sbb data16 sbb sarl hlt jle xor and mov out pop inc into sahf dec xchg jl es dec stos std fwait iret sub add cs frstor inc fwait mov js js mov lock leave fisubrl in mov jl dec in sbb dec pop dec insb push fs push lret xchg (bad) xor mov sbb data16 fld fnstsw int (bad) and fidiv jbe in mov and test cli (bad) loope fmull sbb cmpsb sbb cld mov out add cmpsb cltd or int3 jno out xor jge pop stos sbb sbb mov cmp arpl add pop pop (bad) mov or bound cs fldl clc (bad) jne push sub and loope sbb sub xchg add or jb sbb rcll xchg push xchg jae lret icebp gs mov fbstp dec pop sub (bad) ja addl loope or push dec sub js push std sbb sub stos jno das push int push mov leave xor inc popf sbb and mov xchg out jns and mov int3 ror mov roll push sarb fs ja call push call lea je call add inc gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl pushl or pushf lea je bt test clc cmp push push pushl ret repnz add sub jl orl aad inc loopne jb shl ljmp mov aas andb (bad) cmp insl mov push std inc hlt mov and pop push fucom sub mov in dec js hlt jae fsubrl pop into arpl sbb or mov cli and outsl xchg mov sbb lds dec js (bad) mov cmpsl clc jns push or sub mov cmp jmp popf add bound mov out fldenv cld push sub sbb pop jmp (bad) xor cmp shrl push xchg clc or call call ret mov sbb fxam notb jns cltd (bad) ja xchg pop (bad) call ljmp lcall popa mov ret cmp fwait add das dec adc testl mov vpbroadcastb inc data16 hlt push sub aad or shr mov dec fistp xor repnz xchg pop hlt dec lahf sub test in adc lret je push nop jne xchg out popw addr16 sub pusha mov jmp cs out (bad) call xchg out adc cs jno mov jno in jno stos pop pop sbb mov in pushf dec testb add pop mov jecxz push or add jg dec std sub dec lods in notl mov push jge inc mov pop addr16 dec xchg inc cmp jmp xlat push mov xchg add inc xchg pop cmp arpl or xor and popa lods icebp adc push gs cwtl out xor mov add mov mov or test and mov jmp call mov loop and in xor push clc imul mov imul movswl mov stos push mov stos mov push push aas sub adc sub push sbb jbe (bad) mov sub loope jmp dec xor hlt push dec or sbb iret data16 and push dec mov cmp inc pop mov (bad) scas lock cmpsl dec jo adc fstpl pop repz repnz push adcl in jmp (bad) movsl jo cmp inc lcall add test dec mov shlb repz adc add inc test xchg dec sub and push sbb ja cwtl jne mov loope pop (bad) push jno ljmp lds mov shrd shr bsr mov test mov pushf pushf or movb lea je xadd add stc not sub rol shr pushf mov shld add btc movzbw add xor btc shrd sub mov bt jmp call inc xchg movzbw mov setge movsbw dec mov inc dec pusha mov call neg sub lea movsbl cwtl mov lea call lea jae jmp mov lea xchg setno pusha pushl mov movsbw mov movsbw setae jmp lea je clc jmp adc aas ret aam sbb iret jo pop inc cmp nop pop loopne hlt ja ja mov int3 jge mov test or fild dec or cmp fstps sbb or xor pop (bad) ret mov sarl or jo es imul (bad) or sub outsb scas mov push test lock movl es xor pop dec push inc test mov loopne pusha test cmpsb pop mov ret ret test sbb push push add xor fildl xor push push es sub shrl nop in xor or jp xchg arpl jle pop roll or pop add out lods repnz cltd repnz test xor (bad) jo es adc sub (bad) cmc leave push push mov mov pop (bad) je dec imulb inc loop (bad) mov mov insb (bad) lock and cmp dec (bad) adc inc (bad) or clc addr16 inc push mov sbb jo push stc jne imul fnstcw es aam add into bndldx dec xchg cmpsb insb repz aad test cmpsl pop mov adc test mov ret test mov push cld arpl aas xlat or push jno (bad) jmp or (bad) fcoms loopne mov (bad) fldcw or sbb adc adc push dec dec push jne data16 lods (bad) xor ret push sbb mov (bad) mov inc push and cmpsl idivb inc test (bad) mov pop mov dec mov out sahf loopne fnstsw pop jno mov jle gs jecxz sub cmp into (bad) hlt xor scas jns pop cmp dec repnz cmp nop xor mov jg push sub xor ja repz dec xchg rclb xor adcl cs arpl lcall sbb aaa sub xchg dec (bad) mov mov adc inc or enter cmp mov mov adc daa pop pusha decl aam sbb dec push jno (bad) and movsb adc cmc mov enter aas enter add aaa (bad) outsl adcb iret data16 inc fsubrp jno out xorl mov push sub je or and jmp lea jne push call stos xor push cs pop sbb (bad) sbb jl test rcl or in cmp push movsb sbb jge mov (bad) jl loopne dec xor dec jbe pop cmpsl pop lret hlt xor pushf xchg scas aaa out add push movsw jp push sbb (bad) inc pop mov int3 jae fnstcw push aaa jae jo fld (bad) in nop ja jb mov sbbl jecxz sub xor adc lock clc test (bad) clc test and inc xor cmp push fdivs lock movsl pusha mov rcl ja mov stos adc sub fiaddl push mov jb mov xchg and adc and sub imul jle cmp aam les pop incb loope rclb sbb inc push bound ljmp enter out scas rorb iret pop pop into push or push (bad) std push add jmp ja cltd xchg inc push das mov mov cmp stos adc loop push jmp rol cltd (bad) sbb lock cmc cmp pusha jno frstor mov push mov int3 and test sub xor mov add shr push mov push jmp mov fmuls (bad) xor mov movsl aad imul mov in pop pop xor mov lods cmp push test nop loopnew mov sub aad or mov xchg mov cs jmp xlat (bad) xlat in repz add out btr fnsetpm(287 and xchg xor leave push enter mov and jnp ss mov hlt cltd mov sbb popf cli test adc mov xchg pop jl mov lret adc into mov xchg lds sbb cmpsl xlat arpl xchg jo pop cwtl cmpsb sti mov add dec push mov add in jge add inc fist repz movsl mov pop test push xchg pop in les sbb mov mov jo test cld fsub fadd lret adc repz jg jmp push es fisubr ffree movsl push sub pusha movsl mov in imul cmp inc jl pop push pop fwait pop outsb out jae hlt sub mov and inc cltd lea xor ja shll or test pop xlat push push into icebp sbb cld mov lds fisub das adc hlt mov xchg jno jecxz or or mov push add movzbl xadd btr mov shrd setl xchg bsr movl dec sbb mov xchg cmc dec mov movw bts call mov jnp adc mov jne jne push insl push aam insl repnz push out and clc inc popf and imul cmp sbb sub pop cmp xchg in xchg push stos repz mov inc mov add sub mov dec pop repnz stos sub jecxz pop push xor mov sbb fisubl mov jmp scas das mov inc dec inc inc push mov sub inc adc xor add xorb push jbe sbb ja movsl leave cmc push mov add jecxz sbb sub mov sbb dec adc dec shrb add inc pop pop and mov adc cs xor dec data16 inc cmp xchg lods les xchg mov mov add inc in fimull xor fsubs cld (bad) mov dec cli test and stc pop cmpsb stc cmp adc gs mov mov inc std mov idivb cmpsb sbb sbb push movsl sbb cltd in shrl icebp xor push iret dec cmp addl int3 xor inc and loope dec lods jecxz addr16 loope xor sbb jp xchg ret in mov into adc cmp daa ss fwait jno loope push popf and iret mov push mov call setbe mov setne inc inc pushf setno mov call jge fistp sub sbb enter cmp mov les mov mov jmp sbb or data16 in outsb mov repnz in push mov xchg rcll fs dec outsb nop dec mov xchg into fist test pop jl jae xchg aaa cltd and cmpxchg and adcb inc mov jb dec pop shl pop in xchg inc pop pop ljmp out jl xchg lcall jne jle fwait (bad) enter cli mov pop cmpl push jno stos sar mov push inc fstpt outsb rcr sub cmp shrb data16 in xor jae mov (bad) xchg test iret addr16 imul and dec mov aas push push jle push testb (bad) cmp (bad) mov cltd rorb mov inc int in xor mov fbld jbe bound sub dec xor mov mov std in repnz sbb cmp sbb ret jl jecxz lock fist inc and pusha lea push pop movl lahf setbe lea movsbw lea push call mov add setns not mov not dec lea jne stos mov jno push pusha mov lea jmp lds add (bad) das inc cmp in test aaa cmpsl shrl js and mov jl pop xchg jo mov and (bad) xor sbb mov aas add cmovne pusha and (bad) or arpl lret je das out out dec nop cmp or sub xchg jns into call push lret in stc inc jae sub and sbb pop push pop pop shrb cmp jmp hlt lods icebp jmp add adc sub xor push and push pushf test xor add pusha stc or pusha jmp movb lea jge push jmp lea call pushf adc push pushf pushf jmp mov call jmp xchg xchg lods popa mov and lcall jne push test loope dec shl repz hlt mov fadds pushf jecxz ficompl push sahf movsl movsb and xchg fdiv sahf lods adc mov or rcrb and fildl fidiv xor mov fwait popf imul pop fbstp sahf sub mov sbb jle mov je pop gs mov adc inc jge repnz and hlt imul out jno fimul cmpl push mov pusha jmp (bad) push lods cmp std inc push les jo xor cld cmp jb add jne div test mov jb aam out sub dec xor js int3 stos mov movsb push mov addr16 mov cmp cmp (bad) dec (bad) push int inc push stos push xchg enter mov fwait lahf test pop movsl pop call inc pop shrb jg fadd pushf inc or or sub inc cld cmp arpl stc leave loop mov and lods mov push leave lea (bad) jne pop inc les (bad) push xchg push dec dec mov xor sti or and scas outsl ficom dec sbb add in adc mov mov mov sbb jbe jbe mov fninit hlt cmp rcrb sbb mov inc insl pop or orl (bad) mov dec push fsubrs stc xchg mov mov and ljmp push rcrb mov sbb mov rcr inc int3 mov icebp dec sub enter cmpsl (bad) pop dec push out shlb and mov pop fnstsw loop and or icebp adc std push jo,pn sti in sub inc push jno fsubl les shl pusha pushf pushf call cmp dec ja ljmp adc add cmp inc mov in (bad) call (bad) cmp inc pop and add mov mov shrl jecxz cmp test xchg sub cmpl fisub adc ljmp aad lret (bad) cli mov les (bad) push ds repz icebp sub cmp int mov js shr std inc mul push cld inc fsubl das sahf inc clc dec dec je das (bad) mov test imul test pop in jmp jbe pop sub pop xchg sti sti arpl mov mov repnz xor iret lock fninit lods bound stos adc fs jp,pt iret rcl in fadds stc mov (bad) pop in xchg fild mov je fnstenv xchg inc lahf movsl popa jp sub out jge sbb (bad) jae push (bad) fs jg fistp test mov stc pop loope push dec inc imul jns fild enter sub push and dec daa jg mov stos std dec dec sbb subl sbb loop (bad) pop std push leave inc cmp int sbb mov aas cmp pop add fnsave mov cmpsb mov pop loop cmp jne call fs (bad) int3 sub jmp inc negl xchg sbb add cltd ret dec not inc inc inc call and dec jae ret pop insb cmp lret sti sub lahf push sbb and or mov lods pushf (bad) les cli cmp sbb adc push inc jp (bad) lods and loopne fisttpl inc and mov popl mov idivb push inc jg or std adc arpl scas ret mov icebp out push and (bad) mov dec stc push test add jae add add mov mov out stos xor xor jno pop xchg cwtl xchg sbb imul outsl das stos xor and push lea mov push and push mov adc and sbb lcall add es mov add fistl or repz inc adc test cmpsl mull scas (bad) mov pop mov push bound rorb sahf insb sarb inc push arpl mov test clc inc push ja fsubs pop pop jnp ret mov cmp movsl sbb je sarb fbld inc jl cmp hlt loope mov out aam fsub mov and xchg xchg push fcompp stos loop push or xlat mov frstor adc adc push jp sub clc cmp cmc push adc neg dec movsbl mov bt sub call rcrl mov lret (bad) jbe insl lcall cli (bad) push insl xor mov pop push rorb imull and pop inc mov lds mov outsb cli inc inc cmp cs in cld rorl xchg xchg std out xchg cmpsl mov and adc lahf jg push pop sbb movl mov push mov xchg cwtl cmpsb hlt mov int3 (bad) xor inc push jne arpl mov push arpl ret inc push xchg mov (bad) pop shlb lahf lahf mov adc insl rclb sub lods and or and ja xchg js xchg pop dec push test dec mov cli clc inc jl daa cmp jno,pn xlat iret rcr pop lea movzbw push pushf movsbw movzwl mov pop jmp jmp popf mov pop mov dec or js pushf inc pop jg xlat lret adc scas push mov sub cmp and out add data16 push add (bad) sbb xchg daa out (bad) mov and push fadd push mov stos test xchg movsl lock sbb (bad) imull outsl dec loopne xor in loopne in pushf mov in imul insl mov or test jg pop pop rcll fwait jecxz or and lods mov mov xchg jmp add test ja lret and clc ret mov pushl popfw push call mov and or or jnp pop mov jg mov push inc xor pop add pop xor jmp lret pop xor rcrl push xor call (bad) mov in ret mov jp test push pop loopne pop aam jecxz pusha outsl sbb and stos cmp pop jmp out repnz lods push notl jno cwtl out out add insl push xchg cmpsl js push sahf pop mov mov xchg test lods cmp jb dec adc out out add aad xchg imul dec subl mov stos xor cld and ja cmpsl sti jecxz out aaa sbb lea ror (bad) inc push fldt cwtl (bad) xlat addr16 js into jecxz int repz fucom mov jo add call pop daa cmp xor xchg mov cmp pop je fucomi xor sbb cmp movsb dec shrb inc orb inc xor push lea loope inc pop cltd insb jge mov mov gs rclb mov cmpsl adc mov test sub sbb es adc (bad) add cltd es pushf lea jb cmp cmpb jmp mov or or xchg out fsubrl adc lcall imul jno movsl jp cmp jecxz add and or cmpsl rorb or mov sbb cmp and out xor jecxz rcl cld aad (bad) jmp icebp (bad) mov in mov sahf add push mov mov inc mov loop xchg or sbb push cmpsb jmp mov mov notb or cs dec xor test jo push ss jo test xor out sub push mov fadds push das and sbb cmp mov and inc mov xlat pop shrl andl inc inc push sub dec ds mov jg inc jmp wrmsr sub xor cld jecxz sub and xchg dec aam mov ret jno aam (bad) xchg mov popw call mov icebp ljmp jmp (bad) call dec sub dec cmpl adc xchg add cmp insb data16 ljmp sbb cmp pop inc leave push dec xchg jbe out xchg xor test sub mov pop jecxz ret and lret mov push fucom pop mov xlat and js lret je test push mov call adc adc and pop or cmp inc cmpb data16 into sarb dec adc aaa nop dec mov push movsl jno shrl add mov pop js cltd inc mov sbbb idivl push cltd out adc jbe mov mov dec push push xchg jmp dec (bad) jle xlat lods test pop mov mov sbb mov ror fcoms mov or subl lret xor mov (bad) jl or mov push and popf test mov pop js mov pusha (bad) lds xor xor mov lret pop inc mov out out jnp mov xlat dec dec cld mov scas outsl imul sub cmp arpl mov mov fs push nop jns pop std jno mov xor adc in sbb in mov mov adc mov xchg xchg mov hlt mov jmp fnsave mov mov sbb xchg (bad) aad mov icebp lock and mov pushf xchg cli (bad) xor cmc cmc imul add lea loop cltd pop mov push dec mov movsb shl mov ljmp sub les cmpsb cltd inc fisubl xchg (bad) daa mov rcrb or enter xchg je femms push mov aad out inc mov sbb mov (bad) fbld adc (bad) fwait xchg loop dec mov mov xchg movsb test mov fsubs imul mov data16 mov fidiv push add test (bad) xchg mov adc mov ficomp sub cmp mov jae mov xor and cmpl or jb xchg mov fild jge rolb idiv (bad) std stc jno sbb cmp mov xor pop imull outsl out nop (bad) insb js movsl inc psraw inc repz add or fdivl dec mov push pop mov icebp dec sar stos in test cwtl (bad) mov dec mov shll jb dec mov dec cmp mov mov insb mov sub xor addr16 mov jno das mov out mov out dec adc cli dec mov mov loop push mov push adc xlat out arpl movsl cli inc or jmp mov pusha jecxz add mov mov es test insl inc dec fsubl adc repnz sub mov dec mov iret ja push mov scas je int3 fs pop cli cmpsb pusha mov loop stos in cmc faddl xor xor ja push js sbb loopne or mov xlat out bound sub inc mov stc xchg jmp daa enter test mov cli orl movsl (bad) test out out data16 pusha cmp and mov dec sbb lods jbe (bad) mov mov cli and stos aam nop or mov jp push xchg mov and cmc pop std movsl mov mov sub psubq xchg and sbb popf sarl into xchg mov cmp nop jg subl adc leave cmc lock jno mov add sahf stc icebp movsb in xchg rclb push shll cmpsb pop add add out mov insl enter fs sub popa mov lret dec inc jno es push add xorl out lock mov jle int3 jge aam sub xchg fdivrp push push mov dec add mov mov std int3 imul mov mov push fmull dec mov out rcll rclb mov or dec in push daa mov pusha xchg and adc dec sub mov in es je mov call nop popa xorb inc pop xchg arpl sbb lock and enter xchg movsl andb cld and popa mov and jo mov mov pop enter pusha jge cltd insl mov and in mov inc fld icebp jns lea xchg sahf xor ss push pop inc sbb out adc (bad) cs in xor es mov fcomp iret test and pop pusha outsb inc std jno jns pop int test es jno cltd ficoml mov jg xchg jns call daa cmp imul push mov (bad) cmpsb push data16 adc es mov jg (bad) stos cmp sub sbb jbe push sbbl ret aas xchg mov adc loopne sub je and outsl lahf out out (bad) mov jle cmp aaa add pop cs fisubrl les push and or add cmpb outsb pop je push add push inc ss jle lds aam pop out test or ja xchg push mov push loopne adc adc test cwtl and lds in data16 push fsubs addr16 pushf std push fild xor and xor nop push dec add out sbb addps std and bound push loop and outsl fldenv ja ja ja ja ja pop sbbb xlat or mov nop mov (bad) mov mov jmp jle xor xchg pop push loopne cs xor test mov fs fimul (bad) ja xor fmull xchg and jle lahf sbb pop inc mov sahf popa mov ja xchg hlt std loopne andb dec dec lahf sbb inc lahf addr16 push pop fldl add insl and push aam aam mov push pop pop jo add loopne pop std test aas xchg xchg (bad) paddw gs mov pusha andb mov inc inc xor dec adc cmp add inc bound inc push ss and call std inc and jge mov mov clc jns fsubs movsl (bad) cs jg mov mov xchg aas ds cs adc (bad) icebp jns movb jns pop pop aas jg popa aaa (bad) sub mov add das mov fimul xchg pop inc fldcw ljmp mov jmp adc push in lods jecxz sahf pusha fadds rol lahf stc icebp out bound cltd rcrl pop cltd mov mov dec inc cmp sub sbb mov call enter test cwtl nop mov push dec inc cmp sub sbb mov out out xlat mov scas cmpsl lahf xchg mov outsl addr16 push mov das daa pop pop mov out out (bad) mov scas cmpsb sahf xchg mov outsb pop push cltd dec inc ds cwtl repnz cmp in in fst int mov xor popa imul pop mov cmpsb inc push bound addb adc jp inc lds cmp push in inc insb and xor addb mov pop pop icebp pop outsl rcl addl inc aas push lahf nop pushf mov fwait and cmp out std rcll mov rcrl xchg pop adc xchg push pop ds les pop (bad) out sahf push call pusha arpl xor mov (bad) cmc xchg inc and sahf adc inc aad pusha xor movsb pop mov push inc mov (bad) mov test cs cmc popa (bad) xor addl movsb pushl push jb idivb ret cmp and ret jg inc mov push push xchg mov and rcll test pushf rorb inc pusha fnstsw inc ds jge cmp enter mov std jle jl dec daa xchg test xlat inc jecxz mov ja in xor and xor push test es fisttpll in xor jl cwtl rclb ds sbb mov and (bad) sbb push (bad) notb xor loopne push arpl out xchg jg cmpsl xchg ss cmpsl std mov inc lock jle jno xorl adc mov stos pushfw es add adc xchg cmp cmc aad mov aas pop or add inc data16 fiaddl (bad) mov and sarl sub sarb cwtl mov push ret and push mov jle iret out out xor xor sbb pushf addr16 xor jb pop inc push push pop testb mov and cmp stos pop mov out xchg cli pop jg adc jle or into (bad) adc xor jle inc sbb jg inc cs ds and into movsb jle out out sahf cmp (bad) outsl pop jo mov xchg jbe test mov push (bad) test inc incb cmpsb inc and jne add cltd xchg fwait pop cmpsl or bound and nop sbb sbb sbb adc and xchg movsl pop fsubr loope shlb mov daa rorb mov mov loope nop mov movsb dec popf in movsl sbb xchg shll aas cmp add ret js push lock (bad) dec jns (bad) pop in inc ljmp push fbld notb es outsb pop jo ffreep aam ss dec aaa inc in cmp jg dec adc (bad) (bad) aaa dec xlat xchg push mov cmp out popa sbb testl mov mov fsubrs cwtl hlt (bad) cmp (bad) sub sbb or and stc add pop test mov xchg jne popf dec cmp pop xchg loope jns sub adc xchg xchg lcall out addr16 imul mov ds call mov es in dec jno and mov xchg pusha stos pushf mov outsl and popf inc xchg cltd jge shlb scas mov or data16 add adc xchg xchg xchg mov mov mov pushf xor and bound sbb sub int mov jge insl mov cmp sbb hlt in in (bad) int3 les xchg mov pop push dec inc cmp sub mov sti repz mov mov fwait xchg mov mov cmp sub mov cli repnz mov lcall bound cmp sub mov stc icebp jmp leave sarl test fstpl push jl decb (bad) pop or jmp mov es jle mov das xchg push in mov bound lahf push jecxz icebp test pop jle pop mov pop xchg lods lods add xchg add lahf push addr16 (bad) sub mov mov (bad) jle adc add or data16 mov (bad) outsb insl jmp ds loope push mov dec and (bad) sbb pop sbb jmp cmp cmpsb xorb xchg movsl mov xchg fisub jecxz jle loope fimul test jbe sbb lret xchg jae aad xor int int insb or out pop and sub mov daa cmc mov mov ss xorl push std and fisttpl jo out mov test xor cwtl xchg lret ss pop adc xor lea sbb xorb pop fs lds jg popa std xchg add pop fcomi xchg push mov and loop daa sub ds push out test cmpsl test xchg push sbb inc gs push pop jecxz push adc push push (bad) lock or sahf jmp pushf movsl bound lock fcom jge add sarl loopne jg jbe,pn xchg addr16 xchg or jbe cmp pop jo (bad) push mov popa js fsubrs pop cmp adc lds add pop testl (bad) ja sbb cmp gs mov mul popa and add cwtl ret pop push add cmp arpl stc xchg fcoms sbb loopne rolb testl pop xchg and push sub add loopne loop leave fiadd inc xchg popa pop mov sbb das dec pusha ss arpl xchg pop les and sbb (bad) aaa cmpsl cs inc sbb add xchg pop (bad) adc addb pusha sbb shl bound lret xor inc popa dec add nop mov add adc bound sbb loop pop and inc andb sbb jecxz pop and test test pop inc adc inc lahf xchg sbb pusha xchg mov nop pop arpl adc sbb (bad) scas xchg and addb out add test sbb push adc and mov mov xchg push pushf and dec mov jo dec and mov fnstenv outsb fcompl jp cwtl stc stos ja and inc mov jbe not sbb mov (bad) test in and std in cmp cmp mov aad fisubl jae arpl mov pop mov cmp sub or les sub lret push loopne add inc dec pop rclb stos sbb loopne mov es arpl dec jnp push rolb pop rorl adc inc mov cmc push pop aad and lcall fcomp xor inc and jo push add inc xor jg sub dec mov pop and mov xchg cs std and loopne xchg add data16 fidivrl add pushf cli push push add mov and mov pusha fcompl lock addr16 pushf mov xchg push push xchg cmpsb lock xchg addr16 ja and inc in es pop push shl aaa cmp ss fs fmuls dec mov push test pushf pusha cmp pop xchg pop scas cmp and push je adc add ds cmpsb and in mov test outsb jl movsb jp pushw push test sarl lcall mov addr16 and fs jge adc sbb scas pop inc ret dec fist movsl arpl push adc jle loopnew push aad pop push call loopne out inc pop lods pop xchg hlt lret movl sbb jmp pop inc testl push stos pop aam sbb add add xor stos pop fld jl sti pusha sbb xor add and bound arpl pop loop fidivr mov cmc aas pushf xchg inc xchg jge pop test sub and aaa (bad) mov and shrb and imul mov scas sbb adc (bad) loop and insb and andl push es addr16 daa in cmpsb (bad) daa popa and add popa push xchg pusha fcom xchg popa mov push and popa outsl pop jle and popa mov and les and popa movsl lds jg movsl data16 incb popa mov (bad) popa mov add enter pop nop mov pop mov outsl aad and sbb pop and incb and and mov popa pusha xchg popa ja (bad) cmp mov add sbb popa pusha aas bound mov mov pop popa push jecxz popa fs inc popa xchg and clc gs out cwtl push adc outsb xor (bad) push loop out sbb pop xchg sbb inc popa addr16 icebp sbb cmpsl outsl xchg xchg and loopne loopne mov xchg test sbb addr16 inc movsb loope cwtl (bad) pushf and inc popa bound cmpsl ret and arpl popf and sbb lahf in inc sbb adc and imul out es jg popa (bad) push sbb and xchg (bad) jb add leave mov mov mov das (bad) daa fcomps insb pop jg pop outsl jle movsl jp lea mov int3 cmp (bad) adc mov adc movsb icebp ds fsubr add mov cmc icebp daa shrb std push add aas ljmp daa xchg paddsb fs and add cmpsl (bad) jecxz mov and push mov arpl pop pop inc add mov xorl add icebp ss fisubl lods test inc add xchg sub fwait leave add sub jle add loope inc jle imull mov cltd ss jecxz movsb loopne andl and or loopne pusha adc scas sbb inc inc xorl adc movl jg out mov mov xchg mov adc js and adc faddl mov cmpsl pop pop adc push movb loopne aaa out out fstl je xchg xchg mov les je movaps popl loope xchg mov xchg out push pop jle iret rclb jns cmp mov add ds sub das mov push (bad) mov sbb adc pop sahf mov adc mov sbb push xchg das movsl pop cltd iret add cmp or mov push idivb aaa push stos aaa push jecxz push sbb push push aaa push mov dec mov je xchg movsb sbbl lock fistl mov adc or xchg shll or and add repz addb js adc fstpt shll fildl jecxz das or pop pop push jbe jb test shrb (bad) mov fisttpll cmc xlat das inc fisub mov out das in dec pop loope xor mov icebp push mov into mov jg outsl xchg popa push clc std es xor xchg jae dec out push dec inc sbb in cmp or pop shrb jbe movsb xchg fwait daa add xchg cmc mov nop call mov (bad) jle std push cmpsb pop push ja jp add pop push stos aaa (bad) std ds jbe push xor and fisubl jbe pop lret sbb subb outsb jecxz,pt out js adc push jp push inc (bad) icebp cmp jbe pop dec sbb and aad popf sti push jmp mov aas xchg out mov ds pusha mov enter cmc jp sub int and ficoml ds lret das push xchg cli mov sti frstors cmp test ds lods push outsb cmp (bad) dec lods add inc data16 outsl inc dec out xchg pushw popf insl fimul rorb xchg fdivrs cmpsl and outsl xchg sti push fcomps or inc (bad) ss pusha lods out and push rol stc nop sub das popa xchg xchg add sarb test cmp (bad) mov in rcr mov xor imul (bad) mov mov mov sti sbbb das jbe aam adc mov pop addb xchg popa in cmc jae mov hlt ja and in push insb push aam std cmc int jecxz flds dec pop push mov inc pop inc sub mov fcmovnbe (bad) cmp jo int3 js jmp nop mov pusha dec adc xor cmpsl aas push lcall mov mul loopne lods cmp push lret out and jae (bad) aad movsb pop adc pop pop loopnew jbe dec push imul clc js std sbb es push (bad) fidivr mov sbb jnp ljmp subb in jbe negb ss (bad) ret mov push jp sbb mov sbb lahf daa jnp mov in cmc inc repnz add mov (bad) sub fild or jg imul fnstsw sbb jbe out and leave push adc test and pop pop mov roll jmp in adc adc ret js push lret sbb lahf push js pusha add pop xlat lock fildl push dec pop sbb add ja pop add dec stc nop ds das ret xor xchg pop out insl movd jne add xchg cmp cmp sbb ds cmc fs xchg sbb adc mov pop push add repz adc cmp xchg and fist in xor pop jl or rorl outsl xor inc arpl daa pop sbb fisub jbe push in sbbl pop clc cmp jle fmuls push mov jnp pop outsb lods leave loope aad loope bound pop cld sub out inc inc push ror outsb loopne mov fisttpll xor cmpsb sub int3 cmp pop mov fmuls es leave scas int3 and cli cmpsl popa sbb pop mov jp xor push mov out mov jg nop inc lock inc das ja cs pop pop cmp sti ret xchg inc inc adc fiadd (bad) cmp pop push jle cmp xchg ja and roll ds shll nop fildll pusha cld sub pop adc pusha jge pop call mov push scas jge pusha dec sahf push sbb aaa int3 stc fbstp jns cmp cmp pop add cmp nop in leave pusha lea aam xchg add pop mulb fcomps jg inc sbb mov in push les cmp mov push clc sub fmull daa cli fnstenv xorb (bad) sti imul pop hlt in jg mov scas cs mov test mov in icebp out sarb pop cmc pop int3 jge stos stc (bad) cmp dec inc jg les std jle loope out pop jmp ljmp push bound push mov jg ret add and daa in std jp je or in mov mov icebp ret jne popa or jle pop clc aas shr fidivrl bound inc pushf rcrb adc inc in mov shrw jno nop cmpsb adc gs sub dec mov add popf fs scas in fcmovnb xchg adc sbb in jle push jecxz jg jg testb cli sbb out cmpsb pop pop int3 movsl shrb add xchg pop pop in aaa pop repnz mov lahf (bad) aas daa aad adc loopne inc pop cmp fsubrs adc jmp inc ret les xorb pop pop mull sbb andnps es and cmp xchg push add dec jne mov enter pusha lret mov fidivrl pushf pop add mov or (bad) adc push pop fnsave div sbb addr16 jae mov jbe pop push jb hlt xchg jnp nop push mov les ss adc cmpsl adc dec push mov adc jbe jg ret jl or push fild inc jecxz icebp jne pop mov mov adc clc sub add or adc fs sbb push lret lret out (bad) adc push setae aam out test or test dec aas rolb push pop xlat add add jecxz fsubl inc hlt mov add jl xchg xchg cwtl fsubs dec repz dec (bad) and (bad) cmc sbb out mov enter loope das into (bad) addr16 pusha push ret add hlt dec lea adc xor xchg inc adc fnstsw lahf out pop in das inc into andl in sbb das hlt iret add cmp xchg addr16 outsl aaa scas mov aaa jge push mov imull cmp rorb sahf jnp push rclb inc sti aam movb fidivl arpl sbb mov pop mov addr16 sbb (bad) xchg xchg (bad) adc sub mov push out and popa nop mov add movsb nop inc xchg add pop test sbb loopne cmpsl mov pop add addr16 sbb sbb addr16 loopne and xchg arpl (bad) nop inc mull (bad) lds adc nop loope addl nop movsl xchg inc pop inc sbb adc pop andb jecxz (bad) cmpsl out pop jecxz andb ret nop pop and pusha call sbb xchg adc nop add addl nop lds pop pop and add loope sbb test add cmpsl pop and test mov mov movsl mov movb pop inc push xchg mov lods push loopne pop fbld xchg sbbb test fbld orl hlt jns (bad) in jmp cmpsb and pop adcb test push clc pop shrb (bad) push mov jnp mov add cmpb nop call inc jmp inc xlat lods loop add or pop test push xchg inc mov dec out int add cltd jnp lods seta and mov cwtl int push xchg cmpsb and mov out inc lahf ds xchg and mov pop out (bad) mov and mov frstor loop and mov es loop shrb fs inc and shrb scas sub in cltd push cs sbb push sbb sub mov mov sbbb mov in cltd mov fs mov and sbb movsb xchg mov pop jb negb adc fcmovnb (bad) es pop pop xlat or loopne jle xchg outsb data16 scas bts inc adc cmp mov dec pop and movl test and lret sbb or or jecxz pop fldl add out iret lods jecxz ret inc pop mov (bad) cmc adc hlt or ja cmpsl inc xchg push add xor inc pop cmpsl fwait push dec mov pop xor cmp test pop sarb mov nop movsb out xchg scas insb jno and push mov dec jg or add cmp (bad) (bad) mov mov cld add push ret jbe dec mov mov pop mov and mov or ljmp sub hlt jge std aam fs push mov pop in dec add jle std fildl gs std dec xor jge cwtl add std add test inc and aam adc scas cmp nop cmp pop out jg xchg sahf push fstps imul pop ret (bad) adc data16 push dec pop pop xor pusha mov mov je in pop outsb xchg cmc inc jno inc je sub lea pusha jg cli push mov pop lahf popa inc dec movsb mov inc add push push cmp frstor jne mov js push sbb arpl int3 bound (bad) les add int addr16 mov cmp push adc rorl pop lds lahf cld sub xor xchg pop loopne push xchg xor sarl mov xchg popa mov cmp nop loopne xor pop popa pusha cmpl daa mov push add call add daa cli mov inc out sarb pop popa pmulhuw or int rcll xchg sub imul bswap das pop shufps sub nop popl mov pmulhuw lods adc out xor addr16 aad and adc in je pop pusha es adc setg std pop pop mov inc call aas cwtl xor shrb (bad) mov mov jb sahf (bad) std xor pop rolb cmp cli mov mov pop cs add ja pop out inc rol add rorl outsl mov popa xchg inc and push das mulb pop pop pop popa mov and and (bad) pop mov inc das fs ja test xchg mov popf xchg js sub loope mov js popf xlat adc adc or out inc fsubrp pop mov xlat pusha cmp mov inc mov addr16 and sbb out repnz add je xor sub ds std pop mov add js and push pushf and stos pop or inc lods in (bad) and data16 adc push xchg add xchg sbbl stos popw xor fisub mov pop xlat xchg mov adc cmpsl inc cmp and iret popf (bad) pop xchg pop aam call cmpsl pop pop idivb mov push mov (bad) les jno div call mov pop inc mov hlt adc add ja jno fnop xor cltd imul clc add push das inc incl ret mov hlt testb popa pop mov js (bad) adc ja fcom mov mov mov fild add pop push mov psadbw mov (bad) jns negb mov stos fnstcw pop addb jecxz scas cmpsb outsl out stc lahf mov cwtl xchg cld adc push pop cmc pop adc sub test int scas inc mov jp add inc push mov dec pop out jns jg mov adc mov adc in xlat das aad xor (bad) or adc ret adc (bad) mov es inc daa idivb daa or js cmc movb imul pushf popa addr16 jecxz cmpsb aaa movsb pop (bad) icebp pop out sub lds jmp inc in inc ret (bad) imul clc outsb inc and xchg in in mov inc fsubrs pop arpl insb sbb out mov jns orl (bad) push mov cmp dec mov inc jbe push or test sahf sub xlat imul aam mov lods fcoms add sti xchg jbe and xchg (bad) std adc xchg (bad) push frstor push cld data16 inc js adcl inc cmc xchg out jne aad push js sub add les ds mov mov add sarb inc pop lahf push les popa dec inc adc in int or xchg insl push mov cmp or js (bad) (bad) (bad) incb add test jbe mov stos adc or cmc hlt lock xchg inc in fsub pop xchg push mov icebp adc add popf es xchg aaa mov verr fsubrl xor push or and bound lods sub test pop xor add pop ret fs std outsb test div notb mov sbb imul adc pop std imul xchg pop or mov and inc mov sbb in in enter notl mov sub jge xchg xor sub mov cmpsl insl daa cmpsl movsl pop and and mov gs sbb imul movsb dec pop cmp mov es and icebp xor fildl cmpsb jle xchg jno pop xchg ficompl adc mov mov das jno mov xchg mov movsb mov pop int3 cs pop cmp sbb sbb movsl in inc (bad) pop movsb xchg sbb adc xor cwtl daa popf pop out movups push inc add outsl aas test xchg xor inc packuswb mov mov pop mov jl or sbb adc inc lock adc movsl xor lret sbb test jns jo and fsubrs andb pop xchg ja dec xchg fadds add xchg loop sbb and and ss movsb sbb rcr or jge ret mov and andl cmp shlb and add rclb cwtl add add mov mov (bad) mov test mov outsb popa pushf daa addr16 add ds and pusha fadds test movsb xchg scas out es xchg jl cwtl addb aaa out mov jns loopne add mov jns pop lahf add sub test and add pushf or jg jno pushf pusha out daa ss sbb fmuls out mov mov pop mov jecxz test dec add aaa test call mov add push xchg and mov out cmp mov add out gs test insl and emms pop inc mov inc test loopne jmp and xchg loopne in add addr16 popa lahf push loopne test test (bad) mov add mov mov (bad) pushf add test setns lahf add (bad) xor ss in es xchg xchg aam rol fwait xor daa lock aas les pop shlb in inc mov mov fldcw push inc mov inc popa xchg sub and cmpb inc insb push (bad) pushf (bad) mov insl out (bad) xchg adc pusha test jecxz cmpsb ds mov les xchg cwtl les and inc jge nop pop leave pusha xor popa inc xor popf and lock addl jne out fiadd aas pop call jnp loopne and stos pop add movsl (bad) lods pop out testb lds and xlat pcmpgtd xor fnstcw fadds in movsb and mov or adc jbe pop add je lcall arpl pushf add jo data16 lea mov adc push adc adc aam shlb sbb push jl pushf out xor and ds loopne pushf add popa pop sbb out (bad) mov pop cwtl popa roll inc adc dec std popa jmp jecxz sbb cwtl cltd pop call push push sub sbb gs add sbb xchg pop cwtl test inc out inc lods stos lahf xchg test and fmul lcall sbb sbb arpl pop leave dec int3 lcall (bad) and test or sbb dec jp or icebp int3 pcmpeqb (bad) sbb lahf and dec subl jg sbb rcrb or lods cwtl dec (bad) out push sbb fstps sbb jns sbb (bad) sbb lahf and dec subl jg or pop (bad) jb xchg push mov push mov cwtl pop call orl call repnz cmpsl fldpi dec cwtl dec or sarl (bad) scas nop f2xm1 cwtl pop cltd outsb inc and push stos fcomps nop push mov xchg test adc sbb dec nop popf and gs adc sbb nop fld1 arpl lds popa std inc ficompl xchg rorl call pop xchg fnstenv lret imul mov ds xchg sub xchg flds jg fild push sbb lods pop mov sbb (bad) sbb push sbb sbb cmp adc int3 sbb sbb (bad) sbb jp xor adcl lcall orl dec lods out adc es mov jg lds stos push jmp lds dec je f2xm1 mov out push dec jae dec movsl (bad) cmp sub movsl bound adc sbb mov sbb movsl stos jnp sub xchg fld1 bound lds les je in jbe in or call mov jle jb in popa out mov fisttpll pop in lods cmp mov out fnstsw cmpsl hlt cmp inc and rcr xor (bad) scas xchg leave call sub fld1 arpl lds scas xchg leave call fwait xchg pop inc loopne or mov pop out fdivs pop mov fsubs push adc popf (bad) scas nop fld1 arpl out push cli test mov pusha pop sbb fadds or enter adc lock stos popf nop fld1 arpl lds scas nop hlt lea ss (bad) cs and test cwtl pop call stos pop (bad) lret scas nop fld1 arpl in lret test scas mov jg sbb nop cwtl sbb mov scas ds sbb pusha cwtl addr16 jg pusha test arpl nop cwtl test xor ss cwtl sbb (bad) push push aam scas sub out lcall inc xlat call push xor rorl add nop xchg dec mov arpl dec sbb fisub jg aas mov xchg and (bad) fimull mov xchg daa xchg jmp ljmp daa or daa fst aaa icebp sbb jnp ss mov mov lock jmp pop das dec in xchg sbb pusha mov frstor sub push test sti sarb xor lock bound xlat lock push pop xchg inc andps sahf pop xchg push inc cmp mov test sbbb pusha adc mov test add vmread push jg xor jmp jno dec sbb mulb jl pop data16 and jge pop bound xchg sbb xchg repz cmp sbb push pop inc repnz cmpb mov cltd adc popa data16 push xchg pop insl push xchg mov icebp and int inc pop or rcrl popa es inc xor xchg inc xchg je loope jmp std adc xchg leave ja pop test mov mov daa jb sbb add jae jb sbb fsubrl sbbb rorb pop mov push outsb adc xor inc xchg and xor scas pop add inc imul test mov test cs adc iret adc pop sbb into cmp pop inc idivb mov jl popa cmp out xchg xchg out test (bad) mov leave icebp (bad) xor push adc xchg fnstsw sub or clc and xor repnz ss mov sub das pop test (bad) add jl sub inc shr add jb push stc fdivrs sub mov scas cld sahf ja imul ja push fild ss stos mov scas or or repz xchg mov daa aam les jmp enter sahf das push fiadd sub mov repnz cmp (bad) lods pop xchg hlt add xchg jge adc jns or xor and dec jo sbb xchg pop neg add mov push lds add sbb or pop (bad) fmuls mov adc sahf sbb adc fwait ss push inc cmp in and add sbbb (bad) mov sub (bad) adc mov bound cmpsl aas daa fadd inc cmpsl dec pop addr16 lahf aaa lahf aas pop xlat (bad) out cmp sbbb fs xlat cmpsb out lahf pop inc faddl xchg addr16 (bad) bound dec aas sub pusha and jl mov mov clc (bad) cs clc sbb xor jle cs daa movsl dec in ss aas ret (bad) sbb xchg lds sbb cmp xor aam ret or xchg cmp fst incl mov dec (bad) or push xchg and out sub push xchg adc push dec or aad addl fnstsw pop mov rcl jle xchg jl xorb mov jb inc jb adc push lock add add sub (bad) popa add cmp aam sbb call loop push iret bound add decl in dec xor cmp xlat les xchg out repz xchg cmp sub dec lahf popa push mov push pop jns sbbl ss add sbb mov cmp nop aaa sbb xchg sbb es nop fcomi cld cmp sbb push pop cmp movsl pop fs arpl scas lds pop mov fbstp and insb mov and jmp in or jge lock inc je nop and ljmp jg js cmc cld xchg cmp push leave aas jge cmp lods add push (bad) dec out movsb pop imul hlt aas xor ja pop ss (bad) pop lahf iret pop add aad sub pusha xor (bad) xchg test mov ja mov pop and ds pop add sbb ja outsl (bad) fmulp add out mov aas shll push adc hlt and inc dec inc mov mov punpcklwd pop sbb (bad) mov (bad) xchg cmpsl shrb and insb push inc in outsb inc lret (bad) addr16 mov mov pop data16 xor int adc inc out lods cld insl addr16 xchg cmp pop ja scas and xor in nop in lcall xchg (bad) ds nop cmpsl js icebp pop pop popl rol mov data16 and mov cmp mov push dec sbb in inc xchg fstpl setge or xchg mov xchg and inc lahf lods push cmp jecxz inc mov addr16 das push (bad) das or scas addl outsl arpl pop xor pusha out sub lods xchg cmpsl or and js pusha fdivr pop push mov sub mov adc fstpl adc lahf sbb pop pop adc stos inc addr16 dec inc pusha xchg enter jle rcr fist push cmpsl add mov jmp es in pop jl fiaddl xchg sub xor xlat cmp daa or cmc sbb aam or ret lahf test outsb or bound das mov cmp adc and xchg cmp pop out jle stos out div adc test xchg or push lret mov push pop xor icebp (bad) into inc adc lods adc adc int3 add rcr sbb into scas inc test xor inc add pushf dec jl rorb xor dec inc daa sti xor push js ja jge stos dec pop sbb push mov add cmpl aaa enter iret jecxz xlat pop mov dec (bad) inc mov clc xlat ds xorb ret or in mov orl add movb pop xchg nop jno cmpsl xchg aas popa inc addb jns adc jecxz pop mov or outsb or scas xor cmp push xor sub and sti ss inc and das pop xchg imul adc out dec std inc repz lods rcl (bad) lahf or dec les call dec out aam fimul sbb adc iret (bad) out mov std inc les insl add push in cwtl mov push mov scas jnp mov mov jbe dec pop dec mov dec add out mov mov insb mov ss inc mov js,pt popw add incb pushf pop inc sbb jecxz jns ss loop (bad) rcll (bad) inc lds jle xor adc pop repnz pop xchg stos scas daa cvttps2pi clc aad stos push test cmp xchg xor lahf push mov sub aad sti jnp mov cmp int je ss pop clc jg sbb ss sbb cli iret xlat and push xchg dec adc xchg or xchg sarb in cmp (bad) push pop ja add mov lods sbb out cld sub in dec out out xor add cmpsb adcl data16 pop and ss mov loop std adc inc mov dec or push js mov roll push push andb jle push dec push push inc arpl mov or sub pop std adc daa mov lret bound sbb ret stos sarb xchg mov lcall cmp ret outsl and and push cli push aam call das push lahf incb and push fldenv gs cwtl jo rolb jno push and ret and xor jg mov arpl xchg sub (bad) sbb push xor je push cwtl pop pop cwtl dec (bad) repnz mov and lcall adc cmp push pop les out xor adc outsb (bad) cmp incl push mov jmp add or sbbl push lods adc mov test lcall popf mov addr16 push roll stc pusha in js enter mov lds xor adc sub dec xchg pop addr16 jle push fadd cmp cwtl mov das outsl out rcrb xchg xchg dec cmp notl xchg cmp (bad) dec fsubrl loope xor xlat lock bound pop lock shlb xchg arpl (bad) lock aaa movhps roll inc sti sbb mov loop jbe inc popa mov mov inc jno inc js test out mov cmpsb stc inc jl ds xor imul xchg lahf xchg cmpsl insl inc std xchg pop maxps jns inc andb sbb push int packsswb insb mov xchg fwait das pop dec adc sub int mov xchg pop pop dec push and dec imul flds push push pusha mov mov in mov lahf push lahf outsl jg fbld lahf or jo fsts aas xchg pusha dec pop or pushf mov (bad) js int sbb sbb pop push out adc not clc pop dec sub jno cmp fcmovu sub and pop aam pop xchg sti jle mov sarb das sets ds imul adc xchg loopne out daa arpl jle jecxz pop lahf add ret out push xor add and addr16 cmpl sarl cld or sbb lds fistl xor xlat mov xor jge out addr16 inc dec mov lret notb ja xchg popa add data16 jo lds pusha pop daa je jle js cwtl pmulhw cmp aaa jecxz adc sbb cmp loop add push inc cmp fs push pop dec xchg fildl sti (bad) jbe popa repnz shlb add stos js inc mov sbb outsl out es xchg sbb rcl (bad) sbb mov xlat or cmp dec insl mov scas adc in jb adc pop cmp and orl lahf mov aad mov jnp mov sbb aas arpl dec add pop jg and pop insb rcll out leave mov into sub xchg push dec pop mov push lds adcb testl inc sub stos inc jg adc add rcrb fiaddl (bad) loop das aas push call inc xchg pop dec int3 cmp push add outsb dec pop ficompl add pushl xchg jle cli popa mov daa roll inc rclb jge fstpl (bad) mov subl mov push jns dec addl movaps add data16 js cmc pusha push das popa adc arpl dec push inc fistpll mov les xor inc pop inc adc inc addr16 sbb rol (bad) adc add ret sbb outsb jecxz xchg pop xchg adcb xchg xchg pop adcb adc adc push adc push addr16 sbb push rcrb adc adc xlat sbb (bad) jno jne ja jae jo je jbe jb pop hlt adc xor negl icebp xor adc xorb xor xor xorb mov mov pop popf adc sbb lcall sbb sbb sbb pop adc pop addr16 sbb pop fcomps adc sbb fistp fnstcw jge jg jnp js jl jle jp pop cld adc cmp lcall stc cmp adc cmpb cmp cmp cmpb mov xchg mov sbb or addr16 call pop or addr16 call pop dec call pop dec call pop dec call pop int3 call pop lret sbb call pop leave call pop insl call pop imul sbb call pop push addr16 call pop ljmp jmp addr16 call pop sub push pop sub addr16 call pop sub addr16 call pop stos call pop stos call pop test ja pop xchg daa andb es pusha pop loopne out out in adcl addb push fmull (bad) nop mov adc les mov add rcrb nop adc adc xorb mov cltd nop sbb xchg clc pop xchg mov orb sbb pop xchg rcl arpl pop (bad) push lds sbb (bad) xor or dec or nop mov outsl lock sbb outsl rclb enter test push xchg adc add (bad) push and fisttp rolb sbb outsl call fdivr lods movsl xor or and mov test jno in mov jnp lret xchg lds scas inc inc popf mov dec out mov pop xchg xchg inc arpl push jno es je (bad) loopne cmp and pop movsl aas inc imul out sbb addl stos out adc xor scas pop push dec mov mov out cmp or sbb js shll mov sub nop iret xchg push orb mov xchg cltd test dec outsl bound shlb cld cmp arpl sbb scas rcrb (bad) cwtl out dec arpl pop popa sub bound sub push shlb movb lcall jno xchg sbb orb addr16 push call mov outsl imul fst loope call fild pop movsb pop arpl pusha mov inc mov adc xchg inc mov sbb ljmp movsl jp mov mov addl mov in mov rcrl pop fsubrl sub jl mov cld xchg test ret loope mov in dec inc repz mov imul imul push mov mov mov mov dec (bad) mov movsl add or or fldenv jle das (bad) mov mov sub mov arpl and (bad) lahf cmpsb cli imul and mov cmp dec sti xor shll inc in xchg mov cmpsl fld inc mov std (bad) stos jg cmp sbb rcr xlat imul and mov cld shrl sub jecxz movsl xchg pusha popa gs mov sbbb mov sbb out dec mov jbe mov jno lret ret mov cli sub test repz (bad) mov jecxz xchg pop pop imul xor loopne xor mov in inc xchg jb pop dec adcl and aaa sub add jl cltd enter xchg out andl jle pop mov mov lds fcmovnb stos mov test clc or add and popf cmp push mov and add ljmp test add or pop mov add outsb mov rorb cmp mov scas inc push mov mov daa xor dec mov mov sti data16 or add add lods (bad) sahf xor mov pop ficompl push and imul or ficomp (bad) mov shll repz mov adc fildll cli push sub and mov push adc mov add cmp aad sub (bad) mov push mov mov and mov data16 jno mov dec outsb jle push testl ss enter mov aad and push mov flds (bad) xor and bound sbb mov stos das sbb sub out ret je mov notl shlb enter scas push mov mov loop incb xor pop ja mov lea movsb mov xchg popw cld mov outsl dec lret (bad) jo (bad) mov iret sarl mov add dec adcl mov sti dec mov mov xor into and xchg jo adc std push mov pop loop divl cltd dec jge imul xchg mov aad xchg xor dec sbb out repz int3 mov mov jp mov stos lret mov mov sbb or mov lock into cltd jo icebp lcall or jb mov test jbe dec cltd sbb pop xor loope pop dec sahf and mov movsb xor cmp aaa xchg or mov insb jmp aas outsl pop pop lret mov xor (bad) repnz cmpsl and loop out pop ret pop jnp lret mov mov test adc push and mov sub ljmp stos outsb fimull or push sahf adcl dec cs out cltd mov add xor jns (bad) cmp xchg mov and or and in movsl sub jecxz and fs movsb scas bound sub or daa test or and in and ljmp pop lods mov and sub repz mov mov xor arpl lret jle push mov mov popf mov jo adc repz dec lea popa mov mov mov les xor mov inc mov inc (bad) mov mov mov ss xchg xor insb or insl inc movsl mov sahf cmpsb mov mov loop mov and cmp pop mov pop sub cmpsl fs bound pop sbb dec mov cmpsl sub lret imul insl arpl mov movsb push movsb lods shll (bad) adc shl pushf jne das loop inc lahf cmpsl es pop xchg call andl push cmpsb lods in dec sub movsl imul in cltd mov das and dec shrb mov jno and or and sub sub loopne mov test or sub loopne test lea jae cmpsb or loop and sbb mov and sub mov lahf inc adc in das mov mov and shl bound in movsl (bad) in inc sbb shr cwtl lret orb stos xchg jne popf in jecxz test mov loop rcll in shll sbb mov push add mov nop sub cmpsl out ja mov push mov scas dec cltd sub adc xorb scas movsl push sbb dec or push nop adc adc add bound sub mov nop out loop test and lock clc sub xchg sub mov sbb xchg bound add xchg mov fsubs and cmp iret push imul or mov mov mov push mov test scas mov (bad) mov (bad) sahf lods leave push popf loopne arpl dec mov sbb iret and xchg mov cltd dec push mov outsl mov scas rorl daa pop scas out insb xchg ds push and (bad) cmp mov mov call ljmp sbb mov in js xor adc enter inc mov cmc mov rolb mov jnp mov repnz mov sub pop call xchg and (bad) mov movsl add cmc jb in pop lods in sbb lret vpunpckhqdq mov paddsw insb and jge mov mov mov jae xchg insb mov xchg mov mov mov xor mov mov mov sub dec dec mov in jmp inc jmp cmpsb dec pop stos mov adc mov and mov sub lods jle fs stos idiv outsb mov popa xor xchg mov and mov add andl push sub adc xchg mov and mov ljmp inc movsl add ret gs call jb mov mov loope jp bound mov sti push fidivl (bad) fwait (bad) loope mov sub movsl inc push pop outsl movb in jae (bad) pop dec movsl mov imul and mov std mov mov bound icebp mov cmpsl (bad) jbe dec adc mov pop mov inc or and add fs and (bad) mov aam mov mov int and push and inc mov pop insb cmc dec mov cmpl dec fildll mov std or mov jae adc cltd cmp pop xchg arpl aam ret dec xor cs loope repz xchg cmc pop mov outsl sti xchg jo inc mov inc cmpl ret mov daa rcr mov mov inc les jne mov (bad) repnz inc mov inc loopne or popf fdivs mov cmp test jmp out mov lods sbb ret loopne divb cmpsl add jo in mov jl das mov jae mov bound jecxz lret or inc out mov push fisttpl sub ljmp push movsb mov es cwtl ja les cmpsl addr16 push sbb dec cmc std (bad) sahf mov mov test cltd arpl mov xlat jg (bad) mov push mov cmpsb lahf icebp addr16 or cltd je sub gs jmp iret push add (bad) (bad) out fisubr jle dec xabort mov dec mov mov imul hlt mov inc lods and push mov sahf pop mov aas test inc mov xor push in repz (bad) in cmp mov ds mov mov and mov pop pop les test sub das mov stos out jge and cltd xor lods jg mov dec jge sbb movsb xor jecxz xlat sub in fs mov call loope mov mov ss enter fs jl movsl adc and cmc or sub mov out sub mov iret (bad) sub into data16 ret mov lods inc add int3 push lret mov and dec rclb icebp movsl dec cmc insb or push push incb daa movsl aaa sub inc mov lcall mov mov jns scas xor mov aaa mov testl jne movsb mov mov scas push mov out mov leave movsl inc push out mov lret xchg push mov and cs mov shlb sub mov push mov mov mov fbld sub adc divb loope (bad) out das mov mov cli test movsb jmp or adc sub mov dec mov sub mov frstor stc icebp inc and dec fs mov mov pushw aaa mov leave mov mov mov sarb test adc iret jg mov sbb es gs sbb movsl mov in inc lock shlb test and mov fsts mov loope mov add mov call dec movsb bound cmpsl mov sub leave mov imul cmpsb push mov cltd jmp dec or outsl bound pop or cmp cmc lcall inc es int3 lods push and sbb add std inc push pop and jb sbb lds lret push les inc sub mov dec push loopne and enter daa int pop mov js and push sahf add add dec repnz xchg and ds out andl mov ret push insl (bad) lock movsb roll int3 sbb lods out fs mov popa xlat cmpsb scas ror pop in cltd mov pop or lret movsl ja pop scas add lea mov mov jecxz or ds xlat add es iret movsb mov sbbb push test fsubl dec insl bound xor sub je sahf ret add scas (bad) xlat fldcw iret fstpl arpl mov jo sub int3 sub mov les mov mov xchg mov dec xor jnp sbb lods push imul xchg scas rorl dec inc cltd jmp lret mov mov imul (bad) mov in std jbe fnsave pop and mov and in test es sub movb movsb icebp or xlat es xor push push inc mov mov fwait cwtl mov in lds xor aas lea mov scas imul add (bad) test pop xchg mov insb and das loopne inc movsb mov push pop cmp mov mov cmpsl xor mov sub cmp ss ret movb push bound cmpsl mov or xor jo ficompl adcl mov and out mov and stos movsl adc mov movsb and mov and cmp mov xchg push push movsb push movl pop mov mov fsubp mov mov push addr16 push jno mov push push sub (bad) lods mov int3 loope mov inc sbb mov cmpsl fistp incb pop pop and addr16 pop popa mov popa aas xlat test mov stos (bad) mov xor icebp cld scas mov mov push mov clc test insb mov sbb xchg pop movsb add loopne or daa push stc mov sbb dec xlat and add dec lea insl push sub xchg and out les mov out (bad) cmpsl popa int addr16 cltd push fstpl pop cltd dec ficomp (bad) xor and cmpsl fmull sbb call cltd push loopne mov adc les push mov mov jge push fwait and inc inc cltd pop fcoml js cmp (bad) pop and mov jae imul cmp xchg and add dec mov imul jp dec mov mov mov pop mulb jle (bad) aad inc fwait pop aaa stc lds mov scas inc push lock adc jmp fistp imul jo dec cltd cmp clc ficompl and ret mov cmp stos and and sbb insl jno jae,pt mov mov xchg sub inc mov cmpl sub or loope pop lahf (bad) mov xchg jo jbe mov mov xlat repz add ret adc insl jecxz stos push mov bound mov mov mov test or mov cltd (bad) push rdmsr ret stos xchg loop and add inc mov adc insl sbb mov mov aas cli mov (bad) call outsb xchg mov mov jmp inc adc inc inc push mov jns cltd and mov into in push mov cmp out mov cmpsl mov int3 loope fwait test cli xor mov test and and mov xchg es popa push daa jbe sbb and mov gs mov and jecxz and addr16 popa jp pop loopne inc xchg and mov shll aaa loopne imul adc sbb call mov ss mov and arpl in nop das test and sbb mov lret aad cltd data16 mov lods jno arpl movsl mov es jecxz mov aam adc jae jge xchg xchg mov push jb (bad) ds inc popa pop mov imul cmc xchg aas cltd mov es cli mov daa shl outsb cmpsl push in es loope xlat cmpsb test mov mov and jecxz movsb xor pop mov mov popa andl shl mov mov cltd xor and loopne mov and sbb cmpsl cmpl mov cmp mov xor cwtl popa cltd jmp testb jg loope and sub lcall and push mov jae push mov and cmpsl mov out andl mov movsb mov outsl and aad push mov (bad) in movsl daa stos test mov (bad) jo mov fwait bound mov and loope mov and testl shl mov and mov daa dec out loopne sub pop es test mov push mov adc bound je mov daa xor popa xchg and cltd shlb push sbb mov and loopne mov xchg bound mov daa loop and outsb adc jbe pop in push popa mov int mov enter rcrl mov and ja mov mov sub sbb cmpsl mov stos out daa mov arpl bound and cmp nop sub stos fs and mov jecxz and sbb mov cmpsb bound mov and loope mov cmpsl mov int mov enter shl and imul cmpsl ja mov pop jmp sbb push bound and jecxz movsb hlt shll popa mov mov mov pusha cld and loopne inc mov test mov and fs movsl into lds es aas jne jno or cld mov hlt mov dec imul fs and gs movsl pop jno and loope mov sahf sbb mov fwait outsb pop pushf sbb add cmp mov sahf jecxz pop xor sbb aad mov mov inc add xchg bound mov js mov mov mov and (bad) jle xlat mov enter xor mov lock mov xor adc sub imul lods mov mov sub jmp mov cmp pop fwait enter sub and mov stos jne rcrl bound xchg addr16 lret in mov cmp and repz int mov cmp add and decl pop dec and cmp bound cmpsb mov cmpsw jbe psubsw mov ror nop cmpsl mov sub pop mov sub or mov lods test lret cli sub mov jbe push stos lahf mov fs mov movsb dec cmc stos and jge pop and mov aaa rolb sub or xor in adc enter mov pushf mov xor fidivrl mov jbe stc push sbb mov mov sub sarl mov inc cmp push imul loope pop sub mov sbb xchg cmp mov outsb cli xor cmp mov xor das dec jl imul adcl mov xchg mov push push push mov sbb sbb mov in or roll jle call imul mov pop pop lahf test or out sub pop (bad) cmpsb mov andb imul mov pop cli in mov lock aas in push jo xlat mov xor mov pop mov dec jmp repnz (bad) (bad) repnz mov cmpsl and add or jle mov mov scas fcoms push dec mov and inc adc in stos int3 icebp adc sti iret loope mov mov popa je and fildll jne mov hlt cmpsl pop inc push shrl jl fistp xor fwait test sahf push insb mov mov mov arpl add popf repnz push cld mov aad mov xchg inc cmp add xchg push cmp and push inc cs leave imul and nop xorl push cmp fcomip xchg mov jb repz sarl push push push jge adc adc rcll loope mov xor test aam lds ffreep mov rorl push (bad) mov add xchg add add jbe xchg inc mov aas popf adc xchg xor pop ret mov sub sub addl loopne mov dec test fs jecxz mov shlb xchg pusha mov and push pushf (bad) push fsubs gs or xor lock test xor cli lds (bad) mov mov cmp add adc push mov or in xor rcrl pop aaa or dec mov and mov mov out js cltd enter aad mov xor jmp mov cmpsb push adc mov test iret cmpsl (bad) (bad) (bad) sbb mov inc mov mov push jo addr16 mov inc movsl inc mov jo idivl aaa (bad) into fidiv inc or movsb jecxz cmc sarb mov dec (bad) rcrb and mov and mov and mov loope movsb mov leave cmp mov pop push and movsb pop jnp orl (bad) inc inc xchg mov mov sbb jge fdivrl iret sub sti push movsl sarb push or mov jp dec clc mov add xchg cs icebp aas jmp cmp fxch hlt repnz movsb push push cmp iret out xchg mov pop push (bad) mov inc jb pop rcrb mov mov dec (bad) mov cli jle inc mov jb sbb fbstp mov repnz add in jg std mov mov dec xchg fild cmpsb stc mov cmp lea lcall mov movsl cmp add loop dec mov outsb mov inc mov mov (bad) aad lds push jae mov stc dec movsl fcmove cmc cmpl mov xor and fwait and push and push lods in test ret test cmp shll stc lock inc dec inc push mov sub mov xor mov loope jge,pn push movsl ljmp sbbl and arpl mov mov sbb mov sahf xchg mov cmc inc push jae or into inc xchg dec sub dec mov call push push xchg insl mov pop repz insb mov addr16 mov xchg frstor xchg lock mov sub mov mov loopne mov pop lods jns jo enter mov xchg cld arpl negl mov jo inc mov out fwait clc imul lea and andb je stc sub lds mov clc cmp mov mov and mov xor mov mov mov jg xchg adc insb and mov push inc push sub movsl cmp stos cltd test inc pop outsb jns imul into dec lods notb cmpsl sub and movsl sti setp lea js fscale add lods rol xchg out xor mov lret jg stos pop (bad) xchg cmp mov or mov mov pop lds out xchg movsl fidivl bound in (bad) out test daa xchg mov sbb jnp adc mov dec mov pop les jecxz mov mov cltd das dec sti pushf mull cmp outsl mov mov loope pop mov pop mov cld adc fs sbbl jl faddl add insb cltd mov mov inc mov pop add movsl test mov mov sbb and mov pushf (bad) mov mov pusha dec xor mov imul mov dec xchg mov js jbe scas xchg iret xchg les daa cmp sub out inc xor mov pop inc push fildll loop ret sahf sbb xor sbb sarl lret hlt push cld or push xlat or xchg dec mov shrb and movsb and mov sub inc sub mov inc jno pop xchg fidivr js es add mov xchg mov scas mov cli xlat add bound mov jne test inc mov in pop xchg mov jge cmp loop loope push mov mov sbb lret xor add mov fwait mov mov hlt cmp mov cs push mov mov xchg mov outsb and fistp movsl fucomip xor cmp test pushf lcall fcomps pavgw dec mov add mov or andl push and push mov ret mov mov jb dec orl add es arpl mov sub lock fnstcw loopne cmp or ret (bad) mov mov bound int and pop sbb out fwait mov das icebp lahf imul (bad) mov xor cld fcmovnu (bad) lock iret inc push mov int3 xchg movsb js fldenv sbb cmp (bad) pop xor out in lods sahf cmp sbb mov movsb ret adc mov movsb sub xchg call lret fisubl imul shll push gs les and aam mov dec test mov and xchg dec adc or mov cs mov jle push push mov div ja mov je xor repz add inc mov icebp or dec repnz push push rorb lock mov mov (bad) mov dec or sbb lahf inc mov sub sti mov ret imul shlb mov push lret dec stos mov shl push test movsb mov fwait test jmp xor push insl mov xchg ljmp or fisub and pushf mov dec or ret or inc cmc mov repz imul and popf mov mov iret dec mov xorl mov xor mov ror scas pop imul lahf mov out icebp test push sbb nop xor frstor jb jecxz mov and cmc ret gs (bad) int3 scas sbb cltd sbb ret mov mov push pop popf jg mov dec pop mov jle dec mov clc enter into arpl dec or mov scas call push in mov mov insb xor pop fcoml push leave pop mov je pop mov out dec dec mov jnp loop (bad) jp cmp xor mov negb fsubl mov xchg mov popa adc ds sbb movsl add mov jo sub mov or jecxz xor loop imul mov lret popa aaa pop inc and fidivl ss add mov pop jp xchg jge and pop mov test fildl stos test xor sbb jmp js test sub outsb pop int lods subl lds fbld adc dec mov mov fidivrl push test mov mov push stos add cltd jns cmp dec icebp outsl and (bad) adc sbb dec dec mov push aam inc dec mov addl aaa fmuls mov adc pop scas jb mov pop xor mov dec popl sbb cmp cmp pop mov shll dec test pushf andb ja (bad) cmp (bad) mov or inc mov mov sub pop xlat jg xchg ret cmpsl cltd push bound mov into ss cs fmulp mov or popf add dec add mov std pop cmpsb mov in mov xchg pop pop dec enter xor push arpl mov into jg scas inc cltd or mov mov mov and mov sub aaa fisub sahf xchg loopne xchg das dec cmp (bad) imul mov cltd adc mov push and movsb shl cmp mov add ret or insb andl push mov mov hlt movsb (bad) mov and sti mov mov mov data16 shlb (bad) fdivl mov jb cmp (bad) enter test dec icebp adc push jg xchg cmp into insb mov cmp mov mull dec mov push repz loop js xor (bad) adc les mov mov add xor test cltd mov lods js pop mov loop adc or push jmp adc mov ss and dec add fldl sbb leave mov or dec cmp xchg xchg pushf and mov daa inc mov mov in pop mov stos movsl xor cli bound sub std into cs sbb sbb push loope sti dec mov cltd xchg xor pop mov mov sub mov dec loope fdivl out mov in sbb inc mov (bad) loop repnz lret and cmp mov dec inc cmpsb mov push mov xchg mov push loope cwtl cmc xor xor or out rcr fstpt test jecxz std fldpi sub sub mov pop cmpsl cltd fcomp jge xchg lods (bad) sub mov inc jmp (bad) jae test mov mov sub and pushf jno sub mov icebp hlt xchg xor fs test sbb insl mov lods lcall in and aam les inc pop (bad) daa mov arpl gs xor add rol mov push inc nop mov add or mov mov ffreep dec or aas mov fwait es pop test arpl (bad) cli pop sub (bad) dec or sarb cltd int3 and push inc sub addr16 xchg pop ficom daa movsl sub sbb les mov inc cmp data16 aam (bad) or (bad) mov push std inc insb rcrb nop mov sbb pop mov push aaa (bad) jno shrb push imul mov ja mov in adc dec sub and mov mov cmpsl mov lea sub mov jo cmp or movsb fldl2t movsl and mov xlat adc (bad) (bad) inc imul bound inc cmp mov mov jae or fldenv or mov gs ja inc adc in imul mov mov cmp loope mov data16 pusha cltd ds xchg mov lret mov insb mov ficom mov xchg mov pop mov sub and cmp test lods ret mov inc add pop outsl outsb lret call fwait fwait adc nop pop and mov std mov or mov faddl dec inc repnz pusha mov stos sub mov mov nop inc mov push movsl xchg push lahf mov cmp xchg mov push sahf mov inc dec sbb pusha scas pop cmc cwtl scas jae movsl push mov xchg or jne xor das adc (bad) mov xor das and clc jbe pop push dec mov popl or inc inc mov std negl lret inc cs mov in dec repnz add enter ds stos or jbe xor out mov xor ret or xlat outsb ret or adc in push pop xchg mov xchg ret fcomps out xor mov sbb insl in jge int3 mov lds mov inc adcb loope mov or xor cmpsl inc outsl mov fsubs sub ret mov fnstcw mov in stc ja shrb enter mov mov xchg add int3 aas sbb sbb xor xor jmp cli xchg insl sub mov mov dec pop lret popf test sbb jp or inc js or mov add cmp add mov mov fwait addr16 cmpsl mov enter mov ss lods mov add pop mov ret fdivp test lods int push mov adc mov push jae andl or imul mov loop jle mov in push ds or jns test dec pop int3 adcl pop mov jnp leave push mov out mov insb jecxz jns inc mov fdivrs out dec insl ja stc popa sub movzbl jns mov addr16 mov (bad) popa in inc imul jmp rcl mov outsb (bad) pop iret std mov mov and jle in push imul lock dec decl sub mov andl jb lret mov leave loopne sahf mov add rcrb in es nop imul add bound dec mov mov adc repnz xchg orl inc in nop fisub xchg in les mov pop xchg (bad) jge inc xlat mov sbb inc mov insb xchg pop adc sub push scas inc and jbe push jge lods cld mov and int3 imul es inc or (bad) fcmove dec (bad) mov idiv in ret ljmp dec scas cltd mov add mov loopne adc lret scas push outsb movsl out flds cltd sub jb pop fisubl in test mov test aam enter jmp jg test mov cmp dec out jmp pusha mov or dec add mov sub popa pop daa cmpsl fwait aam ret mov call fstps lock popf pop inc aad mov fwait shll movsl ljmp mov mov xchg dec mov (bad) cmp fistpll jge aas mov mov cmc inc mov jno je mov pushf cltd mov pop mov mov mov adc inc lods sahf jg and inc cltd and mov pop fadds xchg sub jle xchg mov stos mov das mov sbb push mov ds mov out insl and jb mov and or mov cmp fidivrl dec loope mov inc xor scas lret push ret push popa mov jne adc mov and cli mov sub pop pop (bad) and into jbe fadd movsl out pop cmpsl icebp enter rorl cwtl scas pop mov push addr16 outsb cltd adc out dec xchg orl mov cs scas fmull shll test mov dec xor stc rcrl cmpsb aam movsl dec xchg jecxz mov mov inc mov aaa inc jno mov mov (bad) and mov mov pop (bad) int mov adc dec lods mov pop cmp loope shlb aas scas enter fistpll pop mov mov (bad) leave add and repnz pop mov fsubs les sub lahf xchg es jbe rcr icebp addb jne (bad) mov movsl sub inc add and in and sub cltd sub mov mov pop clc mov mov cltd xor iret mov mov aam push xchg lahf mov mov xlat xchg pop arpl jge jae mov sub fisttpll pop int3 sub orb cmp (bad) mov loop das fwait cltd (bad) mov jns xor arpl push test iret mov push scas out mov xchg pop ficoml mov rorb dec (bad) fistl es mov xchg rolb sarl icebp cmp out mov mov sti sub int pop jge and mov xor push inc mov mov scas mov in int and pop jl and fcmove leave bound lods mov shll fisttp sub xor ljmp cmpsl cmp jmp adc test rcrb insl lahf jp adc mov xor hlt pop mov incl sub mov fsubp sti mov mov mov mov inc ficom dec cmc aaa pop ret xchg (bad) mov int3 js mov xchg mov test mov jp scas inc mov stos mov pusha fsubl mov daa inc in lds daa les add ficompl pop faddp mov xchg mov sub cmp add lock sub or outsl inc das std cmpsb jo inc dec mov mov inc mov cmp sub repnz mov aaa call push icebp jecxz imul cmpsb aam adc dec movsl mov mov lods popf and stos mov push jmp pop fsubs movsl mov push (bad) stc or mov pop xorl (bad) and int or cmp outsl movsl inc movsl js xchg inc inc cmpsl test push pop mov lahf iret sarb daa xor cmpsl and (bad) aaa gs mov mov scas mov test pop into lret mov lcall mov cmc loop xchg outsb mov jne (bad) imull and or movsl call cmp dec mov cltd outsl mov (bad) cmp xor inc int and lds aad mov (bad) mov outsb mov pusha jge mov inc cmp jp push sub jae mov dec push arpl and adc cmp jecxz sub iret mov (bad) adc mov mov das jl or push cld mov scas mov pop inc and or xor dec xor mov dec call mov outsl cmp inc test (bad) push sbb mov mov xor jo loopne mov (bad) cmp xlat mov pop leave inc push sub push adc pop and test xor jmp adc insl shll sub inc lea rcrb scas or pop ljmp movsb gs (bad) jo popf pop adcb in (bad) or mov pusha adc in inc dec dec jp cltd cmp cmp into add dec test mov call pop pop dec adc int3 xchg mov jmp (bad) mov adc mov or in int mov jmp jle mov cmp js dec ficomp aas pop out aaa rorb data16 mov mov push or sub lret mov jle push add icebp push mov (bad) push popf or scas stos xchg es imul mov mov push and mov outsl adc xchg sub lahf inc adc mov mov in je mov and rorl push outsl stos mov push pushf xor dec xchg out push andb cwtl mov inc ds iret (bad) mov clc jg lahf in imulb or scas jb add xor addr16 out mov mov jmp clc mov mov sub jp inc jmp out clc jne aam or fild movsl sub bound jmp imul mov mov fidivrl pop fild pusha mov cltd test inc dec dec lea push gs icebp push xor in movsl mov mov pop fisub mov mov aam dec mov dec cwtl int3 fist push mov sub cmp cltd xchg ret cli mov xchg xchg mov ficompl pop jae outsb mov mov (bad) mov jmp mov int3 loop jae mov mov in cmp and mov mov sbb xor call (bad) xor push pop cmpsb add adc push xorl cmpsl mov mov mov mov mov loop xlat sbb mov outsl mov in fs ljmp lret (bad) rcr insb movsl insl push ror sub cld pop jno add mov les jecxz mov inc int3 (bad) shll into das (bad) or cmp popf and add outsl int inc push and add mov (bad) cmp sarb push in xor lret test mov xor in dec gs test push mov pop mov out jae mov or xor xchg (bad) dec cwtl cmpsb xchg cmc pop push loopne and lret pop das add rcll int pop scas lcall fstl popa in or adc imul mov aad sub iret loopne xor or mov jg push cmp roll mov adc movsl inc lahf lcall pop jecxz repz mov enter sub jl cltd ret int3 imul mov mov and cmp xchg popf fmull fistp mov cli dec lret fs rcrb xor sub jne in out mov mov jns,pn mov push (bad) mov bound mov scas sub pop lods imulb std sub jecxz jge mov ja rdtsc decl aas push push test push fdivl jmp lcall aam and xchg fisub jge sti xor clc push pop aad subl fcmovu inc cwtl push pusha cltd sbb or pop je call sbb sbb pop mov popf xor pop mov pop xchg sub mov andl rcrl stc call mov xor mov loope dec mov mov mov pop sbb cmp cmpl movsl and sub mov lods inc push ja pop mov mov mov mov test imul outsb imul or (bad) mov scas sbb jnp ds add sti sub mov and and into sahf ds xor jl test mov imul mov sub or jp mov ja cmp mov mov cmpsb bound mov xchg test xlat mov pop xor imul and jns mov mov xlat arpl loope adc movsl push fs mov icebp mov or jae mov cmp add xchg jb loope mov jg push sbb leave and movb dec inc push inc xchg stc sbb stc (bad) xchg outsl inc cs xchg sub jbe xchg inc cmp movsb outsl nop or icebp inc pushf aad xchg out push inc mov out push pop stc fadds push scas out adc mov pop les fwait test idiv int3 stc xchg xchg lock daa dec outsb das cmp sub incb insl arpl pop (bad) jnp or aaa in push (bad) push push jecxz add das jecxz and sbb (bad) adc mov insl mov cmp test in and fstpl jae and add sub fstpl xchg cmpl int3 loope sbb out and add cli imull inc adc and fistpll sub add test cmp fimull adc out lods std je or fldenv shll push movsb fs push dec adc sub jg sub mov fcoms sub mov xor repz cmpsb push aas mov xchg pop std scas sbb lock pop push mov in mov fcmovne pop pop std jbe sti fisubr roll repnz jecxz ljmpw clc insb out (bad) jecxz lds lret sub mov xchg mov cmp pop test xchg ljmp and mov outsl addb inc cmpl shl addb mov xor push cli mov (bad) mov add adc fbstp or add rorl das mov mov addr16 xor push cmp fbld adc jmp and out aad movsl es xchg cs xchg adc loopne pop xchg je push enter jnp daa mov jecxz xchg je pop push jne mov aad inc xchg int3 cmp xchg scas push mov (bad) (bad) pop lods xchg out xchg lods loop mov dec mov addr16 loop mov or dec lds push add add add push ret inc jp xor insb and insb mov pop pop jecxz or aam test xchg dec cmpl sub shrl push xchg mov push and xchg ret or sarl xchg cmp mov pop mov sub push inc xor or adcl mov add mov shl ja xchg cmp out cwtl pop dec dec aas add je shrb ljmp nopl daa mov dec ja cmp scas inc xor pop mov pop xchg mov mov mov mov mov fstl jg inc fs adc movsb sbb ja cmpsl aaa ss arpl add in ret xchg rol jge adcb dec mov cwtl pop add mov fs mov sub pop mov bound mov mov and cltd adc iret lcall xchg sbb adc sbb lods xchg push or cmpsb xor incb inc dec adc (bad) cli ficom mov clc cwtl add daa jg adc xor dec or cli pusha jbe add adc rcll dec jecxz aam out push inc hlt xchg (bad) in stos cmp or (bad) add mov add jecxz in fnstsw pop xchg and aam push push push into mov pop sbb movaps sbb sbb es movb std call push and sub cmpsl pop lods dec mov pop dec adc scas jbe and jae mov mov and test xchg cs pop std xchg test cli push jno sub sub adc pop sbb jmp cwtl mov test mov cmpsl aad shr aaa mov pop mov test xchg or in mov pop in ss pop mov (bad) es ljmp mov into out and mov inc mov or mov cmpsl int add rcl cmpsl scas sub loope jl cld push out mov xchg xchg aas imul dec mov cmp imul and mov pusha xchg push jb mov mov dec shr mov mov cmpsl stos and lret mov mov movsl cltd es movsb mov hlt cltd pusha gs and les mov cltd adcl pop inc sbbl aam mov fdivrp adc cltd add mov and pusha (bad) addr16 imul jns xchg in inc sub mov xchg fstpl add gs shrb pusha add inc sub mov (bad) arpl fldenv cmpsl sbb push mov add outsl mov pop daa pop mov mov xchg daa arpl and and ret pop bound int loope popa xorl andl out in addr16 cwtl pop pop inc in sbb xorb test and inc fiaddl pop add leave rcrl and mov in insb inc (bad) jns mov test sbb adc jae cwtl push inc sbb inc sbb jns cmpsl add inc pop jecxz cwtl cmpsl fld test inc dec cwtl bound inc jno (bad) pop in insb inc mov pop enter jo jno sbb daa arpl and jno in cld inc daa adc addb add popl mov jecxz inc push arpl loop add inc jge imul sbb imul inc imul fchs out je jle pop cmp and and pop inc nop es and and adc push cwtl popa ret test in rcrb xchg adc iret or or add popa movsb loope (bad) dec (bad) push addl add out inc pop rorb sbb gs sbb jecxz inc popa mov ret popa push out ret sub addr16 aas and mov loope fs pusha or xchg es sbbb dec les out rolb arpl into add jge sub inc fsubl inc out cmpsl sbb and xchg fldenv sub loope jne fnop pop mov push mov mov or dec stos mov mov add inc xor xor push add outsb loope fucomip push test addl or mov push aas arpl dec pop cltd jle lods dec hlt (bad) xor shlb adcl jbe pusha (bad) int mov pusha push insb mov xor and sub cmp popf mov leave sti jno mov sbb mov xor nop mov aad movsl cmova and in xor arpl sub mov sbb inc adc inc loopne test popf scas mov xor dec push imul or mov hlt insb ja inc cmp lret mov fistpll movsl cmp fnop xor dec and out sbb dec push sbb cmpsl lods ja mov xor add lahf fbstp mov ficomp adcl add sbb and clc and outsl xchg loope ja xchg movsb or (bad) fsubs push outsl mov test addr16 sub add adc out jl cmpsb clc or mov mov add push rorl repnz xor inc jle inc pusha dec out in and test out fnstenv mov dec inc outsl mov pop sarb out push or add add or sti mov mov and adc mov out jl mov mov add adc mov mov pop dec mov pop nop mov sub nop inc pop repz rolb popa andl mov adc adc push mov xorl mov daa cltd and jns fcoms sbbl test jg xchg and xchg adc out dec and jge inc jbe sbb popa fsubl and pop cmpsl ret in mov popa pop test and popf add mov inc arpl sbb fwait inc arpl popa fsubrs popa out flds pop ret cwtl popa test movl mov es dec cmp xchg push jns les popa add insl movb test shlb pusha adc xchg inc inc add out ja cwtl cmpsb xchg mov inc sub outsb sub and popf add jge andl and add adc mov enter or jg nop add mov or sbb or mov mov inc in out add push es fisub test and and jecxz and xorb and out int3 inc les ja (bad) dec ja lock xchg mov cmpsl popa add test inc pop (bad) fnstsw fs cltd fsubs movb inc (bad) and mov and pop xchg in and and sub ret xor das pusha gs lock cwtl (bad) lock andb in popa sbb (bad) or out mov sub lock daa push out movsb sub xchg mov popa sti inc daa sub (bad) (bad) outsl add sub arpl jnp (bad) gs cmp inc fsubp test movsb int loopne sbb and jns xchg jns dec out xchg and and inc es mov cmpsb inc arpl mov roll inc dec lahf lret xor and rcl loope add and add and out and mov mov and or sbbl mov jnp cmp (bad) cmp inc movsl and les addl pop sbb fucom mov arpl movsb xchg fiadd and mov jl scas jl popa (bad) rol cwtl loope imul popa enter xor pop enter cmp scas and sbb andb and pusha cmpsb inc outsl rcrb xor out dec test call cltd out pop iret and nop subl add push and push (bad) sub dec out fadds or add out fchs inc sbb out loopne dec gs insl xchg cmpsb and in sbb scas pop movsb and add popa lods xchg inc test (bad) mov dec and outsl mov sub sub in arpl cmpsb adc scas dec movsl daa and out fchs sbbb les adc shlb loopne pusha inc (bad) (bad) test mov icebp jg in and pop inc es sub (bad) xlat push movsb loopne adc adcb test xchg out jns mov imul mov mov pop in xlat or icebp mov adc jno movsl push mov data16 outsl push jnp mov bound mov and loopne ret or add imul les cwtl xchg leave faddl pop add cmp icebp mov pop push loope add (bad) pop movl sub push inc imul jb in insl clc cmpsb inc inc cmpsb aaa clc fbld in fs and lret inc popa jae in loop fwait lock xor loopne sbb sbb mov adc inc out movsl pop out imul bound and mov fwait rorl clc pop and mov je es inc inc push stc mov pop adc cld push xlat lods and movsl stos or sarl mov inc pop pop and dec sub sbb dec cmp push mov and fsubl outsl (bad) cld pusha notb aaa push mov pushf mov jbe in cmovl xor mov nop pop inc in in mov add jmp in adc jb lret mov lods mov stc dec or and sub hlt jno test mov lret repnz sub bound int3 movsl rolb mov mov imull pop (bad) jns xchg cmc call sbb mov cmp cs jno push popf lock je mov repz mov sub xor movsl mov (bad) mov sbb push stc scas adc ja leave test stos insb jecxz adc sbb mov lea adc lock divl push lcall xchg addr16 inc nop aad cmpsb inc pop and rolb repnz sbb test pop notb movl pop arpl pop in cmpsb andb xlat sbb icebp in arpl sbb daa jmp dec and inc movsl pop xchg gs insb fsubs sbb xchg inc rcrl inc adc add push sbb push jbe notb push jo sahf xor jne push xor les adc sbb and mov xlat pop push adc addb sbb push pop xchg sbb pop sbb nop xor iret popf inc adc nop aad jno sbb push sbb mov inc pushf addr16 negl adc adcb pop jae add fs and andb mov xor adc and test inc mov adc andb icebp dec nop bound xchg inc sbb movsb pop adc addr16 inc xchg mov mov push xchg pop adc sbb xchg push pop out cmpsl andb cld and adc xlat addl inc fsubs adc movsl addr16 xchg fistp mov xor mov sbbl xchg arpl mov jecxz out test xchg mov xlat sbb mov nop jb mov sbb ja repz (bad) mov mov lahf xor (bad) loopne aas ret xchg or addr16 xchg out push adc cwtl xchg addb nop sbb and sbb mov cmpsl sbb inc pop pusha sbb cwtl hlt fcoms arpl inc fdivl into or and cmpsb push pop push mov cwtl jbe sbb pop xchg aad (bad) fcoml mov cmc add movsl in pop xchg or adc addb sbb adc pop add call sbb jns pop fist sbb adc cs jno test sbb rcrb mov inc lds pop andb clc and sti inc mov repnz xor ret mov insl (bad) test mov hlt iret pop stos scas movsl andb dec (bad) mov xchg movsl xor sbb divb push add daa pop jg fisttpll out (bad) js rcr imul (bad) lret in pop sbb add cmpsl mov (bad) xchg mov icebp push cmc dec mov mov mov jecxz mov sarl pop icebp adc sub mov mov sti sbb xor jo xchg sub push das inc jle rorl neg or add inc sub jno pop cmp mov xchg mov push add sub pop addr16 sub inc mov or xor movsb and sti mov outsb push fldenv xor imul xchg rcrb lods dec je mov sbb dec cmpsl and pop and dec inc aas add mov or push xchg es xchg outsb mov mov add pushl jp cwtl inc popa repz jge in movsl lods sbb jne mov jecxz add mov jae adc mov xor jmp lods mov sub lods (bad) scas xchg ret dec add inc roll popa (bad) repz add lods jge xchg hlt adc or inc adc in mov mov pop xor mov je xchg pusha mov (bad) pop stos and inc mov and push mov popf mov (bad) mov data16 mov xor cmc jmp ja push mov cmpsl mov mov push adc mov xor ss sub inc adc aad (bad) sub (bad) cld loopne or xchg imul mov push test fwait cmpsb add push data16 mov rcpps adc popa xor test mov lds adc sub insb inc and pushf jmp sti icebp les in pop jo fldenv dec jmp xor ja jae lods out xchg lock (bad) jns imul mov test and mov mov mov push cmp add mov xor or (bad) mov in inc mov sub add sub cwtl mov or add xchg movsl sahf xchg adc or mov add add inc leave or ja cmp out mov and js mov ds sbb data16 inc (bad) jnp jo mov mov (bad) sbb scas xchg rcr dec (bad) dec rcrb insl in mov mov repz stc lcall ljmp mov adc arpl mov or mov insl cltd push and xor cmpsl inc in pop movsb pop dec test out xor shll cltd iret aaa sbb mov test fcoml mov fsubs leave in mov outsl bound push pop mov sbb add add mov mov les or mov sbb cmp bound push mov sbb ret addl scas dec mov mov and imul mov sbb cmpsl jae stos xor (bad) fbld cmp lods dec mov adc xchg mov addr16 mov ja cmovns movsb mov pushf xor or jmp ljmp fdivrl arpl aas adc in inc loop mov dec int and lret into xchg mov hlt mov gs cltd inc push pop int3 pop test jge movsl hlt add out es mov dec jl push mov enter mov aam mov xorl xor sbb mov std xchg loopne out sub shlb rclb mov aad dec cmpsl lods xor mov mov xor push inc push xor sub xchg rcrl movsl mov sbb jnp xchg xchg hlt call ja pop jp es fstl pop outsb movsl xlat cmpsb cmp lock (bad) mov jle scas ret jae fsts push xchg dec aam lds imul out push jp xor inc mov mov mov sbb lcall iret sub call pop lea inc dec mov dec stc mov (bad) out mov mov ljmp mov xor adc pop outsl out addr16 stc mov sbb and mov (bad) stos and fs push pop aas pop mov inc xor sbb iret out pop mov inc jbe mov inc xchg rorl jecxz mov scas movsl lock sub fldt jno lret pop movsl cmpsb or jb rcll xchg and and pushf icebp mov scas loop push arpl call cmpsb daa inc rep adcb mov in insb mov lock mov jl mov dec daa jne rcrb pop mov jae mov inc out jp lret es mov repnz das fstps cltd cmp cmpsl add mov outsb ss dec jbe cltd xchg leave mov in mov lahf jecxz repnz fs inc cltd inc xchg xor arpl push adcl mov jp shrb mov cmp inc (bad) lret push pop mov xor push jg enter mov aas sub push cmp cltd (bad) lahf push movsl mov ja mov (bad) xor mov gs ret stc out cmpsb (bad) dec sub jecxz cmp mov loop push popf mov into outsb cmp leave sub mov sbb outsl test pop jmp imul clc mov jnp movsb inc loopne mov xchg sub mov lds inc outsl call sbb jg mov and cwtl shr imul dec movsl xchg outsl or insb dec lea add mov movsl adc push imul das mov stos test dec push lret cltd in lahf adc mov out mov jns sbb (bad) sub cmpsl dec mov push push pop and mov rclb push fsubs push call mov jle adc dec dec inc std cmpsl aad and sub scas call xchg cmpb mov pop inc sar stos out decl fs add subb leave mov pop cmpsl pop es mov call je or imul mov mov (bad) mov push fisub mov pushf dec hlt mov lods add pop add movsb inc sahf sbb and pusha int cltd mov xchg mov fisubr jno push out xor daa sbb dec xor mov mov mov pop push mov test int3 push pop (bad) into fimul xor cmp dec xchg insl cltd pusha (bad) pop sarl mov or repz imul and pop sbb add fwait push mov (bad) cwtl lods mov pop mov xchg or xorl ja (bad) idivl xchg mov mov mov rclb scas xor mov call dec lahf xor aaa dec sbb subl out lock cmpb or jle iret subb pop mov xchg mov xlat dec (bad) mov out sarb stos cmpsl (bad) cld mov xor mov bound inc inc rorl mov xchg lods mov pop rcrb ret data16 cltd and imul call bound sbbb roll mov mov pop jmp add jo add lcall fimull jnp lods les pop repz (bad) inc into jne xor int3 fildll int mov push mov out jl leave aaa pop lods pop int outsl lcall mov fnstcw adc add repnz adc xlat out outsl add test cmpsl (bad) fidivr pop cli inc adc jmp sub inc mov fbstp mov cmp and adc repz add test pop stos dec adc es not and sti cltd test cmp mov push push mov dec mov mov pushf int sbb (bad) mov pop jo mov xchg mov enter mov sbb cmp in sbb dec scas mov sar movsl mov rorb lock pushf mov addr16 xor scas pop add cld add push leave xor jae inc je popf mov sti dec mov pop (bad) mov jp inc movsl lds imul iret pop lods push xor lcall shrb lahf data16 push rorl out and add dec jmp mov fstps cmp fs es xchg jo (bad) mov mov mov out sub and or aas loope xor lcall xchg jnp out mov lret mov and dec or in xor pop adc jnp xor repz mov dec pop jle out stos lods lret xor jbe mov sub add bound outsb mov cs xchg mov xchg cmp repz movsb nop les add lods rolb iret sub adc call rorb dec mov fisub aad (bad) xchg (bad) lock xchg das mov mov gs mov call js fistpll sub ja loopew mov lahf pop pop inc xor outsb fiaddl mov sub outsl and repz cmc mov and xor add nop jns jge inc pop movsl sti sbb cmp mov mov cmc mov sub mov mov scas cmp push fistp dec pop sbb inc lock or popa fisubl adc fsubl inc cwtl imul repnz fwait jbe mov (bad) mov movsb fcmovbe mov dec shrl popf ja movsl int3 popa push pop or cmp mov xchg fisttpll mov sbb adc pushf xor outsl std mov mov xchg sub movsl pop mov int sub or mov cmp xchg lcall pop das pop jmp mov dec push adc add sbb sub push cmp pop adc divl xor mov inc inc pop mov push loop cli push out adc sbb xbegin (bad) sbb daa std (bad) mov ret lret movsl stos rol mov lret movsl push mov lods ret and inc daa mov sub xchg mov inc test bound inc xchg arpl xor cmc (bad) clc loop in mov and pop in mov in cmp mov imul adc sbb cmpsl std pop fcmovbe fdivrl sti cmpsb daa mov bound xchg rorb divl xor ds popf (bad) mov (bad) daa add iret aad jecxz mov pushf sti sbb xchg bound cmpsb cmpsl cwtl popl mov mov mov push addr16 cwtl (bad) xor pushf cltd push data16 xchg mov loop jne aaa mov mov cmp push push lods push lcall jp scas (bad) sub pop repz icebp dec popa mov add fisttpll pushf cmp mov add mov dec mov enter daa ret shll push mov xchg out adc leave outsl or loop sub inc mov mov jns data16 mov dec js jg mov mov mov scas aad add imul pushf mov sbb stos test add and xor movsl pop sub hlt jmp sbb lcall mov mov dec lock mov out (bad) (bad) or cmp fisubr pop inc mov in mov je xor (bad) in jle aaa int out (bad) xchg jb int3 mov lcall mov mov pop cltd ret dec ja sbb fabs movsl inc mov (bad) test xchg lods dec sub and mov inc arpl pop sbb bound inc nop dec movsl repnz data16 mov cmc mov int3 xor imul dec outsb je sbb jnp mov xchg inc xchg pop xor repz mov mov inc mov inc roll mov pushf into sub mov shll idivl mov mov cmp inc mov loopne mov out enter or push add scas dec mov dec add nop dec stos jmp or imul mov jmp ret xchg lock pop xchg inc mov out ds xor sbb mov and scas sbb sub mov mov push or (bad) pop int3 mov pop mov or (bad) (bad) pop cmpsl mov push mov insb jmp adc daa xor divb lea inc mov mov mov sub mov hlt xchg out imul cwtl outsl add nop in fisttp clc enter outsb adc or out inc jbe test (bad) inc aaa mov gs aam and jno fisub dec cmp or adc adc mov (bad) xchg and add mov xchg mov data16 scas push mov sbb inc rclb sub ja cmc cmpsb cwtl xchg and pusha pop mov lods inc into cmp pop out pushf mov mov mov scas mov mov bound dec jmp hlt or mov popf les mov pop push shrb ljmp inc in dec fbld les gs notb mov out lret aam and movd lods inc mov mov mov mov xor jae mov pop arpl dec lea jmp lahf mov xor mov dec mov add sub fimull jnp insl mov loope in (bad) icebp push mov add mov and add pop xor mov inc repnz dec adc sti in adc cmp jae popa mov pushf mov sahf sub scas mov mov mov inc in ret xchg xchg pop push into sahf lret inc or jg clc mov (bad) imul or mov add loop add adc mov jl sub insl adc pop and mov mov jno mov outsb jmp cmpsl mov int pop into mov push cli movsb mov jno cwtl push scas pop repnz push mov lds add icebp mov in pop js jo popa fnop inc insl pop loope ret mov sbb mov aam mov xor mov inc xlat lahf mov push xchg jae bound add pop popa lds push sbb fistl push xchg dec and subl pop mov movsl cmpsl lock mov repz pop ds sub add xor dec adc lds ja and mov pop sbb cmpsl mov dec out (bad) pushf imul cmp inc test sbb xor data16 out sbb gs mov insl xor sbb loope je jecxz pop adc in inc mov mov push hlt adc cmp sub jmp xchg movsl xchg je cltd mov test daa adc xchg mov arpl andb icebp mov mov ror mov jle mov inc test xchg (bad) cltd cmp mov mov cltd sub jbe mov sub dec aam xchg cmpsb dec lods mov fucomi mov sub fistpll mov in movsl inc xor cmpb mov mov scas add stos lcall aad out mov cld xchg rorb jmp or inc fnclex int sahf sbb mov mov adc pop ds (bad) mov push mov adc mov cs jns or movsl and or mov popf adc mov lods ret mov cltd push (bad) into nop pop xor es int3 mov pop stos movsl add cmp cmp loop popf popf jp lcall movsl pop testl (bad) mov adc dec mov pop insl mov push mov sbb mov imul mov cmp shl call jge mov bound add test mov cltd adc jecxz clc mov (bad) in sub adc sti fisubl mov ljmp (bad) fsubrl imul mov push inc push inc dec push cs insb add and call push lea call cmc cmp pushf jmp pusha jmp clc shr clc push dec rol add mov aad clc and das sub daa shl push pushf mov setns push mov dec bsr pusha cwtl mov clc clc stc mov bt test push call out clc (bad) jno,pn cmp or movsb popa shrl pop frstor cli test mov lds mov mov (bad) or dec push bound sahf pusha aas xchg lods aas adc jbe popf rcl or mov out add dec mov xor rcrl rorb les cmp ror test daa bound cltd lea movsl lock popa cmpsl test fldenv aas rorl pop add bound insl mov mulb xchg lods pop mov jp mov xchg mulb xlat movsl mov add out mov test nop add inc sub imul fwait stos jge push sbb test ja out std fisubrl mov push popf addl jecxz out add loope rcrl (bad) arpl test shr mov mov and aas and ret cmpsl jle bound stos mov pop test cmp push add mov push jae and jns out call adc pop xor fwait mulb jnp dec test es inc pop add mov inc cwtl jg pop mov inc test sbb pop shlb push mov gs push add data16 cld mov nop lahf cmpsl sub jns out mov test pop pop xchg les inc xchg pop xchg loop lods pusha les jmp dec add fsubl or push cmpsb test pop sub addl aam jg (bad) out cmp cmpsl mov xor mov lret orb andl inc xorl mov mov pop mov lods inc mov xchg lea pop mov es loope cmp jg gs or jmp test mov adc (bad) leave add test xchg loope daa aam aas mov (bad) imul in and test push mov adc js pop stos test enter add xchg jb popf pop dec nop dec xor aam fistpll orl mov pop rclb pusha rcrl and andl (bad) std js cmp fs lahf (bad) incl popa sbb lret lahf jg clc sbb cli and pop out fnclex cmp addr16 imul mov inc das pop inc pop jno popa (bad) divl sbb imul cmp insl xchg mov pop ja xchg testb scas jae fwait pushf icebp jg cltd cmpsb outsb sbb add pop xchg popa insl mov mov cmp and arpl jge inc push lahf and cmpsl clc fwait mov and (bad) push xor std mov fwait jae or icebp andb mov subb int3 and dec xchg or inc out addr16 movsl repnz and fbstp dec jge ja lods sarb scas cmp pop popa mov ror push mov scas cmp add lea (bad) cmp bound sti hlt jle mov pop jecxz pop cmp out push dec mov add jp xchg dec add cld jns cmpl in cltd xchg adc push xchg add xchg push mov inc cmc pop loope or sub xchg cld imul (bad) pop xor (bad) xlat fistpll clc inc push fmul push out cmp jno ss (bad) test sub and inc addb lahf jecxz push movsl xchg jmp push test jb test pop dec movsl mov jecxz dec pusha xchg sub dec fwait sahf into sbb popf or dec icebp inc dec add addl popf ds stos jge adc cmp fistp mov mov push pop push dec mov out cmpsl and bound sbb in mov and shll (bad) bound mov lret dec dec into jno pop stos jae scas in jo in sub setg pop xchg inc in rolb jbe xor push or popa mov dec jns loope repz push mov push insb xchg ja inc jnp mov bound add in xchg inc or and mov clc fadds dec (bad) adc cmpb nop leave cltd sbb sbb bound push jge nop and pop xor imul mov test jge (bad) xlat imul push iret ja,pn jno inc pop in cmp cmc mov enter sar aam jnp ret dec popf incb and stc cltd pop imul (bad) fldl push inc sbb xorl arpl adc addl sub inc sbb movsb in (bad) pop xchg lahf sets orb pop insb ret sbb pop xchg mov adcl mov inc fisubr inc jbe inc (bad) cmc jo pushl les sub shll cmp add orl fcoms jo repz fcomps and call aam sbb data16 jbe inc pop outsl pushf call jecxz (bad) pop adc shll mov and mov std or (bad) add lds push push sbb push jg pop or (bad) movsb fs jo inc imul addr16 or push imul cmp punpckldq cmp dec push xchg dec mov add imul sbb adc (bad) add xlat sbb rolb mov cltd add hlt inc mov mov sub xchg dec jns cmc pop loop daa shrl gs push fildl add mov xchg inc (bad) std inc mov push push mulb roll sbb ss and xor mov cltd dec loop cmp xchg (bad) push sbb jae and inc andl pushf mov lret xchg adc xchg pop aaa and test int3 cmpsl xchg pusha clc and (bad) pop aam mov outsb mov dec jle pop push or dec and imul ss adc mov loopne lock rorl sub push shrb movsb jns add dec xor dec or dec dec mov and xchg ja xor mov and call lds inc (bad) fstpl (bad) push dec adc imul cmpl adc sarb ss and daa xchg les out dec pusha cs sbb adc lds int fwait xchg cltd jg les or mov cmpsb and fcomps mov and cmpsb fimul repnz rolb pop push sbb cmp pop add jmp popf les and rorb pop jg sbb cmpsb adc imul fsubr and fld sbb mov loope cmpsl push pop or dec inc add jbe mov jmp inc and gs and mov xor and loope adc cmp or mov or jno jnp (bad) fcompl xchg sti mov dec test mov flds lods mov sub pop cmpsb sbb mov loope sub movsl icebp loop mov pop pusha call pushf arpl fwait addr16 bound loopne mull sbb lea fwait bnd sub push push jns dec add or xor test imul int xchg pop test xchg or test std and out add lahf cltd lock pushf dec or inc pop mov loope jmp add outsb and xor outsl xchg pop cmpsb sahf adc jecxz push loope sbb mov cltd mov (bad) hlt or pop pop mov (bad) fwait dec pop cmp xor mov and add xchg outsl addr16 pop push fcomps gs adc lahf dec pushf shr sahf dec popa jecxz or push and loop pop int xchg leave into mov cmpsl out xchg aas xchg call jge cwtl enter imul pop bound inc adc les and test arpl loop adc pop movsl xchg sbb pop inc jecxz shrl dec popl ja adc loopne cmp icebp repnz and andb and adc inc inc (bad) leave sbb and mov mov add sbb pop inc jl add popa mov outsb dec xor jbe inc bound les pushf movsl (bad) (bad) cld es inc arpl lock ja lret fwait pop shlb cmpsb adc lahf jns xorl pusha pop sarl pop ret jp lahf les mov rcl aas decb cmp and jno pusha imul add ret cmpsb jns pop bound sub je loopne insb dec lcall int3 test pop inc addr16 (bad) stos arpl scas cmp mov bound xor scas lods inc imul pop xor mov fiadd jge sbbb dec jae xchg push fidivl fdivrs popf adc push sub fld movsb movsl lock jbe inc jp data16 mov xlat (bad) stc adc loope fist addr16 ret push xor and add arpl les out xor add add stos adc sub aam mov pop lods sub inc movsl lcall sahf cmp jns inc (bad) mulb cli sub dec popa (bad) pop lret add sbb movsb adc mov in sbbl cltd cmpsb es mov jno push push stos jb jg and pusha xchg add cmp jg mov fs (bad) shll and out mov dec cmp aam lahf xlat dec (bad) mov popa (bad) cmp (bad) jbe pop dec pop xchg imul cmp call mov and lds fist inc jl aad jecxz bound cwtl xchg mov cmpsb and pop (bad) out cmpsl add push les out pop inc daa cld shrl cmc lcall mov add inc cwtl mov shl pop rorb bound jbe and daa loop pop mov daa shlb mov popf xchg dec sbb xor push push popa xor fsubrs pop js fnstenv pusha pop and icebp mov mov insb call or cmpsl pop xor add aas cmpsb not addr16 frstor test addr16 jbe nop lahf or xchg and cltd movsl fabs jbe arpl in mov and cld mov pop cmpsb inc xorb xchg xchg pop or lea nop inc cwtl popa pusha pop cmp cmpb xchg adc mov addr16 adc fbld pop js sub sbb lret mov pop fisubl mov movsb or jb cmp fidivl loop aam ljmp ds pop sub jnp lea mov outsl mov jge xor and fiaddl stc fwait jns or loope sub ss push push jo addr16 imul movsb cmpsb mov mov mov xchg pop sbb pusha xor subl incb adc sub and mov hlt xchg bnd out inc and fucomi mov aas push lock lods imul add dec loope xchg movl loopne popa cmp add add bound adc das dec add arpl pop clc mov pop push sub dec pop fsubs xchg pop stc daa cli xor mov mov and (bad) das adc cwtl loop pop unpcklps pop les inc cmpsb cmpsb cmp mov movsb pop mov test jge popf pop icebp jle mov adc sbb gs and insl cmpsl sub jnp jg cltd mov jmp ljmp dec icebp xchg fcompl adc or fdivs cmp stc pop arpl cmpsb cwtl (bad) cmpsb push and mov mov push (bad) in dec bound xchg xchg bound push push mov push loope mov std daa push (bad) icebp adc pop jo scas cmp mov cltd lea and rolb adc push inc nop xchg cltd pop add aam out test divb dec lock xor add sbb pop imul in add andl bound movsl adc cltd mov inc jo cltd out mov aad jge push mov stc std outsl or and cltd loope popf inc in push mov and lahf xor cmpsl pop push test cmp sub (bad) xor jle pop inc push icebp pop xorl mov (bad) clc out test sbbl in popa xor icebp push and dec std hlt test (bad) mov pop pop xor or mov dec daa xor sbb imul mov xorb cld mov sbb adc mov mov subb or inc lock lods iret adc push js rorl mov adc data16 stos mov jmp push mov ds lock adc bound test lods repnz push xchg jbe sub dec mov subl das (bad) nop jo push mov popf iret jmp push bound lods icebp and es mov arpl out psubsb sarb lods js les repnz cwtl cmpsb bound in pop jecxz nop enter xor push inc jge jmp int dec pop ficom movsl rcll jno xchg or jnp inc je and es or (bad) push cmp mov icebp in cmc movsl jl sub aam inc arpl vpandn les fsts mov jns scas dec xchg dec lock xor or es mov daa pushf mov arpl (bad) cli popa dec pushf xchg nop xchg mov fiaddl pop in or xchg jp push arpl out (bad) aam push add cmpsb fdivr in jbe loopne test mov gs jg (bad) cli ss jo jmp test mov pop cmp mov cmpl inc mov lods bound push jecxz mov add mov loop popf aaa pop clc inc (bad) sbb out fildl sbb push movsb jo pop repz dec cli and cmc in pop push add test stos daa adc scas ljmp and fldt jo pop mov gs or popf dec pop jg (bad) popa test adc add es les inc sbb fsubl in cwtl add mov jmp stos insb or pop pop jmp mov cmpsl or (bad) sbb divl popa jns stos or gs cmp popa push int cld inc rcll dec aad (bad) mov bound fldl cld jmp ljmp pushf mov and add movsb and cmpsb mov rol test jbe dec fyl2xp1 dec mov pop inc mov stos pop mov arpl xchg xor xor jge repz loope jmp sub pop fmul pop cmp imul rcrb shll adc daa data16 dec pop mov js xchg lock cmp lahf mov jns mov nop mov push out int and test add loope pop jnp test addr16 mov adc test cmpsb inc hlt imul xchg shlb dec out sbbb negl inc ret cmp fsubl mov mov xchg out js inc insb and pop in pop sbb fwait sub mov add xchg jl mov sbb pop lock sub mov or movsb mov cmp dec pusha dec repnz adc popf cmpsb and sbb add pusha imul cmp dec ds pop aam and push rcrl mov or lods push inc mov cmpsl (bad) lret fnsave jbe push sahf out xchg rorl cltd dec add sbb popa movsl adc imul out (bad) pop jne aaa sub js sub pop js loope xchg adc out and sub movsl pop outsl sub push adc cmp pop icebp test das cmp loop call stc js andl fstps aaa push jno arpl in mov sbb inc or out inc rorl addr16 jb mov fldenv inc (bad) ficomp (bad) mov (bad) shr sub fldenv add xchg jne dec pop adc xchg mov hlt dec pop push fs (bad) rcrb or jnp addl ret int loopne aad std inc pop add cmpsl push cmp call outsl call mov jp cmp jmp pop imul les jmp mov pusha sub push insl mov xchg pop imul daa xchg mov pop lods test bound imul mov adc gs aam sbb xchg pop jo pop ljmp and mov inc shll sbbb js adc xor popf arpl or mov lret movsl mov cmp mov inc fcmovu clc les stos std jbe (bad) pop in inc mov out es push lods fwait jb mov inc movsl inc popf test (bad) cmpsb xchg bound (bad) je adc adc pop sahf (bad) mov stc unpcklps pushw aas push xchg test inc popf test mov sbb icebp or mov mov adc movsb imul xchg rol fabs aaa pop mov push xchg stc pop add jecxz cld and adc jae mov add and popa aaa mov clc imul mov mov sahf mov fs xchg xchg into int inc inc xor addl jns bound icebp mov push ret fiaddl add je jp mov inc rcr cmp fbld (bad) aam mov cmp ficomp push adc cltd fidivrl mov in aad aas das mov push mov incl adc mov adc mov jmp sbb andb jmp mov clc loop rcll movsb xor dec popa mov pop xchg jmp fld lcall int imul or lods push (bad) popa popf add (bad) xor mov inc cwtl push xor loop and xlat ja mov pop adc push aaa push movsl lods cmp mov pop pop ficomp xchg aas neg js xchg pop cmp sbb js xor pop adc test ljmp sub and (bad) jb out pop out pop lsl add pop xor adc pop fsubl jge sbb pop add pop ror andw stc pop adc pop pop mov xchg jo jns pop xor loop adc call and xchg enter sub out dec inc mov andl out mov cmpsl popa sub mov xchg in call pop dec cmp cmpl or (bad) dec push popa pop aas mov lret aam inc xor jae or adc jo and mov in xor movsb add mov push jo mov xchg cld or mov insb (bad) pop push mov les std bound sarb and adc pop cmp pop lock sub push das mulb js lods sbb jbe (bad) xor push in adc fwait and loopne pop inc stc sub cmc aad stos adc (bad) and in or mov push pop xchg jmp push pop daa cmpsb cmpsb and push cmp imul fwait mov test arpl in mov add ror adc bound adc and cmpsb hlt out jbe mov bound adc inc push add test or call aam iret ds in or ja xchg stc dec mov lea fstps adc pop xchg ffreep lea ss lret pushw or aam cmp imul js shll and mov inc fstpl pop lock pop into pop nop cmp pop arpl and scas xor sti jge pop aas and lahf cmpsl jmp insb mov dec ret imulb mov or icebp cmp pop add popa stos test cmpb bound mov cmpsb ja (bad) push cmp jnp adc adc in jo pop and fdivl push andl add jnp jmp inc fsts dec xchg push dec and cltd in loopne add popa movsl sub cmp sahf sti popf xor ljmp push imul les imul fidivl sbb mov adc pop popf push (bad) pop mov cs idivb bound adc jge fiaddl nop div adc push mov sub js mov rcrb les stc push fildl inc sbb pusha add les (bad) xlat cld pop inc rcrl push sahf daa inc add imul pop lea fcmovnb adc movb mov addl mov or pop adc inc dec adc pop test adc cmpsb aad add mov cmp rclb bound jb nop push jnp and subl rcl lret mov cmp cmp push cmp testb sub loop jmp addl cmp or add add sbbb xchg pop or arpl mov inc mov out adc cltd loope jno xchg pusha loop aam mov or pop loop orl xchg lods bound adc data16 (bad) push cmp xchg gs pop push sahf (bad) (bad) and gs sbb dec test (bad) push pop lea nop mov adc (bad) dec ja jo mov xchg out mov cltd dec xchg cmp and ja add cltd les call imul lds popa push rclb out inc jno cltd mov popa popl push imul lret inc and (bad) call xor mov inc push add xor jge mov jbe jno popa sub add pusha push adc ja addr16 pop mov jns sbb std mov and pop mov xchg cs pop jns inc pop shr (bad) orl mov pop insb imul cmpsb (bad) bound rcpps in cmp outsl adc mov jno imul shr shr add mov lret imul xchg xchg cmp ljmp jg lea push mov push cltd std push shlb out mov pop or (bad) pop mov cld xchg mov pop jp xor dec daa xor inc test push xor aaa (bad) xchg and jmp pop xor xor ss insl mov (bad) mov and xchg rcrb xchg repnz test mov insb xchg and rorl int3 and sar cmp pop sbb pop sbb xlat mov mov movsl dec xchg enter jmp in dec adc pop out xchg jo fcmovnbe inc cmpsb insl push pusha in and negb mov data16 pop cmp pop sbb pop mov cmc jp add push push stc and push (bad) lock es jne (bad) in dec sti movsl stc jge adc fxch adc movsb (bad) dec imul pop inc dec rcrb cmpsb inc lret mov bound xchg aam movsb ljmp sti out data16 clc lcall out ret mov or sbb fnstsw cmpsb mov jno (bad) movsl mov and pop lea enter push xor mov mov insl adc and mov into inc mov dec addr16 shrl les insl add mov movsl ljmp addr16 jne iret inc cli ret mov mov daa mov cmp dec movsl negb lcall repz test push pop cmp sar adc sbb inc xor aad cld and sub and pop movups leave pop lcall sbb add scas dec sbb mov push imul sbb push and daa dec bound insl mov roll test daa sub pop push loop xchg jne in shr dec mov push inc dec popf lahf or and cmp popf into jecxz cmp pop and (bad) xlat pop sbb out mov lcall push jno in sahf das xchg ljmp sub test dec jle push sahf addr16 mov inc ret mov adc jo pop int aad add orb xor xor cmpb and pop pop mov adc pop repz daa cld and lcall pop data16 xchg imul pop leave testb pusha cmpsl lahf pop cli fsts or mov mov mov inc dec adc popf popa pop sbb mov inc jo les movsl and imul test pop xchg sbb sbb add pop mov jbe and and cltd xchg dec std jbe push cmp stos adc fdivs xlat mov enter add ss ja xchg sub mov int3 push daa pop stc push insb es inc push js sub (bad) pop xchg iret (bad) dec mov lea ja fsubs mov inc (bad) movsl adc cmp das and mov xchg or sbb (bad) and inc iret cmpsl xchg mov scas mov jle lahf bound outsl sbb (bad) loopne jecxz lock mov ret cmp xchg add and clc mov adc std pusha mov mov xchg ds lock sub fstps out lock into sub std addr16 inc cltd icebp and cmpsl ljmp sub mov in lods adc shl xor pop addl add cmpsl or lret lock cltd mov call jno pop mov xchg insl add pushf pop sbb push xor mov out inc cmpsb daa jmp adc push ret addl or mov movsb sbb xchg dec xor insl mov and orb adc adc dec out clc and ret mov pop cmp pusha bound sub cmp lea in addl lcall dec pop or xchg mov inc add dec insl rcll loopne lea cmpsl jecxz jmp rorl icebp iret into les fwait stos sub lods cmpsl sub repnz cmp adc mov ret pop lods rolb gs xchg sbb push pop mov inc lods mov rorl and add loope add std bound pop cmp loop pop xchg cs bound mov sub adc push add xchg aas mov jae (bad) hlt mov inc adc or bound movl jmp or mov inc hlt jno push cmp lret xor andb adc in adc test popa inc sbb cwtl mov push out and lods adc xchg cmpxchg call xchg sbb out pop out add mov and cmp loop dec aad bound loop add sub xchg cmpsl fcompl and (bad) lret push popa xchg loope cmp movsb pop in dec das cmp mov test data16 addb fs (bad) pop gs jge mov out jns pusha inc enter fwait (bad) lods and and cmpsb data16 xor insl inc push pusha dec std pop vorpd mov cmpsl xchg and mulb xchg inc add cmpsb push (bad) js in mov fucomi clc arpl mov or or ja add adcl loope sub cmp jb (bad) out inc dec repz cmc clc test pop ljmp fldcw cmp sub imul pop xchg cmp (bad) dec mov mov daa and rcr push jno ret cwtl frstor cmpsl (bad) ljmpw and das xchg mov inc mov pop and mov pop jae dec cmp jne loop (bad) push movsl inc mov dec or adc inc scas mov pop (bad) jns popa outsl jmp cltd and mov pop pop fwait and aad and add xchg jg pop push xchg mov popl jns je mov (bad) ficompl inc lahf pusha movhps dec pop movb xchg les and cmp xlat mulb jmp test sbb mov push loope mov test pop inc push inc inc movsb cmpsb or sub mov sub shll push (bad) xor add jo sbbl adc (bad) popa adc jl pusha cmpsb (bad) ja sbb cmp sbb pusha add shlb repz xchg das inc out or push xchg popa mull leave lock outsl pushf test xchg dec ret (bad) push (bad) xor push sbb push pop sub shll adc sbb lea add inc and fwait inc test jo sbb xor cmpsl pop cmpsb fisttpll pop inc xchg cwtl orl sarb lock cmpsb or (bad) sarb cmp out loop insl out test into pop push ljmp (bad) test dec outsb out pop rclb out pusha adc shl pop stos push push adc and push push sbb pop pop push mov jecxz inc adc lods in adcl inc sti aam mov xchg out lock or pop addr16 mov outsl mov pop inc jge push movsl data16 dec inc and jo imul jns daa pop incb sbb sbb ljmp (bad) sbb daa pop aas pop cmpsl stos cltd daa js xchg xchg hlt jge jmp pop cmpsl add ds cmpsb (bad) and xor in xchg (bad) xlat cwtl or or mov push lret outsl les (bad) test mul jecxz lahf sahf cmp add pusha inc pop mov int or push js out sub mov pop (bad) jno push shrb sub add push (bad) in push repz pop inc out or push lret bound or xchg pop inc repnz or jae pop lods aam rcr ret fwait inc pop and or les pop (bad) sahf hlt insl dec pop jbe jns add sarl xor mov jns xchg cmpl test dec inc and daa dec test je push icebp or lods (bad) sub cmp mov lcall or mov pop and pop les sub or bound mov mov mov xchg repz and mov jo jp popa (bad) das call adc xchg xchg cmc push jl lret and xor adc js xchg ficompl jne and loope inc xchg cmpsl pop add jecxz xchg jbe and xor mov fildll shl imul popf addr16 rorl cmpl adc addr16 push lahf imul out js imul pop inc cmp mov push pop add pop movsb js repnz jbe jns (bad) cmp and clc mov lahf movsb xchg lock cmp sub insb sbb stos cmpl inc pop bound mov inc lock adc in dec cmp mov and js leave sbb mov adc sub lds lock inc sub pop mov and jecxz les lcall jmp or xchg std lock das push push scas je in mov pop or xchg out pop iret add xchg pop jecxz mov cmp movsl jo xor sub jl dec mov int cltd mov dec inc xchg cmp jbe mov and out aad xor hlt jnp push jp push rolb push andl ja cmpsb cmpsb pop movsb sbb xor inc or xorb xor dec cltd aad adc pop int3 mov and enter cwtl gs andb ja data16 loope pop pop aam mov mov mov sub push inc pop into xor xchg hlt sarl xchg xchg lahf repnz xchg out in hlt xchg lock sub xchg mov (bad) insb jno pop xchg dec lret jb mov pushf imul cmpsl adc cmp xor dec pop mov jge out ret jnp sbb push dec fdivrl or lret pop loope adc mov push gs dec andl add js fsubl hlt data16 inc into andl subl mov lret data16 imul (bad) mov fnstcw jno test cltd jg popf add xchg loopne pop andl push pop cli cmp mov cmp and fnstenv adc jne xchg popa pop lods stos aas jb ret loopne xor xchg mov fmulp mov ljmp stos mov (bad) xor test sbb fisttp push repnz jno and cld push gs pop and daa sub (bad) data16 jns mov arpl jge and movsl les dec cmp shr nop sbb push scas hlt sar (bad) xchg fsubrs insw sti inc pop mov fbstp cs xchg add and pop mov inc xor xchg push sar imul popa add push fcompl mov pusha xchg mov out pop movsl push add mov dec or clc (bad) sub mov daa insb add inc shrb cmpsl cmpsb pop imul push jecxz dec cmpsb fisubrl mov pushf pop adc mov xor lcall repz pop inc fs mov imul cmpsb sbb aaa negb inc xlat loopne push jae pop push add mov les pop out ds popa scas (bad) mov and out imul (bad) jg cmp loope subl push test dec pop adc sahf in mov sub pop pop jb mov sbb dec mov add out and aad aas jmp fcoml dec int xchg ret popa lcall (bad) repnz lahf adc and mov sbb sbb (bad) lds pop fisub sub pop je cmc push and jge pop mov lods dec inc ja dec dec inc cmpl int3 clc push xor adc pop cld sbb das xorl inc popa lret ds lds shll enter and ja mov cmp xchg push sbb xchg jge loope push mov fmuls clc push xor sub mov lods sub push xchg xchg imul jb inc cmpsl mov pop fstpt adc cmp repz cmp lds popa push push dec mov js inc add pop push cmp shrb mov and mov adc fidivr (bad) xor cmp movsb movsb add push jge add dec xor int loopne inc mov pop (bad) sarl adc mov in mov and mov js adc or data16 stc pop jl sub popf mov mov imul mov push inc clc push (bad) dec xor call loop and and and and sbb ljmp inc mov mov popf mov dec movb and addr16 in outsb imul push std jnp roll pop ljmp pop xlat jb pusha pop xchg cli hlt xchg xchg or push push mov test and lock pop adc pop out popf xor gs xchg lods sub mov mull cli addl mov inc xchg cltd (bad) std loopne bound loop xchg cmp lret xchg push aaa xchg jle sahf (bad) xor adc addr16 jbe inc ss mov sbb dec in dec push and jg and dec adc bound movsb dec mulb hlt (bad) mull inc data16 xor cmp test andl inc mov lcall bound mov dec sbb mov mov sahf mov movsl outsb call mov enter fbld xor pusha aaa mov sbb adc cmpsl xor pushf cs aam sbb push ret lcall inc mov jae xchg cmp sbb mov push mov push adc push mov mov mov gs mov (bad) mov xchg mov cmpsl lods js mov cmp or mov push mov dec sub mov in out fisubrl into push test rcll push jnp push inc adc lahf in andl lock adc in in pop pop mov mov cld xchg jns iret shrl adc pop lret rolb popa lods popa fwait mov sub mov int3 dec adc cmpsl lret test (bad) sti lock ds xchg bound dec xchg add xchg ljmp out pusha lahf push test or jle idivl mov popl cmpsb add sub scas les lock xchg inc inc pop mov jmp jmp mov mov addr16 lock pop cli jae xchg cwtl jne xor cltd sbb loope out mov imul adc and fsubrp push jmp xor loop lods pop scas or les pop pop push sub cmp fsts mov stos push jecxz sub cmp fcoml xchg lret into imul cwtl imul movsl jmp sub jae int3 jg dec test sub add mov nop pop inc sahf stc jno,pn or inc add movsl (bad) pop dec xor push (bad) lods and aaa testb jecxz mov push push cld lea dec pop fdivp clc pop pop xchg inc mov adc xchg cmp clc xchg jle bound pop popf adc xor aaa movsl js xor fistl xchg push pop out mov dec sub scas cld jns repnz ret dec mov in pop pop mov out mov popf aaa push mov or xchg and enter dec xchg divb out test fisttp imul fstps and jbe in sti bound and and (bad) sub repnz mov pusha mov or xchg inc cmp mov inc add xchg inc inc push pop in and lock adc data16 mov jb stc mov jno pop loope dec push mov lods popa in sub cmp in sahf jbe mov daa and add ret lret sbb sub arpl stc popf jns pop dec dec push sbb movsl cmpsb add xor jb adc (bad) aam mov lock int sub push cmp sbb mov push mov push into bound mov loop xlat xchg or and lret pop (bad) enter (bad) push mov test mov adc fistpll out addr16 rclb jno mov jl push push jmp sbb leave lea dec iret (bad) and pop dec movsl lods or ret cmpsb cmp dec lahf mov inc fcmovnu jns (bad) in mov xchg cmp sbb inc adc mov sub cmp out in movsl xor xchg dec mov jbe push (bad) inc mov lods jge mov pop clc pop push cltd lret imul in ret and in insl in mov sub push stos movsl repnz mov mov mov sbb cmp test mov movsl cmp mov sarb (bad) pop subl sbb aaa scas sbb push mov mov inc adc fidivrl mov jbe inc cmp add loope test jmp jae insl dec movsl or inc adc rorl xor and scas gs add and and mov lods adc inc cmp dec pop repz or bound (bad) lret mov adc sub aas mov pop lock or cmc andl movsl rorl adc sti pushf sbb xchg pop pop jne dec in test inc dec rolb in sbb out xor push sti sbb mov add aaa sub cwtl mov aaa mov ss cmpsb mov out imul sbbb cmpsl xchg enter bound cmp pop lea jge cmc mov pop jl clc sub xor cmpsb js fisubl les pop sahf mov (bad) sub adc bound mov sbb into (bad) mov mov (bad) cmp xor je dec inc push pop push jno xchg adc push mov dec dec loope lcall pop mov iret mov xchg lcall fbstp (bad) loopne repz mov les or pop jge popf cli pop (bad) jle (bad) xor (bad) sbb sub movsl cwtl sbb das push clc cltd jo dec pushf sub push cmp sbb add mov fildl dec inc push or out arpl sbb or adc sub lods mov rcr aad mov mov lret cmp mov loope sub in in sbb cmc push inc or mov mov mov subl aam sub (bad) inc or xchg mov (bad) lds in scas sub push int jb mov fcoml cmpsb in push ds add int3 daa sub fcoml jns jb pop adc push int cmp jnp imul stc mov andl bnd scas sahf cmc push add mov mov test test test into sbb sbb xchg xchg and mov dec int3 mov mov aad (bad) cmp rolb insl pop dec mov mov fildl in xor cmc xchg outsl popa sbb inc fbstp js xorb mov mov adc and push pop bound mov out ss cmp bound xchg dec imul popf scas std add push shlb lods add fbld sbb insb jp not adc add shlb movsl sahf andl cmp aas mov and push ja mov (bad) or or dec mov adc faddl pop adc pop mov pop sbb cmp push dec and inc data16 xor mov jp mov fsubl mov (bad) sub bound adc imul test popa adc jno cmc pop ret scas and mulb test push scas xchg shrb out (bad) popa imul adc jge inc or xor insl gs sub and incb and mov addl jmp mov pop addr16 es sbb adc mov xchg and icebp pop loopne push xchg les out js fmull pop jo pushl movsb mov in add das lcall fmull xchg inc mov cmp rcrb into mov divl xchg cltd push jl pop sub cltd pop dec stos mov jns sub adc movsl jne pop clc aaa aas popa les cmp and imul cmp jnp movsb sub clc ljmp bound (bad) lahf out push shrl and pop imulb mov pop data16 rcr adc or ja mov cmc push out test add loop sub sbb int3 dec mov fcmovnbe or in (bad) jno mov push pop inc pop xor xor cmpsb push cltd jmp cmpsl sub in adc and add push scas jge mov adc rol cmp aad mov mov pop sub cmpsl adc mov imul inc and addr16 or xchg loop or test pop cmp imul (bad) pop insl push fdiv popa pop stos scas fisubl scas outsl (bad) cmp mov mov cmp pop pop xchg and inc test in inc int3 fbld jp (bad) test sub add fstps out add dec outsl into sub faddp push fistpl (bad) fucomi data16 arpl cs aaa pop sarl mov movsl int3 jle and inc push push inc or sub mov orl xchg mov inc (bad) sub andl test test add int leave and or mov decb addr16 cmc iret loopne xchg sbb mov push or lods lock sbb cmp enter inc jnp mov or cli adc mov dec movsb clc mov xchg cmp fimull push test dec bound xchg lods mov gs jmp out movsl popa js dec mov movsl add inc xlat mov sbb pop and or jo sbb int3 ja pop push xlat mov cmpsl inc dec mov and and aas imul das mov loop pop pop movsl pop lods orl mov pop mov jno imul mov sarl jne or in add repnz inc mov icebp pop movsl adc dec xchg add dec add (bad) movsb or leave shrl mov sbb ret fidivrl (bad) sub out dec push inc inc popa jae dec adc add gs xlat jns mov arpl jge test stos aam imul or ret xchg mov mov in jp xchg xorl pop je fistp mov adc lcall xchg xor movsl xchg jno inc icebp (bad) into into cmc out xor insl movsb cli outsb push imul inc sbb cwtl ss repnz jns movsl movsb cmpsb aam jge lret out sbb insb or jo repz lea (bad) mov adc leave fsubrs shlb fwait sub test cwtl or icebp inc cmpsl ljmp jno xor test xchg movsb push jmp lahf in shrl jne push mov pop xchg test cmpsl test aas loop cltd mov jno xor sbb aam mov mov xchg cmpsb inc adc in xor sub lea imul call dec movsl stc jae loopne shll enter push pop sub mov or neg daa mov inc bound pop add in pop push xor (bad) lret aas cmpl sbb mov or inc pop andl jnp mov les ja cmp xchg loope mov add jmp mov rcr sub (bad) iret imul inc loope rclb aas ljmp pop int ljmp sub push add rcrl cmp push mov imul aad and popa lea push mov sbb xchg imul popa xchg loope pusha xchg inc xlat cmp in mul xchg mov fdivr mov dec add xchg pushf sbb sahf inc and mov pop xchg lcall and and in dec aas inc lcall push data16 rolb movsb push inc into (bad) sbb loopw pop sub add xchg inc add movsb pusha bound cmp movsl fstl mov fsub xchg mov push test inc shlb inc lret in in pushf sbb and daa xchg bound and xchg aaa add dec sbb cwtl push inc (bad) sbb mov inc mov and ss sub and mov cmpsl (bad) xchg test fs sbb loop adc data16 push add frstor inc (bad) nop hlt lcall test inc sbb xchg xchg inc mov mov pop movsl lock push add inc mov movl shlb test inc test cmp adc pusha mov inc jmp mov xchg push gs pop mov lods add adc jbe movsl inc add cmpsl and inc popa push arpl add (bad) gs shlb popa inc shrb add and popa push mov xchg or add push mov arpl popa mov imul sbb push xchg sbb lahf and inc or xchg (bad) add add arpl out sbbl test sub stos inc jp aas mov sub push inc xchg ret das loopne scas mov hlt pop push mov add jle adc ljmp mov cmp pop jecxz addr16 xor jo xchg (bad) aad stc test dec mov movsl sbb ss mov and lock mov jge das add xor adc popa pop xchg mov mov or xchg mul xchg mov leave test push pop inc adc fbld imul inc fisubl sbb popa mov fsubrl xchg mov cmp jl mov out movsl pop mov push int sbb aad cwtl mov outsl gs xor movsl sbb pushf sarb clc push cltd mov jns cmp and shrl pop icebp imul (bad) out cltd imul add std add pushf adc add ja mov sub lret test mov pop sub sahf add or out mov cld je test movsl xor and mov shrb and mov sbb adc cmp sub movsl pop cmp sti cltd icebp jo adc mov test xchg cmp dec ret std xor out dec aad cmp out sub mov ja popa mov sahf movsl sbbl (bad) mov into and in repz nop mov pop mov adc loop add in insl xor test mov push adc dec in cltd insl pop xchg imul cmp push push add nop dec or shll orl xor mov loope lcall xchg dec or mov dec fisub into les rcl dec or lock sub in out jle mov cmp lock dec pop mov jbe in hlt rcl mov or xchg mov out lret xchg (bad) out es je mov add ljmp lods xlat xchg add cmc inc mov pusha hlt insb fwait inc mov jno lcall ret fwait icebp icebp mov xchg mov icebp mov inc xchg mov sub test in es dec test aas std mov adc addr16 mov xor mov loop jle imul push mov in pop mov push inc imul mov jns push hlt arpl dec inc or sbb xor or cmpsl and jns rorb ds je and and jp mov loope sarb dec sub insl in scas popa jmp adc inc mov ss xchg fwait repnz insl cmp dec jmp inc mov sub cmp mov sti push or xor cli js cmp pop dec adc in add popa dec shrl pushf movsb jno arpl jl andl cmpsl push loope xorl and imul test pop inc movsb int3 inc fisubl push (bad) pop andl mov call mov xlat js xchg mov jg mov (bad) int3 cmp ffreep pop jnp shll (bad) std jne pop dec add mov and loope mov pop add push sar fldenv ja mov lret sbb pop fdivrs jge xor adc gs arpl movsl (bad) sub mov cmp cmp xchg (bad) mov push mov mov fdivs mov mov and sub cltd pusha jno xor push mov mov sbb xlat mov cmp xchg pusha int sbb scas push in fucom push mov push and dec add mov adc adc push test ss mov add mov in adc shll dec aam and in jns jecxz or xor push cmp push add and cmovno rcrl mov add mov (bad) adc xchg cmp loop in adc xchg cmp mov int push mov pop mov cmp cmpsb xchg xor push call sub insb mov and mov xor and cld jbe in pop jle pop into pop mov (bad) mov xchg dec cltd and fstl adc out jl aam rcll xor cmc or js shlb les push ljmp aam mov cltd ja mov pop sbb and decb (bad) int ret movsb jnp in imul inc sti shl or jns or (bad) movsl mov cmpsb push cmpsl pop ret push in fldt icebp in sub xchg pop push pushf mov lds int sub pop pop mulb jp icebp and fnstenv lock daa dec clc mov xchg ret pop xchg dec cmp lds adc mov pop adc fisub inc sub sbb subl pop stos push pop fdivl sub ljmp push sub pop dec pop lret lods or mov scas les push dec rolb stos insb fisubrl cmp mov mov pop std sub add xchg dec cmc adc roll dec int pop mov int sbb test ja jb add mov and mul cmovge jmp popa or aas imul js (bad) xchg cmpsb mov xchg inc push mov sahf mov repz add gs in mov mov sbb imul mov xchg rorb (bad) xchg add arpl xchg mov xor mov dec dec jecxz cltd imul xchg sbb (bad) cmpsb push add gs inc pushf mov adc ja loopne (bad) cld jbe mov cmovs (bad) inc jns imul mov mov loope clc mov mov pop lahf jp ss js mov and ret dec cmc pop (bad) cmp sub mov repz dec lds cmp sbb cmp dec movswl add test or or mov loop mov insb scas mov cmp push dec sub fidiv aam mov adc sub fs mov mov in insb xor sbb popf test movsl inc in push inc jb shrb xor sbb (bad) mov and mov push adc aam cmp loop std lock jecxz (bad) jp incl mov or and in push ljmp mov cmp cltd stc push cwtl sbb test mov xor sub fisttp cltd xchg imul mov pop mov add in (bad) movsl pop repnz lret mov or fdivs mov stos sub xor fnstsw mov dec fmul orb sbb cmp stos mov jg ror mov sbb mov aaa jmp nop mov sbb mov xchg fwait mov lcall mov fdivs push mov lock nop mov mov sbb insb in sub jae pop shll pop cli jb mov push push fistpll push mov fisubl push sbb pop mov sbb scas cmp xor loop ret mov mov lods movsl rcrb xchg pop add fidivl lods jne insb dec pop push call leave ret test cmp imul cmpsl popa cmpsb test sub and xchg cmp (bad) push and ja loope jns cwtl daa aaa mov leave push ljmp movsl imul loopne jmp adc stc cmp push std mov pop les loop fwait hlt ret fwait adc jne ljmp and mov bound mov jns stos mov jo ss lock adc nop pop mov mov and mov dec xchg aam pop or pop inc lret movsl lods dec enter cltd fs pop sub repz adc mov lahf mov iret sbb out je jmp adc mov mov mov scas rcl and lods add dec gs and mov sbbl xchg mov data16 xor loopne sarl lcall push imul and ret add movsl pop adc scas jp daa lea cmp mov xor pop aaa lcall cmp inc mov pop mov pusha jge mov mov sbb and sub aaa jno push jns sbb mov mov cmp push push test pop push mov rorb push add adc dec iret xor lret int3 sub lock mov add cmpsl xchg dec xchg mov xor imul push pop aas xor xchg (bad) lea push jne adc cmpl push or movsl xor sub movsb (bad) dec pop pop mov mov jmp lret ja les out push lcall mov push clc jecxz popa in xchg test aaa and fstpt lret cltd push (bad) out outsl pop mov push add jbe aas sbb nop repnz mov std gs jecxz or pop inc fsubs subl xor inc lock js pop add jl (bad) cli dec loop push cmp xchg addl dec xor inc xchg pop aas cmpsl adc push xchg cs stos movsl lea test xchg jecxz cmp or dec jno gs stos mov ret dec jmp push test jge xor insl cmpl push sub rclb (bad) out movsl or dec arpl movsl pop scas stos daa sub addr16 iret int mov sbb scas xor insl adc cmpsl xchg mov fiaddl repz mov jmp aad mov pushf push push in ja sbb mov mov decb mov rolb xor cmp inc pop cmp icebp xchg sbb scas (bad) sub aaa popf adc xchg les push popl fistpll lea pop out lock test popf fldenv fwait jb ja aas mov or sub sub lcall aad scas xor push jge dec scas ret mov stos and mov (bad) mov repz fsts mov fisttpl dec in mov ss pop lea pop notl lcall add cltd jecxz fcompp mov pop mov (bad) jnp sub mov movsb rorb fstl or xor pop push fnstenv pop and mov push and movsb mov aad mov sbb (bad) dec adc popa push addb mov sbb xchg pop and nop addl mov daa movsb mov dec push ljmp sahf mov adc pusha movsl sub adc lds arpl cltd mov jg and movsl rclb ja cmc rcll inc adc xchg js loop dec pop out mov adc in ljmp mov (bad) jo adc mull outsl mov test lret adc cli into mov faddp inc and and xor les add fcompl mov inc iret lds mov mov les sbb test stc xor cmpsb fs pop inc or sub pop dec dec imul mov inc test stos lods and add lret mov sbb bound pop jmp stos in push push (bad) lea es addr16 fs jne cmovbe sub movsl and pop and and mov lret jmp insl out xlat jle pop or mov or push mov lock add pop jge mov mov cmpsb mov push mov or je mov mov pushf daa add int (bad) xlat arpl pushl daa imul aad pop push and pop mov (bad) (bad) xchg addr16 xor mov ja imul cmpsb push xchg repz lcall sbb es xor push mov cmpl mov dec (bad) xchg or inc int sbb (bad) jbe add jns addb mov es data16 mov inc jle das rorb (bad) jg jmp cmp adc int cmpsb lahf or pushf shrl mov mov aas adc popf dec xchg les cmpsl lods test pusha test sbb pop popa inc xor dec js add daa dec jns mov fcomi call test out (bad) fstl data16 xlat sti aam add add mov pop imul mov inc and or (bad) or lret cmpsl cmpsb negl stc popa rcrl nop push cs dec flds stos inc xor mov xchg jnp stos mov andl cmpsl fcoml adc insl std sbb jl jb xchg adc bound adc xchg jbe xor xor (bad) in sub fucom push mov pop in popa pusha and and addl or inc scas xorl mov mov (bad) and xchg xchg in aam cli sarb out jecxz jp cmp add xchg out sub lods mov jo outsl repnz pusha and and push fldenv lods mov cmpsb jl les sbb fadd xor and flds cmpsb mov push pop mov out mov cmp mov cmpsl and inc sti and pushf pop fwait sbb and jne cmp cld xchg movsb lahf mov test cmp jl inc pop xor sbb mov std sbb xchg dec push cmp test mov mov movsb lret lock jg mov addb push cwtl cwtl scas mov lea mov fs fwait push xchg ret jecxz pop dec int popa and in jns in inc imulb push aad mov jne das dec xorb xchg cmpsb scas or pop jp loop les inc sbb aad pushf cltd (bad) int mov cmpsb inc lahf test sahf movsl repz jbe pop hlt mov mov cltd jo and xchg dec jp icebp jge fldl in repz fsubrs daa loop sub arpl movsl fidivr lea sub xchg push insl jo bound or mov (bad) mov imul xor es stos movb cmp das inc add lods mov sbb or lcall or dec call (bad) xchg (bad) cmp movsb in les dec or lahf push mov jns jecxz jge arpl xor cmpsl arpl cmp movsl popa ja cmp loope std mov mov cmpsb push pop sub push add xor lods cmpsl push cmpsb xor loopne push adc aam loopne sti push inc lods jno sub ret iret pop bound push repnz mov jo std push add sub push xchg loope popl rol xor insl cmpsb fwait (bad) (bad) out test add mov push pop push sahf inc mov movaps movsb cmpsb sub and pop mov cmpsl lret mov jno cmp dec inc add fs stos aaa jl pop cmp xchg pop xchg (bad) push test ds and sbb loope pop xor (bad) in test mov out push dec negb (bad) out aas out aas xchg sbb add xchg xchg gs or and jo or fldl pop bound clc push xor add (bad) icebp dec cmc cmpsb mov popa adc dec dec sbb jb jle pop push jecxz hlt mov pusha add stc movsb jl adc mov popa movsl negb xchg cltd bound lahf dec xchg jbe movsb cmp aas les jb lock xor mov js dec faddl push add inc cmpsl cli leave pop mov bound out test call jmp hlt les sub sbb and (bad) sbb cmp icebp ljmp xlat (bad) push add je je adc push add jo ljmp bound xor cmp gs adc outsl and es movsb dec movsb ljmp lock mov mov push pop movsb cmp pop push pop pop mov outsl bound adc addl mov lcall push jmp add cmp mov daa adc insl pop pop pop pop psadbw es repz push and scas jns bound out inc movsl jmp rcll movsl mov adc pop cmpsl lret dec rcrb lods jnp push js xor xchg sbb rorb jno sub lahf les dec inc les or ret leave std pusha loop fwait sar xor ret movsl rorb sbb pop rcll or and aam sbb lock loope ljmp std out rcll adc addb addr16 pop or mull add outsl insl lcall lods mov mov and movsb mov rcrl fwait sub out pop testb cld scas jge pop mov xchg or out dec ljmp sub lea popa leave sbb inc pop mov or dec in lock bound xchg daa mov outsl dec movsb push push ret xchg push lcall cltd data16 aaa xchg jl cmp out push cmpsb test xor mulb add inc lock jle rorb daa popf adc jecxz sti jne shrl lods mov shrb (bad) add mov in sti dec lcall mov movsb aam cmp xchg loopne imul adc cmpsl sbbb movsl repz popf mov les fistp jge mov addr16 scas add (bad) notb aaa add out (bad) xor add cmp inc inc cmp div xchg insb cld pop test into add xchg stos inc out pop mov daa jge cmpsb cs pop push aam mov pop xlat mov add adc divb mov jns daa daa sbb adc or add cmpsb and push and cmpsb jl push lret mov cmp sti mov (bad) sbb cmp sub cmpsl pop in inc js mov or pop xor fistp or add inc dec pop movsb out out shld mov les inc push test push addr16 andl hlt xchg dec jle bound in movsb fisubrl mov pop cwtl out pop adc mov sbb cli pop popf daa or movsl rorl dec stc lcall subl pusha pop add inc jb cmpsb shrl shlb sub fistl mov mov mov jecxz je xlat subl and mov (bad) fidivrl jle pop mov addr16 jns sarb mov mov mov pop nop out mov clc sti pop aad lds dec ret pushf mov xlat imul int3 mov inc cmp jp pop lcall push jns into test jmp ret xchg xchg mov cmpsb mov xor inc cltd jb mov fdivs xor daa out out dec or sti jae add or sbb mov outsl adc stos mov movsb cltd pop pop xchg or cmp movsl out (bad) (bad) mov arpl mov mov es xchg std and push cmpsb (bad) cld inc rolb in loope push leave dec in jae cmpsb (bad) inc loop mov ror mov jmp pop cltd leave cwtl addr16 mov iret mov xor in sub ss popf inc dec and pop adc add insl mov dec popa decl mov loope and out lds mov mov jno rcll sub arpl jl loop daa lea insl scas (bad) mov xchg imul or mov and cli xchg mov inc ret inc inc sbb movsl scas fs push mov fwait pop and orl jmp mov out imul mov add std add pushf fs dec pusha and and int mulb jl push mov data16 mov movb dec out dec jbe lds pop in cmpsb sbb xor into movsb fwait mov roll ja sahf into mov push push pop sub dec mov pop stos xor sbb mov inc cmp in xor dec popf mov lods in sbb cs fnop dec mov inc scas pushf sub mov data16 xchg xlat call add or dec fisub pop mov or mov movsb adc pop inc sbb pop ret mov push mov mov (bad) push add mov imul inc movzbl dec mov sbb in inc xor dec pop sub mov sarl xchg rclb mov test inc sub das cltd jo fimul lods and test mov add nop mov and (bad) call inc mov sub orl jns cmc mov dec rcrl sub add dec mov mov mov int xor mov in mov mov dec mov cmp sbb (bad) xchg xchg sub cmp xchg int3 jno (bad) mov popa add mov cmp mov call dec jecxz add data16 call adc xor or jp pop ucomiss insl bound sbb xchg aas inc cli out cmpsl or js add and addl dec test mov sub jp sbb mov or popa push lahf mov scas xor jb stc nop mov and pop and adc push out ljmp out dec js loop daa dec sbb icebp jg inc shrl std mov int3 dec and test icebp push cmpsb popf aas inc pop xor mov stos cmpsb mov call inc xchg ja lcall negl push addl outsb mov xor xchg sub stc pop cmpsl imulb (bad) mov aaa sub push add add sbb adc les (bad) in repnz rol mov mov push mov out (bad) xchg push out fcmove lds xchg push adc jnp xchg xchg lock aaa inc movsl pop jge jecxz jne dec xchg fstpl scas aaa aad cmpsl dec push and loopne mulb pop cli mov incb mov xor lret push (bad) icebp sbb (bad) pop mov mov xchg loope outsb xor push out ds push xchg pop std arpl pop cmp outsl and mov or push stc inc adc cmc mov jmp adc xchg aas sbb cltd rcll cwtl andl in inc rclb pop sbb mov leave and mov cmp loop cmp dec jns and lret pop or cmpsl push and into pop pop scas addr16 in dec cmp insb dec mov negb insb dec inc xchg js jle cltd and popf add in push movsb pop and bound scas sub mov mov xor frstor ret xchg xchg cmp cmp push mov cmpsb bound jmp loopne pop dec or xchg aad adc fisttpll push cmpsb fscale mov mov iret (bad) addr16 or cmp stos test adc push jns sub cmpsb imul sbb out push mov add gs gs (bad) fst xchg ficompl cltd addr16 xchg cltd jnp popf push xchg gs andl jo xor pop (bad) aaa loope aam inc push cltd inc enter bound fwait add in xchg sbb sub sbb jmp les adc fsts xchg fstps adc ljmp jne adc xor push cmpsb stos ja dec or and es cltd sub test jle push lods mov pop fidivrl mov out jnp mov bound aaa or jne mov xor movsb test mov (bad) lret push mov mov mov arpl jmp and inc mov rolb mov push pusha ret jo ja,pt pop dec movsb push add inc fidivrl add pop inc and (bad) mov leave inc fdivs out and mov add rorb jae adc mov fidivl sub icebp out mov jb pop add rorb inc fmuls xchg dec ret sub arpl push sbb mov cmp or sbb mov aaa sub cmpl mov mov call loope xchg add xor dec ret mov xlat test in xchg lods scas mov sub cmpsl mov pop rol mov and jo int arpl pop sbb lds mov (bad) (bad) mov mov stc mov in fisttp push ret xor mov mov test xchg xchg add jecxz mov push pusha into lods mov mov cmp shrb popa mov ficompl sti shlb or or int dec les aas mov aam xchg xor cmpsb icebp or dec mov repnz out outsl rclb inc mov scas orl push inc ljmp add addr16 pop out pop call lret dec les cmpsl mov push inc push jo add jg repz test dec jnp fnstenv inc shll pop and loopne pop inc pop xchg cmp pop dec inc ljmp inc lock mov andl xchg in lock jns sahf mov jb push sbb mov repz icebp loopne stos test je dec and add cli inc or sub push dec leave mov mov ljmp add mov fidivr test or aas mov fmulp push mov jno mov rol or shll sub (bad) mov mov push dec mov push push mov mov inc adc addr16 jne iret jp xchg aad dec std add bound dec fwait and push aad shrb (bad) lock adc lock xor test (bad) fnstenv arpl xchg insl out jno push mov out adc (bad) pop sub popa pop and pusha and sbb mov mov pop (bad) hlt mov (bad) bound sub je inc sub scas pop outsb cmp loopne (bad) sub data16 cld mov cmp bound push les mov negb rol cld and mov lock xchg pusha xchg gs mov or aaa mulb adc xchg pop dec mov and inc xchg or in mov cltd inc xchg cmp ret mov dec gs pop sub mov sub int3 int (bad) xor sub cmp mov pop jb movsl fnstsw out sbb outsl rolb mov (bad) xlat dec inc sbb sub jb dec (bad) mov stc jno dec mov mov lahf inc or dec add xchg push mov inc add cmp mull mov jns je add mov jno and jb shrb pushf mov pop xor (bad) pop int3 lea ljmp cmp mov pop pop jmp dec pop test das xchg pop pop sub dec cmpsl sti mov cltd xchg jmp and xchg jg bound fndisi(8087 aas jns mov daa or insl mov or lds mov pop fsubp lret in xor inc das (bad) jb push lret sub and mov sbb loope pop std push ds mov lcall movsb fnsave in sub sbb adc (bad) and or into dec add es in mov or inc mov sbb mov sbb mov shlb add pop mov pop lcall sub fs cwtl cmpsl loopne mov mov stc cmp movsl xchg push (bad) mov and jns adcb dec (bad) hlt test mov dec pop pop into xchg sbb bound ds (bad) aad push out enter xor roll dec pop sub and jno or test pop cmpsl addl pop jl fucomi scas (bad) mul mov stc dec popa mov mov movsl inc les les lea stc test cmpsb out lods loope inc js add pop insl push loopne orl dec sti call inc pop adc hlt scas imul sub jb fwait mov sar and sbb fcoml jns jmp shrl mov inc inc cmp adc pop nop and add xchg pop cmp loop or push pop cmc sbb lds pop test std inc adc repz push inc and dec add inc jbe inc lock mov pop mov mov (bad) fidivrl jae or and ficom mov clc pop mov sub mov sub push sub (bad) lahf call dec insl cmpsb in mov and push dec cld out jle inc add bound pop sti cltd mov push insl dec sahf imul or std cwtl and daa cltd or mov dec into inc ret fcmovnb mov adc data16 and sub dec popf dec xor scas xchg or lret pop lcall cmp mov xor shll mov push xor pop aad mov fcmovnbe mov mov jno xchg rolb test dec jg add insb jno divb pop das jl add push ret sub mov data16 (bad) jmp cmp cmc loopne jl mov jg push inc pushf mov lahf (bad) adc jbe inc pop fwait mov pop in mov pop out jecxz cmp jecxz aad rolb adc pop or xlat push mov fldenv jg cmpsl push pop or dec addl es pop test and mov js lcall fs lea pop or enter cmpsl or repz pushl mov and add xchg mov outsb bound movhps setnp mov pop arpl xor lods add xchg add xor jns and into inc cmpsl adc mov xor cwtl pop imul pushf call cmpsb imul mov xchg inc push mov or xchg adcl in mov (bad) cmp sbb pop adc mov (bad) loopne das cld cltd add mov pop mov xor fidiv movsb das fs and out sbb adc jmp dec push adc ljmp xchg xor cltd mov xor leave and jg jno mov insl mov push sbbb in repnz inc cmpsb xor sub mov test std shlb scas inc cwtl add mov mov fmuls mov mov fisttp inc setp or inc cmpsl push push test stos insl dec imul xor test mov xchg pop icebp adc (bad) divb fisubl or inc insb js xchg mov leave mov (bad) int3 pusha mov jae mov xchg adc pop loope xchg xor mov stos dec inc pop mov add pop addl jno leave lret dec and les or push mov push inc push xchg iret (bad) leave push jae andl cmp (bad) je ljmp pop lods inc xlat xchg or cmpsl or sub and mov ja out and cmp fwait lcall push jge movsl sub daa pop shrl test test test push xor push mov inc lods bound and scas mov jns adc cwtl cs and lahf fdivrs cs adc je clc sbb adc popa and das (bad) or add clc bound scas add sbb insb mov (bad) gs or push mov push (bad) and cmp bound xchg stc and xor jl test or mov mov xchg aas call mov cmp dec or jl or in dec cld pop sti pop pop stos loopne jmp and pop rcl push push ret xchg adc ret add test lahf pop mov xchg pop mov xor xchg jns bound sbbl bnd push sub push cmpb cmc shlb cltd jne addr16 fldt jns jge repz xchg in lret pop xchg aas fs xchg inc mov mov movsb insl and lock icebp jo add push lret movsl pop stc xor mull jnp outsl out mov add into cmp jnp mov lods rorl (bad) jno mov mov mov add rcll test loopne jg cld push movsl mov xchg test jmp adc add fnsave and push jnp push lahf add cmp xchg mov lcall enter pop fsubl ret mov mov jg test bound and out xor cmpsl out gs add bound push lods sub mov xor push rclb mov mov adc push lahf mov cmpsb in je mov mov frstor daa cmp cltd mov adc xchg mov mov jp sub pop cmpsb cmp (bad) lret sbb (bad) xor cltd mov (bad) testl int leave mov jl cmp sub push in sub mov cwtl mov jmp ret mov push sbb mov sub movsl adcl mov aad push inc imul and inc pop aas push inc add push std aad mov push pop repz int loope bound sti shll aam std loopne add aas icebp icebp in dec adc mul pop jle xchg mov nop sbb imul rdmsr arpl in popf sub push ret inc js ja lahf inc or (bad) leave icebp cs cmp popa xlat mov inc jecxz xchg mov mul enter push sbb arpl fistp or xchg sbb fcompl mov ret and lea lcall jbe adc fstpt pop mov mov push jge push xlat mov mov mov loope jge fisub adc pusha sub mov xchg mov call jecxz jns mov stc xchg es jae xchg rcrb jne cli jno test mov cli cwtl insl gs xchg xor dec pop bound addr16 adc dec cmp adc std jp pusha sahf or or in js jb fldenv loope dec pop lock js js les jmp xor call push jae outsl cmp mov into pcmpgtb daa pusha pop adc jl pop ja repz bound es pop cltd sar xlat aad xor popa cmp adc pop mov mov and inc adc mov (bad) or xor faddl mov or in (bad) testl aad pop inc insb leave es icebp out push sarb aas xor je cmovge shrb mov daa int3 test mov arpl push or mov fild cltd js lcall inc out ffree into movsl lods cmpsl das es std mov in ret push mov mov sbb lods and dec jge pop ja jne daa inc xor mov sub inc adc mov and lcall cmpsb lods xchg out and mov xchg push pop ficoml dec xor mov mov mov xor lret (bad) mov int3 xchg imull and dec cmp adc mov cltd push pop lods fwait imul pop insb jmp add mov popa fsubs inc ds ret lahf xchg arpl inc imul xor movsb mov das cmpsb stos jmp sbb mov stc in inc shll jae pop sbbl and pop cmp fnop jge and push adc mov jae aas xor mov imul mov mov les sbb sub rcll mov mov mov fldt xor lods mov cmc arpl push lea das je ret jnp sbb mov out cwtl sub mov jnp cmp xchg adc bound lds push leave cmp bound cmpsl pop ja in push subb jo lcallw xchg sti std inc pop sbb jl mov mov cltd out dec movsl adcl pushfw pop mov xor scas jns lods mov jmp or insl mov and ja les mov xchg andl daa jae add mov roll ds js or aaa add rcl gs push mov je or das les testl cld push cli mov out outsl jbe cltd xchg push xor add scas sbb mov xchg mov pop pop sti jae push mov cld je sub sub push cmpsl pop inc lahf mov test xchg mov scas or jg pop jo sbb mov fs shlb and or xlat mov push adc lock mov outsl in mov jl dec add call movsb cld xor mov scas jle xchg outsb cmp test imul loopne inc movsb mov mov sbbb fildll pop inc and and cmp mov out pop mov fidivrl out xlat xlat out repnz adc mov mov add fidivl fidivr and popf mov sub lret push dec jae,pn pop cmpsb cmp add lea jp dec dec mov and (bad) lock cltd (bad) lods lods mov (bad) cld enter fnsave xor dec rolb jbe mov mov and or mov xor es mov shrb cmpsb push inc aad arpl sub push repnz xchg jg cmc pop out stos les dec pushf mov imul pop pop mov fdivl jo push pusha xchg repz test inc clc adc jns dec (bad) push jecxz mov popf dec push mov xor pop out mov loop mov sub xchg (bad) mov mov (bad) jmp outsb sub lock lret xor push add cltd sbb push and cwtl mov or cmc movsb inc or pusha mov adc je (bad) arpl cmc mov push push sub adc mov add push push adc rolb mov cmp shll and (bad) mov mov cld fsubr hlt mov cmpsl add mov adc mov mov stos xchg mov lea xchg imul sbb in or ret jne les ret push pop push das sbb cmc and mov fstpl cmp mov imul push sub and inc cld stc test lods cmpsl pop lods ret sub sub push cmpsl push andl (bad) enter dec sub cmp mov push pop xor sbb pop mov out aaa mov loopne sub ret xchg mov icebp dec jge inc clc daa xor scas fisubl lahf rcrb mov xchg inc or stos scas es push mov xor add pop mov pop fwait mov ds or lock pop push stc clc pop pop cmpsb (bad) cli pop jecxz or test imul cmpb cmc xor pop jnp movsl inc push test push mov mov mov xchg orl and into stos sarl rorl loope mov test xchg and shrl lahf (bad) insl push jns aas cmp sub mov and xchg (bad) cltd jg adc add mov test cmp sar sbb mov inc mov xor cmp mov sub xlat jns lcall mov stos or pop xlat movsl pop movsl sbb and scas imul sti mov push rcll fwait adc mov push adc jecxz mov cltd das and pop mov rorb aam mov insl mov xor gs or xchg sti push dec cmp insb loope cltd addr16 ret mov lcall cmc cltd or jmp and loope and xor mov and cmp adc adc lods scas mov cltd add push stos orb jae (bad) out jae lods adc sti mov je scas xchg and push jbe mov and mov pop rcrb inc or dec jno or inc adc es adc pop xor insb push std mov bound movsl cmpsl jle xor jns jnp (bad) cmp inc push comiss xchg add pop pop jne arpl fs loopne xchg popa les cmp test icebp mov in movsl and cltd in jo movsl lret sbb xchg mov clts lods jg add add push add hlt (bad) lret cmpsb stc (bad) out es pop adc dec (bad) adc movsb mov mov add loopne in pop jno xor jl repnz imul jecxz (bad) xchg (bad) adc (bad) in arpl stos mov cmp lahf mov mov push lret jl mov (bad) in jle das add xchg movsb mov cli jecxz sub inc (bad) ret adc xor xchg (bad) mov add clc inc (bad) mov dec push stos jmp std adc pop mov dec mov outsb jmp mov mov (bad) iret inc (bad) fstps jae cmpsl pushf lahf cmp jp jge (bad) js int into sbb es mov icebp mov hlt push std mov mov mov xchg dec mov pop pop (bad) (bad) arpl insb (bad) out mov and jmp jg sbb jbe xchg mov and (bad) mov lret lods mov mov sbb imul (bad) or ja (bad) xchg mov sub mov loope and mov out adc adc sub xor mov mov mov sti mov sub and inc gs mov (bad) cwtl xchg out sub fild fwait out in cmpsb ds mov iret xor jge xchg dec jmp sarb inc movsb ror add mov fdivl mov jae roll sbb (bad) ss imul insb loop jbe fsubrl (bad) adc jecxz cld push xchg fwait push jbe cmp test or xchg popf mov and bnd xor test sbb add imul mov andl push cmp mov sbb dec lcall xchg icebp xchg mov outsb inc mov lret int das cs in ss fs xorl es mov sahf aaa aad mov or fnstsw inc or cmp dec cmpsl lret je pusha mov fwait sbb mov jne jmp mov cmc movhps pop sarl mov fmul mov lea sarb call mov add sahf test jns xchg stc icebp add fisubl inc xor mov mulb stc cmp pop test mov adc (bad) xor xchg and push push int3 or bound mov xlat insl jmp mov (bad) cs adc jecxz mov fidivr fsubs cs cpuid repz add out jae scas movsl xchg enter sahf outsb jo dec and pop std mov jnp lock adc inc fistpll das and sarb jae push push iret fbld push (bad) repz fldenv int3 add daa sahf in cltd int sub dec and (bad) jb push fistp test xor test imul mov mov (bad) mov test xor mov lcall mov push xchg mov icebp mov cmpsl mov (bad) push pop cli out mov incb sbb into loopne sub xchg xchg (bad) mov mov add fistpll mov xor pop dec mov insl mov fildll dec test (bad) lock adc (bad) mov xchg sub cmp inc adc enter mov jbe or jg in mov or mov jge jnp repnz mov jo data16 fwait test loop push cltd (bad) pop rorb mov scas or movsl jmp mov (bad) outsb mov (bad) and dec mov arpl pushf mov jge arpl jo (bad) lods mov cmp xor push mov sub je fldenv aas jecxz mov or out loope ret xchg xchg cmpsl add js iret loope push addr16 xlat mov sahf push cmp xchg mov add mov addr16 jg mov repz cmp pop loope mov movb push jmp or dec notb sbbl jb movl lods mov or cmp or adc fcomps xchg dec repz movsb inc (bad) out mov cmp lods push push dec or (bad) int inc iret and cmpsl sti daa test fwait cmp cmp int3 inc mov jns mov mov lcall into js add fdivs les pop loop or mov push dec loope js and fsub mov sub mov xlat gs or mov jno es arpl scas cmpsl js icebp mov cmp iret jbe pop pusha ja inc dec inc mov jp repnz mov mov push push cld mov cmp data16 out mov fild (bad) xlat push inc cmp jns (bad) aaa jg in or and push mov cmp dec outsl jecxz inc imul mov cltd dec fidiv mov addr16 fnsave mov in cmp dec xchg mov pop movsb mov xchg pop xchg (bad) pop add out cmpsl dec push repnz push cmp cmp dec or divl push and les adc shll bound mov pop sbb stc movsl xor mov fstpt adc jmp push pop mov iret aad movsl cltd mov fisubrl mov add mov adc xor sbb shrb bound mov sbb lret pop mov dec aas roll mov stos popf les ja stos xlat jns mov mov adc xor add adc pop out dec mov rolb imul pop fsubl neg jg cltd popf push jae xor lods and inc imul aaa sub xchg inc jo xchg and xchg dec iret mov push mov pop les lods ret dec add mov jo imul lds push xlat (bad) bound cmp insb out and das repz dec push loopne adc fbld imul popl xrelease lds popa adc mov ss fs imul das sbb mov lds push mov ret mov push pop pop cmc test out iret mov ret in call pop mov pop cmpsl dec mov int3 mov lret and out push imul xor or fdivs inc sbb jbe pop pop std push cmp mov scas or divl sti (bad) sub dec leave subl mov pop xchg push lds into or add dec das sub pop and dec test test bound cmp addl into push push sti jae and cltd aas sbb int ljmp stc push jge add push dec and sub push mulb cmp nop xchg xchg push and adc dec add (bad) jecxz sbb xchg mov sub lea mov inc mov and repnz mov mov sahf ret sub xor cmpb push mov xchg pop (bad) mov jae push cmp das xchg xor cld daa add scas movsb dec cltd stc mov jmp mov push bound push inc pminub mov mov add dec mov add sahf ficomp mov out inc and adc fwait mov inc stos out mov movsb or mov xchg mov ss lods movsb inc sbb jne sub xor xchg unpcklps movsl sti jnp jne orb iret imul xor jecxz mov adc mov mov or push pop inc in addr16 int3 add lods push call add leave into fs fisub mov push in mov fimul clc push xchg pop pop add mov daa push inc pushf shlb inc mov ds and ret int (bad) mov mov repz stos cmp dec inc xor mov loopne enter out cmp (bad) pop cmc mov adc stos cmpsb push mov cli pop pop mov fwait mov and inc or add sbbl and test out arpl andb out stos and jecxz sbb or push std mov and imul lcall jns or imul pop mov iret sahf fstpt fsubrs sbb fwait mov shlb sub pop jle shll push xor add sub nop out mov mov mov xlat mov stc push cmpsb int xchg cmp arpl cltd cmp pop rcll sub or pop mov and gs ss lods jb lcall pop dec hlt pop xor sbb push mov fimul push sub andl jns xor xchg in mov testl stc cltd (bad) into jae pusha inc or jle or sub pusha pop in mov mov mov mov leave flds mov add imul aas daa adc inc movsb mov arpl sarb pop jno fistpl cmp and mov mov loope imulb subb push fmuls inc cmpsb cmpsl int fs cmpsb jge lea sarb push mov sub xchg aad pop pop js repnz adc push jns xorl push inc cmp ljmp into push lret mov pushf jge sub adc adc push dec js xchg movsl adc imul in outsl mov sbb (bad) pop mov bound popf mov les dec ret repnz mov cmp or cmp arpl cmp movsl pop faddl stos sub add aad jge cltd cmc ss jle (bad) ret mov mov inc or xor sbb repz mov push or data16 das xor add (bad) mov or pop cltd (bad) jne loopne mov mov xchg pop sti xor (bad) je adc pushf mov or clc push mov scas or mov repnz test cmp add mov in arpl jle dec movsb adc lods mov lret push mov dec mov clc loop int3 inc mov mov add cmp fnsave scas add and cmp sahf mov out sub push fcoml movsl pop xor sbb mov lock jl push in into push push xchg mov jmp mov add or je rclb add xchg ret lea push inc je push shlb mov push adc mov sbb cltd lahf shll inc aaa xchg test or sub adc test add mov or imul mov jmp das shlb in out mov sbb pushf das into es push arpl mov jne sub push mov inc xor icebp (bad) cmpsl mov jae je scas es mov adc imul pop ret js inc adc cltd jl jecxz xor shlb mov mov xor (bad) test mov cli push cld push andl sub lock adc sbb mov nop mov andl (bad) rcrb push push jnp popf (bad) out popl jg shll aas jge push sub jne pop mov add inc push add push das sub push test adc inc adc (bad) loopne add adc inc (bad) hlt arpl and lea and jecxz sbb cmp jbe aam mov ljmp add movsl xor mov notb out insb clc (bad) daa sub outsl insl sub hlt sub jne push jno sub sbb and mov mov ljmp movsl dec jne mov jno push xchg sbb jns out sub adcb dec mov adc cs mov mulb imul jnp pop mov jo ljmp xor xchg mov jecxz xchg add cltd mov cld sahf mov or xchg mov push add cmp imul movsb pop leave pop shlb push dec cltd dec add sti das pushf sbb out jmp xchg mov sub bound sbb jno jmp fsubrl (bad) mov call push inc mov mov pop roll imul xchg xchg cwtl (bad) xor sti mov mov scas and mov cmp fistpl mov fbstp leave adc (bad) popf inc sub cmpsb dec dec jns out gs pushf xor and cltd insl arpl pop aas shlb and (bad) jno push cmpsl icebp scas or and adc bound inc push jo lods rcrb arpl shl movsl stc dec or sub mov cltd mov repnz lret cmp and mov cmpsb lods insl in fiadd (bad) push movsl xchg fwait mov lds cmp repz push add and inc mov push (bad) jp jns cmp in jb sbb inc iret dec xchg stc fnstenv mov mov xor outsl adc mov les mov cmp jnp fisubl insl jp call dec pop pop lods movsb add out mov cld test cmpsl test test popa dec insb mov popf xor or mov test push scas jp xor xor test stc cmp out pop mov add mov jp mov mov dec fmul sub pop inc insl jns aad ja mov add mov sbb push pop cmp xor mov mov sbb and cltd test mov xchg pop shrb xchg cmp or xchg or mov enter sub jbe popa rcl mov in mov mov pusha daa sub adc pop cmpl in pop lea or test cmpsl and pop jo fistp std (bad) cmp mov xlat xchg jmp fbld imul pop test dec inc lock fs and lea pop push xor lock sahf test push mov xor in jmp lods mov or (bad) cmp and mov sti roll xor repz fs stc pop mov sub test cmp jbe add lea push pop pop iret into (bad) mov sub adc jecxz and jns mov push movsl lods and shlb mov inc jns add lea mov lds adc or adc push cwtl sub sub hlt pop rorl sarb pop mov sub shrb mov cmp in adc (bad) imul repnz sub ljmp or cmpsb xor adc scas sub add pop repnz and idivb adc mov (bad) mov pop xchg adc cli jb cmpsl xor into mov mov lds sbb xchg lock or call sub dec pop mov dec push stos hlt push dec sarl (bad) and adc push fdivs and sbb aaa aad loop and mov and aaa out inc hlt mov and roll lahf mov mov cltd cmp scas jae add dec push mov adc cltd xchg cmp adc aas scas mov icebp shlb or xchg cmp mov mov xchg sbb cltd jne mov scas jge pushf dec xlat or and mov insb add into mov pusha sbb jg push insb es mov jne inc out cwtl jl xor call dec add xchg mov fidiv mov (bad) lahf aas xlat mov sbb pop aam or jle fmulp imul push das and jae fisubrl dec sbb pop sub (bad) test cld push push mov pushf imul pop stos mov pop out adcl mov add mov leave mov in aam and mov imul (bad) out test or jbe push add insb (bad) ja inc mov mov mov pushf mov lods mov movsl mov andl pop push inc mov add jne mov sub push fisubl (bad) mul lcall ret mov push add aaa mov adc (bad) mov loop mov add mov push inc mov pushf sub outsb mov movsb dec in add push loop mov jg in mov lds mov mov sbb mov ljmp stos xchg mov mov outsb test add daa sbb mov lods icebp outsl pop cwtl mov or xor mov mov cltd addr16 setnp xor sub repz xchg icebp sub into sub pop test jo mov pop stc push jno unpcklps jne fs das pop mov ds pop mov xchg out xor cmp adc repz lods scas add fistpll mov adc jns mov test dec xor or add adcl daa mov pop xchg pop mov imul jb or adc lret jno jno xor inc jge push and bound idiv loopne lcall xor mov imul sbb mov mov add or mov popa imull insl sbb and sub in scas pop push movsl jmp xlat test lahf jnp (bad) ja sub inc mov adc mov cwtl dec mov enter push cld mov das xor sbb and push mov lret int3 imul cmpsb call add jmp mov bound lds imul (bad) jg push add mov loope lods mov mov in inc (bad) sbb dec (bad) sub mov mov xchg (bad) ds fstpt daa lock test xchg (bad) push and movsl xchg rcll xchg lds gs or jmp xchg jp mov jl aam pop lahf cmpsl mov mov enter lods xorb js movsb das (bad) hlt inc cmc push cmp popa or lds cmpl mov add (bad) xchg and rcrl addl movsl rcrb push sbb bound pop aam gs adc daa or out cmc data16 pushf stos shl mov movsl stc sbb repz ret jmp mov and mov jns int cmp bound and sub dec add lods arpl jae mov bound lods mov mov movsb pop jo idiv or inc pop call push scas add rolb xchg xchg add loop sub push push pop gs dec pop shrl pop pop jnp pop jns jne mov data16 and mov dec xchg push jne and cs jge aas std xor dec inc jecxz cmpsb jno jp dec test jae stc out adc xchg mov push jne or mov push adc js (bad) mov lods inc test cmpsl cmpl xchg jnp out inc push sub div cmovnp popf int jae movsl idivb mov and lock cmpsl fs pop (bad) jns out cmp imul scas pop rorl leave (bad) lret xchg hlt in int3 jne or test scas gs push xchg adc add insl andl dec push and test scas mov dec pop pop pop shlb mov dec loopne mov sbb pop mov bound sti test mov mov sbb scas jae enter add sub mov and inc daa add bound enter loopne or cmp mov inc adc gs punpcklwd notl pop test or data16 (bad) in cmp pop int iret mov mov call sahf in pop sarb mov testb jg mov je (bad) mov lahf (bad) push adc xchg inc cmp cmp or mov and cmpb out cmp push adc inc scas and daa cmp bound fwait stos xor mov movsl pushf lret cmp popa outsw mov cmp cmp addb mov xor xchg loopne jb add insb jo cmp ret std loopne test movsb bound mov cmp jne push xchg mov out mov mov mov das arpl mov repz (bad) mov adc orl jno lods shll mov mov ret pusha movsw adc fwait out xchg sub call sbb pop sbb mov (bad) and leave das inc gs push incb out jmp lret cmp cltd cmp pop fiaddl es pop addr16 das xorl sbb repz mov mov scas movsl leave bound fld pop or or push daa stc cmpsb notb push ret (bad) jg mov nop repz mov mov sub std mov imul (bad) hlt cmpsb and lret push dec dec adc decb data16 shlb and push pop or mov addr16 fnstsw jle pop pop fistpl cwtl ja adc cld cmc js adc std dec mov stos subl adc pop inc add aam mov cld mulb pop mov xchg inc pop inc lds and xor cmp push xor nop push stos (bad) mov mov and insl dec lea mov aad dec scas fmull (bad) hlt mov jecxz sub fisub add lods dec mov cmp in ret incb lods aas sub imul sbb jnp bound rcrb mov mov xor or or popf add in dec cwtl inc aad (bad) jmp pop cmp sub arpl pop cmp and push cmp bound or add adc xchg (bad) imulb jb lcall pop rclb inc shrl arpl (bad) mov mull xor add pusha fnstsw mov incb aam add lcall add xor movsl add shr xor js sbb imul mov jns mov arpl cs vpunpckldq shr and das mov repz fbstp xchg mov call imull inc sub xor stc xchg shll shrl bound push cli mov push mov cs pop jae mov jb jl leave push mov out pusha fwait mov dec mov add mov cltd mov push mov sti (bad) jb mov or movsb ds push dec push std pop pop jae sbb mov cmpsl cmp jmp mov rorl adc lret jns add fwait jae outsb mov mov out sarb mov dec and sub addr16 lret push mov daa das pusha mov inc or imul mov fidivr xchg mov or xchg sahf pop imul xlat cmp xchg test add cmpsl cmp mov cmpsb test aam clc pop (bad) leave mov call and mov mov push fwait mov add aas test (bad) cli push mov into pop rolb mov dec mov xor pop jo mov (bad) scas mov mov call repnz inc and xchg xor aas cmp mov mov cmp mov lock add mov fiaddl loop push or push pop sbb repz mov jbe hlt outsl jb adc scas pop cld lds and xchg sbb aad sub adc loopne daa movsb jmp xor dec cmpsl xlat and xchg mov outsl xchg fistpl mov int3 test out mov insl or ss pop mulb sahf mov mov cmpsl mov xchg icebp test dec inc inc push xchg mov addr16 mov pushf data16 sub out sbb xor je in inc lods imul jb and jmp outsl les mov adc ja push pop push aad sub inc cld push and out adc mov icebp sbb cmp aas push daa mov jae mov js mov movsl out push mov pop insb push scas mov bound push mov movsb mulb push enter cltd push dec sbb sub mov in loopne cmpsb movsb push dec mov (bad) sub in lea xor out cmp push sbb aaa imul sub cltd xchg push inc mov mov pop jle ss or mov ja xchg push pushf call push sbb adc push dec mov mov and fnop ljmp or or inc cwtl nop mov cmp dec mov cmpsl enter mov lds xor out into lcall or ret icebp adc jp and mov movsl xchg sbb call shrl cld mov cmpsl or mov push call nop mov rcrl cmpsb scas pop xchg add xchg movsl push jp in jns les (bad) jp adc and ja mov dec movsl sub adc pop mov mov push add sbb and pop sti cmpsb outsl fiaddl cmp enterw bound and cmpsb mov add xchg jecxz in and inc cmpsl ret imul and jne out bound (bad) das adc mov add cmp dec mov xchg mov cmpsl fs mov dec movsl ret pop es push mov hlt insb rolb mov gs cmp leave and inc out xchg (bad) xor push push xor or inc bound adc loop loopne mov outsb frstor aaa scas cmpsb mov mov adc xchg cli push mov lahf adc ret pop inc or mov mov cmpsb push jmp pop fs cltd loopne jae jo movsl xchg xor mov movsl stos mov xchg cmp fsubrl mov lahf cltd test and mov mov fdivs pop mov loope pushf sbb ret scas and cmp in adc and xchg or and sti icebp cmpsl cmp mov push mov cwtl cmp jmp lea in movsl adc mov andl imul jno sub sub xchg repnz insl add adc push int mov pop repz cmp push ficomp mov aaa aas loope movsl out stos sub leave (bad) and jmp lods movsl iret mov xor outsl pop mov imul cwtl into pop cmpsb (bad) pop mov xchg mov mov bound cmp movsb push add outsl jo add in movb ret or or lret pop repz pop (bad) bound roll xchg and sahf movsl loop dec adc js stc sbb mov je pop add addr16 test lret loopne inc inc jle mov rcrb dec cmpsl or loopne mov inc adc in mov aam cmc sbb insl out (bad) sar pop push sti (bad) pop pop stc sahf imul jecxz pushf pop cli xchg mov push outsb mov out jl clc in je shll fs mov inc (bad) jae movsb mov dec jle mov push call pop mov mov mov clc mov dec jl xor and or loop imul sub ss and (bad) mov and fidivrl mov inc imul call jmp and inc cmp cmp xchg sarb mov out mov ss xchg pop mov jns pop mulb mov lods pop mov xor js mov loopne jmp fisubl addb xchg sbb mov xor cmpsl pushf sti push punpckldq or int (bad) aaa pop lock xchg test cmp repz dec iret pop loop dec pop movsb test test outsb cltd icebp comiss arpl xchg pop add pop (bad) in enter std ja addr16 xchg jecxz sub ficomp inc or pop pop and mov mov cmp dec movsl jp jg pusha lods and mov dec outsb adc frstor cmp cmp popa mov lock jecxz jge std stos jns stos (bad) xchg jle cmpsl shrl clc mov inc inc pop sub xchg pop pop int3 sub and lret inc add dec cmpsb mov xchg test xor mov sbb jmp mov sbb push push dec lock dec loop and or (bad) fnstcw loope push jge jne cli or cmp cmp or popa sub mov dec inc (bad) dec sbb xchg fwait sbb jge repnz addr16 inc cmp jns push fsubl mov out lock mov es xchg sub cltd enter inc pop pop addr16 and pop arpl and sbb jno jne mov arpl and inc mov cmp aad ja (bad) sub test dec int3 ja dec cltd fdivrl popa dec ret in jge (bad) push jge pop test (bad) push bound out sbb and icebp and test dec sbb xchg inc pusha jge jae jecxz and sub and in cmp mov jl lea daa jne xor cmpsb loopne out imul cmpsl negb add aad xor sub mull and pop push pop arpl adc push pop jns pop jmp (bad) lret repz (bad) aaa mov xchg rcrl jb sbb push daa cmp nop mov xchg cltd mov dec (bad) in mov cwtl push cmpsb sbb adc xchg inc mull lds mov dec xchg aad sub popa xchg pop scas ljmp dec pusha xor pop bound lods cmp mov mov push popa sbbl jae mov fisubrl lods sub fwait iret aad iret loopne rcll pop movb mov xor test bound out jne in dec imul xlat int jmp pop sbb test xchg push out daa mov mov and cmpsl stos mov (bad) shlb cmp jp xchg xor xchg (bad) mov jmp pop dec dec add pusha inc mov fcomps mov mov pop mov andl push in mov movsl cli xchg sbb cmp dec jbe cmp mov outsb cmp jbe nop mov sarb roll into xchg movsl mov enter daa pop xchg mov fcmovnbe cmpsl and loopne imul scas mov test daa xor xchg adc or mov imul mov dec or cmpsl jae push (bad) cmpsl fs stc jno ss push xchg rorb outsb pop dec jmp inc notb insl and or ret fsubs jno cs sub scas mov sub cmpsb mov stc (bad) aam inc mov dec or mov cmp mov jb push or mov sbb push inc pop jbe sub aad sub adc lods fwait aas push movsl fwait andb pop mov adc out mov lods push adc pop add lds movsl mov or (bad) lods daa fistpl in jmp fcompl dec lret mov cmpsb push inc adc dec pop loope pop add cwtl cmpsl js mov mov dec popf cmp push mov pop cmp adc mov insl das xchg mov fsubrl add push inc icebp adc aaa mov add cmp das clc dec mov mov xchg ret add cld mov mov cmc or rcl add mov in imul sbb scas into movsl cli pop imul nop rcrb cltd mov adc push inc and jecxz push xchg mov pop nop (bad) ds outsl inc or mov lock mov fildll mov fisubl imul dec push inc add mov cli jnp hlt fnop pop mov and sub dec cltd loope mov iret pusha daa fcmovnb sbb pop repz inc gs push mov mov xor jns xchg sarb dec movsl insb push std xchg mov jb jns sub test adc mov je mov imul pop sbb pop ret (bad) pushf leave mov repz push and cmpl call sbb test loope cmp ljmp scas inc fcmovbe inc repz jne inc adc jb (bad) arpl sub push test andl dec pop lds (bad) adc rcrb movsl push cli sbb xor das mov call (bad) shll xchg xchg (bad) aad mov movl and stc (bad) and (bad) and adc bound xor (bad) fmuls stc leave inc movsb popa sub test out stos or call shll inc mov inc out xchg sbb and push jnp (bad) mov cltd pop ret push cmpsl pop mov psraw sub or out stos xorl cmp (bad) jae and bound cmpl cmp subl pop jp cmpsb cmp xchg inc sub and les scas loope leave pop pop fwait daa fnstsw xlat rorl arpl jnp cmpsl popa xor inc xchg pop pop mov dec xlat (bad) mov xchg adc js sahf mov loopne test dec roll cmp daa aaa in jp jge sbb subb fstpl jmp sbb pop sub push push in and (bad) (bad) xor hlt inc bound lahf pop icebp adc dec mov cmp test mov sub jno out mov sbb movsl js or sbb and add pop dec jmp mov repnz and getsec xchg jecxz adc pop (bad) aad mov stos outsb pop mov cmp lea ret (bad) aam mov fnstcw enter cmpsl dec in (bad) push jo iret addr16 and inc (bad) pusha xor stos jp lock sub je lods test nop inc imul sbb pushf dec pop mov jae cmpsl cmp mov inc pop mov fwait mov repnz jmp and xor repnz mov adc out cmc mov test mov sbb cmp and mov push mov xor xlat lret or fnop add loope inc and mov outsl pop sbb lods jno movsl xchg mov jle scas (bad) test pop pop mov or adc test and lds sbb ret inc movsb cmp push dec and mov add cmp or dec or add push je dec jno stc imul adcl insl jle jnp pop jbe pop in out jb cmp sar or mov mov imul and lods aaa push push push movsb jno mov cmc cltd jg bound sbbl add push push mov popf mov pop inc add repnz enter daa pop dec mov sahf jns loop pop dec fldenv insl pop xor hlt jmp (bad) xchg bound repnz or adc push inc cmp mov adc mov fimull int popf cmp mov sub shll cmp cmc mov jmp sub push push lea sub clc mov out dec mov adc mov mov (bad) jmp and lea or sahf jae sbbl movsb imul popa pop jb cmp scas into mov mov rcl push testl (bad) and adc push jno add movb mov imul notb sbb jae inc mov bound mov dec addr16 fdivl push inc aaa sub hlt jecxz addr16 sub and es loopne jp pop jno mov iret jns add popa add fdivrp loop cmp cmpsl andl mov and popa imul subl loopne psadbw in imul repnz lcallw pop sahf pusha (bad) fildl cltd mov sti add aas jae mov loopne inc dec in and subl nop inc cmpsl repz movsl mov movsb pop and jno pop les shl addr16 sbb lods push into push xor js cmp inc mov jo gs fildll mov dec inc clc bound xlat imul xor and test loope mov pop (bad) pop sarl sbb sarb add sub loope mov pop inc aas flds iret dec pop mov xchg mov pop inc (bad) sarl or add cmp fnop in sbb mov and dec xchg mov hlt mov popa dec jle inc sarb test out iret dec imul enter cmp pop and test push dec pusha les and mov andl push jno xchg xchg aas ja jno das std or loop xor movsb iret nop fisub dec pop sbb jge scas pop push mov test mov jge loopne and rolb je jae loope xor xor pop dec xor bound sti shrb fsubs enter jns test sbb cltd and repnz inc pop inc jmp popf test push gs add xor sbb icebp repz cltd and and rcll push enter xchg dec test bound pop jbe (bad) mov inc push outsl arpl pop aas sbb test push test (bad) bound movsb cmp cmp jb jno jns movsb jbe cltd mov cmp fcoms cmp push dec xor mov leave pop (bad) and mov addr16 xchg (bad) std inc inc or jle (bad) aaa mov mov popa sub inc pop adc inc (bad) mov xchg mov out pop cltd sbb cli iret jle xchg add iret ljmp test loopne mov mov iret sub push jo jecxz dec cwtl add xor jns aas pusha and xlat and inc sub dec repz in sbbb inc push daa and pop mov jnp outsl mov cltd jle or fiaddl popf testb and pushf mov push (bad) mov shll sahf xchg dec add push mov lahf shrb in pop test cltd mov mov cmp jnp pop sbb sti pop mov sub mov sbb add cmc les pop cwtl aad out adc add fnsave or xchg jne pop std bound mov or pop push (bad) mov lods dec jno orl ror mov add and aad sub push cmc subl dec cmpsl gs push dec sbb out mov out xchg in push nop test div sahf jns add xchg pop lret jge mov mov jp xchg (bad) or fisttp add cwtl rolb lock dec mov pushf ljmp cmp dec dec or jb jno andl cmp mov mov jge std in pop (bad) call arpl mov pop dec jo cs add xlat shr mov mov test cltd mov jne jg mov jne and push shrl ret mov adc or popa sbb loop mov cmp cmpsb ret push sbb clc or sbb sub rcrl mov dec fdivs cmp mov shl adc pop adc jno fwait sbb lock (bad) out mov rcll xchg icebp xorl jge (bad) in and add pop mov fwait mov dec or push pop out pop movsw (bad) jmp push dec pop popf sbb dec bound adc add mov hlt jne jnp push inc stos loopne lds subb out pop mov int (bad) call popa mov push jbe mov outsb jno aas loopne addr16 dec add or adc inc add mov mov loope push jae pop out popa test or js cli lock das test jg or mov enter (bad) adc pop movsb push std pop push lahf (bad) out add dec dec (bad) cltd xchg cmp fadds sbb in (bad) mov pop iret mov daa popa push shll repz mov adcl sub das push lock (bad) (bad) frstor shrl pop or adc push jge popf mov jp out cltd push push cltd push mov cmp movsl in jb fwait dec insl pop sbb jo fidivl cltd xchg mov cmpsb std sub xchg insl and jae inc pop (bad) mov mov loopne mov int3 push scas sub push cltd lock sbb data16 loopne jl stos fidivr sbb shlb or mov aas idiv mov bound stc outsb bound mov je and inc bound pop fucom cld mov loope add hlt and pop cmp xor andnps dec mov inc das daa cmpl mov add adc sbb movsb outsb xchg popf popa and test sti or leave pusha repz lock mov xor mov inc pop dec pop bound xchg pop pop addb push pop inc and add inc (bad) hlt xlat cmp adc ss or subl movsb jp stos cmpsl fmull inc aaa call dec mov test enter lcall push sahf add fcomps in add and mov iret push cmc cwtl fmull mov addr16 sbb push popf fidivrl popa leave dec fsubl sbb adc adcb (bad) in or jle pop fistpll bnd adc pop or jo adc jnp push or icebp xor aas inc addr16 imul dec cld testl dec adc ja outsb inc fwait stc sbb ljmp call push test mov mov inc push (bad) jb push push mov test popa mov xchg jmp clc fwait mov fldenv push mov cld addl push mov pop adc lahf fsubl adc or xor lods in pusha fmull pop in mov xor imul jb xchg sbb adc jae imul inc sbb lea sahf and or lret (bad) xchg lods insb xchg leave pop bound xchg arpl adc mov push pop push sub xchg test roll loope xchg push sahf pop orl loope and pop xbegin xor ja (bad) adc into adc sub inc cmp vmaxsd jge xor cmp movsb sti popa jmp daa or pop add cwtl test movsb jg sub fsub pop cmp adc mov xchg adc into sbb (bad) leave sub pusha ds aaa add xor sub jle rol or sub nop pop xchg adc nop rcrb loopne pop add addr16 call pop sub xorb jecxz xchg push hlt and inc aad and rolb ret je lcall std lds pop cmpsl outsb pop xor adc sbb imul pop push cmp xor fistp ds dec in jbe mov clc insl out pushf push mov sub sbb mov xor xor ljmp and xchg xchg sahf pop add std int daa mov pop cmp rol cltd std jns xor cmp outsb add sub into leave pmullw lods push dec (bad) push test xor mov pop or dec and and jmp or jmp mov inc pushf cltd bound out xchg jnp adc outsl inc push pop and aaa adc rolb jge pop roll leave out shlb sub or data16 std fsubr lock or pop adc shlb jge sub fnop fstpt add sbb inc scas iret ret daa mov xor inc pop imul movsl mov daa hlt dec sarb push mov jge rol test sbbb out hlt pop pop inc pop adc jno nop add icebp dec xchg sbb jne nop lahf stos dec add sbb das inc inc pop pop mov dec mov mov pop daa pop bound ret add scas add cltd mov cli push mov (bad) push inc das pop (bad) arpl mov and ret and andl xchg xchg and pop add add stos hlt dec pop push cltd add out inc pop dec push std add dec stc sub add mov mov or add and test xor inc jo mov fwait popf mov cmp (bad) xorl inc insb mov iret inc adc popa sbb adc mov cwtd pop rorl mov fistpll fsubs fwait pop adc inc pushf lcall dec adc out sahf into dec xor cmpsb (bad) and cmp mov add mov sarb pushf cmpsl aam aad jnp sbb mov xchg loope (bad) cmc sbb stos xchg gs leave push imul jno add xor cmc jae sbb cmp (bad) (bad) fstpt dec fwait cmpsl daa add push mov adc xor std loop xchg pop cmc and lds add pop or lret sbb mov repnz and dec ja test scas pop andb inc jg outsb icebp fwait mov inc jno and push inc jns loopne sbb push xchg clc cwtl mov pop and dec popa push jae pop lcall ja fdivrl sbb pop pop inc add jno cmp mov mov fmuls in inc je iret cmp stos xchg jne sub adc ficomp popf out iret sub xchg lds cltd scas or into bound xorb mov cmp popf ja loope push mov xor xchg call shlb das mov and push mov loop pop std lock iret call rolb mov popf inc mov or rcrl dec xor negb xchg jle sbb dec xor lret pop outsl lea cmp sub adcl mov daa jns cltd sti and dec mov push jg jb push ja dec (bad) ja std (bad) adc jno outsb ja,pn dec lret dec xchg mov scas cwtl mov (bad) sahf dec loope dec dec jae loop lahf mov test jns mov pop mov xchg mov roll out add jecxz and dec test mov push test fcoms es loopne fadds pop jge cli popa mov stos (bad) out add mov pop or cmp hlt pop mov mov int mov bound jne sti sbb sub cmp xor pop rclb dec cmp je mov jg (bad) adc and xor cmp dec push out aas data16 mov jno orb loopne movsl inc iret popa xchg iret mov loope into push mov mov sbb and lea mov push pop push dec imul (bad) pop popa lret outsb leave arpl jno roll and jbe dec sbb cmpsl sub inc (bad) ljmp stos orb cmc icebp fldt add (bad) cmpsl pop test (bad) andl punpcklwd adc push int dec fs (bad) inc test adc adc inc push fadds cmpsb xchg cmc adc mov aas mov js sub ret adc and adc sub dec daa (bad) inc out cmpsl cltd data16 dec add push ja (bad) in in xchg xchg leave or out arpl jecxz ficom add mov xor in lods cmp sbb dec mov jmp into pop mov (bad) or lea push add aam cltd sarb (bad) xchg lods and mov loopne inc xchg rclb pushf cmpsl loope mov (bad) inc stos sahf sub mov inc gs shlb adc and dec adc or or adc repz xchg clc pop jmp or (bad) mov test mov jnp and and mov or adc orl sub (bad) adcl daa mov mov dec mov (bad) testb cmp inc mov outsb mov cmp (bad) imull mov xchg pusha and mov arpl jecxz call or xchg xchg cs push lods arpl cwtl push adc and lock loopne dec mov xchg cmpsl nop rolb push cmp stos movsl jae dec imul pop and sbb mov cmp dec imul std sub mulb addr16 xchg jns jmp daa cmpsl xchg popa jno out popf lods loope cld cmp sbb lea inc add scas shll and lea popa test dec sub fstl sbb insb push outsb mov push test pop mov cmp rorb cmp int pop dec mov rorb decl mov lea add sub jb sub dec and push lahf hlt cmpsb imul out jo or push out pop or bound enter aaa xlat mov jl or inc in inc mov xchg cmc xchg and nop lea outsl call daa ja and add es mov or or es sub out out lock push (bad) add lahf sub sbbl push call xor loopne inc movsl loope xor lcall loope dec movsb cmp loopne pop add mov adc repz repz jno mov punpckldq inc fdivrp int sarl adc lock inc popa mov pop jnp (bad) mov add call fnop and jle aam fistp cld in adc xor push cwtl iret sbb xchg pushf (bad) xor fdivrs lahf rcrb sub popa or daa gs cld inc mov lcall and int mov pop mov add into (bad) in test or jb lret and jae adc xor inc inc add ficomp not add (bad) mov insl jns mov adc and cld xor sbb and xlat fcoms xchg das call clc push lea adc jg lock stos nop out sbb mov push and in dec loope popf or cld jecxz cmp xlat lret lods mov push lea outsb int pop xor xchg arpl adc cmp scas icebp addl or lods or fcompl adc add jne pop in dec addl orb jle aas mov inc sbb add iret loopne inc ja mov sbbl (bad) mov ret pop sub mov sbb shr cmpsb cmpsl int stos cltd inc clc scas dec (bad) stc pop cmpsl sbb sbb pop pop dec lret inc xchg mov or js cmp movsl (bad) sahf inc lea pop loope xchg out and jge xchg inc stos fcoml jae sub aaa addr16 rcrl test lods pop data16 cmpl lahf mov test pop daa daa or or popa mov sbb addr16 mov call and and imul xchg sbb inc add mov pop mov pusha addr16 inc or repnz inc repz imul jae jno mov arpl (bad) xchg dec jmp mov js add sub nop and (bad) js lock cwtl addr16 xchg (bad) cld test inc nop sbb daa test lea xchg push jle sarl cwtl pop sbb fstpt addr16 inc and cwtl (bad) roll pop ret and adc bound sbb in sti add (bad) repz push dec mov sub les (bad) mulb mov out out xchg loopne rorw sti subb pop dec push popa pop mov mov loope std push and adc nop dec aas dec stos loope pop out (bad) cmpsl pop iret dec std icebp pop pop and addr16 inc mov pushf inc and xchg and iret mov and mov mov pop stc jg lahf leave test push jg orb pop add inc mov adc xchg mov inc inc xchg mov imul scas popa mov or sahf add shrb and sbb push push lea insl mov mov mov sub adc test push cli inc addr16 mov cltd xchg jg int les dec ja mov xor in (bad) mov adc jno aaa xlat add mov stos sbbl fild or push pop imul xchg lds xchg xchg lods dec clc sub or notb imul loopne nop xchg add adc dec jno and bound orl (bad) idivl fstl sub or sbb ja jbe jno lds mov add outsb push xchg xchg shll notl cmp aas daa jne gs cld xchg inc fs xchg popf add loop adc inc (bad) mov mov in pop out dec lock dec adc in pop push clc sbb add cmp bound inc cld nop push mov push sbb pop not jo pop gs sbb (bad) and mov enter lods bound mov int3 (bad) int3 jns lock pop cmpsb inc lahf push jne bound xor pop loopne pop sub or jle mov or cmp pushf and pop adc cmp pusha jle sbbb ss movsb roll das dec xor lock fistl or cmpl or inc sbb jns xor out and jg inc adc dec push addr16 xchg arpl mov dec jo adc pop xchg sub aas in ja xchg stos pusha inc inc into inc sahf xchg bound pop pop pushf leave xchg mov ret sbb and inc test jns repz and loopne pop push cmp pushf scas xor fisttpl inc mov xor lods cwtl imul fmull dec nop adc mov movsl and out std mov lods mov xchg popa fstps shrl push mov iret in je shll jmp ljmp xchg andb sub sbb add out and mov out mov sbb pusha mov lea push in pop push inc cmp pop dec in (bad) and loopne pop inc pusha sub ja,pn mov inc and ret loop mov and inc cld loope imul cmpl ret and sub and fistpll push imul testb dec pop rcrl sub sub sbb clc and inc xchg loop mov rcll cmp sbb andl inc xchg sbbl fbld (bad) dec je inc fadds stos pop outsb into xchg clc fistpll roll sbb mov lods push mov in iret aaa pop icebp jns pushf mov push bound gs testl push mov js inc push pop mov pusha aaa add iret add dec cmpsl adc push daa pop or pop loop and push (bad) cmp call jle and cmpsl add addl jns mov push xor pop pushf jb and sbb cmp pop cmp dec seto hlt je movsl cmp sarb pop enter push xor dec sub popf out pop lcall and cli das shrb popf leave adc data16 or les stos cmpsb outsl push out bound or xor sahf add cmp cs popa jae mov dec inc and mov and xchg js aaa push xchg push push lods daa cltd push bound out pop mov adc out pop sub cmpsl dec fildl test inc dec dec sbb cmpsb (bad) sarb add insl mov mov push dec aas dec pop ja inc mov in test push mov mov adc lahf arpl dec loopne push add ss ret ret mov orb cmp push add test fisub adc jo push adc xchg sahf lds clc and subb gs (bad) ficomp aad xchg push test fmulp (bad) fstpl andl xor out pusha mov pop cmpsb pop aaa orl shll sbb jecxz dec addr16 jnp aad ret roll or lea xchg add (bad) repz cmp loopne dec jnp xchg push mov cmp imul xchg xchg xlat (bad) jecxz push (bad) jae or push mov xchg mov mov rorl mov dec adc lcall mov lea xchg icebp add sub dec ret and adc cmp cmpsb jnp mov or pop mov xchg arpl bound cmpsb jmp rcrl mov and test jge ja pop xchg and pop push repnz outsl dec dec leave or cwtl (bad) loopne push adc fist jbe orb aaa cmp into sarl fstl out sbbb popa cmp sbb jecxz or loope jmp in sub xchg mov decb dec test pop sub ror cwtl pop mov adc add cmp pusha push in and call cmpsl inc push sub cli cmp or lea mov inc adc test addr16 inc cmp jne pop daa mov mov bound hlt pop mov xchg jne mov daa subl sub icebp lock test addl imul jg ja push xchg pop xor jmp out mov inc cmp and sub cld jbe popf inc loope ret or or sbb clc push mov or popa fisub mov aaa or daa xchg ret sub pop les mov mov inc out mov orb push lea pushf pop sahf and mov in push arpl lahf push lret lock sbb add jo xchg cld pop add jecxz addr16 scas xor pop rol insb sahf xor pop dec test cltd ja js loope and dec ljmp mov jns in das add lock sbb repz icebp jl mov insl mov dec add out pop pop jge inc jecxz adc gs (bad) stos xchg fucom inc das sub xchg push jns dec insb push add adcl dec mov aas loopne inc scas xor mov jle icebp adc push aas out dec cmpsl fcompl and mov add jns inc pop push int pop pop adc (bad) loope loope cltd fs std call xor lea cmp pop mov cmpsl push cmp test nop jg mov cmpsl inc adc mov and movsb les pusha ja inc lock xchg rcr jg imul popf loopne pop xchg sbb mov push adc cmpsl call lods ror sub dec dec shr in (bad) fsubr ret movsl pop leave sub mov addr16 loop and dec dec loope iret leave lds jno dec test jmp dec aas inc mov (bad) push lea enter push and popf or sarl mov cld movsl dec clc dec xchg dec arpl mov cmpsl loope push add push xchg jg (bad) hlt mov js jmp cmpsb xlat adc outsl aaa push cs lcall push pusha dec popa loope,pt scas into dec cmc leave add inc fild and iret add in popf fistpll call jbe iret fwait jge lea cmc (bad) out xlat jno mov dec das adc cwtl dec lea mov pusha mov pmaxub fiaddl out lea stc cltd jno and sub mov dec test in (bad) and mov xor scas out mov iret jg lods and mov fdivs addr16 cmp mov sarl sti xorl bound inc add add loop sub push test pop mov aaa push aas jge inc movsl (bad) mov sarb or mov (bad) icebp cld cmpsb and bound fidivrl push cmp bound mov popa sub das gs das gs cmp xor iret push jge fcmovbe mov pop fild mov sub push mov xor mov into push xchg inc dec lcall sbb cs fwait bound adc jae or gs pop inc jp sbb test or pop push sbb dec inc push addr16 mov (bad) dec jae xorb and sub ret sti sub pop insl call jecxz xor cs jne mov cmpsb adc fcmovu mov mov pusha xor pop jl idivb jmp cmpb mov cld pop cmp and pop cmp mov imull and ss mov outsl arpl das mov fnstenv inc push pop push push cmpsl popf inc pop loopne xchg insl jge popa add (bad) subl nop cmc popa add movb mov fdivrp cwtl inc idiv fsubs mul imul xlat nop movsl inc pop mov inc xchg jl test test mov cmpsl pop pop inc cmpsl cs ja mov out lcall addl push mov adc pop jecxz cmc test xchg fadds vmwrite push inc mov xlat lahf je pop (bad) pop popa jns lock jns adc inc mov jmp mov jecxz fcompl xchg es mov mov adc xor pop and sub pop test sarb adc dec sub (bad) jno cmp nop push pop leave icebp pop jo notl adc dec jl cmp and xchg clc inc rcl cld add adc mov out cld xchg cmp pusha js sub out ja je pusha fistpll pop sbb (bad) and popa pop bound cmp jge jg jmp in and ja jge loop xor les arpl cmp dec test test mov and push dec cmp pop lods cltd add addl ds or rolb pop (bad) xchg test enter xlat sub mov jmp sub push adc jecxz test sahf mov lods cli jl push jbe fsubrs insl mov daa ret inc es nop icebp popf leave mov jge jle cmp loopne test pop inc pop jmp push ds ss adcb sarb fistp movsl xchg (bad) nop push sahf xor cmpsl xchg dec add dec or xchg adc in not cli rclb lahf andb dec aas add fwait andl add push in dec das mov mov rcrl enter iret outsb jo cld pushf jg dec out fistpll mov loop popf fcompl or mov jns out bound test mov xor dec jl scas push adc scas test popa mov daa popf adc adc outsl rol sbb pop xchg add jle inc daa mov sbb sar orb loopne dec test and mov aad std loopne repnz pop fsubrs jl bound shlb jo loope xor movsl mov push lcall stos negb lods push sbb imul inc imul push pop pop push ror mov outsl mov pop xchg push jo push jg jmp (bad) xchg and pop lret and dec jl lea cwtl jg loop ret jg dec lret mov and cmp rcrb outsb inc add push jns dec xorl call sahf mov jo call lods call push sbb loop (bad) jne cmpsl and std pop in out mov rorb add imul xchg cwtl push xchg cmp cmp int3 lods jno nop push cmp mov pop fcoml daa in into into sbb push fistp shll pop xor dec mov dec jae cmc lods cmp cmovl dec xor aaa inc sbb sti jno jae and gs cmc add inc and inc das mov xchg xchg jge clc std or add loope and movsl jle out dec divb nop inc in imul lcall mov ret pop ljmp mov ret inc std call (bad) arpl stos fstpl jo cs jns dec stc sahf mov popa push andl cwtl pusha bound loop std cmpl mov adc cmc add inc jg dec pop arpl addr16 popa xor cwtl jno cmp push pusha mov pop pop lods je mov cmp inc mov (bad) or lds test mov inc gs add cwtl sub bound add je pop xchg mov jns jge movb pushf dec rcr xor subb daa dec sbb push jb mov mov sub add andl popa popf sbb test mov dec xchg push and imul mov xlat push popa jge mov rcr bnd sbb hlt xor fbld adc inc fcom sahf dec jle scas and push jge push lcall shlb (bad) pop cs and rcrb jae cmpsb xchg dec xor and dec xchg (bad) pop test cmp out lock insb arpl xchg daa xor sub sbb mov and push push push loopne mov lock mov push loopnew jge cmpsl and cmp dec mov xchg cld test cmpsb clc rcl cmpsl loopne jle xor shl leave int jecxz sbb jbe jge jge stos push cmp adc sbbl in push jnp pop in cmpsl xchg in inc bound mov scas adcl fs inc pop cmpsl and dec rol dec mov lret shll mov insl dec gs popa mov loope mov ds and adc and sub stc inc pop aaa and xchg jbe pop das push scas push nop ss nop cmc cmpsb or pop jmp mov dec (bad) adc movsl jno std mov pop add mov add jecxz mov lahf push mov sahf outsb int (bad) push dec cwtl lea mov mov jp test ljmp xor inc iret sbb dec or bound lock lea cmp xchg pop lret inc lret loop (bad) arpl push cmp lret or sub (bad) jmp adc push fbld mov nop mov mov and mov out inc xchg adc cmp xor jl jl mov (bad) xor inc mov test xor adc imul call es std mov jle cmpsl rorl ja outsl dec dec push cmpsl mov adc dec lock add (bad) cmp mov push test pop jnp sub rol and push cs push jmp push xor or je and das popf aas (bad) fsubr push insb jo add data16 pop xlat fisub jns cmpsb fwait cmc test mulb cmp mov (bad) push adc push fstps mov pop adcl dec cmp jge sub inc mov mov fisub inc and pop inc push aaa cmpsl pop bound inc fwait insl push out stos mov std or adc mov in adc scas jno push inc (bad) in sbb scas inc and pop push movsb (bad) xchg sbb and stos aaa loop or shll (bad) jg jne add out (bad) jbe sbb jae in xchg sbbl mov stc mov adc lea push inc mov inc push adc aaa sub adc or scas shrb add loopne xchg push and pop dec sub cmpsl stos inc xor inc push xchg inc xchg lea fsubs popa bound push test (bad) stos popf mov pop (bad) lock dec add data16 add rcrl jecxz adc leave push xchg mov xor andb xor xlat clc sbb add sbb loopne lcall lret and (bad) fistpll cltd pop mov inc fcoms cmp repnz mov mov in loop xor jmp insb jg clc dec lea and (bad) inc mov fmul jmp fwait out fbstp cmp enter mov test lret xor add (bad) mov jg cmovae or mov mov lock clc lods bound dec scas push xlat in popf and das test fild cli pusha pop aas mov loope cmp js rcrl fcmovb cmpsl test mov jns fist xor lahf cltd in into data16 add and dec in orl lahf pop dec inc xchg scas adc xchg mov jno lahf adc daa xorb popa and adc jbe inc mov mov and and pop scas gs loopne les mov sti (bad) imul mov xorb lock imul add cmp cmp and mov xor push pop in fcmovbe popa js jno test out sti xchg cmp xchg out fwait insl adc sahf push inc jbe cs dec jae arpl and sarb jge mov pop mov xchg dec adc pop into and mov aas mov sub sbb adc (bad) movsl fild out add repnz pop adc cmpsl cltd lds dec pop cmpsb andl cmp addr16 negb test pop inc mov xchg punpckldq out and loope lea lret mov pop jge lahf (bad) jne xchg andl leave cmp fwait mov sub test sbb xchg lds pushf xchg (bad) out lahf dec (bad) pop ds push xor aaa push sbb popf lds out popf repnz daa or and out cltd lock cmp pop js cmpsb jns mov add mov fcmovne add pop add out dec xor and pusha or sbbb inc outsb stos clc xchg inc testb dec sbb fildl imul push imul mov fs sbb rcl inc and shrl sahf add ret int3 inc xlat jnp xchg or mov dec popf mov mov mov jp xchg jns shrb retw stos data16 out or je loopne mov lcall outsl test mov adc data16 std push sub mov jae nop pop mov and dec xchg arpl (bad) movsl mov lcall fidivrl aaa mov pop cmp (bad) cwtl pop cwtl pop mov or pop arpl mov daa bound mov outsl dec xor push push mov imul jo jmp (bad) sbb out daa mulb pop adc out mov sbb inc and or jne shrb std push mov add sub dec (bad) test js divl push and daa ja adc mov dec mov sub jg gs ja mov push test leave mov pop in cld xorl pop rolb (bad) mov movsl ja or jb pop fsubs push lcall and jno dec xchg ja ja movb xor jo or fs mov sbb inc movsl out jo sahf and ja out imul pop sbb fistl pop fs sbb std sbb faddl pop outsl sub mov pop or (bad) clc iret jp cmp add push sbb bound mov push cmp cmp sbb and gs popa pusha mov inc out mov mov xchg fistpll gs inc js cmpsb arpl jl sbb inc xor les pop jmp scas push adc std mov sub aam jns mov inc push add add ret jo je fwait push xchg loope daa fadds outsb loopne icebp das and mov scas mov mov negb mov daa test in push and out xchg pushf and outsl notb (bad) (bad) mov jo ror test bound adc jl dec cltd aas pop (bad) jno add xchg out fadds dec jns or dec jbe std test mov push test out cmpsl bound pop add imul inc mov arpl loope jmp out add daa sub in push stc adc adc mov loope add mov call bound nop js cmpsl addr16 sahf xchg add cwtl mov fwait xchg bound push scas cwtl and push push addb cmpsl dec add dec jae jge bound stc cmp insl add xchg and push pop jg xchg lcall das pop ja and xchg arpl jecxz jecxz movsb mov out daa push jae sub mov int imul push sbb adc or inc enter push or data16 movsl dec mov dec mov jl or roll dec (bad) stos add mov into mov or inc sub inc movsl jns pop fsubr jno inc cld cltd adc adc loop add scas loop cli adc add andl inc or mov pop mov mov sub xor cmp (bad) test pushf loopne xchg in movsl adc fisttp dec xor inc lea dec push lds outsb mov push popa je sbb fwait cli push jl (bad) out adc mov mov push push pop push sbb cltd jae xchg nop aaa cmpsb lods pop jb inc rclb bnd mov push jge loopne cmp imul mov iret ljmp sbb mov adc mov lds mov xchg pop imul xchg in dec mov and aaa cwtl mov mov or xor popa mov sub cwtl mov push mov push popa cli or fs adc jp pop shrb jle dec adc mov imul data16 jmp or inc nop popa cmp aam sbb or adc jle into shll xchg out push and aas sbb pop cmp cmp std xchg dec pop or or inc jl js sub jmp pusha mov jno sbb jb pop mov xorl mov bound mov xchg cmp jbe dec lock pop aas jg popf (bad) pop push (bad) mov adc leave xchg scas adc lea add adc test cltd inc xor bound push sub push xor xor sbbb negb add mov xchg nop dec pop (bad) mov jle pop and jg push hlt mov or lret icebp cmc inc xchg inc (bad) pop xchg cltd pop test adc bound (bad) icebp push adcb adc jns bound call addr16 or popa jmp addr16 push addr16 mov fstpt fisttp inc stos mov dec bound out pop aaa rcr or bswap in jle and pmaxsw aaa jb lret fcomps xchg jbe jge mov xchg pop (bad) xor stos pop xchg mov xchg dec dec stos pop inc xchg cwtl movsl (bad) and and xlat pusha ficom and inc daa pop cmpsb js rcl subb sti dec dec jge cmp mov mov xchg sahf mov inc sar xchg xchg (bad) stc adcb imul lock pop out subb bound repz inc ja mov lds out xchg mov push sbb push (bad) cltd lret divb cmpsl orl mov cmp insl fstpt insb jb popa nop cmpsl aam ret cld sbb std mov xchg add not in popa xor push sub sti shrl push scas add arpl sbb (bad) loop mov pushf movsl and xor in fbstp dec adc push out mov jl mov in jnp xchg dec pop push push (bad) cmpsb push call inc sbb mov call (bad) lock pop (bad) cwtl push cli mov lock leave adc je mov pusha xchg rcrl rcrb (bad) loopne (bad) repz sub pop dec nop icebp jecxz jmp sbb mov fwait xchg fwait dec sub js cmpb test dec pop rcll dec sbb popf roll inc dec adcb pop mov sub mov lret lahf aaa bound add mov fwait sub cmp pop pop adcl xchg mov popf aaa xor inc roll or cmp pop jo add fadd inc loope xor xchg insb cltd push fwait roll cmc xlat mov (bad) dec dec xor xchg lds push mov dec cmp jmp xchg popf inc fmuls sarb jecxz adc iret jno fiadd cmp mov (bad) repz cmp popa or in mov mov and sub inc js leave xor mov iret mov xchg dec inc and lods iret bnd loop push mov push add sub xchg dec call mov and mov cmp dec sarb add xor out and push xchg ja and adc inc test loop mov mov stos cmp fwait jmp bound mov neg mov mov iret test clc gs sub mov push or js mov dec pop out idivl pop fadds inc mov xchg loopne pop js and xchg jo arpl add out pushf xchg jno xchg cmp sti test pop pushf pusha insb push and cmp pop xlat mov sub push subl add lidtl test pop push pop daa popa sub lea out cmp mov movsl fnsave pop add xorl jge repz add ret add push push in push clc arpl dec inc arpl test sub fidiv add jns inc cmc cltd mov popa add xchg push mov lahf loopne mov jne out mov sbb cmp dec and add add out daa add jle je dec jnp jns cmc in pop push mov jp (bad) mov mov mov sbbw jecxz pop ja xor xchg push andl faddl adc sub inc add insb adc test dec ror lea test adc jne dec test xor push pop sbb insb (bad) sbb lret js (bad) in lods fld mov jae test andb jg (bad) bound mov add dec leave adc adc shll movsb xor call mov es jns cmpsb pop (bad) jo popl pop inc mov stos lahf lea loope adc ljmp pop and arpl imul addl cmp jns dec pop std dec mov les das pop add mov mov xchg ret jo lahf push ja cmp flds gs cltd std mov orl push jmp call lock dec pop std dec push dec mov dec pop pushf adc fwait push xchg push mov shrl shll adc sbb andb sub xor mov jg mov lds xlat sub fsts lock dec scas sahf mov jns loop fstps loope call sbb test lea and push mov lods push fnstsw cltd xor sub (bad) jl mov fwait test sbb call add ror and into into cmpsl adc movsl dec dec or iret jnp std out xchg ja orb in test sub stos cmp shlb das lret mov xor dec pop mov adc xchg jl mov or pop (bad) push push adc out sub cmp or aaa sbb adc fwait mov xor cli and mov jg js push mov fcomp (bad) iret les gs xor js hlt pop (bad) aaa xorb add es in xchg cmp cmp cmpsl push mov push mov sbb int cmpsb sub adc test jno mov (bad) je and stos arpl xchg inc out xor dec mov aaa sub jns loopne pushf aas jo hlt lock cltd ss js jns mov fwait call pushf sbb test mov xor inc xchg dec cmp or or jl sub jmp loopne cvtdq2ps mov dec push lea iret loop bound mov fidivl lods dec into dec imul adc sbbb pop mov jg test or in pop mov pop (bad) xlat test mov (bad) jecxz mov jmp mov ljmp xor and and sarl xchg fbld mov xor jl mov (bad) ss fldl and std adc ficomp push mov outsl push jge subb iret or sbb sub sub adc cmp push popf (bad) jle mov sub out push mov iret xchg or cwtl dec dec inc adc test inc gs loop jle dec lret roll sbb push sub movsl out jg aam push adc xor aas mov gs xor mov mov add sub iret jl rcr lahf pop dec pop pop mov outsb pushf or or inc xor out out pop mov and xchg sbb insl scas and sbb hlt push scas xor ffree mov aaa or iret mov in adc aaa mov push out mov cmpl addb ret mov lock and (bad) jns dec push fldenv sbb inc dec sbb ret inc dec fistp std icebp dec arpl test (bad) push lea jno or push pusha cwtl push sbb cmpl inc push fnstcw aaa mov arpl pop (bad) (bad) stc test andps call add out subl insb in sub sub and cmc pop xchg rol loopne imul loopne rorb popf stos xchg jae in add outsl in xlat push mov loopne stos sub xchg or daa sub call out push xchg lcall sbb bound notb mov xchg pop dec jge icebp test add shlb lods or mov outsl iret call sbb and shll (bad) dec sarl jl or rorb jg sbb (bad) xchg loopne sub adc cmp pop xchg xchg pop lock in rcr (bad) popf mov or lcall cmc jno popf into add pop aas fisub jg popa and (bad) cmp idiv jo sub adcb popa pusha test or jno and add pop popa out jb (bad) and lock or or test xchg lret sarb or popa pop popa dec outsb out mov (bad) xchg int3 fsubs xchg lea and jne es push movl and lea inc push mov pushf dec xchg inc test inc arpl sbb inc in (bad) cwtl (bad) out cwtl movsb popa stc cmp test stos dec js inc fidiv cmc lret lahf jno jns int3 dec or shll adc iret jmp pop adc in adc mov inc outsl rcrb mov add cmpsl loopne xor outsl inc mov and adc mov adc mov mov aaa add inc xchg dec push adc cmp push ret add sbb loop pop enter mov and stos dec ds mov mov imul dec adc pop in jmp imul popa cmp pop bound mov xchg pop jecxz leave push mov jbe rcrb (bad) push mov xor mov out imul loop sub mov imul imul inc pop push adc addb out xchg xor adc jecxz arpl mov popf inc jmp push hlt push cltd out xchg mov push jl adc dec cltd into sarl in mov leave inc ds cmpsb or jno lahf sar adc (bad) xor mov stos and lahf mov mov cld mov arpl cmp loopne pop inc add sbb mov pop pop jp dec push jno into sub cmpb pop jno (bad) lods add push test (bad) fwait std fsubp cld jae loope xor xor lret adc call leave fwait notb sbb sarl loope xchg mov xchg icebp test addr16 js cmc sub in mov push mov mov out in mov inc adc bnd pop add test loop cmpsb adc ja jmp add xchg popa mull jne imul imul shlb adc inc cmc hlt sbb mov sbb popa mov mov aam nop (bad) std mov loop lods mull stos popf dec (bad) out push das xchg cmp lods dec mov mov loopne or adc scas cmpsb pop mov bound fs add sbb push (bad) negb bound sub js adcb mov pop outsl decb dec cwtl cmpsl jge addr16 scas and lods cmp jmp leave dec cmc cmp adc inc xchg loopw pop cmp mov movsl popf mov lock sbb lock xchg mov insb push out jns popa cmpsl pop mov lods lahf addr16 daa adc icebp inc mov loop mov inc (bad) repnz aas (bad) mov test idivb xchg test and lahf loopne mov lret subb imul cmpsl xchg out cltd fldl xchg adc out jo into jecxz test jg mov in (bad) cmp repnz lahf lea movsb jno (bad) mov pop bound cmp addr16 jae stos ret sahf dec xor lods pushf mov lock add jo mov icebp lds inc sbbl gs inc cltd sti fadd fistp std imul xchg loopne stc pusha jp lock movsl loop push (bad) push mov in js das daa cwtl push add outsl stos sbb cmpsl rolb jl xchg adc dec pop out push ret stos fs sub mov nop mov bound out (bad) or sbb lea add mov adc test dec push add das loope adc cmp rcr sbb jno and mov (bad) push repz popf jecxz js stos push add fwait jle and sub jge pop cmpsw mov bound jl adc inc push mov add sub testl xor xor outsl fcmovbe push (bad) fcoms fadds jg cwtl add mov mov fisttpl xchg inc scas and jne pop pushf xchg jns cwtl add fistpll xlat cmc pop and addr16 pop pop push jae pop icebp push inc int andl fdivs test inc popf cltd es icebp jg es and add inc mov and xor or rcll pushf daa mov dec fwait icebp (bad) mulb pop sbb mov (bad) inc test add mov (bad) fnop xchg mov push cmpsb (bad) add pusha imul enter sarl sbb cs (bad) js pop xor lods inc scas push dec add daa pop xchg adc lock pop lea je and push mov outsb es mov push iret (bad) pop add adc int pop inc (bad) or fs pop addr16 int cmp movsl (bad) popa bound loopne cmp gs and xchg nop mov mov pusha js pusha testl and bound test aad push xchg push add cli fcoms pop xchg jecxz jne mov sub push (bad) jno popf pusha sbb inc pop xchg pushf xor dec push in dec lea sbb scas arpl push jecxz bound hlt xchg jb xchg sub lret xchg pusha mov cmpsl inc pop bound enter pop (bad) inc inc pop pop stos pop icebp push add sahf jbe pop popa and in andl out inc iret stos in dec cli jge mov mov out cltd pop bound dec bswap adcl call call dec push jecxz push mov sar sbb xchg jecxz xor rdmsr or xchg ret mov mov daa int3 popf inc stos int3 xchg call push hlt mov lods js xchg pop pop mov aam bound sub or adc lods dec (bad) ljmp pop sahf cmc or bound std test inc pop (bad) aaa ljmp lcall daa sub mov or mov inc adc and sbb mov mov mov addr16 add sbb lcall (bad) repnz and pushf daa imul adc add jg xchg mov rcrl (bad) adc loopne arpl sarb sbb fidivr mov sbb jo push nop lahf (bad) mov arpl insb mov dec into shrb fdivs jl cltd test aam jo cltd or and mov imul lea ss mov push imul movl fnstenv (bad) shr aas pop push das (bad) aaa inc adc adc add sti out jno js or jbe cmpsl jno mov mov lea outsb roll mov btr sahf adc mov ss mov loop imul and sbb mov xchg mov and jmp iret add jnp xchg loopne dec inc add sbb sbb xorb pop imul mov jno jo adcb and jge dec cmpsl inc popf insl fbld cmc jge rclb addr16 pop and pushf jecxz daa pusha mov lock lods popa xchg andb mov or cmp pop lcall sub dec in nop mov cmc push test outsb cltd test jbe icebp and movsl fsts jb cmp and stos (bad) jbe daa add add aas stc lods fs cmp cltd int3 (bad) cld adc fistl push dec dec mov iret arpl mov jge sbb pop pop adc mov popf (bad) xchg in dec enter or addr16 cmp cmpsl push aas add (bad) in xchg and pop sti ljmp test stos or daa mov cmp testb adc jae cmpb dec mov mov sub jne inc clc lahf sbb (bad) cmp pop add test mov loopne or (bad) aad les add mov cmpsl push cltd cmp enter cmpsb push out pop (bad) cld (bad) jmp std xor stos xchg sub cmp cmpsl push push pop outsb pop roll pop bound scas fiadd iret cmp gs cld xchg addl dec popf and and cmp push cmp stc cld fbld scas (bad) ficompl loopne push push or add lret pop data16 pop pop dec sbb cmp pop lods aam ja xchg mov ficoml (bad) jns lea or shlb in pop push fild dec cld (bad) adc adc pop loopne jae cmp lret and pop popf mov sar and addr16 gs jg adcb jo lods adc aam jns cltd dec fs cmpsl std dec je fmulp add xchg inc fistpl out fadds pushf or mov movl jle and pop ljmp into xor loopne scas push lods test and sbb bound sbb mov jb pop mov xchg scas clc cmpsl cltd sbb lds pop or mov inc (bad) fcomps jnp sti lahf pop mov inc dec xor jae inc (bad) pushf jno xchg sbb pop stos cli cwtl sbb cmp popa and xor fwait rcrb outsl jnp in pop mov mov dec lock daa jle and mov jae test (bad) mov (bad) mov sar inc pop push lods mov dec inc (bad) jmp rcll js add aam jl sbb dec scas pop inc nop pop (bad) xchg pop sti mov loop or pop imul pop (bad) movsb mov adc std inc adc int3 mov jae in daa adc ror pop and jb test fidivr sbb mov or jns out ret lcall xchg cmpsl rcrb dec call xchg inc dec fcompl or scas jbe (bad) mov (bad) jl jae push xchg and cmp or (bad) imul in inc sbb xchg add xor xchg and inc jne pop sub pop loope mov pop inc sbb rorb loope mov pop sbb int mov outsb (bad) (bad) mov sub jns les rol xchg (bad) mulb in mov push lea lret loopne enter enter add jns xchg loopne add pop cltd jnp pop mov sub cmp out int aas jae or push and xchg lret cmp inc pop lods rcrb out sbb jno push xchg outsl jecxz sti xor or push js mov dec add cmp or pusha mov aaa push jecxz sbb imul and inc xchg inc and movsb shlb fadds mov xchg out into mov add mov dec (bad) outsl lds push mov jg gs dec into xchg cmp sbb (bad) sub mov mov ja push xchg pop sbb lods xchg aad int3 nop xor mov mov push or jns pushl mov mov push loopne iret and nop popf mov fldenv xor xor mov ret rorb sbb adc and jae mov imul aam pop add cmp inc popf addr16 outsl fcmovbe adc pop (bad) jne adc pop repnz push test push test popf cmpsb xchg out lods (bad) ja pop nop pop lcall bound aas ret jnp mov jl add add popa dec add jns jl dec pop int3 cmp mov push jl mov sbb mov test ja cmpsl jns sub cltd dec ja je or lret arpl mov test cwtl nop cld push loopne pop fldl (bad) fstpl out jo aaa lods mov leave push cmpsl sbbb push xchg jg inc xchg out mov mov cltd (bad) lods in and in xchg mov add push scas mov sub lods andl xor repnz xchg push imul mov mov xchg aaa and inc sub xor repz lahf cmc pop pop dec and nop (bad) dec es inc loopne arpl iret cmpsb lds jbe add cli ja mov in mov mov mov dec push cmp xchg cld push cmpsb xchg jecxz or mov xor lea pop jno sub mov cltd jns jns add mov add xor fistpll mov adc lods test in dec es icebp inc and jo and imul and repnz add test rolb dec insb fldt std inc gs jmp xor mov js lods lds popa sub xchg pop adc pop push sbb pop clc push testl and mov push enter cmp xchg push (bad) push cmpxchg pop fimul (bad) fdivl (bad) es sub xlat scas popa cld push lret nop daa jnp push cltd pop ss sbb js shrl lret add mov dec jecxz in aaa inc pop xlat cmpsl (bad) adc sbb loop clc popa sbb xor arpl mov dec outsl fadd cmp pop cltd sbbb pop lret loop dec jno std add or xchg push xor pop in in in fdivp pop aaa dec fmull enter fs jmp les push mulb fisubl mov and or arpl inc cwtl sub inc insb fisubrl addr16 lcall daa and mov ret (bad) sbb cmpsl bound stos mov jmp pop in mov scas cmc adcl pop mov pop clc cltd add test cwtl inc scas andl xchg sbb pop sub popf mov sahf lods mov test test call mov (bad) dec xor subb out mov rorb adc sarb and scas sti and xor (bad) or and fistpll add js pop inc fidivr and mov stos adc out cmp pop mov lods cmp push jno adc rorl jge mov jnp arpl xor sub negl jge sarb xor stc outsb rorl das jae push mov sbb mov mov in inc jge pop add jns or xchg fiaddl in jns jcxz out push in cmp repz aad test loopne add daa daa add test xchg fnstsw mov push faddl aad add sbb xlat lcall push (bad) (bad) int3 mov lds xchg mov nop stc nop fldcw and xchg and stos jge inc inc xchg hlt inc fist stos stos rolb push cmc and inc movsb jnp out andl xchg call lea outsb cwtl js data16 add push and mov imulb adc mov cmc cmp (bad) xchg adc stos pop cs push or push fsubp movsl lock pushf jmp push cltd or push pop mov adc mov lock adc movsb add out jecxz (bad) adc push arpl lahf cltd (bad) mov lods psadbw mov add loope pop cs xchg sub lahf lcall out mov loop das enter in lock pop pushf (bad) mov (bad) leave arpl (bad) (bad) mov (bad) out fdivrs mov adcl mov movsb pushf test jge popa stos inc cld loope stos add lret ss push push fldpi jbe pop (bad) in pushf add pop (bad) mov popa and dec cmpsl mov and mov mov inc jp mov ss pop dec std (bad) push adc in inc data16 ds mov je in lods cmpsl pop mov and imul mov fimul cs sbb bound or inc pop sub add or pop mov inc sub xor aas or pop mov pop popf gs and (bad) test adc push frndint or jae insb in sub sub mov movsl add add std mov sbb mov mov repnz xor imul (bad) aam inc mov pop cmpl mov dec mov sbb pop repnz ficom popa daa test adc pusha and xchg (bad) out cmp je adc lea gs jae dec cmp dec aas push mov mov popf sub pop add mov or xor fsubrs pushf xor pop call and add pop mov std hlt test sub mov adcl arpl jmp xchg mov clc and xorl movsb gs xchg js loopne add jns ficoml xor punpcklwd adc popf and roll jns cmp pop add pushf mov pusha and cmp mov faddl cltd aad cs cli xchg and or fistp pushf fnsave (bad) mov jnp mov dec jge inc fwait aad lea mov pop xchg (bad) pusha data16 movsb mulb mov xlat inc outsl icebp pushf fnstcw dec jnp mov enter mov and popf mov add orb and inc cmp andl rcrb inc mov fsts adc add mov popa sub add aas jnp push std inc and vpcmpeqw mov pusha std xchg aad cmc test xor jno inc xor mov mov das pop call stc int in imul arpl dec dec fistp fstpl inc xchg and movsw (bad) pop push int cmc (bad) popa vmwrite lahf insb inc lret and mov dec dec fcompl jg push popa dec (bad) mov paddd adc outsb adc iret dec mov vunpckhps (bad) fimul js dec dec jmp sbb jle push cld lret jae (bad) cltd push (bad) sti pop add push jmp sub pop ret mov orps dec std in stc outsb mov adc incb in inc push jno jne clc adc sub call sbb or int3 mov (bad) ds adc rorl mov mov cwtl mov xchg mov mov dec pusha mov es (bad) mov shlb mov xchg lcall pusha in inc cmp mov call icebp arpl shr jle pop hlt sar sbb mov in jmp sbb fild cmp sbb addr16 out push or sbb sbb repz push xchg dec jb lahf cltd mov sub call (bad) mov popf jl lods jns out jns scas pop rcrl sbb mulb (bad) add sbb inc icebp je outsb push popf mov enter jo out push sub fs sti dec lret cmp xchg mov xchg out out (bad) push test movsb push jle jns clc cmp xchg xor and pop daa pop cmp lods inc push jl xlat cmc cmp das mov mov mov pmaxub inc adc scas mov push in ret out sub or xchg fnstsw push xchg jecxz addr16 sbb adc sbb add (bad) pusha push jg call test nop test mov pop shlb dec mov mov nop daa mov dec jae pop mov in jg xchg and jl fstps pop mov daa fdivl mov fsub stos add sub jns cmp jae imul push test mov mov lods sbb dec shrb pop jno mov cmp je mov scas loopne dec sub lds repnz test sub adc xchg jns sti daa sbb mov add and jg inc cld xchg ret out lock rcll popa sub cmp movsl andl pop cld imulb xor push stos in sti xchg stc fildl pushfw loopne fwait mov (bad) (bad) xchg adc icebp push mov (bad) mov std dec fcomp jbe inc add sub dec mov inc jg cmp popa cli ja test jb push (bad) orb addb fs fwait push ret fwait jo and dec and mov xchg mov fsubs in shlb jnp mov xchg in pop lcall push test lods gs cmpsb xchg inc sub dec mov sub lret repnz cmp (bad) (bad) rorb (bad) arpl lea mov sbb xchg sbb sub xchg aaa seta bound jg cmp jge jecxz call shll adc shl cli pop aas dec nop out adc push cmp js push mov adc sbb or xchg push dec repnz add sbb sub mov (bad) (bad) repz push lock dec cltd xchg movsb and mov dec out into loopne mov or shrb dec adc fldt or addr16 mov dec out push shll sub sbbl mov dec xlat jle mov xchg jne adc jns mov mov out in jne sbb adc sub jnp jno mov repz mov adcb adc out (bad) or pushf dec sub lcall mov (bad) pop cltd jno (bad) inc mov aad xchg xor daa mov sbb pop pop das cwtl fnsave idivb adc pop xchg (bad) rcl or and and push cmp dec mov or repz push (bad) bound push push scas movsl in xlat push push jno mov xchg mov mov clc mov jae mov test or lock pop (bad) push or into icebp (bad) sub lret imul adc xor arpl xlat jl adc adc scas inc ljmp pop adc mov repnz mov js mov mov jecxz cld movsl lret shlb adc cmp and xchg fisttpll icebp arpl mov loop fldln2 and mov (bad) test cld dec sbb imul call and mov dec adc inc mov pop int3 push xor and sti fs or sbbl (bad) lods push mov dec ds stos idivl inc lret and data16 fldenv mov sub outsl stc and xchg push xchg lahf shlb mov (bad) fiaddl gs sbb adc fdivs enter movsb jns icebp xchg jecxz faddl int3 movsl (bad) and and pusha das dec lods ja lahf mov lret pop (bad) addr16 pop int pop sbb lcall (bad) mov insl pop bound inc loopne daa pushf pushf js lea pop icebp or shlb out sub mov cli jne add in rol out push shlb movsb adcl int cmp dec adc sbb jae sar jge cmc mov (bad) sbb repnz out stos sub imul mov sbb or ret in (bad) or test out into dec cmp insl dec sub xchg ror adc testl cmp fldenv jbe jmp adc sub arpl pop mov popf popf mov mov cmpsl lock movsb cltd lods cmp push lock sub or imul pop test lcall shlb and push pop mov dec scas femms stos js sbbl hlt cmp mov sub push jl add mov popl push addl sub cmc push jno cmc dec xchg idiv test dec xchg push (bad) stc and inc in xlat or js ja gs jno mov not mov popa test aas repz pop mov popf pusha inc sub add mov in pop mul xchg in inc jmp xorl pop add cmp aaa xlat (bad) inc lahf rolb mov addr16 mov xchg movsb sbbl jge enter mov and dec mulb cmp xor pop icebp push or xchg jnp popa (bad) xor pop sub xchg dec jmp lahf adc cmp sbb mov frstor call inc ret lahf jmp pop dec bnd dec and popf lcall mov xchg (bad) arpl and xor in adc stc dec cld push es lret movsl fldl ja (bad) gs push incb push add push mov xor push aas mov bound std subl addr16 xchg add adc or (bad) sbb lods imul xchg in push sub inc sub push cld push xchg adc pop adc vpsubsb fs and jno stc and xor xor lock jno inc cmp push mov inc mov or loopne repz xlat mov and loope ljmp (bad) nop add mov pop loope int inc fildl mov daa pop mov push push mov mov nop lock and xor xchg rcrl pop (bad) aas inc icebp push mov clc inc lods add inc das dec push inc jnp in add xor jne movsl sbb cmpsl iret jae mov pop das inc dec rcll pop xchg mov mov push daa mov mov lds mov test popf mov lock or int mov lret (bad) popf cli icebp jg inc fiaddl inc pop adc je add movsl and cmc pop nop push and adc dec call mov rolb jecxz jo adc adc jle mov pop mov (bad) mov pop jae lods sbb std ja cmp es xchg dec jmp adcl xor pop in out pop sub das xor and std push test add gs or inc inc dec push in jmp sarb inc push insl loope enter mov clc lods sub push add sbb adc fcomps nop push rorl xchg mov dec or pushf mov mov int3 dec adc inc (bad) jo shlb sbb inc (bad) rolb pop xchg adc mov cli sahf shlb mov lods mov pop or and xor les inc cs arpl popf adc js in ret pop test mov xchg lcall pop xchg sub mov inc cmp and jb daa push scas mov out pop cmpsb xchg xor mov sti call jae repnz sbb mov les xchg andb sbb xchg ret sbb xchg nop xorb xchg mov pop sub sbb fdivs pop cmc sbb ljmp lock addr16 popa add stos sub dec adc (bad) loopne lock push push fmuls and mov pop xlat sub aad aas daa jecxz test aaa rorl dec out insl scas stos mov stos adc loope dec cltd or mov dec mov cltd nop shlb repz insb stos inc (bad) xchg or pop jl xor lret xchg xor mov pop call inc ss mov in mov (bad) aaa (bad) mov inc push (bad) into xchg dec add pop adc movsl jp jae xchg mov cmp push pusha push push sbb xchg les inc daa and movsb inc std (bad) xchg adc push inc ljmp scas jno (bad) popa inc and movsl cli popa cmp loopne es or daa movsb push jae adc bound (bad) add jl inc or cmp sub mov clc lock enter test mov js push dec inc cmp sub mov push out out (bad) iret (bad) mov xchg mov outsl addr16 push mov das daa pop pop sub pop and (bad) into (bad) mov sahf xchg mov pop push dec inc ds push std cmc in mov lds test or pop mov or add jno cmp inc or loope jo clc add inc movsb ja push push ljmp negb outsl fstpl nop popa jne std push cmp jle aad cs mov pop inc das push je sbb outsl sub pushf jo pop xchg mull (bad) pop mov lahf mov pop mov faddl data16 push sbb xor push xchg (bad) jmp movsl pusha fsubl data16 jbe cs sub test shll cli test inc imul xchg ds mov adc out push lret mov ds jbe cmp push jl xor jae cmp std fstpt jne inc mov jbe xor imull inc bound mov xchg push in stos mov pop cmc jle out mov std aad scas push pop fsubs pusha xchg jle std jno std outsb cwtl adc data16 inc sbb stc pop add out mov dec data16 sub mov jbe,pn ret push sbb stos jl add pop add leave add pop xchg ja jne setle mov test jg cmp xchg add rcrl adc inc aam jle subl js dec xor push and sbb and add into sti cmc andb cwtl les daa aam shlb and out leave inc out lahf insb test lahf xchg add xlat push inc adc into (bad) cmp xchg scas jecxz out mov jge xchg cwtl call std mov cmc pop sub pushf test pop pusha push add inc in sub adc lahf mov sbb (bad) hlt rcrb int3 inc mov and inc xchg jbe and cmc addr16 or xchg sub aas ds jle sub dec ret and arpl ss jecxz ret or stc adc mov stos mov xchg push xor pop dec je stos cli add aam xchg pop sbb or (bad) sti nop (bad) repz or ja jmp lods add pop dec push out adc jl push gs add (bad) adc xchg push xchg aas sar adc jbe idiv inc jb push dec sbb stc mov out mov fbstp pop or daa dec mov es or insb inc cwtl (bad) daa test xlat mov and adcl imul stos andb aas lahf aad xchg pop mov and popl data16 mov jecxz mov jns xchg repnz dec je xchg arpl (bad) sbb or mov jmp out les and jge nop sbb mov cmpsl add (bad) movl cltd pop xchg dec cltd (bad) int3 xchg lods jl and lods xchg cld mov pusha xor (bad) (bad) cltd insb cltd aad and xchg xchg cmp mov test insl mov cmp sbb hlt in in (bad) int3 les xchg mov pop push dec inc cmp sub mov sti repz mov mov fwait xchg mov mov cmp sub mov cli repnz mov lcall bound cmp sub mov stc icebp jmp leave sarl jl cltd sti adc mulb add pop movsl xor addr16 bnd xchg dec (bad) pop frstor mov sub leave add outsl daa loop lahf pop testb out aaa cs inc (bad) das mull mov imul inc dec xchg and jle lahf es pop inc gs sahf and jle cmp sbb push lcall popa out mov xchg fstl add movl data16 inc add fnstsw sarl jnp std mov sbb std je and lahf out and pusha sbbb add in pop in and xor xchg push lcall insl push shrb adc mov daa lods (bad) incb pop and sbb jl outsb fsts decb jg or (bad) xor (bad) cmp (bad) dec cmp cmc inc rcr adc push xor loop pop add xchg sub mov jecxz imull jmp addr16 (bad) sub mov mov (bad) jle adc imulb xchg mov jmp lret jle cmpsb push mov add mov std pushf lret mov aam cmp cmpsb cmpb icebp fidivr es push loope or push jo dec sahf xchg sbb sbb push or or jmp cmp daa add int jbe test mov (bad) nop add pop cmpsb gs stc js out in push data16 cwtl xchg cmp adc ret jbe pusha insl rcl pop add clc pop jno jg popa idiv xchg push aam ret dec cmpsb jg and es loop out daa scas repz jl cmovg scas xchg push sbb inc gs push pop jecxz push adc push push (bad) lock or sahf inc mov dec add mov psubusb add out cmp loopne arpl ret inc adc jbe jp call lds push mov popa js sub xchg mov pop bound add pop mov pusha pop jno sbb outsb popa nop sbb pop or pop sub cmp xchg inc cmp push rclb clc ja les popf mov sbb or test pusha shrb outsb fdivl enter loopne add testl or cwtl cmp loopne lods ja jle xchg andb fcoms mov or mov loop test pop jecxz inc andb xchg adc inc les pop adc inc fbstp pop and (bad) pop xchg pop pop daa adc cmpsl addr16 sbb and pusha adc sbb adc popa addr16 loope add and (bad) nop mov add and adcl in movsl addb cmpsb sbb sbb les sbb add ss sbb inc sbb add andb popa and adc mov pop mov pop inc pusha test jno mov rcrb test jns jmp and daa pop mov imul mov test xchg inc mov in es mov jg (bad) stos jae fldcw jno movsl push jne popf cmp flds or jnp in lret leave daa or push imul mov ds xchg out xor and in jno cmpsb sub or les push es loopne dec push cmp inc imul rclb or (bad) xor adc ljmp enter unpckhps jo dec (bad) out or es xchg imul popa jo mov out add fdivs xchg pushf and mov test mov add xchg sbb mov or xchg mov push dec jp xchg add sbb ret fwait mov cmp pop or fisub lock popf jo xor cmc mov fisttpll mov popa fwait jmp in dec mov cmp ss sbb (bad) mov mov xchg inc jmp ss popf adc xchg out jmp fsubrl rcrl mov es xchg xchg in mov insl fisubr sti mov repnz nop or mov ljmp in pushf sti daa sahf sub add mov insl mov mov arpl mov push dec add pop ljmp pop movsl xchg lahf xchg pop aaa mov xor add xchg das dec mov push fdivr aaa ret ret shr and push (bad) pop mov loope jno add pop and adc push (bad) outsl aaa sti das inc stos cmp xor sub insl lods stos sub cmc xchg incl push (bad) mov jle push jo pop and int das divb outsb fdivrp jle mov xchg jae int sub shlb loop push mov pop pop mov inc pop dec xchg je sbb cwtl inc cmp mul and sbb adc mov cmp clc js push pop out xor and and movsl mov scas lret jns loopne inc (bad) stos jns pop sub and jo mov repz cltd add adc xchg in cmpsb hlt stos shrb sub mov in movsl dec mov es ret imul mov mov sub scas and fidiv sub cs dec add fdivrs mov pushf mov in lock xor cmp js mov cmp (bad) xchg rol inc mov int lods (bad) mov (bad) push pop cld sub daa add xchg ret (bad) js jbe pop adc and fimul popa cmpsb stc pusha pop sbb mov jle cwtl lahf or sbbb pusha aam cmp jle xchg (bad) adc gs test fstl mov add and xchg data16 inc fisub gs add and lahf push fwait add lcall and andl pop les inc in in mov pop dec shlb jb movsl mov sbb movsl loope sahf test mov out repnz sbb and andl mov inc push je xchg inc and cmp loopne lods test adc mov mov stc xchg rcr bound aad inc xor mov push jg or mov sbb mov (bad) rol cwtl cltd (bad) push sbb andb lea cmp mov insb mov mov mov fimull cmp jno popl inc es add pop inc xchg ja repz call inc scas inc (bad) sbb lahf jmp fcompl js dec lea cmpb cmc les std pop push push push pop in cltd inc mov lock out mov insb add incb pop rol shll stos stc mov (bad) repnz sti mov pusha andl inc sbbl (bad) xor cmp cltd mov ficom loopne pop add pop cltd inc add out data16 dec daa push les cmp xor loopne out mov movsb sbb out (bad) inc arpl cld ret inc hlt addr16 xchg call nop orb add pop in xchg adc in inc jl add outsl push bound mov bound inc movsb xchg and pop pop add and in inc jl sbb movl sub and sbb xchg addr16 rol std and cmpb add push add movsl flds lcall nop lahf xchg outsb xchg movsl dec shlb sbb movsb and ja pop mov stos bound and xor mov mov sbb clc mov out xchg mov xchg inc mov mul pusha sbbl out fnstenv outsl daa jge or es push mov lcall mov lahf outsl cmp in and popa jg sbb or and inc mov neg cmpsl and sub pop test ss in insl inc dec inc out pop (bad) mov add cmpsb jo cmp mov adc and inc lcall jae loopne data16 xlat sub xchg outsb iret mov rolb and adc xor and xlat aad daa inc inc (bad) dec mov and fcoms gs pop fcmovnbe adc outsb xchg push dec jo daa imul xchg sbb jbe jp push mov inc xor cltd and dec cltd fisubl pop xchg adc pop mov mov inc nop popa jo xlat aaa push in mov pop in mov jb pop xchg popf rclb adcb push xchg fs jecxz sub inc add pop sub inc xlat pop addr16 in mov xchg repnz xor lock addb push inc addr16 pop out test adc adcb shll nop pop and xchg add push sbb xchg ret adc nop xor mov nop push xchg inc pop add addr16 sbb mov jno and rol cmpsb push pop push nop pop jbe,pn sbb pop mov int3 jbe lds pop test pop out out and jbe add (bad) mov dec adc out aam mov cmpb mov xorl add mov pop mov or loop mov adc xor iret cmp inc lret cltd jns xchg notl test cld inc xchg fistp ja dec movsb mov (bad) es mov repz enter roll mov jno shrb movsl iret push cltd mov mov xor dec pop mov popf adc aad mov out add inc mov xchg jae push mov ret iret add out cmpsl sub imul lret lds out lods sti lock xor iret and insl mov pushw mov or adc dec int lea repz push push jmp mov xchg mov fldt sbb pop push mov rcll jg pop cld mov jge xor and mov fldl cmp or inc loop push es daa popf test xor movsl insl je int jo loop sbb lret icebp scas mov mov inc shrl imulb mov fisub lahf jge push es or sbb push dec (bad) outsl test cmc sub imul xor fsubr je aaa ja mov xlat out jae push pop pusha mov (bad) mov movsl sbb and jns dec andb mov das mov fstpt mov jne int lahf cltd xor mov and mov fldenv add call jmp lret jnp ljmp notb sbb lock adc je jne pop cs imul push mov loope sarl add stc and xchg test test lock xor test cmpsb xchg ret lcall fwait mov adc xor push pop mov or jl mov (bad) mov mov push es mov mov faddl cmp and pop dec test aam adc pop adc scas cmpsl jecxz imul xchg mov adc cmp sbb cld mov push add push xchg mov stos mov mov push ss or pop mov imul lcall gs dec and mov mov lea mov dec or fsubs daa ret call jae lds int3 dec je daa out mov lods xchg and xchg push arpl inc mov fstl sbb dec (bad) pop xchg jno lret and mov cmp insb lock mov fs sub and in in mov xor inc pusha inc mov stos xor imul iret in xchg adc sub jno mov and xor mov cmc cmp inc es and dec jbe (bad) jae lods mov and aam test and inc pop lret (bad) mov xor dec jg movsl or es sbb sbb push mov lret mov jns addr16 mov inc hlt sub and jae fcomps pop cli aam mov adc leave sbb xchg iret mov inc (bad) in mov popa pop mov ror fwait dec jp movsb je or in dec lret mov pop test ret mov mov inc das mov rorb xor or (bad) xor mov dec es jecxz lods loope test ss stos mov or sar scas rcr mov jge adc sbb xchg add mov adc iret orl cmc movsl xlat xchg jae popa mov push aas lds push xchg cld jle lcall mov loop sub inc xor or dec ret add mov jp add cmpsl dec sub rclb movsl test fisubr adc mov mov andl daa adc sbb xchg cltd xchg pop dec addr16 stos movsb dec cmpsl out mov lahf ja mov pop sbb andb mov mov movsl in arpl gs ja pop dec mov cli sbb mov ds das jne mov add inc cmp das icebp add pop repz loop mov xchg jecxz mov jp jle imul pop imul push out ljmp in mov jg pop in js iret test jns add pushf mov rol xchg and mov sbb add mov or mov addl (bad) mov mov sub and jle jo les movsb ffree mov sbb lds add lods or inc mov lret das and pop cld pop push mov shl cmp lret imul insb inc mov mov cld repnz mov ja mov pop dec sarl push ret fcoml push mov xchg adcl insb out adc mov in test (bad) scas mov imul movsb pop push popa adc mov mov xor push lret xor mov mov mov adc sub inc and inc mov out enter xchg xchg adc inc mov out insb inc xor jecxz push movsl repnz cld inc in (bad) fdivrl mov aas mov cmp and or mov stc rcrl or ja mov mov push push out sbb pop push jp sub push std jns xor sub fistp (bad) adc and out mov arpl push test icebp adc pop insl and mov stos mov add mov sub jo xchg mov mov sub lds mov in insb ljmp add pop stc mov ret dec pop (bad) jb mov (bad) loopne lret xchg imul lds (bad) std mov or dec mov pop jg jge mov ret and test mov lock repz dec fstl mov rorl xchg aad xor jno push xlat mov notb inc es cmp sub jns pop mov arpl xor into test cmpsl hlt rcll jns int3 pop in mov mov pusha icebp movsl je aad mov mov adc push mov dec lods rcrb inc ljmp xchg mov repz insl xor dec push and iret add or jno cwtl loop add and mov mov frstor lock pop adc nop sbb fisubr pop call fisttp movsl popa mov int3 mov jg adc cmp fstpl jo xchg aas cltd xchg mov inc push imul sub mov pop cmp scas mov xchg (bad) and out ss sbb cmp or mov jmp in clc xchg jo lcall shll sar jo jge aam das packssdw mov (bad) int inc imul and imul jbe inc popa pop mov (bad) cmp mov movd push dec pop dec imul mov jecxz mov mov cwtl lea mov sub xor or cmp and mov jo push xchg jnp mov mov mov cmp sub fistpl or fwait and inc pop ja mov lahf cmc mov and fldenv fwait pop push popf cmp and add sub popa mov outsb mov sbb (bad) leave fisttpll jmp lock iret mov xor mov sbb fwait jle shl in inc ss cmpsb cmp and sub adc push hlt lock mov es or sub dec cmpsl add (bad) sbb mov arpl insl mov out mov (bad) std test xor nop out shl test jp shll jo ret xchg or shll dec lods mov cmp call clc sti lds int3 test (bad) imul and dec lret mov test aas inc mov cmp insb push and insl ja fsubrl mov mov cmc int mov sbb add clc lea cmc dec inc addl inc fsts lock arpl lods push mov sahf rcll shll out mov in gs xchg add scas mov xor scas mov mov addl or into mov jns repz shlb add addr16 adc jne in push lods mov mov sub mov push xor xchg mov jg lds or in stos mov movsb ret mov sbb mov jne orb sbb aas mov mov mov mov cmp hlt test dec leave and outsl mov cmpsl mov cwtl xor jmp add cs xchg inc pop and scas js not (bad) mov add cmpsl mov scas jne cmpsl lcall es rol lcall mov cltd mov cmp mov or cmp cmpsb xor es andl fstpl inc loopne pop stos popa sbb shll mov in sahf fwait mov rorb inc xcrypt-cfb cmpsl popa pop sti and outsl lahf nop repz (bad) (bad) sarb into cmp and jns pop (bad) mov mov adc cltd or mov fstps inc scas (bad) cmp ret sbb gs sub int3 sbbb popa and cmpsb daa cmpsl aam dec cld mov test lock popa xchg nop cmp adc popa push pop fist rorb lock and sub add add mov lahf (bad) (bad) push daa faddl pop inc loopne je pmaxsw inc loopne ds rclb inc (bad) and add popf popa push xchg mov fsubl adc mov and insb xor xor cmp sub bound gs sbbl nop and cmpsl jb add pop fadds mov sbb fadds pop rcrb sar enter rcrb test loopne mov cwtl xchg popa nop sbb add pop adcb addb (bad) mov test add cmp daa js push mov imul inc fadd adc loopne mov jnp cmpb inc sbb fsubrs (bad) cltd loop mov nop pop and adc sbb and in push addr16 xchg addb daa sbb out pop pusha inc and sbb adc pop (bad) andb ret xchg addl sbb pop pop insb andl loop xor in mov popa cltd inc stos sahf ja pop xchg scas inc xor bound push inc inc pop lret loope aas test movsl daa sysret sub loop xchg and mov (bad) and das inc movb dec or or xchg mov (bad) inc mov add or inc jp pop aaa pop add sbb nop hlt xchg pop adc and pop sub js mov adcl jmp out cmove adc movsl pop (bad) push inc xchg xlat std pop mov jle mov push (bad) cmpsl insl xchg xchg sub test idivb mov test insl xchg cmp lret rclb fimull icebp jb push cmpsl notb dec aaa call imull loop cmp push dec pushl add and mov xchg mov scas (bad) pop cmpsl addr16 clc in pusha popa jle jl bound jo scas cltd ljmp sbb cmp mov (bad) push test xor mov adc loopne imul in mov call add pop xchg cmpsl lods lock cltd repz aad ljmp je int cmpsb bound imul mov sbb xor dec mov fbld push mov cmp repz cmp leave mov dec jne outsb mov adc xlat out fbstp shll shrl ror pop mov cld pop and repz jmp (bad) xchg cld std mov mov loopne push jge iret int3 sbb (bad) dec sub add mov loope sub (bad) cmp imul push push mov inc push add mov mov movsl (bad) pop xor in xor adc pop sbb sti pop loope mov xor repz out pushf mov clc mov inc adc inc adc mov jno lret jmp notl mov sbb pop push add out add enter in sub mov ret cmp xchg or das and mov jle fwait insl mov mov arpl addl push push cli popf mov add sbb cld and jp std repz stc add mov dec add and in jb sub mov sbb mov inc cmp sbb inc jp dec movsb lret inc insb arpl jns dec add jne or adc jmp pusha push jbe clc flds sub cmpsb cmp push push (bad) fidivrl lds pop mov mov inc cmp dec rolb (bad) call jge (bad) mov add mov pop rclb fist mov mov add or js in mulb (bad) pop stc int in xchg xor movsl pop test push mov or xchg clc push scas dec andl hlt xchg es in icebp shrb dec mov inc lea sti cmp push pop push inc mov hlt push and movsb inc sahf repz mov outsl lea mov mov adc cltd stc div push add cwtl or aas in jecxz fwait daa xchg mov addr16 lds imul push repnz fist fisubr mov dec fwait loopne pop rolb pop adc push mov imul int popf jge inc xchg lret scas inc cld pop (bad) pop xchg jne mov frstor adc fwait adcl cmp and arpl mov fdivrs sub (bad) mov pusha out cltd or sbb inc (bad) mov xchg mov outsb cmc pusha fbld add (bad) xchg mov mov pushf xlat ljmp mov shlb (bad) push loope mov test push xchg dec sub xchg (bad) lret adc mov push add sbb xlat movsl lods mov je and sbb push mov ficompl xor mov cmpsl push push test fisttp mov (bad) sub adc adc and sbb mov push popa add inc mov data16 sub test (bad) rclb lock sbb pop (bad) mov jmp sub in mov pop sub jg in xor (bad) mov subl in adc mov sbb inc xchg jno stc mov mov mov sub dec push pop mov clc push int3 mov add mov and rol dec aad push mov or pop push jb cltd mov imul (bad) ljmp ret loopne mov push inc jae pop pop mov xor jno inc mov and ljmp cmovbe xchg mov lahf popf xchg test rol sub lock jo cmp mov loope mov sbb stos or or rorl ret mov push popl fsubrs int adc int or ja pop mov xor and mull (bad) cltd mov adc sub cltd pop adc aaa es adc rorb arpl push inc mov ljmp jmp faddl xchg rol jns dec lds ss rclb mov es pop or jns sub repz push jno and dec (bad) mov (bad) in add movsb sti imul pop shll lahf pop int xor cmovl jl and out push loope push (bad) jae mov inc inc mov (bad) adc mov pop dec aad and and cmpl icebp sarb jno cmpl movsl or shlb and inc sub or or cltd cld jg mov out push rol in dec sub out mov sbb fnstenv call sub jne mov mov out lret jg mov das dec sub sbb out mov insb jecxz gs mov adc xchg (bad) cld pop clc pop out xchg mov sub push imul movsb xchg mov imul stos fwait (bad) stc pop pop mov mov js inc adc cld pop fsubs xchg rcll cs mov and push in dec or push sub outsl out insl in mov stc mov das and xor es jmp cmp (bad) data16 mov jne hlt xlat pop jle xchg jmp stos dec push xor cmpsl imul mov mov and fs mov jae pop or dec pop inc cmp dec mov dec mov sarl xor fistp cmp cli pop rcrl imul xchg push in mov mov mov pop inc orb pop addb sub adc sub mov leave dec mov jns push inc inc aas test or xorl jp xchg mov iret push dec add xchg mov mov daa mov sub mov or pop adc sarl and mov lahf movsl cmpl cltd fs pop cmc insl pop add sbb (bad) sub test jle mov push mov and mov adc mov sbb jmp cmpsl mov (bad) jae lock add pop mov fdivrs pop jno push pusha lock test add lea (bad) (bad) sti and mov icebp jae sbb loope and mov lahf (bad) mov xchg cmp push gs mov cld mov xor insl dec or (bad) pop lock adc mov jge inc add mov add inc or mov jno mov mov je xor out lods mov leave orl mulb pop mov mov adc and popf mov jb rolb pop inc push int3 mov pop std dec repz imul or dec xor js data16 mov adc or xchg fstpt jns sub dec jg jmp pop mov mov pop mov sbbl inc mov inc push mov xchg mov mov js or add rorb pop push ja fwait sbb pop xchg push inc push sahf inc fbld xchg mov jo aad int test and imul and pop (bad) hlt inc cld push cs repz mov arpl inc mov jecxz (bad) out mov cs adc push pop dec cld sbb cwtl movsb cmp add sbb mov adc cmpsl jnp pop repnz xchg xchg xlat fsubs movsb pushf or add xor fnstsw in inc xor push popa orl jnp push mov loopne inc add nop (bad) fwait addr16 out mov xchg mov add sti adc adc dec daa lret mov add inc cltd mov mov mov ljmp pop push leave imul nop outsb out daa cs fwait cmpsb pop insb out lret mov popf cmp pop push repnz and ret enter inc xor pop cwtl mov jns aas fdivrl (bad) mov push add test mov dec mov adc lret mov fbstp mov pop sbb xchg xchg mov adc ja push mov dec inc outsl data16 xlat mov nop jle repz popl jg add xchg dec (bad) packuswb mov sarb cmp iret lods mov inc cwtl add sbb mov sub and fs push cld xor insl fs inc mov test xor sub xchg or outsb in fs fisttpll mov repnz js rol lcall or or int3 nop (bad) mov lods mov outsl and xor push iret xorl testl imul mov cmp push inc cmpsb andl xor jns or pushf (bad) aaa mov int3 mov arpl in jecxz mov jle push test dec cmp xor fistl enter (bad) dec fwait push add shlb or push or mov mov adc lcall aas lea in ret test xor adc fsubrl in jecxz pop mov and ds mov mov dec fsubl cld and in gs std jne andl mov test es and sbb das int and mov aam xor sahf mov mov cmp xchg inc in (bad) fldenv mov in push clc or ss enter out push adc cmp and jb std push mov sti icebp repz mov (bad) (bad) aad (bad) and jl add pmaxub mov imul mov mov cltd xchg inc movsl arpl cmp outsl mov and mov fcmovnb xchg and fwait test or mov cli jl cmp sbb mov (bad) movsl iret push loope shl mov dec and sti pop jle pop mov (bad) jg mov lock aaa mov lea movsl sbb ja lahf imul mov or ret push mov mov lods mov aam dec add rcrb mov scas movsb dec cmp xchg pop in movsl gs mul xor inc psrld jecxz jmp mov xor mov test (bad) fstps dec scas pushf mov inc lods sub (bad) mov scas xlat inc cmc lods lds adc iret mov pop icebp xor lods pop xchg incb mov jmp mov fldt fdivl mov xchg aas add mov push dec mov xchg das mov gs imul and outsl dec jno pop add jb lods stos mov nop or mov add mov mov stos daa idivl mov insb leave loope xchg hlt add movsb mov mov mov lock mov ja xlat mov mov je mov hlt pop aad popf pop js inc push clc mov pusha adc jns push fildl or dec lods and sbb mov or xchg fidivr jbe xor mov stos or cwtl xorl mov push pop and push mov cmpl mov fstl jnp cmp jno jecxz and xchg imul mov sbb (bad) movsl pop ret jg cmp das mov push jp mov adc lea inc or xchg inc mov inc xchg xabort or repz mov mov push inc sub (bad) dec pop add jno stos mov pop dec sbb clc in xor (bad) imul mov sub negl cli and andb cmpsb dec add fistl imul gs push scas test mov push pop or (bad) dec loopne int add (bad) jbe fimul movsl lods mov push stc and outsl jmp inc popf imul in inc mov sub mov out and (bad) hlt daa xor pop or in inc ret mov pop pop cmp jns mov and (bad) frstor lahf mov xor push sti pop fdivl mov inc lret jns stos cmpsl pop movl xchg (bad) mov imul xor mov imul or mov inc and das mov xor cmc cmp loopne and jo (bad) mov push int cmpsb sti jmp push mov pusha hlt ljmp scas push xchg dec push mov or dec setns lods cmpsl arpl mov (bad) out xchg pop (bad) (bad) in jle std sub mov ja mov pusha js (bad) dec dec push dec push push push mov pop out or hlt nop les sub shll int3 mov mov lahf in or test test dec add xchg icebp scas test call movsb pop sub jne movsl xor arpl orl mov dec dec inc (bad) iret rorb shld sbbl mov int std xor mov movsl fiaddl mov fadds mov fidivr (bad) fisubl addb ds mov sbb test or loopne shll fisubl ss xorb sbb (bad) mov scas pop add or sbb mov cmp lcall adc sbb mov inc daa mov aad jo lds movsl mov add stc cs mov xchg cmpsl jnp cltd addr16 nop cwtl add fbstp cwtl (bad) jmp pop xchg rcll mov and inc dec fild sub and aas mov ljmp into inc mov stos mov rorb mov in xor sub cmp ss push jne insl mull fdivl mov xchg into xor mov pop push inc cli loope cmp push jmp jbe fsubs hlt repz movsl or in cmp sub mov rorl jle xlat xchg movsb cmc mov loopne or out mov xchg xchg jae aad inc mov lds xchg mov mov cli and mov sub jle into mov mov das inc (bad) cmovns xchg (bad) jns dec mov or jecxz mov mov insb mulb enter pop icebp pop push (bad) cltd jne inc or mov aam adc cmp push flds mov test cmp lahf imul cmpsb loop fscale mov add lods mov jae push scas xlat add add inc sub xchg and scas add xor add ja mov jae xchg lret push cmp mov (bad) icebp (bad) mov sarb jl push cmp cltd outsb dec das popf xor or push shl xor repnz in (bad) lret mov lods clc rcrb mov push lret cltd xor daa arpl dec cli push mov in rcrl dec or pop or and out sbb mov sub cmpsl mov push shr pop xchg fwait mov arpl mov xlat jle in xor xchg movsl cwtl in daa sub xor push mov cmp pop cld pop fidivr fcoms cmp nop mov push lcall subb inc out add movsl (bad) push cmp mov jns mov xor mov push pop lea mov lahf and lods stos or test push shll imul pop pop test stos xor dec (bad) xor mov add mov rclb mov in lods adc (bad) (bad) arpl lock dec bt dec xlat xor lahf mov lcall cmp mov stos scas loope icebp fsubl popa jg int outsl in dec or mov inc mov leave pop jle mov pop mov mov and mov rcrl cmpl pop aas xchg cmp out ffreep bound and jl jae pop mov ds xchg fdivs or outsb pop xor push fildll ljmp (bad) mov jo jmp das push imul fdivl pop mov mov mov (bad) mov cmp pop popa pusha idivb lock or mov sub ret subl loope jns les out mov lret repnz xor pop mov mov xchg lds in andb fdivrs jl cmc inc mov (bad) mov and xchg pushf ljmp xchg fs pusha xlat mov addr16 sbbb inc mov pop lds inc mov daa pop out inc mov (bad) adc and mov daa mov sbbb lock adc mov dec inc mov mov mov mov hlt loope inc xchg sahf adc add nop push out shrb inc jmp pop push sahf mov xor jb xlat xor mov mull out inc mov (bad) fsubrl sbb scas lods jns or fnstenv std cwtl popl mov push (bad) mov outsb xchg and hlt insb xchg mov ror scas cmpsl lcall std pop rclb adc pushl outsl out mov push cmp cltd (bad) movsl cltd mov addl xchg shr out jne add lods or cmp jo ds xor adc (bad) aaa mov xor nop pop shr or dec ret rorb push adc fistp mov adc jg outsb or sub push xor xor aad inc cmpsb lret ds pop jle test loope leave pop inc adcb in bound cmp insb inc sbb mov arpl mov mov clc inc pop movsb test xchg test cltd adc in dec out loope,pn sahf cmp data16 cmp jecxz or xchg (bad) mov push gs nop mov mov icebp dec mov sub ja mov xor in loop add repnz add inc xchg cmp addl orb mov push mov xchg or (bad) dec jle test mov xor mov dec mov pop mov pushf adc pop scas mov popf hlt fimull cmc int iret pusha dec mov jge pushf mov (bad) lret mov insl out (bad) pop stc movsl cltd push and or in xor stos jbe movsl outsl out adc mov test lret (bad) xchg jb inc push mov shrb dec mov mov sbb lods cmp adc pop mov push mov xor pop (bad) (bad) imul std daa jne and jno mov xlat arpl xchg lods xor (bad) nop or cltd mov jge cmpsl cmpsl popf jecxz scas ret xor cmpsl push jle inc insb in mov cltd fstpt ret shrb xchg or mov ret sbb push dec add jbe inc (bad) mov bound mov in insl arpl cltd push jne inc or es into dec mov aam jno pop add insb (bad) cmp and ret xchg imul in mov xchg ds test xor pop mov and (bad) mov jns cmpsb cltd mov ret mov loope outsl daa sbb pop cld je hlt push out out fimull leave xchg imul rorl push cmp data16 fsubrl cld call and dec add xchg jg mov outsl cltd cmp jae jo xor imul mov adc inc mov sub mov xchg aas sub push out mov call mov mov shlb lock mov imul mov add mov mov push cmpsb inc sub movsl add sub dec mov xchg loope (bad) mov outsl lods scas inc mov mov jnp,pt jecxz mov pop (bad) aas xor mov adc mov orb shlb (bad) push pop repz push and out dec mov jge xchg mov mov mov cs (bad) cmp in push in and mov cld out orb les imul and shll jno mov mov sti jno push mov jl push cld ret xor cmc movsb repnz hlt pop (bad) adc xchg or cmp int iret dec xchg arpl mov mov xchg mulb mov aaa imul push jae aas inc push mov sbb out (bad) subl imul rolb leave lea mov push ss adc ds inc popf ja xchg xchg mov iret lds mov sbb and aas jecxz popf mov mov sub iret test ret and add leave and push jbe pop dec dec movsl lds push jo adc (bad) stc mov (bad) mov mov mov mov dec or fnstsw test daa jge cli outsl sbb mov stos in mov in mov imul push jo jecxz in (bad) cmpsl imul into inc bound fcomps fiaddl add movsl xchg outsb sti xchg jo sbb test sub xor stc loopne andl stos mov enter stos xchg movsl out test xlat test cmpsb jle repnz or outsb mov jb mov lock out call movsl scas inc pop mov mov mov sbb imul and push into push mov loop adc aas (bad) xchg arpl xchg std orl movsl mov pop pop add inc xchg xor dec icebp cli imul jle lods mov sub inc sbb scas xor jg sub addl cmp inc xor mov fildll sub cmpsl and inc mov mov rol adcl mov popf fsubs popa xchg arpl push stc cmp addr16 and out test inc or and inc and pop loop push and test push popf mov jp cs cmp push mov cmp cmp cwtl xchg xchg jae fcompl sahf mov lret roll pop mov jmp fwait mov mov je mov (bad) push dec cmp jnp jp movsl hlt push inc cld ror cltd mov xchg mov sub mov in imul imul rcr adc jp mov gs inc mov mov adc inc pop lock push mov mov dec in mov cmp cmpsb lahf fstl jns xchg dec mov lahf dec loopne inc xchg jno fstps out lds mov push insb movsb pushf mulb inc mov mov dec je fist repz cld xor inc inc dec or lods mov cmovge jnp movsl mov rcrl mov les pop aam movsl ja jg in js fcoms jmp and mov int3 mov andb js loop xchg mov add add js fsubl dec cmovle mov fcoms lds xlat lods cmpsb (bad) xor inc shr aaa movsl mov ret push inc xchg pop mov loop lahf cltd cld xor insl ss stos arpl out jecxz xchg or jmp movsl les mov dec or mov xchg inc push mov pop mov pusha aaa pop sahf mov dec test cli cmp inc push xchg (bad) jae ret incb mov xor mov movsl pop sbb jnp mov and or mov cmpsb fdiv jae mov loope mov fstpt les push out lock xor lea add les and mov mov je jo jns lods jmp xchg cltd adc or sbb jo and sbb xchg movsb jge out adc test mov sub cld stc fcmovu jo aaa jns in mov and mov (bad) pusha arpl cmpl push imul mov mov adc je xchg xchg and mov sub std push push jle imul bt data16 dec xchg in or imul adc lret push arpl fiadd pop loope es mulps or loop jp cwtl test movsl and sbb xor cltd repnz jo jno pusha dec cmpsb cmp rorl fadds push add lock push ja sbb mov call mov cld inc pop pusha js xchg cmpsb fxrstor push and das cmpsb jl jecxz cmp enter dec je mov movsl cvtdq2ps or inc xorb mov pop bound aas sbb push add mov add imul mov js inc adc jmp fwait iret test movsl and repnz ljmp mov cli lcall loope inc pop mov dec sbb test cmp rcll movsl out insl in add mov xchg (bad) cli mov sub mov mov cltd mov push jo shll int pop cmc pop (bad) xlat xchg arpl stos xchg test pmulhuw mov sbb pop pop cmp jns jae js mov push pop dec dec or sub adc mov add cmp adc mov sub mov or out adc movsl inc stc jns mov dec roll cwtl adc fwait cmpsb mov bound add dec aad cld jmp fildll es lods push mov mov dec mov mov add imul and fistpll push mov negl cmp sti mov cmpsl popf fidivl cltd add (bad) frstor out mov sub add (bad) inc das and xchg sti dec or and inc lods sub mov lcall jb leave sub adc mov shr mov xor aad xchg test mov aas sbb in imul dec (bad) xlat inc adc movsl sub push pop cli jb cmpsb sbb xor mov je call jl rorb cmpsb (bad) cli push imul inc lahf mov jno fucom insb mov inc mov xlat out call xor (bad) xor fisub mov pop mov mov hlt jmp adc lcall int mov push cmpl daa mov adc add mov add and roll mov cld je lods aaa mov in aaa mov dec mov js jge loop mov test xchg xchg mov sbb outsb push mov sti fdiv insb sub int3 sub xchg inc movsl (bad) pushf mov mov repnz stos test sub lock test test dec test xor in mov testb push cmp fstpt mov outsb call adc mov jl mov mov cmc jp cmpsb mov pop gs movsl jl neg jg or inc cmp popf sbb and mov js (bad) adc jg push xchg sbb adc (bad) icebp add jnp cmp shrl nop cmpsb lea xor xor aam rcl test psubw aaa jmp mov inc or movsl cmpsb mov xchg popf fisttpl adc mov push add mov cmp push cmp and push popf mov (bad) xor jo mov adc fist into leave mov mov and (bad) xor xor mov cltd push cltd push push gs xlat dec push cs dec test pop popf sub sub mov ret xchg mov out cmp push mov dec and or mov ret push test in movsl fcoms (bad) push imul mov add xchg push enter xor mov fild pushf push lods mov jbe stos in mov xor mov test xlat je movsl seto sub and pop lret sub test call mov outsl int3 lahf mov iret xorl mov inc hlt mov jl cmp lret mov aaa sbb mov adc (bad) fwait mov mov cltd push push cmp and mov shlb jae inc adc aam push rclb mov fldenv call cmpsl jnp sub fidivrl aam push leave lea cmpsl sbb sub mov loope mov cmp dec shlb (bad) movsl ds mov and xor xor pushf mov jmp gs push addr16 (bad) rcll xchg lret arpl sub jecxz movsl or xor xor mov xchg (bad) mov sti pop sarb sbb pushf mov xor cmp repnz js jmp int3 sub stos and mov inc addr16 stos or movsl mov jno outsl push std jne xchg mov decl mov shlb cld repnz repnz out jb mov push testb sbb movsl repnz mov popf pop mov xchg push popa inc dec (bad) test jecxz mov push iret cmc xchg (bad) repz push mov jns outsb loopne shll scas xchg lea xor mov ret mov arpl in or adc sbb cmp jecxz mov xchg bound push mov out cmp shll jo fxch xlat xor pop and scas xor movsl cmp or mov pop aad dec mov ss mov cmpsl stc fbstp int je sub push dec and mov xchg ret and and jne (bad) cmp mov sub add aam mov insl out lahf cltd xchg sub jecxz mov adc jno sub sub mov mov sub push xlat mov jae xchg and mov and and mov lret mov push call and test xchg cltd mov lret or loope sarb cmp push xor inc jecxz in bound pop idivb shll inc sbb push dec sub jl movsl inc and ja pop shll xor clc sub mov cltd push add fsubl pop pop idivl fndisi(8087 arpl push out cmp cmp mov mov fs mov test insl andl adc in xor stc mov push xchg xor inc mov (bad) scas add movsl inc or mov in movsl push pop mov and nop mov mov mov pop push addr16 push dec popa call repnz mov mov mov jo (bad) mov or mov data16 pop fsubs test aad fnstcw push nop test push rcr cltd stc enter popf inc std aaa cltd sbb lds call sbb mov cmc ficom es cmpsb es jo jbe xor cmp hlt scas pop push test loope int3 popf aas mov sbb pusha (bad) pushf (bad) dec cmp jmp mov mov fldl dec les mov ret inc lea mov and iret mov jnp mov cmp popa int3 cltd clc push shlb jle or jae jecxz mov or fdivs adc sahf jnp,pt js andb cmp scas adc fcoml leave (bad) aam pop mov add mov jecxz mov notb ret cltd pop pop lock daa adc pop mov xchg inc mov or cmpsl push pop icebp cmp cmp repnz inc mul stc sbb sbb (bad) xchg int lret (bad) lret xchg gs mov jo jnp cltd enter xchg jecxz mov push aas movsl imul mov cli sbb xor lcall sbb cmpsl adc jp jecxz xchg push movsb sub test and scas mov add pop scas push sbb push lret popa sub or sahf jne fistpl fs subl jns push int xchg mov (bad) jbe es cmc andb xor pop cmp sub mov mov cmpsb xor shll loopne movsl jne xchg xchg lea inc cmp jo sbb call jne,pt push not js or cmpsl insl faddp push test push cltd mov mov inc mov cli (bad) lret xchg aam jbe mov mov bound jmp add cltd add sbb loope imul fs sbb std (bad) shll push mov mov jno mov in cmpsl or add xchg sarl popa fcomps cmp sbb add mov in in mov popf arpl stc mov sbb in movsb xor call mov sub daa fistp testb cmpsb gs test ja insl (bad) pop jg (bad) mov out sub add int3 flds mov lret daa jmp das jecxz sarb sub xchg mov mov inc ljmp xor sti mov pushf mov mov popa push cltd push and (bad) mov mov rolb mov inc adc nop inc imul mov out inc push dec sar popa and mov dec (bad) add hlt dec jmp jecxz xor mov jo imull pusha movsl push and sahf in movsl pop dec mov (bad) hlt push add addb das cmpsl or add fwait test popa pop mov cmp xchg adc inc cmp dec fsts adc lret add mov fnstenv (bad) clc add repz and pop mov inc ds es scas xchg mov decl mov mov stos pop test mov std push movsl cmc data16 daa add int3 andl cmpl into adc xchg inc out jb mov (bad) push xor and or loope cld jns mov scas mov mov pushf std mov cmp (bad) enter adc ljmpw sarb jmp out mov inc push and pop js mov out push mov mov add mov bound mov cmp jmp arpl mov rolb dec or pop pop cmovp inc mov sub (bad) rol xor test jo out inc or mov and xchg test andl push test (bad) xchg adc fwait xlat mov mov mov cmc mov adc cltd adc enter xchg popa clc push lods imul mov sub test and sti pop and adc xchg mov es mov mov outsl jmp push rorl add andl (bad) push iret xorl cld xchg aaa lea and xor mov ret shrb fdivs adc mov pop lock mov xchg stos popf pop inc push aam movsl test out mov push cmp mov cs mov mov xchg mov je inc mov adc mov xlat scas adc imul and ss pushf push clc adc ja js or sbb lock xchg repz push and mov fidivr jecxz mov (bad) jnp mov inc sub sbb movsb loopne cmp lods mov scas jecxz in adcl sbb stc cs dec fnstcw push out mov leave mov test popf mov xor xchg mov add sarl sti pop mov lret adc and mov in (bad) lret mov inc adc lock cmp and push sub inc sbb arpl stos cmp call repnz test cwtl xchg addl mov mov jl jecxz xchg push addr16 xchg push stc adc bound scas xor or gs lret in subb mov mov or inc jp jmp out (bad) test jle aad mov das dec mov lcall repnz ret jb mov sbb adc pminub sub push es pop movsl scas or data16 jns sub sub in mov and mov mov sbb fdivl out fistpll mov push cld mov sub test test ret sbb (bad) xor mov jo cmp pusha pop sub cltd shrd out sahf mov jno outsl cwtl bound inc adc push inc mov mov pop les mov jbe sbb jno mov iret xchg mov mov jmp push std mov sbb push cli jae cmc sbb sub lods movsl jo pop adc inc adc insb mov jns mov inc add xchg or cmpsb or cld mov jge mov cli pop pop cmp repz xchg mov cmc and mov movsl xchg (bad) mov mov cli clc nop les push dec stos push pop insl in das rep and ror adc in cmpl or in gs arpl dec xorl xchg mov jmp xchg sbb mov mov mov push in cltd iret mul pop dec push jge fsubs mov push loop mov dec add fldl lock movb xor out jns mov fs aam mov or sub (bad) scas lock mov and inc adc xlat (bad) xchg sub jp mov imul jns in xor pop icebp movsl popa pop loope mov cmp int3 xor push jbe xor aam ftst jp mov movsl mov adc enter sbb out xor mov ds push sub lea fstl sub jb cmpsb inc mov das cmpsb pop test aad dec movsl push imul punpckhwd jecxz mov fldenv imul addr16 xor sub (bad) aam xchg call or jno lret add shlb mov sbb cmp sub js stos pop movsl push lahf cld int jns ret out inc adc js xor dec aad pop lahf mov jb mov mov (bad) rolb test and sub mov xchg jmp repz mov push or jo mov sbb ret in mov fnstcw (bad) xchg addr16 xchg cmp loopne mulb push xchg fs add stos lods and mov sbb xchg mov std inc scas xchg lds (bad) mov cmp lahf jae aam mov cmp dec or or pusha jns dec sbb cmp (bad) negl aaa lds mov lret push gs xchg add xchg sarl add fistl movsb sub fisttpll popa jnp mov pop push xchg enter mov mov add (bad) lods mov lea loop in lock int ljmp iret test mov in bound lods mov mov xor loop push (bad) mov pushf mov or gs mov mov push arpl cwtl inc (bad) mov xchg test adc or adc stc es or icebp fsubrs pushf lahf sbb mov and popf arpl push cs es scas insb popf sub push add add fnstenv test mov push add and shlb adc rorl iret xchg inc ret mov int mov dec mov cmp sbb sarb int3 xchg push (bad) lock mov mov xchg xchg ret test and xor imul jno (bad) fimul add and add les mov cmpsb xor imul outsb cmpsl mov jb fisubr sub test pusha idivl repz imul push and mov (bad) lret mov ja dec mov cmp push out xor js outsl aam repnz xchg ret into xchg lcall add push mov and jg push movsl es (bad) jmp cmpsl cld dec push lods mov rorb mov cmpsb push lea mov jno or addr16 dec mov mov sub push xchg pop aam inc lods mull push movsl (bad) jbe pop hlt cmpsl mov xchg cs inc push pop leave xchg jecxz das call int3 mov push loopne stos cltd jl xchg mov bound jl cltd adc xor pop cwtl mov mov dec roll mov dec mov popf sub pop mov xchg lock adc dec test jecxz imul out mov fdivrl push in outsl out (bad) dec test add fsubl mov sub xor mov adc inc fimull xchg jno jmp pop shrl push sahf xor (bad) aad popf push std pop jae dec pop dec out sbb inc jle arpl inc ret mov leave popf mov and xor and cmpsl (bad) mov xchg sar sbb pop mov push aaa pop and xor lahf mov cltd dec inc push inc js xor mov cltd mov das outsl int3 push ja jg push dec stos in fucomp xor roll bnd aad jp rcrb das pop xchg mov sub lods aam xchg fmull shl ret lret and mov (bad) imul inc pop call ljmp icebp fdiv imul pop cmpl fsts cli mov sbb pop mov push iret mov mov loope cld add sub out bound sub int3 insb arpl and aas inc mov xor dec lds mov sub mov mov daa iret inc cmovs mulb push adc pop nop mov mov je fs (bad) push inc xchg cmpsb bound js jns cltd adc ficom mov sub mulb loope mov fs lock (bad) mov repnz mov add mov or call aas sbb sub pusha xchg mov xlat lods pop popf jg out fdivrs and cwtl fisubl cmp push mov inc adc aam xor and cmc and (bad) mov and xchg pop and mov or das int or dec xchg pop icebp in leave xchg mov inc pop scas movsl mov mov out je imul inc cmp mov jns clc xor sbb jp or es jae inc and fmulp rcrb dec in scas mov fsubl imul lods inc movsl test mov pop (bad) push add push mov lret inc fsts imul or jns lods scas repz adc dec rorl out pop lcall cld js loop sub fstpl jge popa fmull cltd push (bad) fdivs aaa jmp lds cmpsb jb imul pop fisubrl cltd mov or mov lret dec mov inc add mov fldt cmp add add sbb sub mov outsl icebp sbb jns push xor (bad) add jno inc dec daa pop mov mov (bad) ds mov sub in xchg lods jb aam stc mov or mov jmp aaa (bad) int3 movsl lods rorb xchg clc stos lods sar movsl test cltd ss roll xlat sub or clc pop cmp cli and mov js out out pop cmp xchg mov inc movsl mov xchg push jns mov xchg jae inc cmp sub arpl mov (bad) rcrb dec sub cmpsl repz rolb loope mov dec les lods inc mov rcll cmc loope jns in inc ja je ficom pop adc je mov or scas push sti movsl mov ss ljmp repnz and mov es (bad) mov jno adc mov lds jo fiaddl dec rol lahf adc movsb sub cmp lds (bad) call mov into push (bad) es mov mov add adc xchg fistpl pop das std sahf ss inc push shl mov sbb dec jp mov stc pop cmc cmpsl outsl out mov out push pop mov pop stc mov push xchg sbb push jge in and mov int mov sub mov fdivrl insl mov mov and mov aam sub bound dec scas fucomip out sub dec xchg jl add pop das loope and fisttp loope (bad) into clc mov mov aas cmp adc sbb out insb repz cmp pusha sub cmp jb dec pop cmpsb fldl jbe lahf movsl hlt clc pop push pusha xchg ret ror mov mov pusha sbb and sahf (bad) xorl cmpl inc push and dec test lds xorb enter rorl xchg adc sbb xchg inc push add add ds addr16 cmc (bad) data16 mov mov jbe sub push add and push sbb mov int3 cmpl add mov repz mov lret (bad) jb sbb imul mov fidivrl dec jo lds sub (bad) mov or (bad) sbb test fbstp jg bound xor fneni(8087 jns std mov mov out cli movsl lods jecxz mov mov iret xchg push sbb xlat pop mov jmp mov sub dec fwait mov fidivr lock insl dec shr jbe mov lahf mov mov or inc mov sub sbb ds or inc inc pushf (bad) stos mov sbb clc push mov dec or jmp xchg fidivl pusha jmp xchg pop andb mov cmp adc mov pushf mov stc cmp mov cld test inc movsl dec or push (bad) lock push xchg mov push cmp mov je push (bad) or mov mov test ds jns cmp mov sti repnz mov lods test and inc popa icebp imul push sbb xlat int cmp cltd fsts jbe outsb pusha mov jmp popf in cmp int3 xor lahf pop pop push xchg sbb xor scas mov mov cmp insl xlat cmc mov mov lds xor fnstsw insb push jp mov into (bad) out and inc mov jmp in and sub loope mov cmc inc adc xor sub xchg in mov mov dec push or test ret xchg bound pop mov in imul js sbb andl and imul cmpsb stc pop test dec insb jle scas xor pop stos adc data16 fwait outsl mov add push add sub call clc push cld imul push mov fidivrl addl out dec mov dec cmp push cmp mov mov inc mov lret outsl call rolb sbb in mov sbb jp js and int3 test nop mov and add fwait xchg insb cmpsb lock repz dec pop ret cltd mov gs xor cmp fwait or iret xchg mov xchg loopne jmp mov and xchg mov (bad) mov movsl or insb cmp mov push jb xor insb bound dec imul sahf ror mov stos ljmp inc and rdmsr mulb push pop jecxz mov clc pop push xor and add jbe mov or int mov fisubl cld (bad) mov test pop ss adc xchg or add mov fistpl add movsl mov movsl mov imul (bad) mov and xchg je cltd xchg mov mov aad cltd inc pop hlt insb aam dec add shrb test mov popa cltd push loop adc pusha xor roll jb mov jp mov or fisub imul pop (bad) cli and nop fwait mov loop and adc das mulb sub sub lods (bad) adc sbb cmp pop mov out lea cltd adc mov mov cmp call mov (bad) jg push mov pop pushl mov scas ficoml dec bound push mov jle jl addr16 lret cld out sbb push mov sub lahf popf fldenv call mov andb push sub mov dec mov imul leave repnz pop pop outsb cltd cmp cld cli inc std in jo xchg push adc cltd xchg (bad) pop add mov dec dec mov sti (bad) mov imul mov jecxz dec lods push mov xchg dec mov aas sub mov adcb push jmp mov stos (bad) push in cmpsb push cmp in push inc mov hlt pop mov mov xchg ret jmp ljmp xor push sbb aaa daa jle cmpsl mov dec cltd add pop div pop and xor arpl jl sub pop or sub nop dec pusha loop inc jge mov sbb pop repnz cmpsl scas es push and mov scas xchg inc jo sarb fistpll aaa mov pop cmc mov fstps xor imul (bad) mov sub dec arpl test push mov adc insl gs js inc cmpsl cld xor mov and mov pop hlt pop repz mov pop fdivrl mull add or lods stos loope sub lahf mov test mov and sub lahf imul loopne fidivrl popf jns std in mov (bad) jge mov insl xchg test dec shll adc stos mov movsl enter mov sti arpl inc or aaa popf xor nop jmp add and mov in fistl inc cltd sub (bad) cmp (bad) int mov aam and mov xchg pusha fidivr xor sbb pop xor mov mov in sub popf mov mov (bad) ljmp sub movsl xor ja call push sub dec xchg test and in fs int3 fisubl pop cld push and ds xor xchg jo mov mov subb out dec shlb mov adc add jbe out push aad and iret mov push (bad) push mov cmp movsl bound jp dec aaa hlt xchg cmp insl xor mov dec and jne daa outsl (bad) in push mov es xchg cmp (bad) int3 push add fist andl mov jae or mov lahf xor jno inc add mov lcall popf mov (bad) mov xlat popa fsubs mov out data16 cmpb adc mov jae mov pop jg push dec (bad) enter inc adc jle daa lds mov xchg mov addr16 jns cmc inc push lea and lcall push pop xor mov jne mov mov test and in mov mov or push xor outsl mov xchg mov jno mov push add lea cmp mov dec xor cmpsb dec dec or rcll mov push lret scas fnstcw push inc xlat xchg add xchg mov or jo cmpsb mov loopne,pt inc mov jno pop or out test cmp xchg jns and cmpsl mov lret aam leave lods scas mov push iret (bad) push mov fdivrl rcr jp xchg or fsubs or and stos mov jmp shll add in insl ficompl cmpsb stos fstpt pop clc and aad jg mov fwait daa mov movsl pop repz (bad) (bad) dec stos pop push mov push sbb mov adc mov icebp cmc mov (bad) int3 cmp pop and pusha ds loope add mov cs xor popf ja jl daa fdivrl push mov ret push mov xor (bad) cmc push int lret inc shll mov (bad) pop push push sub aam pop lods (bad) xchg mov stos bound sbb cltd das sub scas xorl jo aad sbb add lret inc cmp pop aas pushf fisubrl cld pop pop sti es xchg (bad) (bad) (bad) je inc or and icebp mov das jp popa (bad) and xor jbe mov mov in xchg or mov or out (bad) fxch mov jne or mov push or movl fs add or mov ret mov clc push mov and lds mov sbb gs push sbbl add syscall inc ret movsb push mov mov xchg scas mov push inc int adc and rcrb (bad) mov mov (bad) jp xchg pop jo pop lea nop mov shll jne and es stos cmpsb push push std out cmpsl mov rcll fdivl into xor pop (bad) mov mov push mov lret inc xchg mov imul inc push add std push cmp (bad) push enter jl popf sbb iret lock fidivrl loope and dec divl dec mov mov insl (bad) jp adc mov and (bad) scas and mov pop xchg test mov ja cs imulb jle pop std fdivrl xor adc test repnz jecxz and xchg ret pop ljmp push push xchg xor mov lods inc sti scas into subl or cmp sub adc mov test dec sti cltd dec push mov and out leave imul mov gs push push and pop jns pop pop mov jo enter mov out shlb mov aaa iret sub cmp scas mov clc lods and jns push popf inc mov lock xchg xor sub mov fiaddl inc orl sub ret (bad) pop cmp cmp test xor cs lcall ds sub fnstsw add dec mov insl add mov in mov rol cmp mov mov nop lcall in fist cli loop inc add mov mov sbb mov movsl cmp and cli dec mov ja jmp popa out add dec int pusha mov scas movsl push mov js mov das lock leave (bad) lds jle cmp lcall xchg (bad) icebp pop xchg orl idivl hlt fsubl (bad) call pusha out xchg push lods cltd mov sbb imul add aaa jge andl mov cmpsb mov sbb mov in mov push dec mov mov lods (bad) cld movsl mov adc out in rcrl inc fistpll adc (bad) shll lds add insb jecxz shrb fs fbld insl lods out jb mov sbb add imul adc psubd in imul dec xchg addr16 sub cld sub or ret cmc mov dec mov test inc pop mov popa jo mov push lds mov into and adc out cltd repnz movsb pop mov mov frstor push mov cmp pop inc xor push pop mov aaa scas test lock jnp mov ret sarl pop std cli pop addr16 push shll inc imul dec mov xchg and stos mov test fsub mulps xchg nopl sub or mov mov aad mov cmpsl mov popa in inc gs push inc fisubl imul (bad) dec inc gs mov lcall jl push mov (bad) lock ret cmp or mov hlt dec mov pop xchg (bad) jne add sbb dec cltd push out (bad) ss movsb xor out sahf dec sbb ja insl mov daa out jmp movsl mov loope cmp jl adc call out sub push sub or enter sbb mov cmpsb movsl (bad) fisttpl sub scas scas inc out movsb gs mov sub out imul jge xchg fidivl mov ss sahf add add mov test inc (bad) out test mov mov ss popf ret xor jecxz lock jnp xor stos mov add jge push dec imul pop inc es inc jecxz mov jae cmp jecxz out dec mov add pop dec mov or (bad) and mov mov xchg test insl inc and or jecxz rcrb mov fnsave add fidiv pop sub dec int cltd js sub popa (bad) push mov xchg scas mov rorl xchg xchg cwtl mov inc adc (bad) ja lahf mov mov push mov adc les pushf flds insl xor int3 add in mov cmp pop in sbb dec push sti push xor (bad) jbe sub test add dec mov movsl insl out push cltd orl mov add sbb mov mov push sbb ljmp jmp sbb (bad) cltd adc sub cmp (bad) xchg and mull fdivs out gs les mov jne movsl pop sub cli mov insl movsl sbb das cmpsb sahf test add lahf mov imul inc cmp xchg test mov dec push mov loop add fwait mov jns cs out in push test imul mov shlb pushf movq add mov fnop push ret lock (bad) sbb add movsl pop dec jge fdivl movsl inc jecxz mov mov (bad) lods cmpsl sbb sti addr16 mov sbb in adc xchg (bad) movsb arpl fidivr push sub jge fdivs xchg insl cmovne in add adc data16 imul dec test mov mov and mov dec push xchg fwait mov xor sbbl cmp shrl in lods sbb iret mov xchg mov hlt dec mov lret test push lods mov stc nop adc loope cltd dec or push add sbb cs daa loope loope mov (bad) or xor pusha sbb pop mov lods icebp mov insb cmp xchg add mov int mov and xor imul icebp (bad) or and cmc sub (bad) mov aad pop enter mov mul shlb inc dec push cltd mov popf dec jle (bad) pop (bad) cld fstpl or fwait les xor xchg repnz gs push jge int3 jns push lret cltd jae push movb in mov push xlat add jne xchg (bad) pop inc mov pop mov mov pusha dec mov cmp adc xor adc mov jle adc mov or (bad) aam and aas out mov icebp addr16 loopne nop sarb mov lods cli jno stos mov push mov enter and inc cld into icebp mov lahf scas and xchg addr16 lea mov mov clc xor hlt mov in faddp and and in cltd cmp mov (bad) mov shlb out ss test insb sti fsubl push loop mov push loope stc mov call jo inc int3 mov std lods or lea xchg ret jecxz and das sti mov fwait mov (bad) les mull mov pusha icebp imul and pop cwtl cmc dec jle movsl sub addl mov pop pushl mov icebp mov mov xchg daa scas lock cltd mov or popf pop mov mov imul inc lret jge mov roll popa mov mov loop xchg stos std push add jp and sub js and mov dec out mov inc sbb mov mov pop pop int3 lea call xchg xchg iret mov bound cmp dec pop sub loope adc mov rcrl test test inc adc pop icebp mov jo mov xchg mov imul push mov insb js and pop xor adc stos add lods lock add xchg mov xchg mov movsb outsb sbb fcoml test stos mov in mov insb loope iret into out fs push (bad) jno lahf mov cmpsb shrl out mov fdivl xchg or test pop mov sub mov insl rcll lret pop push lods dec cltd lea rcrb cltd cmc pusha out fnstcw rolb sarb lock mov cmpsb jbe pushf push mov xorl mov in and (bad) lret sbb sar out dec punpckhbw test addl repnz imul fmull popf push cmpsl push pop shrb and shrb insl inc pop dec jno push test pusha test (bad) mov lret stc mov jne jmp mov pop push iret cmp in sub sub (bad) scas std iret xor aam cmp mov cld mov les mov or imul clc movsl dec popa pop sbb enter mov aas loope cmpsb scas insl inc pusha and xchg orl and jge xor sar sbb jne scas sbb and stos stc push mov mov loopne les add cmpsb test bound bndstx adc sbb movsb jp bound xlat mov jb es pop jno sarb mov or daa and out stos pop lahf repz inc movsb out les and pop pop lea cmpsl (bad) ficom push insl inc xor jae inc xchg or movsb ljmp enter jne add pop outsb pop aad sbb data16 fs dec add bound and stos adc mov daa andl icebp (bad) in cmp pop adc add sbb adc loop jae shll pop push xor fs (bad) (bad) pop inc sub push xchg xor pop inc rcrl mov xchg mov jae push mov mov gs mov repnz cmp mov cs std pop push push stos imul jmp mov push cmp or push mov adcl jecxz dec mov pop cltd xor pusha test or popf out mov dec or xchg insb lock lods cmpl fst jle (bad) clc mov mov mov (bad) lcall fidiv mov jnp in loop in mov stos lods or jns xchg aam sub add hlt push lock cmc sub xor push sbb fsubrl xchg push andl fildll pop insl sub jp add or push hlt imul mov pop xor aaa test adc mov call ds cltd int jae push stc jno lret adc in aaa and arpl pop sahf inc test xchg inc test inc ss popa bound lcall inc add adc leave pop movsb test cmc mov mov push shlb jge lahf aad icebp cmpsl dec in stc imul lock scas test imul (bad) fnstenv jnp mov lcall mov fisttp push adc mov out pop popa mov (bad) add sub mov mull scas (bad) adc stos insl pop or mov cmp pop imull or inc bound and call gs mov loopne imul lock dec arpl dec and psubsb mov cmpsb xorb cld and lock int mov mov mov cmp xorl pop jl pop je ss cmp cli jns es rcrl mov adc dec fidivr andl loop jo xor ret test shlb push int mov (bad) xchg cmp mov cmp fisttp mov movsl or popa das mov aam xchg fs mov imul lods adc sbb dec cld mov adc mov scas xchg mov push inc mov je xor push and (bad) std and ja mov inc out popa mov dec mov mov mov jl adc dec xor test mov pop mov (bad) jmp test mov fldenv cmp mov pop add push movsl jne pop lods imul out add fdivl insb rorl ljmp loop les cmpsb fs cs push aad cltd fwait je push mov xchg test pushf cmpsl jo xchg cltd lds adc or aaa mov push mov fsubrs dec adc out (bad) lret push mov mov orl test gs mov shrl adc popf pop mov or shr aas mov mov or sti mov stos daa popa call mov out cltd push into jno pop push jb pop pop mov movsl mov into mov sub inc mov pop sub sbb adc add dec leave mov gs dec repnz andb cltd popa jg mov repz jb out push cwtl pop imul sbb cmp mov out lahf lock scas xchg pop sub mov adc dec js popf jl mov out cmp and test sbb andl add and decb cmpsb hlt lret push xchg and popa mov std jecxz mov xor mov fldl xor xchg push aam mov xor xchg jmp cmp shlb adc and push inc popf sub cmpsb insl xchg mov std inc xchg addr16 pushf cmpl cmpsl daa adc outsb add pop or mov bnd test inc xchg and mov add std cmp sub push mov mov cmp xchg push and xor add icebp fisttp push mov mov stos into andl cltd pop (bad) mov add adc push sbb fistpll mov dec movsl outsb mov sub mov mov inc adc push cmp mov in aaa inc es sub adc mov xlat cmpsl mov cmpsb sub inc mov out sub mov jb jp cld aas jmp jne popf cli cmp pop jb ficom xlat jns int3 test or test out xor or xor repnz mov cmp xor push movsl lcall gs idivb adc mov (bad) mov ficoml pop aam in mov mov inc xchg inc jo cmp sbb xor gs adc dec pop mov pop fdivrl in stc shll push add hlt and int jb push popl loope jnp imul fld fsubrs iret aas sub cmc mov mov sbb xor repnz jle mov adc inc adc sub (bad) pop jmp ja pop push mov add mov xchg mov js loop mov lahf mov inc ret mov sbb cmp adc xchg jge mov add cltd and cmc xchg les aaa adc ss lods in cmp repz cmpsb and in cltd rcl stos std mov orl pop test bound jmp orb les pop je jo jo lock bound dec imul push pop and insb xchg cmp jmp or lcall into add dec div arpl lds cltd push (bad) xorb cmp loope aam xor add cmp je push push pop arpl pusha bound and rorb mov pop xchg and hlt jge xchg xchg into lret in clc andl sub fnstenv xchg out iret setge out (bad) sbb xor pop in popa popf gs aas or inc add pop enter sub dec movsl bound div mov xchg and pop sbb scas pop int pusha jecxz in (bad) popa js add xchg cmpxchg xchg dec in add xor cwtl sub je cmpsl bound xchg aad dec orb jae add into jecxz dec bound movsl dec and pop lahf mov push sbb lahf shlb popa inc inc (bad) (bad) xchg cmpsb cmp inc imul addr16 pushf dec and out mov and xor aas dec xchg pop lcall lock popf inc pop rolb insb pop pop inc xor addr16 sub stc insb hlt insl cmp rcpps leave (bad) mov jbe jno xor sub ljmp insl test mov dec jmp popf nop in (bad) popf cmpsb cmpsl enter add ljmp push and mov cmpsl pop bound aam inc push pop test mov adc movsl dec mov popf jg and scas lret aas cltd ret cmp xchg int stc scas repz xchg js jo inc test stos out pop jo push test mov sbb inc aad cmc and lea aas mov cmpsl hlt scas dec lcall rcl dec ret (bad) loop call xlat les addr16 lret into (bad) xlat (bad) out outsb mov rcll popf andl js mov ret pop daa imul push adc xlat popf mov je pop fldcw pop sarl jo fwait stos ja test dec adc fwait push mov xchg sahf push repnz add mov and mov test insb xor pop ds jno pop push push xchg fstps (bad) movsb popa sbb mov xchg ret or xchg sbb das stc or cmp fisubr repnz icebp mov hlt pop or gs adcl je xchg ljmpw lahf push push pop push cmpsl mov dec inc pop (bad) dec inc fcmovu add lds (bad) loopne stos insl and adc mov sbb sbb xchg lds loop add xchg inc int3 imul add mov dec mov mov mov int (bad) xor fistp ss and cmp cmp sar dec dec or jns pop mov inc mov test (bad) mov std loopne fnop imul scas mov pop adc aas and pop scas std insb es aam addr16 cli repz shrl cmp and daa stos cwtl jecxz mov stc in mov aad scas mov xlat test popf loop ret xlat sbb rcll push inc cli pop xor inc push repnz fs push sbb enter and lock xor rcll push mov loopne xor mov insb dec negl (bad) jbe movsl pop mov adc movsb pushf mov es sbb (bad) push pop mov pop xor jge fcomps dec mov (bad) jmp jne mov jl and adc fbld roll out push imul and (bad) mov mov dec push push jae pop mov repz stc push imul sub mov and inc aaa loopne dec or inc jg insl sahf jge repnz mov lods arpl in dec test outsb cmpsb add loop dec xor add js insb pop imul mov pop mov add lahf pusha push pop cs sbb loope and jbe push frstor mov les data16 cltd add jb fs test aaa adc xchg xchg cmpsl and sub xchg pop enter test loop imul mov hlt pop pop mull jb add lods scas cmpsb scas lods mov aaa in loope fistpll push mov xchg lret sub out or cmp xor roll lcall jbe sahf mov jo push mov sub mov xchg adc mov xchg lcall and bound pop dec shll pop mov test xchg icebp rolb xchg les stc scas jl in insb mov mov sub (bad) (bad) pop mov inc adc and les xchg jp sub pop shrb xchg inc in and (bad) rolb fdivs push mov mov mov int mov cltd jnp loope call arpl dec add pop add test andb pop (bad) lret adc cwtl scas mov mov sub loopne pop push test lea test adc loopne enter aaa sbb mov je xorl fsubp sbb mov gs inc xchg and dec (bad) divl adc jl xor adcl stos xor sbb stos add fstpl data16 sub or jmp dec dec and popa lret pop (bad) out sub xchg jo hlt pop lea cmpsl addr16 in cltd adc loopne pop popf in cmpsl lods lds and push arpl xchg dec out inc pop xor js add push insb aas pop dec daa sub daa or in in adc xchg cmp push push cmp add aad pop ljmp (bad) or int3 or bound pop sar mov push outsb lcall arpl pop mov sti dec add push push daa push test pop loopne mov in push pusha cmpsl (bad) es sbb not mov test push aad or adc mov fstps pop les pop mov xchg pop cmpsb xadd push pop fimull mov adc mov jp rorl pop and xchg pop lds inc push jmp inc inc mov mov pop jno imul or fdivrl adc xlat cltd repz cmp add mov popa es insb aad and inc popa pop cmp and push outsb xchg xchg lods rcr sub arpl out lidtl les xor or pop push nop and or or add scas mov and cmp sub and dec xor popf push pop pop cld rorl lea jl pushf pop in lret jno xchg cmp push lret (bad) sarl push repnz inc incb mov adc dec inc popa cli jne loop xchg cmp pop fdiv addr16 xchg mov push movsb mov out or sahf cltd push sbb fwait push push movsb dec jns fidivrl sbb xor insl mov insl lods scas mov rorl cmc jmp sti xchg jg push std cmpsl leave inc mov inc add push scas js mov inc mov jg dec inc add enter sti jae jge push mov push cld mov pop cmp out mov or dec mov lock movsb mov mov lock ret lret sub pop out ret dec lcall shlb pop js mov (bad) or mov ret push and movl fstpt xchg ret push sub int loopne nop push jmp cmpsb popf mov mov sub push mov ss jg mov jb mov ret or lds sbb dec cmp fildll js add xchg cltd mov cltd mov pop aam test ljmp sbbb (bad) or stos enter inc push lea cmp mov (bad) cmc lock cmp jne jmp frstor stos mov testl or mov jbe xlat jp cli pop push inc lds and push jge adc xor push adc ret jne ret mov cld sbb push and fs dec xor mov cmpsl rorl movsb jle mov fs pop xchg rcr add outsb lcall pusha sub mov dec xchg mov mov sbb sub (bad) lds dec out movsb cmp das fwait mov mov loop aas ficomp nop imul and bound aam mov cltd and xchg jo cwtl mov call and loope in imul bound and push scas (bad) push pop adc andl fmull insb sbb fsubrp shr gs es imul jne scas sbb or lods loope fcomp mov imul inc imul xchg data16 push cmc dec pop popa adc fsubrl push jb sub xor jmp lea jbe fwait mov fs cmpl cmp and enter xchg andl jns and mov arpl (bad) out scas mulb fldcw cmp or xor push and mov cmc in push and dec jbe cvtps2pd arpl js cmpsl mov orl rol dec and lcall pop push out leave push pop ljmp dec lods pop xchg pop imul stc jns and dec aad and or or pop mov out pusha clc test bound xchg mov mov insb in mov jp cmp lahf xor mov push insl mov dec push inc adc in and sub push cmp mull adc leave mov (bad) lret icebp cmpsl mov sarl adc xor xchg adc daa test xchg add pop dec and bts adc adc push or sub fdecstp pop mov lods mov or pop mov adc lds (bad) out cmp divb out test mov mov out jp sbbb sub pop es mov jmp ret mov mov das repz fwait or and inc xor mov (bad) (bad) mov or movsb aam repz and cmp lock xchg push fdivrl data16 lahf stos js or inc lock fdivl mov dec xlat sbb cmpsb sti add dec adc xchg xchg adc mov cld and mov adc dec (bad) mov pop and movsl sbbl (bad) xchg mov loopne bound enter sti jno mov mov cmp nop pusha mov int add lods pushf call loope mov cli repz mov dec sub das push mov xchg cmpsb ret mov and xorl movsl fcompl sub (bad) add js jecxz popf and scas jae loop or cmp test mov push out adc mov fildl (bad) cmpsb repnz (bad) lock andw xor pusha mov inc out scas scas mov std dec (bad) out aas sbb cmp xor push pop cmc and dec lea lret mov (bad) mulb loope mov mov or lods test dec push les fnstcw fcompl cld xor and (bad) aaa sarb hlt mov hlt pusha pop mov arpl jecxz lock push sub iret sub rcrb (bad) jns movsl popa inc mov cmpsl (bad) jns (bad) mov cltd jae in fdivs inc (bad) div mov pop aas sbb adc and aaa mov lock xchg push movsl mov loop cmp daa mov repnz add clc adc xchg movsb mov mov jae xchg inc or lahf and jge adc push sahf and sub mov fdivs repnz es xchg (bad) cmpsl mov aad sbb dec (bad) scas mov mull lods aad xchg loopne stc inc add jne xchg jge dec movsl mov push add cmp loope cmpsl (bad) mov sbb pop jp mov sub iret mov adc add stos les jns into enter lcall outsl push xchg push xchg ljmp sbb xor push push cltd insb ds notl mov das roll inc and mov rcrb scas mov adcl cmpb add ret mov lcall clc push cmpsb andnps cwtl mov sub pushf cmpsb dec out mov mov iret pop mulps daa mov mov stc push jns add jp imul adc out bound mov es mov pop ss sub movsl imul sar stc xlat mov data16 repz push popf mov test dec cmc add adc cmp xor popf pop xor mov and cmp fincstp pop negl and test mov leave cltd mov lret js xor aam ljmp cwtl mov mov adc hlt lea test pop add ret jno pop outsl and sbbl es stc inc inc pop in popa stc jp and dec jne int3 stos sbb lahf xchg xchg add mov call movsl jp adc fistl lret (bad) xor lcall psrlw insl loope in pop sub mov inc fsubl rorl icebp and popf rcrb mov data16 inc int pop imul loop aaa (bad) jnp cmp jno xchg sbb and data16 cwtl mov into pop xorl dec lods dec scas dec xor xchg inc add xor into push pop jecxz adc jae mov ret cmpsl sub mull jle je jnp inc in jmp insl adc fidivrl sub xor loopne out dec and add add pop sbb pop xchg stos and pop (bad) pop pop pop (bad) enter rol js test mov dec fs jnp fldcw sbb inc xlat or dec mov sarb pop sbb cltd jnp sub bound dec js mov push pop mov push xor test adc mov mov inc mov xor push sub mov mov add (bad) cmpsb frstor pop (bad) sub and dec jno jmp test push gs jne pop aaa mov out cmpsb loope rcrl push in sub and repz adc and ret push xor test iret sbb popa cmpsb int (bad) das (bad) mov adc (bad) mov scas mov bound cmp daa lods adcl enter adcl mov pop insl cmpsl unpckhps (bad) mov stos mov inc push into pop andl fdiv imul add adc xchg xchg sbb js fwait mov mov jle push sti jae mov pop cmp jns xchg mov pop mov fsubrp xchg dec xchg mov decl and sahf ret sbb mov jno int arpl insb shll or xor mov cmpsl into sub fcompl test es jns (bad) adc les mov outsb pop dec cmp jmp dec push and rol cmp inc or inc cmp dec out mov xor mov (bad) aam mul clc cltd push test arpl mov mov push lret push mov ja xor mov lret stc mov imul dec adc and rcll or fs movsb jp call cmp push rol pop or movsl dec test or push into mov out jmp or stos test bound sub lcall mov push mov nop or pop xchg aaa jmp loop sub icebp cmpsl popa mulb or rorb lahf mov pop popf fisttpll inc or xchg mov mov push test mov stc push ret xchg mov mov xchg shrl loopne int3 pusha das mov jg jo inc push lea mov movsb lret cmpb jb push jmp cmc push (bad) add ret mov mov or daa rcll pop rorb ljmp pop mov ljmp cltd adcb hlt arpl mov (bad) mov fstpt mov leave push mov or inc or lock sbb movsl mov sub cwtl mov pop loope je cmpsb xor pop cltd stc push push dec mov cmp or imul rclb push idivb imul or jo add xchg (bad) mov xchg dec push jge push out test js jp jl stos fwait push imul es ja mov das sub (bad) sarb mov dec sub or push hlt dec push xchg repnz stc ja scas xchg mov mov int3 mov and push dec or push push or hlt sbb ret cmp mov or outsb imul cmpsl insl pop (bad) adc inc xor repz add add rcrl inc (bad) sub xor call les std movsl outsb es (bad) iret fistp arpl fidiv andl push add mov sub das push mov enter (bad) mov xor lret repz insb movsl movsb sbb leave inc push in cltd push jl insl mov incl pop imul mov mov and add ret pop sbb movsl out add imul pop push mov sbb jb add mov pop cmp sub in (bad) int mov mov enter (bad) loopne lret cmpsl mov es sbb mov out mov mov cmp dec mov jg cltd ds addr16 cmc bound push push pop (bad) dec jbe lock add iret mov and sbbl or xor daa fs hlt cld out mov rorb xchg movsb stos call xchg jl lods insb cmp pop repnz cltd adc les or sbb and es ss mov mov or mov lock stos mov or mov iret popf mov loope dec pushf xchg pop mov test push js jno fsubrs pop inc mov sbb push push xor pop mov inc mulb inc je mov (bad) adc adc push cmp jp cmpsl mov das pop jecxz lods inc data16 ret jmp push mov aas mov sbb andl xchg cmpsl lds or lds mov cmp add call and fwait cmp test les pop cmpsl divl pop pushl pop aam adc outsl mov inc adc sub in imul cltd scas mov mov mov popf pop lret fstpl push stc jno mov xlat lea mov mov jbe and out add insb loope inc dec jns jle in mov lret push mov push mov dec push xchg cltd insl mov and pop lret mov shll cs jge mov fwait movsl mov je cmp popf mov cmp das and out imul push jno cmpsb and mov jmp cli add mov andb push jecxz pusha adc loopne lock xchg js pop xor out add imul test outsl popa mov mov shlb pusha daa daa (bad) aaa clc das mulb pop mov sbb clc mov lahf mov jo imul xchg rorl sub das xor orl sub (bad) jecxz mov inc inc and jecxz mov std ljmp rorl daa fdivrl lods jne adc push pushf repnz and or cmpsl jo lock pop xor xor add loope pop and movsl outsb inc adc or mov xor dec aad inc xlat mov pop pop mov dec addr16 lods sbbl cmp jge add fidivl ja sahf xchg push enter xchg gs inc popf mov ficomp cld loope mov mov mov mov mov test cmp dec popa jmp bound mov lahf mov std sub movsl pop test cltd mov es in aad hlt lods cld cmpsb leave js inc mov push sbb fadd stc shll inc ja xchg movsl mov dec pushf mov and lods mov insl loope jp sbb fimul or stc fs js jle repz (bad) aaa lds mov xchg les adc ret inc ja push pop jne mov xor loopne sbb mov fnstsw xor mov xchg adc enter jl pop mov cmp inc or mov insb xchg mov xchg stos das sbb bound mov lret mov mov cmp mov testb in mov xchg pop stos jns mov push jl (bad) pop (bad) jmp jl loope scas adc jb ljmp jmp std xchg or mov es and (bad) int3 ret mov sub movsl loop rcrl inc or push xor and repnz sbb or call loope int xchg and mulb mov fnstcw jno dec hlt icebp stos mov pop mov insl das lods xchg dec cmp xchg loopne imul mov movsl roll pandn jae mov rorl mov mov push mov lret and inc clc fidivl movsl in lahf dec push imul cmp fs cwtl sub aad or pusha ret mov xor mov arpl imul mov push jmp jl and jl das jb mov cmp loop pop jbe mov rclb es out xchg push enter mov out mov sti sub cmc push mov lret gs out mov mov cltd or sub mov add into cmp jns das dec xlat stos mov and cmp inc adc add dec out sub mov pop sahf mov stos daa push in movsb sub mov outsl (bad) es pop cltd mov mov cmpsb test lods insl ss xchg mov mov sub int add movsb lcall mov ret or xchg sbb in and xchg add stos mov or cli mov cmp sub shll mov popf jae rolb fwait mov xchg movl movsl imul (bad) mov repnz pop mov and inc fild stc pusha jmp aam movsl push mov ret add movsl and or xchg aaa aad cmp imul ds jns mov aam movsl sbb out dec (bad) fldz outsl (bad) pop je (bad) leave or movsb mov cmp and imul xchg mov add sbb and mov out lcall dec out xor mov adc mov dec jp movsl int std repnz addr16 into inc cmp mov or stos test dec lea (bad) mov js sub push test add test mov cmpsl stos fdivrs test mov nop xor push mov rorl pop sbb cwtl add mov movsl xchg jno push popf mov dec mov push add mov pop aam mov test sub or mov mov iret popf lret movsl divl sbb (bad) mov (bad) mov mov pop cmc insb cli mov jmp lock mov sub adc subl (bad) out or movsl pop jle xlat fwait movsb lea ret out mov mov sub mov shlb mov mov cltd (bad) push and lods test inc cmp mov mov jo push test jge xor (bad) in mov mov adc mov jp movsl mov mov mov mov lea inc movsb outsl jo xlat push mov sub mov mov mov cmpsb jmp mov (bad) test mov adc mov mov dec xor movsb mov xor sub jg movsb push xlat lods mov mov mov inc or movsl push test pusha mov jle bound (bad) aas mov dec imul hlt jae in pop icebp cmp sub in movsl sub jmp les jb out addr16 mov inc or push test cmpsb (bad) or lret subl jbe mov call movsl mov pop sbb inc adc cmp push push mov testl mov loope leave bound cwtd jmp andb ljmp dec add aad idivb xor jecxz jmp cmpsl pop test xor pop lea sub shlb bound jne pop bnd xchg (bad) out imul movsl push pop xchg cmp adc and movsl das mulb test mov cwtl sub adc add movsb pcmpgtd add xchg jb pop sbb rclb pop not pop lods pop push pop jge sbb mov insl pop mov js ljmp dec xrelease adc bound jno jnp mov sarb imul xlat popa sbb adc shrb lods in pop xchg fsubrp (bad) and mov andl add js mov rorl and xchg mov pop push in jns xchg lahf mov movsl aam dec or stos lods sbb std xchg mov or inc cltd sbb dec addr16 lds xor push fnstenv shlb jne loope inc mov inc adc mov jge mov (bad) inc jno adc pop and or xchg mov fidivr jp nop or sahf xor xlat cmp jle mov test out jmp inc mov repz popf test jae (bad) mov movsl sub sub sbb std and mov dec add adc scas cld out (bad) (bad) mov pop call push dec les fsubs dec lahf xchg mov popf clc xor xor xor xor lock add je cmpsl shrb std pop push xchg xchg jb rorl gs movb xchg ret xchg or push mov outsb cmp mov jno mov bnd movsl jg pop movsb fldt push rcr loope lahf jo mov xor xchg pop pop xor int shll jg pop push iret inc inc mov or pop sti (bad) xchg cmpsl mov jno (bad) notb cmp fwait add xor addr16 ljmp movsl xchg mov shrb or cltd test or (bad) imul sub or sub add gs (bad) gs sub les mov inc ret aaa cmpsb or addr16 (bad) pop push cwtl popa cmc mov pusha jge or adc and dec popa pop aam mov test stos adc (bad) scas adc cmc mov movsl lods and scas cltd adc push mov leave fwait mov pop xchg xor inc adc sbb pop xor leave mov inc or and (bad) mov mov jge jns cmc push das and mulb scas or in loop mov push inc mov ljmp pop fsubrl rcrl mov int xchg sbb sub adc xor mov (bad) mov cltd ljmp aad or fs mov cwtl inc mov cmp mov mov push push lods dec or pop popa jns out push stos pop lret or mov sub into cmp push cmp jb sti mov cmp (bad) icebp out dec push rcrl imul jge xchg mov out in lcall mov aam push cltd (bad) repnz fisubrl mov imul scas mov dec push sarb sub xchg test jl cmpsl shl into mov mov out data16 sti push mov cmp xchg stos adc mov pop icebp mov jnp outsl sbb mov push scas mov lcall cmpsb arpl push add call jmp fdiv mov sbb addr16 sbb adc sub enter mov push gs sbb add gs mov out outsb lret jecxz jns nop and dec mov or rolb jecxz je sub push add fsts xchg test les push and sub cmpsb bnd cmp pop cld cmp inc adc enter fnstcw test test xchg mov sub es mov and mov (bad) cli movsl and xor inc fdivl sub std and mov mov inc out add push imul fidiv addl dec addl insl adc loope cli fwait dec xchg fisttpl in cmpsb aaa outsl or dec add mov (bad) pop mov or loope pusha sbb mov inc (bad) out jecxz call add movsl or cmpsl push jge lods imul fisubr out mov pusha imul lea movsb repz sbb andl mov scas mov loope loope sbbl aas gs ret loope pop jnp cmp daa mov out (bad) das xchg adc shrl ljmp sbb or jp rcll in mov nop mov and push and mov ss inc or out jns test test imul mov push add sbb ja mov outsl out cltd pop mov imul popf test xor movsb mov insl cmp adc cwtl fs (bad) cmpsb aaa ret mulb in add lcall inc pushf pop mov pusha pop cmpsl lds pop stos fsubrl mov mov movsl pop in xor dec cmp mov test mov lds xlat add je mov jmp or cmp or xor lahf test pop outsl rcrb pusha lock je test inc loopne bound add mov cmp cmp inc imul push cmp and fnstenv mov es pusha inc xchg dec sbb pop xor fisubl cmpsb pop adcl xchg lea cwtl (bad) sarl mov mov lret test inc cmovl call xchg add out les mov adc movsl in rorl ss lcall mov lea loop or (bad) mov mov rcrl cld xchg and sub orl es or jno (bad) lahf jmp cmp push jo add test sbb mov add sbb mov lods cmpsb or das and cmp sbbl mov test call mov divb mov fist jo xchg sti push jnp sbb cmpb sbb mov or mov add mov fcoml mov data16 aas mov dec sub sub add leave test mov mov cmpl imul imull popf xchg jnp dec (bad) push mov xor mov lret xchg mov insb js mov imul mov sbb (bad) mov jmp call xor adc fstp or test into mov xchg mov push jbe pop cltd mov lcall inc mov push push insb push sbb imul mov pop xchg (bad) fdivrl mov flds pop and lea dec add ret add jl dec sbb and test mov movsb shll cs add cld pop (bad) xor and lock add (bad) mov loopne test cmpsl push int3 sbb sbb sub and imul sbb cltd adc out retw sar cmpsb dec lcall inc mov push push clc xchg decb mov fwait mov popf call es movsl jns or test loope jae scas in inc cmp test and mov adc add mov lds cld (bad) push les push and mov sti sbb scas mov int aaa adc enter ret adcl and cltd insb jecxz push inc cwtl xchg and out test dec add add pop neg and test dec jmp imul pop cmpl (bad) add nop push shll pop repz nop inc cltd (bad) jne push inc or loop sbb fstl movsl lods mov call cmpsl popf pop cmc rcll and cmp shll jbe add je lret in sub movsl test pop int mov insl jns aad jl stc ljmp sahf mov fcoms (bad) fcmovb popf push pop insl xor movsb movsl fbld and and (bad) jecxz pop xchg pop mov inc xchg lcall push adc (bad) dec pop cmc out movsl pop push adc jg or mov lcall jmp in popa into flds mov test xchg mov and mov test insb mov dec add pop pop sbb or xor nop shll movsb mov pop loope dec xor in loopne jo or push movsb push mov cmpsb sub add inc adc mov sub call cltd lods rcll outsb lds clc movsl movsl pop dec cmpsl xchg and bound popa popf mov sub jno mov pop xchg imul fadds dec dec xchg fnop add or cmp leave dec sahf cmp es stos out popa mov inc fstpl mov dec push sub (bad) xchg or dec jecxz jne fnsave and aad xchg stos stos cmovae cmp and cmp repnz inc shr mov and (bad) movsb in xchg mov or xor mov fnstenv scas les sub mov xor sbb mov xor ret mov aas push std jne bound mov or cmpsb mov fsubs cmpsb movsb cmpsl jg hlt popa (bad) insb imul out mov aam push adc pop mov cmp repz mov imul je test out or js mull push cmp and les or je sti arpl pusha pop cmp test insb in (bad) cs adc jbe clc xor pop daa adc loope lds push xchg popa lcall pop (bad) bound pop xorb cltd pop movb pop inc cmpsb (bad) stos cmpsl lcallw movsl cmp xchg mov sbb in lock xor jmp popf test jns loope jns loope pop mov push xchg ds mov sub lock ds imul lret (bad) mov ret cltd sbb adc xchg mov pop aas lahf nop stc push jnp int inc outsb pop mov and insl ss xchg jb adc push mov aas jno ds popf aas lods add inc mov stos aad sub mov push add mov jle ds cltd and mov jp cmpsl jne bound outsb push xor sbb ret xor jmp mov out fwait cltd xor and sbb pushf mov push and xchg lcall (bad) jmp inc push call push and adc ljmp rcr jno mov pusha pop mov (bad) (bad) sbb xor cwtl (bad) rclb movsl jne movsb cld and push jmp add repnz sbb scas mov mov jne push cmp lock mov mov cmp pushf jb mov push leave xchg mov notl addr16 and js cmp sbb sub add xchg mov hlt lock mov mov movsl fnstcw add daa cwtl dec pushf les out inc pop test lods and (bad) xchg jno sbb push shr mov in fidivl sub sbb addr16 adc xor repz mov sbb xor scas mov gs jl shll or sbb repnz add loope das xor daa sub in in xorl movsl adc xchg mov xchg jl xchg and mov movsl xor addr16 or in mov aas addb ja cmpsl jns sbb cmp sbb mov rcr inc sbb mov dec or popf (bad) hlt sub aas mov or clc inc lea cmc xchg js out cltd jecxz sbb cmp mov inc outsl mov mov icebp jnp mov (bad) stos enter adc outsb in sub andl mov mov jbe es adc iret sbb mov out movsl pop dec stos out adc mov sub add pushf loope xchg lods (bad) cmp int sahf pop and lock inc pop mov neg mov push bound cmp daa (bad) movsb pushf bnd in xchg test or push push cmpsl mov cwtl add popf mov mov ljmp inc cld pop es push stos movsl sub xchg hlt andl fmul test xor add das jl stos lds unpcklps add mov aaa outsb fnstenv leave and std pop mov or cmpsb add stos xchg cmc push lock mov xorl loope add je enter insb jecxz xor sub mov stc pop stos out pop mov mov or repz inc sub or add push cmp mov push inc push mov cmpsb or mov arpl enter mov jne jl movsb into mov mov push adc pop ds mov pusha repnz xor loope sub popf test xor cltd lret lea es push enter dec loop iret adc sub pop xor enter adc pop jg fnstcw and incl jno push lret jo jns scas mov stc mov imul or cmp push and pop pop inc mov xchg call xchg push iret sub and xchg mov jp das push push dec xchg fwait andl rol mov les pop data16 mov and jnp cmpsl xchg dec movsl cmp mov pop idivb cli jl and inc mov cltd jo mov movsl inc mov mov jbe cmc das mov std (bad) aad fisttpll inc add pop popf xchg movsl fimull in sub imul fimul movsl and sti pushf add push sub push aad testl imul cmp gs out imul pop mov stc dec fsubs jbe or scas and lahf push in inc add inc fstl subl xor les es subl pop lods adc pop jb (bad) xchg into pop jae frstor jno clc pop popa pop fnstsw xor sti xchg sub push push xchg cmp pop mov lods xchg mov pop pop mov mov (bad) cmp lahf popa pop adc pop and xchg lret jns (bad) out popf mov test xchg (bad) cmpsl or xchg jno scas pop jmp loope adc and popa rclb incb mov arpl fistp sbb mov mov mov stos adc loop popa pop sbb ds jae jmp mov jb cld inc dec lret pop and jns and stos mov dec insl (bad) mov mov push mov cwtl push stos and bound mov xor cwtl movsl and and push xchg xor push loopne je push test pop fadd ljmp add cmp add mov into adc sub pop jne cmpsb and lods xchg dec xchg mov mov data16 ss inc daa movsl out mov jae cwtl sub es fwait sbb in xlat ja stc mov stos cmp push and dec out rorb (bad) cmp cmp (bad) enter xor lods mov pop push fs jbe movsl push push fbstp push push and inc daa stos andl incb cltd or mov dec mov sub decb jp test push adc bound inc cmp xor fldcw and mov insb cmp pop (bad) call scas jb push mov cmpsl inc call loop fsubrl mov mov ret and xchg sub stos sub mov cli push push adc aad xchg mov mov nop mov dec xor xorl push add jo adc push sti les dec and sub leave js rcll push fsubrl das adc inc mov pop add arpl push push rcll and xor imul sub jo cmpsb test mov dec enter pop aad fwait jns mov sub nop rcll or cmpsb retw fsubs fiadd xchg xchg push xor cmpsl or sub mov push dec int3 sub dec loop cmpsb icebp push cld cmpsl dec mov andl fmul push jns scas add outsb cmpsb pop pop pop and out mov sbb pop outsl inc lret xor pop fsubl and mov lock lcall test mov jo loope scas movsl and loop jo into aas cmpsb ja xchg mov shll or jecxz pop rcrl data16 divb mov xor shlb or xor cmp push push pusha sbb shr dec mov es sbb inc inc andl bound mov jge js cmp lods pop adc ret sub lods (bad) std sti (bad) (bad) xor cli dec jmp mov insl dec push bound xor mov sbb jle add stc or cmpl sbb sbb es fisttpl adc movsl je cltd sub jnp inc stc cmpsb sub or cwtl xchg cltd sub mov dec add enter lret and test into popa adc mov jns or mov roll add ss dec push pop movsb ss loope sub and jno and (bad) or dec data16 xlat inc (bad) (bad) imul (bad) hlt fsubl mov mov adc dec loop push ss bound mov or inc stos addr16 dec cld popa or or push insb (bad) cmp pop sub mov inc adc out addr16 popf jge mov loopne and roll icebp popa and imul (bad) lock inc cmp ljmp fwait dec ret sub mov cmp lret testb cmp inc aad scas or int leave mov xchg ret inc adc daa sti mov push imul es mov jae or xchg in or movsl popf mov xor out or adc stos or shll push push mov jp jae mov clc js lods loopne inc mov jecxz or inc xor xor xchg push sbb (bad) mov inc dec or inc push sbb jl (bad) mov sub xchg sbbb (bad) vpunpcklbw (bad) hlt and scas lock add fwait dec add in and mov pop nop (bad) pop jl arpl push lahf aaa jns cwtl inc sti jne cmc add pop (bad) mov jl mov xor cld fidivl sti and mov lods fwait int dec and sbb fidivr pop mov sbb mov sub and inc mov les jno or mov lock mov or push movsb test mov test adc (bad) icebp (bad) sub scas jno xor bound daa scas pop stc xor mov inc xor fnsave sub sarb dec sarb fsubrl push leave mov sahf test xchg js shll in es mov (bad) jbe gs jns ss adc mov dec subl mov dec lcall sub icebp push dec pop stc negl bound icebp pop sub test mov mov ret mov sub jo pop fistpll and addr16 in mov sub mov inc cs mov mov cmovae scas mov pop xor jns (bad) xchg in mov mov xor xor mov mov pop int3 loope mov test in stos jns das push shll mov sbb js jns add (bad) lret sub rcll jmp xchg sbb (bad) out imul adc mov mov fisubl (bad) hlt stos lods or daa mov sbb popf xor sub inc cmpsl cwtl xlat addr16 xor pop movsb out and and int3 inc popf pop test mov dec fistp mov and nop push add sub dec xchg or sahf bound frstor adc pop mov or xchg mov ret dec stos call clc aam adc imulb jns mov and enter add sub add outsb xchg sub inc mov or lret mov cmp push cmp insb mov movsl (bad) imul mov mov xchg jl aad (bad) mov cmp jne loope inc ja push xor pop int out mov xchg hlt sub loope xchg fidivl sahf mov sbb pusha pop incb jne adc adc xor jno mov push fwait mov add xchg lods sub add in popf aas sbb inc adc dec push add mov scas int xlat cmpb jo imul push movsb xor clc adc aam mov inc subl fimul not and xlat pop push pop jmp mov and pmullw in jle pop out (bad) (bad) lea mov pop mov dec outsl pop cmp sahf inc dec xchg fstpl dec jns mov leave or repnz test test mov aas add sbb adc cmp cmpsb dec mov roll jle lock mov jmp test (bad) pusha add shll mov es arpl arpl movsl jnp dec inc dec push add js add or mov push (bad) mov call imul popa jne mov mov cmpsw dec lock sti dec cmp daa jb push or and test add andl pop repz cmp sub jo and rol int dec cmp outsl mov push mov inc pop xchg dec mov (bad) (bad) lea daa xor mov test das imul into psubw cmp inc cmpsb std mov mov movsb inc movsl icebp lods dec and les hlt rclb sub aaa mov pusha push scas inc cmpsb lods stos inc lock and roll lods andl xchg popf xchg push cmp scas cli lea loope js inc push pushf xchg rcll jge mov sub pushf hlt movsl pop ss sub sub push inc xor fmul push jno js test insb lds pop sub int3 mov dec out scas lock and aaa icebp imul daa mov mov lds cmp or in and xchg stc sbb and lea ret xor sbb scas xchg test lret mov pusha cmp adc mov insl imul cld mov cmp test sub pop lahf ds outsb (bad) and adc adc cmp andb cltd xor es sahf inc scas je loopne mov or push aaa pop cwtl dec mov dec mov jnp push xor (bad) pop xchg loope das xor mov and mov jns jno xchg push (bad) aad fist scas lock jmp (bad) popl xor sarb xchg loopne (bad) int3 mov push pop pop int std mov mov icebp mov mov xchg (bad) dec push cli pop dec (bad) cmpsb sub lds mov leave add mov scas test leave aas mov push and xchg lds mov pop xlat push jne lahf add lock rcrl jmp (bad) push int loope daa inc popf and rcrl (bad) popf cmp pusha mov jo mov ja aaa push inc jne in adc sub xor pop (bad) push es mov aaa scas and sbb scas push mov push and mov adc imul dec movsl dec jecxz sti pop mov imulb enter xchg mov in and cmp jg fbld stos inc adc sub movsl pop cltd sarb sbb dec jnp gs insb xchg sub dec cltd or mov test mov xchg hlt mov stos fisttp movsl fistpl push out mov mov pop aam mov adc push pop pop stc mov fldt jnp dec mov inc mov dec or push mov mov fistl xor es push jmp add loop sbb push lock and cltd sub (bad) iret sarl movsl shll leave sahf pusha repz in dec xor test out sti into cmp lods jo les jbe xchg (bad) sub dec popa aad cld sarb or or pop pop mov pop out popa movsb push dec cltd insl push std divb push mov subb add test addr16 sub (bad) dec movsl inc sbb inc jbe dec and outsb cmp xchg into and dec fcomps cs shrl jae repnz stc out cmpsb es cmp cmp adc lock decl cmp push lods xchg and dec lock sahf inc fwait insb iret mov scas daa (bad) mov push imul mov jecxz sub sub and jmp sub xchg cmp test adc dec jns push pop movsb xchg lds in mov repz rorl fwait xchg inc ss jl and (bad) jecxz dec xchg loop dec daa dec inc out cmp dec addl aas xor inc enter mov shll mov add call mov sub jno aad or xchg test cmp (bad) fsubrs mov fdivr int3 aad jbe push sub jae subl test xchg inc cli mov dec scas adc pop add fstpt inc test jo fwait or adc and cltd ret xchg neg cli imul cmpl push mov daa xor out int3 imul mov pop cmp cwtl push ljmp into out inc push dec and int3 mov dec negw test cmpsb dec shll xchg stos movsl sbb fcmovb mov in lcall dec cltd push jge adc pushf push and imul jne pop mov es sub out fwait push cmpsb mov mov xchg fs pop push cld je test (bad) and jecxz leave (bad) mov mov (bad) cmp adc repz and mov fcmovne cwtl mov pop loopne shll mov push out mov mov addl mov xlat jno fistpll cmovo ss mov mov int3 ret sub (bad) neg jns xchg sbb xor add adcb aas in push loopne aad (bad) repz inc jns imul cmc hlt sti mov cmp or mov mov cld inc les push std jmp lea scas pop push add pop fwait mov out lret mov jbe sbb std in dec mov loop lods cmpsl add sbb mov ret sub mov add es mov (bad) mov dec add dec mov mov dec add jae ljmp push enter rorl and xchg lods out add mov ljmp (bad) jae jns cmp mov scas and (bad) mov clc jo out insl mov pop ds mov mov clc fsub jg pop or xchg test js addr16 xchg or mov jb roll push test ret test sbb push sbb mov and pusha adc mov jo mov in sbbl in mov cmpsl movsb test jb cmp imul push bound ficom mov xor lret mov xchg mov sub into mov adc or adcl add inc cwtl push sti mov or test gs ljmp xor or fsubs mov das pop jbe xchg jecxz fs ljmp adc sub xchg test enter xor mov adc clc outsl loopne les push sub sbb xor (bad) add push std iret inc push xchg leave jb and movsl out and aas add dec cmova shlb jle jmp dec or adc mov rorb cmpsl xor js lock cmp div mov inc adc nop or pop dec pushf movsb out sbb aad xor cwtl insl (bad) mov jmp sbb push and mov xchg cmp xchg movsl dec jnp sub (bad) pusha (bad) jae pop popf and popf sar push stc sbb mov mov nop lds mov mov add pop mov jb mov push test push pusha push and mov ret inc imul push daa aaa dec dec btr sbb cmp pop cs mov insb lods ds int mov vorps push in dec mov insl ljmp cli aaa jne or pusha jmp test jb jnp xchg fidivr and in mov add movsl stc popf xor aad lret daa push in mov pop repz or stos xchg or in and in mov jmp pop std cmp les lock in aam aad ja pop xchg bound mov sub outsl popf push es mov dec add shll leave xlat cmpl dec lret fmuls push push popf ss and std cmc into fldl (bad) xor loope jnp popf mov pushl cmpsb adcb inc out jbe sar cltd xchg fdivrp cmpsb (bad) in adc stc mov jp xor and test jne xchg mov repnz inc cs inc popf mov js test sahf dec mov icebp andl or add es xor mov shlb mov call dec inc adc mov add bound mov jge jno data16 xchg bound decb dec shlb jmp dec mov frstor bound push xor mov add cmp mov jae scas mov cltd add cmpsl cmpsb js dec fwait and mov movsl jb mov cmpsl xchg mov pop adc xchg sbb fcmove insb or rcll loopne cmp stos ja xchg or decb call loop mov test inc or or es inc push push dec mov mov mov pop adc cmpsb add fisub cmp push cmp sahf mov cmp push lret test xchg mov or jp push mov push push mov (bad) sbb mov daa adc xor and dec cmc dec mov xor xchg sbb imul ljmp movl xchg scas movsb xlat bound mov mov js pusha mov lahf mov or pop (bad) ret popf fsubrl mov push lea dec and sarl std stos pop popf rclb dec mov in mov inc icebp sub or js imul testl bt in cld std push mov js das sub mov inc mov mov xor lock sbb xchg mov insl mov rorb push clc add pop adc lret scas movsl push mov in mov and push mov mov test lock aad dec cmpsl lret enter cmpsl xchg pop arpl lea cmp mov lret cmp xchg xor lods bound adcb lret sti mov push bound cmp mov dec xchg jmp bound jbe fldenv movsl add pop test xchg fisttpll sti fmul andl sub inc add inc addr16 fild push pop inc push jns bound insl inc xor roll xchg in jns sbb mov inc loope out xchg xor sti in in pop (bad) mov (bad) mov loopne inc jo add sbb icebp xor stc xchg bound popf mov pop test arpl shll popa pop inc dec mov (bad) in adc cmp popa sbb pop jmp jo or (bad) cmpsb bound lock mov sub dec xacquire jnp dec inc int3 shll xchg xchg push fneni(8087 addr16 movsl add mov inc addr16 (bad) testl and lods ret movsl lea addr16 xchg add mov andl jmp lock cmp mov cmpsb sti mov stos pop jnp (bad) dec jge rcll cmc and add push add (bad) xor fldenv pusha cmpsb mov and mov mov sub aas adc adc pop xchg lret jns je lock test add mov dec mov and push stos (bad) stc and shrb lods lcall jns pop add cmp fisubl dec cld movsb xchg cltd dec add inc adcb mov test stos cmp pause adc shrb mov push cli mov xchg mov aad jae fwait cltd sbb and mov mov adc mov or das push out movsl jl shrl fadd or sbb xchg mov out daa and call lock push jns into jae inc movsl ss xchg subb test movsl mov dec sti and mov cmpsb inc (bad) mov jb pop in mov xchg sub ret mov nop mov repnz clc pop push lods iret lahf std mov sarw mov test jmp jecxz xchg arpl adc xchg mov lahf (bad) mov mov inc idivb xchg rolb sti daa pop lcall mov xorl mov fdivrl popa push scas test cltd cltd aad ret cmp dec jecxz sub mov aas pop flds mov lret sbb sub cmp mov (bad) and scas cmp loop imul test pop scas jns xchg sub arpl mov out je xchg shll add mov inc add es jno xchg testb and imul (bad) shll xor sbb cmp inc jge rorb jne xor lods (bad) cltd dec imul lahf inc stc out push sbb mov test mov outsb sti mov push mov pop shr sub jae cltd dec lahf jmp mov inc sbb mov xchg jnp ret les ja out and aad mulb dec fsubl (bad) loope mov dec jb scas shll cmpsl (bad) jnp pop jmp push fidiv pop sub mov lods xchg daa inc mov popa fwait mov mov lods mov mov cmc xchg stc sub sti and fisub rcr cmp mov (bad) movsb push sub repnz test fbld cmpsl movsl mov insb cmp and fidivl fidiv imul shrb mov adc out push stos mov add mov jno popf stos test mov xor int js (bad) push test dec dec negb jns pop in and pop sub dec and xor jg frstpm(287 mov (bad) mov push ret dec inc dec add adc cmp mov cwtl mov cmp dec sahf pop xor iret mov dec sbb lea gs push test test and xor or testb dec mov popa pop jecxz les imul lahf cmp aaa xchg fwait movsb ss push mov or adc mov jns arpl push dec addl out sbb popf xchg fldt cmp adc insl aam push sub jae lret and pop les (bad) push fstps mov fwait aad mov mov outsl add inc and lods mov dec add dec cltd sbb fisttp pop xor push cmp adc push add outsl lea and pop (bad) pop jb aaa add popf cli (bad) cmp push jp cmpsb stos loopne pop xor mov inc jbe insl addb fcoms mov js movsl sbb mov daa notb cltd mov push and adcb dec adc (bad) data16 mov sub jns sub or lods stc dec xchg stos in stos sub pop mov mov pop dec mov pop lock (bad) pusha ficomp add mov movsl mov dec (bad) stc and xchg mov sbb mov imulb adc lds mov pop and sub lods adc scas sbb in push test push mov pop out popa jns inc fdivrl mov push and push and and jp rorl ds clc lds mov xchg bound out sub or dec inc jl add cs inc fisub cmp jbe int mov and mov leave mov jecxz adc xor test sub adc mov lds je mov add scas enter jae rclb jno bound cmpsl jg or cmpl andb push movsl mov or popf jle daa lods cmpsl sbb js movsb scas insb loopne cmp and fisub pop pop pop mov jns adc cmpsl sbb pop or xor std adc pop inc jno xchg pop add stos pop test (bad) cmp gs add shr subl fidivrl inc out sbb inc sahf in xor data16 dec pop sbb loope aam or dec ja adc sbb fnstcw and cmpsb cmpsl icebp mov push ror and jp add cmpsl addl jnp xchg push cli pop fsts adc cmp xchg and cmp (bad) stos xor ja mov push mov enter pop inc and cmp sub pop pop add xor lds sub jnp sbb pop iret arpl or fwait jp and cmp lock inc movsl imul mov sub xchg test mov dec popa out mov in int3 test mov push ret push je (bad) call mov (bad) stos mov mov and sti es sub aad rcll sub mov inc jns or and cltd cmpsl jb lods addl movsl cld add mov sub imul and jg rorb xchg adc lret jle mov shrl insb mov pop mov jle add lahf out xorb xchg mov dec pop sahf (bad) stos cwtl stos adc mov sub jo push mov bound lods jne mov cld addr16 inc lea cltd jb stos cmpsb pushf (bad) mov call dec fsubl mov jg punpckhwd sub push jns insl loopne lea je sub pop rorl adc jns out cli out sub adc and dec pop sbb jmp testb adc je pop lds aaa and test adc pop jo (bad) mov aaa mov push cli add adc sbb ret mov push addr16 push arpl repnz mov out icebp fs mov sbb lock mov mov adc ds pop mov mov popf clc notb nop js mov push (bad) jmp sti cmpsb fmulp daa mov sbb pushf mov cmp imul dec subb cmp sub sarl roll mov movsl imul jns repz sub or mov dec outsb loop popf mov lahf iret mov dec add (bad) nop dec test xor cwtl lods sbb in in add or jecxz (bad) hlt sbb xchg sbb push cmpsb in dec aam xor sbb test addr16 push xchg in cmp xor mov and jb lret (bad) ljmp dec fbstp decb mov xchg data16 dec cmp hlt bound or leave test xchg add cmp pop mov popf jae and data16 (bad) pusha out jecxz (bad) inc in addr16 add mov cmp mov ss xor mov add ds lret xchg or (bad) sahf inc imul sub stos (bad) shll push dec inc jl xor jge xchg shll mov pop jb cmc subl fwait dec dec add adcl das cmp mov jnp test mov sarb outsl mov int popa xor xchg ss lret movsl dec mov lds clc and scas sbb sbb pusha movsb lea lcall mov pop rcrb movsl rcrl leave call sarl mov sahf mov (bad) es hlt lods push mov popf loop sub push mov mov adcl xchg jle inc mov sub mov push and lcall in inc cmpsl mov sub adc in xchg mov (bad) mov fisttp inc dec mov lret mov test out sarb or mull lods mov cmp mov (bad) pop flds mov xchg pusha mov cld (bad) in dec test and mov adc call pop mov jno cmpsl xchg mov outsb and adc sub mov js xor push push out scas sbb scas jbe in imul mov jl dec mov mov mov or movsl mov and repnz rcrl (bad) cmovp cmc pop (bad) mov mov ss pop xchg in push sub cltd cmp adc mov mov (bad) and sub out dec scas je movsb and xchg adc fdivl xchg stos mov imul popa les cltd cmp push add fisubl pop mov aas mov std int push pop jae fs cli mov ret test push into pop jmp cltd cli pop xor xor and cmp das into jcxz ja in fs add ret xchg unpcklps or inc mov xor cmpsl test add sahf popf loopne mov mov push or mov mov mov cmp mov (bad) out adc cmp jo mov xor aad adc xor (bad) mov es arpl mov call push xchg jmp push xor sbb pop out sbb cltd lahf or imul push lret xor inc push add xor mov rcr je sub sbb das mov push mov imulb (bad) cld and or fisubr test dec (bad) in daa sbb sub dec push and jne repnz jp (bad) mov mov adc faddl or and or ficom cmp mov imul jmp and repnz (bad) pop push cld dec out movsl jns pop mov and sub jl movsl dec out jae jmp and xchg call call cmp fisttp inc inc push scas scas andl sub xchg test dec push mov nop mov ss mov sub mov pop lcall mov xor jne jecxz ffreep cltd cwtl mov loopne out cmp fwait sbb mov lret cmp xchg ret mov sahf dec rorb sub out xchg mov or in push cmpsl mov xor je int3 test js rol jns sub inc icebp jno pop jne cmp call sub jecxz mov push xchg fistpl fnstsw repnz cwtl mov test mov sbb jns les repz cmpsl mov or ss adc popa in inc (bad) lea jmp in lea push mov mov jns cli mov insl xchg mov xor test add mov out and dec adc cltd outsb xor movsl adcl dec push pop cld mov je xchg ficoml jne pop xchg movsl jl fwait aaa sbb mov cltd dec or or loope loope sub jle out push movsl mov cmpsl mov test lods push loopne rcrl (bad) andl inc jmp pop jns pop mov jge rorl or mov xor and imul inc mov arpl jecxz jo add cmp cmp cmp mov rcr mov dec push je sub mov (bad) sub inc adc mov adc xor fwait mov pop fbstp imulb sbbl leave inc mov mov fbld es sarb xchg mov push call inc cmpsb (bad) pop pop bound repnz push pop rclb out mov cmpsb mov mov push pop xchg fnstsw cmp xor fildll mov bound pop pop or pop lahf and sub movsl sbb fnstenv data16 push test cli test pusha xchg arpl stos push push mov data16 dec imulb add and mov adc adc (bad) aad (bad) add call sbb (bad) popf sbb pop adc mull mov bound and dec cs mov ljmp movsl popa cmpl pop cmp dec xchg pop les xchg mov mov test stos sahf push rolb popf and add test adc sbb into daa sub mov adc repnz cmpsl and and outsb loope pop xchg lods in mov shlb shrb xchg out pop jnp and pop xor fidiv bound (bad) leave pop lret add sbb lds dec pop (bad) and mov xor and xchg out lods sbb pop or mov dec repz mov arpl ja fxch subb (bad) arpl inc loopne nop imul nop dec mov cmp cmpsb lds cmpsl inc dec xchg xor data16 fwait pop test loope daa or mov sub (bad) and ds jns cmp xchg push cmp sub arpl xchg jns test repnz push popa fwait cs pop fwait sahf push divl es or xchg inc aaa and subl adc push mov icebp sub push jns jb popa pop sub addr16 jnp dec dec xchg xor notb cmp mov xchg push sahf dec mov jno xchg pop push pusha jns pop (bad) dec js ljmp mov out and jcxz cmpsl js sub das pop add lret push popa mov inc popaw adc bound or pushf mov (bad) mov movsl push xchg sbb in or fisubl xchg pop (bad) inc psraw sbb mov aaa push cmp cmp repz or add inc inc sub nop cmpsb xchg push rep mov push div mov aam dec mov rclb inc add lds jb fadd (bad) rclb js fcoml sub xchg mov inc ss lock imul lods mov mov outsb fs sub loope imul mov xor mov icebp or push cmpsl lret add jg mov pusha cmp test mov pop adc inc idiv lret out test fsub mov pop ja sbb or out loopne dec into mov lea cmp or sbb cmp add pusha sub xchg mov aam sarb add movsw test cmp pop cmp shlb (bad) (bad) rorl push nop sarl out xor push dec inc or jl (bad) jp add int aaa insb lcall push fild mov test call stos lcall icebp ljmp insl and dec gs or popf shl je leave cmpsb scas arpl jne push jo adc movsb rorb sbbl jle imul leave dec jns add cli and data16 call pop mov imul mov and in ffree test arpl movsb mov pop bound xor sbb xchg adc inc aaa and (bad) in leave fdivrl mov jecxz mov fadds xchg fsubl inc jb xchg sbb push cmpsb mov mov fiaddl jne decb inc out jecxz jo xchg cmp add ret push ret lret pop pop mov sahf mov sbb insl xchg mov mov (bad) xchg inc push and cmp fwait test dec fwait and insb mov and add loope mov mov lcall pop rol mov into xchg push fldl or outsb call into mov mov idiv les movsl sbb cmp push stc imul sub inc xor sbb jne pop mov xor mov test (bad) lock std jno mov imul pop sti sar mov cmp test jbe out movsb movsb loop fidivrl mov mov (bad) jecxz push decb pop jecxz les xchg add or (bad) and dec ret mov stos dec or iret push adc dec and dec inc and mov ret and nop xor mov shrl mov stc pop lret int aam or push push push (bad) mov mov dec in push cmp xchg stc ret rclb cmpsl push mov js fcomip test aas outsl cltd loope cmp xchg loopne mov sub lea mov cmpsl jbe cmc push push jge ret cwtl lods jl decl ss sub and fwait daa push push es imul mov lahf cld or adc mov (bad) pop test cltd jmp insl xor sbb lods movsb mov add add fcompl jb aaa aas mov (bad) popf sbb in sbb and add inc dec (bad) andb gs jmp cmp les fsubs add andl insl push lods stos mov cld outsb ljmp sub test xor mov loopne mov pop adc cwtl call scas shl xchg add sub cld gs add movsb xchg jp iret sub fisubrl sti adc outsl mov add ljmp and mov int3 (bad) mov pop fidivr xlat nop test dec leave mov rorb dec loop push add mov xor dec and repnz stos movsl mov xor jae fnstenv mov push mov cmp jno xchg mov fisubl lcall push mov popf dec das stos rcrl gs popf inc sti mov xor sbb pop test push dec mov adc dec aad mov enter (bad) les pop outsb cmp or fnstsw pop and dec movsb lock pusha imul js xor test add popl je xchg mov inc gs mov mov jecxz into bound mov sub pop mov and imul xor shrl les insl inc push fimull xor pusha mov hlt (bad) adc fwait in sub (bad) push lock sbb inc jecxz ljmp and mov adc xor repnz pop mov ret dec ljmp out (bad) es test leave xchg adc sub icebp in add je imul dec into add test inc xchg (bad) sub xchg pop enter cltd das cmpsl add inc inc xchg aaa nop sbb gs shlb cmp jne xchg cmpsb jmp inc imul mov popf mov mov cld mov lahf gs js cwtl mov xchg mulb mov sbb fildl (bad) mov pop jae bound jno push add lods repnz mov test aaa shrb imul push stc ret cltd sbb test mov mov andl cltd dec add cmp mov sub pop outsb mov cmp sbb xchg (bad) dec scas movsl cwtl icebp pop test out adc mov push adc insl mov mov xchg pop lahf sub mov jmp inc mov push les pop lret pop lret mov (bad) pusha dec cmp adc add add sar and mov dec adc pop sahf (bad) shrb shrl int idivb push mov mov stos rcrb xchg mov cmp adc jle ljmp pop into les lds xchg inc sti lcall pop cmpsb pop mov nop (bad) mov xchg es or pop mov pop push mov sti shr std inc mulb testl rcrb lret cmpsl (bad) cmpsb bound lcall adcl hlt add push shrb adc inc jl scas negb int rcl in mov js or cwtl push ds add add jmp les jnp sub mov xchg imul leave cwtl insb mov inc movsl mov outsb dec lcall add push mov inc jmp fnstsw sarb cmp outsl dec andl dec iret cltd cmp gs pop fwait data16 xchg test sbbl rorb aam or dec packuswb int sarb loopne adc fild movsl pop fistpll sbb xor in mov xchg pop push ret mov cltd mov cli adc and out xchg rcrb scas es insl jmp sub dec icebp cmp dec (bad) scas vpsubw inc adc add or pop fadd xor mov xor dec jmp negl adc push fbstp mov xchg int mov mov xlat mov sbb (bad) jb jg adc cltd out lea mov repnz in push add xor push movsl pop jle leave aad add push inc inc mov cmpsb adc xchg cmpsl jne fs jae mov adc outsl add leave xor push xchg movb adc js es adc cmp mov pusha fwait jo imul sub sbb jns in gs (bad) jg test inc shll cmp adc inc sahf (bad) out sub sub or push cmpsb test and cmpsb sbb sarl call imul loop fldenv cmp xchg jbe (bad) mov jns sbb inc pop jne push das out adc (bad) add jecxz fs ljmp ret mov and cmpsb or mov sbb sbb adc int pop push call lods das orb lahf push add data16 pop out cmp pop xor mov push mov mov mov gs pushl dec or cmp lret sub inc imulb icebp imul jbe mov push cltd mov hlt in mov add jmp or insl push fdivl sub lock jae sbb xchg popa pop arpl jp cmpsl cpuid pop pop push and jl xchg sbb loop lea and pop fwait lds bound sbb sbb add test mov or or and dec mov xor push pusha xchg lret (bad) (bad) in mov scas adc xchg mov inc pop out push cmp movsb mov xor mov sub cwtl lods loop jns push cmpb lahf bound sub pop dec inc jbe xor push jmp xchg adc pop dec repz sbb (bad) imul push in negl mov (bad) push test cmpsl sbb and add and cmpsb xchg ljmp xchg pop mov outsl pop or mov sub paddsw inc (bad) out fldcw xchg (bad) dec dec notb (bad) lock mov (bad) aaa movsl push bound call int3 jno (bad) mov (bad) leave adc test cmpsb fs ljmp inc and daa and in and xor jl add (bad) and jle jae fs insl out or jmp mov pop bound into adc adc xchg xchg pop jp xchg mov inc addr16 fnstcw mov aam lahf add jge aas out inc cs dec imull jmp addr16 daa cld add adc push mov cli dec bound xchg pop lea or fwait jmp jp (bad) mov pop insl xchg sbb add mov cld jo gs pop lcall add adc cmp gs pop mov jae pop lds ljmp orl icebp fwait popf cmpl lods aad jo (bad) mov movsl aam pop es jae xlat xor push andl pop mov push bound and imul lret stos jb add mov daa paddb xor pop mov lret movsb mov xor or in inc dec sbb in lahf cltd cmpsl adc movzwl mov int mov ljmp pop push addr16 std pop fnstsw (bad) xor cmp pop in and push cmpsl and mov pusha movsl xor mov push pop icebp add bound icebp ja ljmp jl and xor xchg and int js and arpl repnz loope dec leave aas add aas (bad) aam adc and stos add lock jbe (bad) mov cwtd mov cmp mov fstps rclb mov je lret test frstor popa sbb mov sbb jae addb xor cmp sbb pop adc movsl mov sahf xchg mov mov pop js hlt pop cli mov sub mov mov push test push popf jae inc in push pusha lcall mov rorb (bad) mov outsb mov ficompl mov add mov mov (bad) xchg pop outsb mov pop add xchg les sub adc (bad) stos sub add and cltd in jmp pop incb mov popa xchg mov cmpsb scas lods dec jns mov movsl sbb cmp push pop aaa outsl mov mov repz and iret adc (bad) lods lds movsl jne lret inc jg mov test cmpsb mov lods cli rcr push and pop xor cmp or rorl lea lock inc or jg fist cld movsl lea push cmpsb rcrb insl adc adc cmp and int js shll and mov mov (bad) pop push sbb stos push jmp adc and lds lcall mov xchg das and negl mov jb ret fnstenv outsl (bad) mov xchg js neg jmp jl push add dec or outsl lods mov pop xchg hlt insb dec or adc and and push test push lahf pop (bad) xchg scas popf cmpsl pop cld je sub mov insl ror xor jge mov add adc pop mov xor out mov dec pop and nop or and (bad) jno fwait mov mov call or aas xchg pushf jg push inc sub push outsb mov (bad) jne cwtl in pop pusha test sbb mov sahf xchg mov adc xchg lods and cmp mov pusha repnz scas mov xchg xlat inc sub and (bad) mov mov add leave out mov inc adc mov sub xchg cmc bound mov pop jle pop call xchg aas pop lcall xchg mov mov mov insb inc in dec (bad) (bad) push int cmp mov sbb cltd and call cmpl add dec pop and mov iret loope jmp paddd push mov mov mov outsl out cltd imulb out inc test and shll sahf cmp push cmp sub pop push add ljmp iret imul jmp pop sahf mov ss sarl inc pop repz mov icebp in mov xchg adc sub push fidivl jbe test rcll mov movsb out mov push hlt frstors add xor cld push iret leave pop mov add push lret aam xchg sarb cmc xor and mov cmp test shll jns mov adc jno mov scas mov mov inc adc and test xor fs mov adc and cmpsb dec testl inc negl popf mov (bad) push xchg dec cmp mov imul push loop outsb push xchg dec or mov mov dec les mov jo xchg mov cmpsl mov cmpsb sti ljmp xchg (bad) ds mov cltd comiss or mov (bad) push add icebp push inc and cltd xlat xchg iret (bad) nop jns clc sbb lds xor cmp adc xchg xchg test and or scas xor movsl push int int3 jb mov xor xchg into push add inc jne mov and mov jno and xor inc and das arpl jg mov mov mov cmp cmpsl out arpl adc push cltd xchg lahf lret movsb mov pop push vmulps xchg or add jnp jmp add mov mov clc pop ret push aaa jns nop ret les mov popf xchg mov fucomip icebp arpl pop mov movsl xchg jb cltd mov mov xor mov in pop xor push mov inc in sub inc repz mov and mov jnp jb add aaa bound sbb adc cld mov (bad) inc xchg jbe fildl mov (bad) test xor popa pop adc ljmp (bad) sub pushf xchg mov arpl pop mov inc hlt mov cmp inc xlat jge orl mov mov in hlt lods shrb sbbb mov pop ss (bad) mov push (bad) fsubl or jle ficompl cmp mov mov movsl scas hlt shl jo jp fcom push pop push inc cmp sub pop xchg xlat dec nop mov mov test mov mov cmp addr16 int sbbl xchg fadd xchg xor hlt cmp test mov jbe out cmp cmp movsl mov sbb les shll cmp cwtl mov jb cltd jge mov dec mov out dec daa inc cli push push cmpsb adc inc pop sbb ret cmp popf mov mov adc mov out and jg fnstcw outsb loope movsl test mov jno cwtl push movsl jmp or sub lcall lds (bad) (bad) mov cwtl mov sub mov add inc jns flds push inc movsl mov jmp mov mov ss ficom sbbl mov jmp fwait add and mov fstp add hlt sub pop es fisttpll movsl mov mov scas movsl faddl jl inc popa das adc add repz adc push cltd dec (bad) mov cmp cmp sub movsb mov mov inc pushf or mov arpl test nop popf rolb mov add stos outsl in mov add in loope push cmpsl sbb (bad) stc mov (bad) cld xchg add push dec scas mov pop repz leave mov outsb out push imul jae xlat ror inc inc jge and mov push mov sub mov cld pop aam insl cmp (bad) out popa fcomps scas jbe jge je adc push repz sbb lds (bad) lock push push lods aam xor aaa daa mov bound dec cltd push fwait mov sbb or cmp mov call (bad) repnz lds pop xor addr16 loop mov clc (bad) mov daa out shrl or and and movsl xchg mov mov mov fs jno call lock mov repz mov test and js sbb mov and cli icebp sub inc adc or into stc pop sbb movsb int mov repnz lods xor outsb mov lret movsl sarl mov in push (bad) xchg mov push lret xor (bad) mov fstpl dec ret mov sub sub sub inc shll adc insb mov out imul enter (bad) and sub shrl ficom lods xchg (bad) sbb jns addr16 in lret movsl imul mov add xchg pop sbb insl mov fsubr mov mov in loope pop lods test xorl jo movsb jne shrb pop mov jecxz cmp xchg mov xor ret inc push add xor arpl push mov adc xor cld mov out loopne stos dec arpl adc or test in mov hlt test int3 pushf xorb mov mov outsl js daa loopne jmp lret add push mov (bad) cmpsl mov mov and push mov les mov mov mov jb mov fcomps mov movsb dec pop mov add cmp mov sub mov cmp xor (bad) test mov pop dec out mov stos push mov sub dec js test and mov nop mov dec into test jge movsb inc jo loope mov inc psrlq aas fs sub arpl inc inc repnz (bad) mov dec mov or mov dec xchg push ret mov outsl push std cmpsl lret aad mov imul nop add push push mov and je pop mov test movsl jge dec leave sbb (bad) add lahf mov sti sub cld push sbb mov movsl mov ja fildl arpl jae push test push in out sub dec lock push mov mov loop lds mov jns add cmc dec movsl shr adc mov outsb add mov jae fidivrl addr16 gs and shlb ret ret lods mov dec setl dec shlb fisubl cmpsb test es mov mov and mov cmpsl mov inc dec and add or mov out icebp daa loopne das cmpsb ds mov adc sarb cmpsl pusha es inc mov mov jo (bad) les mov and dec pop mov add push mov repz shrl nop mov lods cmpsb insb out daa mov jne in data16 cld pop and cltd les sbb adc fisttpl in ret sbb into (bad) mov mov fdivrl lock clc push xchg xchg mov sbb dec (bad) call adc scas mov add aad insl scas xchg cmpsb adc xlat jp add out js pop smsw arpl cwtl push xor push mov mov faddl sbb daa push clc xchg push add or lods cmpsb les imul pop xor mov cmpb mov mov push push mov inc sti push int movsl mov bound sub and fwait xchg mov insb pushf mov xorl xor and je mov addb jne in imul fimull or inc cmp mov test xor mov cmp push in cli inc mov xlat ja addr16 inc addr16 jo inc mov or and mov sbb mov add mov in cmp cwtl mov cli sbb (bad) pop push cmp mov xchg mov xorps in sub insl inc mov fs out xchg cmpsl (bad) jbe sub inc jo pop xchg cltd out xor insb and std jge push add out xchg outsb fs divb insl into push and sarl sub bound mov popa sub imul js inc cmp fiadd mov dec test sbb mov aas adc dec cli movsb aad cmp (bad) icebp xorl or (bad) (bad) dec imull mov jo test out mov dec cld dec iret out sahf sub jno xor lock cmp call mov test mov mov ficom jno lock mov sbb fistl mov aaa jns pop xor mov insl mov jns negl aam push push and jge dec mov in test cmp (bad) add mov and mov push add push arpl sub push in or xchg jno xor sbb popf cmp call push clc mov fsubl jle into sub movsb popf inc adc fsubr xchg int hlt mov mov (bad) js pop push lods das shl inc cwtl jo and xor and push data16 insl pop movl stc push dec mov mov subb pop rclb in mov cwtl mov mov lea xor wrmsr xor movsb insb push add rcll movsl ret xor and xlat cmpsl inc adc xchg jo push outsb loop and or imul movsl jne mov mov and xor fnstcw mov in mov sbb mov sbb mov xor test iret and xlat cmp jo xchg mov pop or mov mov adc mov cmp and cmpsb and sub adc cmpsb in lcall iret mov mov xlat lret sub xchg push (bad) (bad) adc xchg mov test dec jl jecxz jo xchg icebp mov adc mov leave loope dec mov push lret push dec pop mov mov mov push fdivl xor push mov imul out sbb loopne jns mov or lea xchg lock in mov loop xchg cmp push adc cmpsb je aad xchg jns in or movsb insl lcall outsb xchg cltd scas and cltd fldenv loopne pop xchg fsubl cltd popa inc lock add push mov arpl shrl xchg adc adc cmp pop inc lahf push jno inc xor les xchg movsl std cmp mov out mov dec movsl (bad) mull sub adc in push iret inc and push jbe mov in daa push jmp scas pusha aam rcll xchg ficomp cltd dec adc outsl (bad) xor (bad) cmp pop mov mov int3 (bad) and cmpl xor xchg mov push mov bound push cmc jecxz inc lds aad into out in shlb mov data16 int mov int and out (bad) xor pop pusha aad (bad) aam mov lcall les jb pop jp sub jno or pop movsl scas out and sti in cmp insl pop mov mov arpl mov or or aas cmpl psllw mov mov adc (bad) lock add or add adc mov mov (bad) lea fnstenv and push xchg jae (bad) sbb mov scas idiv sti adc ljmp (bad) clc sub ficomp and add cltd push mov cmpsl roll mov pop cli xor dec rcrb lcall inc lods das out add rorb repnz mov mov push xchg jecxz (bad) daa (bad) out fsubs shl rcl cmp ljmp inc xchg shlb fwait or xchg push cmp jne cmpsb iret in stos jns mov pop mov adc jae jno icebp ss jne cmp push mov fwait inc cmpsl adc aaa addl and or mov inc inc xchg push leave lds imul xor cltd rorl jns call cmpsb rol sub xor pop or mov sub jne pop scas cli popf test imul mov adc shll pop cmp mov cmp fcmovb lahf push dec lret adc xchg lahf (bad) lods jge sbb les lods xchg enter data16 sub mov mov in sahf fcompl mov xchg rclb (bad) mov outsb push mov cmp mov and mov sbb lods pop js lods lahf sub mov (bad) mov mov outsl out jo lahf xor es test jno cwtl mov inc jbe mov scas clc imul add xchg sarl sub cmp insb das lahf lahf push ss mov and mov mov pop push (bad) pop mov negl sbb fmuls js into mov dec syscall rorl movsl std and add test fsubrs dec cmpsl (bad) lock add test push add cmp into movsb lret mov lahf sahf cwtl sarl mov cltd jecxz ret and lods add push add inc bswap xchg jp test pop dec in outsl movsl loop les mov pusha pop (bad) jecxz ja dec dec push sti movsl loop scas and dec bound imul subl mov aad movsl sub fisttpl lock cltd or cwtl roll fisubl lea js cmp sbb rorl dec mov pop (bad) mov leave jnp nop loope cmpl arpl inc adc adc pminsw mov pop mov mov inc xor and sub ret out dec repnz xchg pop mov pop or pop jb daa daa push xchg and mov sbb pop mull out fdivs add adc shrb push pop cld push lods mov aam fs loope push cld cmp push add (bad) lea mov out aad js cmpsl pushf mov rcll stos fisubrl jns mov test dec push jmp cld cltd xchg mov jns push xor jecxz or jle xchg mov iret xchg mov (bad) movsl test jmp mov inc and scas loop jb and pop add or mov mov fsubrs imul fwait mov lock jecxz mov cmp and sub gs std mov fildl cltd mov jg outsl loop inc (bad) mov xchg (bad) pop mov pop daa sub pop or out sub in fs fwait mov mov nop mov jnp (bad) ja fisub in mov xor stc shll adc js inc cmp es aam repnz fldenv and in movsl ret xchg imul push or fsubrl xchg push notl (bad) lds inc mov movsl test imul shlb dec and mov inc or add ficoml inc sahf dec scas mov mov loope (bad) loopne adc (bad) stos popa pop pop sub ret sub cli dec inc push imul fbstp bound adc js xchg aam push dec mov movsl stos push jbe ja xchg pusha js mov call xor xchg pop xor adc mov cmc adc dec movsl cmp leave mov mov jp dec add mov jae movsl inc mov (bad) lret push push cmp ret and mov pushf sub shlb cwtl sti push and dec mov jp push cmpsb adc lock and jmp sahf mov sub adcl cmpsb push arpl call movsb sub mov mov stos and pop scas mov test lods cmpsb fdiv sbb out inc mov lods adc arpl cmpsl inc bound mov dec cwtl or ret jnp mov jne dec mov sub mov mov sti ja adc ljmp popa incl sub dec repnz jns les scas adc add jge aas push adc mov bound sub mov mov pop dec scas imul bound mov int3 shll adc and dec mov push push adc mov add andl push push xchg adc inc (bad) (bad) in out cmpsb imul dec mov addl (bad) repnz xor sbb addr16 test lods out popa outsl lock in jae xchg pop inc push loope and pop rol out inc adc cmp orb loopne out mov inc (bad) std inc mov (bad) jns cmp mov leave bound int mov fldt jo mov mov shrb call orl add jo call xor push dec xor xchg dec push dec pop insl mov fs (bad) sub movsl loop shlb inc arpl fwait jecxz and fnstenv repz lock inc inc lahf inc push mov outsb or dec fmull or xor icebp bound dec lahf out test pushf jne adc or mov leave and shrb push lods cltd xchg ror aad xchg adc (bad) cs call add add and movsb pop js xchg jg les dec pop push pusha cli adc ljmp nop dec and test mov push out mov sub sbb add subl push stc cltd (bad) js cmp (bad) iret aad push xor out addr16 out rorl clc mov mov sbb out push cltd out sub scas pop dec inc enter xor fdivl push sbb sbbl fucom jge ljmp test (bad) dec dec or pop mov xor mov icebp daa sub in loop and dec add pop (bad) mov ljmp (bad) inc mov mov cli push dec fiadd and enter xchg aas call out jecxz jmp ficom jecxz mov out cmp call mov aas fwait mov lret dec rol frstor lds fcmovnb pop jne inc out xor test call cmc fisubl idivb xlat mov mov pushf mov scas lds pop push sub cltd mov fwait push (bad) mov cmpsl leave mov xchg dec lret mov (bad) jle mov iret dec nop lds lock jle xor and jl repz imul fidivl iret mulb sbb mov adc lock rcl sub jns and cmp repnz pusha jge movsl nop xlat inc mov icebp pop mov pop cmp movsb lods cmp clc mov mov pop pop pusha decl cmp jge (bad) mov scas lods rcr enter mov mov sub lret movsl add cltd sbb mov out out mov mov or in addr16 loope mov repnz sbb stos jne xor sbb mov push dec mov push out aaa shr add cld pop push movsl fmul mov ficoml leave xor cmp cmp mov imul fxch movsl xchg or jmp out pop repz loop jae pcmpgtd sub gs sti cmp js ljmp cltd movsl mov sub aam fstl lea adc cmpsb mov daa pop inc das and pop imul pop idivl aas mov orl jo call or fstl (bad) outsl fcmovu mov test imul loopne mov ss push jge mov scas test xor inc std scas mov inc mov jbe fstpl jne cmpsl test push js dec or adc std pop push inc in mov push mov repnz call sub sti xor mov lret inc (bad) jl inc int out out aad and test push add inc dec or test pop push push add mov aad imul mov sub add xor dec call cli and movsl sbb cmpsl push out jmp scas scas pop adc ja push xor jmp cmp pop scas flds ret ret cld or inc pop lahf pop arpl insb add mov sub cmpsl stos and sbb ret test inc xchg xchg aad popf add xchg dec mov or pop jnp (bad) mov sub xchg fisubl add add lret push sbb loopne mov movsl mov (bad) mov rcrl jno (bad) js fs jecxz and fdivs mov pop xlat inc loope cltd aaa (bad) jmp popf mov dec int3 jl stos and add adc mov push add mov test (bad) out inc out shrl sub cmpsl icebp cltd pusha dec call inc outsb jb lods mov inc dec add cmpsl mov mov cmp add shll in mov cmpsb sub adc cltd add lret and pop cmp sbb (bad) into inc cmp xchg mov imul pop mov xchg jnp icebp pop mov in xor js dec inc sbb add fisub adc mov jnp xchg (bad) sub dec add dec mov shrb inc sti jecxz dec scas inc cmp inc cmp jns xchg or or push mov pop stos mov mov out mov xor cmp push mov shll add stc sub xchg lea and mov lret and outsb in and mov sbbb lahf jno out push mov push push mov cli sbb fsub (bad) mov mov test mov jl mov sbb daa frstor push mov jae xchg imul (bad) int mov test jnp mov fistp popa scas loope adc test pop adc xorl inc imul and ds xchg mov xchg dec fwait aad lret inc shll dec pop sub std dec push mov or lret mov int mov mov or stos stos lock imul jno add mov rcr ljmp retw jb fcomip popa xchg roll sub insl int les cmp sbb adc xlat mov call cmc addr16 sub xor aaa inc push sbb mov aad cmc insl and js loopne and lds push inc mov ljmp fnstsw add test cmp dec mov inc ret imulb fisubl aad stos loope cmp cmp inc mov mulb cmp ret enter mov ret fidivr lods mov je xchg mov mov aas push push mov jecxz jmp adc sub (bad) das mov cmp pop push dec cmpsl and mov add les cmpsl cs aam (bad) cmc cltd pusha fbstp mov lret push add push cmpsb mov arpl fs in mov cltd xor adc xor inc xchg inc mov mov roll lret mov pop (bad) dec ja roll adc xchg jno int xor (bad) in cmc leave data16 dec cli sbb popf jge sub mov aas sbb sub jbe gs sub mov push cs cltd ljmp ret mov pop push imul mov mov aam psrlq adcl mov jecxz xor cmp mov loop mov adc mov out rorl or fdiv sarl cmpsl aad dec sbb jns xor in mov xchg pop push cmpsb mov cs and xchg sub pop (bad) dec sub mov data16 ret mov push icebp dec xchg lods loop mov sub push sbb frstor mov mov adc pop push cmp movsl jns inc cmpsb aaa (bad) mov pop lock cltd inc jne js popf rorb lods ja fs mov movb pusha cmp mov sbb jmp adc xchg pop rclb fidiv es cmpsl jns mov sbb insb mov mov movsb ret jmp sub gs movsb sahf test mov xor xor push add jne inc and aaa mov gs and mov push scas pop popf jmp and mov inc in test dec jae add jnp push and imul aaa mov inc mov adc ds in mov or add mov xorl cli rclb into ret lea in mov cltd jge es movsb sbb dec je dec movl fnsave xchg cmp mov jne mov adc call mov shll jecxz dec shl mov lea pop cmp jmp mov sub fsub push cmp pop nop mov and shrb cmpsl js mov mov mov daa mov xchg add lock mov ja adc jo loopne popf lock push fiadd and mov mov and (bad) hlt jns ljmp and and (bad) mov inc dec (bad) add or movsl xchg rcrl mov inc fidivr fistpll outsb jmp cli movsl (bad) adc jecxz mov fdivrl jl rorb movsl pop xlat dec cmp dec push stc (bad) pop dec push mov pop imul lret push loop dec add movsl loope xlat sub imul add push and jne cmp cmp out fwait mov mov sbb ret in fs mov bound jns mov and sub mov and cmp loop std in push mov push pcmpeqd fnsave lahf mov pusha call in cltd mov mov pop dec or inc jno jmp adc add js sub aaa mov sti pop cld daa js mov sahf bound (bad) push lcall mov mov mov dec lret cmpb je jp popa sbb cmpsb pop hlt mov (bad) ss mov dec int3 (bad) stc jo dec ret dec inc (bad) movsl pop ljmp mov (bad) addr16 xor mov les jb xchg mov test jecxz mov inc aam pop mov mov mov mov inc inc adc sbb inc nop imul xor das pop cmc ds mov push dec movsl fdivrs cmp mov es mov mov rcrl repnz mov cltd pop dec adc pop adc mov cmpsl sub out mov negb orl cltd pop imul jg mov test inc hlt popa xor mov jb cmp sub and inc mov aad cmp jle mov mov into and test adc adc fwait jge fstl aas negb xlat sub mov mov and cmovno popa fmul mov dec or cltd adc lcall mov jno fldenv sub aad mov push in (bad) cltd pop inc cwtl jae aas xor add sub fstp mov adc daa mov inc or pushf or js sbb out xchg stos add and mov xchg push pop mov lods xor test cs nop andl push mov mov mov jg sub add jle scas or psllw jbe mov (bad) imull dec mov jnp mov and inc or inc cmp mov mov dec inc inc add pop dec mov mov mov out insl mov js push push mov fwait mov aaa and inc mov (bad) sbb lods mov pop xchg xor xor push test rorl in mov mov jae fiaddl cltd sub or mov add (bad) cltd hlt (bad) push lock mov adc test jecxz js and mov mov rcl xor out jle std push inc cmp sbb add xor inc hlt test mov xor pusha js ja cmp push xchg pop dec add mov mov mov pop inc add inc dec cmpsl adc pop lahf mov dec or into xorl lcall lcall cld inc out into xor jle xchg cmpsl jp fs gs or lock push pop push add mov mov hlt les movsl rcl (bad) pop cltd pop jecxz aaa mov sahf into or sub cmp push xchg test dec movsl mov bound xchg jns xchg arpl pop dec popa out stc in (bad) les mov adc mov mov sti roll mov bound mov add pop mov stc js andl mov inc stos aam push bound arpl cmp stos and out fwait xchg mov idivb hlt bound mov cld (bad) jb push or sub fcomps fldcw in (bad) in (bad) inc push movsl inc leavew std test psrad cmp int dec adc cmp popf jae in push xor jbe sarl adc (bad) imul insl iret lea in sub lret std test sub pop pop out ret jb addr16 sbb and sub mov pop mov dec pop mov mov mov mov ja aam or fwait sbb cmp xchg mov out push (bad) xor lret mov outsb jecxz pop dec xor xchg add mov sbb pusha pop inc nop aaa mov mov clc push rol movsl xchg fistpll jecxz mov cltd aaa push sub jo lods cmpb sbb cmpsb mov mov repnz movsl xchg mov xchg and xchg jge xlat pop aaa adc mov rorl jbe adc push xchg mov push pop sbb mov imul movsb imul mov push add cmp mov adc aas pop test inc jl negb call inc test mov mov loop aaa pop es pushf jmp or pop and cmc ljmp dec adc mov sub mov jno jne stos test mov lcall cmp clc sbb pusha sbb jg or lods inc or outsb repnz jae adc imul out pop sbbl scas daa jbe movsb sbb fildll insb mov xor xor add jne scas out jns adc or mov jns loopne add shll push rcrb pop jns aam dec mov imul push or mov xchg mov mov pop (bad) jbe adc xor xchg pop stos cmpsl push out fwait std mov push imul or jle loopne jo adcl push mov push movsb insb jne adc dec push popf test xor pop repz xchg in iret mov movsl clc loopne push sub cmp add mov jae dec pop imul and (bad) mov in xchg shl aam pusha sub pop or jecxz mov mov loopne jb mov cld aaa push adc cmp loop sarb add cmpsb je fcmovb test iret sub mov (bad) fstps sahf out push mov mov das xchg (bad) hlt fs mov xchg imul fsubl mov ret push adc jno cmp jle inc dec inc push xchg roll add stos push and jmp cs or repnz popl subl data16 jle (bad) cmpsb fldenv push lea and lahf add int3 (bad) test int mov add xorl (bad) ds push inc mov mov xlat inc lods mov dec stos fstpt jp lds xchg loopne and stc mov (bad) shrb outsl adc dec xlat cmp mov lods and pop ss dec mov out sub bound js arpl and lret and mov mov pop sbb aam mov xchg jb xchg popf xor outsl push inc aam jno push mov jecxz dec xlat sub jbe mov mov mov xchg popf js sbb mov sub mov adc pop jb or jne mov in cwtl xchg jecxz jp sarb (bad) dec mov mov lock in cltd sahf push adc mov pushl xor inc cmp std movsl xor xor mov pop mov outsl push in negb push push sbb (bad) aas sub cld pop mov loope cwtl loope mov xchg push push enter rclb stc stos ret inc mov aaa lods stos or sbb xchg daa test fldenv fbstp cs cwtl pop mov insl in and lods pop stos loope test xchg mov and mov mov cmp xor xlat adc jg insb ret rcl mov xchg or add aaa sbb ret mov mov out cmp mov pushf stc xchg hlt jae mov mov std js add cltd cltd (bad) push xchg or pop jge rorb and enter setne sub adc fildll and push test xchg xchg fsubrl movsl mov scas lret pop ja lods movsl push push notl pop mov or insb mov add dec ret das (bad) mov cltd cmp imul stos xchg sub aaa xchg and cltd sbb dec push das dec (bad) jnp mov jg mov mov push test mov hlt cmp mov loopne pop inc mov xchg out outsl out mov and push pushw and mov mov jle xchg (bad) mov sbb outsb fbld stos push addr16 push aad hlt and call loop lods scas inc and mov fnstsw mov (bad) mov bound les out in movsl inc jo mov (bad) and js inc lea iret mov or icebp pop pop pop pusha movsl lcallw jmp movsb or sub cmpsb (bad) pop arpl cmpsl out dec das ljmp movsl jmp lods sti sbb lock (bad) mov add add mov (bad) mov inc jne sub mov (bad) into add add pop and xor test and inc mov popf push mov inc xchg pop mov sbb (bad) clc fdivr jnp mov mov xor sbb pop shlb daa imul cmp addl sbb stos add jb pop and sbb loopne inc bound fcomps add mov out popf lods xor or (bad) xor inc jnp bound pop lret mov dec pop or adc xchg out bound or test push lret jns leave clc lret gs mov adcl xor das sbb popf or xor push mov cmp adc stc pop mov adc scas inc push xor jno jge mov mov xchg mov xor jbe xchg bound jl mov push ret or push addr16 repnz sub loope cltd jge (bad) cmpsl mov and mov push lret cli mov insl mov fdivs adc pop stos xor adc xchg adc lahf int3 mov cmpsb int3 sbb mov (bad) fprem1 lret test jecxz cmp or jne xchg shr push pusha fbstp cltd aaa pop cmpsb bound jno imul jae loop sti pop std pop push inc jne mov push faddl (bad) mov cltd icebp fidivr repz imul mov mov xchg loope push mov mov scas movsl (bad) fucomi movsb lds mov das mov lods mov insb mov sbb (bad) test daa adc adc mov dec dec cltd movsl jbe popf xchg popa mov inc in sbb (bad) fst mov notb xchg sub aaa rcl movsl popf or movsl es dec jne pop xchg mov mov mulb es std cltd push cld cmp ret inc loope sti mov movsb sbb das or dec mov jb icebp mov cmc arpl pop scas lock inc push and jbe das mov push cmp jo pop imul movsl fist test xor add cmp lahf mov addr16 lock inc or cltd and and mov inc fisttpll mov in js mov rcrb push and andl loope lods mov (bad) icebp mov (bad) sbb test mov pop inc or dec mov mov xchg push imul dec and rorb out dec fistpl jo and test stos (bad) dec lods test add pop clc sub mov sbb mov sub repz fist mov (bad) lcall stos jge stos xchg jbe add movsl data16 pop dec (bad) in and into loope out enter arpl xchg stos mov dec shrl inc movsb test and cmpl and pop jge cmpsb xorl js push pop pop jl sub jbe fbstp (bad) enter and mov outsb add insb (bad) xchg mov xor loop push mov call fsubp jno std and mov aas jecxz lock icebp in cmp gs push push fist xor out aaa sub in mov ja xor xchg pop stos pushf roll ret cltd jp fcoms test and bound imul sbb pusha push stos pop les mov mov mov mov dec mov and daa das mov lret sbb jno cmpl fwait push rcrl das or aaa xchg fwait loop push cmp mov out addl hlt pop pop adc lahf pop cmpl mov cltd sub cmpsl and and xor fbstp jmp loop push mov stc jnp loop imul mov shll rorb pop ja mov cmp cmc and fimul fist pusha mov push or lds and movsl jbe jp mov push (bad) xlat xchg mov jb mov insl lcall mov loopne sbb add push int cmp in cmp cltd sub xchg sub lcall or inc cmp xchg inc gs dec stos fsts jbe mov mov out clc push int3 pop scas mov shrl test mov and int3 mov add sbb pop movsl cltd popl jl leave or dec xchg cltd es jle and cmp lea dec mov mov into lea and repnz call push mov movsb mov xchg lea stos mov mov cs outsb mov mull cltd xchg into out icebp pop (bad) test dec push push sti in mov stos pop and jg outsl push lods xchg add frstor shlb fcomps adc sti jle push fwait cmp mov dec add cltd sbb push dec and and std jns dec (bad) mov jbe aam xchg dec cmpsb scas mov loope lret sahf imul and loope popf mov xor pop out mov add xchg js cmpsb imul and in pop sub mov (bad) jmp push mov push jle popf out add add movsb es loope (bad) sub imul outsl inc movsl bound sub xor andb pop xchg cmpsb sbb les mov jbe movsl sahf mov jns (bad) dec cmp or push movsl lods je test or mov loopne dec out inc xchg pop add mov push aas bound mov sub mov in mov test mov adc sub pop les push movsl shlb xchg sub dec jecxz jb icebp cmp scas out xchg in pop or pop icebp push add and hlt and adc dec call xchg xchg (bad) clc in test loope xor and adc std jle daa arpl rep loop fimull push das mov mov xor add pop jmp mov ret or cltd movsl test jecxz ret mov and inc iret xor loope iret mov push in and cmp sti pop mov and test lods adc mov xor dec inc lods daa test loopne and mov push iret insl out dec out cmp push sbb (bad) lret pop cltd inc pop sti sub in mov (bad) push or push xor nop mov xlat cmp movsl jne enter scas mov sub ret jge in in movsl mov pop hlt jno sub daa sbb pop insl cltd pop inc cwtl fwait dec push xchg xchg xchg movsb dec jb jns mov pusha cwtd lds call sub cmp mov xor pop aaa test sub gs rcrb mov fisub test sub sub dec push or cs inc or rorl jns arpl adc cmpsb in call iret out sbbl pop orb cmp movsb pop popf mov gs addr16 push (bad) lock rcl mov inc or into mul mov outsb andl loopne test daa jg cmpsb repz (bad) dec les out in mov fwait mov mov pop lds cmp dec sbb add loope jne xor xor cli mov lcall divl out mov inc lds in hlt mov daa mov xor aas jns int3 mov cltd mov inc push jno jecxz jl cmpsl mov aam mov std adc lds stos cmpsl cmp scas jne movsl fist mov jnp xor push incb lock ss mov xor cmpsb outsb mov xlat into test loop ret pop push mov sub popa xchg lret sarl sbb repz in mov js sti movsl out and hlt mov mov (bad) mov mov mov sahf push push sbb aam mov (bad) pusha xchg cmc push and sub mov dec fdivs adc jnp pusha jnp lea cmp mov repnz out rcll test movsb jecxz mov or mov ror imul lret call adc andb mov sbb xchg mov and xor pop insb (bad) mov push imul push inc cwtl or movsb mov push mov ljmp rcrb fst movsl pushf pop dec push cmp xchg mov push sbb jne out jmp dec outsl call dec lds into aam xor in sub movsb mov es subl fisttpll outsl lds xchg repnz mov icebp push mov dec sbb and test repnz insl nop (bad) cmp stos and inc test adc cmpsl lods loop icebp mov fisttpl fxch cwtl lret mov xorb push xchg push add mov xor xor gs aad push cmp sahf or (bad) mov fmuls jmp xchg xor or adc mov pop aas push outsl movsl adc sub scas lods mov and and stc and mov jg mov shlb hlt or je mov sahf out and mov pop scas cltd pop imul iret xchg mov pop scas or jmp xchg sub (bad) xor or inc cltd jno jg push arpl cld push (bad) xchg push add jecxz cmp (bad) dec ret xor mov insl push ljmp stos pusha lcall xchg fidiv (bad) iret mov cmpsl add hlt pop (bad) divb pop mov adc jecxz cmp cmc cmpl arpl int3 icebp movb adc jecxz subl sub nop rorl cli dec mov inc iret push sub xlat pop nop sahf test scas movsb mov fadds push mov push jge push mov aas jecxz dec std sbb cmp xchg (bad) leave add sbb adc call jns decl std sub out or in in mov push sbb lcall jnp loope push mov mov jl xor or pop (bad) push stc cmc mov mov cmp pop xor scas mov xor inc push cmpsb sub lahf lret jmp sarl inc add push push shlb push std xchg mov dec or mov xlat pop pop xchg mov push pop in in pusha fsubrl cld (bad) mov push mov and aad lods xchg jge xor sub test mov dec movsl lcall xor cmp fisubrl inc leave int sbb mov dec leave cli pop insl stos xchg insl (bad) xchg add out and and xor jecxz in test inc lods addr16 mov inc imul inc nop pop jge out addl xchg (bad) jnp in adc pop pop in inc mov mov and dec jno out lods mov xchg push aam in shlb pop xor xor or insl mov (bad) and leave addr16 push xchg dec bound and push lret inc clc pop sbbl push jge pop jge mov mov movsb jmp xchg addl pusha adc (bad) lret inc sub icebp dec out out sbb mov mov roll lods stos int3 std cmpsb mov call xchg insb or sti lock icebp push push jecxz xor sbb cmpsl (bad) in fbld loope pushf mov mov (bad) sub fdivs mov xchg aam jb adc push mov jle xor dec mov adcl lret insl jns pop es dec movsl out sahf xchg cmpsl mov mov sbb and fdivrs in sbbl stc xchg pop add dec cltd dec addr16 fldcw mov ret sbb mov pop rclb ds push fdivl arpl sub dec jae outsl add mov inc lds addr16 push fs into adc or dec ror lods fwait mov pusha push jmp insl ja push scas mov adc cmp sbb dec cltd inc and mov data16 (bad) js andb cmp fnsave xor pop push cmpsb ja inc xchg ret pop dec xor push std (bad) or int xor dec fisttpl xchg mov (bad) cmp jne fldl or push movsb sbb lret adc pop neg shrb (bad) jns sarl (bad) out push (bad) pop sbb dec jnp inc fnop sub mov jo pop cmp ss jbe mov leave fnsave pop fxch mov and subl movsl jbe (bad) call mov inc movsl sub mov sbb pusha inc mov or or ja dec sbb pop xchg mov inc sbb mov xchg roll add dec in sub xor pushw (bad) add lds cs push cmpsb sub xor cmpsl and bound fcom data16 mov shlb jb pop lods cmp jg sub in mov pusha imull sbb sbb movsl divl mov pop out (bad) bound stc pop push insl mov or cmp cmpsb lret push iret loop ret loopne xchg mov pop push js repz dec jb push jmp adc in (bad) insb mov gs and mov sbb cli lock cld mov and sti rcrb dec test xor push cmpsl out mov sti push cmp or push add sbb test mov cltd pop stos mov (bad) imull addb mov push (bad) xor inc jle mov mov push cmp mov lds lods or mov add enter adc mov cmp or aam sub pop sahf mov mov and cmp dec repz out xchg jle jp les test cwtl jb lret int3 js stos adc leave cmp arpl pop popa pushw test fcomi mov cmp lcall lock push ret rorl or xor les fcmovnu cmp cltd stc in (bad) movsl xchg jae and pop push mov push cli cmpsl (bad) jp inc in mov push jle adc cwtl orl jecxz sarl ret mov push in cs lea (bad) imulb cltd push popf mov mov dec bound dec inc add roll adc movsb jp mov mov movsb rcr stc jno loope les mov imul xchg icebp outsl push (bad) popf sbb lahf hlt sbbl adcl insl test add jnp cli (bad) movsl xchg adc adc push lock mov inc mov pop xchg fcompl out sub int sti call (bad) xor cmpsl pop add lret lock pop sub roll scas es (bad) dec xor popf and dec mov push mov aad cwtl xchg mov (bad) and dec or cmpsb cld loope mov sub movsb jecxz dec lock mov mov inc cmp mov mov lods mov mov daa push cld je mov add push mov sbb inc sti xchg test fwait dec imul dec lret movsl jecxz push (bad) jns out add inc rolb bound sbb loop outsl pop and test mov das mov mov lods movsl mov xor xorl stc mov add mov insl jmp imul sub inc mov xor adc push pop in and bound (bad) popf mov gs pop or aam and popf xchg andb inc inc in mov xchg and cli pop cli mov dec or mov iret jno cmpsb sbb push ljmp jecxz push jl in call lcall insb pusha dec inc xchg sub adc ds and adc mov test mov lcall mov jecxz pop xchg das ja movsl out adc cmp sub in cmpsl lret push js,pt push add adc mov sbb jg rolb stos jne fadd xchg das push and mov cmpsb bound cli pop stos lods xchg mov ljmp sbb sbb fwait outsb loopne jecxz,pn mov test subb test sarl lahf in enter int mov mov add stos cmpsb sbbl cmpsb hlt arpl lahf lock add xchg out cmp cltd jns loop inc leave mov push popf mov xchg push mov mov mov clc cmp mov mov mov xor es sub push test pop dec icebp mov mov and int3 sub lcall aas in xor and xor mov and mov jecxz mov mov pop inc stc adc cli cmp lahf lret lret std cwtl (bad) (bad) pop arpl pusha cmp lods cld mov jnp int3 roll sbb cmp push pop mov add adc cli inc fldl inc add inc andl ss mov leave movsl cmpsl push pop adc arpl fwait in sbb popa dec push pop dec pop xchg cli (bad) in into dec mov rorb pop fld1 movsl cmp mov pop ljmp and mov inc pusha and das and ss test outsb sbb adc nop and xchg push dec movsl adc pushf pop cmp mov cmp mov xchg imul xor nop sarb cmpsl or push mov sub shlb and ret xchg call jmp xchg daa adc in cltd std lcall sbb es add shrb das or jle and adc mov shll iret std jmp or sbb adc (bad) pushf mov mov push lods ljmp dec dec add mov (bad) xor jns lret mov push mov mov aad mov ret icebp jno dec hlt sub out adc push mov xchg push out je pop ja pop outsl push out dec movsl stos mov mov pop sub cwtl mov shl nop pop mov dec or repz loop sbb xor lods (bad) and shll lcall jl mov hlt pop and jns xchg leave inc or or mov sub inc cmp out xchg pop pushl std mov (bad) mov (bad) hlt add push sarb push sbb aaa sub cmp xor push adc cmpsb add mov fnsave cmp (bad) cld push enter mov jo loop movsl push sbb in jnp stos nop sarl fsts xchg inc inc jns add mov dec xor add mov xchg nop sbb mov loopne (bad) xchg mov and sub cmpsl clc fadds push shlb xchg mov mov and cs xor in movsb mov (bad) lods mov push xchg and sti in cltd sub mov mov mov pop mov into mov jno mov mov leave cmp nop push (bad) ret mov test inc movsb rclb pop sub jmp adc imul or pop (bad) cmpsl ljmp cmc shrb xor cltd mov js add jmp push fsubl sub mov cmpsl ja (bad) jbe mov cmc jne scas sub icebp in mov push lods jl fistl movsl dec sbb jmp imul bnd push pusha fbld inc xor test mov std xor dec imul ljmp stos cmpsb adc in push pop sarl and (bad) mov loope lret sub js or xchg loope dec push fisttpl (bad) mov xor std adc fdivrs dec xchg xchg in test adc sub cmp adc fisubrl pop xchg fsubrs stos sbb jge imul pushl adc fsubrs jnp inc test sahf push push cmpsb sub or push jo xor cli push sub inc in push sub bound mov lds repnz test adc push pop dec das adc xchg pop add popf rorb in push inc add and in jmp andl xchg xchg movsl xor es cltd fwait sub inc adc adc inc xor in dec insl or xchg imul add fnstcw adc ds push lds push sbb pop add lock mov mov jecxz rorb pop fldenv andl icebp mov icebp add in mov dec cmpsb pop xor addr16 jecxz adc sub sub and xchg loopne jb pop or add dec sarb push and test push and pop push xlat push (bad) jge loopne int ja push mov sahf push iret loope pop mov jecxz rcrl push ds sub or hlt lea std jno cmp lock mov xchg xor xchg movsl and sti sub (bad) (bad) leave in out jl cmp lds and fucomi mov cltd sarl fcomip sarl dec or mov dec and fwait decb or push pop push xchg stos gs ja lret inc lret sbb mov cmpsl outsb mov and dec pop into movsl cmpsl cmp mov xchg sbb ret jecxz push mov fidivrl ds mov test iret xchg aad icebp cmp cltd ret in stc cmpsb mov movsl jge push cmp cs rcll test push mov pop add scas sar dec loopne mov out sti xor add jmp mov jns xor pop sub adc jo lcall push adc lret sbb insb xlat xchg mov inc je out push add imulb mov daa cmpsb mov ljmp jg xor mov rclb jg out xor fwait push (bad) loop mov sub jno pop mov mov mov (bad) popa sub shlb push loop andb aas mov mov inc cld pop pop push adc xlat lock cmpsb insl mov fldl mov icebp ret xor pop scas sub and loop mov push xor push (bad) and push mov mov arpl iret mov mov pushf sub push cmp test cltd cmpsb pushl inc adc mov push dec or ret xor es clc cltd (bad) jbe pop mov aam imul cwtl imul push clc mov lret shll jg sbb es cld mov inc cmpsl repnz (bad) mov cmpsb inc mov loop dec jle inc loop dec sbb test addr16 popa in and add imul dec add dec mov inc call push fnstsw cmpsl insl mov sti jb adc sub shr bound loopne push cld je cmc or scas mov sbb and cli cmpsl mov gs popf add ret adc jo pop rorb mov fwait dec mov mov insb pop repnz movsl das (bad) lds bound mov mov lods aaa jecxz mov jnp mov fnstcw jo leave mov add addr16 mov cmc loope mov pop mov jno ds int icebp test (bad) icebp (bad) sbb fistpll adc add mov push push imul repz repnz sbb xchg cmc stos adc lret sbb addr16 ljmp cmc pop push add pop out sbb jbe xor repnz mov sub lret fsub mov add cmpsb repnz sbb mov lahf push ret in jo,pt loopne sub jne shrd call fimull pop outsl xchg std outsb shrb out or gs lret pop add jmp movsb push pop or pusha lock jp scas icebp (bad) jno fsubl cmpl pop add cmp les cltd repz ret clc scas stos out fstl lods incl insb (bad) push adc lret fs inc les inc inc push mov (bad) mov adc (bad) xor (bad) xchg movsl (bad) int and dec add (bad) jno popf push jne ss fcom mov push das packuswb hlt and dec dec sub xchg cmc jo (bad) popa cmc xor pop xor stos mov mulb adc add xchg sarb mov push daa or dec inc out jno (bad) iret js dec jecxz inc mov popa aad cwtl xchg jno cmp andb hlt ror mov (bad) cmp jns (bad) mov sbb adc cmc cmpsb js ja imul cli ds and pop cmp in cmc pusha cmpsl rol mov sbb scas adc and sar js popf pop stos xchg pusha jbe mov cltd hlt movsl insb data16 and jge int3 inc mov add pop sub dec dec das cmc push pushf mov hlt or call (bad) mov jp mov inc pop loope pop xor (bad) push add mov clc andl pusha popa jae jmp std dec stc addl and xlat sub sarl mov xor movsb shr ret xchg mov mov popf sub jmp inc pop sbbb out bound jnp movsl pusha and mov pusha sub xor test push push sub add or xchg lahf lea jg jb sbb int inc les pushf cli cltd jg (bad) data16 scas popf (bad) icebp cmp xor add out lock and cwtl shll add loopne out popa push push mov pushf arpl sahf adc pop fs fnop jg lret mov lods out lock cmpsb daa shll and outsb fwait adc js cli and mov push rclb daa jg test mov xchg les and stos ljmp std stc pop int3 mov add dec push or cmpb dec xchg jl gs stos cmpb arpl pop lahf addb fcomps mov loop iret push inc jnp pop movsl push and mov jo dec mov imul inc (bad) xlat sbb push int not cmpsl mov mov sub data16 jns nop cwtl lret rcll dec or mov lods sbb mov lods ret (bad) dec icebp pop test in pushf push (bad) mov je xor pop dec lretw push test lock in movsl jb pop movsl pop rclb xchg nop xor xchg cmpsb pushf aas inc mulb popa inc add adc jle popl dec cmp inc ljmp loop jne int out shl mov mov dec lea dec xchg mov stos popf mov dec or adc in adc iret (bad) push pop cltd lahf xchg jns mov movsb mov mov mov jns and pop pop (bad) (bad) and lock das inc add ss jbe jne and lds and insl push test or jge mov cmpsb nop outsl mov inc jmp mov jecxz addr16 or and test addr16 cltd fsubrl jne mov (bad) cmp xchg js xlat jge inc jp sub cld stos inc sub dec cmp xlat ret mov sbb dec cld (bad) lock js cltd xor mov add add movsl shr mov mov sub and pop mov pop ja dec cmp push cld sbbl fisub ja aam js into mov mov mov push sahf sub cs xchg rclb jmp cli les cmpl (bad) and imul fwait xor movsl inc ror mov sbb jae jmp outsl icebp inc add adc test mov aaa mov or or mov adc adcl jbe pop pop inc cmp data16 das aaa push xchg cmp ds mov xor pop add sub repz lods scas jns adc and leave fsubrs pop xor repnz test push and loope jl test aam inc jo (bad) outsl or jae cld pop or mov inc push dec jno add rolb lret lock in sub xchg ret call xchg data16 (bad) mov js jb add enter xchg pop pop pop imul out pop and aaa vmread mov xchg xlat and (bad) fsts ret sub xor mov mov xor push xchg lods daa mov pop mov mov fistpl das lahf gs jb fbld push lahf cld push push xchg dec movsb pop jbe test sti out aam test data16 mov icebp sbb rcl dec or in mov pop mov push xchg and bound dec add data16 or xchg (bad) test jns popa mov adc mov bound out es addl rclb fwait push ffree inc push cmp outsb pop nop fldt add lods movsl data16 lds xchg jnp xor mov xchg test cmp aam xchg pop rolb and icebp cmp lock xchg lcall popf inc add cmpsb cmp pop xchg stc sbbl mov in sbb adc sti pop pop jns movsb pusha andl push (bad) loopne (bad) push and jnp test out data16 push dec inc pop notl push mov addb mov (bad) jmp call mov mov repz lret or pop fstpl jg jns lahf push jno jnp pop insl mov lcall rcl adc xchg inc inc sbb mov bound out movsl andl push mov or mov mov push in xchg call je loope cmpsb pop pushl or movb adc pop or mov fiadd inc pop fidivl stos fistpl aaa pop dec inc daa and aaa out jne movsl mov (bad) call cmp cmpsl xor jno mov into push inc push movsb movsb data16 subb test inc jae pop sbb sbb (bad) mov mov (bad) rcpps (bad) sbb jecxz cld outsl sub mov inc and or and add push ret fcomps push scas jne pop lret test or idivb repnz push jnp stos jns fmull in mulb movsl sbb (bad) jae mov and arpl lods data16 push in sahf insb lret jbe adc adc inc pop xchg jmp outsl inc sub (bad) into into add xchg pop pop adc mov pop mov jns (bad) or out rcll into add aas xchg movsb xchg (bad) lcall loope pusha xchg push add cltd in cmpsl push movsw xchg push mov mov daa mov inc cmp out add lods movsl add jg jbe push mov sbb imul dec add (bad) push inc mov cmpsl sbb or jmp imul pop incl jbe sub jp iret cwtl xor cmp (bad) mov popa repz adc adc fs (bad) aaa mov fmulp mov pushf dec mov popl mov inc cltd lock mov mov and dec cmpsl test and mov pop push pop mov or fdivrs sub dec push mov and enter imul das mov lcall hlt mov repnz daa daa stos sti inc and pop inc insl leave mov or out test inc mov mov sbb cmpb (bad) mov insl in sti mov into and push lods and cltd inc adc and (bad) cld repnz mov je imul sbb pop cltd inc pop lods inc adc cs out or int xchg (bad) aad and mov push push add pop imulb push cld pop xor cmc jns mull mov xor push sub dec jb or testb push loope mov sub movsl adc scas adc or scas cmpsl adc lret xor or jp imull mov idivb inc and push mov in dec push xchg (bad) imul mov das call mov sub pusha rolb mov jmp sbb jb movsb aas jg adc cmp arpl cltd or repnz cmpb aad jecxz (bad) movsl jmp lods or dec mov cs stc aam fisub xor lahf xor ds addr16 xchg push cli pop repz xchg imul inc and addr16 xor enter pushf jno or inc shll int3 into mov or sub repnz xor test mov and out bound (bad) push mov in sub stos mov and sub fadd imul mov insb mov pop ret mov jns adc dec add mov sbb cmp movsl (bad) lret mov mov loope imul mov repz mov sti movsl and lret jmp xor xchg jbe ret sub cmpsb idivl mov js pop nop sub inc packuswb arpl daa sub dec jecxz in and push add xor cmpsb arpl cmpsl mov js aaa push xchg xor pop sar daa addl dec adc cmp pop and insb hlt cltd (bad) mov ret test xor pop mov fwait mov jbe xchg ret mov push mull adc mov mov mov cltd inc jae sti cmpsb jo mov repz push loop xor xchg sub in sub loope out out adc mov add test mov mov divl adc icebp test push in loop xlat dec jo mov imul test mov xchg jns rcrl insl int3 and cld repnz out or xchg je xlat cmc clc cmpb xor mov pop or add in dec jecxz adc cmp pop adc mov push scas lcall sub popa jne loope mov ret xchg push adc mov mov iret cltd add orb mov or pop stos pop and and cmc lahf cmp pop add fidivrl imul setns pop mov in pop add or repnz les and mov dec jne inc xchg or dec mov xchg ja and push sbb push popf xor int3 cmp repnz loop (bad) cmp lods movsl dec add test sahf push aaa and mov sbb cmpsl mov aam jmp pop mov cwtl mov push pushl test mov pop stc sbb mov cs pop push xchg xchg sub lret sbbb pusha lret jns rcll out mov cmpsl loopne mov data16 sub and pop hlt andl test cli xchg xor and mov mov mov dec add jns sub mov (bad) into pop lock jne inc jb gs sbbl (bad) lret mov in cmpsl mov int3 xchg jecxz (bad) add pop ja xor test dec xchg cltd pop daa cmp push in push mov mov ss and ss nop or les pop add adc xor fsubrl cmc cltd (bad) ja jne gs popf (bad) imulb xchg xor sbb pop and ret lock jp lret test sub jb mov mov ficom push aas mov rolb push jb out addr16 and cmpsb inc scas dec js out lods mov test mov and mov cmpl call (bad) mov push add inc insl pop push call imul or mov repz vpmovmskb push mov push mov sbb jecxz and repnz inc cmp pop (bad) push movsl inc js mov clc loope push xchg xchg (bad) lods scas mov jl (bad) jb adc outsb loope xlat test add dec push pop push dec push fcmovne mov out cltd push dec arpl mov lods fwait out mov out mov shll loop fnstenv sub sub aam adc (bad) sbb cld sahf movsl or int3 inc add fdivrs adc xchg imul mov repz xor mov test mov pushf leave enter out add mov fistpll cmc or fcmovb gs stc mov aas (bad) insb jecxz pop push add mov dec sbb repz push inc pop add or dec mov mov mov cmp lea shrl fnsave sub adc cmpsb xchg cmpsl data16 nop js icebp adc add imul (bad) xor cmp pop shlb lds fidivl xchg inc (bad) cwtl jne push pop mov mov xlat jno sub or inc shrl loopne inc out pop adc cltd sub dec daa gs gs lock clc into sbb and adc sbb icebp int or leave idivl mov inc jb or cmp jmp xlat addr16 pop and popa push test rorb fsub add or dec mov in pop stos add divl add push mov repnz stos add pop dec rorl fdivrs jg sub lods mov in mov pop jno cltd adc lcall aad andb cld mov adc loopne lret inc cmp cmp mov movsl xchg sub jg pop add inc xchg mov cs cld lds mov sub mov in imul outsl mov (bad) xchg or mov push scas mov lahf cltd xchg je inc sub dec fs (bad) ret leave adc into mov (bad) xchg push xchg jg xchg xor lods jne sub pop jmp mov jl push cmp sbb mov xor push xor and push movsb ret fstps sbb xor add call mov sbb clc pop xchg imulb test or int mov inc push pusha out cmpsl test in push mov jbe xlat mov fwait mov xor fsubs insl xor es popf ret jmp je sub cltd mov das inc push fsubl sub cmovae sarb imul inc xchg fimull into xchg xchg sub mov cmpsb (bad) (bad) enter fistp push (bad) sti push pop in and sub jge add xchg shrl jge mov push and cltd int adc shll xchg mov scas lahf testb cwtl jge or clc cltd or js adc jne push jns push jnp mov mov xchg dec adc rcll es pop adc jmp inc pop outsl mov jle cmp jnp cltd mov out je fldl mov push test and addb (bad) cmpsb loop or jl stc std lock push pop scas imul lods cmpsl sub out mov (bad) leave (bad) jno jae dec jge loope xchg push mov mov sti jmp (bad) lock add imul cmpsl ds push fwait push (bad) adc mov pop mov mov cli cmp and or cltd mov ss and dec and sub aas rorb pop sbb mov fstpt test dec jg lcall xchg mov cwtl lea gs pop imul mov lods add inc sbb loopne fwait movsl stos add cwtl rcrl inc or movsl scas fs push mov ror jecxz iret mov push xor jns adc add jnp and and outsl dec scas or (bad) mov mov dec rcrl lret cmpsl out lods call test jne mulb xor mov mov call xchg jae mov xchg ret cmp mov repnz mov inc sbb icebp mov lret out adc xor pushl and leave add and in xor xchg mov mov mov cltd movsl mov jmp and (bad) hlt cmp push push clc mov fstpt movsl (bad) in push addr16 push dec add cltd xor cmp mov es pop cltd cmpsl subb jns arpl and test scas setno outsl in mov pop sbb adc outsb dec mov xchg xchg andl fstpl enter cltd mov push daa addb xor pop leave sbb pop xchg decl or dec mov aad mov sub daa dec aam inc jl mov adc mov arpl mov push dec rorb mov dec in add rcll or enter imul imul cmp out sub enter xor mov rcrb add cmpsb pop push inc adc mov jne stos or rcrb nop mov sub dec scas and pop in lock add xor out es cmpsb mov test mov inc out gs add cmc mov cmc push test push xor jl mov mov mov (bad) pop xor (bad) das sub push cltd stos vpsubsw push mulb xor loope dec cwtl movsl xor nop mov ss push std aad mov or pop sbb and or fwait mov cmpl sahf mov repz outsb add test cmp sbbl add adc or iret xchg mov fs scas mov mov mov sbb test dec xchg mov lock (bad) xchg cli push test push pop movsl es or dec sbb mov lock nop mov inc subl leave pop pop in push test ret pop dec (bad) mov sub mov leave ret xor cmp mov cs into sub imull js dec mov dec cltd lcall xor adc movsb push (bad) sti push adc lret jl out ret andl mov dec adc pop mov fidiv xor dec mov stos cmp bswap pop inc add jae cmp jp outsl push mov es mov jnp add jmp mov and cmp mov jnp stc inc or dec loop add mulb sbb xor sub jnp scas daa and fcmovb andl mov mov imul das (bad) xorl pop inc (bad) int3 cwtl scas fisttpl movsl popa jg pop sbbl mov sbb inc mov test inc jns mov xor dec (bad) lock mov lret inc or rolb sbb stos cmp clc mov fbstp lea sbb sti adc cmp and outsb out dec jns jecxz loope (bad) fistpll cs cmpsb sbb and les loopne mov dec or popa lea sbb add cmp adc loop cmp insb in inc pop sti mov sub xchg scas pop inc cmpsl pop ss aam mov sar (bad) xor rcrb lcall cmc push lods outsl imul nop sbb mov xchg mov sub ds imul mov rorl xor ss scas mov push mov cli jg sub imul sarl not addb dec rolb movsl sub xor xchg xchg mov and xor jae dec lahf jge popa movsl andb dec leave loope push fstp arpl (bad) je add xchg popa icebp push inc or add (bad) mov scas jge mull jo stos and scas cmpsb jb fwait pop iret insl enter movsl xlat movsl add add mov mov jle fldt cmc jmp les pop mov push bound shll les lods in sub sbb sub mov int mov (bad) shll cmp test jne xchg pop mov fmul and mov rcl fmuls jle fistl mov bound and mov pop into dec mov inc roll mov pop mov lds test sbb mov daa xor sbb iret sahf lods loope mov scas xor fstl fistp mov aam add jnp es cltd (bad) mov jbe or or gs andb mov les sbb int sbb bound jo mov dec stos fwait repnz cmp jge mov outsl in pop pop rcr xlat mov pop or sub out stos ja push lock and push mov pushf sahf xlat jb sbb pop sub dec cmpsb mov (bad) int out push mov inc outsb jae and movsb scas dec movsl lock and sti stc cmp dec push cmpsl and (bad) cld icebp (bad) sbb sbb sub push cmp pop mov daa (bad) cmc pop je mov mov ds jmp pusha jmp xchg inc push inc inc jge out insb gs int3 mov fwait push sub jnp out xor in lds mov inc shr and subl mov fistl xchg imul jecxz cmp icebp mov xchg xor int movsb ja popa ret mov mov or cmpsb loop add xchg call cmp adc sub xchg sub pop pop repnz lahf mov addr16 fsts ret xchg mov mov inc and inc sti push or lret mov shll adc xlat jg (bad) mov push movsb nop mov mov lods (bad) xor and dec jg mov cltd adc push pop jbe aaa fsts mov mov movsl hlt cmp push js xor out cmp sub push je jl stc mov xorl call ficoml mov rorb add in ja cmp scas ljmp pop mull xlat xchg shrb adc xor push or xchg and std cmpsb dec fiadd lret fistpl push or mov pop mov mov (bad) xchg push add adc mov dec or das mov push cmp ret fldenv mov cmpsb xor insl xchg shrl mov adc sahf mov sbb inc push sbbl jge movsl (bad) xor inc inc loop jno mov dec dec push mov adc mov movsl inc lock data16 rcl sub sahf mov test mov and bound fisubrl pop add call jo ret mov dec xchg sbb fidiv sarl (bad) pop jo call rorb mov enter (bad) sarb jns lret cmp icebp loopne (bad) (bad) pop mov scas stos and mov xor js lock push jge xor gs outsb add dec aaa jmp dec call arpl jno out mov ds mov call mov lret sbb inc ja loop cmpsb or jb rorb and negb push std pop mov std pop fnclex and jg xchg ss repnz andb sub jns pop stc pop mov out imul pop jmp mov xchg sub imul push pushf xor cmp test je add jns les pop jnp outsb dec imul cltd and (bad) pop leave arpl pop mov ucomiss (bad) cmpsb sub jl iret repnz pop outsl test dec inc js jne cli push test jbe cmp push jge rcrl data16 pop icebp clc test ja push lret pop jge cmpsb rolb popf inc mov jb or cmpsl icebp add fwait es cmpl cmp push mov adc pop dec loopne or stos dec add dec pop (bad) jecxz mov mov push (bad) lock ljmp into bound xchg movsl cmp decb ss cmp notl jp stos xor inc (bad) loop cmpsb inc decl jne out addl bound mov pop sub xor orl jl and aaa bound idivb pop (bad) dec xor pop inc (bad) insl out pop sbb lret xchg pop (bad) mov imul push mov ja pop bound popf dec loopne sbb inc idivb iret arpl stos xor add clc jns lods sub mov pop mov xorl sbbl pop inc adc js inc mov jmp pop dec scas das pop jnp bnd loop cmp and setns inc movsl sahf pusha daa and ret cltd cmp sub mov mov pop arpl int3 mov pop xor loopne or cld mov cmp gs call enter push (bad) neg mov and xchg cmp loope icebp outsb (bad) lock stos pushf pop pop movsl jnp lock mov cmp shlb and in enter pop fdivl mov hlt inc mov inc movsb sub jle cli shl push mov mov clc dec mov xchg lea mov dec (bad) loope mov xchg jmp call xchg xor (bad) pop dec int arpl repz sbb shlb push (bad) arpl call or and xor test pop mov push jecxz sbb and les dec push bound cwtl jbe cmpsl cmc pushf mov xor sbb and xchg jmp xchg call movq loop inc bound mov ja mov adc gs push popa roll cmp subb fstpt sbb cltd dec mov jb es bound sbb mov mov outsl sub popa shll mov out lret add mov dec mov dec mov out dec (bad) xchg or (bad) cltd pushf adc dec add arpl out push inc push jecxz adc mov cmp or dec fwait cmpsl mov aas (bad) fwait mov adcl mov push dec or repnz add in mov cmp test dec and sbbl popf cwtl into inc or and mov push subl add ds cs jecxz imul iret std fstl xchg (bad) sub lods xchg mov mov inc cmp aaa inc or lea hlt aad push stos stos cmpsl or sub xor mov sarl loop mov es push mov xchg out or jmp data16 into mov out mov dec and inc mov adc je mov push mov and pop cmpsl cltd cmp mov test xor mov cltd std push aam mov dec shrl sub mov jne dec aam cmp push cmp repnz or adc sub add movl jo pop lods test outsl sub stc sub pop push dec jae scas pop jecxz imul xlat mov mov inc jl jae int3 adc out in scas movsb jb mov scas xchg stc outsl fisttp adc test sub push cmp adc idiv cmp arpl jl popa xor push daa sub dec psubb bound add xlat xchg inc mov xchg ss jne mov push add cltd repnz sar mov xor ret imul lcall loopne rorl mov jl mov clc jg inc mov es insb mov jge or xlat aas les sub xchg imul add dec push in sub inc sarl xor sahf mov mov movsl call shlb (bad) lock popa cmp mov add inc mov adc mov cltd adc lcall lret xor jbe jl xor mulb pop cmp ficomp mov out mov mov or jo fstl fbld mov test jmp int push add cli in inc cmpsl in push add shl sub imulb and imul cmc rolb hlt (bad) lret call pushf add xor mov repnz mov mov ret mov mulb out movsl xchg fidiv repnz mov mov outsl in mov arpl sbb mov pop mov js in adc mov jge insl je pop xchg loop push insl ja mov or mov mov sbb add xchg (bad) push pop mov pop movsl insl test jbe cmpsb (bad) inc imul and dec enter add std mov mov push cltd divl xor out arpl mov push jae mov push incb daa pusha sbbl leave sbb sbb mov ret xchg mov add ja lcall cmp cmp test push and scas push movsb (bad) jae loop inc lahf mov fisub popf cli mov ds call push int3 mul es push bound (bad) int xchg pop xlat xor andl dec inc inc mov add cli push mov call (bad) aaa insb xchg xchg aaa (bad) jb push cltd std sbb mov add lret (bad) mov rolb js inc lods aam addr16 mov push addr16 out pop ret push push or test push inc mov push imul lahf pop sarl cltd add loope pop repz std xchg xlat scas cmpxchg bound adc lods lock push fnsetpm(287 push in aaa xchg mov insl lcall sbb pop mov cmpsl aaa out andl push xchg jmp inc into in cmpsl jae sarl sub push adc mov dec cmpsl daa (bad) cmp (bad) in and dec mov pop lea stc leave imull aas mov (bad) loopne or into imul aad js sub in test jbe mov and xchg xor xor fwait (bad) insw clc cmp sub clc mov (bad) (bad) xchg dec repz jmp ljmp pop mov mov out popf rcrb xchg sahf or adc popl bound push js xchg out data16 out outsb xchg les leave andl cmpsb cmp add adcb mov jp mov jge xchg cmp (bad) fdivs mov mov mov stos movsl pop jecxz ret adc fistp jmp lahf xchg sarb or dec fwait aam aas pop pop es (bad) mov sub jle fcomi or sbb testb mov andl and mov mov cmpsl push jp lret cltd push mov fdivs mov mov cmc cs lea sbb mov inc adc mov insl xchg jl pop lods xchg cmovle mov xlat jle popa fdivs cmp out add lods lret dec jno inc sub add int3 xchg jo xchg sub adc mov enter and push mov adc push add (bad) div push lret add dec in lods pop pop pop lea mov cmpsb test pop call andl adc pop and push xchg (bad) jbe test insl jle popf mov mov and and pusha movsb xchg bound data16 jge mov repnz dec cmp push pop jge in pop or mov or mov int jne test push in aaa xor jge and bound cmp jns gs pop sbb cmp mov lcall icebp and cmpsb bound push aaa mov or addr16 and and dec add pop jge movsb fwait push mov inc and xchg ror mov (bad) mov aad sub pop add sbb js insb cmp les adc in add pop aaa push jns ja mov clc sub cmc xlat out into mov popf cwtl cmp sbb jnp lcall daa out mov and inc stos ret inc jns sbb out xor icebp dec adc mov ror lret cmp add sbb leave or xchg sub sbb xor inc cld pop out mov rcll sbb in adc lahf xor in xchg xchg repnz xlat scas jno mov mov fnstcw call mov (bad) dec shll jns out lock repnz dec call stos adc fisttpl add ss or (bad) push sbb fstl test mov loop fs fucomp mov (bad) xchg dec mov dec add jg xlat es stos xor sbb mov test repnz pop push mov movsl xor sbb imulb xchg (bad) pushf sbbl ljmp std movsl repnz push sub sub xor xor add xchg addr16 std sahf test test and movsl xchg in sbb sub cmp out dec jnp (bad) lret mov mov mov sub mov mov test mov outsb add stos movsb lcall ss adc ljmp loopne test dec dec inc cmpl rorb mulb xor push cmpsb mov cld les jl mov and cmpsb jae insl push inc mov and sub frstor aad pop inc sub repnz int3 and mov adc pushf out fnstcw adc add ret sub cmp push leave sub pop loope mov and lods into fs lret push dec pop mov or jne mov xchg xchg repz pusha cmc mov push movsl bnd sbb cld shrl adc iret pop sbb lods rcrb jmp in jle inc or aaa call sub xor movsb mov mov pop mov test dec xchg mov mov jp cld push mov mov and ds xchg (bad) xor out mov mov lret lahf pop je pop sub pop jge movsl jmp add mov (bad) mov inc test cltd push inc popf pop cli mov mov cmp inc data16 clc push test xor fistpl adc and mov pop inc or pop mov or mov out ja aad test fwait xlat pop mov call ja inc adc add mov addr16 fdiv mov push add call lods dec rolb fbstp mov mov dec aaa add jb fwait inc int and xor fidivr jl jo mov mov imul loope pop mov mulb ds mov xor hlt (bad) mov (bad) mov jge lds and aaa icebp add jmp xchg shrb mov dec push xchg jae loope ds push inc adc cld push addr16 jge mov dec rcll ret mov insl into sub rorb xchg pop mov add out cmp je imul and enter xor loop mov add fisubr pop xor mov mov scas and cmpsb (bad) cmc shll dec sub adc push xchg add jle ljmp scas adc nop push cltd mov mov cmp pop (bad) dec add pop push or into aad sbb and sub bound dec aam adc call mov cmpsl (bad) mov mov mov nop fcmovb xor cmpsl adc or fsts imul scas lods xchg push cltd ror bound mov movsl mov das mov int dec add pop ficom mov outsb xchg mov mov mov enter mov das repz out jne cltd jecxz mov pop pushf movsl idivl dec or sub (bad) ds cmpsl xchg pop dec mov xchg les sbb stc xchg sbb xor mov mov (bad) mov inc jnp sbb or fs in xor and lock and push inc pop push arpl pop cmp dec add mov pop and test push xchg outsb jecxz popf repz (bad) mov jns xchg mov mov movsl (bad) jl jae int3 sbb out adc mov adc sbb add movsl test jnp scas cmp inc shr popa jo (bad) xchg cwtl rol in sub push push push push leave mov xor jg sbb mov aad div mov xchg xlat int3 lds cmpsb push ja lds pop push (bad) mov (bad) shrl jle dec sti mov sbb cmpsl pop jo loopne iret jecxz mov jl sbb mov movsb lods mov nop jecxz pop mov in imul or xchg and daa dec and pop negb mov call pop dec xlat inc or out fnop mov loope jecxz pop shrl jb in mov mov pop cmp pushf add push pop aad add movsb push xchg daa roll mov sub aaa aas xchg in shr mov xchg cld loope pop cmpsl xor xor inc push out popf adc xchg xor mov and dec lcall outsb in mov mov mov pop mov aas pusha es mov ret (bad) mov jg imul or fcmovnb mov mov sub sub mov xlat int jns shlb ret sub xor jge lret insl mov sub in xchg dec mov inc lwpins lods (bad) xchg roll shlb enter (bad) imull dec fcoms movsb mov xorl push gs add sub (bad) lret and jns push js push mov mov cltd inc (bad) je jb es mov push lret mov mov sbb gs mov dec inc lahf fbld xchg and into sub push test add mov repz xchg push xchg rcrl test jne cld data16 in dec (bad) out mov pop mov mov es mov test xor les jne cmpsb mov popf mov and clc xchg pop sarl xor movsl stos mov add dec movsb mov andl je sti and xor js jge aas lret jge sub cmp pop mov adc push pusha fist pop dec loopne or mov push mov and sti add out xor scas mov movsb stos addr16 mov xor fdivl pop fwait in push mov xchg jecxz mov rcrl push inc xchg mov or out inc and or dec ljmp xchg push mov dec or pusha sbb mov or dec movsl mov push sub (bad) lock data16 jmp xchg (bad) cmc mov stos clc lret adc jle lret fstl pop xchg test aas popa bound subl add scas mov adc mov lods (bad) ret insl pop pop xor nop in stos jae iret push adc bound fs add add adc add sbb mov loope and test les lods ja push sahf stc adcl push cmpsb loopne push inc mov fwait mov ss jl cmp inc adc cmp negb adc and cmp jo movsl ljmp adc adc pop js push (bad) push mov xor mov or mov rorl inc aam ss pop pop div movsl into les cltd lock js dec jmp mov into sbb mov and jne,pn (bad) out loope xchg (bad) shll cmpsb mov or jp xor sub sbb cmpsw sub lods scas or sub dec pop fs notl inc mov push outsl stos mov and xchg adc orl push sbb inc dec js mov xorl imul mov xchg xchg out (bad) int3 xchg loop rcrl inc inc stos orl test cmp and and or movsl (bad) xor pusha jp sbb int3 mov out loop sub and jp pop in push mov push sub xchg pop xchg mov cmpsl xorl xchg leave mov xor mov jecxz xchg (bad) mov mov arpl xchg shll aas leave xor inc lcall pusha (bad) cmp add mulb mov mov leave (bad) push (bad) mov (bad) into jb iret xchg pop mov jmp inc fistl fwait pop movd pop rcrl cmp andb into pop call movsl push sub (bad) ret js xchg out or jmp or js int mov stos sbb into sub gs push mov inc xlat push nop or inc fwait mov repz xchg pop popf in lds frstor loope js stos pop cmpb jl cs into stc fildll mov fnsave in mov stos loope jns je add movsl ret cltd daa adc inc jmp aaa scas cmp bound (bad) mov ret sbb xor (bad) enter xlat cmp xchg mov add mov fcmovne jl lret mov scas mov out outsb int int3 mov inc and in aaa daa mov mov mov orl fimull adc movsb or (bad) test (bad) mov dec sub into sub cmpsb popf bound in pop test sub stos and mov cmpsl into cld arpl (bad) or mov data16 mov add xchg sbb sub or movsl repz mov das mov cltd inc int3 movsb aaa pop stc sbb mov mov adc push fmuls lea mov cmpsb inc ficoml inc xor mov xor jge (bad) mov repnz call and cmpsb and movsl out out mov cmp and icebp jnp pop mov test sub and std roll js shll sub lret pop loope popf xchg pop sti icebp out inc sub mov mov loope mov ret test push xchg (bad) dec mov mov jnp sub inc lea mov sub push jnp sub and movsl adc popf mov dec in mov pop dec cs pop call aad adc stos gs lock aaa mov cltd or dec adc sub stos ror mov dec addr16 leave cltd jge enter push push enter jo stc push mov mov loope mov cwtl add mov jmp xchg repnz je mov mov daa jne dec fcoml xorl iret sub mov mov shll movsb xor frstor push data16 mov pushf stc mov rclb push adcl fidivr insb fsubrs andl push loope xor push or pop pop cltd (bad) sahf in dec and sbb sarl imulb xchg mov dec xchg fs pop mov sahf xor call test push push test mov adc inc push dec sub xchg cli mov mov and insl jecxz dec add push sti cmpsl mov jbe sbb push inc push and fcmovb ljmp cmc cmpsl xchg ss sub shlb jecxz mov sub cwtl mov mov and ret and mov dec loope call stc push jle nop cmp jg notl loope nop insl add repz icebp in sub arpl loope out lods and sub in popa pop mov in push jl jo aad fld1 xchg push movsl fisubrl cmp sub mov addr16 mov cmp icebp mov push xor and lods pusha out adc jnp pop cmp movsb in jmp jnp push sub andl arpl push dec lcall daa bound add scas mov in xbegin jg sub fsts test in mov scas xchg pop addr16 xor jmp or shll jne ret add dec sub sub int mov daa xor jecxz lock push cmc ds mov adc (bad) repnz xlat mov push cmp test jae ret lea faddl cs ss out stos cmpsl mov mov pop pop pop nop cs mov out xchg cmp es push pop push arpl lock xor das pop gs inc clc bound cltd xor jae and sti (bad) mov pop mov lock cmpsl imul fist ljmp clc les mov (bad) sub stos jg stc dec lahf add bound lahf xchg inc pop lret sub fnstsw cmp dec sub adc push xchg adc mov cmp sbb mov adc cmpsl adc mov inc stos mov sub aam mov sbb xchg cmp call pop push xor inc cmp mov jp mov sbb inc sub test hlt xor negb push out xchg and out js lds imul jecxz nop mov out xlat loope sbbl cld xchg xor mov sub and imull (bad) ret and mov adc mov lret cmp lock xchg jno mov xor in jo mov repz (bad) mov xchg mov push push imul adc pop pop mov and push shlb push ds rorl lods loopne call addl push fldl aad fnstenv negb inc lcallw stos daa mov push ss lret insl fldenv inc adc fadds inc test mov or fbstp mov adc and aas jecxz mov lods lods and jp xchg cmp (bad) pushf sub mov fsts add inc popa add das adc xorps pop (bad) cmp adc xor stos xchg and inc mov add daa mov bound or pop mov sub sbb xchg jge xchg cltd mov pop push jge (bad) imul sti pop jno add mov inc fldl cmp xor imul mov ss shll js in mov imul push (bad) jp jmp je sub pop insl mov cli stos cmpsb test ret data16 in fcomps mov pop add mov fwait bound rcr imul int xchg jl lea mull popa lock mov push pop mov mov and movsb xor sbb mulb leave repnz shrb sbb andl gs in push and or sub cltd and pop in mov jo jmp or stos sbbl and xor mov cmpsl pushf dec cmp stos andl test xor std sti and mov ljmp mov std stos dec test mov xchg xlat jg cmp clc adc add inc lcall mov bound aam and std cmp inc outsb rol cmpsl add push bound cmp sub aam mov arpl bound fnstcw mov popf out inc bound in dec xchg mov mov mov mov mov push rcll (bad) jbe mov fbld jl cmp in cltd mov sbb and lcall push cltd or jle sbb lods mov rclb cmpsl mov ljmp jle add mov pop push scas sbb shlb add loope (bad) mov repnz push into roll imul arpl movsb aas imul and sub je rcrl call and mov (bad) out loopne arpl out jecxz jge (bad) xor stc push into cmpsl fidivr gs pop negb xor imul scas add mov xor mov jmp loopne pop mov xchg push mov xorb push jo (bad) xor xchg lcall xchg mov fnsave dec mov into pushf xchg fistl cwtl out adc arpl jno test movsl lcall xchg push jmp sbb push mov fistpll jmp mov xchg add mov add mov (bad) dec and iret sub cmp mov cwtl xchg movsl and inc sub jmp lcall shrl cmp pop (bad) call cmp mov aaa sub icebp sub cmpsb and arpl cwtl xchg sarl pop sbb add mov lcall adc sub mov iret sub inc ret sbbl inc pop pop insl in jg inc call aad fimull or (bad) ja sub xchg jle sti mov xchg pop cmp jg imul out jb push cld icebp jge or xchg pop lret xor pop xlat fstps push movsl jge cmc ljmp xor sbb xchg dec enter iret bound xor push xchg add test or inc sahf push stos mov xchg and dec mov inc icebp dec and inc loop mov pop sti dec ret or inc dec aaa mov xchg pop push jmp adc test mov dec js popa sub adc and mov ror in ja sarl leave adc cs jno mov dec enter scas inc aad daa add in inc loope test adc jns bound cmp mov sbb cmp iret (bad) lea inc cs in loopne or scas rcrl scas and bound push push stc mov imul in mov (bad) aam rcrl ds out clc or rclb pop cmpsl ljmp cmp (bad) fisubr mov outsl lcall add push enter sub movsl loopne cmpsl mov adc ret mov mov repz sbb and jmp sti call cmpsl mov call (bad) repnz sbb inc es (bad) repz cmc lds addr16 cmp mov sti aam fidivl adc bound jmp out outsb movsl (bad) rcrb rorl insl in and icebp pop mov fldt and xchg aad lcall pop adc push loope out sbb or in movl mov adc movsl or mov pop insl push push mov lock movsb mov cmpsb inc push iret pop mov in fcoml jg cmpl fdivs sbb (bad) (bad) rolb mov mov xchg test in das dec push lds inc into test and xorl dec push aaa sbb bound sahf mov fcmovnbe loop popa scas les push cmp (bad) rorl (bad) dec cmpsb call push lock les dec xchg mov mov nop fisubl sub je adc push pop xchg popa (bad) icebp popf js lock pop (bad) adc scas sbb push or lahf mov (bad) jo mov aaa pusha mov test cmp jnp cltd xchg add daa xor mov movsl rcrb and cmc dec push sahf or xchg rorl pop jg mov xchg cmpsl out addr16 aad test popl sti cmpsl xchg pusha fcoms xlat add movsl pop or xor in sbb imul in cmpsb call mov loope aaa mov popa (bad) lods movsl outsl adc cmp xchg mov mov (bad) xchg scas lods or mov cmp dec pop ja mov stc pop mulb dec xor cmp xor sub testb push xlat mov push xor mov xchg jp mov test push jne loopne cmpb and aad mov xor sbb add and dec or mov sbb (bad) sub xchg nop notl inc mov insl in loop out cmp cld sub subl mov fisttp (bad) mov mov stc jmp mov (bad) mov pushf and inc sbb jo and enter xor mov cmp mov mov and test cmc rcll ja dec xor add xlat mov movsl test cmp mov cltd in jnp and mov bound push daa xor cmc mov inc push add ja xchg out adc scas xor lods jne jo cmpl push mov cmp xchg xchg test add frstor leave mov jg inc cmp lock push sbb cld xchg cmp loope xor push add mov out lods loopne mov pusha pop mov mov jns fnstsw fs xchg movsb insb inc add xchg jne loop mov ja xchg mov xchg int imul scas fwait dec push in hlt and ss jecxz mov mov mov mov dec repnz and xor mov mov sub sbb mov sub mov dec es in pop lock adc lcall (bad) pop aam xor daa add inc mov dec scas movsb lcall daa lahf mov xchg (bad) xor pushf movsl mov push call pop xor repz and jmp outsl lea mov and repnz (bad) fucomi ss xchg shrl fldcw fsubl push iret inc pop jns mov insl out test cli mov loopne jo int3 (bad) arpl ret jge stos mov pop mov mov mov xor leave in iret loopne mov pop (bad) aas sub cmpsl jnp orl cmp xchg cmp (bad) sahf sub lods add daa aad jae and and sbb out push dec lods cmpsl stc pop cmpsb add and mov leave pop (bad) jbe pop orl das fidivr leave xchg xor or push pop test cwtl sub popa ja lret xchg arpl (bad) aad outsl bound push int3 add mov jno cmp cwtl js in hlt insl hlt ret pusha iret xchg dec cmp or rcr in pop shrb xchg loope dec adc mov push xchg imul dec jmp push mov mov gs jmp push out jne pop cltd loop sub or mov jg popa test outsl pop leave jnp pop aas daa lods insb stos and imul fiaddl mov lods jne sub stc pop std cltd popw leave aaa pop dec or mov hlt popa stos es push cmp call sbbl mov hlt xchg xor rcrb (bad) aad xorb xlat push icebp add pop xor (bad) loopne and call cmp jne xchg mov arpl bound xor sbb and xchg jle shlb in lock aad mov inc and cmpl popf cltd fidivrl mov ret mov jae imul mov mov xchg (bad) (bad) movsb mov cmp mov dec mov out gs xchg movsl sbbl push push push dec xorb xlat dec adc push dec js xor mov fisub pop adc adc ljmp and movsl shll es in inc out xchg jns mov test jg or mov xor sbb xchg insl add lds dec addr16 lods stc pop cmp jecxz dec aad cmpsb add mov mov mov mov divb push xor mov add lret cltd dec add and xchg jns or and mov inc rclb test jge fbld mov or loop and inc pushaw xor or pop xlat sbb adc lock fs js pop inc xorb fistp xchg cmpsl cmp push mov dec in popf sbb int push or and in and data16 pop cld cmp mov test adc dec mov bound dec and mulb lods cmpl xchg jno adc inc xchg add lods cmpsl insl repnz (bad) jecxz sub cltd out test xchg fisttpll fstpt mov inc lahf jns cmpsl and aaa js ret xchg loopne push sub pop push andl jne scas (bad) fdivr xchg inc push stc pop pop shl cmp movaps mov xor out push in add aas enter sti imul pop scas inc xchg arpl mov cwtd stos cmpsl cmp (bad) pop xchg mov add sahf loopne iret ret push cmpsl pop jmpw popa cmp inc add lcall xchg jno xchg mov jmp (bad) in into (bad) dec arpl scas push test adc repz jge mov or data16 xor (bad) bound cmpl stc mov pop dec add lods mov xchg sti in scas cmpsl test sub (bad) mov push (bad) pop mov jle cmp jp mov in hlt jae sub ja pop les loope inc jbe clc cmp cmp scas push pop push cmpl jnp (bad) cmp sub pop in inc mov rorb add orl pop (bad) fwait andb lds popa les sbb jmp iret xchg stc xlat insl and arpl cmp mov lods push jle jecxz mov push ret sub les cld dec mov (bad) inc mov push cmp push mov pop push add sbb mov loope push mov mov cmp jns inc or (bad) mov pop cmp xchg xchg xchg hlt mov xchg pushf lds push fldcw pop js jo test ret mov cltd incb ret mov cmp jge sbb mov mov sub pop icebp pop xchg inc insb push mov pop gs pop fisub mov sbb js add or pop mov (bad) les pop test xchg sti ret pop std and sub mov mov adc inc push shl or dec xor xchg pop sbb arpl inc scas cmpsl popf mov sbb in gs push fisubrl cmpsl add pop mov and pop loope pop and mov mov stc shrd mov lret add push xor sahf stos sbb stos movl movsl scas test test movl xor inc lret arpl mov mov gs hlt subl mov jne cmp scas shll push es insb leave std adc dec sahf mov pop xchg cmovle int3 mov sub xor and imul pop cmp inc xor and call (bad) mov jmp pop push into mov cltd dec mov jb pop push sar or cmpl xchg sub add sub hlt jg cltd (bad) cmpsb sub pop shlb sbb adc (bad) jno enter std and lods xor and mov cmp dec mov add les repz inc fidivrl fwait adc xor test ja mov and sub push mov lea sbb mov xchg cli push xchg and fwait push cwtl pusha push imul mov xchg add mov mov mov fdivrs mov xchg sub fdivrs push add jo cmp jne mov jle xor mov test aaa and xor int3 mov loop (bad) mov jg pusha xchg xor jb cmpsl sbb mov call adc jl popf scas cmpsl iret push cmpsl lea mov mull arpl int jb icebp pop arpl sbb push loopne iret mov movsb sarb mov sbb pop xchg enter inc rorb mov jns sahf mov xchg cmpsl in xchg mov ret push imul adc leave and xchg or xor mov xor fucomi pop add imul add dec stos lods frstor in add mov mov cmp (bad) int3 es xor shlb nop fidivrl dec cmp mov cmpsb iret mov lret test and jg movups and loop rcrl lods lods cmp out cmpsl cmp rorl rorl mov sub iret push movsl xlat jbe xor adc aaa scas or mov (bad) xor and dec fisttpll es xchg mov xchg jg jecxz fisttpll enter jmp sbb xor jne push mov mov call xor lock sub push into inc lcall nop sbb or ds movups les pop adc mov and xchg ret mov sbb or mov add mov cmp adc push mov or mov add cmp dec mov mov cs mov adc lods cmpsl mov (bad) jbe xor push add mov push arpl cltd add inc or scas aam hlt or xchg js movsl out fadd adc dec adc mov sub movsl (bad) std push mov iret xchg jg aas pop dec push add movsl or jb pop (bad) movsl xchg sti leave mov cmp imul stc push rorl out and or adc mov loop bound cmp mov xchg inc bound mov lock loope xchg loope pusha (bad) out mov mov shll ror call test cmpsb mov pop (bad) sbb inc (bad) iret bound pop movsb outsb into mov pop pop add leave sbbl push and or insl scas into fistp push stc iret xchg mov lret bound inc mov or and or dec xor push out dec lds test cltd ljmp fidivrl pop mov mov mov xor sub jle cmp adc xchg xor push repnz xchg xor sub cmp (bad) mov (bad) into or mov jp leave mov jns mov lcall xchg enter pop xor pushl push sbb sub and test fs push xor lods aam dec js ret mov inc mov repnz ss mov movsb mov or jno cmp dec add stos divb jle mov dec xor dec add shlb rol cmpsl mov fldenv pusha cltd cmc insl push (bad) push lcall mov jle mov shll cltd divb and inc dec mov sbb (bad) mov adc cmpsl mov lcall movsl pop outsb cmp dec lock mov add aad sarl enter push lret test adc adc lcall jl lret sub rcrb aam mov dec mov (bad) xchg les rep stos (bad) mov mov test push gs cld pop sub mov cmpsb ret jmp mov mov aas sbb sarl dec imul xor mov cmp in and movsl sbb test in push xchg insb data16 mov mov cltd aas jbe,pn rcll (bad) mov inc dec xchg pop pop repz hlt cmp fsubr or mov or cmpsl inc jecxz sub clc cmp out jecxz push decl cmp mov outsl lods inc jecxz mov and mov cmp mov les xor inc shll cltd pop cmpsl popa sbb dec es fsub push mov pop push pop fsubrs fnstcw sub jae cld mov movsb cld pop test push push cmpsb sub call sbb sub sbb cmpsl lcall mov xor xchg mov mov imul or mov mov adc cmp add jo xchg scas cmpsb push push scas rcll (bad) nop or (bad) xor push mov push add mov out scas daa pop repz sahf mov mov cmp sbb cmp enter xor cmp or ret mov fmull aaa mov repnz fcmovbe jge jmp (bad) out xchg mov cmp (bad) or sbb js mov xchg rolb dec bound mov insl ror pushf repz ret mov sub xchg mov sti scas jbe ss mov test dec repz adc mov inc hlt das (bad) in push push sbb fdivrl xlat mov cltd mov cmp dec and sbb or jo pop lock imul or xchg and mov pop jmp mov ss shll jmp jo,pn inc fldl lods pop lods std and (bad) or add sub mov xchg imul vaddsubps inc idivb sbb add inc popf mov and cmp xchg mov std ss add stos mov das sub sub cmpsb xor fsubr xor xchg pop push sub xchg fisttp xlat dec hlt sti aas or xorl xlat mov ror arpl mov mov fsubs hlt repz cwtl cmp jge dec mov out add cmp movsl movsl inc bound xor out pop loope sub xor lods push cmp mov xchg jp ret rolb xor shlb mov sub (bad) loopne andl in adc lds sub dec sahf mov insb nop (bad) mov bound adc aaa or push rolb pop xchg xchg fnstsw stc cmpsb ss mov and fs adc sbb test push bound pop pop mov cmp aaa (bad) sbb xlat test jecxz mov mul adc jle int3 sub mov nop cli fwait jl xlat movsb mov out (bad) or xor mov push out cmp aaa jns mov scas movsl cmc xor fisubl sbb cmp daa xor mov stos mov pushf push mov sub xor fs (bad) aad mov insl mov pop or jnp adc dec inc ds cld rolb sub mov cmp or call lods sar pop xchg adc gs movsb in js and bound push stc cmpsb xlat cmpsb repz inc pushf and jl notb xor aad fstps andb rorl fild (bad) lcall sti cmp sbb add lods roll outsl (bad) sti dec xchg loopne push dec lods mov add test adc clc push ret nop sub mov std or jle (bad) xor dec cmp gs fabs (bad) mov sti push dec or mov aad mov mov inc nop push and ja fstpt xor fstps push push int3 lods and aaa dec sbb insb pop push cmp dec or das mov out fcomi jno pusha mov mov fisubl mov xchg push ljmp pop lret push xlat xchg addr16 insb dec mov pop cwtl imulb loop mov mov js movsl mov in and xchg mov fiadd push xor js and pop int3 xchg outsl in xchg jbe iret xorb popf mov push inc cltd adc xor dec aad loop and stos jle sub ja pop xchg (bad) sbb stos add test jle bound popf mov and ss sub (bad) aaa jmp add dec ror lods (bad) sti adc stos cmpsl inc lret enter inc movsl data16 pop xchg mov xchg out das mov (bad) push inc imul lods or fsts inc mov mov daa dec mov xchg insl loop mov sti push lret cwtl mov ljmp out jle push (bad) lret sbb cbtw movsl add jno mov notl sbb cmp cmpsb pop adc mov push dec add push mov push pop pushl ss cmpsb je andb in in mov xchg mov lret and xchg insb mov ja shll lcall add test outsl mov mov xor mov movsl imul in icebp (bad) push mov jae mov push xchg scas lds js scas push mov push lcall cld or inc mov dec sub mov outsl icebp jns,pt mov (bad) dec movsb lods lcall ljmp fdiv jle mov sbb mov data16 sbb mov push inc movsb push mov mov mov xor cltd std fdivl testb in imul and pop out insl mov jb daa xor fmull mov mov inc dec (bad) mov pop cmp adc cmpsb mov inc sbb sbb jl mov cltd rcll inc cmp cmp mov popf pushf mov mov sarb jbe push mov sub cmp mov push not call xor out jne mov or int mov add and imul and mov xchg mov aas cmp mov mov sbb xchg inc or jecxz mov mov and or or movsl scas lret stos xchg cld cmpsl mov inc lods lret add push pusha pop jle addl mov mov popf inc lea cmpsb mov mov addr16 aam xchg dec popf inc mov cmp sub mov xchg jne mov and inc xchg cmp ret push test mov mov rorl cmp pop ret fcomps mov xor scas dec inc cmp cmp adc jns cmpsb bound and adc mov jmp mov arpl add js test bound dec sub pop mov jno and mov repz pop je fimull les sbb lret lods (bad) ret (bad) aaa xchg cltd add jmp mov dec (bad) jge lret mov push das and inc hlt jns and push std loope lds pushf pop push roll or mov push (bad) stos and pop or (bad) cmpsb sbb xchg leave ror mov lea xor sarb xchg in addr16 pop xchg (bad) call fsts cmp xchg pop popf xor sub sbbb sub mov js imul and push and mov movl into pop bound mov daa xchg sub mov mov add dec push pop sbb fstpl mov sarl bound inc jns loopne lret pusha push pop loop jl pusha out cmp fst push (bad) mov pop lock jns gs push and into xor fiaddl mov lret mov (bad) or test sub xchg cmpl pop mov leave inc out gs mov xlat or ja inc jb (bad) adc repnz mov outsb mov mov ja pop sub movsb iret fwait adc test jle hlt xor mov push lods scas mov aas (bad) outsb arpl and sbb mov bound out sbbb or repnz in iret adc cld mov shll in out mov push cmp push mov add mov jecxz,pt add cmp pop xor sbb mov and dec jno mov push enter rcl sbb (bad) call into fisub imul daa (bad) mov cmp mov xor repnz mov pop push adc xchg lret movsb out and jmp mov mov lods jbe scas jl dec sbb xor jmp dec add pop aam mov jle repnz mov dec sbb out leave aad xor outsb les jmp ja mov or loopne (bad) mov pusha dec add lahf pushf xchg sub add cmp cmc jbe cmp jmp jle sbb mov sbb loop adc mov js inc mov mov and xorb add jns pop pop inc pop mov (bad) mov sub icebp jmp mov pop mov call fisttpll push and or loop leave movsl popa push add mov aaa scas movsl jo lret (bad) scas xchg out mov inc adc dec ror mov jmp dec add xchg inc xchg sbb sahf adc xchg and inc mov mov (bad) adcl jo js test mov inc xor and dec mov xchg adc push stc mov rolb push cmp mov insl inc (bad) daa sbb push dec inc adc cmp sbb mov fdivrl and mov rorl es mov shll xchg pmaxub cs jae lods xchg and loope pop mov adc sbb cmp dec dec scas adc negb pop lret subb fistpll ss dec cltd jae mov sub jns (bad) test into iret mov mov cwtl aam xchg daa and ljmp test sbb into dec jecxz sub push mov stos cmpsl xorl out pop fidivl shlb mov stos movsb enter mov sub (bad) xor hlt mov cmp inc (bad) pop mov or aam pop jb cmc fisubl push adc sbb or std ficom mov push loopne pop in xchg rolb mov mov cmp orl insb lret or mov (bad) push dec stos mov clc imul lcall fsubs xchg mov push shl fisub xor mov cli xchg push or inc lds lods movsl dec (bad) push scas mov mov out outsl jo xchg js int3 cmpsl or push in mov dec icebp xchg out andl jge xor inc cltd cltd arpl sbb repnz mov scas add pop mov push bound mov cli pop pop movsl outsl push ds enter hlt ljmp in mov pop inc mov or mov movsb mov dec adc scas out mov cmpsl dec push jae cmp repz pusha fnsave (bad) nop enter jno xchg push clc fisub inc rcll inc cmpb jge sub jne inc sbb or sbb test repz test lock movsl (bad) sub ror sub cwtl out mov rolb cmpsb mov lods cmpsl mov mov pop ds insl addr16 cli mov andb lds sti adc test or movsl std adc out cltd out arpl dec adc and add or mov shll fldt dec mov in clc pop inc adc mov inc push mov sbb shrb mov lcall aad fadd std int3 mov stc xor cmp std cmpsb mov cmp xor sbb cmp dec adc in scas roll xor jecxz sub dec out rorb movsl push lods scas outsb mov jbe movsb (bad) mov mov std and inc shrl sti and xlat test dec mov push sub test cmp cmpsl xor into jl or stos std push sti inc sbb cmp clc mov call enter js mov sbb xchg outsb jns mov mov mov push rcrl inc fsubrp popf mov jg and subl mov mov or sub jb xchg ret xchg mov imul jecxz,pn push daa cmc sahf cld daa push mov cli sarl mov rolb or xchg les into (bad) in lcall sub sbb xchg cmpsl lock leave and je in cmp movsl cmp adc mov pushf lock mov cmpsl adc fnstsw cmp int mov lahf mov out lea push cwtl int movsl je mov cltd addl decb push inc mov and xchg das idiv dec dec fs add mov ret mov xor push mov icebp imul sbb jecxz or imul out (bad) mov pusha in and push into shl push iret sbbl cmp js sbb jmp in jg,pt add mov (bad) js xchg repnz xchg (bad) mov in scas and push push fiadd cmp sbb test push add repnz mov pop and (bad) dec (bad) pop test sbb cs repnz mov adc mov jp mov or push iret loope adc mov mov lea jl fidivl inc mov mov rclb dec pop divl cmpsl out inc cs pop jne mov movsl adc inc adc adc pop adc inc jge es lcall bnd outsl mov mov repz in fsubs pop lcall mov inc adc mov xor es out pusha insl cmc mov mov ss aas jecxz lret mov jb dec int cld mov shll push imul enter xchg movsl jmp aaa lods (bad) xor stos mov mov arpl pop push js mov cmp ret jnp xor pop adc jnp fwait pop jle xor mov clc imul (bad) mov lock aam (bad) jbe jle icebp gs imul cltd (bad) loop cmp je jno cmp sbb add pop (bad) lcall push test sarl ja (bad) stos dec push cmpsb mov in shr ss dec lock lret adc jns mov mov sub push xor pop insb popf xor lods mov stos cmp loopne cld jns or dec inc push adc jb bound insb hlt adc cmp xchg addr16 cmpsl cmpsb or les push or stos sbb adc je pop enter mov adc js stos push fnop mov movsl hlt fiadd cld xchg push mov jno cmp dec jno fdivs ret mov and popa test roll pop and je loope mov sub dec add fnstcw pop jns test (bad) jl fistl xchg pop (bad) xchg cli mov (bad) in xchg or mov xor les cmpsl push arpl mov aas adc mov stos jo test mov cmpb ficom mov xor xor or out sbb and dec or sbbl sarl dec jns lea sub fistpll mov adc rcrb popa cmp mov cs xchg repz pushf dec adc pop cmp lock jb out mov insl icebp jo xchg jnp daa fs xor lahf sbb push bound mov mov mov jo das push inc jnp aas dec pop jns test jo xor into mov mov cmp cli jl xchg stos sbb and sbbl cmp cmc das mov stos pop incb adc int3 loopne or pop popa sbb (bad) mov xchg mov xchg xchg xchg pop mov ret push lds ja pop lods mov push mov jo cmp adc lahf jmp mov test rcll pop sbb pop push jmp xchg test mov xchg pusha pop popw out test inc pop cmp mov movsl jg cmp call jmp bound adc mov out cld dec lcall pop push cmp xchg pusha sbb mov mov dec add jge sub bound loop ret ja mov stos pushf dec cmp or dec inc hlt pop mov or in push jns ret iret and cmp mov mov mov jns xchg adc cltd cmp pop dec icebp xchg imul movsb push mov add stos addr16 test mov add popa mov pop or mov ficom push lret shll mov pop call adc pop xchg fisubl add or (bad) sub mov jle aad (bad) push mov stos or shl mov jae xchg jl aad inc mov xor daa test mov sbb and adc hlt sub lea push xor (bad) aad push adc sub cltd mov jnp leave movsl push push pop movb and adc mov aad xchg xor mov fnstsw rcrl aad xor mov and movsl fisttp xchg (bad) push inc pop scas mov mov mov (bad) mov or sub jmp xor push lret xchg cmpsl dec push lret mov repnz mov mov inc inc mov mov mov xchg or inc jo out cwtl mov xchg adc movsl gs dec inc imul pop lea mov cmpsb cmp mov inc or sub int mov scas mov cltd mov es dec mov dec int imul xchg and cmpsl sbb dec call test lret xlat movsl mov mov rolb movsl cmp test scas or xchg mov push test add mov cmpsb cmp popf cmp js and cld cmp aas insb xchg xor inc jmp movsl xlat das ds gs sbb decl sbb cmpsb das aad mov mov jecxz mov cwtl mov jae cmp daa sbb jmp dec add cli pop mov movsl sub mov cmp shll xchg repnz xchg mov push jns sbb cltd xorl (bad) mov adc xor mov scas mov fbstp and out xchg scas mov pop (bad) std rcrl lret shll inc push cmp mov dec loope int3 xor sub adc movsl mov insb std push pop bound (bad) mov xor push or mov mov mov xor shl popa xchg cmp mov imul jo mov addr16 sti mov (bad) mov sbb das insb pusha pop ja xchg and lods mov mov fidivr ret outsl repnz lods cmp nop mov inc push je mov jae and and push loopne aam movsb sbb adc mov lds push dec xchg jae jns je cli push (bad) mov and xor jb sub repz mov daa dec or sahf xor xor aam jns mov jmp mov mul sbb or inc mov mov sub test gs jg bnd loope (bad) xchg std or outsl rcrl ss pusha push push sti mov aam pop or adc int mov stc push bound fisub jg movsl iret or add out cmc imul call je (bad) xor mov lods xor dec ss scas mov mov stos push push xor push and cmp add sub xchg jb push popf mov mov jae stc loope mov jo in mov inc bound xchg pop loope and cmp push dec cmp out fs lock jno or (bad) test cmp aas push pop cmpsl inc dec test dec sbb or push or popf mov add daa and (bad) cli loope ja movsl sub mov xor mov dec pusha lahf ljmp loopne cwtl xchg xlat mov inc adc mov ret mov pop inc mov dec add adc sahf rorl loopne mov add leave adcl push lret mov and (bad) scas xlat dec movsl push inc popa dec or cltd mov in mov ret jo rcrl jmp cmp sbb ljmp mov je sahf mov rorb test call cmc adc mov mov mov pop test lcall mov push nop mov xor adc and dec test push mov in mov push jge dec orl dec mov or pop test mov jp jbe mov roll push movsb notl imul lret cmpsb xlat push loope mov push data16 inc mov mulb cltd mov call insl mov xchg (bad) outsl pop pop fidiv test sub loope cmc pop cwtl mov inc mov iret xchg loop cmpsl push ljmp popf inc movsl arpl xchg xchg dec xor xchg mov dec jns out inc adc sub sbb in xor sub adc inc adc xchg imul int clc mov xorl or loop les loope pop mov mov ljmp or pop imul dec cmp pop mov lcall mov fmul and arpl adc inc sub test es pop sbb (bad) enter addr16 sahf mov mov mov adc mov scas js mov lods aas ret and out or dec icebp loope adc mov mov mov scas lcall xor mov mov ret aas mov bound sbb pop test dec jb movsl es mov sbb push test mov (bad) rcr xchg ret and int3 insl mov sarb int or sbb (bad) cli inc stos add sub xchg lds pop mov push sbb aaa rclb xlat mov mov daa jae cmpsl jns outsl mov xchg loop mov pop addr16 and repnz fwait mov cmp mov fiadd fstps aaa jmp xchg mov lea and jle pop mov ja push push ss cmc test jb movsl xchg mov daa fs dec dec xchg (bad) mov cld dec cmc mov test push (bad) xor icebp jecxz xchg sbb jge bound cli ret loope add jl push jge xchg das popa in push lret mov scas stos adc push cmp out in gs mov mov cmp push xor xor pop jns shll bound push sub mov jns movsl call rorl ds mov (bad) dec add loope stos int push mov leave insb mov or popa xor mov fcmovnb repz sbb frstor test jnp stos (bad) jns xchg pop sbb adc cmpsb and push mov rorb daa and int popf adc jp pop cmp cltd movsb sub sbb inc in mov subl dec je and mov sbb cld push mov inc jmp popa fcoms cli mov mov lods xchg xor movsl aad mov cmpsb sti cmp xlat sbb xor inc and mov ret mov xchg xlat das in ds insb dec mov fbstp mov xlat aaa lds stos scas mov jo (bad) pop fnstenv sbbl out xchg push adc jg fmuls push push pop pop lcall sbb jg sbb movsl test pop and jg mov shlb cmp popf les shr (bad) cmp xor mov mov loope into cmp pop mov repnz lret jmp mov pop xlat jnp xchg cmpsb out (bad) inc fstps adc push insl inc (bad) out xchg sub test les ds imul out ljmp mov inc mov inc dec sub jnp jmp test cmpsb pop and pop push pop sbb cmp (bad) inc mov in fs cltd sub mov adc sti jl cli xchg mov dec or xor xchg push test mov gs add aaa stos push xchg loope je xchg pop or cmpsb adc mov stos fisubl in ficomp (bad) movsl les add aam in add inc (bad) aad mov jge fs mov loopne jb addb lcall inc adcl push sbb js dec mov add lock das popa fcmovnbe or sub notb loopne xor dec jg jns lods fwait popl jno jnp sbb pop cmpsl or bound fnstenv lret lods lds gs test ljmp dec ss xrelease out nop push sarl adc enter xchg sti lret jl jnp dec cltd iret sbb andl jns aaa subl mov movsl scas xchg test pop lods or and dec push in jb push icebp mov xor xor lods adc add push or or out test inc data16 repnz ret insl imull addr16 daa (bad) sti ja jmp gs cmc es and dec add pop cmpsb rol lcall xchg push pushf mov (bad) negl or inc xchg lds (bad) mov mov in addr16 or mov pop sub sbb add scas and mov orl sub loope xchg dec adc and mov gs mov and (bad) loop dec push popf cmpl nop fild sub sbb or push lret fsts repz fsubl and cmpl icebp shl mov mov mov push adc sbbl iret fs adc dec or (bad) and pop enter (bad) in sub xchg cmpl push or das loope sub movsl pop fucomip pop sti cltd addr16 aas lcall cmova andl sub fnstsw loop movsl and push dec mov mov adc mov jno cmp mov xor notl mov andb mov mov push rorl and inc adc sbb and xchg mov insb rolb mov and into mov mov inc out inc or call mov cmp pop cli jb pushf jle jmp repnz mov (bad) xor and adc rolb outsl jns fadd xchg mov pop or das sub scas subl cld je jl movsb adc loopne adc mov sbb les pop (bad) imulb mov add sbb mov scas stos sbb fs pushf mov popa mov popfw mov in sahf mov int3 mov jmp sub xchg ljmp add xor mov mov test cmpb mov push lret movsl lcall xchg ret pop insl push outsl jecxz aaa andl inc loope divb xchg imul xor daa test and out sbb inc sahf test xor pop mov ret lahf mov in insb xor push sti pop hlt ror lret test out jmp dec mov xchg inc cmc jp xchg add lret ret mov adc ja and shrl ret dec sub xor loop sbb adcl cmpsb push cmp jl sbb out jge dec test pop pop (bad) shrl cmpsl pop cmp iret adc jns or xor ret movsl cmp mov inc and jl xchg dec aaa push inc jecxz in push xchg inc adc imul (bad) icebp mov cmp pop fs mov sbb dec stos pop loop movsb aad cmpsb scas cltd fwait push pop inc scas or xchg mov out adc stos movsl les adc clc pop dec push imul sahf sub faddp in push out cmc push test push pop icebp sbb jecxz push test movsb aaa ret xor xchg jns jle leave cmpsl xchg movsl add dec cmp and mov outsb addr16 cli jle fscale push pop mov dec (bad) arpl cltd (bad) lea cld into movsl xor cmpsb xchg mov fnsave ficom jns (bad) pop movsl je mov std out pop xor mov push adc shrw adc xchg lods sti jns bound les xchg int3 sbb ret cld or fldt push stc in mov sub mov in loopne cmpsb mov jbe push jo shrl pop xor sahf popf adc in inc fs xchg mov mov push jmp loope js jge aad mov pop cwtl test bound loopne and popa and dec mov xor (bad) (bad) mov in and data16 (bad) stos mov pushf xor or mov ret inc cmc in mov pop mov iret lahf push int xor or jp cmp lods jecxz popf mov mov jo sub cmp decl push xlat jg xchg pop mov popf inc pop cmp bound push rcll xchg fidivl jle loop pushf or inc cmpsb bound ss ret fisubl pusha pop or mov sbb xor sarb fdivl xlat mov outsb xlat sahf mov adc (bad) into mov jl stos imul cmpb mov mov (bad) and lock lock mov xor jl jmp lds cs les (bad) mov cmp and test push pop int in sub adc cltd jg xor jns jns gs sub outsb push jmp xchg push jmp mov xor mov movsl outsl jmp inc xchg shll jno fist sarb mov cltd xor jns dec ja xor in mov in push sbb cmpsb mov ss sarl xlat repnz loope js mov leave test dec mov mov or jo mov mov aaa xchg mov mov add loope cmpsb xor inc or adc icebp and mov mov adc nop mov jge jmp test (bad) inc sub lahf mov cmpsl add or les jge xchg push mov scas and std mov cmp cli pop jp cld cld sub or imul and xor in push mov lods xchg jl xor mov sti pop aad jmp mov push (bad) fcoml jl jp cmpsl jle sub cmp mov cmp add lods scas shrl lcall (bad) cmpsl jbe pop adc insb mov lock xchg pushf mov sub or and ja jns mov jbe adc mov mov jo or mov nop xchg in fwait xchg dec mov inc add xchg push aas push (bad) mov fnstsw dec stos aaa movsb xchg mov pop imull cltd pusha scas test adc mov mov popf mov jl cmp cli pop xchg (bad) mov inc sub dec xor aam shld lods mov mov cmp pop sub mulb cltd mov jnp xchg fisubl vmovaps inc cmpsb cmc imul imul add stc movsl je cld lahf mov jp or pop hlt dec sub and or pop cmpl dec sbb adc dec sub mov add jecxz sbb outsb cs and sbb (bad) cmc jnp jns test sbb jne mov (bad) push inc jbe insb mov pusha mov and (bad) push mov pop mov xlat orl fidivrl and sub jge aam push popf aad js popa scas mov aam les mov or xchg cmpsl addr16 xlat fcoml loopne xchg into (bad) jb sub pop mov aaa mov inc sbb or xor inc aaa std icebp sbb fisubr lds jo (bad) mov mov aad xor mov sarl in je xchg lahf mov jne mov repz les and or mov ret out sbb int3 cs dec in mov or pop je mov push iret adc xorb gs lds cmpsb testb xchg data16 mov (bad) mov push popf aad mov and and and cwtl adc sbb jmp adc cmp nop mov stos and insb mov imul popf dec rcll or lds addl xchg cmp icebp sub repnz daa inc stos lock stos lods sahf and sbb pop rorb clc pop xor lock cmp and mov mov and scas lea dec call test push ret cltd mov fdivrl sbb xchg lock xor insb test aaa sbb ds and push lret xchg xchg lods movsl xchg mov outsb in sbb mov mov or fnstsw mov mov in jg push scas mov inc fcomp jo outsb mov jg loopw mov dec add test jmp lods mov dec cld movsl or mov and dec push js fcomip add imul mov pushl mov mov movsl gs fsubl testb jge pushf movsl les pop lahf mov ret lret mov js subl imul cmp out cltd sub inc jmp and (bad) mov dec add mov (bad) mov es mov mov xchg mov xchg stos xchg adc or pop (bad) or xchg fstpt mov add lods mov lods mov (bad) hlt xchg jmp mov test xor jl stc xor sub lods movsb pop lds imull daa sbb mov movsl or ja cmp mov movsl cmp jmp cmp outsb test daa sarl fimul lahf sub test movsl sbb mov add mov pusha out mov mov cmp in jne mov and iret mov jp sbb pushf mov (bad) ds out mov pop inc cmc pop adc aas push xor mov fstpl or push or pop mov add inc inc mov enter adc lahf push cmpsb (bad) aad stos sbbl ljmp stc shl push dec pop fwait push mov sub into int3 mov imul movsl push pop fmuls sub jle jge loop sarb cwtl and pop and or popf cmpsl pop (bad) mov inc mov sub (bad) rorl jnp jbe jb push jle ret data16 cmp push mov and mov xor loope andl das cwtl xor add stos lahf dec stos cmp dec sbb (bad) idivb bound iret mov jecxz leave movsl lret repnz adc int pop mov sub test fisub (bad) add cli and pop add aad xchg pop das jo insb out call pop fidiv and xor incb nop dec je out cmc (bad) xor and enter and imul pop lret hlt sub pop mov xchg inc push gs sbb pop stc adc push jp cli sbb or adc and fldcw arpl xor add lods aam test jmp cmpsl fdivr and lahf std inc cmp and cmpl lods jge arpl fcompl cwtl lahf (bad) in in or pop dec aam lcall jno inc loope fwait daa jno lcall dec aaa sub shll jecxz adc insl xor aad and inc pusha mov mov adc mov and cli mov das sbb pop xchg mov je inc add push push jmp inc lock mov movsb fcmovb mov sub sub cld pop push (bad) std bound inc cmp xor ss js lret bound dec pop or pop stc adc xchg aas rorl and mov sahf out inc cmpsb push adc test xor js int3 lods xchg pop cmc sub loop shrl jnp aad push (bad) out jo leave mov pop pop push scas bound mov or je lahf jno sarb ds or les (bad) jbe aas out xor xor jo add dec inc fldl mov adc jne push outsl xchg mov sub test mov andl shlb fwait loopne aad cltd or fcoms inc push imul push lea pop stos xor aas cwtl jmp mov mov inc cmova sub imul and and inc fist add jmp mov xorl cmp les ljmp or mov and mov sub divb idivl fimul add and xchg mov xor fwait mov dec leave mov inc negl imul fnstsw xchg push mov and addr16 lea adc jb pop mov insb loopne sbb xchg lcall sub mov push iret mov or mov dec ror add sub test loope push imul in mov pop dec bnd notb jns pop jg (bad) jg jo pop fisubl int jmp push std pop sbb movsl in adc (bad) cmp test loope or sub dec pop sub inc es sti arpl (bad) les in mov js sub out cld (bad) cmpsb push ljmp popf dec frstor mov cmpsb or popf mov in jl cmp int3 sbb bound sub cltd sbb rclb mov and bound add xor dec sub xlat pop (bad) arpl mov jecxz in loopne ret (bad) and or pop dec and pop loope xchg xchg in test mov xchg loope repnz xor pusha rclb mov mov and popa pop mov mov xchg push cwtl int3 popf into lock mov fidiv jb or loope (bad) iret and mov pop dec mov sbb insb mov adc addb iret fsts sub inc cmpsl mov cmpl xor mov add xchg lods mov jmp in pushw add loopne adc sbb (bad) jg mov dec sub call jbe insb fnstsw push mov test dec jbe aad push cmp sub pushf lods lods or xchg dec sub (bad) push (bad) pop fwait insl xchg loope cmp jne add mov jo add lock or enter lods cmp xor pop add pop repnz in mov xor ljmp mov mov scas inc sub mov clc push dec movsl insb pop rol push mov sti adc xchg mov rolb dec push push pushf (bad) repz jns addr16 daa std leave imul movsl ret push cmp sbb test (bad) mov mov std or loope mov call lods stos add lret (bad) addl in or or sbb test or fildl xchg mov outsb aad add sahf or inc mull mov jno pop and push cwtl std and sub pop ljmp mov inc jmp dec add cmc or shrb push inc jge dec movsl in daa iret in mull xor test jae cmp sbb xchg pusha pop lock cmp xchg pop cmc loope pop mov bound xchg test xorl bound test cmpsl andl pop dec ret jnp lret cmc popa (bad) jmp fist pop stos cltd jne cmpsb jecxz iret movsb (bad) daa cld in lock and das stc adc xchg test adc sbb lods and mov gs and out data16 mov mov pop push fsubrl movsl adcl jge fisttpl gs adc js loopne fiadd mov mov popa adc into and adc cltd test pop bound cmc mov mov imul adc adc les fimull aam cltd lds jmp jae xchg daa je xchg stos xchg xor and push psllw (bad) or pop pop das in in or fisubl inc and popa pop mov sbb into inc out pop dec push xchg sahf sub sub push xchg cld add or inc mov pop pop mov insb mov or cmp jno movl xchg jmp pop mov test and and push mov data16 mov sti xor lcall sub pop dec sub shl jnp xor (bad) shlb adc cltd dec mov pop pop loop test js mov adcb and ret lock jae xchg mov out stos (bad) xchg dec pusha sub mov pop mov jmp (bad) or xchg mov mov dec cltd inc and imul xchg ret mov pop cmc sbb int pop push sti daa stos mov mov data16 mov roll xlat cmpsl (bad) xor and push push icebp lock jmp dec or mov mov jmp mov xchg out stc mov inc iret mov add cmpsb xchg rcll icebp jbe loop mov pop insl jmp hlt pop mov movsl repz je mov jle mov push addr16 xor sbb or pusha sub add mov hlt pop das cmpsb ret mov roll inc dec push xchg mov stc xor mov in mov inc arpl lock and mov gs jnp adc and repnz dec add adc imul inc push ret dec cwtl mov ret stos xchg mov into cmpsb mov inc test lock std pop xor test jge jae daa sbb sub jnp adc mov xor leave popf out mov movsl arpl in in push popf bound lahf adc lods push mov sub test jbe pop aad mov outsl adc jnp shll sbb nop movsl mov gs (bad) sub test (bad) pop cmp fwait jne xchg mov lock clc ror inc mov cs mov repz in sbb mov imul loop dec nop sti pop cltd mov shrl jne int mov push pusha cltd hlt add jno xchg inc (bad) jae scas cmp or lcall mov and mov pop imulb xchg inc mov pop inc mov xchg mov inc jge mov jecxz jge xor sub and cltd std inc test cmpsb arpl mov inc insb mov adc sub jl sub hlt pushf cmpl inc pop in mov mov repnz cmp xchg aaa dec mov xor out mov cwtl xchg mov jno lods jecxz imul cmp push mov imul std push fadd mov mov mov cld pop repz cmp lock xchg lret adc mov loopne push (bad) sbb and enter or rol clc add jmpw adc push sahf cmc cmpsb pop mov es sti daa xchg test xor andb cs sub loope stc xchg add sub mov rcll mov ret mov mov stos mov sti pop pop xchg hlt push ss cmc cmpsl mov aaa rclb ret mov mov outsb push gs mov ret xchg (bad) sbb xchg jge mov pop pop pop pop mov nop es (bad) lret push ret lret pop add loop adc or and (bad) pop int aad add andb lahf fld stos adc sbb scas mov jecxz iret dec stos sarb xor (bad) enter stos repnz lahf sarb xchg xlat arpl (bad) loope sub push jmp sbb adcl and mov cltd shlb jp popa fwait rcl movsl xor mov mov mov push dec out addl lcall mov fdivr pusha idivl aad leave pop bound mov mov add js bsr dec cmpsb bound sub lret jb into adc adc gs add gs mov in adc cmpl sarb test fistl dec add dec hlt adc xor mov aam push mov dec cmp and push push ja repz test xor lods stos js dec test dec lods rcll pusha inc jl loop xor jne mov xorl stos stc mov rcll pushf cmp subl andl jb inc bound jecxz push and cmp cmp mov pop aam mov pop std cmp clc mov fidiv aad js das es (bad) pop iret (bad) movsl popf and cmpsl mov lcall push test xchg and and mov enter or cmpsl movsl push pop mov sub daa and jns fdivrl pushf mov test xor movsl add mov mov fbld mov and mov and or fcoml pop loopne lods (bad) outsl cmpsl (bad) jp mov enter mov aam push (bad) jbe movsl pop out cmc pop mov iret fidivr mov jecxz dec insl mov add mov jnp les dec dec pop es jg das mov jns icebp sub mov lock fstpt push xor mov pop in adc xor loope js cmpsb popf jmp xchg les js mov mov lahf aad test mov dec push movsb std out sub mov push nop sti inc xchg in int in lds test bound jl pop jmp inc sbb pop lcall mov les dec imull add clc insb mov jb cltd popa pop mov bound mov inc mov inc jb movsb pop (bad) pxor loopne or mov imul dec mov idivb lret push jno mov ret int sbb mov and icebp pop jge test inc mov popa mov movsb mov xchg xchg jae es (bad) icebp fucomip sti bound incl pop cmpsb lahf jecxz pop lods fisubl push dec add gs shll jns fwait pop lea jnp add insl mov int lods mov push scas mov jo add mov lret ja adc dec loopne daa adc cltd xor (bad) lock inc lds enter aaa xchg sub decb cmp mov aad insl in mov (bad) xlat aas sbb out fstl das inc bswap mov xchg shlb into mov adc mov ret pusha xchg hlt cmp mov mov cwtl in int3 outsb imulb and (bad) mov or je arpl cmp daa mov (bad) pop icebp mov cmp pop ror xchg out sub fwait lds mov cltd (bad) lcall sub mov and mov pushf sbb mov shrl dec mov icebp inc outsl int add cmpsl mov mov movsl std arpl scas cltd daa jbe jno xor xchg xchg xchg ss cli daa mov push and xor in ja imul stc push movsb mov icebp pop cld repnz or adc fistp mov leave in (bad) mov arpl jns cmpsb fidivrl test sub push icebp inc push mov pop sbb and jmp lods push dec sbb pop cmpsl (bad) out lds (bad) iret lds lahf lock (bad) cmp scas lods movsb xlat mov mov pop into jb mov mov loopne mov jecxz lcall out cld xor es aas push imul out mov sub adc sub push dec mov imul xchg mov negl loopne rorl lock inc scas lods mov dec sub inc enter or jg js mov fdivl aad jl inc or aam xchg cmp cmp xchg imul pop or test sti xor dec push cmp adc mov mov mov pop jbe mov xchg (bad) xor (bad) mov fsubs sti jno or jno push shll out mov aas (bad) roll or push jae xchg sahf ret (bad) lcall push mov dec add jb imul ret jno mov fs inc or and mov leave push stc pop xchg arpl addr16 pop in fcomps pop add iret and xor (bad) sub push add and mov lea adc inc and test inc or mov (bad) dec (bad) fimull cmp fdivrl lds jl imulb jp out mov xor dec js jnp mov push fdivrl cltd test pop mov mov mov gs adc loopne es sub test insb cwtl iret mov mov imul or aas cmp adc (bad) (bad) xor into (bad) pop adc lret and data16 stos mov lcall inc xchg test in (bad) sbb xlat mov pop adc into shlb out daa bound imul push dec cmpsl pop call mov or aaa cmp stos insl add test push pop imul gs mov repz addr16 xor in pop sub outsl fucomip cwtl (bad) dec loopne sub cwtd jl mov inc push rorl mov mov xchg lods lcall xor test inc loope cmp gs sub mov adc cmpsb push or in andl subl or leave popl mov adc jecxz pop inc movsl gs les sti int3 mov adc sub cmp jne mov cltd sbb adc push inc lcall and xchg mov lahf inc and movsb dec bound pop shrl cmp inc negb pop inc and aad adc jbe or mov mov dec or arpl loope mov cld adc sti mov shlb js jg mov addr16 fs mov frstor pop gs mov inc fisub (bad) hlt inc push aad mov adc (bad) fdivrs imul adcl xor sub cltd clc pop push push ret repz inc pop lret lock loop mov test mov ret fist pop es xchg rcll mov or pop and inc xchg push fsubr fldenv stc pop jns rcr addb jne xor cmp imul mov sti pop push cltd xchg mov movsl mov sbb dec std std movsl jb sahf mov in insb psubb test and sbb lods jecxz jmp xchg push mov pop pop lcall jno add call cli gs push mov mov dec fidivl cld and mov test test (bad) (bad) sti pop shll and mov add iret pop out ja repz insl push sbb pop mov inc popfw adc pop push push mov xor test mov fcoml jnp pop aas inc and xor adc or inc mov mov insb fwait mov imul (bad) int3 jno push mov ficom jp fbld popa and sub cltd test add call lret pop mov je mov adc out lret sub nop (bad) out cmp sarl push or fidivl xor jl fs dec xor lcall into (bad) mov loope into cmpsb cli lock faddl ret cltd enter jno push loope scas sarb (bad) mulb sub cmp popf mov (bad) dec pop jecxz es es out popa arpl aad insl je fwait jb ja mov imul (bad) jno sub pop inc movsl sbb adc loopne pop loope dec addr16 scas test cwtl cmp sub out nop mov mov cmpsb dec mov vcmpsd mov sub stos sbb mulb and inc xchg aaa movsl jp sar je in jle and cmpsl pop pop push mov (bad) mov mov repz std pop mov mov out mov sub insl movsl inc jae jg pop sbb pop xor sub shll mov sub and loope pushf mov dec inc adc pop iret mov shll ss mov inc fwait dec pop mov cli jo pop push pop aam adc roll cmpsl mov mov adc aam push push mov xchg imul (bad) fmul shll dec mov and fcoml jo cld xchg inc cmp rcrl cli (bad) xchg pop jmp adc out outsl mull jge mov mov sub add (bad) lret cmpb push daa sbb fmull xor fisubl fistpl ret mov xchg leave mov xchg aad in push cli leave nop test ffree sub sbb xor es inc mov mov pop xor mov sahf andl stos push and jb incl pop lods emms mov pop stos mov pushf pop sub inc jle add and aad pop add push xor mov dec movsl mov xor out dec test pop clc (bad) (bad) mov rcrl mov aaa mov aam sti shl add sbb and insl lret in cmp mov xchg xor inc testl test mov push shrl cmp xchg jbe out fildl mov sub in movsb stc outsb aaa fisttpll in or sub out or jns adc cmpsl scas out pop cli loop scas insl stos sarl pusha out fnstcw inc les mov xor inc lahf movsb iret cmp ret stos cmp int3 movsl lahf call mov das pop aaa dec jle mov insb loopne xchg (bad) dec add cltd addr16 iret xchg inc and xchg (bad) push js test cmpsb mov lcall jns sub cmpsl shlb xchg jns aas push jnp,pt popf inc xor mov xchg and sub loop push mov push or stos sbb sub popa (bad) out movsl and xor sbb leave test pop xor and push stos pop out push inc mov mov mov mov jp outsb mov movsl fdivrs mov sub pusha fbld dec imul xchg mov shll movsl xchg das mov mov rcl pop jg ds mov sahf jmp pop mov aas insl out rclb mov iret lods sub mov xchg lds aam cmc in sbb arpl mov daa cs addr16 in xchg or repnz cmc std test ds push mov mov push enter in xchg in popa and jmp mov dec mov jle jns and and dec imul shll add xor jae pop stc mov scas pop push xlat mov add sbb out sbb inc pop repz xlat loope pop jmp adc loope mov push mov xchg xchg mov cmp pop mov (bad) push js sub addl rorb lcall push push jnp movsb xchg xor rol xchg mov add mov mov int mov loope adc mov popa in xor mov jge add insb jmp mov icebp sub mov pop mov mov insb loop pop mov into xchg mov and sbb mov addr16 xchg mov fbld int sbb rcll push mov shll clc iret push lret adc mov mov pop (bad) pop lds jge inc mov pusha jne aaa js mov pop xchg cltd xchg mov sbb push inc adc lods jo (bad) repnz mov in mov xchg mov fisttpll shl fs inc or xlat les sub je icebp es mov dec inc pop daa xor jbe cltd sbb dec int jecxz mov test imul test syscall sbb repnz or xchg rolb push jne pop insb and mov nop push daa and insb shl mov or pop push push std lods icebp les out jl sub pop movsb push dec push mov cmp pusha lds add shl rorl pop clc lds or adc jl adc push lcall sub into xor in and mov movsb test jns out rolb mov sbb mov inc inc sti mov dec sbb ficomp cmp add scas orl (bad) int mov fadds and std cltd mov mov repnz test inc adc nop cltd pusha add fsubrp sub inc mov sub into or (bad) (bad) and lods js test push imul xchg mov fsubr (bad) sarb add mov inc mov je gs gs std push enter aas cmc xor js pop mov xor enter push push addl sub pop jb mov (bad) insl push or fsubl popa enter mov pusha jl fscale popa mov or mov and mov mov cmp xchg mov lahf fidivl movsl ss mov cmp (bad) mov jbe aad adc inc cmp push or push dec jno loop xor sbb imul insl arpl cmpsb clc xchg mov mov inc dec cmp test mov pop ret sbb xor aas mov mov arpl inc movsl xchg stos movsl test mov cltd aad and pushf xor push ljmp mov scas movsb mov sub arpl test sub cs (bad) and imul aad test lret das or iret xorb stos out mov repnz lret fdivrs or push mov movsb sbb sub sub cmpsb mov shrl push movsl fcoml mov pop int aam stc test adc mov and fildl fbld loopne fldcw inc cmp fs mov and out popa adc sub lds jmp imul daa mov mov cmpsl clc pop aad aaa das inc inc xchg xchg mov cmp mov pushf mov jecxz subl push and int jo hlt popf mov mov inc aad mov cltd into ss mov mov xor cltd xor jmp mov or movsl mov int3 mov fcompl fisubl mov jecxz ljmp pushf rcrb mov rol pop cmpsb mov add or push lods push ret arpl aad mov mov xor (bad) hlt sub push sub mov js dec cmp inc mov mov inc fs (bad) out and pop mov loop jae ja test inc scas cmpsl mov cmp cld inc out adcl (bad) movsl pop in push ja mov dec cltd xchg shrb and mov adc sti pop mov dec add (bad) mov bound movsl dec lret push fwait sub sub pop out mov lods (bad) adc pop scas imulb mov pop int das jecxz xor pop push aaa sarl jmp pop xchg cmpsb lods sbb test inc imul mov loop loope mov push jge jae and shlb lret xchg fwait xor sbb shl daa (bad) in mov cmc dec aam inc sbb jg out fcmovnbe test cmp movsl mov gs xchg and in lret sbb fwait (bad) pop sbbb mov mov andl roll jbe dec dec inc rorb mov les mov inc mov int3 cmc (bad) dec pop xor pop stos imul pop addb dec xor mov (bad) sub sbb stos lret sub xor mov push repz jns xchg popf push repz ror mov pushl xchg lock int jg sub xchg xchg xchg xchg nop pop aam sbb test fsubr push stos gs loope daa in roll pop inc fldt cmp sub shll mov jne mov add in movsb cmc mov scas into jne ud2 stc lods es pop mov jmp push frstor insl fdivr addr16 pusha cmp stos js mov in daa out lret data16 je shlb mov push cmp xchg mov xchg stos sub push pop add js iret push call and sub unpckhps dec bound jp mov sbb cltd out adc jbe xor (bad) gs push push mov inc rolb and mov mov ljmp aaa cmpsb inc divl cltd rorb and adc inc inc or movsl movsb das jne mov adc lret (bad) jmp insb mov inc ret js mov (bad) lcall sub push clc push xor pop es mov push and mov clc or lcall and in mov adc mov lock jbe stos cltd sub push out mov test dec inc cs mov popf leave push iret mov xchg int cmp sbbl dec faddl js aad push or enter lods jbe pusha mov lgs (bad) and mov add mov cli mov sub lret add test inc mov mov subl mov mov popf sbb cmovl movsl cmpb (bad) out dec mul jno lods (bad) mov inc movsl or mov clc xor xchg xor pop dec sub incb and push sbb pop jle xchg mov pop lahf cmp jp or scas mov ljmp mov inc pop push std into pop and das lods cmpsl xchg push in sub mov lods mov sbbb (bad) icebp ret push xchg xchg dec leave mov test (bad) stc mov xor jmp push xchg dec imul frstor mov push mov jecxz fwait ret push pushf sbb dec sbb movsb inc outsb mov scas movsb mov test push or les mov test mov jmp xchg (bad) jb add mov mov adc cmp mov enter mov and jle cltd push in lods cmc iret and ljmp pop pusha dec ret push (bad) mov inc push (bad) mov add cmp push fsts inc imul inc xchg shr (bad) lret jg jecxz mov mov adc dec stos scas xchg (bad) jecxz (bad) ds cltd mov repz mov incb jb pusha adc mov insl repz mov dec sbb and mov pop cmp inc jecxz xor (bad) jmp stos lods ljmp movsl test push jecxz and push out add sub stc mov xor (bad) add and daa (bad) hlt inc xchg xchg (bad) and adc daa xchg mov jns int addr16 push insl test cmp sub mov and cltd add dec inc push movsl int add sbbl inc mov cmc test lds outsl es or push fiadd scas stos and xor hlt dec xchg shrl pop jae stc sbb cld in out popa sub push and mov lahf mov cld and mov mov in xlat cmc test cmpsb pushf xor icebp jae repz aam (bad) (bad) fisub cmp mov hlt pop imul pusha daa cmp dec int3 popa mov mulb lock xchg mov inc xlat imul push lods jne cmpsb repnz xchg xor cmp pop push lock lea and movsl stos add mov shrb hlt les xchg or xchg test movsl scas int3 subl gs push or test inc and cmp mov add mov mov sti sbb cltd lahf cltd dec or add mov mov cltd (bad) push mov sbb sbb ret mov sub xchg les ret iret popl mov imul and fidivl jle xor mov dec aad sub jns in (bad) loope xor ja ds in xchg mov pop inc mov dec push jle push dec jg jmp repz movsb sbb sti (bad) and loope stos push insl cmp int3 or xor in imul and mov loop lret mov sbb data16 and fs dec dec repz popa xchg push sub test xor sub push pop scas or enter xchg cmp mov movsl faddl (bad) aaa cltd adc (bad) icebp xchg push insb les mov xchg insl in test test daa shll pop push aaa std push mov cmpsb bound vpcmpeqd sub cvtps2pd movsb hlt add rcrb gs lods push cmp pop pop mov mov and fist loop push add loope nop jge mov mov cld stc inc in and mov bound or cld push fs lret movsl xor push mov mov hlt mov sarb xchg push and out (bad) push dec add leave inc pop mov (bad) adcl andl inc movsb inc or js sub mov test sbbl pop addl or sub xchg jb jb add jns (bad) and or adc push lea or in push dec sti (bad) mov add cmp nop stos lcall mov cmp add cmp and xchg push mov inc inc pop imul mov out dec pusha mov jl dec inc xor out mov cmpsb jecxz cmp outsb inc clc push movsb pop andl fs repnz pusha adc mov orl pop and adc test or rorl push pop insl pusha pushf loope push cltd imul scas and push bound and ret iret movsl cmp bound lret cmpsl xchg stos push aas ret jo lods mov mov mov cmc std lds jecxz ds mov jae or mov fcoml out sti push mov hlt push lret (bad) loope pop lret ret push add int3 dec mov push addr16 pop iret imul sub arpl cmpsb adc push lods cltd rcrb sub mov stos insl daa mov sbb iret gs mov mov cmp mov pop mov push jo cmp xor cmp adc xorl sub mov hlt mov push or cli (bad) call pop or js fldt mov aaa daa les cli and pusha data16 addr16 and sub bound xor xchg sbb or int3 sbb xlat sbb xchg push lods fsubrp xchg leave stos or inc cmpsl dec and pop dec pop bound jmp test lods les movsl push (bad) repz lea jbe test test jns es or sbb mov add aam push jbe xchg jge ss cltd rcrl orl pop and push frstor inc adc xor lahf xor fwait xor dec push pop jne dec sbb mov xor out mov fwait mov icebp sub sbb inc aam inc or leave loope cltd (bad) fs inc jnp dec xor push and lods pusha in jns dec adc mov dec mov inc adc and jb out (bad) jb adc imul inc dec cmc sar adc jmp jns inc scas jae push rcrb int test cmp mov xor mov jmp xor sbb cli aaa (bad) and push jne sbb bound jns mov loopne push push cmpsb in pop movsb jne jecxz push scas lahf mov cmpsl xor in mov add or out and mulb or pusha movsl inc sub mov cmp rclb cmp scas mov cmp adc mov dec jge dec mov fadds cmp bound adc add mov dec xchg mov mov or pop fidivl sbb mov ret xchg lods clc stos enter fs call xor pop gs pop subb pop xlat iretw cmp aam (bad) fisubl pushf inc inc mov pop pop mov stos movsb pop pop clc sub cmp (bad) fsubrl mov adc xchg adc pop pop lret pop cmc jo mov mov out movsb (bad) add daa loope (bad) adc aaa push int scas mov pop sbb inc mov sbb bound cmp movsl data16 lcall dec cmp sahf add add push fistl sub in insl rcll jb add scas fwait push sahf mov aam jnp shll ret add lcall daa aam movsb lahf jmp stc adc xchg mov dec (bad) mov jno inc jmp jne lcall leave pop sbb lock mov dec add jg js imul cmp js,pt cld adc xchg mov mov lret pop (bad) push mov in js mov xor sbb out or (bad) ret and xor sti xor rolb xchg cmpsl mov hlt addr16 call sub ljmp dec mov jae lcall leave into stos jecxz push jle cmc lcall arpl mov adc add push repz nop or or xor and jno or cmc mov imul sbb pop push insl and imul mov xchg ret xchg mov push push inc xchg dec mov jbe idiv bound xchg mov push jo fistl addr16 pop ljmp mov fwait push imul repnz call movsb stos das sub dec mov mov adc xchg repnz adc cltd repz cwtl mov cmpsb sarl (bad) pusha add enter mov lahf hlt inc mov push push add lock hlt inc adc insl cmpsl or jb sub adc pusha cmpsb std adc cmp jno mov xor push jmp cltd ljmp insl (bad) leave inc enter inc aad (bad) stc in test in pushf mov out pop push test or mov fwait xchg jne (bad) test lock ret jb iret lcall pushf xrelease insl call sbb imul jg xchg inc popa stos and mov pop xor mov pop add sub mov pushf pop cmpsb (bad) mov das mov out cmp pop ja hlt aaa mov inc imul dec jmp lea jns mov dec pop add sbb lret push pop aam jno xchg (bad) pop push xchg (bad) sarb mov aad gs ja hlt mov in mov clc loope mov mov (bad) adc hlt icebp int sbb and push push mov fwait jbe push mov cmp in loop repz imul add xor mov dec mov lret rorl les out or fbld sub pushf lret jne xchg mov mov ret mov dec add dec jne fcmovnbe or cld es (bad) pop out and adc ret mov mov je jne mov pushf gs jmp bound nop aaa mov or and xor dec cmp jp dec iret insl sbb adc mov mov arpl sub ljmp nop lds and repz or out dec pop add xor push (bad) movsl jo call dec mov nop imul scas cmpsl mov in ficomp into jmp mov fldenv inc imul cltd cltd fwait mov imul xor test test push iret cltd mov cmp mov test rorl jnp cli push lea jno mov mov pop and arpl das mov inc pop stos (bad) iret push jno or sahf xchg sbb xchg fildll pushf stos sbb les and xor xchg dec xor fdivrs add or mov xchg call fldcw mov sti jns jno (bad) xchg div (bad) aad pop cmp rcrl pop mov cltd add int3 mov lret pop sub jb lods and (bad) mov pop popl xchg dec stos and sbb xor out pop or fnstcw pop sbb cs dec fwait push (bad) movsl (bad) sub lahf jns mov cmp pop mov push rcrl sbb cmp lcall inc sbb push inc pop loopne mov cmp adc leave jmp bound (bad) lret pop (bad) mov scas dec int3 add add push pop negb addl arpl stc repz inc insb mov xchg pushf (bad) fiadd (bad) cmovo adc test push imul xlat cmpl aaa dec cmpsb mov cmp xor stos es imul inc bound xor rcr sti pop das (bad) xchg xchg roll cltd arpl pop es push adc pop bound cmp add shrl cmpl mov dec adc jge cmpsl mov call push nop imulb xchg (bad) insl or cmp and (bad) in xchg loope jp mov inc es fistp mov sub daa or cmpsl stc jmp jle xchg xor push arpl into cmp jnp pop test aad dec and insl xchg imul bound test mov mov adc ja loope mov data16 xlat xor test push (bad) test in hlt lds das inc dec jge inc es xor stos movsl dec fmulp jb jg xchg push sub cltd add mov mov xor (bad) push inc xor sbb cmp roll (bad) (bad) mov in jle xlat jl bound jecxz cmpsl push arpl mov lods (bad) arpl add mov in popa sarl and mov push mov and add iret imul mulb adc cld pop in movsb lods jnp dec loope call jns (bad) test jb loop dec inc mov (bad) sub sbb scas andb cmp dec inc testl inc cmp or xor shlb jnp leave add into mov andl daa enter mov repnz mov cmpsb pop push mov pop lds (bad) xor ss mov pop icebp lea mov pop popf inc aam sub push (bad) leave or xor fprem1 int pop ss (bad) fmulp jecxz icebp cmpsl andb mov loope xchg out adc mov add and cmp sahf lock push lret shrb xor test in and insb (bad) jmp inc loop repz push adc cli inc xchg lds lds (bad) xchg mov in js fcomps fs jbe xchg xchg lcall and lock pop pop lds inc lock adc popa pop je mov pop and insl jle and cmpsb or in sbb daa mov or cltd cmp cmpsb mull sub pop add adc sbb lret adc pop mov xchg loopne cwtl adc jmp das scas pop dec jb inc jge mov adc dec add ljmp rorl cmpsb cmpsb data16 pop iret and aas bound and adc xchg or xchg (bad) movsl push pop sub in and mov repnz xor (bad) loope push mov add xchg aaa push cmpsb adc daa js sub jo js cli mov es cwtl outsl into mov mov cmpsl mov js sbb lea inc adc adc call mov xchg enter shll dec stos in jecxz call rcr add bound (bad) cmpsb jge and push push imul movsl out inc and (bad) dec shr mov into mov dec fdivl pop repz xchg mov add push jmp fistpll test xor xchg inc cld mov mov mov and cmpsl dec dec push mov cmpsb inc js rcrb fstps mov fs push jae gs mov jo lea ret lods ja jecxz mov cmp bound jp adc pop push mov sub inc sbb jno pop sbb movsl test gs mov push jmp daa or movb and mov into jecxz (bad) lret out test in pop ljmp in sarl int (bad) pop push pop out inc incb mov mov sahf fsubrl mov aas sar push jno mov xchg dec sbb push adcl popf in fsubrl add mov mov sub push repnz mov push mov mov xor sub sub mov push sub pop adc mov jno xchg iret add addr16 je and sub (bad) hlt repz movsb cmp push inc insl in pusha sub push arpl (bad) or adc (bad) test mov push pop iret nop sbb stos dec fdivrp fisttpl repnz bound lods push mov xor dec xor xlat out imul cmpsb daa bound repnz idivl jb dec icebp xchg data16 adc dec loopne sub and addr16 sbb mov mov std inc adc mov push inc push jae scas mov or jns mov leave jmp sbb test lock or jl aaa scas shr test aaa imul mov inc rorb mov aam lcall fidivr push cmpl mul jne mov fildl and (bad) adc jecxz call mov adcl mov clc loop mov (bad) or movsl mov dec scas cmpsb mov mov rcr jl mov test stos hlt or es lods loope or cmp bound nop out imul stc (bad) or jle popa cli sub cmpsl (bad) fsubrl aas jns xchg xor xor adc push lock movsb pop shll jl loope mov sbb ja out mov push xchg mov add sarl sbb ret iret and inc mov jb cmpsb test lods popl push loopne inc adc fidivl dec pop mov add test inc mov cltd mov lds in mov ret (bad) in (bad) pop rcr inc aas add pop push and cmp pop mov cltd rorb cmc jno push add jb add xchg in mov aad cwtl adc movsl std cmpsl pop dec push push or and insb mov sub lahf popf dec xchg xchg fs mov out mov push push xchg mov imul and popa mov mov outsb mov push cmp in arpl dec jmp lods insl mov and mov dec mov scas push std es adc ret pop orb outsl out out mov lea imul push jecxz lds fs push cmpsl sub lahf sbb push dec out cltd (bad) sbb rclb in add mov mov dec jmp mov in push push sti mov fcmovb pop xchg lcall jno repz mov das ror mov inc sub xor cmp bound jns lods adc xor or pusha call adc bound mov sub sahf mov push push iret xchg aas sub jb fiaddl ja fwait jns mov mov cmpsb fnstcw pop pop out movsl das loope std out repz mov sti lcall subl xchg lds daa out repnz adc mov dec arpl les push dec jle sub and aaa and and xchg xor dec mov int mov or sub in imul dec jl sbb fstpt mov cwtl lods dec mov mov lock push jle mov int lahf mov lods and mov dec mov frndint push int3 mov mov xchg xor and addr16 push cmpsb in jmp pusha mov lods ja fidivrl (bad) mov cmp add std mov mov out xchg in fs or pop stos movsl gs push pusha mov xchg ds jl lock jp icebp mov ja sti push mov sbb mov inc outsl jmp sbb mov fwait xlat imul incb mov add lods pop cmc insl pop mov push jmp mov mov jo xchg jns,pt inc jmp test or aad lods xlat jp loope dec mov mov stos in jecxz lock and (bad) clc movsl xchg mov (bad) or dec ret xchg sarl movsb pop rcrl adc je add sbb call push test rclb sarl sub mov pop arpl test out test ret xor fisubrl mov in es in inc mov les ficompl dec cmpb mov subl jne repnz das cmpsb imul (bad) lret sub and (bad) or (bad) mov fsubs outsl mov sub ja imul dec jbe call movsl cmp jge dec movsb mov cmpsl pusha out lret (bad) data16 push lahf in mov test bound push movsb jne mov movsl sub adc mov push imul lock ret xchg pop push test adc jo inc mov sub pop jecxz jl jae,pt test dec add push jl push ljmp mov fisttp (bad) cmpsl pop push (bad) jle lcall out cltd pop or jp cmp dec movsl lret mov mov pop adc orl cmc mov pop in scas dec enter sbb faddl jns push rorb insl (bad) lret add fs dec rolb pop int dec out lock sbb clc or sub mov data16 xchg sti pop (bad) xor xchg push cmpsb add cmpsl add adc inc pop cmc arpl rorl loopne movsl adc data16 leave inc sub cmpb adc btc xchg data16 lods imul sub push jo mov popl arpl and and (bad) (bad) js bound mov push insb xchg dec repz dec fwait mov jg cmpsb lods arpl frstor add pop inc jns pushf pop sub fs pop mov cmp or stos mov mov cld jns or adcl or loope mov jno jb lods and dec or ret cltd push inc mov int lock inc jmp test push fs movsl mov push (bad) xor sarl sub or mov out xlat test in inc loopne enter add stc add shll push leave lods pop test insl pop aas adc stc mov cmp mov push (bad) xor in ljmp inc adc xor cmp je or imul cmc xchg cmp out pop or xor mov mov fdiv pop or data16 cmp mov adc push xlat inc div scas or daa jge push mov loopne (bad) jo jmp push cmp cmpsl pop dec xor addl mov mov jae les out mov mov mov enter and clc lahf and xlat sub int or dec inc or xchg ret arpl push lcall loope push les add or cltd mov das and dec mov out inc xor mov (bad) xor rclb pusha push movsl xchg fs adc cmpsl xchg stc adc aas push decb mov movsb add dec cwtl push dec movsb mov into inc mov cld mov lock cmp pop (bad) cmp rcrl (bad) in cld adc jcxz xor or xchg push mov (bad) (bad) in add icebp jae rolb push (bad) testb mov lret call push and pushf push imul aas xchg mov sti pop cmc dec fildll sub fimul mov dec (bad) out dec push shll rorl mov mov aaa mov fildl push into mov mov leave dec add stos scas mov xchg popf push add add stc sub mov testb in sub loope add inc sbb lea xchg cli aad mov cltd push jl (bad) call into out inc rcll cmp sbb dec into xorl mov inc xor dec les in inc cmp and dec stos or popa movsb bound push fcoms xchg enter int3 clc (bad) mov adc sbb loope add cltd jp and clc push and mov es pop push jns sub mov pop adc jae pop mov sub (bad) mov shl aaa mov imul stc dec jno jge xchg dec aad xchg inc push cmpsl movsb dec pop cltd clc out sbb sub or xchg mov cmp pop repnz inc push push sbb xor sub add push mov mov addr16 jns cltd popa addl stos cltd test push push pushf addr16 loope or pop frstor jge push aaa push cltd sarl out sub adc cltd repnz repz sub out sbbl mov nop mov push mov xchg mov dec add stos movsl imul jmp in movsb mov dec mov sub mov dec ss rorb mov sbb xlat dec and cltd into push add jecxz mov cltd pop jg xor mov inc mov ja cmp jmp shrl mov aaa (bad) push mov adc cmp das (bad) mov aam in loop std daa mov sbb bnd push mov mov loopne (bad) mov out nop pop fidivrl cltd mov out gs pop mov sbb and (bad) in mov sub ret sahf jo outsl stc mov or adc mov jns cmp push cli sub jb sub cltd cmp xor mov or movsl push xchg push gs mov aaa mov mulb cmpb sbb (bad) scas test mov shl xlat das mov mov lock mov xchg mov pop sub push idiv sub inc aam jg mov xchg cmpsl mov aad mov cld std push or pop lahf mov test jle mov dec or call repnz cltd icebp imul inc inc adc sub lahf cmpsl fistpl ret or cltd mov pop (bad) dec stos adc inc stos and dec adcl repnz mov pop sub stos in cwtl (bad) in cld ja jp in cmpsb or test pop dec incl xchg jge adc cmp stos inc mov mov fsub and es movsl push bound mov mov adc sub or cmp es add mov pop add fidivr adc (bad) mov xor jg pop insb sarb inc mov sbbl arpl xchg data16 pop orl into repnz imul sarl xchg mov push lret xchg fistpl (bad) mov push in mov xchg sub clc sub lcall mov insl xor fcompl (bad) gs or mov in stos scas jge andl mov dec xchg test mov sbb dec inc div mov bound inc xchg les pop fistl jge pop data16 jle and mov imul xchg xchg loope test xchg div jae cmp shlb push (bad) jns and mov xchg insl mov jge fisttpl and stos and notl xchg mov popa dec sub jo push add imul in fwait pop push test or js (bad) std inc mov js mov mulb sbb ret rcrl pop (bad) (bad) cmp push adc pop and dec lds cs popf push lea push xor pop repz add shll sbb cmpsb ret pop test bound arpl cmovl and aad test xchg (bad) dec stos or dec jno and in nop stc ljmp rclb icebp imul pop mov dec inc fldenv xchg cmp or pop jae sub mov mov mov pop adc inc and js xor inc testb jnp and pop or inc dec fwait bound inc cltd aas pop sbb mov inc aad lds dec mov xchg loopne (bad) out mov lcall jne scas and (bad) rorb mov mov and loopne mov cmpsb jge pop xor inc pop push in cmpsl sub jge xor cwtl test les nop es xchg sbb xchg stos rcrb (bad) adc imul xchg xchg orb bound inc push xor xchg into or adc clc sbb bound inc jbe scas xor sub addr16 repz mov or jge cmp or xchg fsubr sbb and cmp cmc rcll pop mov mov out ljmp or js cmc pop lahf pop pop mov xchg jo cmp mov pop outsb rorl add out pusha stos sbb pop dec lret push stc pop or cmp xor dec jo lcall push insb sahf xchg movsl jne xchg (bad) mov hlt bound fnop mov jmp in hlt jne cmpsl loopne mov mov (bad) pop jg push pop std es daa adc ficoml mov xor fcoml sub or sahf xchg fistl imul add mov sbb sub lds mov int3 test lcall sbb fsubrl fxch jb (bad) mov sbb dec stos mov jge dec jmp mov add inc jnp shrl je decb sbb outsl mov push shll jg cltd pop test aad ret mov pop clc (bad) mov push add and and test loope mov mov push and hlt nop cmp mov cltd movsl mov jp (bad) nop psrlw xor jae inc daa or xchg test imul mov ret cltd dec add cwtl pop mov adc add sub pop das mov aad pop iret mov push and mov out pusha xchg mov dec outsl mov cltd and fimul inc in push movsl (bad) push loop mov daa mov cmp loope xchg int pop (bad) or in pop cmc stc dec repnz test mov and movsb mov push sub dec call repnz rorb pop cmp clc push out mov add es mov addr16 dec mov dec rorb add lock ret jge fdivrl repnz sub scas xchg imul icebp inc xor popl and lahf leave mov imul daa jmp and cs mov mov hlt in sbb lahf (bad) dec mov call jb cltd (bad) mov les cmp inc inc je sub repnz cmp dec and imul fwait (bad) mov cmp sub fdivrs mov jb sbb bound mov insb lods push cmp movsl mulb mov xchg in jo clc jns jnp insl and mov mov jmp test sub mov cmpsl leave in scas or or movsl cld dec add add dec push fcom jle jns enter mov mov bound mov das mov xor xchg jg inc push repz mov jge rorl xchg dec pop clc mov je dec add or out sub add insb push sub int3 mov cmp out lahf (bad) xchg or mov ljmp test scas push pop dec jae fildll (bad) out xchg cmp out inc test bound or mov add (bad) lret neg cld pop dec fmuls test dec test mov mov adc (bad) pop sahf jle dec dec and dec out imul popf outsb jecxz pop mov lods mov mov jae add adc (bad) les adc enter pop sub je repnz pop lods pop pop lods lahf aas cmp and (bad) imul repz add jbe xor fimull pop and add push fmul out mov ficomp xlat cltd stc pop cld dec fistl inc xchg test sti xchg stos pop jg mov mov bound jle xor popa stos cltd mov adc cmpsb repnz xchg test mov xchg mov cltd rol daa cmp sub loopne push push rclb test inc xchg xor shlb pusha mov jae mov icebp or into bound jo sbb pop cmpsl in daa mov lret loope adc cmp loop jmp es inc aas enter push mov jb fldt fsubs popa (bad) sbb movsb mov scas mov cmp or sub andb into and xchg pop lea dec test (bad) cmc add scas dec cmpsb pop (bad) push (bad) cmc or mov jnp inc sti dec and mov ljmp mov insb ja pop stos mov jnp inc inc enter mov pop pop push adc mov pop cmpsl cmp (bad) cld add mov mov aas pop fisubl add xor cltd aas mov adc es rcr pop pop inc dec mov jbe push mov jg push xor lds aas push pop enter cmp movsb ljmp shrb outsb xor mov dec ret mov insl mov pop pop clc scas mov sbb cmp subl cs cmpsl data16 (bad) shrd stos nop rcr insl test hlt xor out setnp dec sbb cs rol popf cmpsl mov sub sete xchg push fwait popl jp leave xorl fild cmpsl scas pop or jg pop fcomps mov ss stos lods dec or das dec mov call mov pop ljmp inc xchg mov nop mov cmp lcall sub push xchg mov iret and sub aam je (bad) mov imul xchg mov xor pop imulb mov dec stos out push into sahf mov pop movsb les inc stos loop enter push sbb sahf enter call popf mov sub add fprem pop inc adc mov adc ljmp hlt int3 das lods and mov add or mov (bad) test push test mov mov lock pusha lret xor loope iret inc loope (bad) rorl or inc pop test mov inc xor mov mov sbb xor xchg fiaddl data16 or mov aam adc mov mov add or inc into cmp ljmp sub jns add fwait pop mov and cmp mov sbb ret jns xor push and push mov imul fistp sub push leave and dec cmp xchg loopne popa (bad) int cmpsb stos mov xor lahf fnsave lods mov dec es xor movsl inc test mov (bad) xor push mov push fldt inc out mov adc sub adc das in mov (bad) scas adcb add dec pop rol popf push loope bound or xchg lcall sbb xor sti test pushf jo addl and fidivl ss arpl sub pop cld pop in leave add fist cmp mov in test push cltd mull rol mov and dec js movl bound shrb mov mov pmullw mov test enter xor inc inc sahf jno,pt stc pop int3 push pop nop push inc mov loope xchg add cmpsb or movsb or sub cmpsl sbb scas lahf outsb or add jae movsl stos lcall cli mov data16 pop aad out addr16 inc or add hlt movsl in sub mov sahf or cmpsl cmp repnz das mov in add mov imulb push jns (bad) out (bad) aad xchg jno pusha imul push mov push rolb and stc mov iret fdivl shr outsl movsl inc lds das cltd stc push dec mov (bad) adc inc cmp sub lods or inc mov (bad) sub arpl jmp and sbb add dec and sub mov ret adc mov rcrl mov sbb sbb stc pop cmc popf push inc pushf mov sub repnz ret test mov cmp cmp insl addr16 adc xor push inc cmpl cmp mov rcrb pop mov mov push sub dec lret pop xor add jns shrl das mov aaa xlat inc push fist roll adc xlat jge mov sbb push mov pop and sub pusha aaa rolb jl cmp mov fs lret imul mov mov divl ret pop pop (bad) mov popa in imul bound adc je imul inc push jge sub lods dec xchg (bad) shr mov push lea (bad) arpl adc ficom or test bound or sub out mov incl xchg movsl pop (bad) pop negl push cwtl sti rolb mov cmpsl lcall or popf int add repnz dec mov xchg and mov scas cmp shll xchg ds adc jo push sbb mov in fs aaa imul clc (bad) cmp mov lds mov pusha cmc push jecxz out popa movsb cmp int3 aad data16 cltd jne or cwtl iret push andl pop (bad) std jbe scas or push ljmp add enter out pop sti jae and mov fist inc test jp push cmpsb and pusha lahf mov push lcall mov pop outsl mov adc nop cld push dec fildll inc xchg mov dec push pop aas stos sarl inc mov (bad) pop jecxz sub xor dec js fsubs inc xchg icebp loope ret mov dec or dec cltd or scas inc iret and xchg imul inc lods in jo mov loop or mov mov adc cmp mov jecxz sarl bnd and nopl sbb jns jbe jnp (bad) fadds xlat jns xor pop or push lea mov push (bad) idivl mov sub lock xchg mov fldenv adc lods aaa mov leave inc out lock jmp sub sub aad bound push (bad) pop enter push dec (bad) and jno out sbb push dec test gs sub or dec xor movsl dec or popa (bad) xlat mov push pop cld enter jge test in aam cwtl and mov shlb add push mov jo push adc aam loop aam mov sbb mov xor push mov cltd fistp faddl (bad) and jecxz pop cs shlb popa aaa sbb inc xchg mov push xchg mov pop (bad) adc xor adc test push add dec jle mov cmpb push arpl mov jmp xchg pop push rcr sub (bad) push repz mov xchg mov aas sbb or mov xchg ret dec mov xor in jge pop subl dec call arpl jp and push addr16 das xor sub test loopne imul xchg bound mov das (bad) test cwtd rclb dec shll pop std add outsb sti repz (bad) in dec in mov push jg xor cltd jecxz bound push jo pop aad and cmp int js frstor mov xor inc mov cwtd mov pop mov sbb data16 into mov mov push push push imul lahf push xor sbb sbb mov aaa mov or outsb in je cltd push mov fcomps push fisubrl jmp shrl add adc xchg mov pusha jecxz movsb mov test fwait add xchg fs mov in sbb xchg sub inc xor xchg cld jmp and orb in cld cmpsl add aad out xchg or push test cvtdq2ps and mov lahf das inc jbe sub fwait mov mov repnz and mov mov popa mov inc ljmp mov cmp pop mov pop repnz scas mov or inc mov jge test (bad) shlb push in imul xchg mov repnz mov xchg pop mov test sbb xor push mov sub jg adc or imul fsubs cltd test ja lods popf movsl cli outsl loope or js cmpsl add and mov sub movsb push inc pop sub sbb lcall jg popf sbb cmp mov repnz clc testb mov gs fdivs jl or mov lret shll pusha sub jmp in notl aas and popa orl mov les cltd loop dec ss (bad) and pop lret sub jmp xchg xchg (bad) out add cmpsl jbe add aaa ljmp push (bad) mov pop mov jno arpl andl and imul popf into adc xchg or sahf adc mov int mov sbb fwait sbbl cli xor repnz pop xor loop xchg jge jns in mov cltd sbb movsl mov dec sub xlat in rclb ret jge aaa and loop dec (bad) leave mov mov add (bad) aad sbb lods push std mov repnz cmp call mov inc je ret and mov (bad) gs fcomi jbe pop mov mov daa xor add stc and mov out std xchg enter std pop lret xchg stos movsl hlt mov rcrl aad std icebp sub icebp test cmc inc push dec jne dec sbb dec or (bad) fucomip addr16 mov int3 and jb pop lods jns fcom mov sub add sti xchg in xchg fimull cmpsb jl jne mov aam icebp gs imul dec push inc mov jge fcmove and pusha fbld or imul push movsl pop js cmp adc nop lret and std pop aad (bad) fstl scas mov sbb icebp data16 mov ret mov jno movsl mov xchg (bad) hlt and pushf xor lods test mov aam xor sbb xchg stos mov mov mov inc dec in sti faddp push outsb add dec insl jmp imul pop aaa test lret fcoms mov clc dec scas mov pop test and adc xlat xchg je mov or and sub mov pusha mov aas sbb pop (bad) adc cmp std push sti push sarl sti mov mov push xchg nop stc push (bad) push into mov insb repnz std push ret scas iret adc pop (bad) ret cmc jne out mov or pop adc js fwait mov imul icebp sub xchg xchg sbb jno insb movsb repz idivb mov mov xchg push mov push mov mov cmc jmp or stos and call dec inc mov stc jno mov cmovl cmp fwait (bad) les fnstenv pop rcl cmpsl mov inc jbe mov mov cmp mov sbb cmc cltd xor dec jl rclb mov inc stos je dec test xor mov pop mov or jp lahf xchg and mov fnop push shlb mov mov pop (bad) xchg popf xchg mov mov xchg sub adcl subl mov xor pusha xchg dec punpckhwd daa out jns pusha loop mov xchg sahf and rcll outsl (bad) xchg lea in cmpsl shr pusha mov mov out shll test xchg mov pop dec inc or or and dec mov push jmp add push mov outsl pop subl call scas (bad) or sahf jns flds push out fcmovne mov das (bad) xor (bad) enter data16 sbb mov adc shrb xlat xchg mov mov stos and add xchg aam pop cmp xchg sarl cltd and push push and pop inc cltd lods and fistpll inc mov pusha fisttpll push aas jno xor in int fdivs les addr16 repz das ja loope iret jae insb in fistp mov inc sub cltd and js andb scas adc push push sti fwait call pop or and movsl lock xchg push or lods jnp add dec fisubr pop loop xor orb (bad) xchg jnp lock mov pusha dec or mov popf out std leave add jg icebp adc sub lods and mov jae or or cmpsl adc sub or imul mov mov sarl jae dec add jns mov call js mov sub mov sub movsl mov xchg mov jb loopne inc push cmp (bad) mov inc hlt pop in jno int jbe mov lock mov fadds jl push add cmpsl shll icebp bound iret jbe mov sub arpl popf cltd push pop (bad) xchg add jmp cmpsl or xor xor (bad) jmp imul pop (bad) cli xchg mov popf push addl jnp gs xlat cmpsb and pop pusha bound ljmp leave movsl mov jb mov add or bound cmp pushf sub lea inc fs pop xchg aaa cmp xchg insl bound mov fwait movsl das or daa sub inc or ljmp jecxz mov or les cld jns mov adc cltd cmp pop adc pop cmp jns push leave adc mov mov mov fwait rclb dec fstps xor sahf loop out fsubs or and ljmp rcrb jns and cmpsl out clc cmp gs sbb pop xlat js xor movsb xchg mov adc push loopne dec add push or movsl cli add insl repnz xchg fucomp cs daa mov call xor mov out fs bound cs lock clc sahf sub popf push mov and pop pop (bad) test loopne iret xorl cmp je push add aas xlat daa sti jns loopne out movsl pop out pop nop mov lahf mov mov push sub jnp mov xchg mov pop cmc pop hlt insb call imul jecxz mov dec shrl mov jae rclb dec orl bound push cltd xchg ror mov mov push adc fdivl pop mov xchg iret popl mov push push dec sub into dec fsubs sbb loopne add (bad) nop out fnsave out fdivrl imul addb jle xor xchg roll mov push push imul mov (bad) (bad) and pop repz mov xor (bad) leave imul daa jmp hlt aad xchg pop cmp push cmp ds push mov mov adc sbb popa hlt std movsl jp fsts lods cmpsb jg sbb adc pop loope pop mov hlt ljmp mov out mov lahf cld add lret xchg cwtl (bad) lret sahf xchg and mov dec scas inc dec mov cmc pop aad iret push pop das lret mov lret mov inc lret mov dec xchg sarb imul movsl xor pop clc fwait je rcrb push and xchg imul xor sbb int lret mov aaa jge cli insb pop xlat push ss in lcall stos fwait and xchg mov jg sbb push or inc in dec ret add in mov movsl jns mov into jo insl loope icebp repz enter cltd dec scas push das mov jl pop aas in inc push push popf xchg bound cmpsl mov jo loope jle cmpsb out loope out mov xor pop jge lahf push mov (bad) (bad) je lea fprem1 mov pop insl sbb int3 mov scas ljmp mov mov pop shll ljmp fistpll outsb jle add jmp mov dec cmpsb push lock in xor cltd push sub pop adc sbb and or dec arpl loope test addr16 dec jle stc ss out adcl pop jb leave test and cld movsl and sub mov adc or lock out dec leave sbb outsb pop push (bad) ds rol enter dec bound cmc (bad) lret mov cmp insb adc popa add xchg cltd pop popf push mov jnp mov mov dec adc (bad) and mov leave incb xchg cmp fistp xor out addb aad mov ss aad scas int3 cmp movsb mov add and push loop mov xchg (bad) mov idivl push jns pushf mov mov mov fistp mov or jo in mov or and and or inc cmp bound fnstcw jo popa xchg (bad) je pop mov xchg mov jg add xchg sub std jns enter repnz or outsl jmp test mov iret es movsl mov mov pop js aas jge mov adc inc mov es out mov loop pop mull lret lods test pushf and popa xor dec mov sub frstor add daa dec lods mov imul mov xchg mov pushf ja sub inc or xor or jnp jo popf sub xlat mov mov xchg mov rcl xorl fstpt fistl xchg xchg (bad) and sub test scas cmpsl xchg (bad) xor sahf bound std jo fnstsw cmpsl test js (bad) (bad) sub scas pusha cmpsb lods adc xchg (bad) jge pop nop lret movsl fstps stc call pop inc call movsb loope aad or clc push pop cmpl jecxz (bad) push lret mov mov aam ds es addl stos loop mov inc or mov mov sub add test fwait or mov mov mov jns mov aaa sbb inc adc mov fstl xor xor insb pop sbb sub addr16 mov pop sbb lods aad into popa (bad) divb inc push sarb loopne and loope cmp dec faddp jae mov inc jbe jae out sahf cmpsb aaa mov repz ss outsl out sbbb out mov in xchg pop lahf cmp inc and sarb scas gs test sahf mov sub push xchg xor sub ljmp add enter daa pop das in loopne hlt int3 mov xchg cmp sahf jecxz inc add inc mov push and push cmp dec lret xchg mov cmp movsl imul dec std inc xorl jecxz pop pop xor loop cmpsb cmpsb movsl sbb andb je mov in cmpsb test testb xchg icebp cmpsb bound lret setbe lea sub gs test stos gs (bad) cld push mov test arpl push lods inc xchg pop gs mov inc andl or pop jecxz jge xor lcall data16 lods push pusha mov xor (bad) aad xchg push test lahf adc pop je imul push sbb (bad) mov fwait test icebp les jae pop (bad) jo dec sbb iret inc out mov pop add in lret lret push fcoms call mov and adc mov movsl ret dec es stc xor insb pop mov mov sbb and mov lock pop addr16 or call ja movsb daa sub rcrl pop insl out dec arpl cli ss adc pop jo (bad) lret test and mov out sahf mov xor loopne rorl (bad) jne xor sub loop mov inc xchg sub add pop inc orl jne push aas aas lods int3 sub stos dec dec repnz js les mov mov jge jns or nop lcall repz sarl test fs jns sbb in mov xor in popf fisubrl cltd cli inc xchg and inc add fdivl repnz sub push xor leave into mov mov sbb cld pop mov psllw mov fdivrp mov jmp es mov jg cmp dec les hlt pusha in dec sbb aaa gs insl fmull ds movsl pop outsb test roll fistp pop inc xchg (bad) aas loope inc sbb cmp and sti in cltd fidivl adc adc (bad) in add mov mov add pop iret les pushf stc mov scas out and sbb (bad) in inc mov jmp xor fistp mov dec rcll and mov loopne gs lea and ja popa out dec test sub and cmp jns movsl cltd mov jne lds pop std lcall int stos aaa mov xchg ficomp mov adc out sarb aaa pop pusha jnp mov mov out repnz pop (bad) cmp jbe and mov mov mov add dec shlb iret mov cltd mov int cmp mov push clc mov or cwtl mov mov jle movsl rcll (bad) aam sahf mov lods in imul or mov popf pop bound loope xor fsubrs or cltd repz mov orl sbb mov fcom push stos push xchg sub mov cmp sbb pop (bad) mull aas roll mov enter xor lret push and dec pop das adc insb xchg lahf imul and sub adc jecxz,pn mov push lea bound cmp and jge pushf aam inc xchg sub (bad) fcmovb test jns mov xor and je pusha mov out bound adc stos inc inc push sbb xor pop aad xor push xor mov call fild mov cs in dec fwait leave sbb xor and or bound fmull rorl cmpsl mov movsl popa jecxz,pt fcomps sub xlat test xor adc mov lahf pop and pop and xor es and data16 mov fistl sbb and xchg mov xor out aam cmpsb xor test sub jmp pop add int3 bound xlat cmp arpl stos mov in sarb test xor xchg add jecxz lea add cmp inc sub enter xor push (bad) dec add dec pushf mov ja or xchg outsl daa jge lods dec jmp ret xor dec out and insb and pop idivb jae sub bound xchg sbbl push bound lock inc mov add adc mov imul subl out pusha dec adc sub push arpl or test jne pop (bad) repnz cltd xchg test movsl jg pop test stc pop out ss int3 sub cld pavgb gs and xchg inc (bad) mov cmpsb dec mov test rorb jns into cmpsb add pop lods pop divl lock std jb push xchg roll adc inc (bad) cmp jo cmp test adc in js pop mov and sub mov ror fwait es cli outsb push inc push (bad) enter test or js lret xchg pop pop dec inc std or fsubr xor mov mov cmp pop (bad) mov shll les imul sahf push push pop mov movsb xchg dec (bad) int mov pop inc mov inc push je jmp rcll cltd jecxz xchg push mov (bad) out in pop cmp mov jg sbb mov mulb and push jno ds mov dec jae pop loope (bad) xchg ret push add cmp and inc dec jno sbb sub sbb mov mov dec inc adc push mov cmp xor orl cmp int mov cmp pop hlt (bad) cli mov inc scas dec mov insl stos loope out or sbb movsl mov push fcmovb jmp jb cmc sbb dec pop (bad) jbe in sti mov pop and ds loop fwait push inc adc rol pop cmc insl (bad) jnp cltd pop movsl mov push icebp inc add mov stos mov outsl out test inc push cltd dec sbb loop and xchg jmp xlat mov imul loop pop xchg imul lret pop out dec rolb loop js faddp jae and pop adc add addr16 lret add out mov dec sbb sbb mov lcall mov popa push cld je or aad add or pop push cltd jecxz gs in dec xchg test mov (bad) enter int3 fsubp mov or rcrl sarb and mov xchg cwtl mov mov ljmp or or pop or inc cli and iret add (bad) popf jns sti cmpsl pop mov (bad) int3 mov js xor push movsl inc and mov scas xor add dec rcll pop mov mov aas cs mov mov int pop xchg movsl and and dec dec mov inc mov xor out mov mov lret mov push into loope or mov addb aad mov and xor cmp inc inc or mov enter call mov sub jne fnstsw mov hlt pop push mov mov mov fisub (bad) cmpsb stos and mov lock cmp pop call aad mov jb out xor ljmpw cli push mov rcrl das push (bad) out outsl (bad) fs jp loop pop rclb mov lock sbb mov push sub movsl mov mov scas mov jae adc mov les sub stos and xchg aad cltd push rorl insl fldenv repz pop stos xor mov dec push cmc bound mov mov sub movsb jns cwtl mov call mov lea pusha xor sub mov xchg add lret andb jp pop mov add movsl outsl inc sub mov xlat movsl jecxz jb mov mov xchg stos stos mov pop fnsave cltd jne xchg sahf mov and mov int3 mov ja pusha and (bad) rcl lods lea lock and (bad) fnsave repnz mov jecxz or movsl sbb and xchg orl or enter je shl mov fsubrl mov xor loope ret mov das mov or (bad) jmp ja jl dec add pop push mov adc mov mov icebp shll ds pop pop stos xchg fistl movsl dec loop scas sub cwtl out adc dec or pop fdivrl rcr mov lock xlat sbb setns leave sti push stos push int cmp jbe add fwait mov je (bad) dec sbb and mov int3 pop add popa repnz mov lcall push loope mov es cltd cwtl jecxz bound mov inc aad pop xorl dec or add hlt add mov dec aas sub jb jns and cli in lods daa sbb call pusha add push pop stc notl ss mov mov xchg (bad) mov test lods pop movsl jge movsb test negl popf mov das pop dec dec test sbb sub lret test aad adc imul cmp fimull incl pop pop fs dec jo mov xchg mov add mulb jmp xor movsb loop jb cmp out mov sti es mov cmpsb rorl out xor inc adc lods pop or cltd mov push insb sub cmpsl imul xchg mov mov jne pop mov enter aad mov repnz or es mov jns leave lret xchg mov iret das or mov mov cwtl mov or gs sub push cmpsb push sti mov rcl sbb (bad) nop lods sbb sub insl mov jo incl call or mov int3 out mov mov idiv adc jns mov fidiv cmp fstpt std xchg cmpsb lret and cmp pushf xchg fsts push or jbe faddl jns test aad xchg mov ds jno movd cmp xor das arpl scas rclb test loope aad xor sbb lock mov repnz imul add and xchg xchg dec or movsl mov stos mov aaa aad bound sbb repnz ds out push (bad) fistp stos mov pusha imul cli jns jbe mov mov outsl out push jo mov sub sub flds adc andb je mov pop inc xor add mov clc adc and ja shrb or mov add outsl (bad) sbb cltd fnstenv xchg lds inc adcl movsl mov mov xlat sub mov cmpsb loopne bound xor fist outsl inc push lea les inc stc lea push lcall shll cwtl ret or into mov int3 mov int mov sbb xchg ret mov push add (bad) jmp add pop mov repnz mov or jnp cltd mov sub shrb mov ds insl xor adc xor pusha pushf sti movsl movsl push add mov rorl jae bound jb out mov or cs mov cmc ljmp xlat or loope mov inc jg mov jbe fldl xchg or jg and add inc arpl pusha xchg and outsl dec mov sub popf ret sbb dec mov movsl sahf lock add pop pop jl clc jne adc or sbb std pop mov lds fdiv mov mov out push pop inc xlat dec andl cmp cmpsl pop popa mov xchg lds rdrand test jge cltd hlt gs ret mov add push sbb and add mov pusha imul inc lcall sarl lret mov sti xor xor mov mov inc and mov ljmp xor cmp mov add mov sub icebp cltd fisubr cmovl cmpsb js int mov mov cld xchg scas pusha sub xchg sarl adc sub insl movsl loopne in jge (bad) mov mov cltd xchg push or movsl mov cmp aam test cmp dec xor mov pop xchg shrl clc popa push test sub add jle mov js or scas inc int3 mov xchg test (bad) lods stos pop mov inc adc dec xorb mov push add gs sub and mov mov cwtl sub xor mov lods (bad) leave mov into bound cmc movsb int3 xchg popa inc sub inc cmpsb pop loopne xor cmp xor (bad) push mov mov mov pop shrl (bad) lret xlat rcll sub fistl and pop insl pop ljmp mov cld je insb test adcl scas bound ret adc lret popf je gs ss fldenv repnz repz mov outsb sbb and xchg pop and stc aaa jmp arpl jl pop outsl xchg inc pop test loop fs push pushf sub jl add push ret cmp add cld addr16 pop sub out adc cli dec je mov xchg in inc jno bound sbb or ss leave xchg fadd dec mov ja xchg clc pop out sarl loope xchg cmpsb fstpt movsb push bound scas mov stos add test adc inc dec pop out jno xchg in sahf and or and cmp js int3 xchg cs jns (bad) out clc xchg inc adc movsb fwait lret arpl jno sarl pop mulb adc xchg cmp mov aaa and in sbb rolw adc dec pop xchg adc cmpsb aam stos mov pop add mov lods or es and clc sti sub int xor js jecxz cmc dec add sbb test jmp inc insl push cmp adc cltd ret cmpsl imul bound insb hlt rcll and mov mov mov or stos mov gs or dec cmpsl fildl and dec and cli cltd mov and xchg insl xchg adc push add fs mov insb xchg mov lds imul mov mov stos out xchg mov out mov rorb pop mov (bad) fwait lcall mov test mov sbb sub mov ja or (bad) xchg out popl pop mov movsb mov aas and call ret ss loop lahf lds sbb mov js sbb mulb mov incb mov insb push test or push sti out mov mov mov jns push pushf push push rcrl mov xchg lret sbb xchg jge stc mov arpl mov push (bad) push sti push sub sbb mov dec push insb mov add test jle out add lods or mov sub cmp mov jle or cmp mov leave xchg push movsb ret xchg cltd mov fbstp xchg xor push mov and (bad) xchg sub mov push stc (bad) mulb insb cmc aas pop mov cld test or imul aad mov xchg (bad) mov sbb aaa cltd mov xor cmpsb jl fnstenv xchg mov ljmp sarl or sbb (bad) sbb mov aaa push cmc (bad) pop mov xchg jo imul loop aam mov jbe (bad) loope cltd (bad) push mov mov pop lret arpl aam mov lea and sub mov mov inc mov int3 and pop cmp adc pop repz in mov fsubl stos and jge cltd popa rorl mov mov fbld or mov push dec mov out movsb jb xor inc or or repz dec stos in daa das xchg mov cmc outsl dec rcl mov jge cmp mov and mov sbb idivl lds (bad) xchg ja outsb lock sub push inc or subl mov mov push and sar aam jnp scas movsl insl movsb mov mov movsb nop les add repz sbb in add xor mov loopne js in (bad) leave mov in in xchg jns sub push mov xchg or inc lods movsl lea mov mov jmp dec (bad) fdivl movsb mov mov sarl data16 cmp fs pop mull adc movsl push inc adc mov dec mov mov sub adc mov lods stos sbb aad xor stc sbb pop mov insl add mov cli mov pop mov dec mov and test cs cwtl xor popa mulb icebp das lods stos imul pop cmpsl into mov inc sub sahf sbb lods xor xchg (bad) fimull mov pop imul lahf mov fwait mov sub pop inc or std mov loopne fdivs out outsl out inc cltd pusha loope in ret (bad) lods test aam xorl in mov outsb xorb adc jnp sbb les sbb popf mov stos jne scas inc mov mov enter sub push sbb push mov xor cltd loopew out (bad) pop int lret push xchg fbld mov mov sbb imul test aas fld cmp cltd add in pusha mov and mov push movsb mov imul xor add xchg sub pop fbstp cmp lahf lcall mov cmp cmp jo or sub fs orl xchg mov xchg ljmp inc adc mov (bad) and les addr16 loope call and out rorl pop xlat cli jo scas mov popa cltd cmc es in outsl mov push jge push xchg sbb ljmp mov push pop stc pop lret test imul cltd mov std in repz jae adcb test int3 ja lcall xchg call movsl stos pop out mov (bad) mov xchg mov test or outsb das es pop out imul cltd or xor push arpl pop lock mov jo scas lds pop pop jle (bad) pop orb xchg aad gs mov orl (bad) movsl sbb dec movsl ja push push cmpsl bound (bad) mov loopne dec gs enter jl shlb push or ja jbe orl aas lahf pusha ds jns pushl mov pop std dec jecxz sub dec popa add ds pop aam or into mov xchg push dec jmp sahf in jmp in xchg adc daa imul movsb sub lock mov mov bnd mov xor or adc xor push xchg jne jae daa fbld nop in pop mov push lret mov mov and add inc xor mov out popa testl vmovq test fstl jns cmpsl in repnz jns mov cmc xor mov mov js (bad) pop xor mulb add cli shll stos and jns sbb or loop sub stos (bad) jo inc cmpsl int3 (bad) inc sti sub lods dec cwtl in out sbb das mov dec cmp aas popa mov fstpl jp or out push (bad) or mov (bad) pop mov das cli mov or pop movsb mov push testl les and bound and sub add bound in cmp loop sti repnz mov stos jmp das lock in into or pusha lods jecxz pop pop mov aaa jnp dec mov sub inc pop or xchg (bad) inc cwtl xor into cmpsb gs pop movsb jns pop mov bound xchg add jecxz adc imul pop daa inc push mov mov insb pop ret mov mov push je dec bound inc in mov sbb vcvtdq2ps adc jb sbb fidiv mov add sti sbb fistpl xor or pop xor (bad) loopne lock repnz lods loop lods in test fs or shl inc mov sbb xor xor bound adc out mov push and sub jno dec inc leave mov lods xchg out mov pop fs push imul stos mov xchg sub shl or cmpsl add jecxz lock iret adc mov jle aad (bad) fwait xchg fiaddl ret mov sub or xchg (bad) jnp adc mov sbb mov nop jecxz add mov dec dec or aam mov fstps std nop push sub arpl mov ret mov test mov stc out leave movsl lahf cmpsl mov dec mov in xor pop and mov nop and mov lock cltd sti and add pop sub mov lcall cmpsl loop xlat inc ret xchg or jne sub (bad) in mov arpl imul inc mov stc jno mov fcoml inc mov lret cmp mov movsl fwait mov sahf mov popa pop shll or and add loope mov adc out outsb stos xchg sbb ljmp and adc cwtl push rcl mov pop xor push sub jmp jle,pn (bad) ret dec add xor movsl test inc pushf mov in lahf add arpl adc in into pop roll stos movl adc mov xchg dec lods and movsl out xchg lds hlt pop push out insl mov cltd gs (bad) dec cmp mov sub ret fcomip insb dec stos inc rcrl pop jp sub jbe fist fdivs jae push adc or enter inc pop je lock sbb cltd incb call mov xchg cwtl adc std out xor pushf mov pop or ljmp mov pop fisub jmp popa pop movsb test ret and jno stos xchg imul cli ja sbb movsl mov sahf xchg sbb adc mov cli (bad) jmp xchg (bad) pop or mov (bad) push inc mov adc mov addr16 aaa mov pop mov pop jle popf mov xchg cmp outsb xchg adc push cmp jo add mov mov mov pop movsl cld mov (bad) ljmp xchg cwtl std mov cmp movsb xchg mov cwtl cmpb sub in sub jg mov sub xor mov test sahf daa inc (bad) xor stc es mov jl lock dec jnp (bad) ret dec cwtl mov sub (bad) fdivrl icebp xor out push hlt cmp inc inc subl (bad) in push adc js inc xchg js pop sbb movsl cmp jno dec rolb icebp sub pop push je pop mov cmc idivl cwtl cltd in sbb push add sbb xchg pop cmpsl sub cmpsl and mov mov mov shl pop mov rolb mov lahf das sub xchg (bad) xlat out push cmpsl adc sub push gs jg xchg aaa ljmp rorb or int xchg imul loopne mov inc (bad) addb and lret mov adc pop pusha stos movsb sbb dec scas xchg enter cmp and ret jo push jge mov inc adc mov mov sub jb sub data16 lahf hlt mov fbld adc out push cmp push ljmp mov lahf mov call jbe inc pushf mov pop aad pop rcr mov cltd test adc inc inc fist shlb imul xchg mov outsl (bad) add dec cmp mov loopne movsl add clc (bad) or mov ss je iret mov ror xlat pop sub fidivr loope xor add cmpsb lea int3 mov idivb pop jg and mov mov (bad) push aad mov dec cmp pop jl popa popf movsb pop lds xchg mov mov inc pop fwait or or sarb iret in sub pop xor lods ds sti push leave ss pop (bad) (bad) pop dec cltd sahf mov das mov mov xchg (bad) leave inc mov in xchg jo icebp pusha loopne leave push and lods repnz and mov xor mov sub out mov in iret dec (bad) jecxz and mov mov lds andb sbb aas cmp xor sbbl pop sub dec cltd (bad) add into push popf xchg arpl push loop mov fimul jecxz mov hlt cltd jmp jb ret lods popf ss mov mov xchg and lahf mov or cltd negl mov (bad) dec and mov mov sub pushf mov fwait mov dec test (bad) and enter xorl (bad) mov sbb icebp dec or lret ret xchg sbb mov fs push jns sbb cltd cmp xor jmp inc and lods jmp push mov adc xor jbe or sub data16 mov sbb repnz addr16 pop dec mov es push cmovg daa xor mov sub fldcw into scas cmp lods and loop sahf (bad) mov cmovl scas pusha inc sbb aam cltd outsb mov and cs imul cltd mov imul in jns jge xorl xor pop bound aam dec inc adc andl mov ror add popf stos cmp mov and fisub loope stos movsb sub or test icebp data16 addr16 into sub xchg je cmp mov adc sarb push in cmc imul ret and sti cltd pop mov arpl cmpsb (bad) adc sahf and out mov incl jo or test lock rcl cmp imul lods xchg subb lods mov inc out dec mov ret add mov seta xlat adc aad sub sub and sub mov push dec cs test sbb rcrb pop insl jmp mov sahf mov jbe cmp cmpl cmpl call xor cmp adc subl mov mov dec dec je out mov pop or mov sub ljmp mov pop lds lods pop and dec arpl xchg cmpsb mov dec int3 jae fwait mov bound xchg mov testl pop push test cmpsl popf push sbb bound test jg dec cmp dec es lods or mov rcrb xor xor push jns jecxz add lret add mov icebp sbb push scas and cli popf cmp cmpsb pop mov mov sub pop sti les push idiv jmp lfs (bad) adc lret stos adc jnp add pop incb or inc xchg and adc mov mov popf cld mov in push xor mov add xor mul or sti inc (bad) movsb sub stos out bound addr16 dec in jno pop loopne fs dec push adc (bad) pusha mov xchg xchg out repnz and jg xchg sbb roll mov ja scas cmp pop dec or (bad) sub push or sub mov movsl or fstpt mov sub pop xorb inc sbb mulb out mov add jne pop inc sbb (bad) icebp call ljmp push mov aad jg sub and (bad) mov dec inc in mov cmpsl or cmp loop adc pop adc lods and add pop rolb shrb jg jno mov in loop add or mov dec mov loope jmp movsb cs shlb mov andl (bad) popl cmp mov xchg decb loopne ret pop push fsubs sub nop add jns in scas mov call mov mov (bad) xor (bad) out mov test lret mov jmp es xchg idivl std test mov pop mov sbb insl sub lds clc imul and and frstor push push or push dec xchg (bad) mov mov mov subl jg cmp push adc mov cwtl mov xchg inc xchg fnsetpm(287 cmp push cmp idivl fldenv sbb in mov mov push int3 loope mov xchg fstps xor std mov (bad) mov mov mov mov test sub (bad) dec add aam lds mov mov cmpsl adc cmpsb pushf mov jp movsb sbb subb mov repz inc clc mov into lea cld cmpsb test dec outsl dec push jmp ret cmp es add and test addr16 pop adc dec push mov push mov dec jns pop jo fmuls movsl pushf mov insl pop popf cmpsl mov imul es mov mov lret dec (bad) push jecxz loope out mov jne xchg mov mov xchg mov sub pop fmuls addr16 mov pop jns fbstp mov loope shrb test (bad) std cmpsl push shl mov nop mov mov pop in and aaa pop test js and inc or push pop add jo (bad) cltd xor mov (bad) push mov sub rclb movsl lea xchg call popf repz jecxz lret add cmpsl (bad) aam mov xor inc (bad) mov mov rcl and adc fadds push mov (bad) ds les mov ret fucomip mov (bad) mov (bad) into mov add ss jp (bad) or mov idiv mov add or or sbb dec (bad) cmc pop lods (bad) sub sbb icebp cli gs xchg inc test imul dec les ljmp sub in daa mov les cmpsb mov nop xchg (bad) cli in out aas adc les push imul push faddp and or pop inc inc outsb incl push cltd fsts cld inc sbb or add cmp bound adc or in dec loopne push lock dec lea adc mov and fist jle negb shlb ret rorl pusha mov xchg push iret sub push mov popf mov nop cltd adc out mov mov movsl imul arpl ja mov mov push out mov sub mov orb mov int3 sub loope in mov push inc insb or aas sub lret test in mov insb movsl pop cmpsb imul jne push push push mov lahf push xchg push mov xchg ret cmovo movsl inc jns icebp pop cmp cmpsl ja dec sbb cltd push into lret or mov mov es inc mov xchg int or int3 (bad) out sub fnstsw dec or cmp inc subl iret repz cld add adc scas cltd inc push lret sbb imul test cmp mov in cmp cmp scas xchg cltd pop pop stc mov nop pop loop imul xor or ss icebp dec popf cmp ja out mov sbb sarl aam add sub into mov or pushf test cmpsl stos sub and in in cmpsl xor cltd andl add dec and push xchg jmp aad xor into pushf xor (bad) xor jno fmull adc and sbb fimull sahf pop cltd imul jae movsl fisttpl (bad) cwtl cmc mov shrb insl jns movsl pop xor sahf add push (bad) in sub outsl xchg mov stos mov ljmp fnstsw push jmp pop push dec mov imul sub fdivl sbb jle (bad) jp jo daa mov jecxz into fmull cwtl mov mov jno cld pop mov mov xchg inc or std ljmp and mov mov mov (bad) test sub mov push inc pushf mov mov fwait mov push mov aas sbb into (bad) xor xchg adc (bad) push addr16 mov notb jns insl es mov leave jp dec mov and add cmp push pop testb insl inc sub cmpsb mov xor shlb es xchg sub in push jbe cmpsb (bad) imulb scas and out cltd mov cmp ljmp push sti cmpsl pusha push or int3 loop and scas inc sbb jge movsb and xor or inc movsl add pop mov mov and shrb fisubr or pop cmp and daa sbb cmp aad push (bad) mull cwtl mov test mov jne out xchg push gs outsl add lds sbb cmp aad orl movsl cmp jo jmp adc pop fnstenv mov inc data16 sub jp push (bad) and (bad) mov adc movsl adc jne mov aaa std push js aam loop mov inc dec in mov sub sbb lahf mov ret out (bad) sub in les push push cmp mov lret add ss shll dec mov imul loope jns xor ds je (bad) test sub in cltd add aam mov push and push je imul xchg lock dec ret dec xchg adc xchg leave lret pushf invd mov and adc xor (bad) mov and add xchg sub repnz hlt mov ja pop fstpt out cmpsl (bad) xor and mov cmp xchg push mov jns inc mov loope repz xor inc adc mov pop dec rolb xor aam sub addr16 mov inc daa lret push mov lcall movsl ss mov pop mov cltd data16 cs xchg pop push jns pop push test ja test pop ret shrb stc adc and push mov movsl (bad) mov mov jns mov aad loopne nopl fcompl in sub mov cmc mov lock bound lods arpl fwait jecxz xchg cmp lock sbb adc push dec xchg call cmc cmp add cltd or icebp push pop ljmp adc lea push jae dec movl cmpsl mov cmp sahf rorb je mov cmp or popf movsl popa mov mov js inc pusha jno imul push mov adc movsb insb inc and dec xchg pop into in mov dec loopne std adc or mov jns test mov popa dec and loopne inc dec cli xchg cmp mov enter shrl dec cmp sub (bad) lock and dec (bad) sbb xchg add mov test adc into jg add out cmpsl test iret sub test cmp xor stos jbe adc cmp and popa pop idivb or mov daa mov jmp pop fidivl mov add ret jecxz ja jo push cld imul or cmp mov pop mov movsl fldenv mov pop inc pop inc mov pop mov mov (bad) pop (bad) push data16 pop jge les xorl dec pop bound in lret loop frstor and shlb stos aaa out xchg in and (bad) cli adc iret push pusha stos sti (bad) mov push (bad) das fwait mulb loope and xchg push nop pop inc cli loopne dec shlb jno repnz mov insl push add push and xchg dec xchg fistpll mov aam pop sti in mov xor xor push cmp mov out data16 jno cwtl sub shll lcall ret test les negb inc push data16 sbb jecxz jle inc clc and mov mov pusha add and iret popf mov dec mov repz mov lock ret (bad) jl mov and mov cmp push iret add jbe lret push cmpsl inc jb,pt and push sub mov xor mov dec mov mov mov nop pop cmc mov test lcall ret subb stos outsl mov in outsb aaa push xor pop mov hlt dec or pop inc (bad) mov pop lahf imul (bad) lret js jb cmc mov cmp mov add rorb push add movsb loop aad and out (bad) outsl in mov lcall push dec loop mov cmp mov jns imul jne loope inc pop (bad) cmpsb pop and movsb mov out add aaa mov and xorl mov pop cwtl lret xlat inc addl pop cli daa add sbb xchg rclb js sub fdivrs gs outsb fdiv hlt mov push and es xlat sahf push mov mov or call mov dec dec sub inc cwtl out mov mov mov fcomps add sbb mov sarb xlat xchg mov mov (bad) pop dec mov push loope add cld es xchg iret fs push cmp push daa js aam xor (bad) in dec mov sbb mov and push mov rcl wbinvd hlt mov (bad) or push push ret mov cmp daa lods jmp mov mov xor (bad) mov cmp pop into cmp aam mov push xchg jnp jg dec pushf jmp mov add loopne add inc pop repz pop movsl std dec hlt cs jb xor mov mov notl dec mov jae or push mov xchg leave mov mov push cs cmp add mov or push into and lods fistpll xchg xchg adc daa addl mov loope mov sub cmp jl movsb sarb out lahf or sbb xor sbb sarl mov (bad) into push mov aad mov pop fildl (bad) push mov sbbl out jb xor and or iret jge and movsl out xor pushf test andb or lea and cltd cmp fs aas pop arpl push pop (bad) mov fwait mov cmp (bad) stc mov sbb stos sti loop (bad) lods sub adc out sar movsl mov clc pop xor (bad) jbe scas mov cmp push js pop loop mov dec jae inc test ds adc jmp xlat dec cltd jno cmp fld subl ds test movsl cmp push sti mov push or xor push jle pushf or repnz add fdivrl adc test fwait mov xor jge dec cld sbb mov frstor pop ret clc (bad) mov je fs pushf xor jp out mov push adc mov mov lods adc sbb lahf shrl lds sub insl movsb fadds rorl mov pusha test iret int dec (bad) pop jg jbe or aas dec jecxz (bad) cld or xchg pop pop scas mov es jmp cli js mov shl gs and in stc mov sti mov arpl and lret adc and in jae ss sub dec sbb cltd mov mov or scas jo aam and fcomi mov cmpl mov mov mov (bad) jmp scas shrl sbb movsb fdivs repnz jl mov sub fdivl and mov xchg mov or pop mov loope pop inc push loop (bad) fmuls lcall je xchg xchg mov fstpl and cltd mov mov push inc sbb (bad) inc and sub inc adc mov sti mov adc xchg mov stc mov cli aam mov je ss inc leave nop or out and hlt jns or xor nop fstpl sub bound ret sahf push sbb mov dec and or cltd mov mov imul inc nop mov aas cmpsl and fistp and jge xchg and movsl and insl arpl mov lods lds mov mov insb sbb mov daa push orl or enter sub sahf mov (bad) fucomp aaa call je jns xchg fwait mov xchg mov or cmpl int3 mov mov push mov in cltd enter mov add mov (bad) mull ret cmpsl push dec out je jns jb ret stos lods mov loop bound or sub sbb push xchg aad mov daa mov jne in push mov dec aad mov imul rcll mov dec sbb lds stos fcomi in outsl dec xlat mov jns out fbstp mov push in mov sub jecxz mov hlt dec aas sub sub lret pop insb test xor mov (bad) mov cs and clc sub mov (bad) popf (bad) out das mov mov cmp aam jp mov cmp int mov in sarl add mulb sarb jg pusha sub or clc jo lods shl jge pop push xor jnp test mov std add mov mov push jo mov mov movsb fwait adc dec xor jnp mov popa pop clc pop mov aas mov or adc test push ret mov lods inc fild xchg push jbe scas aad imul imul inc pop dec jle xchg jnp stos movsl pop adc (bad) inc mov sub aas mov inc les insl or cmpsl or dec fldl outsb es add scas xor bound and adc mov and rcll subb lret imul and cmp mov or xchg jg xor outsl lods mov add add arpl mov ljmp lock dec mov xchg xlat test lahf pop cmpsl lods popa ljmp jnp pop fidivl add test push push pop jb pop (bad) adc cltd sbb in or xchg jecxz sbb adc test stos test inc or xor jne dec mov das js add and in roll pusha jne xor sbb pop inc xor adc fcompl mov cwtl xchg mov mov loop call ret jg int3 in inc mov push dec add movsl fnclex jne adc outsb in cltd xchg std pop rcll das cmp pop mov or stc ret pop mov jmp jae or push and cmp mul mov pop mov jp int3 sahf cltd mov mov movsl aad pop xchg call roll cmpsb mov dec ret xor je push fwait add mov mov jecxz pop les stos mov ret mulb pop inc stos out mov adc mov fdivl xchg add add cmpsl scas mov rorb dec clc mov aaa call dec repnz out mov mov xor adc lock mov xor lahf mov mov lods push inc adc and inc dec adc inc out adc xchg loop pop shlb xor (bad) mov pop sti jae mov adc nop repnz cltd push pop cld push dec xlat dec cmpsl add stos insl (bad) xor push and shlb add insb mov pop loop mov mov adc jbe lods test jg mov mov xchg xor mov sub dec movsb ja mov negb int3 inc (bad) xor push dec or ret out fnstsw mov adc aaa out insb rorl sub shrl pop mov fwait icebp cmp int3 dec (bad) cmpsl loope push das mov xchg mov scas es cltd add cmpsb sub (bad) lock xchg bound sub cmpsl pop adcb mov outsl ljmp and gs mov xchg out mov xchg sbb mov in jg cmp sbb (bad) mov xor scas das (bad) push mov push lock mov sbb mov cmp jae push inc arpl xchg jb fbstp xorl mov insb sub pop jb pop and pop jmp imul les jle movsl add push leave or inc and push mov sahf mov add jl sbb cmp nop xlat out mov sub mov mov iret imul jnp movsb inc cmp dec mov push mov mov mov push add mov sub inc adc dec mov mov adc xchg sar xchg insb mov jae push enter stos mov pop dec push mov mov pop adc mov inc inc mov jb cli dec in push adc jmp popf xchg add mov sub loope pop pop adc pop push mov pop movsl mov add xchg sub push aam lds stos movsl shl pusha notl adc lods fidivrl cmp sub into pop test pop cli or in stos stos movsl int3 sbb rolb jg jnp cltd inc mov adc test mov addr16 loop (bad) cmpsb mov adc pop mov xorl adc mov pop add mov jmp je imul xchg test adc outsb (bad) mov xchg jne in dec jecxz aam aaa mov gs insl adc into mov scas mov ror mov xor jo xor repz inc mov stos xchg mov mov call cltd insl insb (bad) daa mov outsb pop and leave mov push inc lret rcrb xchg mov cltd push push dec cmp or (bad) cld inc cwtl in inc mov pop sub add and lock (bad) mov add dec jmp imul mov stos and enter jg flds jmp call fidiv cltd stos lods ss add xchg push sub push mov (bad) out jl es xor push (bad) fisubl xor push pop push bound push push pop dec dec test js mov pop mov fwait test cltd roll insl or mov push push mov xor rep sub in jecxz daa cmp movsb mov mov xchg in mov sti xchg add loop inc or arpl movsl push xlat (bad) xchg push out cmpsb gs pushf cmpsl stos add fisubl mov outsb pop cltd ret jp (bad) repz sbb inc xor push rclb and int lahf ljmp lcall and cli pop xchg (bad) mov hlt lret imul arpl lcall or mov scas inc push pop add loope push popf loope jns push cmp movsb add pop jb subl loopne mov daa sub cmpsb js pusha (bad) mov loop xor out and mov and add or push arpl mov lods out ss imul push sub sub sbb jl (bad) push mov cli pop cmp loope aas popa loopne bound (bad) lea or xchg xchg aam dec mov cmp sarl pop rclb xor jmp jb mov mov pop pop fildl aaa cld shlb inc pop dec out adc pop sti (bad) scas pop push (bad) pusha xchg mov or lods incb adc xchg jmp xchg dec (bad) sbb mov repz xchg orl mov cmc fldt (bad) cmc push pop sbb bound mov cmpsl ds cmp sbb xor (bad) and adc xor (bad) into mov mov adc pop mov mov lods adc add pop jnp mov lds xor mov outsl clc and repz cmp adc (bad) stos loope cmpsl inc pop push ljmp jge xor js (bad) or punpckldq inc cs add lahf lret aam iret dec cmpsb out jbe lds paddw leave bound push data16 ret mov sub cmpsl pushl push int mov stc mov jbe push cltd jae dec cmpsl pop cmp mov out xchg scas stos into popa add xchg out and mov int dec mov bound pop (bad) mulb cmp dec mov xchg xchg jno cmpsb ret dec mov add pusha cmp test push scas in mov pop or dec int movsl outsl sub and push adc loop les hlt mov aad push in and fisubrl stos mull inc or mov cmp popf lods sbb and ljmp aam inc gs mov inc xlat (bad) repnz push fsubrl mov fisubr lods mov mov xlat lea popa lahf int and cmpsl mov push dec mov clc movsl scas adc lcall arpl pop (bad) cli xchg (bad) jbe fwait jbe dec and push (bad) (bad) xor lahf sub xor jmp aam das cltd and cs pusha jno loope mov adc and cmp jecxz (bad) ljmp sub mov repnz xchg rcrb fldl lcall es mov xchg aas sbb movsb test repz mov sub lcall sbb pop sarb sbb sbb jae sub xchg mov mov sbb stos or out loopne in addr16 pop stos subb popf shrb rol dec sbb jmp popf adc out lods mov add test pop xchg jne pop push in stos add gs es or out cmp pop sbb dec js (bad) adc mov cwtl fdiv dec adc xchg (bad) out cmp out movsb jns xchg (bad) es mov adc push mov jns mov inc ja sub lock sbb gs lahf mov dec push pop jmp (bad) mov sub jne mov sbb loope xchg add cltd out in iret scas or xor pop lea sub into jae adc inc repnz cltd or add gs imul xchg (bad) fstpl lock xchg sub das add xor cmpsl out push mov inc (bad) fsubl inc daa ljmp js pop bound pop xchg scas push sbb in sbb mov pop inc imul push adc ss adc xor pushf adc mov inc shll bound push (bad) cltd fwait movsl cmp outsl push scas pop adc inc (bad) xchg inc lock mov lock and add addl (bad) or cmp push push or (bad) (bad) loope lock cmp push rorl leave cli popf jecxz dec jmpw adc jmp mov cltd push mov ffree mov jge outsl sbb adc push mov pop ljmp repnz mov cltd adc sub and mov lock (bad) aad sub pushf cld mov lahf xor push loope sub pop hlt cmpsl mov les jge push nopl imul and cmp jle movsb clc xor jb pop and rcrb adc pop mov sbb push je push mov in and push and xchg mov sbb mov mov or sbbb inc (bad) jns jmp insl lds pop pop stos cmp xchg xchg ljmp pop mov data16 mov xchg data16 test inc popl mull xor mov pop jo pop lret push adc mov mov dec ja cmp inc push push inc movsl cmpsb int or loope popf jle mov push xor mov adc push dec (bad) pop add inc out xchg adc dec bound jl mov jmp and lahf pop dec les icebp or pop cmp incb sahf or mov outsb xchg adc mov ret and pop aad lea pop jo sbbl adc and adc out enter inc mov push in and gs push pop cltd cmpsb (bad) fsubrs arpl adc cmpb in mov push sub lods and xchg sub jmp movl fwait lea fidiv adc and iret bound loope adc mov cmc xchg sub insb push and ljmp pop movsl pop mov shr mov mov ffree cltd dec lcall inc add mov aam mov xchg dec jbe cmpsl cmp and mov and xchg push (bad) outsb dec mov jno (bad) les adc xlat and push mov jle adc mov cmp push xlat pop jb repnz arpl mov mov or pop mov and dec jns js rorb test loope cmp loop mov inc dec pop shll and mov sub call pop fidiv and mov (bad) mov xor lret add and aas or (bad) sub dec test add adc adc and mov jg or mov cmp xor imul mov mov (bad) fs loope inc jnp push add sbb lds aas ret pop les mov and popf hlt (bad) mov inc adc jle jp aam or sbbl in lret mov push cmp lds dec scas cltd stos push dec rorb cmpsb mov mov and loopne or mov cltd (bad) out lret sbb addr16 movsb xchg in lods loop aaa mul mov sub pop movsl das or lds or test and mov mov das cmp mov test push push inc repz in hlt fldt and addr16 xchg and sub out mov mov pop inc pushf mov pop push je mov icebp mov push sub pop loop subl subl in jns xchg fisttpl popa sbb or (bad) sahf popa les adc sahf inc sti shrl scas lret sub mov nop mov enter lahf (bad) mov cmpsb jmp outsb movsl cmpsl test jmp fsubl cli inc inc mov jmp test into fwait mov push mov jge rcr cmc jno movsb mov (bad) mov aas adc mov mov push bound jnp cmp mov negb jge sti fstl mov lock and sub push (bad) jbe adc and pop push in outsl add cltd fnstcw clc jle adc jae imul mov mov and dec add arpl inc out xchg mov sbb fstpt pop mov adc fidivl fwait cmp mov push sbb in lret xlat inc inc mov nop clc jmp jmp sbb xchg daa sub xchg sub (bad) leave mov push jecxz jno fisttpll dec ret mov shlb imul inc hlt pusha (bad) pop mov gs imul in mov repz leave (bad) mov sub test mov mov je inc push arpl jp push repnz jle xchg lds ror mov dec jns (bad) push ret push pop mov cmpsl test and mov divb add push rcll xchg mov or mov mov dec pop es inc mov mov inc andb (bad) shr push sub push (bad) insb and fsub xchg mov push out pop mov jp mov fwait pushf mov rcrb roll cltd sub addr16 sbb jecxz jns mov add mov addl mov (bad) fdiv mov push stc xor mov lret xchg imul and sub cmp mov in xchg pop mov movsb push mov inc mov cmp sbbb lahf je cmp movsb xchg mov pop mov xchg nop (bad) hlt inc int cmpsl fisttp jmp gs pop dec and mov xchg ror (bad) push test sbb mov ret sarl dec lods stos sub jo lahf pop std jne push pushf fsubl jle mov cld push jae mov sbb inc sub add xor pop repz adc int or mov jnp pop mull sarl inc or push int3 movsl (bad) cmpsl pushf orb icebp mov pop push jg mov inc loope call xchg sarb push push ds in out mov jge xlat setns mov mov ficoml mov subl xchg add mov addr16 nop data16 add dec sub xchg lea add pop fcoml cmpl or fnstenv pop or (bad) xor scas jecxz negb aad sarl mov clc movsb pusha cli lods mov inc sub subb push and lret sarb adc leave jns imul jns push and mov sbb pop icebp pop repnz adc push inc prefetchw jns dec mov lcall pusha xor cmp xor test pop or arpl xchg sbb daa jp std dec iret push das add or mov fsts fnsave arpl mov adc mov xor fxch sub dec lahf cltd mov mov movsl imul test cmpsl aaa jle dec sub cs in mov pop clc js,pt ljmp cmp cmpsb fnstcw cld shlb pop push in cs in inc xor jae xchg sbb xchg (bad) xor out cmpsb hlt xor cmpsb jns inc addb lock mov pop adc mov and fistpll out arpl sbb mov loope mulb push pop test (bad) lock adc in lcall push mov cmpsb mov inc mov dec scas add cmp fisubl xor inc lret xchg mov mov aam mov sub or mov dec loopne movzwl fdivr cmc aam dec push mov xchg ret mov xor lea gs or sar cmp mov orl sub xchg (bad) fs bound xchg fdivrs call popf mov pushf xor pop adcl xlat inc mov cltd or inc dec cmpsb xor mov cmpsb loope xorl into daa popf out mov jbe xchg lods icebp mov mov movsb ljmp lods loop sub push das daa inc popf xchg out fbstp ljmp push and jns jno aam xchg xchg pop (bad) fstpl mov adc addr16 pop sarb enter jb in adcb jns imul push cmp fstpl xchg lahf test iret pop mov jne mov aaa sbb xor fistpll mov test cltd dec int3 mov push cmp pop lcall lock ret movsl aas xorl dec mov std xor insl xchg pop inc (bad) pop rep sub cli pop cmp push in mov mov xor jne out arpl test inc stos movsl dec int3 pop hlt int mov enter cmp or lret insb (bad) int mov add or mov mov and or jno arpl adc imul xchg push dec push insl mov (bad) jo loop cltd xchg or adc repnz pop icebp sub inc pop mov dec cltd mov or stos mov adc rcrl push (bad) xlat imul mov mov mov mov sub adc xor dec add out int xchg orl dec push push sub xchg cwtl in cli xor push lock lret roll jmp das and mov imul mov das repz aam outsb inc jg loope mov repnz in push call popf mov adc leave xchg xchg cmpsl nop xchg fmull xor push sahf dec or stos cmpsb ljmp flds mov sub push sub sahf (bad) aam decl stos cltd outsl dec pop notb cmpsl jb mov stc mov cmp dec add and mov inc jecxz insl icebp add repnz ss sub mov cld fiaddl imul test jns popf adc mov cmpsl sbb jns or inc xchg sub les enter bound es push sub xchg adc aam fdivrs in insb jecxz mov daa pop cmc cmp mov dec add pop cwtl aas loope mov add lret jecxz ffree xor xchg mov test sub fs (bad) or sahf xor loope pushf mov mov or dec in mov xor lock mov pushf repz add xchg inc andl icebp imul aad les mov mov mov adc inc shll aad jb mov or add stc lea mov aad mov fcom dec add test xchg xlat or adc std mov sub push mulb jae xor jns cltd mov nop mov test stos mov and mov push xchg inc iret fmull movsb mov lahf scas ja bound and jle bound dec mov add movsb adc mov pop addr16 xchg fcmove stos mov dec (bad) xchg inc js mov inc ja (bad) cmp xchg rcr (bad) mov sbb mov (bad) lods scas xor sbb fsubl shl (bad) xchg adcl cmp or sub pop out sub xchg xor xlat movsl jnp cltd mov cs jp xchg sarl test adc movsb jl pop idivl xor movsl repz jge jo loope sub nop mov mov adcb imul js mov outsl xchg sub sub div adc dec mov xchg jecxz pop xor sbb mov (bad) mov ss xor lods mov dec aaa imul sbb mov mov cli mov mov xor jo cltd (bad) mov cwtl xlat sub pop and ljmp lcall inc dec xor mov test mov gs data16 cmp loopw jns (bad) jle cmp xchg mov fadds jle xchg loopne fcomps gs clc aad mov pop cli scas dec inc xor stc push pop roll repz popa push ds mov aas call lds cwtl push adc aaa rorl arpl lock inc repz and sti lret roll loop jl js xchg xchg mov clc ret mov mov adc les sub lret into adcb mov add cwtl std jo add bound scas mov mov popa pop sub mov stos adc mov aam lds and push popf push shrl push sub aam xor std addr16 (bad) int lea jp loopne orb and jecxz repnz and fcomp (bad) mov out pop pop mov sub inc repnz ljmp in jge pop mov cmpsl mov sti imul dec inc enter arpl xchg cli stos mov gs lods shl and or gs pop pop pop lods (bad) xchg xor clc xchg inc and adc sarl mov (bad) in pop mov stos pop sti sub pop das rcll bound mov out aam add push gs fnstenv insb jl fs sub ficompl mov stos mov repz cltd mov mov fdivs pop icebp lods stos adc sub cmpsb scas scas cmpsl xor lahf popa out mov add pop push sti lcall imul mov aad negb adc push push lret mov addr16 xor imul test sbb mov mov adc xchg imul les test and bound sbb jp lret xchg test pop lcall and mov push jnp xor (bad) xchg and push pop cld jno faddl jg outsb mov lods and adc pop cwtl mov popf adc xor mov sub outsb xor push das jecxz pop inc mov (bad) jns push movsl jae fadd xchg mov (bad) mov test sub test mov cli push mov push jle push pusha cmpsl mov movsb inc mov stos addr16 and sub jnp stc sub mov inc mov xchg xorb leave mov les adc scas adc mov mov lods add mov add dec pushf movsl mov or mov lcall xchg mov data16 xor nop mov mov xchg and mov and lods cmp pop sahf mov insb aas out arpl notb das sarl andl push inc dec and mov xor push sti and mov stos cmovno loope sub (bad) and dec or or xlat xor mov push int outsb mov vunpckhps xchg es inc pop mov shll mov sub and xor movsb dec push inc adc xchg adc inc shr xchg jp push xor (bad) mov mov push leave adc dec add nop cmc jo pop imul neg or mov mov adc mov pop into mov jle outsb ljmp pushf mov pop (bad) and mov sub pop fildl int3 mov out dec xchg or mov cmp (bad) int3 sbb and cmp popa insl andb xchg clc out enter scas xchg or dec ret test mov and pop bound movsb cltd shl jno cmp and push mov imul xchg pop fdivrs mov lods stos add stos loop mov repnz call jb push mov cmc sbb xlat mov and adcb mov dec push add jnp (bad) or loope mov popf inc (bad) xlat sbb and lods mov mov lahf and ss mov dec stos ret xor (bad) xchg or mov pop lods scas es jl pop jno (bad) cmp mov loopne push js (bad) aas and mov mov mov inc (bad) push fmuls or loop fs addl mov call shll jb mov cltd xchg idiv sahf sbbl sbb aas mov xchg sub cmpsl je mov dec insl adc arpl and pop call push (bad) xchg jmp jns lods (bad) adc lret movsl fnstsw (bad) mov inc sti or sarb pop push loop cmpsb dec push add mov sahf sbb lods (bad) pushf mov mov sti xchg data16 mov xchg loopne ds mov dec add xor pop sub and sub mov mov cltd jmp jb inc mov daa call popa push add sbb push cmp pop pop aaa into lds insl rolb int popf jne leave (bad) int cmp xor mov adc push cmc arpl (bad) mov sub fimull push jo jne movsl sub xlat jg pop popa mov jns mov pop pop dec or movsl fbld push insl push inc enter mov cli sahf or aam out mov repz or rcl mov (bad) aaa loop push sub inc imul rcrl jno imulb and push mov jecxz scas add nop and mov mov inc arpl xor movsl aam mov lds fwait mov inc fstpt rcl push cmpsl xor mov bound sub jne (bad) fs int mov subl div sti pop mov out mov out ret cmpsb and push das sub inc andl call jg sbb cmp cld sub sahf xchg ret push xor xor fs (bad) lock add mov pop mov arpl xlat push pop adc inc aaa cmc cmpsl mov sub sub adc inc shlb jp xor in add dec cltd lret mov int3 lods sub out jae and in cld pop (bad) movsl dec dec lcall jne jo inc sti and lods xchg stos mov and xor jo jp push mov mov insl in mov outsb pop mov dec or or outsb out lds mov push cli pop dec mov jle and into xor fcmovne movsl mov cmp ja test test repnz mov mov mov sti int3 test xlat mov scas cmpsb push sub fs pop fstps sub add cld rorb or pop mov adc mov mov pop dec outsl jae mov xchg imul dec insb in movsl lds repz mov jmp dec add sbb xchg push ja test add outsb inc xor push sub dec cltd ret outsl pop lods mov cmc fs adc xor popf push mov push dec movsl mov out imul or and jecxz aad cmp (bad) mov adc sub arpl mov fsubr push dec or imul lahf loop dec dec or sub fs adc inc push mov imul clc mov xchg mov and inc out xchg roll xchg pop cwtl xor in mov sub imul or mov (bad) pop mov xchg or (bad) xor les mov sbb jge loope mov inc syscall inc mov and int pop dec rclb test cmpl mov mov xchg xor ja imul mov aas push xor jge (bad) mov or mov dec mov (bad) into push int3 mov dec das and pop and scas mov jbe movsl daa stos scas xor push sahf xchg sbb outsb imul push ja cmpsl out test jno dec lds movsl push mov or mov (bad) push adc mov and inc adc inc cmp cmpsb into (bad) jmp aaa xchg icebp sbb sub daa mov adc loope xor lret loopne dec ret xchg dec repnz and add sbb or out test aas mov push sahf jnp sbb imul xchg mov imul mov add adc push sbb lcall jecxz jmp fidiv push cld cltd lods lret xchg jbe cmp movsl mov mov sti push mov popf movsb jle arpl (bad) sbb stos ljmp and scas jp add fstps push xor mov pop xor imul and mov sbb into movsl imul repnz fisubl jno mov sbb fldenv mov js add inc test mov and sub inc push xorl leave es xchg (bad) fwait das movsl sub add sti mov js movsb scas mov mov jb mov aaa add sti jae scas movsl cmpsb or inc cmp icebp aas daa lahf cld and xchg ljmp mov test inc and outsl add mov aaa pushf cmp cltd mov imul xchg loop ds std lret fnsave lods mov mov sarl push inc hlt bound aaa inc push jns jbe mov sub (bad) js cmpsl mov testb pusha daa xchg cmpsb out pop adc sbb inc pop cmp (bad) aas mov test adc daa arpl dec repz pop push xor shl in add out inc rorl daa cmp jno sub data16 xor sub loopne ret repnz add arpl push mov pop lahf jl es lret push mov sbb ror pushw idivb stos (bad) sar add push cmp notb mov lret xchg out bound int push sub loope push data16 iret lret adc pop repz lods jg cltd dec stos mov rcrl addr16 aas mov scas cmp pop sti fcom fnstcw imul mov jp and or mov andl mov test jno call and bound mov and xchg mov sbb sbb fldcw into daa lret dec push jmp ljmp pop cs mov pop and add test cltd xchg movsl mov add push out jbe push sub movsb (bad) xor xor xchg jb inc pop lock iret push pop push add mov jne movsb es push adc sbbl jge in loope popf bound mov outsl les loope lock sub cmp ja mov pop xchg dec mov dec les mov sarb lcall adc stos push loop and or inc lahf dec lods push pop cmp cmp ds daa pushf sbb nop jns inc xchg fnstenv sbb inc dec pop mov scas push push rcll out add pop adcl aam shrb and out subl out add pop in cmpsl inc pop icebp lcall add add mov fistp inc adc mov cmp push mov (bad) cs imul mov or mov push mov cs (bad) pop mov push loopne movsl rorl pop mov repnz loopne jo adc mov in push popf xchg fstl xchg aam negb ja pop dec cmp loope pop mov and mov (bad) loopne rclb push push mov insb jg loop mov repz aaa ret jb or movsl daa jecxz int in dec or in stos in dec loope inc sbb cmp (bad) test push (bad) cs cli fisub add sub cli lahf aad sub push pop sar add gs sbb mov mov test daa xchg mov push call negl and or sbb (bad) push jnp popf cli aaa lock pop jp push lea pop stc imul cltd adc add ja jo fs cltd and sub pop sti add jmp pop or les add jmp ljmp xchg faddp addr16 repz divb les mov rcl push insl adc mov cmpsb ss loope jge in enter adc adc les cmpsl xchg dec aas and icebp imul and stc mov xor daa (bad) aaa ficoml mov xchg in pop inc jne push test popa jecxz push imul adc pop jb xchg shrl push push add aam (bad) xchg cs jns pop pop mov scas mov rolb cmp inc pop cs ret jno add (bad) fimul sub ret lock add sub arpl mov stos mov jl jbe xor hlt mov sub sbb lock push aad lods inc dec xchg bound in nop (bad) pop xor push fs xchg and mov mov adc sbb imul test or addl sahf int3 rorb add or adcl pop das roll cld aam leave data16 or ret pop jecxz popa cmp xchg test dec jno loopne fwait in and dec mov pop addr16 jnp jns xor rcll outsb dec add push pop mov push (bad) outsl sub cmp mov ss jecxz aas jl xor jmp and inc mov mov lcall mov push std dec or mov push lahf mov add push inc adc test and xor and push and and mov out mov add mov in into sub push leave xchg addr16 (bad) and and pop ja fildl (bad) lock movsl dec inc or or lds roll jns xor add mov push cli ret add push sub push into (bad) mov js aad outsl mov jecxz (bad) adc jl sub push add insl push jae add int3 sti daa jecxz mov mov jo push imul repz leave push daa mov movsl sbb loop es outsl xor mov sarb cs jmp insl data16 (bad) movsl jg scas sub dec mov mov or jp loope test arpl loope scas movsb inc cld mov popa xor cmp jl test mov pusha mov dec mov dec sbbb xchg adc or dec mov fdivl imul loop out outsl int3 pop mov rolb and mov cwtl movsl in out addr16 jg adc (bad) pop (bad) xchg or mov mov test test or packuswb cmp enter or stc xchg xor fdivs mov cltd sti fdivrl mov or mov mov inc in mov or jp xchg in lea add clc push int sbb aas mov mov sub lcall push dec movsl mov pop dec cmpsb pushf pusha call mov ret inc imul and imul sahf push std jo loope mov push add js fwait mov mov loopne xor mov lahf and sbb mov xor cmc sub pop cmp jg in insl xchg (bad) (bad) pop (bad) hlt push repnz lods pop or xor mov clc incb loope push sub mov jp xor and cmp into andl pusha push inc xlat jl sbb mov mov add scas pop sub shll paddusw dec dec (bad) xchg mov arpl cltd std imul mov fsubl xor out ljmp testl add add inc xor cmpsb iret scas push jecxz mov aaa sub scas mov xchg add cmp xchg cmpsl loope mov mov push push addr16 cmp fidivrl jae cs sahf mov xchg push movsl cwtl dec je dec js movsl test or mov xor xchg sub and mov testl mov inc jnp,pn mov in push mov in xor sub int3 (bad) imul repnz imul push inc mov dec shr in fisttp ss es pop xlat mov or int jns or jl imul in mov shlb repnz test jmp cmpsl sub mov inc outsb out dec es and or adc cmp lds cs mov pop icebp inc mov jno addr16 adc add mov (bad) imul mov pmulhuw test imul and mov or adc pop enter xor pop daa sub mov dec (bad) (bad) repnz icebp jp mov push das add (bad) jmp dec pop dec movsl insl sbbb repnz and xchg sbb mov fs mov dec iret cmp push xor jno xchg inc adc cmp add cmp dec outsl mov jbe movsl cmpsb push pop mov js cmc push mov sub lods scas jo popf sub sahf sub dec cli add ficoml and cwtl inc mov pushf rorl and adc hlt in scas outsl clc mov xor or jo jne (bad) daa mov inc lahf stos sbb int3 andl xchg ret mov or mov rclb jp pop adc dec pop mov out imul es add in mov arpl sbb mov mov jo and cmp loope sub push dec ret xchg sbbl dec lods loope jns cmp mov xor mov lcall dec dec pop pop and cmovae mov mov sbb xor dec call jae mov ret inc or sub add call into xor cmp into sub mull insl clc and mov (bad) xchg std xlat and xchg lds lods jne push mov pop mov jo sub pop daa xchg push jmp adc iret cltd aam gs jecxz,pn movsl xor jns test and in repnz or mov sysenter and mov mov sbb mov out imul movsl jnp repnz mov sahf jmp cltd pop (bad) cld pop lahf mov (bad) mov movsl pop sub test mov cmp (bad) sahf (bad) mov cltd das repz shr mov mov mov (bad) out cmp and daa mov cli mov out mov lock mov imul add xorl repnz in mov mov rcrb addl inc punpcklbw jmp mov int3 pop mov fldenv xor push mov inc mov xchg mov inc (bad) xor fild xlat xchg in cltd jno out bound sbb daa xor mov ret jae xchg cmp sbb out dec or inc mov sub or leave roll push sbb stc in in sti mov adc jnp and scas and jl mov mov int3 (bad) mov (bad) enter or xor mov pop mov loopne mov mov ret sub jmp xor sbb pop (bad) stos mov mov add cmpsl fcmovne xchg aas iret jp movsl and imul lock js or movsb mov dec loop pop and cltd adc and iret mov push out xchg xchg sahf bound push mov pop add jns mov cld xor mov sbb cmp mov cmc les shr addr16 fdivrs das mov in and inc out lods into ret repz (bad) pop add arpl sbb jno xorl push out pop jbe pop movsl cmpsl (bad) cltd mov sahf cmp sbb (bad) test mov bound nop bnd (bad) sbb into dec pop sbb push cmp neg push sti add adc dec jo jns inc imul push jb mov mov adc leave test xor inc mov loope mov mov jae addr16 fidivrl mov push add push arpl imul fs jmp loop dec or (bad) mov ss outsl and mov jmp mov test out ret push push add mov stos rorl daa adc (bad) push es xchg into mov mov sub mov fidivrl cmp sub mov or xor xchg adc scas movsl cmp lds fnsave jg aam jmp pop and stos pop xor dec mov mov cmp or mov adc popf divl push out ret mov rorb ret (bad) (bad) xor sbb push inc ja test cltd lahf (bad) scas test test mov mov mov cmp pop xlat mov jno jnp jb rcrl cld in mov xchg gs push xchg ret mulb fild push mov mov jle aaa (bad) pop push das sub dec push jge cs inc shl sbb call decl pop cmc pop sbb dec into or cmpsl inc in dec test inc bound xchg mov shlb jmp mov nop unpckhps stos int xchg dec pop sbb dec rcl rcr xchg call sarl xor sti or rcrl dec cs enter sbb pop insb popf aaa (bad) lock mov push in gs jne (bad) cltd mov bound dec mov cmpsl pop xchg push xlat mov icebp (bad) in sub stos bound cld mov mov and cmpsl fs sbb mov xchg and (bad) cmpsb ret mov pop add dec and das jl pop out shll pop fadds or insb fwait enter jp les mov xchg fildl cli rolb daa in adc leave xchg jns jae out movsl pop incb push push lods pushf outsl push ljmp push mull out cmp fldcw add jnp fdivp sbb fwait (bad) out ds les bound loop cltd int std xlat fdivs call lds push xor cltd fnstsw sbb cmp pushf mov push jl mov into jo lea dec and int add xchg dec mov inc pop xor mov inc push jae push dec out and (bad) js push (bad) mov imul rorb lods push mov shrl cwtl das gs mov xor and iret loope jbe sbb popf enter lahf mov xor lods pusha movsb lea and call mov cld pop xchg dec add inc stc cli mov les mov ret xchg mov movsb mov adc mov cli mov iret mov movsl mov push out cmpsb xchg ret or cmp dec dec mov jbe pop sub stos ret inc xchg mov mov inc fimull and js iret and cmp mov xor jns pop pop xchg mov imulb mov xor pop xor mov cmp cmc inc or push jns (bad) xchg loopne sub sbb xchg jle mov xor mov mov jp lahf mov cmpsl xlat imul scas adc mov test and pop negl out test (bad) daa insb xchg ret js xchg movsl push adc sbb mov icebp das cltd ret jl popf ljmp add inc adc pop jge sbb movsl xchg and mov mov dec or mov lret push call jne fbstp jns iret mov mov xor cmp movsb stos leave (bad) jbe clc mov std rolb adc shlb pushf out and add inc scas mov jle lods loopne cmpsb (bad) stc adc jecxz mov scas xor xchg pop jecxz jmp push lcall and in pop lret outsl popa lods mov jmp shr add les repz sti cmc movsb dec and stos push mov popf or leave jnp or inc jae or inc call mov loopne xchg cs insb jle leave (bad) je sahf pop popa mov xchg mov (bad) (bad) xorl loope jae add lods sbb into pop movsb imul dec or (bad) cmpsb gs pop scas out xchg sar cmpsl mov add das sub js jnp push out mov xor js inc mov and cmp popa inc enter mov inc icebp mov scas and mov je jo mov leave cmp aaa (bad) jp nop out jbe push xor mov pop cwtl jge jae xor js adc xchg or inc divb mov sub adc rcrl dec xchg mov mov mov cmp cli mov mov js dec (bad) push mov and jle,pn or xchg xchg nop aam cld (bad) dec (bad) xchg jle lods fisttpl fucomip sahf fisttp mov insl push mov and mov push popa mov adc mov mov pop paddw xor je cmp cwtl cmc pop xlat and mov jge jb mov mov insb mov pop lock adc mov outsl gs insl out (bad) repnz shr sub sarl rcrb mov mov inc mull ret push cltd sbb push sti push mov mov jbe sbb sbb cmpsl xchg jecxz lret cmpsl mov sbb inc sbb fwait negl aam pop mov lds fisub pop cld je pop pop inc mov or inc sbb pusha adc sarl or arpl daa mov data16 cwtl mov movsb (bad) or mov mov lock mov imul scas or mov in bnd cmp es mov jle lock cmpsl mov fidivrl sbb push fxch movsl cmp add lods xor jb pop popa inc inc xor lock mov xor roll rolb sub push scas mov pop out xchg in mov out jl cld push push mov and mov stc insl jge mov inc adc xchg in mov outsb cltd int sub ja mov push out mov sbb xchg mov sub add cmp mov adc sub sub std mov mov xchg mov ljmp and fimul hlt lea xchg lock xor call push mov pop dec out cmpsb arpl jmp insb and add cs fwait mov mov jne sub adc adc outsl mov inc adc aas sbb mov sub mov rcrb xor jl stos cmpsl repz nop (bad) jnp,pt fsubl lret mull dec jne jp mov ficom pusha fwait scas cmpsb addr16 outsl add cmpsb mov lea fdivrs or loope pop mov cmp xchg mov add loopne and (bad) dec out aas mov int xchg or pop inc or xchg cmpsl push add mov mov inc test ljmp mov test bound aaa daa test (bad) mov inc adcb mov or jns dec aam test add imul cmpsl ds push pop in mov add adc mov repz mov movsl in push and das push mov jecxz cmpsb jl jb popa mov mov loop in ss pushf cltd mov push lods ret mov push dec movsb mov test add loop jle les scas icebp lea flds cld mov mov pop icebp insl jmp pusha jp jge int3 mov or sub insl inc dec test inc sarb scas fstpt jecxz push scas mov mov mov insl mov lret bound xor mov daa fwait (bad) int mov in cmp push lret jbe push sahf (bad) xor mov notl pop out xchg movswl pop mov in flds add in and mov lods push mov fwait divb je pusha jp aad dec andl push repz cmpsl jge mov cli cltd xor lods and mov repnz fs lock mov inc ficompl push leave jno out outsb cmp bound inc jns sub repnz dec in cmp pop sbb gs (bad) (bad) lea xchg jle loope not mov xchg gs lods lret lds inc aaa js (bad) sub add ds or stos add mov cmp sahf add fistp fcomi dec cmpsl cli or out dec ror bound and call sbbl scas jecxz ja (bad) movsl sbb dec movsl cmp dec imul lret add bound stc out scas mov pop cli xchg pop mov push cmp adc inc out (bad) push test out into sub aam (bad) xlat cmp adc rcrl (bad) fisubrl gs and pop je lcall or jns aad push xchg xchg xor mov fisubl or and dec aaa sbb mov mov gs leave push pop bound push xor jo pop xchg popa ljmp out or xor adc (bad) lahf fisttpll movsl aas test sbb cmp mov xchg pop mov mov xchg icebp sub adc pop push in jp cmpsl add aaa push xchg and (bad) mov in pop sti jae test clc mov mov inc or add mov mov das dec lcall fbld lret (bad) int lock subl dec and cmpl sub dec jae scas paddsw mov popf repz jg rol sub adc add outsb in insl sbb pushf mov push les dec jo xor dec std mov pop mov push cli jb ffreep xchg xchg mov cwtl mov sbb xchg cmc pop push cmp mov mov jae cs dec scas xor mov inc or arpl in imul cs xor push in je xor sub mov and pusha mov or mov test push mov cmp sbb fs mov push cld aam xor lea inc mov lret xchg mov cmpsb mov mov add and lods xchg mov mov jbe movsb mov call xlat cmpsb push mov or jecxz out xor movsl das scas inc pop roll xor mov lcall flds bound add rol cmp arpl mov test mov mov pop pusha scas aam fmul xlat cmp xor dec jge adc out popa mov adc or mov inc in (bad) aam pop int adc lock cmc les es aas add mov notl aad fildll sub sbb xchg jne adc es xor les mov cmp push add orl lock cltd lret fs inc jmp out movsl inc imull (bad) mov movsl adc lds jmp dec push pop loopne rol mov push mov out cmp insb bound cmp loopne xchg or (bad) into adc inc mov insb dec add fisubrl mov (bad) and sahf cmp xchg cltd scas pushf cmpsl lret mov or mov movsl scas lods cmpsl and cltd inc push test jae sub mov jbe ljmp sbbl mov mov iret mov daa dec dec xchg mov int cmp mov mov adc lret pop xor gs mov cmpl xchg xor sub cmpsb test adc xor xor lds jmp cmp sub shrl loope add and fidivr vlddqu and sub xor pop push popa mov pop cli ret lock xchg mov insl sarl stos cli mov mov imul xchg gs sti loop cltd adc loopne pop adc gs loope loopne push mov pusha pushf into mov or pop push xor lret call mov out js or xchg sub mov fs call jns and rcll aad imul stos cmpsl pop pop cmp pop in xchg sahf test mov mov sbb dec inc sbb out mov mov sbb aad out push cmp add rcrb pop ret cltd cmpsb cs push inc pushf xchg sub fs sub int3 (bad) add mov ficomp repz out insb aas mov mov adc hlt inc mov mov jno test lcall and jo push (bad) mov push mov daa int3 test mov sarl jmp push lds dec out push fsubl push push addr16 adc cmpsb bound lret jo push flds popa xlat imul and les scas sub adc pop int3 lret inc push cmp push cmpsb fsubs in sahf nop fsubp or pop jecxz int imul inc fidiv fdivr pop jnp cwtl xchg push cmpsb xchg pop (bad) leave cmpsb xchg idivl jge insl lds das (bad) jae movsb loop fnstenv inc test and inc mov xor add or push bound or xor or pusha inc popf insl test pop addr16 mov andl js idiv and pop or xor mov jne addl pusha icebp fs adc nop fwait pop ljmp stos (bad) adc pop mov scas xor xchg loop sub xchg add movsl mov sub cmp movsb and scas push arpl sbbl out loope mov (bad) xchg xchg dec loop mov outsl in fwait mov std andl mov jbe je cmp scas icebp cld push or sarl rcrb shll subl test cmpsb movntps jp sbb or mov loope call cmp imul (bad) push movsb outsl cltd xor mov mov in mov addr16 imul xchg mov sub cltd dec push fcoml and cmpsl xor jns aam mov pop shlb xor mov mov sahf mov scas inc adc dec add xor inc cmpsl dec mov stos cltd (bad) push or je fwait lahf repz push and xchg xchg movsl inc dec mov xor cltd shrb lcall mov jne and mov movb sub sub push add (bad) cmp or outsb repz (bad) (bad) jmp pop shll pop push cltd in loop in and movsl mov lret push mov ret lea insb add dec call bound out daa dec sbb push pop push pop stos sub call mov pop mov sahf jae inc push jp fwait ret and test out popa movsl (bad) std push xor outsl mov xchg mov sub repnz (bad) xor dec dec mov inc mov inc xor jo adc negl cmpsb xor fndisi(8087 movsb rorb inc (bad) ret dec lods mov mov lock enter movsb xor test loope data16 psrlw nop out mov cwtl xchg and (bad) mov aam in cltd sbb loope inc pop out xchg imul dec rcl jecxz mov push icebp mov in push stc jno adc mov addb jge adc mov cld pusha shll mov cmpsl roll sbb je xorl xorl jecxz pop stos sbb mov scas fldt movl adcl movsl dec lock outsb add sub rcrb xorb fwait dec movsl mov or mov js out jecxz daa pop dec in jecxz push fnop and xchg mov sbb and inc js push push stos ficomp xchg inc xor test xchg mov jae sub insb push cmpsb call roll inc mov xchg jmp call pop push cmp les mov fldt sub loopne ljmp imul push stos xor mov sahf jno cmpsb and mov sbb rorl cs ficom insl dec inc aam and pop fisttpl push scas pop pop mov inc sub jecxz dec lods cmp push out dec mov int adc test lea mov mov cmp pop movsb in cmpsb fiadd mov fxch jno (bad) std mov das pop push dec sub pop mov into lock pop rorl cli push push loope mov outsb cmpsl and jb and add shlb jno jne stos adcl xchg cwtl push loopne inc movsl xor rorl add repz lods loope call inc cmp pop and push idivb and pop aad mov xor xor cmpsb stos movsl mov jge cmpsl cmpsb xchg (bad) pop aas test and jle fwait (bad) (bad) bound hlt sbb inc adc push je dec pop sub jecxz (bad) leave cmp inc loop push inc aam cmpsb lret push gs popa test (bad) pop loope mov mov bound push movsl pushf sahf in push adc jecxz mov cmpsb enter pop cmp sbb cld (bad) cltd into fnstsw dec movsl mov mov pop add push leave cmpsl dec dec mov les and imul xchg add pop sub outsl adc insb test mov inc sarl daa (bad) sub pop pop les mov xlat test cmp negb leave int pop lret push popf push pop cli mov inc add mov xor mov sub nop or and mov lock into sbb icebp mov loope call jo pop pop adc xor cmp pop aad stos mov aam loop mov jae mov push xchg cld jecxz mov aad jmp and dec mov or push and push call jne xor test xlat sbb sub sub sub je mov (bad) fdivrs andl xor mov jb mov mov imul rolb rorb push and das and push add mov add cltd xchg pop push into mov jne mov and sub out es jae push mov cmp push pushf andl or adc xchg arpl xor mulb pop or adc cmpb loopne imul fwait or rcr (bad) into and sti push xlat mov cmp inc add stos mov aaa imul xchg lds out out or dec and push js int3 mov call mov jno (bad) test mov js outsb mov addr16 add movsb inc xor icebp lret mov stc mov mov sbb mov (bad) and xchg stos jno jmp mov stos dec arpl sahf fs mov adc and data16 scas mov lret pop mov pop es (bad) jnp adc mov cs mov cltd les ljmp je dec jge pop inc (bad) jecxz push add rclb cmc popa leave popa arpl mov outsl sub aas pop test jns xchg xchg lock aas push repnz sbb xlat movsb mov repnz call mov repz mov in add lahf pop sub repnz jno rcll sar movsl jle cltd cmp (bad) fbstp dec mov pop enter pop lret std xchg test jnp (bad) jbe (bad) inc push loopne xchg jecxz jo mov pop mov ljmp or mov stos xor movsl std (bad) loope or test cmp subl pop clc js int cltd lods and adc xchg adc mov lcall push sub mov or outsl loope dec (bad) and sbb xlat dec adc ret ss push add mov (bad) in and sbb (bad) mov xor dec jp jnp movsl inc adc mov mov loopne push fs (bad) mov sub mov cmpsl lods scas movsb sti das sub add mov adc mov mov push add and sbbl cmpsb aas adc xor xlat cltd js sbb xchg movsl loope add mov sbb lret dec add in jmp out and loop dec and mov movsl test inc mov add mov xor sbb or adc pop push in (bad) lods mov test scas push in jecxz dec (bad) or cmpsl iret pusha bound xchg mov (bad) mov inc jae push (bad) mov add cli push in in aad scas push push mov icebp imul popa mov pop arpl adc fmull addr16 mov push sub sub fucomip mov sbb mov mov call std lret mov into lds sbb cmc add dec (bad) mov (bad) ret out jnp push mov in jns leave ret cmp push mov xor call cs pop ret mov cmc insl mov push pop in mov rolb sub and and mov add rcll jp xlat xor xchg push pusha cmpb sbb xorb (bad) push aaa fnstcw mov scas ja sbb mov sbb clc testb mov sti lock movsb mov insl in iret ljmp sbb or mov pop mov pop push aas pop dec nop push movsl sub repz lret mov inc mov mov pop movsl and insb ja mov push adc fbld dec adc jb push sbb (bad) (bad) rclb cmpsl lods add movsl ss push jbe mov fildl cmc and jp or dec (bad) movsl daa jne or mov mov je mov sti mov leave das addr16 jns andb push dec mov sbbl out cmpsl mov push cltd push adc fwait (bad) dec xlat popf cmp fisub pop xchg (bad) add mov mov mov pop sti pop leave mov stos into movsl into mov fsubs scas lret dec stos jge nop dec mov js pop push mov pop ljmp neg cmp into bound and cltd gs cmpsl sbb mov cmpsl scas xchg push cmp (bad) js arpl dec xor pop lea cmpsb imul int3 adcl call mov int push fcoml mov jle sbb aas xchg cmp pop je mov movnti cmp xchg ret or jae pop cli lock jmp mov sbb pushf add arpl movsl data16 lds bound mov test test xchg pop out cli xchg xchg scas bound out and mov push push cmc loop sub lds xchg cmpsb icebp sub add pop sbb push stc pop mov loope scas push inc pusha lds push mov sbb jecxz in jmp mov data16 pop data16 or cmpsl mov lods int3 jle sbb movsl js push cmp jae cli and imul jb push pop mov cmp xor xor add ret jno sbb mov daa data16 imul push jmp mov test jo pop (bad) mov xchg mov xor mov les sbb adc push lea stc subl lods mov xchg lret and out fimul and or push nop or cmp in bound and out sbb loopne cld incb cmp pop jle mov jecxz push scas mov loopne pop or (bad) lea cmp (bad) pop test jbe insl or xchg and adcl xor cmpsb bnd or leave in gs and scas jb out js mov lcall ja pop jns cmpsb (bad) (bad) je xor cli pop lds or sub in (bad) (bad) mov ljmp das dec cmp adc or sub jne sahf bound mov daa cmp cmp and movsb jbe inc mov (bad) mov sahf in cmc xor adc sub in inc das fsts dec dec lock mov popf pop call insl nop neg xor shrb lea or std fcomip xor fldl fldt and mov sahf pop ja and lods add sahf gs push xlat (bad) out rclb std (bad) push inc daa loopne mov in out dec scas mov xchg xor lret data16 adc in into lret std or sbb ss dec pushf jg call popf sub andl and pop js addr16 inc and cmp pop (bad) in push ja pop loope xor fs sub and cmpsl (bad) mov insl enter daa mov in out movsl sub pop mov out lret out out imul je out ret repz push push popa insl cltd popa addr16 jbe pop lods fidivl pop or mov adc pop movsl push adc jge xor dec pop sub scas leave cmpsl pop orl (bad) out outsb fs das out push jo mov lods cmp addr16 jg sbbl or push daa scas pusha data16 cmpsl pop movsb sti mov pop mov test cli xor xor add inc mov ret and and mov inc xchg and lea dec in imul mov in xchg scas xor pop mov movsl sub sbb xchg sub mov loopne outsb out dec add imul and inc jo mov ret inc xorl mov jae inc scas dec jb shll mov cwtl mov addr16 mov call mov int dec mov dec push das jno add xor int mov mov mov lods shll jle imul cmpsl insb mov sbb push push sub ja les loope aas cli lods mov push lret fs fs call mov inc dec mov jmp inc sub mov xchg lock fldenv sbb xlat dec shll dec mov cmpsl (bad) faddl fcmovne and mov inc mov sub outsb mov fisub push cmp xchg push push add cld mov pop test and mov std push add aaa mov add (bad) xchg in mov push outsl mov cmp mov sbb movsl test iret sarb test imul lea arpl inc mulb les (bad) icebp jo mov mov idivb fisubl push xlat or stos mov mov aad imul dec cmovle mov int sub mov mov fs xor lods mov cmp jbe (bad) movsl mov pop aam js mov mov cmpsl mov mov cmp lret xchg dec cmp inc in lods (bad) sbb icebp scas repz ljmp push mov sbb repz shl cld mov dec rolb imul sub hlt push jg adc adc fildl and in mov aad mov mov cwtl outsl mov mov cmp push gs cmpsb pop pop cld out pop stc pop push je dec (bad) (bad) mov lret mov (bad) insb jmp sbb add mov enter in add scas sarb and pop push or mov cli push xchg gs push mov lret mov jle sub aaa xor sbb xor fs les ret and cltd in xchg dec mov test inc pusha mov cmp and imul ret mov fcoms fisubl xchg ret jno jecxz dec rolb fidivr mov aad inc mov lods outsb in push push push add popa mov pop ret mov movsl or shll (bad) mov push (bad) jb in adc jecxz (bad) sbb mov (bad) shlb iret mov mov ret jle aam xchg out cltd lods sub pop (bad) cmc loope or cmp inc (bad) (bad) adc dec imul sub leave ja ljmp mov fcoms call les adc aaa xchg loop rorb mov (bad) icebp pop std sub xor jne add dec mov in push fidivrl sbb lahf jmp arpl or pop and cltd mov fstps sub cltd jmp movsb aad insl jp dec jne jl push movsl std jle shlb lock cmpsb sub stos or push push dec sbb jo xor cwtl pop dec loopne call sahf jg jecxz bound xor mov pop nop mov mov je mov adc xchg add xchg or lcall mov in mov rcrl xor scas sub repz push pop inc jnp xor (bad) hlt pushf pop inc or lods les cli je and pop sti cmpsl push mov and dec (bad) mov mov adc outsl sbb inc mov arpl add mov mov xchg dec push xchg (bad) dec lds add cmp cld pop cmp mov in xor leave rcl lods rclb in mov inc test loope scas dec imul lea mov mov and mov jmp add rcll stos jle mov in adc sub sub jg (bad) jl mov fistl pop cmp fcompl bound repnz lret aam xchg and add jp inc in andl and sbb mov cmpsb mulb leave sbb (bad) mov adc push inc insl cmc pop loop jecxz lods cltd xchg cmp and lods hlt and jnp subl data16 call xor in out in rorl lret fdivs sub (bad) pop cmp inc data16 dec cmpsb mov push cltd sbb dec push add cwtl pop sub xchg xchg pop mov mov pop cmp (bad) lock out pop jmp in movsb push pop mov fcmovnbe mov and mov or or pop adc mov pop cmp push out lods mov add test mov mov mov fldt sub test dec mov int inc mov xor jnp mov jp push mov cltd aad aas sbb mov arpl lcall call (bad) pop cwtl (bad) sub lock xor subl test movsl not jmp mov pushf pop cmp mov mov xor dec mov call stos scas es insl mov addr16 jo jo push idivb pop dec (bad) ss cltd dec pop icebp pop fwait outsl aad cmp cmpsb pop adc leave (bad) movsb mov scas lods adc (bad) jp sub inc xchg mov dec mov mov orb sbb dec or sbb inc mov cs mov popf mov adcl es popa movsl and cmpsb movsb pop daa andl and (bad) inc imul (bad) cmp orl lds fwait xchg lcall das mov lock lahf stos pop (bad) inc enter inc pop stos adc pop inc inc sub out add js sarl xchg scas add mov popa lahf mov loope sti xor mov xchg sbb jnp cmpsl mov fldcw loope mov pop repz xchg push dec mov push mov mov xchg cltd cmc pop pop sti jae or ja (bad) inc lcall xor inc jecxz add movsl mov or in mov cwtl mov xorl hlt jnp jmp xchg shl repnz xchg xchg add adc xchg mov push pop int insb stos add les repz bound mov and mov jo subb jle out fwait add mov add xchg mov pop pop mov fdivl js les out add pop enter loopew lock and lock jmp jp push stc sbb imul jno imul jne (bad) cmc cmpsl jns mov sub add stos data16 lods inc mov dec pop xchg in (bad) out inc repz mov bound hlt mov mov js adc jns repz in and int pop out cmpsl in dec idiv scas xchg adc sbb add (bad) inc scas fisubr bound xchg out and push mov mov xchg xchg adc jmp add jle xchg sbb pop loop add pusha cmp movsl fidivl pop ret scas sbb cmp dec popa adc or icebp and jo mul bound adc mov mov xor dec and movsl push int3 fisttpll mulb sbb pop fwait or js mov dec adc xchg popf (bad) mov cmp sub stc and lea mov ja into push inc mov jo jb in and mov mov jmp test andb fiaddl cmpsl sub xchg jecxz xchg mov jns jle fnsave data16 mov pop in bound xchg jg lds inc lods sbb jo adc in dec cmpsl or lods clc jmp push cmpl mov test adc jl inc loope inc adc js push inc stc add pop mov icebp push nop adc mov cmp xor std aaa mov mov fistpll cmp movsl imul xchg daa fsubs inc inc fs sub inc pushf out mov adc xor and pop in imul mov sbb xchg mov fdivrs jb mov sbb add mov sub idiv movsb xor cltd out out mov and sub mov adc dec pushf cmp popf mov aas push dec and fs pushf pusha inc cmp (bad) test popa mov xor (bad) push scas xchg addl (bad) or dec and movsb mov mov push dec (bad) (bad) lret js push int3 imul and aaa adc and jp inc ds xlat loopne leave pop jb mov in in mov dec mov cltd lock test mov mov lods loope frstor sbb aaa jmp lahf in xchg pop mov outsl cld lret adc insb aam lea and cmpsl sbb sub or mov mov cmp mov hlt dec push adc mov rcrb ss jecxz add dec scas jno les (bad) lock mov inc aam jmp subl movsb jmp rorl xchg cmp movsl mov outsl int3 cmp in or fisubl gs fist jnp jne lea mull sub movsb push mov loopne xchg int3 jmp call mov sub xchg mov dec rcrl cmp and xor (bad) repz rorb pop mov idivb push inc sbb xor loope or lret mov sbb and lods sbb movsl outsb scas test cmpsl bound xchg mov icebp (bad) xchg ud1 lcall mov (bad) es adc mov fwait adc jne jl dec sub std pop adc mov cmp cmp fisttp jecxz sbb xor loop test mov mov sub pop mov mov lcall inc cld ss mov jb ror xor mov insb mov inc mov xor outsl add mulb ret mov fistpll add fwait (bad) cmp xor or mov xlat int cmp jnp insl stos and fldenv dec mov pop jnp mov lcall mov testb xchg out mov adc ret movsl les out sub pop aaa and lea pop bound xor cmp sub fcmovnb xchg jnp movsl stos mov pop mov jns cmpsb popfw mov aad in popf lock xor ret js dec mov call (bad) int mov adc arpl out xchg push rcl in stc and jge dec xor inc xor sub out test roll (bad) push stc imul out pop mov insl into lds push pushf mov rorl or rcrl dec sub loope sub jmp aaa mov sub pop outsl popa or aam mov adc lods cltd push fcom cmpsb bound sarl loope jne imul mov lahf sub orl jne hlt aaa (bad) stc sub mov jle inc and jno (bad) pop fs push repz jbe mov and jbe cli lahf icebp adc adcb mov push ret les les lds xchg mov rcl add and ljmp pop notb cld push add rclb cltd int3 subb jns dec mov jg jge mov repnz sbb (bad) mov and fs movsb adc or negb stos fwait sbb mov inc or arpl mov mov movsb xchg popf push cld jp (bad) and inc cmpsb cmp add das push mov icebp pop mov push aad clc (bad) out mov lods call movsl inc push pushf cltd inc adc add dec lock xlat push icebp xchg add imul imul mov dec sub insl pusha mov sub mov stos xor cmp (bad) sti mov jbe or js and dec add cltd jns cld adc sub mov push mov cmpsb aad or sub lret mov mov mov fst out jmp popa jle push mov pop inc cltd mov das (bad) lcall and in (bad) test imul xchg xor add mov or jnp and mov pusha pop sub inc in daa pop cltd pop negl cmpsb out xchg in test mov xor les ret xor js sub fistl xrelease insl push ja mov cmp mov movsl mov pop outsl adcl out and xchg test scas xchg icebp pop std icebp or imul scas xlat loope insl andl dec int3 and mov adc bound shll pop and adc sub bound std push mov pop test and mov or (bad) out outsl int or inc lods mov popa and sub jno cmpsb push sub or aaa sub xchg jno fidivl dec stos push pop es mov mov stos mov jecxz xor rcrl cs leave cmp and leave lea xor ds and mov sub mov out lods mov dec dec jnp mov lods add rorl xchg adc mov arpl lds ret sub jge addl lea xor lret mov mov push jns xor mov mov es test std mov daa sbb pusha fbld adc hlt mov xor xor out mov mov adc jo jg add aad cltd mov jp arpl leave (bad) sbb jge mov sbb push and dec ret pop push clc imul das movsl fstpt pusha push add pop out imul insl adc mov push movsl sbb bound mov mov ja pop sub mov les ja mov aam int loopne pushf push add mov cmp dec push movsl pop aas cmp fadd mov sub push movsl inc sub mov pop add mov mov xor pop jecxz mov mov mov mov fnstenv sbb pop icebp imul pushf js lea out mov or add xchg int stos mov test cmp std mov or cmp mov nop cmc push add mov pop les cmpsb push lods mov call or fldenv cmp insl fstps cmp sub test sbb cmpsl cmp mov mov push subl jae fisub xor in fs pop lock imul and mov lods mov jecxz fnstcw mov fdivrl xor inc sahf adc mov sahf push gs and loope cmp stos lret inc push and add popa sbbl and repnz scas mov ret pop pop pop mov mov rsm xchg cmpsl je inc pop ljmp popf mov and movsb sahf push inc (bad) xor pushl ja or iret mov imul inc les cmpsl (bad) bound pop mov rorl mov daa fisub pop push stos mov dec jns insb fimul push mov addl data16 sub xor and cmp mov pop xchg sbb gs in out push cltd mov cmp cmpsb inc mov inc jnp and sub lcall cmp or adc movsb lcall (bad) sub push out dec loop mov add push fildl push mov lahf and add mov mov call jns out mov daa icebp xlat sub jbe (bad) cmp mov pop fidivl push mov pop lods bound arpl cmp out xchg dec icebp or in cld dec and mov cld (bad) mov jb jecxz mov and (bad) bound pop and fwait pop pop lds fwait inc inc dec jmp mov popf rcrb mov sub cmpb ret add jae sbb cwtl nop mov jbe (bad) in jne mov pop out xchg bound push lea in pop les (bad) adc out mov mov pop lods ljmp push mov and sbb mov mov aaa and or adc test cmpsl mov in and lret mov lcall add dec jl adc mov je cmpsb popfw not or cmp pop fsts push in sbb add jp cmp pop lahf (bad) imul or repnz cmp and cmc mov rol jl sub sub adc adc xchg dec lds pop jmp ror movsb adc push pop addl jb pop push jmp arpl adc jecxz jge mov (bad) jno dec insb adc xchg sub jmp ret not loope movsb push leave dec mov test subb mov and ss mov inc gs fwait sbb jecxz ss je test pop or mov cmpl cmpsb (bad) icebp movsb clc mov sbb sbb aad lock cmpsb lods pusha (bad) xchg (bad) xchg or mov inc adc mov repz (bad) push and mov mov mov push jmp ret scas mov mov test or int push xchg mov enter mov sbb (bad) or aad jae sarb mov loop push mov adc adc mov jae mov or fisubl gs or loop and cltd movb push pop insl and cmp xor or mov jne mov out fnsetpm(287 lret mov inc or mov push jg fstl leave das add out mov sti pop mov dec push cmpsb scas mov sbb int3 clc and in adc pop rolb mov jnp pop mov loopne nop cmpsb mov push popa cmp push jecxz loopne and xchg sbbl or mov loop pop mov lahf mov call mov sarb (bad) xchg push mov aas cltd loopne iret mov push jne or cltd adc mov scas adc or clc shrb add movsl push mov cs and arpl pusha imul daa add adc jmp mov inc mov cmp jns push mov les push in sub mov mov sbb adc mov insb loop jg push mov loopne dec adcl in mov mov xlat and mov rolb jecxz test mov mov adc push ds into test mov push sbb addr16 lcall push notb push mov push pop or rclb gs mov popa cltd test dec aam jb push stos sarl (bad) pop pop xchg (bad) push pop jmp stos sarb push adc bound imul addr16 dec outsl add call cmp movsl data16 or xor dec push mov pop dec hlt outsl mov dec xchg inc and es mov mov (bad) adc jne nop and push push (bad) push mov lret stc sub hlt or mov jg inc (bad) pop push jmp data16 inc fwait cmpsb in cli and fisubl shll lock jl pop mov loopne inc pop pusha fbld cld (bad) ss popa (bad) pop fbld push or mov repnz inc fcmovb xchg xchg mov enter dec xchg shrb std adc fs jbe sahf mov stos pop or jno add (bad) sti bound cmc xchg ljmp dec pop lcall sub jp jg xor sub imul bound scas cmpl dec mov test xchg in push data16 test adc mov dec xor stc dec and adc lods and les jne sti setns cmc imul jmp inc mov stos or mov inc bound cmpsb (bad) loopne pop cmp je add negb jns stc (bad) lahf outsb push jecxz mov or jno add jne lea cmp xor xchg sarb mov mov xor loope cmpsb push xchg jne in adcl clc (bad) xchg lret enter mov add aad xchg (bad) jg and inc movsl and inc mov (bad) hlt loope mov das mov cmpsl repz (bad) jb (bad) (bad) xchg sarl dec (bad) inc into leave dec mov push and mov sub mov add jns push data16 mov pop ss cmp xchg mov lret movsb mov sbb adc daa inc mull cltd addr16 repz xchg data16 cmpsl jne ret xchg xchg push cmpsl sarl mov add in jl daa call mov and cmp cmpsb inc add push int or mov stos inc fisubl mov sub xchg mov xor inc out xchg xchg mov xchg nop repnz mov jg push jp push out aaa rol mov rolb sub sub push inc mov lods push arpl sbb pop xor and test fsts (bad) stc fdivp jl in js in mov insl adc movsl lock test dec fwait sbb repnz dec in (bad) nop enter push jge xor xchg (bad) adc out sub mov cmpsb pusha jne mov bound in cmp pop jo xchg inc inc aad pop xchg cmp (bad) mov mov cmp gs cmpsb setl pop inc (bad) xchg fsubs int3 mov pushf movsl push jnp inc dec (bad) int sbb jns inc out push cmpsb (bad) int3 in mov dec and aad ss and iret popa lds les adc inc movsl xchg movsl pop fs push mov cmpsb push add lea arpl mov aam inc pop dec fidiv imul aas pushf and mov nop pop dec jb dec (bad) cwtl pop add stc arpl and xchg fidivl push pop xchg in adc cmpsb bound shlb mov dec rep xlat mov inc cmp jecxz adc rolb (bad) movsl xor push push push ss in movsl int (bad) imul out xor jno or and sub sbb fsts pop push ds stos adc call lret sub mov mov pop dec test lock stc mov ret pop xor sarl cmp push fucom sbb push add movsl sub addb (bad) icebp and dec adc nop stos shrb into int3 movsb mov loopne scas lock scas inc dec nop inc xchg or dec sti push and mov inc scas cmp xlat in jno and mov aam and (bad) mov pushf stos xchg mov jnp or mulb shlb lods push mov (bad) or pop push pushf repnz pop in push or in push dec insb lods xchg aad xchg jle inc shr xchg dec pop out imul cmpsl sti sbb dec mov fs repz lcall and loope pushf bound out inc jb inc or test mov test fistl aaa ret xchg aaa cmp pop jb (bad) lock xor dec in sbb jmp or xchg jp shl popa dec push mov cmp lea mov test xchg popa mov dec adc xchg pop xlat in rol roll mov mov and push add hlt xchg sbb fildll cs cmp lock scas cmp das pop push sub add adc loope repz lods fwait and jns pop mov sub in jnp movsb ret mov inc mov fimul call jns xchg mov (bad) loopne adc dec xchg or out jg pop adc (bad) out pop push xchg popf popf xor cmp lock pop les mov sub mov mov xchg mov dec mov cmp ret (bad) mov sub jmp arpl dec mov push xchg icebp aad ljmp mov fidivr call jg adc and pop adc jns mov int3 leave gs xor fsubr imul mov sub xor push add xchg dec pop push popa xor mov data16 add roll dec daa imulb pop xchg add lods jb jle pop divb jl ret aas test cmpsb stos ja jae pop stos jo cmp sti dec pop jl jmp mov pop mov fdivrl fcomps ds mov cmpsb lods push cmp je mov jmp cmp push shlb jnp dec add mov xor rol add out mov mov mov cmp and mov inc popf shll fisubl mov pop aaa scas mov xchg mov test pop push (bad) mov lea sbb pop pop je add movsl pusha add dec push and fdivl inc xor mov divb scas mov sub fstps lcall pop imul dec scas mov cld adc loopne sbb lret pop lds lock stos stc push mov imul in jb sbb fidivrl sbb dec lret movsl mov cltd sahf lock sti push leave push aad cmp pop test repnz icebp inc mov cmpsb loop scas add adc andl aam dec or out pop icebp mov pushf lcall sub gs cld sahf jo movsl test ja sbb xchg lret (bad) push dec negl sarl data16 mov jb mov xchg ret pop xlat pop sti (bad) xor jbe jg test xchg push mov adc inc sub and repnz cltd or fstpl mov scas clc xchg cmp xor sub sbb mov rorl sbb xchg shlb pop pop in xchg std mov (bad) in call dec inc sbb mov test mov std xor rorb or xchg imul (bad) xor scas add arpl out sub push dec jns mov loope popa movsl dec jg mov jle fstl aam sbb adcl mov jmp (bad) (bad) lcall xor sarl adc sti adc xchg out mov push iret cltd mov or mov xchg add mov fstpt js aam sub sarb sub das outsl jo xchg rolb mov aam std pop pop mov add adcl sahf sbb mov sub mov test lock jae add dec lahf (bad) sbb cmp adc movsl arpl dec mov ja andl mov int mov je xchg mov data16 mov xlat mov (bad) dec add add mov push daa mov dec mov sub and inc mov rorl push adc inc popa lahf add imul es int and out mov std test mov and cli das xor imul (bad) dec in in in (bad) jmp xlat mov xor xchg dec mov aaa sbb dec mov dec pop push test push mov cmp xchg out ljmp das and mov adc mov pop (bad) (bad) xor mov imul dec lret mov mov out in jecxz or push pop xor xor inc pusha ss xchg add ds stos and add and xor adc int3 test push mov mov cmp or loope mov loop sub mov and iret cmpsb mov dec movsl addl push call push inc in jle test inc mov stos mov mov mov mov xchg test jge fdivs dec or scas mov out xchg mov ficom mov fwait add add xor mov mov rorl fst or mov sahf in mulb aaa mov or adc fwait push dec add cmp xchg mov pop mov jecxz je jns movsl icebp pop imul fstl xor mov xchg int mov repz adc cltd lods jmp ret test jmp jecxz xchg aaa movsb testb cmp push mov and test mov pusha gs xchg out je jae and pop mov in arpl lret add jecxz fisub movsb inc faddl xor pushf lahf fidiv mov fmuls mov or nop ret adc jmp dec add adc xor movsl and mov in xchg xchg int xchg outsb mov std jns cltd mov mov dec aam push add add lcall add lods xor mov dec stos movsb cmp adc sahf jge mov aam cld daa icebp inc sub push pushf dec mov les pop mov inc out insb cmpsl (bad) cmp and rol adc xchg inc fldcw sub das into loopne mov rcrb ljmp loope add cmpl fsubrl mov jmp imul lods jecxz jo mov sub aad cmpsl pop adc jge aam jno pop cmp out fdivl (bad) cwtl mov pop xchg mov sub inc call ret cli xchg rcrb icebp push movsb cli aaa and push loop lods or xor or daa (bad) arpl jnp add nop cld std mov repz jo scas movsl std pushl popl movsl sub dec xor mov sub das cmpsb push add xorl mov jo sbb mov sbb xchg cld addr16 in imul daa xchg dec dec mov or push xlat and adc dec cwtl cmpsb dec fnstenv es xor dec pop mov out movsl push adc jbe (bad) std cmp loop push rolb jb mov inc push or scas xor jns mov mov or arpl int3 mov aam cltd pushf mov or add push mov sbb popa in jecxz ljmp loopne and (bad) daa jo sub das cmovle daa mov and das rcll lods cmpsb sbb ds xor stos add xchg adc mov (bad) mov jle decl and mov mov cltd imul pushf fistl xchg jp fistp pop inc (bad) std pop mov push mov xchg mov (bad) xor mov sbb mov fwait mov push in outsb push mov shrb (bad) mov xchg mov sub arpl gs out push add add movsl leave inc push arpl in mov aam mov sbb mov mov xor sub adc outsb xchg mov (bad) syscall sub movsl insb adc sub mov addr16 dec pop std decb lret movsl sbb mov xor push dec scas xchg jge push ss mov jno sbb mov lea push push mov movsb decb ljmp cmovne jne mov cmp mov mov mov daa mov mov add or mov outsb in fidivrl jnp sub xchg cs mov and sub or adc lock xor pop pop cmpsl xchg pop hlt cld inc cltd push mov mov ljmp test sub sub imul mov mov adc inc mov lock or push jo negl mov nop or leave mov ja fnstsw fcomp inc hlt mov lock or (bad) leave (bad) bound xor mov movsl in mov fwait adc mov jle jb fimull je or mov mov mov adc mov or add nop sbb test es cs test movsl jp das pop push pop mov jnp sub mov xor in pusha mov mov lds sahf xchg dec add pusha add inc aad pusha bound sbb adc cmp fidivl xchg pushf mov les out mov fisub mov lods imul data16 loope xor jns not cli andb dec cmp fs xor cmp shll or sti mov les mov (bad) mov test std push mov mulb pop mov mov hlt mov adc mov xchg mov mov out popf aad push les or (bad) test pop pop repz jno adc mov (bad) inc loope int3 out bound dec mov lods les mov xor vmwrite cmp cmp stos inc leave test or inc sbb mov sbb mov jge mov xchg lret pusha pop pop adc in mov xchg test (bad) sub and and (bad) in xchg jle push xchg mov push rcrl mov pop pop jecxz mov clc out fs pop xor cmp mov pop popa test mov xchg bound stos add gs rorb cmpsl rolb orl insl js lret push push cld xorb and daa bound cmpsl mov insb fwait mov cmp pop cmpsb and inc sbb mov out xchg inc xor fwait das pop xor loopne rcll (bad) (bad) mov mov int out sub lcall cmp sub adc inc adc bound aas xchg sti push mov push lret incb lods mov ds cltd arpl pop fcoml popf xchg ret int push hlt out mov xor cwtl add and and mov mov pop inc adc mov push stos add test inc mov inc jle pop repnz push subl mov and icebp dec sub lds mov jmp or lods mov lahf inc xchg mov jmp je and test jmp add mov lods xor inc adc dec movsb gs or sub sbb mov outsl loope pop inc mov sub xor mov (bad) xchg push imul lahf cs dec xchg lret mov loopne lock sahf inc (bad) in aaa push jne inc mov test popf mov popf pop stos out imul inc sbb out aam push add lods mov arpl mov cmp ljmp inc cmp inc or pop (bad) aas mov lods iret shll push data16 mov mov mov in mov mov cmp popf (bad) mov add inc mov cltd aaa sbb add lret pop (bad) dec or fdivp mov mov bound inc (bad) int3 pop rcl sbb (bad) (bad) data16 dec mov or mov shrl jnp sub pop test cmp push (bad) imul cmc test cmp aam cmc inc cmpsl insl (bad) sbb fcoms bound xchg cmpl cmpsb test dec mov adc js mov sbb cmp inc push lock mov out mov adc push sahf mov cli andb jge into mov add (bad) loopne insl jecxz and push lcall jno mov push lret cltd xlat jge sub mov inc adc add dec lahf out or loopne push sbb sahf mov dec push mov or popa and add in sbb and insl out add test addr16 pop dec testb nop pop lods fldenv xchg jne (bad) mov (bad) mov stos mov imul daa repz lcall dec imul mov and jno push mov fsts sbb lea add xor dec jmp aam test movsl pop rcrb (bad) sub cmpsl pop mov jmp xchg mov pop clc test lods push lret cmpsb insb in or pushf mov sub sti xchg fucomp mov cmp inc (bad) lock loopne test mov cmp pop pushf sub jl push movsl mov jns pop sahf mov shll (bad) dec or aas dec fidivr mov mull sbb cld ret cmc shl jle aas pop cmpsl scas cmpsb nop xchg test pop mov inc lods test xor pop push sbb mov dec addr16 sub movsl out jmpw xor stc push and add pusha or js mov push popa stc pop mov fnsave push cmp cmp into int3 mov mov sbb dec out dec movsb mov test fbstp push adc in mov mov ljmp jns cmp mov mov xor addb test mov push leave mov xchg or jp cmp popf xchg jo stos (bad) in pop imul and bound in fwait popf and call popf ljmp (bad) jmp cmp fdivr scas pop pop rclb xchg push fdivl sti sbb xor call popf mov cmc push stos xchg xor iret dec push dec cmpsl xchg out pop (bad) dec arpl sub cmpsb adc ret (bad) mov xchg cmp adc insb aaa or sti call sbb cltd jmp cmp pop outsb leave pop push bound stos cmpsb nop aaa popa mov mov or jns push cli xchg inc push in dec repz sub rclb cmpsb push mov mov xor dec movsl jns dec imul lock hlt mov mov pop add pop jecxz jmp add inc (bad) inc sub movb xchg sub jno pop or fwait loope xchg and std ja xor ljmp and pop cmp mov cs inc stos pop pop sahf lret pushf loopne pop sbb (bad) mov faddl imul cltd cmpsb dec push mov jl (bad) mov lret test ljmp ja pop js cvtpi2ps out fisttpl popf loop bound repnz es (bad) and inc stos xchg dec pop lods push sub cmpsb xchg push out lret cmpsl mov push int inc popf out mull pop in mov mov mov mov imul bound das and mov rorb (bad) (bad) jbe and test std fs inc jno add pop mov dec lock mov push pop sbb andl bound sti ret arpl adc in pop dec outsb (bad) popf mov loopne dec orl (bad) shlb xchg xchg adc hlt test cli mov jp (bad) mov jno daa bound inc ds test dec fwait add push ficoml or and xor sbb leave ret pop sub scas sub or pop sbb das adc insl shll insl cltd pop bound pop andl stos mov in xor jle jecxz pop (bad) mov gs ret in cmpsl pop fwait mov xchg hlt lahf pop std test lcall dec add in je jae adc pop cmpsb mov adc fs push sub movsb test mov imul scas cwtl mov mov mov cmpsl push push arpl push xchg inc (bad) int push hlt jecxz mov mov das pop mov xor xchg rclb mov xor jmp adc jnp repz lods movsb add pop and call call mov push leave inc push pop mov mov in inc adc mov mull dec dec pop and inc and sub xchg sub push xor aaa pop sbb add insl xchg (bad) fimul sub pop pop pop xchg xchg sarb cmpsl mov inc xor pushf lds lahf mov sbb (bad) es jmp jbe je out imul and push xor mov pop enter sub es lods jne add mov cmp imul movsb add dec (bad) arpl aaa mov movsb lahf xchg out xchg jo sbbl mov lods fs mov mov test loope mov jne xchg or (bad) mov call fwait dec or scas mov pusha push mov or lea mov mov int sub in sbb mov dec pop ljmp cmp jne dec aaa ret movsb add lret movsb scas movsl xor jl dec outsl and stos dec (bad) out mov lcall fidivr stc aam ret or push dec lret and fsubs jp sahf pop mov sbb mov add insl mov insb leave mov mov js ds or or pop repnz mov inc adc mov loop xlat push out ja stos mov sar jno call es sub adc sub outsl jno mov jecxz jns loope aas shll sub inc call pop lea and test mov sub sub push loop add push cltd mov inc movsb sbb jp xchg xchg mov xor xor rolb ret or sti and cmpsl iret out push (bad) mov fadds into cli push jns int3 imul pusha add pop pop lcall les pop cltd in push (bad) adc mov movsb or or pop fnstsw or pusha mov jns mov aaa outsb xchg or jne aaa mov bound (bad) jno push jo or pop in dec ret lret add aaa ret pop aad aaa mov bound rcll sub in fucomip decb rcrb add bound (bad) clc sahf sbb adc loopne les (bad) cs mov (bad) imul mov (bad) xor stos or and cmp pushf xchg daa and es mov fsts jecxz mov adc push mov mov sub xor jmp js (bad) xor mov sbb push mov cmp addr16 imul and mov aaa sbb mov inc xor mov mov mov repz sub in mov (bad) call mov cmp je jp js pop mov pop call das pop repz int3 pusha out lods call outsb repnz popa (bad) xchg sahf ja xchg mov scas (bad) jl xchg int (bad) scas jo mov ret xchg cmp mov dec aam add push inc jg xchg dec sub (bad) mov sar push mov cmp jl push stc testl add fucomp (bad) aad mov loop pop mov mov cmc cltd leave dec or cmp mov test dec and dec lods or int test movsl in std pop mov add sarl loopne add push sbb ljmp jno (bad) in xor imul and mov lods stos jle or or pushf xchg inc in or and (bad) lret cli add and dec sub leave call fisttpl xchg push mov mov shrb jbe gs mov xor jno dec sarl mov js and mov adc scas mov jns cltd jb fcoms xor std movsl daa xchg lea adc std pop mov je mov jbe mov into jmp out lret dec imul mov mov xor std cwtl xor push push addr16 mov mov cld mov fiadd mov xlat jo movsl jecxz add fldt adc sbb sbb ljmp dec pop (bad) pop nop outsl jmp loope lcall add and lock xor xchg (bad) (bad) jle mov data16 mulb push add xchg xor add mov pop sbb ljmp dec or sub fdivl leave cltd fildll mov dec inc or out jne (bad) pop cmp mov (bad) mov and repz push bound ret inc xchg cmp jge negb mov iret jecxz mov mov cmc sbb ja loopne adc or icebp mov push (bad) repz cmp popf out fldcw (bad) out ret pop ss lahf mov jno xchg addr16 pop sahf stos xchg bound jecxz enter loop inc push and mov es pop xchg bound and add dec cmpsl or and (bad) cmpl mov pop xlat movsb adc ss cmc inc mov and addr16 xchg sub mov adc test add lret sbb xlat xor push scas cmpsl push inc xor inc mov mov enter aam pop mov aaa and fidivr int3 mov add mul dec iret aaa idivb mov pop test out cmpsl xchg sbb dec mov mov lahf pop cmp mov lcall jno and cmp jae mov insl push imul movsb scas into mov mov dec add mov fidivrl int3 mov call jp cmpsb jp adc push mov add xchg popa mov jecxz xor cli jb dec movl push dec js (bad) xor and aam mov inc (bad) or pop jo mov test insb rclb iret xchg mov sarb sti lret mov fwait mov daa pop adc insb inc mov mov push xchg stos ret mov (bad) in mov xchg aas lcall inc jp pop addr16 popf dec cltd mov outsl int3 adc xor mov movsb xor mov jle mov mov add fcompl ds cld jns iret mov push movsl or pop mov in dec or leave pop mov push cld in mov xchg jbe jl out mov daa cli push cltd (bad) cmpsl imul loop aaa out xor out mov fstpt das rol mov movsl pop cmc push mov mov pop addl pop pop test mov sbb and mov loop mov cmp cs jmp push decl xchg in ja dec or mov push inc cwtl aas ficoml cmp adc mov adc lcall cmp pop mov icebp inc mov mov mov mov push clc and mov push cli lcall negl in (bad) inc mov push lods sub lea leave (bad) (bad) pop stc jecxz sub and dec (bad) xor mov int3 bound jl pop dec cmpsl test pop pop and cltd cld stos int3 jge pop out adc mov lahf bound or push fnop fwait xchg or (bad) shll out xor or enter add pop push mov sti or pop cld mov gs cmp mov dec mov mov mov stc jmp icebp mov pop fwait bound dec sub or dec pop addr16 out ljmp xorl pop lods out sbb pop mov rcll inc jl test xchg mov or dec inc stos sub popf mov cmpsl neg add inc ljmp pusha pop in cmp add out bound or arpl add push jp or das cltd push dec daa sub mov and lret jmp mov pop js push ljmp jecxz ret xor xchg mov and xlat jns mov mov ds mov popa out sub int cmc dec adc cmpsl and dec lret mov cltd jo inc mov jbe mov mov or rcl mov or fcoms jg jne dec jmp icebp cltd mov clc pop and push (bad) push push mov das inc adc push cmp mov cmc and push fldcw add insl cltd mov cmp cmp xchg xchg mov (bad) cmc or mov imul pop mov popf cmpsb mov dec add xchg fisubl mov cmpsb mov outsl inc or push movsb movsl (bad) mov repz sub lock pop lcall outsb dec popa xor pop hlt into das inc push shr jae xor icebp mov sub cmp les dec adc pop jecxz mov mov lods movsw mov mov and mov inc cmp jle add sar mov das aaa and lahf out aas sbb inc dec push mov imul mov sbb loopne clc rorb mov xchg mov add insl mov js cwtl int mov cld stos cmpsb in and jb pop je leave stos rorb shll mov andb in pusha mov inc pushf mov enter mov mov and and shl or movsb into xor dec (bad) push pop mov das rcl sub mov test loop into xchg push ja mov dec or xchg lahf mov mov addr16 xchg xor pop mov data16 lods popf leave sti icebp push fs mov push test repnz mov dec sub push lret jo lds mov movsl das or scas movsb xchg pushf out cmp cmpsb out insb mov mov sahf mov rorl (bad) mov or stos or mov fistl repnz cli ret pop jb push data16 fsubrs lods scas push scas mov imul daa mov pop icebp xchg dec mov xchg loope adc mov (bad) (bad) jno cmp pusha xor xchg jo mov movsl in or or or cli push mov inc (bad) mov ret add mov jecxz mov push add xchg xor cwtl jecxz or ret (bad) add xchg sbb pop scas mov adc bound mov pop les arpl iret aaa test pop rcll jmp outsb dec dec jge cmp jno pop (bad) lret leave in add add mov icebp sbb je jnp mov mov xchg dec sarl or push xchg mov sbb cmp pop outsb add push adc scas mov mov mov cltd mov mov mov dec lods es lods popf dec xchg mov mov (bad) cmp and cli or pop jge cmp out insl sbbl imul xchg xor rorl popa in and inc or xchg push sti inc dec cltd scas test ja movsb cltd (bad) imul fsubr out and (bad) fisubl lods mov aaa into and mov sub lods rorl pop xchg dec mov mov mov and jne and inc pop dec add in cmpsb pop xor daa sbb jmp xchg cmc add and push inc sbb xor adc std and in and and cwtl sub mov sbbl xchg mov rclb (bad) stos mov cwtl into push mov ret mov sar mov add inc test dec jo mov sub mov xchg imul mov (bad) dec adc pop xchg aad mov xor lahf add mov jge jp cmpsb addb lcall mov int js cmp add fcomps xor mov mov mov arpl mov cmp xor sub out clc adc fnstsw pop in fs aad inc mov mov push xor or mov pop push mov jl dec (bad) xor cmpsb sbb das into es in inc dec inc add xor pop into mov push mov push push test mov jo into cmp jecxz mov jmp addr16 std lcall push cltd xchg rorl test (bad) fdivs and jg int3 mov decb dec xchg cwtl outsb pop mov sbb repnz sub mov xchg aas xchg add (bad) dec add bound jbe mov inc add dec pop int3 andl mov bound data16 jnp rcll or ljmp daa in xorl enter or fwait inc fwait push lods sub mov aas sub jg test stc sbb les pop mov dec jno popf adc jp and push mov dec dec mov sub pop jmp xchg jbe popf in jecxz xchg xor imul hlt pop bound inc mov jo lods inc mov add (bad) dec jmp cmpsl adc dec jecxz hlt inc cs rolb pop outsl mov sbb out fidivrl mov jmp dec loopne adc lret jne and mov push insl imul mov dec push bound pop stos sbb gs mov cmpsl movsb nop sub shrl test add fsubs pusha pop inc lahf lahf (bad) stos std add push scas popa pop roll mov pop icebp add inc stos bound fs sahf and mov pop inc push adc dec cmpsl pop or ljmp add les push pop clc sbb test es flds scas (bad) cmc rcll or lea sub and movsl adc mov jmp add pop inc mov jne cmp mov mov shl in xchg mov stos mov mov pop or mov movsb mov lods inc cmpsb and into popl test lock in adc and (bad) xor in dec jge sbb aas dec mov in arpl push jp jae sub outsb cmpsb push mov lcall pop (bad) dec pop sti daa and mov xor xchg sbb mov out (bad) adc adc cmpsb mov and scas adc cwtl jecxz int sti push std jge lret iret rcrl jb out movsl cli and mov add iret mov int push dec lock or dec repz xchg push mov xchg mov pushf xchg fsubp fucomip or testb out dec movsl mov pop push test dec cltd add lds jle mov push pop stos mov cs sbb mov xchg shlb in xchg jbe jecxz xlat fsubrl jmp fwait add in in jns rcll or mov xor out mov jecxz add mov xchg mov or mov jg lea xor jecxz arpl test add pop cld repnz sbb dec mov inc insl pop mov sub scas sarb cmp lret mov mov fdivrl mov add imul ljmp fcoml int les jmp mov add aam xchg pop mov iret or mov fistl loopne pop dec mov call xchg imul frstors dec dec call ja mov mov in mov mov and cltd inc lret push dec cwtl scas iret mov (bad) and and mov push jle insl mov call dec adcl mov mov or cmp fnstcw push pop mov mov pop add addr16 setb stos xchg ret (bad) aas inc enter aaa stc jmp jb mov insl ret push xor mov mov add dec add cwtl mov or push pop (bad) jle push mov cs clc cltd dec jb sti mov inc daa jmp add popf fnstenv cmpsl mov stos mov mov jo pop stc jne xchg mulb cmovg loope jmp jne ret cmp test call pop jecxz rorb push jae sahf fyl2xp1 pop mov xor test mov outsb xlat xchg out or or add sub cmpsb addr16 inc fbstp aam adc dec mov pop bound push inc loopne or lahf and jo pop jle mov ret xlat xor push inc cmpsb ja adc mov inc pop mov aam jo mov jle shl ljmp dec mov (bad) or inc cmpl push mov mov cli xor cmpl add or movsl jne xorb jg test mov jge mov mov sub mov in adc push sbb push inc mov lret cmc xchg lock sub mov push cmp nop inc push cmpsl dec stos cwtl outsl out mov sbb daa mov inc rorl mov test jg jns dec and andl mov add adc pop pop dec outsl fbld cli mov mov inc adc mov lock lds adc test inc push inc imul stos push jnp inc or movsb pop clc loop dec stc cltd push push mov jae jnp pop das xchg gs out lock mov lret pop add mov arpl outsl mov add xor jbe mov or hlt jo mov push pop mov add frstor sbb loopne mov imul adc and and and or stc mov aad xor (bad) mov cmp adc scas mov int popa leave shr mov xchg jp mov or push or inc ss pop mov mov and (bad) jmp jecxz mov ds (bad) lcall out shrl test das xor jnp xor repnz fnstsw cltd repz inc fndisi(8087 repnz in imul lret xor adc mov jbe popa shlb clc adc fidiv lret call cli js mov shll xor sub cmp lods lock lret mov test outsl out xor mov xchg fnstenv or lds aam ds (bad) sarl sub cmpsb into clc ret sub adc ret imul push push test int3 cmpsb pop ret lods mov in das sub add in rorb leave xchg cmp int movsl lret and jno stc xchg xor push fidivl loop scas xor mov mov pop jns mov push and and xor or (bad) push popa mov (bad) dec shll dec out adc jns dec mov xchg cs fwait or outsb mov data16 mov xchg aam in std fidivrl subl jg mov sbb (bad) adc xchg pop mov jle loop push mov aad mov test out (bad) test xchg add pop in lods mov mov (bad) test or dec in aam cmp ljmp mov sub data16 mov mov movsl cmpsl inc lea push mov dec (bad) div in stos cmpl mov rclb pop inc mov loope nop and dec repz pusha shrb pusha fucom xchg xchg scas stos pop rorb mov les pop pop jge adc sbb inc iret sub bound out inc sbb sub adc pop cmpsb rcrl arpl in rorl lea xchg mov dec xchg sbb push das sahf inc call cmp mov mov movsl lahf pop jne pop test cwtl movsb jne inc lahf jno jb push scas loopne xchg popa inc daa bound inc add pop jge mov xchg cmp cmc imul sbb insb xchg dec cmp shrb adc mov (bad) jmp cld cmc ds (bad) pop stos xchg int3 daa imul cmc int adc scas or pop push in cmp das cmc adc inc jnp repnz mov (bad) std xchg mov lock dec ret arpl call arpl bound mov js loop mov mov jmp cmp ja imul loopne add pop test jb mov (bad) pop cltd stos and dec push addl mov sbb fdivs or into jo outsb mov push mov int cltd push pop fsubrl pop pop ja add sbb adc out insl pop pop lock hlt roll cmpsb fs (bad) cmp dec pop bound jns je dec xor pop adc pop enter fs inc mov sub sbbl ret jnp popf jo or or in fwait xor cltd repz pop xor aas loope leave test xchg mov inc pop and scas or mov mov sbb repz xchg mov cmp inc lret les jl pop xor jo push movsl jbe test es imul and dec iret test in mov xor lcall out jp mov mov pusha clc outsl mov mov lods push fild xor cmp cmp (bad) fldcw dec inc in add sub or (bad) xor movsl out sbb mov mov adc sbb pusha mov pop ds mov jle nop pusha imul mov mov test dec mov cmp gs xchg push jmp lods mov sub arpl pop xor (bad) iret std push test pop shrb adc lds mov je pop sub movsl cmpsl mov sub sbb pop stos mov or aad mov inc mov pop dec sarl adc mov and mov int aam loopne lock (bad) cmp push stos mov push mov imul movsl mull les lret adc cmp cmpsb (bad) mov mov adc out inc lock cmp cmpsb jbe dec call incl mov jp ss push scas or inc bound hlt leave scas idiv add push ret and push scas wrmsr inc adcl orb dec mov sub and jne mov es pop fsubs movsl fs push and add mov xor in bound cmpsb dec xchg or xchg and call and mov or dec sar in pop mov inc push mov dec es mov fldl or leave push out sbb addr16 mov pop gs out int cmp sbb adc xchg add inc icebp jecxz (bad) sbb movsl test push rorb std and arpl push (bad) cld loopne sub movsl icebp add frstor outsl popa fwait jmp lods pop jg subl bound and int jge jle roll (bad) in lods les bound jns imul addr16 popa repnz xchg pop sarb mov jno jmp mov fwait jl mov push in pop ret outsb repnz and fiaddl fcmovnu (bad) cltd loope pop cmp ror add push mov mov and push cmc sarb and daa jns pop xchg jo sbb imul test sbb jl adc shlb jge push mulb mov xchg (bad) (bad) movaps mov (bad) mov test cmpsl sub mov sub xchg xchg push push adc pop leave iret pop (bad) (bad) xchg movsl (bad) cmp sub (bad) (bad) mov jp roll int fildll popf mov mov push or cs movsb in in jns mov sbb dec outsb sbbl pushf jmp shll adc mov cmp inc cld or test js les jecxz jns jns mov xchg aad clc pop sbbl jl fldcw adc cmp adc and add js aad pop jge jl pop js out hlt mov call push xchg fbstp mov and bnd out pop scas mov jae mov jo push lcall ja les inc jle aas out imul jno rorb lods xchg mov aaa push test adc movsb loope cmpsb pop inc or or and sub fdivrs lea mov mov push out pop ret repz test test lahf mov and or mov push mov es lods shl addr16 jmp fbld push stc notl ds lods shlb (bad) sarl cmp sub in push hlt insl mov jno jmp mov mov (bad) push loope (bad) fscale sti mov mov adc xor or roll daa sbb jns mov insl out mov jae loop out fidivr cmp mov push insl mov pop scas nop loope mov call stc push iret adc mov mov repnz movsb sbb xchg dec (bad) jns sbb repz xchg xor xor inc stos (bad) jo in mov and jbe pop cmp mov pop jecxz call mov es ljmp lcall push and iret add adc mov push xchg inc cmp inc jle mov xchg push test rcll out mov mov ljmp mov jmp subl in dec xorl pop lret inc (bad) out stos adc sub test movsb adc cmp rcr mov std fisubl sub pop cli dec daa and (bad) mov push lea sbb stc outsb out in pop push mov mov pop mov gs dec (bad) xchg lret mov int mov xor sahf es aas mov cmc pop sbb pop mov xor and movsb test addr16 inc fsubp dec cmc mov inc push add xchg (bad) repnz lods inc in mov ret call pop jae shrl dec add sbb mov pop sbb add xchg and cmp and and stos add pop rolb popa push in add insl mov stos mov pop roll cmp jmp push pop pop mov and movsb sub fs loopne mov inc ret fwait sti fisttpl test sbb and pop push add jmp xor out sub mov and rcrb xor adc cltd or jno in test repz fs jp xlat cli pop test xor pop vmread movsl push sub les mov dec call xlat mov stc lods inc pop in and mov repnz addr16 dec xchg jnp or out add push gs call adc imul push movsl mov mov add mov adc and inc dec dec gs test inc add bound fmul adc and pushf addr16 imul addr16 inc mov les call push (bad) sub add call xchg stos mov daa jns adc sbb aaa or in repz xor xchg je xor loope xor mov dec call dec push ret sbb mov mov mov dec or je jmp loopne clc push dec lret stos mov cmp inc ja pop mov xlat push or arpl (bad) stc dec in jae mov movsl inc roll add or je xor and jl mov sbb jnp movsl mov repnz mov je and lcall mov bound ja mov daa inc mov je pop (bad) mov push adc stos scas shll and pop std test dec sub mov cld ds icebp push sbb and pop sti icebp xor mov fdivrl pop inc sbb out (bad) popa inc dec mov fs or scas xor adc sub mov sub xorl inc sub jns cs push mov fldl dec (bad) into cltd sub repnz (bad) cmp jne addr16 mov push dec fs fwait mov (bad) loope in mov or mov or cvtpi2ps lahf push js ret fstl out iret jns dec rcrb jp push mov popa js (bad) std xor es dec push (bad) pop (bad) and push pop fwait push ret mov test mov mov dec or fisubl iret jp cmp xor pop mov cmpsb mov aam mov shlb fisttpl scas mov or fmuls lods movsl test add xlat movsl stos insb (bad) and sahf cmp movsl mov mov arpl stos jge movsl fistp xor and inc movsb mov cmpb clc bound inc mov pusha cmpsl std mov push fsubl mov aaa push mov or (bad) loope js xor push adc mov jmp into adc mov sbb int3 ret and (bad) lods jbe out cld mov jecxz and cmp dec fistl jmp mov sub outsl insl and dec xor repnz cmc mov or cmpsl xorl fsub xor sbbl mov xchg lds mov jecxz mov pop das arpl xor and mov sti movsb jecxz add out and cltd imul (bad) mov lret or roll ds gs cwtl mov push icebp inc jb sub inc jb movsl add inc fistpll push cld adc and (bad) lret aad cld pop mov dec add adc iret test (bad) cltd out mov sbbl sbb dec xchg mov (bad) dec push andl out and loop mov rcrl arpl mov xchg sarl repz push dec dec mov mov imul jmp push mov adc test inc imul mov adc in xchg (bad) sbb orb loop lock pop fimul ret jecxz popa cld pop mov mov mov fnstcw lahf sub fidivl xchg push rcrl and es imul das aam test jle cltd mov jnp cmpsb mov daa cs push negl push int scas xchg es mov inc mov jne loope mov dec lret test rcl sub lcall cmp sub movsl aam leave test addr16 (bad) mov push jp dec lahf mov jne add testb in insl jo dec or sub jae cmp ja andb cmp xorl js aam jbe loop adc pop dec cmova js sub sbb loopne imul push add pop dec sub ret mov xchg out mov fwait jne int pop movsl je (bad) rorl mov adc lcall lret data16 adc dec out test add nop xchg mov mov pop jae cltd add pop cwtl imull jae mov scas stos sbb inc nop mov jmp xchg jae pusha into add repz dec das mov les sub out jb lods fwait out mov outsl pop mov xchg or pop icebp cli (bad) sbb or jmp aad jecxz sub adc (bad) jo mov pop cli andl pop in xchg hlt pop (bad) jb cld xchg mov inc out ss loopne or les mov bound mov pop cmp xchg xchg gs movb cmpsb cmp test push and xchg xorl pop jns movsl int3 pusha (bad) pop (bad) mov pop mov add mov jl mov jge and add mov rclb mov push dec mov or int xchg cmc pop adc rolb sbb and cltd adcl and dec les (bad) int3 (bad) jge imul dec mov lret mov into lret ret sub cmpsb pop (bad) clc ret mov in outsb push lret ljmp inc (bad) in and mov popa icebp dec pop mov jns mov ljmp in cmpsb int3 (bad) sbb inc movsb mov lock (bad) (bad) icebp mov mov (bad) outsl movsl push out inc push or fdivs ds mov jmp mov cwtl or lahf jbe sub aaa fidiv test es je jae cmpsl pop lret (bad) ja pop aas and push mov lods cmp ret pusha repz xchg cwtl popf mov call cli mov jb mov loopne mov scas cmpsb adc push dec pop outsb pop movsl je test fsubs (bad) out jmp pop lock sar mov add sahf inc mov lahf inc mov adc adc std xor dec stc cmovbe and in call inc (bad) jle mov adc leave imul and arpl sub iret adc cmp mov and cli insl pusha and pop sar mov jecxz cmp enter pop loop sub or pop sub cltd (bad) bnd and jl jo dec xchg rclb in insl imul and outsl mov mov movsb iret mov call scas cs outsl mull lret bt bound dec popf mov and cmpsb xor and hlt ja xchg or sbb mov lods lcall xor loopne inc or mov bound mov jae mov xor cmp clc (bad) dec movsl sarl cltd cltd jno push mov ret or xor mov sarb mov mov and sub pop cs mov pusha pop (bad) sbb cmp cmp mov in dec jg cmc out xor in lcall inc cmp in push dec mov inc cmp push out mov and (bad) (bad) lret into and (bad) test sbb adc ds ret rcrl push mov mov inc cmpsb sbb scas movsb popf push test daa enter sbb push mov (bad) insl (bad) push jg sub mov repnz popw push rcl sti push pop or sahf mov sbb imul push mov mov sub pop rclb mov fwait mov out or out mov inc mov std pop fbstp scas and cmp mov mov in and mov and pop mov add rcrl les mov pushf mov movsb xor loop mov enter pop (bad) jno inc mov test mov mov popf test cli inc mov iret (bad) mov pop arpl xlat dec sti cmp push push movsl aam pop lock jl negl xchg test ds inc pop clc mov (bad) ss xchg arpl rcll lea jne adc mov in outsb cmp cmc imul stc jno pop dec cmp in xchg iret push ljmp pop mov cmp in jae push mov mov push xchg (bad) out in lods ficom fcoml jno loop mov test cmp adc or lods mov jno jne das xchg mov mov mov xor (bad) dec jae loop or mov dec or leave and jb xchg daa xchg mov or cmp add popa cltd mov xchg sbb sub xor in lock out xchg cmp (bad) mov aas in push dec jno nop inc adc inc hlt push das and mov fmuls jbe pop push xchg shr (bad) (bad) sti int3 (bad) push mov loopne and xchg rol mov dec push out add jmp mov xor daa xlat xorl into inc (bad) cmp adc dec sahf fwait mov dec and test sub lcall and insl sbb adc imul ja push cmpsb sbb jae repnz and pusha (bad) es int xchg in jns lret inc push gs cmp xchg pop push mov rol call negl sub mov lahf and cmpsb fidivr icebp push jb,pn mov pop cli scas xchg jle (bad) adc (bad) ss lods arpl cwtd sbb scas adc (bad) lea decl test xchg or stos ljmp fnstcw xchg mov jnp and mov jbe jne push (bad) outsl pop pop imul mov pop jbe stos mov jl repz sbb (bad) (bad) lea (bad) fidivl cmc sub lds movsb cmp out in pop jp push stc add sbb rcrb jne jge push jmp mov mov pop in lret lea cld push and mov roll mov ret adc mov icebp int3 cmpsl xor es ss daa and push out inc jno mov jns ror adc enter scas int3 xchg mov inc ss pop or std pop mov inc push pop fwait mov xor mov imul push sub adc cmp sti and orl std cld add cmp adc jb fdivrl test sub out inc aas dec adc in and mov out hlt cmp iret mov mov jp jnp std or sbb sub leave dec lcall fistl lcall enter mov sub outsb mov mov push loopne ljmp inc xor sub xor sbb (bad) push mov cmp adc pop imul (bad) rcr xorl or mov call sbb push adc test imul (bad) mov sbb movsl inc dec push test cmp mov dec add jecxz out in mov or xchg stc dec mov mov push jne ficompl std inc sbb inc fisubrl mov and mov fcoml pop movsl and sub jge shll jg mov lret push dec arpl add sub add dec loop (bad) mov push cmpsl popf insl rcrb mov or pop push dec test lds or pop loopne into lea dec out insb bound cmp sub fs mov jae cmp popf mov (bad) mov sub jb movsb pop out add inc lahf test ret mov lret mov mov mov out aam xchg in dec cli xchg (bad) dec test mov mov adc mov (bad) scas sbb incl insb or push cwtl add outsb fs mov popf add cmpsb lds pop adc pushf dec or ret xlat int add push dec cmc pop or mov out fdivrs xchg aam xchg (bad) outsl in mov (bad) mov sbb cs dec or imul or aas xchg data16 jb pop (bad) rcrl jmp sub iret cmpsb adc or dec adc xor xchg cmpsb bound cmpsl jmp popa jnp dec cli cwtl pop test sub inc imulb mov in dec mov into pop dec int3 jo in dec add adc out hlt jecxz xchg xor cmp out cmp xchg iret add out shr test imul adc mov shr pop lret pop repnz lea inc ljmp mov xlat adcl mov (bad) loopne fldcw out pop cmp lea and inc sahf jns dec movsl js rcrl aas mov jg cmp pushf sub mov jmp cmpsb push imul (bad) test mov (bad) push xchg or dec lret fdiv inc lock fnstenv dec mov gs lret test push pusha sub out ja cmp push cmpl pop add ljmp mov inc loope in sub and (bad) or xor push fwait dec fiadd push pop loop cli les mov jge and in (bad) xor push sti out arpl jnp rcl xchg (bad) cld push sbb lods jecxz xor xchg push mov mov icebp adc pop mov dec adc and (bad) iret in cli mov (bad) pop xor popf iret shr cmp addr16 js cltd adc mov sbb (bad) push jnp dec pop repz cld sbb jmp iret les roll mov jno (bad) popf roll dec pop rcl stos mov (bad) out xchg cmpsb inc xchg (bad) xchg cmp cwtl fcmovnu pop jno movb loopne daa nop pop push (bad) cmp pop cmpsl pusha ret jns pop inc sbb mov shrl das jp and mov int loopne mov aaa out and sub out xor jno je sbb cwtl mov int out imul std rolb dec sahf and bound bound out shlb stc pop mov cld addr16 aad xchg mov (bad) pop adc ficompl loopne mov nopl dec inc out outsb fdivr hlt lea pushw fsubs lock adc loope gs push pop out lods xchg pop inc push add xor rorl cs cmp jo aas xchg mov pop loopne inc gs inc movsl pop in jae jmp mov cmp push cmp pop scas sub rcrb cmpsl and xchg mov add mov ja nop pop sub aad in cltd mov aam bound sbb and js mov fsubl les sub mov jge jae mov js pop push sub fwait jnp mov cmpsb push xor call mov mov popf (bad) jle jno imul cwtl jmp xor (bad) arpl xchg xchg aas mov push dec push pop (bad) arpl ljmp adc dec clc jl mov out cmpsb rcrl mov stos test (bad) mov ret lea mov dec or push loope das movsl or test xor mov mov adc gs scas jbe mov push push into or data16 out movsl (bad) dec pop sti jae aas mov xchg dec lods jb sub mov add inc mov imul and shl mov adc fidiv sti daa aaa arpl test sbb jge (bad) mov pop push sub pop sub cmpsl mov dec pop mov mov mov inc push cmp xchg repnz jno sbb mov sarl cltd cs jne cmp push iret movsl ret jnp cmpsl mov xor pop push fwait cmp dec cmp adc bound mov loop adc push int3 add decb test push xor push pop push cmpsb pop (bad) lret loopne and ds out (bad) into js addl pop and fistpl mulb cli mov out mov loop fdivrl loope or push stos jns ret (bad) mov jp adc push add test cmp mov lea rcll add add push jne sbb fldenv jns out outsb in push cmp aas mov in xchg jle lcall mov xchg repnz cltd andl inc adc and sbb pop jmp add (bad) repz pop loope call aam bound and out mov subl xchg mov jp cltd fadds pop repz jne mov cmpsb insb out xchg es lcall mov sbb pop in je mov mov rorl sbb lret push pop jle outsb or inc mov stos dec mov mov mov stos jge cltd push lcall jne arpl dec jmp dec lret fisttp inc xchg das xor out dec rorl stc push mov lea mov rcrl adc js rcl pop inc or (bad) cmc sbb shlb ljmp jecxz pop sbb scas and push daa cmpsl xchg je mov and movsl daa push mov and jno pop fiaddl inc popf lahf movsl insb (bad) cmc adc pop jnp les fwait insl stc fidivl lea pop in push (bad) cmpsb add aaa adc es sub shll pop mov shrb mov fucomi mov test (bad) sbb gs pop pop leave aam xchg movsb adc aam jns jmp (bad) call data16 je fwait loope cltd jge out pop icebp push aad or and pop cld ret dec pop stc add jne stos call addb jg frstor enter push and cwtl bound sub jo and add mov cmpsb add mov lock lcall (bad) lret movsl cld shrl cltd cmp lock lods sbb adc mov pop je adc inc pop data16 inc cmp jo mov mov sahf and bound push or push dec ss adc xorb mov cmpsl imul xchg leave xchg and push inc inc mov mov std push inc adc and sub out add frstor cmp pop lret mov xor sahf fnstsw imul repnz fwait mov mov sahf jno sbb clc das mov insl push push xchg fisttp pop cmp inc xor scas mov cmpsb loop or repnz rcrb loope arpl mov mov in mov xor iret stc mov loopne pushf lahf adc loop fwait xorb inc or add out push lea and sub push inc fwait enter mov add cmp fcmovnb dec xchg xchg (bad) mov mov sbb cmp lods push pop repnz mov pop mov jl mov loope adc aam lcall ja jae lods (bad) imul dec in cs xor add pop jecxz lds aam cmpsl cmpsl push fwait mov mov push int andl insl sbb fcoms adc dec adc loop pop mov mov cs or mov cmpsb adc movsb icebp (bad) cltd push pop sbb pop setb pop mov mov out mov push pop cmp out jno aam clc jo pop loope mov sub and inc push jecxz mov lods mov mov dec jns jle mov arpl sub or cld inc adc ret or cmp add cmp rcrl (bad) (bad) jecxz push int3 cltd sbb dec (bad) hlt and mov les leave (bad) out xchg mul mov lods in mov in xor loope lret cli mov ror jmp mov xor arpl mov jne loopne out loop aam dec xlat gs in roll sub push enter pushf rol jl or mov cltd adc jp ret aas lods mov test xchg jmp sbb loopne push pcmpeqd mov cmp xchg mov call movsb stos in push mov cld (bad) mov pop sub shrl push dec mov sbbl xchg (bad) jge repz push inc mov js xchg icebp mov mov bound (bad) movsl cmp xchg inc cltd aad imul dec sub mov and bound out icebp shrl jle xchg or es push jg (bad) callw xor dec add jecxz fidiv mov es sbb xor cmp sub icebp shll ljmp jp imulb xchg js sbb cmc pop mov push fisubr mov mov mov mov dec mov dec and add jns inc sub arpl jb mov jecxz mov pop or and cmp cmp fwait push mov push inc mov mov xchg and push xchg into stos and xchg mov cld mov into adc xchg in popf xchg je cmpsl ss hlt inc movsl jns lods mov sbb inc in inc push add cltd daa mov dec dec mov insb add rorl sub cld xchg mov out insl ret mov insb mov negb imul scas mov push inc mov adc pop inc xchg pushf iretw mov pop mulb and (bad) cmp icebp (bad) xor push mov daa lahf jb mov dec add mov push (bad) mov adc sbb lods addr16 jo cmp sti push mov sbb fbstp rolb mov stos stos mov push mov (bad) xor stc int je add (bad) test int fiadd sub sbb xchg shr sbb and lret push icebp js pop mov pcmpgtw movsb pop subb imul movsl push jmp jecxz dec xchg bound sub in aaa pop sub repnz dec or imul loopne mov xor jecxz add sahf cli popw lock in mov popa hlt call inc (bad) js les cmp inc mov leave rorb jns and xlat add stos ja fcoms enter push sbb push mov mov loopne adc jno rorl cmc out mov sub loope cmp xchg mov insl repnz pop and mov bound call pop rcll popa sbb add cltd jecxz cmp or leave fsubrs pushf inc jl pop in aaa repnz lods adc cmp inc jae sbb daa loope or xchg mov (bad) (bad) mov (bad) movsb cmp ja push mov dec ss mov aaa pop push add xchg adc jne sub or daa push push icebp mov cmp aaa in adc jl aam daa or cs xor sub adc popf pusha data16 push popf and push pop std push test lea mov daa mov pop sub (bad) lret lahf adc std and orl gs data16 loope call xchg push data16 mov xlat xchg testl pop mov push jmp sub jb push or fildll daa sbb jmp loope repz sbb cmpsl sbb inc xchg xor adc pop (bad) or push mov pop inc push ret xchg lahf add add add ret and inc xchg test adc push mov aam mov hlt adc mov or xor jmp jge stos movsl inc dec or out and pushf mov imul cmp fildl clc jo xlat leave cltd push sbb xchg int and aad and sub popa push mov test mov jnp inc adc push mov sub mov push scas jecxz mov inc or mov hlt arpl pop inc xchg and aad mov fucom data16 jb fsubs aaa sbb scas push ds call mov and out jo (bad) adc sbb adc mov or xor lcall mov push std pop pop add movsl xchg dec aam popa mov in mov gs loope pop jno inc pop icebp inc mov xor cltd push jae jle cs mov xchg mov lock scas add push sub lods lods loopne orl xor mov push dec dec or fdivrs loope imul xchg out push sbb fs std or iret lret imul and cmp pop mov cwtl mov stos cmpsb push cli es mov push push push repnz mov push stc ret repz xlat arpl aaa test push inc stos arpl mov dec push out (bad) push xchg mov dec mov cmpsl loop int3 mov notb sub adc loope and les mov cmp fsubr andl sub pop aaa mov das lcall lcall movsb jns cmp in js dec jnp mov data16 and jle mov lret shll clc inc (bad) icebp gs jo fstpl jl adc xchg aas loop cltd inc adc push inc or out push mov mov mov lock mov loopne sbb cltd inc cmp sbb mov test and push jns add clc sub sti and std (bad) fcompl cltd cmp sbb cli inc or movsl mov ja mov repnz xlat dec mov lret test mov xor daa sub mov mov sbb xor sbb adc out sahf out xor dec aad adc jne ficoml lahf and leave cwtl sbb enter imull xor ljmp pop jle fisttpl sub jmp or test loop dec imul sub xchg dec inc test mov dec jbe aaa pop jecxz adc imul or loopne lods push xor mov mov (bad) pop add lock sub inc dec push cld lret adc pop negb into les xor mov xor outsb out cmp pusha cli out push pushf mov jecxz sub cmp cmp mov mov jecxz lcall ret je out cmp add movsl lret stos out mov cmp mov aas sub cmpsl jns mov cmpsb lahf mov mov cmp dec push dec lods cmpsl nop and scas call mov or fiaddl cltd out imul dec add push mov scas sbb call pop (bad) leave mov mov mov mov inc jne cmp push add mov lret imul pop mov call xchg mov cmpsb mov sbb sub ret (bad) (bad) mov or repz ficoml inc pop mov les je mov (bad) gs pop mov add shl movsl or cmpsb dec lcall inc ljmp jl mov and loop imul dec cltd adc aaa cmpsb popl adc rcl mov xor lods movsb mov lret push (bad) mov mulb aam and pop xchg (bad) (bad) sub mov aad aad push mov mov cmc pop mov int xchg mov jns rcll (bad) arpl gs enter mov lea mov xor pop cmc jp (bad) ss and std pop movsl xorl xlat mov lds mov insb sti ficompl repz outsl push jl out cmpsb test mov je xchg addr16 ja mov push push call mov lods jb sti ss mov push sub clc inc or pop jmp std pop into cld inc test mov enter cltd sbb les sti cmp mov pop lcall cmp xor mov jl loopne add lret bound jl sti loop xchg repz dec call push xor mov dec jl mov mov push in xchg add xchg bound fcomi inc push fsubrs loop rcrb xchg dec std mov mov add push test xchg cmp and xchg and fisttpl repz push test pop in arpl out ss sub loop sbb mov idivb icebp xchg sub mov push scas fs insb lcall lods cld mov mov push fsubrl movsl pop push (bad) sti push scas inc decl and js adc mov mov push cmp repnz pop mov lods movsl int3 (bad) lret dec cmp imul movsl mov adc pop cltd jne aaa nop push jmp aad xchg shrl inc adc push sub movsb (bad) xor inc sar push lock movsl ljmp scas mov insl cmc ret sbb test addr16 xor jnp (bad) mov sub push lea das sub test dec push dec iret mov jmp cld lods popf mov xchg or fsubl pop jl rcll xor std sbb jo sbb mov push xor and movsl push dec or int inc xchg std mov unpckhps jl imul lret in xchg cmpsl mov icebp (bad) mov ret out cmc (bad) movsl arpl dec mov pop xor imul es cltd cmp pop mov (bad) lods lea pop or scas xchg (bad) cli mov lods mov xchg pop stc cmpsl int3 xor inc xlat pushf sub dec mov cmpsb jns imul daa sbb mov jp xlat lret pop jg mov mov popa mov pusha push out jno mov (bad) shrb mov out lcall lret dec dec cs sbb out ret mov push jne fldcw mov xchg lahf icebp jl rorb fcmovu movsb mov gs inc les mov shrl add sbb pop push outsb or popa in jecxz mov jg dec out jnp sub push dec push mov jbe inc pop inc or mov sbb mov daa sahf xchg movb mov fld mov and scas and mov xchg mov mov mov lods or sub lahf aaa mov adc push and sub out inc pop popf add pop adc or lcall out xchg cld sub sbb test inc shlb fnstsw or jns stos mov and in dec lods pop int3 test mov jg jns fistl pop cwtl sub jl aaa stc movsl xlat jmp adc mov or jl adc xor (bad) or jns and mov sar cltd lcall mov push cs scas fdivl ja mov dec mov jae jp cltd cltd adc mov mov sbb xor push mov jo (bad) fisub aam mov out out xor nopl pushf sub adc dec std dec orb jb push xchg fldt loope or and mov in jnp iret jns mov inc sub fild cwtl jns test and bound into inc xor cmpsb das mov inc hlt mov cmovb mov cmc and stc mov push xchg mov pop or insb lcall inc mov arpl mov leave jp jo mov xlat and sub mov adc xchg je imul mov dec bound mov xchg xchg imul lock dec dec pop dec (bad) dec xchg xchg xorl mov insb sub outsb sti cwtl daa cli daa sbb adc data16 lock lret mov xchg vcmppd sub adc (bad) arpl pop es insb mov jb xor fwait xchg or inc idiv repz push xchg scas imul call xchg insb jecxz lock and aad shlb call mov cmpsl call loop cmpsl pop or cmp pop xchg xor flds jbe shrb mov mov fcmovbe jl movsb pop pop add inc out cmp xor fiadd lods movsl fs daa jno out jmp adc (bad) int lret (bad) xchg add out lock loopne push cld mov and sub cli mov loope and rcrb mov arpl sub pop divl sub test mov sub push shll mov pop or pop jmp sbb popf mov add add adc pop movsb (bad) pop sbb in adc inc movsl decb inc mov lock leave ja mov aad shll bound inc loop xchg push add sub mulb fdivr or push addl mov jbe mov in lds jl cmp dec aam dec loope inc fiadd in out data16 sbbl or out cltd xchg loopne stos lahf inc (bad) fimul inc add push push jne mov cltd dec pop sub add jmp xor pop inc pop call nop lock inc ljmp les cli xchg sti movsb fldenv (bad) (bad) adc dec lock and test cwtl in xor jb mov pop or pop iret push loopne mov mov or in jmp addr16 rorb pop sub dec mov add jmp cmp js dec push (bad) idivb nop imul in sub push aas jecxz and (bad) aaa test pop and pop loopne daa stos cwtl adc xchg mov mov gs inc and push jg jb (bad) je punpcklbw idivb mov xor mov cmp sbb iret mov mov sti loopne das mov cmc test lock push scas data16 int add popa scas loop movsb jnp (bad) dec loop les je pop cwtl lea mov popf andl repnz push inc pop sbb shrb sub and cmpsl add adc and xchg (bad) xlat push (bad) jecxz ret pushf cmpsl gs push pop xlat into leave icebp addr16 xchg lret icebp or (bad) insb ret pop push loopne pop and aam roll mov xor mov pop sbb out out mov push jmp (bad) mov push xchg aas roll add ss sbb (bad) xor inc das pop mov push out insl aas xchg es adc mov stos hlt aad mov jnp adc mov repnz loope mov fsubs cltd or ror stc dec popf sub (bad) cmp cmp notb repz push push mov mov add ljmp and mov jbe or sub mov mov out jmp and mov and cmp jp stc jmp shll (bad) out cmp mov aam call nop jae fmuls hlt xchg mov mov cmp cs add mov and mov add mov sbb mov out pop sbb (bad) aad (bad) and test xor mov js in cmpsl repnz mov ss mov loop mov (bad) js mov into mov push insb mov in sub xchg aas int3 push add jle out pop lock xchg sarl mov in aas imul daa xchg jl imul rclb inc daa mov fdivr out mov mov mov insl in or sbb and jg das and mov stos js xor xchg sub loope outsb mov fadd jmp or dec mov stc lds inc push dec shlb xchg cmpsb stos and dec xor outsb shll adc mov mov add call inc mov repnz movsl dec sub push lahf mov mov xchg cli pop push sbb mov out fucomip inc mov jecxz lock sub mov jg mov pusha leave (bad) cs or mov jle loop inc dec push outsb out add out (bad) js xchg sbb cld loop mov xor mov jno nop dec cltd or cmp dec xor and jnp and movsl mov rorb inc or sahf lea cmpsb fldcw fwait orl shlb leave inc push add mov call or psrlw arpl popa das fsubrs push push fidivr repnz rcrb xchg add jge or cmpsl dec jns jbe cmp in popf movsl lret pop in mulb xor dec mov cltd mov movsl lret sbb orb sbb push mov cltd dec xchg daa cli test ret mov jb cmc gs pop mov negb or xor outsb jno cwtl (bad) dec cmp mov les test popf data16 jno push out cmp push movsb push rolb popa push cltd sub (bad) (bad) pop mov bound test adc and sub push leave xor jg adc and lods mov or push scas fs gs xor stos inc or je es push icebp ljmp inc faddl cmpsb mov or push mov data16 das inc fcmovnb pop sub data16 push sub jl je rcll add clc mov add fincstp dec mov dec mov add xchg lock ret push mov pop dec add mov fadds sbb pushf mov push mov mov fwait mov (bad) mov xchg and imul sbb popf (bad) imul int3 mov sarl cmp roll movsl jp insb std add jle xchg inc inc stos mov insb cmpl fwait out sbb adc je add in mov jmp rclb mov push sub movsb inc adc jns (bad) pusha sbb mov lret mov fistpll push fiadd test and inc cltd pop cld into arpl ret sbb shrl imul lock add mov inc gs jecxz dec pop pop decl ret add mov inc mov out cmpsl and (bad) cltd jne shrl sub daa stos cmpsl test sbb fsts imul (bad) lock sub aaa ds mov sub and lods (bad) dec inc pop (bad) pop xor inc inc or pusha out inc mov push sub aad cmc aad les mov cmpsl push dec jmp mull je aaa adc inc mov sub rorb loope jb xlat iret sub mov mov lcall rorb jns sbb xchg scas mov int3 rcll mov mov and xchg ret ret mov pop mov test add lea xchg inc ficompl cld mov test bnd scas cmpsb stc imul cld lds into orl pushw pop cmp in mov cmp adc jns popf xor out repz bound fdivrl daa std mov stos cltd mov sub adc mov pop add xor arpl dec mov push sub sbb mov cmp pop (bad) cmp jp mov xchg mov mov xor adcl xor xchg or inc or ss stos popa div xchg shlb adc cmp repz mov cltd sub inc shl mov ljmp mov pop pop xchg sbb and pop clc lock mov shll and mov mov decl sti mov jecxz,pn lret jns cli lahf push jno out daa sub or movsl addr16 sti cmpsb xor xchg clc sub loope sti lcall inc adc jo out add lods in mov pop negb mov lcall add pop repz outsb ljmp aad nop sbb fldl fs dec outsl call inc (bad) jno fdivrl jmp subl movsb jecxz pushf cmp xchg pop icebp ss cli cmpsb test fidivl pushf mov adc add (bad) xchg or hlt pusha repz iret mov mov adcb mulb cmpsl lods cmp fdivrl es xchg (bad) shrl sub stos jo roll adc xor cld adc sti adc test xchg mov dec xchg inc bound jno pop jge data16 lahf icebp lahf cmp sbbb mov insl push ss pop mov mov inc jnp sub xchg push push mov sbb sti pop mov sub out adc cmpsb incb fimull add pop movsl mov push iret (bad) cltd inc jne outsl popa loopne cmpsb lret push add xchg mov aas pop mov fdivr adc mov cmpsb les dec movsb mov lods scas or xchg test mov or inc push rclb and bound jecxz scas fwait popf xchg and scas (bad) out jge adc aad mov data16 fistpl sub push dec inc jne xchg push mov mov int push xchg dec mov out xor scas jb cmpsb test pop adc add mov or call ja adc pusha fwait lock adc xlat jp sbb pop xchg mov cmp mov dec xchg leave imul fwait clc sub lods push mull rep pushf fs xor loope popf mov or (bad) xor dec movsb fdivrl das ljmp imul sbb test cmpsb js call sub sbb scas in out imul sbb xchg imul and jecxz sub and sub sub mov fnstsw mov repz mov (bad) leave bound aad mov cltd dec das in sti or inc xor jge dec and mov fs jmp mov imulb pop lds sub xchg (bad) mov push push push jge les hlt jecxz mov xor push mov or std cmp ja xchg fist mov dec movsl mov mov xchg mov xchg lds gs xchg jp adc (bad) xor push jns sub shll push push dec xchg lea add cwtl mov mov or xor mov imul xchg pop lock clc push xor mov add scas mov xchg or imul sahf cmpsb mov loop or into lea mov iret and cld pop xchg mov jmp ret fwait mov stc pop movsl in jb clc pop push hlt mov xchg and sarb jo gs mov lods aaa daa mov sub mov cmp xchg dec lods xor mov xchg and repz js mov add dec or pop loop stc movsl mov xor clc mov dec sbb mov xor test sbbl mov orb popa mov push add xchg dec or and enter xor mov pop lock mov mov lods cmpsb inc das sub test xlat in gs ret les std jns pop lret cli loopne and mov fistpl jns add add imul cld repnz subb push mov mov lods xor mov sub scas push inc push je out movsl sbb pop lock out pop pusha lret (bad) mov ds popf out out dec inc andl (bad) insl xchg fcoml push sbb fsts and bound es inc leave cmpsb cmpsb pop cmp in mov xorps adcl lahf fbld push into inc outsb movsl (bad) js adc hlt jl icebp popa and cmpsl and xchg lahf sbb xchg xchg pop pop imul push das cmp cmp sahf xor pop lea icebp loopne out (bad) mov cmpsl mov dec (bad) and pop mov pop cmp mov ret insb cltd (bad) data16 mov sbb les (bad) or or pusha mov push mov push adc push sub and cmc mov mov lods cmp pop repnz push outsb add imul pop xchg fwait daa jnp test pop mov nop popa pop xchg sar xchg xchg lods adc add bound mov cltd xor pop mov add or mov les sub xchg daa lock add and pop sbb mov (bad) mov mov push pushf movsl cltd xchg cmpxchg lret jno popa roll pusha sarl sahf pop scas ret arpl stos loopne or jp call leave mov movl test xor (bad) stc jno pop mov shl gs orl sub jbe xor test xchg mov js jl aas jno mov (bad) fidivrl sbb std jecxz pop insl push (bad) push wbinvd mov and cmp repz std imul ret and (bad) dec insb xchg int repnz and popf add sub imul bound xchg cltd cld shll cmp push and xor and push roll cmpsb xchg stos mov mov mov dec mov add (bad) mov inc sub (bad) xchg (bad) leave out pop orb icebp or push in ja adc fstl mov inc cld mov sub rclb sub inc and aaa movsl (bad) add (bad) pop loope in dec into adc daa adc fsubl xchg pop jo test aaa jne cmp dec sbb pop daa mov sub insl popf xor bound outsb sub lretw push cs cmp cmp dec sbb rorb rcr stos or test cld test pushf pop cmpsb jae sar aas cmp pusha lea bound mov test cwtd fldenv cltd insl xchg pop push sbbl aaa push jb mov push mov sbb ss mov mov ret pop pushf les sub mov add lret and inc push iret and shrl and adc mov sbb dec (bad) ss sub pop add js addr16 data16 jg je jnp jecxz mov mov aad jle push cmp xor or pop (bad) and cltd das sarl (bad) fs ret repz leave mov sub dec or push leave mov (bad) xchg sbb adc jge mov popf xor mov arpl dec (bad) xor push or mov or mov sbb test (bad) pop (bad) in xchg in jo dec lods mov mov or lret cmp mov arpl push add rorl (bad) repnz lcall lret mov shlb mov xor lock out or out les (bad) (bad) nop cmc ja jecxz ss add mov aas cld lcall push cltd test notl in lods (bad) mov push xchg mov outsl cltd xor test mov js pop mov mov mov sahf push mov das and out rcrl pop mov imul xorl stos xchg and mov ret xor mov loop sbb outsb out into push shll and fstl call out movsb lcall movsl sbb jo pop mov and or sti bound mov mov leave inc (bad) sub arpl addr16 sbb xchg sub shrb mov lcall mov enter (bad) jnp push push push icebp out mov imul call scas push xor mov sbb cmp adc insl test call mov in mov or inc push fs add cmp mov sub pop and push and mov nop mov mov iret loope push (bad) and jo ljmp and dec scas cmpsb outsl (bad) mov mov loope mov out lods xor inc add dec or movsb lahf xor arpl pop jp out fildll (bad) mov jb dec mov subb xor in lahf pop mov mov imul mov mov popf mov xor push lods dec add lcall iret cmp (bad) xchg push inc jae test mov movsl stos pushf loopne out lods inc mov shll and sarl inc mov jmp aaa mov cli cmc inc jns sbb mov ret lock push adc shrl dec adc adc inc stos popa scas mov or jp cmp lods mov mov mov out or cmp pop icebp inc or scas mov mov repnz adc inc add xor mov test push add and pusha cmpsb out xlat push notl add inc mov sub mov fidivr out pop cmpsb xor insb jae lock dec cld daa ret negb add lods data16 mov sub imul (bad) roll jno bound incb jle lea inc xchg mov push out outsl addr16 (bad) xchg mov stos xor mov push sub xchg mov xor cmpsb sub push lea cmp fwait xchg push push xchg bound daa xor adc arpl mov pop add in cmpsb dec enter (bad) cmp mov inc mov lods subl push cmpsb cld (bad) in mov sub or mov xchg sub adc xchg mov cltd or or mov mov jnp cmp mov in jmp and lahf insl (bad) dec and cmpsl push push (bad) mov sbb pop (bad) sti add cmp cmpsb pushf jo mov mov fwait pop stc fcmovb jno mov (bad) dec adc xchg stos (bad) into jmp inc mov movsl mov cmp fcoml mov mov fwait jns xor stos rcl sbb cli pop imul sub xchg xchg cwtl add jnp stos jl lds sbbl add pop push dec lret testb xchg repz adc stc push (bad) fldcw push lea data16 into mov pusha mov movsb jl add and popf pop pop pop out mov xor lds dec pusha pop pop lods js push mov cmp xor add lea pop js and addr16 in test fsubr fdivrs mov pop jl adc bound (bad) mov hlt stos insl add cmp into testl push mov into sbb jg cltd cmp jmp dec xor adc xchg js sahf cmpsb mov pop mov push jl icebp mov cmp add enter lcall sub dec dec fldenv (bad) jmp movsl test and jne mov movsl push add fidivr lock cmp fsub insb inc or aad push xor addr16 das daa mov aaa sbb jo in data16 pop mov addr16 adc mov mov out mov push ja pop in std mov cmp mov outsb out xor or jns push imul jbe mov xor mov pop mov js mov mov jmp and sbb movsb cld out rolb fimull or sub jnp imul (bad) pop adc mov mov xor xor lret lods xchg test cmc scas mov sub sbb mov test inc jmp dec das repz out xchg add lock stos add cmc jns push sub pushf cltd mov cwtl sub xor cli xor shr movb addl push push dec jmp mov dec xchg cmp (bad) in (bad) movsl or stos or xlat mov and imul xchg iret (bad) loop cltd mov cmc mov mov add (bad) lret ret adc or push add jnp in test pop fsubl pop jge push push lret fwait mov pop xlat leave cltd mov xlat mov mov lds cwtl mov fsts rol inc mov fcoml cltd mov cmp and xchg fsubrl mov rorl dec imul ss dec rolb movsl mov mov arpl jb xor hlt pop mov jg dec lret cmp out add fdivl mov cmp sbb dec sbb cltd imul jbe stos adc mov mov dec pop jno shrb (bad) ss push mov fdivs mov mov into jp mov rolb mov sub and jo adc sub and into imul mov loopne int3 mov mov cmp push rcll jp into xchg push loop out add push popf sub mov ljmp adc je mov pop jo imul cmpsb mov mov (bad) push sbb cmp cmpsl mov repz stc jno shl mov arpl adc jmp push fs mov sub cltd test cmpsb mov sub sbb push loopne jo dec arpl gs loope xchg pop xchg arpl add push out mov mov fsub and jle sbb stos inc xor sbb mov push push fnstsw xor (bad) cmpsb outsb lods mov enter cmpsl adc inc adc sub mov jecxz mov mov jno pop and sub cmc jmp sub and cmpsb jl sbb lods add mov mov ret push sub (bad) lret sbb std pop mov mov fiadd inc (bad) pushf mov mov sbb or mov sbb jecxz push pop icebp (bad) cmp aam and push mov mov frstor add rclb xor mov add mov arpl adc roll push jb pop mov les lock (bad) adc lods fstpl xor fwait mov mov add out jbe xchg pop out rorb arpl das rcrl popa sbb jl add dec out test fld pusha loop iret in mov jmp aad (bad) cmp xor sbb mov stc mov bound iret shlb adc in and pop fnop fsts cmpsl dec sub inc jnp imul les imul rclb jns lahf pop add cltd insl jmp lret mov dec mov movsb into inc in ss lods fsubl mov xor jl or dec popf mov add adc lock push jge cmc loop rcrb mov or sbb adc cmpl or insl in fs stos icebp cmp jnp out pop out push cmc loope mov int3 mov popa jo in imul lret and sub jns lret outsb xor mov cmc mov mov enter sub rorl push ds mov pop mulb sub mov rorl cmp roll movsl jecxz das and out xchg push xor mov inc add mov xchg mov adc mov rclb add mov call xchg mov cltd pop mov icebp sub addr16 repz adc jmp pop negl rorb xchg dec fwait xor xchg cmp lods stos loop adc push lods cmpsl scas repz scas and pop jp inc fwait jns mov sbbl mov scas cmpsl push pop jbe pop leave cltd mov roll inc and or pop sub jae jnp add or pop out (bad) xchg aaa (bad) loopne and inc ss dec add mov mov cmpsb pop lock dec int3 popf cmp push outsl jmp mov dec js lods fstpl es rep jae xchg movmskps (bad) push lds aam int and cmpsl mov push ss loopne push push add adc push mov in (bad) xor dec inc cmp lods adc dec pushf (bad) xchg mov dec dec div cmpb aas outsb stc es mov outsb mov dec shl shr or in cmp push sbb insl pop and hlt sub repnz ret mov dec andl pop fcomp mov sbb andb push ret cli orb jns cmc into adc out lcall les lea jne les sbb jecxz sbb pushf test inc sahf pop push push mov int3 mov push in lahf push roll daa sbb int3 mov and mov inc gs loope test shll arpl inc js and in repnz dec xchg imul xchg add sub out bound and mov (bad) shr fldenv add aas cmp (bad) pusha mov add stos dec in xrelease xor push inc (bad) loopne and pop out and sub imul repnz data16 sbbl outsl out dec jg add xchg cmc xchg xchg adc xchg fldl dec inc test pop fiadd imull xchg cmpsl aam mov rep movsb (bad) jmp pop fistp mov sahf ffreep mov (bad) dec mov adc pusha jg fs sbb mov xor andl sub or pop pusha testb das std xchg cltd (bad) mov xchg mov loopne imul inc fcompl imul data16 adc leave punpcklwd add mov push bound aad fldl mov (bad) cmp push sti push fstpl pop js testb dec arpl cmpsb int3 add addr16 jae push add xchg mov int3 inc pop into stos movsl mov jb xor sub pop mov inc mov cmp xchg gs mov scas inc inc or sub sahf repz ret dec test mov add leave mov rcll insl loop mov not jg add push jno test lods (bad) daa pop sub pop andb shl clc repnz or fidivrl sub in rolb shrb inc (bad) mov cltd pushf mov iret and or scas movsb xchg repnz push dec cld push into fisubr in jno lock loop scas lcall fsubrp enter out pop inc mov ljmp mov sarl cmpsl data16 aam mov enter aas xor lcall insb add aad push add ss jbe pop mov in pop lahf xlat mov arpl in (bad) inc int mov fcompl add (bad) mov pop mov cltd mov mov xor mov lea leave lods cmc icebp or movsl mov or cmp fcoml lahf sub rorl mov (bad) mov data16 jo sbb cmc bound push push dec sbb adc push pop push cmp pop enter inc push cld mulb in jb cmpsb add inc pop mov scas rcr outsl sub xchg (bad) in mov in outsb lahf pop stos fild icebp or dec in addr16 std cltd sbb (bad) (bad) insb call das xchg loope scas lods cltd gs inc or mov test mov xor cmpsl outsb sti cmc pop cwtl xlat shrl cmp aad mov (bad) xor mov ds sub and and (bad) and and negl push aam mov add xchg gs loop leave imul cld mov syscall push mov (bad) call popa aam mov mov pop shrb (bad) fidivrl insl out ja xor xor std or jno mov (bad) out in cltd xor lods cmpsb cld jae or inc popf (bad) sub jl sub sbb mov mov or jbe lret mov imul pop mov mov mov pushf inc sub adc movsl cwtl xchg in push dec mov mov cmpsb mov cmpsb ret adc cmp test sub (bad) jl pop imul add xchg mov test lret push sub test icebp movsl sahf add dec call rcl mov mov rolb movsl or xor sub fnstsw mov sbb mov movsl add (bad) data16 or sti ret and xor enter or cmp jns movsl fldt mov test xchg lods lods or inc xlat mov movsl push cltd adc mov mov clc lret mov rolb out (bad) xor cmpsl loope jne mov test fsubl or jp push cmpl pushf jecxz lock ljmp push xlat jp addr16 jge aam mov aas adc mov les mov mov lock add xor xlat rcll imul es inc or test and mov aad in mov xchg add loop xchg cltd push clc test pop push pop das and rorl jo sub inc jmp repz (bad) mov test cltd loope sub mov jge jp jnp or ja jbe pushf jns in mov sub mov mov jecxz mov xchg mov dec adc out and lods xchg mov fwait add imul mov aas adc pop pop push pop jne std xor (bad) out mov dec insl mov aam rolb mov or mov or sbb cmovno mov push (bad) and mov mull cmpsb es xor xchg test cmp scas mov cmp dec add (bad) mov loopne movsl lods (bad) sbb pop call mov lret inc push aas ret push clc push mov xor rcrl cmp cld sub adc movsl hlt adc aaa in cltd mov out push push insl es dec in add lock mov sbb sbb xor sbb jmp stc cwtl jns mov out cmp test sbb aas imul push scas stc push jg pop push call push sub add out xchg cwtl mov lock cmpsb (bad) cmovb pop std loop test or int adc cltd cmp pushw mov sub xor add add stos cmpsl jno xor repnz (bad) fcoms insb mov mov jge mov dec mov sub cltd and jo daa hlt ljmp mov stc outsl pop cmpb cs inc lea call add fistpl icebp fidivr pop pop adc les les dec jg dec cltd mov add xor xchg loopne jnp mov fldl sbb imul sbb cltd lcall iret movsl lods cmpsl subb mov mov pusha ret gs push xlat addl loope mov and cmovg in pop pop cli jb cmc cld iret lods (bad) hlt movsl add or bound xchg repz xlat movsl xchg mov mov in sub jecxz xchg iret sbb gs (bad) notb lock pop lcall hlt jp pop and cmp adc cmpsb in or inc imul cmova xchg and lods nop out inc push sub fwait cwtl aas fisub out lock adc lods in mov aam xor mov leave sub outsb in xlat mov xor ja aas jnp mov push sbb inc inc mov addr16 dec mov mov inc insb add pop movsl xchg add addr16 and push jecxz ret dec or and sbb push mov fdiv cmp lock shlb cmpsl rclb ss inc out mov mov mov pop push pop adc mov hlt dec pop loope daa xor jg jecxz iret mov and and adc (bad) rcll sub cmpsl daa (bad) xchg mov ja mov cmp aam sub pusha mov sub loop mov add push cmp aas test jmp dec or xchg mov cwtl mov loop cmp popa mov pop test mov bound mov lahf lds sbb pushf mov hlt cs mov test and adc jb push push shll sbb mov jo dec aas mov push pop clc push aas cmp mov jne xchg xchg pop sbb cmp push in push fidivl jb push (bad) jle inc adc lahf das fsubrl pop mov movsb test cmpsb (bad) mov add mov loope shrb adc dec arpl and or ret jecxz add pop jo nop in mov add xor fistpl (bad) imull cmpsl aad xchg movsb sbb inc or mov add push (bad) jns mov dec or mov ret mov shrb movsb jecxz mov icebp mov insl cltd in insb jecxz fs sub xor mov leave mov jge (bad) xchg mov mov pop xor (bad) repnz cltd xlat (bad) stc or inc ret mov push jecxz scas pop dec iret mov push movsl or adc arpl add leave pop inc (bad) loope sub sub cmpl xchg or cmpsb adcl inc ret jmp xchg xchg (bad) adc (bad) (bad) call sbb inc out cltd xor aad and lret cmp mov cmpsb fnstenvs (bad) cmp add pop inc stos jmp jno loop (bad) imulb xor cmp sub out into test repnz fidivr leave imul fcoml loope inc dec mov test or jl (bad) movsl shrb daa push lahf fsubs stc pop xchg sbb subl jmp ret xor pop and xchg es sub imul fs nop fld test daa (bad) lret pop xor sbb inc bound mov cmp jecxz out sub sub mov cmp add dec xchg (bad) and mov stc pop lea iret aaa cltd pop jl or cmc adc mov adc nop lds pop push popa rorb (bad) insb fdivrs xchg lods insl in mov out mov rcrb pusha outsb out addr16 cmc mov mov or add xlat mov (bad) iret mov mov xchg (bad) xlat sub mov das mov add lods loope jl mov add cltd mov loop imul (bad) pop imul clc sbb (bad) jo leave pop mov out cltd jle or cmpsb mov mov (bad) xchg enter dec dec leave cwtl scas mov pop (bad) (bad) mov jo fildll mov fcoml adc test jp in inc lods cltd jae (bad) (bad) xchg fcomi jb repnz stos movsl xchg mov fistpll in loopne out lcall repnz fucomi mov divb jl or dec lock xchg cltd (bad) leave loope fsubr mov xchg sbb dec mov dec mov call iret mov rcrb inc mov popa adc sbb cltd vunpckhps mov int sub pop aas xor mov (bad) sahf outsl loop xchg in mov inc sbb cli sahf jmp xlat lcall out mov and push xor mov adc lods mov mov jnp mov shl insb mov in arpl pusha lods mov frstor sbb sbb mov stc jns lods andb mov lret das sub inc jg lods push add lret call pop cltd popa in mov mov (bad) adc inc mov cmp cmpl fcompl inc mov push xchg call stos fidivrl pop mov cmp mov jns popl mov jnp push jge lahf sub rorb mov shll dec push mov loope mov push add mov adc fsubs pop rorb inc jo sub mov icebp pop clc jecxz cltd stos test push sub push rcll imul popf mov arpl insl mov (bad) cwtl test in lods pop or push loope and sub out (bad) mov mov or aas (bad) jns mov negb insl test xor push scas movsb das jo and cwtd jnp fisubl xor rclb xor in out sub fsubl cmp aam cmpsl lret cltd ljmp xlat xor mov or mov push adc xchg mov insb and aas pop mov jge test jmp cltd mov dec inc cmp and mov test out add jns dec or pop mov push loope loopne movsl outsl arpl inc aam inc adc mov cmp cmpsb pop push iret adc mov into adc je ljmp rolb push mov xchg jno push add arpl pop push fldenv js sub gs scas mov pop sbb pop fwait adc mov xlat sub lea add movsl mov in cmp xchg xor sbb mov cltd dec out adc push xor in add mov into cmpl aas and mov mov or jae cmp test xchg sahf repz cmpsb mov adc cmp inc enter or push push fcomps stc mov xchg adc fwait aad adc loop je fidivrl js into xor mov cmp jb mov sbb in loop fwait in fcmovnu mov or roll jp adc cmp imul cmpl jns pop cli mov mov dec inc adc mov iret lcall sub push sti sub xchg and cmp xchg mov daa xchg xor cmp xchg cmp cli clc xor mov (bad) mov les movsb jne fnsave mov cmpsl sub bound inc lods inc lods aad mov ret mov aad into sub ljmp mov addr16 push mov xchg cmp outsb mov cwtl movsl dec cltd cmpsb shll push mov cltd adc in fs sub push pop mov mov fs or xchg mov movsb lds addr16 push mov pop movsl mov movsb sbb in push push add paddusw mov sbb dec lods and mov mov dec inc mov sub popf push cmp mov xlat ljmp mov scas mov mov xchg mov les xor mov or push aam xchg adc ret mov pop jae add inc and ja push xor cmpsb fdiv fs add and pop loope cltd das mov mov in inc inc sub push aas mov fnsave aad mov jo xor mov or push pop stc lds lcall xor cltd mov and dec (bad) sub sub cmp mov subb imul mov loope (bad) lea fprem1 xchg int pop shll jnp jecxz loopnew mov pop dec adc or pop test pop movsb and fcompl cli mov mov and scas in les imul dec in repz mov and (bad) stc hlt pop xlat shll sub mov push fsubrp push add xorb mov (bad) int shrl pop int3 xor jb int std inc iret scas inc cmpsl mov mov mov rorl mov xchg (bad) pop sub fwait push ds add cmp mov loope xor xchg and push dec push test ficoml fcoml test out pop xor sti pop pop mov popa push mov jne bound mov dec sarb mov in test xchg mov sbb mov cmpsb insl stos dec mov and ljmp sbb inc jl inc and xchg jp xchg xchg es mov mov jne mov xlat mov mov lahf jns push and push xchg aaa ret imul pop clc dec mov cli jge mov sbb or jg fwait xlat in mov fdivl aam add push push mov xor fdivrl xchg pop mov jecxz push out test and aad repz sahf and pop stos mov outsl movsb (bad) les jl jno mov inc scas or mov inc insl push dec icebp movsb pop adc cltd xor (bad) jp (bad) shlb (bad) and push insl in xor mov mov js mov rcrb ljmp mov pop icebp and (bad) jg rcl mov addl in jno rcr jbe adc mov in mov fisubrl aas movsl xor and xorl cwtl jge jno imul xchg pop cmp mov test or jle (bad) loop mov pop cli pushf arpl rclb sub jle adc adc or xor negl push test repz add add pop insl in or pop xchg ret pop clc jo xor adc and xlat jnp xor test mov mov loope (bad) push sub jmpw mov adc mov (bad) aad xchg mov xchg mov mov xchg mov ljmp pop sub push jbe (bad) in fimull mov es je lods test pop cmp mov sbb mov mov scas movsb jns dec loop imul mov ret xchg or mov shlb loope mov fadds cltd push daa gs xchg mov mulb loop xchg xchg movsb stos aaa and xor js out popa loope mov clc dec int3 mov push sti jecxz call mov mov scas mov sub mov jmp lahf ja mov shrb stc push add andl xor cmp pop loope mov mov and std cld or mov mov mov jp out out push pop cld pop ss inc cwtl shll pop fild inc leave in insl pop sbbl sbbl bound lock mov jmp lret aas xchg xor and popa sti cmpsb or inc push mov mov sbb repnz pop xor pusha test int dec stc jl andl mov lahf (bad) shrl arpl sub xor insl pop mov data16 into mov jbe (bad) and add icebp mov (bad) (bad) mov and call lock xchg sbb loop mov iret push mov stos mov popa aam scas rclb (bad) jbe scas inc in (bad) and pushf xchg push enter pop xchg push xchg add (bad) cltd and pop les pop lret cmp push in inc out inc cmp scas lcall mov call jp fldt push lea enter dec and arpl setp push push bound xor fimull mov out inc sti adc pusha (bad) (bad) and notl dec mov xchg push icebp popa mov mov dec mov sub mov test xchg mov imul mov test icebp out pop jmp out xor mov jo cmp imul popa loope jno xchg test adc mov pop mov lods and mov xor mov jl xlat adc mov mov frstor dec stc stos inc int dec add in xor mov pushf sbb dec sti jecxz mov adc ror stos je or inc or fs shl pop mov sub enter mov jmp nop push mov jno mov scas fwait cs sbb mov xor leave mov fs sti pushf xchg mov imul or mov sahf adc ret lret mov xchg fdivs push rcr jne dec inc (bad) repz xor call ficom inc popf xchg push xchg or pop mull xor cs out jnp (bad) imul mov mov push sbb inc dec bound pop cmp add jae mov cli (bad) push movsl arpl cmp or pop bound mov mov imul mov inc js or mov push std and scas gs arpl dec inc test mov push (bad) inc (bad) mov push shll mov hlt (bad) xchg in lret pop add dec pop ljmp dec insb or mov cmpsb jnp bound mov pop rcrl je movsl (bad) shll xorl das pop dec out insb in or daa movsl outsl out rorl das mov mov iret dec xchg push xor mov mov fcompl in (bad) mov mov xor mov cmp aas cmp repz adc mov sub or adc bound cltd movsb add push mov and lret xor pop mov fsubrs int push lahf inc imul into mov jmp popf pushf das and jle ficom cmp mov pushf sub xchg dec aam orl sub xchg mov adc lcall add mov sahf mov xor cmp (bad) hlt rcl adc jae imul jecxz xchg subb push aam jnp pop xchg adc (bad) push sub cmpsb cmp xor cmp xchg and mov fstps lcall sbb pusha jp adc sbb mov into mov dec xchg in mov (bad) fdivrl loopne or push jae loop mov adc out push testl ss addr16 jg cltd xchg adcb and mov mov fdivs mov std jo xchg cmp lahf mov insl loopne mov fistpll cmc aam ret mov mov and enter and pushl mov aaa or icebp inc mov and jo push xor dec mov mov xchg add aaa test cmp cwtl mov mov insl out inc out sahf mov jae mov inc inc syscall rclb cmp mov out mov inc shlb mov and xchg mov pusha or loope lock push and xor mov inc rol cli mov jmp push addr16 push cltd mov shlb sub push jb imul lret mov pop sbb xor push imul mov clc pop dec sbb push std mov push (bad) add lock dec outsl flds cmpsl outsb js mov and or andl mov mov pusha adc pop push adc es insl out jo popa dec loopne adc pop aas sbb xor jb in movsb inc adc hlt push scas clc movsb push loope movsb mov fs mov fucomi arpl rcrb and cmp orl add jmp or and push mov inc out fdivs inc sbb (bad) icebp xchg sti and mov pop std mov push sbb mov pop jnp stos xchg pop mov mov lret push jne and leave mov mov sbb push in sbbl movsl xchg sub and xor cmp addr16 fildl pop jmp mov lret and popa mov aam adc test inc inc lods cmpsb mov cmpsb into xchg loope mov aad leave int3 jo xchg ds xchg mov inc fs insb push cmp and inc mov mov imul sub popf mov sub mov (bad) cli in mov into jecxz xor sahf mov iret in mov adc xor adc lret mov push add push (bad) mov xchg or or mov cmp dec test idivb cltd xchg cmp jns add ficompl push inc mov inc or scas sbb mov mov adc mov lds out data16 pop lock lcall pushl and lds xor ss imul mov mov xchg mulb mov fisttpl jmp idivb lcall daa push loopne subps push jle fidivr jbe mov xchg imul mov cmc and mov arpl pop dec mov sahf cmp jecxz mov xorl dec fisub int loope xchg ret adc shll mov rorl pusha mov dec sarl leave shll rcrb cmpsb cmpsb xor pop mov inc add inc cmp push mulb popf leave xchg ljmp lock fcmovnbe cmpsb pop fcoms mov out cmp mov push js jns mov cmc inc imul mov xlat imul cwtl popa fldenv xchg pop xchg cmp ja push jge shl jmp jns or sub sbb push mov call es or inc dec repnz jb mov mov bound adc std pop lahf mov stc ljmp mov or faddl insl inc pop incb push sbb mov jo mov push jg es test div mov and sub gs sahf mov cltd rcrb divb ret mov jnp cltd push inc sti mov loop mov loope cltd lret out jecxz das mov xor lret mov sub addb js mov mov popl or lahf or je (bad) loope (bad) shr adc imul sub xor mov out outsl out js push pop xchg add cmp out pop xchg push jl cmpsl cmp lods pop testb or mov test jl add mov and loop iret xchg or adc mov sar cmpsb jl loopne inc or pop mov mov fild test and cwtl or fild dec hlt add dec in pop imul gs sbb push cmp in std ret test movsl cmp xor jg lock pop repnz xchg push loop mov fistp xchg xlat call xchg daa inc fsubrs test (bad) lods sti fist jo rorb dec aas out sub daa js dec leave gs stos push pop push rcll scas mov (bad) jbe xchg and push push inc sbb and add dec cmp loop mov lret jns jne mov rol push daa jae inc pop (bad) inc xchg stc popa popa mov mov enter pop jns orl cmpsw (bad) out jns pop bound cltd xor or roll mov into bound and lds movsl arpl pop adc cltd out and pop les in dec cmpsb jns inc (bad) aad xchg orl sbb sti aaa jecxz (bad) jle and and mov sub xchg or outsb cltd adc ret loopne cwtl (bad) call mov (bad) js add jne cmp rol (bad) cmpsb cmp adc shll test inc loope mov jns into dec or gs adc cmp push lods bound inc xchg dec mov cmpl mov pop test pop xor pushf aaa dec mov mov loope les rol test dec movsl push dec orl int mov push inc ljmp mov stc out jp movsl jg mov jl popf hlt mov dec out lock jbe in adc xchg popa test cmp mov mov aam jmp cmpsl push push jp (bad) je mov pushw sub add dec (bad) cmc mov add inc mov clc sub jge pop std lods mov lret cmp and pop mul push jns inc cmp dec stos xorl mov sahf and or dec jne pop and loope mov ret xchg (bad) std fcompl daa inc push dec sahf cmp andl pop dec cwtl add outsb mov xor in aam jmp sub add arpl cs or test loop mov lods daa xchg mov sbb (bad) bound sub xlat bound inc cmp icebp (bad) ffree sub sbb fstps adc inc fistpll adc fidivl pop lcall mov mov push ds or mov inc jns add dec push insl roll inc into mov loopne out jmp mov out roll scas inc fs mov cmp loope mov mov pushf xchg xchg push and mov es sbb ss mov xor ja mov (bad) out mov test and mov movsl push add int3 imul xchg popf fidivr xor arpl test lret out in jp shlb mov stos mov push iret nop les sbb inc ret mov inc (bad) aaa cltd dec jmp push (bad) sub push and test fucomp dec out mov cmp xchg and mov pusha (bad) or popf movsb fistp in lcall mov gs hlt jns push pushl mov cmpsl pop cltd loopne outsb arpl add imul and adc and jl adc sub mov xchg mov fnstsw movsl movsb loopne imul daa or (bad) int adcl mov add rol xchg repnz imul xor xchg lea popf cmc arpl in xor mov adc cmp jnp sub and push pop add xor or fdivrl aaa pop repnz cmc (bad) jg xor pushf xchg lods mov imul cltd in mov mov and jno fnstenv jns repz ss xor inc jmp dec ljmp hlt mov or sub pushf insl jne lea repnz stos mov sbb enter mov xchg cld (bad) jmp lret cmp push std repz pop cli mov mov ret add int3 test mov pop pushf repz roll mov xchg hlt pop cmp sub loope and cmpsl fnsave xchg and adc sahf push inc cmp daa cltd adc movsb pop cld inc adc dec fdivl scas dec movsl cmp lods jns inc xor cmpsb xor stos pusha mov mov repnz insb insl and loopne mov movsb mov jmp (bad) jo popa mov scas xor mov aam adc push lret sub cmp xchg mov rclb mov xor adc sbb xchg or loope int nop pop dec clc aam scas cmpsl rorl insl in dec sub mov mov mov mov (bad) adc and scas je lds sub xor pop mov mov scas movsb pop stos into mov insb mov inc mov out xchg mov mov push ja stos les push out fdivp mov movsb int xor mov loope cmpsl pop mov les sub shr int rcr repnz pop xchg shrb mov hlt cmpsl aad sbb js or mov (bad) daa xor jbe pop aad pop xor mov mov inc pop add (bad) and add dec shrb inc mov mov mov enter sub push cmpsb loope adc mov fs pop or aaa (bad) js and mov imul (bad) sti cmpsl jg out jns out jle and es adc jmp loopne cmp mov sub movsl fistpll fucomp xor xchg sbb mov pop jl inc hlt pop cmpsl loopne mov pop dec mov rorb xchg xchg int lret pop loop mov inc (bad) lret divb sbb mov (bad) stc pop mov mov mov push mov scas scas xchg test ds arpl pop push es cmp cmp mov out dec xchg rolb aaa cmp adc aam mov lods insl jecxz mov inc or arpl add js sub pop dec (bad) sub sti adc push pusha inc js mov mov and sub icebp mov scas mov ret jecxz cltd mov fwait int movsb mov xchg movsl aam or jp mov cmp mov iret mov cwtl fdivp cmp jecxz and movsb insl cmp jmp aaa sbb dec mov inc (bad) xorl pop shl add lock cmpsb or cltd mov movsb rcl cli adc movsl (bad) ja push stc jno and sub inc xchg mov push xchg fwait mov mov fistl sub fdivp sbb mov das movsl and and rcl ret jmp mov lea cltd push int dec sbb jo add fwait shrl jns test cltd stos ljmp mov in mov lods je mov fcmovnbe xchg jae fucomip arpl push lea add add jmp pusha in mov jnp mov mov jmp cmpsb mov add lea pop hlt dec test mov mov pop or mov rorl es and fiadd sti xchg mov pop (bad) je ret sub mov mov mulb inc out cmp inc aas push mov arpl sbb mov cs cli mov or xchg or ja xchg dec xor jae fist pop sarb adc push fstpt data16 dec push movsl inc jbe (bad) call jmp mov jecxz xchg and rorl in jns lods xor fldl2t mov pop aas add in cltd mov and pushf adc jns enter mov xor and xor clc and pop and fs addr16 or jns nop jbe push sub mov push mov mov sahf scas sub in imul je xchg mov mov test test xchg sub (bad) pop cltd les and xchg push pop mov adc mov insb loop lcall mov sub jae icebp inc adc push (bad) fidivrl push sub pop push xor pusha ret mov mov fdivrs es xchg or jle pop dec add fs ljmp leave dec das or mov js adc cltd sub imul mov jnp outsl js pusha push xchg gs and lret mov inc aam sub xchg outsb daa das fistpl sarl pusha loopne rol mov rcrl data16 pop loop (bad) cld dec and insb xchg out sub imul insb mov sbb mov addb adc xor dec cmp addl adc inc push stc push add lret push dec mov lock mov push push cmpsb out hlt pop js lcall cmpsb adc push push fbstp out add movsl pop in mov mov jnp aaa cmc lock sbb scas sub (bad) xchg mov cmp es leave call sub outsl jle imul nop lods xor cmp xlat test loope ret push sub mov inc cmpsl mov mov lcall imul in imul f2xm1 inc into xor dec jle pop xchg inc cltd cmp mov std inc call jp mov mov push push inc adc lds arpl nop xchg add popf jle jge add js cltd mov mul aad inc and ret sbb mov cmc jmp inc mull mov scas imul js stos icebp pop andl pop data16 push inc cmp add jecxz jmp mov jmp lods add xchg mov mov scas jne mov push nop les ss fwait mov stos mov mov fsubl out fist dec adcl cmp (bad) lahf mov int3 mov jp scas out sub popf jg aas jb and lods in sar ret jp ja fisub xor xchg lahf mov push pop xchg mov es in mov pop mov adc movsb aad mov jmp (bad) cmpsl enter xlat test fwait or je xchg mov mov push jnp xlat xchg mov xchg xchg lds mov adc aam cmp mov fstps cmpsb mov mov in loope xchg pop add js mov mov adc leave cmp sub fistl out jnp clc push mov mov cmpb andl dec cmpsl stos scas adc pop sbb je fnstenv mov roll frstor nop cmp xchg fldt cmpsl jl add sub push mull inc jp add cmp adc mov std cld div mov movsb mov pushf pop repnz cmpsl into sbb bound bound ds (bad) rcrl aas pop addr16 and testl (bad) adc jmp outsb dec ret lahf movsl add movsb lcall push xchg sub das jge add mov ja cmp mov scas in jno xchg cmp and shlb (bad) adc and mov ret xchg jnp sub gs cmp or sahf sub dec mov xlat jge lcall cmp inc jbe mov bound jl and adc inc mov and and add fnstcw mov add popf cmpsb add es cld out cmc xor pop (bad) repz jl xchg cmp pop insl push cs shlb inc sahf mov push cmp jge mov addl or add or arpl aad adc dec jns test inc dec mov jns inc clc aad fbld cmpsb ljmp cmp mov (bad) fisttpll mov imul mov pop stos movsb sbb pop daa and popa cld mov jno in orl jle jbe and mov pop inc inc sub jmp in mov mov loop xor ja mov dec mov xchg pop jne pop jns jne mov adc xor mov jecxz dec fldcw daa outsb aam dec inc pop sti mov jmp cmp fnsave sahf add loop lds stos test scas imul push and dec int3 mov test mov or clc in mov lds mov aas cli mov mov xor jno (bad) outsl js xchg mov movsl or (bad) mov mov outsb xchg insb mov push int3 ss cltd sub sbb push lea pop iret movsl ja mov cmpsl mov mov push push fldenv dec xor loope jmp scas mov mov aam jo mov rcll mov (bad) jecxz xchg leave pop lods in mov pushf mov dec mov unpcklps pop mov add jnp mov outsl jno mov adc mov dec or or fdivl pop push add mov jecxz mov push movsl push in outsl int add dec fisttp test mov sub ljmp lods add push test jno lret and cmp mov outsb cmp lcall jge icebp sub sbb xchg in mov and andl leave mov mov cld pop push mov and add mov sub push int stos cmpsl xchg xchg jb icebp push call dec mov dec push xchg sub fistl inc adc pop xor cmp test and add xchg and adc fidivl pop pop xlat insb dec popf fucomi hlt add pop cmp mov push lea (bad) fdiv xchg mov imul push dec js addl (bad) mov sub jnp push xchg jno inc lcall sub ds pop out lahf adc cmc pop out push add pusha cmpsb fnop bound mov dec addr16 mov lds testl xchg (bad) les addr16 push cmpsb cld xchg cwtl dec aaa mov dec pusha inc mov ret add inc mov push dec (bad) sub inc lret cmc xchg inc call leave lahf push (bad) sub mov xchg sub loop dec sbb sti xchg (bad) lock inc inc test shrb push clc jecxz in jp daa bound jo dec test xchg sub push cmp mov out xor les sarl adc stos ficoml fisttpll movsl xor and or and in mov pop repnz bound out stos roll call scas shr mov pop xor orl arpl roll insb ret stc (bad) hlt push mov std xor call rolb leave jo push lret pop adc lahf (bad) mov insl sub push and js and lret (bad) fnstenv imul mulb fsubr pop repz lea or cltd mov jg mov daa out lea test push call mov or cwtl adc out inc bound inc mov jbe int3 test dec cld mov imul mov movsb lock mov aas adc xchg adc inc js push add push sub ds je js lret cmpsb lahf sub orl dec mov stos mov les adc xchg in mov mov test (bad) add (bad) stc or pop xchg repnz jg sub hlt lds mov pop movsl adc adc leave cltd mov rorb hlt sub andb insb out pop pop cmp loop and fwait mov push pop jb and push cli xor pop pop call stos xchg mov jne in scas pushf mov mov jge test movb call nop fstl cmc pusha fist adc mov movsl fdiv push ret sub movsb in gs add mov ss adc call push mov add sub in (bad) rcl mov icebp mov or popa mov sbb push jmp gs xchg cmp ja (bad) mov or icebp aam mov adc pop mov mov mov pop mov or dec mov inc scas jns cmp cmp mov dec pop rcll cli (bad) mov test jmp icebp in fcmove pop sub mov jnp lret frstor push xchg lds sbb or in in das dec jecxz xor fnstenv jl loope mov std push mov subl lret mov in mov pop push mov inc cmpsl test mov (bad) lret addr16 (bad) mov loope js jb jl inc call cmpsl stos int inc sbb test adc bound cltd and inc push (bad) push movsl fs pop pop loope cltd push inc mov and fisub lahf daa mov in mov mov and test fidivrl pop and push cld ret adc repz lods mov (bad) (bad) pop and cltd cwtl leave (bad) fisttp sub fnsave mov les adc fldenv out add mov out push out fist in mov mov push add daa sahf scas ret fidivr gs sub enter flds pop jp arpl mov ss movsb in mov int insb mov push stc pop cmpsl std push mov jo cmp push fwait jno sbb popf aam push mov mov movsl cmpsl sub cmpsb mov jl and sub jmp lret mov inc mov mov mov rolb add sbb inc and xor loopne cmp xlat jge mov inc mov mov leave or movsl out cmc mov imul roll dec roll adc (bad) outsl out sub fwait jle std xchg inc bound gs sahf mov adc les mov rclb (bad) dec leave subl jae test dec fisubl into dec iret add inc mov sbb jp leave popf scas fcoml sahf addl movsl fwait pop (bad) lahf xor hlt inc in cmpsl popa sbb dec mov and pop sbb repz data16 inc mov jb sbb cli jbe popa lea add cmp aas and shrl mov sahf dec pusha jecxz insb sub outsl les lock cmpsb dec push (bad) lods pushf add inc nop or out (bad) pop adc jle ror pop pop aad fnsave mov (bad) loope bound jo push xchg cmc sbb xor (bad) mov pop fsts fimull jb daa jl mov add xor test out sbb xchg xchg xchg sarl pop (bad) xor add jae shl daa xor aam (bad) (bad) xchg pusha int das icebp test xchg int jge mov cmp imul xchg fisubrl dec int mov sub dec or popf rolb test jb mull (bad) lcall in insl sub sbb sub cmc xchg inc das movsb and test imul push loope sahf ljmp imul mov adc cmp cli sarl dec and pop push add cmpsb icebp push outsl dec popf adc jo mov xchg (bad) ds imul mov cmpsl adc popf test pop mov add push in jecxz sub pushf lock lods out pusha lds rclb mov scas into cmpsb mov enter mov and adc aas xor lods loope or or (bad) cmc pop xchg xchg cli mov shrl notl pop xor popf aaa scas and add mov mov data16 aas popa fnstsw mov pusha jmp (bad) (bad) sti xor test mov inc pop dec int xchg inc fcomip mov inc pop call sti xchg adc inc and pusha adc mov xchg mov dec mov mov mov bound cs xchg pushl les popa and mov ljmp push mov mov xor inc repz dec add shlb in loop mov xor test and andl adc xor xchg pop sub lcall jle jno sbb cli pop cmp loop and addb hlt movsb cs sub hlt les addr16 xor lcall mov sbb in outsb fs sub (bad) fistp (bad) sub outsl out rolb adc cmp pop std jne inc popf sub test lods pmaxub clc mov and or inc sti pop hlt adc rcll popf cld and add out dec mov and inc mov inc sub mov imul add out hlt loopne add pop sub rcrl push test out adc frstor and dec sub xchg das mov dec loope loopne in dec test test imul and cmpsl pop aam mov mov movsl out les and nop or movhps cld std jo addr16 inc sub cmp sbb push jmp addl xchg jb push cmc or xlat and mov in dec xlat popl or movsl cltd push sub sub and in imul xor jns cld jnp mov repz arpl (bad) xor cld cwtl mov imul cmp call stc arpl jns test arpl xchg (bad) (bad) jecxz cmpl mov sahf lock mov xor aas push xchg lock stc clc pop rcll lods and iret cmp sub cli out sbb pop mov and dec mov mov pop jo repz fsubrl cmpsl mov es (bad) dec icebp mov repz subl dec adcl hlt mov mov call rcrb faddl mov js cmp pop aad cmp adc jb scas dec ljmp mov hlt test pop cmc mov cwtl mov xchg add jge inc loop adc or aam push imul ret adc mov stos ja cmc sub push idivl imul and gs mov add arpl mov cmpsl xchg jno mull imul mov (bad) dec add dec jne jmp fwait push cmp mov repnz jno adc inc lock mov fs scas xor sub leave (bad) xchg pop xor std pop mov mov and clc xchg adc subl lock inc inc loop (bad) xchg lock call (bad) aam lods sub mov lret imul dec xor mov pop or mov cmpsl mov push cmp or jnp (bad) inc or dec clc aad xor adc rcl (bad) adc mov (bad) fst jb (bad) mov popf js pop add inc mov lret cmp mov inc dec add in scas dec xor repz lret inc mov adc mov les test pop sbb (bad) std and cmp jmp and mov decl xchg call mov pop jno popa bound outsl lock clc sub aam inc cmpsb cli mov jnp imul sar loope lret jp fdivl sbb (bad) inc sahf add das mov icebp dec or (bad) and mov fiaddl call loopne ret xor fs jae iret ss pop add cmp lret add mov sbb mov (bad) mov enter shrb xor push cmpsl push inc bswap mov cwtl mov outsl mov sbb mov in les test jne inc daa xchg lds adc movsl mov sbb fs test sbb stos pop out push popf mov call lock imul mov lods jne fdivl icebp imul lock test psrlq movsb fldenv dec sub jbe sti hlt pop mov loope pop xor enter popf mov ror (bad) mov es add imul xchg jl push stos test in imul cld es popf fcmovnu mov jns int cwtl cmp mov and test lret aas pushw inc pop mov out cltd push sti icebp test cmpsb inc jp pop adc fbld xorb fiadd xchg add aad push xchg mov push mov sub push add clc sbb outsl loope lret imul dec mov sub enter xchg (bad) jle mov (bad) xor inc or jns test push xchg mov dec fistpl (bad) jno mov lock jne xchg test and lea repnz or popf mov mov xchg xchg push arpl out dec daa jne lock mov jnp inc ret or jge mov cmpsb sub mov iret jae insb in imul push xor lcall lods imul inc aaa (bad) jno fidivrl cli dec outsl sahf fidivl inc cli popf sub push add dec mov mov mov pop loopne or fdivp add mov cmpsb repz push incl pop push leave xlat fbld mov lock add cs pop cmc insl jge pop mov push gs inc and or jmp adc (bad) jo jns subl jge push jne jno mov and or mov jle aad daa dec jp dec add cltd rcrl aad fmull cmc loope pop aas adc cltd add mov aad (bad) mov int3 rcl dec loop cmpsl popf loope jne pop pop and rcl add xchg pop icebp fidivl cltd (bad) cli mov lods cmpsb fistp jge (bad) pushf jp pop bound lock xor pop push mov rorb shlb and fisubl or int3 in lods jecxz fldln2 xchg jb clc movb data16 aad xor fild loop imul jb adc push cmpsb jno and cmpsb dec xchg (bad) inc js dec (bad) pushf std cmpsl fsts fidivrl lcall nop mov add pcmpgtd inc addr16 rdpmc sbb popa nopl dec dec popf lea pop and (bad) ljmp out push add mov fnsave dec adc fbld in adc mov dec adc (bad) push loope mov fnsave test fsub cld jns jne mov rcrb cmp loopne xor popf insw sti (bad) in leave mov mov test push cltd push sub mov inc xor out sar mov fcompl xchg test sub mov dec sarl xor loop pop dec hlt pop js mov jae xor pop mov dec or loop in inc data16 sub adc loopne cli imulb movsb icebp jge cmpsl xchg les bound adc test out mov icebp sbb es xor fwait daa incl addr16 jl pop push enter push je clc outsb pusha fs ret jge mov pop sub adc jo cmp ja ds sub fwait inc aam stos addl (bad) xor cmp bound cmpsb or sub xchg mov incb dec push sbb jbe rcrb xchg movsl sbb xor inc into push cmpsb pop in arpl xchg (bad) je dec in pop xchg mov pop in cmpsl inc mov fidivl or (bad) xor cmp subl mov push addr16 cld or cmp inc cmpsb bound jb lds pop iret movsl push shll loop ja (bad) int arpl imul pop lcall lods add push int3 ret data16 jbe movsl icebp leave sbb hlt sub push sub outsb ljmp scas dec or lret callw aaa movsb ret loop sub xchg jl mov or or jbe nop (bad) pop mov adc mov ljmp leave hlt sbb aad je call pop mov sbbl mov mov xor xor pop jmp into mov test pop dec imull mov add mov adcl push and dec imul pop rcr loopne dec or push push mov stos ljmp mov inc mov cmp add sbb inc mov loop ss push dec out fs lret (bad) cmp push mov cmp sub lock mov sub xchg loop or or adc aam andl ret jecxz int mov cs add mov mov jmp sbb mov test jbe push mov fsub rorl jecxz daa sahf in ret push mov insb mov (bad) mov repz scas andl (bad) movsl je inc cli jns cmp sub mov out lret ret aad test mov jnp lea pop cli pop roll loope mov add xlat stos mov pusha movsl in adc cltd cmpsl mov (bad) iret sub scas push mov jl (bad) xchg les loop xor call loopne dec popf adc inc outsl mov pop cmpsl cli push xchg inc jge pushfw movsl out mov mov fadd mov push jle xor scas dec mov cld mov sbb mov iret mov outsb jmp jo fbld and mov xor cmpsb scas or dec inc adc test arpl push imul orb push xchg and insl pop mov or int es and sbb sub jp aas pop cltd mov inc adc into lea add xor mov sub mov cmpsl sub mov jmp jg add or aam sbb pop into inc xlat pushf sbb mov dec (bad) (bad) push xchg pop mov jno jns fstpl cmc inc (bad) mov push xchg lds cltd or call mov lcall sbb sahf mov fnstsw mov mov mov xor mov jl (bad) lret (bad) out mov mov pop xchg dec add dec pop mov adc ret clc ljmp mov data16 mov xchg (bad) stos mov and (bad) jns clc cmp jnp (bad) cltd mov rcll cmp push xlat pop inc xchg mov cli cmpsl jle in mov arpl pop mov das es cmp adc out aam pop dec mov mov in xor sbb clc jne fsts mov mov xchg bound pop sbb jg cmpsb icebp int jns xchg mov pop test popa mov (bad) cli out pop ljmp (bad) xchg mov push sbb roll cs push mov mov push (bad) mov imul ja in mov sbb aad pop mov pop icebp pop mov add mov mov pop fldenv sub lea mov pop adc cmp repz leave jnp cs cwtl mov inc jmp mov cmovge scas (bad) lods and adc mov xor and dec inc xor out movsl pop je pop dec jmp inc imul sbb test and sahf sti mov xor sarb sbb pop les daa (bad) cmpsb gs and mov stc sbb pop push and js les and and (bad) jno fst jle mov out mov and pop push mov out lret sbb lret mov adc inc ficomp out in xor test lahf push add mov inc iret cltd outsb loope in mov cmpsl cmp sarl jno js outsb (bad) dec add jmp cwtl mov adc cltd push add cmp jecxz jo faddl mov rolb xor add adc add pop stos jecxz imul out mov jns adc add cltd mov or cmpb xor mov adc xor pop (bad) popa jo adc mov jno out xchg sub ret xor loopne cmc mov lret xchg jge fidivrl (bad) mov mov and jbe mov mov loop add mov rorl dec pop or xchg mov mov mov out push mov ss mov and roll adc imul jns pop xor hlt das insb sub lods mov inc adc xor xchg push dec push or cs inc cmp data16 insl and outsb and aam xchg jae mov mov les stos ss push int3 aad icebp out mov imull sub cltd and int and lods (bad) push mov pop or int ds ja push pop jle and shl imul and or jno lods mov and icebp imul imul rcll xor fwait dec das outsl mov mov stc and sbb repz mov add pushf sbb dec jmp add (bad) sub sub imul test xchg shr leave mov in dec mov bound and xor ljmp mov aaa dec inc mov popf lods fdivrl push mov mov xchg daa add insl popf xchg pushf jne xchg mov mov js (bad) mov lcall add add frstor sub mov cli bound mov or jne imul insb sub jo movsl lret ss ret call and movsl add jmp pusha mov xor xchg push cmp hlt add adc add (bad) scas sbb cmc push popf xor or cmpsb mov xlat out cltd lahf xchg out inc mov adc rorb insb outsl push sub cmpsl ret push andb stc xor sub sahf cltd mov add mov nop mov fcomp xorl call mov pop mov clc pop mov inc mov or xlat scas js cs inc popf std mov cmp push or (bad) xor cwtl mov fxch jne cmc out out jb cmc shll cltd loop ds and pop pop lds mov aaa inc mov call test jl inc mov push mov ljmp mov cmp push into mov and pop imul mov mov cmp xlat adc movsl je jo cltd imul and or dec lods push fucomi test fwait les mov (bad) in pusha mov fstps cld push dec push arpl repz xor inc mov imul fild adc mov daa xor imul mov xchg jle push fs insb mov nop (bad) mov lret push cltd fld test sbb inc mov aad or mov add mov int3 sti cmp ds iret and push insb or movsb enter sti pop push (bad) fstpl dec inc mov mov push and bound call popa out or sbb adc sbb icebp push movl (bad) xlat jne adc loop xorl pop stc loopne bound mov arpl jns daa popf leave imul rorl xchg scas mov test inc sub sub push inc hlt mov and and sbb stos stc cmp cltd lret sub (bad) xor nop cltd pop insl js loop (bad) test rolb lds lret repz fistpll mull test mov in dec xchg cmc or divl push push push std cli push cltd inc push mov lock imul jl daa enter jb daa das icebp push mov push pop out pusha loopne in push xchg leave xchg cld lret add jbe fwait push jnp cli push mov adc mov inc aas (bad) push int scas or lods and mov imul mov iret mov insl xchg mov fstpl inc or pop xlat adc ret cmpsb negb or jae nop stos cmpsb mov pop mov mov mov loope imul imul repnz inc adc in jb lods push shll in pop or pop push bound xchg mov pusha mov mov (bad) (bad) ja add inc sub cltd rolb int dec add lods in inc and mov jbe dec cmp and push ja out adc and sbbl and in jne out aam dec or (bad) mov mov mov in outsl popa es imul sub mov mov jb mov mov mov outsl in (bad) mov add addl daa sub das call ljmp movsl mov addr16 les fmuls jmp adc notb lock lea sti sub jno jbe mov das xchg andl mov mov and dec pusha out lock or xchg gs mov dec aam dec das cltd dec push int3 mov scas test fistp fsubrp and pop pop mov clc jl ret mov xor mov xor cmc sbb adc ja movsl and mov call push cmp jb jp stos xor scas movsb or inc nop repnz and sbb ret xchg addr16 cli movsl and and and pop ss std jne mov movl in shll mov imul push into outsb fistp xchg lret jp iret jmp xchg ficoml dec pop mov out insl hlt js mov inc pop xchg dec mov ljmp popa pop push inc test sub outsb jle dec lret addb mov lcall cmp xor mov add xor and mov out insl push and mov adc fisub call popf (bad) cmpsl in sbb cmpsb (bad) jge pop xor push adc ds mov jae out adcb mov mov lock mov ret pop sub mov pop mov mov xchg push jo fldenv repz xchg push adc mov cltd test adc imul jecxz int or (bad) mov mov jnp cs mov call addr16 aad mov adc push stc mov mov mov sub loopne fstl mov (bad) mov scas fwait mov lock ficompl mov xchg (bad) jns fisttpll xor lcall push aas mov jb adc jo pop dec and popf outsb outsl dec add loope push add jns shll aam iret sbb pop mov call jb lods jmp mov into mov lret ss stos cmp xchg mov adc lock ficompl add rep gs int3 test or push lods andb xor xlat in xchg repz mov insb sub xchg (bad) pop sbb fwait ret or adc testb mull das jmp pusha cmpsl test lahf adc dec xchg (bad) aaa (bad) lods cmpsb pushf pop or mov test loopne cltd push roll jbe jge pop aam shlb pop mov push lods jns jp subl push add jmp (bad) mov push jle shll daa xchg sbb sub xchg jge adc mov sti aam call mov mov addr16 and mov scas mov iret jle or mov push andl ret inc xor xchg je rolb jecxz and fstpt (bad) and mov int3 test (bad) std mov ja sti and xorl mov insb js mov lret cmp mov pop int3 mov mov inc lock aam or ret xorl pop lds xchg inc pop mov xchg out xor adc xchg dec inc mov cmp call and movupd icebp inc lret cmp (bad) popf bound jne cmp xchg push sbb sub les xor push mov pop das push cwtl mov jg mov xchg leave cli int dec les repz (bad) cltd sub (bad) bound cmpl (bad) mulb push sti or cltd fwait pop repnz inc in sbb mov iret mov rcl cmpsb loope pop cmp xchg rcrl mov insb std arpl pop clc (bad) dec rorb mov jno cmpsl mov and push js mov int3 mov dec scas jmp add dec int3 cmp cmp lret test cmp pop test xchg dec xchg cmp jle out (bad) dec mov sahf push jecxz mov push (bad) in add xor out ret xor dec jg (bad) xor pop insl js and and scas sbb bound data16 cmc dec sbb push dec cmp pop pusha jmp (bad) fstps fwait jg,pn test mov mov daa bound push pop cwtl ss xchg fiaddl jb or jmp push inc mulb mov jo ss push in mov cmpsl cmp stc stos and xor xlat test or pop test sbb cmp inc loope inc movsb aam sub in dec (bad) or scas dec sar sbb adc imul jae fsubrs aaa pop insb stos and adc jecxz mov pop repnz imul push insl mov cmp sub das push (bad) push pushf dec out dec cmp cmpsl lea pop inc inc mov fadds cmp mov xchg pop push cmp xchg loope lods cmpsb inc xor loop sub cmpsl add aaa mov inc mov push jns cmp mov or sub aad test mov mov inc mov outsb xor (bad) leave sbb mov lret movsl inc adc mov test pop pop (bad) out mov xchg movsl mov mov cmp ss stos sti push cli call aad mov bound cltd lods mov and or call mov movswl push mov loop (bad) dec lock push ja shll sbb dec lock mov fiadd cwtl mov dec xchg xchg push jns (bad) ljmp shlb xor mov or mov push ret mov int sub loope mov je xor mov fnsave iret enter and addr16 (bad) sbb cmp xor shr fucomip popf dec aas sbb push mov cli push and mov xchg mov iret inc mov xor out fwait jns mov mov out icebp clc push mov xchg mov xor repnz (bad) mov movsb inc add in jmp mov jl mov call movsb cmp xchg and mov mov int3 stc xchg mov push push push xchg sbb test movsb cmp and mov popf movsl test mov loope or adc mov stc sbb xchg shld sbb and push je push dec jle shlb dec seto mov leave mov mov loop cmp xchg ret adc add xchg out (bad) inc pusha out adc push push shlb aad mov dec popf ja push sub pop push adc mov call test fldenv test lods (bad) out mov or and xchg (bad) mov pop movsl test imul adc in decl ja test sarb movsb mov bnd mov mov pop cmpsb mov je mov in cltd push push sarl in cmpsl lret cmpsl into int3 mov cltd and pop mov xchg iret cli and dec lock stos xchg mov jmp mov cmpsb jnp adc push add pop pushf outsl (bad) mov insl cmpsl inc repz adc adc pop int cmpsb mov mov mov pop pop adc bound add and xchg sbb scas pushf fidiv mov imul mov jg in dec and fs out imull imul inc pop scas sbb mov jno cmpsl cmc sub inc xlat mov sbb loop bound push repnz movb adc nop mov pop inc dec adc movsl mov xchg iret fdivl leave daa test fcmovbe mov xor push and jge inc or jbe sub push ret dec aad insl jmp and sub jecxz in mov inc cmp test mov enter mov shrb cmpsb mov mov cmc pusha sbb loope or or push movsl pop xor and loopne movsl push cmc sbb lods mov jg (bad) cwtl mov jae sub xor outsb sub sti and ja rcrb lahf mov imul inc sub mov rcll enter jae jne ds mov mov negb mov jae roll or cltd mov mov lret sub xchg mov cltd jo lods sub popf insl and xorl sar lock mov sarb and dec mov std popf out arpl or int cli sbb lods pop jge pop bound xor fldenv (bad) mov sbb mov loope bound arpl arpl cs add sub in movsl jb cmc fnsave dec jmp fbld xor sub xchg clc mov divl les lcall pop mov mov push jmp out or ja xchg out dec mov movsb mov push test int3 jg add xchg movsb cmpl and dec xor jo stos sbb push (bad) repz push jne in cltd mov and pop sahf push sub stos std mov loopne negl xor dec out stos sbb addr16 out jmp xchg mov cmp stos and and inc push mov sub sub xchg icebp pusha sarl sti and bnd in (bad) inc xchg cwtl popa addr16 add loopne mov mov (bad) adc lahf add adc mov lds mov xchg shr dec adc xlat in sub push test and jl and (bad) call dec addr16 mov adc mov xchg mov movsl jecxz cltd lods and fwait adc addl inc outsb cltd or movsl jae and lret in bound stc test sbb (bad) (bad) or out pusha mov push mov push sub loop stos es ss and xchg sub sub xchg mov cmovl in in fnstsw dec mov (bad) out sbb ljmp and sbb mov fmuls xchg jnp inc adc mov xor mov insl cmpsb inc mov jo xchg mov jmp jp mov lret xchg ret cmp int3 jno mov mov out cmp and mov push cld movsb sub xor outsb jns test mov enter xor cmpl sti jmp test dec and or dec adc rol jl xor je and scas loopne call in mov mov fldt rcrl add adc push xchg add jle ljmp inc dec add push and fidiv dec mov inc loop mov mov (bad) pop inc fs jne shll add mov (bad) lods inc dec jge inc mov outsb mov cmp sub pop fsubs jecxz mov int add cmp fldcw adc lods ret fmulp adc mov hlt cmp mov iret inc xchg dec jl mov mov std mov xchg bound sub addr16 push (bad) iret mov gs mov and idiv out or jno lahf mov push aaa mov test mov mov pop dec sub cmpsb push push dec and mov xchg rcll xor loope or scas (bad) xchg cmpsb jbe pop jb std popa mov push push mov cmpsb movsl test stc mov jo pop lea outsb jnp mov mov mov or jne pop pop test cmp cmp sbb adc mov mov xchg in stos rcrl pop leave hlt bound insb pusha add mov pop mov cmp imul test or adcl and arpl xchg negb inc mov (bad) cmp pop xchg xor js addr16 in insl popa cmpsb inc fidivl (bad) repz fsubs push clc xchg fsubl jne test outsl jmp daa sub pusha scas adc pop sub cmpsb sub ljmp pop cmpsl icebp push sti mov jae in mov daa xor xor mov cmc pop push scas mov stc push scas or sub insb lret dec and cmc push mov aad or dec int and es icebp lock xorl (bad) and mov sub pop push and out mov mov sub loope imul mov mov mov and fwait xchg rclb stos movsl cmp popf mov pop inc jg mov cmp push dec iret or ja xchg scas lcall mov cltd or xor pop cmp cmpsb jle and adc ds mov insb test mov xchg mov xchg jl pop pusha jmp lret xchg stc push and lea scas xchg and xchg (bad) aaa inc jns adc scas stos xor dec jnp cmp in mov sbb jecxz rcr jnp jecxz,pt (bad) stos in cmpsl mov scas or mov out ret mov sub and clc pop xchg dec imul mov imul mov bound xor mov cltd les jo es mov or imul mov pushf je inc and pop sti dec inc or shrl push mov push leave and sbb mov cmp mov out in push pusha sarb push out fsubl jg daa (bad) adc dec push sbbb cmp cmpsb sub pop jbe dec icebp loop aas xchg jns mov xchg loope mov mov stos lock shll rorl (bad) xor mov push je sbb cmc sbb das and inc movsl movsb adc sub loopne cld jecxz fdivl pop lock ja and enter outsb mov leave inc dec loope fsubs dec sbb fs cltd add xor ja lods icebp mov add addr16 jg (bad) fsub ffreep sbb pop or test add or es dec mov fs jmp data16 adc mov gs icebp test push mov pop hlt pop adc (bad) outsl addr16 cltd out clc mov imul push lret movsb (bad) inc jnp movsl scas jae lock out xchg lcall ljmp stc scas mov mov in movsl icebp pusha and inc sti les xchg jae cmp dec inc or adc mov and imul sahf clc pop nop push je mov pop ds addl mov mov sub loop sti mov pop cmp dec jo int adc pop mov sbb mov into mov mov mov lret and mov xchg int3 lcall mov icebp pop mov lcall in lea ja insb mov dec or cltd jo sbb cmpsb in mov das mov sub call mov sub mov mov xor imul cwtl ss stos jmp lret test cld fwait dec mov movsb cmp add xchg and test push xlat test pop jmp adc inc dec xchg test xor jns cmp inc inc push test cmp gs or js mov data16 iret push pop (bad) negl sbb movl sub int imul dec xor mov or jmp iret test mov in rcrb jp jb mov dec inc mov loope or sub sbb cmp push mov daa out scas dec rol outsb sub dec add inc lds movsl stos add xchg push mov std fimul jns clc jne ljmp add inc std pop cmp popf pop pop neg pop int imul js enter push mov (bad) mov sub les mov or inc sbb test sarl cltd ja mov pop xchg mov mov sbb in (bad) lods sbb andl repz mov ljmp push sub adc or pop cld xlat pop lea aaa adc cltd data16 sub icebp bound and cmpsl stos imul (bad) pop in xchg shlb mov pop dec lahf and subb test xlat fdiv add add shrb xor pop adc push mov pop ss inc cmpsb jecxz loop in (bad) and lcall les mov popa inc enter mov xor pop push mov jno out mov cmc (bad) pop daa dec mov push stos sbb stos icebp pop jl idivl jmp popf (bad) aam outsl pop lods push cmp mov inc (bad) mov int3 sti fs (bad) notb fnsave mov mov jae mov mul pop loop cmc gs xchg daa addb jbe aaa cmpsb mov jmp add jge mov cmp ljmp testb pop xor lods sbb mov mov mul sub mov dec iret std xchg loopne push (bad) repnz xchg cmpsl orl popf add shll stos cmpsl adc test cwtl xor repnz push pop fisub adc data16 or pop enter es cli aaa popa dec xchg inc pop call jg shlb mov pop xor xor negl push std pop mov pushf mov jb iret inc push xor mov cmpsl lea cmpb dec movsl jmp push std cmp mov mov mov pop jg cmp and jle,pt sbb cmp fisttpll imul push add pop mov insb xor dec pop fildll cmp icebp mov cmpsl cmc nop vcomisd or push std push sti loope dec (bad) loop movsl xchg mov popa cmpsb mov nop push xlat loop sbb rcll lock and shll mov mov lods mov ret xlat lods and mov pop sahf out mov (bad) imul xor mov jmp adc (bad) mov ja in mov imul fnstsw mov std add push or mov sub and fsubp add leave inc jmp dec negb dec lods push cld je mov jns inc xor lahf (bad) movsl arpl and (bad) aad xor and xor popf (bad) mov cwtl dec inc sbb stc lcall and call clc inc jg jns sub fstps mov or cmp in fnstsw mov sbb outsb mov loopne jbe mov pushf xchg ss cltd dec inc int3 mov or mov mov in jne mov push mov mov and (bad) int mov xor push and daa das cmpsb clc pop aad dec mov or push mov mov mov imul mov int3 out mov and xor jmp dec mov jle fstl jmp insb and mov cs mov or inc pusha roll out ljmp shl push movsl cld push add jae pop push inc mov ss int or mov mov es sub push cmpsb stos jg mov xchg (bad) pop jle add lahf mov mov sarb fistpll mov xchg bound lea stc push xchg (bad) out cmp adc xchg (bad) mov arpl mov inc movsb mov (bad) imul sbb xchg icebp arpl ficompl fwait jns ljmp adc gs dec inc cmc sub stos out fistp adcl xchg (bad) xor mov sarl mov mov jp dec dec stos mov pop in movsl femms ret pop dec loope das test add rclb insl mov push xchg lds cmc stc fsts fldcw push lret stc lods data16 dec test mov jmp pop xchg mov sarl cld jge push dec sbb mov cltd mov inc adc jb pop sbb movsl cmpsb lret cmp inc sbb (bad) fstl jae and rorb add adc add in and sti scas jmp test and inc fidivr pop movsl movsb arpl mov mov pop xor dec fs dec cmpsb jb mov cmp bound aam push dec xlat mov ds lahf xor mov xor repnz (bad) xor mov rep mov lds jle in add push imul fistp cmpsl add mov lea lret add (bad) lock test push sub xchg jnp movsl pop inc pushf xor bound push add inc sub dec and scas add cmp mov in push sub pop negb fwait pop out (bad) shll ljmp bound jg push mov fwait cmp rclb fs into mov and pop jne movsb jge or je xchg pop test aad cmpsl daa (bad) pop addr16 mov enter adc lret es pop xchg ss and aad rcl test mov jae cmp pop clc or fwait mov mov pop stos enter and fwait mov jns int lock pop pop mov rcl cmp xor mov mov or int3 dec out pushf sbb mov fucomi addr16 cmp xchg sub sbb push and out scas pop pop stos cmpsb adc fistpl adc in adc inc jmp lret pop xchg (bad) mov popa andb aad (bad) bound repz movsl stos xlat imul lret (bad) xor sub mov pop into dec mov mov jb loop pop pop lock mov mov cmp lret sbb scas cltd test xor stos mov xor std pop out stos std lods cltd idivl pop push or xchg daa and out in lock mov pop mov pop mov xor loopne lret fxtract js xor pop adc push and sub and mov inc sbb or dec jnp mov fnstcw xlat sbb mov jl arpl mov out aam and aas sbb loope movsl mov cs xlat sbb lds pop hlt int add add test push and imull in clc jo pop push xchg loop dec cmp je mov arpl mov stc gs push mov daa inc sub test inc add mov xchg out xchg sbb stc xchg sbbb in cwtl mov push (bad) aam test insl in scas mov mov pop mov adc shrl fidiv mov xchg ret movsl ret sbb dec or mov in push scas div cltd pop add and and jbe push js imul enter mov and xor fimull nop lds lock dec xchg loop test sub pop rcll adc mov xor add out push cmp repnz repz xor (bad) in nop mov imul out xor scas iret push mov test arpl ret lock int lock xor and pop jo ja imul aam sub push sbb (bad) imulb in bound push push enter mov in mov cmpsb jno adc xor scas sbbl bound cmp lods pop int3 inc mov std adc and andb inc out add daa int add inc and xor arpl insl mov inc sarb lods aas cmpsl lahf mov pop negb js cltd lds mov xchg push cmp xlat das xor cli mov mulb jno cmpb addl pushf xchg cmp push mov xor pusha mov lods and adc notl sub xor out and shrb arpl fistpl fstl icebp sub aad push cltd (bad) movsb imul rolb jp aaa lods mov jns (bad) push mov in lcall insb leave lds (bad) sub inc xchg or repz lret adc xchg xchg scas pop (bad) (bad) dec sbb iret call mov dec cmc data16 mov aad mov xlat cmc push mov outsb shl and mov inc adc or je jmp popa add xor mov sub lcall cmp xor cmpsb int loope and cmp dec mov mov mov ret or sbb cmpsb imul lahf mov pop cltd ret or push cmp push bound inc mov pop sub dec dec mov pop mov sub xor out insb xor jns fiaddl popa inc fdiv pop and mov xor loope add (bad) imul in and push enter dec lods mov jmp gs mov (bad) int3 sub fldenv sbb pop fadd dec ret mov out cmpsl xchg push ss fldenv rorl mov and aad icebp xlat sub (bad) mov and fisubl cmpsl cld out inc adc imul daa mov insb pop push lret rcll sarl stos (bad) dec cmp or cmp and (bad) mov das jnp xchg mov mov movsb imul xor int hlt mov xor lods push sbb mov mov cmp mov mov xlat sbb mov cmpl add and mov inc outsb loop xorl lods orb sub cltd repnz dec add adc adc sahf fldenv stos pop mov jl jb xor jecxz cmpsl aam (bad) rclb sbb xchg or pop dec xchg and (bad) mov call fsubl pop adc xor or xchg das inc mov into inc loope mov ret test and jge mov cmpl push fwait and mov xchg mov mov and jo add or lds lods movsl fcomps stos jo mov add lods in sbb push movsb jmp fnstsw or jne jmp repnz pop fistpll xchg xor mov and mov loop mov out cmp das mov push enter rorw cmc cmp inc clc sbb sub mov xor pop stc pop (bad) mov ds push adc pop test leave es xchg (bad) mov mov daa mov mov mov jp mov (bad) fstps cmp xor pop jmp cltd jo fildll cmp or stos inc sbb mov mov in and pop in loop pop mov dec int mov sbbl xchg nop mov popl add push int popf mov cmp dec mov bound push ljmp clc and and in pusha (bad) arpl and jo mov sbb fmull jge adc enter cmpsb cmp movsl inc loop addr16 fwait or jle mov and mov xor ja loope sahf mov or inc in addr16 das and sbb jno cmpsl ljmp repz scas movsl loopne jge xlat or fidivr jnp sub add ds lea inc cmp std (bad) (bad) out into mov or inc mov cli add fist cltd and cld iret lcall mov add pusha mov popa mov pop cmp cmc push add out mov push scas sub push pop jle mov adc add inc iret in gs rorl sbb pop hlt push xchg imul rolb andl (bad) cmc popa repz xchg mov push sbb mov adc sbb lret sub xchg cs push lret mov addr16 pop int3 mov aam add iret and jmp push sub shr xchg shll add dec addr16 push lock xor cmpsl call jle sbb adc insb int push inc dec and lret and xlat and stc lods aaa mov arpl cmp andl mov imul lods mov (bad) imul dec mov inc inc into pop pop out mov das inc xorb mov ss jo lds movsl (bad) icebp gs add inc adc xor dec (bad) outsb cmp mov sarb stos pop fisubl jb xor inc lock in lock lret lcall xchg xchg jns mov cmc push cmp pusha inc dec inc jmp data16 dec push call in hlt divb out (bad) les xor cmc pop mov loop sarb inc stos mov or sarb push inc or dec cwtl (bad) xor push das out aaa pop xchg cmpsb push jecxz int3 adc scas jno fwait mull out test jae cmpsl in add lock mov (bad) mov ficom flds adc mov dec xchg nop cs (bad) xor aas pusha lahf adc imul cmp xor (bad) or pop fwait out cmp dec sub (bad) gs mov mov xor scas add mov xlat cli repz out inc pop fnsave mov (bad) sarb cmp inc pop ret mov (bad) (bad) in icebp and sub daa adc inc adc pop xchg imul lahf jecxz push jns lret (bad) je pop xchg daa das movsb mov sarb dec sbb lret testl lret pop popf enter pop (bad) xchg adc cwtl out addr16 loope cmp jbe adc jecxz inc mov ret bound mov into jmp bound cmpsl jp fbstp jne pop imul jno in int rcr lock lcall outsl (bad) loope pop dec add xchg inc or add jns adc xchg mov ret mov mov aas sbb imul mov incb xor cmpsb adc mov mov int3 fbstp adc add mov xorl push enter xchg movsl scas roll in sti movsl hlt lock cmp (bad) and jge orb mov je and rcll mov mov mov adc js cmpsb imul daa sbb fdivs push lds xchg ret (bad) call ja pop xchg cmp mov jns cltd repz and rcll and mov mov mov scas xor jp mov pusha repz mov mov and test sbb les push inc adc jg xor push and dec or sbb mov dec outsl das andl adc enter out push and lods mov imul add mov lahf push pop inc mov mov sti jno xchg adc xor inc mov mov jmp in rolb mov imul adc dec fs pop push dec fisubr test inc pop lea mov jge bound xchg add rorb push cltd mov mov mov mov and std movsb (bad) icebp frstors movsb xchg pop loopne je cld adc std xlat push insb sbb arpl ds jmp xor push add xchg xor cmpsl jp mov mov jb inc pop xchg icebp pop mov sub jecxz enter and sub test mov mov pop jo mov xor push aad call mov xchg jmpw mov and jp ja lret adc pop leave add inc jae pushf rcrl push sub pop lahf icebp and ror mov sbbb mov pop test inc push add movsl scas or jp icebp out adc pop rol stc test pop movsl fldenv jge jae inc out data16 insl mov repnz add scas cmpsl push cmpsb loope pop add xor stos mov iret insl iret ss rorb push mov test and sub cmp js scas movsl or add sbb and sub pop pop xchg or mov inc xchg push movsb insl (bad) xor movsl cwtl (bad) inc or push out push lcall fnstenv sub and push mov (bad) insl mov jns xlat adc ja sub rcrl dec xchg cmp mov push dec negb jbe loop into loope mov imul in pop xlat popa sbb (bad) mov jg fstpt mov lock inc push (bad) rorl dec inc fidiv mov mov push or jns pop (bad) jl sbb dec into out insb shr in pop cli and xor (bad) stc sub pop add inc into push and dec mov mov jae mov cmpsl dec addr16 dec movsb or mov sub pop mov mov (bad) (bad) jp add testl test cmpl in cltd das sub xchg pop shl mov jb xchg es lock adcl movsl and jl scas cld fs aas xor adc mov jo mov ds xchg cmp in dec jne outsl mov mov shlb leave dec mov cltd mov popa fidiv pop cmp mov std dec movsl add imul sub or push les fistpll out int push mov mov in mov mov int3 ret cltd fiadd and je jge xlat mov and sbb dec xchg lds ret mov cli pop push lds sbb mov ds imul sbb cmp or (bad) jge sbb shll addb mov push mov jbe aam or push clc test das sbb test xchg jecxz pusha mov mull scas rcrl adc shlb aaa add inc adc (bad) pop and cmp popf push dec jl lahf mov lea das hlt mov sbb fidivr sub ret outsl out loopne (bad) cltd es call cmpsb sub sub les (bad) inc adc jecxz lock mov xchg mov push in test xchg xchg loop bound xor sbb mov mov add push movsl cmova mov mov gs fadds add push add scas add test mov popa out pop jo cltd sub jne mov lahf jge je sbb jns and fidivrl inc adc mov and jle push movsl arpl jmp push mov dec (bad) push or fdivl mov xchg mov je,pn mov (bad) (bad) insl in cltd stos lods or pushf mov and mov pop mov (bad) pop add push aaa pop inc movsl cli stc ss pop cmpsb lods lods in mov (bad) mov jns ret cwtl jnp dec and negl push stc xor in clc pop push adc sahf bound sbb movsl into push mov mov xchg fsubrl mov jns xchg rorb movsl jl cld roll add xchg mov icebp sub sub cmp gs jne xlat mov fisubrl and push add mov adc jp movsb inc cmpsb mov jb sti sub mov and or das xor (bad) out iret insl sub add mov or pop rol mov fnstsw divl and mov xchg or repz xchg inc jmp addr16 push leave mov xchg adc fnstcw adc pop mov xchg xor inc mov jle loopne mov push scas test fs leave adcb and sarb push add (bad) lods mov movsb sub push xor or rorb lods (bad) divb pop stos sub mov lcall pop xor push xchg pop (bad) jge and push jne lret sub call popf pop arpl push in ficompl lods (bad) inc xor pop addl roll or sbb mov and inc ljmp inc xchg imul gs xchg cmpsb add daa jg (bad) mov inc adc fsubs mov add cmovno inc dec and add nop insb fsubr ljmp add and add loope lahf ret mov mov cmp jp je (bad) out or repnz sbb das bound inc std rdtsc (bad) outsb xchg bound dec lods rorl mov pop push adc xchg scas cmp std shrl xchg out repnz rclb dec dec repz cmpsb ds adc cmpsl push ds mov cld gs xor les pop mov ljmp fwait mov mov mov xchg cmpsl mov mov inc adc inc and pop fdivs insb stos jns pop into popf jo push jp dec and (bad) mov cmp jmp cmpsb mov hlt sub inc xchg mov es jnp arpl mov das repnz jbe roll dec add aas inc movsl jb les cltd lret bnd push mov push adc pop test xlat les pop xor rcrb jmp dec jbe add inc xchg mov std loop icebp or sti jnp and pop xchg mov and ror popf out fildll cwtl xchg cmp push xlat je xchg data16 cli mov pop (bad) and and and dec in cmp sbb mov enter aam and dec aaa push mov push mov inc dec clc and or cmp xchg and int3 xor xchg (bad) mov les xor adc pop test sti in jp mov xor loop inc frstor (bad) jg inc imulb jae xor xchg or sbb lahf or cmp mov pop les lahf push add je aam call stos (bad) jae int3 (bad) push pop cmpsb push lods cmpsl stc minps inc in xor sbb rorl scas push cmp cmp and push js push (bad) jae (bad) xor sbb mov mov xchg fsubrl clc mov dec lret inc sti es pusha idivl and std mov push pop bound movsb mov lahf mov mulb arpl and and in movsb aaa and subl insb mov mov sahf mov lods fcoms in into leave inc sbb mov pop cmp dec lock jno mov mov fistpl xor xchg pop repnz push push das in xchg jg std cmpsl fs inc mov fimull cmpb dec sar mov fldcw (bad) mov sbb lahf stos push loope in outsl mov jge inc cmp xor mov mov dec popf mov dec pop jo inc stc sub movsl push test call aas or jmp mov pop aam in inc adc xchg jns add mov lods and cwtl outsl movsb jle std mov sub jmp ds inc adc clc and mov mov jecxz loope in mov imul jbe push mov pop js les push mov clc push sub xchg or cmpsb jmp in push dec mov fcmovnu sbb add ficom lods and mov outsb mov cltd mov loop push cld pop dec xor lahf leave cmpsl stos sub xlat xchg test cld xlat cmpsl and xchg adc arpl fist mov ret imul dec mov sarl sub cmpsl test mov mov sbb push shrl mov fistp or xor mov loopne arpl lock sti push mov dec sbb aad jns pop aam sub test jl pop shr fsubrp movsl nop repz mov (bad) cld cmp pop xchg xor imul sarb hlt pop or nop xchg in xor push mov jecxz call mov fidivl and sub js cltd jns inc push (bad) cmc pop loope dec mov sbb js fs addr16 add adc repnz mov push test mov inc push pushf mov jl jnp add sti repnz fs and jecxz inc insb cwtl pop adc subl and iret ss int3 mov into lea mov inc or dec jo pop xchg adc jl xchg sub into out mov lock addr16 andb sarb movsl jge mov mov jmp ret mov arpl jnp js mov pop das lock jb jns and movsl je aaa sub les aas mov sbb nop test sub push inc flds aas sub addr16 leave out jns add cltd inc leave andb push test jo aad mov pop fs mov push mov sbb (bad) repnz pusha xchg mov mov ficom je dec mov sub fldcw and add and sbb inc (bad) push and out pop gs xchg pop (bad) jbe jmp pushf push lock or mov (bad) ja pop xchg sub mov fsubrs jge es mov in inc sti (bad) sub and (bad) push jl inc lea mov sbb lock sbbl add xor cmpsb fbstp in cltd pop enter ret int3 dec bound sbb lret test mov xchg lahf mov cli mov mov ds mov lock add fwait mov inc adc sub cmp add leavew (bad) notl pop adc or push adc imul xchg clc sar imul jmp clc xchg dec adc cmpsb negb mov (bad) ret cmp insl mov xchg arpl adc mov jae inc pop cmp arpl push fildll cmp add sub (bad) int loope inc push sbbl jecxz das and sbb nop pop dec stos lcall dec in (bad) bound popa mov mov sbbl lock icebp (bad) jne add mov sub rcrl popf (bad) mov lahf or xor (bad) add xchg xchg xor iret andl bound add fdivl repz out addr16 fist stos mov insb mov std mov inc cmp loope inc push and lea pop jge dec out or push adc push lods push pop in out adc or cmpsb push rolb sbb push mov inc push cli stc mov test outsl adc push lds pop push (bad) mov jb mov stos and and aam or mov (bad) cmp sbb lcall jmp (bad) flds mov out push jnp loop sub adc push mov push cltd outsl dec cmpsb jmp mov add fwait (bad) jbe jnp xchg mov sub fdivl addr16 unpckhps push sti pop les fildll dec xor call pop inc jno (bad) out xor dec pushf inc or mov pop xchg outsl in push cmp divl jp andl or mov jb cmp dec adc push pusha fsubr push fadds jle out xor std cld (bad) sti xchg sub or scas cltd mov ljmp adc fstps int3 inc xchg sbb adc test shrl or jo pop inc jg lahf into ss add (bad) int outsb inc imul sbb sub xor xchg lea push in push roll stos fsub cltd xor inc and sti jae cmpsl decl add (bad) sbb mov aaa jmp lods je sbb cmp inc mov mov jnp mov pushf mov pop fwait pop imul stc push sarb xor cmpsb cmpsl mov jbe mov (bad) lret push xchg sub xchg pop lcall pop cld icebp mov push mov lret or xor imul mov movsl aas xor xchg and xchg in jle and mov sahf into arpl scas sbb sub shlb jp mov arpl push sub sbbl xor xchg lds mov out xor cmc imul sub xchg (bad) mov jbe jp xor xchg xor cltd dec add or or add fiaddl dec adc inc fsubl mov mov mov cmpsb scas movsb jnp icebp sub xchg fildl bound fistpll (bad) scas or xchg and inc fstpt outsb out or (bad) and xchg lcall mov cmc pop push sub pop add out cltd adc and leave cmpsl lods movsb (bad) imul mov xor ret fs cltd rorb cli fisub pop loope pop movsl insl adc imul sti int mov fist cmp ss in aas or in or push lods add xor loop adc xor mov mov std pop pop adc adc hlt mov and mov bound sarb xchg mov add mov and aam test mov hlt int3 mov les cmp mov mov loop scas lret (bad) mov add mov sbb mov fdivs adc fiaddl sub xchg dec cltd adc scas arpl mov imul mov imul repz jg bound rclb inc loopne (bad) mov dec in int3 mov test stos jb add pusha idivb test xchg lret mov movsl bound ljmp cmpsl mov add gs test mov adc imul jge inc or iret jmp fs pop xchg mov cmpsb icebp ljmp and lds jecxz sub jb push cmpsb jae (bad) dec bound jbe pop div (bad) cmp clc inc repnz inc data16 gs imul jns jb dec fistpl (bad) cmp jecxz and sbb pop dec dec add stc jmp lods sti sub nop int ljmp pop push daa mov pop call les ss int3 sub ret mov loope xchg mov pop sub mov cli jl and pop call mov jbe cltd aam dec arpl inc push xlat mov out and aas add sub cmc pop aad in sbb js mov cltd mov xchg cwtl cld mov mulb pop push sub xlat movsb xor dec inc fs xor mov in mov jae jl mov inc sahf mov dec dec movsb scas lcall push push pop bound jle fst jnp cmpsb int sub fsubl dec es fiadd (bad) xor mov push cltd adc or loope mov cmpsl adc xchg (bad) fucomi imul scas mov dec add cmpsl pop mov mov call (bad) int3 adcl leave cmpsb adc mov mov into inc add push mov push push add and dec xchg push add js mov stc sub fsubrs nop sbb sub jns xor xor ja cmp out jne xor jl rcr je xchg gs jns aam (bad) jno fs aad (bad) dec mov mov (bad) clc int3 popl lahf dec imul mov mov push and mov dec jmp xchg sbb imul insb xchg xchg mov lldt outsb add ret rcrl lret call push arpl nop cmp pop cli xchg (bad) dec push inc outsb or cltd (bad) adcl es or mov cmp push jb mov insl mov inc xor xor jns je fs gs dec mov jno jecxz sbb xor sub js sub int and out aaa add ret sbb mov cltd jmp or cmp push bound jnp movsl inc in mov and jb xor lods insl inc pop ljmp mov out movsl aam (bad) lret test popf and ficom shl rcr fs mov push leave in test adc sub bound incb jle xor jl adc repz sbb cs jbe mov sbb mov and jo cmp fist xor test inc cli fstpt clc mov sbb pop lea cmpsb add idivb bound retw sub xchg (bad) ss scas cmp jmp push push mov xor and je js pop lods dec movsb xchg jecxz scas sub push dec cltd fisttp pop cmp test shlb (bad) jg mov (bad) addr16 xchg pushf ficomp mov jnp and dec in add leave pop popf (bad) bound push arpl loope lds insl mov call jbe sahf pop xchg bound movsb push ljmp sbb loop dec aam cmp mov mov (bad) pop dec movsb add add add inc test dec cmp sub jg loope mov aam mov adc aas imul aad sub mov imul fdivr std jne pushl push sbb sbb pop push clc push pop mov ja cld pop mov or sub sbb inc adc (bad) mov or sbb push jecxz xor or add mov add mulb mov jae fildl out sub cmpsb (bad) aam mov outsl push inc jae sbb out sbb shr mov shld sub je or mov mov mov sbb dec or frstor add test pop adc adc xor push fs push xchg sub mov bound push jmp inc gs pop ljmp adc add push in sub lcall out sahf sbb adc in ret loop jge mov cltd call out addb andl and sahf out imul aam stos mov loopne inc mov push add cltd in and cmpsb loope adc and xor iret dec jecxz movsl int mov xlat mov pop aad movsb call movsl addl fwait pop xor mov add pop push mov (bad) mov mov fwait add sti cmpb rorl fs pop shll mov popa and cmp adc adc int3 jbe mov aad cs mov sahf lahf mov mov aad sub (bad) push movsl or xor xor popf es xchg mov xlat cltd cmpl pop out push xchg cmp repnz sub and pop imul mov pop add push lds pop popl pop mov add int jecxz mov mov fisttp movsb in mov popa xchg popl out and dec movsl test mov mov js insl fsubs xor sahf insb mov inc inc jno ror add mov fistl push sbb and adcb push (bad) mov or (bad) add push cmp leave xchg jae pop cltd jecxz aas xchg pop push mov repz pop jmp (bad) movsl cmp dec sub retw cltd mov (bad) xchg mov mov add repnz mov inc mov (bad) lahf mov loopne mov movsb xchg sarl add xchg mov cmp in in mov (bad) push iret dec mov pop sbb aaa scas adc inc bswap imul sbb cmp sbb mov jo rcll add imul push ret xchg addb in out pusha fbld and (bad) xchg mov into popf mov jle add (bad) int3 xchg mov je sub dec fidivl stc mov stos mov xchg sti (bad) xor and imul aaa mov sbb mov sub xchg pop cltd inc cmpsl mov (bad) call push inc test dec mov repnz pop push or lcall movb cmp mov mov push gs mov jl fistpl scas mov sbb aam in int movsb test das sub fwait pop (bad) bound in (bad) and add add subl mov (bad) mov sub mov movsl movsb and mov inc push sti mov jp cmp int xor cld out daa (bad) movsl testb xor stc mov or ss and imul mov orl movsl sahf fwait call jl cmp sub pop loopne lea lods cltd stos mov pop cmp xchg test das mov mov scas loope data16 (bad) fisubrl push mov mov es sub adc pop jnp jge (bad) cli int pusha arpl mov iret push and daa movsl lods fdivrs xchg add mov mov adc fnstenv rorb fcoml js aam xchg lods inc cltd add (bad) push les cmp mov mov mov push mov insb cmp sub cmp hlt xor jae jecxz inc iret hlt and and rcrl sti fmull popf test add mov jne xor push sbb cmpsb xchg outsl out or mov jnp and sbb mov es xor add enter mov arpl push dec xchg xchg insb pop mov add cmp sub sbb mov cmp and mov clc and icebp mov scas or pop mov xor les mov mov and inc mov dec test ds push nop int aaa mov mov pop xor insb dec xor mov out scas mov dec xchg leave xchg dec adc pusha out xor fwait cli pop fst mov push inc (bad) jno push fistpll mov sub inc (bad) cld and and jne gs sub fs dec cmpsl subl in aaa frstor dec jmp jbe push rclb imul movsb sub or or or inc stc pop aas sbb rcrl das cs mov stos mov lock jg mov mov pop (bad) mull sarb lods jl mov lods or mov fwait mov mov xchg cmp jbe arpl pop mov and mov mov stos lods jg in mov sti push outsl ljmp push add imul add mov sub or cmp xchg sub lcall loope std pop mov aas lds jb mov sub and ds mov dec ret clc mov mov mov sub in adc dec ja and mov rclb push lods mov inc test push add mov rorl jmp popf hlt mov mov sti mov pusha repz xchg int mov out lods mov sahf fimul repz rclb lahf roll stos mov push add xchg mov clc xor jge add aaa fidivrl out sub stos loop out ja mov mov pop mov mov scas insl inc loop andl cmc in xor popf mov cmp or (bad) iret test cwtl push mov mov outsb push adc mov fisubl push je icebp mov inc jo (bad) and rorb adc lret mov mov add or mov pop or shlb iret adc lahf mov in and mov movsl mov fisttpl xchg shrl js lds cmp daa (bad) inc pop test aas jns cmp jl imul or scas movsb add dec and xor pusha jmp (bad) xor je sub movsl stos clc (bad) dec leave stos cltd arpl inc std pop aam es mov mov mov pop mov push adc int shlb test aam out in add dec add mov out outsl lods mov pop cltd test mov lock and mov cli pop (bad) mov mov outsb js jbe hlt out xchg push xor xor subl xchg mov test popa ljmp outsb stos xchg pop cmp cmpsb mov sti jle jbe mov (bad) repnz jp (bad) mov cmpsl jle iret xchg mov jns scas imul sti push cmp or inc cltd jl cmp (bad) lret xchg xchg cmc mov xor sar call jns jb shll jmp rcrb jno xor movsl arpl xor sbb stos and jb rorb popf mov mov fistl cmpsl mov add js push jl mov inc mov or cmpsb cltd jo popa fdivs add dec xchg sarb cmp pop cld repnz xchg mov cwtl add clc jmp mov in outsb loope mov ret push mov jmp into (bad) leave movsl lods mov inc popf add iret push cs lcall inc je rorb dec mov mov loope call mov fwait pop loop loope das ror mov fild mov adc mov cmp insl jmp or and test leave bound xchg shlb mov and enter inc xor pushf push lret pop in cltd je mov push imul mov iret fwait inc cmp cmpsb sarb in scas insl scas xor pop ret inc testb and out inc mov hlt outsb lcall and push test popa mov int3 mov aaa push xor mov inc jne xor lods cwtl xchg lock imul xchg cltd adc rolb mov pop repz lock push xor mov insb (bad) pop xchg mov clc pop push icebp jns mov mov mov das sbb cmp movsl out out cli pop and or fs inc and and pusha lods imul or sbbl arpl mov test sti sbb mov pop cltd nop mov inc sub shrl adc adc push daa sar daa mov into dec mov cwtl shlb shr cmp fldt fs pop arpl movsl inc stc and cld shrl sub aaa cmpsl lcall pop and loope mov stc out outsb mov cmp loopne pop fisubl (bad) addr16 adc sbb nop or addr16 jmp lcall cmpsl xorl data16 jae pop pusha loopne decl idiv and jns int3 cmpsl mov ret add and out imul data16 lret xor add adc inc (bad) (bad) jb test (bad) cmp or push fs mov pop add xor inc inc cld arpl cmp and pop xchg xchg xor fisttpll jp cmpsb les mov ds adc hlt inc mov push ret dec xchg sahf pop mov arpl int3 jns dec sub xchg mov popa addr16 and mov lret pop jecxz xchg fidiv int3 jnp loop dec daa loop xchg add mov cmpsl mov ljmp dec xchg push and rcll (bad) inc pop stos in push sbb lds xchg (bad) mov loopne int3 cmp aad dec cmpsb test push inc fwait nop rcr (bad) fsubl mov repz mov add xlat movsb cmp jecxz mov lock lcallw push movsb rcl mov pushf jle ja repnz push rcrb out dec jnp lock adc jns push inc movsl test pop sbb push jno mov pop xchg ret ljmp outsl lahf sahf mov loope adcl mov pop rcll aas jp push (bad) mov ds lcall jnp sub lea pop inc mov sarl or (bad) (bad) int cmp mov popf mov adc jno (bad) xchg cwtl mov cmp shlw sbb add hlt and out mov xchg xchg push scas arpl outsl and bound test sub fcom ret push and ret into adc xchg rorb push mov leave sub sub ja jbe fxch mov pop pop sti aas out jbe stos or inc cmpsb push inc icebp jecxz,pn mov jecxz push lods cmp call push and shr fimul cmpsb pushf imul stos mov cmp push cwtl test (bad) lock xchg daa cmp sbb dec sub push xchg out mov xchg cs mov mov mov lahf fucomp arpl mov push ret xchg (bad) sub and mov aas je inc push fisubl mov faddl mov fadds cmp pop daa rolb mov pop push cltd mov data16 scas cmpsb dec lret xchg mov roll push sub out mov les shrl lods pop subl add jg pop cmp pop adc mov dec push and mov lahf mulb ljmp in loope push mov sti mov inc adc (bad) ret jne jmp pusha mov cs out xchg (bad) in mov adc add cmc inc arpl xchg movsl and stos jo push test sub sbb and jb outsb mov adc xchg pusha add mov leave mov sub iret mov jne mov cltd addl and push jecxz push mov jge cmp xor and nop add (bad) mov pop jle pop leave push (bad) xor and cmp pop mov loopne cmpsb push dec add or lret loop pop jg jge and jge pop setl push dec and pop cmp pop stos dec movsl mov inc adc ss sbb mov sub enter imul in mov cmovns mov pop inc cmp mov (bad) ret mov insb and adc mov add dec push mov cmp push sbb (bad) lea sub add jb lahf mov mov xchg popl fwait or and dec cmpsl sbb cmp sub and scas stos jae xor mov mov or sub and sub repnz mov ljmp int in or cwtl mov imul dec xchg mov enter jl repz sub jns adc stos dec insl rcrb pop mov xchg xchg xor dec jecxz imul popf frstor mov stos (bad) loop push push movsb mov push xchg mov mov addr16 xchg decb inc xchg (bad) cmpsb rcrl fwait pop push jb or mov add (bad) aam scas paddb lds orl mov xor sub dec cmpsl pop out scas pop lds mov xchg mov mov lcall dec sahf shll adcl xor jecxz movsl pop rorb scas imul mov jns jp mov loop jne (bad) fimull into mov inc jae aad jle orb jge stos mov cmp in cli pop repnz mov and push pop pop hlt push cltd add mov movsl nop rcll enter dec pop int push mov imul and add sub sbb or adc mov icebp mov ds mov sbb sub push push cmpsb xchg xchg (bad) (bad) mov rolb mov xchg pop jne (bad) ljmp inc cmp push inc cmpsl xchg sbb sub daa movsl sahf mov fcoms and jl sub pop xchg xor mov out lds push bound arpl scas jp mov icebp cmp mov and daa xor jecxz outsb xchg cld pop lret mov inc aas or mov or cmp pop fwait add xchg cmpsb mov xor jge sub mov aad mov push int3 (bad) ja adc movsb jecxz pop mov xchg sub cmpsl imul (bad) int3 addr16 adc mov pop adc cmp icebp jne popf push sti pop inc pushf out mov stos cmpsl nop bnd fst arpl (bad) je sub movsl push mov imul mov inc inc jecxz mov cmp orl sub jnp rorl ja xchg cltd mov adc inc or mov dec push pushf das and mov (bad) lock leave imul mov arpl cld mov sarl jp and xchg cmpsl jge dec in mov jns cmp cmp jb int3 xor daa mov pop shrb mov jg inc es lods add sbb inc or jmp daa imul rclb sub push lret xchg xorb clc data16 mov mov mov mov nop out sahf xor stc mov clc push dec mul test test fwait mov stc cmp xchg jecxz mov mov and inc and inc dec lods push movaps jae mov lahf data16 out and mov (bad) fldenv inc pop mov cmpsb adc dec aam lea (bad) mov inc mov mov xor inc dec dec out push dec xor sbb sbb js out (bad) pop adc popa cmpsb cmc mov pop pusha bound xchg add and jecxz fidivr rcrl xchg lea lret lods cmpsl in sahf mov scas test fidivrl fildl cmp lds xor loopne out insl mov mov loop push icebp adc push add call mov or inc and mov daa mov xchg push jge and arpl mov xchg rcrl mov add (bad) sti mov test insb jmp jae mov pop add les push in mov mov cmc lret pop repz xchg (bad) arpl mov lcall inc scas mov pusha call sbb movsb push xor mov xchg cltd push test dec ret mov imul inc adc adc mov test cmpsb pushf xchg (bad) mov mov inc xchg loope push (bad) (bad) dec and repnz mov adc lods dec fild push stos pop sub jg mov outsl sub mov or loopne mov shlb mov ja inc lods push shlb in or adc repnz loopne cmp pusha hlt fs shlb inc mov pop insb loop jb mov xlat mov jmp loope out mov iret test mov push or clc fcmovnb outsl push data16 inc mov add dec inc ja mov and js in pop sbb mov or adc ffree adc add test push jo lods insw mov idiv js mov push lret mov inc jp inc mov in pop xlat shrl loope and (bad) mov es mov adc push sub dec insb aaa sbb add iret adc mov dec scas mov pusha cwtl jbe mov aad xor je inc xchg cmpsb xchg (bad) test int push insl jno xchg jmp cmpsl sub pop mov mov cmc dec cltd loop popf lea bound mov jle mov xchg mov jns decl arpl cmp out jg cmp scas xchg mov pop icebp dec cmova jns lods stos xor xor imul mov xchg (bad) xlat sub test mov sbb pusha call ds jbe pavgw mov int mov loope jl rcll and or and pop enter (bad) pop pop aad xor test mov sub jp mov scas mov cmp xorb adc xchg sub mov mov loopne movb sub pop inc arpl adc or pop push test mov stos lds mov insb fstpt xor mov and inc xor pop dec dec stos movsl push mov stc clc pop inc leave xchg std inc packuswb sbb in cmp mov sbb pop in popa mulb xor aaa cmc sub dec xchg out cltd push add mov sub pop dec insl pushf and mov dec test or fwait mov fwait inc lcall int3 cltd pop mov inc or dec loope cmc lahf dec std cld ret ret daa xor rol sbb inc inc cmp loope jae cmp lret mov mov sbb cmp scas mov out push and inc push cli ss xor sub loope js (bad) mov xchg rclb sub add mov and and dec dec mov push cmpsb pop ss mov inc jge sahf mov fisttpl sar dec xor pop sar pop jp jnp sub outsl orl outsb xchg jl xlat mov cmpsl psllw cli add pop data16 inc mov lea dec ja cmpsb (bad) jbe sub mov scas pop (bad) js arpl lods xor cld sbb out stos pop add pop dec in aad mov mov mov repnz add rolb mov aam push pusha les out xor xchg adc cli movsl aam gs dec movsb xchg or jo test pop xchg popa xchg cli inc arpl or cmp pop sub shlb xchg mov jnp xchg inc rorl mov mov dec fwait adc sub xor rolb out arpl jne out movq movsl jge incb test sti mov fcoml loop mov (bad) push aad les mov pop sbb adc jle inc les jne xor pop fwait adc imul dec out adc movsl mov push jns inc and mov push mov jbe push jne lods (bad) ja mov roll aam mov arpl fbstp add pop js cmpsl cmpsl mov popf loope add imul mov popa mov fwait imul imulb inc mov ja mov test dec sbb aas mov inc pusha lods push popf cmc sbb enter dec or sbb mov cmpsl scas fsts iret addl dec push mov xor pop ss push inc hlt dec (bad) mov stos and in in insb mov mov ret scas stos je mov cmp (bad) lcall xor nop das push movsb aam mov jle xchg adc subl test cltd cmpsl test fistp scas stos jbe sub jae mov xchg int3 xor sarb adc dec mov and outsl mov hlt jecxz push lret aaa mov or xchg (bad) mov pop dec sbbl call jp jne aas adc outsl in mov icebp mov js loopne push and or mov popa and push test loop aaa scas test rorb push test das popf dec mov xlat mov out cltd inc mov push ljmp pop (bad) or movsl ss xor mov add jns or dec cmp inc add mov lcall int sbb sbb xlat dec out fcoml cmp mov sti test cltd (bad) pop cmp xor adc xchg inc pop scas pop inc mov inc les aas xor cmp sbb mov arpl cwtl mov xlat mov (bad) enter xor jl hlt leave movsl cmpsb das icebp bound repnz roll xchg sbb pop lcall mov xlat jl push or shlb and je fs fdivrl test or cmp pop mov movsb and fnstenv out in or mov xchg icebp fidiv pop (bad) mov cmp jle mov dec lods jg push mov mov adc movsb stos mov xor push lods adc shr sahf mov movsl jge hlt insb stos xchg xchg dec add adc mov out js push and and xor test inc cmpsb in int3 cmp and clc mulb cmp addr16 movsl out insl lret in enter imul repnz out inc mov and push mov popa int3 push int add cmp fdivl and or scas jae jbe imul jge jle xor mov shll inc push imul add mov inc outsb add mov popf popa in mov roll cltd dec add aaa dec loop push orl int3 pop inc into inc insb cmp iret mov repnz fs cmp dec frstor mov mov (bad) cwtl cmc popf pop arpl cmp xchg dec bswap mov mov lahf in xor mov test dec jge rcrl mov and mov cwtl in sbb mov negb mov jp sbb cltd jecxz inc or bound aad js rcrl movsl mov idivb push pop push aas jnp cltd scas mov push (bad) cli and loop push mov cmp cwtl (bad) das pop movsb repnz pop into mov dec imul (bad) iret ret data16 mov and dec or mov mov mov sub jno push xor mov inc or push clc sub test push xlat mov or and fnstsw cltd fwait mov dec out outsb mov sub inc jb xchg gs xor xchg push fwait (bad) (bad) out movsb sbb or fwait hlt mov repnz idivw cmp pop cmpsb fld xchg jmp sbb movsl test sub sub xor js hlt or dec adc mov inc xchg sub aad xchg push pop (bad) jo inc popf dec sbb enter jb mov xchg je movsb adc int3 mov cld sub jno add xchg aam jno (bad) dec aad mov (bad) xor xchg outsl cld mov int3 enter inc pusha in mov jns decl push lret (bad) dec cmc sub sti pop sahf lods lods test mov push mov add xchg mov test in gs in mov aas mov push or mov xor sub add sti (bad) mov popa (bad) (bad) dec cmpsb inc icebp mov pop out cmpsl mov lock mov push mov pop lcall movsl adc xor sub cwtl mov or sub inc xchg (bad) es jns mov inc jge in xor lahf pop dec stos js fdivs sbb test inc cltd popf mov fwait inc loop dec movsl arpl dec cli sub jge movsl mov ljmp fadds idivb idivl das popf xchg mov and lea jno mov (bad) mov push cmpsl mov mov and mov movsl sub pop lods and mov mov popa add lds add jnp dec adc mov dec or fwait xor lcall pop sarl and fsubs cltd jp cmp lcall pop mov jge sub outsl pop push fidiv stc mov dec les mov sub gs xchg add cmp jae jns sbb and imul scas mov mov cmpsb xor shll and imul and nop mov movsb push mov push imul xor aaa es imul sahf jmp xchg inc in xor dec add into orb mov pop adc mov out and inc jnp pop incl outsl addr16 mov pop js data16 shr dec (bad) dec push mov test mov stos adc lret movsl xor in mov sbb jno mov cmp sub inc js gs mov fimull arpl (bad) (bad) in movb xor popf dec cld sub xchg lea das mov ret stc scas fidivl or call movsl test xor sti push mov outsl push add or daa cs mov ljmp int3 loopne inc or mov mov lock jns or leave lret mov aas inc mov sub sub mov imul mov mov lock dec sub push mulb addr16 js sub pop jns pop xor pop fs les sub sbb cmp and jnp popf sub cli cmpsb in in call imul imul rolb mov or dec cmpsl (bad) jnp std orl dec vmovd inc mov push movsl inc sub xchg (bad) js mov mov adc dec add aam or pop cmpsl mov cmp dec in xor sub movsl scas pop mov adc jge cltd enter cmp test xor inc cmp mov dec mov and inc in in mov aad dec (bad) mov pop roll xchg sbb stc mov data16 mov fcoml popa test (bad) push scas and gs mov adc jge jmp pop or inc (bad) dec or sti pop inc mov mov (bad) in mov push sbb daa scas and cmp sub mov cmpsl stos dec dec lret mov xchg insb in mov pusha iret xchg push sti xor out fcoml mov lock mov push aaa cld push imul cltd pop stos push leave lock mov and and xorl test icebp test push mov push enter mov mov insl sub mov and pop xor and mov mov pop cmp in add pop addr16 dec mov pop xchg lret (bad) lods mov out xchg stc imul xor pop push push and pop add pop push mov popf dec inc (bad) into outsb cwtl pop lret (bad) cmp xchg loope mov xchg cmp or loope cmpsb add in icebp sub stos rclb mov in mov pop bound bound pusha add dec mov adc push sub sahf lock inc pop (bad) xchg or mov mov mov pop nop mov fist call negb aas cmp mov pop xchg mov ficomp sarl les popf pop dec add jle fdivs cmp cmpsl jnp mov xor in xor cmp pop mov and jnp mov adc and xchg push inc adc test inc scas (bad) cwtl xor or pop sbb push clc lock jge shl xchg push scas pushf jno repz nop add push jb js cmp jne addl sbb (bad) iret inc xor mov xor dec mov subl inc cltd ja push xchg mov (bad) cmp mov aas sub dec mov mov mov setge add js hlt dec movsl jmp ljmp and or mov adcl les movsb and sar mov loopne bound xchg lods fcmovbe sbb jecxz test xchg aad stos push push xchg jmp and pop out ja jb xchg sub inc scas ja cs lock mov lret and (bad) or test mov test mov and add push or mov test (bad) xchg and icebp inc mov cmovle mov in sti mov sub pop xchg push mov mov rcr imul aad test setae sub gs push in stc push dec imul insl sub ljmp mov sbb cmp js jle push mov cmc mov fistpll xor xchg (bad) movsb lret sarb (bad) mov sub adc in imul dec scas cmpsl sbb repnz mov xchg jb fsubp stc cmpsl cmp dec popf dec pop jnp xor xor jmp sahf mov inc sarl mov xor sub inc pop cmp mov jae or (bad) mov iret xchg aad xchg jmp das jns xchg bound into sbb out popf bound add cmpsb and fcos cltd push mov push out cmp or stos adc add pop test shlb rcll xchg addr16 stos mov dec adc into or call movsl xor mov in mov fldenv fbstp xchg lock hlt ja into ret loop pop xor data16 popf jmp hlt push fs (bad) arpl les jp xchg (bad) cmp inc sbb test aad sub fs movl pop mov or data16 xlat icebp or bound movl adc stos xchg (bad) mov dec pusha pop or mov icebp inc cmp sbb nop add dec test mov xchg andl cmpsl sub mov fsubs add jge cmp pop popa popf dec pop sub movsbl mov shlb shlb dec pop and add mov jecxz push jns add lods or cmp mov xchg imul cltd push xor sub loop gs fcompl outsl loope or and xchg fsubrl out leave jg fldenv mov jmp jmp bound inc test pop rcl xchg cmp je insb dec add mov shrl or xchg sub sbbl push dec cmpsb imul scas ret subb js sti clc pop int3 cmc adc push push inc bound add cld sahf int3 and sub pop mov jg and jle mov inc and and hlt mov ret fildl shrl sub or xchg mov fsubs pop add ret mov mov popf out add or imul movsb or stos jns (bad) test push and test popa fistp add xlat or (bad) cmc fwait ja pop iret mov cltd mov lods cmpsb lahf mov mov cmp mov mov lock mov (bad) ds push mov dec in xor and mov fsubs add out push cmp push mov sbb xor mov fild inc sub or mov or add cli cmpsb rorl or int3 mov pushf pop add je mov bnd pop jge lods movsl push sti lret mov rorl xor iret fdiv movsl push jbe inc xchg pop lods pop adc xchg ret xchg cltd cmp scas mov orb repnz test jns pop push dec pop iret movsl shll sub and notb dec add aaa inc push or dec mov cltd jae repz fcmovbe jno xchg imul mov dec pop loop and xor push in jbe jns add mov es (bad) pop sar jmp and mov subl and mov cltd fistpll push add dec int lcall rol pop xchg ud1 pushf out and test fisubl mov xchg jecxz arpl in mov xor subl aas sub in lcall test or rcrb fsub ljmp sub fnstcw xlat dec xchg leave rcrl mov fidivl xor and pop loope mov jmp push xchg mov dec rcrb sub and adc mov ret mov outsb lret sbb mov out shlb ljmp insb out (bad) sub pop inc fs and aaa mov fwait dec or fistp sbb test pop cmp mov inc pop mov stos xorl jmp jns loopne add mov or out insl push cli jl cltd push xlat cmpl adc mov je sub aaa aas lods cmpsl lahf imul pop and xchg xchg pusha push add sub sbb push flds and inc dec fnsave mov stos stos test mov pop cmp mov mov cmp aaa inc pop addr16 cli pop pop sti mov mov cmp dec clc movsl out jns mov jo leave add jp dec rolb adc (bad) jbe std sub cs mov mov xchg and pop nop jo push cld sub movsb fidivr imul fnstenv inc adc fs mov dec out adc adc movsb out mov popa ljmp mov jns inc lods (bad) mov js ja jns das sub shll (bad) jmp jge xorl inc dec mov icebp repnz xchg mov (bad) stc out outsl cltd sti mov gs adc ret lahf push dec scas pushf xor mov dec iret sub icebp loope jns cmc mov xor subl dec jp push es jno cmp inc out outsl pop jmp adc and scas (bad) in add and jmp cmp pop icebp testl fiadd push and movsl andb mov cmp xchg or loop xor je ret sbb sahf jbe and mov xchg add sub push sbb daa lret sbb cmc mov add xchg dec jns sub fbstp xor mov inc cmp leave xchg sahf xchg push cs lcall (bad) outsl cld mov cmp aad sbbl sub outsl xor data16 outsl xor jge mov xchg js xlat (bad) mov (bad) mov lods cmpsb jne and jmp cmpsb sbbl fisubr pop dec std test aaa dec lret not loope push ret popf js push cmp xor cmp vmovsldup lret imul insb fcoml test dec mov xchg dec int3 push jns insl sbb lods xchg fbstp push in lods xchg hlt inc out xchg mov sbb mov dec aaa cld and out jns sbb cwtl and push stos xorl push popa dec jae cmp add sub bound dec insl fs (bad) pop pop adc shll rcrb xchg repz nop cmp stos cwtl inc bound mov push test call or fistp jg les dec repz imul xchg js ds jb js push mov dec dec mov ret jb sarl push dec jb and out sub iret cmp add icebp dec and js shrl xor mov fmull jecxz mov xchg pop pop mov pop push and out xchg dec pop neg std (bad) xor xchg cmc jae pusha mov in xchg mov xchg or icebp ljmp cmp loop popa cmc les sbb pusha in das sub sub and push aad and mov mov add into dec (bad) jne add mov mov bound mov adc aas push insb ljmp mov icebp pop in (bad) mov cmp mov jle sub bound xchg push xor adc xchg push in mov ljmp inc add mov add into (bad) mov ret or jbe ja lahf cmp inc pop xchg sub ret pop lock mov mov pop add andb loope xor (bad) shll cmpsb mov call xchg (bad) ljmp jg mov fbstp lcall insb inc fimull ja and leave pop jns and jne sub sub call add dec pushf pop iret mov add sarb xchg addr16 rcr insl fnclex inc or adc push cmp and sub push imul mov icebp arpl dec loope xor push mov cmp and (bad) cmpsb inc mov das pop jbe loop xchg push fnstenv sbb add addr16 pop push lods adc jns decl (bad) pop sbb mov andb xor add pop lock addb and shrb bound mov pop pop add ret test mull mov cmp pop jle xor je fstpt mov jecxz mov aad mov push mov js movsb loopne fs and addr16 pop lahf mov xor cmp (bad) rclb dec mov mov lret push (bad) (bad) mov mov leave mov ja dec popf lahf inc (bad) mov jo pop mov (bad) ds stos mov pop cltd add mov sbb scas popf int3 lock sti lret xor lods sub cmpsb (bad) into les clc mov mov sbb pop jnp pushf pop mov notl mov lods std cmpsl mov cmpsb xor sti push les push movb rol mov aaa mov inc xchg test jns and mov mov sbb pop fdivl (bad) jge ljmp jg loope pop lcall pop jae lock mov (bad) stc add das lock aad int mov cs bound mov cmp lds or mov call lcall lods mov add sarl adc cmc jg inc or popl fidiv push adc sub mov or xor imul mov rorl dec mov sbb mov sbb lds daa outsl (bad) cmpsb push inc pusha jmp add xchg cltd adc mov jp jnp push add movsb lods jo in pop (bad) cli push outsb out mov xchg aas insb mov out xchg (bad) sahf jbe mov xlat jmp cltd mov cmpsl stos mov push inc (bad) jae mov xor and mov and mov add inc inc pop repnz sbb mov jp pusha hlt xchg ljmp mov cmp fs dec bound inc dec rcr hlt leave lret mov sub inc sbb push push stc insl mov push xchg cld pop mov (bad) sub push mov (bad) sbb sub (bad) stos jmp and jl icebp pop fmuls cltd mov cli (bad) bound push mov mov and out dec jl loopne xchg cltd nop xor int (bad) sarb jle mov add es pop inc negl mov jbe into mov cmpb jns (bad) push dec (bad) jl dec outsb in mov lock hlt mov stos mov rclb sub cmpl mov mov or push cltd (bad) in mov mov or jmp pop (bad) fs test inc cld pop and mov jae ret lret pop iret sub mov test out scas mov sub mov mov cs jmp (bad) incb ds mov aad leave or dec jmp cmpsb call lcall lods inc pusha (bad) mov mov mov cli xchg cmc and fs lret in mov fst inc jecxz iret sub mov push fisttpll (bad) cli mov and (bad) xchg mov adcl out bound sub cmp (bad) mov cld cmpsl sub repnz xlat gs sarl xchg jbe imul movsb stc mov add std lret scas cmp dec pop and rorl cmp or jns pop xchg ret sti sarl movsl cmp xchg (bad) lock mov mov popf pop mov hlt adc xchg sbb and cwtl mov mov movsl push (bad) hlt dec lret ja setge pop dec xchg and (bad) mov add pop cmc jp jg mov fnstsw or shrb shrl fdivrl xchg xchg and data16 clc pop push dec pop mov dec (bad) lret xor or xchg fbstp mov xchg out mov test pop jg (bad) addr16 dec in (bad) rcrb adc and (bad) jne xchg (bad) mov es adc jns and movsl sahf lcall cmp lods loope mov mov rcrl xchg enter pop cmc sub xor xlat stos or adc jecxz pusha incb int sti call xchg jge mov pop mov inc daa scas xor pop cmpsb stc and rcll cmpps push adc add icebp add scas (bad) js jge jp nop test imul loop (bad) mov pop or hlt call cmp hlt add in inc and and cmp xchg adc fldenv or in mov mov mov sbb dec loope lock mov outsl test jmp sbb out push inc aad pop dec xchg out cld aad and pop jno out test sbbl mov roll fs scas movsb or addr16 dec xor dec add (bad) das andl push or cltd daa cmovae cmp jae or loop cmp xchg add out mov pop mov mov mov out in and jecxz je dec sti pop mov pop cmp adc in in data16 dec sub mov cmp test into mov mov insb mov pop js push les pop leave xchg mulps jl pop cmp pusha mov lret inc push mov scas fldenv cmp cmp punpckhwd imulb add dec add and mov pop push cmpsb loopne cmp mov fs pop mov das sub mov cmp mov nop mov mov xchg jbe push inc mov mov aas sbb popf mov imul lods cmpsl jb push mov adc in cltd xchg sbb dec cmpps sub and mov mov aas pushf mov scas and xor inc push stc arpl adc sub or mov jmp push mov push inc lds mov cmpsl add fisttpl push movsl test pop pop jmp fs mov iret xchg pop adc and mov jb mov sbb (bad) cltd mov popa fcomps jbe and adc mov mov andl js push jge pop test lret sbb mov push push (bad) xor pop mov jno andl movsb pop jp enter mov in mov shrb out ficom dec mov lahf inc pop imul popl sub mov cmc sahf mull mov mov lret sbb in rcrl mov imul dec push in xor sub mov js imul sar pop loop into arpl mov push sarl jge dec push pop cmp and mov outsl in adc ficom pop jecxz jns lods and fwait in pop imul hlt stos in mov push jmp add rolb cli movsb mov aas dec mov sub xchg gs jp or pop mov xchg mov mov sbb pop xor fbld cmp mov gs mov es cmpsb push add mov mov push insb in cs scas cmpsl insb inc lods and lock imul mov fisttp dec inc mov ljmpw xchg stos xchg jmp mov mov popa (bad) mov adc mov and push mulb xchg inc or jo sbb scas add mov mov repnz pop mov ds cmpsl push stc jb xchg js add imul repnz jae jns jge ficomp test out fiadd sub popa and sbb jnp ss mov sub sub nop xchg sub fistpl push divl and hlt push sub pop xor (bad) push and jmp inc add out gs hlt add (bad) jmp or mov je into stos leave cmpsb pop bound mov dec pop or jae fldenv inc loope icebp jmp imul and pop or movsl outsl std sbbl loope xor (bad) cmp jne iret push cld pushf pop (bad) xchg cmpsb gs inc cmp add popa add iret fwait aaa pop pop popf addl and mov test cmpsb hlt (bad) imul ljmp (bad) lcall ss sti mov popf bound js mov cmpsl mov jae lea cltd or mov mov or mov jns push add xchg insb inc mov imul daa adc or xchg ss adc mov das addr16 (bad) mov fidivl pop lea mov aam sub pop daa and or pop mov mov cmpsb dec inc cmp cltd adc and or mov mov dec ds pop xchg push (bad) xchg jmp in fwait scas int fnsave xor out mov mov cwtl add lods and les subl test (bad) lock sbb mov fldenv insl mov out out cmpsl aam push (bad) jae mov (bad) in call adc fisub stc push int mov mov je iret mov std movsb jmp call (bad) and add (bad) scas mov test mov and enter rcrl es (bad) insl scas movsb outsb pop adcb mov jo mov cmp out and mov push cli xor nop imul leave (bad) aaa push inc jo ljmp mov pop pop jp enter xlat test test adc push fnstenv mov (bad) mov or int sbb push sub cmpsl data16 xor int3 lahf mov dec or push mov fisubl sub pop cmpsb cmpsb add mov pushf mov stos sbb push mov mov and test cli popa addr16 mov cmp mov (bad) cld out inc dec js mov xchg pop sbb loopne out cmpsl sbb subl cmpsb stos fimul mov adc cmp cmp mov inc scas push into xor mov cmp faddp jns cmpsl adc jbe jmp jns push aam sub jp scas sub adc mov sub flds or cmpsb add inc mov dec ret cld dec mov or sbb jns mov jne cmp adc psubw enter mov dec mov jno xchg fcmove imul mov dec jno cli addr16 inc pop scas jl lock (bad) (bad) scas push std je jecxz fistpll lods inc fnstenv andb pop inc loope add (bad) fmuls aad call sbb inc cmpsb ret pusha lea sbb or and mov cmpsb (bad) negb sahf mov (bad) ss and cltd mov sbb sub aad push (bad) in pop mov imul and bound push addl imul scas insl call mov mov sub (bad) mov inc add dec in mov jle,pn (bad) mov lret (bad) loop mov scas mov and xor inc mov js cltd icebp cmp into mov inc mov mov bnd movsb jle notb mov cmc mov mov and sub mov les cs idivb (bad) adc testb jmp cmpsl popa cmp stc push and sbbb xorb je sti mov js and dec orl inc or pop mov sub fidiv or mov nop sbb loop or and sbb mov xor icebp mov adc outsl xor cli jecxz sub js mov (bad) into ds pushl imul (bad) leave pop xor push pop mov jo jno xchg inc inc lahf mov xor mov in pop out xchg pop adc pop aaa sbb into movsl xor adc dec mov rclb push lods xorl jecxz,pn cmp js cmpsb loope call push test xchg gs mov dec jmp imul and dec mov xor jge insl lods or mov bound fwait ds orb jns or lret mov mov fild jo (bad) out mov jbe fildll mov lcall enter mov (bad) repnz xchg cmp in lock gs jecxz mov push push add xchg or enter dec push (bad) (bad) mov mov push pop out arpl cmp es pop dec or dec mov das xor push mov inc mov mov (bad) cmc lods scas rcll inc mov xchg addr16 cmp (bad) mov xchg sbb mov stos pop jb xchg hlt adc test adc and notl lock inc and dec push or sbb mov push add cltd jne cmp sbb mov (bad) push mov loope cs fsubrl repz dec sub int3 imul (bad) pop mov popa mov ror in mov daa sti jae js push addr16 lahf add shl fidivrl mov adc mov shrl hlt sub test sahf popf push test mov pop mov xchg xchg outsl jmp stos xchg data16 mov mov jle ds cltd cltd adcl and aaa out stc or pop or mov mov xorl pop add mov cmpsl mov dec rcrb shlb cmc xchg test movsl (bad) es sbb stc xchg push add mov loopne lcall mov mov mov sbb orl fmul clc pop cltd sbb fnstcw stos rcrb test shrl cmpsb mov out push jmp inc icebp inc cltd aad mov add dec xorl outsb out mov mov sbb or jae int3 push loopne or push jecxz lahf icebp sub mov inc xor call mov (bad) adc mov lea lret jge pop jp cltd dec nop (bad) popl adc pop ds xor cltd adc sbb daa (bad) pusha mov hlt dec lods pop inc mulb adc jl xor pop mov dec add fcmove movsl aad or dec push pop fist push fcmovnb xchg insb fisubl syscall sbb jbe push push xchg ret out jno (bad) xchg mov sub loope popf add xor jg aad mov cmp imul adc outsb push push cwtl xor jg in jle sahf into bnd data16 and mov and test data16 cld add sub gs push push mov mov xchg pop mov dec pop outsl idivb and shl dec sbb leave leave cmp and mov jl add mov push xchg ljmp push inc repz insl stos (bad) lret cli xchg cmpsb dec (bad) out scas in orb jmp xor rcll pop mov xor ret cltd pop mov or xor jp lock jmp add jnp xor cmpsb stos fimull shlb stos mov mov shrl pop lods repz xor add cmp popf lods pop and ficom pushfw lods pushf or mov xor adc pop mov stos pop stos cltd cmpl lahf inc notl imul push idivb sub and xchg adc addr16 inc mov stos fstp fwait incb (bad) push add pop (bad) outsl ret hlt and sub and repz pop mul out sbb rcrl pop fwait xchg (bad) jb (bad) js stos adc fdivr inc iret mov xor cmp repnz cmp enter pop fsubl push pop jle jp mov xchg xlat sbb xlat ret lret in es cmp xchg push shlb sahf mov or movsl lods jecxz (bad) in insl cmp roll add insl sub push ret or xchg add and vmptrld (bad) and pop adc push sbb clc and pop test test ja jno xor lcall xor or or sbb dec movsl jae or stos test push fwait aaa push push iret movsb cmp iret fs adc xor jge sub inc iret mov mov fcoms adc out dec xor sbb inc movsl mov mov xor jmp mov addb loop lret (bad) out call fnsave and scas andl cltd in das adc movsb inc cli mov pop cld je arpl ret out addr16 mov mov xor lahf and sbb push js es mov or jmp scas cmp out push test push mov bound sti daa mov add inc (bad) iret (bad) icebp xor and dec les mov add push mov in push push into sarl sbb mov xchg cltd mov js add cltd mov notl mov add lods mov popf mov mov mov test pop aaa (bad) movsl cs imull mov xor jmp inc imul and xchg lret movsl push inc adc mov sub in mov pop push or repz sahf std outsl push push and mov in ret sub and outsl stos mov in cltd xchg lret (bad) mov (bad) mov xchg les pop dec mov jecxz xchg push je sub adc enter jle fnsave das and xor scas or jo mov daa dec mov mov mov or rorb imul jb jno clc ja ss push add cmp dec arpl add dec xchg shrb jl mov pop imul mov (bad) leave push mov icebp add cbtw imul cltd sbb ficomp push mov cmp xchg lods jbe arpl lods adc jl int out aas stos xchg adc dec xorl js sar jae sub aam fwait push ret mov aaa inc mov jne repz cltd push mov movsl lods shr sbb inc dec mov or mov icebp and imul pop cltd idivl imul and fsubl jae insl pop mov or repnz ret sub lock adc push dec scas jecxz imul mov pop xlat cmp jne fisubr ljmp movsb mov (bad) mov jg (bad) xchg repz hlt pop cmp test shlb dec xor push cmp pop add shl punpckhwd xchg negl mov lods movsb aas mov shlb xchg mov push cs lods xchg mov in or sbb cmp aaa mov pop ljmp or dec add aas mov xchg xor and fbld ja or or (bad) lret test mov xor (bad) mov call ljmp inc xor inc adc lock cmpsb stos aas leave test in lret mov into mov lret mov scas mov call or pop test roll cwtl mov mov cmp into inc xchg add push mov fildll push push inc pop add pusha sub rcll pushf fwait mov data16 inc sbb add stc cmpsb pop sbb lcall mov stos outsl mov mov and and mov insl pop sbb and mov mov adc xor arpl outsl sbb mov pop adc inc mov and push test sub sahf mov and sbb pop aas push test dec scas xchg jnp xor movsb dec push mov lods push mov or xchg inc adc gs hlt ljmp ja fwait dec (bad) xchg jmp rcrb outsb mov ficomp pop in and and and jae scas mov movsl pop mov sti daa dec aaa and mov outsb cmp ret mov sub or xchg daa sub mulb dec add (bad) cmp mov mov jne jge pop das xor test insl adc std mov fcmovu jnp pop repnz lea push xchg fidivrl insb dec add and mov ret push mov adc and daa mov xchg repnz dec add mov scas into out (bad) mov cltd push loopne adc out mov aam repnz popa out inc out sub mov cmp push in adc cmp cwtl dec pop adc aad lret mov inc push pcmpgtb mov cmp les mov xchg ljmp xlat pop les xor test mov test js cmpsl sbb mov xchg xor dec inc xchg adc push loopne call push xor in (bad) rolb mov xchg push cltd xchg icebp mov icebp mov ja push popf mov xor shll jg test fs lds dec icebp and (bad) adc loope je xchg mov mov pop cli pop xchg imul pop cmc inc xlat push popa mov cmp adc lods push add dec (bad) jae fmuls xor inc adc lods mov adc movsb iret mov lods stos addr16 aaa imul (bad) mov pop sub clc sahf mov jecxz xlat mov arpl inc jl shlb pop aas ret cltd mov inc ds mov mov mov jg inc fs jns je jl mov jne mov xor fwait cltd mov sbb hlt xchg jns pusha mull mov enter dec jmp jb,pt out daa jl mov push mov inc mov (bad) push (bad) (bad) adc push adc fmull arpl loopne mov fidiv fcomi jp int3 inc add cmpsb test mov leave cmc les imul hlt std adc (bad) mov xchg inc adc es mov int3 add mov or out jns push (bad) (bad) mov fnstsw orl xchg mov adc mov cmp and lock xchg outsb xchg into pop (bad) jl mov mov mov mov mov jno fisub in imul cltd cld inc aaa sti push inc pop cmpsb inc shl shrb loope lods (bad) mov stos xor nop mov pusha push cmp dec xchg mov sbb and outsl xor jo cmpsb jl cmpsl lods dec add pusha out addr16 inc rcll dec clc les (bad) repz dec movsl pushl fstl mov sbb cli jo inc mov push cmp aam in sarb xchg ret leave cmp jnp adc cmpsl imul into mov jno pop sbb movups das leave mov std mov imul int aaa mov (bad) pop das mov daa xor test ret xor ss push pop outsl ljmp sbb add leave shlb pop mov pop cmp cltd mov insl out dec mov dec mov (bad) jo (bad) xor sbb call mov imul add xchg jb fidiv mov push push lcall and int3 test inc pop fdivs (bad) out jbe outsl stos cmpsb mov inc xor imul cmp mov jno (bad) sub pop loop adc repnz jmp pushf pop sub neg jle adc and add sbb and addr16 les addl sub pop movsb and jg add push xchg dec and in cmp and jg (bad) pop popa das sub pop xchg lret (bad) iret pop mov mov in and insl sbb inc xchg das mov dec inc xchg ret movsb jge sar sub stc cmpsb mov sbb rcrb incb mov xchg pop out gs lret bound xor push or or xchg lds cmp orl call or sbb push sub stc data16 push js gs js jne ret (bad) dec jge lret push mov xor mulb jbe cli push pop ja negl xor arpl pop lock jl and mov aad pop adc or dec cmp popf adc mov sub add cmp int and andl rorl clc pop (bad) scas sahf pop pop ret and and and lods jbe (bad) mov sti mov adc movsl leave loope test xchg mov call popf (bad) mov ret and push (bad) and cltd xor add mov mov fstpt mov insb mov xlat mov stos addr16 cltd or les cmp jmp mov mov cmp mov pusha push dec test fadds dec out xor xchg add or jbe lret pop cmp jg addr16 adc icebp mov in outsl lods dec jge jo movsl js mov loope xchg test sub nop push out mov mov xchg cli mov incb jecxz in lahf pop imulb xlat mov mov adc in fadds dec push add (bad) jo xchg xor jecxz sbbb lock std out push rol sbb xchg cmc (bad) jo insl push sub (bad) jmp outsb mov jno imul mov mov outsl (bad) sbb mov and xchg mov mov stos jne subl sbb cwtl aaa adc mov sub mov imul jmp jns cmp cmpsl inc mov cmp push movsl sub out xchg in xchg mov jnp mov mov (bad) jns cmp push and and lret in mov imul icebp and mov inc cvtps2pi jns xchg jge sub mov jae fwait sti daa outsb subl je stos jns mov cltd push adc sbb add mov fidivr pop mov lds lcall cmpsb pop repnz mov sub ja int3 mov fdivrl sbb xchg jns adc (bad) mov out xor (bad) inc and mov pop adc fs mov cwtl jg fldt add repnz decl out dec or loop test cmp stc cmp fildl adc mov jae ds push add mov inc pushf mov inc imul outsb es lahf jecxz insl pop inc xchg adc pop es jne fs dec inc inc adc mov mov push jno sbb dec (bad) (bad) (bad) mov call mov push cmp hlt mov pop jmp xor ss dec dec bound xchg inc int test jl inc add mov cmc cmovle pop adc dec mov aaa mov mov jmp inc das aam xchg push cld jns mov mov mov (bad) mov fwait xor popa test dec add mov mov mov sbb cltd cltd lods add into les outsl in mov pop push or pushl data16 pushf fsubl mov jge cmc dec out (bad) js fstpt in aad xor rolb mov movl iret das mov mov scas mov add cmpsl mov cvtpi2ps xor xor pop aad and inc push fimul and inc mov xchg mov xchg dec mov test xor addr16 fwait pop cltd in dec or iret lcall jno sbb mov pusha leave (bad) mov (bad) js xchg jns mov xchg call dec pop dec jns mov mov in les add aam or xchg imul addr16 sub mov jns outsb ja pop sub repz pushf scas add movsl sti dec mov cli loope ja mov xchg xlat rcrl inc fdivl and dec jecxz xor loop into arpl jle aam mov sti jae out mov sub test repz rorb mov data16 mov sbb mov xchg or inc dec call jecxz (bad) int3 mov sbbb mov lahf js std mov add jno mov lea xchg adc lret jge mov ss or inc popa outsb int stos jb sub and movsb jo mov jne repnz insb xor aam jbe mov fidiv jecxz and lods loop mov ret clc inc lods mov (bad) push cmp stc jo mov int3 mov mov (bad) and imul mov aaa fnsave inc push lcall pop dec cmpsb aam mov sbb (bad) rol xor jp mov inc xor jo or andb mov cmp jb mov (bad) adcl jg mov test mov sbb loope in inc (bad) dec lcall fildll test sbb push sti popf xor loope lods mov sub push out sbb xchg lods lods add cmpl scas movsl movsl cwtl mov cmp ret sub repnz add dec mov push xor das cmp test jle shrl movsl xor lock xchg mov aam mov bound mov jo iret mov jns push jl cmp sahf dec xchg xchg rcrb test add or adc call adc call push (bad) or les data16 jp lret dec mov popa out dec pop (bad) sbb or fsubs pop loopne dec mov and xchg adc mov and xchg mov test movsl insb push std push mov scas out sub jmp adc mov sub fadd adc xor daa bound dec pop xchg xchg (bad) ror mov xchg imul test cmp mov in loop dec vmovss stos or pop xor mov cmpsl pop mov fisubl popf adc dec pop cli cltd les dec inc xor imul mov adc out mov and aas lds lret int3 push mov daa mov call xor dec mov test mov pop sub call push jne arpl ds faddl fs mov fsts dec sbb sub repz or mov jge push add add cmp cltd ss out add mov jne xor inc xlat mov pop cli roll pop shrb les dec repz (bad) testb (bad) jge jmp js bound cli xchg dec movsl xchg dec enter addr16 push lock stc add clc mov test fisttpll fdivl test inc jmp dec aaa nop inc dec fwait ljmp loop and insl lea test mov loope or call mov dec jg sbb rorb dec and movsl jmp fildll in jns es adc cwtl shrl fldl scas movsl ret add nop xor jmp movb jmp stc sub pop lcall xor sbb cmp loopne dec nop xchg (bad) jmp sub mov dec jb push mov movsl push out iret xchg mov popl test fs xchg mov mov jo mov mov jns and xchg sub lret shl fldl mov xchg sub pop pop mov repnz mov inc jp mov dec push fmull and jns pop loopne pop (bad) mov insl mov sbb enter (bad) iret xchg dec xchg cmpsl cmpsb mov scas and add rorb mov mov lcall sbb cmc jp arpl (bad) int3 mov ret push cli les jb imul mov jg jns mov add frstor clc in popa fsubrs inc mov (bad) into mov cltd adc pop ret xchg mov subb subb mov imul imull cmpsb fs pop and popa dec ret (bad) push xchg ret push repnz jne and movsb add scas ret dec int3 (bad) pop cmp into and sbb push js dec push pop popf sbb push adc bound test pop cld ljmp fs mov push rorb es dec xchg imul adc ret fwait shlb cli cmp push xor cltd mov add lret into inc in cmp mov in lea popf test mov mov xlat jge negl mov bound sub mov xchg mov mov adc pop adc repz mov ror and imul mov push dec adc lret or imul daa and xchg xlat mov push lods mov push cmp cmp mov inc popf push lock leave es sub mov mov das cmpsb repz lcall or xchg or inc mov push push jg pop push (bad) mov jecxz push cmp pop mov cmp adc orl jl dec jbe lret push cmp mov adc fstpl mov mov jmp icebp mov inc stc aas test or push jns pop cmp jp xor out movsl fistpll gs cltd rolb xor daa (bad) jmp mov pop rolb mov cmpsb pushf pusha out pop sbb adc sub fnstcw in imul jne ds std (bad) push icebp rcll and andl or (bad) popf movsb pop pop test gs frstor jecxz or pop mov xor pop ljmp cmp jle and test jge orl pop inc mov iret cltd addr16 cmp ret lods mov xor lea les or in mov fsubs push popf outsb cltd pop cli push dec loop dec cltd push mov mov decb pop in cmp mov sbb adc push push jecxz jno xor push add mov test pop mov mov cli push pushf mov movsl xor std and and clc fild or aas add dec mov outsl sti mov mulb test xor (bad) and repz mov cmpsb or jno jns test jecxz popa mov adc push (bad) and mov js or dec decl hlt mov mov gs dec mov pushf mull mov and scas mov jo cmc push ljmp jnp cmp xchg xchg mov test mov pop sub jmp or inc popa xor adc pop into sbb lahf mov or mov lea leave push mov push push push inc movsb pop push sbb jae xor ret mov es stos or idiv sub mov test fdivs ret movsl cli ljmp lock stc std mov mov cltd cmpsb push push (bad) jbe pop mov aaa sbb sub jl cmpsb (bad) mov add and cmp jne add mov fiadd das mov sbb imulb or jle mov arpl cld mov lds das add cmpsl mov inc cltd mov (bad) pusha negb mov jl xor xorb xorb loope imul xchg mov xor pushf mov mov ljmp rcll loop bound sbb out (bad) dec lret fisubl pop lea daa sbb xor xchg or lds mov and adc lods jbe jl xchg pop lock shl (bad) xor fbld ret xor dec push rcll and inc xchg jb dec add cmp xchg rorb pop inc xchg push dec mov push fst clc xor or cmp aam in mov pop push push xor mov aas jecxz fistl mov or ss shlb fucom call imul pop mov lret les inc mov es movsl sbb sub xchg xchg sub cs cli cmpsl xor adc dec push dec mov mov pushf mov pop jmp pop dec xor lahf ffreep test sub lret jge movsb test push mov and push out jle test sub xchg ficom leave repnz cltd fidivrl sub pop cmp pop add (bad) push aaa xchg push enter out sub aam imul xchg mov mov test mov imul and fwait xchg mov insl arpl push jmp sarb push scas sbb push test cmpsl xchg jecxz jp mov and mov mov push or ljmp fcom sbbb arpl es xor sub and test movsl test mov js inc (bad) mov sbb jp and fdivs lret cltd out outsb je mov imul push dec jns ljmp ja dec lods loop and jns add mov movsl js cli pop and sbb hlt add xchg cli stos xor movsb sbb mov out jmp add push leave (bad) stos test testl jge xor cmc test ficoml xchg mov sbb xlat and scas ret push adc iret or mov lahf xchg mov inc pop out repnz movsl or sahf fwait pop cltd repnz and adc aad (bad) fisttp jno cs cmpsb sub lret dec ljmp add mov xor cld dec mov mov add mov push sub cs pop es sti daa shrb bound mov int push dec iret pop or arpl mov icebp ja pop push jnp repz mov outsb in lret lea mov out xor lret sti mov aaa dec (bad) jne push mull mov pop lods fwait out fldcw fdivrs fldl in cmpl stos movsl dec aam lock push mov test cmovno and test dec rolb mov sbb aas pop jb mov movsb add aaa sub lea jnp lret mov loope sbb add movsl adc and cmp out and and sub cltd mov lahf jg xor scas pop mov and mov scas ss and pop xchg (bad) cmpsl push sub or fldcw mov addr16 mov cmp lea jo lret lcall mov cmpsl ret push sub and xchg mov orb pop jnp xor and inc sarl iret sub mov adc dec mov pop cld and pop or mov movsl int3 inc adc cld adc mov sub mov mov outsl les jmp faddl adc push es jmp bound jne fisttpll or shr inc cmp xor imul daa fdivr jecxz pop aad push or mov aam add pusha and pop xor test repnz rclb xchg out rol jbe pop pop mov mov (bad) jnp sti push and psubsb das test jns sub aaa and add adc test sbb mov js mov fdivr pop pop sbb sbb jns add add nop stc mov loope fistp push sub aas adc xchg or or mov ss dec add cwtl mov shrl dec cmp imul insl jmp push dec mov lcall jl xchg or jge ja cwtl jne shrl shrb (bad) out bound jl pusha call repz xchg cltd arpl sub andl outsb pop mov jns lahf roll scas pop sbb lea rorl push insl ficompl jae adc push jecxz inc mov xlat mov pop pushf jno add jb mov nop pop lods stos loope push std addr16 sbb stos mov push daa mov jns mov push and jmp (bad) cmpsl mov andl leave fwait sub adc es jg repz inc jl adcl in bound add (bad) sub scas insl stos pop aaa in and jno push xlat add dec js mov sbb pop (bad) jmp lods arpl xchg or cmp mov popf addr16 cmp and sbb cmp imul adc mov repnz lcall sbb mov push sbb jg data16 cmp pop es sahf rclb fisttpll loop leave add out inc mov pop push add jg movsb (bad) mov xchg jmp pusha pushf jo xchg pop int add jbe xchg int3 imul jmp mov (bad) pop jle xchg int3 stos mov movsb sahf clc cltd push cmp std push dec pop mov or push mov add sub fsubl mov and cltd repz popf aad mov add das mov xchg int pop in mov hlt fsubrs mov pushf sub xchg test xor lods repnz imul aaa sub addr16 dec or sbbl addr16 sbb cmp stos xchg cmp xchg mov xchg insl call mov stos out lods xor cmp ret movsl outsb daa sub mov stc out mov hlt mov push addr16 lds out sbb int3 test jo ja movsl sub inc cmpl cltd pop icebp mov es mov jbe fstpl mov jp push arpl inc inc mov imul inc mov jo (bad) int cmp cmp (bad) dec jge fstpt pop or fstl imul mov xchg gs dec loopne push adcl loop in sbb test and inc cmpsb or dec add aad cld movsl mov lcall mov (bad) std mov popa jo mov add popf mov and fs test (bad) (bad) push arpl sub and xchg lods call mov mov mov addr16 push dec dec je out jo mov imul test cmp xor sahf out popa fsubs ret enter into or sub mov clc dec dec mov mov or pusha pop mov add leave dec jecxz jl loopne mov out lret test mov sbb mov lock aas cmp mov popa (bad) int jmp push out dec es dec cmp jne sbb into add mov (bad) dec in fstl xchg mov cmc sub nop loopne dec idivw mov leave dec insb (bad) iret shrl pop gs lods lret pop cmp mov loopne pop fdivrl mov jno mov and push dec icebp js mov mov test mov push inc xlat fwait addr16 insl xor repnz adc ja xlat (bad) (bad) insb sbb mov shrl cld mov jnp fwait call mov es fs mov sti call in ss movsb inc sbb cmp mov push pop cmc jge lods cmp mov mov dec mov sbb sub insb and mov push cli xor mov mov mov cltd adc and xchg and push push add mov mov lods lds ds and ljmp sub mov addr16 mov and arpl xor cld in daa xchg mov jne mov call dec add and jmp xchg mov shlb repnz adc mov xlat jnp and jle pop xor movsl push js cmp mov jmp inc fcmovnbe movsb mov push xor xchg mov lret mov cmp xlat in repnz or xor jbe icebp pop stc pop (bad) jae and (bad) mov inc bound pop adc adc ljmp adc cld mov imul push dec stos (bad) mov popa js in xchg push sti mov jno cmp inc sub or add mov adc scas mov mov jl pop cmpsb decb sbb dec jg jne xor lea (bad) inc adc in or out ret or push inc jnp mov xor cmp lcall cmpsb into mov mov mov adc mov mov sbb mov add push sub iret or adc pop mov lret rcll subl xchg fbld pop adc pop cmpl push out addr16 xchg push cli pop xchg mov or mov outsb movsl mov adc sarb inc int3 inc cmp push (bad) mov lock cmc in subl inc (bad) int3 test mov and int sub sbb jecxz stc sbb movsb test mov and stos sub repz fnop leave mov sbb rol rclb mov push inc ja (bad) jg ja jp bound mov xchg (bad) into jbe mov repz jno pop pop dec bound inc jmp pop xchg loopne loope out scas inc pop popa ljmp rclb sarb push adc fwait jo (bad) mov and pop add sub leave or inc xchg inc cmc mov xor and cltd cltd and js adc and (bad) into nop mov stc out xchg mov cmp mov shl sub xchg and jmp ja xchg (bad) mov mov pushf ljmp mov adc inc ret xchg cmp dec or jns jmp xor out fidiv sbb adc mov call insl pushf test inc dec (bad) fnstsw (bad) movsl popa pusha out in and pop jbe mov xchg out jns in popa pop sbb push or add dec mov pop cmc andb mov movsb lods and sbb inc add dec mov xchg xchg jmp cmpsb push cmp movsb sub mov jg sub mov or idiv xchg jp mov sti or std test roll inc mov xor dec movsl sarb cmc shlb add dec mov mov int3 add ja rclb xchg das dec add call or imull pusha out iret mov jae push (bad) ffree movsl test (bad) aad loope fnstcw (bad) (bad) xor (bad) iret fwait hlt mov loopne (bad) dec or xchg mov and outsb mov movsl xlat dec push xchg sbb dec and lret in jno fsts dec adc jmp les imul and mov adcl movsl mov add adc sub xchg mov inc (bad) lock xchg jns push dec rcll cltd ljmp cmpsb cwtl int3 test or pop outsb mov sti xor mov mov subl xchg mov and or insb sub pop cmpsb daa jnp inc xor xor fnstcw pop sub iret mov sub xchg mov add xor mov ja shlb (bad) lea insl sub rorb fwait rcll xchg mov ljmp loopne rcl (bad) js add mov xchg mov mov aas ret mov xor nop or cld or dec mov xchg test sti push ffree std into movsl shll cmp mov or rcll mov adc cmp (bad) ficom iret xchg movsl shl addr16 adc and mov inc inc inc push xchg insb shrl and jns dec sub aad mov push pushf jl jge andl push jne inc adc mov mov or sbb mov add in in adcl pushf aaa test das mov cmp repz test cltd inc (bad) in cmc repnz xor jge dec stos movsl add push dec out test stos mov lods (bad) inc inc xchg push loop mov pop pusha mov or fnstcw jecxz icebp xor lcall lock (bad) mov out xchg les daa movsl lret adc dec inc jp pushf iret fimull in dec mov dec adc daa cmp cmp adc jp outsl test sbb jmp test mov push inc jge mov mov es dec and lock jo pop or movsl sbb jecxz fdiv mov sti push rcll std jmp (bad) aam jmp cmp adc ret in dec sbb out cmp and inc mov push loope mov daa xlat and pop cld in std rcll daa adc or aad aaa lds sub (bad) sub movsb fsubrs push les std (bad) push (bad) icebp mov loope mov loope jae cmpsl xor dec fs inc out cmc xchg lock jae pop mov or out xchg adc inc andl pop mov or test mov mov dec or cmc pusha fild or inc mov movsb pop loop sti int roll mov cmp pop adc jl push xor mov and adc scas andb or std daa lods orl cmp adc add and daa lock add push mov sbbl jne mov pop pop push mov xchg xchg dec popf loopne les jmp mov ds mov adc xor jnp in lret add xchg das clc stc mov mov and fisubr inc or test xlat int mov inc in sbb and fwait mov rcrl out dec inc mov arpl mov lods xchg pop mov xchg adc xchg ja lock into push dec xchg mov and mov nop sarl js adc mov jae mov xchg xchg mov insb jo fldl inc (bad) or test xchg or lods js ljmp inc or add and icebp test gs mov movsl add jno and movsb adc mov (bad) loope jl cld mov test lea mov fwait std push mov ret jmp pusha jl bound push clc sub sbb lea pop and loopne (bad) cltd lahf cld outsl out test push mov jo and inc imul and or mov add mov mov movsl cmp add inc mov mov sarl loop aaa imul and sbb (bad) xor jl mov into mov sub pop bnd (bad) mov mov int3 fwait xchg adc mov sub pop lret cmp push xchg fcoml mov gs ret testl jb push shlb sub fdivrl jecxz jnp arpl mov rolb repnz jbe aad cmp mov dec movl jg xchg or mov mov adc push movsl sbbl xlat sub push orl mov mov and stc pop mov cld pop aam xchg arpl (bad) call in adc nop dec pop cmc inc fs shlb mov ja icebp add mov xchg addr16 (bad) int3 push inc mov inc scas pop fcoms ja in mov pop jno mov mov sub jnp jge xor je call movsl arpl lcall cmp mov (bad) in fld dec xchg sbb xor push dec cld pop pop js pop mov in cltd ret rol mov dec lods (bad) cmp inc movsl gs push or clc sahf int3 mov mov cld arpl int3 inc shrl jmp les mov rcll popa mov dec mov mov jae inc or pop and stos jo adc adc inc cld (bad) pusha movsl adc and pop inc mov adc mov inc xchg sub ljmp stos fstpt sub xchg decb insl cmp test jmp pop pop mov pop add dec (bad) stos and cmp and adc add daa mov cltd push pop mov iret adc out addr16 in (bad) adc jns and in fisubl cwtl rcr out test pop repnz (bad) pop stos ret cmp and insb push mov dec sahf pop lods divb lods in addr16 pop pop cmp jl mov add sub pop call jg add sbb push cltd test mov sbb mov popa js out mov jmp pop les xchg lods outsb mov push cltd data16 xor mov leave pusha lods push loope dec (bad) iret cmpsb (bad) addr16 xchg xchg gs jns in pusha inc sub movsl mov stos sarb xchg popa mov or dec insb call add sub loopne sub jnp stos lahf mov sbb mov mov jle xor ret pop shlb and dec pushf add push je sarb les (bad) aad dec adc mov sbb cmp sbbl bound adc push pushw iret push mov push popa xchg dec mov mov repnz xchg js and pop loope push inc and repnz bound jne push out fidivrl mov sbbl and push mov push lret test jae cli push xchg ss push cmp xchg pop loop jl out lret stc nop iret xchg repz jmp stos loopne bound addr16 xchg test mov fisttpl pop dec cmp fldenv notl nop and sbb cs adc inc bound fmuls or arpl stos pop or mov add and pushf (bad) enter sub addl mov or je cltd pop adc dec daa xor leave xchg addr16 push ds fcoml fwait pop sti cmpsl daa xchg xchg stc stos fimul mov adc inc jb dec mov pop mov xor jmp out test ficom jecxz pop out pop sub pop mov adc in fs or mov shlb sarl pop inc aaa cmp inc mov sub and (bad) subl xchg cmc (bad) mov sub aad add enter sub mov mov mov cmp mov dec je jecxz mov mov pop scas mov xchg pop mov cmp xchg xchg xchg aaa pop roll or pusha sub int movsl iret lret rep push add pop sahf push xchg int3 repnz fnstcw icebp pop mov stos jo push mov mov into test aaa loope es dec sub inc mov push cmpb push dec jne pop cmp jb call outsl daa jg or sbbl push jmp sbb sub adc adc or adc jno rolb push mov cltd xor pop repz xchg push fsubrl or nop or inc mov xchg call sub mov jge mov mov ljmp jbe stos sbb ss lods (bad) je scas mov cmpsl mov jmp (bad) xor fwait mov cmp mov mov fwait mov movsl je jnp rorl jmp push les push call inc fs lods js mov mov dec (bad) testb (bad) lock cmpsb std iret sub xchg mov out fs adc mov jmp mov mov std mov in jae mov inc lret mov cmpb mov pop push mov mov icebp fwait mov adc add mov jge mov mov sub jge push int int3 fldcw in jns mull out shll repnz adc and adc add jge leave pop fisubl mov or fwait sbb push add lock cmpsb push fnstcw adc dec xor jns test insl outsb cmpsb cs lea jp xchg (bad) ds inc or js lods std cmpsb pop cmc jle cmp rorl mov pop and test inc (bad) insb out mov es lock int3 sub xor lock stc dec pop pushl adc mov je fnstcw sub or test (bad) push data16 movsb mov js xor xchg cmpsl enter fmull jp arpl cltd scas mov (bad) jnp,pn and jo mov push test mov or cmp cmc mov repnz in push sbb cmpsb loop test int dec or and pusha cmp shll movsl mov or leave adcl mov incb rcl mov loop mov cmp lahf mov push outsb mov cltd mov push and pop movsl dec xchg out or ja cmpsl arpl stos xor inc loop movsb jmp mov push add mov dec pop fnstsw mov mov mov cmpsb add mov pushf inc addr16 fldenv jbe les outsl jnp shlb cmc rclb addl cltd stc push cs jge and pop xor (bad) insl mov dec dec pushf inc pusha jmp jbe daa push xchg enter orl lahf es data16 loope cmp pop pop sub mov fidivrl or and jecxz (bad) adc add add and (bad) sbb fcomps leave push xchg outsb (bad) mov xorl cld insl pop and mov rolb hlt mov mov fsubs pushf (bad) addr16 xchg aaa shr test aad mov icebp rolb movsl ret shll dec cmovno in inc es inc adc adc xor jno int cltd icebp dec mov lods mov sub cmp rorb sbb adc aad push mov mov lcall mov add (bad) and mov fcomps jp pop adc shrb dec je dec sbb xchg jl cltd inc inc mov push lods inc ja mov les xchg mov push je (bad) jne mulb adc jecxz jle and sub mov dec movsl call (bad) adc ljmp shrl movsb das (bad) sti or xorl add mov lock pop sahf mov cmpsb cli jecxz ja imul movsb or clc ret mov loope pushl (bad) and aam jo or jge mov (bad) js mov sbb mov push jbe faddl test (bad) shll jb mov jbe adc sbb loope or inc ss xor mov mov cmpl fnstsw add rolb mov mov stc lods add push movsl push mov sub fsubl inc divl test sub dec dec mov mov mov xor sbb (bad) xchg sbb mov and lret or lcall xor mov lret inc mov mov (bad) adcl jnp sbb (bad) mov mov cmpsb popa out and cmp std xor jb fsub sbb imull lahf hlt lret and mov aaa sbb sub (bad) int clc push sub mov inc pop dec add jl cld mov inc lds test fldt rolb mov movsl fildll and les (bad) iret pop dec arpl or in mov lock dec add sti cltd push insl mov outsb repz decb xchg mov inc sub push mov jecxz mov ja mov out es adc push pop jle mov ret mov push mov pop adc js test sbb ds scas testl bound movsb push cli ret inc xchg repnz out in daa mov les xchg mov dec xor dec xor sbb stos fldcw mov fstpl (bad) jne fs imul and dec xlat xchg sub add mov mov test jae popf fmul shll mov sub cltd sbb xchg mov sbb icebp (bad) pop sahf and imul cmc stc mov outsb mov movsb xchg adc mov add xchg aam rcll ljmp dec insb in jp inc test cmpsb cmpsb movl or xchg mov imul ret out loope adc mov fst add sbb cmp ds outsb loope loope mov dec mov gs dec fwait dec and xchg sahf orl sub push inc mov mov outsb out add dec test call arpl lcall mov push enter mov into mov lods das mov push (bad) jbe sub add mov or pop loope jo mov dec add xor and add and (bad) leave inc fiaddl jmp mulb inc mov rcr jmp mov sub xchg sbb fwait xchg sub mov repnz mov mov in push stc xor mov cmpsl push (bad) movups mov push xor pop mov inc jns es xor (bad) call sub sub mov mov inc cmp mov sbbl hlt mov dec push aad fldl pushl mull (bad) adc movsb push je stos movsl stos out mov bound loope hlt cltd sub sahf in mov fisubrl adc and andl xor ret dec into out lods in and (bad) push call into xor mov add test push add fwait xchg cmpsl (bad) lock (bad) mov mov test cmp or inc jl mov jge adc movsl stos movsb or lahf jmp loopne pushf xchg mov xchg push lock inc fld1 call mov adc (bad) jb aad outsb aad cmovbe les push pushf sub fnstcw and add stos add or insl iret rolb sub into pop test data16 es mov pusha xchg mov push mov (bad) clc bound (bad) pop sbb fisttpll popa in sahf xchg jmp aam xor subb repnz fs mov cltd adc out gs mov bound mov push lods je leave sub mov lock or push (bad) mov bound mov mov pop jle es mov mov movsb leave hlt pop aad out mov (bad) mov enter mov (bad) push mov mov xor test fsubrl cld scas ds outsb (bad) shl sbb dec push dec or (bad) mov ja (bad) mov icebp std pop sub dec pop mov mov pop out out xor notl lock xchg xlat stos jns js inc es mov (bad) sub dec lds push stos mov (bad) mov lahf imul dec jbe fcoms cltd mov scas lock adc mov pop imul and add fwait fwait dec mov and mov jg test mov xchg imul pop mov movsb enter dec cmp mov shll imul jp movsl xchg xlat divl sbb mov cmpsl xchg scas push add popa insl call and inc loope mov adc mull pop lock xor sub cmp cmpsl push add jge adc push es cmpsl int mov test mov jmp stc stos loope mov sub gs rcrl pop dec mov push pop aad enter inc xchg (bad) pop mov bound int mov pusha (bad) movsl mov adc dec add outsl sahf clc pop mov (bad) dec imul sbb lea jae push xor mov adc xor int xchg daa sub scas mov cmp sub xchg adc fwait stos int pop dec lea dec or sbb (bad) mov out inc cli lea ret movsl out data16 and add mov or test dec pop pop push dec aad xchg sbb sbb sub pop mov fstpl jnp adc mov xchg push cmp js jo dec int pop scas mov repnz jno adc xchg mov jmp scas outsl xchg loope mov cmp dec lahf stos and (bad) mov sbb into lcall mov jns jo nop mov mov pop mov mov pop push mov inc shll mov enter je in adc jns cmp sbb movsl scas add push clc jns cs sbb testl scas stos rolb push pop dec push pop imul cmp mov dec inc loope test sub rolb in ficoml inc mov push pop lods out mov shll adc scas daa xchg inc ljmp lcall test insl ret aas scas xchg cwtl adc mov or cmp cmp repnz jns add and and push sbbl cmp (bad) out ds mov (bad) aas mov icebp fcomps fdivs cs mov (bad) cmp dec sub in cltd sahf mov cli pop (bad) mov inc pushw sbb mov mov or data16 xor movsb mov or pop push mov push leave mov mov (bad) sarl pop pop imul insb sub push add mov cmpsb cmp popf adcl or movsl movsl and test jnp sbb aam negb mov imul fprem lea insl inc imul dec std aam (bad) mov dec dec xor repz test mov les mov cmp xchg fcomps cmp cmp (bad) jle cld cwtl mov adc dec mov leave mov rcll jecxz ja push (bad) cmp mov mov loopne (bad) shll dec push add cmp add mov test test sbb cmc inc stos loop imul pop lea push or in mov mov (bad) jb dec syscall cmp xchg and mov mov (bad) out scas and mov mov dec push insl insb pop out fnsave es mov push jmp ficompl and testl cs dec add mov andb lods mov push es movsl and mov into jns sbb jae pop enter lret ret mov bound cltd mov (bad) and pop call push es pop pop add mov mov pop lock in pop das and mov mov icebp pushf mov xchg fwait mov mov jne xor (bad) mov imul mov test push imul loope in xchg pop xor bound clc sbbl leave mov stos cmpsb arpl scas dec ret (bad) fnstcw mov ja jmp les dec mov bound sub jae (bad) xchg std (bad) out aad mov xchg les fdivrl mov jns pushf xchg inc (bad) rorl mov or test mov xor mov mov xchg cmp and push dec mov mov mov daa cs mov negb sub cld clc add movsb sbb jb enter pusha dec imul popf je mov mov or fsincos cmpsb pop sbb out lret mov or insl push imul pop xor sbb rcl popa ret out adcl mov jb fwait scas mov mov xor rorb mov cmp cwtl mov and mov lods dec scas ljmp mov sub pop sub into es push mov iret lds lods or jne fbstp xor loope inc lret jg popa shll mov repz push jbe xchg pop aas adc mov iret add mov frstor cmp mov fidiv sbb insb in in pop sti inc jae mov adc dec mov jno insl out mov push stc pop shlb adc cmp lods and mov mov icebp mov aaa cltd cltd mov sti lods mov pop jg dec mov rclb test mov gs imul aam push push mov cmp sub lahf ror in mov cwtl (bad) (bad) shr push aaa out sub test test movsl pop in and sub stos ds lahf jno,pt adc mov jp rcr fsubl xlat test (bad) stc vandps lods cltd add inc popf xchg cmpsb pop xchg lret add push jno loope daa js pop es pop mov mov and jb fs dec or rcll xor xchg test test dec mov decb daa adc cs dec pop mov repz iret mov cmc int sbbb inc adc inc ja fcmovbe loop or movsl fnstcw shrl xchg fidiv or mov sbb roll insl int inc mov adc mov xor jnp outsb mov cli sti mov test add mov lret pop push and out pusha add pop mov lret rorb xor movsb fnstsw push test in movsl cs jecxz fcomps popf lds xor mov addr16 jbe mov loopne inc rolb outsl movsl daa sub add pop pop (bad) xchg enter scas ss mov mov sarl mov jg arpl es push std lret rolb jb mov jno (bad) or xchg incb push xlat sbb mov (bad) call pop jnp pop nop mov cli pop (bad) sub in and mov mov push inc dec cmc xchg pop push inc sarl cmp mov test lock call or lock and pop dec ja data16 pop in mov jae out bound fisttpl dec jmp loop ret xor iret push pop incl sti cltd push out lret mov inc pop nop inc jp popf (bad) mov popa cltd addr16 test sbb leave mov fmul and add pop cmp enter jo (bad) mov xchg stc and xchg pop mov mov mov mov or ret cmp loopne and mov xor mov push mov jecxz sarb (bad) sub cmp mov jae lock inc or xlat mov in xchg (bad) movsl pop mov push lock mull fisttpl or and cmp (bad) push dec fnstenv pop push mov daa out push jns jne and movsl insb loope push mov mov mov orl mov dec and outsl adc xchg into mov (bad) dec sbb mov sbbl xchg mov adc dec stos in loopne jbe out xlat fdivs pop inc movsl cli test jns fst sub (bad) xchg imul cwtl add dec xchg in mov jl in pop mov cmpsb add and pop pop icebp and in (bad) movsl xor lcall cmpsl and sbb lcall xlat dec cwtl aad cmc dec test jnp pop mov and outsl out cmpsl (bad) jle xor xchg sti gs insb mov adc dec xchg ret mov push xchg leave sahf idiv dec push or test jo cmp icebp pusha das test cwtl mov and mov (bad) pavgw jae xor aaa outsl mov or leave mov pop add dec shrb in lods es xor xor int stos or cmp dec xor imul (bad) divl mov pop mov fidivrl or pop and (bad) and or cwtl xor push mov mov mov inc outsb push pop push inc push mov cmpsl sub push cltd out xor fidivr adc mov hlt push add loop scas sbbl test mov and mov cld movsl add jo mov and lock aam sbb popf mov imul push arpl pop sub in popa loop inc xor add sub mov ljmp inc addr16 insl out aam les dec cmpsb jb mov pop jmp (bad) aad push or adc lds inc dec xor or test xlat test mov adc (bad) xchg cmp inc call add in imul pushw xor jmp mov mov pop inc gs fs xchg mov es ret data16 and std push dec loope (bad) divl inc les xor out dec adc pop jl adc mov dec pushf pop xchg and popf push out arpl syscall out pop shrl int3 imul sbb adc mov mov stos andl pop pop mov daa loope incb inc in into dec pop cmp enter xchg mov movsl les rcrb (bad) pop mov bound mov loope scas jo icebp mov pop cmp (bad) cmp pop icebp cmp add pop xchg add daa add das cmpsl pop push fisttpll pop sbb sub pusha mov inc jmp push mov pop cmp or sub and sti mov sub movsb cmp inc movsb dec mov xchg stos (bad) fucomi add sub insb and fsts lea or xchg lods (bad) dec pop jb push inc cmp nop mov ret jbe cmp ljmp test push xor mov je call stos cmpsl mov push dec (bad) fidiv mov cmp dec lret pop stos fisttp push ficom bound scas test push shrb cmc (bad) mov pop sbb dec outsl aad repz jp js in bound ss daa je (bad) cs pop test stos xchg mov pop xor push cli addr16 or mov add push (bad) in stos and pop xor aaa push std jbe adc popl movsb fisubl test xchg adc (bad) int movsb popf xchg mov inc pop pop dec push call push sbb shl rcrl cmp cmpsb mov push daa cmp mov rcll (bad) fmulp repz test (bad) dec or mov mov xorl jo movsb pop je aam jo mov pop cmp sti add or lret push jg ljmp jge rorl test mov outsb lods add pop sbb jns jg mov loopne lods dec inc xor mov stos outsb mov inc mov push lods in and mov mov (bad) outsl loope (bad) cmc jl andl and aas push fidivrl cmp movsl add pop xorl insb pop orl mov lcall sbb shll movsl push jo mov call popaw and fcmovnu fs xlat popf daa (bad) stc lods (bad) sbb xchg and push cs inc mov fwait mov push jo stos mov test call xchg lea mov dec inc adc mov sbb fs call push (bad) xchg push sub cmpsb and push mov (bad) jnp ficom xor xchg js fist mov mov sbb les or inc mov cmp imul push adc xchg mov xor mov sub test (bad) js movsl mov mov or mov ret mov test rolb fbstp xchg xchg mov mov cltd mov addr16 add stos sub shlb fmuls rcrl daa or leave cmp fsubl or jbe pusha jmp push xor icebp push inc mov jg iret jns scas and lods dec dec fs jmp mov dec frstor mov push test mov dec stos push add imul jnp scas mov cltd sbb rcrl add mov mov pop push lea xor stc jns and lods push lret call xchg dec push mov or inc sub and lods pushf bound sbb mov jl movsl arpl push lret xchg popa jmp hlt gs pop adc imul cmp mov push stc jb mov mov sub lds clc push lret fbstp and inc nop mov lods mov jl ljmp in aad xor jne mov (bad) sete addr16 mov xchg dec xlat sar loop mov out hlt xchg mov pop add roll andl (bad) adc add dec mov jne inc sbb mov sahf push pop xlat cmp pop jl std mov push lea popa pop mov jle aad in xchg lods cmpsb cltd push push inc cmp jp or xchg mov cmpsl scas sbb aam and mov (bad) mov push hlt leave mov test mov jnp daa lods mov mov sbb in or mov push mov xor pop mov gs mov mov push stc inc andl (bad) popa test inc iret sbb dec lds mov mov pop repnz inc or and push cs pop jmp pop sub dec ret aad add xchg out das xchg mov sahf and xchg ror bound js clc push fstps stc mov mov mov push mov loope mov je push sti mov sbb pop hlt (bad) int inc jecxz mov xchg xchg add daa stos cmpsl mov mov loopne sub lea test xchg js (bad) jmp mov inc mov iret sahf mov test sbb frstor sbb mov lods mov sub jb bound jmp faddl nop ret inc jns std mov fdivrs jb push loope je mov and push mov lods push add movsl jns inc mov push insl mov jns ljmp movsl xor cwtl mov test jg adc push out fs and mov adc cwtl mov xor loopne pop mov jo or push jbe cmp imul sub cmp repnz inc cmp xchg inc icebp add xchg add mov pop mov mov push adc fldenv scas lods mov xor sub mov je xor stc (bad) mov pop add mov inc xor loope fldcw and mov and jmp pushf push sbb mov pop pop test cld add cmpsl int gs cld push add les or popf push push bound mov push cmp xchg (bad) int and nop movsl mov das and andl inc ljmp roll mov jb jns lea jne testl mov or jns stos adc enter mov adc out mov push push es push rcrl xlat mov sbb jns ss ja popa mov inc out xchg jae pushl imulb or mov xor sbb xchg daa sub imul xchg sbb xor jp mov cmc xor dec mov call mov pop jns shll or ja pop lret jle and dec adc scas fldenv xchg sarb dec enter mov xchg jp or notb in sub push (bad) sbb mov into mov incl (bad) jg outsl dec or lahf sti mov dec data16 mov mov cmp clc loope data16 lahf adc jmp push jno jo cld pop scas pop sbb subl mov scas ficompl mov xchg mov bound mov mov pop stos pop or mov dec pop jl sbb pcmpgtd fsubs xchg mov ja inc jl fcomps imul or mov push xorl sti add sbb jecxz add dec shll cmp push daa call xchg shlb and scas (bad) fs pop dec inc adc adcb stos mov mov mov negl jo movsb stc call test inc aad int3 aaa bound dec cmc mov or cmpsb pushl pop cli jb xor js pop mov iret mov fmull inc movsb call fildl dec jge popf jnp stos jp mov enter xchg (bad) xchg hlt mull mov test mov jns (bad) adc dec movsb xadd aas ljmp mov sbb das sbb and mov mov dec or push xor pop pop (bad) dec mov lret jmp popa leave mov cmp lcall sbb jp mov xor movsb or lahf mov movsl movsl rcrb dec cld mov jne lea in push xchg mov dec imul int3 mov jp or mov lods or jae stos out pusha xchg mov arpl out xor inc mov sbb xlat push bound repz insl mov (bad) imul dec add js test xchg jnp mov mov out das outsl add inc push adc (bad) in inc and push stc mov out sbb lea fstpt sbb cmp stos notb sub loope add iret xchg mov and or insl push loop call test lahf stc push jge test pop fdivl or insl aas xchg mov push fmuls xchg ret cmp jne push xchg push or push cmp jns cmp pop dec roll fwait mov and in jns xor ja movsl or out cmpsb cmp mov test inc fwait rcr ja pop cmpsl inc jae int lods test xor push decl stos mov sub or popf or inc sahf mov sbb mov pop cmp dec mov js outsl idivb sub push dec jae jns arpl sub mov adc add push mov pushw push je scas es mov or jl xlat imull cmp adc cmpsl jns in mov xchg pop stos fimul mov mov in inc mov sbb fcos loopne jg mov cmpsb mov add mov dec pop test and and aam cmp push dec or scas or mov mov fsubs pop jns cmp adc dec leave out mov dec xchg mov movsl daa jle (bad) aas cli loope or mov call sub lods scas movsb mov jbe fidiv das push mov push clc jg adc or pop cmc add adc test inc outsb adc test sti popf mov adc mov push add xlat push inc fmuls ret and movsl mov fcompl sarb ja mov sub aam loopne jbe lcall sar jmp sub sbb in sbb and sar and mov fcomi (bad) dec mov mov and pop sbb pop sub jns dec inc xchg mov ss mov pop cmp cmp push sub rcll pop lret jnp jle cltd out scas jg bound enter pop or cmp fcompl pop adc fidiv jmp mov daa in push daa mov inc xor xchg inc (bad) push pop and xor daa sahf (bad) cmp pop mov insb je mov jnp bound xchg and push jb mov fbstp lcall cmpsb cmpsl pop imul mov arpl ja pop or imul pop test xchg (bad) ljmp stc dec dec mov fildll je dec sbb lret mov ja into pop shll sub imul movsb cmpsl imul adc mov and hlt test fistl clc jo addr16 mov out shlb imul and in fs mov (bad) out mov ja adc fcompl scas jne and jge fstpl mov push enter aas sbb lea cltd jns sahf mov and jnp test xor (bad) xchg xchg jns mov and in movsb sbb inc push adc in jecxz sti and inc or push inc das sub push in sti and sub scas cmpsb int imul and xchg outsb mov jg (bad) dec cltd pop iret mov mov pop jmp dec fwait (bad) shl popf xor mov (bad) jle mov imul mov repnz push into loopne out adc sbb rcrb lret lea lds sub sahf inc jae mov and mov lret lahf das jmp insl in jbe cmp mov popf fs pushf mov test and inc ret mov imulb push add dec cwtl cmp bound dec mov xor fldenv int scas aad or lea push xor cmpsl in lcall stos cmpsl popf ds mov push dec add outsl cmp cltd sub das push (bad) iret movsb xchg daa sub ljmp mov cmp mov push dec getsec mov decl mov mov shrl and jns mov mov movsb call push cmp pop movsl sti or in adc (bad) sbb into (bad) xor sbb and test fnstcw ret shr imul nop stos xchg fwait fwait mov mov shlb cwtl inc clc (bad) mov pushf mov je cmp sub (bad) xor cwtl dec cmp in xor xchg dec push sbb addl mov sbb (bad) data16 repnz cmp mov xor dec out test or inc push xchg sbb or nop es adc (bad) arpl je bound in loopne mov xorl and xchg (bad) lea pusha add js mov bound dec lret pop pop sub (bad) sbb and mov mov xchg pop aaa cmp mov insl mov inc pop test inc xor jge subl addr16 insb xchg jnp rorl data16 mov cmpsb and das repz mov xor add bound arpl das es mov push mov xchg gs pop xor cmp aad mov cld push clc push pop leave fwait mov dec or mov sarb mov and mov dec mov mov shr arpl push cltd hlt pop push add fwait nop or cmp shrb sahf jnp and aas mov xor mov (bad) in jne sbbb push and jns scas sub xchg xor cmc cmp mov inc test repnz in sbb or insb out or adc pop cmp (bad) mov fwait lea mov stos xor scas push mov pop pop call push lahf je sbb or out cmc testl popa dec cmpsb pop jp lods dec mov icebp out xchg stos stc cwtl xchg and cmp mov outsb mov add cmp popa imul jmp mov out insb inc je cmpsb and jmp stc mov sbb mov (bad) mov sub adc push xor and das out sub insb push leave xchg in lret jns ret pop xor popa and push repz inc adcl or sbb add scas in pop lods xor mov adc mov cltd cmc cmpsb mov pop sbb jb lock adc cltd push subl add loope inc repz pop in jmp adcl push cld mov mov adcl sbb clc adc jmp pusha sbb movsl movsl push js popa shl cwtl test sub outsl scas sahf (bad) cmc push popf adc ficom movsb ss jle xchg jo inc stos xchg and xor push outsb add ljmp aaa out mov pop in add xchg xchg cmpsl dec lret daa popa ret dec (bad) mulb adc mov bound xchg mov or ja xchg xor pop (bad) mov les cmp xorb int3 fldt ljmp rorl jle mov loop out jns jbe pop xor jae stc cltd scas jge mov addr16 or call xchg hlt loop arpl adc fisubrl push popf or in sbb ret rep (bad) jb adc mov sahf adc mov or in mov inc mov mov aam mov (bad) arpl mov (bad) xchg dec or xchg mov shlb cmc int shll popa mov mov mov test lods test cltd cmp mov icebp pusha mov in loope pop bound and les adc lahf pop (bad) icebp sbb arpl pop pop pusha add (bad) aad nop cwtl xor test sub (bad) ret outsl mov pop movsl add js sub xchg jnp jnp es xchg rclb xor xchg arpl dec add sti lods mov sbb repz cmp sbb jns fwait mov jle mov inc pop aas add add loope cmpsb mov cltd je push add adc xchg lahf mov and ficom mov jns jl xchg rcrl sti push jecxz xor outsb push xchg mov enter and imul add inc xchg adc daa sahf popf jmp adc jae sbb addl push movsl fs add jmp mov stos (bad) fstpt es lea iret and div add mov enter scas mov mov es mov rcrl pushf imul jne and les adc xchg (bad) (bad) mov das rolb out pop adc les cltd lahf cmp mov pop mov and test fwait imul add in push call ja jo mov (bad) jmp aas cltd fadd xchg or std pop mov test push mov or arpl in mov mov sbb xor (bad) popf mov js in sbb fcmovb and mov inc cmp in sub inc push mov fstpt push xor mov rol lods cmp push (bad) aad movsb stos inc jo and adc push xor movsl cmp testb rorl dec push dec add repnz mov sub mov jecxz aaa mov test in cld jg cltd adc cmp pop or mov adc fucom rcll int push scas mov xchg stos test add sub std cmpsl popa inc and out jmp mov jnp lds push pop aaa and loope,pn (bad) mov inc lods push dec sub jp pop and ds movsl repnz pop shll sbb imul xor ret cmpsb push rol notl test xor inc fcmovnb mov in push jo and ss sbb rorl xor nop popa pop imulb aad stos out cltd test enter xor dec or movsb lods in loopne mov push add mov xlat mov dec adc pop cmp mov cltd inc lahf jmp cld gs ljmp enter inc pop fdivrp insl inc pusha movsb dec (bad) add mov mov lods cmp xor push mov insl pop mov mov push fisubl add ret loopne cli pop jecxz movsb (bad) outsb jo popa je lods mov jns xchg mov mov push cmp adc mov inc jl (bad) (bad) cmp cmpsl stos ds dec jmp jg repz sti pop rolb sar mov sub adc cmpsl mov popf sbb push js jmp xchg mov pop mov pop fdivrs bound daa xchg push xor mov push mov mov (bad) xchg icebp imul scas add cli jg dec pop xor sub push sbb pop mov les neg mov (bad) clc jne sbb xchg sahf and pop pop sbb inc popa pop or mov jno adc and ret repz sbb and push pop cmp jl add insl out into daa leave fidivr inc pop aaa mov push repz pop add xchg dec or push mov out inc or dec add inc nop sarl push cld jp cs stos mov xchg xlat mov xchg stos or xor stc in bound call cmpsl (bad) cmp xor mov xor sbb cmpsb push mov mov pop daa cltd mov xor pop push ljmp pop jo jmp aaa inc loope mov jg dec addb push mov dec adc xlat repnz daa mov out pop jnp mov jnp pop outsl mov cmpsl dec cltd cs out inc je es jmp jmp pop repz test lea out (bad) std mov add rorb leave mov jnp jmp lcall mov pop push xor sbb mov mov mov hlt pusha lock xchg shlb cwtl push in mov insb mov mov push aaa call std js mov sbb or ja cmp jg xchg mov inc mov add pusha ja lods push jg xchg iret cmpsl mov or sahf jecxz mov push incl mov mov xchg adc loopne mov jg jmp mov jle fistp cmp int3 mov mov fnstsw es adc shll lock and arpl pop lds xor ret add nop cmpb mov mov jge sti pop cmpsb jns mov and test out mov cmpsl cmp mov add mov cmp jb sub js sbb push sti pop hlt xor ljmp lock fsubs push mov out leave xchg loope stos movsl (bad) fnstenv jb mov mov mov xor jns lcall in mov and pop sbbl adc roll dec imul mov or stos dec fs mov pop mov fisubr lahf repz data16 jno les xor mov push bound movsl push mov shrl aaa and jno inc popa leave loopne in xor sbb mov dec and in pop fsubr outsl shr cwtl pop lods xchg mov test mov rcrl mov test sub add mov cld xchg lods add imul std test push jmp pop inc iret dec dec adc loope mov and nop shlb mov (bad) std adc mov cmpsl sbb and loope sub testb jnp popf and cmp pop dec icebp pop lret inc mov jno repnz loopne test adc push jp push cwtl xchg imul test mov inc inc fs into and les pop cmp inc push jnp insl sbb jno enter jp xor (bad) xor pop int or dec mov jnp mov jae dec (bad) cmpsb cmpsb adc (bad) (bad) lds test mov fdivl adc fwait or mov jne and (bad) pop jbe daa insb jge rol inc fcompl lcall sub adc mov xchg cltd xor std cmp push xchg stos and (bad) dec rcrl movsl cmpb sub iret test rcll mov push push sbbl adc mov mov repz and add ret xor xchg (bad) mov aas mov popf mov mov jb in or jne shll adc xor icebp mov mov sbb test mov mov pop and lret orl mov lock icebp xchg sub mov xchg dec incb (bad) mov cmc inc ret mov std cltd out (bad) push pop leave fiaddl pop pop pop out pop loopne pop stc jo xlat fadds in addr16 out pop xchg out pop jns stos movsb xchg bound mov sub decl push andl pop sub inc fldcw jle xchg inc daa push inc adc fldenv adc sbb adc dec and dec jg divb mov push mov add mov jmp push mov inc jp xchg sub dec (bad) jae (bad) out mov inc loop in inc loopne cmpsl ljmp xchg inc scas es sub scas fstps (bad) xor mov movsl imul xchg loop adc ljmp aas mov sub pop sbb pusha lods in test push loope push mov cmp mov jnp clc jne or xchg into insl dec roll cmpsb or jge fsubrs dec cs cmpsb hlt bound in xchg js push jge fcoml and clc fisttp mov int3 int lret adc push cmp xor test into push mov sbb adc jmp jnp fist mov lahf push mov xchg and jo out xchg xor xor and cltd lcall xor pop neg int hlt popf fcmovnb jb mov lahf std mov jnp dec test mov lcall mov pop cmp mov (bad) into cmpsb mov mov push hlt mov aaa loope iret in mov mov nop xor jnp je std pop in daa sub rclb dec cmpsl cmc cwtl mov mov adc std xorb dec add sub std cmpsb popf pop cld mov inc prefetch mov jecxz dec dec add jns outsb mov ds add popa cmpsl fdivp popa pop jge shll jb mov hlt pop aas sbb jae pushf mov repnz push stc and mov mov ret mov xchg mov adc pop push sbb adc adc xchg ds pusha jmp inc loope inc cltd adc pop jg pushf xchg lea imul xchg in add pop fisubr int3 add and rcrl xchg mov pop inc ret imul sbb addl cwtl fldt jb in ja and inc add pop jne xor mov mov push push sub addr16 scas movsb loopne iret xchg shlb or mov sub pop sbb jns iret pop xor fwait cmc pop mov out jo icebp arpl adc lods xor mov add push xor fldcw mov arpl ret mov jecxz rcl orb cltd and mov dec mov mov jns mov cltd cmp rcr das shr loope cli cltd pop leave or movsl fistpl and lret cltd adc sbb scas movsl (bad) jb cmpsb mov sbb shl sti ljmp (bad) pop mov cmovns mov and call pop shlb mov fs add bnd jae movsl loopne arpl push movsb loop stos (bad) insb sub pop shrb mov mov fidivr adc ja jo xchg dec rol (bad) xchg js push andl js lret and fucomp aaa sub or movsb and in push movsl xlat pop repz cli pusha loop imul dec in in add or inc call xor and cmc test test xchg pusha mov ljmp cltd stc and bound inc std add insl lahf loopne sarb bound mov and mov or mov fwait nop cwtl es sub fild mov cld loop sub mov sbb ss mov and cmp cmp mov call movsl imul jecxz mov push (bad) clc jns lods (bad) jge shll cmc and sbb cltd mov adc movsb mov imul jecxz lcall test push decb ret sbb bound mov ljmp xor mov lcall and mov xchg inc mov lahf push pop mov cmpsb push loopne ret inc xchg jp and leave mov xor mov mov xchg jnp rolb setge push jp fsubl fldcw mov add mov lcall leave cmp (bad) adc add cld jmp pop shr xor (bad) pop stc bound aas or cwtl cwtl sub das cmp and insl (bad) cld fnstsw fwait or and jne clc cmp mov pop fisttp (bad) xor movsl cmpsb stos rcrb (bad) cmc jge (bad) std and pop push sbb pop (bad) pop add lea mov lods sub mov je add pop inc jne xor inc repz inc push push (bad) popf add (bad) push iret movsl das pushf daa mov faddl cmpsl cmpsl cmp (bad) adc adc inc fstl cmp ljmp bound movsl sub add xchg int3 lcall or dec pop cli out in mov (bad) fs (bad) shrb mov mov insl push cmp (bad) (bad) jbe fnsave cmp (bad) leave aas dec mov xchg cmp mov jge outsl jns (bad) jmp push cmp push and repnz and lea push jne pop (bad) repz mov mov pop xlat shlb loopne stos sub mov insl sub rol sbb pop neg dec mov mov pushf lret decb (bad) cmpsb bound (bad) jmp mov test clc push idivb leave xchg lret les pop push lods dec (bad) in movsb xor mov and imul inc jnp in cmc daa mov sbb add lea jmp pop pop js mov pop scas and pusha cmpsb mov inc lock sbb mov sahf jp aaa jbe and mov test adc incl and repz bound adc lahf pop pop fldt pop xchg (bad) pop mov ret lods data16 dec xchg iret sub pop adc cmp and test sub push pop push mov pop jl call bound mov mov ds pop pusha (bad) daa sbb dec inc es push pop pop arpl andl mov cmc jo jbe pop mov (bad) out dec or insl push inc xorb out imul or mov add push mov repnz mov loope jge add cmp (bad) (bad) hlt bound push stc mov inc sahf gs rcrb mov inc pusha cmp push dec out mov daa jns push pop jmp (bad) sahf mov fabs stc les pop andb mov mov jmp or in loopne pop cmpsb stc dec mov jge outsb andl bound jmp (bad) div inc cmpsl pop (bad) pop sbb jecxz cmp pusha ror and scas (bad) sarl or ds inc push pop js daa add or add sub hlt lret test rorb mov push jnp xchg xor inc inc ja jo dec inc sbb push cmp lea add jo std ficompl mov sar xchg incl (bad) mov adc out push mov bound leave (bad) popa mov arpl sub leave lock test ds jmp cmp and out repz loope fistpl xchg jge adc xchg (bad) movsb adc xchg out rcrb lds sahf (bad) bound sub aas push rclb dec and mov sbb fidivl (bad) stc aaa bound lret lods cmp rorl push and jo leave loopne gs lahf (bad) sarl scas (bad) dec ja jmp shlb jns xadd pop inc popf dec stos xchg mov xor fildl movsb inc popa bound mov push sub lods mov nop aaa mov rcr mov mov mov repnz int pop cmp ss mov inc out enter int bound imul push add nop mov mov adc add xchg push xchg push mov mov icebp lods mov pop scas cltd imul repz out loope inc mov loope out mov pop lock mov cld mull mov push leave xchg shrl pop add in mov sbb movsl mov mov aas xor in mov nop xchg adc data16 cltd sbb cld scas lods rorb out addr16 mov popf mov or sbbl shll sub arpl mov xor mov adc and ret mov jmp repz out popa dec jo or xor mov mov loopne cmpsl mov adc std push mov or add rol sbb mov cmp xchg and xchg push add xor sub imul aaa xchg lahf jns rclb cmpsb dec sub mov movsl add inc and sub inc pop (bad) mov xor js stos lea stc lret (bad) dec pop movsb jo imul test dec sub jl iret mov stos jns lcall push and movsl mov das imul mov test add jbe pop sub xchg push shll cs add mov int rcr insb loope,pt xlat cmp shr pop imul inc add lock push out mov int3 mov into jo loopne adcl dec popf jmp inc test mov leave in insl bound test xor xchg std movsb test data16 jl mov mov mov loope xor mov push call icebp mov call inc or aas sbb imul pop cmp add mov pop sbb sbb das and cmpsl mov jecxz jns jg mov mov and mov jg outsl cltd mov popa push add sbb mov mov aaa popa scas test jecxz mov mov mov mov lods mov mov fisubr mov das jecxz jne out cwtl test mov mov outsb (bad) xor push and mov and or cmpsb adc xor sbb cld scas je mov test mov sub (bad) cld mov mov jge cmpsb pop pop sub push scas sahf popf lods sub pop bound mov shl jg out loope mov fsubs adc cltd mov fildll stos xor jnp (bad) (bad) je pop add iret mulb pop arpl mov push inc or lock jle clc les xor xchg andl fpatan push jp jl ljmp mov movsl sub pop mov (bad) dec pop xor push pop loopne lds mov (bad) adc ret jle or jge rorl int jns sbb fldcw sahf lock bound adc inc jle xchg xor jge dec js dec lods dec in pop enter sarb inc outsb das adc mov jecxz pop cmc sahf dec jne in adc scas movsl mov jbe clc add sarl movsl jmp int (bad) flds popa stos arpl fnsave adc push xlat add movsl push and in push cltd cmpsb pop les and bound (bad) xchg and cmc jo xchg cwtl cltd loope mov sub inc out adc and push mov pop mov fwait fs add aam adc ja stos in imul cmp xchg inc xchg mov or aaa sbb jnp,pt in pop push stc lds inc and sub movsl cmpl aad adc xor mov js xchg (bad) adc movsb and sub push fiadd sub (bad) shlb (bad) dec push aad das mov popa out xor push xor mov ds add or (bad) mov mov jle xor pop mov sahf pop ret das rorl cmpl jg mov inc fldt mov xchg add cltd call cltd pop lret xchg ljmp (bad) hlt sub add lret movsl ret inc pop leave add push mov adc xchg mov pop (bad) (bad) or xor nop loopne das mov and ljmp or cmp call (bad) in dec add mov push inc dec fdivs mov cmpsl xchg out mov ljmp cmc or icebp popf and adc push mov xlat cltd mov mov inc ljmp pop mov imul add lahf lods (bad) push mov divps xchg and add ret and mov fisub es push int3 lock les xor mov dec fmul test and stos js push ds pusha pop xorl add push jo dec gs pop push mov mov cmp lahf adcl xlat imul mov pop dec cli dec sbb push aas sbb mov or imul mov (bad) notl cwtl jb movsl ljmp fsubrp mov mov cld (bad) xchg or sub mov push or mov xchg out xchg mov push inc lahf testb push and scas adc mov dec ret (bad) xchg or inc loopne in movsl fcmovbe insb and pop enter out ljmp pop mov fsubrl cmpsl and dec mov scas fisubr mov popf mov inc inc (bad) sub sub xlat mov cmp mov push imul in loop jb (bad) test cwtl cmp pop in jns sub and add lret scas push dec xchg xor add in daa sub insb jge fs push jns lret dec mov mov (bad) cmp xchg lock leave mov lea fcmovnb xchg push ret sub in cmp xor mov cmova or imul icebp imul outsl (bad) mov fwait mov repnz jmp xor inc xchg sahf and out popa add xor jg mov pop loope out jo and mov pop mov ss js roll rclb sbb xor fdivs push std repz mov das mov inc adc andl jae pop jne mov inc xor xchg movsl arpl dec add (bad) pop mov lret mov sub jle into and inc mov mov in dec and les cmpsb dec mov jns sbb jno cltd dec cmpsb mov (bad) cmp jg cmpsl mov pop call or mov fdivrl push shrl mov frstor and ljmp push loopne subl inc cs and call outsb dec movsb jnp (bad) hlt movsl mov xchg xor add and cmc cwtl lods icebp add movsb jecxz aas fwait bound data16 in or bound mov pop fcoml fstps (bad) int3 push stos mov out cld jbe icebp imul insb mov mov mov xchg les in inc adc repz cld and test lret test scas mov orb out mov in xor jecxz adc mov adc mov js dec mov mov xor rolb in lret subb add mov mov xchg sbb pop sbb cwtl adc adc mov out ljmp xchg mov mov inc ret inc push test add test sub sbb iret cmovae mov sbb in add test jmp cmp int xor (bad) lods lahf nop mov mov dec shlb push test xchg out lds shlb mov jp mov sti es and mov ret mov sarb dec and xlat mov out imul inc cmp shll cmpsb (bad) xor add inc jle jecxz or loope imul mov cmp movsl pushf xchg sub lcall mov or push jo es pop test shlb jbe push mov sti es out in mov les mov jo pushf and pop sti repz movsl mov mov cmc jmp test mov jg or out inc test jns popf mov mov push add cltd jb pop cmp jne (bad) mov jns shll out and js pop sahf inc out cltd fbstp jo mov dec subb push stos loope jmp push dec insb jnp inc mov fs adc (bad) jns fwait (bad) imul fwait dec daa int mov and sbbl jecxz mov and (bad) ljmp leave mov addr16 push ficom in cmp addr16 bound push xor (bad) loope lea cmp loopne in (bad) mov data16 xchg adc mov sti mov bound mov mov xor fdiv test pop (bad) dec sub xchg adc mov mov push xor shlb cmp xor add adc roll or lcall insl fdivrl push pushf inc stos enter stos push xchg cmp test negb mov xor imull (bad) push pusha inc pop cmp icebp bound jne pop loop xchg dec loope pop cltd mov jo xchg lret jns cmp dec (bad) sub mov addr16 scas aaa mov nop pusha sub out and cld mov push (bad) xchg sbb jns je insb and addr16 push inc repz js aas aad xorb lock sahf imul jp pop ret push mov daa repnz mov loop pop pushf loopne cmp mov lds pop and lret xor daa sub xor icebp jns pop pop push fildll int3 (bad) mov sbb xlat pop lea roll or add inc cwtl call cmp pop mov fcompl (bad) push pop aas or aad jnp je rcll mov push jne sbb scas add ret add (bad) movsl sarl bound call call cld sub gs adc movsb push insl mov mov lods lods and mov cwtl aam fistpl lahf mov sbb dec dec and sub int3 mov inc movsb aaa fsubs xlat dec mov imul mov movsb sbb leave mov jne add cmp (bad) in cmp sbb xchg mov mov sub mov and sbb (bad) mov pop dec cmp xor pop mov push mov and in jno push rorl stos movsl stos mov sti add out mov or inc mov and repz lret add in (bad) (bad) ret pushf add cmp jge das fdivs ja stos mov inc (bad) fwait and mov pop jl lret adc jge push mov mov scas lods jecxz movl movsb mov adc dec add xchg mov and cmpsb sbb mov movsl mov cmp jns push pop in int3 in sub test jl sub scas sub cmpsl xor jo add jnp mov fwait pop jp stos in into xor mov pop stos enter out add jns mov (bad) mov std faddl fst rcl mov lds pop push nop push inc inc (bad) mov adc fwait mov push scas push mov sub fbld mov mov aam xor mov roll (bad) jb pop lcall adc mov (bad) xchg and sarl sub pop gs sub test jns and stos mov fdivrs dec mov lcall test mov dec pop mov cmp mov in mov mov xchg shl dec imul es cmp (bad) dec enter out pop mov sub mov rclb sbb and lea arpl jb cmp mov repz adc adc imul fcmovb xchg mov push jge dec and call in out mov jle mov push dec and mov pop aaa or rclb dec cmpsb jbe lods rorb std pushf mov dec rolb jbe out cmpsb mov or or push adc jl sub xor push dec and dec mov sti sbb mov mov xor lret pop aam das repnz jp pop out cmp xchg lcall fcom pop or mov adc bound pop mov adc inc ret aam cmpsb xor or push jg scas roll es aam inc mov leave xchg pop bound (bad) cmp imul cmp push psrlq and cli flds or movsl add shll dec andl shr push into rcrl push xchg pop or les imul or cli sbbl addr16 mov push and icebp xor sub loopne imul add xor and andl push jecxz xor loopne jmp jge arpl add add xchg fcoms pushl add sub test fwait push fcomp nop cmpsl cmpsl in rcrl sbb bound fsubl (bad) cmp out add inc repnz sub add mov jno mov adc mov jmp dec xor mov mov push add (bad) (bad) jns pop jle shll icebp push cmc pop mov shlb mov lcall cmp xchg sahf cmc test xor and dec stos movsl fisubrl repnz mov mov (bad) push and subb in lahf xchg dec cmpsb (bad) aas mov cmp insb aad xchg xor sub mov xchg dec inc sub adc movsb add adc ljmp lret mov pushf adc fisubrl fnsave mov dec jbe mov ja mov std and fdivs es aas xchg xor call mov mov xchg icebp cmc or in mov mulb sti pop xlat or mov sahf stc ret movsb sub imul jle (bad) adc cli pop mov push stos pop (bad) movsl das test cmc mov xlat (bad) cmp (bad) cmc insl cltd fistpll sbb mov inc les xchg cltd insl push ret cmp mov cs mov sahf and movsl cwtl mov frstor bound xchg xchg out mov add sbb jge jecxz rclb cmp cmpsb jecxz sbb push lret fcoml dec xchg in or pushf arpl mov popa out mov test mov pop cmpsl mov push nop inc fistpll and push mov or push out dec (bad) dec pop mov iret jae mov or jb jg mov adc sbb mov or pop test cmp cli call (bad) inc dec in pusha enter and lahf sub inc pop cmp pop sahf inc clc jmp jb rorb pop popf push mov enter add cli pop mov mov jle shll cmc aas jns cmp lcall les sub aad ss add gs mov popf imul sub sti mov mov out outsb orl movsb jle lods dec cltd cmc bound int cmp cld cld mov sbb ljmp jns adc xchg repz das ret mov shll mov xor (bad) movsb mov andb add sarl mov negl aam inc push enter push xchg (bad) mov push adc lret xchg push mov cmp mov (bad) xor imul sub aas fnstsw nop push add jle movsb mov bound and std pop mov ja or lcall cmp and xor and mulb test push inc in stos and call ds movsl push fsubs add inc or mov mov mov pop rorl cmpsb mov jo xchg add mov aaa xchg jns cli push (bad) xchg test jmp in loope in dec pop dec xchg adc mov push aaa mov fldt out fist stos pop aam ficompl sar es (bad) mov mov push das mov popf repz push or aad ficoml add int3 jbe dec xchg (bad) hlt (bad) mov sahf pop dec nop (bad) dec add adc repz inc push cld mov sbb lods add adc scas cltd enter or loop push aam movb aas add (bad) adc adc inc rcrl cmc loopne fnstenv mov loope and cmp test movsb or test test daa cld pop mov mov sahf xchg mov inc (bad) loop pushl mov mov xchg dec push int3 mov dec popf adc loope sbb stc mov jb add mov push fsubr insb rcll cmp lock scas add mov xlat jl int jg imul arpl outsb in mov mov mov jno xor cmovae shrb test mov popa test xor in push push pop dec cmc jne mov jb inc cmp mov imul push mov mov les addl or mov push out insb sub push jge jb xor mov xorl mov je dec add push mov scas ret or shl fcomps insb mov jno cwtl das mov cmpsb lahf mov lods mov cmp dec push add mov mov out inc dec dec rorb nop mov outsl xor (bad) call mov push fs in cs pop std jne xchg inc xor lcall daa inc imul mov frstor cwtl pop or mov dec aaa adc setne dec mov adc push cmp xchg lock les pop les mov jmp lahf xor mov cli lea fdivs (bad) daa dec movsl js mov (bad) cmc sub outsb iret dec repnz pop (bad) scas adc mov mov ja in sub inc cmp sbb int sti popa push push lret imul flds adc pop mov lods cltd aad xchg sub subl mov aaa shrw das sbb cmpsb pop cmp mov cld dec mov inc and ss (bad) jbe daa xchg fnsave cmpsb les int adc mov sub cli out sub daa mov cwtl add inc je and sub loop pop das sbb in mov and shlb bound cmp mov pop imul push mov scas add mov sbb pop in sub pop in rcrb into sbb fdivs lret adc mov mov rcll and repnz dec pop cmp dec jns mov (bad) ss (bad) pop (bad) mov sub fcoms scas jg pusha push and (bad) sub jns icebp lock sbb cli push mov inc cltd dec out clc or ret dec adc xlat iret and divl sbb push lea das inc pop xlat push rcrl jge xchg pusha lods (bad) int3 hlt mov bound pop mov mov or gs xchg cmp ror js call in xor and pop or xor movsl data16 (bad) mov fidivr jecxz imul pop mov mov inc jo out cltd push or push aam (bad) xchg gs sarl gs xchg sub pop rcr add pusha out adc movsl sahf pcmpgtw xchg repnz dec movsb mov aas sbb jns mov dec bound dec push sbb enter rcll inc bound pop (bad) cmc leave cmpsb data16 js incb mov xchg cmpsb pop sbb daa pop pusha mov mov inc sub xchg insl dec xchg pop cmp adc cmpsl inc bound rolb push pop mov cmpsl (bad) pushw fbld jp or (bad) cmp pop andl leave mov data16 pusha int or incb jp rolb xlat pop mov bound sahf mov pop pop cli jmp imul in fs push cmp cmp jnp sarl jae jne rolb movsl mov jno fs lcall call mov fdivr mov mov sub push jns stos and inc adc mov mov imul mov xchg lds xchg out in xchg les subl adc mov mov inc adc push std lahf xchg fcmove mov insb xor jecxz jne imul cmpsb mov push sub and fs lcall adc leave mov movsb mov xor push xor fstpt mov xchg clc aas enter in movsb push lods pop dec leave imul stc push stos test addr16 xor fiadd sbb popa outsl loopne popf xchg inc cli in mov pop ret outsb ljmp mov mov popf or jb mov enter loopne cmc mov xchg lds js test xlat cli and mov (bad) int stc mov push aas inc arpl iret test mov sbb bound incl in call pop jmp (bad) sbb fcompl or sahf mov xor fwait divb jb sub adc add cltd xor xor jecxz xchg mov pop (bad) lods pop mov aad (bad) mov movsl sub or mov ret scas adc xor pop xchg ret and mov lods mov test mov bound scas xlat testb fidivr arpl add mov (bad) imulb add fldt pop lods cmp and cltd iret stos xor push movsl jb lods jmp imul jle mov inc jecxz mov stc clc pop mov ja imul sbb jg movl sbb xchg and add lcall mov scas pop or jecxz movsl pushf sbb std push ret icebp test fst mov test mov jns push ljmp fs dec mov push jne movsl mov xor mov add mov movsl lods cmpsl and push fdivl movsbl test rcll out cmpsl fiadd in mov cld mov push mov outsb out fistp pusha out cmpsw fistpl sarl adc (bad) orl xchg mov call loope adc gs jg (bad) pop rcr lret mov (bad) cmc mov inc leave cmp int (bad) adc push adc mov push ljmp mov (bad) xchg ror adc mov inc cli push cltd aaa sbb roll imul andps movsl (bad) idivb mov and cmc mov jb or mov mov or dec mov dec and (bad) sbb test fwait add mov mov sti pop js xor mov insl insl ret mov repz jae imul sahf xchg xor int fdivp mov and and mov pop lcall xlat pop ret mov loopne lret in popa xor inc imul imul movsb in or test stos jmpw lods mov (bad) and push pop inc mov cmp sarb xchg mov push or adc pop (bad) push mov sub pusha movsb icebp es mov mov lds mov clc add mov or mov push sub lods daa lcall mov xchg outsb or pop call sub mov pop inc jns inc popa jmp jae out sti and pop sub iret inc sbb cltd sub test xor cmpsb cli icebp stc and xchg pop push mov pop scas movsl pop inc sub push sti call pusha mov mov xor or ret das or sbb jns dec daa sub jae pusha adc pop lods in mov jne cmc push jns in dec test ljmp aam mov and loope lock repnz mov es fidivl cmpsl loope mov mov push mov ficom test dec jecxz jmp mov pusha bnd or js shlb xchg xchg mov mov pop lods mov push imul cmp rcrb cs adc cmp xchg (bad) mov fidivl and sub mov jns clc pop cmp (bad) sahf jl inc mov mov roll mov adc mov mov fcompl jb mov mov insl xchg mov adc xchg stos mov or pusha jmp mov sub mov mov rcll jle jno test or test mov xor rcll sbb jbe std ljmp (bad) icebp sub adc test andl movsl inc inc xchg mov bound daa orl fwait dec dec mov (bad) stos jecxz cltd ret fbstp stc xor push xchg imul addr16 jmp clc cmp orl ljmp push push add jecxz mov lods jne mov sbbl mov jo (bad) (bad) lret fstp mov rolb inc fsubl push push (bad) nop adc pop icebp dec mov rolb sub (bad) xchg ret mov inc scas pop dec sub ja mov cltd ss xchg daa sub xchg setae jl mov pop push mov xlat cmp ja mov stos mov sbb or inc mov cli leave mov xor int3 test inc inc or sub lahf mov mov popf pop mov out dec out or fstl xchg mov dec jno cmpsl dec fucomi ss mov xor call pusha push scas pop xchg mov dec fbld imul das adc jecxz mov jns in cmpsl xchg rcrl std mov adc lods mov jmp xor mov mov pop pop or jbe movsl push cltd fimul loop es mov scas and jo add arpl or sti aas xchg lret lds imul xchg dec adc andl mov push add rcrb test xor push cmpsl mov jmp mov inc enter or mov xchg push mov cmp jo mov xor add movsl xor dec mov xchg insb aas jecxz cmp adc pushf cmpsb lods lods mov ret xchg cmpsl stos mov mov cmpsb cmp enter push mov scas mov in ljmp hlt leave jl push push out cmp or arpl (bad) fxch stc pop inc insl in fidivrl cmp hlt jmp mov popf sub lds mov and into int ss test bound jp add and mov (bad) int3 jno in inc cltd mov or pop out insb aas cli pop cmp adc add push push (bad) push dec and fadd fisttp xchg aaa subb sub mov test fcomps jmp adc add and pushf sub pop into icebp out xor out inc fucomip jb push inc out mov sub cltd pop inc pop push (bad) jo mov (bad) mov mov jg cmp adc fiaddl push loopne mov xchg out mov (bad) negl stc sub xor dec nop cwtl mov fwait lea jmp mov sub xor and mov inc cmp movsb sbb mov inc enter mov dec std sbb xchg xor in dec mov enter out xchg pusha push out cmpl ja,pn imul loope mov das mov cmp mov or test and pop roll (bad) incl dec pop pop add and sub lock mov scas lea aad popf dec les scas pop fmuls adc xchg dec fadds repz push inc jnp arpl inc cmp mov xchg insb (bad) dec mov fsubl adc rorl fwait xor jb dec les aad inc pop or roll (bad) fcompl xchg bound mov in push mov sub mov mov pusha mov imul mov mov push pop sbb lret and mov push lods fdivs pop movsl icebp imul add (bad) dec bound pop cltd mov sahf push fnstcw cs and roll cmp test aad pop or js and mov mov (bad) call (bad) dec je inc pusha pop adc dec adc jne xchg addl sub xor pop aaa lcall test cmp mov roll xchg lds sub popa jno in (bad) cmpsb or (bad) cmp jae pop pop popl inc add popa aaa dec add sub mov cmp pop mov adc sub (bad) cmp dec xor push push or sub addl gs mov cmpsw cld mov and jbe std in cmp cli ds xlat lahf ljmp adc push xor mov lock mov mov mov mov (bad) jle out in aaa unpcklps lea adc pop cli mov fs push mov push popf imul xchg gs cmp out adc movsl fisub xlat cmpl fnstsw outsl out cltd pop loope sub repz adc push outsl mov sarl icebp jno arpl fs pop mov jo sahf mov xchg scas cwtl fucomi in mov mov add mov cld daa xor push shll out pop mov mov add daa and mov mov jge movsl pop ja ss daa adc jno and movsl jae (bad) pushf pop pop mov movsl loop cwtl imul pusha mov ret mov mov push inc mov movsl cwtl xor fisubl iret pop je adc insl aas and movsl jno mov mov scas and xor pop sarl sarl mov out xor daa test aad (bad) hlt push mov movsl movsl in popf xlat push adc jnp icebp int3 mov or xor ja imul mov mov and (bad) into mov mov cmp push mov and lret mov cmpsl mov (bad) testl cmp pusha mov push mov (bad) cwtl sub add pop rcl mov or outsb xchg pusha (bad) int3 sbb fsubs cmp adc (bad) into xchg sbb jne mul and popa mov or rcl bound cltd fdivrs jle loopne or xorl and flds push fucomip xchg movl repnz dec loope jmp les iret push loopne add bound in addr16 mov popf leave lds aas lea inc mov pop fidivrl pop leave pop jmp cmp push test pop cli insb cmp dec shrb (bad) push and shr or inc push cli and jge lret and pop jo outsl xor pusha fnstsw sbb (bad) in sub cmp dec rorl pop push dec inc jmp pop xchg xor xchg adc scas dec mov daa pop mov add jno mov and mov clc fnstcw sbb jge addl fwait mov push lea jb adc sbb cmp insl daa test adc mov dec mov lock cmp mov bound push cltd ror stos pop jne mov sub mov sbb dec push add cltd mov fistpll jb adc xchg icebp add out (bad) mov push movsb mov cmpsl out mov xchg scas je mov pop (bad) mov mov cltd xchg adc aaa sub inc or jae lret adc test hlt dec add mov data16 clc call mov or enter (bad) xchg pushf imul and mov mov inc ja jbe jecxz fdivrp pusha out int3 mov lahf mov (bad) rol jbe mov repnz ret inc mov mov pusha outsb out jo outsl mov xor jg dec sbb pop shll sub xchg (bad) js xor add mov (bad) dec jge scas mov movsl inc loope loop inc sti push jg js (bad) mov mov sbb push xor xor adc imul and lahf mov test test lret js ja pop xor mov and leave sbb js jno aad mov (bad) push cmc push dec pop adc mov data16 xchg mov mov adc mov or add cltd pop push mov data16 and jl js lret xchg lods mov mov dec or pop xchg fwait push cmpsl fnstenvs jnp leave adc cmpsb cmp pop xlat add xchg xchg loop insl xchg lods loopne jecxz out mov and pop jmp add mov cli pop int3 push int jg pusha rcrl xchg mov imul cmp mov stos movsb ljmp inc inc dec mov mov cmpsl popf fsub ja mov lcall inc sub aaa dec or shrl insb pop pop ja sbb mov mov (bad) out mov xchg popf lods jae mov lret addl les stc leave mov xor in loop mov jmp adc push push bound mov add out ds cmc xchg mov addr16 push loope test jge mov sbb mov les inc fisttpll push or test or add and shll loope mov push (bad) in popf jns in mull mov mov mov fldenv (bad) xor cwtl ret imul xor lahf mov sbb (bad) sub dec adc jne adc mov jbe pop inc pop mov dec testl sub jnp xchg sarl sbb cs and xor stos ficom jbe fcmovbe xchg mov cmp xchg and mov lock dec mov adc imul imul daa fildll cmp fadd int3 loopne pop dec sub cmc mov jae mov data16 mov adcb (bad) ja (bad) mov mov sti xchg pop pop movsb mov lods test or mov pop jo rorl or dec sub push jno xor add repnz xchg imul out cli mov stc inc int3 mov out sbb es fisttpll mov inc inc (bad) in psrlw out popa pop adc sti shrl ds jb push pop pop loopne jecxz mov lea jecxz mov aad cli cmpsl mov lret cmp shll mov jb aad mov pop stc push mov (bad) xor movb hlt addr16 scas mov pop clc negb stos add and repnz ret mov cltd sarl adc fstl sbb xor mov jmp dec pop xchg es lahf pop push iret movsl test xor push mov (bad) int3 mov inc xor out jl adc test movsl sbb fistpll lods movsb add popf xchg mov mov test sub shlb push xor fistl jecxz rorb or sarl stos mov xchg mov gs in shlb (bad) mov movsb imul mov mov add movsl sbb flds loope aas loope das shld dec aad jb mov int3 adc shlb push or or stos stos int push add jns nop or jo dec dec imul add mov ficom cmc or pop sti pop sub dec stos sbb mov dec repnz stos in pop imul popa mov out test xor and test pop mov push out xchg bound mov dec push movsb cld xchg ds pop ljmp jmp dec je lea xor dec cmp std mov test adc jne xchg (bad) jne jae jns fistpl xchg (bad) mov mov inc nop push xchg xchg ljmp add sub sub sti cmp sbb fsubl push sub stos fstpt ret xchg sbbl cwtl mov dec nop sbb sahf rcll or inc in dec adcl and lret cmp mov repnz xor dec into sbb cli add mov in loop mov into xlat mov jnp repz add aad out dec dec jno xchg into shll inc lahf mov inc cmp mov das sbb xor inc shll mov sub (bad) data16 and xchg pop int3 lahf loope inc pusha xchg test add lock sbb mov bound hlt test bound jle movsl lahf (bad) push int aaa lret daa (bad) in mov daa xchg outsl or jo (bad) push pop lahf add jecxz or inc std sbb pop js xchg data16 mov or dec ds cmpsl idivl dec push pop js mov int out mov cs je mov pop mov ja negb negl mov push (bad) xchg or dec fistpll es test push lcall out mov mov jl xlat inc or add lods mov cld je pop lret mov xchg dec (bad) pop adc (bad) mov loop jge sub fisubl pop mov inc adc lock xor lods stos mov out or mov (bad) call loope mov cmp mov cld mov loopne xchg xchg idivl jns jno and lret and push mov jmp incb sbb popa jne test test test imull out gs out jecxz dec or dec dec add mov mov mov (bad) in into push outsb or dec stc jns jb push pop sub lcall pop mov mov xchg stc sub outsl les lahf mov (bad) inc mov xchg inc in dec sbb std push movsl jno adc xor roll push and and or mov enter xor jg enter xchg rolb notb pop mov mov mov fldl mov rorl push and sub xchg mov pop fidivr and out ljmp imul and jbe std into mov fnstenv negl mov lahf aam xchg push cmp mov inc push aas mov in mov sub inc cltd push clc jnp les lahf mov call popf mov jne (bad) fwait xor push xchg mov into cmpsb push ret add pop test or and or insb in (bad) ret adc out shll in aam xor cmp int3 outsb dec mov jg in lods mov cltd mov call dec and sbb xchg sarb push imul cs jae inc adc mov and and or pusha mov add mov scas jbe iret cli add and jl out push mov (bad) cmc mov lahf pushf mov test mov lret (bad) jo sbb cltd cmc push sub cli cmpsl push into pop in mov sbb dec pop (bad) aam and mov lods test movb mov out cmp test into scas adc cmpsl loop ret dec add mov clc in xchg out lcall out mov mov inc fdivr sti dec xor mov insb pop repnz mov and std and inc in mov mov xchg in lahf (bad) imul mov push imul movsb sbb or outsl or (bad) mov movsl (bad) lcall loopne ficom mov test call gs and mov out mov test jl insl addr16 imul orb xor rclb lcall ret mov add pop (bad) dec push imul mov pop shll mov (bad) mov jns inc pop add mov mov mov call and push and test mov pop xor aaa popa loope mov and xorb or les into jno dec add cltd xchg cltd out roll xchg inc jl jecxz xchg dec mov mov arpl rorl cmp mov sub ret sbb cmp mov jl es mov nop mov and (bad) sti lock push pop shrl pop insb mov sub jb roll movsl jns,pt cmp data16 xchg pop repz movsl mov push daa outsl in pop or mov rclb xchg push cmpsl adc push jge (bad) bound cltd clc push rolb and xchg mov data16 (bad) push push in out xchg sub xor rcrb mov jmp add iret mov hlt jnp stos ljmp pushf divl sbb pop mov pop subl aad pop ja int in adc push jp pop loop mov push cli push lret xchg mov arpl jp out jecxz mov mov (bad) xor cld std sahf cmp fistpll and push sub jns mov mov icebp pop ljmp loope cmpsb inc (bad) xchg xchg lret push and mov imulb adc (bad) jl popa loope adc push imul (bad) cmpsb and out ret enter pop mov mov pop or xlat adc jle movsl push add cmp jns pop jg loope test imul jb leave gs mov inc jge or inc sub dec dec addr16 xchg mov aam xchg xchg inc imul loope adcb xchg call cmpsl jbe rorl daa push mov rclb test mov ret mov hlt out imul int sub push adc push dec dec pop mov inc mov dec mov xchg mov xchg out sahf pop push cmc movsl mov inc lods cltd mov xchg iret jge mov cltd mov setno dec scas mov cmp stos push xor cltd imul arpl cmc popf mov cmpl sbb lcall inc add (bad) cmc or inc test pop mov inc mov test mov adc fstpt mov pop inc mov push scas scas jp je movsl mov in test sub mov cmpsl and fisub push (bad) mov outsb ret jb lods loope ficomp sar popf mov mov aam out lods test out mov jbe xor and cmpsb xor std add call cmp or xchg mov dec sub and jno mov movsb mov sub adc movsl movsb loop cltd push add cmp lock adc enter xchg (bad) out mov scas add xchg add sti (bad) mov dec (bad) es xchg aas push call sub mov rcrl mov mov jp (bad) xor mov push push cmc or jl sub cmp out xchg (bad) leave aam orb mov imul mov jp or addr16 adc roll push add jb and xor mov sub in and pop add test jns (bad) jl dec or int imul mulb fdivrs movsl mov mov xor add sub pop inc hlt dec in xor jae jbe inc adc push xor leave dec and ljmp or movsl stos pop xchg data16 mov iret (bad) cmc movsl jmp lods xchg test fistl data16 mov xchg inc xor dec mov pop rcl out mov scas stos push test inc cld daa std int3 sbb shrl shrl stos cmpsb stos mov jne mov adc and jge lret xor aas xchg je gs push adc ds and add push add mov xchg (bad) inc cltd xor mov sti les mov mov fs out xchg push cli mov testb nop push ret pop js scas ret out or js sbb enter push pop ja ret xor imul mov cmp adc imul pop (bad) mov xchg les cltd inc hlt dec mov cmpsl aam cmpsb in lock sbb ret out pop mov jbe pop add and test stos cmp sbb das loopne push xor out add int xor mov lods or mov out incb out and mov inc test sahf push cmpsl cmp pop jae jnp pop sub test dec inc jmp shlb push fidivl pmovmskb fstl push out push or test pop idivb or lock nop mov jbe and and addr16 lcall addr16 popf pop adc std inc mov leave sbb pop push mov mov jbe repnz sub ror (bad) and mov popf adc sub add mov ja adc loop loopne and inc or adc mov mov adc push movsl mov pop mulb cmc in cmpsl jns mov lcall enter jmp jns push inc cmp xchg dec les subb xchg dec or sbb sub scas pop cld repnz stos jge and jecxz push add inc cmp mov insb in clc mov add sbb mov in sub sahf dec in pop ret mov or xor sub sbb pusha jecxz mov push fldl cwtl mov xor repz xor dec roll mov js mov jp push arpl idivb fwait inc ret add addr16 std mov ljmp imul cmpsl adc jno cltd inc ss addr16 cltd pusha inc (bad) push mov es pop addr16 (bad) push xor loope nop or sub mulb inc cltd ficoml jge jno shlb mov jb ja and stc mov cmp js xor inc adc insb hlt xchg cmp lods test sub mov mov mov xor mov cltd int pop cltd sbb pop mov in cmpsb xchg mov inc pushf arpl insl dec xor push pop mov dec mov arpl adc push lret push sar jno add outsl mov scas adc mov jg inc jno stos and pop aam mov or dec dec fiaddl pop xchg jae sub movsl lods bound fdivs movsl sbb rcrl fild mov pop je inc mov (bad) imul lahf sbb inc xchg cmovnp mov mov adc push test js add cmpsb faddl aam cli dec mov inc cmpsl push out add and cltd pop push cmp sahf jge cmpsb mov sub ret mov stc mov aad adc push mov loop adc in mov mov xchg xchg aaa (bad) sub shl pop xchg hlt cltd icebp add jnp adc cli stos stos imul mov pop push lcall xor dec xchg sarb push lea xchg inc lret subb jl xlat jl and dec (bad) xchg bound add inc mov loop bound pop mov dec push pop add xor in and jne sub push push call gs inc call insb mov sub loope push dec js stos (bad) ja js daa jmp loop pusha jb mov test pop and pop inc xchg shrl daa jl mov bound pop pusha add mov stc jbe icebp es int3 dec sub jo cmpsl insl aaa add sahf push xor push add jmp dec push inc add mov or inc jge or jae and push (bad) repnz clc movsl adc mov xor sbb sbb mov cmp push push mov jl shll dec sub push mov fsts int out cmc push mov cmpsb pop jns sbbl fs mov mov (bad) xor pop mov jns mov stos scas dec mov jo jge fisttp mov (bad) cltd sbb and add stos icebp pop popf or lods fwait out mov and dec cmp xchg aaa test adc mov dec ja mov inc fcmovbe push jns mov and (bad) movsl push and shrb aam xchg notl xchg das fldenv or repnz cwtl int cltd out outsb pop cmp fidivr inc or mov mov in mov jg push jp frstor push pop dec push or mov pop lods mov aad adc xor mov iret push mov inc or push popf repnz and mov ja frstor sub out es jne stos outsl popa cmpb xchg fildll nop test pop (bad) mov mov dec and addl rclb adcl rclb ficompl idivl sub mov out add add jl mov mov stos xchg add mov cltd test push push lret jns insb jecxz fnstcw or std fstp mov aaa cmovg lds pop aas (bad) fsubrs cmp inc ret dec stos fcomps int3 pop xchg cmp dec sahf xchg push or pop pop mov fsubrl hlt hlt in mov pop pop pop xchg adc (bad) dec ror (bad) sub or adc xor (bad) lret mov cld add xchg mov fwait push scas call pusha repz les xlat and sarl cmpsb lea adc pop int3 orb mov pop test bound scas mov in daa dec mov add dec mov mov out cmp aam cmp (bad) scas mov fstl scas mov pop dec jmp add pop mov fwait jle xchg dec out pop gs lods jg cmp or push test test clc pop pusha or add loopne std loopne imul loop fsts in push out test xchg daa adc (bad) pop mov bound stc xchg mov cmp xchg mov (bad) insl lods pop rcll mov push mov sbb mov sub loop push inc das icebp adc mov (bad) dec mov sbb lcall insb fist pop sti pop mov jecxz jne mov daa daa and mov xor repnz inc adc xchg arpl and cs mov sbb fsubs dec clc mull sub mov loop jne or push sub mov es sahf sti xlat mov hlt push pusha out adc cltd std jns push fdivrs movsl push pop repz imul mov aas pushf and mov scas das mov out (bad) dec test xlat (bad) mov cltd push and cwtl inc pop lock jb pop (bad) int push mov pop stc push inc mov test sbb out int3 mov nop (bad) mov mov and cmp adc andl xchg mov outsl mov nop sbb push add push mov fsts sbb lods push inc mov lahf push add fwait sbb mov dec jmp mov xor stc aad mov sbb test jge xlat dec dec pop adc pusha xor nop pop test cmp mov mov fs inc ficom xchg mov add ret or push mov lods insb mov jp stos out and mov pop test (bad) imul scas in imul add test cltd outsb pop (bad) ror aaa sbb cmpsl jecxz lods and lods dec stos inc loope js xor mov mov adc aas mov daa xchg fwait mov push adc icebp xor hlt xchg push into lahf (bad) or in sahf adcb out cmpsb mov outsl bound lcall push adc cltd push add sub popf out pusha lds xchg mov sub cmpsb stos das movsb dec push dec mov sahf cmp (bad) cltd aam das pushf and ret lods push imul push into mov cmpsb mov mov (bad) test and jbe mov mov movsl arpl or stos std jns sbb xorb adcb add mov popa insl mov iret add dec bound movsb rol test push cmp int pop and popf fdivrl xor sbb dec (bad) icebp insl push mov jno (bad) pop inc xor mov rorb sbb imul cld sbb sahf jne jge jb inc dec xchg push cltd pop sbb aam mov popf mov rcr fsubl mov add data16 xor xchg pop mov test imul inc xor and mov stos mov and lahf movsb std and jns xor inc jmp xchg dec or shlb icebp out mov rcr and mov sbb inc lret and js adc imul test inc sub call movsl push sti icebp out push mov xchg fidivr sub push (bad) repnz movsl push sti push cld aaa push sub js cmpsl aam mov sub jge jb inc fcoml mov xchg cmpsb les cli mov mov add clc sub inc xor inc fucomip loop add stc inc shr data16 cmc clc pop aam int mov pop nop inc cwtl adc push stos es push scas mov roll pop sbb rorl cld and push jnp mov insb adc std hlt mov mov sahf (bad) in movsl fwait dec or mov push jl fs rcl aam adc mov mov jns dec sub adc mov push mov popf jge fstpt test aad adc cmp gs mov xchg xchg out adc inc fidiv shlb aas pop mov cmp inc push jl mov pop dec icebp mov inc xchg mov cwtl inc mov cmc addr16 ds movsl arpl mov (bad) fdiv popa adc fstp outsb push cmpsl adc dec xchg scas mov pop mov xor xchg dec cltd push mov jae pusha call sub lods push movsl pusha mov lds pushf cltd adc cmp push mov cltd push loope inc aad mov dec xor jnp mov xchg call pop mov and movsb jo enter es mov mov cmpsb ds scas push mov or lret imul test cmp jp mov test das cmpsb sbb lods lcall and in mov push pop notl cmpsb mov dec xor movsl cmp mov adc lods js dec fdivl adc out aam mulb and imul cmpsb and sub pop mov mov sub sti cld mov pop pop repz popf (bad) and mov cld mov mov mov sub mov cmpsb cli push inc mov jns sub cli fist cltd test xorb or movsl mov shrl out xchg cltd and add mov sub inc lock out addr16 icebp (bad) mov adc test sbb cs lods mov pop shr movsl inc xchg jb mov sbb adc outsb out xchg test pop mov mov and lock cld es mov pop mov adc loop lock push mov xchg mov sahf pop out mov jb mov jp cmp jle inc and pop mov out sub js lcall and out xor test dec mov push or lock sub mov xor arpl sub mov aad cmpl jbe jecxz shrl test test jmp shll lahf xor cld pop mov cltd jne adc imul sub xchg mov dec mov jl leave pop lods cmpsl lock or outsb cmp dec or adc sub icebp fstpl inc idivl adc lret cmpsb daa pop mov adc bound lret outsb cltd int loope inc or mov out jmp cli lock push xchg in sbb push dec mov or stos addr16 lcall cmp pop movsb jge jmp push sub fiaddl scas scas stos jnp sub cmp lret pop in test imul cmovae fnsave jmp iret mov jo mov mov and (bad) std out test repnz sahf mov mov popa repz push adc jo aam repnz xchg out xor mov cli push pop mov ds mov ret cmp push inc or jl add inc inc xchg jo pop fisubl mov movsl sti pop push or mov or mov add insl (bad) cmpsb das or andl cmp addr16 mov sub push cltd cmpsb mov or pop cmpsb js dec popa fwait mov scas movsl jg pop push xchg ljmp cmpsl dec push stos pusha test fbstp mov idivb mov aas ljmp cwtl scas insl mov sub es dec adc xor rcrb in in fidivr mov adc lods cwtl pushf mov mov jp fscale inc pop cmc xchg out pop (bad) jp pop mov ret add and insb out out into mov and or xchg pop add scas lock lret sbb adc mov cmp jne mov mov dec ret push daa pop mov dec push xchg rolb lret pop imulb inc dec scas push mov popl xor hlt lods shll je sbb add xchg jmp xchg jne loopne pop mov push and pop std aas pop lret sbb sub xchg cmpsb (bad) lds mov pop jg xor add mov xlat or adc mov roll pop int3 pop test mull bound ja pusha sub out jo mov cmp inc in loop and mov out jmp ljmp pop inc pop add test adc leave in mov imul les pop movsb push out mov leave stos xchg das rcrb movsb setg cwtl mov xor loope pop cmpsb insl leave cli adc scas fidivr mov inc aad or and push inc (bad) stc jno cmp test jne push dec lods xchg jmp rcrb shrb dec pop sub push movsl arpl pop sar addr16 lods (bad) mov or pop daa pop lcall dec xor out lock xor xchg sub fsubr mov sub xchg fwait enter leave mulps rorb cmc dec pop addl xor gs ficom (bad) out jmp test jns scas loope add cld leave sarl inc es or das mov and mov pop test mov inc xchg pop dec rorb mov xchg scas fs cltd push mov cltd jmp jb repz mov xchg int js cld mov fistpll jecxz dec adc xor mov adc in std scas mov ret push rep xchg push push add dec (bad) rcr insl and imul dec loop int andl push lock mov sub push push mov sub fldl arpl ret js push lcall fstl push outsb cltd mov cmpsl bound adc pop stos pop add dec cmp pop ret mov jno insl out mov pop push adc fild lahf xchg (bad) adc mov push pop and rorl mov xchg stc fistpll jle (bad) dec adc loopne repnz daa cmpsb clc pop out cld loopne mov sub push add adc and mov pop pop mov jno aam mov icebp inc adc pop push js popf pop push xor cs and in pusha aaa in mov js push loop addr16 mov xchg xor mov pop mov push clc test mov and xchg or add outsl je cmc arpl mov inc push jl xor mov cmp cltd addr16 jne pop add js add xor mov mov (bad) mov movsb adc shl repz mov add shrl mov or lret js test jp ret out cmp xor out daa nop stos mov or mov in insl out and lock lret push and subl mov mov negl inc ss adc stos dec or loope jecxz sub push mov js cltd push sub int mov out jle inc pop cmpsb pop hlt shlb cmp mov mov int dec outsl loopne add lds mov jbe push aad addr16 xor push stc jg mov pushf dec push push mov mov mov pop cmp adc xchg cs (bad) (bad) aas jecxz aaa daa pushf xchg inc mov enter pop fiaddl js or jne jns jnp decl lret cmpsb lcall jns ja cld mov xchg jbe mov jo (bad) sbb cmp in mov inc jle hlt out (bad) mov dec or daa xor pushf push jne cmpsb stc rcrb mov pop loop fistl cmp sbb jp shll enter mov xchg rcrb mov pop shrb and mov dec sub sbb push and jg popl mov stc addr16 mov mov stos xchg mov in lds and mov sub and xor adc pop sub lea and mov adc jo cmp addr16 mov mulb mov mov xor leave or js xor test js jle xchg mov stc pop xchg mov js int3 mov add out push lds push cmp cmp scas pop adc mov adc in jmp out out lea pop test dec shrb mov add clc js inc xor in xor int3 jl sub dec pop inc sbb std lret insb (bad) nop push dec xchg mov sub mov lods push inc js add mov jl int inc cmpsb push addr16 or aas hlt jle sub mov sub xchg inc pop movsl mov and lea inc (bad) repnz sahf lods sub mov mov jns pop mov (bad) out and jmp jl push cmpsl push enter mov test adc movsl dec and fbld jo cmp out mov loop ja scas aad jle out (bad) sbb or leave mov pop (bad) icebp xchg (bad) cmpsb mov scas push mov fidiv aaa roll aas mov push cwtl mov cltd (bad) pop add push mov sub mov stc push adc into sub adc mov enter jae cmpl cmpsl rorl push std jns mov mov (bad) sbb fxch mov mov jl xchg into mov dec cmp cmpsb inc add mov mov mov adc popl loop jmp and aaa sub mov adc dec and push fnstenv test fwait adc je scas sbb mov sub pop add mov or les dec or fs (bad) mov mov jge dec mov ss inc xchg out data16 cltd cwtl xchg sub out ss cmpsl icebp (bad) jp jo sti mov repnz cmpsb push xor inc dec sub jne iret imul inc mov out (bad) aad mov jecxz sbb icebp lcall mov shl sti pop mov idiv sub mov adc ret mov fisttpll aam imul xor pop mov mov push push cli sub lahf inc push cmpsb dec pop repz fsubs mov (bad) fwait test iret mov and mov and pop std (bad) ss fcmovnb xchg rcrl push lahf mov xchg mov sbb inc or dec fsubl into pop xorl inc adc jg or stos xchg sub sbb push movsl in dec cmp nop mov mov aas adc mov movsl xchg les pop cmpsb jne and sbb mov mov sub pop (bad) lea and cmpsb pop aad pop cld test testl add es cmpsb jge xchg mov xor add insb loop pusha mov and and mov add inc adc out out mov lds sub mov addl fsubrl jp js,pt xlat out xor push dec (bad) adc and int adc cmpsb adcb mov inc sarl fstpt or sub and adc jno cmpsl call test jp cmpsl xchg sahf sub test pop xchg add repz xchg shll adc mov xor (bad) sub push mov daa push and mov cltd rcrl xor test es xor js jmp mov mulb inc mov nop in inc frstor hlt inc adc mov push cmp test lcall sub popf sahf add xchg cmpsb sbb xchg add iret xor pop cltd outsb loope fild pop push inc push adc cmpsl loop cwtl mov add int3 xorl fstpt cld in insl bound push movsl adc hlt pop mov xchg sbb (bad) xor jae inc xchg lret jo dec add jg mov sbb mov hlt and int movsb lret repnz inc mov pushf push mov std addr16 enter mov arpl aad test mov mov mov cmp (bad) ss test xor push fisubl sub loope scas push es cmp xchg push inc dec sub xor jae repz mov xchg loope into es movsl pop fadd mov int3 fwait cmpsb cmpsb loope pop jecxz (bad) pop inc fbld jno and and dec cmpsb and push je dec (bad) ljmp mov or jno lods pop and dec jno popa insl icebp push jo mov pushf mov mov cltd rclb arpl push imul dec shl mov mov stos mov insb (bad) or imul pop stos jge xchg sub dec (bad) enter lret xchg in imul pop outsb movsl jge sbb xchg or jmp sti push push xor loopne inc push xchg jle addb repnz and cld push mov decb or cmpsl scas in fisubl out adc mov sbb mov inc mov xor rorl insb out rorb mov inc adc jge gs mov fwait mov add jp (bad) lea xchg call mov push cmp jmp ror fs pop loop std mov add dec pop jge (bad) iret (bad) and mov lea fstpt fwait pusha pop sahf inc mov push lock xchg sbb xor xor push dec cmp lock pop lock xchg pusha cltd cmp or clc add add in popf les cmp pop (bad) rolb cmpsl dec scas add dec rorl dec push or sub xor adc and or lret mov inc and stos xor mov pop das add or jo pop push ret outsb mov add rorl inc mov (bad) stc xchg dec lock mov jecxz into mov js add gs sti or mov xor test cmpsl lcall andb fs bnd push cli and mov repnz aaa mov pop stos add dec sub adc xorl popa cmpsb xchg dec mov mov mov mov adc mov xchg or mov fidivl out insl arpl xchg pop fstps outsl dec int3 test or fcoms push popf dec mov ret repnz int3 orl mov repz addr16 inc and std (bad) pop xor mov ret mov faddp jns pop movsl push mov lock mov mov mov jbe repz subl push ret rolb lds and test and mov dec out bound repz cmp lods inc and ret xor sti in pop cmp aas dec (bad) jb sub mov push rolb sub stos push es sub jns jp lods scas sub inc adc sbb xor mov repz mov lods dec adc mov in movsl pop out lock data16 sbb dec out aad mov pop test call sub loop je cwtl mov mov mov cmp movsb inc cltd aam movsl mov pop inc test pop xchg data16 jge or stos movsb mov out mov or xchg aad cs jb fwait adc lds inc fstpl add dec ret daa inc cltd inc or scas xchg sahf mov push sar lods pop pusha mov jp pop push pop mov mov pop icebp imul sub out mov mov stos jmp (bad) scas imul cli dec fnstsw sbb mov and dec push fsubp jl xchg aad mov pop clc and loopne mov dec mov data16 rclb scas roll arpl xor and sbb (bad) (bad) shlb fdivrs xchg cmp stc fs movsb jns scas mov idivb pop fdivrl mov or ret and aas push das mov dec fwait cmpsl adc test mov nop shlb (bad) int3 add in mov popa lret in roll sahf outsb idiv push movsb out push mov inc or cmp addr16 in fildll mov mov sbb iret sbb adc dec mov cmpsl nop cmpsl test xor test out shll les inc fdivrs mov mov imul daa mov dec mov lret inc out push (bad) negb push mov inc jp in js nop out adc dec mov scas test and add push daa xor push sub cltd inc or out (bad) aas mov xchg dec sbb mov (bad) out sbb lret jcxz mov scas test dec xchg in cwtl mov mov arpl pop mov xchg mov ds mov add push mov loope cmp icebp mov lret imul and pop popf lds iret adc inc repnz mov leave lret mov sub js loope mov sarl sub mov mov icebp xchg ds pop mov out and addr16 push mov and sub mov in cmpl leave shrl cli xor jnp sub xchg sub call xchg or xor dec and fdivl cmpsl popa push add pop (bad) sti pop lock pusha pop lds xchg (bad) or xor popf cmp adc mov int3 jecxz mov sti out je sbb jns xor mov cltd xor out rorb and cs int sbb lods cmpsb lock pop lea jle ret sbb dec sub mov inc arpl out leave add push cmp movsl push jmp mov sub add sub (bad) pop push and inc lods mov sbb and add mov sub negb push add enter lcall jnp mov push pop outsb movsl dec icebp push dec stos mov pop je arpl adc cmp inc mull (bad) aad mov (bad) in gs les xor cmpsl rcrl jb pop hlt pop lods adc std mov mov fdivrs stos dec xlat fnstsw adc inc pop aas adc add dec xor xor sbb pop cwtl cwtl sahf cmpsl jge (bad) dec mov jo out in jne push pop loope mov ljmp cmc jecxz pop sub pop out sub sti les lods out push push inc mov inc adc dec cmpsl mov mov mov std xlat jge xchg cmp scas hlt enter decb fcompl stos mov imul add sub aam cmpsl and hlt mov icebp dec or mov ja dec jle in sub ljmp scas cmpsb xor gs roll xchg dec popf arpl sbb lcall bound call stc push rolb pop pop repnz xor shrb xor ja xor test sahf mov cltd popf mov xchg pop xor cmp jbe cmpsb xor dec mov movsl lea adc sub dec mov cmpsb scas xchg mov pop test pop lcall mov and enter sub mov pop std xchg mov in jae mov jbe mov mov jp cs arpl xchg push push jle push inc lds cld cltd push sti pop mov lret fisub cwtl icebp cmc mov push cmp push mov mov mov ss cltd scas dec or in cwtl or sub xchg sub mov cmpb cli xor ljmp hlt mov jecxz fldcw sub xchg call aaa pop adc std push mov lea rorl dec and lods out mov or out sub insb stos test (bad) jmp mov cmp stos ja sub inc or fcmovne mov mov sub mov xor cltd jl inc pop xchg (bad) push push and xchg jecxz addr16 jnp ret sub jb sahf sbb xchg xor sbb adc sub jg xor mov jmp popf andl jb es mov jo jge mov pop lcall cld push ficom mov outsb in inc inc outsl mov pusha mov jns inc scas cmp adc pop jo cmp lret jae mov (bad) iret cltd and inc or xchg cmc mov popf mov imul sub mov mov mov xlat loopne inc int mov push lahf or mov adc add cmpsb push mov sub dec mov xor (bad) repz cmp out test mov mov cmpl mov push gs movsl and and push in mov test cmp mov dec or and jmp xchg cltd sti push data16 dec cmp les popa sub lret xchg sbb mov mov ljmp rcrb and stos mov fndisi(8087 cmc push (bad) out int3 leave cli movsb jle inc lret cld xchg fidivr mov jge cwtl dec sub cwtl (bad) cld sarb or cmpsb gs das mov xorl xor (bad) outsb push and cmpl jmp push dec pop cmp (bad) daa fldl xchg lods sbbl lahf pop out iret ret aaa adc shrb and pusha pop mov fcomp mov test dec xor mov push or insb adc test ret test pop gs stc add and or lds push pop mov (bad) sbb and pop dec or (bad) mov test lock das xchg mov mov ret test push cli (bad) cs loope rorb imul inc or mov fistp std jne scas mov and imul test orl icebp in mov aad mov mov int3 mov int js rorb ret cmc push shrl mov fidivl sti fildll (bad) out jno mov leave push cmpsb or jp and fdivl inc aad jno icebp mov in testb cld insl xchg and in movsl jbe mov adc out cmpsl mov sub (bad) mov test mov push mov cld push leave push mov stc cwtl jnp lods sbb inc (bad) pop out dec or jmp movsw push insl jbe sub xor jae stos (bad) rcll cmp cmpsl push andl cmp sbb mov dec or lret mov mov pcmpeqb cwtl sub add mov sahf or sbb sbb xor iret (bad) mov cmpsb outsl mov xor xchg inc aam or in out test jl rorb mov data16 lods test cmpsb (bad) repz dec call push pop (bad) push popf cmc punpckhbw xor and mov jle push aad dec mov dec or cmpsl fcoml iret push push pop fldcw aad pop (bad) ljmp mov int3 adc dec inc adc pop mov pop dec pop cmpsb and adc jo dec sub dec lret movsb arpl lods xorb pop cmp dec jge push inc pop xorl aam imul or mov xor cld into movsb pop cmp lock pop pop xchg pop imul xchg ret sub and je push mov ljmp dec insb stos mov pop and mov cmp fbld dec dec (bad) mov bound stos pop imul (bad) mov cmpsb or imul imull pop ret sub inc lret insb movsl loope sub pop negl jge aad daa jl cmp xchg out sub aam jmp and jmp bound dec push sbb andb inc ret dec mov in aam std mov pop jmp dec ss cli shrd (bad) jecxz dec movsl test mov int out (bad) jb in xor cmc dec repz negb lods pop scas (bad) and cmpsl bound fwait loop or les pop loope js sub dec adc xorl pop (bad) in cmpsb sahf cmpsl cmc jae xchg mov fxch push pop pop ret sbb jno add sbb mov iret daa dec adc or mov shrl out adc test mov ljmp and mov aaa mov xchg inc xchg iret mov cli cmpsl enter jo fdivrs scas add xchg adc cld pop mov mov cmp loopne mov and pop mov mov adc xor mov js in popf jne jb lods movsl sbb int mov lods nopl andl scas (bad) stos lea cmovbe inc adc mov adc mov dec add and xor bound or scas mov mov aad clc pop pop mov insl ret cmp scas cmpsb fs repz or movsb fdivrl mov (bad) mov sbb jp add inc adc and enter mov mov loope pop push mov xchg dec sbb std aad mov fwait (bad) mov or pop jne rcrb mov out push mov inc std push lret mov mov cs mov mov fwait jns dec xchg jae aam nop lods sub inc mov fildl pop imul mov ds mov push push mov mov xor push xchg mov arpl cmp popa fadds (bad) adc xor push cltd add pop aam fmull pop adc cmp push dec popf xchg mov aas call outsl mov and lea rcrl scas sarb jnp xlat lock xor repnz and push pop imul adc dec mov shlb in cmpsl mov popf rolb push in lods and sub ret leave (bad) sub dec scas ret js test jae jmp arpl inc jp inc les adc pop movsl mov lcall cmc sahf xor mov jbe daa movsl pop push sarl rorl dec adc inc cmp fstpl pop inc push mov in and movsl shlb mov mov mov nop mov fistpll (bad) or push ss call xchg mov jns xchg mov (bad) call sub adc inc ja out push xchg mov leave in or loope mov pop jb loope adc cmp pop in pop pop scas paddb bound jmp sub add xor bound cmpsb in imul cmpsl xchg (bad) movsb (bad) hlt imul mov test sub int in addr16 int mov lahf hlt nop ret mov mov or (bad) mov jo adc imul sbb xor sahf mov out adcl adc movsb mov das inc syscall icebp shll push popa mov xchg mov xchg mov daa pop in add loop mov popf cltd mov mov xchg iret add jg dec pop dec and pop push add cwtl sbb loopne push mov mov out cmpsl (bad) aam push mov imul js scas and sub ljmp sub movsl jae mov adcb push lock nop xor add (bad) mov mov push mov jbe cmp or mov or (bad) iret out les push or pop (bad) in sahf mov fwait or out cmp xor repz lea inc fsubs sbb ficomp mov pop (bad) dec mov dec cmp fist xor xchg mov (bad) rorl mov pushf mov jecxz mov (bad) adc or pop ret cwtl xor fsubs addr16 mov cld pop cmpsl lea ret mov or leave ds xor mulb mov pushf fbstp inc mov xor rolb dec orl inc cmp (bad) mov jb out cltd popa xchg mov xlat and movsb sub arpl jno push ret mov cmp mov lahf mov cmpsl adc xchg or in push leave mov mov cs and insb movsl mov int3 xchg into adc popf sbb mov push mov adc shrb mov or add inc cli xchg or ja cmpsb pop cmpsl cmp sti mov pop sub ljmp addl gs fsts cwtl mov lret add xchg or sub insl insb cmpsb int3 es lcall fsubl mov (bad) lret xchg icebp ljmp xor test add movsl push js and out adc inc jns pop fistpl dec mov xchg xchg push daa push or mov jecxz pop (bad) addr16 pop and imul push xchg add hlt cmpsl mov lret xor cwtl notb aaa movzbl pop cmp xorl mov stos cmpl dec fist aas (bad) mov test jge in push loope cmpsl frstor or and mov loope mov mov cmpsl xchg lcall cmpsb pop jecxz sbb xchg push xchg scas sbb out mov adcb jns test add loop imul mov pop xchg pop cmc (bad) mov mov repnz (bad) xchg (bad) int cmp aaa mov das movsb divl jns iret stos jns (bad) int imul add popf mov mov inc leave mov xchg arpl mov in mov or push xchg adc xor and pop xor imull movsl jno mov fnsave mov sub fs je out popf js test fld stc jnp pop pop out push movsl lcall pop and mov roll dec cmc cltd pusha aam lcall mov (bad) cmpsb stos ljmp dec sub xchg ja push lcall mov js cmp mov loopne xchg shl push shr fs add add dec lret xlat mov (bad) scas cmpsb (bad) add fcmovbe sub sti out movsl adc xchg ret pop scas scas mov std pop ret xchg sub loop cmp pop xor imul imul or popa jg sbb cltd ret mov and jo hlt add pushf and mov dec push pop xchg hlt jbe das (bad) jae mull cli push pop repnz sbb pop mov (bad) mov mov mov jo mov adc pop lock scas movsl add mov mov mov push repnz xchg mov ljmp cltd enter mov jmp pusha out and ds repnz xor pop std lds mov inc cmp orl lock mov mov push jmp dec or mov jns and loop stos ret adc adc inc daa push xchg mov cmpsb dec mov out fldt push mov add cltd and sbb jo mov mov dec inc xor in mov cmp pop shr xchg dec (bad) ja inc mov mov or stc mov mov pop in mov hlt leave push cli aas mov xchg mov mov rorb jbe js push mov xchg push mov scas test push mov pop push loope push movsb or imul mov and xchg sbb lock dec xor xlat mov mov sub sub daa sub pop xchg ret push inc mov (bad) or enter repnz sub mov aaa push jecxz mov (bad) pop dec mov call push arpl mov rolb pop mov cltd fisubl ss and push mov repz mov jl or lods in pop pop mov lods inc push loop insl movsb mov mov mov (bad) cmp pop mov lds dec mov aaa es ret mov xchg adc push and mov cmc loop cmp pop loopne movsl insl adc js out icebp mov ret cltd ja nop mov shll lret imul ret cmp popf mov fnstenv mov bound sub or xchg imul mov push or jns and jl mov jmp enter jae cmp call mov inc cmpsl pushl repnz daa or mov or inc cltd xor aas or xchg cmpsl gs push stos roll out mov sahf imul hlt mov (bad) dec mov (bad) fsubl and or pop mov (bad) flds icebp adc enter mov lret pop std loope mov mov mov ret sahf mov in aad jns je mov push mov (bad) fldcw fstp mov mov (bad) fldenv jbe jo push cmpl mov nop mov test xchg mov cwtl mov stos arpl test popf ret (bad) addl imul mov dec in jae pop cltd dec cltd sarb sub arpl push adcl iret mov insb push adc mov sahf and cmpsb cld pop lahf mov or sbb push mov mov add jbe cmpsl jnp inc out jo gs cmp scas movsl ret inc mov mov push (bad) adc negb cmp mov loope (bad) xchg mov (bad) mov and add pop mov stc dec fnstenv adcb xchg adcl out ret push cmp xor push sub cmpsl pop cmpsl scas adc lock ret mov xor in andl cmp leave push sti pop arpl js mov or or sbb xchg push adc (bad) mov mov bound mov call adc cmpsb repnz in mov sub xchg sahf sti pop cli cmpsb hlt mov jecxz lock out test dec aad lock daa loop dec (bad) push shlb fisubl jecxz cld pop pop xchg inc neg insl push adc push inc loope mov dec shlb outsb in imul inc adc fistl icebp std and test and icebp addl xor push mov loop mov jge xlat dec cld cmpsb push stos cli mov xor dec xchg pusha les (bad) pop push fwait mov jmp sbb scas sbb stc jge and sarl mov xor movsl ljmp cmpsl sub mov lcall xchg adc insl jo xchg ret pop mov dec add push and movsl cltd loop stc xor mov std pop popa (bad) hlt or jge xchg addb les sub cmc ds pop mov (bad) mov push (bad) mov sub test scas movsb inc adc add fs into sbb mov inc mov mov or sbb das jmp push pop and in add mov inc stos cmp repnz outsl mov and mov xor test mov xlat pop lock ljmp dec fldcw sbb sbb add scas js les push or jns jmp (bad) mov (bad) inc (bad) dec add jmp aaa les mov ret data16 pop gs es lods xchg dec aas loope push out and mov adc push imul xchg ret (bad) cltd and stos mov mov (bad) mov cmpsb sahf (bad) dec movsl cmp pushf loope les sub ljmp and push imul insl pop push inc add (bad) data16 dec stos stos aam (bad) push add cmp bound bound cmp or aam scas mov popa cli push (bad) (bad) ds outsl and (bad) movsb xor leave xchg mov pusha mov popa lret stos aad sub dec add xchg mov bound daa mov inc enter (bad) mov pushf nop jbe cmpsb bound dec repz (bad) sti out push mov dec js int xchg fsub mov (bad) push mov ret adc orb mov jne (bad) in roll andps loop fldt outsb xor add mov repnz sbb mov enter loop jns and inc pop test jbe mov xchg lds ret xchg push add (bad) mov movsl and dec sbb es dec dec xchg mov aaa and mov dec inc mov mov sbb daa std cmp mov test test push mov xor mov pop or ss jp xlat mov xchg mov mov aaa lock pop popf dec ja xor loopne movsl movsl adc mov pop inc push iret xchg inc mov jns loop mov mov push lret mov call pop mov call mov pop push xlat mov clc call mov inc inc xor (bad) jb cmpsl scas dec jbe leave inc mov push (bad) mov sub stc xor ljmp mov or xchg pop clc push enter mov cmp or (bad) cmpsb int3 and pop cmp and rolb outsl pop or mov cmp aas cli pop mov push add jge leave imul xchg rorl (bad) in mov or or adc cwtl cmp adc lds aas sbb push and lock movsb add fbstp mov out push cltd adc add js mov lock add inc or dec dec or popf pop mov iret inc xor cmp xchg lock jb sub into movsb inc int (bad) out ds mov push lret push push pop mov xor mov pop xchg ret shll pushf mov cmp fstpt lahf xchg push imul lahf mov es push or aaa sbb add mov cmpsb xchg (bad) xor mov mov xchg sbb js mov std xor sbb data16 cltd push cld (bad) jo add popf mov sub and mov and imulb mov cltd les sbb (bad) (bad) rcr test lods stos mov jns adc gs daa je sub movsl xchg (bad) loope adc jge pop (bad) into push sub xor jge cmp xchg add jae js cmpsb and mov in mov mov and jb leave mov sti addb jmp (bad) adc inc pusha cmovae inc jmp push popf leave inc loop rcll jecxz cld cmc push fildl mov dec adc xchg sar aad inc mov into fs xor and jle das leave pop or mov movsl jecxz dec pop jmp push jle loope bound lret xor add xchg std mov jg dec pushf xchg pop sbb adc call gs mov std jecxz cld mov call les pop mov mov js add dec jnp dec jmp xor popf mov sbb dec sub push mov pop in push pop loope pop rep add cmp mov cli adcl mov out pop xor adc pop in cmpsb mov das rcr inc sbb imul cmp jmp and stc sbb arpl (bad) fisub (bad) in out cmpsb or sahf je stos fcom inc jl cmpsl mov cli xchg xchg repz mov dec popf jno xor inc (bad) scas cmp cmp sahf lock call mov lods repnz inc jmp sub sti mov jg mov stos cmc xchg repz (bad) js inc lock cltd pushfw jg sahf sub aam and rcrb js inc cwtl frndint add ja stos pop and and cmp inc and aaa cmp sub cltd mov js mov mov inc rorl test add push or add or lods push mov cmp mov inc mov cli roll adc cmpsb shrb push inc dec add mov xlat mov js shll out in arpl iret popa lock jae icebp xchg jne loop mov imul adc imul mov cltd (bad) push dec inc packsswb movsb xchg dec sub mov leave test std bound push and cmp loop mov stc outsb ljmp add or shll xchg ja push and lods lahf inc ficom andl mov and adc andl jnp xor lcall andl push fwait inc or pop faddp jb fisubl xor adc and jle xor jno stc cmc or roll in jge ss mov call into es movsl mov pop sbb movsl lea dec lret imul mov mov cmp outsl sub and mov mov mov (bad) jg mov cmp push mov add pop mov push sub sub xchg ja imul dec bound xchg inc cmp mov out xor aas gs cmpsl adc insb xor jecxz mov dec scas xchg and mov inc cmpsb mov mov movsl out scas mov jg rep mov adc call mov xor std pop inc pop mov xchg imul sbb sub mov ret pop push and scas mov adc (bad) mov mov loop inc add mov mov negb fidivr xor pop outsb and adc pop sahf in jp sti add fisubl pusha push prefetchw out movsl xchg dec or mov (bad) jge xor xor mov cmp lods in push std mov (bad) dec subl std jne adc cltd jp arpl sub pop mov pop out mov mov xchg mov adc lahf cmp mov adc push dec out sbb mov mov jge jo lds outsl loop or test stos add sub pop ljmp pop notb mov scas and in ret jp pop lock pop hlt ret dec add mov mov fnsave lret ficompl shrl push mov insb add aad icebp out mov dec or xor dec mov and mov stos pop add mov cmc sub mov scas lcall cmpsl sbb cmp lahf fbstp int lods frstor popf adc sbb mov enter xchg repz xchg adc mov ljmp mov pop pusha xlat dec fs cmp mov cmc pop push cld mov sub add pop mov dec mov ss les sti push test sahf jno inc push lret sub fwait mov movsb xchg mov mov aad test aas bound inc pop imul mov mov lods mov mov ret pop mov jo aad imul and sbb xchg sub xor loope pop rcll jns fwait mov cmp add pushf mov dec mov fbld pop (bad) hlt sub jg pop icebp loop and push mov pop push cltd mov repnz and cld je mov cmpl sbb fcmovnu dec jnp dec pop push mov or rol adc in mov inc daa mov in sahf mov push mov inc mov or xchg mov aaa sub push cmp jae xchg fs mov push loope (bad) mov es enter mov push mov mov insb iret mov and scas dec rorl jns xor push frstor sbb jge mov pop testl scas xor rcll out in subl les sub xlat adcl (bad) popf or adc data16 movsl popf pop lea nop out outsb cmp popa fsubs sarb jne enter xor bound (bad) lock mov push dec jp fistpl xchg jne mov xor cmc test jo or into shll adc xchg repz test and lret rcr jno xchg xchg fmull or cmp push adc fs sbb cli push scas lods or cmp dec divb enter nop cld hlt inc les sbb push mov dec xlat test sti mov jp mov lcall dec test xor sub push sbb add lea xlat (bad) imulb cmpsb xchg (bad) (bad) sub sub ret add lods adc dec mov out push stos in not pop scas mov sub les cmp jmp sub fstpl es mov pop push les cmpsb mov or jle in xchg aam insl mov (bad) mov fldenv shl ljmp sub (bad) test add inc jb lret push xor mov jbe xchg jb adc cltd pop int add dec cmp dec inc arpl and repz and andl xlat (bad) and js insl test xchg dec outsb push jmp out test outsl pop adc xchg jecxz xchg bound scas xchg dec jb push cmpsl cmp (bad) gs dec inc cli ja sahf and or mov out scas in pop sti je lods mov fwait jecxz mov fisub add cmp sub js xchg imull dec pop pop divb sbb aam jne push cmp stos lods or leave xor rol mov imul je xor mov inc jo dec mov sahf pop imull mov xchg mov mov outsb xchg cli mov rcr idivl mov cli fstps lea int3 loope and mov shll mov les call scas loope iret aam and inc pusha pop dec out int3 cltd into mov ss push into add negb sub in sbb lock stc cmpsl sub jl sub fstps mov out iret inc mov test lods into popf pop insl or sbb fidivr pop stc mov shrl ret test xchg add movsl scas std xchg shll stos xor push mov stc pop sbb popa and andb aad push mov mov shlb push pop icebp out and (bad) pushf mov bound cwtl pop lret sub in sub and adc mov dec mov mov sub cmp mov test movsl lea jnp fstl (bad) shll dec call int3 xor jo push dec in bound dec pop push fstenv arpl mov mov cmp mov sbb cmpsb mov jns or xchg sarb into ljmp test std inc mov pop and xchg mov sahf addr16 in imul daa repnz call es mov push hlt loop mov jmp fmulp cmp test xor js and jle (bad) xor xor jecxz mov daa cmp xchg mov xchg lds push pop out pop and push mov pop jns aam or fdivs stos iret scas xor and cmpsl aaa sub imul das pop mov cmc insl pusha fistpl sub cltd mov mov jns add cmp in or and in wrmsr and ljmp dec test xchg xor push daa jecxz lods js rolb shll adc lea ljmp mov aaa outsl mov in repnz dec loope outsl pop mov sub es loope jp mov loop mov insl mov jge ret and lcall fwait pop sub insb dec push loope dec add fwait stos clc mov andb dec pcmpgtb les (bad) jb out cli lock adc pop pop xchg xchg pop xchg insl sbb jnp bound inc aam movsl cmp aas mov into push (bad) mov addr16 dec mov mov pop dec xchg cld outsl int3 sbb lahf jne add (bad) mov loop sub in jns leave out ret idivl callw jbe mov pop xchg fiaddl popf nop push stos inc mov (bad) addr16 pop sbb (bad) imul jp fdivl xor jo shrl das subl jns xor imul dec xchg mov sub ret mov bound mov cmp out mov cltd mov call mov mov test adc cmp sbbl pusha addr16 out es adc and mov in mov inc fwait xchg mov movsb add ljmp fcompl imul dec xchg or push scas jecxz sbb (bad) pusha and push sub dec lods cltd sahf flds popf daa nop and je rcrl fcomps aas mov push out xlat mov fs dec sub dec jg cltd call mov in in mov outsw fildl pop adcl popf and push fstpt aas imul jns aaa sbb mov cwtl mov ret das popa paddq es mov mov cmc push jne mov inc into test cmp imul int mov dec (bad) sti xchg (bad) mov jb,pn and fisubl jp pop cld jne ficom negl mov js int3 (bad) xor cmp mov pop adc xor adc int lret pop push mov jns push or xchg daa xor dec adc stc mov mov test mov (bad) mov mov leave mov inc or cwtl lcall lock xchg outsb repz test lods test xor imul lock mov push (bad) mov xchg inc or lods fild mov push lea movsl cmc pusha jg into mov xor sub iret and mov or or push sub (bad) into mov mov jbe push out cmpsb or icebp or aam add lds cmpsb xlat mov mov ret mov movsl adc mov xchg negl cmp xchg lds mov movsl stos (bad) (bad) ret std mov mov lea mov or or mov mov fldcw ljmp mov jmp sbb sti sub (bad) cltd jecxz pop test cs and xor lret insl lea stos mov movsl pop cmpsb lock roll sbb cli mov lret andl sub jg repz xchg xchg jmp xor adc sub bound dec stos pop cltd add xor imul popf cmpsb les jno and push cwtl mov and outsb dec and mov pop pop mov cltd dec data16 cltd fild negl xchg cltd mov mov outsl pop xor adc imul insl add shr xchg js pop fimul aam (bad) ljmp xor out pop das cltd data16 insb cli and inc fstpt idivb lcall push jnp popf mov negb rcl movsl cmp bound test (bad) cltd out adc imul pop sbb lods jno cmp adc jp in les jmp out and mov (bad) lock dec aas push or pop sbb and sub fwait movsl out jbe jb add cmpsb adc and nop pop daa jmp cmp cmp sahf sbb inc repnz aas data16 and out cmpsb insb movsl jb sahf js pop xor sbb and push mov pop sbb xchg and stc movsl fsts bound adc jmp arpl cmpsl and push or push push cmp test aaa aaa daa mov xchg ljmp outsl and bound bound test call sub sbb xorb add out adc sahf gs dec fwait jecxz jns data16 scas and rcll gs enter jne jb sbb inc jae cmp imul les sbb inc mov cmp lret in mov xchg cmp adc inc les push out dec ja xor jmp out hlt jae lock inc pop mov and in mov inc push imul pop sub in and data16 mov adc fucomi or jb cmp inc and push imul stos bound cmp sbb out xchg xchg and aaa jecxz or fidivl inc and popa mov imul inc adc sub mov repz push and imul arpl mov (bad) pop cmpsb sar in mov jno bnd sbb out adc mov jg pop jns add std jae push xor adc dec aaa dec jnp nop push rcrb lret xor cli pushf cmp pop push orb insb sti lds or push jmp sub daa mov adc mov sbb jae push mov or es ror mov dec xchg loopne sbb mov push add ret into in gs pop out dec es in xchg jo sti dec adc ficomp lods pop rcll mov dec pop popa mov das xchg adc mov jno and xchg push adc test jecxz cwtl pop pop dec loope sbb mov xchg push sahf sbb jl jnp jno mov out pop imul popa sub adc les sbb cmc repnz addr16 mov add dec shll bound cltd stos pop push cmp inc pop imulb mov pop sbb xchg cvtps2pd add add js bound (bad) movaps pop and gs sti cmp adc pop ret ljmp mov andl mov int leave (bad) sar insl das sti movsb movsb data16 in jo push fcompl sbb push lret bound mov push stc ficom les stc fisttpll push leave clc test mov mov dec lcall shll fstps sbb jne xor mov rcrl aas lock data16 (bad) (bad) push mov into and movsl dec movsl push jb and mov aam add push ds mov daa xchg icebp repnz cmpsl xchg pop shlb ret add mov pop add shrb pop push cmp or cwtl insb pop jg pop stos xor movsb add in adc fsubrp xlat daa andb dec inc adc std mov and mov pop mov adc mov scas repnz out pop lods adc cmc mov rcll jp jns aam jmp aaa mov shl aam mov lret in andl orl xchg das lds daa lcall cmp test inc mov mov aad mov xchg aaa addr16 mov xor aad ficom (bad) push ljmp sub dec xchg out pop sahf out xlat xchg dec lahf inc popa xchg and cld rcrl sahf push mov inc cmp jg (bad) mov sbb into dec test imul mov add adc mov inc sarl xchg stc or mov pop dec add shll repz pop in int sub xor cmpsb mov add pop dec jo scas ljmp mov out mov movsb mov leave push popf nop rcrl es jb pushf loop cwtl mov mov add cmp xor xchg sbb stc mov sbb xchg stos inc sbbl push inc icebp fnsave cmpsb pop (bad) pop dec add dec jbe sbb shlb rorl mov ja leave cmpsb out or mov fwait adc or clc adc sbb sahf or push pop lret jmp and xchg sub flds jl aad sub and js movsb cmp xor loope mov dec adc nop and cmpsl (bad) leave sahf orl pop mov sti push bound jo push adc sbb adc mov cmpb loop sbbl add xor xchg icebp in and cmp mov into gs xchg cmp lret addr16 test in cmpsl andb sub dec dec mov jae outsl cmp adc mov movsb pop xor out in cmpsl sbb pop aam pop jae xchg cmc pop aaa jp les or cmpsb inc jb cld (bad) xchg sub sub test inc dec roll in cmpsl push (bad) stos ficompl xor dec (bad) out dec cmpsb add push daa cltd jg dec into decb dec cmpsb add jnp sbb pop push mov pop inc dec or xchg rcrl jbe in and scas cmp mov in jecxz js pop mov mov cli push mov add lcall (bad) cmc pop rcll mov jecxz loop adc inc inc dec mov test dec pushf pop xchg ds jns cmpsl push mov or jl loop cmpsb xchg sub push mov test ljmp shll cld pop mov and push jmp imull aas scas shrb pushf imul rorb inc mov data16 jmp repz std stos cltd test mov pop push (bad) fnstenv cld dec pop stc jno lods push mov dec push cmp cli push cld lds mov pop xchg pop arpl bound cmpsb add int3 push pop iret jne jae addr16 nop lods mov lret popa mov push push mov cld out adc movsb cmpsl lock mov sbb inc ds (bad) pop pop les and jecxz mov insl loope cltd cmpsl jnp dec xor mov repz push push adc mov inc and mov sbb (bad) cmpsl (bad) pop and subl mov mov cli (bad) mov cmp mov cmc sub and std mov mov popf pop and cltd in dec in or shl fldenv cmp loope imul fld bound outsb aaa (bad) cwtl mov mov lods popf mov imul and sub jecxz cmpsb lods adcl mov jns mov sbb inc and push mov dec jns jnp mov fwait cmpsl lods sbb mov cwtl mull push test dec scas aas jecxz xchg rolb ss push movsb or mov inc or adc (bad) fsubp out aas imul loope jns call imul mov insl (bad) out lea (bad) sub add push adc sbb cmpsl pushf ret cmpsb mov cltd or dec xor xor xchg pop mov lds mov mov in mov (bad) cwtl loope lods dec push jg sbb mov jns clc pop push mov call sub pop aam cld mov xchg and pop (bad) ds mov sub (bad) mov mov add xchg mov lods xor (bad) add call in fstpt push ss and (bad) xchg les aam scas into inc shr mov imull loopne inc in cmc int dec bound ud2 push sbb sub mov int xchg jae movsb clc pop pop mov lcall lods js sbb pop add mov (bad) stos adc cmpsl add inc mov loop rorl xor xchg ja ss xchg clc pop mov mov push outsl jmp inc adc pop mov add popa mov push mov pop lods imul adc pop xor cmp sub cs and adc add mov sbb push add or jno leave mov test mov inc or sbb push or jo ret sbb mov out popf mov fwait xchg mov movsb stos aaa adc jb xor xor xchg decb loop mov pop lea and stos and pop mov push mov loop aaa xlat and push lods scas mov popf stos or mov inc pop push dec push dec jb xchg pusha sar cmpsb mov loope stos dec xor xchg lods (bad) lea bound push push shrb xchg jo out xorl and mov movsl mov lock mov dec lods jecxz das lahf mov lcall mov mov jmp popf mov mov pop icebp addr16 jb xchg mov in xchg xchg testb movsb adcb int3 bound icebp push xor fdiv mov (bad) pop push movsl push fistpll push rcll into outsl mov sti xchg les out frstor test jl push sbb mov fstps repnz stos jo pop cmp adc (bad) mov mov cld in dec pop mov cmp cwtl (bad) fcmovbe sahf out test fldenv sub add arpl ret cmc inc out and dec gs push or xor mov pop fist or imul push popa cmp das fnstcw xchg pop jno push mov ret xchg int imul and out insl movsl sub lret dec push cltd int loopne or dec mov outsb sub les mov dec inc ja pop xor xor mov sahf inc fistl mov mov rcrl mov stos scas mov dec (bad) clc fwait lret (bad) sbb inc pop jp stos es mov mov imul mov mov roll icebp mov jl pushf nop dec mov jns imul leave mov inc rcll xor sub or mov xchg or cltd call movsl mov inc outsb or loop movsl and (bad) mov push lods and or sub adc adc popf lods xor xor shll xor js movsl adc or push xor je xlat jge hlt repnz shl movsl (bad) icebp xchg add xchg int3 cmp (bad) jmp dec jo and lahf mov and aad test js dec mov fnstsw mov sbb shrl es iret mov push lea (bad) ljmp fdivl and es (bad) mov or das (bad) int movsl mov xchg inc fcom adc fldl mov inc adc jmp cltd or jl lods dec mov mov sbb (bad) dec ret sahf mov or add xchg sarb dec mov jae mov mov scas xchg ret jl das orl jmp (bad) into mov xor and sahf aas mov adcl xchg clc int3 out sbb (bad) jno inc fwait aad aaa sbb cmp dec cmpsl and sub fistpll dec fwait sub xchg hlt dec or xor cmp or pushf xchg jnp movsb jns dec gs ret pop cmp sbb lret mov loop cld lea inc test fs leave movsl mov aaa lods mov je or enter out nop inc lds scas iret mov loope mov push je xchg mov cmpsl inc aam inc test adc push push mov (bad) cwtl xchg dec hlt addr16 pop mov sti and ja inc test sbb bound aaa (bad) xchg lds sbb mov push mov (bad) cmp sbb and lods popf mov dec add xchg adc mov mov (bad) rclb adc xchg push mov fld1 je mov adc inc cwtl jae ljmp dec in jge out dec or push (bad) hlt pop in (bad) (bad) (bad) sarb es loopne jno out fcom xchg icebp mov or leave dec movsb stos cmovp fdivrl pop push mov call loope out mov lret test sbb jge loope fbstp cmp sub cmpsl cwtl dec iret and sahf mov lcall jbe test xchg outsl mov je repnz orb jae and dec in js cwtl xor xor out movsl out in scas push (bad) mov mov dec aam jp repnz icebp rcll mov lahf mov adc gs imul mov cld sbb mov jp mov mov in fimul cld adc loopne fiaddl daa cmp inc adc adc dec movsb lods mov push cli pop push sbbl sub insb push sbb retw mov in push bound mov xor inc pop jae push adc ss pop lock cs lods pop testb cmpsb add inc inc mov mov pop xor xchg (bad) sub cld mov (bad) movsl andl jl xchg mov sub test js es in mov loope lds (bad) inc jmp movsl (bad) dec insl rcll mov inc jb cmp fs (bad) outsl or out aas cmp dec inc arpl pop adc cmpl add push sbb inc pop sub icebp inc inc pop mov mov stos cwtl mov adc mov xor (bad) jne xchg mov sbb shrl imul mov mov dec push movsl outsb push int lret imul mov xor pop jp jns out clc mov add insb jcxz into mov cmc jle daa test push jbe xchg jb in movsb addr16 outsb in jecxz js dec test decb mov out push ljmp (bad) ss imul mov mov mov iret jae push sbb jb loopne cmp lcall cmpsb mov jmp or cld pop mov mov movl adc out shrl jo lods fisubl cli pop or outsb pusha push sti faddp xchg lock cmpsl mov push xchg fwait and and daa iret xchg lret lds shll and mov xchg js jns shlb fdivs jecxz xlat sub mov lcall inc adc pop push dec mov popf adc cmp fidivr jo mov (bad) pop xchg nop repnz lret aam fisubl scas or ja inc or hlt ds repz jge outsl ljmp jb mov sub popf lcall and mov jbe ficomp insl jmp sahf stc push imul mov dec bound in hlt mov (bad) aaa and addl xchg ss fcmovbe cmpsl inc in push pop or or or stc and dec (bad) mov gs fisubrl pop test loope out lcall mov sbb cmp mov xchg iret std mov jmp jl repnz xchg bound mov shl cmp adc movl inc js inc inc push xor mov xchg loopne push push pop (bad) mov fstps add push adc lret icebp mov push inc jl aas adc int3 ja repnz scas data16 xor gs gs scas add pop movsl lods lahf and inc enter cmc loopne or and dec adcb clc sub pop orl imul paddq pop popf xchg pop loop bound and mov mov pop xor insl fiadd out sti repnz mov test mov adc and punpckhbw cltd and lds outsl ja pop and popf daa cmpsl std popa clc xchg xor sbb lret test fisubl iret mov add int3 dec mov roll mov pop push movsl xchg sbbb or jge jl or sbb stc (bad) mov rcrb cmpsl lea jns stos pop das test std cltd sub cmpsl pop aaa lock mov push inc dec pop insb cli loope add shlb mov outsl insb jp into xor mov mov insb mov mov pop sbb fidivrl cltd xchg cmpsl mov rorl xchg xor mov sub xchg pushf std mov push pop popf (bad) int jns das roll push aad out dec outsl je into ja jno popa push js pop mov cmpsb inc nop in pop fisubrl jo es xor nop xchg push jo jns (bad) xlat mov push cmp jle pop push incl sbb adc (bad) leave mov push cmp sbb add mov sbb clc mov int xor aaa xchg pushf nop shrl fstl dec sbb inc mov mov jl dec repnz popa pop mov cvttps2pi cmpsb sub aas (bad) xor sub mov inc icebp cltd jnp lahf or cmp sub mov ss inc xchg adc inc stos dec push pop jle movsb mov shlb in cmp cmpsb dec test (bad) fisubrl stos dec push loope cld loope push jbe push and stos popf out xchg push ljmp mov or mov xchg jmp dec (bad) insb sbb mov jecxz cltd lods scas xor mov add decl cmp in hlt xchg xor outsb out or movsl popf jge,pn add and jp push sbb xchg push jns sbb mov in jnp movsl xlat cmp push jmp pusha inc (bad) mov push mov add lret sub sbb xor stos cmpsb dec add pop cltd mov in mov xchg movsb arpl add mov mov add gs xor repnz or sub push pop pushf mov (bad) push push add popa xchg mov out jp movsl xlat or mov sub daa and lods mov int3 ret rcrb and repnz mov icebp jo mov lahf mov mov sbb (bad) in mov loopne mov iret cltd lcall mov xor adc dec mov xlat mov outsb mov mov adc ficoml cltd cld adc movsb mov scas mov lock clc mov xchg pop dec or inc scas cltd scas fildll mov ljmp mov or or shl xchg or inc xlat xor pop sahf mov cmc xor and xor mov mov jp jecxz aas cltd xor xchg mov jns xchg ja sbbb stc mov clc in mov scas push inc cltd test mov leave shrb aad push mov cld push cmp int3 jge inc (bad) mov mov cmpsb frstor iret jge push mov out inc adc je ret xchg (bad) add loop xor pop cltd mov xchg insb loopne mov inc scas cmp and mov xchg test jne out repz ss insl jge mov adc loope (bad) jl loope add lods sbb jmp dec xchg movsl std stos ljmp mov daa pop push adc lock pushf adc pop movsb mov sbb mov add push and es es call or frstor sub cld mov aas adc popf out mov and mov ret inc rolb jge push lahf inc es jo loope xlat (bad) cltd fs lahf sub push mov and cltd xor push jbe mov js clc mov jns lock adc out mov cltd dec cmp sub mov adc cltd mov sbb test int rclb xchg dec ret inc scas clc jp mov mov loop dec shrb xor sbb push inc iret xor inc or (bad) cltd pusha xor pop std jne cs mov arpl adc cmp dec cmp push ja sbb pop mov and adc enter xchg movsl xchg ret hlt mov loopne cwtl mov or and cmpsb mov (bad) fisttp sbb cmp push mov push xor inc dec or push inc mov xchg mov pop mov mov mov call sub imul mov mov int inc fwait dec lds lcall dec pop fidivr std sbb test mov jg and andl out test inc loop add movsl sbb mov sbb lods cmpsb call jle sbb mov dec rclb cmp fadds push cs fiaddl pop sbb push out pop inc imul pop sahf mov mov gs add pop cmp push sarb rolb mov les mov lds dec bound pop sub cltd dec add cmpsb jnp sub movsl outsl lock stc mov (bad) adc enter inc into xchg xlat femms cmp mov xlat cltd mov adc mov inc movsl (bad) shll call aas push add imul sbb rolb mull push pop iret fs dec or mov aad popf jmp pop push lea js ds loop and aam adc push add sbb mov pop push es jno mov rcl (bad) push adc adc jle adc jo jmp in jl gs xchg add fs xchg push out mov bound cmpsb pop dec stos cmpsl ds ret adc loopne mov sahf pop outsl clc push sbb cs push fsts test dec dec jb pop divl mov pop mov lret fcoml xchg (bad) hlt enter lret mov scas xor sbb cmpl push ljmp js sub addl movsl jmp cld xchg add push and int3 add push (bad) fwait pop bound cmp pop mov stos pop repnz and movsl adc data16 pop dec dec mov xchg arpl repnz cmpsl cmp int3 add out in pop imul roll and bound add enter outsl pusha pop xor movsl xor xchg pop pop out add lahf pop aad dec pop movsb jne sub mov pop bound enter bnd aas xchg xchg insl xchg cmp bound sbb push cmp pop jge xchg dec (bad) mov inc lods (bad) jge jl loope sbb sbb push sbb lds fwait jmp (bad) out andl cmpsl mov shll inc and sbb cmpsb mov (bad) xchg cmpsl mov ljmp mov jmp xor pusha mov push add pop aad stos pop sub mov rcrl inc or lea jecxz inc mov and mov pop iret rorl jno lods enter fcmovnbe bound xor xchg jno push lcall into jl or sbb (bad) mov jae ljmp fwait cmpsb shrl or cmp sarl mov outsb test mov push ja bound sub in cmp sub pop ret mov shlb push rorl leave push mov or jecxz mov fwait push cmpsb bound jge pop xchg movsl movsb pop pushf push xor lods (bad) push gs popf inc inc mov daa aaa (bad) aad test pushf aas sbb cltd mov js (bad) mov shr mov shrb and push addr16 pusha cmpsl test push inc in int mov stos movsl xchg out insb jecxz add nop or and out imul dec in mov cmp movl jg mov sub jo mov and scas in mov aad inc ss or xor movsb cmpsb mov cmp sbb adc ficompl movsb pushf clc in mov outsb loop gs mov lods stos mov popa pop movsl pop sub repz dec add faddl insl ja and mov add and xchg adc pop lods mov add cwtl fs cmc lock nop mov xor dec jnp mov mov pop mov fs sub inc (bad) fldenv mov or push ljmp dec or insl mov int dec pop sbb and cld push enter jmp inc lods ds rol bound jns scas mov mov push and push daa jb iret and cli fnstcw (bad) xor sbb lods and mov inc push test mov jmp repnz push sub mov inc test pop sub xor mull test shll leave sbb mov xchg inc out pop mov nop mov call push std jne ror andl gs push mov jb test add pusha jae stos xor js dec dec (bad) mov dec add (bad) cltd pop sarl jo push mov into mov imul and cltd fldl2t ret enter add jns loop mov jge dec dec movsb dec add push pop push xor inc cs rolb lds addr16 cmp out clc mov rorl xor ss jecxz lds (bad) mov int3 xchg lds test cmpsl and je outsl and adc popf mov lahf xlat pop or adc mov xor dec addl imul fstpt cltd mov dec roll (bad) xor xchg and icebp fwait cltd inc call add shlb mov lds out into lea mov push ss push lods jne adc addr16 int3 ljmp out andl sub sbb xor test jp adcb add jl rol xchg pop xchg and push pop add mov in mov out ret jno jecxz in loopne add mov sbb cltd aas adc lret jns sub hlt sar scas and mov int pushf xor and call fdivr loopne sub add (bad) mov and push mov les jo adc ja mov sub xchg hlt mov cmp mov std ret fiadd ss mov sti mov push mov inc lods daa xor add push popf into nop cs sub (bad) loopne dec mov test jae sbb shll pushf imull pop and mov sbb xchg pushf xchg into inc test xor dec (bad) cli mov mov (bad) out push xorl jp mov mov cld mov mov daa inc stos xchg mov mov mov xor add outsb std dec ja cltd xlat fs cmp mov inc adcl add cld jl dec pop xor sub ror mov fistpll mov fdivs (bad) pop test insl insl push icebp push jbe mov mov adc test mov adc mov push shl call cmc dec sbb cmpsb in in andl or daa sub ret xchg mov mov cmp iret lds je sbb mov adc mov mov push pop hlt sub leave loop mov mov cmp cltd mov hlt pop xlat pop jge ss rcl mov mov test iret mov cmp pop add dec or mov aaa cld out addl jns jo mov dec xor adc into cmc shll sahf lds pop jmp or sub mov cmp mov int add inc lret or dec movsl lahf enter dec jno dec mov sbb cmp adc pop cli ret and mov out dec (bad) mov mov cmpsl mov ret xchg cmp insl mov ja out xor jbe and out push dec pop movsb jle mov add cmpsb cli or rol mov pop and test or and mov (bad) std aaa mov faddl imul rol push sub xchg cmpsl sahf shlb cli xchg mov jb mov pop sub lahf clc pop jnp cmpsb out out add jmp jge sarb mov cmpsb pop dec dec mov push lods les das stos or jbe lds sub test lea push dec movsb out lret sub xchg and jg loop imul cmpsl out mov inc xchg fnstenv inc sbb ret js mov sbb cmpsl sti pop add xor xor test xchg push mov cmpsb push sbb mov xchg jns stos mov leave sub inc xor popa idivl mov cmp imul iret mov popf adc int and aam js jne pop xchg adc mov mov int3 xchg mov pop xchg pop call (bad) and and jge pop push xchg sbb push lret and and lcall aad mov add out dec xor sbb nop or cmp popf mov or ret jb daa loopne aas mov (bad) in clc inc mov inc imull or cmp dec mov sahf mov jg sbb jecxz adc cld fwait mov (bad) jle mov js inc xchg push jae fistpl cmp mov cld cmp jns sbb addl loope mov sahf aad inc jp mov in mov ljmp cmpsl stos and rcrl loop or push call xor pusha dec mov ja sbb inc xchg (bad) xor mov jno stos repnz loop (bad) sti jp lret mov lock push push and pushf jns sub mov js sub movsb test daa push mov in mov insl lret subb jns push roll sbbl (bad) xchg repnz test shl cltd pusha loopne sahf jbe and pop int3 sub push add movsl pop pop sbb mov dec (bad) ss mov scas pop inc mov mov mov and pop hlt (bad) sti mov outsb fs mov and inc in mov shrb pusha outsb mov mov nop mov jo push lahf dec or xor xchg and imul and cmp mov lret stc movsl fsts in mov stos pop sub sbb (bad) sti dec xchg negb and pop mov inc or js sbb add vpmulhw scas inc (bad) or lret push add flds js pop in cmpl lods and arpl mov jge dec insl adc fistpl xor inc bound (bad) enter (bad) lods in scas loopne cli gs xchg xchg adc mov pop push out inc mov mov cmpsb bound ss pop psrlw dec jp pop (bad) jmp pop dec movsb lods movsb in mov adc sub or adc test stc or bound repz and xchg mov push cmpsb in mov inc lock push bound lods mov mov (bad) fsubl and iret addr16 cmpsl adc insl and or mov inc cmpps enter cmp push sub dec or add xor femms inc rolb es gs xchg mov insb roll test adc push and cli push call pop inc mov dec out mov push add call out in daa jp das addb mov imul mov sub add lods cmovno in or mov adc push aas imul ret arpl cmp sbb mov sar ljmp int mov mov std and ret out jns mov out jmp add and and mov mov pop stos hlt mov testb xor mov mov negl (bad) (bad) outsl dec add adc out mov mov lcall mov pop lret repnz mov shrl insb andl frstor pop imul xchg sarb int3 xor pusha pop lock ljmp cltd push call cmp (bad) inc ret xchg push mov inc fs jo push cmc add or imul (bad) sarl lea (bad) pop mov cmp sbb ret (bad) xchg sbb mov or mov xchg push cli fisub sbb pop push mov push cmpsb scas and mov cmp inc add mov rcrb in push movsb add xchg inc xchg jmp out jecxz cmpsl mov push mov ss jp int mov push dec in addr16 jl dec cltd add sar insb mov fist das and das add sub adcb xchg mov cli mov sbb or pop dec inc mov mov sub mov insl in cmpsl sbb mov aam icebp push mov in mov ret sarb xor popf mov cltd add (bad) out cmp push xor push sbb into pusha je jne fdivs nop popf mov sarl add inc jecxz mov shrl repz push mov cmc iret (bad) js jns adc mov jecxz mov das loopne fdivs or addl mov mov xor inc lret mov fs pop cmp push add cwtl mov mov out mov cmp pop sbb popa gs into and cltd push adc mov mov or (bad) dec push add cmpsl mov aas push mov mov mov add imul cmc call jge xchg mov pop and lcall in test or jp sub jmp lock bound mov xor mulb pushf and ds in inc int add adc fldcw aam es or out jne cmpsl dec inc push in sub cwtl icebp and cli ret dec (bad) xor xor adc pop cmpsl hlt faddl and sub xchg cmp dec pop mov scas lcall out jecxz pop mov fs (bad) mov add push cmp jno addr16 or in mov arpl push dec cltd stos mov sbb jbe cwtl out movsl ret cmpl push inc mov stos mov (bad) sahf test pop jl mov lcall mov jns cmp imul lahf mov mov mov cmpl push and pop jmp nop out aas xchg mov jo ds pop and mov std (bad) test lods scas sarb in hlt iret insb fsubs mov lods push lahf and cli call mov push nop aas add push mov push stos stos xchg sbb data16 xor adc lret mov out (bad) dec pusha pop jae pop inc icebp jmp out scas mov sbb or pop add icebp cltd repnz mov push and inc js cmpsb (bad) stc jnp fucom mov xor jne sub sbb into (bad) push lcall mov pop dec sbb test loop notl faddl aad fistpll cltd aas sbb shrl mov pop les jge add dec dec mov adc mov mov fwait mov add mov and aas push in mov mov insb in sub pop and jmp les mov popf sbb test sarb mov mov rorl mov js in icebp pop mov out mov mov mov mov mov and mov pushf mov jae js data16 out push mov pop imul out (bad) lea test int3 mov ss hlt fdivrl mov fidivl sbb xor push insl cltd lods push inc and flds das mov xchg les fs ja jnp ja mov inc jl and leave mov lods jnp fs das adc mov fwait clc and pop test out sub sub pop and call mov cmp es xchg jns dec int3 loope rcll ds ds cltd sub cltd shlb fwait loopne sub mov inc cmp sub out shlw stos and or inc push xchg cmp pop mov mov das cmp (bad) and sub lods das repnz and mov stos sar sbb std dec lahf xchg nop xchg dec hlt mov pusha mov jge shrl push inc pop cmc repz sbb (bad) cld rorl and pop scas adc aas negb pop std movsb fiadd cmp nop (bad) mov mov mov call scas iret push inc push stos mov (bad) xor test jle jae movsb and xor cltd mov xchg xor pop test movsl push mov outsb int out int3 dec lods mov imul mov (bad) rcrl aaa out cmp test icebp decb push lock leave sbb push gs add cmp pop cld and jle add pop inc jmp (bad) in dec pop (bad) idivb cs les add xchg mov xchg mov adc pop je sbb push in fdivrs jecxz inc push je dec add mov sub bound mov in mov mov push or add imul cmp fadd jmp ret mov or lods pop adc (bad) out mov cmc in mov or pop and or fist dec inc lahf addr16 jae sbb mov add jbe lahf mov movsl mov push scas iret push mov cmpsb out sbb cmpsl jne sub pop push mov jae outsb ljmp xor mov movsl mov xchg push fstpt jnp enter sbb cmp cmp imul icebp push xchg dec add xor aaa add sti cmp nop dec xchg shr sub jo call and cltd push out pop push inc mov mov sbb cmpsl push rcll jno jmp xor mov outsb (bad) pop loop and jns sub adc inc xor arpl mov adc gs lds xor xor out mov sbb push jmp jbe pop (bad) out pusha pop mov lods jge mull push js ljmp xchg mov push mov mov pushf arpl cmpb lods mov push inc shll mov and ds xor sarb (bad) (bad) (bad) ret movsl push fstps loope jecxz pop (bad) pop movsl xor mov pop imul pop testb dec popf (bad) sarl and adc inc pop sbb pop push outsb xchg push dec xchg push inc out in clc xchg lea movsl mov sbb mov movsl push add add sbb xor inc push sar add adc out call mov and cmc repnz push jecxz jmp in (bad) dec (bad) mov loopne push mov repz pop cmpsb xor adc mov loop fsubrs addl and mov or jp call ljmp sbb and rorb in push or mov cli sbb or lcall inc stc in stos mov sbbl aad sub imul add popa dec mov inc sti scas dec das icebp dec push in mov sahf inc push xor or divl xchg or in pop (bad) repnz xor stos dec inc ror xorb cmp nop and jno push push sub ret push pop dec mov in pusha pop xchg xchg mov xor pop (bad) and popf mov cltd add out mov fdivrl mov or (bad) icebp mov fs mov scas faddl dec insb push pop sbb mov imul scas loope mov xchg (bad) mov lods and jns pop mov rcrl fscale adc (bad) in or fnstsw pushw and ror leave adc sub pop dec mov push stc push ret lock ds mov mov lahf repz out inc adc (bad) sub jno push out xchg jl sbb mov out sub jae push sarl out shr inc jae push and je mov mov cmpsb mov xor push cmpsb xchg lret mov xor mov pop cli pop lds push (bad) call inc push inc movsl pop std (bad) repz xor push bound imul mov ror and sub popa pop push dec ljmp xchg iret pop xchg sahf mov inc sub mov cmp xor pop outsl addl cmpsl movsl (bad) sub fwait sub push arpl jo sti or cltd mov lods movsl mov sub push out mov adc ret in add fdivrs xor jne stos push and dec pop mov inc or roll inc stos iret mov push aaa or test mov dec aad dec add push or mov mov sub sub mov push arpl sbbl or xchg xor jno mulb loope xchg and mov out dec pop cwtl lock pop mov shlb test in scas pop xor mov aaa and scas or mov mov mov sahf jnp xchg out sub mov mov inc mov dec push push mov rorl mov iret lds data16 cmp sbb mov push aaa fidivl sarl in mov push cltd push sbb dec cmpsb gs mov in in and pop mov jle popa imul jl mov (bad) inc sub sbb push xor fdivrs loopne in jl xchg mov mov pusha ja mov xlat movsl add mov sarl mov inc and mov mov adc loop and pop (bad) dec or movsl adcl or dec jg and enter les and lods mov andb repnz jecxz push dec cmc mov test fcomp sub lea test mov cmp daa mov jns or rolb jo mov cs xor mov mov sbb adc mov int out pushf pop mov sub mov jmp (bad) out mov xchg rorb mov movsl inc scas stos push add mov sub outsb mov pop xchg jno cmpsb scas es xchg and inc dec mov push rcr fistpll movsl mov lds jge or into xchg mov and in out outsl mov push mov cli scas jno or mov lret sub mov sbb pop mov in into frstor sbbb pushf cwtl mov insb sub imul sbb mov data16 cmpsb ljmp movsb sub xchg cs inc outsl push loope inc lret push dec test test add jns pop push xchg movsl xchg cbtw xchg bound mov rolb andl and dec call ret mov push push jno dec test pop rorl aam xor xor sbb cmp cwtl das xor inc fbstp sbb xchg sbb mov into inc sbb or mov xor mov mov out pop xchg sbb cmpb movsl fldl xor mov data16 mov push aas xchg sbb jnp cmpsb sbb mov push jae cmp sbb rcrl cltd xor cmp push mov sar cmc dec xchg mov addr16 mov in scas inc xchg jmp imul cwtl add push add dec outsb mov add xchg daa sbb cmp aam pop fdivrs (bad) dec add pop mov repnz xchg (bad) ljmp inc test cli loop cmp push xchg push addr16 adc push inc cmp in mov mov pop sti movsl mov mov fstl daa cmp popf ds push cmp cmp push add aad (bad) or dec add insl test subl or pop (bad) lods movsl or loop call inc cwtl pusha int sbb imul pop pushf dec mov or (bad) ret sbb sub mulb push and push mov std fnsave pop es mov jp sbb in movsl ficompl test sub ljmp dec add (bad) mov sub sbb lret pop fsubl mov int3 dec add cmpsb stc jb cmp scas subl xchg pop fcomi rorb das xchg rcll push bound dec sub add jns (bad) dec mov mov int loope aaa outsb movsl push (bad) xchg int3 pop mov lds inc mov jns sbb mov mov into mov xorl ds pop in push mov shlb scas mov cmpsl lock idivb push imul movsl and cmp sub pushf xchg ret nop mov mov mov stc xor ret mov and call dec xchg rcll aaa mov imul cltd or mov jge arpl or push je popf mov inc or stc mov test or xor in pmaddwd imull add mov sbbl andb mov pop lds xor scas jmp (bad) mov inc bound daa cmp mov data16 mov nop and xchg aaa xchg into and add cmp cmp xchg (bad) cmpsl mov add dec push mov pop mov xchg imul mov addl dec or cmpsl sti daa dec cld (bad) mov cwtl arpl cmc leave jecxz dec pop pop hlt push ljmp sbb mov inc pushf adc mov insl rep (bad) mov dec int push mov andl jb ret pop or mov (bad) cld (bad) int adc scas sub cmpsl popa fsubs sti cmpsl dec pop lahf loop adc dec fldt cltd mov addl and cmpsl test out cmpsb xor stos push and stc xchg mov push movsl cmp xchg mov push xchg es lret cmp xchg stc inc gs or das sub loope add dec sub mov dec xor jb out scas cmpsl movsl mov mov les lea cs mov inc out lahf cmp loopne push cli das mov jmp outsl shl push sbb lock pop sub pop mov lock fwait mul jne (bad) push (bad) dec push adc jg push cltd jne and gs daa js mov loopne pusha xchg sahf inc (bad) (bad) je xchg out jbe mov out pop dec in cmpsl dec data16 cmpsl cmc mov pop or inc movsl (bad) in mov (bad) aaa (bad) (bad) hlt in mov outsb nop mov sbb inc adc hlt cmp bound in pop dec xchg xchg xchg in xchg xor bound mov cmp pop dec dec dec in fsubl and push mov xor cmpsb xchg jmp xor push gs mov aam in adc dec xchg mov outsl pop (bad) dec dec arpl (bad) mov push adc mov xchg mov and push jp lods mov jnp mov jmp dec iret mov fdivrs es push rorb call mov adc cmovs call mov clc lahf mov jecxz and mov imul stos in icebp aam mov xlat imul aad jnp jno add add mov dec fisttpl jge movsb in pop mov jecxz fstpt (bad) pop inc or ljmp inc mov mov mov popa jns mul sar jo lret test scas lahf lea imul js cwtl loope cltd ret sbbb push outsb (bad) push and mov xor dec bound mov js shll outsb insl shlb repnz dec stos in and inc mov mov (bad) repz loope popf les sar xchg imul icebp mov jp dec into mov imul sbb cs pushf cmpsb jge cmp les push sub scas xchg in imul push push xor lods mov pop mov rorl inc ljmp ret jne jecxz pop jnp add in and jge das gs adc and inc shll lods (bad) fdivl push mov scas test daa (bad) sub xchg es scas xchg xor pop arpl push shr lea mov xchg shrl xchg scas cmpsb mov imul lcall in enter jns and js in lods dec sub jbe and cmp test enter mov andl mov cmp faddp mov xchg sbb (bad) push out jge cmc pop dec ja push or mov lea inc push fsubl outsb movsl shr pusha push scas fwait mov cld mov or notl or xchg mov sahf sbb in call aam mov mov pushf xor and sub mov test xor cmc pop std xor stos dec mov cmc insl xchg mov mov mov add test in mov es lods pusha jp cmpsb ja mov jb xchg cli movsl scas add push in ret pusha stos loope stos mov pop pop mov addr16 sbb inc push lea out adc iret movsl add or and and fadds mov cmp adc sub xchg clc mov into (bad) mov and inc mov cmc xor mov pop and push inc inc jmp (bad) int lret mov xor sti or jge mov jnp cmp and mov push or mov push dec stc cmpsb in pop cmp in fidivr mov inc xchg mov shr mov dec into and add push (bad) mov cli test pusha ja cltd leave xchg mov push mulb xor lock insl sub popf mov add mov add jns adc push imul loop mov adc add mov lock push inc mov sub movsl jne jecxz and mov cltd xchg outsl mov jno mov scas or enter jns jp imul inc mov mov outsl pop sarl out arpl xchg loope sub (bad) xor ret test movsl nop mov xor fucomp mov mov jg fidivl jns inc jmp scas mov cmp lods sub mov leave ret sarl repnz lret test or jns sbb xchg ret mov xor ss imul js push (bad) mov mov pop cmp xchg and imul sub (bad) pop iret (bad) loope dec xchg jne adc push aad aad mov inc adc xchg adc dec orl and inc mov mov push sbb jp fdivs jecxz cmp mov push out lods outsb mov pop mov mov in movsb mov movsl (bad) mov jnp call loop mov push push mov inc insl out push cltd push (bad) mov jmp mov sub mov fucomp rcl loop sbb dec ficomp js sbb or gs xchg xchg xchg mov scas lcall cltd mov mov lahf mov nop jns ss aaa fwait cmpsl mov mov sahf mov repnz and movsl (bad) lcall in jns push ljmp mov push icebp scas insb push pushf faddl adc or mov inc xchg or and arpl (bad) aad mov adcl mov sbbl cltd imul test and fcomps (bad) lret leave aam in call movsb pushf iret loope mov fiaddl sub lcall or and push in es daa fnstenv imul sbb lahf mov mov negb movsl ja inc adc stos mov dec jnp sbb pop cmc xlat sbb mov jns xor push xor sub pusha lock mov and adc pop sarb xor js jecxz imul pop into sbb insl int mov mov ficoml xchg in cltd nop ret aam cmp cmpsl lods xor (bad) mov mov cltd es jmp jmp and gs push cmp iret mov pop scas mov cmp cltd mov repnz das cs sub adc movsl xchg insl bound mov out (bad) clc or ds jae out mov lahf test mov jmp sbb mov lea movsb push sti mov lsl popf and (bad) bound mov (bad) adc xor or xchg jg repz arpl xchg xchg cmc pop mov mov mov insl or xlat inc xor cmp dec loopne pusha stos cmpsl xchg mov push sbb push mov mov mov movsl addr16 lret sbb pop xor or pop mov ret and mov das sbb and cwtl cmp jnp sbb (bad) mov loope mov movsl mov and lds movsl push jmp bound sbb (bad) xchg adc or xor rcl jno cmp jbe jge loope movsl sbbb mov sahf cmp popa mov xlat dec bound mov mov xor mov loopne jb fwait and dec mov js and jge fistl dec pop pop scas std arpl and jnp sub js loopne pop cmpsb hlt push sbb sub and lcall pop mov sub andl push adc (bad) leave jno sub jle packuswb lds addl nop push pusha (bad) or pusha loopne mov mov jne arpl mov sub sbb sbb mov mov xchg push das subl sbb pop scas in hlt adc movsb jmp push in mov xor mov mov or fwait leave cltd xor push push rclb xchg add jmp test mov push mov dec call push xor mov add push xchg mov lret shl int leave mov pop bound xor in js cwtl cli mov (bad) and mov push loop mov push push pushf (bad) int xor rolb ss insb inc out mov icebp out and sub push lds mov lods add dec jbe fimull cltd push inc mov and xor xor cwtl out and jns (bad) push push push mov push xor cli movsb lock aas aad adc stos sub jae mov daa xor sub push add or js movsl mov add sub test mov inc or push call lret fisub inc mov cmpsl mov popf xchg mov test or mov cmp fstp ret inc notb in mov call jne out movsb add xchg les and mov sub mov arpl pop aad mov stos test inc add pop ret mov and out shl mov or inc pop push (bad) xchg mov into mov inc icebp mov xor dec cmp mov push shll leave stos mov scas mov loop xchg mov sbb xchg scas mov ds sbb in cmpsl fwait lock test mov and or jecxz mov xchg dec (bad) out or add cmp xchg mulb ljmp xchg movsb mov out loopne jns cltd cmpsl and jg (bad) mov stos lea adc jb mov arpl mov sub inc sub aaa and mov loop hlt pop aam sbb (bad) mov pop cli es push in (bad) int3 push add push and cmpsl sbb movb arpl rcr inc jae cmp mov sub bound negl sahf pushf mov and xchg nop push (bad) mov mov ljmp push mov fcoml push sahf inc mov push (bad) movsl inc popa out inc loopne add and xor mov lea sub imul mov push stc loopne cltd lret mov and pop fucom pop scas inc outsl out test fiadd (bad) mov outsb cltd cmc (bad) dec mov inc push mov xchg loopne scas lea in popf test call inc ljmp jne out mov push pop mov and pusha pop ljmp ret sti or mov push dec jbe cmpsb stos mov lret test mov insb loope pop mov push sub jge test pop mov jnp call mov lods xchg mov pushf dec int fsubs mov bound insl sbb cmpsl outsl sti dec out stos or or cltd mov xor xor cwtl mov xor push sti pop mov aad pop sbbl mov out mulb pop pop movsb mov and xchg mov ja mov iret add lods ljmp imul adc adc cwtl xchg cmpsl mov int3 call rorl dec cld xchg cli inc cmp mov push iret (bad) imul bound popa daa fistpl add jl add mov cmp xchg das cli sbb jecxz mov and lcall out cmpsb push push lret iret pop pop test pop lea fwait ljmp (bad) (bad) in fcomps cmp movsb rcrl cltd mov mov mov data16 (bad) mov popf inc jne pusha or pop xchg sbb int lods shl sbb ja aad in rclb xor lret dec (bad) leave fistp sbb arpl cmp pop mov in lock xchg sbb pushf scas dec push testl aam (bad) idivl fimull lock mov mov xchg adc fidivr lahf mov pop cmp (bad) xchg mov xchg mov (bad) xchg inc mov xchg sub push leave xchg rcrb fidivl jbe mov pop xlat call aas cmp sarl scas or inc jmp sub adc fs mov stos mov pop enter mov mov jae daa dec or stos scas cmp mov jns mov fisub mov jg xlat stos mov or xchg dec mov hlt mov addr16 xchg or dec inc mov lcall and mov mov cld pop pop cltd mov lret aaa mov jmp mov adc jbe push dec cmp and sub sub xchg movsb cmp jbe mov hlt mov jle jp in cmpsb xor mov mov test iret rorl pop fdivrl jmp jnp jo in imul dec mov outsb in mov test scas addr16 test in xchg paddw cmp cld dec scas mov cmp or popa popf or pop (bad) fist xchg mov insb dec loope jecxz pop std or or pop fldcw insl cwtl out mov movsb mov cmp cs sbb repnz or flds sarl cmc hlt loop push or lods xchg sub out bound pop in push call xor jno daa gs mov dec jbe icebp ljmp jmp dec jl jns inc pop mov mov lock mov (bad) stc mov mov jle push addr16 push or sub mov js cmpsb push mov je mov clc inc sub in cmp dec xchg outsb scas std cli cmpsb jmp xor mov repz roll push movsl fdivs sub and xor mov cmp orl mov cwtl sub fdivp mov push cli mov mov inc jecxz inc adc stos or adc and fldl push jnp movsb mov sub push dec lcall push cltd notb test packssdw dec cmp adc pusha pop mov (bad) ja test in fisub subl daa sub add nop xchg jge aad in leave mov push in fs jo shll jge pop jns fdivs fwait mov sub or fwait pop hlt cs mov shl orl xor loop sbb cltd sub ljmp insl jo adc imull pop push add mov mov (bad) daa ss das and mov cmpsl mov icebp in bound mov push push cs insb mov sti test jns pop pop js xor add es lock dec mov mov jne movlps fstps mov inc adc mov icebp push xor mov xlat mov clc out sbb cmp xor push sti pop movsl movsb jl adc push data16 in adc jns sbb dec or adc push add sub fld1 push cltd (bad) add in loopne popa aaa leave fwait adc add mov mov cmp sub je lods xchg or fsub cmpb dec loopne mov inc sti push add cltd and push push xor es das push xor ret aam inc cmp mov and push mov test xchg pop repnz xor mov inc jp movsl dec cmpsb mov jno jne push ds sub and call lret iret bound sub mov loope and psubq mov add cmp insb loope sub rcr popf loopne dec add push pop icebp jle (bad) cmpsl xchg xor cld add mov loop mov ret bound scas dec adc sub xor cwtl imul adc movsl sub jle mov dec or insb in mov mov mov or jbe fcom cmpsl xchg roll addr16 mov out fs cmp pop out mov movsl push and mov push add cmp iret push mov inc adc test mov pop lcall jge fdivrs lret sbb mov out and aas test mov xchg ret (bad) mov and dec mov push sbb xchg out lods mov or inc push cmp push mov test daa imul mov mov (bad) iret mov shll lock push movsl fwait negb frstor out fs popa xchg xchg xchg icebp (bad) push pop or mov and mov test push les daa xor lods mov xor mov mov inc cmp dec push pop loope adc sahf and push cmc lret cld cmpsb or jl push cmc jge (bad) imul push lret adc test repnz ja jo or mov xchg xchg movsb mov sbb mov mov int sub mov in test lods iret in pop push insl cmc mov movsl pop (bad) adcl inc mov insl shll mov daa mov data16 sub jp test cmp gs imul shr jmp push xchg mov loope and (bad) das adc stc push jl xor test sti xchg fcmovne enter adc jmp loop xor mov ret inc xor rcr xor mov and adc xchg jno sub or hlt aaa and ja pop ret nop jmp pop mov (bad) push add push and add xchg rcr or daa (bad) add xchg (bad) imul cmpsb int mov jns or fwait dec mov or and sbb inc addl fmul jle and js push dec pusha out movsl (bad) fistl call loope mov ss and push mov mov or int mov pushf pop or mov xor scas adc cmp inc pop scas fldenv xchg sub cmp mov pop mov insb xchg out xchg mov pushf mov push clc imulb in adc stos mov sahf rdtsc aad adc in mov sti pop dec rolb push inc jno mov jmp cltd xchg jbe jle sar xlat and lods mov cmovae mov test mulb and or jo inc clc aad sti push mov jmp movsl repz push dec and mov mov lods pop mov mov subl out mov adc mov test push mov xchg mov mov jae cmp and lods dec jb inc dec mov push lock adc mov aam data16 pop outsl loop scas dec int3 popf xor (bad) in dec or mov adc rorl push ds xchg mov mov (bad) rcrl sbbb adc pop dec sub rcll or cltd movsl mov jnp add (bad) pop mov gs push push mov inc mov (bad) lods mov incb jge jmp scas out jecxz adcl mov and mov cmp fmull add dec dec lds ffreep pop xlat aam add cmp dec and cmp lea cmp adc pop xchg in lret loopne mov mov int sub cmp test push dec fsubrl or loopne sbb mov and and xchg add sub into icebp sarb fdivl inc lahf ret mov lcall popf pop test cmpsl xor scas pop add mov js xor dec insl fdivr mov lea jmp cmp add inc pop fsubrp and and je fwait icebp out bound mov mov mov mov xor sub repz xor jnp jp hlt sub inc push shrl cmp ret cld and stos cmpl cld rcrl and adc (bad) movb jno pop pop paddsb xchg and xchg mov cmp fwait push push add movsl iret adc repz cmpsl loopne shlb lea mov jl ds sub fwait sbb jns pop inc popa cltd je int3 stc lock fdivr in xor mov pop scas (bad) inc adc push imul retw scas add jae addr16 cmc dec stos mov dec jmp lret movsl cmp jbe pop pusha jl jmp pushf movsl add lret or jnp test dec cmp test lock xor xlat fnstcw sub stos repnz and pop jg adc adc add push lea pop stc inc adc mov pop ljmp push add les lcall push xchg shrb cld xchg add cmp out mov pusha pop stc (bad) cmp cwtl and jb lock mov and mov cmp cmpsl mov pop mov call dec jno mov sub pop and idivb je push dec mov dec ss and (bad) mov fwait ljmp (bad) jge mov push mov loop mov adc int xchg push sarb (bad) mov sbb shll mov cld mov push mov inc push scas adc (bad) nop inc cmc sub cmp sub lcall ljmp (bad) loopne or pop dec aad imul or gs out mov stos and push xchg fldenv pop sti insb cmp push xchg mov fs jmp mov mov sub and scas push and mov in mov dec jle add pop lret mov fidivrl lods mov aam or insl jecxz cmp je lret ret mov cmp (bad) xlat xor gs insl xchg (bad) icebp movsb dec sbb cwtl cmp ja push sub aad jl in fstpl mov rolb push popa stc pop je ss pop mov and cmpsb dec mov sti popf loop jns repz cmp mov lods sbb popf pop lods or roll leave repnz xor xchg or pop adc sahf sbb (bad) aam lret leave push in daa mov sub test jmp lret (bad) lods scas mov imul mov or fsubl mov out or sti jns daa cmpsl pushf sub adc pop xchg mov (bad) scas pop mov xchg into cmp (bad) dec roll ret pop xor dec mov pop roll mov int3 lods jecxz xchg inc and cltd rorb mov mov inc pop jno mov mov insb mov jns ljmp jle xchg sub repz cmp cmpsb ds inc mov adc push ret popa insb out shll fwait mov mov pop leave jne aas in cltd scas daa push push bound mov jecxz pop test jecxz add jecxz arpl jno inc mov xchg repz inc in sahf movsb jp rol fisub js pop xor lods (bad) xchg nop das insl cmp pusha int mov aam dec sub lcall adc (bad) pusha hlt pop ds mov mov push cmp js (bad) add cmp mov fs dec es out jno mov shlb and mov (bad) mul outsb pop out adc mov add push add cmc adc repz sti adc pop push sbb in stos mov mov stos (bad) mov shll push sub test enter cltd imul mov xor sbb pop or jns bound fs sarb add adc lret ja mov (bad) lret dec or or cmp das rcll jmp scas stos mov and xchg rcll jno add negb lods push mov jmp mov sahf cmp push std pop mov dec js cltd pop mov pop bnd add mov or cltd sahf mov mov mov das repz aad out pop mov add xchg mov mov (bad) cli and popf ja lods mov popf imul and es popf mov add dec mov jne leave cwtl mov lret jl repz iret inc push test cmp aad sub jns pop mov mov outsb in imul jecxz cmpsb or decb lock or dec dec sahf in outsl cld loope and or jg add insb mov cltd push adc xor jne add add dec hlt movsb mov xchg mov push cli jb mov mov (bad) dec mov xchg xchg fidivrl movsl je add dec lods in mov cmp xchg andl mov aad ret cmp scas fwait mov xor movsl stos xchg jle xlat sub mov mov inc sbb std addr16 aam dec cmp mov dec push xor cmp push loope out push js mov mov inc (bad) iret inc mov jne xchg mov mov mov add sub or xchg push mov mov pop repz fildl js xor push inc fwait nop shl mov mov mov adc data16 and shrl push fldl or fdivrl mov popf mov fnstsw jb dec mov jbe and fisubrl inc in xor sub fstpl cmp mov jnp lahf lock push ds add jns dec scas push or cwtl into (bad) mov ss and clc jo shlb jmp icebp (bad) push dec (bad) xor lods lds in cltd pop ret dec inc adc mov dec popf jae push mov mov jo push or add popa mov popf lds inc daa dec call add mov addb mov inc push xchg mov mov inc or and mov push loopne jecxz les pop lret rcrl dec movsl sbb pop mov roll rorb into push orl bound das rcll cmpsl pop cmp (bad) cmc loope pop xchg cwtl cli (bad) inc and pop pop popf and mov shl cltd add sahf inc adc pop xor adc imul fiadd ds shrl jo (bad) ljmp or repnz ficom popf dec mov in xchg divb and lock fidivr xchg test cmpsb xchg andb mov dec xor cmp movsl add push jmp cwtl mov shl outsl out jl lcall das lods jno,pt cmpsl mov outsl jo mov mov sarl fdivrl test jo mov push mov fs xchg ret outsb xchg cli dec in (bad) jno or or lcall loop dec mov mov pop in mov add jmp inc das inc mov sub push pusha inc dec pop fs pop cmp shrl jnp sub cwtl adc fdivrs pop and xchg rorb xchg or popf dec pop add add dec ret (bad) fidivl daa mov inc push mov mov and inc lcall sti lcall mov fs inc mov test jns push scas lahf outsb cmp jnp divb sbb (bad) pop in rcrb lods cmpsb test or dec test xor mov out icebp sub mov movsb mov jno sbb mov mov xchg insb imul and xchg cmpl jne sub or adc enter lds inc sbb push std in sti jnp push dec add add sub sbb loopne cltd mov test movb and mov subl adc mov test popa in int3 test in (bad) lods lock and cmpsl insl and cmp outsb add cltd shr stc xchg and jb inc into xor (bad) xor dec add imul repnz mov push or cmpsb cltd out push clc ret (bad) jecxz lods jns je fstps std (bad) add scas mulb dec popa into and cltd in pop or stos bound or xor adc (bad) rolb (bad) xchg in cltd loop sarl jae cld and sub mov xchg scas (bad) gs jle in add scas and xchg cmpsl mov sub xchg adc xorl loopne movsl or add and pop loope push call icebp jle popa push rorl cs lahf jecxz cmpsb jmp movsl mov xlat xchg shl mov mov mov or push push cmp pop dec insb pushw fisttpl inc fs cmpsl push cmp ja jnp inc sahf add repz mov imul (bad) mov push ret jbe add cmpsl jle into (bad) and and cmp aaa out jp sub jae and pop cltd mov jns test gs mov loop sub shll ss mov push adc mov mov mov or inc mov dec cmp repnz jecxz xor inc xchg iret push cmpsb mov cld (bad) push jno pop lea mov cmp test xchg popa xlat stc jb flds sub sbb push and cmp (bad) lock sbb div adc jbe aad ret pop adc fdivl sub jle pop mov aas call jge jnp dec mov xchg leave dec ljmp cmp pusha loop adc pop mov ret shll mov mov jnp cmp loop adc mov std test mov aad push fildll sub mov push cld mov mov mov (bad) sbb flds push pop mov mov je ficoml out mov sub movsl in fs mov cli pop loop dec xchg fwait mov jae inc mov dec frstor out mov icebp (bad) stos in cld and cltd scas mov insb and jmp mov cmpsl push ss mov fidivr jbe fisttpll or movsb jb push vpunpckldq push mov (bad) idivl adc pop lcall and jno (bad) mov pop sbb push (bad) stos lock mov add xchg les shrb stos addr16 xchg es sub push ret (bad) sbb sub mov mov in mov bound jo inc pop test fs (bad) cmp mov adc sub cmpsl push shrb lret xchg xchg pushf mov mov cltd icebp adc cs int hlt mov add ret into scas lods and cmp cmc movsl pop adcb adc lods mov lcall cmpsb mov mov jbe xchg sub and cs mov xlat cwtl pop cmc mov adc shrb adc mov cs lods and or or jg sbb add cli mov pop xchg push mov insb in fbstp cld push pop push and call add mov aas jecxz into mull in (bad) (bad) sbb mov fstpl in cltd int inc decl sub loop cmp sub daa cwtl js repnz dec js xchg mov aad add inc xor shr popf sbb cld lods xchg pop cmpsl mov mov mov xchg mov or hlt popa cwtl mov out dec xchg sbb or aad push mov xor mov cmp es outsb mov mov xor stos int3 lock jecxz mov mov mov je fwait scas jne imul pop sti std mov sub pop in out inc jne dec (bad) cld xor inc and adc mov mov cmpsb mov rcl mov push jnp daa xor repz and pop cmp adc push shlb jnp out pusha adc mov std call xchg enter inc mov sub inc adc adc cli xchg lret xchg nop lds sahf xchg test lahf mov or inc xlat xchg jns xor (bad) lock sub jge sub xchg pop pushf push sti jbe sbb pop jae (bad) jno jne mov add and jmp lcall and pop jno movsl int3 or sub stos sbb in data16 cmp inc insb leave (bad) ftst es cltd or mov push (bad) out stc xchg inc dec mov fs fimul mov xchg ds mov or jp cmc sub xchg cmpsb loopne jbe mov movsl outsb andb and mov add mov call pop jno sbb jne mov (bad) lods subl mov xor cmpsb aaa pop shr xor push bound sbbl stc pop orl dec mov pop inc cs ficom out pop ret stc add bound insl xchg mov mov mov sub stc jbe test mov fdivp aaa inc mov daa fyl2xp1 cvtps2pd adc add dec (bad) nop push fidiv push xor pop bound lds cs sub lods in xor pop pop pop or dec xchg dec adc movsl jp adc inc cld lret sub lods adc bound into lods dec sub aam push (bad) popa lock fdivs and in dec sti and test push cmp (bad) repnz mov add stos and in add dec test sbbl out das test xor lcall cmpsl mov loopne xchg and push push push dec pop jo or ret mov push aaa sbb iret jnp pop sarl push jo (bad) hlt xchg push arpl adc daa push and pushf dec mov and mov fcompl movsb movsl lock cmpsl pop add mov xor mov repnz mov mov mov push add call jbe imul (bad) pusha add push inc (bad) mov push pop cmc jns aam mov and mov sarl sahf mov in fidivrl jmp sub mov inc pop movb inc pop jo adc push push mov xor mov and fadd js xor or rcrb lret inc lock mov push inc mov adc (bad) gs add jecxz icebp dec mov and (bad) icebp (bad) aaa shlb sub fadds push xchg ljmp pop pop loope (bad) cltd int pop in fs jns clc inc mov ret jle sub xchg jecxz fsubl pop xchg roll fxam and and mov lds push dec xchg xor and jmp pusha mov in jmp xlat cltd mov jo in inc or adc xchg xchg shlb out out xor jnp add dec mov push mov (bad) mov xor xor lahf mov je pop jmp push sbb insb pop lods mov sarb testl js mov mov mov jmp stos lods mov dec out sahf mov daa mov cltd mov data16 (bad) mov adc or pop inc or pushf les stos sbb cltd adcl and ret add mov mov jmp ss xor imul inc (bad) mov rclb jo leave popf add fldt and lret jns inc cmp fmull imul inc imul push jmp jp popf insb mov repnz test in in mov xor sahf pop hlt push or xlat bound adc and xchg aaa push pop xchg mov out push push cmp stc iret or sbb cmpsb data16 xor ljmp adc fs and mov pop lock and bound std adc pop mov hlt xlat test xchg sarl dec (bad) pop bound pop pusha adc repz (bad) mov mov out pop or popl icebp bnd and mov (bad) dec rolb inc dec lock dec movsb inc repnz sbbl mov mov mov jns push cld aam mov adc jbe push xchg (bad) sbb or mov mov inc xchg mov inc lret rorl call xor int mov nop inc mov sbb mov push mov inc adc lret mov mov sub (bad) (bad) aas mov jg inc ret (bad) sub dec (bad) xor or mov (bad) sbb movsl xchg into ds pop dec psllw xchg lock or mov adc sub insb jbe in inc adc or push mov mov push inc test cltd cld jns xchg pop cmp push jmp push cltd cmp fnstsw sbb push add jp dec cmp popa xchg mov inc sub mov jmp pop ret add jb xor mov ret xchg xlat dec movsb and nop cmpsb mov sub mov iret mov xchg xchg mov add jne fdivrs dec bound mov push inc mov cmc loope jp mov jecxz jne xchg ljmp jmp out xchg inc and push and mov outsb mov stos xchg imul jo ficom mov (bad) or rorl mov loop mov mov jns movsl clc fs cmp mov mov cmovs repz arpl jno xor mov adc je and jb inc enter mov mov sti cltd cltd add adc mov sbb div int inc repz cltd mov jge inc mov push xlat movsb enter or rcll sti add pop cld mov shlb insb ljmp dec stc hlt insl divps subl scas stos mov xchg mov pop mov lcall mov mov pop repz push push sbb mov mov sahf xchg insb out data16 mov mov jl xor xchg xchg dec mov lock mov mov mov xchg or in pop aam pusha xchg mov inc outsl jmp inc adc aad jle bound add cmp or inc xchg jp clc pop popa (bad) in push or xor daa jmp nop loope imul jle mov cmp mov push xchg mov mov cmpsb add jle push lods push dec shrl and arpl xor das sbb mov and in xor out adc cmp and adcl sti std mov mov je sbb outsl adc pop lods add js mov mov cld jmp or aas xchg cmpsb push mov mov in mov cmpsl mov (bad) push mov test inc adc push (bad) stos cltd stos fs add out addr16 mov lods sahf (bad) mov inc loop lret lret mov jo imul push dec and lret fwait lock int3 (bad) cmpsb sbb sbb and pop push jbe cmpl pusha add dec daa das cmpsb xchg lods mov cmp jno enter fs mov cwtl xchg rorb and pop iret or and gs lret mov mov pop test js sahf add sbb mov mov pop cmc cmp mulb xor lahf shlb jge add loopne in imul mov pop cld into je cmp frstpm(287 mov inc scas hlt add mov setl or adc xchg or aad icebp jo out pop mov sar mov fdivs mov lcall push xor mov mov (bad) sub lret mov popa in fldenv mov and pop icebp or popf call jle es adc jmp pop or and push mov divl add pop mov pop push xabort mov xchg mov fstpt shrb ret sbb rorb (bad) xor out imul std jno addr16 icebp loope into mov adc inc or mov adc cltd sbb mov pusha insb test add repnz mov jae or addr16 cmp sub mov sub fwait sub mov or dec shrl ljmp mov xor push std in lods dec push mov lcall jge push stc cmpsb stos cmpsl inc mov (bad) js lea jbe ljmp push pop push push dec not mov mov test push dec and cmpsl pop inc mov mov push or scas (bad) mov into dec jns aam sbb outsb jl adc mov popf outsb sub out iret mov lea cmp shlb xlat icebp stos sbb sbb insl test loope test sub sbb xchg out lahf sbb cmpsb add imul cli push mov repnz or test jae mov rcrb pop xor jnp in loope mov sahf rolb clc icebp movsl push xchg mov push cmp sti pop mov mov ss fdivrp jns adc das adc dec aad movsb pop mov pop cmp mov sti cs jl mov rcr in xchg pop mov fwait jno cmp leave test les mov icebp pop dec out insb pop mov mov pop push cmp test inc push mov aas mov xchg mov dec pusha out mov popf mov cli cmp psubq int3 mov (bad) fdivs and mov (bad) jne mov aaa push mov push (bad) int push mov fwait mov adc gs sub xlat xorl ret lcall add push incb out lea imul mov lret roll adc and mov inc xchg mov inc pop pusha cltd adc ficoml dec rcrl imul movsl mov mov inc aam repnz cs sub xor (bad) in jecxz cmp in iret es mov mov jne pop sub adc mov roll cmpsb mov sub xor cltd out loopne cmp jbe mov iret push add jle rclb and fmuls inc mov (bad) or fnstcw jno adc pop and jns sarl sti shll mov ret pop hlt insb jo push bound xor cmpsb push sahf xlat jl xor sbb pop xchg lds fistpl mov stos xor out mov mov mov or mov shrb push add pop fisttp daa and dec add xchg lahf pop std cmpsl and inc icebp bound sbb inc mov xlat int stc cmpsb push mov or mov jl pop xchg mov pop xchg mov sub ret jmp mov (bad) push (bad) hlt xchg xchg lds scas movsb pop pop arpl xor xchg pop lods jbe rcl cltd dec mov and out cltd repnz mov adc aas sbb jle mov cmp dec les ret sub ficom in sub sbbb les or push enter call movsb push pushf mov jbe mov mov stc pop mov jno and xchg sahf mov test mov xchg insl and movsb lcall xchg cltd shrl mov mov lock addr16 and in iret into push movsl xor jl stos in push in push mov pusha mov imul cltd fs les iret test loop xor aad ja adc fcom and adc loope aam (bad) cmpsb adc dec out and mov popf adc jecxz ljmp mov and loope imul lds movsb cld cmpsb or push sti add stos lods push mov daa sub xchg test add cmp push inc pusha add (bad) mov jno and and pop mov mov inc mov cmp std xchg movsl repz test (bad) xchg mov jecxz cmp cmp mov push mov pusha add daa pop out cmpsb dec shlb mov or adc adc loope stos inc decl loopne andl in lock cmpsb adc dec pop cmc jns mov dec sub hlt aas xchg aas inc in or dec rolb push add (bad) in sbb (bad) push xor (bad) pop lods mov insl lret and lods fldenv out scas pop aas push fs xchg test sbb jbe jae inc push mov cmp mov mov mov std and icebp pop mov xor push subl call mov outsb mov xor jg cmp pop cld pop jo pop pop ret bound sbb mov movsl sbb test in mov and jl add mov mov shlb adc and aaa les inc pop aam add pushaw dec adc xchg (bad) mov pop xchg movsb daa roll push bound repnz mov add cmp scas cli adcb sub add in mov negb ss loopne mov pop push mov xchg bound fs mov mov mov mov setge pop lds into jbe in inc xchg (bad) push add lcall push xchg rcr cld insb lods sbb pusha lds scas or incb testl lods out gs sti iret cld loop mov xor loop test mov hlt fstpt mov loop subl sbb push and and ret lods lea data16 xchg jns mov movsl in (bad) mov fild repnz add rcll add pop les jg xchg imul push and inc mov daa std lods leave inc xchg movsb push xor popf mov fsubrs xchg xlat dec test push (bad) push mov daa movsl mull xchg mov loop mov inc ret cmp popf xchg jmp sti cltd out mov fstps push sarl icebp aaa sbb frstor in loop or push jge in inc aaa mov mov mov rcrl pop dec and out movsl inc or lahf mov cltd mov (bad) mov cwtl xchg outsl loopne push adc push out frstor aas jp out int cmp xchg sbb add inc fisub add adc into mov mov out js or or aad insb mov movsb movsb movsl rclb call pop sub ret mov test inc popf add cmp mov push mov jmp adc mov (bad) popa scas sub xchg (bad) xchg ljmp rcrl fwait lds inc add stos cmp fild inc jmp int3 mov mov cmpsb ror cmpsb add pop mov imul test inc pop xor pop sub sub imul sub js push add scas out or psadbw frstor jbe dec lea and mov imul add and inc adc call mov mov xor jmp sub je and lods movsb jg mov stos cmpsb imulb sub jmp in outsl out cmp dec stc loope xor adc sub cmp int inc or (bad) nop sub (bad) out movsb or dec arpl inc xor les lods pop pop inc in pop cmpsb icebp aas sbb fiaddl cmpsl test imulb mov cmp mov call adc sub mov inc cltd aaa add jecxz fidivr or or pop repz cs push cmpsb inc test mov mov lock iret inc test and das insl cmp loope mov loop lock popf cmp jmp movsb jle out pop in cmc movsl xchg shll aaa scas jecxz in mov ret mov sbb icebp pop popf cli push mov in stc cmp mov dec mov cmpl test mov dec add lock mov jecxz into sbb dec fnstenv (bad) or lahf (bad) mov jne mov cltd sti (bad) cwtl rolb ret adc xchg mov mov jle mov xchg lods test and sar mov or (bad) cmp (bad) mov sub dec add idivb (bad) std cmp stc xor add pop leave cmp (bad) mov and jge (bad) xchg fiaddl push dec or out xchg push std daa movaps cltd mov cmpsl js cmp nop addr16 xor mov mov hlt xchg lock adc push loopne push into hlt jle adc adc jmp xor pop jo push pop pop and call mov push imul and sti jle jecxz arpl test daa bound mov add mov xchg je mov jecxz mov (bad) nop das sub or dec or cwtl push add loop cmp add jecxz dec or movsb scas mov mov inc daa pop (bad) imul lock or lock aad mov fcomps mov and inc test es mov add adc xor mov aam imul ret leave hlt fs pop jnp ret xchg jo daa push mov xchg sbb sub imul mov mov pop inc xor outsb imul in rol xchg sub sahf xchg (bad) lret lcall jmp cltd cmpsl xchg mov jae xor daa in mov xchg sarb iret xchg insl push stc lods mov loop cwtl mov icebp cmc mov cmp stos mov dec adc cmp call add mov (bad) (bad) aas and mov sti mov add scas sub out mov or aad mov pusha pop lock mov jg ret push mov xchg movsb in inc shll add dec push sti mov shrb inc (bad) imul cmpsb push mov test sub idivb call test cmpsb jmp and jl cmp adc add xchg (bad) int jae xchg cltd fnsave or ja call pusha add into fist xlat insb pop xchg cmp mov es stos (bad) bound dec pop mov test rcrl mov xor ret pop pop lahf xlat scas and inc bound js inc pop ret adc pop xor xor sbbw push imulb mov (bad) jno aaa imul xor xor jnp stc xchg pop mov les rorl pop mov out add cmpsl jo bound daa lods addl mov inc enter jecxz (bad) and scas scas aas xchg push das mov mov cmpsb stos sbb push test pop scas dec (bad) insl enter adc sub ljmp adc (bad) push pop mov lock mov xchg adc rcrb notb stc cmp push test sarl push sub js leave jmp mov (bad) leave pop fcomps lret cmpsb daa xlat fdiv mov xor (bad) int cmp sahf and scas (bad) cmp mov mov dec jecxz mov mov sub mov add lret mov or xor movsb lock mov ret jl repz mov push lea jne cmpsb stos lods dec cli arpl bound jecxz sub inc ret dec jo xor jae pop (bad) sarb cwtl mov mov rorl icebp inc adc mov lods andl push mov into test mov xchg push std cmp adc cmp je jnp std push mov cltd hlt dec mov fnstsw mov movsb mov xchg (bad) sub jge xor lret jmp cmpsb inc lds add popf (bad) ljmp or daa pop clc movsl mov les cmpsb mov or sub sub mov jns lock push push mov mov push loopne push sub (bad) scas mov push sti jae arpl sub cld lahf mov or cmp lcall mov mov clc pop cmp sub test enter sbb loop mov jmp xor loopne adc or mov lods and imul adc dec dec in jbe xchg pop es (bad) xchg mov mov bound xorb shll mull popf pop pop push sub lahf inc and jbe mov fwait dec sbb pop jb leave mov xchg and je dec xchg cs cmp test pushf ljmp repz insb mov xchg daa mov add and pop rcrl repnz bound in stos stos (bad) sub and xor or dec xchg adc lret cmp jge dec dec xchg psubusw push loopne int3 fldt (bad) les mov pushf xor in cmc loopne int popf data16 push clc stos or jno dec scas loope stc inc mov pop pop popa jae inc xchg inc dec movsb mov jbe push xchg add mov mov ss mov sub jnp imul sub and movsl pusha push mov imul movsl in push test cmpsb xchg test fiadd popa xor cmpsb jo loopne add cli dec xor mov fsub inc mov xor sbb sub sbb mov pop dec cmpsl pop mov adc rorl mov mov stos inc in dec (bad) test cli push hlt js loopne jp mov andb inc mov adc outsl or aaa (bad) mov call pop and jo mov lock clc pop js add dec aaa test cmp xor (bad) jae push addl cltd sub stos (bad) mov adcl into lock add cmpsb daa data16 fadds inc mov and mov add lcall cmpsb in mov out jns aad bound scas mov cmp das pop loop nopl sbb lret lahf jmp (bad) adc outsb jno pop into mov dec mov dec push pop out mov (bad) aam sub mov out dec ret arpl cmp out sub xor mov cmpsl jecxz sub fwait mov or jmp sub iret stos mov xchg mov jbe in cs adc mov fistp test popf xchg xor ret stos rolb inc rclb clc mov sbb lock sub pushf pop and push arpl ret int3 jl call sti push inc jge push movsl fsubrs xchg jmp or mov mov sbbl and dec cltd xchg ja mov push leave (bad) stos mov iret dec mov push xor cmpsb push std lret movsl add jecxz mov adc lds jmp cmpsl mov push fucomip out mov pop push adc or bnd daa sahf mov cmp mov push loopne push lds cltd stos ja popf mov dec scas mov cs clc cwtl sbb ret mov mov adc adc mov repnz daa dec and mov in jo mov cli subb call clc and adc je xor mov mov xlat push push jge dec or adc (bad) lock xor mov sbb test pop insl call mov rorb lods in loop dec dec add inc or iret sbbl inc int push ret pusha outsl jmp scas movsb inc sbbb sbb xchg xor ret shll cltd mov mov or out (bad) aas mov sub movsl ss inc in mov push leave mov sahf push (bad) jb (bad) xchg hlt test dec das daa inc cmpsl inc cmp push xor or inc cmp jl repnz dec cmpsl xor sub xchg cli mov pop sub dec mov sbb ret mov xor ss xorb cltd test mov cmpsl mov push pop lock mov call stos movsl mov cmp lcall jle negl negb dec jl daa adc fist xchg rolb scas jmp sub add in popa lcall mov (bad) mov mov ss xor scas mov addl bound out push aas mov and and test cmpsl push (bad) pop cmpsw dec js sub (bad) cmp cmpsb xchg cmp aaa xor shll sbb dec mov add and xor repnz inc mov jns mov data16 stc mov mov xor scas sarl orl xchg xor ljmp rclb xchg mov and rcrb movsl jg movsl test outsl (bad) int3 add andl or jmp and cmpsl mov pop (bad) jbe mov scas sbb jg fadd xchg lret mov pop js int3 movsl xor sbb inc cmp pop imul cltd mov xor mov out jmp rolb loop scas lods and js iret push mov repz adc push (bad) rclb in in imul movsl inc sbb push aad sbb and mov mov aam mov out call xchg add aad test pop cli lock iret call mov lret jmp test jecxz stc pushf lret dec fwait stos cmpsb dec stc xchg mov push add (bad) and mov jbe xor mov fdivrl scas jecxz sub cmpsl test andl mov pop aad int (bad) push add cld cmpsb in xor jae push xchg pop push add movsl mov jno adc dec mov jl pop mov in sarl and and mov mov jno int add (bad) ljmp inc or cmpl insl mov movsl push cld push mov popf mov test scas cpuid out cld xchg mov push gs push add and push std cld push dec mov mov xchg jp outsb mov aas add cmova inc aam (bad) pop dec movsl cld (bad) jl (bad) pop out xchg lods call lahf stos cli mov adc rcr dec push aad or dec mov enter mov pop inc or mov mov loop mov jnp mov hlt stos sub or roll (bad) mov jl (bad) imul push mov push and subl cwtl mov pop clc sarl aam adc push call pop jl outsb shll adc fadd ljmp lods jmp mov xor outsb mov out push movsb (bad) dec pop arpl xchg pusha rcll sub dec sub lea or leave mov push add call sarl xchg punpcklbw push push sub mov mov pop sbb stc mul pop fbstp movsl mov and xchg lcall cmpsb cmpsb mov mov in pop mov cwtl xor scas stos mov sbbl mov orb adcl scas dec call add pop in jecxz mov add push mov out or push push and and mov mov out aad cltd out add ljmp adc outsl sub xchg mov out adc jecxz daa dec jg lret add imul in shl adc std jae pop lea xor shrb ja ret lahf xchg and xor inc add scas mov mov stc call stos xchg stos or cmpsb inc pop iret pop cwtl cltd and test cmp (bad) out xchg stos popf jbe jp (bad) popf jecxz xor sbb pop and push pop punpckldq ficompl sub (bad) jns popf pop aas xchg call pop or jns test pop mov ja dec repz jae cltd mov iret out fldl (bad) data16 out xor out mov stc xchg hlt rcll loop jge push mov push lock (bad) push xchg out ror test push adc sub ficom popf fild out cmp iret sub cs bound nop xor sbb push cmp repnz adc insb sub xchg mov sarl and sti pop mov in insl loope sub and movsb repz dec or into push add outsb xor les xchg popf jle movsl jp outsb aaa adcb shll add sahf cmpsb dec sbb repnz push pop andl mov rclb bound cmp aaa sahf (bad) and xor bound std test xor mov mov fnstcw jnp test jno pusha test mov and push pop and dec nop cld cmpsl push push mov cmpsb dec cmp iret xchg push bound cltd (bad) shlb pop sbb inc jge or xor mov repnz out lret xor xor lods xchg sub test xchg xchg mov pop stc rcrl movsl mov int mov inc sahf rorb fimull mov sub int mov dec jo hlt test dec mov addr16 jb xchg mov sbb jl mov iret mov scas cmpsl jne das out pop cmp or jo loope movsl pop int inc dec xor mov xchg hlt mov push lods jns sbb and add aaa fistpll movsl and es sbb jecxz in int3 fsubs (bad) (bad) dec mov xchg es or (bad) mov dec mov out les xchg adc mov mov aas sbb lds sahf int out (bad) outsl push pushl jge push fwait dec xchg xchg jg dec loop gs add sub dec out mov and and arpl mov insl mov enter pop xor jl mov in scas sar les lock xor mov adc mov pop out out jmp or repz test mov imul and push xchg rolb cli and sbb lea leave push loope aaa xchg adc xchg lods lret movsl cltd cmpsb mov push sub xchg sub xlat xchg arpl repnz out mov call imul xlat subl arpl mov sub pop shrb cmp cmp jno jnp cltd sub mov inc mov lods adc fsts push mov in xor adc jbe xchg mov fdivrs push sarb cmc sbb pop mov sahf mov outsb mov les gs loopne cmpsl mov pop mov mov mov scas scas arpl in mov lahf mov stos gs mov sub inc lret sub loope mov js mov and sub xchg mov push pop pop (bad) adc mov int pop in fstpt cli cltd repz cltd cmpsb out cmpsl jns or sbb pop pop leave sub xchg jae sbb push aaa (bad) mov xchg fidivr dec aad movsb hlt ljmp scas cltd pop push in lods int3 push push mov fcmove shl jg out jns shlb push icebp xor cltd ret jno mov cmp adcl jge cmp push xor or icebp (bad) pop jns cmp mov sbb mov aas les roll jmp fs dec xchg sub out and out loopne lret and mov mov mov inc sbbb ror addr16 movsl mov inc pusha add cmp push sbbl sbb gs mov (bad) rcrl mov xchg and std mov sub test sub in les lods dec or add adc xor inc loop xor dec dec mov and mov push inc xchg (bad) mov cmpsb sub popf adc sarb cmp pusha arpl sbb inc into cmp (bad) rcrb push in enter mov inc stos push add (bad) mov pop xlat mov jnp dec push mov mov mov leave sti push dec dec push loopne mov fsubs rorb sub sbb mov add in sub (bad) stc mov fldenv (bad) push (bad) in mov idiv movsl sbb sub sbb fwait push cmp xchg pop stos jns adc test push addr16 fsubl add fidivl leave lea xor dec mov mov adc push int jbe enter lods mov arpl cld mov or jle adc dec and mov arpl sub out mov nop in inc ljmp cmp insb mov jne cwtl add xor lods mov cltd pusha (bad) iret sub push insl popa pop fnsave (bad) jge ficoml dec mov mov push mov insb lods hlt pop mov dec movsl xor mov lods mov int into inc or mov dec add or mov add addr16 pop mov rolb jae jle sbb jo scas cmp push xor xlat movsb lods sbb scas mov dec stos sub lock loopne mov mov cmp dec push dec addr16 imul adc add push cld je jne mov fs mov leave xchg in iret lea jecxz mov outsl xchg mov or out enter add adc jmp dec mov iret inc (bad) inc insb fldl xchg push mov sbbl mov mov imul adc pop push xchg lds dec inc mov loopne mov scas (bad) js mov pushf cltd push add mov and jp (bad) loop mov mov and cmpsl imul and pop cmc pop daa fcoml push adc dec dec mov movsl rclb mov pop in out mov roll inc push imul shl in pop inc sub sbb (bad) jg movsl mull mov jecxz mov in gs jp mov mov sarl mov adc cli movsl mov mov push and mov inc mov pop ja (bad) cmc lahf cwtl jle mov arpl imul cwtl clc push push (bad) pop ret cmp xchg add mov cld mov scas mov mov adc daa hlt and mov test mov pop mov mov pop pop movsl mov xor add and sub and mov jl mov xlat jp mov inc inc arpl pop imul movsl movsl xchg ljmp dec (bad) push and fs sbb add mov inc push inc dec pushf aaa insb loope aaa cmp je mov pop repz pushf stc stc sub in jg popf mov jle sbb test cmpsl pop cwtl mov pushf sub mov and pop inc mov les mov cwtl std and mov jg (bad) mov fnsave pop sti outsb shll nop lods sub (bad) cmp gs sti mov jae arpl dec stos sub pushf lahf sbb push loope mov jne cmp or mov mov out insl dec xchg arpl cmpl das adc sub pop push out mov xlat lds pop add jns (bad) cmpsl stc lret cmp add or es movsl int3 inc aaa shll lcall add sbb stos xchg aaa out sbb out xchg bound jecxz into adc lock and (bad) cmp cwtl add stos dec leave pop insb inc sbb push gs push add xchg out clc sub cmc push (bad) sbb sub pop mov adc mov jmp mov jmp xchg stos xchg add jmp sbb and push in push push mov jecxz lock out and jno (bad) aad aaa les stos push test dec jmp or imul scas lods jbe xchg fwait mov das push icebp pop mov ljmp in orb pop outsb stos int3 mov xchg (bad) or loopne fdivrs (bad) sub adc pop pushf mov pop lret (bad) ljmp xor into or mov cltd sbb iret mov adc cmp call lahf adc inc adc ret mov push add or inc jl insl rol mov or push push aaa lret mov or das dec and insl xor mov mov and (bad) lret xor imul in and or or inc pop aas and jnp fcmovnbe push mov test mov loop clc movq add scas mov mov repnz pushf (bad) xchg stc mov mov ret stos xor cltd cltd or sbb mov pushf push scas mov sub (bad) in pusha cmc pop dec notl ret mov (bad) lock out lds imul sti and ljmp adc icebp sbb loope bound xchg stc mov mov bound in jecxz sub aam test xchg jb push pusha pop dec xlat pop and pop sub sub jns adc or lea add pop fistpl bound loop push loopne iret pop xor data16 es clc sub xchg or push pop mov lcall test and cmp and sub test movsl xor xchg jns inc xorb pop les fsubl inc mov xchg popf dec repz lcall out jae jae or mov iret push cmp push cmpsl xlat ret jle jmp mov pusha in int3 pop daa bound sbb mov lock lcall mov sbb test push jg inc (bad) cli daa das pop sbb inc or addr16 pusha (bad) and lock iret jle sub ljmp push sub bound xchg bound push insl (bad) icebp jo lods sub in cs arpl mov sti inc push pop loop adc sub daa loop (bad) push std sar ljmp in mov aam neg xchg jne sub rcll and push mov pop xor jae push sbb pop or in (bad) (bad) adc stc or clc mov xchg dec pop stos or push or sbb dec mov cmpsb cmpsb imul iret adc loopne (bad) in shld xchg push sub sub inc push mov sub adc aad data16 mov jne fs mov ja mov mov push fildl mov and cmpsl (bad) push and mov inc movsb stos daa sub pop movsl ds out or test popf (bad) repnz mov mov clc mov dec add lret scas and mov cltd ljmp xchg lods bound insb ret adc cs repnz dec add mov loope cmp imul cmpsl xchg dec jl cltd add sbb xor shlb xor xorl push (bad) negb xor xchg mov pop fcmovnb iret mov lret pop mov and hlt std loop jne sbb (bad) pop outsb mov and aad (bad) xor mov cmp test cltd jnp xchg and fmul xchg das add ljmp sub mov pusha pop arpl ljmp jbe shlb clc pop inc pop push cwtl in sbbl add pop mov pop cmp mov sub and lret adc arpl cli xchg mov inc xor adc pop test cmc xlat loopne add and dec mov jmp arpl jge ja push std sarl aas sub stos mov lahf pop mov jmp mov cmpsl adc fs push test mov je ds push mov cwtl or mov hlt insb pop (bad) in mov pop (bad) fisubrl je mov fidivr mov push scas lods and xor icebp imul fwait sbb addr16 mov ss mov leave cmp ljmp cltd mov in mov imul cmovl aas clc ljmp or imul out push repnz sti mov xchg sbb jne idiv lods out fs rorb stc shll fidiv es std into jg lahf jae push lret fcmovne mov mov lds jecxz pop sbb xlat sub xchg int adcl and pop bound lods mov inc xor push push ja mov loope int repnz dec cmp shrb repz (bad) bound aam hlt pop rclb outsb jge fbstp ljmp movsb cmp movsb (bad) and repnz iret int3 cmp inc inc and mov das lcall jp or jns mov jno push movsl sahf (bad) pop (bad) dec imulb cmpsl popf jl jns mov dec mov (bad) mov mov jl xlat mov jb shrl out (bad) mov xor xchg mov add test sbb call lahf mov mov icebp mov repz aad xor (bad) xchg lods cmpsb in add lcall mov sti in lock xchg mov dec or lods pop mov cmp out insl in daa jbe mov and scas xor xchg shll mov adc lea pop (bad) mov mov sbb repnz fcoml cltd stos icebp (bad) lret mov mov loopne pop cmp daa dec xchg pop repz xlat loop popf mov sub ljmp inc or push xor and cltd adc and mov (bad) jmp mov fsubl (bad) jmp jle out mov aas sbb mov xor and mov sub or pop aaa sub divb (bad) push (bad) cwtl fistl xchg (bad) in shrl sub sbb add into mov add push test arpl pop imul outsl lods mov pop xchg mov xchg cmpsb sahf mov adc cmp insl out adc jle jmp int3 mov outsb lock jo sbb scas jg sbb fs repnz out outsl jno mov pop inc mov adc mov (bad) xchg out lods and movsb mov pop pop idivl cwtl mov subl cmc mov sbb or lock lock mov lcall add and push and shll xchg push push mov je (bad) iret aad lret pop out rclb mov mov nop xor mov fdivl xlat (bad) xor int3 movsl loope ficom test and push loop mov mov sub fbld pushf in adc pop adc loop loopne xor jge jmp (bad) push fild mov scas adc and mov daa add dec arpl sub mov hlt push xchg (bad) out out push (bad) es mov aaa mov imul adc into mov xchg mov jbe je jo pop out push jns stos out movsl lock stos push pop lret int push jecxz jo jp mov pop imull outsl xchg mov mov sbb xchg roll mov mov cli mov inc or in dec mov jge ficom mov adc cmp rol inc adc cli cltd dec or dec pop xchg scas mov pop xchg lret xchg jns adc (bad) les jo insl add mov inc mov and shrb out js stc mov add xor jne in inc leave mov mov (bad) (bad) push mov lcall stos xchg movsb jo fdivrs pusha mov sahf inc inc mov lcall shll or mov sbb in mov sbb xchg xor mov sub (bad) jns fadd orl out pop imul in (bad) arpl push mov les ljmp sbb xor dec dec cmpsl mov push mov mov adc incb movsb add inc fnstsw dec jne mov inc pop imul jl sub inc mov (bad) sti xlat sbb lea inc popa cld rcrl and push test pop (bad) push mov sarl sbb out fsubrl xor jae mov sbb add out lds sbb jle push mov (bad) mov ret mov mov dec pop and jp in mov fisubl cmp sbb jne xor adc lcall (bad) cmp stos and lds sahf mov stc fnstenv lock ds jns mov or mov cmp dec das outsb test and (bad) fwait mov fidiv daa xchg test sahf mov push xchg sub stos mov fstps push xchg daa cmp jg movsb mov fnstsw add mov rcrl movsb inc push mov add push lock lods cmpsl mov aas loop call push mov ja jo js stos cli and mov repnz dec push loope or std add cmpl or hlt sub inc mov out js mov inc stos cltd sbb jle xchg orl ljmp leave inc xchg mov and xchg push lock and mov cltd daa adc lds loopne stos scas ja lds imul push jnp sub and or sub sarl cltd mov mov sbb inc psrlw mov push pop test or dec mov movsl out arpl cmpsb lock ja jmp leave mov xchg sti inc adc adc and imul sub mov rolb stos and enter ja jno shrb push mov int loope cltd insb arpl push pop mov stos popa pop dec bswap gs xchg sub int (bad) mov sub aas imul fdivl mov notb ds scas push add push test add add lahf mov adc mov insb popf mov dec ret jl mov int xor fs int3 ret inc mov stos lret cs adcb mov arpl cs mov pop rorl bound mov lock sub push xor mov test lret mov cld cmp mov cltd test push aad push xor and or popa jmp pop bound scas std cmpsb xchg xchg ret mov cmpsb lods movsb dec inc cmp push mov movsl mov aad stos inc imul aad in in mov and (bad) and jecxz jo jae dec and pop nop loop loopne and ror xchg (bad) mov mov jb shrl mov add mov mov sub mov jnp dec mov mov out mov movsb movsl push cmp jae mov mov xchg sbb jns pop imul leave popf and fildll and cmpsb xchg jl sub fsubl (bad) idivb dec pusha hlt enter sub xchg push shrl add (bad) pop sbb jmp mov mov insl out pop iret cmc mov pusha bound in imul (bad) lahf popf cmp cld lcall imul movsl mov sbb stos sub lock xchg push mov aam xlat sub ret fstpt inc xor inc std jne or in mov jp int3 xor adc or out (bad) clc stos scas daa jmp das sub lock mov and repnz fs stos cwtl or inc adc sub xor (bad) outsl stos and mov jl (bad) pop mov aaa and rolb fild loope inc jmp jle sub sbb in pusha (bad) loop addr16 mov or (bad) push jmp pop imull jecxz mov sbb cli pop mov test push dec loopne push dec repnz addr16 jns or insb stc mov pop mov xor inc mov (bad) push ljmp cmpsl pop pop bnd sbb stos sub jns ja xchg popa mov xchg mov push data16 mov pusha out dec dec or fsubp adc fxam out jns push dec test inc jp mov adc out lret xor mov mov cmp aaa out aad pop adc int pop lcall mov mov pop mov jnp (bad) jns jb daa or push or loop adc cmpsb shrb mov ja lods mov stos rclb push add and dec jno fcmovbe sub mov cmp sbb lock xchg pop adc inc mov mov push add inc mov xchg (bad) mov xor out jge popf lea xor cmp cltd cmp xchg andl inc jb lds roll pushf fs movsl movsl push cmp mov stos das arpl or lret or cmp xchg push orl mov sbb mov jge pop add out dec loope jnp sbb mov jecxz mov test push fsubrl mov mov imul jno nop cmpsl push mov mov cmc push (bad) mov dec mov and adcb es or rolb fbstp cmpsb mov hlt pop mov sub jl xor test xlat sub mov dec andl sub cmp popf sahf xor inc iret inc lret pop stos mov xor adc or mov not jge repz add mov mov push test lock xor sub sub fistl lock inc in pop decb ljmp test mov and cmpsl (bad) cmc adc mov mov das movsl test dec xchg mov inc xchg lret mov push jg push or lods cltd and je int3 sub jne mov das add xor dec mov xchg pushf lcall cmpsb aad je dec out mov inc or dec or xor xchg cmovs or mov stos fs mov xchg lds cmpsb idivb fcmovb pop xchg or mov movsl dec inc mov out pop leave cmpsb mov mov imul fmull int adc push les out mov cli movsl je fsubl dec push cli popf mov cmpl insb lea mov std jne test arpl pop cmc pop repz mov mov imul mov jecxz jae das sbb (bad) lret es rolb push adc add xchg test mov push inc mov insl push lds mov sbb mov jne jecxz imul or pop fiaddl test push mov out mov xchg shlb jp add mov pop cli lock in roll loopne dec jmp hlt test enter dec push lahf pop push movsl sub or mov add mov shr imul adc cmpsb dec enter inc add and inc mov and mov jns ret jno js xor jl fidivrl rorl sti cwtl push mov cltd jns ss jmp in out mov and stos add or fwait mov roll fs jne xchg add and and addr16 push cmp cmp or cltd mov and sbbb xor ret cmp jge fldl2t and xlat lods mov sub inc cmpsb popa test adc jnp jae inc bound test stos dec pop into xchg enter lcall xor lock out add dec pop test add xor xorl sub js mov cs addr16 push nop imul mov stos mov adc xor sub mov xlat mov cltd adc and fstpt sar pop push jne inc mov imul mov jecxz cmp inc fldl cmpsl xchg cs imulb fdivp or ret (bad) add repnz push jnp cmp outsl cwtl mov fimul add inc iret adc or mov dec pop dec cs and xor cmovno (bad) sarb bound arpl pop clc mov mov cltd divb aaa mov dec jns shlb push mov inc das sub push add jbe mov mov arpl pop mov mov push xor adc push mov pop imul jl xor xchg out fistl outsb cltd repnz shll aad cli (bad) call fcmovnbe xchg mov loopne jne mov outsb mov test mov shlb stos popf lock or mov out sub jns add lods xor xchg jo or jae ds fisttp inc pop bound mov mov mov in addr16 jecxz int3 mov jae (bad) scas imul push mov enter rcrb lahf xchg mov or (bad) cmpsl jns fbld mov pop mov mov push sub mov push xchg fbstp cmpsl and jg aam outsb ret test scas cmp mov jbe cmpsl xchg xor mov fidivl test mov (bad) lret mov aas sbb mov jnp lock adc (bad) jbe pop mov arpl pop xchg push pop movsb in mov fwait and data16 cld dec jmp sti push adc xchg mov mov lret mov movsl add cmp sub lea into (bad) scas and mov movsb out mov dec cmp stc das add mull cmpsb les and push sbb rcl les mov jl mov xchg xor mulb repz sarb add lods adc bound mov xor inc movsl imul fisubl cltd aas push test mov push scas sub jecxz mov das loope mov cmp xor sub addr16 cmpsb imul icebp xor xchg rol fwait mov hlt and lret pop iret mov jb test out jle cmpsl add push mov es nop loopne mov push pop and test push cltd and inc sbb lahf in mov ds jge lods rorl mov jns popa lock push stos lock inc adc cmpsl fsts lock nop sbb rorl dec lea push pop and and sbb fwait add and into fdivs mov (bad) push cmp cmp lock shl scas cmpsl pop mov cltd mov das sub pop jbe inc test push (bad) mov iret jle jg inc sub sbb mov stc dec repnz rolb mov out and iret jo xchg jle in adc mov mov inc bswap dec fistpl sub test inc inc sahf imul jo imul mov scas shll dec popa add neg mov cmpsl test cmc mov mov xlat xchg bound mov mov mov fs and roll xchg jle add add sti fstps int mov in mov fisttpl cli push sub mov cmpsl cs mov pop div or ja mov push xor es movsb cld int3 sub cmp shll lahf or xchg test mov dec pop bnd jno mov cmp fcompl dec mov fs add mov dec aaa mov sbb fwait xlat xchg jge bound adc leave mov pop bswap jge jp (bad) clc cmp gs (bad) test stos hlt and cmpsb pop mov bound fs mov aad mov out into sahf js pop fstps test in push add or orb movsb lock xor inc fstl sbb jg sbb cmc pop insl adc mov das addr16 mov ror lea out xor test in arpl lea movsl sbb jl pop xchg imul mov mov dec sub addr16 sbb fist xor out bound inc mov xchg mov shlb xchg mov into lea lret add lds mov and mov imulb xor push mov xor (bad) ja cmp add (bad) aaa imul test jae jb and mov push mov mov or aas mov xchg enter mov and in cltd sbb fsubs les mov (bad) mov cmpsb cmp dec mov sub negl xor fidivl clc imul xor xchg mov mov inc mov fdivr dec cmc xchg push clc es (bad) stc movsl rorb and fidiv lods cmp je insb les mov es mov mov mov sub aaa sbb fdivr pop dec and mov sbb jecxz in mov movsb mov mov or sub push iret fwait push (bad) into les and ss out and fdivr mov pop sub push push imul or pushf cmpsl sbb cmc pop rclb fdivrs stc mov stc pop loopne imul es xchg into dec loope mov out insb bound push (bad) jnp cltd push (bad) mov sbb cmpsb sbb in arpl ss shrl aas mov (bad) shlb mulb and mov sbb ljmp add cmp jne mov ror (bad) push cltd xchg inc es repnz add fs out stos mov in pop in mov gs or pusha in cwtl je repnz and outsb stos jb mov shrl pop sbb pop repnz jl aam imul fwait mov mov mov and sub jnp xchg fwait inc in pop inc lods pop adc (bad) js jns in lret cwtl mov data16 sub hlt movb or call push lret dec bound mov lds mov xchg pop das scas adc aam mov lods out xor jb and add imul bound mov mov dec sbb in inc inc mov xchg std inc lods aam jns je movsl mov xchg in pop or adc loope addl aad cmp loopne es lea sbb add push pop push popf pushf push rcll xor inc push mov lea inc into or out inc push iret cmp mov dec ret pop in cmp arpl fwait scas pop in pop jmp and loope mov pop (bad) nop push mov (bad) mov and xchg adc sub leave jge js or pop and enter fstps adc or xchg arpl pop push jae xchg sub sbb adc xor xor xlat and scas js popa push popf arpl test mov pop ljmp sbb and rcl push sbb (bad) frstor lods insl mov pop cmpb jns inc movsb leave jno out divb and inc (bad) cmc ja mov cmpsb and aaa push dec jae jmp fsub cltd (bad) and pop call es inc cmp pop xchg out pusha sub mov cmpsb push pop sub fs nop jne addr16 out test cltd jmp xchg add popa and (bad) sub jbe stos cmp in push inc adcl das jae jae lahf ret movsl out stos in fisub pop scas mov test mov dec cmpsl shl cmpb sbb mov cmpsl jb cld pop lcall aam mov std movsl mov ret icebp lods movsb rcrl jno cmpsb test xor or and pop icebp inc mov rclb icebp jae pop leave dec scas inc cli push jbe adc into lods cmp into cmp out xchg int out in (bad) gs sub nop fwait xorl or add xchg das test dec jmp jno add test and repnz mov inc test popa into dec daa into imul jecxz jmp fnstenv data16 ds lret mov pop and xchg push stos clc daa fcompl popf jmp repz inc les mov inc addr16 mov loope adc and add xchg inc push and data16 or es pop mov test cmp xchg out fs cmpsl adc lret fstpt pop lock lret in (bad) in fimull data16 bound dec pop jecxz mov idivb rorb cmovno iret inc sub pop fsubl test pop dec push pop mov jle add push sbb rorb cmp mov inc jbe cmp test push pop pop lods fnop sub (bad) xor lock mov bound mov aad push outsl stos adc sbbl dec dec (bad) popa fdivp test adc add (bad) clc outsb cs jo xor xchg cmp cmpl push or or mov pop pop sub inc push add jl sub cmpsl (bad) push mov mov sbb (bad) and (bad) ljmp jo pop mov (bad) dec aad orl or push stos and mov aaa out pop ljmp sub pop clc sbb add inc xchg roll mov xor and test in and mov (bad) cld or inc mov mov sar or andl bound mov arpl or or int ret dec lods lods add sbb imul int lods sub jae jl mov xlat xchg jns punpckhwd mov sahf rorb sarl jecxz mov cmp pop xchg sbb add leave mov out pop cmc and repz stos mov mov ds mov dec nop pop dec push mov pop mov mov or addr16 cmpsl mov or xor sbbl mov jnp inc jp orl mov int push (bad) mov mov imul mov mov xchg stc arpl sbb jno add (bad) clc inc cltd arpl push int or mov inc aam (bad) icebp (bad) xchg cltd inc jbe mov mov xchg (bad) xor mov xchg inc (bad) jb test push cwtl mov paddsw xchg xchg sbb jo sarl out (bad) jl xor es into test sub lret cmc mov or fnstcw lret fcompl test inc (bad) outsl mov bound or out xor test mov mov push dec jbe movsb ficompl push call or jns test jge stos mov pop or jbe out lds jb jmp jp pop dec (bad) mov repz cmc jmp inc mov inc bound roll xchg les cmpsl dec ret negl sti movsl repnz pop out out mov adc mov inc or cmc pushf mov and ficoml mov sub pop mov cmpsl arpl adc or pop (bad) das and push push cli mov adc mov imul mov sbb cmp mov mov and test or xor imul push cmpsl adc lock fwait mov repnz ret mov stos loope mov mov push mov adc xchg mov and mov mov xchg and add lret or andb xchg pop xchg scas pop sbb dec or jle adc js and sar push aaa js std inc ret lock mov test (bad) loope mov adc or std or or stc fdivl (bad) jmp inc xchg cmp mov stos xchg aaa stos cwtl push sbb lahf mov repnz mov push jns (bad) mov outsl (bad) pop xchg jmp mov in add mov sbb mov sub int3 inc inc mov out push movsb pop lea pop cmpl sbb jmp xor sbb xchg lahf pop lcall jo mov bound data16 stos push fbstp push mov mov and adc clc mov jne jnp inc and movb (bad) mov xor jmp cmp pop add inc or clc rcrb pop loop shld daa or sub sbb nop and das jmp fwait out (bad) insb jecxz dec cltd rol int3 inc outsb push push push movsl out fwait mov xchg jo movsb in loop aas xor push divl cmp cmpsb imul sbb and jecxz sub adc mov leave (bad) lea mov adc stos movsl push aas bnd jns or in imul loop sti pop stc push pusha dec adc lret stos mov mov push add popf dec (bad) jns ret shll gs cmpsb rcll sbb ja cmp push inc mov (bad) mov cli jg adc pop das jnp xchg ret loope xchg out into mov inc stc pop jmp fisttpl dec add inc shll add into lret fsubl js and jns test pop movsb outsl xchg (bad) xlat (bad) dec or (bad) mov (bad) mov pop test mov cwtl data16 lea pop and test pop mov pusha push les mov mov pop addr16 dec add test jge push push cltd call les dec dec sbb xor lea (bad) (bad) out fadds cmp push mov imul in xlat aas (bad) fdivrl mov inc push pop mov imul xchg mov xchg bound mov inc arpl call dec mov xchg imul mov shl inc sub test xchg cmp xchg xor les add popf bound rep mov inc push movsl pop sub cmp push sub fs adc and mov lret fcomps mov leave aas ss push mov push pop sbb add mov movsb pop gs pop hlt aad mov aad or or sahf xchg jle inc lods daa jo stos xchg icebp bound xchg flds pop mov mov lods jo sbb js lods inc add rorb sbb cltd mov ja jg mov adc sbb dec insb popf sahf mov ja adc jae jns out test push clc arpl leave and push inc cmp pusha jmp and popf mov in adc sbb fldenv leave lock mov sub out adc adc insl out mov lock fs jecxz xor xchg dec popa or cmp or bound lret lock scas jbe fldt xchg xchg cmp pop pop ds inc shll mov popa adc lret jg adc in pop adc mov sbb data16 aam pop fisttpll or fistl lea shlb stc mov aas xchg out movsl int xchg mov sbb xchg fistl jae mov sti pop pop adc jnp (bad) rclb and movsl ficomp ss and es mov aaa inc movsb out lods bound loopne ljmp mov fmulp (bad) out scas rclb adc inc xchg jns (bad) idiv je inc (bad) mov (bad) pop data16 mov lcall (bad) iret pop inc pop ret or fstps push into dec rcrl (bad) imul sbb mov and dec sbb les cltd lea push inc push xchg mov ja sti lds cld (bad) pop jmp loopne adc pop or in test fstps in jecxz movsl cmpsb data16 xchg jecxz loope pop dec (bad) fistpll loopne rcrl pop jo sub inc sub mov push out testl mov sti push shlb xchg out inc jge pop scas and popf push into jno mov cmp ret xor cmc pop xchg ret push add popf (bad) jnp inc adc push loope inc in cli into (bad) and pop mov outsb cltd mov bound out (bad) sub xchg addr16 sarl lret roll scas xlat test (bad) test pop adc jge popf mov out in fcompl or loopne jp mulb in or mov arpl pop js outsl cli movsb push shlb bound inc insb gs loopne rorl push jmp es nop mov sub fs iret jg enter fimull pop cmpsb scas and aas fwait pop cmpl sub pusha inc (bad) test cmpl or dec les cmc push mov shlb icebp sub dec mov xlat push addb imul sub inc push and in jo (bad) jecxz push in cmp cmp pushf in mov loopne mov or jmp jne adc cli and push movsb mov push add jae dec mov jbe mov sub outsw cltd sbb or mov xor leave movsb add add xchg mov jae int xlat pop (bad) push popf cmp push addr16 js pushf pop (bad) mov adcl mov inc fs andl aam mov movsl mov pop stos xchg aas sbb push xchg xor adc dec int imull mov sbb pop sub and push lods pop stos or and lahf cmpsl pusha pop inc loopne bound ret orl mov daa sti pop mov fisub adc inc mov cmpsb out insl out call push inc lcall rcr fwait inc pop sarb in cmpsb and stc imul adc and lret pop push adc cmp pop cs or data16 push dec pop mov adc mov cmp or mov je pop xor and xchg dec jo cwtl mov xor test cs out jne rcl xorb (bad) cld es loope add inc movsl add jg fstpt (bad) mov daa cld in imul mov mov mov mov es or sub fwait mov sub push mov xor imul inc jmp push dec mov mov movsb push inc mov mov mov outsl mov mov movsb inc (bad) in mov imul mov imul mov mov cmpl xor jl adc jns sub imul jnp push push lods stos add andl mov js stos sbb (bad) mov inc mov inc jmp lock or loopne jecxz daa (bad) mull mov icebp inc fistl xor pushl cmpsl push adc (bad) rolb sarl dec outsb mov lcall adc pop rclb xor movsl xchg ret mov outsb jp add push imul je movsl push iret mov xorl mov cmp not push insl fistpl imul mov repnz pop mov inc adc loopne hlt cmpsb popa orl movsb add repz add in loope sbb mov pop aad fsubl icebp gs mov hlt push add jb and mov jecxz scas cmp test xlat dec or or pop sbb sub mov xchg mov lods xor xchg (bad) jmp xor sbb jl movsl lods inc repnz jns pop nop xchg mov lcall cmp jbe repz movsb lods and in loope (bad) div xor mov loope mov mov xchg enter js xchg stc cmpsb pop imul cld mov or inc in in lds bound mov gs jo jl and je stc inc mov mov xchg sbb adc imul mov das xchg int stos pop fldlg2 mov je mov imul int loop mov and scas roll xor push insl mov fcoms dec or jns stc ret mov dec insl mov jl and xchg xor mov movsb addr16 cs aad (bad) sbb scas mov mov stc lods push push mov inc test daa xchg inc adc mov mov mov loop dec hlt pusha mov mov scas or cmp pop mov cmpsl cmpsb and sub addb shll ret lods mov sbb push lock lods adc add and adc insl imul and mov insb imul mov cmp pushl mov lret test or sbb neg xchg (bad) bound sbb pop sahf arpl out pop scas mov jg cmpsl push cmp pop dec fnclex cmp in js loopne adc popf lcall sarb mov dec sub movsw pop in hlt dec cmp cmc orl popa xchg in mov cmpsl cmpsb pop pop push ret or lock mov test frstor in mov gs push add xor push inc bound pop mov jne cmpsb pop mov arpl sbb pusha cmpsb mov pop js adc (bad) mov bound fimull shll fild jne jge insl test fstl cmp jg inc xchg sbb jbe rolb xor imul xchg adcl test push inc out mov enter (bad) ss rolb andl sub mov int adc out cmpsb popa push hlt aad fnstsw lret jle and pop mov test ret lahf clc xchg sbb pop imul pop push adc sbb mov cmp inc jae,pn repz push cmpsb loope dec xchg and adc mov mov jae sbb fstl rol cmp cwtl or inc bnd mov inc lea and xchg les inc in fbld lods mov xor push ja adc jmp add arpl cmpsb and negl daa pop andl lea je cmc xor cli rcrb jl mov jno push rol cmpl icebp int dec mov insb mov mov pop mov mov mov inc xor lcall inc (bad) xor leave fstpt pushf arpl mov in fwait bound into (bad) fildl repnz and daa pop cmp pop xor (bad) cwtl add pusha in or daa popf push jno cmpsl push in (bad) cmpsb and push xchg gs insl jmp or mov mov add mov ja sub and cwtl or aas dec and and lock out pop out imul fsqrt cmp or stc cmpsb fiaddl popf mov jns lea sahf aad mov mov xor sbb mov or shr inc or xchg push mov aam sub in cmp mov and fwait enter jno stc pop push orl pop lods stos in imul outsb mov xchg (bad) rcll int mov xchg pop std mov adc jo pusha jno cmp dec sub jecxz out pop sub pop dec jmp add jnp xchg push and jle mov xchg adc fisttp xchg nop daa sub push push pop push jne or cmp out inc bound mov in jp mov fisubrl inc sub pop add add bound mov fstpl out lret aaa stos sub add pop adc mov sbb mulb data16 insl jl mov mov sbb in dec pop add insl out sbb repnz xlat movsl xor jb push mov inc movsl scas xchg imull pop inc leave mov sub mov push and cltd lahf fnstsw lock in fiadd stos into pusha mov enter mov pushf mov cmp (bad) lock fneni(8087 mov arpl adc movsb dec loope jo icebp ds icebp fsubl xor (bad) jns adc and inc sbb add mov mov test popa sarb pop mov inc sbb ja fld fistp sbb lods call xchg (bad) pop cld repnz movsl mull mov cmp fdivl xchg call arpl mov and loopne daa xorl stos push inc das mov sti dec pop mov mov rclb push inc or mov (bad) push mov in cld mov sbb mov loopne push add cltd sbb outsb dec fwait add xor lahf mov mov push add rcrl and pop mov out adc mov shrb mov cmpsl mov jl mov push dec or pop mov inc push add aas (bad) popa mov (bad) shl xchg leave mov sub and insl dec push mov sub mov or dec mov pusha mov outsb mov int3 ret sub mov mov xchg mov stos and xlat or xchg cmp mov push add mov ja fistp out mov fstl sub mov aad xchg rorb xor jns sahf jmp add ljmp arpl pop popa sub mov imul movsb pop cmp and sub loopne and dec movsl imul push pop push (bad) mov dec mov lcall movsl lret imul stos push mov pop pop std pop cltd repz or sub mov ja pop inc dec sbb (bad) (bad) jbe cmpsl shrl sub enter jmp cmpl cld je sub daa xor rorb mov out in jmp lret mov xor movsb adc add enter gs mov into sarl mov movsb mov add pop sub (bad) dec lods mov push (bad) mov andl mov inc outsl cmp mov jle mov mov xchg loop lret jnp in dec icebp mov mov mov roll mov pop pop stc aaa leave gs in dec xchg add cvtps2pi out and pop in xor jae call and (bad) adc pop stos std adc rorb push orl inc cmpsl movsl or shll lods mov (bad) dec repz push je add pop (bad) out int3 negl pop jg pop sub pop mov xchg or neg add pusha outsl jne mov sub dec xchg inc push or out or adc arpl or lahf push fucomi add andl jo xchg or cmpl xor addr16 test test jmp pop mov fs movsb popf mov test mov pusha lea xchg mov mov mov daa adc sub call arpl aad je sbb (bad) rolb or mov or jns xchg mov add mov mov movsl pop ds jb adc mov adc pop test sub gs dec mov dec or es (bad) mov mov and jno repz mov and mov movsb mov stos dec lods and push cmp mov decl imul rclb movsb inc imul loope incl leave scas mov pop repnz popf or sub addl jecxz dec lds movsb and push inc sbb mov cmc mov sar add (bad) mov inc jne mov cli pop add xor inc push in pop (bad) jmp jg dec adc jns add xchg clc imul nop mov mov mov xor mov call xchg adc sbb (bad) jmp jle aam mov sbb movsl mov ret mov mov lret cmp andl adc (bad) fldt test mov sti daa stos adc jg jne push nop mov push outsl mov xchg mov mov push and test and push sti daa icebp mov xor rcrb movsl es cmpsb adc cmp (bad) jo daa cs and movsb fldl mov pop movsb mov les ret nop mov pushf sub mov xchg iret aas rcr mov sub cli and mov mov test loopne pusha or adc xchg mov mov cmpsb or aas mov out in mov cltd aam repz imul js shlb call fldenv lret xor xor gs je and into outsb xchg out jg pop mov movsl jle lcall and (bad) movsb pop inc fldl insl out in mov pop pusha icebp push and pop rorl mov and inc out test push dec mov std cmc int mov add mov cmp cmpsb or xchg ds pop lahf sbb pop dec out push mov or nop negb pop fwait stc add xchg daa (bad) fiaddl lods mov xchg cmpsb pop std sbb gs mov bound bound fwait cs xchg enter add shlb fxch adc inc mov and mov and rorl pop je sbb ja add lods (bad) cmc push xor mov fnstenv (bad) loopne cmp cmpsb dec hlt (bad) popf adc mov loopne sub (bad) jno insl mov dec pop (bad) fdivs adc mov mov loopne inc pop in bound add add loop in cld mov mov sbb out push pop and cmp sub shll inc repnz mov inc mov cmp pop mov imul sbb cmp adc mov stos stos and mov add fcmovnu insb in lret lcall xchg cmpsl adc dec (bad) lret and jmp popa pop push call hlt loope int mov mov add jge (bad) call mov add ja sbb xchg xchg mov sahf aam push mov or cmp lods xor mov fdivrl mov addl mov or movsl lret (bad) xchg inc (bad) xchg jmp loopne mov mov pop dec loope out test or mov push mov mov repnz test lea and sbb cs jb mov pop lods push ds or sbb mov xor ret fisub pop nop xchg mov popf cli push lods scas int mov cmp insb jecxz dec (bad) jno push inc push fcmovbe dec mov jbe mov in mov and mov (bad) push mul pop movsl jnp adc inc mov add sub test adc inc push aam dec or cmp outsb addl int sahf xchg and pop sti mov dec add xchg xchg les xchg sub cltd sbbl cld pusha test add xor jns sbb push add mov lock loope pop lds dec into xchg aas jp in mov pop pop ret hlt cltd popa inc or mov or or les xchg test gs lcall aad jecxz (bad) pop sbb xor mov pusha and cmp jge jno inc adc mov hlt ljmp lds push add insl hlt pop stc push clc dec xchg aam jecxz or inc fdivp and jecxz mov pop dec mov cmpsb add stc xchg pop movsl adc push sarb enter xlat fnstcw insb (bad) jne xchg icebp pop inc mov cltd sub and pusha jmp aaa mov xlat jg or adc inc push add pusha imul in mov pop cli fistpll mov inc aad cmp imul jo pop (bad) lahf sub sub and rol push mov loop jnp sahf mov iret mov push jge bound sub lock xchg sub jecxz mov push push add repz mov adc out cmpsb (bad) xorl mov std pop mov cmpsl pop jne fistpl xchg dec xchg sub mov jl popf mov and ja jp xchg shlb notb repnz sbb mov scas and aaa in ret out aam dec add sbb cmp xchg test cmp mov dec daa mov out daa sub rorb repnz mov mov inc mov je mov aaa xchg les inc pusha and (bad) xor jge iret (bad) mov ret nop mov cltd popf mov jae imul sarb mov xchg cmpsl or jae sub mov add aas hlt pop sarl mov or push adc push scas negl mov pop push dec ja loopne rcll xor addl inc fwait pop dec add rcr imul and mov dec sub sub cmp mov aad jae into pop and popa pop call (bad) out push scas xchg in imul loopne movsl lret xor mov cltd mov dec sbb loope mov mov mov inc adc das lahf xor sub fild sub aam adc imul test mov icebp cmpsl in mov pop mov out test add jno shlb or mov xchg repz add sahf stc (bad) (bad) pushl loope mov cld sahf repnz inc push add loope lds icebp pusha jae (bad) cmpsb ja add or cmp andl xorb add pop mov mov js add mov mov loope or mov iret and or mov fwait repnz imul cmpsl xor out push xchg clc mov sbb cmp mov arpl inc dec lds (bad) push enter pop dec adc dec popa btc add add and imul nop aad rolb sbb sub cwtl pop push mov xchg call std mov mov and in sub xor stos test inc outsl cltd enter pop aaa and jno mov lret out push aad rclb movsl xchg ret dec add rolb jecxz nop xchg dec (bad) jbe mov mov inc pop jecxz ret and push arpl rcrb jl push ret mov lahf shlb int aam aaa dec mov fdivrl (bad) mov mov pop dec dec ja fwait enter jno or add cmp test rorl repnz adc ja aam in out imul repnz pushf arpl inc shrb mov sbb mov sub xor mov int fdivrl jns or lret pop pop loopne cmpl mov popf pop hlt dec movsl dec inc or dec sub sub test popf and dec push mov outsb out in mov fwait mov sbb (bad) int3 (bad) ss aam and adc cmpsl mov fs cmc push xor std popa pop mov and pop jecxz add adc fidivr cltd test add mov mov jae stos push enter repz out fwait punpcklbw dec xchg (bad) movb sarb mov ret test and in popa mov dec sbb push xor adc call pop (bad) in pusha or imul fcmovnb add mull insl or xchg stos mov cmp dec adc rcll call lock jns inc mov sbbb push imul lahf shrl popf scas xchg imul fsubs mov ficomp cld mov rcl hlt and xor jnp pop gs cs mov cmpsb test es inc pop push mov repz lea push mov (bad) lock test addr16 or inc fsubrs aaa and lods and push dec xchg mov pusha xchg dec fwait mov gs aam loopne cwtl and jns fisttpl mov xor dec push pop adc fnstenv xor mov mov pop bound cmpsl out xchg pop dec les mov aaa or mov jnp mov gs aaa cmp and inc les cmp xchg and mov std adc fwait icebp sbbl cmpsl outsb jmp xchg or cmpsl cld fisttpl push les fidivrl (bad) xor scas rorl mov cmc (bad) push and mov pusha cmpsl enter ret shll cmpsb mov test ljmp in mov sbb pop xlat dec std arpl cmpsb stos rcll dec sarl stos mov es scas (bad) repnz add jmp cmp out rcll sbb xchg mov xchg repnz adc sarl sar mov adc pop out outsb dec addr16 pop (bad) cmp jge std dec mov xorl mov pushf xchg stos test pop mov lods xor sahf loop mov adc sbbl inc ss (bad) jbe cmpsb scas adc movsb out jo popa and mov lds pop inc daa jbe out jp adc in inc adc adc loopne mov mov fidivr (bad) cmpsb jmp cli push xlat xchg movsl adc xor or pop pop std xchg popf inc push dec sbb sbb cltd mov cmpsb sbbl int3 mov cld mov fwait jmp xlat movsl out jge iret call mov out and cmpsb mov jecxz ret xor pop sti icebp push sub sbb sub stc neg or lret mov sub mov inc mov push add mov mov adc ss ffreep mov stos lahf (bad) fnstsw mov (bad) mov dec adc add mov mov imul adc adc je pop jno push psadbw adc xchg mov or sbb mov ss dec or add pop mov sbb mov mov addr16 sbb andl inc fisub in mov pop addr16 imul ficoml leave xchg push aam insb adc imul adc stos arpl outsb jbe jno mov or into inc and insl cmp iret lret xchg aaa xchg enter push mov insb loop addr16 push movsb scas scas repnz and adcl cmp mov stc stos mov fimul sahf xchg jge mov iret mov (bad) out imul push scas jns mov sub in mov lods loopne mov xlat sbb fstpl xchg push xor pop dec push mov stos stos push lock das lods das out cmpsl and ja adc fsubs inc imul mov xlat or jecxz push jns fisubrl fs dec add movsl sbb cmp in inc dec and xchg ret lcall shrl mov leave push jp and pusha out fnsave mov out mov xor and into cmp inc mov pushf (bad) (bad) mov (bad) cmc adcl xchg add dec in and cmp xchg mov pop jae out roll add testb xor xor or je bsf lock (bad) xor mov movsb lret pop pop inc push iret push stos mov mov xor arpl and shrb mov xchg mov add xor icebp pop loopne jl mov stc (bad) testb push mov stos stos mov cli push push sti adc mov inc (bad) movsb inc movsb (bad) sub inc inc sub push mov jecxz js cmc mov ficompl mov inc dec or je mov mov sub mov std call aaa in lods pop mulps pop ljmp test xchg sarb movsb mov adc (bad) stos mov and scas (bad) (bad) shrl sbb in shlb repz outsl loopne dec push test mov repnz push push mov mov mov sbb mov xchg lock pop and or popa sarl mov mov bound loope sbb sub mov stos icebp cmp imul (bad) repz jl sbb jecxz (bad) mov sbb gs lods arpl adc icebp in pop add mov cmp je inc adc push fwait popf xor xchg movsl (bad) lods out pop or (bad) jb andl arpl mov sub mov dec xchg nop cs pop fstl dec mov dec (bad) cmc (bad) mov das add (bad) xlat fnstenv add lods ficoml pop in (bad) and (bad) dec inc pop das pusha leave jmp adc pop and icebp mov or aaa test fwait cmp mov lods bound sbb lea rol out add jns aas mov shr sbb dec fisttp sub pop xlat pop jbe mov xor mov adc xor adc mov pop fistpl and fs pop jno jl scas adc (bad) into xchg jmp dec (bad) out leave cmp adc cmpsl add daa dec lcall popa cld dec pop iret popf incb popa imul inc fildl pop and add ljmp in push jp xor shl or cmpsb lret sub (bad) mov stc lods xchg in mov inc icebp fwait pop fist outsl std push jo mov dec std ss bound call out fimul adc xchg pushf rorl movsl pop mov inc and cmp scas pop test cwtl and not xchg dec mov and stc and (bad) xor mov lods jns shlb loopne arpl and sbb and sbb bound shll loop mov pop cmp repnz cmpsb data16 sbbb sbb xchg push (bad) pop fist sub (bad) out add xor in mov call inc xor and jecxz jge repz adc pop ret in cwtl scas sahf mov inc (bad) popa enter (bad) ljmp add iret pop pop aam mov and mov mov bound push (bad) repnz and ljmp dec pop jno in lret xchg imul mov cmp dec cmc lods dec std adc sbbb inc scas lock leave and inc js cltd ret pop jmp inc jns push aaa test addl out inc xchg loopne xor pop std negw in inc adc xchg cld push addr16 mov subb xchg cmp xchg mov rclb jecxz mov jle aam pop (bad) push adc cltd sbb sbb rolb xchg leave into (bad) push mov sub dec cltd test mov mov mov xchg lds loopne addr16 movsb xchg fucomi daa mov jb inc dec mov and sbb xor jns adc jg inc mov push fnsave fisubl cmp std jns cmpsb xchg mov push xor dec mov mov inc jmp or (bad) mov jg ljmp gs dec pop mov push (bad) and mov inc movsb fadds popf lahf daa fidivr std mov out push or subl sahf mov movsl int3 mov iret loope add and pop stos cmpsb arpl mov movsb aam push jecxz adc xchg cmp sbb inc or pop xor (bad) out mov clc addr16 insl dec or shll mov bound lahf dec insb jne in mov cli pusha std repnz jnp cmpsl mov lock (bad) ljmp dec push test mov lods lea xchg or mov xor and mov inc mov fstpt mov push mov mov jle out mov push sub push call cmp out ljmp dec add popf mov ljmp mov lods sbb shll or ss dec add rorb dec mov mov pop pop push jge xchg xchg leave or movsl scas lods subl mov cltd push mov imul jne out addl movsl repz cmp push stos or push xor sbb adc movsl push ss mov sub cltd push aas pushf rorb movsl pop scas mov jo xchg pop mov push insl (bad) push mov add xorl pop mov and pop cmpsb push (bad) cmpl xchg sahf nop pop movsb fs mov mov clc test and sub ret mov ds mov mov cmp pop dec jge arpl js insl mov lret push aas and mov ret bound lea data16 mov stos jle fistp mov dec mov hlt dec jns adc movsl andl xchg insl mov jmp push cwtl xchg pop fmul inc ja lret movsb mov das and adc add xor (bad) cmp cmp dec xchg jmp jbe out sahf cs xchg cmpsb stos push inc loope adc daa data16 and andl jecxz lods xchg popa push stos push in inc mov dec push xchg or lea xchg push adc and push pop enter xor pop sbbl xor cmpsl lahf lds inc push aas icebp adc jmp or bound out xor les fbld scas (bad) dec lods pop push pop shlb mov cmp jecxz jne lahf mov mov out icebp sub pop call decb fwait sub cmp data16 cmpsb mov lods inc movsl imul fcomps push push cmpsb mov (bad) sar and mov in daa sub (bad) es mov lock out and shll jno cmpsl pusha notl pop lods inc xor rep imul int3 mov mov mov roll movsb pop cld pop sbb mov int scas jns movsl pop shrl cmpsl cld mov (bad) mulb mov movsb dec lds sbb hlt jl test jb pop popf leave inc dec shlb imul sbb or mov and cmp mov pop std jne rclb jp sbb cmp imul and in mov (bad) xchg movsl hlt test xor sti lcall popf mov std repz mov imul cltd (bad) pop inc adc stos push push stc jne test mov jno jnp mov hlt push adc lods and loop mov ret jae xor xchg mov popf push cmp aas es xchg je mov sbb jbe lds mov cmp add sub imul add arpl arpl jo out jmp jnp sbb pop sahf mov or xchg jp sub out push xchg pop je mov pop dec (bad) mov add add and mov lahf xorl movsb mov jmp daa xor push jmp sahf mov stc inc sub mov hlt xchg outsl mov movsl xchg (bad) pop dec aam dec or movsl pop inc or (bad) jae or cltd mov bound jae cld mov cmp fs push cmp dec sti mov jae stos adc push les aas addr16 fistpll popf es in call scas sub (bad) push negb out cmpsb ffreep lahf test lds lds int3 or call ret subl test pusha jmp add adc (bad) jns and movsb sub movsl rolb insl loope orl sub mov xchg mov add push scas push addr16 sti mov mov sub pop mov xor bound sarl xchg inc nop outsl fidivl mov js addr16 lock xchg imul lret shll test jmp cld mov jb xchg bound dec jno or xchg cld or inc roll sbb sbbl jne mov icebp pop mov in movsl mov lock xchg clc rcrb jle mov pop bound mov in xchg aad icebp and out adc or add push cmp movsl and test jecxz mov (bad) dec jge pusha fbld mov sbb jnp xor jae xchg mov inc adc fsubs sahf lods mov push lock pop paddusw mov mov mov test xchg dec inc adc ss js push mov dec cmp jbe jp cwtl sahf popf movsb sub ljmp adc mov loop ss jecxz and cmpsl mov push sub fidivr add or pop lret mov mov pop jns out mov dec xor cmp jecxz mov pushf mov xor xchg mov ljmp outsl mov out movsl (bad) icebp mov (bad) and pop lock jecxz push sub rcll pop jb mov lds dec mov or mov xchg scas mov jbe fstl cli sub or jne xchg or xlat xor sub mov jge ja push int3 fisub loope adc sub lcall or pop clc imul mov mov not js call pop fsubrs add and push mov jne aaa mov or in data16 into aam iret xor and and inc and mov xchg add mov or push dec xorb dec mov xchg (bad) (bad) adc add lea add mov idivl pop adc pop repz inc mov in daa out mov jo adc pop in call pop popa sub mov mov (bad) jne pop ret lea jmp arpl mov fstpl xchg xor mov fs in pop stc and ret or js mov mov mov cmp mov xor out outsl add mov xchg mov mov add mov and mov inc mov jmp js imul inc in cs pushf adc js shlb movsl mov fsts jecxz out pop ret dec push (bad) mov inc inc sti idivb leave ret jmp (bad) out mov mov or cli mov and aad xchg scas lods add dec jne and icebp es xor xor (bad) mov inc fldt bound mov lock jae jecxz repz pusha lock xor dec cltd shll sahf xor cmp lea fnstcw loopne mov pop pushaw int3 mov (bad) fst xor cltd lock rclb repnz mov das mov xor test cmovnp xchg xchg popl jecxz pop pop xor mov or or pop repnz daa scas cmpsl or enter and (bad) in mov scas in arpl mov test leave movsl xor lahf mov es push mov xor ss js das movsb jns clc fistl fwait (bad) loopne test mov sbb inc cmp jns (bad) leave mov iret mov shrl jge adc xor jae mov mov jle mov ret and dec scas xchg dec mov pop fcoms dec cli xor fucomp xor mov pop frstor cs pop mov mov mov fs js std lds mov test je pop jo mov inc xor and imul sub cmp sub push fwait cwtl adc insb leave pop sbb mov mov jp sti push popa fmuls adc pop in cmpsl pop adcl jae leave es addr16 rorb repz fisubl (bad) test loop push mov pushf test decl dec cld pop sub jp (bad) mov movsb notb mov jecxz and cmp xchg stos cmpsb call push dec gs mov loopne sbb xor cwtl (bad) jg add fnstcw or xlat cltd stc mov mov push inc pop pop mov push notb aas (bad) xor rolb mov fldl (bad) pop mov push add cmp jbe cmp add lahf hlt sarb (bad) (bad) jb out jmp pop xchg les and movsl or cs (bad) fimul pushf or mov dec mov fiadd and cmp imul add pusha popw movsl scas jbe (bad) mov pop jbe loop (bad) lods xlat (bad) into cld lret mov and mov (bad) and inc call add push enter push pop inc pop inc sti push ja push push jno dec add mov mov mov sub jns mov fimull std movsl xor dec add dec add cmovl mov fbstp push jae cmpsb inc outsb loope pop and sub xchg clc mov pop inc repnz (bad) mov fs mov or dec mov xor jl mov cmpsl pushw push pop mov iret pop notl scas and xchg mov les test orl jp icebp push xor sbb sub ljmp hlt lods sbb cli jb imul sbb pop loop push jle inc out shll cmpsb les pusha push jecxz dec les lea mov mov mov sub out mov leave test adc pop jne mov lcall sub xchg xchg (bad) rcll xchg or rolb dec adc loopne int movsb or (bad) cltd inc or add (bad) push mov xchg and imul jmp cmpsl es cmp pop cltd dec dec pop stc pop shll loop and mov inc cld pop mov es add push mov test xchg mov dec ror add dec loope cltd xor jnp rclb cmp repnz (bad) (bad) jge jp popf ja mov mov mov jno xor pushl inc in mov shlb xor movsl dec jae mov push adc xchg mov movl roll dec cmpsl dec or imul mov sbb rcll cmpsl arpl cmp jmp jne dec addl int sbb inc out enter pop arpl dec or mov push or popa repnz dec and cld notb rcrb arpl mov dec arpl lret mov pop sti mov (bad) sahf inc pop xchg jg xchg and jns jno fwait pop lds cmp mov popa stos mov pop sbb loopne mov jp jle and jecxz outsb sbb pop ljmp lea cltd mov outsb mov cld imul and sub in jecxz imul out enter jne jle fwait cli or mov xchg cltd mov stc cmpsl movsl fdivrl bound xor adc lcall dec enter out movsl mov jmp cltd iret dec cwtl aam out push mov into xchg pop std push daa les mov imul cmpsl imul andb or mov js inc push inc (bad) lret xor inc loope mov aas test cmpsl mov mov jmp cmp xor loop imul xchg call shrl (bad) mov insb inc addr16 mov sub pop sbb in dec or jp pop mov cmp les dec call mov and and loopne and pop mov bswap and pop jae sti mov lret pop shlb imul lcall cmp in mov sub mov lret mov call dec push bswap dec adc lock data16 inc cmp frstor repnz dec and xor and sahf jnp pop mov cmpsl int3 iret push (bad) mov mov lahf loope imul movsb adc jo push mov jmp push int rorl mov nop shlb inc push mov xchg xchg sbb push stc push mov add int jns sub push or inc lods out into fcmovb cmc sub push mov xchg mov sub call movsl sbb les pop (bad) jbe and insb (bad) mov in push aas adc stos xor scas movsl (bad) test popf repnz notb inc (bad) pop dec mov push leave lds rcrl jns cmp cwtl jbe push pop mov xchg mov or js dec lods mov negl or popa scas movsl push sti les mov pusha in dec push andl outsb call mov push jmp les bound dec adc pop sarb mov shld pop xor adc inc pop pop inc xchg hlt mov inc pop or mov adc jns bound add jns (bad) in shrl mov ficom nop dec cwtl jecxz jge scas jno xor pop adc push dec pop xchg bound out mov sbbl mov jno jmp lods xchg sbb (bad) cmc ja jle inc dec out daa sbb xor movsl insb repz lock xchg cmp in movsb lods push popf cmp mov dec jge mov pop out imulb aaa jbe arpl andl or ljmp rclb sahf jmp lcall std and pop push adc jecxz call xor std movl lods hlt xchg mov (bad) fnstenv sbb sbb std jns add out aaa mov (bad) (bad) push xchg xlat xor jns xchg mov xor or pop mov xchg stc xchg mov and xchg mull mov or lahf mov xchg and test mov (bad) fdivrl mov push dec jae dec push in outsb in xchg pushf lock adc xor cltd mov sub (bad) cmpb xor daa xor sub pop mov in lcall mov mov outsl push ja mov (bad) dec xor cmp in jns lret (bad) les pop mov jnp daa sub mov rorl or mov push out scas jmp push int3 cltd popl fnstsw mov adc mov lock fstpt stos loope dec add mov lahf mov sub add mov xor pop mov mov imul data16 jmp mov icebp arpl (bad) cmc push cltd adc fwait mov movsl mov lahf mov cmp jns cmovno das adc add fimul and shlb cmpsl lods mov mov sub mov cmp jp movsl xchg xchg xchg sub pusha xor ret jecxz in dec dec lcall insb loope cmp mov push mov jl jecxz leave cmpsl jns cmpsb inc xor mov add mov sbb ss mov es xchg cmpsl js insb mov mov fdivrl and (bad) aam pop mov sbb ret js (bad) mov iret mov jno jp or fwait pop push std push into stos add cmp adc lahf dec inc hlt inc jp sbb mov mov scas je icebp mov ret call loopne in xchg lret jbe es pusha pop inc jb xchg cmc cltd xor sahf out inc punpckhbw call sub fs pop and jp jnp push roll orl loope fwait push jp mov xchg jns nop mov mov fwait inc xchg mov push movsb xchg jnp addr16 clc mov sub add add mov ret xchg mov mov pushf lock adc add js test es pop lret push push sahf nop and mov fwait or idivl push aam xchg inc insb in jmp xchg xor mull xlat mov mov mov jae arpl mov mov rorl and xor push jb imul mov in cmp int xor jbe std inc into inc xchg scas inc stc sbb mov dec push loope psubsw mov inc mov dec std dec push add push out sub mov push (bad) jns or adc push sbb pop shrl inc bound and popf out fxch cmpsb incb pop inc adc jb jp xlat mov lock fs pop gs pop xchg jb lea popa and shll mov cwtl test jl sbb loope xchg jnp dec fcoms dec les leave ja and dec stos or mov fwait pop push inc mov out (bad) fdivrp out jmp sar and in insl stos adc call xchg sarl mov loope shll push rorb ror adc mov xchg cmpsl (bad) int loope sbb inc call ret shll (bad) fucomp in into (bad) (bad) dec xchg repnz jge inc lahf mov icebp arpl call push cmp in out les add cs sbb enter aad out fwait cmpsl mov cmp das shlb mov lea or mov test xor mov ret cmpsb (bad) (bad) jbe dec sub out mov pushf mov repnz imull mov pop mov xchg les xchg jo sub stos mov je (bad) jp icebp roll adc fs gs mov clc pop movsl pop push setnp sbb out pop dec cmpsb arpl jmp and dec shlb test imulb push mov inc adc push ret inc loop scas pop and add dec inc or icebp test lea data16 add and bound pop xchg adc pop frstor movsl push negb fsubrs mov jmp stos int3 xor pop cmc adc cmc andl pop (bad) pop (bad) popf ja jbe push or jno lods popa push (bad) cmp jp add xchg add add cmp stc ja jmp and sahf repz inc bound adc int3 idivb adc push lock jmp insl or mov int cmp inc lods test lea das xchg add lret (bad) xchg push adc leave xchg ret jo pop cmpsb jae xchg dec in aam cld stos sub adc dec cmpsb cmp lods sub mov xchg mov xchg movl and mov into cmpl psubq mov push and andl into aam xchg lock mov adc mov mov pop mov push pop fs cmpsb popl jp fsubl jmp jbe mov add push cmpb out jb mov ret mov xor mov dec imul cmpsb mov pushf mov test pop arpl xchg in bound stc adc mov jp outsl add dec mov (bad) ljmp adc sbb mov push testl mov inc mov daa jb jecxz sub je test adc inc sar arpl mov mov or fisttp add cmc pushf mov mov ds cs xchg pop and out jae test mov ret cmc pop sarl sub and lcall lret push adc cltd mov in lods lods adc movsl and xor pop inc outsl loop data16 loope ss inc popa mov (bad) mov sub xchg shll mov adc lds arpl and xchg lcall xchg jns mov mov mov movsl jo sbb xlat jns cmp jo mov movsb rclb sbb nop into mov inc mov and cmp test jmp lods and aad cs mov and xchg hlt in mov mov outsl rcll in and bound mov sub sbb xchg rcll xor add icebp mov dec aam in test outsl jmp (bad) push inc ret xchg jnp pop mov dec test mov and adc loope scas mov js jo xor aam mov cld mov movsl mov sbb mov imul xchg ret inc (bad) lock divb xchg popf mov dec cmc lcall mov cmp mov cmp sub lea push jns and mov or cmp mulb xchg add out stos popf mov mov pop imul das xchg mov jns subl mov xor test pop cmp push bound insb loopne add (bad) hlt mov addl call mov xchg mov outsb or jecxz xchg cmp pop es and inc orl pop ss popa fadds dec push pushf mov orl xchg pop lock sbb and mulb cld pop mov push mov cmp stos xor movsl (bad) cmp mov pop (bad) push mov cld mov push mov arpl inc data16 sbb mov pop mov sub jnp jae mov jns rep adc cmp jge popa idivb aad and xchg popa fs cmc inc lods xchg cld pop xor (bad) fs jae std aam scas and mov movsb insl push xchg fildl push and es mov movsl jl pop mov cmp push xchg jnp push pop pop hlt ljmp dec add inc xchg nop push imul imul movsb aaa sbb insl mov daa repz and (bad) cwtl dec lahf roll add xchg mov pop xor push mov test leave mov dec outsb jmp out pop fwait std (bad) hlt dec popf out cltd xor dec xchg sbb push std ret leave subl ret popa popf sbbb mov jnp call lods and or inc pop imul jbe (bad) push movsb sbb lods mov pop jle fdivrl int3 pop daa je and lock or mov pop cmpsl jp cmp xchg ja cwtl mov mov ficom jmp imul addr16 pusha push sarl xor movsl dec add fs xlat sub pop sub (bad) mov sub pushf mov mov rcrl push pop (bad) xchg add mov ljmp jb xor xchg or xchg xchg mov mulb in inc jecxz mov clc pop lea mov inc in popa cmc sub xor add xor movsb rcrl xor adc (bad) (bad) sahf in movsl inc push ret fsubrl jns sub mov movsb pop sub xchg push pop cld pop cwtl addl sub mov (bad) jl mov sub out sub mov inc xor (bad) mov call test lret mov mov jp rcll repnz cli push jecxz in adcl mov pusha pushf cmpsl mov inc lret mov bound adc cmp test movsl push std or setnp or js jo jns mov pop xor push xchg dec int3 rcll packsswb mov js pop int3 jo mov mov test cltd mov sbb pushf sub mov hlt in jnp adc ret mov mov cli stos cmp jb addr16 jne cltd jns lods icebp aaa jmp popa jl rorb sbb mov insb loop stos test inc mov rcl xchg or aas sub xor iret inc inc adc test stc std imul ljmp in lock int3 sbb push fwait xchg mov scas ret sbb jb out mov lahf push inc jmp int3 cmpl adc xchg rclb and dec test aaa and pop stos sub jmp into xchg shll dec mov dec add cltd std jle cs xor (bad) out or idivb jns pop adc lret dec push dec packuswb scas mov pop mov mov loop cmp clc xor mov jge inc pop add push add out inc sub shl es rorb pop (bad) jbe inc pushf mov mov lret sub popf sbb das stc dec push fildl cltd cli movsl sbb test pop mov (bad) gs into push add push mov mov or repz js hlt xchg loopne sti arpl mov jg lods add movsl inc lret stos mov repnz lahf pusha in push es in loop xor dec (bad) sbb pop dec popf mov push pop inc dec int3 jno inc out aas imul decb cs jg ja jno mov xor and adc das cmp test test (bad) bound mov iret (bad) push addl adc cmp pop jne loope mov in popf out es imulb mov hlt clc popa ds push pop (bad) (bad) aad fs pop mov push int xor dec fistpl mov mov movsl psubw pop inc and pop repz shr dec mov test inc pop lods and insb popa pop mov or jmp add xchg repz hlt sbb inc pushf (bad) xchg daa cld mov shll imull add bound dec pop repz mov das cmpsb cld das xor into sub jae dec add in imul out and mov adc pop shrl movsb lahf inc in in cltd cmpsb push stc xchg sub xor lock jle lds lock popf push inc flds push cmp adc lods and mov cmp mov cs cmp imul sub pop mov cmp cmp and inc jno int sub cmc lock es sahf cltd mov mov adc (bad) jae inc adc mov popf jno scas mov mov lret pop cmpsb mov mov and jle es cmp mov xchg dec or ljmp pop push out ficomp mov outsl pop pop test cmpsb mov mov movsl call int cmp mov mov mov pushf inc push mov inc adc mov push xor (bad) dec or popf stos mov add arpl mov in adc xor cmpsb lock inc jb cmp push cwtl mov push pop jle sbb xchg aam pop add jnp mov dec or pop lds je mov adc add or jo mov xchg pop fstpt mov pop mov cwtl sti loope mov scas lea cltd std in insb inc adc mov jecxz in (bad) cltd movsl jns cmc sub mov dec mov inc rolb test test icebp sub mov xlat mov imul scas je xchg pop loopne movsl jno lahf aam add sbb mov or mov lcall inc cli movsl test aam inc test stos mov push (bad) aad pushf mov (bad) dec xchg mov scas mov cmp add cmpsl cmpsb aaa int3 inc jecxz add iret dec adc xchg adc fldt mov pop mov sahf xchg adcl test enter es insl lret sub mov jo fild rorl nop stos and xor (bad) dec mov cli into jmp std lock shll stc mov out jle movsb add adc ret stos lea sub outsb xchg into movsl xchg scas std bound sbb orl sub lahf loope push insl mov arpl (bad) out pop xchg xlat add les sbb cwtl pop and addl xor mov or sti cmp daa jecxz js enter mov push sub dec and insl xor arpl jmp push fs mov and fs add (bad) in (bad) loopne pusha clc xor xor add pop cld pop mov aad pop sti jns mov cltd mov nop pusha cmc in jne or sahf push xchg mov test jns pop insb es push in mov mov sarl call mov cmp rcrl inc mov mov scas sub cmp xor and out aam lret aad call mov outsl out jo ss inc fimul jle xchg mov pop mov adc push into xor jle insb jcxz andl and (bad) lret je mul lods dec xchg mov pop jmp and or arpl cmpsl insb fdivrl inc cmpsl mov movsb fstpt push js and push sbb mov lahf add insl (bad) movl cmpsb lock dec inc test dec std addl shl imul push aas lods xchg popf popa push (bad) fisubl xchg insl dec cmpsb aas aas add loop data16 pop roll lods jns dec bound mov cwtl pop and outsb push sub and jo repz sbb mov pusha cmpsl movsb jns pop push jmp insl mov and cmp stc lret inc gs push jmp mov mov xchg jb in cmovnp cmpsb stos fwait dec loope loop push int iret mov subl ljmp rcll jp int3 cmp bound test xchg and mov sub xchg fild (bad) xchg icebp mov sub scas inc sbb jle test stos hlt dec xchg bnd imul push std mov jnp cli pop cltd xor imul cld mov push sbb outsb imul mov shr cmp es mov xchg and cmp push (bad) loope nop jge or mov mov sbb mov and mov test aad sti or mov mov lea insl (bad) xor mov pop in imul fnsave xchg or xor pop repnz (bad) movsl or pop in lods mov sbb pop repnz out cmp xchg inc push cmpsl xchg aas cmpsb push nop mov xor jp fcompl xchg cmpsl scas inc dec push add adc (bad) mov aas loopne (bad) call pop mov mov es int xor add mov push scas cltd push cmp lods push pop xlat loope adc xchg inc or jae outsb in push mov jg dec mov cmpsl sub mov iret rolb cmpsl cmpsb jno cmp jg push jbe xchg pop lcall mov ficompl ds (bad) popf icebp fsubl popf mov dec mov je jge push (bad) mov mov bound mov popl or adc mov cli mov mov sub mov popf xchg lea loop insl out mov pop aam mov (bad) push mov push out int das in mov mov and ds xchg dec jge mov imul sub movsl stc and les pop sub loope (bad) lock jp rcll cmp jecxz pop ficom mov or jmp mov ret jecxz test sbb in xor add out inc push (bad) lret lcall lods add fwait mov ljmp sbb (bad) mov ja mov and mov and pusha mov daa adc (bad) xchg and pop lods popa (bad) hlt daa insb xor sub das pop dec ds das lock xchg mov (bad) pop sub sbb insl loop mov cmpl pop mov cmovne mull sarb decl sub in jle icebp push mov xor (bad) imul mov pop inc adc lret mov xor lret adcl sbbl add mov fcompl mov cmp mov pushf adc mov push test stos mov (bad) adc stos sbb and fwait xchg cli outsl ds push adc into lret movsl jg adc and or lock cmpsl fcmovnb pop push int3 shlb cmp xchg mov push xchg movsl clc mov shrb lea mov and push mov lds int3 xorl sbb cltd jecxz push nop mov lea dec inc add imulb jno push (bad) adc loope (bad) dec outsl int cmp loope divb (bad) mov inc push bound xor nop (bad) xlat das and push or call les inc add inc jae mov inc ljmp add pop incb adc (bad) cli xchg xor loop and and or xchg aad stos movsl push fwait and in adc rorl mov idiv pop sub pop sub and outsl and push stos sub cld std popf fldenv cltd push adc and nop fdiv pop insl cmpsl ss imul das xor and jmp or scas test (bad) mov sbb jmp notb repnz pminub fimul xor adc sbb cltd pop sub mov rclb or or aaa jge lods inc es mov sub adc icebp adc les aaa sub pop stos stos test sub repnz xchg bound jecxz ret push out mov rcrl (bad) sub jnp dec mov test pop nop fldenv test and sub inc mov psllq pop popa rorb sub das inc and dec outsb jecxz add fnstenv push scas inc jecxz cmp lret arpl ret cmpl lock sub frstor in or cmp and cwtl fmuls (bad) or in out and jb das pop mov inc mov test jb jmp imul (bad) xchg bound mov jecxz aam cmpsl dec ja mov cmp in (bad) mov movsl stos dec adc xor push out fidivrl cmp push dec movsl jbe mov cltd cmc mov pop inc fstps mov or pop sub popa lret cmpsl cld sar ror xchg xor jbe xor xor pop cltd mov cld cmp fldenv sub ficom push mov and mov pushf int3 push cmp pop popa cmpsb decb pop mov sarb mov inc push inc je ret (bad) into mov (bad) and jns dec or das mov ljmp sahf mov dec xchg adc jge add lods xchg ja add xor cmc js dec hlt js pop jnp repnz adc pop imulb call inc xor cmp mov std scas lods push jge dec adc movsl dec or dec jne call cld add cmp mov dec lret cltd repnz in lods and rclb out pop pop cld push inc scas xchg jmp je mov insl aas cwtl sahf imul cmpsl dec (bad) cmpsb xchg out data16 cli mov sub pop and js not jns fcoms add cli add in mov scas inc adc mov popa cmp add imulb mov (bad) mov adc mov movsb jo cltd add jns outsl ljmp sub imul mov pop shr inc adc lods mov ret mov pushf jge int mov arpl pop add stc test push cmp xor mov pop cltd data16 push test pusha lds outsb mov dec or stos call rcll jg mov das nop xchg mov hlt push jecxz dec (bad) xor xor in pop pop or xchg mov adc inc jnp sub repz mov xchg cli and adc lods mov enter mov push dec xchg (bad) call mov das sub jecxz pop pop xor dec leave repnz movsb mov add enter mov je lea rcll mov pop or or pop adcl and push cmp xchg mov fisub xor stos pop inc std sbb pop mov sub xchg and xchg lock inc mov xor push pop cmc loope daa push xchg pushf xchg lea imul jg popa cltd scas dec inc sub xor stos cmpsl mov mov icebp mov movsl pop xchg or pushf sbb pop leave pop cmpsb dec jb pop and adc push mov pcmpgtw lahf lahf data16 loopne imul out movsb add movsl les sahf out mov arpl (bad) xor jb jns data16 loop out mov into inc icebp or pop push sbb add lods lahf xchg sbb sub pusha leave gs loop in jns js mov and stos xchg mov xchg inc movsl mov ljmp and (bad) std jl bound jb inc cmp and and stos repnz xchg mov xor jmp dec adc (bad) push negl mov pop push rcrb arpl pop shlb push mov sarl pop popf add in cwtl cmp pop sub andl leave adcb repnz cmp out push mov cmp mov daa adc addl (bad) clc std cwtl jo enter es inc xor pop fucomip in cmpsl aas push mov mov sub pop out and jnp mov cmp iret imul xor jo and sub xor jnp jl (bad) arpl cmc dec test cmp mov pop insl enter movsb insb icebp xchg repnz int3 lock popl and inc scas movsb jg cmp pop mov cmpb popa ret add dec (bad) repz mov xlat xor mov je xor xor xchg int xchg xor insl xchg inc mov (bad) push das or xor adc sbb and ret loopne dec add decb pop sti xchg stc movsl (bad) sbb negb fdivs imul mov mov lea lret shrb xor arpl cmp cli mov popa insb cs add pop xchg ja mov mov push jl push mov roll (bad) dec inc adc mov sub push add mov (bad) repz inc iret mov sarb sub test lcall xor or call xor mov and xlat sub insb lds dec or mov mov jne pop cmpsl in jo stos test mov (bad) push push mov lcall in (bad) adc pop int3 inc dec test scas (bad) pop add mov xchg mov jo (bad) stc dec push insl mov stc xchg adc jg add push inc imul pop lods mov cmp sbb push test les outsl out xlat fistpll rolb popa fsubrs and lds or lods mov push add in adc dec test jb cwtl mov mov push jae cli cld loope mov adc cmp mov pop (bad) push and pop sti jae ret mov sub push xor dec dec mov adc jmp add sub add push ja pop cld inc adc xchg (bad) mov loop mov lcall adc adc mov cmp iret mov xchg out addr16 icebp out xor jge aad add mov xor jg mov xor lret test cmp das test aas xor (bad) jne test hlt lret sbb mov mov stos mov mov mov in fsubl idivb mov sub add (bad) cmp mov movsb jb movsl fnstenv and mov adc mov mov and sbb addr16 cmc xchg mov mov leave lods std mov fwait mov stos push cli xlat mov lahf xchg mov aad xchg sub mov or cmpsb lds call push fdivs in imulb mov mov (bad) push mov sbb insl (bad) (bad) cmp cmpsb xor or push add xchg and mov inc jns negb nop movsl inc icebp jnp sar sub adc andl movsb pop mov sti mull sbb xchg popf mov xchg mov mov mov push cmp ret pop out movsl fstl cmp jnp mov mov inc dec cltd or jb andl sbb imul and test rolb mov fwait adc es mov inc push std (bad) mov mov cli jns aam add and add in rol mov fistpll fcom test mov mov fisttpll mov cmpsl xlat sbb nop or fisub loop cmp mov (bad) pushf insl cmpsl jnp and dec or roll xchg sub dec mov sahf inc popa leave mov mov std lock and mov (bad) stc out mov sbb and leave jb mov lods mov pop sub xor shlb fldl cltd fbstp bndstx mov mov icebp xor lea and pop cmc mov push xor orb mov (bad) movlps pop test adc mov sub outsb mov icebp jo pop inc stos fpatan add out into arpl ret add cmc jb sbbb int3 adc popa xchg xor jl pop cmp shrl stc jle jl mov jecxz add fwait mov pop sub fadd jno (bad) mov sub inc pop insb mov dec push mov and adc pop sub jns add sbb pop lea clc pop fisttpl je xchg popf lods into cmpsb (bad) enter sbb adc negb out lods enter les pop adc cmp xor (bad) mov sub mov in pop pop loope jl mov pop or movsb test out pop movsl mov dec push dec and mov or push (bad) and (bad) cs inc mov cmp xchg insb rcrl psubw icebp loopne insl or push out call mov mov xchg aaa pop and icebp stos movsl jno sbb lret mov and add pop ds sub xor in imul cs movsl xor jb mov test cwtl stos mov jo popf mov ret mov mov jno push sti pushf iret mov iret mov adc insb pop sti (bad) or mov std jne or jbe xlat out adc lret mov pop mov andl loop lock in adc (bad) xor jl and imul out and icebp imul bound mov fnstcw in cmpsl push xchg mov rcrl in xchg ja insl mov mov es mov test imul fisubl push cltd add int and dec mov jmp fidivrl aam fwait mov jecxz dec (bad) mov pop push into push mov std addr16 mov das sub pop sub jecxz addr16 mov (bad) mov mov jns sub bound xlat (bad) movsb xorl mov aaa inc fcoml xor mov lcall pusha dec sbb pop add out (bad) in aaa mov jb inc int (bad) sub lret inc (bad) (bad) les popf aad push cli lock xor mov sub mov push int3 mov mov cmp xchg mov (bad) je ret xchg mov rorl (bad) into inc jns mov je cmp cmpsl stc mov dec jo xor ret mov outsb jmp pop push std sbb (bad) andl and fs adc dec or mov jo sbb daa mov jg dec add xchg outsl pop push test xchg dec jb scas mov mov lea sti pop cmp xor pop bound push leave stos fidivrl fildll jns pop pushf push xor insb sub daa repz and sti gs test inc shrl popa repz add sub nop (bad) or mov (bad) je mov imul lods lcall lock and inc pusha or imul xchg (bad) jae adc or daa sub dec jg xchg test scas sbb lds sub mov cmpb adc les adc mov sub rcrb xor sbb out orl add cmpsl lea cmp and or (bad) jbe mov call xchg pop lcall xor std jg jae (bad) xchg lret stos je jne aaa leave loope mov jnp mov test add arpl das outsl popf mov lock mov subl sti mov xchg or mull aaa push jg cltd xchg fldl jns sbb sub nop outsb out pop xor mov xchg enter dec por pop or sbb dec lahf mov lods cmpsb push mov mov push mov xchg leave mov loopne outsl out pusha fwait mov das xchg (bad) pop lahf pop xchg mov jo xchg jp cltd sub imul lock incl fbstp sarb in lds std cmp (bad) bound fsubl clc and out popf imul aas sbb js das pop jecxz jmp test in xlat push movsl add xchg mov mov lret and and test into sub mov adc ljmp mov push ret imul mov aas dec push push loope jnp pop push mov or cltd xor (bad) lcall jmp inc jmp pop cwtd jbe sbb jecxz outsl mov lret test loope or gs xchg sbb scas dec xor add adc in aad or pop les addr16 call add enter test div jae sub cmpsb (bad) cld cltd sbb loopne mov fisttp fwait mov pop cmp ficomp mov les fnstsw add shlb js cmp fdivrl test cmp adc ljmp pop mov xchg int3 or inc xchg int adc push aas sbb fs popa jno jle dec insl inc dec pop push daa dec arpl pop in mov cli movsl les cld jmp (bad) sbb pop cmp gs das ss push lds (bad) out push bound scas out imul sar sub mov bound push outsb xchg andnps idiv push loopne in jle shr xchg dec dec stos xchg lods test hlt and mov mov int3 mov pop mov adc xor rclb iret mov pop mov repz ror mov cmp in push rolb xchg and repnz adc fstl inc dec add push out sub inc sbb hlt sarl (bad) mull negb mov jmp loopne mov shrb cltd or dec adc lcall xlat scas and jo pop out pop shl mov iret cmp lods and mov adc sahf int3 mov mov sbb mov jmp dec add test inc mov jl add and mov mov repnz lods loope dec lahf mov movsl (bad) xor mov pop push (bad) sub fs dec mov add xchg add xchg cltd cltd (bad) roll test jp (bad) fsubs or (bad) and xchg aaa pop jo mov adc (bad) out cmc jp (bad) stos cltd test arpl pop ljmp loop mov imul mov sub mov lahf xchg addr16 scas xor sub jle movsl sbb push dec sub mov adc imul daa mov push mov loope pusha fistp mov mov hlt mov mov pop sub es mov or sub inc xlat fidiv stos mov call hlt insb push mov movsl mov adc loopne jb mov mov dec shll push int3 test mov add add mov jns mov pop cmp cli call jns lock movsb enter sub mov lds test mov cltd mov call mov aam sub push fldenv movsl lods test (bad) std insl mov pop inc shlb and mov mov jbe pop inc mov dec std mov mov pusha repnz cli and fnstcw mov xchg and add or xchg and jg xchg mov js and stos test sbb jbe cmp jecxz push pop arpl andb movsb fsubl push lret sti and cltd (bad) adc mov fsubs mov jmp sbb insb xor fnsave and mov insl lods inc loopne dec cld mov scas add inc adc lcall xor push out xor jecxz jae xchg setbe adc nop test std lret adc or jl mov pop mov sbb xchg push jno popa cwtl add dec iret xlat sub mov or push sub leave adc xor lods in jno sub jmp jne mov (bad) outsl and sbbl add sub test lods jb (bad) gs adc adc das roll cmp cmp stos and push cmp jl movsb add sbb dec repz popa mov pop push (bad) rorl sub arpl andl scas xchg movsl pop mov mov fsubrs iret (bad) inc jmp in mov scas test icebp das loopne cld jnp or bound add adc data16 push mov jno inc sub push pop nop cmp pop insl loopne jns testb pop insl adc or imul mov xchg stc (bad) (bad) shlb lds xchg cld pop sbb inc push xchg inc fcmovnbe fwait mov vphaddbq (bad) idivb mov aaa pop push sbb mov xor loope test xchg xchg push push clc jo mov repz loope sbbl cld daa add xchg or (bad) pop adc (bad) jno fsubs sub xchg sbb mov mov adc mov lock sub lods mov jecxz pushf repz sub imul jle lahf mov hlt push push out lcall fistp fsubs push push enter pop or movsb xor leave js iret mov xchg cmp sbb iret mov and loopne cltd cltd add adc pop mov jecxz cmpsb test cmc cmp das sar cmpl cmp sbb scas shll push icebp addr16 mov xor imul push in sub or ret sub mov es addr16 test cmp movsl jg rorb insl ja fstps push jg cld out bound lds std lea xchg hlt cmpsw cmpsl bound ljmp imul dec out in adc push fcmovnb jb and in inc lcall aam pop mov je fistpll mov mov push pop lock icebp and mov loop ret dec mov insl arpl xor push into mov fdivl outsb icebp andl mov (bad) aas data16 orb int jg ret loopne cmpsl xchg or stos cmp enter fldenv outsb pop std repz sub (bad) xchg cmpsb or inc cmp sbb sbb jae add (bad) push faddp mov cli jb mov imull mov lea push dec mov mov or jo sub cltd lods mov fisttp sub push cltd dec push cmp mov pop jg push mov ffree hlt fnstenv loopne ljmp cwtl xor cmp mov mov jg imul loop mov in addr16 jg lcall imulb push dec es mov cmpsb dec or dec add pop cs sbb sub and negb (bad) pop dec insb sub in call or dec mov sub dec (bad) and out pop das sbb cli shll hlt cmpsl dec xor adc jle pop or xchg mov xor add mov fnstenv xor and fistpll mov ljmp in cmpsl dec push std andl movsb out mov test loope sbb (bad) es xor outsb xlat add stos and mov or and mov lods sub stc pop daa sahf mov int pop cmp pop jmp mov fidivr gs outsb jmp cmpsb pop lds push mov insb (bad) mov leave (bad) lret rcrb cmc xor or hlt lds mov xchg fistl mov lret movsl pop add mov popa daa aas jle dec push in mov pop push adc es adc cltd fistp jnp sub mov outsl popaw add xlat or pop mov (bad) xchg sahf movsl sub sar xchg jno mull (bad) pop dec ret dec dec lods mov dec xchg fdivrs inc push push sub (bad) xchg jg cwtl inc pop jns insb in add loope aam aas scas cmpsl jge mov mov xchg mov xchg dec or jmp test and mov adc mov mov fldenv mov adc xor mov adc or push enter arpl pop (bad) aam roll push push mov pushf mov fwait mov dec repz inc or scas iret lea adc rcl or setle push aam incb aad xor jmp pop jae xor loop adc stos jmp outsb (bad) and pop pop pop ja test shll dec jne cmp mov jp dec fisttpl addl xchg lods pop fprem mov mov xchg les std xchg fwait mov dec mov sub jecxz xor cmc sahf lret push mov (bad) (bad) inc out pop pusha pop sub adc mov xchg xor ljmp imul inc sbb repz rcrl push dec mov leave dec nop in and mov jl test data16 jo mov dec sbb mov stos xor sarb nop rolb les in daa mov dec inc or inc inc lret xor (bad) xor das inc mov test loop lret mov dec mov mov mov mov cltd push roll mov cmp shrl cmp ja call cmp mov xor sub out mov jo xor enter mov shrb mov stc (bad) iret mov xchg cmp and sbb nop mov jbe ds shlb imul and mov jb mov adc and xor ljmp rcrb mov mov lods cmpsl popf clc inc adc dec mov sbb lock in nop movsl inc jge sarb les fmull cmp inc mov or (bad) mov bnd mov dec jmp out push movsl mov mov xchg test ret mov jp cmp mov insb out push aam outsb lahf leave xchg push mov xlat inc icebp mov mov lretw out outsb (bad) (bad) (bad) pop sbb fs js movsl mov add cmpsl mov enter add or mov into hlt cs lods stos insl dec and inc cwtl shll ret pop repz data16 addl cmc dec xchg sbb adc xor lret mov cmp aam pop std push lods xor mov mov lahf pop repz sarb adc xor fsubrl or aas hlt adc mov les (bad) mov mov xlat pop imul mov mov or add mov jmp push out fs xor push (bad) hlt sbb cmp jne aaa pop lock into gs lea iret mov movsb aas mov popa jmp daa clc push int mov mov push mov (bad) xchg in push movsl add ds in addr16 pushw cmp push pop xchg dec mov and js and iret movsl std pop dec jecxz pop hlt jecxz mov daa jbe jp mov xchg mov mov mov test call jle scas adc sarb mov sbb jmp mov dec or push xor (bad) orl push imul js divl jne mov scas insl loop call aam xchg inc jo mov mov out in push mov pop xor mov sub fidivrl mov push insb adc sbb lods dec mov mov jge push fstl push inc cli xchg xchg es (bad) or pop pop xor call cmp dec mov and cld movsl sub jo leave adc mov stos pop gs dec test and add pop aas cli fdivp pop aam es fldl sarl lods aam lea mov call in rcrb mov or push push orb push inc pop lods negl jae pop push movsl repnz repnz aas cltd gs sbb pop sub out adc xchg (bad) xor outsl out mov and mov inc iret movsl xor or dec mov test mov xchg mov sarb or xlat pop fcoms lock mov cmc rcrl mov std mov nop mov mov adc dec or mov inc sub mov push out in ja imul fidivl mov add mov outsb je mov push add xlat call xchg xorl in les inc push fdivrp jl mov dec or push mov jp mov cmc sub mov jmp stos sbb (bad) movsl cmp mov outsb mov pop in ss mov or test xchg push jecxz dec or cmpsb mov dec popa dec fs xchg adc test out push xor in movsl xchg dec (bad) or mov xchg clc push int3 enter rorl push aas lods mov sub shlb movsl mov mov sahf cmp and sbb mov mov cmpsb scas lds mov dec xchg (bad) movsb cmpsb cld andl inc xchg leave test lds mov aad stc cmpsl xchg jg mov fnstsw bound sbb sub mulb sbb xor mov arpl ja inc xchg ret stos and mov cwtl mov mov ljmp jge mov fild lahf jnp rcll xlat test sub or aad addr16 adc inc mov and icebp sbb clc pop inc sarl mov cmp loopne int3 pushf mov nop cmpsl push cld xor fistpll inc pusha mov mov add in and movsb movsb xchg je int movsl and xor outsl lcall rorb jae pop cltd in fs sbb loop sub cs pushf inc out push iret mov bound sub mov xor in push inc pop mov mov cmpsb shrb add sbb inc lahf pushf xchg push adc fistpl mov push lods fnsave lods aad ret es xchg mov sbb adc mov cltd dec add pop rcrl mov mov sub out loope (bad) dec loope cltd xchg mov movsl gs iret movsl mov and inc lret mov push inc adc jecxz movsl stos scas test xor daa mov push or mov pop rclb loope jne pusha leave mov pop aas pop jb loopne jno cld pop shr jns lahf cmovb loopne xor orb (bad) xor inc ds push insb or sbb dec add cmpsb cmp sub out mov cltd xchg pop push mov xchg mov pop aaa loop pop jg push stos dec mov pop pop and add aaa xor jmp pop dec std cltd mov mov cmp stc lret arpl cmpsb mov mov (bad) fsubp jns ds pop push sbb fwait movsl add sub gs lcall les ret dec mov or jp pop cmpsb mov jno cli lock in imul push mov incb push dec push andl xchg cmc fistl mov xchg or stc pop push inc cli dec stos std movsl out ss inc push fidiv subl jge xor inc imul movsb xor std mov aam sti xor push addr16 imul mov (bad) fnsave sub and test sbb mov xchg mov cmp ret imul pop jle mov push int es pop fmul int3 out cmpsl adcl adc xor test mov sub scas lods push add mov out mov pop (bad) mov mov mov lds push fsubs mov sub sub mov popf adc pop mov sbb dec mov dec mov cli movlps in inc xorb hlt gs lret cmovnp push mov (bad) (bad) int iret xlat or inc fwait jo sarb cli in cmpsb cli mov shll mov mov ret mov mov and adc xor sbb je mov in shr lds cli push aaa int aad sub jg mov mov repnz xor loope int3 or push dec popf mov (bad) div fstl pop jp jbe inc and cld push mov xchg icebp dec inc insl loopne movsl das or add jnp cmp call adc dec cmp inc pop mov jecxz xchg adc sahf in mull test mov xor push popa mov cmp daa das int mov inc add mov dec aam mov pop inc cltd push arpl mov xchg test stc pop repnz imul mov (bad) mov mov xchg mov lcall push (bad) and mov movsb fstpt aad in aam jnp jo pop out lret fcmovbe push adc and out cltd dec inc sub inc mov gs and nop inc mov and push or push jmp shll jmp adc lock push test pop dec sbb mov mov mov inc xchg cmp data16 push xchg out inc in rcl add pop bound lods dec xchg popa cli sbb bound inc jge test in das lock xor int3 ficom aaa xor in int dec push adc inc push pop sbbb fdivp cmp pop bswap xchg bound int lret mov inc xor mulb (bad) cmp add and pushf lds bound in call leave test sub xchg nop fwait sub mov adc mov in out xor inc mov push outsb bound imul cld xchg mov int push adc fldcw fs dec and imul push test add pop xor cwtl cmpsb push inc mov cmp addr16 inc mov xchg jb dec push fadds dec rolb jnp bound and add clc pop scas movsb cld inc (bad) into out push dec sarl mov inc sar adc mov pop (bad) addr16 pop pop lds lock divl pop outsb or mov xor cmp xor adcb rcll pop bound pop (bad) xor sbb mov icebp sub xor xor push data16 repnz daa and or roll jnp (bad) mov mov adc test mov cli bound mov lds (bad) and fldl pop jnp outsl rep mov addl flds lock fnop and add cwtl and pop add mov loope adc sbb dec dec into lret sub mov int3 push leave dec loopne call icebp insl xchg ja data16 sub adc dec mov xor and mov jnp addr16 (bad) sub data16 pop in fstps pusha add lcall cld push cmovg or andl lea movsb adc dec mov mov jg in or inc mov call push std repz xor lods sar repnz mov jp jbe mov mov or mov adc cmp cmpsb movsl loop add mov (bad) xor xor jle bound icebp mov int3 jmp (bad) fwait outsl scas jo mov lret add shll lahf lds imul sbb mov and mov xchg ret jecxz mov (bad) int3 mov movsl mov sub stos test cmp test adc dec mov hlt sub xchg mov mov jno adc mov pop mov popa ja mov cltd xchg fwait cmpsl lods movsb std dec pop adc adc and scas in shlb and ljmp cld movsl out inc add loop jecxz mov mov pop push (bad) fimull ljmp jmp xor cmpsl inc (bad) cmp icebp mov in je pusha mov leavew cmp adc mov and (bad) mov lahf mov test pop mov popf mulb fistpll jmp hlt pop push test test xchg cltd mov sub mov inc add dec mov push (bad) les cwtl mov aas repz aad mov or add push dec xchg jae mov cmp fistpll jecxz ljmp push adc or enter addr16 xchg push cld repnz repnz mov mov sub into mov scas loop xchg mov push add mov enter mov push push std and mov dec or mov cmp (bad) clc rcrb (bad) dec push sbb in xor adc sbb pop fsubrl lret mov xor jg (bad) les or nop and mov in andb sub call fcomp ja add and daa jp addl adc cmpsl (bad) test push inc call cli and sub mov or add aam jmp add and adc leave pusha jmp fucomi push movsl xchg stc (bad) pop scas fldl push lahf fcoml dec les xchg stos adc cltd and cmpsb ss mov dec adc and fcompl push pop aas xchg das aam pop mov mov pop dec inc add pop popf jle loopne lods pop rorl sahf pop arpl mov (bad) push mov xchg jge jno inc cmpsb lret push mov sti scas jno or or add dec inc pop pop push dec push ficom cmpsb cmp ret xchg push in dec ficompl push mov xchg push inc jge jmp mov lret (bad) popf in dec stos bound mov mov loopne lahf adc cs sub mov sub fcomip pop mov imul xchg js push cli mov outsb mov mov add popa movsl out jmp xchg add mov mov loope stos jmp push push lods mov mov xchg mov pop or xchg pop add xor mov mov mov arpl out aaa jecxz in out (bad) stc mov sbb scas movsl cltd rolb loop and mov das in (bad) mov loopne xor xchg addr16 cmp sub cwtl (bad) stc and xchg movsl mov in ret gs data16 shll loope xchg loope out lahf fisub mov rcrb inc push add mov lock (bad) xor mov pop insb fmull xor bound adc sahf test clc push stc pusha int movsl orl add sarl in mov jbe push inc xlat repz xchg cmp mov lret ljmp pop lock inc lods mov pop fadds push subl (bad) hlt push add test add sub add inc mov fucom cltd push stos xor pusha (bad) iret insl xchg mov mov sbb add fsubl jb jmp xchg enter mov and testb test inc outsl pusha cs das adc cmp sub popf or sahf iret and push and (bad) jbe inc push mov lock jmp xor mov inc push mov cmp cs adc mov xor ja xchg cs sub mov cmp mov push enter stos out in adc test repnz mov icebp sahf popl repz sbb rcrb xor adc inc push lea mov (bad) xlat jmp in mov lods divl sbb push repnz cmpsl mov adc mov dec das cs shr cli cltd push xchg adc adc mov out icebp inc sub pop mov notb push pop or stos fs or sub and fisubr jecxz das fs mov sub addr16 movsl loope push xchg dec in adc popa push mov add popf mov sbb pop out mov inc pop insb or and addr16 pop cmc ljmp out jno mov movsb ret xchg mov cmp push inc loope (bad) fsubl int3 test out inc xor push mov xor mov mov sbb mov fldl loopne inc cltd pop jbe aam dec movsb ret jmp addb iret or jae mov jmp enter mov imul mov ja and popf mov xchg ret xor sbb jno mov clc es xor pop cmp add xor push imul dec jge and inc into add into ljmp mov repz ja movsb imul pop xor cmp lock xchg push out sarb jno cmp add dec mov mov in lea adc adc mov (bad) flds and int mov bound pop inc aas sub mov adc or xchg jo icebp adc pusha or pushf dec xchg sub repz mov add sub in movsb in data16 pop out int js imul loopne aad call dec or shll mov repz inc or movsl movsl inc fdivl mov lret push push outsb xor jae adc mov xor in pop clc mov rcll cmpsl imul sub cltd jns popf mov xor movsl jmp aam dec and push add addr16 lcall xor pusha imul mov sahf fwait xor jmp fstpt push inc neg pop rcrb cli mov pop inc cwtl mov lds mov popf mov mov sar mov lahf and adc cmpsb mov dec xor daa push cmp in cltd pop je mov daa mov movb inc xchg push mov fisubrl adc dec pop mov popf pop addr16 leave test mov sarl or pop lret movsl mov fwait mov cltd cmp add adc add xchg popa mov out in lahf enter (bad) notl rcll andl mov and jp cmp movsl mov in stos xchg sahf adc mov jl cld ss dec cmpsb dec xor jle cmp dec lock or out push dec jae xchg xchg xor movb pop mov pushf arpl (bad) movsl xchg je aad (bad) adc lea mov add sahf and lcall aas andl jo mov and stc and inc push push rolb repz sbb pop fild push xchg out and pop mov cmpsb mov add push test daa cmp fnop cmp push dec imul inc jb lock (bad) mov and pusha stos mov adc mov cltd stos mov cmp sbb fptan pop mov sbb ret or mov mov cmp dec inc mov scas mov ss dec mov repnz pop repz mov rorl (bad) mov addr16 mov arpl int3 push (bad) mov (bad) sub sbb mov enter pop jle (bad) xor sub jne xchg int3 js sbb rolb dec fwait ret mov mov popl cmp xchg push outsb movsl mov idivb out dec mov pop mov pop jmp aad mov addl jae cwtl jle adc pop mov mov call and aas mov xchg das xor xlat dec rorb add jmp imul and outsb clc inc lds add test push push mov jmp scas cmpsb jo jle mov into (bad) inc out aad jnp iret mov cs mov inc ret out mov push add call in stos mov fiaddl repz push subl and sub pop (bad) (bad) mov push mov stos mov std std and (bad) sahf lods stc dec jo pop inc mov adc inc push imul jno imul push bound push dec jecxz cmp lea or or inc push push dec xchg mov mov mov scas lods ret push jge fsubr je xchg mov scas or stos icebp (bad) mov lods mov add imul mov arpl lret lcall pop aaa and movsb push jbe add jecxz mov or pop ja out out mov and fmuls lret push mov push fmulp cmpsb xlat popf (bad) arpl dec (bad) shll mov out jo cmp adc adc mov pushf addr16 push movsb cli mov cs xor xchg jbe fldenv mov push aas daa adc cmpsl movups inc jmp data16 mov cld ss push lcall iret in inc test int sar or icebp pop repnz dec rorl and dec pop jns inc ret pop xchg rclb je mov jge (bad) in addr16 sbb bound push int and aam jnp pop sbb ljmp push xor loopne xor xchg push cmp add cmp into sub push pop xchg cmp out jb pop dec sbb (bad) das pushf leave inc lea mov into xor aad sub push cmp sbb fisttpl lea fidivr add sbb jl sub xchg movb and mov loop int ljmp cmpsb ret or data16 mov jbe pop xchg mov jl pop out sub inc fcmovb jbe mov iret push or int3 jnp into push loope scas test mov push mov ljmp lret jp idivl pop fisubl adc in cmc fndisi(8087 xchg push test jns mov mov dec in push sbbl jns shrl pop outsl (bad) fcom inc inc add mov mov sti test andl in inc push roll mov jmp mov popf mov cmp das add or add push jle pop dec (bad) xor push mov jecxz sbb adcl mov push pop pop and cmc add sub es mov jno adc les mov mov mov or stos test sti and xchg and (bad) int3 push jl es and mov ret ljmp xor leave fs and sbb fidivrl sub pop mov pop stos ficom inc pop pop mov mov mov sub insl push push jae pop in inc push push cli pop and xchg adc test jp xchg pop loopne xchg inc icebp mov (bad) popf fisubrl inc loopne dec mov xchg ja sub icebp bound jmp les mov sub jp mov lea sbb sbb mov out shl sub out popf cmp jmp call inc insl push pop psllw lods dec mov mov jae mov mov mov mov jne (bad) mov (bad) decb push pop fcmovb imul mov pop mov adc push inc bound loopne fidivl es fldlg2 loope mov mov sbb push loope mov xchg imul loope mov test sub test adc or sbb add cmpsl mov andl adc mov scas xor xor mov rcr push cltd outsb cltd loope push cli cmovp dec mov mov cmp sbb and sub mov pop (bad) cld hlt push cmpsb mov inc in nop mov scas or xchg ljmp ds (bad) mov es jmp and dec mov jb adc mov xor stos cwtl mov mov mov hlt shrb pushf push dec push int push dec pop sahf mov push repnz cli and xor sub call shrl mov adc mov cmp daa pop sbb xor test inc dec movsb outsl int3 push imul xchg mov xchg push iret enter repnz fnstcw adc mov mov and ret jnp xlat fmull and ljmp xchg dec enter (bad) dec test ljmp sub and daa (bad) cltd pop js outsb aas (bad) push iret fs mov inc jnp sbb sub cmpsb mov or ffree lret or push mov icebp sub lods rcl mov jne xchg add push cs and mov insb dec ret out dec mov mov (bad) cmpb cwtl mov cmp outsl repz sub mov pop dec clc test cltd inc pop mov xor fidivr fwait (bad) add cmc mov jbe pop add mov test fldcw cmp pop lret and xchg jl sub xor (bad) dec nop or inc stos imul (bad) clc xor mov lds sub inc and adc ss std jno cmp dec imulb push loope or jge rcl xor adc mov movsl cmpl pop xchg mov arpl ljmp xor adc movsb dec int push cld cld xchg mulb dec cwtl mov xor add push cld push xchg inc mov push hlt pop cmp mov mov mov xor lret adc pop addr16 add mov mov je call jae (bad) push ds sarl push or mov and push xor out scas popa mov pop xchg pusha inc or movsl ficoml sbb cmovnp imul xlat push cli sub push mov dec ljmp imul and (bad) in xchg int ret mov push stc jno sub mov lcall or ja mov and sti mov pop negb push mov pop cli pop mov test ret lods xor push jmp mov add mov pop ss loop lods pop test loope lea push xor sarb cltd cmp (bad) int cmp jb add mov outsb cltd mov cmpsb fdivrp lock fnsave movsl jg data16 xchg pop out call std jge cli (bad) insl das inc mov add jge int sub repz popf repnz or push insb adc push mov (bad) hlt dec movsl sub cs mov jl mov mov (bad) mov jmp in sbb leave shr and and pop rol ljmp (bad) out jmp aad paddsb push dec (bad) leave dec cli (bad) mov cmpsl cmpsl (bad) fadds xchg ja cltd push popf test (bad) mov dec fcoml cmpb mov test inc cmpsb fdivs aaa pop js push roll xchg js,pt xor fs movsl js ret pop add add setnp leave ljmp or in xorl adc int3 cli xchg xchg xchg jmp xchg sub sbb cvtpi2ps cmpsb dec or nop pop fcomps int dec sbb mov test jge bound sar outsb push stos ffree mov mov fsubl aam (bad) dec cmp out lea shlb fldt pop mov add adc idivb and cmp aaa pop fimull nop sbb jno pop push clc mov adc daa insb lods mov das outsl sbb inc cltd adc sbb arpl cs nop stc jns inc mov mov shrb jne cmp lds std cmp jg movsl jb fbstp insb pop movsl mov cli fidivr cltd lea loopne leave mov mov or das mov push andl dec in es add loopne out sub gs pop xchg in in push loop iret mov (bad) mov cmpsb pop push mov cltd addr16 shlb std push enter mov cmp mov fnstenv sbb sub movsl leave (bad) into and lahf roll cmp movsl or and push pop test (bad) leave mov pop and add pop cmpsb mov fdivl in fcoms xlat in fldl and dec sub in cld imul fs ds sbb (bad) mov pusha push mov cmpsl and pop aas adc pushf pop and fwait xchg out outsb imul shlb mov popa out push sub (bad) push mov mov sbb mov stos retw push clc cmc jo mov mov inc sbb (bad) dec cmp mov dec stos mov dec insl decl loop fdivs or mov push nop mov add xor inc xchg mov mov call mov jge pop dec adc mov inc popf pop cmp mov mov jle loop jae add add ljmp add dec cmpsl fwait negl aad ja inc or sub and (bad) stc mov gs push sub nop xor daa xor mov mov xor das bound pop push jns push dec adc xchg shll jne cmpsb fisub int xor imul (bad) mov insb mov push mov add add mov insl arpl cmp sbb popf sub adc repnz and out ljmp mov sbb stos into or mov mov mov mov mov fnsave lea pop aad (bad) mov push mov xchg (bad) xor add mov sbb dec sub or xor and cmpsb mov mov jmp inc cmp test xor xlat inc (bad) rcr mov stos fcmovu or xchg dec pop cltd fwait mov imul pop dec pop popf sbb lods imul popf (bad) lock lret dec cld dec test xchg inc push ja (bad) sarl nop leave and cmp js divb fwait and lods gs pop lret push jns add lea adc popf or pusha pop jno cltd xchg pop cmp call lock es mov test mov rcrl arpl inc xchg or cld mov push cltd mov inc add leave mov jmp mov mov sarb xlat (bad) sbb adc xorl ja (bad) ret mov add adc mov rorl shll xchg repz mov mov dec sub mov data16 icebp xchg das mov mov mull loope and mov xor jg mov adc leave xor mov mov cs scas mov or (bad) subl mov cwtl mov mull and je (bad) cmp pop cmpsl ljmp sbb add cmpl mov cmp mov call mov inc lahf xlat popf inc and mov ja mov xor call jl and (bad) or inc sub push mov fwait inc push mov dec insl flds or (bad) ljmp dec movsb push push mov pop test jno fisubl inc dec add cmp mov sub movsl push sbb jbe insl repnz ja dec inc data16 push pop xor lret pop or repz pop out aas adc cmp ljmp shll scas push lock cmp xchg ljmp (bad) hlt push pop push loop enter push sbb add pop and fwait clts cltd cmpsl push inc out add mov stc shrl das pop stos xchg out mov cmpsb cmpb in (bad) xchg lock out xor sahf mov add cmp xchg (bad) ja and into mov std mov (bad) jle push cli inc loope in mov xchg sub leave test movsb inc dec mov test iret xchg pop inc stos insb lret inc mov adc xorl add scas out movsb je xor leave ljmp mov mov stos jge inc test jge ds imul std lods das xchg inc mov sub dec ret dec out xor popf push sbb test sub pusha hlt mov jecxz je sbb dec rcll nop cmp push pop loope or xchg pop les lds in xor cmp add inc xor cmc or xchg jo cli jecxz xchg sahf cmpsl sub push mov out shr pop inc out jb fsubl mov das out mov dec (bad) (bad) rcrb (bad) push icebp popa pusha in dec test mov repnz movsl push sub pop lock out loop jo sub lock lock push lock dec repz lock inc cmp xchg push sahf loop mull bound aad xor adc pop sahf inc or xor in popa data16 xchg ret xchg sti ja movsl xor outsl in jecxz xchg mov js cmpsl inc movsl and es test and mov int mov cmp clc pop sub jne and pop pop aam into jns adc insl xor mov cmpsb or imul cmp loop dec inc adc pushf jp mov jno and (bad) mov lds aaa mov imul xor imul into add repnz mov movsb dec cmp push movsb pop hlt mov sbb inc fwait aam dec iret mov lods and cltd mov pop cmpsl cmp add cmp nop aad test clc mov (bad) shrb aaa lea and push arpl fs mov adc lods mov test pushf lock pop imul xchg mov cmp data16 sbbl sbb in mov add dec lods sti in lcall in and xchg mov out xlat addr16 loop push call aas mov sti pop pop push (bad) dec push leave fdivrl jmp inc mov cs jb cmpsb inc ljmp pop jmp inc dec push inc or mov inc lods push lahf jg lds ja fildll sbb jno ret sub sub js lea xor inc stos fwait shr out movsl xchg mov pop mov orl mov add notl mov pop fisttpl mov cltd mov jb aaa sbb fdivrl bsr mov push clc aaa dec jecxz mov inc fisubl stos sub and mov dec mov fidivrl bound push mov jns sbb loope mov jg jecxz mov jbe mov (bad) sti mov xchg addr16 movsl scas es pusha out cltd decl push xchg xor repz dec inc pop sti cltd mov nop test ret mov pushf jne call push jbe or jnp pop ret adc iret orl fcoml pop cld (bad) xor add repnz pop mov add shrl mov xchg loopne pushf mov cmp mov cltd loop push sub mov sbb arpl in fld mov add sub pop mov movsb xchg push cld imul adc sbb mov xchg mov scas and xor pop mov scas imul sbb test call mov add imul clc push mov push and push in mov hlt pop and repnz xchg daa xor mov enter test jae imul ret xchg int sub (bad) popf or leave sbb out imul (bad) dec mov jb mov imul (bad) lahf add adc push loopne mov mov fild pop ror (bad) test ret sbb cmp xor push mov pop sbb xor mov push cmp pop add movsl inc adc xchg or push add out enter loope roll xchg mov adc jge sub mov and daa bound push add (bad) mov test mov fwait xlat cld ds cltd std pop imul insl mov mov lret cmpsl pop fidivr adc mov into mov fcomi aas sbb aam pop flds push ret mov and pop jecxz xlat lock insb sti dec mov rcll mov mov cld (bad) incb (bad) mov pusha or dec push inc xchg in push sbb bound scas cmpsl scas rcrl pop xlat fwait (bad) hlt xor dec fmull dec push mov xchg adc mov or fmulp jb sub inc data16 (bad) int3 cmp fnsave cmp sub call fiadd mov repz pop repnz adc gs sub add cmp test icebp sub or mov stc xchg pop xchg mov cmpsl fs adc in mov dec pop push aad lahf clc push scas and stc (bad) lret aad mov cmp jns in popf xchg shll test imul ss xchg and sahf stc push fsts jo stos imul out sub cltd arpl xor sti cli jmp frstor iret mov mov xor les adc inc movsl sahf sbb cmp inc xchg loopne push lret push mov mov lcall mov (bad) mov xchg lcall aam push ret sub jne xchg mov xor nop mov mov cmpsb mov dec or mov cmp mov xor fs bound bts mov inc nop in mov pop into (bad) fldpi addl out sub jne pop inc iret aaa adc push mov mov jecxz sarb cmpsb add add dec (bad) xor cmpsl fwait repz ret ret test fsubrs fimull call loope mov jns jge ror fcmovnu xor add repz nop pop push loope xchg test out push cmpsb and ja mov rcll bound and repnz add add push mov sub pushf iret pop ss addr16 pushf (bad) rcrl enter mov pop (bad) mov bound lahf mov shrl insb and daa iret pop xchg aas lods mov mov jmp pushf loope dec jbe sub les shrb mov adc adc (bad) xlat movsb or (bad) cmpsb sbb (bad) lds mov or daa xor bound mov mov push arpl stc icebp lea bound mov push loope icebp lock lret xchg inc lds les div xchg sub cltd sub pop and xchg daa xor jp xchg nop mov mov mov sub sti in in mov cwtl aas or cmpsb ja inc mov cmp push push scas es movsl (bad) xchg mov lods and stc pop cmp mov test pop mov js cs pushf and mov inc mov push shll push lea addr16 jo cmpsb add fdivrl mov jb inc push pop addr16 xlat lds and dec (bad) outsb stos mov iret or (bad) mov out adc outsl in mov mov sti sti cmpsl (bad) lcall bound sub imul dec stos jge dec leave mov mov jp fs push jo pop xor fdiv cmpsb test js or push fldt in insl std mov adc dec inc xchg ja pop daa xor (bad) je pop (bad) (bad) mov stos and (bad) jl mov inc jns lea pop cli mov push jnp push fldt jl pop or into int3 push pop mov shll mov mov jmp je shll ret fnsetpm(287 bound xchg gs mov out mov mov test mov ret adc push adc mov das xor test movsl cmp xchg or test (bad) dec mov cld pop mov and xchg cs dec inc xlat mov adc std add cli mov jmp out repnz xor mov mov (bad) jecxz add outsl mov push fdivs lods aas mov cltd or xchg and in stc pop inc mov lret jecxz fildll stos adc jmp insb cmp jne iret mov repz or in mov leave (bad) fildll pop out rcr es lods dec mov mov movsb add negl xor push cmpsl mov insb mov cmp ret leave mov dec rcrb mov and pop popa sti popf stc pop cmp sub jns (bad) push mov iret mov pop xchg ljmp lods movsb cld pop sbb xor dec icebp fs mov repz in movb adc cmp xchg cltd or mov in dec push mov hlt pop push es mov cmpsb mov push inc in lock and push test popa xchg in sbb daa testb pop sub jge adc stos xlat movsb bound adc mov jne jle pop cld or imulb push cmp mov mov mov bound or stc ja or scas into out stos leave xorl cmc ss shlb jo aam adc test xchg lahf lret outsl xchg lds outsb xchg mov (bad) xor pop sub mov and loope pop mov fwait aas dec repz mov dec cmpsb jmp and rcr xchg push mov xor dec adc loope cmpb fldt cmp loope mov xor xor cld jb mov mov push adc cs dec cmpl outsl jmp inc in add (bad) ss mov pushf movsb dec imul mov add popf lods test push test aaa mov lods std (bad) and test cmpsb fwait bound out jbe or fimull movsl scas pop or (bad) mov shr aam sub jmp lods scas jle xchg dec add mov insl aaa out lret inc mov sbb add dec inc pop ss adc stc flds inc adc pop pop xlat scas adc roll xchg enter mov test xchg js std call cmpsb xchg fcmovb lods mov pop test lods pop je mov push movsb push xchg jmp fwait (bad) mov movsl or push mov shr mov jno jecxz push push outsb push (bad) mov aaa sbb mov shrl mov aam xor popa push in adc or lcall arpl jge xchg daa mov cli mov jb mov sub mov xchg out (bad) test and dec cltd mov xlat cmpsl and xchg add cmp or repnz roll adc clc mov repz into mov jbe inc popa pusha rcl sti dec push in dec imul into cmpsb cld and ret out adc cli xlat pop roll addr16 xor mov mov adc fs mov psubusw sub and hlt adc movsl enter xchg fwait jne mov js pop inc rcr inc fwait push sub or into push inc pop insl or and mov dec sub cmp cmp xor push cltd mov xchg nop pushf mov je mov jns push mov ret leave mov inc xchg xlat fistp negb mov jmp inc xor add outsb jmp mov sbb cli pop sarb lock cmp mov sbbb clc out jb mov call in cmpsb sbbl mov out lds jecxz enter (bad) repz pushf jb loopne mov adc mov xchg aam test add loope pop clc mov leave and xorl and mov outsb lret adc adc call outsl mulb inc adc sub mov iret mov out sub outsb push pop roll test js scas ret push fs cmc pop ja mov xchg int mov (bad) icebp andl sub or push inc adc mov pushf jbe call cmc outsl mov inc clc pop test dec fcompl das push and jnp fidivrl data16 in sbb pop push and cli daa dec xchg (bad) mov sbb aam pop add (bad) xchg mov and arpl jns mov add out xor and mov lahf mov xchg or fildll outsb jno sarb push push xchg int3 push add mov ds lcall dec cwtl jo icebp inc pop mov xchg mov adc aas adc sub inc leave icebp dec cli sbb xchg inc mov jb fstl mov pop xchg enter stos xchg sbb xchg mov lahf hlt imul out das sbb add out in rcll adc daa jecxz test cmp jl add iret mov aas popf jge mov sbb mov dec and push inc lods inc ds bound rcrl cmpsl dec arpl (bad) xor movsb and jbe (bad) push xlat inc roll xchg mov xchg jecxz mov (bad) xor fldenv or movd rcr sti jae arpl lds add fisttpl outsl and xchg mov (bad) bound and xchg int repz xor xor imul cltd fstpt (bad) cld pop and std cmpsb pushf and fisttpll shrl push dec nop movsl movsb icebp mov jp dec inc pmaxsw int3 cltd adc mov mov xor movsb je xlat lods daa push in imulb fdivrl adc mov shlb aas roll in mov test push lret out int3 push lock cltd outsb dec xchg je aad push insl jns repz dec test jns test je xchg mov add shlb mov sbb movsb in loop cltd fnstenv iret sahf fmuls mov or jge mov sbb (bad) dec out daa ret mov adc push mov xlat xor and dec cmp aas mov cmp cmpsb add mov loopne lock adc fnstcw xchg popf mov mov push call xor movsl pop add (bad) jbe (bad) leave sub push add add popf movsl cmp push sbb xchg jo jne or cmp sbb pop dec rolb push fldenv mov inc xchg sbb xchg repnz mov icebp mov and mov inc or push add add testl mov out sub xchg mov das jae cltd scas incl ljmp aad add (bad) mov enter aad dec mov xchg pop (bad) jl pop cmpsb xadd imull andl mov in (bad) mov lcall arpl and rcrb roll daa (bad) and mov push pop cld sub sub inc xor fistl mov cmovo ret mov or mov imul mov cmpsb push push sahf shl cmpsl lret les out dec push mov pop cld je mov pop mov insl xor out push inc cmpsl inc xchg xchg jmp or into rorb aam lea adc and in dec mov mov movsb add mov sti pop daa mov (bad) ljmp in (bad) push dec data16 aad sahf mov mov stos pushf iret sub xorb mov pop test mov (bad) cmc gs jecxz insb mov out fwait mov call test movsl out fidivl mov std lea in nop mov cmp jmp daa movsl sbb mov jae lret ret pop cmp jns movsl imul add push dec adc mov imul cmp or jns sbb mov xlat loopne shl imul mov in fnstcw loop jg jge add push cli pop jne dec and xchg into add out jmp mov xor call xchg add mov push and mov pop pop cmp jo lea or out adc and gs sub subl or xlat cs sbb push inc cli in cmp cltd xor push in jo xchg loop std jns jb sbb dec and testb (bad) mov sbb sbb mov js inc ja mov nop push mov (bad) icebp xor xchg mov push mov cld push dec xchg (bad) out and and push and cmpw and sub lods fistp push divl jmp (bad) int3 arpl clc and jb ja xor xchg xchg cmp clc pop mov aaa lret mov (bad) jg out stos or enter mov mull adc xchg mov dec popa hlt pusha fisubrl adc (bad) and (bad) fisub fsqrt sbb mov outsl stos mov lds iret js inc orl or and dec mov fiadd jmp inc xor daa addl add fstps mov cs ret fisttpll mov mov aad lods dec pop repz out mov cltd icebp sub cld sbb xor lock mov mov movb mov cltd dec add mov fs lds xchg adc xchg inc repz aaa ljmp lret mov xchg mov into jmp loop inc stos xchg fsub add xchg and mov orl leave mov fwait mov xchg aaa and movsb lods mov jle xor movl inc sub stc xor in in fs cs mov mov pusha push nop add cmp jb (bad) mov push out adc lcall fildll scas cmpsb xor int jecxz lret movsb xchg mov and test or mov jl push mov in xor sbb arpl movsb call insb rcl push test int3 mov lods sbb xor sbb movsl nop inc clc push inc sbb push int3 sub xchg rolb (bad) and das cli (bad) push mov mov stos cmpsb out repnz xlat mov dec shrb jecxz mov mov data16 into pop sahf cmp ds imul ds inc je inc fdiv or in xchg jb hlt lock lahf rclb scas adcl cmp inc push cmpsl arpl mov gs sbb jns in push mull mov push jbe xchg or mov rcrl pop sbb cmpsl fcoms inc mov add mov dec lock in mov inc xor insb in ss cmp outsb jecxz outsl je adc pop aas mov sbb hlt js sbb dec lods mov inc ds inc lahf outsb loope ret sbb cwtl sub xor sub ds xchg xor addr16 std fwait cmp loop or inc cltd xchg (bad) pop mov (bad) mov and xchg out push std cltd (bad) pop mov fmuls scas mov adc xchg test jne pushf fwait inc sub sbb sbb movsb in js sub mov mov aaa and and cmp (bad) mov mov mov and jmp ret lahf xchg fwait xchg iret pop testb dec mov icebp das mov fisub and or jle mov cmp cld mov mov cmpsb dec inc cmp add push jg and jl xor gs mov cld out lock das int3 sub sub jbe lahf inc sahf test (bad) jae sub mov mov repz jl ret mov jb,pt add mov sahf mov dec pop mov cltd xor push mov fisub sub int sub repnz sbb out imul test repnz in inc scas mov sbb out or test push mov mov pop outsl (bad) xor and ljmp sbb xor push mull add push dec lds mov adc mov in wbinvd js lcall cmp mov jnp inc add cmp sbb lret lea adc mov out sahf mov and out pusha adc and imul push cmp and ret push cli dec mov insl pop shlb outsl into dec sub es ss popf mov mov scas pushf fstl push sub ljmp aad les iret xchg mov jl jo cltd pop push std sub push add test inc push mov push insb pop xor icebp push inc pop fwait movsb sub (bad) jno push lock fistpll pusha mov mov movsl stc daa xor daa mov inc stos jmp dec cmc pusha (bad) movsl cmp roll jne ds and and sbb loop icebp push and mov cmp and dec rorl add ss xchg or jecxz sub xchg nop das icebp pop cmp push outsl in mov imul cmp loopne push sub sbb inc push mov lahf jmp jns cmpsl cmp jecxz jns or sbb inc sub xchg negl mov scas popf mov sarl xchg mov in scas insl insb setns loop test push stos mov jns (bad) hlt leave jns jbe mov imul xchg mov mov dec mov pushf push mov jae andl mov mov push lret dec sarl lock mov pusha in popf call push je fbld sub mov mov outsb out mov psubw test push inc cmc dec sub push pop pushf sti mov inc std jne dec aad (bad) leave jge push loopne hlt xchg mov push int3 mov repz out cmpsb test sub (bad) out jmp mov push inc mov negl fisubl movsl (bad) jmp fld xchg xor cltd data16 loopne add mov or mov movsl jecxz jmp popf mov (bad) cwtl mov mov and dec lret sub mov push mov add fstpl jmp imul pop loope gs imul mov xchg imul stos test movsl pushf sbb cmp or jecxz push loop imul push popa mov int test xchg orb jo gs adc dec mov frstor pop or mov sahf jno sub xor shll mov rcrl xor and cmp js jg sub xor jnp dec pop cltd dec dec test push lods mov aaa jae (bad) (bad) imul loope out and mov and dec test jmp in imul (bad) and mov or jp sbb mov sbb push mov cmc jecxz cmpsb mov xor mov cltd icebp xchg mov aas sbb es mov cltd icebp dec pop mov mov mov psraw data16 bound xchg mov jae jp pop xchg dec dec adc insb cmp push dec mov and push xor jae leave mov mov xor test imul sti stc xchg aam stc in add mov xlat shll jo outsb daa rorl dec xor dec leave lods xor pop in xchg cmp and ret dec int3 loop (bad) xchg arpl pop stos pop mov insl inc mov fildl cltd das and push in mov pop cs cmp jmp pop fistpll inc jo adc adc rorl bnd repz leave add push in mov fwait dec push and pop ja sbbl and (bad) (bad) fucom aas push les inc pop and pop (bad) mov cmp cmc jne pop push cmc cmpsb push outsl aaa shl loop js cwtd aam inc (bad) (bad) push insb (bad) jmp sar stos adc mov cmpsl in fwait push and loope dec cmc fidivrl stos inc mov push push dec or jg inc mov dec inc and mov mov mov xor leave xchg and pop mov or mov test sbb mov in imul cmp or or rorl fdivrl aas cmp dec xor incb cmp push push cmpsb push fwait jle adc and mov mov loope dec aas sbb (bad) mov mov or fsubrs pop cmp jno xchg sarl pop (bad) in ja out add das or mov mov ss (bad) push lods arpl mov (bad) lock cmp jl in dec mov xor mov mov pop or or dec cltd add (bad) shrb cmp xlat outsb dec int3 andl sub mov scas mov adc inc scas lahf pop bound sub and and mov mov cwtl pop aaa (bad) sarl sahf xor inc mull cld pop inc and pop fs orl shll popa lods pop add add test in sub dec xchg js std pop test ret xchg pushf stc enter sbb pop mov mov inc and pop pop call push pushl shll dec push mov cmp dec mov dec cmp dec jno sbbl push mov sahf xlat jg mov push imul xor sbb mov adc mov mov iret (bad) in push mov cmp scas andb mov push test sbb es (bad) loop mov clc push mov lds out cwtd mov (bad) xlat xchg (bad) pop xchg sub call sub rolb adc fcoms js sahf and or vprotw andb loop jnp lret sbb shlb fwait xchg pop mov pop sti pop jo and pop mov jp rorb (bad) add jns add mov jmp sub mov mov imul mov mov (bad) js test inc jne leave scas mov cmp inc mov pop adc and arpl jp daa pop adc dec sbb adc cmp or push adc movsl test add stos out mov mov mov movsb lcall push add fisub rcl stc movsl xchg in insb jmp or and cltd sbb cmp lcall lock popf ss fstpt mov xorl arpl test pop ss add data16 cmpsl dec out cltd mov jp ficompl aaa (bad) and mov adc sbb inc pop push jg mov push jmp mov (bad) inc mov push iret or cld dec hlt xor je push push aad or mov and dec inc pop dec scas es movsb sbb push outsl int mov sub (bad) psubsw adc cmpsl movsl sbb out (bad) out mov add jae or js loop je sbb sbb pusha les mov push pop mov jns xchg cmpsl lcall cmpsl insl push sbb (bad) mov sti add cmpsl add data16 xchg (bad) pop decl cmpsl mov xchg jmp xchg imul fdivl fwait xchg mov pop insl jg cmpsl mov sub aam lock sub leave and jmp ret inc jns in fnstcw pushf sub pop push dec movsl push insl gs pop dec mov js bound ljmp push cmpsb dec (bad) add repnz xchg cmpsl pop adc mov add movsl in nop rclb into divb les inc cmp outsb xor dec and fistl xchg and dec lea aad lock shll (bad) jae xchg pop and mov lods and xchg test push nop aam pop lea pusha gs dec sti fsubl pop cwtl inc ss gs lods insb mov cmp aaa iret sti or hlt push in loope rol roll add push dec jmp test and jmp aas xchg dec outsb cmpsb jmp jecxz bound jl mov mov mov (bad) repz cmpsb add inc push daa mov jne sbb cli pop push cmp out xor mov call daa push mov cmc pop (bad) mov cmp pushf pop mov mov pop mov (bad) dec push rcrb sbb sahf sbb lret mov mov leave inc cmp mov fldl ljmp (bad) sub mov fcomip or fisub and xchg into mov (bad) push loop imul call lock lret cltd nop push cld jno bound add (bad) in push xlat scas mov push lds cmp lods (bad) pop mov mov (bad) push sub mov pop movsb decl int mov or div and mov mov sbb adcl add iret (bad) xchg or and dec imul insl push test movsl scas test into sub fidivrl cmp jle test and or cmc out mov (bad) lret mov lcall mov int3 mov fsubl icebp mov sub cmp (bad) mov (bad) sbb mov mov ja xor in push stc xor inc mov imul fdivs in scas inc mov and inc mov xor and sub xor fstpt adc and mov (bad) or cltd inc leave (bad) mov and out addr16 sub push push shll lods sub or jge push mov xchg cli push test push lret adc int dec les inc push mov imul iret mov jg fdiv pop aam mov test cmpsb pop in sbb mov inc rorb push mov popa sbb xor adc push cltd sub jecxz movsl sbb push gs xorl (bad) movsb mov dec push rcll icebp dec loope imul adc inc and xor stc push mov je xchg push imul sbb xchg adc dec mov or push jmp xor mov adc gs xchg ret aaa and mov and adc cmp xchg (bad) rclb jmp xor mov mov es movsl sub mov pop dec scas scas push add mov (bad) pop mov inc das jb mov sti jns in add movsl (bad) loopne in and inc fistp ljmp lds cmp xchg cmpsl cmc or push mov mov xchg ja popf scas out jo idivb movsl jl dec mov inc push mov adc push jl sbb cld mov data16 mov stc push arpl dec dec push jge shrb sbb jno orb xchg xor cmp addl shr pusha jae pop aad cmpsb cwtl mov pop cli mov je mov iret (bad) jo ret lret test pop std xchg add xchg sub sarb jp push call xchg jo aaa or lcall in fisttp mov mov inc mov push mov inc adc fiadd jge,pn add adc pusha mov test and rcr (bad) and inc adc cmp imul and push cltd test mov mov mov jb stos sbb (bad) lods lahf xchg jns (bad) mov fisttpl jnp ljmp mov call scas addb xchg xchg cmp cli ja sbbl movsb inc (bad) fcmovnb dec in test push jb (bad) fmuls cmp es into mov pop inc bound insb cmp sahf (bad) cmp cmpsl push mov adc (bad) pop lock sarl push scas inc stos lds jmp sub xor loopne icebp add inc dec leave jmp icebp test insb sbb xchg sub xor xchg (bad) mov daa mov arpl sarl and gs in push push sub (bad) adc inc dec aad andb pop adc add push das jbe mov inc test (bad) (bad) aam mov xchg addl jbe sub cmpsb ds mov inc movsl and (bad) in hlt pop notl and or repnz out xchg outsb push push cmp mov rcll sub or movsl lahf mulb xor xorb jl outsb scas jle push push loope fucom cmpsl mov mov jecxz pop push cmp hlt xchg adc ret xchg data16 repz cmpsb fbld cmpsl adc mov pop or cli add xchg pusha pop bound movsb xchg in push sarl jae pop push je cmpsl std adc stos sub cmp daa pop and add pusha mov jno (bad) xor push cmp or pop popf rorb cmp stc (bad) in add repz add mov ds xor gs jno arpl xchg jbe jns xlat jl push and outsl in dec or shll mov icebp cmp pop imul repnz mov scas daa gs mov push sub xchg fwait pop mov lahf jbe in cs mov fwait out xlat js mov mov cwtl xchg aam mov jle loopne mov pop repnz xor jne imul mov inc jg cmp orb lcall mov sub add int3 scas inc mov and dec mov mov std push lret mov mov shrb mov lret (bad) scas lock mov mov xchg repz std (bad) mov xor (bad) sti mov cwtl jns xchg mov inc adc add movsb in cmp xchg jmpw push bound insl mov mov add mov imul cltd loope xor cmpsl adc jp mov lods fs pushf mov cmp sub hlt dec ret ljmp sbb mov push pop cmp movsb daa and cmovae movsl add jle pop fildll sub cltd jb daa ret dec jno rolb in sbb add data16 and dec mov es jae add (bad) test gs in les out bound jl sbb fisttpl in add fcom add pop mov push inc adc sbb in mov (bad) push jge push dec cmpsl dec fnstenv fldl scas mov cli ret pop clc and sub cmc mov mov (bad) lahf mov push cmpsl mov mov mov cmp dec les jmp scas test shrl lds leave mov xchg out addr16 ja adc mov ljmp push sbb addl aad push adc mov in and pop and mov sub movsl mov inc movsl xchg pop in out pusha mov mov inc lock sub dec gs loopne rol dec syscall icebp jnp sub cmp sbb push mov xchg sarb adc adcl sub pop lods in push mov scas pop mov adc push imul sub mov in insl cmpsb dec in jmp mov adc inc mov xor add (bad) jge inc ss jecxz jmp pop jno xchg out test loop movsl rclb add inc sub xchg cmpsl lock scas xor pop int decl das and arpl sahf mov test mov mov add lods mov xchg mov sub loopne jecxz and and insl in xchg cmpsl cli loope (bad) cltd (bad) loop test lcall xchg mov mov mov in xchg jae mov movsb mov repz push mov xor push xor cmp push jmp sbb lret test adc fidivr out or lret or inc lret ljmp jmp cmp les xor mov stos jmp jo mov fwait scas and out test xchg jge xchg and mov sub xor adc xorl js hlt add fcmovb pop cmpsb and sub cmp ret mov test fsts xlat add inc adc mov mov and lds and mov mov in repz xor (bad) ja fild add popf pop push xor xchg andl push popf movsb pushf (bad) arpl mov dec les xchg ffreep addr16 insl push mov mov sub into jb mov shrl inc insb cmp movsl jnp jmp inc rorl mov cmp push data16 inc (bad) iret cwtl cmp dec insl cmpsl pop jp mov scas test lock sti lret and jno or fildl fwait and push mov pop mov in (bad) jno mov jg xchg idivb loopne and sub push lods xchg adc notb push cmp insl add inc xchg cmp hlt adc jae cmpsb mov jle mov mov jecxz mov popa mov in or mov xchg mov sub in lods (bad) adc dec outsb loop sub movsl mov mov mov cld adc pop ljmp lcall imul xor pop mov sahf cltd ss dec cmp xchg ss mov outsl fisttp mov mov xchg mov lahf mov (bad) loope push out mov and xorl mov mov mov xor sarb xchg (bad) fnstsw stos inc push mov pop stc push add xchg inc int3 out orl dec pop cmp mov xlat dec cmp cs or pop scas push mov inc xchg popf xlat aam add jg push mov ja insl lds outsb in push add mov push stos dec test jb push fildll add out gs adc in adc and (bad) mov enter jle dec jmp push mov mul lods mov inc loope orl pop and jne (bad) ror or and ljmp inc cmpsb mov cmp push ljmp call mov shll movsl lods jle fildl cmpsl jne outsl sbb or dec dec cmpps cmp (bad) mov sub and cli dec or jae and jge inc mov sbb mov xchg arpl xchg (bad) sarl test pop mov mov mov scas fidivr mov inc mov and xor add addr16 fisub std movsl lods cmp push lea loopne sub shrb fsubs and jns xor stos test dec jne mov out xor daa cltd xchg jl cmp outsb mov dec mov cmp cmp dec dec stc inc xchg jo pop inc dec push jge scas push cli mov jnp fisubrl in es inc jo mov fcom mov push lret and cltd stos sbbb fwait mov and outsb popf sbb ds lret mov adc (bad) add mov aad inc add mov adc inc sub mov xor xchg and xor pushaw cmp aaa mov cwtl push outsl faddp or pop lea push (bad) push dec or inc fsetpm(287 xlat and mov add popa mov (bad) iret lds neg jne ret push mov lods mov sub insb add mov (bad) jge (bad) sub les push (bad) xchg push ret add mov inc test cld andl sbb sti pop dec imul (bad) in (bad) jp stos mov and sub xor cltd scas mov out mov mov (bad) mov call sbb push mov sbb push sub mov mov mov (bad) xchg (bad) aas mov or mov jmp xor cmpsb mov sbb push nop test loop or xchg inc cmp xchg xorl aam pop loopne ss loope pop icebp mov and mov mov pop or out push jg es jmp cwtl cmp pop enter out mov das movsb data16 (bad) inc and xor add xor mov dec and out int pushf sti push punpckldq inc xchg sbbl jmp (bad) lea lods mov pop insl xchg repz lock ret std mov inc movsb and cltd xor hlt xor ljmp pop add ljmp dec aaa out mov pop mov xor sbb call inc das pop jno in arpl scas aas aaa pusha lret gs bound jmp xor sub sub out adc insb pusha pop lods aad loope movsb mov cli mov mov lods aad pop daa jne pop inc imul lock shrl outsl or mov mov movsl add dec mov data16 inc pop jb fwait adc dec shll jmp shrl andl jnp jbe adc icebp pop stc sbb sub mov shr add scas rorl push rorb dec cmp out (bad) jb pop jae leave cmp mov jns mov (bad) add xor dec sbb adc dec add cltd push dec pop ret fsts orl adc out sub pop daa or (bad) in pop aas push jo sub ds sbb push mov lea (bad) jecxz adc popf mov and inc pop push jmp rclb mov das push add cmp rorb divb fldpi rcrl (bad) repnz fbstp scas movsl test xor xchg mov (bad) test sub and mov xchg mov out insb mov cmp enter aas outsl in mov ds adc enter movsb test sub lcall cmpsb popa out dec mov sbb rorb jae mov sbb cwtl (bad) pop jnp sub repnz (bad) cmp xchg scas mov mov mov adc push or mov sbb sub lea xchg (bad) in xor mov mov rolb jo jae cmp and dec or cltd sbb add lret mov add fidivl mov jo jb mov pop (bad) adcb mov lcall or dec push jnp shrl lods mov mov xchg and out inc or loopne mull xchg mov data16 pop mov cmp fidivl pushf repz cmpsb (bad) mov mov in insl mov fwait mov enter jne mov dec fsubl add and mov ljmp push stc (bad) lock test xlat xor cltd mull insl es sbb xchg inc cld mov aaa dec popf pop pop mov pushf xchg insl scas pop repnz into ljmp daa (bad) bnd push sbb adc mov imul xchg outsl mov dec pop jl jmp lock pop push inc popf jnp jmp aas in mov adc and and push insb mov inc ss add scas mov subl into push leave mov pop pop mov outsb into mov mov ret loope and dec pavgb jae sbb sub cltd mov outsb ret and stos out sbb or adc and lock push sbb daa ret mov insl ss xchg push pop mov sbb aad mov mov daa dec inc lahf mov rclb sbbl mov mov jns mov add enter mov pop hlt scas in aas mov mov pop aas push mov rolb xorl xor int push scas mov movsl push or cmc lods stos mov jne or sub loope xchg insb push fcoms xchg in xchg rorl test mov leave lods cmpb fwait or jae cmp mov mov test fiadd add cmp push push or jecxz add int mov mov add inc xchg mov xor mov pop or and pop jecxz sub and fistp push mov lea popf or add xchg aam jns xchg fidivr in xlat jecxz mov daa pop incb mov stos jo dec inc xchg pop push cmp and push add mov lea and fsub lea divb shlb andb mov lret outsb scas pop mov mov xlat jle aam pop sti andl cltd xchg mov sbb aad push mov adc scas lcall lods cld xchg mov jb fstpl push pop dec mov arpl and and cmp push xor mov jo pop cmpsb mov test rolb iret jno (bad) hlt ffree jle mov movsb mov or or cmp test xor mov je pop loope lret pushf sub out mov cltd inc in push aam xor xchg mov xchg scas pop loope mov (bad) je mov outsl rcrl orb mov dec in js das out mov push hlt cli sti stos push (bad) (bad) inc mov xchg mov ljmp mov add in in jge shll mov popf push xchg adc mov and daa inc repnz mov cmp imul push mov (bad) mov adc fdivs mov shlb xor dec or mov xchg insb loopne push notb push inc push add inc mov cltd sbb repz rolb and out lock gs mov jl push mov push xchg dec aad (bad) cmpsb rcpps aaa sbb lods call fwait mov in and lea or cld leave loop bound xor mul fsubl into push push sbb inc addl mov sub (bad) lods xchg movsb movsl mov xchg jg aam mov push mov sahf icebp cmp adc lcall (bad) mov mov je xor push mov push lret subl jecxz cltd inc (bad) ror jmp stos out mov mov xor or xor xor sub lods mov cmpsl cltd lods mov in (bad) xchg mov test adc cltd mov add inc cltd call mov cltd loope fiaddl push inc or (bad) mov mov call std (bad) aaa sbb xchg mov data16 or (bad) mov xchg scas das mov adc fs divl (bad) xor dec das cmp sbb movsb mov mov cmp stos pop es (bad) lock xchg xlat ret movsl adc enter pop xor mov pop xchg sbb sti mov scas sbb cmp cmp mov jnp cmp into call outsl push jecxz (bad) loope scas cmp pop sub fs dec addr16 jnp or in leave pop cltd aad add dec sbb mov test inc mov add sub test pop cmc jmp adc push dec dec lea scas out mov std xchg mov and inc mov stos outsl in xchg bound sbb in insb loope xchg mov pop leave xor imul xchg pop ds cli out mov xor fcmovb xchg add push or ja pop cli fs push sti icebp out cmpsb xor pop imul push ljmp push mov or rcll or pop or imul inc call mov cltd out pop (bad) stos fsubp sbb and nop add sar shll es push and push add push cltd add fcmovnu pushf popa dec ss xchg mov sub cmpsb mov or mov lds mov outsl in in into (bad) mov js hlt pop mov sub sub mov lock xchg cmp shr jmp shlb pop ret and mov (bad) xchg (bad) fidiv and mov adc popa mov add arpl push pop xchg cmp cmp out in rcrl xor jecxz mov mov pop andl inc adc cmp or push daa pop jnp int3 mov cld pop cmp mov cmpsb test int3 xor jns int jmp xor lea and cmp or popf xchg mov adc fs sbb mov jl mov cmpsl cld xor mov aas xchg enter add bts std mov test mov jbe jge xor mov test sub popf in cmpl mov lcall dec pop xlat andl mov sti pop xchg jecxz mov test repz push es pop repnz mov ljmp popa sti daa fiaddl mov std loope js loop mov sub imul ret xchg (bad) lock dec xor lret xchg scas mov jmp arpl sub movsb scas sbb adcb movsb loope jne test lret sar pop int3 lahf mov lds mov xchg sub cmpsb pop cld cmp sbb mov sub mov mov jno stos stos or and push add push adc or shll add rol cs pop pop mov cmp adc xchg and mov subb movsl in ljmp xor push in mov and jo ljmp movsb lds mov cmp mov das dec rorl cli sbb sbbl inc (bad) pop push mov nop or sbb dec mov xchg push xlat test or test inc jb icebp mov xchg rcrb sbb aam andb cmp lock sbb xor mov test push imul mov pop scas loope cmp mov and mov xor adc sub sub sbb sub and mov sub mov pop shll shll fnstcw cmc stc sub push mov (bad) pop mov (bad) jmp pusha outsl imul mov adc fsubs xchg sbb mov fbstp fidivl push int3 ds jg cmc push inc mov xor aaa push movsb sub pop std jne jno pop mov and mov jb les outsl fs pop pop repnz and mov or leave je loope shrl bound add shll cmp adc sub push sbb scas adc test loopne xor bound sarb or cli xchg stos adc mov jnp call push and hlt lods mov pop addl xchg subl jo cmp lahf xchg js lods std dec rolb dec mov cwtl jo mov or sub xchg mov out adc mov notb dec jecxz or xor shrl cmpsb sub jnp std push adc jno push xor mov popf sub sbb xor call les and push jne int test loope decl inc and scas xchg and popa icebp xor mov push scas push fsub inc das ja repz call mov lcall (bad) xchg sub shlb push inc mov adc dec jg and push ljmp call pop dec decl pusha sub xchg data16 mov cmp clc das shll les popaw sahf xchg mov stos push dec mov ret or push (bad) sub mov xchg pop push addr16 stos aad aam xchg retw imul pop xchg movsl scas es aaa pop jg cltd cwtl lahf ljmp addb (bad) lcallw or mov cmc mov mov (bad) fstps fdivr push fucomip jnp add cmp les bound lea popa and mov test mov cld sbb int push lcall cmpsb data16 mov pop dec add cmpsl les jmp add jecxz mov pop cwtl xor or push dec ficompl sub sti inc dec inc dec cwtl arpl cmp pop cmpsl sbb out sbb dec pop mov mov (bad) stc scas inc and lahf (bad) push sbb nop xor int3 pop in les sbb xchg addr16 push das inc xchg sub add adc sbb pop and bound cmpsb shlb mov or fcmovne xchg (bad) in mov call mov mov dec ds inc insl pusha lods mov movsb xchg mov ljmp aad xor test add cmpsl imul js shrb mov pop inc or and pop imull push adc (bad) lret enter ljmp push mov mov in or jge cmpsb mov sbb repnz sub lods mov or iret icebp pop mov mov lock push xchg mov mov imul cmp notb rcr mov mov push cmp mov sub pop xor jmp xor lods cmp and addr16 or mov xlat (bad) mov and jge rorb enter sbb push jge pop nop in call cmpsl int3 mov jg les popa add pop andl adc xchg (bad) leave scas std lds or cmp inc stos push arpl notb pop mov push bound xchg lds cmp mov daa inc lds mov mov xchg inc pop inc mov add push inc in test leave add xchg ljmp in rcrl bound jmp lods mov lcall in loopne insl ret jbe inc imul and lret imul in pop cmc mov pop push enter ja (bad) test inc in stos insl jmp fsubrp loopne jl (bad) fimull sub cmc xchg mov jg mov pusha fisttp mov mov fs jns fist push adc outsl out cmpl (bad) aaa imul mov mov ja repnz xor mov cltd dec hlt mov rcll or sarl mov cmpsl dec shlb mov mov cmp lret jmp fild mov mov sbb jnp jg sub adc jp dec movsl and imul mulb es pop inc xchg sub mov insb push mov jge iret jns add and jmp mov ss dec hlt leave stc and test pop pop cld je and lcall push jnp icebp cmp mov cmpsl mov sub or pushf mov ret (bad) mov mov push test pop cmc mov mov cmpl std push mov xchg jnp data16 pop pusha xlat or imul andl sbb bound aam pop cs in xlat sbb cli push mov sub pusha pop lods nop aad cmpsb movsb les mov or jo nop jns (bad) jno xchg adc mov mov xlat imul bound callw daa or xchg pop xor xchg ret test push pop clc sbb fldenv adc cmp mov arpl scas and mov push push (bad) mov or adcl cmp fbstp fsubs das arpl cmp push push cmp adc out or push pop mulb cmp sbb lds rol nop mov sub (bad) adc dec or out imul pusha jmp sub movsb mov lcall jl fldcw xchg or push insl iret mov mov clc push dec into mov sub jl frstor and push dec and fs sbb fnstenv xor icebp mov push icebp into movlps and inc dec lret fdivs pop dec or call pop sti and stos out popa add jns or imul xchg cmpsb push scas adc mov out mov push or roll mov pop movsl mov clc pop dec dec or cs add loopne loope cmpsl sub sbb imul cmpsl (bad) inc push cld dec sbb dec lods aad pop push sub mov pop mov mov daa push xchg mov inc cmpsl mov test insl jg and std mov das leave xchg in cli and enter lret cld daa adc and sbbb pop pushf push frndint in js loop rcll fist cmp add cld push xchg lods inc ljmp stos sub add sbb mov push cld push stc arpl mov movsl mov aaa pop jecxz push xchg data16 push cli pop lcall mov fldenv fmul ret addr16 xchg mov dec xchg xchg mov pop add and and xchg shll xor sbb (bad) enter notb mov mov cwtl sbb loope jae movsl fs test cmovnp movsl imul xchg xchg or (bad) loopne mov mov out xor fdivrs or dec inc jl dec mov mov cltd pop jnp cld test push mov mov loop imul add (bad) out ret pop jo mov ret fldcw jae pop call aam add mov je mov ds and cwtl mov dec lds fstpt add sbb mov ret lock es loope and stos repnz rorl sbb out push cld in dec sbb jb or ror sti stos xchg sbb mov pop jns lea mov (bad) adc pop add add arpl in mov pop xchg mov and dec or (bad) out fisub sub (bad) mov int movsb sbb cmpsb adc lods and sub clc xchg mov lahf cltd test pop and add or mov pop add mov mov mov mov jl cbtw jmp test mov mov movsl add je stos and mov and mov sbb jg xchg test negb dec push es out pop mov insb in (bad) testb leave movsl dec adc inc inc sbb sub daa loope xorl dec mov cli pop fsubs mov inc adc mov mov mov in push sbb int push (bad) pop dec mov xchg idivb sub test in imul or sub mov jl mov inc dec mov xchg popf lods lods cmpsl sbb insb mov mov cmpsl pop sbb dec ds inc adc jmp dec ret hlt mov pop mov xchg jb ss dec and scas stos stc movsl (bad) out push mov je fcmovnbe in mov xor xlat jl xchg mov jns mov aaa push ss sti scas pop xchg iret shlb cltd cmpb in push mov sti daa and hlt pop push dec stc icebp xor lret push mov xchg lods (bad) lret repz lock and into adc repnz mov adc cli or fsubrp push orl pop pop cmc inc std pushf fs aam scas jmp sahf dec xchg and pop rclb fsub mov aad faddl popf call mov cmp shll mov mov pusha xor and sub mov sarl (bad) mov xchg arpl mov lock sti stos xchg data16 mov sub outsl pushf push push mov mov mov xor xchg or sahf mov lcall (bad) lods mov cmp mov xor andl push jecxz rcrb or out mov pop bound xorl mov scas das out sbb push xchg mov rcll cmp mov daa rolb movsl loopne or rcr dec pop divl fdivrl lock jle insb push mov inc pop push mov out addr16 mov xor hlt adc stc stos and (bad) jno mov fs mov cmp mov sub xchg (bad) mov fidivl mov ret xchg pop lods lds and mov insl cmp inc fdivrl mov ret lcall xchg fwait mov push push pop pop mov (bad) loopne call stc test push mov sub dec syscall lcall xchg jb xchg sarl adc jbe push stos nop mov and adc push cmpsb pushf fistpll mov lahf jle sub mov bound pop mov nop mov (bad) adc fnsave outsb call adc inc icebp mov pop aad test xor rorb jns cmp inc or mov cld movsl pop repz mov js inc ror and hlt mov sub jns push add addr16 xchg mov mov sub pop adc and daa jae dec adc mov in inc loope call cmpsl mov sub cmp push cmpsb mov jo or mov shrb rorl mov mov xchg xlat xchg or pop iret mov loop inc repz das mov sub cmp mov mov mov enter int3 sub mov push (bad) mov xchg jle xchg mov in daa dec addl pop daa xor and dec mov pushf push shl jmp adc sbb (bad) mov je mov jo xchg mov adc stos sbb xor popf rolb mov rcll add inc scas mov adc inc adc pop inc pop inc mov cmp shrl jns repnz outsb leave movsl dec (bad) mov mov lcall xchg mov lock test shlb cmc cmp daa lock mov mov sbb pop or mov call movsl (bad) iret mov xchg roll fcmovnb orl jne mov mov insl mov mov adc clc push xchg dec jbe (bad) dec ret in cs pop ret push and data16 pushf mov mov push mov mov insb xchg jnp rolb ret push inc adc cltd scas sysenter mov jnp bnd mov jg mov push inc or cmp lods dec adc addr16 in imul cmpl cmc xchg mov outsb int push cmpsl insb hlt adc xchg rorb and movsl jge js mov xor adc push push icebp bound jmp inc mov inc pop (bad) iret mov shlb shlb fisubl xor mov loop xchg mov push fdivrl pushf adc sbb mov push dec mov or cli add out lea setno cmpsl and xchg push adc fs push sti icebp leave xchg push loope sub arpl adc and cmpsb stc in daa push dec andl mov aad sbb xor add xchg gs and (bad) insb push xor dec mov sbb adc repz mov add (bad) aam dec pop and and (bad) sarl (bad) aam push dec in mov mov inc fmuls jl mov sar push inc push mov or mov je mov mov pop jns sub mov movsl xor fist jb test out and pop adc adc inc mov cmp xchg sbb jecxz (bad) lcall fcomps xor mov in xlat lahf mov sarb mov rcl sbb es jecxz movsb incb mov inc pop xor push rcr mov mov outsb mov ljmp fwait scas cmpsb dec imul enter jns lds xor mov push mov orl sbb aas pop or dec aam testl push stos daa push (bad) cmp ret dec pop cmc pusha pop cmp mov xchg jbe and xor sbb adc inc cmp cli subl dec aam sub sti cmp bound jg jns jno mov sub fdivrl fstps jns sbb cmp and xor popa fadds xor stc push int3 aad repnz xor popf andl push mov (bad) movsb int cmp shrl sub imul test pop mov std movsb (bad) fwait add push inc cld xchg mov inc out cwtl mov scas lret repz pusha mov jmp jo and add mov std inc imul xchg push arpl jle jg mov inc or inc adc mov mov jp cmpsl sbb lock decl add fwait shll pop fwait imul test or inc mov je xor and push cmp cmp xchg jne shl cld icebp add fdivl jnp enter out bound dec or mov js and jb jbe movsb lods mov cmp out adc cltd jnp xchg mov xchg lea xor test push push add loopne scas (bad) ss cltd mov test loope mov out test dec fidivr repz popf mov sub and aas sarb mov sub rol sbb mov add mulps repnz inc lcall dec push outsl loope pop jg iret pop ss adc mov mov das inc pop call mov pop std mov add fstpt inc aam cli bound sarb fldenv mov out mov daa dec adc mov xchg cltd mov mov cmpsb loopne mov fbld cwtl jb test mov pop xor mov xor (bad) cmp scas mov mov lds push pop cmp in cltd xlat dec ret cmp or js repnz cmpsl out cltd stos xchg dec in xor mov push int3 popl sbb adc sub xor fwait inc pop out insl lea ss popa jmp fwait inc mov pop push ror cltd mov sbb fbstp mov fs inc push adc jge mov mov sub iret subb lods loopne pop push lret cld jns mov sbb mov lods or scas pop pop xor jecxz add pop cmc inc push pop push dec andb cli lds and mov gs out arpl popf lock test mov (bad) push mov out insb xor iret movsb push rolb lds lret mov (bad) outsl sarl lds (bad) pop shll xchg imul sti popfw ja inc xorl mov in mov push cmpsb movb mov lahf gs mov inc adc adc jo jmp mov cmpsl xor mov push (bad) mov adc sti and mov test mov push pop movsb or xor mov add fnsave jmp jg mov cli inc shrl daa inc pop dec xchg and inc cmp mov mov mov cmpb cli ret js dec sbb in push out in push repz pop inc xchg call jae insl hlt out adc (bad) dec mov dec or push rclb jae pop mov cmp je mov out js jmp mov scas (bad) and adc inc or xchg mov mov mov and mov sub push dec adc dec mov adc mov adc fwait mov mulb mov push jg insl jecxz add xchg (bad) std cmpsl mov mov push daa mov lret pushf movsb xchg xor (bad) (bad) or xchg popf mov mov inc push int sti mov js mov repz jne std movsl out and jnp inc adc mov negb xchg leave mov mov sbb pop std xor cmp mov xchg xchg inc adc (bad) ljmp daa mov orl mov test cmpsb add int3 mov xor push inc xchg cmp test mov jmp aas pushf hlt movsl push shrb bound outsl (bad) sti lea mov mov jmp jecxz mov jmp sub aas insl jecxz out and push lods test sub dec jae inc cmp pusha ret stc orl ja add sti cmpsb leave or mov insb in mov jne sbb cltd imul mov lock in movsl pop hlt ljmp mov add dec imul outsl out mov js mov shrl test (bad) std scas daa pop mov movsb insl ljmp jl movsb jns cmc mov iret mov ds xor (bad) (bad) out cmpl mov hlt lahf jbe cltd (bad) push sbb scas dec pushf xchg inc sbb push pop loopne mov pop mov jo fbstp jbe in xchg std js sbb lret mov popa jns and movsl cwtl cmp pop push pop xchg cmp jbe rcr ret xchg jge lea leave push push push cmpsl jp jns icebp les bound int enter xor insb push and pop pop mov orb das mov cmp lods movsb xlat adc arpl out orl sub xchg mov mov pop lods inc pop sti aad xchg pop repz out mov adc add adc movsl inc push imul ret xlat sbb lcall jb jns jmp and sti and test test cmpb sti jno mov test pop loop lods mov adc dec jnp add ret cmpsb dec movsb (bad) xchg movsb jae mov imul or mov push mov mov cltd mov mov insb adc add fcoms sub jnp test fdivl ja mov xor adc add sub mov (bad) inc xchg stc daa das aaa jg fldcw jns sti jge cmpsb mov add aaa shl inc pop pushl sbb in arpl scas pop adc loopne gs lret pusha out les pop push xchg mov dec mov jo mov cli push xor cltd xchg or push mov scas and aas jnp leave je jl dec mov xchg rcrb andl dec add les xor stc and (bad) cli sub mov test jg sbb inc (bad) loopne xchg popa pop data16 xor xchg testl mov mov dec add adc mov in scas bswap leave mov and bound popl fs mov stc pop pop cmp push js cmp inc jge rorb sbb and and mov xchg pop cltd iret dec mov xor push mov bound mov or or lahf mov scas inc insl (bad) cmc push dec scas test adc lock popa cltd data16 sbb pop push xchg ljmp bnd push or aaa lahf loopne push add xor jns mov sbb (bad) (bad) out popf pusha rcrb and xchg mov push imul pop test xchg push xor push rcll in push dec and jle pop push mov jae cmpsb roll js lods add movsb bound test push mov and add (bad) pop or cmp jns mov ret sbb mov jo add imul (bad) mov xchg xor inc lods (bad) fiadd sbb scas and movsl xor fistpll jns mov insl rorl int3 loope mov inc adc dec imul adc and cmpsb xchg (bad) loop pop mov lock mov shlb sbbb mov xchg imul xor dec out or or imul decl xor mov mov dec mov add cmp ja std pop xchg movsb lds or xor push jge les xchg push inc dec mov mov mov addr16 sbb mov dec add jnp (bad) fsubl or mov jle lcall aad or sub xchg push push mull std lds adc mov or jo pop (bad) mov rolb dec pop cmp push cli les and jno hlt push jmp (bad) xchg in inc jle bound lods test mov push cmovo in imul pop mov testb gs test mov dec lds mov in addr16 mov dec mov push (bad) pop andl mov popf sbb mov rorb xchg or xlat sbb insl push mov mov stc pop stos or adc jbe mov test cs mov xchg out scas in pop mov inc dec xor cmc adc inc fsubrp mov mov movsb out push bound cmpsb adc jl mov arpl stos and movsl aaa inc in xor cwtl fbld adc mov scas adc sarb lods movsl in icebp pusha fisttp (bad) popf data16 pop mov insb add or xchg es xor mov shrb dec bound inc xor mov push stc push sub stos mov call ja mov cltd aad test adc xor lret push aaa mov rclb sar pop mov xchg mov push and dec addr16 icebp js repnz std mov mov jb nop or mov scas roll mov cld pop pop mov sbb imul xor popf shlb fnstsw fs out mov xor xchg les xor push and xor bound aaa cmp xchg mov cmpsb cmp dec add (bad) jno pop in (bad) cltd lock scas enter js fcoml lods daa jmp lods out and arpl (bad) decb cld jnp jns pop bound and ror push add mov lret xor repnz cmp mov popl (bad) std out mov test ja and dec and add stos jle xor and dec roll ss in (bad) stos xchg in scas dec jb into popf xlat mov xchg mov gs (bad) xchg out out addr16 jp loopne in dec or push mov push mov pop fs addl push xor sbb fldenv sbb (bad) frstor std mov jnp xchg mov inc push ss jns jp jmp jge adc dec in mov sbb cs push xor addr16 lea cs lods cmpsl mov dec add out mov mov test loop cmpsb aaa scas xchg (bad) adc pusha movsb or push mov test popa in xor stos fidivr daa push jo jbe cmpsb pop stos sub test mov mov shrl int3 andl bound inc pop push cmpsb xor sub inc inc icebp adc mov xchg jmp and and cmpsb adc daa enter dec fdivrs pop sahf lcall jecxz inc cmpsl mov pop lods xor pop loope in icebp scas jne lret inc pop and popf mov dec int3 jmp pop xor je push and out adc xchg xchg ds divb aas sahf push mov adc les bound xor adcl outsb xchg pop movsb fchs nop mov aaa adc aaa fstps popa pop call aam cld pushf cmp cmp push bound movsb mov sub jne xchg data16 jle mov push pop jl and add mov inc jnp in push rsqrtps arpl icebp ljmp push (bad) sub pop xchg and mov xor xchg test dec scas sbb xchg pop jnp decb in and daa lea mov add mov mov push adc lods sub fild jo xchg mov xlat mov sbb jl cmpsl mov movsb mov out (bad) in movsl sbb jns mov ret gs lock outsb fs adc mov mov pop out push dec xor sbb int loopne out aad loope stos push sbb aas aaa xchg add lcall mov fistl inc mov paddsw push and jo sbbl fistpl std sbb cmp aas sbb sti icebp add data16 mov fbstp scas mov and cmpsl jnp push mov push lods scas xor movsl sahf out out push (bad) jmp mov jnp xchg or roll rol (bad) cmp movsb push mov xchg mov out jmp adc scas sub cmpsl sbb dec jmp in pop outsl hlt data16 mov (bad) cmp ficomp jle inc mov loope outsb pusha movsb stc stos js stc out pop add (bad) loopne mov pop jno fmul cmp mov fildll xor addr16 movsl xor hlt xchg push pop into mov bound xorb inc mov shrb xchg roll mov pop cli mov inc pusha adc and out das push fisttp mov hlt cs xchg outsb or mov pop mov lret (bad) jo fsubp mov notb insl mov cmp mov (bad) push inc xchg mov sbb cltd mov lcall pop push lock dec jg loope sub mov mov pop cmc insl push mov sbb mov out mov mov popf pusha pushf mov inc loopne jns sub sub dec (bad) mov jne pop loope rclb push in add popf xor add cmp pop icebp loop out (bad) xor loope movsl mov scas mov mov hlt push mov sub xor pop pop inc div xchg mov outsl pop or or sub adc mov dec inc xor pop fnsave xchg and (bad) aad mov add loope pop xchg pop dec jp cmpl lcall or repnz inc adc sahf push std popf jns mov stos dec cmp movsl cmp mov mov jle subb mov push addr16 jo mov cmp out cltd gs dec mov ljmp lds mov pop xor movsl lret fdivrs cmp lds and push sub mov fdivrs push enter shlb or test and xchg or xorl mov sti mov mov cmc imul adc add (bad) mov pusha lds cli push mov sbb out jmp dec inc jno inc adc mov jecxz sub addr16 (bad) mov mov (bad) push pop mov pop xchg inc adc gs ss (bad) sbb popf mov leave orl cmp mov lcall scas lds rorb divb cltd xchg loopne jne fwait (bad) jmp ja lret mov mull mov test cwtl in outsl int3 icebp dec jle xchg cmp add mov mov jecxz (bad) pop aaa xor mov fwait dec inc xchg cli test pop std mov (bad) aaa cld sarl inc push sub jae cmpsl mov xchg shl mov out xor sub ficoml and gs adc or in pop jns (bad) mov pushf aam (bad) mov push mov cmp pop add mov mov xchg rorl popa fwait xchg fnstenv cmp mov xchg inc or dec mov fcom mov push insb mov (bad) scas (bad) stos in movsl sbb out mov arpl add push mov popa pop xor mov add mov sub (bad) jo in imul sarb xor mov mov and fnstcw push cmp std sbbl pop adc aad sbb push mov xchg stc lret push es xlat ljmp fwait cmp xor in mov stos push mov bound cltd mov fdivrl fidivr fidivrl clc ret push push and pop mov or adc dec sti sbb dec mov xchg lahf or jb mov loope cmp lret mov sub dec pop add cmp and xor mov push jl in pop es adc mov xchg mov sbb dec (bad) loope dec mov inc sbb xchg jmp int outsb sti jecxz xor cmp xor adc into jp dec pusha repnz out ret jns mov xor adc xor inc sbb and mov aam stos adc mov adc test pop dec dec shrb add sbb sub iret xor mov jno mov mov popa mov and ret jecxz (bad) mov imul mov cmp push or mov lret inc mov xchg dec adc push pop sbb xor mov xor (bad) imul ss mov adc das pop xor stos test cmp dec mov or (bad) pop shrb inc inc xchg and addr16 das inc mov pop mov test dec (bad) lods push mov adcl adc dec push push dec sub in mov lret mov rolb pop repz and stos mov and inc mov pop mov cmpsl daa add adc or xlat sub push push les lcall mov sub punpckhbw loope mov dec ret pusha xchg lods pop xchg xchg sbb stos std dec mov mov sbb icebp adc jle mov dec pop or test insl aam cwtl in cmpsb cwtl adc pop adc mov in sbb xchg lret xchg mov fild dec add mov shll adc pop aaa shlb jg movsl sub (bad) mov xor add jns out iret ret pop mov pop clc fs imul divb cltd mov cmp adc (bad) jb lock pop fs mov or add mov jns mov aad lcall cld dec xlat sbb dec and xchg cmp jmp aam pop out insb out stos pushf and dec aad mov shrb jle cmpsl inc sub and mov push inc adc (bad) es fidivrl inc lds popa mov sbb mov adc (bad) iret mov aam cmp jne inc mov lea mov adc jae int cs daa aaa or pusha mov lds mov or mov jmp bndldx cwtl popf loope sahf mull subl push mov icebp sub jne aam scas lret pop mov movsl jg mov enter xchg mov mov add scas cltd cltd mov sti mov pop dec lods dec mov dec aas jae and jbe jg dec add sbb mov (bad) mov ffree (bad) cltd int3 cmp mov mov in popa addr16 fsts imul adc cmp xchg call lret cmp jns shll push xchg test movsl das mov bound xchg loope mov sub rcl mov push jmp sbb bound push xchg push mov pop pop ficomp dec and inc bound data16 (bad) rorl mov ds ljmp cmp and xor scas add mov (bad) out cwtl pop jecxz ja inc cmc adc push sbb ret pop or sbb xor xchg push pop mov xchg sbb mov mov or repnz jg add jge push sub (bad) shrl mov sbb dec pop stos fsubrs sbb push cltd mov fisub jbe mov outsl jle cmp cld xchg mov mov call les mov (bad) mov push jmp push push xchg in das adc push bound xor dec push push sarb sti imul (bad) leave mov pop je int3 in out sbb imul loope or mov fsubrs loope or lret cltd mov movsl sub xchg out andl loop and pop xchg repnz out pop mov pop out pusha leave jbe (bad) dec xchg scas add pusha stos and xor push bound push outsb mov sub in lds add cmpsb cmp nop mov mov imull movsb int3 inc or (bad) or nop imul mov into or push and sbb in in push add outsl pop fimull sub sub add xchg scas stos out xchg loope add gs repnz jmp mov cmpsb cmp outsl xlat lcall push mov (bad) loop mov into jne bound sub mov stc mov cmp dec mov outsl add cmp pop insl popa cmpsb add fs jbe adc dec lds mov xchg into inc aaa loop cmpsl int3 push pop stc fldcw andl jae std push push lret or addl packsswb enter out rol and test xchg jnp sbb push out pop xchg adc scas dec lds rcrl dec cltd dec loope mov push fs mov jge inc imul add (bad) fwait hlt push cmpsb jle mov ljmp mov mov pop add loopne and mov jmp mov jp sbb movl sarb lcall push push mov jmp out loop ret mov cltd jns dec push sub dec mov lock test fbstp pop pop cmp inc inc sahf into test jns sbb xchg cmc pop lods push pop cmc pusha mov movsb repz dec push repnz mov xor in xor sub xor push cmpl mov insl in cmp (bad) jo fiaddl push lret mov fnstcw mov daa loopne fwait push pop clc mov arpl and lahf mov (bad) aam cmp cli fwait daa xor movsb (bad) pop inc mov (bad) pop mov pusha test mov and bound mov das ljmp test les popl add mov adc arpl mov xor xchg mov cmpsl out fisubrl fistl xor mov and ljmp movsl out data16 push push adc push stc push xor sbb stos nop cmpsb insb pop dec pop imul imul or js inc inc and sbb popa iret pop xchg addl icebp cltd insl push std xor cmp jmp add jno cmp xchg xchg iret (bad) fmuls lahf popa icebp stc inc dec xchg cmp int xchg inc lahf mov dec cmp xchg xlat jbe xchg inc in loop addr16 out movsl inc or push sbb aaa cmp adc (bad) insl daa mov xchg (bad) ss cltd xor in call xor lods xchg repnz sub jo pop fldl in cmp lret mov dec inc inc call test movsb mov mov das lcall jg stos mov pop add movsb mov mov es or adc cmp mov mov add imul aas push iret mov or add and mov iret mov xlat xchg (bad) xor or cmp jb mov and cwtl test cmpsb lods into mov mov arpl lock nop ret mov lods stos push add xchg and add jbe mov in mov push mov out xlat fldenv pop cld inc pop imul pop js or incb adc repz sbb test pop fbstp stos xchg adc pop inc jecxz (bad) fisttpll dec test mov mov (bad) cltd fucomp xor push sub and arpl orl mov pop jne lcall xchg and mov mov dec int3 dec and lret leave pop les xor push je cmc mov stos dec mov ss aaa cli xchg in out mov jb jmp cltd cmp lods mov rolb xchg push inc mov stc sub mov xor imul mov lock test inc pop mov jge mov add mov xorl mov xchg push mov xorl mov (bad) push add hlt (bad) ljmp push xchg in ja aad mov enter rcll or xor dec add pop mov and mov mov daa xor cld jbe sub push out jle lods ljmp and mov pop add movsl das pop ret cmp xor sbb mov push mov sbb lock aaa and jecxz adc cmp imul cmp dec sbb xchg cmp sti in fwait ret (bad) lcall push imul and adc mov stc pop inc xor and imul xchg loope nop fist inc jns jl test stos movsl mov sarb or sub pop mov sbb gs cmpb mov pop std jecxz sub lods movsl cmpsb dec andl and xchg pop dec ret mov mulb jno cmp mov repz mov or cmpsb cltd incl shlb mov and add xchg lret jg mov mov dec testb mov outsl xor stos jecxz rcrb mov push pcmpeqw or inc fsubs sarl xchg enter inc xchg or mov in xchg and mov mov lods inc movsb sti mov sub sbb mov in cmpsl out pusha nop mov aas xor mov insl in orb mov test jp sub icebp pop les cs and xchg in xchg cmp jno push mov or das push insb cmp or dec das pop and xor mov xor daa xchg xchg pop inc in (bad) xor js push push into pop fs iret push mov adc xchg mov mov imul rclb je adc aam xchg aaa and pop adc test xchg adc cmp inc ljmp fiadd lods test (bad) pop nop aam fildll or mov mov test xchg push pushf mov pop hlt insb adc mov sbb cld (bad) add mov push inc ja adc mov jecxz lret xlat mov jns addr16 add sarb adc lods inc fwait sub mov ret dec cmp sbb add sub sub mov ss cmpsl jge lcall or mov sub jle xor imul loop sti les test movsl fisub mov push xor test push imul add inc mov and shlb fs sub push cmp ljmp xchg jbe mov push addr16 iret cltd sbb mov sbb cltd mov mov pusha mov jp pop xor ret mov adc mov sub daa mov sahf mov dec sarl jmp mov adc lcall or inc or or (bad) adc and and fwait cmp jns sbb cltd mov mov and xchg xchg (bad) aas inc adc cmpsl xchg cmp mov repnz mov dec push adc cmp push (bad) lret stos movsb mov in mov mov inc push cmovle dec cmp sbbl mov xchg repz xor addr16 lock ljmp test lds or ss lods sbb jle into jle inc xor fwait cmp and dec cmc jno lahf bound std lret jecxz jns fsubrs test inc lods jge mov fcoml mov movsl add loope arpl push insl insb mov lret loope mov push mov arpl ljmp loopne movsl dec jne loopne mov mov rcll fisubr cmp sub mov int sub pushf (bad) hlt test dec cmp adc add pop inc cmp popa repz in pop add and cltd movsb popf leave dec pop dec cmp les mov push jns push lea fwait cmpsl roll movsl in cmpsb or movsl movb xor mov or gs push shll hlt int insb cltd push xor lock (bad) jp dec rcll jns hlt shll dec pop imulb (bad) repz out adc mov outsb outsl inc ds lock scas adc sbb jno lcall loop xor test imul sub insl pusha mov inc add and in and inc bound push add fnstcw insl cmpsl jbe lret out pop push imul jl les cmpsb cmp add mov bound jb js (bad) cmpsb xchg and movsl xchg (bad) icebp addr16 (bad) mov (bad) test test repnz pop sub add pop sti loop jns dec adc (bad) in mov mov out das out movsl scas dec nop and popa mov push clc jo mov push sub scas imul lods cmp insl mov jge xchg mov xor stos sbb mov inc cmp xchg lds mov fwait mov inc cltd jbe sbb (bad) repz xor and jae inc or mov mov add stos dec or jns fnsave cmp jle jecxz,pn mov jne fnstsw xor mul mov adc xchg addr16 imul or inc icebp mov test push iret das mov loop fwait add rclb out mov xor clc loopne inc cld cmp or xlat mov addl dec rep adc mov pop cwtl outsl jmp xchg movsl fdivrl dec or adc xchg push and cmp repnz xor or xor jne pop adc mov in mov push mov pushf push cltd push mov loope jecxz push sub ret push popf mov repz mov pop pop inc stc movsl add inc xor (bad) aad sbb movsb xor lret jnp dec jo cltd pop mov lret xchg int3 ds or mov popf icebp pop push xchg push ljmp test xor cltd in cltd aad movsb stc arpl pop test mov sub push ds jns jns sbb pop mov (bad) xchg xchg push add stc mov jge roll adc enter jno xor mov stos mov mov jb stc jno addr16 push mov sub mov push or add pop ror cltd (bad) mov lea jns cmpsb test cmp mov inc adc gs or mov sub daa sarb in and adc and (bad) mov rcr push repz mov mov movsl xchg mov shll fsts scas mov push fstpt lcall popf mov cltd test ljmp in and sub mov cmp mov adc (bad) push mov cmp (bad) leave rolb mov or xchg mov jle push mov xor xor lods cmpsb pop push cli cmpsb jb sahf inc les push out jns pushf outsb test lret sub mov imul dec ret shrl in inc jle aas sub adc insl xchg cmpsb (bad) mov test jo lods stos lret mov sub dec add stc add cmc mov (bad) sbb mov inc shll cltd adc cld pop mov lods mov xor dec mov or and push cmc imul mov xor mov push and mov testb mov mov dec mov jmp fmul or adc xor mov jne mov sub stos cmpsl sbb mov ja das and sar loop xchg cmpsl sahf bound fwait mov mov (bad) ret and push cli xchg (bad) jne das sahf inc in pop aas adc popa dec jmp sbb push dec adc movb scas adc imul loope js gs repz bound mov add test dec add movsl sub aaa pop scas dec fwait scas pop mov adcl sti (bad) pop sarl push cli sbb lock fwait mov orl jmp ret addr16 dec loopne pushf jmp loope or addr16 addl inc (bad) mov roll loope inc fs inc lcall fdivrl mov (bad) mov je (bad) es outsl stc movsl xor mov lods gs cld adc mov fidiv fnstcw (bad) cmc mov mov add pop jle pop jo or xor lea xor mov jmp pop les mov lock xor adc add lds ret mov (bad) repz imul pop inc jg sbb dec add and (bad) sbb adc mov mov outsl mov pop fprem mov and pop jo fcoms sub mov pop ds xlat int3 orb add adc popa mov dec or and mov mov mov nop inc in gs iret mov push dec out sbb adc mov daa lock dec inc test daa mov mov xchg clc scas mov sbb mov xlat mov sarb mov adc inc mov dec in cs and fwait js mov cmp hlt adcl jb loope mov or push jl outsl lahf xor xor and cmpsb cli shll mov ljmp scas cmp mov mov xchg andl scas add out dec ds shr fs mov jnp call mov dec lods lcall (bad) test cmpsb (bad) push jns scas and movsl mov xchg lcall mov stos xchg mov adc fwait cmpsb adc add push mov and das stc pop sub inc push movsl test ja mov lret lock fstpl dec dec add ret daa lock movsl lods mov or fucomi add icebp push imul mov mov lods mov jbe in iretw sbb and xchg add stc mov jl loope xor test call icebp push jecxz mov hlt sbbl mov xchg aam xor mov dec (bad) xchg inc cltd inc sub (bad) lret mov cli pop or jo es dec scas movsl xchg clc pop data16 mov cmp shr push mov fmull movsl mov dec sub and popf xchg cmpsb stc cs cmp bnd and mov pop ja inc andl pop mov pop push stc xchg movsl dec adc leave add cmpsb mov dec mov lock in arpl lahf inc test jno arpl hlt stc cmp sub mov imul pop mov adc das mov or mov outsl out repnz xchg mov in js dec push sti js outsl adc arpl les movsl pop js lock loopne inc or sti push add and jle (bad) (bad) jbe push gs dec sub bound mov inc dec loopne sub aas fsts lret cmpsb dec and lods mov in sub mov (bad) push adc add in cmpsb pop pusha pop adc add loope pop bound loop jnp repz mov pusha bound sarl les pop jge add icebp sub and add ljmp scas mov pusha cli jne lods or lret adc cs adc mov cltd aas repz jmp imul daa cmp outsb roll rcll adc ret repz test xchg pop and sarl int3 addl insl mov push imul addb sub sub loope and lock in int (bad) mov jmp scas pop jmp lds js,pn jno sbb xchg mov js js in addr16 push aam mov mov mov js mov inc mov dec mov mov cmp xor or test jge movsb sbb mov cmp mov xor cld andb dec ss js lds addr16 mov pop (bad) xlat pushf aaa bound dec mov pop xor and movsl repnz test out dec sahf insb icebp push jo inc icebp arpl add inc scas cmpsl (bad) (bad) xchg (bad) cmp sbb imul repz sbb pop jg aaa add call out xchg je imul push cmc daa xchg sub pop rol mov cmp test in mov imul dec or outsl xor mov out fxch mov hlt pop rcll push test and stos adc xchg jo dec dec mov xor sub xchg sbb test adc xchg shrl cmc xlat sub call add adc fcoms in mov aas adc pushf icebp fsubl fs mov inc or mov push or inc sbb dec stc pop xchg cli cltd into inc sysenter add mov or (bad) or jp std push add xchg mov pushf xchg into mov add fbld and xchg into sub jne inc mov stos mov xchg cltd mov dec arpl scas jge int3 inc fwait adc mov call stc and in (bad) dec push adc fwait jne inc mov scas je popa jo jns lahf xor mov cmpsl inc test push insb and loop and fcmovb adc xchg adc inc cltd adc push push enter rcr (bad) (bad) fldl cmp mov ret pop imul sbb mov shlb lods xor jns and lea inc mov push aas xchg pusha adc mov and add push ja push inc imul cmpsb (bad) pop (bad) jge xor jnp jb mov cmpsb pushf sub fldt (bad) js push jmp std and and clc jo ret test cmc addr16 cmpsl sbb fist inc jge inc fsts push and push cmp add push pop mov lahf mov xor push cli loope xchg (bad) mov (bad) std pop ret or addr16 idivb out sub and or jbe shlb dec and aad adc sahf (bad) mov add adc (bad) dec adc inc or in pop sub lods push scas mov scas mov mov and les push dec cltd and jno bound lret pop and mov inc icebp jnp or xchg js pop adc inc ret jbe mov cld mov jns inc std jmp rcrl inc ret mov and out pop pop pop arpl sbb xor or data16 stos movb out xchg jne jle xor push loope (bad) push push cmp or jns jecxz ds cmpsl dec fneni(8087 dec (bad) fstpt sbb jge or or inc fsubs push or and add (bad) jns push (bad) adc xor (bad) mov adc pop lock jne in dec and sub cld icebp push in pusha mov aaa adc adc inc inc adc push imul pop rcll (bad) pusha nop xchg enterw mov in add adc andl or stos mov ret lcall jns xor cmp (bad) ljmp push inc es xchg fnsave pop mov aad xor sahf pop mov mov jmp lret outsl loop xor hlt pop mov dec (bad) mov mov scas pop nop mov sbb dec test adc out mov dec push ret stos das sub mov mov mov (bad) outsb jp mov ss mov nop hlt clc jg out inc cmp lahf (bad) into repz mov mov adc nop movsb scas hlt mov test pusha in xlat dec add sbb mov jmp cmpsl into lret mov sub lock out jg lahf ret stos pop add mov loopne addr16 mov inc push in add leave call sub inc mov mov and pop jg mov xchg fdivl lods mov mov lock insl cmp test outsl or pop lods andl pop idiv cmpsb jmp in popa or xor jmp scas fisubl shl push pop xor jno cmpl cmp loop dec sbb xchg xchg cltd mov cmpsb daa ret (bad) dec or jns imull mov xchg pop pop mov and inc (bad) jae mov adc fwait mov loop adc stos rcll sbb push dec and (bad) in fs add sub or cmpsl cmp mov jmp adc mov mov cmc fs pop cmp loope (bad) lods negl push jns js dec popf lahf inc fbld cmpsb mov (bad) add jl sub or dec xor inc mov sarb cmp clc sar push mov popa add mov outsb repnz xchg cmc mov or dec or lret movsl xlat aaa jg mov sub sub (bad) adc push jno stos out mov outsb mov repz xor xor sbb pop pop mov mov fistpll jecxz mov pop xchg mov dec out or xor xchg inc fwait mov jl mov adc (bad) sbb xchg mov (bad) bound setge cltd and xlat jecxz int3 xchg push sets mov xchg ficompl pusha cmp loope mov rcrb mov stc fadd jmp dec mov repz into push cwtl stos xchg sbb inc (bad) sub xchg mov out subb inc int3 lcall dec xchg lds xchg aas (bad) mov mov stos leave mov in imul rcll aas push xor shr push mov test jae mov jmp popa cmpsl out cmovo ss push push sub xor pop xchg lock sbb sub ret clc push (bad) leave mov or pop pop std cmpsl mov add jae ljmp xchg call popf imul mov faddl lea mov xor adc lret xchg scas stc inc jns js fist in adc cli arpl mov mov xchg add xor push adc repz je enter test sub mov (bad) sbb push inc mulb dec mov dec cli stos aas or xchg pop lret test orl gs mov adc pop rolb pusha out add sbb lods or pop leave mov mov dec cltd pop repz icebp sub adc or jecxz mov xor sbb lods lea inc mov test xchg rol das mov xchg mov jns mov fdivrl jecxz pop or add jbe jmp and roll mov inc jmp imul xchg add cmp sub sahf loop push imul pop dec push cmpsl inc mov sbb mov mov or cltd andl test xor mov shrl dec (bad) jp les std (bad) or adc dec hlt xchg jg bound daa in pop and gs xchg cmp or fistpl pop movsl adc jns push xchg cmpsb cmpsb bound mov add int3 sub out iret je fwait pop mov mov inc gs push cmp out mov xchg xchg and pop jb jmp adc xchg inc imul fstpt fldt and movsb or push xor add test pop addr16 repnz cli xchg mov push mov jno inc leave aad inc cld mov xchg mov das pop rcrb inc es mov in xchg sarl jnp fwait mov aad mov roll scas mov cwtl mov dec xor and mov pop push inc loope jne xor out fdivl (bad) mov cld iret icebp mov mov cmpsl jns movsb mov pop repnz mov mov cltd sub jno mov inc cmpl movsl cmp and inc sti mov push pop jle bound rcll out es lods andb pop xchg cmp (bad) int3 ret xor mov (bad) pop mov mov inc out lods and or sahf fimul dec test sarl in jno mov in in cltd (bad) cmp push and das cmp cmc aaa and jns add and jno jne lea nop lret xor and mov push cmp insl and pop cltd subl xor dec mov pop xor adc fiadd jle mov in mov pop mov xor pop repnz xchg mov xchg sub jl sbb mov or mov dec inc ss cld mov and mov outsb pop inc (bad) jo sub inc aas in add mov in sub imul roll daa (bad) mov inc repz inc mov daa enter jb and pop dec push loopne andl inc dec rcll cmpsl outsb outsl jae or and mov fadds lahf pop cmpsb in movsl jo inc push andl adc out mov dec pop push and out mov push add call ret sub fcmove mov cmp mov jmp imul pop arpl mov mov (bad) lret cs xor sbb stos mov les hlt insb inc sub stos imul and inc jp jmp ror popf mov and add cmp out js int mov test mov outsl sti sub cmpb xchg cltd insb add sbb mov jle adc dec outsb jecxz mov xchg outsl xchg mov inc pop cli pop adc vandps xor xchg sahf (bad) int3 or (bad) fmull fisub loopne push ljmp into mov ja sub cld mov paddusb mov bound sub mov add out mov les adc cs das xchg pop popa out fnstsw dec int3 hlt test add stc and movsb and jle and (bad) inc lock pop push and out pop xor push loopne orl sub je dec mov in mov xchg and or shl jo fldl out (bad) stos imul ficom mov and jg dec dec mov cld push add push out insb jecxz ljmp popa cwtl mov jb outsb add movzbl call push inc pop cmpsb jmp addr16 mov mov std pop pusha sbb lret mov jns mov jb pop call cmp movsl jns mov movsl aad jmp mov ss (bad) into das pop ror leave mov lods mov imul int mov inc sbb lock bound cmp mov ficom mov ficom pop jmp mov iret mov test addr16 sti out out sbb inc or rolb sbb mov popa loope sub fisub mov daa hlt or xor inc mov add aam cli into mov ds sbb imul adc (bad) cmp popa xchg jb mov iret jmp mov fcoml dec fbstp aaa movsl pop leave sti pop mov lock daa pop cmpsl and sbb xor dec dec sub mov je fcomps sbb mov pop mov scas negb (bad) xchg imul in (bad) cltd test lds mov mov inc cmp roll xchg mov lcall out fwait les cmp jno nop dec mov leave mov movsl xlat rol leave (bad) data16 mov mov call xchg in mov sbb repnz stos mov fstpt imull daa mov fwait mov adc pop imul and cltd adc mov out xchg xor testb in dec cmp mov xor cwtl or cmp cmpsb (bad) sbb mov add cmp and adc adc jge mov aad scas or fwait in movsl int bound aaa ljmp mov xchg out and pop pusha aaa push mov fbld xlat mov xor pop (bad) int3 xchg les adc sub rorl add in mov imul sub adc fidivrl push mov lcall rcrl and inc movsl sbb fiaddl movsl xchg xchg bts xchg cli mov xor out jb push and dec imul sub aad inc (bad) ret sbb mov loopne loope cltd repz add sub and movsb mov push mov jne mov sub push mov pop pop movsl stos sub adc outsb ljmp repnz cmp lock mov xchg xor push lea das xchg aaa sub lahf inc inc sub rorl lahf mov lcall es cmpsl push sti push int lret cmpl or leave cltd xchg xchg xlat jno or push movsl jle xchg (bad) imul test outsl and push mov mov push and xor or mov push out mov ljmp dec xor mov mov std (bad) mov clc xlat (bad) mov and sub xor jp nop xlat aaa sbb push jmp arpl arpl lods and jecxz arpl add mov mov inc pop mov call xchg (bad) mov mov imul push push std repz and out ret dec mov dec cmp insl lock pop mov ret adc mov push add movsb xchg push cmpl sub mov pushf addb xor les int and mov mov testl xor mov dec push add adc insl pop add addl imul cmc aam int cwtl sub mov hlt cmpsb xorl adc fisubrl adc aad pop pop dec stc push mov popf xchg mov lods (bad) stos adc addl pop mov inc lcall std mov sbb mov sahf addl cmp ja pop xor sahf push cmpsb je lret mov jg (bad) mov pop dec xchg (bad) inc loope or sub outsl and js jl pop mov mov mov clc push jl test fs add out dec movsl mov sbb inc jbe jo ret stos stos adc stc stos mov mov dec mov inc cltd setl test test jno lock mov insb jecxz pop js ret ljmp das loope pop shll sti notb mov pop pushf pop (bad) insb icebp cmp mov ja xchg movsb mov jp pushf jmp orl xchg mov mov aas imul call hlt test int3 or inc std push and add scas or push push lcall pop or or leave adc mov jl cmp pop xorl mov push stc testl lock pop mov cmp popf mov xlat sarb sbb ret in add push stc adc mov cld lret push lahf pop sbbl in pop mov loop pop or dec pop pop fs cmp mov sbb out sub (bad) lods mov cltd (bad) push in imul bound movsb mov dec jne add ret lea dec mov bound cmovo sub jecxz das nop jne adc fldl mov mov inc mov sub jecxz mov xchg ret mov and shrl outsb lcall xor test mov ret and pop (bad) xlat (bad) or mov mov iret lds lret std lahf cmp test sahf push test mov push inc or cmp inc ljmp mov inc adc call addr16 sbb in loop mov jecxz xchg test dec mov fbld and xlat sbb and iret (bad) cmp ret out and cmp jmp fbld (bad) xor out mov mov and sti pop ljmp push inc cmp cmp andl xor and sti push sub mov pop sbb mov and and pop cmc sahf adc fs sahf mov (bad) fbld pushf adc sub jmp sub orl (bad) jbe scas cli aam iret mov out (bad) dec push addr16 or xor (bad) and movsl ss mov mov iret xchg adc xor (bad) mov loopne xchg xorb ja and icebp pop mov cmp add sti add xor pop sbb fiadd lahf mov stc inc cltd pop dec enter nop mov mov cltd hlt inc sbb xchg sub in cltd add xchg mov sbb dec insb (bad) sbb imul jno rclb lods mov pop repnz push imul push mov loopne shr lcall icebp push mov jne mov dec mov je (bad) mull aaa jmp es dec lea aaa sahf xchg lds xchg adc repz jge mov mov push or shlb push insb mov mov cmp nop jecxz mov loopne cmp sti push pushf shlb mov pop shr bound das pop out addr16 mov jbe call fs mov push add inc movsl or les fadds (bad) popf in cwtl cltd and pop mov repnz or (bad) les fldcw dec add inc adc pop imul add test int3 rcll mov in lds and ss mov jb jmp out mov adc xor hlt pop xchg mov dec scas jns and or lods scas (bad) jns xchg or sub jle mov lock inc inc repnz fldenv std xor mov popl rorl dec add push sub mov cmp xor inc or mov (bad) jl rcrb pop dec (bad) cld mov and and leave mov (bad) sbb outsb adc mov stos jl xchg push test int3 cli mov xor xchg popf lahf enter cwtl inc cwtl cmp xor mov push stc add mov popa js jb xchg cmp pop fnstenv outsl les mov adc (bad) (bad) xchg pop jecxz cmpsb inc cmpsb test xchg cmpsl ret insb jecxz mov fwait push stc clc aam adc cmp mov fisub pop lahf mov sub inc mov inc imul into mov shlb dec int3 fiadd cmp icebp xor (bad) jae or sti or nop cld cmp xchg popa inc adc cltd push pop js mov popf push cmp push fnstenv xchg imul add test jecxz xor (bad) cmp sub lahf fwait push mov adc jae into sub cmc mov pop and repz leave imul data16 or loopne daa mov lock adc mov xchg fucomp jns add aaa mov shl (bad) leave adc (bad) (bad) cmp mov bound je rorl xor add cmovl iret xor imul cmp lahf imul pop xchg out mov fcoml xor (bad) mov pushw lock mov in mov aaa inc pop mov test pushf scas ja mov push lahf inc gs (bad) sbb xchg xchg sbb punpckldq or or int3 and push lock push and pop ret mov xchg cwtl push inc js pop mov xor inc push fnstsw js cld mov leave mov mov scas (bad) sbb mov in dec ja and es inc mov insl lcall sub and hlt outsl xchg pop ret and ret xchg pop dec outsb or in adc push add and pop jb jle ja gs adc cs mov stc icebp add dec pop add cmpsb and cmpb inc cs out inc push xchg mov xchg test movsl clc pop roll sub mov mov leave mov int cmpsl mov dec shl lcall insl jle dec push bound xor cmp test or inc movsl aaa rcll aad aaa cmc bound mov dec mov mov xchg icebp mov in stos movsl cltd cli pop stc jno fstpt movsl cld mov adcl movsl fidiv je stc mov (bad) push (bad) mov test inc popf pop dec scas pushf add (bad) enter pop xchg cmp inc push mov imul inc xor sbb cld mov ret cli mov mov loope es jne lcall dec lock mov sub jb aaa inc loope lods mov xchg aas call mov or test call into and mov mov mov fwait sub fbld mov mov mov sbb pop inc cmp cld dec inc mov mov dec pop roll inc jns cmc mov cmp adc mov inc mov jl scas lcall sti test stc pop cltd mov popa movsb les add jle fwait mov sub mov mov sub shl into jb pusha xor xchg enter cwtl sbb xchg test mov adc ljmp loopne andb jo cmpsl (bad) jmp dec (bad) xchg xor cmpsb icebp daa adc repz cltd or sbb movsl pop (bad) in cld inc stos call or sub dec pop cmpsb mov pop in scas loopne cmp xor notb loopne inc bound dec adc rcll lahf xchg out mov roll roll ret mov inc adc lret and mov sbb sahf aad mov pop (bad) mov out jne and sub or xchg stos subl (bad) xchg mov ret or pop stc adc cmp (bad) lea in mov es sti inc (bad) pop mov fldenv inc xor fisubl xchg (bad) or orl shll test ds cmpsl cltd push call jmp lods roll xor lds dec scas mov add or inc pop sti sub enter pop fbld outsb xchg lods shlb dec inc mov loop shll ret fwait cltd mov iret mov (bad) mov dec push arpl (bad) add cmpsb popf scas inc aaa int cld inc add dec dec fwait xlat jmp mov imul movsl xor idivl outsl test les mov insb ror push popa xchg push (bad) sbb subl fs (bad) fdivs in stos push in mov ja xor add movsl lcall fdivp (bad) aaa leave gs addr16 push gs push pop mov pop imul in in daa inc mov adc mov push arpl jnp cwtl orl or cltd add faddl aaa pop cltd adc sub xchg (bad) mov push imul pop mov adc es addr16 push lcall push scas and and es pop (bad) es pop fistpl test int3 jo push sub xchg push mov cmp imul sahf and mov jg shll push cmpsl popaw cltd push nop jb cmp test jle imul imul daa je bound mov sub mov popa cltd and roll (bad) sti adc insl (bad) add inc shrb shll jb icebp stos cmpl sub xchg cmpsl pop movsb notl jbe or sub out sbb imul add daa scas (bad) add and push ret fld pop adc mov jecxz dec arpl lds or xchg jge mov or pop insl or icebp sub inc movb inc shrb imul jnp adc (bad) inc mov rorb cli les in iret sahf aaa js mov mov in or (bad) in shld dec push in sub xor mov insl sti lods cmpsl leave sbb pop jmp cmpsb ljmp lods sbb mov insb sbb gs adc rcrb pop pop arpl hlt cmpsb enter jg inc (bad) fistpll outsl stos and push dec adc pop cmpsb xor xor (bad) push or inc fwait dec data16 mov movsb xchg lahf gs sub clc andl inc movsl lea or aaa push sub ljmp (bad) inc pop xchg cmp std cmpsb push push xchg pop in aad into pop inc mov imul loopne lods (bad) mov fwait lret jne mov (bad) fldt pop aaa and dec loop mov and jle ja aad rcll je sbb aaa inc frstor jb pop cmp fcom cltd lods mov push imul xchg inc dec or (bad) repnz adc pop pop loopne int cmp mov mov xchg dec inc or push jmp mov mov mov les popa in fs mov mov push in stc cltd in inc scas test adc push test lea add mov dec popf fisttp xchg mov cmp pop fs out shrb sub and and mov push add jae fucomp daa add fisub imul jg dec es insl jge cltd or inc xor dec sbb dec and xlat pop nop repz mov add pop vmulpd movsl add adc mov arpl or and scas cld aas jg aam push push gs out sub ror pushf mov loope lds xor hlt or dec push push (bad) mov adc or and mov and push mov mov cli inc mov cmpsb cmp jo dec cmp divl jecxz sbb dec push test xchg mov cmp push mov movsl or test lahf adc dec and adc arpl imul jmp repnz add mov jns mov call mov pop test imul add dec and push push cltd dec xchg ret lock punpckhbw sbb jl push outsl in loop je add or mov lret scas mov inc mov or in mov inc adc jo inc jnp jno or sub shlb lods sarl aad sti frstor fldenv aad push popa pop or movsl adc cmpsl leave xchg inc mov popf mov ret popa pop (bad) xchg dec jne jb rorl pop cmp add mov mov fbstp and mov data16 out pop and sub pop (bad) (bad) cmp sbb insb out int jno jecxz sub jo (bad) xorl pop les sub add test cs mov fisttpl push sub or sub and cmp push xchg fstps push das adcl mov repnz fnsave inc dec mov cmpsl pop dec daa inc sahf mov je jp xchg dec jmp stc (bad) lret and mov mov cs pop mov (bad) xlat test cld icebp sbb (bad) cmp or mov sub stos movsl and loop inc roll fdiv popa and mov or arpl into out push out sub divl sub fnsave mov nop ret sub popf out lock sub mov pushf bound add sbb sbb bound rcl jns (bad) push add mulb je xor mov or rol jns push dec dec pop jecxz xchg cltd lods and push jecxz adc insl aam repnz adc mov in mov jg loope jge cmpsb jnp xor int push shrl pop dec push daa (bad) mov movsl data16 xchg insl mov jecxz pop mov pop (bad) insl mov adc movsl mov in out jo mov mov test fwait mov int in adc push pop mov mov cltd negl pop (bad) call cmp out cmpsb mov push jo jecxz cmp sub push aaa inc loope inc mov jmp mov cwtl dec daa and adc cltd sbb add mov scas lahf lods in int mov shrl repz imul loop inc pop lods mov pop xchg popf sbb pop cmp xor in arpl mov jl stos mov mov lods mov mov pop popa cmc or mov dec in adcb cmp mov ficoml es sub mov mov movsb adc sub pusha mov test mov stos mov pop cmp mov popf mov imul fwait jmp jle mov (bad) ret mov repnz adc ss xor cmpsb xchg mov adc sbb cmpsl je add pop xor js jno xchg in test stos pop xchg int3 sub inc pop (bad) fnstsw push cmp mov icebp icebp pop jo out push push push ljmp and fnsave loopne call js loop,pt imul mov mov mov cmp inc xor in popf movb mov mov clc cmp pushf mov cld imul (bad) cmpsb in mov scas cmp inc pop stc pop dec add cli xor sbb lret test xor loope jmp out dec cmpsb imul std es jle and jecxz pop mov sub adc xchg xchg inc xchg cmc pop pop cld pop jmp adc in icebp in pop jns fdivr push inc mov frstor adc movsb insb mov cltd popa mov jne xor pop loope mov dec pusha lcall xchg push cmp mov or sahf jae xchg popf push or int mov xchg pop push pop scas movsl in in movsl sbb out sbb jns push sbb test sbb mov pop mov and push les cs loope mov inc in mov xchg sbb mov call (bad) push and and cwtl mov ret push imul int xchg mov out movl stc rorl mov enter mov or jb fsubrp inc mov push adc xor lcall or fsubp mov sarl imul data16 xchg xchg mov adc push adc dec call mov ja hlt mov (bad) adc mov xchg mov push cld repnz and sahf outsl loop lds lea mov adc pop repnz or sahf fsts (bad) jns ret sbb subb pop cmp ljmp mov add mov leave mov adc mov cmp pop lods and pop mov mov mov outsb jno jns fs stos lods mov mov mov negb or sbb or out (bad) push shrl jmp pop (bad) lret std xchg pop lock mul cmpl or cmp or movsb mov push push push sub sti in mov add mov cmc cmp jl and pop insl or inc push jnp ret lds sub jb pop rorl cltd and push mov jae test xor mov jo mov push das pop xchg dec and mov cmpsl mov (bad) (bad) imull mov fisubl fldl dec inc mov lahf jle xchg (bad) repnz ds mov sahf in imul mov xchg leave (bad) sarb popa cli loope inc cmc nop xlat pusha mov jae mov push cmp mov popl or popa fildl xor xchg imul arpl add in jle addr16 sbb mov and test or cmp pop (bad) pop pop xor mov inc mov insl arpl mov xor (bad) bound adc (bad) lret call call dec nop shll fdivl push or dec push test add pop sub pushf jecxz xchg inc rcrb test cbtw mov mov cmp adc and mov cltd shlb ret dec lret fcoms pushf xchg mov xor rolb test dec and lods cld pop mov iret mov test jg mov jnp fs jl pop xor jns (bad) mov mov add mov lahf cmp sbb push cli xor imul cs test popa mov sub xchg jbe out pusha add mov sub xchg lret mov pop inc cmp pop test xor insb (bad) jns mov (bad) xlat mov mov add sti pop cmp (bad) addr16 cltd adc xchg mov and stos mov pop add movsb pop jecxz xchg in xchg arpl push mov leave adc lahf mov es into mov daa xor shrb js mov or andl sarl mov push out daa mov pop mov adc push inc (bad) pop imul dec push leave and mov mov xor sub pop mov rcrb es mov std pop xor orl mov out push scas cld and push mov sbb shrl xchg (bad) nop lds mov loop loop scas mov xchg aad inc mov xchg or cltd fdivr fidivl stos mov mov adc out dec out fidivr pusha je fs loopne and jmp pop cltd movsb mov imul cmp dec inc or in and leave pop daa dec and push mov cmc push popf rorb int js cmpl inc pop out or leave test in movsl mov call ljmp in xchg add sti push cmpsb or jo (bad) hlt shrb addl mov mov xchg daa sbb push mov popf mov pop iret mov fistp out jns stos and inc push mov sarl lret mov mov sahf cmpsb push int or shrb out outsb inc or jae je stos and dec sarb nop dec mov cmpsb pushf mov cltd fidivrl or add pop cltd mov xchg lea push add jmp push mov (bad) cmp and fiaddl mov es loop cmc adc or loop test stos mov lock and cmpsb inc and aam jmp cmpsl shrl push cmpsl jne aad dec fidivr jmp xor (bad) mov mov inc std inc mov push popf jg pop icebp movsl sub inc cwtl mov mov jnp fadds pop inc mov mov and test lock dec sbb mov stos adc (bad) xchg mov push xor xor imul shll cmp in pop cmpl inc out jo call xor mov jmp (bad) xor cld sub cmp xlat mov adc mov adc fwait mov leave ret mov ljmp test call xchg aas inc scas rol mov push stos cld mov loope push insl push mov jg es pusha pop cmp xchg pop inc outsb out mov xor mov arpl lea pop (bad) add jle fwait or int mov cli jae xchg cld pop out lea mov int3 ret pop mov (bad) adcl pop pop xchg data16 mov mov xchg into scas pop popa xor ret pop not fs int push das insl std pushf sahf dec repnz cltd orl and mov inc fnstenv sbb push xor dec repz and mov outsb iret lds (bad) into ljmp (bad) lds cltd or adc cmpsl (bad) xchg pop mov fild jb xor std aad sbb inc or mov adc pop sbb stos cmpsl xchg inc or imul sub jo inc cmpsl mov xor into les mov sub or mov dec xchg or test mov daa sub fstpl mov and push aaa sub ficompl pop bnd popf pop lock sbb jae adc sarb rcr loope data16 xchg mov fwait jecxz xchg cmp movsb fcomps dec cmp adc adc mov dec or push cmp mov bound jb inc and pop mov lods jbe push cmpsb sti je adc int add push mov leave mov aad jbe (bad) jmp subl adc test movsl or cmp pop add fdivrl shr adc add cmp xor lahf add and andb out push test test lret mov inc call xor jecxz repnz pop push adc test (bad) loopne xor jle stos std pop xor xchg mov cmp push sbb (bad) pop jp mov ljmp xchg lcall xchg and dec cmp sub lahf mov add es (bad) cmp scas stos cmpsl adc scas inc cmc cltd (bad) push pop cmpsl lea push bound or or and test cld cmp fnstcw jecxz dec inc orl es and xor mov adc sub push pop ret sbb (bad) movsb cmp mov xchg mov shl fnstcw imul gs mov or mov test or mov jns mov lcall movsl and mov sbb stc imul insb jecxz and lock shrb jae jl clc xchg scas add loop scas mov ds xchg icebp clc xchg in push outsl jns (bad) pop ja dec call mov movsb adc jne enter pop stos sarl mov (bad) mov sub mov int3 gs mov fldcw jcxz cltd test push push fisubrl mov mov cmp jecxz inc rcrl mov cmpsb loop (bad) sti xchg xlat into mov jle loop add mov popf jge inc or (bad) lret adc push fs push jnp or pop jno (bad) std mov popa sub jns shrb mov pop rol mulb cltd xor mov bound mov mov cmp dec mov pop sbb mov add inc popf or push xchg (bad) lahf mov mov xor fadds mov cmpsb ss mov (bad) dec faddl cli data16 push jno jge hlt insb push imul xchg jmp xchg push mov lahf push xlat xor pop jns sub sub pop xchg movsb cmpsb and nop je lds add and mov cs pop decl popl loop outsl mov dec push cmpsb mov hlt push adc inc mov jnp or test adc xchg mov cmp and or adc mov scas jae push or (bad) arpl or ja call stc mov mov push jns out int3 sbb mov sub movsl (bad) (bad) mov push mull es scas (bad) mov (bad) add das jb dec jmp psubusw mov xor icebp pop movsl inc xchg sbbb ret dec mov sbb xchg push out jne imul mov push push and loope adc mov mov dec dec add and cltd push out sbb les test in mov bound mov inc lock cmp dec scas lock arpl (bad) imulb loope inc js inc dec ja cli mov push jecxz sbbl cmp mov xlat loop mov inc adc mov outsl in xor push add lret (bad) imul inc xchg xchg or dec lods bound imul dec or pop call and jge mov mov mov cmpsb out scas jnp test inc dec pop pop lods es testb jge inc scas dec loope fcomps sub cmp stos xor dec xchg mov jae mov popf int jge pop mov cmp jl outsb xchg mov les adc xor scas ljmp mull dec xor bound lret insl xor push call inc jne cld ror loopne (bad) cld lods cmpsl adc popf push sub bound jnp inc sub xor cmpl push or negb cltd sbbb popf mov fistpll xor xor hlt cltd mov ret cld movsl pop pusha mov loop push shll and mov pop mov adc mov xchg mov sub (bad) sahf nop xlat inc mov pop jle (bad) jge mov imul mov cmp data16 dec pop sub push dec (bad) mov leave ja push inc cli cmpsb std mov cmpsl shlb jmp scas jo loopne cltd mulb add cmpsb sarl ja and shll mov shl ds sub xor cwtl mov mov pushf jns push leave insl out movsl mov mov popa xchg xchg pop lods sbb cmpsl push int mov or mov adc fwait mov loope scas (bad) mov xchg (bad) in stos mov loop jno jp xlat and jle sub push and dec or clc xchg xchg (bad) fdivrs mov repz lock xor divl mov push mov inc lret bound inc push loope mull mov mov mov in js cmp mov testl or test mov mov cmpsl sarb movsb subl inc push push lret xor lea mov test daa movsl xor jg jmp dec jno or pop mov xor mov movsl ja or cmc inc loope stos movsl dec in into loop adc pop mov sahf and cltd jns adc imul xorl mov mov lock stos mov mov leave or test outsl in imul mov push mov movsl mov push mov mov pop mov movsl add mov gs outsl and mov mov stos test out mov mov fwait enter sub xchg add pop pop mov jecxz call xchg xor nop cmpsl push (bad) call ret loop lret jg mov cmpsl mov push xchg stos mov cmp push sub inc and jge and out iret sbb mov mov xchg xlat test and mov sti test icebp or push jnp sub xchg ret and adc mov mov test popa lahf mov sub out (bad) pushf xor jmp hlt mov pop (bad) mov and jecxz mov mov mov jno jae inc adc (bad) cli jb add jns ret inc leave mov out (bad) hlt aad hlt sarl repnz and imul es ficompl lea mov mov mov (bad) mov mov movsl hlt (bad) fst cmc sbb dec jnp mov cs add icebp imul add and mov mov dec cmpsl test lods jae push mov inc jno fnstenv mov movsl jo loope inc lods pop addr16 es cltd push sbb jno fisubl popa mov pop mov xor jmp nop ret sbb cmpsb xchg (bad) mov fs cmp nop shrb aaa mov (bad) fstps sti movsb test mov adc push cli pop dec jmp pop das mov sub subl cltd push add aad dec xlat lcall mov fwait xlat out push adc jns shll mov movsl (bad) pusha addr16 or sub test jp inc xchg (bad) les xchg out and fidivr pop mov cltd (bad) in mov jns inc inc mov lret movsb push xchg ret popf lock mov inc pop mov mov das addr16 clc and and cwtl mov jmp rorl adc pop adc inc adc bound rcrb movsl xor jae sub daa and mov mov dec mov dec movsl cmpsl adc cmp mov dec mov mov dec rcrl mov mov data16 jle pop addr16 mov mov loopne dec fldl inc stos daa insl repz mov xchg inc arpl sub sub mov or xor (bad) out call lods (bad) in mov cmp xor mov ja (bad) inc gs sbb xchg insb mov mov and and cli or scas out daa mov jge inc add loop repz dec lret push fisubl xlat ret imul inc sti mov mov jp mov dec add out popf pop pop mov cmpl xor inc rcrl dec jns adc push xor dec and dec popa ljmp or xchg imul mov add out push inc movsl mov jge xchg xchg mov test mov js imul fldt mov xchg sbb mov and loopne aas and imulb ret push lock mov cmp notb push ret call test imul mov mov test popf pop cltd out inc pop in add cmp iret dec pop clc repnz mov daa jecxz jl add mov mov je sbb mov cld test das dec ret bound push inc mov ficomp sub or dec std movsl mov mov mov insb adc sbb sarl gs xchg mov sub cmp jg orl movsl das pushf cmpsb sub lret cwtl insl pop jns mov sbb mov aam cltd fdivrl cli je (bad) dec and pop dec pop xchg mov mov add fisub in and ja sbb ret daa mov inc sub mov ret test rcl lahf sub movsb test mov xchg cmp adc js enter aaa push stc pop pushf mov xor rcrb or lahf mov inc call xchg fwait clc xor insb (bad) jne mov pop (bad) dec arpl loope and (bad) loope dec xchg sub ret pop vmovss dec adc push mov inc sbb push ret lret or loope inc js cltd mov mov mov (bad) pop push xchg mov sbb loop icebp or enter stos push sub mov mov lock out mov fnstenv xchg test adc sbb and scas xchg mov mov aad adc or and addl andb push or rorl outsb lcall jns xor clc pop daa rcr push (bad) cld lds imulb mov leave mov int xchg xor test jns pop sbb push add cmpsl (bad) ret cmp push rcr inc les cmp inc enter (bad) shr in jno lds lahf mov mov imul xrelease add repz cmpsl pop cmpb and inc add mov push and xchg pop xor icebp push sti sub insl and mov outsl mov xor cltd xor insl (bad) int movsl dec stc test in mov jmp into adc pop dec aad add daa mov cwtl (bad) xchg repnz stc mov les mov mov and bound xor inc push and dec stos mov xchg jb jae pop mov push out negl mov dec ret nop fisubrl popa inc xchg and fld1 push (bad) and xor or lods shlb imul in xchg inc adc mov out lods adc ss pop sbb loope or dec daa sub xor rorb pop repz pop sbbl mov adc mov or pop push imul scas mov lds in movsb sbb mov fnsave jno adc aaa (bad) mov inc adc sub mov cltd negb addl mov inc shl push mov dec imul cmpsl cmp xchg push test xor dec cmp pop xor cltd mov lahf mov mov cs push bound adc in push outsb add xor fisub mov sbb dec fisubl shll sbb sahf mov mov adc popa mov std movb dec fsubl mov out outsb in mov mov inc mov push push mov xchg (bad) rcrb flds sbb js jg cwtl cltd jne cmp (bad) push mov sbb lods repnz or jns movsb pop mov and xor sbb lods pop in lods loopne jae sub xchg fdivp shlb dec lds or fnsave mov (bad) dec cltd jo cwtl dec mov sbb xor outsl or mov xchg cmp adc adc xchg mov mov xor loop mov inc xchg push daa mov mov push dec mov jmp dec popf test xor pop mov sub int3 loop and dec mov insl loopne stc mov cmpsl mov lret test in fs and (bad) push mov pop repz mov cltd mov sarb stos or fidivrl push ret lcall lds mov xchg les mov xchg and dec pop push mov inc mov test jecxz push push jge dec imul pop adc push stos cmpsl pop inc adc xor jo mov jmp cld rcll imul adc add icebp stos lds iret mov xchg sub mov lahf mov cmp inc xlat mov out mov mov and in int3 mov pusha push dec (bad) aaa push push aas xchg xor jnp (bad) sub mov rcr jmp les push dec imul mov arpl mov xor dec or mov and jmp rcll clc mov mov shlb mov repnz and movsl loope jg xor fcmovnbe test fcompl shll (bad) cltd mov mov xor ret sbb mov add xchg inc adc mov into mov aaa es cmp or jge mov loop andl hlt popf and test test sub xchg pop es cli sbb or cmpsl mov les icebp js loope xchg xchg fbstp fucomp mov stc ljmp test mov cmc mov mov shrl adc push pop repnz mov sti and sub outsb mov mov mov lds inc test addr16 jbe mov xchg rorl loopne push jle sbb mov out mov push lahf sbbb lret jge in aas pop mov mov icebp pop adc mov les ret mov pop adc dec mov inc cltd mov fs movsl dec cmc arpl mov cwtl incl sub push icebp xchg lcall fidivr jbe imul roll mov xchg test cmp js lea or aad (bad) hlt mov or mov das repz xlat and mov mov push pminsw push cmp fnsave stos es jnp fstpt mov cmp lcall loope pop cmp lret add mov cmp fnstenv cmp insb xor lahf adc push xchg dec cmpsb and dec lds mov mov xor dec xchg lret push mov pushw cmp cmpl dec mov add pop (bad) jae cltd fidivr xchg pop stc xchg and mov pop xchg bound xor cld adc das out mov mov sbb xchg sahf mov stos (bad) mov fnstcw cwtl mov add xchg dec stos cli sbb mov outsb dec push mov or inc sbb inc adc and fwait leave sub shll dec or sbb pop push jl aad mov sub mov push add adc or movsl ret fidiv in lea or in push aaa dec call ljmp (bad) xor dec cmovbe lds jo dec push negl imul or arpl push outsb jecxz call loopne hlt ret or outsl push not clc jns enter mov leave aam js mov or lea rcll movsb stos push stos shlb xor call sti addr16 mov xchg mov ljmp in (bad) in dec push cli push sub out rorb mov dec inc or rcll sub cmp and sub jae add pop std movsb or ds adc call adc inc int fwait ret push (bad) arpl sub add sbbb adc mov rol mov mov sbb mov adc repnz icebp sbb and sbb leave ljmp js (bad) mov dec mov lods les call mov dec movsl mov jns mov push add pop add xchg (bad) sub push xor xchg ret jmp imul pop movsb jle mov push mov mov int3 fs push pop jecxz sub dec push movsl clc jbe fidiv out fstpt jecxz xchg sti mov mov fs mov out xchg or clc mov lea mov jne fmulp push dec push ljmp mov in imul jmp mov in sub pop repz add sub shrl pop sbb scas (bad) xor add nop pop cs loopne dec lock xor fwait loop jle pop pop clc andl mov daa mov cmpsb push mov xadd and vpunpckhwd bound shr pop pop (bad) and mov mov adc inc sub add and shll lret rclb inc sub mov push bound mov icebp stos in adc mov icebp cmpsl and scas push pop jecxz inc test popa sub or cmp push loope test mov adc inc pushw dec (bad) jo (bad) nop xchg mov pop or leave mov and inc mov (bad) jg pop mov (bad) mov shll mov push and push pop loope iret sub jnp rcrl imul lahf add fstpt into gs std insl roll jo test mov mov add xchg jae fwait sbb decb insl jmp ja mov cmpsl out or fsts out push dec mov insb inc sub test adc cli add inc roll inc xor int3 out pushf sahf pop fildl mov out (bad) std pop lds or cmpb push add cmp sbb push push inc int xor and loopne bound lret pop xchg mov jecxz push xor rcr (bad) nop jp rcrb xchg daa mov icebp out mov movsl (bad) data16 jnp test mov jg adc xchg lahf and cmp and push sti addl mov lds std jne leave jl mov repz cltd xlat pop push aas aad dec or dec aaa or xlat xchg mov and hlt addb and mov cmpsb sub lret cmp das cltd repz test jb push mov cmovne cmp adc lods cmpsb sti add sub mov mov test aaa and xor in repnz add mov out cmc es adc dec scas dec dec mov scas mov jecxz mov les popa call daa dec and incb sbb out (bad) pop cmpsb pusha js lret scas test inc pop imull xchg sarl jmp adcl xchg push mov jbe addl rorl xchg xor push (bad) mov fldt fnstcw aaa cmpsl iret paddb ljmp adcl or cmpsl push dec xchg test lds pop jo xlat and jge pop and clc nop (bad) cltd sbb bound push mov inc fdiv push push in pop mov dec repz andl and aam jne inc inc inc cli cmpsb jle push dec inc and out stos leave outsb jle data16 call lea push rcrl mov fwait mov mov fsubs shrb mov fcmovb mov ja sbb or outsl lods xchg shlb sub jl push xchg enter pop dec jne bound fild jb in xchg daa sub roll cmp enter or movsb mulb insb lahf pop (bad) out (bad) xchg insl mov jge addr16 or jo jno xlat pop dec call mov jns mov test inc fwait cltd cwtl in scas inc dec mov arpl and fbstp mov ja (bad) sbb xchg pop hlt daa xor stos push pop stc in cld mov inc xor (bad) xor roll mov arpl cmp xlat push and and push push inc nop mov andl mov int3 mov pop dec or mull pop fstps (bad) loop iret and pop js push cmc push xor sub and pop cltd push sahf mov sti jmp inc out mov dec lret andb dec adc cltd arpl mov add dec fwait popa (bad) into (bad) mov arpl mov pusha roll push cltd mov mov pop out pop mov mov pop xor xlat xchg lea mov mov and inc xchg mov pop mov jbe pop dec cltd cmp in inc mov push push push jge out imul lahf dec (bad) mov (bad) xor xchg js mov es sbb mov imul mov mov leave sahf xstore-rng cmpsl inc mov (bad) aaa sbb (bad) dec xor lcall cltd mov fdivrp mov fisubl pop mov push add insl xchg aas cmp pop lea mov lods and pop mov jmp aas (bad) xlat popf or pop out mov mov int mov push xor les pop xchg mov out std movsl mov xor lret in popf jne (bad) std mov jl sub or push pop addl xor cmp mov mov dec jo mov sub inc in mov outsl loope lret mov scas mov sub pop mov push push rcrl push cmc imul lds lock out movsl stos loope dec in mov int in mov sbb repnz mull imul mov jae sbb test fsub push mov mov mov mov dec inc cli pop lahf ret (bad) les jb aas push (bad) je imul and ss inc outsb mov cmp insl out and add ds lock scas lods mov movsl cmp cltd xor push sti mov cwtl dec (bad) stc xlat inc xchg fdivrl in stc inc mov cltd clc mov sahf mov out test add sarb popf cmp push push movsb mov xchg inc or xchg in mov pop std xorb mov sub xor (bad) (bad) nop add sub and popf inc (bad) mov mov stos inc and mov mov add jno fwait lods or and jl rol xchg fnstcw loopne or ret mov mov or shlb std inc pop jns push imul inc and mov pop sti pop sub xchg or shrb scas lea cmpsl jp loope call mov push data16 or adc setg outsl (bad) sub push cmp push push lea pop mov scas loop lock dec pop sti jae xchg iret mov loop gs lea pop lcall and stos mov mov sbb mov lds xlat push xchg js loope push pop jmp jecxz mov (bad) push mov inc adc mov cmpsb jmp rolb jmp xor pop jecxz movsl scas lcall test mov adc push inc mov lds add xchg xchg xchg jl xchg popaw ljmp pop and xor xor jle movsl (bad) push add outsb push sub xlat lahf jg rclb sbb out inc std xor xchg les or imul ret mov sbb test jbe (bad) xchg mov cld lds jmp cltd adc push (bad) int cltd pushf jno icebp push dec mov fadds xchg jmp cmp addr16 inc cltd aas adc xor inc es mov mov in (bad) pusha imulb mov hlt fistl in insb push ja stos push mov lahf cmc mov add movsl clc pop push push ret jns iret mov js jbe mov inc or (bad) xchg mov mov jns insl out mov dec push mov movsb pop sub cmp jbe pop repnz or aad xlat mov bound cli lock cmpsl mov push call (bad) iret xchg aaa test lock mov rorb mov push movsl (bad) aaa test jle adc out in cmovns test xchg push xor push push inc mov (bad) cmc cltd jg fs add mov test jo dec mov inc pop ret pop insb repnz out dec imul lcall daa xchg xor mov dec inc mov fwait sbb xchg js cmp mov aas loopne ret int sub mov loopw iret mov int3 in orl push pop xor and and mov gs sub and les mov bound lods ljmp mov movsb sub ret mov mov sbb mov pop in sub push outsl cmpsl test cmp mov inc jge jle fldpi dec cmp sbb dec pop fcomip fldenv scas jno popf into jp sub jne sub outsb and cmpsb mov aaa xor or add loopne xchg and xchg test adc dec movsl into jae aam bound mov fild sub (bad) iret sub fistpll or fmul inc push cwtl movsl iret sbb dec jg test ror loope enter cltd cmp (bad) hlt lcall (bad) shrl or or (bad) in addr16 dec repz lods (bad) adc pop mov loope push push std iret cmp hlt jno mov subl movsl mov xchg (bad) fisub mov scas mov aas enter xor add ja div xor push pop sub mov cltd aaa stos scas jmp mov push add jp jecxz repnz mov std and lea pop divl xchg mov cmp dec mov mov xchg lds in jg pusha jmp xchg or repz ds mov lea jne mov mov push cmp add or loope adc mov xchg mov into pop sbb (bad) pop cltd fucomp dec and mov mov sbb add outsl push into les pop movsl sbb cmp jno xor jo jae call mov xchg mov movsl xchg (bad) mov cmp mov fistpll js xchg mov lcall cltd and mov test inc stos enter mov fildl cltd cmp pop cmc mov sub xor jg,pt push mov mov repz in sahf cmpsl popa mov popl enter fdivrl mov loope cmpl push push push clc and dec js lret movsl push mov or test mov std push mov addl shlb aaa test jns cld and pop pop testb pop imul adc aas xchg int jae fs daa out and loopne lock adc movsl (bad) imulb inc adc fsubrs and and scas (bad) icebp int3 aaa xor pop xor scas sub inc inc (bad) dec jo jns pop rol dec cs mov (bad) pop sub cmp push mov push mov cld mov out xor mov scas les call aad imul ror push gs mulb jnp pop fsubs add pop mov push outsl pop out cmpsb cltd dec test pminub int xlat les mov insl arpl sub pop push add (bad) js loope cmp gs test cld sub xor cmpl push (bad) in clc and jecxz dec push out xlat xor add pop lock movsb jp adc add inc (bad) pop (bad) mov movsl jns or int insb push adc cmpsl inc mov je int3 pop mov mov andl pusha imul pop test mov mov cltd push clc jo pop add push loopne jp xchg (bad) xor loop add cmp popf push mov stc jns sbb pop jmp (bad) roll sarl mov nop test mov into pop mov cmc movsl mov cs enter xlat or sti mov pop pop roll inc adc scas add inc mov mov js addr16 imul sbb xor daa fcmovbe inc mov xor mov in mov sbb ljmp xor mov dec adc lods stos movsl (bad) jns outsl int3 (bad) fiaddl add cmpsl mov sbb (bad) xchg xchg adc mov test sub ja in cmc sbb fistl xchg popa mov mov roll sahf mov stc add insl dec or jae push jb mov or out movsl cmpsl sbb push mov cmpsl mov in fs push stos (bad) mov push mov (bad) xor dec mov dec ja stos (bad) dec inc addr16 xorl icebp mov and test and movsl mov bound or lret test mov iret inc movsl faddl daa and scas push mov mov add sub cmc lods cmpsl fsubrs sub or adc sub lahf adc mov xor mov mov dec lods mov ljmp mov popa cli lret push lds xor xchg mov sahf popf pop std push mov in xor inc (bad) sbb jbe ret push cmp cltd sub dec icebp sub or call mov jne bound sub fcompl and sbb pop (bad) lahf bound mov inc setns adc push les mov adc pop xchg (bad) xchg (bad) xchg adc add out aaa das xchg adc imul mov aaa mov cmpsb push jbe rol jae (bad) int3 dec dec pop popa fisttpll (bad) and loopne lock std (bad) lahf mov stc outsb int in push dec mov mov mov popa out mov add cwtl xchg sbbl movsb xlat mov and lcall insl repz mov jmp cld cmp pop and cmova lret mov mov cwtl (bad) pop cmp mov js lahf cmp xor movsb je dec cli mov mov jns or cltd inc sub popa dec xor in cmpsb fstp inc mov (bad) out loope (bad) jp dec and negl repz dec cmp cltd scas cmp mov inc mov (bad) or cmpsl mov movsb mov mov mov jae xchg xchg adc add and gs mov jmp int3 sahf mov jne in loope outsl sarl or dec js lret lods dec mov (bad) scas movsl push out (bad) push push shr xor repnz dec cli movsb mov adc mov add pop sbb jecxz test push cs mov xchg add adc test in movsl cli xchg mov ret aam sti push js mov sti and in mov call scas int3 jge dec mov insl mov sti (bad) ret sub ss int es pop aad gs lea pop (bad) mov mov mov vrcp14ps push mov and mov mov popa mov lea loop add push mov mov insb ret add dec and (bad) enter push (bad) and icebp cwtl mov dec push andl mov and mov cmp jns jecxz movsl xor ja push push pusha sub sbbl xchg xor or (bad) loop fmuls mov daa sti push lea or dec or and and pop xchg cmp mov mov mov mov hlt insb mov cltd iret incl scas call sub mov pop push std cmc pop xchg cwtl mov scas push aas movsb js in subb call mov andb mov out outsb dec les cmc or imul xor xor mov repz sub add add mov cltd fwait mov cltd imul mov pop (bad) mov push test jo out leave mov je rol nop (bad) cltd lods adc mov fildl mov cld mov xchg ficomp bound mov and or aad outsb inc fsubs (bad) lret fimull xchg add sub rdmsr inc push insl push cmpsb dec loope xchg bound add repnz inc cmpsb and xchg lock cmp sti and xlat out inc sbbl mov mov icebp or dec xor scas mov in mov mov fcompl adc (bad) cmpsb pop mov adc das xchg mov test jl mov data16 jmp push mov aad fsincos (bad) mov and push divl test jle xor sub pop adc mov inc andl sub xchg repnz (bad) (bad) loope dec mov das pop mov jge push dec and imull iret stc and repz and mov adcb and cmp xchg mov adc mov mov ds pop das insb and hlt dec mov icebp popl dec scas mov and cmp cmpsb mov jno mov in or clc loopne mov inc push jmp cs mov cltd ss rorb dec jge fucom fmuls repnz les jle fstpl or addr16 mov cli pop pop mov jo test xchg scas mov js pop loop call or loope insl pop mov add cmp cmpsb mov js lret and scas or xor mov int pop jnp ss stc cmpsl das pop dec adc mov xorl inc or inc pop add imul gs cmc mov jg jecxz dec jb xor mov dec inc sub repz pop cltd sti ret dec jg adc cmp es retw mov xlat test pop sbb mov outsl ret xchg jns,pn mov add xor in jns mov jae daa sbb mov bnd mov jle mov xchg pop lock add mov fwait xlat cmp movsw hlt fs ret mov mov xor mov xchg stos scas push or dec or xor (bad) out lods push dec add nop sbb lcall lea jns (bad) test je int xchg mov adc and ja or es mov mov cmpsb add mov icebp addl imul ret push fnstenv dec repz jmp movsl pop xor and in xchg cltd add arpl les daa push adc cmp icebp cmp jns sub imul mov std aaa pop insb inc pop jo mov sub add mov vfmsubaddpd jecxz pop fimul (bad) addr16 mov sub icebp cmpsb das or mov mov lcall in loop mov push mov dec in push (bad) jno int3 lea movsl xor mov lods mov pop pushl mov mov dec lret in sbbl jns insb fwait mov add mov js xchg pop mov jnp cmp mov mov sub cmp mov pop xor fsubs add or fdivrl push dec inc sbb inc adc cld daa cmp inc push add sub js mov mov sbb fildl mov in sub icebp xchg cltd movsl stos and scas mov insb mov ss sbb push je push xlat (bad) push std sub mov add lods and lcall cmc mov and aam lahf (bad) leave test pop push dec xchg cmpxchg jo xor jge xchg mov xor lret popl ret push (bad) sbb and jns or add pop dec mov cmpsl xchg dec aaa (bad) mov or popf and xlat mov xchg cmp adc aaa jo and ja out bound jo mov gs mov int mov sub and push mov in mov fwait imul lds inc jl fs pop mov movsl jl ret push adc gs into (bad) ljmp decl push repz movsl pop dec and and arpl rolb insb mov shll imul ror aad mov adc popa repz pop mov adcl xchg mov pop xor mov repnz pop inc adc subl (bad) into mov call and xchg mov dec add clc mov dec mov aas mov lock xchg add pusha sub add mov ficom sti mov xchg mov push sbb aad insl arpl iret fistpll xchg (bad) icebp xchg ret dec cltd test aaa inc cmp xor (bad) cmpsb inc inc sub mov scas jnp cld mov repz popa cwtl mov into es subl movsl or fcoms sbb xchg aad xchg mov push adc mov xlat mov mov xor pop mov sbb loop mov cmpsb xor jg rclb dec rorb sahf xchg pop mov push mov add imul das mov mov in stos push fmuls cmc rol mov lret test scas movsl daa inc dec sbb sub leave xchg cmp xor sub into cmpsb in or mov mov add jp lods cmpsb out dec mov mov lcall dec mov xchg arpl pop dec (bad) cli mov jne jo (bad) or mov mov fistpll mov push jmp mov int3 dec es cs adc js pop ret cmpsb icebp aam orl mov jns (bad) cmpsl adc pop repz iret (bad) dec dec mov (bad) enter sti or jle movsb mov iret (bad) (bad) in or dec mov popf mov lds push add inc or adc cmp mov mov and jnp insl dec daa sub adc add add cmp sbb jecxz xchg adc cmp repnz fbstp dec aam sar cs iret mov add cmp (bad) sub cmpsb sbb sbb mov or daa lods fwait xchg mov in insb mov call movsl or mov jns jmp hlt jmp daa test popa or or adc bound cli fdivl dec scas mov js cmpsl mov test popf mov push mov jge inc in movsl fidivr cmpsb sub mov test xchg adc mov cmpsl mov leave (bad) mov bound (bad) loopne mov push cmp mov in imul xchg mov and xor inc jmp cwtl push enter fdiv mov iret mov dec jle cmp pop cmpsl sub mov fdivs jmp (bad) shr test mov inc (bad) ret aaa dec and cmp xchg sub inc push dec stos and lods sub lds and fcomps dec scas mov mov (bad) xor ret mov (bad) xchg into movsb idivl mov imulb cmp ret mov adc xor (bad) stos and sub jno loope push xchg adc in outsb mov mov frstor push pop cld js add lret sbb stc mov mov and loope lds mov adc lock lret add (bad) jmp fbstp and imul sub mov push fistp fldenv jb cmp pop icebp or adc xchg cs mov flds add and insb aaa mov or fnstenv scas adc stos push sub xor mov push insl or jl sti mov xchg (bad) stc mov inc test push popf es push sub push sbb in pusha pop jge sbb xor in xchg mov mov stos mov loope mov and inc (bad) lods repnz pop imul int sub jle fstps mov es inc bound arpl jmp cmp xchg mov leave adc xorl mov mov movsl outsl out je fdivrl sub dec pop ja inc in mov (bad) imull imul mov les fs lock lret and (bad) pushf sbb test sbb call inc fdivrl mov pop push mov add mov (bad) push mov push fisubl mov arpl mov dec add rorl mov pop std pushf pop sub ljmp das pop sub jae daa cmpsb mov sbb aam sub dec dec add xor lock lds adc cmc fnstsw mov test cld aaa push adc loope push push add pop insl out inc bnd and sub dec xlat mov cmpsb push dec sbb leave mov jns pop mov loope xchg mov pop cmc outsb mov (bad) fidivrl mov imul (bad) mov pop loop popa imull and movsl jle lret mov in std pop ja cmp sti (bad) mov cwtl dec (bad) cwtl ja xor in lea and xlat dec addb adc test cmpsl fwait mov inc and adc cltd loop or icebp adc mov cmp jmp fcompl leave jb push scas gs mov inc mov (bad) dec inc in ja pop ljmp inc cltd mov xchg lods pushf (bad) mov add jns data16 push outsb adc push and mov scas test mov pop das dec push out pop cltd mov dec inc pop mov addb cmc pop std push sub insb jecxz pop aad mov jbe mov mov sub push je xlat fdivs (bad) out insl cld sarb pop imul stc and add test inc mov and in jb inc popa add cmc in fnstcw cmp sbb aas mov lods cmpsb sbb mov sub cmpsb iret mov inc mov movsl xor fildl add shl mov pop pop insb mov jb xchg aad rorl loopne movsl and popf shrl inc pop sub sbb fstpl mov loopne push stos rolb mov push dec out dec insl popa sub mov stos lods add mov and or subb push or dec cmpsl xor fwait mov stos cltd inc adc cld enter nop mov adc (bad) dec sar lret push arpl dec pop mov lahf mov push orl js mov mov or es push sub dec sub jbe fnstsw sub inc or pusha pushf out cltd and dec mov add dec mov fwait sub out ljmp dec dec test aad cli push push jge adc add dec rorb insl mov lea insb (bad) js (bad) dec and iret push mov in pop and lea mov into aas insl pusha mov movsb rcl mov ret lea lock cmp fildl and inc mov pop adc orl icebp sub dec sbb xchg in add jmp icebp pop or ds imul add test loop (bad) push shl add mov test (bad) xor test push xchg pop arpl aad movsl loop push fildll pusha out data16 mov mov xorl imul loopne push (bad) jbe jle cmpsb out int std cmp cmpsb cmpsl cwtl mov lods and flds pop sbb mov and loope mov repz lds jo pop jp loop mov sub inc xchg sub jno push xchg sbb cmc mov (bad) jp mov daa sahf sarl mov aad dec mov ret cmp loop popa dec pop adc cmpsl cmp lock out mov mov (bad) (bad) rcl rolb jnp mov dec in mov lcall dec adc sub in push adc mov sub cmpl jbe std pop leave insl or xor xor xchg test shrb jb xchg (bad) cmc or mov (bad) mov dec mov xor jno or aam push sub cltd icebp pusha mov ror mov inc sub mov addr16 call outsl jmp pusha (bad) pop jcxz (bad) out mov push inc ljmp jge mov mov pop fild mov cwtl mov mov cmpsl sahf jecxz pop std stos lret sbb ds mov jmp inc pop mov and mov adc sbb mov xlat adc adc movsb std gs pop in mov in mov les cmp lcall mov enter mov adc adc loop mov xor dec or scas scas push pop jecxz xchg pop ljmp mov cmpl mov sahf sbb add imul sbb lahf pop mov gs add sub mov xchg adc cmpl pop inc orl mov jp mov test xchg adc lahf aad ss andb cmp inc push mov xchg mov enter sbb jmp hlt push mov bound movb mov and xchg lea sub mov push stos mov mov dec pop mov mov in in mov mov cmp adc mov jmp daa lret (bad) cmpsl mov mov xchg test xchg ret loope imul xchg popa in cmpsb mov or fwait mov mov jne lea imul xchg sub pop sbb lock jl cltd cmp sbb cmp iret and jae sti xor aam leave test andl mov cli int3 mov lea mov sbb fdivs inc rcll imul xchg int (bad) hlt mov bound out in xor lods out (bad) fnstcw fstl daa das scas cltd lods mov outsb dec jnp stos rcll pop movsl cwtl test and mov xchg jne lds out xlat movsb jl out aaa jns jbe repz jbe (bad) sub inc jb xchg jb push cwtl add cmpsl aam sbb movsb test je iret mov and das xchg out mov cmp pop xchg int3 popf ret stc ss push sub mov jbe and xchg adc or pop insb pusha mov dec jno movsl daa mov fs mov sub jmp mov int3 in movsl in adc inc aaa xchg cld adc xor mov pop movsl jb fsubrs push std mov add push in imul cwtl sarb mov xor adc insb jecxz (bad) in cli rep lret scas ja ds xor insl flds sbb sub mov sahf pop mov adc in pop cmpsl mov mov and incb and pop int3 mov bound lock sahf xor daa int mov fidivr xor call jb xchg (bad) or sahf mov test mov pop pop js mov cmp push (bad) out mov jns mov scas jb cmp push mov cltd (bad) (bad) dec lds cltd mov mov inc push insl cmp imulb add or xor mov mov xor dec pop sahf stos movsl push add scas mov jge pop fs mov pop loop jmp fxch mov leave mov dec mov add jp and cmp dec (bad) mov xchg cmp xor jno pop fs cmpsb mov (bad) mov loope xor icebp push cmpsb cmc in std push dec cmp test sbb mov fwait or xor lahf test pop xor or sbb add lcall xor add mov xchg movsb lods iret xchg nop push push gs loop mov fnsave lds and out sub pushf push push and mov and xchg pushl push (bad) push add pop or jl mov mov stc or add imul imul sub push into mov mov sbb push hlt push xor mov inc dec cmp ficoml add stos js in pop into rcrl sbb mov pop lds xor xchg pop popf inc and ss dec mov pop fwait pusha mov (bad) mov cld mov xchg lock stos and mov loopne xchg mov mov dec and push and or mov shll cmp add movsl or aam inc mov stos pop sub je test scas mov add cltd ss pop incl push mov push xchg jmp ljmp mov pop and sbb mulb les or push dec mov repnz hlt jecxz mov pop std inc imul daa into in outsl cltd out imul xlat jle (bad) pop xchg in pusha cmpsb leave jge mov mov or xor insl pop cmp sarl xchg test mov dec (bad) jge and scas cli mov push xor insb mov stos imul jmp movsb xchg pop mov std push data16 je dec cli jb insl jmp xchg fbld push pusha lock js and add es push mov (bad) adc shrb test push and mov lcall mov adc jnp push pop pop xor inc push into add insl (bad) stc sbb test in in fnstcw inc mov lods stc loope imul arpl cmp xchg jge js stc stos adc cmp flds in jg cmp fndisi(8087 mov imul jb out adc sti movsl xor pop inc cmpsl enter pop and and arpl mulb repz mov or mov fsubl popa pop mov mov jae add iret jle push gs outsl mov mov movsl movsl adc in pop ret cltd pop jg mov bound sbb scas js dec (bad) loopne xor mov push jp in push aad test jnp mov (bad) jb call pop xchg aas movsl rcr pop (bad) rclb mov push (bad) (bad) out xchg adc ljmp les rcrl imull ret mov push aam stc iret lret cmp jns xor addr16 lock mov sub (bad) bound nop or jb cltd ret ja xchg mov dec mov pop jp out push and inc jge addr16 mov or not jp or cwtl push sahf jo xlat insl jno mov mov sub lock ret in cltd cmovo xor notl xchg push pop push inc adc fwait stc or inc jnp stc sbb dec jbe dec or sub frndint ret xchg sub negl xchg decl mov mov arpl push dec das aas bound mov and pushf push pop sub movsl mov mov orb iret inc mov push dec add dec movsl cwtl sub mov jg shll js cli mov lcall push sarl pop (bad) xor lret int3 or cmp movsb jbe mov mov mov into movsb or lock jge xor lock dec push xchg jp jne scas test sbb sbb (bad) test xchg mov mov lock cmp mov lret dec mov sti (bad) push or dec xor xchg popf das outsb ret or mov mov jo sub in arpl (bad) inc add adc and shrl mov jno aad sbbl cmpsb lcall and cmp xlat imul adc movsl mov push mov cmp repnz mov pop aad mov or loopne sbb mov pusha shr dec cmpsl dec (bad) stc push dec mull cmp fstl mov cwtl pop aaa icebp sbb mov and repnz push mov dec cmp mov push jae jb mov (bad) xor push sbb cmpsl cmp lock jns decb pop testl fs sub ja out and les cmp sahf inc js or cmpsb lea pop sub movsb frstor pop inc dec icebp xchg lods (bad) cmpsb cmp sahf je and xchg lock andl xchg (bad) (bad) xor daa fwait (bad) (bad) (bad) and inc jnp jle movsb dec fidivrl push shll popa jne bound mov fldcw or fnstenv insl (bad) pop lds cmp dec stos rorl cmc dec aam mov push or add mov mov stos int3 into stos mov aam loope les adc mov sbb fwait adc sahf inc pop (bad) hlt scas mov cmp mov in mov leave mov fcoml cltd nop sbb mov push lea add add test js adc fisubl jecxz call sub add push xor cwtl push fistpll cmpsl dec gs xchg mov inc insb loope in mov mov (bad) push or arpl insb iret mov jb ffreep xchg cltd pop fiaddl roll loop xchg mov mov int xchg lahf jno or push mov ljmp sbb inc imul loopne mov bound and jae dec add add clc pop movsb ret mov fildl dec adc sub push lahf pop scas insl movsl mov fnstcw arpl shlb cmc in in dec jo mov es (bad) or in cltd pop call jno sub pop adc leave int cwtl mov popf cli pop dec lods mov inc jae fwait pop dec push cmpsl mov mov xor sbb lods out dec out ret push cltd mov lods das fsub loop mov or mov cmovbe mov sbb rcrb push stos push add addr16 subl dec mov mov pushf inc ret movsb mov mov std pop cld repnz mov pop aam movsl mov mov loope mov mov in stos cs adc js xor adcl cs in or or movsl rcr push inc ss xchg mov dec sub hlt sbbl jmp mov pop fwait mov jb push lret sbb add xchg mov xchg mov xchg test movsl roll movsl and cmp incb movsb lea dec inc mov mov dec mov pusha pop clc pop in es (bad) xor decl aam dec lock mov and mov mov sahf out or cmp cmp mov xchg mov dec int inc mov mov jne cmp xchg add scas push jmp icebp mov mov sub pop in scas xor xchg fidiv mov loop jge jnp orl mov fcompl or dec mov mov sub out enter sbb and sub bound fcoml orl mov outsb mov add test mov mov sbb dec add in js xor pop mov jb imul pop lcall jle mov adc mov sahf mov sub (bad) loop insb punpckhwd cs ret inc xchg movsl cld add les xor out cmp dec inc adc (bad) test lods (bad) pop iret test mov fwait test (bad) test adc mov ret xchg mov or jbe mov nop or cmp popf aas mov and mov fs mov addl xor aaa cltd and mov int outsb fs in movsl dec test int3 xlat mov inc aad jnp fildl push dec or xor add cmp or clc inc fldenv adc hlt push add adc lret gs imul out scas xchg cltd jge ret mov ss cwtl call mov dec rclb mov lea fwait pusha mov ret in aad sbb mov inc and es lahf fldenv or in jae inc call or ljmp dec jns lods and dec sub aas movsl mov xor inc mov arpl and std lahf mov popa fisttpll cmp cltd pop sahf and ds mov pop imull cmpsb push fidiv test add inc pop out cltd sub cmp dec scas subl jo fbstp js stos outsl xlat mov mov bound mov stc mov cmp lods stos mull mov test sarb mov or movsl push sub fldl loopne xor popa in lock lods mov xchg mov in enter hlt data16 scas andb jns or test add mov pop loopne cmpsb enter leave popf inc cmp arpl sbb ds mov cmp adc ret and mov or insl repnz sub jo jb pop push clc leave arpl ds pusha shll sub cltd outsl xchg (bad) pop cmpsb insb shl xchg imull mov add repz sub push ds mov loopne (bad) xchg fs or mov insb pop sbb and test inc sarb shl push pusha inc jmp scas lret mov or insb push daa jb mov iret call mov jmp adc scas repnz jp inc mov and pop popa (bad) dec mov push pop je jp xchg or mov cltd ss bound icebp jle dec pushf inc xlat pop mov inc cmp xlat cmp mov cmpsb or cmp adc js mov or xor mov jae mov inc rorl outsb inc movsl data16 dec scas loopne and sub in mov sub fwait pmullw loope into pop lds mov mov mov in mov jle inc sbb leave les cwtd mov sub mov ss fwait std pop loope add mov add lret (bad) cli dec pop dec sahf (bad) mov cmp (bad) pop (bad) adc mov jle pop dec sub fcom arpl js xchg in push xchg add out cmpsb ret mov cmpsl movsl push sbb fldt xor add mov je mov test push pop inc mov mov push out xor fwait lds imul imul mov or fwait mov arpl cmp mov js inc enter pop adc fsts icebp xchg (bad) dec das test inc mov stos mov arpl sbb mov insl xlat mov push clc mov or arpl test pop and mov in sub shr ljmp dec lock add or sub shrb pop inc inc daa loop pop xchg pop into adc push sbb ljmp inc mov (bad) bound sti jbe add xor jbe shlb hlt jmp mov add add icebp jnp les pop and jae sub xchg push mov pop xlat cmpsb sbb sbb sbb and inc repnz fstl dec and cltd test or sbb leave scas xor mov std inc pop imul dec adc mov ret mov mov mov mov movsl pusha adc mov lret insb jmp jo fwait scas lds sti mov and and push outsb stos jo dec mov cmpsb pop lea push lret jns add add jns dec loopne pop pusha pop pusha imul or cmp cld and fidivr pop or imul ret push scas loopne push notb and cmp sbb movsl cmp aam jne jbe push or and dec cltd pop repz mov push xchg jle mov dec loopne add scas pop cli and pop fsub bound cmpsl leave pop push das scas sbb imul aaa lods loop pop pop imull scas xor cmpsl sub clc ror jo loop pusha push pusha std inc sub jecxz cmp orl cmpsl inc dec cltd adc popa jge or aad add xchg out fisubr push bound push jmp pop cltd add pop stos arpl push add add and mov and aas loopne mov mov pop mov and inc rclb repnz inc out mov roll bound int add mov xchg sbb test inc hlt sub mov (bad) and lds lock fdivrs orl arpl xorl inc dec inc inc outsl (bad) xchg addr16 or add pop jl jg int ljmp (bad) hlt or mov lock lock cmpsl stos dec cmp pop pop sub push sub ret and xchg int cli sbb cld and push into xlat sahf mov popf je dec ret jl dec inc adc sbb subl roll ss inc call scas xchg insb shl sti aam cltd lea mov (bad) daa push cmpsb cmp inc xchg jae lods mov cmp scas jno pop jb sbb add bound pop aas aam pop pushf mov lods (bad) daa pusha jle sub add xor les (bad) std hlt imul dec lock test mov fwait js fdivl scas mov mov push fnop xchg sub shll push pop push xor shlb inc push (bad) (bad) adc sbb pop imul xchg les clc bound mov cltd jo pop ss pop addr16 in mov aad cld and mov (bad) sub xchg test sarb cmpsb pop ficoml leave pusha mov (bad) pushf jl clc xchg jnp mov cmpsb es jo cltd mov mov imulb cmc xchg pop and sub stc or mov mov and sub xchg rcll cmpsl pop cmc clc jno loope loop xchg cltd cmp or sub call mov (bad) repz mov jge pop xchg fwait push jns enter xchg cmc nop sub xchg scas adc push ss fs mov (bad) jge fwait stc cmp lods xor xor sbb sti add jno bound addr16 imulb dec xchg pop stos nop pop xchg and mov push outsb fs sbb sbb dec lds (bad) ficom push daa jne sti repnz data16 inc jge (bad) pop xor mov xchg outsl adc mov sbb pushw mov push pop dec pop jnp sub xchg jg std pop jne jns cld inc les pusha mull push int3 iret inc call out std sbb test aam mov dec mov mov and dec sub cmpsl popf mov pop scas ljmp push ret mov sub and xchg ret pop mov xor fs mov imul jbe jge (bad) xchg lds pop inc mov lock adc sub xor int leave mov inc adc aad lds cwtl and nop jo (bad) fmuls sub punpckhwd fisubl xchg and sub dec inc subl inc scas addr16 into bound jae xchg xchg lods pop jmp sub mov aad das add or cwtl pop dec mov pop dec pop mov in xor mov loop jno xchg leave xchg es mov cmp cli add scas xchg iret imul mov or packuswb or movsb sbb inc popf (bad) out and add hlt loopne data16 decb mov icebp out fcompl pop into mov xor jp jecxz mov je inc (bad) lahf cltd jge mov pop mov out negl cmp push call adc jno push inc pop jecxz mov int3 mov mov movsb xchg and int cmpb cli rolb pop ror push pushf xchg cmp iret mov stos lods ja cmpsl adc shlb (bad) mov adc cltd test inc in fmul mov out cltd (bad) hlt daa cmp push push (bad) imul int stos loope aaa inc dec into movsl repz (bad) ljmp mov push scas imul lea addr16 jmp lahf aad inc mov mov dec pop or mov jge lea inc or in cltd fistpll or xor out dec shr push popf or jmp or (bad) rolb pop nopl jno and shlb mov loope ds mov (bad) sarl dec scas addr16 fidivr pop fucomp fs push and loope lods les or icebp stos adc lret cmp and jae inc inc mov movsl data16 ss loopne sub test cli mov daa in dec aam push add movsl cwtl daa sub dec mov cmpsb scas (bad) sbbb pop jo pushf push lahf maxps cmpsb push jno fcomi insl adc test add popf fcomps sub mov insb jecxz iret subl mov xor push adc dec add mov dec loop xchg cs push sub mov rorl test dec fcmovne mov push add mov push std mov push pop mov push jb scas negb inc (bad) or mov xchg jb mov mov or movsl cmp fwait xchg jg mov mov or dec or int3 mov push sbb cmpsl mov pushf xor movsl fwait loope in iret xchg jnp stos mov lock jp adc mov mov imul sub and addr16 cmp dec or push pop cli lock icebp call and in ss fldenv xor or cmp add repnz sub repnz push mov andl or cmpsb (bad) mov pushf and and and cmpsl push (bad) cmpsb inc push add iret movsb inc scas bound xor outsl lods mov or dec or movsl int3 in bound push mov sti fidivl mov dec jecxz mov adc cltd xor and mov mov add pop arpl push xchg es push aas pop sbb cmpsb out (bad) push mov test xchg cmp or cmp adc movsl les and imul and insl movsl pop pop icebp out fsubrl test cmp cmp jb adc movsb jecxz sarb xor movsl jle push sbb xchg cmp sbb mov out sahf mov jae jne mov sbb dec xchg lock leave imul adc jns push mov pop and and lret and int3 mov aam popf xor fisubrl xlat mov add mov jg add fldcw push mov jbe in mov movsl sbb mov call out inc test scas push in jb loope mov insl cmp pop sti add fcomps inc or xchg lret cltd cld xchg pop pop cmpsl (bad) push lock cmp push mov out cmovns into lods mov sbbl lcall lret mov (bad) leave in xchg mov inc call dec inc xchg insb (bad) add jae lods inc xor iret addr16 mov sub jge jnp inc or jg loope xchg mov mov sti int3 xorl pop repz in lods lods loope lock adc cltd cmc stos mov mov mov stc iret test scas jo pop xor adc sbb dec int3 in stos lock xchg xchg xor scas mov lods mov mov dec or cmpsb ss push lret cmpsb popf imul in push add mov xlat mov xchg push out mov dec or xorl ret int addr16 imul (bad) xchg pop push mov xchg and ja in sarl fstl jp bound xor jecxz mov mov into xchg sub push and das cmc jge lea or jle jne pop fs ljmp jmp shrl test (bad) jg dec das nop inc or xor mov mov fs sub movsl js addl and mov cli int3 sbb cmp adc imul inc addl sarl xchg aad mov mov xor mov ds mov dec test inc pop cltd push or test aad xor aam mov adc fst dec cltd add xchg fwait jns imul push cmp jp ljmp mov les xchg mov pop sbb dec mov dec sbb inc adc pop mov sub mov arpl dec out inc pop jns scas fidivl push bound mov mov sub add test out iret xchg stc pop daa xor pop repnz jno sbb pop mov dec mov gs fsubr push gs fwait (bad) dec add mov loopne push sub cld dec pop push (bad) jecxz cmp lea dec or and enter mov mov jp mov cli mov aad mov sti loop push pop and ret inc dec lods mov lods cmpsb es lock pop inc out xor sub pusha mov in push push jge and pop mov les jo inc lods and lcall pop push mov imul and mov orl inc xchg adc and fmuls mov (bad) or ds cmp loope xchg lds xchg into idivl (bad) and gs dec cmc (bad) roll (bad) imul out xor ret js mov add push pop cmc stc into push jecxz pop sti cmpsb pushf les insl in dec lret js into std data16 (bad) repnz arpl jns push sbb test jecxz bound jl aad ret std mov repz lret les push jo lds xchg add mov (bad) sbb mov sbb les mov (bad) icebp fisubr push adc subl popf inc popa in jnp fstpl rol (bad) adc imul pushf mov cmpsl pop dec imul cmp cltd mov fsubs mov add pop pop mov or sub frstor rorb das mov jns repnz imul mov xchg xchg xor les cltd fbstp insb in mov mov js jge adc jmp jl xor xchg jmp bound mov mov clc fsts sub fs addl lret popf icebp jge push aam pop xchg mov popf insb or test dec jmp mov dec jecxz jno mov imulb test sub lods fwait (bad) push inc mov or ret xchg push mov sarb xchg das mov lret lock add and pushf call dec push pop (bad) iret lods cmpsl push or adc aad es stos pop repnz pop dec mov cmp fidivl leave pop mov or push xchg call inc mov aas test pop movl jl jecxz xor mov and inc cmpsl fidivrl arpl daa sbb test rclb push jp mov fisubl out inc (bad) xor je jns dec dec test outsl cs sub and aad adc pop and lods dec sahf push (bad) adc jmp call and cmpsl sahf (bad) adc stc aaa out jno xchg shlb lea mov popf cmpsb pcmpgtd lods cmp lds pop int add inc push mov aam jno mov cmc cmpl jge mov cld cmpsl stc cld push and inc adc push mov push mov inc push cltd pop (bad) jbe push aad mov mov xchg or push inc cmpsl mov or dec mov add js les into pusha movsb insb jmp arpl cmp sub lret cmp dec xor iret lcall mov pop aam cmpsb mov shrb pushf cmp mov gs out bound cwtl inc sbb repnz mov scas movsl push cltd es and sub sub out insl cmp test jne mov rcrb mov in stc sbb pop push dec lock call sbb push out jl stc pop movsl popa faddl and cmpl push mov inc add sub add cmp adc imul rolb push xchg mov sahf jg cmpsl xor jmp mov and jae dec jns int pushf dec cmp mov mov jae adc and jb sbb mov shlb cltd mov nop pop idivl add das xor xor and mov movsl jecxz mov push push cltd dec adc cmpsb loopne push jns cmpsl mov sub imulb and xor mov data16 imul xor cmc mov add xchg outsb pop sbb mov inc mov aam sbb mov inc pop push xor (bad) loopne mov insl (bad) xchg and aaa dec pop (bad) aad adc ds adc repz loop jne inc data16 push into sub cld ret jbe push rorb cmpsl add push and mov or daa stos shrl dec pop push std pop movsl pop and mov setl jns cli jb mulb mov mov mov push mov mov mov fwait rcr jg sub lods mov xchg into (bad) mov ljmp out mov sti push (bad) or (bad) imul mov lds sbb (bad) mov cmp xor mov mov push cmpsb out outsl (bad) rolb std out cltd bound rcrb mov orl inc pushf xor inc dec lea mov push orl inc outsb mov bound out cli mov or add call sarb mov xor jbe jo mov leave test add mov and popf imull mov adc (bad) aam rclb jo into or inc cmp xchg inc js lcall pop les mov pop sti icebp loope cmp adc movsl cmp add sub aam lock mov out stos cltd and sub aad pop or mov sub pop adc iret inc cmp mov fs adc or adc cmp pop and scas loop mov sbb cmovo and dec push test jg cmp stos xchg mov pop ret (bad) sub cmpsb fisubl mov sar popa movsl dec mov sbbl lock out and scas mov or add or movsb (bad) ret stos imul orl mov adc push and inc cmpsl mov lds inc ds dec je popf in aad or loopne scas add ret stos dec push loopne shll mov jb xor sahf mov out mov ss fistp cmpl out jno (bad) dec js out lods or frstor andl add add sub aas cltd cmp xchg loope lcall pop rclb push push iret xor addb pushf push dec (bad) and sub mov push dec cmpsb mov movsb mov mov add add dec arpl movsl push clc pop loop in dec shrl mov jae and scas cltd loope mov xchg rcrl sub and mov lods or pop fstl xchg and adc decb dec xchg lahf cmp pop jae leave rorb pusha mov pop jae sarb pop push lret mov test mov inc or popf sbb xor mov addr16 dec fnstenv jno shlb aaa mov adc xor mov in and adc lret pop xor xchg scas bound data16 fsubr or test (bad) and pop (bad) mov and test xchg cmpsl stc inc mov rdtsc jp mov mov sub mov xchg push shll movsl pop cmp mov push ja cmp es cmp movsb and mov and and sub daa xor mov xor lahf jge jae call daa or (bad) add mov pop jge ret and mov push pop cwtl mov add cltd cmp sub mov cmpsb lock push mov add test mov cltd add repnz mov push add xor or scas std shll mov mov xchg cmp (bad) sub enter pop in push sbb xchg xor cmpsl dec (bad) bnd icebp fnop sub rcll jns cmp ljmp fnstsw or fwait sub mov fdivrl and arpl push ficoml lods mov icebp ljmp lret in andl dec int3 and imul cld sti inc inc sub inc std sub je cltd xchg pop cld dec fwait gs xor sbb sbb mov hlt dec bound stc in stos dec adc out stos inc mov adc xchg jo pop mov jb (bad) repnz add adc sbb (bad) je lret dec push cmp inc test jecxz pop int and in mov test fdivl mov and loop popa mov jo push imul mov imul mov es in sbb mov mov ror dec add push mov adc pushf mov xchg ret leave loopne,pt add outsl sbb xlat (bad) imul and aaa icebp inc xlat dec sbb aad loope mov xchg (bad) testb enter movsb add mov and sarb jecxz into lods movsb out push jp insb negb add lock lcall inc and pop push xchg cmp jne dec shufps and sub push mov and imul add popa push or fbld add xchg lods mov mov xchg or in add mov mov fisubrl mov xor xor lds jo sbb push push xor mov or (bad) mov mov fs addr16 pushf mov adc arpl ja adc or push insb jmp jmp jle sbb jge (bad) mov es or cli addr16 lods test and pop (bad) cltd repnz dec push or je push cmp pushf mov mov cs mov add xor lcall pushf aad cltd imul jecxz in movsb jmpw loop push mov sub ret mov fnstenv push movsl dec sub das pop sbb ljmp pop mov es jecxz mov cs dec fnstenv std fs out insl in stos loope mov push int3 pop cld mov cwtl and outsb pop mov movsl pop sub push ljmp stos mov aam loop push cmp xchg data16 or repz movsl add insb aam sahf gs lods add ljmp rolb mov mov cmp xchg std or sbb jecxz mov push add callw lcall jmp roll aaa into mov js hlt loop cltd and adc jne xor adc rcrl cmpsl push dec enter ljmp sub and jge push cltd and aas mov (bad) sub (bad) shll idivb roll (bad) movsl jecxz push or repz lds roll sub xor xchg movsl push push push inc in mov sti and cwtl mov fstpt movsl dec sbb mov icebp and test fs xchg les rcll scas daa jmp pop (bad) cmpsb sbb cmp jae cmp inc push inc leave andl ret pop addr16 fistpl mov (bad) ljmp lret mov fcoms and jae ljmp fdivrl xor push dec test in in (bad) (bad) jns (bad) pusha bound xchg xor insl cmpsb push lahf mov xorl insl decl xor sbb loope icebp add mull sahf mov sbb mov sub cmpsl xchg dec jbe and sub add xchg push stos push test stc cmovs pop iret xchg pusha daa adc lods xlat mov sub inc and mov xor inc mov ja cmp jno movsl hlt dec xchg mov sub into add repz pushf sti fdivl mov mov or pop adc mov test jno jmp sub fmuls xchg aad or lea push cmp inc (bad) addr16 cltd dec push dec (bad) fdivl movsl iret (bad) fucompp dec lret jl into xchg and pusha xor dec xchg ret pushf stc lock sarl xchg outsl mov out push mov mov loop fadds insb movsl ja pop mov pushf adc mov push add or or sub cs jge rcrb iret out xor sbb mov mov adc and push into lock fcomip mov test inc mov into mov sub mov dec xor mov pop pop cli push mov inc adc out inc sub mov dec popa inc scas mov (bad) and std add test push imul fwait in inc push sub and push jo jo mov negb xor fwait jg dec mov mov lds aam pop stc idivl xchg hlt mov or push (bad) mov xchg int sarb fs imul mov negb mov push (bad) adc aas jae sub fnstenv popf gs push inc enter nop addr16 mov sbb mov sar sub dec daa cmp movsl sub stos call fnsave jmp adc pop out in jbe je or sti es mov cmpsb sbbl loope rcl lahf or adc cmp xchg loopne bound mov xor ret jno jbe fistp xchg push push pop mulb cmpsl push xor jns jae pop xchg leave movsl fisttp push mov bound lahf ror loope addr16 xor and cmpsl test dec xchg pop dec repnz sbb sub mov dec mov lcall adc xor jp add in (bad) (bad) shlb (bad) sbb ljmp add lock sahf fnstenv sbb fisttpll test adc mov mov xchg mov ret mov jae out mov and scas enter sbb cwtl mov in mov mov test mov icebp imul inc imul stos sbb mov xor hlt cmp int3 loope and adc mov xchg push movsb in sub mov out mov aad icebp and xor pop mov xchg mov push imul flds mov cli bound push mov pop mov push dec cmp and roll mov test sub pop std or mov cltd mov fnstsw ss sub outsb pop jmp pop jge cmpl inc in xor out and std jno,pn mov cltd in sub sub and nop xchg rcll rolb mov and cmpsb push and pop out jbe icebp push cld lock xor ljmp fs xchg stos cwtl lea and out iret pop mov sub lahf mov imul in sbb jo sahf dec sub cmpl clc pop push bound cmp ret popa mulb or inc xor imul mov adc adc rol mov cltd stos iret mov faddl mov clc fwait in pop (bad) leave and sti enter jge (bad) scas cmpsl mov jne adc push lds movsl fisub adc mov or fmuls mov adc jb mov mov shlb jnp aam (bad) jae jecxz fwait or sbb inc mov push inc xlat or add dec cmpsl sarb cmp pop and dec imul jne fcomps test (bad) lock mov pop pop aam cwtl xchg mov divb xchg popf pop sub imul in imul jecxz cmp sub arpl dec loopne add in mov cmp sbb pop sbb cltd hlt and lea and inc mov jecxz in andl dec or jno (bad) pop inc (bad) in fdivrs test jbe pop js push out and mov movsl xchg jmp sbb sbb mov cmc jbe dec or stos leave test dec add movsl mov mov inc push es cltd pop sbb or and jb loopne daa push add xor rcll mov imul (bad) and mov jns dec stos mov mov jno dec adc enter loope push and xchg lods xlat jae and xor mov data16 dec and cltd adc loop std inc repz mov (bad) cltd mov sbb push test pop sti (bad) cmpsb movsb int (bad) loop mov adc dec in xchg xchg mov sbb push push inc lods mov or pop lahf adc sbb cmp xlat xor sbb and fnstcw mov mov arpl sbb add iret cmpsb add mov dec in loope int jo test mov xor mov push movsb repz cmc jmp and pop jecxz mov nop mov and sub int lods movsb (bad) leave sub dec mov jne or jno mov or pusha in and popa bound adc mov mov adc mov mov ljmp in mov cltd inc movsb jle fnsave inc clc mov dec add in xchg push add ficomp nop cmpsb add sbb push push or mov mov rcrl push mov aas rorl (bad) mov repz and je pop xchg aaa and push jo stos test repnz cmp dec popf mov xor mov je out cmp push (bad) mov inc leave inc aad dec adc pusha mov movsb pop ret das aad mov sahf (bad) out jmp cmpsl add mov repnz movsl mov pop xchg (bad) bound mov lods mov sub clc pop jmp dec jle pop mov fiaddl out cltd inc dec xchg mov mov push inc cmpsl jle faddl cmpsb stos movsb and pushf loop fisub sahf push dec xchg push dec sarb lods movsl ret in add pop enter out movsl stos add ja xchg jle dec outsl (bad) cmp and inc sarb mov jb out or and pop and fidivr inc and lea or lock mov mov dec cmpsl lods jnp repnz push scas inc fistl popa rclb dec jo dec mov xor dec jnp lock movsl and xchg std or mov push inc adc out mov call mov movsl shrl push mov pop imull mov push mov mov dec jns lock test loop lcall pop sbb mov ja popa bound fwait int lock daa cmpsl fiadd call aaa mov xchg adc jno aam repz or xchg xchg and mov and mov cwtl push icebp mov push add out mov nop mov call movsb stos aam ret push int mov ds into jb lods cmp push sub les push imul adc cmp jecxz mov dec cld lea ret xchg push mov fs in stc mov pop push aas scas loope mov dec insl pop sub or sub leave mov mov xchg dec and jne test stos xchg jbe or popa test out mov mov cli enter mov iret mov or in das mov fwait pop xlat xor inc sbb movsl adc mov mov fldcw inc mov rorl or inc jns mov icebp test mov dec push pop std xor pop mov mov lods jae push loop leave xchg inc adc mov push bound addb xor mov push std push (bad) lock mov jbe,pt jle pushf adc fcoml imul xchg out cbtw jecxz mov ret imul cmpl into push xor int jns mov pop pop mov cltd xchg pop inc cmpsl icebp add xchg sub vphaddubw repz out xchg ljmp adc fidivl xchg add sbb sarb add xlat mov mov call ret mov cltd fidivr or or arpl mov mov out negb rolb mov add iret repz fbstp and push lock movsb mov int3 mov stos dec mov cmpsl aas add lret xchg daa mov mov cmp std mov lret jbe in mov jge sub stc sub int3 loopne (bad) dec mov sbb rcr mov mov cmpsb jbe jo cmpsb adc movsl (bad) mov sbb mov loopne dec pop lock lea mov ljmp pop hlt push (bad) xor stos mov cmovno inc push faddl aaa imulb pushf jns mov cmpsl fwait mov sub push sub cmp sub or jnp and aaa push push imul lods insl std in adc popa loopne sahf (bad) outsl mov mov push mov dec ljmpw and loop add fcomp jle jl adc mov sti in orb (bad) push inc adc out add dec pop (bad) shrl adc mov std or dec pop adc mov inc push cmpsb testb pop mov or xor pop in lods or mov mov nop mov rcrb jns,pt mov jae outsl sub push sub imul or into mov mov mov shrb sub nop mov mov adc movsl sbb and mov leave mov xchg jle int dec add roll outsl (bad) pop xor mov xchg aas cltd xlat pop mov imull cmp mov shrl and add mov cmpsl or mov mov mov adc lods bound sbb in lcall pop ja mov mov sbb movsl out cmpsb dec sub mov pop rol xchg push mov inc out mov pushf jbe aad lret mov loope insl pop adc js sti push mov inc xchg lds andl (bad) jae cmpsb xor mov dec mov jge call mov movl push cmp pop in (bad) lahf mov and fs jo stos into mov insb in jo aas jle repz mov mov cli push roll cltd fld ret adc pavgw adc imul cld rcr add dec cmc sbb or dec sub repz in pusha (bad) xor mov sub sub mov clc push scas loop mov scas cmp dec or mov out rcll jne mov fidiv push xor mov mov jno sbb jmp push xor adc lea inc xor xchg mov out outsb jecxz sti sahf mov imul es cmpsl and repnz (bad) fidivrl sahf imul xchg mov leave mov mov xchg dec dec push add xor movsl subl adc jnp dec and shlb lds add ret cmp sbb push adcl addr16 call sti cmp mov ret repnz mov loop mov imul sahf stc jb or bound lcall movsl arpl sbb cmp cs sbb mov inc or cltd cmp mov push int jmp cltd test in adc aad das repz (bad) std call sahf push (bad) shll mov adc call mov movsl pop add jb jecxz pop stc (bad) push jns sti test and decb mov mov mov mull ds sub push test mov cli push inc sub xchg xchg mov push dec icebp stos (bad) xchg sub xor fldt cmpsl mov push inc add rcl adc push and pop jb stos pop xchg (bad) cmpsl fsubl sub pushf and xor lods sti sub push stos scas sub sub dec inc addr16 mov ljmp push add pusha mov mov into sub lret imul or sub leave negl mov push mov mov mov push pop push stos xchg sub xchg mov jle clc mov dec fistpll xor rcr jp or mov rep test dec and nop mov hlt mov loopne xchg mov add push push rclb sub into sub test mov (bad) mov testl xchg mov push in int3 gs inc (bad) jb fbld fstl add or push pop mov jl dec cmp mov jle mov lods mov xchg jne mov mov mov push cmp mov fbstp adc cmpsl xchg mov test jb pop push inc mov push xorb (bad) push jmp mov add inc pop cmc movsb pop rclb scas cmpsb scas movsl fnstcw mov fucomip jge cltd lahf loopne jae xlat dec jge cmc mov mov popa mov jecxz push mov stos movsb sub (bad) dec sub pushl std movsl pop dec or mov push sub xor adc clc movsl enter add fidivrl mov cwtl lcall cmp and xchg pop cs adc cmpsl (bad) out or push ds xchg jb popa xor imul movsb sahf inc mov xor dec xchg lcall aam fwait jmp je cmpsl inc test aaa mov dec rcl shll mov xchg enter js fiaddl and bound jmp ror cmpb pop dec (bad) mov pushf gs push test mov (bad) and enter fcoml (bad) pop stos cmp mov sub dec add push (bad) hlt pop movsl jo lea cmc dec xor repnz movsl mov addr16 nop fbld cltd dec in repz stc xchg (bad) push mov cmc lock dec repz and fbstp sbb insl call hlt pop dec add push mov or inc pop mov frstor test iret test icebp cli sbb fldt (bad) and mov sti mov dec (bad) pop cmpsl repnz fiadd inc scas cmpsl pop cmp gs daa mov inc jge leave or ljmp pop pop xchg ds cmp sbb xor cmp lahf movsl mov fldl jns dec imul lock mov pop punpckldq not test clc out xchg jmp add fcoms jp adc or cwtl ret arpl mov push sbbl mov (bad) popa (bad) pop out js (bad) push push pusha or xlat pushf xor jmp pop out and cmpsl mov or into cltd push sbb movsb jb xor mov out lahf inc bound xlat and inc jecxz xor divb add and pusha mov push add lahf push std out movsb sti pushf mov sbb inc cmpsb push bound sbb inc sbb mov test dec or inc sub movsl dec cltd aam jmp xchg pop cmpsl xchg int3 xchg scas fstpl sbb mov dec loopne xor and lcall jns das mov rcrb add xchg mov push pusha movsb xchg popa push cmp mov mov mov mov insb jecxz jge mulb push sti pop dec mov add loope mov mov aad imul stos mov pusha mov std movsb adc js cli push dec dec push lea (bad) lock mov sti lahf lock mov insl in mov adc cltd out fs insl sbb sub jecxz adc lret les adc lahf mov dec sti in in mov out jmp xchg mov fdivl xchg ret std mov dec add jl rcll out in fisubl xchg jae dec mov sbb out call adc scas mov bound subl movsl mov push cli jb in outsl jp ret movsb and and fisubrl and mov orb mov test gs push mov inc pop mov sahf jp faddl mov lock sarb data16 popf add test popf aam jmp aad insb xor popa in mov jo xor jmp xchg or jo stos cltd mov lods pushf xchg sub and xorb xchg loopne popf mov mov mov imul inc ljmp lods push push pop rolb jae (bad) int insb adc cmpsl pop jo push push cld es xor and push add sbb roll push (bad) cmc xor sub and xor lcall xchg mov xchg mov ja mov mov sbb subl pop loope scas and insb xchg aaa push mov imul jmp pop cld (bad) or test add jecxz xchg mov dec pop adc xor mov sti cmc adc adc push shrl cwtl out out gs or data16 xor (bad) mov sbb stos cmp orl xchg sub adc mov xchg sti popw daa popf lock fildll mov mov lds out pop cmpsb and inc push pavgw (bad) out arpl pop out add rcr (bad) scas and incb daa jg mov mov stos push push lods popf daa push data16 push pop popa inc shr leave test xor mov lahf jmp jno xchg inc push cmp call inc xchg fs cmp and ret push mov mov mov ss cltd add mov out xor xchg cmpsb andl cmp fcompl in mov jp pop jo repz and mov nop and cld xor cmpl fcmove jecxz sbbl push enter pop mov jp mov inc or movsl adc data16 imul cmp mov fidivr pop repnz xor xlat shrl add mov and mov loope mov sub ss in int in aas and mov dec into (bad) leave mov imul je mov iret imul rcl testb pop adc movsb repnz out gs lds pop sarl aam mov stc xor or mov pusha out stc ss jae adc ds inc movsl xchg pushf mov fistpll incb and test sbb mov (bad) xchg (bad) sbb and or xlat int mov xor movsl fwait mov mov call sub sbb aad ret (bad) mov xor xchg in movsl in cli mov pop mov mov add mov daa jns lahf xchg test shll pop mov repnz aaa scas and pop xchg or int3 divb loop loop mov dec xchg xor mov sub lcall xchg cmovle sub sbb mov mov jge in (bad) aam lahf rorl loopne pusha jmp add cmp leave xchg sarb sub xlat jge push adcb or add mov imul popf bound cmc sub jb push cld je enter int mov push sbb inc inc outsl iret sub fwait cmpsl sub sbb jecxz scas lods enter sub sub test adc inc lods mov test sub mov outsl pop ret sub sbb stos ficompl xor xchg adcl hlt roll out mov aas lds xchg xchg mov mov aam jno shll xchg repnz or inc pushf and inc (bad) stc mov dec dec push sti mov adc sbbl and (bad) faddl pop xor call dec and sub push js,pt inc push or mull pop mov dec js dec cwtl stos lret stos and (bad) and icebp add xchg and jle (bad) out and stos cmpsb cltd or and and inc jecxz sbb mov dec fwait call mov test pop xchg sbb jb mov or xor leave leave sub pop int cmp rol jo (bad) jo xor mov inc negb xchg mov fs push repz out mov mov loopne add xlat mov mov les movsb je sbb sub loope adc out and mulb pop in dec daa pop and sahf dec inc pop xchg mov push cmp rolb pop (bad) leave cmpsl fwait mov add scas fnstcw mov ret xchg out pop in pop (bad) sub mov mov fwait xchg movsl (bad) out (bad) adc inc mov out adc cld movsb loope push movsb dec add pop out gs pop shr inc pop cmp xor outsb cmpsb loope mov fs call shrb (bad) mov adc stos xchg dec imul shll les cltd scas test bound lods mov cwtl pop fcoms pop (bad) dec sub and xor pop add out push push movsb and rcrl bound out mov add into jmp mov jno (bad) add cmpsb gs mov or popa push ret (bad) lds fwait add rcrb xchg mov push aam or pop sbb dec fs ljmp mov push xchg inc jmp mov and mov (bad) jb cli cmpsb inc cli lret in test aam or jns adc sub icebp pop daa andl fcoml mov insb xchg gs lods fs inc sub pop or lds pop and out je addr16 xchg lods sub adc push into lods arpl clc les mov lock adc sub mov aaa add and dec int repnz cld sub add in mov pop loope mov arpl (bad) clc stos (bad) aam inc lods inc and pop loope xor arpl hlt imul sbb mov or (bad) lock loop scas cmp cmpsb stc out (bad) jno mov adc (bad) movsl nop rcrl mov movsb jle lock jno movsl movsb aaa pop mov stos cmp push (bad) adc jecxz push fldl cmp adc pop adc fistp pop xchg aad sti sahf lods cmpsl dec push repz pop pop lods add rcrl bound shll jp loopne movsl pop adc flds xchg jmp std cltd mov add out pusha inc adc adc popa add adcb bound aas fsubs fcoml and inc rol insl adc xchg or pop lods push mov mov (bad) xchg (bad) or mov pop loope aas pop xor sahf int3 pop pop cltd cmpsb and fcmovb out dec outsl mov jmp cmpsl (bad) sti lock mov mov imul mov sti sbb std dec pop pop dec (bad) and pop fstpt add or pop popa adc jne or pop daa out jmp (bad) enter add add pop adc bound scas loope stos inc sbb scas imul leave rcrl sahf sub cmpsb inc cld mov stc mov bound cli xor ret push shll sarb jecxz push xchg push mov arpl and mov jmp xchg mov lds les (bad) sbb loopne inc pop iret adc and mov sbb cmp inc dec inc adc iret loopne mov and mov jno loope adc pop int pusha (bad) mov xor sbb jp out mov bound or stos (bad) mov loopne pop flds scas jge cmpsb xchg cmp mov sbb lahf loopne lcall add scas (bad) and jmp test and pop jae shll cmp in or int3 je jecxz clc les bound pop loope mulb xchg inc scas and icebp cmp xrelease inc lock pop jo adc mov dec call mov mov mov mov cmp adc mov xor mov enter mov or je push mov sbb xorl xchg mull mov mov ss mov jno cmpsl sbb xor add mov rolb adc lock out pusha pushf mov sahf push loop mov and lahf mov sti outsl push cltd inc call jle ret iret test cmpsl fstpt aas jecxz pop lcall pop push lea mov mov loope add lret fistpll mov jne popf cmp cmc jns pop call in cltd mov aad stos jo xor mov out mov mov int leave mov mov mov testb mov hlt mov jae sub syscall cmp dec fnstcw mov les in iret dec jecxz ror (bad) lret or popf shrl inc add jo mov dec inc push repz inc inc into fwait add loope fild mov jne pushf adc pop add arpl pop inc mov dec or movsl out cmpsb cli sub push inc fwait push js (bad) or sbb stc bound stc fistp sbb popa cmpsb mov in lock cltd je in imul jne cmp cmc and and inc (bad) jb fnstcw dec inc jecxz test xchg stos xor jmp push sbb add mov adc out inc pop xchg and add cs jp notb push stos js push idiv outsl (bad) fisub sbb scas es hlt add lods insl in cmpsb dec stc xchg inc insl lret subl out in cmc decb leave pusha xor or mov mov (bad) bound loope mov roll (bad) adc dec xor mov sub xchg (bad) push mov cltd jmp sarl mov xor pop mov mov stos and jp sti add and lods xor mov pushl cmpb mov jns jmp mov (bad) push mov push lret mov hlt adc xchg enter mov add mov jnp fistl xchg les adc mov mov ds mov nop dec add lahf pop std call pop mov rcr ljmp data16 add or lods mov add mov xchg or in sub push fimul or adc mov dec push movsl sbbl shl jno sub lret inc jg mov inc xchg mov pop push xor cltd fwait mov adc lock movsl popa jnp xor inc mov pop adc sbb mov orl jb xor add lock cmp dec stos mov mov mov add jle adc xor xchg data16 outsb icebp dec mov imul mov in sbb cmp movsb push push jo fldl mov adc xor sbb je das sbb dec mov fistpll mov mov mov je dec daa subb xlat mov mov jecxz lods push rcl mov (bad) mov imul add int and xor mov xlat mov inc push cltd iret push lret leave outsl movsl loope das lahf mov movsb fs push cltd pop cli push stc cmpsl mov mov scas mov (bad) xor mov divl sub mov pop test pop push dec xor jb xchg mov xchg push mov inc and xchg inc lret divb imul and sti mov add scas mov and mov pop sbb jns jle aam ljmp loope shll and sub test mov mov cs dec gs in dec testb stos movsl push jmp popa mov pop bnd and cmp cmp cmp add cmp icebp cltd xor roll shll sub adc or lods mov cmp xor inc or int mov jo repnz daa es mov push clc ret loop xor mov mov jmp cmp mov inc or mov ja (bad) push pop xor cltd jge ret xchg (bad) icebp pop mov mov adc std mov test mov pop cmp loopne pop or push clc sub mul cmpsl mov and push lock push pop dec push mov and mov (bad) iret lds sbb pop push fimul and xor dec int3 mov xchg add imul js dec mov in scas loopne mov xchg xchg shlb sbb dec inc jnp test mov stos cmpsl sbb xchg lds or mov inc popf mov inc mov xchg pusha mov push add repz adc mov js sti mov mov add pop push cmp in mov daa sahf (bad) mov jmp or fcoml inc adc fcoms add stc jns inc cvtpi2ps stos movsl fwait ss mov repz push mov jp or loopne hlt pop cmp mulb in mov inc ds cmp mov mov (bad) mov and add arpl lea sti mov jl inc or inc mov lock inc test cmpsb aam mov ljmp xor jmp fcmovne mov andb leave lret pop xchg test add dec inc mov mov pushfw or jnp sub cmp stc xlat (bad) popf cwtl dec es push push cmpsb dec pop or insl divb in scas and mov imul inc cld es pop andl cld pop clc adc test pop jns xlat push mov loope sbb pop (bad) mov sub ficomp (bad) (bad) xor psubq jb pop jl mov mov movsb mov or mov (bad) in imul (bad) lods mov pop (bad) jle adc jnp xchg or fcmovnbe fdiv add mov leave mov sub and push (bad) push call ret and movsl outsl test (bad) les aaa dec or lcall daa mov int stc fs orb push xor or or xchg (bad) call xchg xchg daa cs cmpsb mov stc xchg int3 movsl push je sti pop mov mov mov mov lret mov cmpsb mov push ret mov mov fiaddl mov pusha jno out add cmp xchg push inc pop pop rolb pop lock push mov sub sbb xchg fdivr xchg out cmpsl (bad) (bad) nop and stc push cld ljmp adcl and ret std and addr16 inc jns loop loope inc push ret pusha rcll (bad) (bad) mov iret mov cmc bound pushf dec add lock iret test cli addl pop xchg sbb lods xchg stc mov call push xor add jle aad mov sub cmpsl imul jmp (bad) leave (bad) outsb mov adcb scas mov and mov xor mov das adc arpl imul movsb xchg psubd stc pop les je addr16 mov adc hlt gs jne jno loope rolb jae sbb insl mov or icebp lret loope jnp pop xor mov jg or mov dec stos (bad) rcrb mov or in les and loope inc push push jne xor mov test jae adc test andl sbb pop (bad) dec sbb inc xor out mov lret jo jge inc sbb xlat insl test je int dec call (bad) js jbe dec lods movsl jecxz addl test dec push leave subb (bad) repnz mov (bad) nop mov sti mov xor pop cmp mov fsubs add push aad cmpsl jns in pop pop adc xchg movsl mov cmpsb out outsl in jb jo and and pop pop adc test mov cld xchg in pop repz or pop jae pop and push aad cltd adc lock mov scas inc xor pop xor movzwl adc sbb pop pop aam aad jbe popa dec inc adc rcrl bound inc test icebp mov dec jge pop (bad) ja mov adcb sahf jne cmpsl sahf ljmp (bad) mov popa adc scas xchg mov xor and push sti and inc sub inc movsb pushf and mov insb inc jecxz insl fdecstp sub jno xor pop fnstenv cs xor imul add subl js dec xor dec mov aaa inc les xchg xchg xor inc (bad) call xchg pop orl int aas in movsb or imul xor je pusha (bad) js jp std mov mov es (bad) loopne (bad) xchg or mov mov inc adc out inc or xchg (bad) jmp sub (bad) pushf outsl mov adc inc lcall fwait out cltd inc mov aas sahf shl lea mov inc aaa inc xchg lds gs push push mov jg js push mov and ficom or (bad) ljmp das or cltd sbb cmp loop push xor imull pop or sub mov shll cltd imul dec rclb negb decl adc lret mov fdivs lret xor adc std pop jp outsb subl push and mov ret sbb xchg loop ja cmpsb andb xchg adc (bad) jo pop push jg inc int3 (bad) dec push xor inc int inc inc push cmp fcoms cli aaa cmp (bad) add mov xor jb fnsetpm(287 jo and mov stc sbb adc mov scas cltd pop mov inc movsl push fstpl rcrl mov xor add sub cwtl lcall pop push and (bad) (bad) cmp stos ja jnp les xchg std out sbb cli adc push jno dec popa or mov addr16 scas xchg pusha xchg push mov loopne push mov xor push xchg cli mov (bad) aaa bound mov sahf (bad) repz xchg cmpl bound cltd mov mov add pop inc cltd adc out pop add insl (bad) pop jg bound and out jg xchg je mov orb stos movsl bound mov mov sub push rol adc dec ret test sbb mov je loop xchg aad shlb (bad) in outsl mov mulps fldl lods xor push bound int iret roll xchg stos jecxz xchg (bad) into or xor inc mov data16 daa mov pop movsb pusha inc ret movsl pop ljmp test not cltd ja aas adc mull inc por imul mov mov xchg repz push movsl jp push mov stc push iret dec cltd xor scas mov in scas loope call (bad) je mov push sub sub sti push mov mov push push xchg lret xor (bad) adc inc sbb mov add popf stos mov or outsl out scas pop insb cmp mov adc inc mov dec insl add cmp add imul push lea mov mov loop push daa js add mov test cltd mov pop clc mov or pop xchg cmp sbb out push imul inc loop imul jmp daa (bad) mov push fcoml jae fwait sub jo stc ss std in icebp shrl or nop cltd mov inc xchg xchg ret mov daa cmp pop or ljmp ds pop and ss add jnp xor fdivr lods pop ret outsl imul xchg pop xor popf test scas jmp movsl daa jb push test and cld (bad) mov xchg aad sbb aas push add shll cwtl mov in rolb inc (bad) mov jnp sbb mov (bad) fmull mov and or or mov push ds jle and mov sarb into pop imul orl test adcb push int imul dec popf and js movsb push imul cltd xlat dec or shrl inc in xor mov out xchg and pop aam nop add inc adc mov mov add xor daa mov inc rol jbe cmpsl loop cltd pop insb mov mov addl js xchg or fwait dec cltd inc lods cmpsb xchg mov or sti jmp jmp cld pop and xor (bad) xor mov in push dec or fdivrl jno dec or xchg ja dec or in mov test test movsb test dec pop push add ret ret jns mov mov jno call inc in mov dec or dec mov es push mov push mov jmp es push ror incb stos adc xchg and call jno stos movsb sub push stc xchg aam fadd repnz xchg test loopne mov imul loope and and fldenv nop sti jns push mov push dec add add iret js insl or stos lea jge sub add lcall pop loopne mov cwtl ljmp rcll rcll addr16 mov jne (bad) int mov sub fidivr cmpsl inc sub mov sub outsl jmp xchg jmp adc mov adc dec icebp xchg bound bound sbb mov mov push xor sub mov imul dec dec lods lods sar repz cli mov lret jge leave cmp inc cltd add (bad) sti push or and dec xor pop jmp jge jo mov adc das (bad) mov push pop repnz js mov mov sarb mov mov sub and xchg imul daa mov (bad) jecxz out fidiv inc adc jge mov mov mov (bad) (bad) bound js dec xor (bad) aas sbb sbb sbb fidiv loope (bad) mov pop lahf lret xor jge repnz ficom ret mov out (bad) fmul jae mov out sub dec cmp adc jecxz mov add ljmp lret mov mov cltd nop in xor add mov sbb cwtl call ret inc cmpsb adc cs push dec mov fist adc sbb das repnz sbb sbb mov scas mov xchg lahf cmp sahf sahf jmp jae mov test pop mov hlt pop mov mov pop sbb cmp push mov mov cmp iret cmpsb js dec (bad) int3 xchg mov cmp mov sbb pop gs cltd js push stos add ljmp popf daa mov jne pop sbb mov mov insb out add mov sbb popa xor call jl mov push xchg (bad) mov ljmp out push imul adc mov cmpsl add add mov popf mov xor lcall inc or add mov mov call pop push icebp add mov mov bound mov aad mov sbb mov les outsb fs int3 sub int xchg arpl push mov dec std loop lock aam mov and sub daa xor and jb pop cwtl xchg and mov hlt imul mov cmp jle add jae js mov xchg repz jg cmp sahf imul and pop stc cmp jo mov test subl jp push mov push mov jl fnstenv jmp mov enter dec (bad) push daa and adc pop xor mov fs jecxz imul or pop sub imul jb fcmovu inc jmp mov push js push sub shll in loopne sbbb in lds mov mov je icebp cmpsl xor das add mov into movsb stc mov arpl das jp cmpsb cmp (bad) jecxz mov call dec dec jmp adc divb (bad) adc mov mov mov (bad) xchg mov push ss (bad) mov out push cmp mov sub sbb out mov xor xor ret jno out outsb fsubrp dec cmp bound push notb (bad) jg pop mov lcall outsb xlat jp cwtl cs insl loopne lret jne insl fsubs jnp test xchg (bad) (bad) mov divb inc mov loop pop inc (bad) out dec push test mov adc or jbe cmp adc arpl loop mov dec mov aad imul nop jno shl xlat in xchg mov loopne adc xchg je push push cmp daa jmp fcoml and adc pop fldenv aas adc mov dec mov cmpsb (bad) sub movsl sbb stc xchg int xor movsl adc or movsl data16 push xor cmp xchg (bad) mov data16 sbb pop dec pop push mov sbb mov dec test push xor cmp mov hlt ss xchg dec dec pop sbb hlt sbb mov in cmpsb (bad) leave xor js sar lret cmpsb std push mov sub cltd inc vmwrite flds and mov sub out xchg xchg rcll pusha sub fldcw xor jl ljmp and mov and push ss enter popa cmpsl (bad) fstpl sti adc xchg insb ret std test aaa cmp xor aam sub cmp jb lahf adc mov arpl jecxz rclb inc call ret mov out add add cli and mov movsl fsts sbb mov jns leave pop mov mov xor test in out jmp adc cli into ret imul jns sahf mov jecxz mov imul xchg cld add inc mov pop je fist push out mov lds adc mov pop pop mov movsl jecxz fcmovbe or mov cmc pop imul pusha dec popf mov movsb sub jp in cmp mov sbb test mov pop movl out inc lds call outsb cmpsl inc push jae mov sbb aad sub xor test push and outsl mov sub add imul dec add lods push cmp iret xchg mov xchg in mov leave cmovo mov popa adc mov xor sub cmp test inc mov testb movsb cltd lods arpl rorl aam out mov sub loop sub adc out sbb xchg cld fnsave sarb add daa sub xchg add aad xor cs jo movsl xlat pop adc das testl arpl imul fwait pop jns mov cli cltd push rolb mov sub and mov stc cmpsb (bad) lret mov std jne mov scas sub shlb mov insl arpl mov iret sub or sbb xlat mov inc into icebp mov or div pusha xchg sti fisub nop jp xor loopne inc sbb and and in mov fnstsw pop xchg xor icebp xchg mov push pop es jge int3 aaa ret cmp cltd sbb xchg jae xor stos enter popa mull mov xchg sub add add mov lahf xor jns cmp js rolb lahf cmc cltd adcl cwtl sub in call inc lret fstpl shll popf jns pusha mov loope mov sub xor xor pop sub or dec fild popf imul (bad) mov xor pop lea xor inc mov pushf xchg lods mov int (bad) xchg (bad) iret and and xchg scas out add int aas xor cmpsl int push inc mov insl out xor mov and cmpsl mov (bad) bound test pop mov cmp mov les test shr fbld (bad) push fdiv icebp repnz shrb mov bound mov xor lods fcmove inc not ljmp push addr16 inc scas adc dec out or xchg sub jne ja ret mov leave cmpsb adc shll inc mov out call aaa jne mov push js in cmpsl mov cmp movsb mov mov notl cltd gs mov mov jb push and test mov dec sbb imul unpcklps in mov xlat xor adc out dec mov in loopne pop pop xchg and jbe adc adc xor mov scas cmp jae jmp xchg leave mov cmp mov sub cmp (bad) jnp push inc jge push mov in adc adc push sub sub mov lods vpmuludq mov in pop dec xor in pop inc pop or test xchg or jg (bad) leave jno pop stos in and insb add out outsl pop pop cld mov insl and inc ret cmpsb push bound dec mov pop mov mov mov fnstenv jmp fadds xchg cld mov outsl frstor pop out push stos push mov test pop xor pop mov lret jge inc mov (bad) mov xor sbb dec pop out pop fucom aaa cmpsb sbb pop jle jl inc jnp lds (bad) movsl mov (bad) ja sbbl leave or sub pusha in das sub mov (bad) jo (bad) sub iret adc bound jmp stos dec or out insb dec inc or sarb test scas lcall or cli pop adc negl xor mov cltd push sbb mov push xchg jp stos xchg fisttp std movsl rcrb popf mov jecxz mov dec pop mov test lcall push imul mov mov mov add test pop push mov xor push mov dec add rcrl in or or and mov add in (bad) push add pop int3 xor and lock pop mov xchg push dec add jnp inc loop inc and xor call xor loop mov fstpt jnp out mov aaa ret dec xchg in xchg mov mov cmpsl sub pop mov and sub xchg and mov cltd lods scas es xchg dec inc mov andb mov outsb inc mov xor enter icebp fiadd or out rclb jo enter mov testl ret (bad) xchg mov sbb inc loope test mov adc mov xchg cltd push dec mov xlat psraw and hlt jmp inc rolb cmp mov inc lcall dec cltd dec jo data16 fwait mov inc popa imul push push in pop js call bound pop movsb mov push sub fstps repnz daa cmp cmpsl mov dec in mov xchg sbb cmp lcall out mov sbb inc mov push enter adc mov or jmp ret mov dec pop adc lret bound fucom shlb cld std pop lret xchg adc push dec mov cmp add push mov pop cmp popf arpl sub orb bound inc jns std sub insl sub jmp stos jb pop dec push xchg mov sbb mov mov js pop jg push and sbb dec xchg (bad) pop adc dec sahf xorl test imul pop inc sbb add icebp mov jnp mov pop push sbb xor fildl loope ret les lea clc imul imul jle scas call (bad) adc mov push lret inc lds fldenv test sub push cmp ja bound jnp pop mov and xchg push (bad) xchg push test (bad) mul cltd mov push push aas mov cmpsb cmp mov jne test inc sbb cli pop jle imulb xchg or lods movsl clc mov popa cwtd cmp mov movsb push imul cmp sbb sarl xchg daa sub iret imul mov mov test inc xor out insl cmpsl loope or in mov rorb push pusha mov adc mov cltd dec dec pushf sahf arpl imul popa ljmp cmp and lahf jo,pn loop mov (bad) stos lods mov add lea iret movsb cwtl les repz push jecxz pop lock lods fwait push fsubrs loope mov insb jns mov test loope sub or ja xor pop cmp jle cmc les lods scas xor sub add mov mov mov pop cmp cmc das cs xchg js cmc or inc jae mov or (bad) add xor jecxz lock adc fildl pop sub add mov jo insl ret cltd cmpsb mov notb dec sbb xor adc xchg pop inc and in mov jmp cwtl fstpl cld mov sbb add dec aas lods jae nop gs push flds sub cwtl (bad) enter jge jmp dec (bad) jg shll scas pop shrl addr16 mov mov into dec (bad) push cwtl cmpsb pop iretw mov test ds xchg pop sarl sahf movsb gs mov outsb std xchg inc movb lret inc leave mov data16 test mov or jne (bad) sub inc mov mov adc jle xor stos addr16 add loope in mov hlt loope std add mov fldenv push in xchg adc pop mov cmp and leave outsb jmp mov loopne xor sbb insb lods xchg xchg push xchg xchg jno or sti pusha push ja rol jno in inc pop pop push ljmp or jne jmp mov mov fldcw leave dec rep pop jne popf xchg pop out stc std ret daa negb arpl (bad) mov and push (bad) dec int3 jns (bad) pop mov push xlat addr16 sti js add pop ret xchg testl mov daa push or or stc xchg jae mov adc insb out xor cwtl mov rcr ja cmc push rcl mov test prefetch xchg loop lods (bad) mov xor xor mov mov sbb xor xorl movsb in mov shl pop mov and daa fs inc push inc cmpsl jae cmp ja inc rcrb dec mov sub addl fmuls lahf out push movsb inc pusha or addr16 push add mov (bad) iret (bad) js sbb adc ret mov mov aas pop out sub sbb loop js jecxz push (bad) mov scas scas xor icebp jno loopne lret push jmp ret stos repnz cltd aad jle add jno movsl mov repz mov mull fldcw adc out mov (bad) cltd cmp add and cmpsb (bad) mov sub dec movsl adc pop push mov mov push es insl andb mov mov sub out cli push dec xchg mov jmp test addr16 (bad) std movsl mov jl pop mov loop xchg ficoml outsb sti xchg mov test jp mov dec stos add pop fdivs cmc add and push jecxz mov inc imul (bad) das push xchg ret xchg lcall test mov pop jle push push popa outsb mov add sub mov in cmp pop icebp (bad) push cld aaa je inc mov jnp nopl out or mov xchg mov sub cli push lods daa mov imul imul nop jbe add cli sbb and cmp mov dec mov cmp call lods imul mov jmp (bad) lret mulb or daa pop xor jmp cltd mov xor mov push dec cwtl inc cmp in lods mov daa mov (bad) pop (bad) adcl push jmp stc divl xor xchg int3 and adc sub rcr dec movsl test pop push sub add lahf pop out cli aad sub (bad) cmpsl mov stc push mov js fdivl push mov fist jmp stc dec (bad) xor mov or pop mov in (bad) ret xchg xchg push aas sbb push mov xchg popl rclb arpl xchg sbb rolb lods out add in xor mov sub push mov (bad) enter sbb jns push add mov mov (bad) rcll mov outsb jno adc dec (bad) arpl add sbb loopne ficom (bad) hlt jmp sbb inc (bad) stc lahf das xchg mov movsl arpl jno popf pop cmc jmp sub mov mov pop mov pop repnz mov cmovae lcall ret sub xchg popa mov test out jl imul inc sbb cmp int mov mov lret sub and adc or mov adc jle sbb xchg data16 imul cs pop jns dec mov adc xor cltd xchg mov cld loop mov rcrl cmp push cmp pop push push push xchg mov (bad) mov inc or subl out cmpsl push cld cmp jecxz lods scas dec movsl cmpsl (bad) stc push ret lea in xor bound cmc inc pop mov lds idivb jge push inc xchg frstor xchg or xor and (bad) ret aad or test and pop pop xor iret hlt loope push mov xchg es test push cmpsl bound mov sub xor scas mov jno bound and jecxz xor in in lahf jecxz (bad) cmpsb in test and pop cmp dec pop cmp lock push bound or hlt test and mov mov lret aas dec jno cs or movsb sbb xor xchg dec and out xlat bound pop push arpl sbb dec sahf pusha repz pop pop inc movsb test sbb sbb dec imul mov sub inc outsl out mov xchg or mov fmuls sub cld cmp sbb cmpsl fcoml cmpsb stos mov gs in push icebp lock mov shlb outsl and mov cmpsl mov mov cmc pop jb mov ret lahf imul fisub xchg scas int add in adc lcall sbb mov ja (bad) out sub push mov lock push (bad) fmuls jbe and cmpsb movsb mov push pop mov repz bound fabs es and push and mov into cli jmp (bad) lret and jnp dec xchg loop mov cmp fbld inc xlat mov stos in loopne mov mov and sbb roll shll stc pusha ss or mov add dec mov dec add jmp insb pop push imul call fnsetpm(287 jo xlat mov jne and pop mov sub sub and sbb mov out dec xor (bad) adc nop jg lods inc jmp push jge mov add mov fwait in xor mov loopne mov pop (bad) sbb cmp mov movsl gs (bad) cmp les cltd sbb add cs stos jg jb test in mov rorl sahf and mov xchg cltd js stos jnp mov into fbstp xor mov lahf pop sub cmpl cmp adc mov add cwtl (bad) out cltd das xchg mov xorb xchg ljmp jae sub sbb in test popa (bad) cmpsl or sub push xor inc mov sub out mov aam lods mov jno mov mov cmc rol scas movsl ljmp dec or ret lcall sub xchg negl sub gs cmpsb scas (bad) add jb repnz cld fwait mov mov sahf and out inc insb (bad) jns popf jg xchg arpl mov push lods mov xor test orl mov movsl in cmpsb loope bound lds fsubrs inc outsl jne loope and pop xchg les or dec mov pusha loopne addr16 movsl or (bad) push iret add scas imul cmp and movsl test into mov jno cmp cltd lods xor arpl ds fsubp out cmp fisub mov and out add incl stos lock loopne mov mov sbb (bad) mov and xchg rorb test dec das sub imul jmp enter addr16 fidiv fnsave icebp xchg into or cmp mov in push add mov adc ror fs mov popf mov inc and dec or or ret insl mov into int3 fwait inc push cmp pop push (bad) fldenv sahf fildl dec aaa or push mov (bad) sti pop xchg mov xor pop ss jbe xor push (bad) xchg icebp sub mov stc or push lods mov js xchg mov cltd cli pop sarb mov (bad) outsl in add pop mov cwtl xchg in dec cmp iret sbb int or movsl mov mov roll mov and fnstcw negb adc xor es xchg (bad) ds mov arpl mov call insb test xchg clc push into cmp movsl rolb das or adc jecxz xchg add push lret (bad) xchg mov push pushl ficom jecxz pop daa mov dec fwait (bad) or dec pop movsb hlt dec loope xchg addr16 inc cld je js xchg mov test ret inc mov cmc insl call jae mov std sub mov inc inc adc pop out jo repz addr16 movsl into out xor mov std mov mov in mov jbe mov addr16 sbb sub gs mov movsl jnp mov mov jno adc lods mov mov inc ds out insl in jle cs rcrl push push xlat xchg ret icebp pop mov xchg outsb shr mov iret xchg gs push daa sub incb xchg dec js mov (bad) nop mov and and scas mov mov mov jb ret pop in and ficompl mov adc jno stos ja cld sub add jb dec jle push outsl out rolw mov dec and sti ret jo lret xor call xlat das mov mov cmp inc bound mov mov xchg push out dec popf outsb add mov fstpt arpl or out mov scas loop in jl aaa shll (bad) jmp lds mov inc sbb (bad) xor xchg pop cmpsb rcr jno ss mov in sbbb (bad) sahf jnp push cwtd sub je jmp mov pop cmc in call sbb sbb cmp mov (bad) ret inc mov ds push mov cwtl push cmp adc aam jns push adc cltd add mov addr16 (bad) push iret jns adc add sti or push dec or iret lcall pop mov sbb pop shlb adc or sbb xor mov sub mov test sahf scas mov adc lcall mov stos ljmp mov cmp leave mov mov mov inc or popa (bad) fdivs xchg or js movsl pop inc mov mov xchg lcall movsl jno fidivl inc cmp fadd into stc loopne cld (bad) mov fnstenv sbb sarl adc nop out xlat dec cmp xor ss jo (bad) push mov pop ret (bad) in outsl mov mov lret push inc mov and fisttpl inc lock in out xor adc imul dec push xor adc lret sbb (bad) cmp cmpsl pop fldl out dec and leave les mov aas mov jge nop outsl (bad) in (bad) test cmp data16 and pop pop mov (bad) iret call mov push mov xchg pop bound (bad) jg (bad) mov jmp xor pop and pop jg sub cltd orl js in fdivp push (bad) subl mov mov mov push popf lds ss sarb out test add mov xchg push push mov test (bad) (bad) push mov pop push mov out and aas sbb lods lcall mov cld sub fs out mov lock jno mov sbb push sub clc push iret sub dec cmp in and pop ss rclb cmp lea mov rcll ret loope sahf mov and insb in dec sub pop adcb adc mov aas sbb inc dec mov les fnstenv xlat test imul iret mov imul cmp mov jns push notl sbb push add test pusha popf adcl dec loope mov cs adc (bad) mov aas push mov das (bad) (bad) aas sub add (bad) stc out mov call sub lahf mov and decb add loop (bad) xchg lahf push pop mov aaa sub and fwait mov mov and int (bad) popa cmc mov adc cltd mov jo jno sbb inc pop push xor fidivrl sarl mov pop and mov imul pop push push repz cltd in outsb in icebp pop sub sub sbb xchg lock hlt test mov jmp fnstsw dec lcall gs in imul cmpsb push cld leave pop dec jecxz mov xchg mov adc cmpb mov adc insl and mov out xor push push sub sbb xor inc or adcl out xor mov cmc insl xchg mov mov jb out mov dec (bad) divl inc adc xor icebp jno jecxz xchg add xchg push mov mov rolb (bad) mov decb dec jb cmpsb (bad) add inc push jo cmp shrb rorb rclb repnz sahf mov cltd mov add in (bad) enter or fadd pop shrb movsl or fld xchg mov lds push push repnz ficom dec fnstsw jmp or daa hlt and lea inc pop movsb jle pushw mov sbb inc cwtl mov lcall fidivrl nop addr16 mov sub and cs int3 dec shlb dec mov lret mov or inc popf push xor cld icebp xor stos out lock std jne inc adc pushf inc push imul call call push out push cmpsl call dec mov (bad) enter lret insb dec fcmovnbe add mov mov stos movsb mov lods fidivl movb fwait ss lcall cli pop jge test inc sti bound inc add xchg mov cli xchg arpl outsb sbb loopne lock mov (bad) dec push lods out test or lret mov push dec jnp add mov popa mov cltd inc cmpsb bound push sti lock adc pop xor jns push leave jge (bad) mulb inc pusha daa pop mov xchg cmp test addr16 pop jg cmp dec pop inc and fnstenv jno mov jns cmp bound cmp jecxz int pushf sbb mov jecxz adc xchg mov inc or sti pop jp cmp jbe mov adc les out cmpsb loope dec push lea (bad) fs loop mov mov adc dec jge cmpsl sbb iret mov sub in lods mov (bad) sbb sbb arpl mov inc pop xlat mov nop insb fisubr lea imul (bad) int3 xchg (bad) fnstcw andb sub and sbb in push pop (bad) push and mov push cmpsb fstpt scas imul push mov add lahf loope xchg jb jno inc fsub adc cmpl and pop loope dec adc mov adc es hlt xchg adc testb stos pushf inc xor notl adc adc leave inc or and jecxz andb aaa xchg aad in cmpsb pop add and pusha jbe jle cltd and (bad) pop jne lods sbb pop cs ret out or or adc inc adc fisubl popa mov mov mov or in mov std movsb jp out mov or mov pop adc mov inc insl pop lcall mov int pop movsl ss jb push ja (bad) lock repnz sti cld popf dec adc je roll add andl cmpsl stos out jb push pop mov scas cmpsb call imul mov dec (bad) xor dec mov mov push jge (bad) xlat add imul movsl push dec cmpl icebp pop pop jns aam or xchg sbb mov mov aaa and lret cli imul mov xchg xchg mov fbstp icebp mov fildl pop stos adc andl int3 mov icebp imul xorl pop jmp aaa aam cltd mov xchg insl loopne xor and mov stos sbbl xor inc mov pop push test mov mov mov inc stos mov dec sub fcoml mov insb call inc mov cmc std inc scas inc outsl fisttpll jg and push into in mov cs jnp dec pop (bad) jbe js lods push jns cltd sti std cmpsl cli movzwl scas lahf jp sbb xchg or mov sub dec mov pop (bad) and mov cmpsl jnp sbb xchg mov mov rorb loope std mov inc hlt fs cmp mov cltd in std repz vpunpckhwd xchg dec je stc mov add (bad) jbe fiadd movsl fwait inc adc adcb cmpsb add outsb repnz neg test jnp sahf jl inc flds fs out adc cmp mov jbe jno jge scas ss push inc jmp jp movsl mov inc in lds dec inc push imul mov addr16 mov aad or test dec rclb ljmp jae sbb and pop adc and xchg pop into fiadd inc xor arpl frstor test in cmpl cltd imul xchg cmpsb scas cmpsl stos repz and sub lds icebp leave inc (bad) mov mov imul mov sarb movsl sahf pop cmp movsl push (bad) hlt cmpsb cli lcall cmp ds js pop andb add jns xchg (bad) loope rorl add push sub mov addr16 shr push movsl ja fnstsw scas adc cs movsl sbb gs mov stc rorb mov (bad) in cmp js push mov xor xchg inc jb adc stc jl shlb jge lods cmpsl sub mov mov pop out push xlat mov clc pop mov (bad) sbb (bad) push jl imul sbb fsubr cli sub adc daa push es into ret out cltd inc dec pop cld xor aam jo mov cmp jae cltd add adc es mov jae or into pop jbe loope das pop push xchg pop ret leave and or (bad) into cmp sub or imulb movsl mov (bad) mov inc push jb mov pop rol mov mov jge imul pop xchg and sarb fmuls dec jns lds cmpsl or repz xor dec cmp dec pushf mov mov cltd into xor shlb cmpsl and xchg es repnz push (bad) pop jns loope mov popf push dec or pop sbb sahf mov pop jno (bad) lds ss mov jb es mov fwait outsb jg mov (bad) ljmp ss inc cltd jae fwait mov jmp add lahf xchg icebp inc mov loop imul movsl pop std sbb test lock pop clc pop push mov fsubs test fistpll jg test mov shrb sub adc lods mov cmp (bad) cmp mov ss push into add adc mov cmp ret cmc pop jecxz xchg sub (bad) push lret (bad) jmp mov and mov in aaa push and mov pusha les jmp mov mov scas jnp stos dec mov mov mov hlt ficomp std popf stc pop mov dec mov sub bound out cmp sbbb sub or jecxz mov dec cmp call push neg test test adc ss inc lea pushf sarb xchg jle push popa mov push add mov jne cmp (bad) out adc or popa test leave in pop fcmovnu xchg lods and xor stc mov bound shll sti sub dec arpl fadd mov adc jbe sub daa jnp call jnp mov pushf fmul les bound adc or sub xchg mov in addr16 out cmc cmp and cwtl mov adc add push test adc pushf and (bad) push xchg mov xlat ds mov or stos mov mov (bad) mov sbb cltd xchg lods adc sbb mov ds push pop xor mov mov aad (bad) and test enter sbb movsb ja mov out mov mov mov dec insb fwait cmp sbb out test fbld jae movsl xor add mov sub cwtd lock call xlat (bad) cmp (bad) cmpsb adc pop sub out scas xchg (bad) mov movsb mov sbbl push adcl push movsl add mov and or sub sub cmp mov fs das insl sbb hlt cwtl mov pop movsb cmp jmp inc or mov popf sub sbb cmp xor (bad) (bad) dec xchg mov int3 jno mov mov add repz fstpt sbb test dec dec int mov pop (bad) int3 outsl mov lea (bad) call sub cmpsl cmp out xchg in pop lock add dec or test gs mov adc sahf fwait mov mov ds out mov xchg sti push les mov xor sbb loop lea cmp test jae push dec cmpsl or mov in ret es jbe stos movb cltd lock xlat mov mov popf mov popa mov cmp sbb mov mov aad xor jg pushf dec sub movsl adc adc cmp xchg insl in mov lahf rorl xlat jno mov jmp aaa pop mov adc (bad) iret mov and movsl pop mov fs jmp and in fisub mov inc int3 adc sbb (bad) movq ret test mov stos ss pop mov or pop and xor mov adc mov mov mov sti mov mov roll and cltd fdiv mov cmpsb xchg sbb jge lods test pop arpl and iret movsb jbe mov jp or mov adc (bad) hlt pop push imul and push mov mov imul mov push add pop mov es jmp mov mov xchg mov movsl push mov aam cmpsb jmp mov pushf xchg xchg adc imul imull stos dec lods dec or adc push and and mov daa jecxz xor or inc outsb mov imul out subl mov and add lea nop les mov clc lds int3 mov mov or test and cmp jbe movsb cmp (bad) lock hlt and and call sbb movsl jmp dec roll add xchg scas xchg add mov jae (bad) mov jne mov shll incb inc lods std movsb dec out in jecxz mov das movsb mov imul xchg (bad) cmpsb incb test clc call xchg mov std inc cmp flds jae hlt pop xchg (bad) mov addr16 cmpsl lods pop push inc mov movsl leave cmpsl mov pop jne test sbb out cmp pop bound inc pop addl jecxz jge pop lret movsb shlb cmp call (bad) and mul ret mov pop mov dec movsl outsl dec jp and out pop or int js js pop mov dec add dec inc jb cli mov mov jae mov fdivrp dec jg mov js push adc xchg bound imul cmpsb notb mov ret xlat lea cmpsl setno inc shr (bad) jmp add push sub lea stc push mov fcmovb pop sti and jns dec mov jg bound mov add and mov cmp je push (bad) xor and cltd (bad) out mov or out scas pop test ljmp imul mov mov jo jle iret and fsubs mov fimul outsb ljmp rorb push pop cld sub lret (bad) mov out push addr16 lcall fsts pop fisub mov stos scas lods stos push dec or stc rcll jno rolb xchg sarl or mov sahf cmc and mov pusha add mov pop (bad) stos sub js mov out repnz dec out xor test adcl andb and mov and leave mov vpaddb movsl mov lcall mov (bad) mov sti out pop mulb (bad) push in roll (bad) mov mov mov repz lock or jns push mov mov fs cld xchg jnp rcrb pop mov mov cmc dec mov xor inc mov lds sbb pushf add push jmp stos pop jmp push sahf mov dec dec int push repnz (bad) xor add sub lods mov cltd mov xchg xor fwait push mov sub fnstsw pop stc jno fs imul cwtl pop xlat push sub cli lds (bad) out movsb xor xchg ljmp or dec mov inc adc push sbb sub movsb xor mov (bad) test pushf pusha mov and fidivl imul mov lds pop cmp repz neg jle test out adc mov push stc jecxz outsb pop mov (bad) xchg pop jmp je push enter aam adc add sub insb push scas pop mov cmpsl mov and mov test mov fsub and xor shl sub imul shr xchg (bad) sbb or dec add push pushf std test movsb arpl mov cld data16 fnstcw cmp inc or data16 imul (bad) in cmp (bad) bound adc xchg mov jns sub mov in clc sbb lret inc push mov fdivrl out out cmp cli pop lock mov jnp mov adc stc inc leave and in mov mov jecxz jo jmp ret add pop mov dec outsb mov xor outsl pop std pop mov sub xchg ljmp aas mov cmc addr16 ffree mov int3 loop lea test pop movsb mov lock cld push enter jge and cmp aam or orl mov mov pop inc in imul (bad) and jbe jb,pt cmpsl mov xchg vmovdqa inc cmpsb test xchg repz and jecxz repz mov icebp aam xor dec rolb ss dec and out insb pop (bad) cmpsl mov loop push inc and and jne xchg ret and cmp aaa xor (bad) pop xchg inc adc js pop int3 mov popl push and adc loop mov in inc mov mov ss and mov (bad) sarb mov jns sub out subl out mov pop sbb loope lret mov xor ret jle or jo pop cltd imul aas sbb and mov dec aad fsubl cmp insl in andl and rcr push adc je fs cmp (bad) push test int jns stos and push and inc jo call mov (bad) fwait insl push movsb nop sbb mov adc pop cltd jge outsb xchg shr daa xor xchg aam (bad) jl in mov push push mov cmpsl xchg xor lahf repnz mov sub push flds push lret rcl mov cmpsl jb adc in or mov lods dec sub inc or mov or cmc das push (bad) loopne cmpsb ds mov repnz aam aaa and xor jb and jg mov fisttpll iret dec lret outsl loop andb imul insl xor mov frstor insb jmp rol js popf cmp push cwtl mov push out inc cmp sti es out movsl cmp mov imul movsl fildl imul inc mov (bad) dec sarl xlat jge jae mov mov mov dec push pop xchg mov mov mov jp movsl sbb adc mov xor cmpl lock fwait js les mov dec (bad) pop xor push add dec mov inc jmp push mov mov mov add mov push and adc dec in cltd or xchg inc (bad) xor loop mov in imul lret fistp lcall jne repz adc ss mov add mov mov mov (bad) nop mov cwtl mov jge ljmp cmp adc outsl in dec mov add imul jle sbb testl and mov inc pushf cmp lret and xchg mov mov movl mov xchg mov negb stos mov aaa sbb push fcmovb dec xchg stc cltd dec icebp insl mov outsb mov lock xchg sbb insb jne lea jnp repz (bad) int3 inc rcr jle jns jae push pop mov mov aas sbb jp scas movsl pop and lock and out loopne stos push push ss flds fwait iret mov movsl (bad) pop mov fisttpll mov push adc mov cltd gs push push sti push int3 xchg mov enter add add or sbb mov adc fwait ret arpl xor mov dec or leave mov cmp daa fimul inc mov lock push imul mov test dec pusha cmp xchg int push jp dec xchg mov jge shlb dec mov jns pop mov addl xor mov lods test or sbb cmpl and stos cmpsb call mov icebp pop rcr jge inc push lea mov mov pop and mov ljmp imulb pusha jmp xchg imul dec test fisubr idivl mov lahf fnstsw pop or movsl sbb out sub test call fsub imul icebp popa fsubs pop sub loope stos aas leave scas cmp js lods test inc fs xchg pop inc sbb outsb lcall jg leave xor mov repnz add push ret pop (bad) and xor mov ljmp (bad) cmp mov rorl pop mov scas mov or fnsave lret jecxz fldenv cmp sub jp xor push lahf lea jne arpl lods imul inc mov idivb adc shr insl js aas adc dec shlb sub (bad) aam cmpsb imul (bad) adc mov mov mov xchg dec lds xchg (bad) (bad) xor test mov cld adc cmp mov xlat mov mov add bnd push imul imul js mov loope or mov clc push and adc mov aad push rcr mov inc mov nop cwtl outsl enter dec cmp cld je ja repz enter leave and mov mov scas test pop mov dec pusha orb inc mov mov iret popa sbb daa sbb hlt jb ja mov sub data16 and mov arpl je ljmp xchg or je dec and outsb cltd out dec push std ss cmp scas jns mov sub xchg or pop push mov retw sub inc adc mov and mov mov dec pop mov fs push inc pusha hlt mov xchg lret insl mov adc add or leave mov roll add lds adc adc pop push mov dec jns cmc or sub dec mov and mov jb adc inc cmp loop les (bad) clc push cmp mov push add mov les dec sbb mov insl add mov out aad mov mov dec cmpb or nop xor jns into xchg push jge xchg mov int in mov pop push fcoml cltd aad (bad) push jle push stos movsb fist jecxz notb jg aaa mov in push mov insb bound sub mov loope sbb mov pop or out imul and into and and mov mov jge xchg mov mov addr16 sub int3 mov movsb push mov nop icebp cmp cmpsl mov push mov jp pusha jmp (bad) clc pop cmp scas stos (bad) jmp push (bad) imul mov ret fcomi aas mov into rcr inc xchg jb push sarl pop mul jb xchg subl mov push cltd dec dec lret loop lea lods (bad) leave pop movb inc and push mov ja cmp ja cmpsb dec cmp lret mov cltd cmp movsl push inc mov mov insw fwait xor pop insb xor push xchg imul push adc fldcw loop cmp sbb test mov movsb insb ljmp push xchg test ljmp inc xchg mov imul cmpsb cltd hlt pop lock aas mov stc sbb and xchg mov xchg or aaa dec sbb mov mov xor and mov add outsb mov xchg cwtl push lock jp sbb inc adc seta mov mov enter mov push lods and mov pusha push ret xchg movsl jl mov shrb or fdivl enter sarb lock cmpsl mov dec mov loopne sub (bad) stc cwtl sub std aad mov xchg xchg outsb dec pop pop or and nop mov test push mov rorb cmp mov (bad) scas lods add imul sbb int mov dec or jecxz xor int3 mov lea (bad) sbb mulb call jecxz xchg imul cmpsl je xchg mov les mov and repnz dec and pop and (bad) jbe lret jnp stos and ret inc (bad) pop pop jecxz (bad) imul xchg and fmull jcxz fiaddl xor jnp and icebp xor xchg cmpsb jne adc mov mov add jge pop inc mov ret clc es arpl mov inc inc insb and cmc cli mov adc loope and das sub bnd mov adc std push loop dec mov js dec pop xor push in loop movsb mov mov sbb orl mov fnop in cmpsl nop lcall pop push cld sbb adc mov push or push cmp push jne cltd test subl mov mov es mov sub mov pop push dec push das dec loope (bad) mov cmpsl mov or mov icebp gs std (bad) std xchg mov aas adc fwait cld loop mov shll jns mov inc lret insb inc sti movsl fisubl (bad) push jmp ja (bad) dec (bad) inc icebp clc movsb int3 or push or mov and fwait xchg and popf das dec push icebp xlat adc (bad) std fistpl pop popf pop inc daa and in xor and pop ret (bad) xchg mov inc jae scas dec js or test mov adc (bad) pop inc adc cli and and (bad) cmp int (bad) in adc add cmpsl push sub mov xor adc jae xor inc bswap lret xchg mov cwtl test add xlat jl jmp mov add sub or xchg les pop hlt xor push inc mov push mov and push add mov xlat pop cmc ds or adc adc or mov loop xor xchg ret sbb jns hlt jcxz pop movsl aaa inc mov shlb mov ret shlb add mov sahf mov jecxz stc add scas call leave mov inc push sub mov inc pop xchg mov xchg mov movsb and fidivr mov adc leave lock leave mov int lock lock pusha sbb (bad) cmp inc cltd inc dec imul movsb jecxz stos ret icebp into (bad) fsubl jae test or test pop or leave lods push (bad) icebp jb and pop shrb ljmp and push adc lret hlt cmpsl (bad) or ds rolb mov into imul jo mov inc jmp mov mov jnp push adc push xlat lahf sbb xchg out push xchg or cmp sti jle rcrl push inc add scas and cltd insb ljmp stos scas inc adc jge sub cmpsb mov xchg fnsetpm(287 jle leave mov cmpsl shl daa cwtl repnz (bad) fidiv nop cmp xorl fistp fcomps cmpsb mov jmp loopne cmp xchg test dec inc fdivl fninit pop mov int3 clc push stos push pop mov in outsb dec push inc fild roll xor inc xchg andl fbld inc in fwait cmp push mov cmpsl push cld dec pop and data16 (bad) and push out push inc sarl push xor icebp xlat (bad) movsl sbb xor xchg rorl movsl insb jne leave je out mov pop les sbb pop mov imul lds lods xchg jecxz out faddl (bad) jb fcmove andl jnp xor xorb mov lods call cwtl in (bad) and fcom mov jl and push cmp dec imul outsb out sub idivl out cltd fucom dec (bad) jle test push mov mov mov and imul rcll sbb sub icebp bound arpl sbb push add pop mov hlt mov jmp ja sbb int dec lods lds xchg out (bad) (bad) mov fwait mov inc or sahf cltd inc or sub xor fiadd loope scas lods sub pushf insl fcompl mov mov mov jl leave mov fsubrs sub fildll mov and cmpsb in cmp dec in and aam imul out (bad) cmpsb pushw sub sub add jno add adc pop and push movsb fdivrl sub mov pushl in fildll cltd mov lret sbb mov jns dec xchg mov (bad) or cld jg jmp outsb sub pop aas inc pop insb mov fisttp js push mov push mov cwtl std mov cs pop sti test and mov lods stos and lcall pop loopne ror sub sti jbe inc sub sbb inc adc mov imul xchg fidiv push sbb adc xlat (bad) xchg rorb loope sub xchg cmp mov xchg mov aaa mov mov add lods imul inc fbstp mov lods and pop (bad) mov pop push js les mov lahf push scas or test lock idivb lcall test mov or jmp in cli add cltd pop aas aad pop push int jg mov inc push add aad lock pop fsubrs (bad) into cmp test fisub xchg dec out fwait push call ds xor loope test adc push (bad) pop mov or push push jnp xlat lret cltd adcb scas inc xchg mov mov cmp pop test cmp xchg in mov jns loopne sbb popf in mov scas mov pop or in js imul and out mov int mov mov mov in shl out lock and mov out leave pop mov pop fwait mov lds sahf lcall mov gs mov negb ljmp ja imul js cmpl gs push pop arpl sbb addl mov mov (bad) fsubrl addr16 pop mov xor fwait out mov pop mov xor or mov fistp cmp xchg in and push ljmp sub sub fsts fs jb inc lahf cltd mov add jne mov movsb decb mov sbb loope and sbb xor (bad) bound cltd or push es mov lcall inc jg adc in mov lcall add fwait pop jbe ret das adc aas mov pop lods rclw lods inc imul movsl pop jge sub (bad) in push xchg loope mov push (bad) cmpsb dec nop aaa iret ljmp or pop sti or pop adc ret jno icebp sub dec cld rol (bad) fstpt bound addl xorb cmc mov punpckldq (bad) push lahf mov icebp mov (bad) hlt testl jns popf scas lods outsl rcrl por in test je in nop mov xor jbe push cltd fbstp push dec stos xor ljmp mov (bad) jae rclb dec cmp sub popa fsub mov push (bad) jnp movsb lods or popf mov pop mov mov xor mov xor das sub std cmp push cli xor mov pop enter push in rcll xor pop mov cli sbb mov and pop dec sti cld sub push aad clc xor jecxz mov and cs pop mov addr16 out or movsl inc fisttp mov adc or aam jne mov or sub jecxz and dec pop loop imul xor repz inc ficoml cmp jl mov lock mov xor (bad) cmp push aaa jecxz ss and loope loopne xchg pop int3 xchg push push mov cld out and xchg xchg ss test lods or pusha fdivl bound loope push pop out sahf ja cli pop mov in dec or (bad) mov test (bad) mov mov bound cltd ret aaa mov repz mov push lret ss push imul out out mov inc push inc sahf (bad) loopne out xchg push xchg lock xor jecxz test hlt movsl fcmovu icebp pop inc push mov cli and mov sbb fnstenv ror mov bound or jmp jl cmp dec xchg xchg repz cmpsl cmp lock daa mov push outsb out out or aaa inc push mov jae out sub call les and or arpl clc jo lods stos mov scas test mov aam mov pop mov outsb in pop jl xchg (bad) mov mov cmp cltd pop inc cmp cld imul push rclb mov push xchg addl sahf test in jno movsl or inc dec rolb cltd enter jge (bad) jp repnz mov mov rorl adc xchg cli dec mov and jns cmp pop sarb inc sbb push mov inc stos push mov mov pop jno les aam insl pop jne (bad) or pop mov xor jb jmp cmpsb movsl xor mov add pop movsl es mov xchg pop ss mov daa (bad) repnz test cltd bound jo jns pop xchg inc xchg pop lahf xchg fcoml sub popa sub pop jnp rclb mov lods stos or jp test gs mov xor cwtl adc ljmp mov xor adc outsl jmp (bad) push jnp mov imul cmpsl mov das int jnp outsb jmp inc cltd cmp loop lods xchg repnz fcomi or mov sbb xor jg (bad) ret sahf and and js into shld inc dec xchg mov and pop mov orl or ret xchg dec dec add mov outsl int3 sub mov cs inc mov xor data16 loop mov dec add out popa and aad pop daa cld cltd hlt add (bad) jle cmp cmp fist stc mov fiaddl mov sub insb dec sub stos pop lock test loop mov push subl and cmp popf cmp mov les sub std icebp push stc movsb push lahf arpl hlt sub inc sub test inc out bound push imul pop rorl in mov pushf mov or mov out insl lret inc pop mov arpl jbe imul hlt in or push loope mov sbb mov add dec jbe in and test sub and jp out imul adc std cmpsl cli pop shl int mov in and fcomps sub cmpsl sub pop hlt cmp xchg into mov mov loopne mov mov and push push cld out mov ja in dec (bad) lret divl push stc sub lret adc inc aaa jno fbstp std push (bad) iret mov jp enter negl es test mov rorb sbb and dec or lcall aaa and dec in inc pop out and out imul push cmp imul imul mov movsl push jg (bad) xor dec imul jne into inc sbb loopne out cltd push fnsave cmp inc mov sbb sti pop mov jecxz movsl (bad) mov xlat xlat xchg add inc insb loop adc movsl mov mov imul ficom test xchg ret loop and fmuls pop lret test sahf imul lea pushf mov or mov cwtl daa cmc xchg and pop xchg mov scas pop in adc call pop add in movsl jle dec cmp cltd aam mov cmpsb and cmp jge xor mov repnz insl jmp lahf mov stos fldenv or mov sub shrl and xor pop and mov mov cmc sub or add cmp stos jns sahf movsb mov or and addr16 mov stos mov data16 sbb pop or movsb mov adc das sub jns or cmp mov int3 fs mov idivl jne pop (bad) mov push mov popa repnz lods mov mov inc (bad) mov or test sar mov jp lods mov clc loop adc imul mov out lcall xlat and js pusha mov inc adc adc (bad) push ret mov sbb fs and lea adc scas mov pop idivl dec cmp dec pop stos mov dec das sub inc mov test lcall fistl call mov add pop adc in andl adc incb pop sbb call xchg (bad) xchg mov inc leave mov sub and rorb sbb imul push and imulb mov jg cmp mov (bad) fmuls (bad) (bad) cmp lret inc jns xor adc stos cltd sbb xchg ret xor test pop mov addr16 ja in pop and test std xor jne movsl xchg mulb out lods inc (bad) stos lds cld add mov mov cmp movsl jnp xchg or mov adc test pop dec mov hlt imul and inc adc mov sub pop xchg dec mov popf pop shlb sbb sub ljmp (bad) mov and out dec jns outsb (bad) push leave mov das push rcl pop mov pop cmpsb xor cltd outsl lret repz and cmp mov movsl and mov mov pop nop ret jo mov movsl notb js mov pushf in stos out mov inc adc repz sub frstor sub add in sbb cmp (bad) sub pop mov push iret xchg jl dec jbe repz cli jno push cltd dec xchg or (bad) xchg out sub mov repz cmp scas mov mov aaa pop xor roll mov or sbb and push inc int call add test outsl out aas sbb sbb jbe call shll mov loope stos inc push repnz sbb movsl out dec push fadd cmp xchg and mov mov xchg pop push mov aaa push xchg scas mov fcompl insl cltd imul repz in cmp push xchg es push sbb lods movsb sub xchg cs sbb mov and mov dec stos mov pop dec mov js test inc (bad) fstl mov sbb add push mov rcll and xorl lahf dec dec iret pop lea xorl mov and and mov stc adc imul and imul cmovs dec (bad) sahf mov cwtl scas scas subl in sbb pop inc cmp (bad) stos imul cmpsb stos and pop aad cltd xchg jmp rorl inc cltd stos mov ror in insl push arpl adc mov outsl popf (bad) fbld jge fldl pop (bad) test xor mov movsb scas push loopne push movsb pop aam test and movsl dec movsb xchg ret dec or mov adc lock xchg jb jge fistp fistpl (bad) cmpb or jecxz dec out sbb jne inc call sbbl and xlat adc outsl cli xor xchg or popf testb test hlt ljmp std sti and push xor dec fstl inc imul mov mov fildll sub lods outsl in (bad) mov (bad) bound shll xchg or jb dec lods (bad) sbb adc (bad) aad out scas popf push push inc or mov mov mov mov mov addl int3 es shlb pop cmp cmpsl ljmp dec sbb shlb mov lods xchg lods sbb cwtl xchg ljmp stos or push ja jmp test cmpsl mov sbb rorl sbb mov dec push leave or scas cmp iret (bad) fcoml leave sub and (bad) sahf push inc bound ja in movsl mov lds out mov cmp in iret add sub cmp cs sub mov cmp stc roll xchg jge mov mov pusha cmc cmpsb lea push jecxz cmpsb mov mov addl pop push adc sub test test int3 cmp fs xchg test lcall stc js gs aad cmp test mov ret cltd inc jp (bad) cli scas lret (bad) sub (bad) bound in mulb les outsb cmp insl or pusha mov pop sub js (bad) sti inc dec loope pop xchg xchg jbe cmp shlb into xlat mov mov push push hlt pop (bad) and leave cwtl cmp inc push mov cmpsb jno test dec int3 xor call mov arpl mov divl dec rcrb cmpsb outsb pop inc push outsl or sub les cwtl fldt add sub enter daa pop dec and push lret and lret sub lahf div push xor cld sub jmp in sub push mov ss icebp mov cmpsb fisubr xchg bnd (bad) mov mov and pop adc lahf jno or inc sub mov sub adc popf lods inc pop fs out daa push sbb mov mov cmc sub mov sub cli and call add pop out sub frstor mov (bad) (bad) dec adc shrl sbb (bad) es fnstcw ret aaa repz test xor pop dec mov adc mov pushf pusha mov pop cmpsb cmp inc mov data16 js mov xor aad fnstenv ret loope mov icebp fiadd loope mov adc pop adcb in mov outsb aad adc inc xor leave mov push add scas mov hlt or (bad) mov arpl push inc pop mov inc mov repz push (bad) pop xchg mov hlt push (bad) repz add push xchg shrl std cltd dec sub lret test jo pop mov call popa fadds sub sahf cs inc iret (bad) xchg hlt mov mov je inc xor mov int jne pop mov fcoms mov aam add rcrb sbb movsl sbb ds popa jns or dec mov movsb out jge add int3 push cld andl es sarl and daa xor frstor or outsl gs mov dec push inc xchg stos cltd mov out gs mov insl (bad) sub ss pop jns cmp into cmp push jp aam xor inc xor (bad) adc dec mov add cs mov and mov scas test mov mov mov pop notb lret mov cmc test mov cwtl popa addr16 loope dec or loopne in imul daa jnp imul fwait pop xor addb mov cmp in push mov cltd xchg push (bad) in popa fidivrl jle bound scas leave enter test jecxz xchg cmp ljmp (bad) dec mov pushf sarb das sub sbb sub xor pop test sahf mov and cwtl xlat add push movsl inc jb lods dec mov test iret mov pop out insb subl cmp xchg scas push dec jge mov adc (bad) xlat inc xor lret jo pop push insl mov ja lea sbb stos jp pop pop jns sbb stos cmpsb (bad) xor or or cmp push inc lods out cltd fdivrs mov loope xchg sbb pop out or xchg fnstsw jbe push add pop test pop pop and call jge mov aam mov mov or scas rorl inc xchg push and test and pop je inc icebp jb bound movsb jl inc fbstp mov cmp mov xchg test rorl ss lock icebp xor cmp sub jb mov jmp sbb gs shlb xchg add lcall adc lods push mov iret (bad) test inc out and ret mov mov rcl jbe pop jno push add inc cltd adc lods xor ret adc lret jle xor aaa in mov fwait dec add icebp inc mov mov add push push mov lret test mov inc mov mov sti daa add push pop fs mov cwtl daa sbb in or mov lcall jo pop (bad) push jmp sub pop xlat subl and sub xor push pop add dec shl xchg push sbb jnp test stc ljmp mov cmpsb adc jb cld frstor (bad) push movsl cmp sub mov dec jge xchg (bad) (bad) mov jle dec ds icebp out out cmp shlb jge push pop inc loope jns mov xchg mov mov mov cltd mulb and mov dec daa loope into xlat imul push cmp mov fwait mov pop (bad) push adc or mov clc call push adc cli fwait inc lret cltd adc mov arpl fwait iret mov push xchg and mov leave adc (bad) push ret add jae mov jnp add loope mov jl shr mov push add sbb imul xor imul jnp mov cld pop mov mov mov pop inc imul cmpsl aas pusha cwtl jns cltd adc insb pop adc sbb mov mov pop jle xchg mov mov scas aas ficoml add and mov cmp xor movsl and cld mov (bad) xlat xchg xchg cltd sbb and sub mov or bound mov nop fdivl mov xchg xchg dec add pop pop xor mov pop jns dec cmp inc sub fisub mov cmp fbstp sbbl inc dec xchg dec andl add mov gs out call jns (bad) movsb popf pop and mov pop sub in rolb mov jb push pop sti pop out stc (bad) stos aam out pop inc fdivrs dec add pop mov dec mov loop repz das xchg rorb inc xor hlt cmpsl pop inc adc xchg add mov leave movsb stos imul (bad) mov pop pop sbb in xor sahf push stc fsts mov mov sti es les cmpsl (bad) lock pop lods mov pusha std and out mov (bad) push test das push mov mov xorb cltd mov mulb fisubl or mov pop xchg inc rolb out jmp adc test push daa xchg out mov imul dec or arpl dec test sub ret adcl adc mov stos add ljmp jl addr16 sbb inc add fdivrl aas lock mov mov mov xchg aam inc loopne stos and mov mov (bad) mov dec cltd add xchg fidivrl nop xor sar imull jge jg push push addr16 mov push int3 lods jo mov je (bad) mov xchg push inc or out mov int add and push pusha (bad) sahf pop cmp mov out and loope js dec push mov (bad) iret enter jecxz out negb outsb in imul jo mov (bad) fwait les loopne shr sub mov pushf sub add cmc mov dec scas adc sbbl sbb ss mov cld ja adc out or les bound mov ja loopne iret movsl sbbb fidivr popf (bad) add movsl leave or jno bound add mov cmp mov mov mov sub (bad) lea cmp sti xchg xor outsb jbe mov stos aad stos pop xlat adc jbe in in sub push sub mov pop mov push cmpsl mov mov jmp call inc push inc mov xchg mov sbb cmp gs add sub es in lcall push inc rcrl int mov fnop mov lods cmpsl cmpsl inc aas fldcw mov (bad) pop push icebp sub and dec int cmp popf nop mov xchg lea mov adc sub in mov popl stos jmp gs daa or mov je lds jbe cmpsb repz mov mov aas ret loop movsl cmp movsb movsl xor mov cltd pop cld pop aad jnp xlat xchg (bad) xorl xchg mov jp adc in sub jo cmpsl mov or lods xchg cmovo xchg jmp es push mov repnz sub stos mov xchg sbb cltd lahf mov mov stos es bnd ret mov (bad) mov shrb sbb add je mov pop cld and imul mov ljmp mov mov adc stc mov fs adc or adc imul jbe inc pop mov jp xor je fdivrs adc idivl int mov jnp inc movsb xchg xchg mov cmp mov mov jb push insl mov push fucom jecxz outsl loop pop jns repnz stc pop xchg dec push inc add xor push inc jns xchg scas int xor movsl jmp (bad) or jns jge jae add imul mov push add leave mov pop jmp push adc arpl push mov push subl imul out cmpsb call and mov jae movsl xchg mov orl fadds jo mov mov rcll xlat dec mov jae or sbb stos fxch and cltd cld mov push ror mov jg (bad) rorl shl stos mov cwtl push add adc xchg jmp fstl lret dec mov push xchg cmp sub mov clc mov inc lret sub adc (bad) subl cmp mov inc adc dec jmp movl sbb mov fcmovnu sarl jl stos lret mov fwait inc adc scas mov sbb std mov or mov xchg mov sbbb push in ret (bad) lods insl mov inc mov xchg and mov xor (bad) jbe xchg (bad) mov push mov dec xchg pop (bad) hlt (bad) test xor mov movsb adc ljmp mov sbb xor or mov adc inc mov pop fisubl inc hlt cmp cmp dec or mov lods mov stc cld cmpsl mov or xchg jp pop lret (bad) leave mov mov xor cltd iret mov es mov fs test sub mov aam jmp xor jl movsb in (bad) push xor addr16 imul mov scas inc adc sub inc or xor inc or jae xchg stos jge and mov mov daa cmp jmp movsl (bad) and aaa or movsb or sub pop inc fimul push pop call into and mov sbb call outsl add movb jnp imul and add rorb test mov push dec mov sub adc sub mov jb xor dec aaa pusha adc add xchg lea xchg push hlt cmpsb lret mov repnz jo mov scas scas mov pop sub movsl lahf jbe mov es es jle push dec test iret mov dec stc cmc bound lods (bad) cmp test cld inc (bad) pop (bad) ret and xchg xchg fcomps cltd pop icebp adc pop stos aas sub or sub dec movsb hlt pop pop aad jmp movsl mov mov adc insl xchg mov sub jmp into rep fstpl sahf aas out (bad) mov cmp insl lds dec sbb fnsave mov icebp dec jecxz inc cs push mov les icebp psrlw clc push cmpsb gs mov sahf and daa mov (bad) shll xlat scas fistpl dec inc pop inc dec ficom sbb sbb xchg sbb dec pop fwait dec dec stos mov (bad) call mov mov popl jmp pop addr16 jne sub xchg sub imul and bound jge lret inc in mov inc mov dec pop jnp jnp ljmp loope dec push cmp adc bound and cmp movsl adc pop mov jne adc fidivr negl addr16 inc pop and sub adc jl inc stos repz imul fs pop test mov push loope iret pop mov or repz sbb es mov (bad) xchg js mov sub pop add fs inc mull ljmp sbb push addr16 mov sarb jo pop add jmp and in orb mov (bad) (bad) mov lret fidivrl push idivb and hlt mov jp mov push jmp push add rorl cmc pusha sub add in pop mov pop mov cli ret in xor sahf lret imul sbb dec jp mov or int3 clc ljmp sub push cmp sub hlt push popf nop xchg je push leave aas adc push xchg cmp aam xor jp mov cwtl icebp or inc pusha repnz mov fsubl inc loope pop mov sbb rorl loop sub in movsl loop clc dec mov pop push sbb cwtl rcll sbb sahf sbb xchg xchg or imul mov or mov fwait cmc scas inc dec aam (bad) jb ret dec mov jecxz imul mov cli in loopne adc lahf sahf mov push lcall mov lcall js arpl and pop jb fsts aam clc std test out cmp xchg mov outsb icebp lahf rorb leave dec loop gs daa pop (bad) jl push xchg sub lret test push cmp sub repnz movsl adc adcl mov cs lock jnp mov int pavgw mov pushf cmp mov mov adc jg add arpl das mov xchg lahf xor and cld repnz mov test xor xchg add dec sub mull jo cs xchg scas push add mov ljmp xlat dec ss xchg mov xchg mov loope mov roll int (bad) aad inc pop mov jge mov ret sbb dec or cmp cmc xor outsl shlb (bad) and in js je xor daa andl imul inc idiv cld xchg leave ss out lods lock fdivrs fidivr js ret push mov dec and push bound mov mov xchg data16 fstpt (bad) cmpsb xchg sahf and adc push add sbb xlat movsl movsb mov jmp inc out push jb sbb test add and and push xor adc sti fisttpll imull xchg dec mov push or in adc sub stos addl aad jmp mov xchg iret or mov arpl mov pop inc push add popa lock mov std lret test xchg cwtl js dec cmp cmc call pop stc jno lds addr16 and mov movsl loop adc test or xchg or pop pushl repz mov (bad) and sti mov mov mov mov mov pop mov or and sbb push out cmpsl sti cmp adc fnstcw sub test das sbb inc adc adc lods mov xchg pop pop cmc (bad) das cltd and je pop or stos fs sbb xchg scas xchg out mov aas call mov notb dec loope jp mov xchg and push (bad) popa repnz movsl aam xchg cld ret xor pop mov push inc inc cmp push dec and xor dec inc test ror subb lods cltd cmp sub rep pop sti icebp lods mov data16 xchg std popf jns shrb hlt sbb (bad) fstps cmp addr16 mov insb xchg mov push mov cmp mov jbe and movsl and outsl sti loope mov sub or pop mov movsl (bad) (bad) cltd mov cwtl rolb lret lods mov xchg or mov sbb out enter mov jnp lods pop mov cltd fs (bad) mov mov push xchg mov out mov shlb or xchg gs mov dec cli lock imul fldl xor cmp gs js out mov mov repz inc adc dec mov aam out into add gs fstps mov mov push enter and mov xlat jg icebp adc xchg imulb enter inc test loopne dec lds push subb pop mov inc mov xchg lret je jns push cli push mov sub cltd pop cld sub mov push xor pop jbe (bad) cmovp test in mov ljmp (bad) pop push iret cli push cltd and pop add push popa dec sbb add xchg and cmp in xchg js pop mov inc adc movsl pushf les cltd mov cmc shrb bound mov cmpsb push (bad) leave (bad) mov shrl das xor lcall xchg pop lods and stos mov pop out fwait lods and sbb shrb lcall dec or xorb pusha into stos adc ljmp movsl (bad) stc sarb aas xor call and fs and jecxz es es sbb dec (bad) xor ror and rclb mov jb and test add scas mov ja sub mov in js cld shl lds cmp loope sub xchg pop xor imul sub movsl in and adc enter (bad) mov popf cmp push int3 xor sbb imul sbb and movsb jle dec rcrl jbe jmp lods push es and ja mov sbb sub pop loop stos (bad) xchg pop stos jb xchg pop pushl or stc and adc bound fisubr dec les cmp daa xchg cmc cmpsl mov and lods cmpl nop jge add pusha stos leave cmp inc sub sbb sarl xchg leave pop pop mov ljmp mov stc (bad) push imul pop mov rcll fnstenv and fidiv or jmp pop ss mov push mov mov xchg or lret add inc mov loop (bad) lahf mov mov addr16 cs xlat mov rorl mov pop cli nop rcrl in sbb not dec aaa scas and mov rcll push insl fcmovu mov scas push mov in mov xchg lea mov xor mov mov sub outsl imul mov mov xor cmp and lods mov push mov and or inc mov (bad) fimull movsb ds adc sbb add jg or mov jmp mov mov xchg jae pop mov imul inc or inc nop mov mov ljmp sbb fldenv stos movsl out cmp rorl loop std jmp cmpsl fwait rorb bound cld and mov ljmp adc dec out jns andl adc fidiv mov adc pushf mov cmpsb mov mov pop mov mov roll inc or pop xchg arpl jns mov negl mov clc (bad) loopne imul push aam cmpsb and pop adc mov cmp in (bad) mov popf cli and mov or cmp (bad) js nop push jno inc and mov mull xchg mov outsb (bad) mov stc push rorb jne mov jmp (bad) (bad) pop and sahf mov iret std scas cmpsb ss enter jnp ljmp jbe and mov (bad) negb in std xor jge xchg cmc in pop pop jle push int xor jns into movsl push or cmp push lret mov bound mov pusha stos pop lcall adc and outsb push ss and sub (bad) sbb mov mov xchg leave xor loop movsb and lret sub jl and mov stos lods mov jb add stc pop sbb add dec test dec out mov pop (bad) adc lret mov ret lret in ja jno sbb or cmpsb sub push lods es pop repz jo popf jo cmp mov loope aad in les mov lret mov imul std movsb adc aad daa mov aaa rcl es imul xchg mov cltd cmp sbb cwtl mov jmp mov movsl pushf in pop call in ret out xchg andb add stos cmpsl mov dec (bad) jge into and andl xchg hlt jns sbb and repnz hlt mov jmp in sub inc bound xchg addr16 aaa mov mov inc jecxz frstor rol outsl pop xchg jo ret push mov lret lods inc inc or adc mov inc xlat jae mov sub mov addl add idivb test push cmp pop clc loopne pop mov cmp dec mov fldcw mov int3 xchg ljmp cli outsb mov repz mov pop xlat nop mov ss push mov pop icebp sbb mov adc xchg rol iret pop cmp mov push fidiv pop mov inc mov lcall inc fsubrp addr16 rclb (bad) fldenv add out mov popa dec cmp jo mov pop out mov mov cld jmp lods push pop repz xchg cmp test and and je xor mov leave movsl lahf lret push cmp mov or cmp aaa and (bad) daa pop inc inc imul push mov mov insl (bad) jnp cmpsl mov stos getsec adc adc add pop mov adc xchg jo cli mov lds mov aas pop andl sub mov push dec jnp lock xor lock pop add and push sub mov or (bad) push inc and cli fwait and arpl popf sub add and push jnp in icebp lret mov and stos pop call pop icebp pushf fnsave push cltd cld xchg stos int3 pushf sub ljmp mov loopne inc scas mov cmpb jae shll xlat add xor call sub or inc mov pop sbbl js pop and fwait xor mov pop jb sub cmp or gs and sahf daa test out in andl and sbbl mov sub clc push pop or mov pop loopne out fnstcw mov xor dec pusha (bad) out in dec push test int out stc push mov push add call test les into cltd popf icebp loopne lods cli inc inc inc or les sbb mov push push inc xor out mov ljmp imul dec or jle lock mov push add jnp loop jns and in ret mull call leave (bad) xchg std dec push xchg gs lock mov or dec xor sar mov rolb shll dec dec add push cmp mov mov ja (bad) popf jmp adc stos out mov sub imul dec and mov dec jge scas loop je (bad) mov addr16 icebp cmc cmp subl pop inc jmp ret mov out (bad) mov cmc dec add rcll inc adc cmp js mov dec int xor lods and data16 aas lods pop and xor add and outsl or les addl stc fucompp mov addr16 shr out pop mov jns inc inc sbb push cli push movsl ss add movsl cltd imul or xchg adc aaa (bad) mov scas stos adc lcallw scas lahf pop dec and push push mov data16 sbb pop pop aas movsl insl ss pop ds mov lahf repnz sbb rclb cmpl jnp inc push cltd mov cmc sub rcll int3 ret mov push and jg xchg fdivrs repz lret sbb scas movsb fldenv push sti je mov in ret mov xchg cmc popa mov xchg fcomps lahf cwtl mov (bad) icebp jge gs outsb or inc mov mov cwtl fbld ds subl adc or mov add int3 sti lret sub iret pop jo sbb subl xor jbe aaa and xor add lret in dec add jnp adc mov cmp adc sub out das scas cmp or xlat data16 push inc mov into xor jo aad stos movsl jg popl mov push add add pop sti mov jmp mov lods stos mov jae or enter aas xchg mulb mov sub movsl sub and mov pushf inc inc and out sbb out es cltd push add (bad) xchg aaa mov inc rcrb fnsave mov stos mov subb mov xor and lock sarb shll loopne test mov xchg mov or mov mov push lret mov or sub test push xchg ds mov (bad) mov and jle imul cltd inc adc jecxz scas mov ret mov into mov int pop xchg out mov dec and outsl popf add inc jb dec or cli mov gs cmc pop sbb xor xlat cmpb mov mov pop repnz xor sbb in pop (bad) in hlt jl int3 out shl xlat imul (bad) jg std repz or sub imul pop fstl scas out popf in adc int test mov pop sub (bad) jns mov xchg nop or and movsl xor mov pop sbb out lock stos rcll mov and mov adc std mov mov adc add arpl adc jns cmc sti inc push adc ss loopne imul add jo dec scas pop add dec add push inc outsl pop dec call cbtw not lods movsl sub push mov (bad) mov andl inc xchg pop mov fstl xchg mov sbb mov inc and mov jge adc hlt (bad) imul fcoms data16 mov sti (bad) jbe out dec dec adc movsl pop push pop scas cld pop es cmp outsl push cmpsl xor pop push (bad) sarl mov xor push mov cld pop cmpsl into fisttpll mov nop in cltd int3 push imul in sbb and lock jne and arpl sbb sbb xchg adc and stos and mov mov daa rcll ljmp test push jmp sarb mov jbe imul xlat pslld fiaddl adc mov fstl out in and xlat xor cmc sbb (bad) insb bound movsl dec js dec sarb mov add adc outsl lds pop push or adc cmp in xchg fwait ljmp jno inc fwait jns pusha jnp (bad) movsl inc ret xchg mov dec movsb lods test test ret mov sarb xchg jne shll xchg fwait scas mov xchg mov cmpsb lahf or in mov jae in andl xor mov dec ljmp jno push jae xchg and fidivrl pop iret mov loope cmpsb mov sub jo mov pop imull adcl mov jmp dec ret mov test int push inc je or mov movsl (bad) cmp (bad) mov fbld inc pop gs stos jge mov mov or mov scas push pop aas jns xchg push xor mov in jns jle daa aaa loop jae mov (bad) pop adc je js adc (bad) lods mov mov add icebp rclb sbbl movsl sub ja lock pop inc mov dec stos mov and lea pop xchg mov inc testl mov pop in mov sub (bad) dec cmovp in aad int int arpl notl xchg mov fnsave jl and mov stc hlt int xlat gs lds addl (bad) mov mov (bad) lahf dec imul mulb pushf lds pop stc idivl mov sahf shrl push mov add dec add cltd fldenv xor and cmp mov dec dec push hlt cmp add mov mov aam in mov jo xor push adc cmc js jns imul imul inc repz adc mov add cmp push test ret push das sub pop (bad) mov inc in (bad) movsb (bad) invd cltd clc xor and aam in add jecxz xor movsl out fsubr add nop mov and ret test jle sub icebp mov iret stc xchg xor or in mov mov mov adc dec sbb and lret push movsb out lock sub dec push mov xchg mov xchg jle cmp mov push mov xchg mov cltd jp mov rcrl mov adc lcall push mov xchg inc mov jge lock mov sar mov cwtl push push call mov outsl cli lcall pop dec pushf and mov pop fs jo sub jge imul movsl daa idivl pop mov sahf (bad) aam xor sub ret mov push call imul roll sbb sub loop jns adc std movsl cmp (bad) lock mov cmpsl push inc adc and out enter (bad) repz jge xor lea fbstp inc aaa push imul mov sub xchg cmpsb xor jbe aas loop mov stos daa out and mov movsl push aad dec movsb xchg rorl test adc ja leave cltd pop add mov mov mov addl push and clc fnstsw mov mov enter stc pop insl mov in mov jns mov insb (bad) mov mov mov je xor mov jl pop lock adc insl xor inc js out pop fdivrl cs mov pusha pop lods add test inc pop sub mov test push leave outsb inc ja pop push and jo (bad) rcrl xchg sub xchg ljmp push std fwait dec ret xor mov add icebp dec sbb and push cmp inc cwtl lret push pop inc mov insl movsl rorl mov lcall pop icebp pop cmp loope les scas les aad inc loope jge adcl sarl adc pop (bad) cld add jl mov stos inc insb test pop dec movsl or loop xor pop imul sub cmpsl pop leave (bad) lcall jns movsb sti pop pop (bad) xor mov out adc jmp pop cld loop jmp pop (bad) insl mov pusha mov push inc cmpsb inc mov mov mov test fld pop xchg mov mov pop sub sbb (bad) loopne push push add pusha dec mov out jge xchg pop fiaddl inc in (bad) cmp out mov cmpsb mov mov jmp jbe mov dec mov xchg pop rclb push daa aaa (bad) push aam test jb sbb stc bound rcrl hlt push or addr16 lds push out mov and lock jne fldenv cmpsb inc nop fs push int3 mov inc fistl loope cmp sub rorb fs cltd mov mov mov jecxz and xchg mov dec and mov pop cltd mov ljmp push leave cltd (bad) ss int3 mov enter icebp and andl (bad) movsb loop mov inc (bad) sbb jo xor in xchg sbb and cwtl mov in pop inc sbb push cltd lcall lahf in mov pop mov or scas jno and icebp dec loopne gs addr16 mov push aas movsl out mov ljmp adc push and inc mov jb stos addb mov les in scas pop mov insl data16 or push inc xchg movsb cmp daa pop cmpsl roll sbb jecxz xlat adc or shr out sub mov cmpsl or fwait dec dec dec mov out mov arpl mov push and fwait dec mov xchg dec ja bound gs mov mov test mov mov inc or jecxz int cli and pop xchg xchg (bad) cs xor add dec bound scas sbb dec js ljmp int3 adc gs bound pop in cwtd lret pop loope leave iret test adc sbb aas jle and jmp xchg imul test sti mov icebp and cmpsl adc test xchg popf movsl shrb push or pop sub dec popf xor cmp dec add add sub ss dec movsb push mov in push push icebp adc dec and push cmpsl sbb xor push cmp mov adc and adc lret imul add mov mov jle mov cmp leave or movsb mov dec loope pop jns add lock frstor scas adc rcll mov sbb mov push pop (bad) add fsubrs mov ret cmp sub xchg xchg mov xchg lods movsb and out arpl ss sub in test dec jnp adc les push sarl mov push jg pop sub es loopne leave (bad) jmp and hlt sbb cli loopne ss pushf cmpsl xchg (bad) bound pop fist dec sub cs xor pop sub mov dec mov mov xchg stos xchg dec or mov (bad) jns sti cmpsl add jo shrb rclb stos mov mov mov inc popf jbe mov or lahf cmp sbbl js (bad) mov mov dec movsl jno push mov jbe idivb mov test leave and jg gs push xor pop jo xchg imul les jb insl inc and je adc or mov stos add imul jne imul dec aad mov cltd dec cmp pushf sbb outsl das sbbb and mov push into add sarl inc mov out xchg push dec cmc addr16 cmpsl fbstp xchg mov sti pop and call mov push mov cmpsl (bad) ret lahf mov sbb push std mov mov lret mov ljmp mov loop in and loop mov cli cmpsb inc dec cs inc jmp out mov xlat stos mov imul aas es inc addr16 das repz lods mov mov xor stc mov mov pop repnz pop cltd adc daa clc mov (bad) repnz sub pop icebp mov in jnp mov xchg push cmpsl ss stos add pop je mov in mov jle shrb xchg test and jecxz dec mov imul gs xlat in inc add cmp test cld mov sar add enter jno fldt rorl mov add (bad) xor (bad) cmpsb xor (bad) or bound int3 nop test xchg aam aaa (bad) xor (bad) mulx cmp gs jl mov xlat movsl cmp fucom mov insl push call out test mov aaa add pop jo or dec push cli xor jl xchg dec aam fisub mov cwtl cmp or arpl mov loope mov dec movq scas js and daa sub mov lret movsl sbb sub cld in xchg and les xchg mov andl mov jecxz push xchg pop scas dec cmpsb lock or rcrl fldenv xchg andb lret (bad) in bound pop rolb popf sub dec pusha je and xchg movsl jecxz add arpl push sbb or xor ja les mov mov subb and push sub fwait imul and leave dec mov mov pop loope or dec aaa popa lea mov cmp mov jl jmp iret mov xchg (bad) xchg int3 pop pop cmp dec push adc movsl popf loopne add cmc mov mov jbe das les aad push sub mov in push sbb mov cmp lock rcrl dec sbb push xchg daa int jl lods cmpsl (bad) mov movsb shlb push repnz jb push imul movsl mov es movsb cld cwtl stos loope cmpl push add mov imul movsb lods lods cmp in jae inc stc pop stos xchg fs or (bad) idiv movsl mov loopne test and sti and mov mov mov add jecxz out adc into xor mov jecxz ret dec push cmp push mov mov loope mov inc outsb ljmp fs gs rcr sbb (bad) andl mov push xor out mov mov cmp adc or jmp push add jo mov loop aam shrl (bad) imul mov dec mov jb pop xor jp mov (bad) in loope mov jmp mov push setbe mov cltd fs or ret inc shl call in lahf ret xchg mov mov push cmp cld xchg and aad mov xor inc xlat popf inc pop popf and add mov rcrl arpl mov imul movsb push fwait push push int3 cltd popf add and lds dec or mov cmp (bad) xchg lock icebp jbe or (bad) adc pop cmp pop adc mov movsb inc scas ja inc sbb jns cmc lea cmp push add hlt push add shll negl cmp (bad) push aaa ljmp imul mov jmp int3 mov sahf dec shrb rolb mov mov add repnz and fcmovnu push cs outsl jmp jbe jne cmpsl addr16 mov inc stc mov adc mov cmp sub mov push out mov sbb jmp mov sti aam mov pushf je mov leave enter and push push sti addl and pop cltd les cmp les test jbe jp outsb imul mull mov mov mov xor pop jns das scas dec cltd mov popf pop mov push inc (bad) xor lods and push push xor scas jecxz clc mov subb dec adc xor push sbb imul lret mov sub in mov dec mov (bad) popf adc adc data16 mov (bad) ljmp out scas loope pusha out bound sbb popa scas sbb int3 mov or push mov sub inc (bad) or pop imul mov mov sarl xor xchg jno in push cli jb inc fsubl sbb jle mov sbb mov in aad sub or dec add dec jecxz dec and xchg mov fnsave and jb mov es adc mov lcall movsl lods jae (bad) (bad) imul mov add and pop cmp mov jp push imul jge cltd enter adc dec icebp gs push shll aaa sbb fwait mov jp cmp cmpsl lcall cwtl sbb pop lahf sbb dec adc jg sub (bad) sbb pusha sub sahf imul and cli pop xlat jl cld pushf mov aam out leave popl pop dec mov sahf dec xchg or fisubl sub inc adc (bad) sub test cmp jecxz repnz adc hlt mov push pushf fisub mov inc imul loopne mov mov mov cmp mov mov popa cmc (bad) int3 in movsl mov and test mov test xor dec fwait addr16 push sub rorb and jmp int and pushf mov mov lcall les insb mov cltd ret sub or and daa jns cmpsl xor int3 subl in mov call jp movsb out int3 rcrl or outsb xchg mov ljmp jo mov fdivrs imul movsb movsb mov cmp add xlat (bad) sbb lahf shlb cmc xchg inc daa imul pop ljmp inc sbb adc add (bad) mov std cmpsb pop inc cmpsb lret test aaa call pop xor stos add mov lea bound in les stos loopne mov mov clc call and out adc and xor bound sub jmp fs add pop cmp jge in and adc ficoml pop mov pop xchg sub push lahf gs out xor stos pop cli lock xchg daa mov mov add les pusha adc loopne das and or xchg push jecxz xchg push out dec iret inc rclb (bad) iret stos loop daa adc rcrl (bad) hlt xchg pop jg mov stc adc xchg fsubr fadd adc jns pop test push fwait xchg out aam mov (bad) add and gs cld and addr16 call jge xchg xor loopne gs adc jle pop mov pop insl xchg jp fwait pop mov jp dec or (bad) cmpsb xor xor jne test in mov pop xor mov bound xlat leave lret nop push int les inc cmpsb shll and pop mov mov xlat mov push jae sub lock jns arpl and mov sub (bad) lods out cmc cltd push add xchg aam or mov (bad) (bad) mov xchg mov inc xchg sti jnp (bad) (bad) push mov mov andl (bad) pop inc outsb mov repnz mov inc into imul jge mov sub pop or adc andb rolb arpl aaa movsb in cltd imul dec and addl push and pop (bad) cmp mov cmpsb andl xchg mull xor or icebp popa ds xchg push xchg cmp sub dec sbb pop (bad) sti out mov push mov (bad) inc stos loope addr16 push mov es insl or cmp inc gs mov xchg xchg (bad) mov pop lods jne in mov mov push mov lret mov mov int pop cld pop repnz xchg fucomip cmpsb jnp sub cs jns (bad) sarb jo test jge std aaa lea and cltd loopne ja scas (bad) cs stos add xchg lods sbbl mov sahf push push add dec xor xor (bad) xor cli sbb sahf mov aad mov adc loopne mov loope js add data16 test test mov mov lcall add sti jecxz inc mov (bad) cwtl popa cmpsl mov sbb adc sub sbbl push xchg mov popa add mov cmpsl pop lea mov loopne pusha jmp cmp jns mov cmc pop jle jns add in lods and jns sbb shll and out mov xor sbb sbb mov movsb inc mov or (bad) js push je and sti rorl in push scas mov sub mov push xor mov cltd xchg xor mov movsb sbb or cmp inc xor dec mov mov cmp fs fldcw aam andl mov imul fs negb imul les in push push and lds jl movsl (bad) out addr16 mov mov in add mov sub cmp cmpsb sub jo sbb aam jnp enter sub mov jl and mov cli jae les imul inc (bad) repnz inc fidivr mov fs mov pop or cltd lock imul icebp sub dec dec or cmp lret aad mov dec or movsb mov pop jae jnp pusha xor lahf mov daa jecxz inc jmp loopne dec mov push mov loop rorb mov out out fwait jns xor mov cld cmp andl cmp mov xchg fidivr cmp mov jle adc imul hlt jo mov push cmp mov mov mov mov sahf adc mov out dec jge movsl test pop mov sbb cmp xlat mov mov jp ljmp mov inc movsb add inc jle mov in sub cwtl std and mov push adc addr16 andl loop in inc or jns and int3 mov movsb pop mov mov ds fdivl jbe jo and stos jecxz cltd push add add mov mov mov cli or fstpt popl add sub mov mov ss cmpsb xchg sub mov xor ds pusha mov test push dec sub mov xchg xor mov aad cmp ficompl mov mov hlt jmp aaa lock push mov mov and xor (bad) push clc les sbb jns fwait mov sub mov arpl popa cmp mov dec (bad) mov cmp pop cli jp lea (bad) loope mov lods cmp adc and cmp adc xor rcrl in xchg addl cmpsb mov inc add aas out pop mov push xchg bound jno gs push aaa fwait mov or add (bad) mov mov add mull (bad) fidiv xchg loopne lcall jo dec pop mov push cli pop inc push pop mov sub lcall mov and orb fst mov pushf gs into seta sbb repz pop adc cmc lock sti mov xchg pop add (bad) xor push test pop pop movsl mov outsb or fcomps cmpsb les repz or inc inc sub scas push shll mov and in (bad) rcrb cmpsb mov dec sarb adc fwait out aam arpl inc jl and and sbb xchg in aaa sub loope xchg cmpsl mov dec inc mov mov add adc lea dec int sbb stc add and mov jmp out push loopne (bad) hlt loope push std repz (bad) popa mov repnz mov bound mov and sarb pop mov mov dec inc ljmp sub pop aad movsb arpl icebp mov inc and std cmpb inc mov and popf push pop iret xlat inc inc mov add ret fwait and sub push ljmp arpl mov scas or pop jp cs movsl adc ljmp lret push cmpsl dec insl scas stos xor cmp call aaa and mov imul xor xchg inc mov pop or out movsl in pop in mov (bad) xchg dec mov xchg xor ds xchg loopne mov inc int3 ficompl lahf stos adc xchg insb add fldenv mov outsl (bad) iret and mov test insl frstor inc mov cmpsl in loop sahf mov lds push push or cmpsl mov sub fsubrl xchg xlat inc pop out push call loop nop mov mov push adc dec pushf movsl rclb mov mov and or cmpsb xchg cmpsb inc add sbb nop aaa and fiaddl insl add sub sub inc adc shrl mov daa lret xchg repnz es or (bad) out mov inc or pop lods cmpsl (bad) adc aas rolb xchg mov movsl mov out cmp rcrb sbb and mov loope (bad) mov pop xor and xor push cmp (bad) cmp mov mov jl popf push es int roll adc mov in lock pop and stos or xchg es mov test outsb mov add jo (bad) std imul in or or and pop imul dec cmp fwait mov rol mov inc mov dec ret and out loope adc inc imul pop sub push movl insl jmp es xor mov cmpsl push mov sahf lods lods loop xor push xchg adc out sbb lcall mov adc movl sarb xchg (bad) sbb scas mov lret and mov add sub xlat mov xchg sbb mov fidiv (bad) movb pop repz movsw dec dec adc mov mov jbe mov mov loope into push mov cmc sbb cmp lret inc dec add cmp inc add mov push or jmp adc adc in mov sub fnstenv sbb ret dec insl sbb pop mov cltd xchg mov insb daa int3 neg sahf mov mov jmp std fwait and mov jle add sbb cmc rclb pop sbb dec popf pusha je inc scas cmp xor repnz mov fstps int push test cmp xchg movsl xchg rolb mov and sbb insl push push pop mov sub or dec (bad) dec loopne push xchg mov jecxz inc jg mov (bad) pop mov ja dec call movsb lods out sub add pop xchg mov addr16 aad xor fldenv dec mov roll insl ret addl inc sub (bad) xchg dec mov inc add out hlt mov jecxz daa (bad) mov mov mov jge dec dec movsl rorb mov ljmp cmp inc cmp or loop mov pop and scas test pusha adc test mov or aad and test adc popf mov fldenv adc xor push add dec sub jae xor mov dec push (bad) mov mov xchg mov push imul xchg jae push sbb xchg in mov adc pushf mov bound clc push pop test xor xor mov aad adc jns mov mov xor xchg mov stos mov das ds sub ja in loope xchg lahf shrl adc stos sub arpl mov sbb ljmp pop sub or das xchg jae mov mov mov and xchg sahf popf add insb lock push jne sub inc or mov outsb push pop pop mov xlat dec or mov movsb adc arpl mov mov sbb jns dec pop xchg fstps cmp dec roll cmp lea adc rdmsr mov jmp pop fmull out lock clc or push into sahf pop (bad) xchg jge inc imul xor push nop les in sub test push sub push test rcrl sbb cmpsb cmp mov pop lock fidivr addr16 xor xchg (bad) aaa and cmpsb aam cld mov and imul test and sub xchg shll push scas stos loope add outsl mov pop sti sbb gs add mov mov mov ds insb jecxz pop movsb push test imul jge cli repnz imul loope cmp xchg loop pop leave add out mov leave daa jmp stc out or sub ficomp into andl mov jge mov xor pop lahf pop mov sub adc bound adc out daa (bad) in mov outsb sbbl cwtl int lods and cld dec push clc mov (bad) jns stc mov negb jnp fdivrs xor popf ss aaa mov es mov popf arpl xor xlat repnz push xchg test je and shll xchg inc int3 push push in daa cmp lods es mov daa scas scas mov pop loope jmp loopne scas and in cltd and sub mov sbb add xor jne gs mov or inc mov stos sbb mov cmp insl sub xor dec inc push pusha mov pop fstpl jb and test in daa loopne in pop mov in sbb pop add dec sti movsl push dec add fmull popf aad push fistpll icebp inc bound mov mov jbe loopne add (bad) stc jns inc push (bad) out xchg rorl pop clc div sahf cmpsb cmpsl dec int call sub push fwait and sub cmpsl ret movsl sub add jmp push or fnstsw adc lods xor xchg (bad) cmpsb dec pop lcall mov sahf mov push lods test fsubl mov and pop movsl outsl nop mov mov outsl sbb cmp jle scas xchg mov ljmp push lea sub xor or cld xchg jno cli dec push jo mov xlat and mov cld data16 mov test (bad) and jno lret pop movsb mov xor in lock adc pop testb inc mov xchg bound das push nop mov or pop pop jecxz cmp xchg or mov rcl and pop inc mov inc loop jae mov inc adc cmpsl testl pop in lcall inc out inc mov aad das fadd jno xor add aaa pop fwait xor fldt cmp sbb xchg mov mov jne xor sti pop mull pop xlat push outsb call out jmp pop cli cmpsl mov gs inc mov and xchg in xchg xchg les and mov xchg mov inc arpl clc dec jnp leave xchg pushf lret mov inc adc adc xor outsl scas (bad) nop and pop or mov mov and push inc fwait mov dec xor mov orb mov loope mov or movsl and mov insl imul mov dec lcall dec (bad) sahf leave mov jecxz cmp xchg mov mov loopne cld sub xor cmp mov push jl sub mov push push cltd sbb (bad) lock inc arpl xchg and mov mov jle sub jne dec push divl mov inc push jmp daa into dec outsl inc loope push pop lods pop jg mov dec xor loope lahf mov mov jmp jnp inc push test jo add jno mov mov add push mov in cld pop jbe mov mov inc sbbl ret mov or aam mov mov fsubrl and or push cmpsl in stos cld imul and in mov dec bound insb mov fdivrs mov mov mov inc enter inc in jns popa jbe movsl mov sbb mov cltd mov hlt sbb rcrl enter xor addr16 lret addr16 jb xchg sbb iret stc pop inc testb mov push mov lret xor fildl mov pop repz clc daa pop mov scas loope leave out imul (bad) insb mov push lahf mov rclb mov inc leave (bad) js xchg mov jne push cmp push sbb adc mov test xor arpl aas loop cld in fwait pop mov scas cmpsl jnp cmp mov push inc cmp das aam fistpl sbb inc add movsl je mov sub push inc cmp in je xchg in cltd mov inc pop das and insb (bad) scas mov dec pop xor mov mov mov xchg jl mov aad std adc ljmp inc mov xor (bad) rcrb inc insb jp movsl fstpt mov and sub pop adc jmp or mov mov lea and push ss mov popf mov xchg clc mov decl xchg push dec or andps jge insb (bad) pop xchg xchg sub lods xor bound jns mov sarb mov push dec movsb fadds mov xchg mov imul lret jle mov push fmuls (bad) xor scas lods cmpsl jno (bad) jns sahf sbbl mov mov (bad) dec xor cmc insl xchg mov cltd sub mov inc insl pop iret leave pop (bad) jns sub fstps imul pop dec push sub add sub ds cld test mov sub clc nop jg inc loopne in arpl jae pop cmp adcb in pop inc mov stos cli daa jnp (bad) pop mov add imul ljmp jb pop mov lods imul rol imul das cltd cmovge mov rcl in inc lcall push jle or add pop add loope mov dec scas outsl mov adc movsl jno addr16 (bad) dec xchg mov push pop mov push inc add mov inc fst push outsl xchg icebp add push out dec fs push movsl test call or movsl xchg in outsb xchg jmp (bad) mov out dec mov test inc and call add test jb mov cmp push lods js mov mov and movsb loope sub lcall int3 mov pop notl daa out and inc out aad es cmp mov fmul (bad) pop sbb jg and mov sbb out pop cmpsb push mov mov (bad) mov cmp cltd add sub mov xchg bound mov xchg mov outsb lods cmpsl add lcall popf bound mov cmpsl mov inc frstor sub aas mov or (bad) push scas mov out jp stos xchg cltd popa mov add cmp out repnz xchg pop and data16 cltd push push push pop (bad) or repnz in bound scas movsb xchg mov push stos push mov jne rcrl lods mov sub sub movsl inc or push or fistl push insl lock mov jge imul clc int3 fwait scas stos or mov jp dec aam jb mov (bad) xlat addl lods ret dec rclb sbb cmp call inc imul push push popf iret hlt daa mov fidivl ljmp cmp in xor cs gs addb movsb fwait inc fcoms push add mov add mov cltd stos dec or dec pop push and mov inc imul mov inc sub mov cmc xchg or dec (bad) or add jp mov xchg pop bound inc mov int3 loopne call andl loop inc mov in pop xlat jl dec add cld sbb add pop pop je or loope lods cltd pop jbe (bad) inc adc test imul dec mov sub jae mov pop cmp mov sub cmc sub xchg test ja mov or movsl sub jg add cld pop mov pop dec push push mov jmp addr16 scas addr16 les imul in cmp test inc jl mov test push stos sub pop jle inc push mov pop xor sbb mov pop ret mov jg mov push cltd inc loope in negb je pop dec mulb ret mov sbb push mov adc or (bad) mov stc cmpb int3 cmpsb jnp fucom imulb mov xor rol das sub into movsl ret and call fstpl sub loop mov mov popf dec rcrl scas movsb test addr16 dec pop call fcoml (bad) fbstp mov mov sub dec imulb mov test jo adc mov popf mov addr16 adc negl push mov or sti jo xchg aaa mov test movsb xchg mov mov jo test pusha arpl daa mov pop aam mov pop aad ret sub adc jecxz xchg andl ret fisttp mov xor scas xor iret xchg mov mov sub shll mov mov ss push add dec add mov jne,pn in adc movsl or pop (bad) dec sub inc mov push in and ror sub fnstsw ljmp xor and mov inc adc add fistl push test mov pop inc xor rolb xor repnz sub or imull test dec inc jne dec xchg nop mov xchg sarb lds popa pushf cmp fmull lcall and shll imul sub (bad) nop jmp aam push insl repnz cmp lods (bad) mov mov mov shrl clc push dec add xorb cmpsl or cmp xchg (bad) sbb mov ret pop scas stos adc mov fwait mov sbb cltd rorl pushf mov mov arpl ret push cltd popa cmc add mov inc mov ss sub std sahf mov call dec cmc into test or loope sub xchg repnz mov mov cld loope mov and scas mov cltd and pop (bad) cltd sti push push inc xchg les sub cmp mov mov leave movsl and (bad) shl jo aam sbb rolb cwtl jle dec add or xchg ffreep mov xchg in call mulb sbb mov or sarl adc test iret jns and mov mov aad pop mov lock pop repz lods popf mov pop push or incb mov test push adc stos movsb stc fcom jmp imul jle mov test in push daa imul mov rcrb bound jo push xor sub xlat mov ljmp lock es movsl pop stos stos in ret dec ds leave test mov lcall mov and sub and stos (bad) and mov dec xor jp dec and in sub test sbb pop adc mov in dec ret mov lret fs mov lahf mov mov mov mov insb fistpll ret mov xor xchg mov repz loopne and test pop pop mov aaa test xchg mov leave mov shl sbb pop cmp cli ret and mov mov xor mov int sahf test cmpsl mov pop mulb sahf push arpl pop dec or andb mov sub mov and and mov cmp ret add push mov mov mov ja aas sbb xchg (bad) mov xor mov aas mov shll repz inc mov call es lret in es aaa scas push mov mov int movsl pop scas std inc cmp (bad) push jg pop jns pop cld imul cmp movsl ret add fs imull outsb in sub fisttpll cltd mov and mov mov cmp sti in mov cmp aaa push mov movsl inc pop stos lods lds mov dec mov test mov mov test fiadd mov mov iret jecxz mov pop or mov jae adc (bad) xlat and ficomp mov pop pop notb into wbinvd (bad) pop stc pop addr16 ljmp popf mov (bad) pop jae (bad) (bad) rol xorb add dec push adc sarb popf push or lcall mov mov lds cs aaa ja jns shlb rcrb loope adc push sahf mov xchg mov insl pop push pop shl rorl mov and cmp pop pop mov mov and out pop push mov add movsl fstpt leave adc pop std pop dec es stos inc hlt xchg rcrl movsb out xchg mov les lret daa xchg add mov sbb mov and cmc or lcall pop insb outsb jns and cmp xchg cltd pop data16 fisttpll stc adc mov mov insb adc xor enter (bad) mov mov add imul inc inc pop pop daa and jecxz dec dec fwait rcr je xor (bad) cmpsb and in scas mov or int and sahf fcom pop in mov mov pop and cmpb mov xlat push mov int3 adc inc addr16 fptan xor test test or subl jecxz xor mov mov xor push mov lcall adc leave test daa out cld into dec inc mov cmp mov loope out inc fadd pop adc (bad) std pop mov sub cmpsl icebp adc popa es (bad) repz sarl in push adc imul (bad) pop push das mov repz dec stc mov in bound jge dec mov (bad) jg and mov mov out mov dec lods test mov scas popa in inc shll mov fwait adc in xor mov jae ja mov (bad) add mov or hlt lret adc stc rol (bad) outsl inc dec or test jno dec add fnstsw push js jns (bad) xchg sub mov xor in jp cs cmp orb xor pop movsb arpl sub or loope jns xor push mov adc push xchg roll roll dec sub aad insl cmc jbe fist or and or inc mov mov fwait mov lahf pop dec cld pop or mov std push push mov cmp cmc cmp movsb lock js push scas mov mov inc pop jae mov mov mov out push shlb mov dec adc sub xchg fucom mov xchg ds inc stc xchg pop ljmp mov mov repnz mov icebp dec jbe dec dec bound movsl push fs inc cmpsb cltd xchg xor ds and imul fbstp nop aaa sarb xchg mov popf mov sbb xor (bad) sbb add mov jnp testl ret jno pop dec jge xor xor mov xchg dec je push in shrl and data16 sbb xor sbb and push xor aaa test dec mov mov nop or fldt push xor mov pop cmc ret xchg lret (bad) out dec les and rorl in stos (bad) inc mov cld les jnp fstps inc adc jb std pop pop aam lods out sub fdivrl mov mov add stc push data16 xor or jecxz movsb jae out rcrl jle lock mov push cmp xor jg xchg mov push xlat jns cltd mov loopne cmovne (bad) shl jns xchg dec fldcw mov dec movsb xchg sub dec inc js outsb xor pop mov xchg mov pop add mov xlat mov ret mov inc loope and cmovbe jo adc stc jbe add add and fistpl (bad) cmp nop pop (bad) in mov xchg adc (bad) in push jl icebp ret outsl jmp insb in pop les scas cmc pop movsl inc lcall mov xchg bound inc mov js hlt jae adc out xchg mov inc push push mov xchg addr16 out arpl pop mov and je popf jbe aaa in insl mov mov and dec test scas mov movsb stos push dec inc or mov gs rclb xor xchg decl test movsl cmp and mov jno jne jb mov leave xchg addr16 pop shrl mov test mov stos push sub push pop xor jp lahf fwait pusha mul lds push popf or xchg and jp mov outsl cwtl mov lcall enter add pop fdivs icebp leave push pop fsubs inc push fcompl popa push cmpsb bound pop scas mov fisubl and dec leave xorl mov les addr16 dec gs mov dec cmp movsl bound pop xor xor icebp jbe hlt bswap out lret inc call and lea push mov push fcompl mov les and movsb sti sarl inc ljmp mov out (bad) lahf mov sbb out cltd out and jo xor insl lea (bad) into add cli fsubl aam inc mov imul pop cmp cmpsl inc subl daa scas mov push cmp fwait push mov andl into idivb push nop enter cmpsb and or adc xchg movsb addl out and loopne jp test mov dec adc mov jge dec ret cli movsl pop repz and adc inc gs int scas (bad) movsb int3 out adc ret xchg out lods ss mov mov lods rcrl out and stos (bad) xchg mov gs mov in mov sub jmp xchg lret jae jl,pt icebp cmp enter pop pop addr16 in fildll rcrb mov jmp dec pop movsb stc pop mov stos and lds cwtl mov iret jecxz jae mov ret mov jb fadds int3 lcall inc (bad) bound pusha sub lods push push stos movsl xor pop sbb shll (bad) aas push pop movsl mulb aas sub lea cli jb and movsl and adc pop ror fild jne and (bad) cmc mov xor jmp dec jl pop dec inc (bad) stc jle xchg lods cwtl pop into in mov sbb jl cli dec popf pop cmp mov push aam (bad) mov sub test pop push scas cwtl sub xor ffree lods mov push inc fimul (bad) xchg cmpsb mov pop (bad) jmp cmp cld icebp inc pop inc std movsb cmp js cwtl into pop sahf jb jcxz popa xchg aam (bad) pop (bad) (bad) and cmpsb mov ja test push adc push dec mov xchg cmpsb test and adc and push inc sub and imul mov aaa mov and or pop cli mov fwait jo jmp xor xchg mov and sub movsl mov mov repnz cmp aad stos out leave (bad) loop stos (bad) push insl ljmp dec js lds add sub lods mov scas or fidivrl add call (bad) jne mov adc pusha ret cld js inc push sub imul sub es ljmp iret cmc or push mov addr16 in sub mov into (bad) xchg les (bad) push outsb mov shl orl cwtl mov and imul nop pop stos scas movsl daa mov aad push aaa iret sub pushf add and loope jecxz dec call xor mov and pop mov adc repz xchg mov add insb push mov std push mov or test adc mov aad pop cmp jnp cmc (bad) xchg aam push das pop jmp mov outsl adc (bad) stc mov mov daa popl mov jle loop into xor inc int out add lret jbe data16 pop add dec hlt push xchg lret jno jg in dec pop mov mov sahf push popf mov jmp jnp enter adc lea mov imul mov stc xor cltd out adc add mov cmc dec push test movsl xchg lret cmp mov loopne int imul add sub popa pop push add aas pop push int3 testb call lret or and stos adc dec mov mov sbb lcall xor add fadds push ljmp mov out pop movsb adc loopne je test mov movsb aam mov leave mov xor movsl lods hlt fs rcrl das cltd xor repz data16 lds push xchg mov pop fstl daa std ja into pop mov rcll out shrl ret imul fsub dec push outsl xchg lods adc pop into and or xchg lods shl push jb andl arpl stc pusha pop mov fdivs out hlt pop xor leave imul fs loope mov bound cmp sbb mov fs repnz cld jns rclb mov dec push mov xor jbe mov icebp pop (bad) ret imul mov imul xor add push cmp in mov fwait lock sub daa fisubl push inc pcmpeqw or xchg inc sbbb and insb imul es inc sub mov insb dec iret movsl leave inc nop pop (bad) dec cmpsb mov dec push mov pop js aas cmpsl add inc stos es addl rclb or xchg mov mov xchg cmpsl adc sbb (bad) jge mov test add ljmp xchg cmpsl lods arpl lcall fisubl mov and cltd mov or repnz jnp cmp bound ret shlb jle xor loopne and sub cltd sub mov insl jl sub imul dec std pop test or imul mov xor jl shll mov gs xor (bad) shll xchg (bad) in cmpsb mov push cli jb mov scas test push test cmpsl addr16 aas mov pop pop loop xchg adc or ja xor in sbb scas mov int3 sub xor jnp mov es outsb loop push cs clc mov inc and loopne fistpll sub mov and push mov and rclb daa cmp mov push adc stos mov push lea movsb pop bnd stos dec inc or mov push mov cmp das scas and adc cmp sbb icebp fist stos or inc fwait mov popf ljmp mov adc jmp adc push or jge sub sub jp nop scas and out lods mov and clc imul sahf repnz inc adc mov mov xchg add bound or mov outsb pop (bad) push add mov lea sub jl add fdivl mov adc insb leave rolb pop scas (bad) cmc int add push sub xchg mov fsubs inc mov xchg sbb cmp lock mov and mov cltd cs adc rclb lods scas ja mov movsl mov es mov xchg roll ja clc stc dec mov sbb mov flds shll jecxz cmp daa lds sarb pop adc mov es xchg shlb mov (bad) enter std pop sbb dec push (bad) in daa fs push cltd inc mov pop dec and je mov push es mov dec imul cltd xor sub fs and in sub or stos mov aas js iret (bad) lcall lea sti cmpsb imul imul inc cmp mov pop or and mov push in lds popa dec idivb mov xor mov pop icebp cmc sti inc jle loopne cmp add jns push icebp add bound js (bad) mov push inc andl lahf inc (bad) pop orl cwtl shlb mov (bad) out ret lods cmc bound cmp inc adc pop popf lock or xchg loope cltd and gs test ret sbb insl (bad) inc out cmpsb gs add cmpsb bound lret add xchg dec add jp push sub cmpsl and fwait cmpsb cs jl out pop jmp jecxz mov (bad) mov outsb xor push out xor pop pop stos bound out in dec arpl xorb imul xor out xor out sbb test mov and rcrb dec push dec and aaa or jl push idivb push cmpsl cmpsl ret fistl mov out sub push xor leave popa test jb inc les push inc pop or movsl inc pop dec stc in pop dec sub jmp sbb pop cmpsl cwtl cld mov push repz (bad) jno inc enter push mov scas fwait test data16 lcall xlat in repz data16 into repnz (bad) leave cvtdq2ps inc mov xchg dec mov and xchg (bad) loope bnd aas mov out push test pop js (bad) (bad) scas gs popf or push data16 push daa sbbb sub lods fwait cwtl popa pop (bad) jbe push (bad) rclb mov push lahf inc inc ret gs lret mov add jp mov push inc jno imul mov (bad) mov jp and mov mov call (bad) sbb imul fnstenv and mov insb in ds pop mov imul xchg cmp lahf stos mov popa insb mov or stos data16 jmp in daa repz movsl test hlt dec sbb fdivrs fs fwait clc movsb nop mov dec or mov mov push jmp movsb mov mov inc or mov add gs mov movsl dec js cmp aad insb in fistpl jno xchg lea and dec add dec adc jle sti mov pop pop hlt ja jmp jae xor mov cwtl aam and xchg lahf andl repz loopne pop jno outsl cmpsl sbb (bad) call imul test lret cmp sub out fcomps adc and mov enter push (bad) and dec inc (bad) lds mov cmp stc rclb add jg into sub cs jnp aad roll pop ds cmpsl pop or movsb std mov sbb insb (bad) xchg pop int jbe shll push scas mov gs test popf push aad in xchg dec in mov sub (bad) aas sub xor dec push inc call pop push mov or mov arpl std xchg pop jg xor and fwait loopne jbe push cli in cmp and cs iret lret mov andb and call icebp mov mov mov mov mov ret xchg adc xchg xchg (bad) lret jnp mov pop scas cmpsl mov outsl jmp notb push mov mov ret dec scas stos jns mov popa icebp (bad) jne cmp (bad) iret sbb dec or mov pop adc inc jbe mov adc inc (bad) jb js std cli push add push imul fwait adc sub inc xlat xchg test inc cmp and jmp mov jno sub cmpsb popf insb repz add sbb dec sbb push cltd insb js sub dec lret ret aam push fsub sbbb fucom xchg leave xchg sub movsl sub stc xor xor fnstenv stc pushf movsb dec mov pop in adc jecxz cmc mov sti and jbe jo inc pop fwait bound and pop lret call mov xor cld xchg mov stos stos in pop push call out push out xor adc scas aaa jne loope jmp or enter cmpsb (bad) loopne (bad) rorl push pusha xchg arpl xorl arpl inc js rorl bound dec xor mov hlt pop and ficom movsl movsb pop push mov mov mov and mov stos (bad) xchg ss movsl mov push cltd add inc clc pop xor fadd jno sub mov inc xchg adc mov out pop mov test in mov adc xor outsl int mov mov adc inc aaa or and aas pop and mov cmp test inc pusha aaa jl xchg add lods fs sbb pushf scas cmp pop fistpll cmp push jbe inc adc popa fmul je mov mov push mov pop jnp pop mov xchg jae push mov fcomp jne in and mov into imul pop mov mov or call or mov adc insb movsl xchg or outsl dec enter cmp mov dec pop (bad) sub js out inc xor loopne lock dec shll enter movsl pop aas push in xlat mov popf inc repnz imull repz dec rol jp mov fbld mov push mov push aaa pop leave and mov (bad) dec mov mov out js fnstsw dec stos jno lcall lahf pop mov cmpsb sti loopne add xor mov ljmp jns jmp jge (bad) test cmpsb or and nop sub add cmc mov jmp inc testl mov cmpsl aad adc stos and sbb mov mov test stos mov jecxz xor or (bad) jno lds lret pop mov cs dec xchg (bad) shrl mov xorl loope dec jle (bad) mov test rcrb movsl push or test in mov pop mov mov int3 mov push outsl cmp movsl outsl addr16 movsl in stc movsl cmpsb pop das inc fnstcw pop xor push sti stc push jecxz adc mov sub (bad) and add sbb rcrl js jae mov insl mov out push inc iret cmpl enter pop bound cs sub cmpsb mov test pop repnz cmc or and push ret movsb xchg pop pushf dec mov pop test cmc pop test test scas bound test and and repz movsl bound addr16 lock mov xchg cmp in dec jb js cli aaa lds inc lret (bad) popl das loop loopne sub xor xchg cmc mov mov (bad) popf xchg aam fist lods stos aam lods fiadd adc mov addr16 add decl popa movsl loopne iret or dec mov mov dec and dec push sbb jae lods mov cltd mov lret mov gs clc jo push adc movsl rcrl pop mov xchg mov aaa scas mov aas repz sbb fsubs clc pop shr in mov jl ss pop cwtl cmpsb mov pop stos mov inc xchg mov mov mov inc test cmpsb popa (bad) or ret adc imulb imul into and pop jl mov inc in enter inc daa (bad) xchg and fstpt repnz mov ret cwtl lds je mov ss std fs mov dec mov dec sub subl mov and mov and scas mov loop stos rolb mov scas scas dec or push inc imul movsb cmpsb int3 push inc mov fcoml mov inc fildl int in addr16 sbb insl stos imul add mov mov dec add out xchg call jge nop dec push inc mov mov (bad) mov sbb je xchg arpl sahf pop stc jno (bad) iret icebp push popa mov mov cmpsl and dec fdivs fxam mov fild rolb fxch mov cmp mov add (bad) dec js (bad) sub shll test push mov jp lcall or in mov lret xor pop push mov xor stc lahf mov cmp std rcrb mov cmpsb movsb cmp pop into mov cltd pop repz cwtl xchg jo mov repnz cli shll fwait mov mov mov mov scas out jb in pop pop cld daa sbb (bad) in movsl sbb add fmull dec mov mov data16 int mov aaa ss and pop sub mov gs (bad) adc aam jno push sbb or xchg ss insl xor mov icebp jb add pop mov and mov mov jle pop js push adc xor iret int3 cmp lds jmp or or mov popa test sarb (bad) nop or and cli mov repnz das into xchg mov dec xchg add jecxz cltd cli pop shl outsl scas (bad) xorl in icebp adc jb pop lock add cltd jle xor aas mov cltd enter clc pushf mov mov mov or jl dec mov jge push mov es adc into test (bad) push outsb mov stos pop repnz imul lret mov cwtl pop adc loop,pn jne push mov push aad dec push add and pop mov sub movsl xchg or icebp xchg mov (bad) and push push pop jge scas or andb or jbe mov dec inc loop out stos lea push std in mov mov in ror and sbb sbb or mov lahf rorb out mov sub aad loopne std xor sbb mov push imul scas movsb ja pop shrl mov jae int imul and mov mov stc jecxz jne cltd in dec cmp addr16 mov pop outsb test xor dec jno lret test mov adc cmpsl dec scas or sbb or dec adc ja and and stos jg and sarl cmc fucomip repz jle xchg mov mov jg imul xchg xchg mov mov cld push mov int fnstenv mov orb cltd (bad) in test psubw push bound dec add popf lret pop cmpsb pusha pop les loopne mov add fsubs xor jmp jecxz into mov dec (bad) or test insl mov insb push sarb jmp sti sbb inc adc push mov insl fistpl sub sbbb scas or add mov fcoms cmp ljmp fstl sbb mov xchg push insl out fcoms xor or lret mov dec cmp dec xchg mov fucomip xchg in dec out insl dec add inc adc mov fidivl imul out or (bad) hlt push pop and inc or sbb inc pop stos ret mov (bad) into inc and push enter adc push stc xchg ja repnz fsubrs lcall mov inc lods fwait mov push jmp sbb sahf mov inc in xor or mov in cld cmpsb dec add int3 fdivs pop add sub jl ret cmp and push sbb clc xor leave aaa enter and test or addr16 shll mov or jge (bad) push sub pop fnstcw cltd pushf push pop fsubs test mov or cld scas adc les pop and data16 js xor jge std and sub pop in bt rcrl and sub push cmpl inc cmp test inc data16 push in jmp or stos pop pusha push mov ljmp cwtl dec int3 xchg dec mov add outsb mulb rorb test call and mov pop and xchg pop push bound mov cltd lods dec in sub push xor cli dec mov pop adcl pop or xchg pop shlb sub mov sbb pop xor mov mov mov adc dec nop push dec push pop sub mov push push adc jmp loope and cwtl orl push inc push pop xchg adc popf mov push outsl lock and jnp ficoml mov cltd dec cltd dec (bad) cmc cli xchg arpl popf xor inc adc into mov mov iret mov arpl popf cmpl dec push stc inc add lock sarb repz mov addl jno xor xorl cmpsl push lret (bad) mov (bad) rorl inc adc ret mov xchg cmc call mov mov popf cs mov add inc sbb xchg mov test cli xor iret dec out xor (bad) mov dec les dec jae outsl out scas lret pop sbb xchg xchg and mov std aaa sbb sti or rclb inc add mov sub adc mov mov test dec iret cmp mov rclb lds and sub loopne test into mov ss mov mov adc fistpll push cmp mov stos and sbb dec mov push cmp or repnz sbbl popa mov mov dec mov cld ret aam in mov jp add inc or and mov jl pushf sub mov rclb mov scas enter jns frstor add and cmp jbe cmp dec lret jbe mov and data16 pusha cmpl fimul dec call mov xchg pop sbb cmpsb in sub mov loope sti lods iret mov test sbb loope cmpsl or in jp test push and mov cli hlt and jb loopne inc test xor pop mov hlt jns mov mov mov ja aad mov (bad) mov dec mov std (bad) movsl adc xchg and mov cmovnp lcall scas test (bad) ds and cmp cmpsl mov cmc cltd outsl xchg loope dec mov mov pusha push adcl gs sbbb lock add pop test pushf sbb test xchg cmpsl and mov mov movsb pop jmp inc loop pop icebp mov mov xor std cmpsl cmpsl idivl outsl push into push pop xor mov adc outsb mov insb sbb aad fidivl jmp pushf cltd dec mov orl jecxz leave and cmpsl jno mov les cli inc mov fs adc cld insl (bad) ja rorl mov div jle (bad) cltd nop mov push xor je mov lods mov mov jp rcl cmp dec or movsl jecxz faddl (bad) xchg mov dec jl fldpi mul jle dec sti push mov gs aas lock adc jle mov xor hlt lahf or push pop xor (bad) or inc bound mov ds in divb pusha or mov xchg call jo movsl mov je lcall fildll or movsl pop inc cs xchg jb cld push sub push cmp mov clc xor cmp sbb fdivrs or dec add add cli in adc pop mov movb or sub sub mulb pop cmp mov xchg aaa mov add cmpsl imul das rcll nop xor inc cmp in ficoml ljmp jge ds sbb loop test mov cmp aas and aad dec sbb inc sub frstor xchg fstpt jge cmp call enter mov ret mov mov mov pop dec add adc ja xlat fwait mov xchg rcrb xor jge rcrl (bad) mov (bad) pop repz daa lret aas pop push std mov push cmp nop les push sbb or movsl cs dec scas or mov push repnz pusha stc and jns prefetch or lock push adc shll mov mov mov mov xor dec mov pushf mov mov sbb push sub orl inc adc mov fild cs adc inc or push or xor mov mov aaa aam mov movsb or pop stos lock and mov sbb xchg adc mov mov pop movsl test mov dec addr16 in imul in xchg xor mov inc and inc leave cmp lock out mov imul imul add jle outsl pop and jo mov shrb arpl cmpsl cmp (bad) cmpsb xchg (bad) aaa mov movsb pop add or mov xor dec rcl add mov pop cmpsb jnp jbe xlat cmp pop dec mov xchg xor ficoml out xchg mov cmpsb and mov adc arpl fldcw rclb mov mov leave (bad) bound les cmp iret adc push ret loop mov or cmp sti push lret movsb cmpsl out or mov mov sahf xlat lret pop mov loop popa jnp fisub xchg adc cmpsb dec or imul add mov mov out adc shll sub aas sub out push imul aas pop test mulb jg loop add pusha stos aad in aaa adc and movl mov fisubl out fcomip dec shll push cmc adc lcall lock ret and cli push test mov add fnstenv out xor push sub cwtl mov cltd ja lea test scas lods inc dec xchg lock push jge cmpsl add mov or mov shrb add mov scas jae mov pop and pop mull and popf dec mov add inc adc jne and call mov and or cmpsb inc stos out jbe mov cmpl mov adc (bad) mov iret out dec pop sub xor pop mov mov mov daa lock fsubs sbb xchg or dec xor mov xor test mov das cmpsb inc ficompl daa mov mov lahf jne mov jp push pop and ror lahf mov lret fwait imul push test mov les enter xor and cltd popa jns aas stos lods xor lcall movsl (bad) pop mov add out pusha push mov mov mov mov icebp lcall jle xor mov and mov inc mov sbb push lods je xor dec jb mov add out mov add xchg xor inc push xchg cs out jns sti movsl imul fs daa ficompl jle lock cmp cmp pop sbb imul lahf mov orl movsl push pop sub fnstenv xchg (bad) cld mov je,pt push loopne ds addr16 std push adc or out and das mov or xchg ret and mov mov dec mov adc fnstsw pop add xchg or pop lds cmp xor xor and gs imul test aad jle cld sub jg sub test icebp in lahf pop jge leave pusha mov sub xchg movsl lcall (bad) call mov and shr sbb xchg lea mov mov into int js push pop loope sahf mov sub mov cmp sahf xchg loope in aaa aas xchg mov loopne das xchg pop inc iret add xor loope sar outsb push icebp (bad) into scas pop addr16 or stos cmpsl sbb push pop inc in or mov sub outsb (bad) xor fwait sub xor pop cld xlat pop mov mov mov mov xchg dec cmp push jns lcall sbb fldcw dec mov pusha in pop hlt dec pop shll pusha or pop cltd data16 jae sti bound test fs jae stc in pop aad stos inc mov jge dec movsb sub (bad) cmp lock jns loop push notl xchg or dec popf pop bound test mov cmp inc add inc ljmp dec cmp xchg outsb sarl mov adc cltd les cld xchg roll adc push dec adc (bad) jg xchg mov mov xchg test rcll mov andl cmpsl inc jbe imul mov in stos js stos sbbb (bad) loopne and cmpsl loop lahf daa xchg ljmp aad cmp mov daa mov add and xchg mov js xor pushf adc popa mov mov stc negl inc pop outsb adc loope subl cltd pop push push xor imul clc pop subl lret mov mov dec xor sbb or imul xchg inc adc movsb mov movsl lret stos add in jns cmp cmpsl ljmp xor sbb jns push sub (bad) movsb cmp aaa and mov ljmp jge xchg ret jo jecxz call lret imul add cltd dec push ret test pop out sahf jbe movsl das mov sub sbb call or mov mov lahf mov adc ja pusha lret dec xchg out stc push dec dec int out jns fsts sub mov or mov pop lcall cmova cltd and shrb jno adc cmp sub mov aaa mov pop stc pop test rorb cmpsb or cmp adc push shlb inc fnstcw out cmp mov js sbb popf dec or mov (bad) cld pop std mov mov in cmp (bad) mov and mov cld jnp ret xlat test (bad) pop inc cmp adc dec sbb int3 xchg clc aaa inc mov fcoms out mov xchg push lea cmp sub mov xchg jecxz mov movsl mov ret push ret dec in int3 test lods movsb dec nop mov xchg jle mov imul fist out movsl xor dec add (bad) mov mul lahf fdivrl test xchg push mov pop test push pop mov jne std mov jo mov lds pop sti aad cmc jb and (bad) xlat andb ljmp nop mov mov mov insl xor lds adc or fsubrp ror lock rclb (bad) das (bad) arpl mov mov and xchg rclb mov mov pop mov int3 pop lock aad mov add out (bad) jbe mov icebp pop mov pop jne xor mov cmp stos sbb mov mov mov or clc push or add sbb mov inc test push sub xchg cmpsb and cmp mov insl loop imul jns mov mov mov rclb es inc rolb movsb mov mov sub rolb mov jmp xor lods mov psllw inc add shrb jae and pop pop mov dec pop (bad) stos movsl xor cwtl adc jne sbb sub bound add movsl push lahf ds inc in mov mov lock xchg adc cmp je xchg xchg xor xchg lcall push lods sbb andb leave dec pop hlt add (bad) xlat sbb add inc xor ficompl or mov ljmp mov or sar mov xchg (bad) ljmp lds outsb jg sub punpckhdq js imull xchg mov loopne or push pop jo mov inc jbe adc movsb pop lret jo pop mov in insb outsb jmp popf xlat mov shlb jecxz stos (bad) inc in cmpsb cmc xor mov enter arpl addl xchg mov jnp xchg orl lcall in cmpsl mov sti or sbb outsb iret mov mov and addr16 mov and cld je mov lock pop scas pop sbb dec add push mov stos mov movsl out and mov lods cmpsb pushf bound stos popf jns (bad) jg mov shl popa mov xor aad sbb gs shll dec dec add insl add mov sub inc repnz push inc cmp mov mov out jg (bad) and loope cwtl mov test aaa lds adc and repz mov mov imul cwtl mov inc movsb into xchg and mov lods mov bound inc in xor dec or pop lahf push subl push fucomip js adc fnstcw insl xchg inc xor fwait int repz dec and rorl jecxz xor pusha sub loop aad (bad) ja cmpsb jp lea inc mov jle or mov mov movsb jns fstps imul movsl rcrl iret dec daa fs ret add mov push sub stos sub jmp push cmpsb into inc dec or (bad) or nop adc jb pop loop xor (bad) insb addl jno lret and mov mov outsl lock fdivl mov xchg mov mov jns mov xchg push test xlat sbb mov add mov inc add lret inc cmpsb cltd cltd push dec or popa js ds xchg pop lods mov cmc lret xchg jnp xor movsl jae mov add mov (bad) int sub js pop xchg jge movsl ds or mov in fsubl mov in push mov add mov xchg ret add xor push cltd xchg test scas (bad) icebp cmpsl dec subl add xchg sti mov fnstenv mov add xchg fdivrl int3 xchg daa cmpsl enter rclb sub pop ret lods add ljmp push pushf xor dec mov jae mov adc dec mov lock bound mov enter movsl add xor push js fnsave mov cmp xor lret push xchg (bad) cmpsb mov mov pop sbb xchg orl xor les pop rcrl xchg loope icebp and sbb dec out mov mov test imul cmp test into and or sub push cld pop adc pop (bad) pop sub pop push mov mov xchg (bad) jo inc push popa fwait (bad) icebp mov movsb (bad) xor daa sub xchg xchg pop push push and (bad) mov cmp insb mov (bad) inc mov pusha in mov mov cli mov cmp mov mov mov insl xchg inc cmpsl jbe ret cld lahf sbb rep es mov mov lock add inc cmpsl dec or mov cltd pop outsb out (bad) xchg ret sahf xchg cmpsb loop in jg aam mov push (bad) cmc out xor pop jo dec inc mov lea push aaa cld loop cltd cli and cmpsl je pop aad loopne jbe rclb xor in pcmpeqb nop adc out xchg test jp and gs and (bad) imul xor loop dec mov adc stc cmpsl xchg movsl adc icebp sbb mov mov adc mov roll nop imul add stos and outsb mov mov xchg icebp outsl and test inc mov fldenv loop adc ja mov mov mov mov inc xor imul or and js mov inc out dec lds inc mov insb and mov mov mov mov icebp pop adc xchg movsl das sbb nop lods out in rolb imul rcll ret in clc xor test push lret xchg mov test mov int3 aad sarl sti es and mov orb push jmp dec outsb sub sub bound stc pushf leave repz orw dec pop xor pop les mov in repz pusha bound mov adc sub xor mov bound mov dec sub pop pop popf rcrb jp mov (bad) xchg mov repnz jns cli push inc pop fwait adc andl ljmp jmp push mov iret das jmp data16 mov inc jl imulb sti pop mov jmp dec jp mov mov out movsl xor cltd pop fwait xor out mov lds das sub in adc jg (bad) dec repz ret add test mov es pushf xor jle add lods cmpsb sub lock arpl (bad) jp sub test std ljmp jno dec in outsl mov ss sahf mov test and push sub jmp shlb bnd dec push sbb push stos movsb mov add ljmp mov cltd ret jbe in sbb das shll sub lds mov mov mov or jo mov mov scas out jno xchg xor mov mov or fnsave arpl fistpll pop andl mov stos jne dec mov add inc ficoml es cwtl (bad) mov jle jp and ds mov sahf cltd pop xor pop iret add shll mov jns addr16 push addl sub and adc daa bnd js in icebp (bad) xchg jmp xlat xor mov dec dec scas cmpsb mov inc ret movsb (bad) xchg xchg or dec rcll cld push mov sbb repz mov les (bad) leave inc push add xor jge ret push dec mov sub cmp pop icebp (bad) hlt xor mov ss es sbb jle mov pop in in mov loope lahf inc cmpsb add mov les cmp test pop (bad) jnp sub daa sbb jo loope sbb inc jge push mov adc push xchg mov out movsb or mov cltd insb inc ficoml and push rorb mov xchg mov push mov sub fistpll jo mov sbb add xchg sub lret sarb hlt lods gs shrb les cld jmp fwait cltd pop sub and clc lods fildll xchg add mov adc out dec in shll cltd and cmpsb adc and xor lahf adc mov jg sti push insl stc shrl andl mov cmc cmp pop out dec gs sub and pop test mov or data16 jge jo xor cmp gs xor nop xor cmp sub add arpl mov in adc dec xchg or popa js pop or and and cmpsl pop pop mov ja fs sti mov shrl je test push mov mov mov les scas mov mov (bad) cld scas jns inc jecxz addl dec pop cmpsb mov rcll mov fnsave int3 cmp les xchg bound rcrl push and addr16 and aad lock leave add daa push sbb imul add movsb fiaddl movsl ret add pop ja scas and inc sub mov rcl out lods or shrl lock xchg mov push pop push inc mov insl and fwait and push jbe loop mov and and fstps outsl sub sbb xchg mov stos vmaxss inc andl xor out popf test shlb (bad) es fs xlat pop pop push mov sbb movsl addr16 xchg and lock jae cmp push movsb inc xchg cmpsb dec and dec nop out scas bound and and pop imul sub cld xchg movsb cmpsb data16 lcall add mov clc inc pop adc cltd in push call pop lock xchg mov cmpl (bad) xor jg ss les adc andl pop xor xchg ror mov or repz mov ret adc xchg test icebp ljmp stos pop rorl lods xor hlt push xchg bnd dec lahf push adc bound sbb test mov dec jmp sbb in arpl and jae pop pop adc jnp bound js and jmp mov aam addr16 jae rclb test mov frstor (bad) stos jg popa pop outsb js jecxz movsl dec dec pop push lret mov cmovge gs xorb in bound sti pop loop test or cmpsb bound or mov and data16 jg dec (bad) and in orb sbb add jg inc adc mov ret bound xchg jnp out xchg pop pop iret int3 shlb xor ficomp pop shrl sbb jecxz call sti mov sub insl in adc adc xor mov bound sti ficomp pop xchg (bad) jns mov mov int jno call lahf xchg add ss dec mov outsl popf loopne (bad) xor nop addl or bound sbb mov xchg lods push pop mov loop add dec add jae mov adc mov rep xchg adc into dec pop mov push and scas pop jnp dec jne lods cmp push mov imul or push mov insb daa shlb mov cs add fcoms iret mov mov stos add hlt idiv push push push and int jp inc in pop pushl arpl out insb mov add aam sbb loopne xchg inc add test daa or pop shlb push adc mov dec add xchg cltd mov inc subl mov inc mov mov jp loopne ja sub mov mov test out out sbb rolb or lea xor jno xor sbb shrb xchg mov mov mov popa and call mov loope mov dec mov movb cmpsl cwtl clc data16 je test lcall add lahf repz jl in andb nop mov movsl inc mov adc movsl jne adc push adc dec arpl cmp movsl push imul jp or psllw ret and insl mov int3 sbb xor mov adc xorl xchg mov popf imul pop movsl inc clc ja mov and cltd xchg inc mov mov push popa outsl call repnz lds mov in ret movb out jae ret jo addr16 mull aas int3 lahf sbb daa xorl mulb std sub or pop nop movsl and lret xchg call add jb and (bad) jle mov cwtd pop ret jo popa push ret pop jp popa (bad) jecxz xor and pop xchg mov arpl ja outsb test mov sbb gs mov sbb mov fist mov ss popf jmp xchg in push lahf mov sub inc pop inc push jo imul and popa lds cmp data16 (bad) out nop rolb out ret cmpl jo (bad) mov xor mov movsl jne xchg or (bad) in sub push dec mov pop sbb ret js xchg and pop fcoml dec das stos mov mov ret jns les lcall or mov mov hlt jne jo icebp ds js ret jmp ja push cmpsb (bad) mov mov jne loope and lock movsb sbb (bad) dec sbb and and xor mov mov test scas inc repnz cmpsb ja mov xor fucom mov add cmp mov in out xchg push rolb push loope mov or xchg pop out fsubrl sarl movsl (bad) mov lcall xor sbb xchg cmpsb mov ficoml fisub xchg cmpsl push aaa aad add sub sarb or mov test xchg push mov into jle mov fist pop cmp jmp mov cmp inc ror call mov fistp (bad) mov adc js sub (bad) or cli mov mov mov or adc pop jns jp imul and mov mov insl jnp sbb iret not (bad) mulb xor es lock addr16 sar push cmpsl mov and adc push data16 mov out mov loop push jge daa aas sbb pop cltd mov cltd mov sbb xchg jg,pt adc pop cwtl loope inc cltd xchg popa push xor lods pop cltd add mov test decl mov mov popf sbb mov call leave xchg sub adc and jo decl mov or xor push xchg cmp and das cli mov in sti xchg and pusha xorl pop jne add out xchg cltd das inc xor push in mov leave int fdivl sub push aam mov pusha nopl nop xor adc popa jge mov sbb lahf cs sbb xchg mov mov sub pop cwtl sub es xor icebp aam popf push mov clc inc cmp cltd imul pop shll movsl sub xchg sbb (bad) imul mov loop jl xlat jo leave fdivr jp adc ljmp mov jg push in int aaa push sbb or dec mov imul (bad) repnz dec cltd stc pop int3 mov pushl test push xchg fsubl imul or xchg pop (bad) mov (bad) fsubrl add jmp add lahf pop mov pop inc jbe lea xchg and mov sub fldl mov scas fcmovnbe movsb shlb xor into sti pushf mov cltd xor lods pop mov fwait cmpsl outsl xor call and imul push andl or xchg xor push jae leave les aas iret sub and jecxz (bad) stc dec je sti adc xorb xchg loope icebp mov sbb inc (bad) nop int3 mov add jns cld mov test xchg rcl stos or out sti sub fcomi jo push (bad) or nop xchg movsl pop lock xor (bad) cmpsl add mov or mov push and push push mov pop push mov sbb (bad) aaa mov xchg sub cmp dec sbb xchg les pop sbb push lcall mov (bad) into xor pop xchg xorl cli lcall in int add cmpsb or pop hlt leave call sbbl push xchg pop sbb xorl inc jbe dec (bad) jg stc xchg cmpsl cld in pop incl pop leave cmp add dec push add popf (bad) lds pop roll stos adc in (bad) mov or in and mov and cmpsl dec push xor sbb mov or lcall nop mov or popa push pushf xchg push push mov mov into jl mov mov lds (bad) aaa sbbl call mov fisttp add mov xor js and jne test push call lea dec sti lahf (bad) in push cltd shll push sbb or mov insl mov cmc cmpsl jae inc jb cltd add lds cmc shl ljmp and mov mov movsb clc imul ret and push mov stc lea adc movsl repnz popl ss sti shll popf jb imul xor je das or mov add jp sarl mov ss mov cltd cmpsl out xor shll sub inc mov rcrb push insb or sub hlt cli push sub push mov mov jnp mov dec (bad) aas imul add dec mov xor pop fwait ljmp inc hlt xor cmp adc les push add in pop mov xor mov xchg rorl repnz or jmp add xor jge and dec mov cmpsl xchg add dec mov (bad) jp cmpsl lea sbb cld cmpb popa cs popa jmp pushf leave mov movsl les mov mov aas nop pop ja push outsb push mov fisub xlat lods leave addr16 mov bound or jo shrl adc shll mul inc imul push cltd in lds lea jbe dec sub call or inc mov (bad) sarb (bad) jnp jecxz push or mov mov mov ficom fucomi pop out (bad) js or lcall int test mov mov sub ds das dec xor das jo fstps mov arpl pop xchg lods mov sub xchg stos test jnp test movsb int int ret xchg or push xchg inc int3 rclb dec pusha inc cwtl ret push cwtl mov (bad) jnp (bad) lret test adc inc call ds aas cmp mov nop scas xor (bad) mov push push js repnz mov and and das fidivl les mov data16 add mov es cmp bound icebp (bad) mov insl aad cmpsb out pop xor sub ret and and (bad) mov jecxz in ss fimull add sbb dec pop push das sahf inc scas pop frstor es sbb sahf mov sub pop out mov je imul ja sbb xchg add sahf orb mov aad mov clc mov movsb stos iret jne lods mov into pxor imulb call jg push add popa movsb mov pusha das pop xor pusha inc jne in shrb aas (bad) pop xchg test je push dec pop mov call in push add negl push push sbb jno and clc addr16 jae (bad) nop or pushf and xor (bad) call (bad) ret lcall xchg es in ret fcmovnb fcmovnb fstpt cmp push out aad ret fisubr push mov lods in push pop nop dec add xchg inc (bad) fadds push or or or sub popf push test pusha cs and and out add mov mov lea jp push movb pusha xchg pop lea movl bswap movsbw mov lea lea call jmp cmpb jmp pushf movb lea je sbb add btr stc sub bt xor shr bt pushf mov and add pusha adc add shr mov call push inc jp cmpsb cmc mov dec cmp adc rcrb sub inc xchg fistl cmp sub das iret test mov pop aas scas jecxz add xchg imul cmpsl cmpl lcall int cmc add imul mov outsl loopne push enter int3 jg cld test xchg cmp xor cmp jne inc cltd pop andl mov gs out in sub dec pop inc mov das int dec sub popf inc push lea (bad) add dec jo xor jle xorl inc fcompl in cmp cwtl out (bad) shr and cld jecxz les jno sub stos mov call lea jmp inc lcall sahf test cltd in ret sbb inc dec jne jne test pop mov iret packsswb ja leave jbe fidivl or pushf test movsb mov adc ljmp xor push cwtl xchg into fistpl addl leave lret mull mov hlt jmp or jae les or mov mov pop jge test lock mov flds xor js mov inc jge mov pusha sub jns movw call movsl cmp fcmovnb inc fwait (bad) adc xchg out cmpsl mov jmp pop mull dec hlt lret aam cmp sub mov in std mov and adc arpl sub pop dec and add clc imul push iret stos or (bad) dec adc in shl das xor sub pop mov add add push cmp mov lret icebp adc dec adc icebp add pop and dec ds orl xchg mov inc fnop jle and out lea dec nop test xor pop xchg mov lea aaa push jp jb pop xorb in (bad) enter out sarl cmpsb mov pusha sub pop inc mov pushf pushf lea jne pusha not push call jmp pusha movw call cmp pushf push pushf lea jae cmp pushf cmp jmp pop cmp xor push jmp pop jmp adc inc jae inc fildll mov (bad) jo lahf pop pop dec mov lahf loopne inc mov cmc sbb movsl push mov dec lret xchg aad daa jg jo xor int3 ss push inc (bad) fnstenv xor test clc imul mov fisub dec icebp mov push or imul ss shrb inc ja,pt cwtl pop mov mov mov mov or cmp jmp fsub mov sub int aam add rorb stos cmp fcmovne xchg jmp pusha sub jge push pushl lea call push call mov pushl popl movb pushl ret jmp aaa test push sub psrad lahf pop lock xlat cmpsl cmp mov pop js push test ds mov and jns sahf xchg push cli gs xchg (bad) xor sbb or sub stos adc xor mov mov or pop movb popa popf mov lock pop test add jnp imul pusha sub rcll xchg jb addr16 sbbl mov popa cmc imul test jle adc push mov push into push lock or mov ficom mov (bad) lea test test test aam dec jae jno (bad) mov das in pop jg or movsb and sbb js (bad) dec xchg mov int popf (bad) leave cmp sahf cltd out mov xchg dec aad sub pusha adc xchg movsb leave add add daa arpl pop lcall adc std push pop mov subl xchg jo jecxz xor and loop jno sub mov lods repz call clc push or flds orb imul call cmpsl inc fldt jg add out sub inc out push inc dec xor in aam fcoml push out cli and push stc inc (bad) aaa sbb push or sub jae orl dec cmc dec sbb pop jmp bound lods pop out xor cmp mov lcall cmp aad fistpl das test cmp pop dec mov (bad) jg add out push mov lret jl xchg and mov ds jg cltd lods ficomp pop and xor les pusha (bad) fisub and pop push adc dec or outsb jno daa cmpsb jmp movb pushl ret cmp add pusha push call lea jae push lea jne jmp call adc mov lea jae call and mov mov in mov lcall test xchg addr16 data16 mov adc ret sub mov sti inc notl lahf out pop mov js dec ret test or (bad) or lret movsb dec hlt inc cmp fs cmp push mov insl xlat repnz lcall test push dec pop jo adc mov mov fwait movsb in cmp lret cs leave mov fldt test jne cmp orl loope push into and je fs xchg inc fwait sub dec jge and xchg aaa out adc imul shll inc and xchg lret jmp mov mov call lea pushf pusha lea jl pusha mov movzbw sets pushl popl pusha lahf mov call sub bound inc push xchg test jg movsl mov in xor and cs xor bswap scas movlps lea xchg sub rcrb fiadd push jg pusha mov pop aaa sub jne das iret ljmp insb repz jg popa xchg or in xchg dec (bad) xor jno hlt push or js jecxz sub mov rcrl inc aaa sub add jnp xor mov shrl push push pushf add into and and call mov call bound int3 fisttpll sahf in fisubrl jge popa push dec (bad) jns shl mov loope xor adc and sbb push pop sub lods adc inc pop or xchg movsb mov aad add aaa cmp xchg into sar cmp cs add test or push pop add inc jmp pop xor mov push xor adc cmp mov xchg or or lcall mov lds loopne add mov dec mov scas hlt lret mov fiaddl jno and aam (bad) add add push pop add sbb add add outsb je add add add or add add add cmpsb pop add add add add add push pop add add add add addb add (bad) jecxz add add add mov add add add add pop sbb add add mov add add add add cmc adc add add rcrb add add push cmp add inc sbb (bad) mov and dec mov add add add dec push mov add push fisttpll lretw and out sbb fdivr push pop lret jge popf mov jg repz scas pop sbb leave and mov dec data16 lahf fcompl cmp add aam push bound sub orl lcall or push xor fsubl cmpsb add dec ss and xor mov jbe sbb lret xchg cmp neg sub js pushf cmpsl popa arpl (bad) arpl cltd xor mov or shrb repnz push leave dec cmp fidiv aaa push out mov fadds fwait (bad) mov fisubr testl nop push popf pop outsl jg fbld icebp sub mov sbb xlat dec sbb sti jo push sub loop addr16 roll gs scas fisttpl std push fcmovb xchg jno mov into test sbb xchg push mov sti insb xor sbb sub push jae loope cwtl mov or xchg push out push bound or lret push dec mov aad inc xchg imul fimul push dec decl lods imul mov movsl gs mov arpl lods rolb out fistpl cmp in mov call inc test ds andb in lret mov cmpsl lahf mulb pop jge jmp xchg cmp and add insb sti mov and (bad) mov lcall cmp push mov mov sub in fcmovb xor (bad) mov gs out mov divb (bad) jnp fidivrl jnp pop lret pop xor jmp push fsubrs add or addr16 loopne stos iret mov jl jecxz push push cld in outsb in xor aas fildl or add mov inc jns push mov ljmp fimull lds pop dec popf jg jbe jb (bad) dec push sbb push add adc inc int3 loope mov pop lock jne xor sbb xchg inc imull sbb add xchg in pop mov movsb mov std arpl ljmp lahf pop int (bad) lock jb repz cli sarb pop iret andb into (bad) push cmpsb mov or es xchg and cmp js sub (bad) out pop jns mov mov dec imul cmc sub les ret cld sub jno into xchg xchg (bad) mov xchg orl dec lcall sub inc mov mov lods call cmp into push lods xor jge mov and rorl or ss mov aam insl (bad) mov test mov sbb pop data16 cs xchg aas add xchg push enter mov das int3 sahf mov pop jno cmc pop std adc mov xor arpl imul daa jae ficomp (bad) loopne sub bound adc lahf xchg and mov cmp popf push xchg cmp js mov imul ret add jns (bad) mov lods (bad) out mov out fadd int3 xor push repnz push call pop push jge xor clc test add add movsl fidivl inc mov pop dec adcl mov lods inc movb cmpsl (bad) jecxz nop push cmp or jo fimull aaa stc xchg push pop and dec mov loopne xor adc or orl lret cmp mov xor aam dec pmullw ret sbb or sbb push js mov scas idivl push inc xchg mov mov repz push out mov pop jnp cmp push add lret or lods xchg xchg (bad) and or fsubrs cli testb stos sahf icebp push mov in cmp inc mov xlat push add xchg mov stos or mov (bad) sbb ss or mov shr (bad) or pop xor inc xor (bad) push sub xor cmp pushf mov cmp cmpsb inc mov cmpsb movsb outsb add add lock fwait push jb daa (bad) sbb mov lea int stos outsl add xlat daa ss stc js lahf rorl adc sahf add lahf test xor add push sub out negl mov jp idivb sub loopne xor in xor cmp sarb test lcall mov mov stos pop add movsb cmp call jno inc ds xor loop xor pop scas mov neg dec js push and push and xor xchg fidivl into or ds fdivrl mov and dec cmc stos xchg lret iret jno,pt xor mov bound lods insb pusha roll cmpsb cmp fwait jl cmpsl and bound cmpsl dec test out push call jns mov dec lds fcomi and mov adc sbb test pop sub scas pop and jmp pop jne loop rcrb mov push movsl lret dec cmp add add ljmp fidivrl cmp push sbb sbb test mov (bad) mov push xchg in jns js es aaa test icebp xor movsl xor cli cs or and cwtl out adc mov inc mov into repnz scas add pop jmp or imul rcl loopne mov mov push scas jmp fsts sbb or loope mov pop divl sub shrl jns out fsubrs or (bad) cmp jbe mov loope ja mov arpl out fstpt data16 shrl mov sti sahf imul push pop out stos push movsb xchg mov sub or gs push and (bad) imul clc lahf pop xchg adc xchg mov iret out adc sub les loop mov lret pop push jbe jp aaa cltd jbe xchg jo mov or mov dec data16 jg jne cmpsb dec sub lods xchg (bad) mov or cmp fnstsw inc cmp stc ljmp cmpsl ss mov mov cld iret fisttpll pop pop cmpsb mov pop vmptrst test iret mov ss or fsubr jnp mov or int3 dec push dec mov cltd fisubr repnz xchg dec jbe mov or mov in hlt mov imul or pop sbb (bad) ss pop or sub push cmp imul jge mov push fidivrl in popa cmp lcall xor ret xchg mov rcll xor lea outsb (bad) ss jns fstp leave jecxz idivb sbb shr stc push adc mov fstl push pop push jp gs push stos loope pop fs or push xchg mov outsb mov in or enter sub movsl pop hlt in inc hlt fildll xchg xchg adc (bad) bts push fsubs repnz insl imul rol cwtl add out jns mov mov hlt popf stc leavew mov xchg xor inc loopne lret xor xorps xchg jb sub scas xor int insl pop icebp es andb pop adc lods iret pop rclb pop clc repnz subl add ret repnz sub (bad) sub fsubs mov lahf adc lahf adc cmp movsl cmp stos fbstp jne adc sahf dec push xchg xor mov inc cmpsl (bad) or ror adc xchg xchg or fmul mov mov pop ja lahf adc icebp jl sbb test push mov nop mov sarb outsl jmp xor xor inc fsub js pushf and inc out rolb sti mov out fstpl emms fs jbe cld (bad) loop xorl or jns ret test (bad) mov stos inc scas out inc add or adc or mov iret add mov div insl aam adc cs mov dec cmc addb sub inc (bad) movsb and lds push aam pushf mov jnp sbb call repz test mov ret sbb and inc jecxz mov or imul lods mov lods lret stos pop jne lret dec mov in sbb or cmpsd adc adc and pushf es pushf xor ds dec sub in aas data16 mov mov aaa mov push stc cltd jmp loop cmp mov add xchg mov mov push mov cld sub movsl add inc and xchg mov (bad) pop inc fs fs add out gs xchg out jns jno insb xor pop enter pop sbb leave jl out addr16 repz cmpsb jmp fs (bad) ss mov jge sahf xchg test movsb gs popf xlat mov sbb cmp imul adc push in ret lock mov or sbb xchg adc xor leave stc push (bad) call and movsl dec xchg dec inc fndisi(8087 sbb inc orl or xchg mov and mov lock loop push push (bad) sbb or xor cmp add push lcall add fdivrs dec (bad) cmp incl (bad) lds out out mov lods cmp ret insb orb push add mov std adc xor sahf test scas in push pop xor js push loope jle pushf test mov jns ds mov stos xchg (bad) jp (bad) jbe subl dec jns cli pop pop xor dec push xchg xchg pop int3 jne push xchg (bad) repz lds lock out xchg (bad) faddl mov cmp add ficomp push adc inc and test xchg (bad) jbe lret push aaa jg mov mov xchg push mov lahf pop ret dec mov cmc lds in sti or push ja sbb and in mov add stos mov es mov add mov movsl inc lret pop jl jb decl and sbbl add scas jp push shl jmp mov xchg les or (bad) xchg push xor cmp test test sbb inc cmpsl aas pop push mov lea rcll (bad) dec cmp fidivr pop inc ja (bad) mov push dec mov mov aaa sub int3 xchg data16 xchg cmc push lock enter rorl test pop pop arpl jnp (bad) jmp (bad) cltd test ret pop movsb fwait sub movsl sub xor in test cs mov jl xor pop jns add mov sbb imul outsl es fs pop pop mov ss dec in cmpsb jnp jl dec sbb pusha enter and mov nop sub ljmp jge sahf pop mov sti jb cli cmpsl and and xor inc add xorl int movsb mov pop rorl inc out ficom pop mov sbb icebp adc cmp lods add popf and inc xchg cmp dec fdivr adc or pushf leave xor lods add push mov mov outsb and or bound sbb sahf cmc push cmpsb jbe icebp loop daa popf mov xchg mov jg rcr push adc sbb mov pop cmp shrl jge rclb test and push (bad) mov insb push (bad) mov rclb jne sub mov cld cli in jmp insb iret adc sbb sbb insl and add add lea je pusha clc clc cmp pusha pushl movw push lea je push pushf lea jmp and push cmc test xor sub xor mov dec jno inc movsl jp jle mov and pusha rorb lret call sub cli push cmp dec mov arpl jo inc lret pop jl movsb inc popf scas inc call inc pop pop pop fwait clc out mov xchg cmp xchg (bad) add pop xchg pusha sahf insl xchg popl clc test pushf adc xchg cld mov or jb mov (bad) int pop jmp mov xchg je push sub xchg or (bad) xor cmp pop fsubs dec and mov pusha add push cmc pusha stc add pusha jmp (bad) stos aam loopne fsubrs lds jo jl pop and in jmp jg shrb loopne cmp fninit and mov xchg jg test xlat loope lods mov pop data16 pop xor inc repz movsb adc enter fisub jnp loopne in rorl jnp adcb xchg outsb jle movsb mov ds aaa or ret bound adc or mov sub repz add scas push xchg pop lods xor dec dec jne pop addr16 push cli adc clc rol pusha add pusha movw mov movb not movw dec stc shr jmp inc movb call fimull adc sbb mov jge inc jecxz xor pop ds pop test inc jns mov jb scas movsl lcall inc nop outsl popa inc mov push sub pop sub iret ja fs adcl cmove mov xor lock scas rorb loopne add dec repnz or add jbe dec push ds (bad) jp or mov enter out pop pusha movsb inc je and movsb pop sub inc jge js cmp mov xchg mov lret xlat mov out push stos aad xor jno add popf push pusha pushf cmp pusha call fistpl jne inc mov inc cld adc sub jns test int jl jne xor sub ljmp stc xor inc cmpsb das mov jp add popf or in sahf lods stc jo mov mov bound jge addr16 ja pusha jg xchg mov (bad) setb add mov rolb xchg sub mov mov mov cli imul mov cwtl cmp xor sbb push mov jnp jo hlt lret or add test jmp mov call xchg add push enter out and push dec pop jno add mov push pop and jmp jge push sub pop and cmp mov mov inc and jo (bad) fisub sbb and in test push jp jbe mov fninit and arpl repz pusha iret push movsl mov lods or das inc jmp inc jns lods shll rorb fisub (bad) std adc mov adc fcompl dec icebp inc and sub lock pop push das push cmp loop (bad) dec xchg jno (bad) ja jge jp cmp fiaddl fucom cwtl (bad) stos hlt add lret aam std pop out fcomi sub and pusha add fadd std loop testb pop lock icebp push xor add push and adc lods test fldenv cmpsl fsubrs stos aad aad nop sbb lret movsl mov lods jg push or add add into pop test aaa lods cmp cwtl in out push mov jmp (bad) adc sub inc xchg les scas add cmp test jmp outsl lods jecxz out jg sub pop pop cmp sbb adc add (bad) mov fs jne bt or mov push call jae (bad) mov aad inc ficomp jecxz in enter xchg call mov push and push ss cmpl xor roll lcall (bad) jg or pop ror and cmp into push mov (bad) dec incb repz or xlat daa mov leave (bad) out ficom push insb fnstsw daa orb sub mov (bad) mov pop mov jno decb ja cltd test jb (bad) iret ss push jo sarb mov xchg xlat push jp inc add pop sbb sbb jno outsl mov and jo cmp mov xchg jp inc cmc inc jp add into xor ds jb int3 (bad) mov cmp xchg jl mov push std cmp out pop scas adc push xor fsubr jae lcall scas push push in sbb hlt push jb push xchg nop mov jno (bad) insl and jecxz rorl addr16 ret sbb (bad) sbb orb dec lock out adc dec out lock mov push les and mov mov sti xorl cmp push xchg push jne je ret mov adc adc jmp ret ret mov addr16 bound popa jmp adc push dec in pop popa cltd sahf and scas stos hlt or notl sub out mov pop (bad) aad aad lcall sub xor dec jo adc inc test ja push jne in jb pop outsl (bad) and xor jmp fadds jecxz push jno std (bad) lret sub bswap bswap lea pop pushf pushf pushl ret fstl sbb add jecxz adc in adc imul es cld ret xchg jmp cld push addr16 add dec xchg pop js jae inc pop cmp xchg dec loop cmc sub (bad) fcoms cmp dec out pop push and or inc or dec add and and lret mov popf (bad) cld xchg cmp pop into pop add adc gs fsubrs ljmp ljmp dec orl mov imul fdivr ret sbb pop sbb aas add xor inc test mov lea push push js jmp jecxz push add mov popa and (bad) loopne sub push mov inc andl cltd (bad) mov (bad) adcl test fnstcw dec push arpl js call hlt dec rcll jmp and mov mov pop add jg cmp fisttp sub push inc pop scas xor inc incl data16 cld (bad) leave inc std pushl cmp push jmp adcl jp or outsb fimull std adc dec cs and aas fistp imull adc jle mov xchg movsl arpl pavgb leave xchg xchg rcr or loope inc and repnz cld cmp sysexit gs push add mov dec xchg aam fcmovu (bad) sti movsb je jno mov xchg shrl mov or lcall or inc push sub pop fs cmp mov jno jp xchg push ret jnp mov and sti repnz mov call clc jl in xor ficom fs idivl add mov in ret fdivrl ror rclb or out aam pop (bad) sbb mov add cmpsb xchg pusha inc or mov sub jmp (bad) jbe std clc push xor test popf dec lock pop (bad) ja dec cli in or cmpsb cwtl (bad) je rclb mov xchg mov xlat call pop inc inc sub pop xchg dec xchg faddp es inc mov xchg in xlat cs aaa adc insb push dec xor cli sarb popa shrl sub xlat pop ljmp js imul inc xor lods jae push jecxz lahf fbld ret sbb gs fldl2e (bad) mov ljmp sti inc (bad) aaa cs fistl call sbb icebp fsubs inc daa or (bad) scas test xchg movb aad out pmovmskb fcmovb sub repz add adc fildl pop cli mov jb xchg outsl adc mov sub mov sub inc lahf sub cmp jae (bad) out sbb (bad) push daa (bad) or adcb xlat insl sti fs mov pop cmp cmp sub pop add lods fwait sub or push arpl imulb push or enter aaa sbb or popa test es out mov mov xlat sub mov inc cmc pushf inc pop jecxz aaa push or inc push mov and int pop inc jmp sbb pop inc aas mov out xchg imul or push push xlat push stc mov lahf inc cmp jecxz mov mov pop xor jo cmp js mov shrl scas push int test xchg inc jp out movsb mov inc cld adc inc push lret jecxz push cwtl fmulp jbe insl scas les int3 test cmpsb mov add mov push sub (bad) sub mov and mov jmp lea mov pop pop inc cmp jbe scas sbb push fdivrs and push inc dec daa ja pop and sub sub js lods push imul sbb and popf pop fistpll cltd nop add mov roll xchg out mov movsl fistpl jb movsb mulb pop lods scas ret in or lods repz aaa lods mov add imul inc pop outsb jno clc popl loop cmpsl aas and jl push mov inc insl cwtl push loopne in int3 (bad) enter in sub sub out xor data16 push in int3 jae jo leave aad mov push or and pop and cmp add inc lds jecxz inc mov pop cmpsl rorl jno div cltd repz push js inc cli sub xchg js gs adc cs push mov lds xor push or or cmp xchg movsl fstl (bad) std ret icebp add push clc push bound (bad) xchg inc pop jle xchg lods add pusha iret dec push and xor jo sub lret lods mulb and dec das pop push mov add insl lods leave push cmp notl mov adc xchg push test xchg sbb dec movsb fwait or adc jb mov push sub push dec mov loop lea and inc lock mov cld fiadd push ljmp push jno (bad) push subl movl pusha push call jae call call fcompl es jle jns xchg cmc mov cmp lret mov push mov pop inc call dec (bad) and popa jns mov and or xor push cmc outsb inc pop insb in shlb movl pop (bad) fdivs xchg inc ss jp mov adc push lcall fisubr arpl sub dec imul pop inc test in mov lds add push jge,pn pop xlat mov bound popf dec std popa rorl push xchg dec fisubl test jo,pn les add jno idivb pusha pop jmp lea lea lea not mov pushf mov lea ja jmp shrb sti movsl xchg push xchg notl lcall mov aam mov or je mov sub cmpsb imul mov nop jnp jbe insl fdiv stos adc test jmp addr16 js rolb les data16 xchg push iret loopne sbb push dec sub xorl sub mov orb stc js addr16 cmc xchg stc push sbb pop outsb mov mov mov dec add std xor in add ret sub cmp (bad) mov call add fcmovb xchg cmp sbb pop xor adcb push inc pop popf jmp leave lret xchg jl test jmp pusha mov dec bnd jne dec enter lock addr16 shlb mov ffree rcll xor and loope fsubs sbb xchg and jae scas popa daa stc int3 repnz mov adc iret inc sbb test jb pushf sahf add pop lcall flds pop xor inc push mov dec hlt scas adc (bad) rorb xchg sbb pop hlt mov stos push faddl addr16 out in xchg or dec adc mov movsl fisubrl mov lahf cmpl sbb enter repnz lds lds cmp aam sub or xor push movsb cmpsb je call push mov mov gs inc fstps jle mov sbb test push push mov out loop decb iret fs aaa pop rorl pop fwait mov mov push loopne imul ss (bad) (bad) jecxz ljmp outsl insl mov pop add inc mov sbb orl repz ret pop ret in xor into cvtpi2ps psubusw pop popa outsl xchg xor test dec repnz in xchg out iret loopne lret cltd push mov add inc fnsave sub popf les xchg adc sbb add fnsave cmp xabort mov mov push jo mov inc push jbe ror and lods test aas pusha xchg mov sbb jbe sbb jle xchg cmp bound ljmp jp inc push loopne (bad) enter gs shrl or sub div iret cmc adc sbb aas and or mov push xchg jno repnz or pop add lea je data16 mulb mov mov add movsbw bts call pop fs stos xor gs mov icebp into shll popf lods push push xchg lcall rclb scas adc aaa xlat out out push add and mov xchg sahf aam jns mov je lret or adc xor test inc mov xchg adc cs or inc pop or push (bad) movsl out roll lods push scas iret lea jno jns lea adc push push movsl out jmp pop and dec test popf push lock incl (bad) or or adc push jno jne ja fildl aad pop icebp aas push hlt dec mov lods lea ja push pushf rol test stc pusha cmc add pushf pushf not movb dec cmp clc call push push inc push xor cs insb add movl cwtl lea pusha call not mov pusha movb mov pushl ret mov (bad) mov sbb push insl xchg mov cmpsb mov push pushf (bad) and test sub pop mov in jae ret push pop xchg mov iret iret adc cmp mov dec mov fadds sarb clc inc xor xor pop inc pop inc push adc cmp outsb psrlq fildl inc push and pop cmp arpl in out adc sbbl repnz jb mov cli jno lock mov mov mov push pushf (bad) sbb pop (bad) mov fistpll mov xchg push push mov lahf xlat sub push mov int3 icebp outsb jae stos adc mov xor cmp (bad) pop popf inc movsl cmp loope sbb ret push push stos sbb (bad) leave sbb pop xchg stos inc icebp jg popf xchg cmp add adc insb adc pop lds sub jae dec into nop (bad) jno lock aas add sbbl testl xor movsl mov and outsb shll mov dec mov add cmp inc inc std addl or or out dec pop les cmc dec test jmp in mov xchg jmp aad faddl pop or cltd ffree adc psllw popf icebp mov repz adc jae std jno lock pop aaa mov daa pop test imul lret adc sbb jno lock in adc faddl out push mov dec mov js mov cmp iret js js pushf cmp cwtl fscale dec std inc out xor mov and cmp fild iret inc fs add mov cli dec bound dec mov ret pshufw pop sub out adc xorb pop aas popf aaa mov rorb cmc mov xor push (bad) imul aaa push pop out push cmp daa arpl sarl arpl dec les sub mov enter xchg add and xlat mov pop test iret nop in inc lods mov xchg mov pop bndldx cli add std xor sub lods xchg mov mov (bad) jne popa jecxz into cmc ljmp sti fs jne push bound je popf dec jns xchg fbld repz je lods fistp and dec and sahf jae jnp mov bound xchg xchg mov cltd aad (bad) xlat ss jno out imul out mov mov pop test aam in xchg outsl dec inc fwait xchg mov sbb dec bound shl mov nop lret mov and xchg call pop add sarl jae jge mov mov jge testb or adc je gs sahf repnz inc lea or push les mov dec in xchg cmpsl or aas incl cmp or push mov mov xor sbb xor outsb or insl mov xlat out rolb loop add xor push jno in (bad) lret (bad) ficoml movl pushf pushf pushf push lea jmp jmp lea call pushf adc movl jmp movzbw xchg pop pushf call pop cmp lea xor insb lret adc sbb in mov fiadd jne sub repz mov lea lods cmp or pusha das push (bad) test loopne fsubr aad mov sub pop cmc adc xor and xchg dec xchg sbb int mov push jo push xchg movlps xlat xor or sub cmp mov dec jno sub andl and push sub ss lods pushf pop cmpsl mov jnp in jnp xchg xchg test or adc ret adc mov jp fisubl lock jo xor sbb jae push mov mov push insl sarl aad jp cmp lods shl lods scas aad out add ss cmpsl mov lcall jne in inc mov or add das out sbb mov sbb (bad) enter in and fisub sub test pop lods jmp adc aaa aaa imull pop rolb mov mov xchg sahf andl xchg movsb jno jmp ss xor inc and aaa imul push call pushf rep jmp popf sti ret xchg lret (bad) pop pop push xchg mov dec or add dec cmpsb pop inc jg cmpsl pxor iret mov inc ljmp jg popf and enter pop mov push inc xchg arpl (bad) fs xor jg mov bound loop push and lods xor ret loop or pop imul mov xchg movswl test test test cli mov popf add rorb pop lcall dec adc test push shlb xchg lods shrl jns mov cmc cli les in and jmp inc push or icebp int lock mov sbb xchg lret dec push sbb lock arpl push call dec xchg push lea aam add mov mov adc dec mov and out cmp fs cwtl cmp sub adc lcall repnz dec cmc ret push call lods and or enter cmp push cmp loop pop sbb sub popa test loop cmc sub lret je lock jp (bad) mov (bad) jg sub push inc sahf jae mov add pop mov shrl and hlt or pop ljmp and adc iret mov fidivrl push mov inc fsubrs jno sub jmp cmp test icebp ss jmp ljmp inc (bad) jns jmp push (bad) lret rol pushf inc cld jle jecxz out ljmp adc mov test pop mov lea jae jnp aam jge,pt paddusb sbb outsl arpl addr16 shl aaa dec adc adc lret (bad) mov push sbbl cmp jns imul aam std mov push outsl mov sub add pop jmp mov scas push xchg inc or cmp aaa test add adc add in jg (bad) xor push xor fsubrs mov movsb in das add les sub xor cmp cmpsb jg sbb das sub xchg outsl shrl out or or pop sahf xor pusha loope sub xorb imul sub jno jmp adc jb movsb fs addr16 in adc in inc fmull push jns rcll (bad) stc leave cmc les movsb popf (bad) ret push mov js mov movl push mov xchg mov enter adc and insb outsl sbb add jl mov sub ret sbbl or push imul (bad) sahf sub jnp inc pop pop andl leave testb not inc jle push jno call inc out test adc inc int sahf jne sub or cmpsl ja adcl stos jae mov cli push lods or mov adc icebp scas pop xchg cmpsb mov mov nop into lahf push ret fwait test in inc dec mov sbb inc pop pop inc dec pop xor and sbb (bad) and inc arpl movsl repnz xor mov adc adc mov pop push mov adc mov cli and mov in leave gs cmc sub xor mov pop mov dec iret cmp jno out sbb fldenv add xor or lea jne lea setle push pusha movb lea pushf cwtl movzbw mov jmp sub insl jle cld xchg add inc jle scas lock test pop (bad) and lods push pop stos sbb mov fdivrs push xchg es outsb adc inc mov loopne and mov scas jmp mov sbbb loopne out popf adc inc mov sub and popa xor pushf lods lods repnz mov in sub in mov imul xchg in (bad) out insb xor ds sbbb push pop mov loope popf loop movsl cmp lods cmp stc add or (bad) sub pop out test popf cmp sub mov lock jb xchg mov ret scas lock cmp jno out bnd aad push adc pop cwtl xor nop mov or fild movsl jp (bad) cmpsl inc pop (bad) sahf (bad) popf and mov stc or out push xchg fistpll test pop xlat push pop dec inc lcall dec adc cmp push inc scas lret mov mov mov and stos jnp (bad) cld iret adc cmp dec pop dec adc bound inc idivl sbb jecxz nop inc inc fnsave mov pop and push push mov rcl pop in arpl mov das lock or jge add lods add cld jne aad sbb out jmp std in dec push imul pop add das push loopne sarl inc pop sahf mov (bad) jne mov lret mov in adc and imul or addr16 mov xchg xor lods fldenv loope popa test mov mov jecxz jp adc and int3 push cwtl xchg dec inc pop lods out add push gs mov push jb ffreep sar es cltd dec add ret imul mov das mov es (bad) fistpl and adc dec sarb loopne aad (bad) rcll lods (bad) sbb icebp lods rcrb in movsl cmpsb pop lea call jmp call dec mov jns pushf cmc push and cmc add pushf pusha pushf lea jmp xchg dec xchg ret fwait push scas shrb (bad) aas or insb push push pop inc mov cmc mov sbb adc test push add out sub push movsb pop push mov xchg add cs inc addr16 movsl pop test xor out clc movsl shrb addl and pop fisubrl mov push stos pop in cmc push (bad) xor xchg lahf xchg and sbb adc or and ja xchg dec mov addl push dec js fwait sbbl mov jno jecxz das sbb pop inc repnz int3 push (bad) mov jae fwait inc sti add push imul xlat outsl jo cmp out nop outsb xor cmpsw sub mov mov cmp imull adc adc daa lret push mov scas sarb mov sub dec cmc add fs arpl push comiss add add sub shr and add cmovg pop jecxz fistl add call lea jne test sub shrd mov push or jmp test mov push neg mov pusha bt pushf and call sti int3 cmp dec out dec push fs mov inc lcall pop les in sbb insb push dec ret jl nop mov dec xor and je lret sub push mov sub test iret loopne inc push sub sbb inc idivl or call mov jo dec xchg stos out das out jg mov in cli sbb dec pop xor dec xchg jns jge sub adc and push loope or adc (bad) pop add inc jo mov jge jg or rolb rorl out jmp pushf and (bad) pop lods jae cmp inc mov mov loopne pop inc pop jno loop rcll or pop into add imul int3 insl xor xor sbb clc mov (bad) icebp int or (bad) pop (bad) out out stos jns cmp ret jl lods add adc sti xchg or sbb pusha movsl mov movsl mov clc push pop movl fcomps mov adc xchg sahf loope in int3 aam into fcmove pop xchg and pop xor testb ror and mov test or daa and adc pop dec pusha jne adcl cli cmp mov or bound pop aad jmp fs lods outsl adc or dec (bad) jns xchg ret scas adc out divl das xor mov inc jno loope fxam stc fdivs push and add and outsb outsb adc out mov cmp mov pop jmp stos mov inc and xor mov pop sarl dec xchg jno sbb daa add sbb mov xchg test imull hlt stos mov cld pop outsl aad shrb push test dec ja int add push rorb mov cmc fs push enter pushf and jge cltd xchg mov mov (bad) sar inc pop mov mov test stos jae pushf dec xchg adc mov jno loope mov dec cs dec dec add push popf push ficomp repz outsl fldcw out add outsb mov lock xchg lahf sarb xor jl mov (bad) dec mov imul sbb imul out outsl adc ja pop test mov and push (bad) out jl rorl jo pop sub and push jecxz lret fs xlat je mov insl sub ss mov xchg mov jns xchg mov sub push pop dec aas dec pop xchg mov out fadds xor sub cmp push outsl addps mov aas add mov push dec fwait inc lcall xor push pushf call pop cmp sbb mov jae mov stos xor shl test ljmp out push test (bad) je push sub (bad) lods fwait shr pushf or inc sbb sbb dec dec xchg pop in (bad) jb scas lock mov mov xor sbbb outsb scas mov lret mov cmp pop dec imul cmpsb mov fsub shr std movsl cmp mov or and hlt (bad) mov in pop (bad) jmp sbb ss aas mov push shrb sahf dec ja pushf inc fnstcw add (bad) xchg jl stos in sarl add (bad) stos cmc inc in inc pop lock leave cmp xchg xchg dec dec xor add int3 xchg push outsb adc rclb and xor jl xchg sarb jmp sub rcl inc cld add scas fs (bad) popf or dec dec adc sbb es sub xor and je fdivp push les mov cmc sub mov enter cmp je sti cmpl out nop push imul xchg push mov mov xchg jae jge pop ficom fs call pusha push pushf mov push pushf pusha lea jmp pushl jmp push pushf pusha stos setl movb mov mov jmp test push sub shrb cmpsb imul or ja pop xchg (bad) mov (bad) pushf incl pushw clc add and in test rcl or sub dec inc pop test mov inc dec xchg or mov mov cmc arpl ljmp ret mov fimull int3 mov adc shrl loop (bad) mov lret scas mov js pop dec outsb fs fistl push (bad) rorl mov loop out push loopne add inc xchg dec push jno push jae dec pop jno frstor dec dec push inc push dec cs insb add ds xchg mov sti cltd cmpsb dec mov int3 mov (bad) repz dec in inc jnp and clc loop push aad sbb add in repz xor out inc push test pop dec mov add xchg adc or stos and arpl pop lock dec mov xchg cld mov sub sbb repnz inc cmc pop add jp pop lahf loopne ds xchg push dec arpl xchg js xchg xchg jl pop push sub pop sub nop mov aad push jns push add dec push push cmpsl ja (bad) xor sub pop fdivr xchg inc cltd out call or fildl movups incb xchg mov insb xor add dec ret pop cltd insb add (bad) jmp push pop lcall hlt sub comiss add xor sub pop jge cmp dec dec jno jno fdivrl into xor cltd jno lret imul cwtl inc pop loope adc das fdivs or in test addr16 jmp sarl jno inc iret jecxz repz xlat jg (bad) ror scas dec pop sbb push fisub mov loop cmp push xchg dec or mov fiadd lahf mov xchg cmpsl push xor insb daa sbb and inc pop dec movsl addl push cwtl mov mov js (bad) jno movsb push mov enter mov sarb mov or add adc jg mov fisubl fstl rorb in cwtl pop push or icebp clc out and pop fildl lahf mov pop and movb jmp movb pushf mov jmp rcrl mov sbbb push pop xor inc ss (bad) push je lcall pop addr16 jnp imul test jmp daa enter jge dec sbb ds in sub fs sbb aam jmp mov push or rolb ret (bad) sub gs inc je sahf fnstcw mov dec out jb mov sbb mov cli test xchg sbb sti sub repnz rcrb pop push mov cwtl push jns lcall (bad) call pop pop ret sbb cmp push mov stos xchg sbb pop ja sbb dec push mov lea rcrl sub inc push outsl xchg cmpsl rcrl dec ja int3 outsl adc lds inc sbb enter or loope incb sbb add fcmovne xor and in data16 bound jne mov mov lret and das and jmp popf push dec in xchg rcr xchg scas jbe add cmp add fiadd mull sbb jnp adc pop mov aad sbb pushf sbb cmc mov out fistpll lods inc fdivl int rcr es fsts add je outsl outsb jae insb gs push add jmp jne dec pushf jns loop int3 mov inc fcomps hlt jmp inc cmp std mov cmpl cmp icebp insl movsl mov lods mov mov ljmp cmp mov push addr16 lods dec add out mov jl pop and xor add mov xchg add and mov cmc mov je lock mov rcr xchg bound pop rorb lods jno xchg les mov mov das mov movsl stc jno flds push dec inc fwait inc lret and mov scas lcall rcrb dec je and jl jecxz test cmp in (bad) and xor mov cli push ds wrmsr jno (bad) test mov push cli pop movsl popa das inc xor iret mov jno and cmp (bad) sbb push push cmp scas add mov mov push sub fcoml mov fidivl scas add push cltd pop jo test add aad dec pop faddl jg ja je mov cmpsl mov or fildl xlat or pop sbb cmc iret ss outsl das push sub push jno fsubrs mov add in fsubr pop jp push xor or sbb test and xchg stos jns lods xor inc push mov jp mov scas sbbl xchg xchg testl push push pop rorl test rcrb call andl mov aas out rclb adc jl jmp je popa inc (bad) xlat sub xchg push rcrl xchg cmp lret or das mov or arpl jl leave push out bound subl and cwtd test xchg mov test add adc push push int3 mov cmc mov out loopne int in xor pop pop jge lret sub movsl lret push gs ret sbb pusha jle lret (bad) cwtl push jns jp imul pop stc inc xchg xlat jbe adc dec pop test mov push and outsl les lret test jge adc jl (bad) mov icebp xor aas pusha cli and sbb push cmc leave xchg and cmp sub ja loop jge mov dec (bad) (bad) add stos push jb test mov int ficom sub inc xorl stos pushl pusha mov lea call jmp pushf movb lea mov pushl mov pushl lea movb push movw pusha movl jmp push lea jae cmp pushf cmp call pusha lea call pusha adc mov mov call add push gs arpl push arpl std (bad) sbb cld loop cmpsl js stos dec aad test mov mov mov iret push xchg mov sbb add fstpl test in adc add cwtl outsl sbb and roll inc shrb cmp mov xchg je xlat out ret scas nop cmp fcmovnb xchg in xchg in (bad) std loope sub inc call xchg std jecxz pop pop and inc push inc push inc push (bad) jae pop insl jno loop shlb sub fmul cld ret iret stos lea cmpsb mov and icebp dec faddp add scas (bad) sbb or decb xchg cli and pop aad std int3 cmp shr add xor mov push outsb xchg jmp push mov jne clc out push or (bad) pop jecxz dec fdivl push nop inc inc jge dec mov data16 sub xorb mov cld shlb (bad) cld loop fimull cmp daa push mov push xor sahf sub dec imull and out stos jns ficom push push inc push lcall push push lea mov test int3 adc aam fucomp (bad) xor aam (bad) lock std rorl mov pop aam jns movsl bt clc imul cmp add push lea jmp bt cmp pusha pusha call adc sbb mov leave jg xchg scas leave xchg or fsubs sub int3 xchg mov ret sbb xchg dec pop sbb enter ja jg cmp jae push loop in dec cltd cmp mov loope imul sahf test add xchg lods mov cmp mov outsb outsb push out dec outsl dec ss hlt lds sbb in pop jl or dec push xchg sub in adc lret dec adc cmp jnp (bad) cmp mov mov rcrb fbstp sti add aad jecxz cmp repz negl iret nop mov hlt add dec out (bad) js les andl mov outsb (bad) xor cmp mov sub shlb pop or mov xchg outsl ret adcl cmc popa pop stos call imul dec xor fdivl mov dec les mov jae dec pop leave out sub pop les mov cmp push inc in cmp dec aaa (bad) sub or rorb push dec (bad) xor sti jecxz cld cltd and pop shr mov mov call push mov push call mov rcl mov cmc clc cmc bt cmp jmp push dec cld pushw popfw mov jmp sbb in push sub mov imulb ret pop arpl test movsb icebp insl popf popa cmp sbb add sbbl jbe cli movsb mov (bad) dec (bad) adc mov jp or cmc mov (bad) imul cmc sub lods pop pop xchg push movsl mov push sbb pop (bad) fldcw mov lret pop cltd inc js leave imul pop jp cmp movsw leave dec imul jo stc cmp push pushf jle (bad) mov xchg sub dec mov mov mov fnstsw mov adc jecxz or fnsave sub inc jno rcl mov inc and insl push lea ja call jmp lods movsb (bad) (bad) int3 adc xchg dec xchg andl lcall mov mov mov fsubr lahf fcomip repnz xlat call lds insl loop adc jg hlt aad out dec in mov addb cmp mov xchg insl fidivrl xchg dec mov xchg repnz (bad) sub inc cmp xchg fistpll out outsb push pop lcall repz or iretw outsl out push mov iret das outsl adc mov fnsave shlb outsl inc jp add push push jne jb push gs imul jb popa je outsl outsb inc add jmp bsr shrd dec mov call lea jne (bad) lock data16 lock add inc bt sbb sar mov jmp dec js popa fnsave jmp xchg lret mov xor mov cmp mov test jp push int3 movsb daa das adc imul out fsts xlat or xor (bad) popa repnz insb dec xor es cmpsl movsb faddl jl test pop xchg dec std dec xor dec mov add xor sbb mov xchg fwait lods and xchg test jns sub mov cld cwtl cltd ljmp lods add stos pop jmp cmp lret fldlg2 rcrb les mov pop fistp iret clc xchg mov (bad) js jle jbe ret ror in xchg sarl test test imul inc fldl2e push enter mov inc pushl mov mov (bad) fdivrl ror rorl add cmpsw dec (bad) out jmp and out jno jl mov push sub mov cmp es test mov sub push xchg dec mov xlat cmpsl jmp fildl mov hlt mov cltd inc sahf and fiadd cmp mov xchg test sub jge shl scas out imul sbb roll into inc dec (bad) dec dec sub and xor jmp mov movsl cltd cltd movsl imul popf mov fadd (bad) mov out pop xchg lods lahf lcall dec cli xchg fidivrl pop inc test popf ljmp or leave scas in movsb mov and pop test (bad) out jg dec mov (bad) push and fbstp aad test xchg and (bad) mov clc sub and sub shrl adc hlt sub fldl cmp sub imul scas adc mov sbb push lock std std mov xchg insl pop mov ret jae xlat ret (bad) leave jg and pushf mov pop pop ss in out cmp jge or mov dec dec xchg aam pop into add in and test push std cwtl mov cmpsb les insl mov lods inc and mov mov enter rorl dec xchg mov pop push dec mov in mov mov enter addr16 lcall lods add pop jmp imul mov jbe push leave fisubl jmp jne movsl sbb jmp shl sbb dec faddl add pusha pop pusha mov aam fisubl mov icebp jnp fwait mov std sarl cmpsb int3 xor xchg loopne xor mov fistp mov xchg push insl scas pop add sub arpl lahf (bad) enter jle (bad) xchg jge mov js mov movb pop jno int mov push push movl push push movl pusha pushf movb pushf lea jmp dec mov mov pop sub cmc stos and add lcall fild jbe mov push cltd lods and adc cmpsb jl adc popf (bad) andl ja dec fisub test rcll ljmp cmpsl mov sub popl (bad) mov addr16 jg inc add xchg mov push cmc mov popa jo stc or and and sub fimull xchg or in nop out pop add adc repz xor jno int3 iret rclb fildll repnz sbb or dec jbe xchg mov (bad) dec (bad) push out (bad) and fsubs sub push cmp xchg enter imul inc stc sub lret xchg dec sbbl add cld (bad) ret (bad) mov inc sti push outsl ret push mov and sub fiaddl jle pop inc int3 in mov shlb mov inc insb xor sbb ja loop and xchg jne mov dec iret jno lret inc dec call pop lea not mov cmp test cmpb pusha pusha mov lea jne sbb movzbw shl aaa xor sub neg rol mov pusha rol add neg mov jmp and pop clc in push xchg cltd in out and cld and xor je dec lcall inc lds sbbl bound push repz sbb lret push call bound enter add cmp call mov jmp orb mov dec out aad stc (bad) flds cs les sbb jae jg pop ss imulb in cmp pop push pop cwtl push lods aam lock lods les mov fiaddl jle aam mov push mov pop adc stos mov inc mov jno lret or and cs inc mov in push sub stos pop (bad) sbb sbb inc sbb mov mov in ss inc pop pushf cmp outsb xchg jbe lods xchg loopne out xchg test pop (bad) push lcall push and test cmp sub inc cltd jb rcrl mov inc mov cmpsl mov pop lret xlat push jb ss xchg or lcall sbb xlat push push stos in in outsb cmp mov or push outsb jg popa mov xchg or jp adc fs cmp dec movsb sbb add add int flds cs cmpsl push cwtl and push xchg dec mov outsb cmp add leave xchg ljmp and add popf and pop leave mov sbb int jmp adc adc ret pop adc stos hlt sbb in and je inc mov pop lods push mov insl sahf xorl xchg loopne (bad) popl cli cmp push test jno pop insl xor daa cwtl fwait test push sahf adcl inc pop adc sub (bad) pop into aad in and into and push rorl mov movsl and push cmp cmpsl mov cmpsl mov ja dec xchg xor lahf enter xchg test xchg call out (bad) popa mov xor inc aad out push cltd lds outsl iret test cmp ror hlt stos or xor (bad) btr dec xor pop popf inc (bad) add arpl inc aaa nop ret cmc jmp mov mov arpl adc mov jge add pop jecxz add sub mov (bad) sbb and dec (bad) jno enter std adc sbb popa mov push mov fs mov lods rcrl data16 sbb xor sbb scas shr mov dec mov jns xor sbb fbstp in std xchg sub jbe dec ja movsl insb push arpl xor mov rorb adc test rcl inc fwait std and dec nop mov cmp sti and sub and jmp mov adc in push inc mov loop dec jle inc ret icebp xchg cmp std fcmovb lds ljmp leave cmc shr mov in push push push mov fstpl mov jno (bad) stos in fdiv scas lea jno pushf pusha lea jne add btc add mov shrd clc cmp sub data16 testb cmp bt sub pusha cmc clc movb pushl popl pushl stc bt pusha cmp movb movb call push dec inc dec dec xor cs insb add lea ja pusha bt lea jns clc imul push clc movl call jecxz sbb inc cmp aam in jae stos hlt lret mov sub add mov sbb xchg out mov (bad) mov incb movsl xor or push dec pop test sbb cli adc jno ljmp movsl jp and inc xchg mov add adc dec mov adc xor jg mov popf inc push bound mov (bad) fadds inc mov in (bad) jp stos mov call fnstenv scas aam xchg jmp cmp cmpsb cwtl (bad) (bad) out pop (bad) sub test ds sbb into mov xor out lock add lock lock cld sub xor cmp xchg xchg shrl mov nop out add into mov adc pop push inc or das inc jo pop lret rorb ljmp test inc push (bad) mov xor mov out or aaa scas adc in rolb lods outsl mov out add jne jl stos mov mov imul push cs aas in mov jno lds insl in adc lock mov stc or jo subl pop or mov lahf lock lods repz aas cmpl dec das xor jne push mov mov mov lahf imul mov xor pop sbb int3 rorb jmp icebp xor insb xchg adc mov aam sahf sbb xor imul mov aas or or (bad) subl aad mov orl dec jae fistp fidiv out mov and push in aad (bad) iret sbb lcall push les out lock (bad) cld xchg push and mov jecxz add enter mov add add push lea call bt call bound lods in mov pop inc xchg sub cmc cmp xchg int sub popa jne push xor fyl2xp1 cmpsb mov mov data16 jne lahf xchg scas in jbe jge jbe mov ret dec or or stos inc mov or lret int3 adc xor mov imul out in cmc adc fcom push lea in out add jo sarb jae lcall in ficomp sbbl inc jne gs or inc push pop push mov jg push aas dec loope mov sbb mov sbb mov into shll add frstor xchg sub jno ret ret enter jg aaa inc push sbb dec mov jo jl cwtl sub cmpsb (bad) scas add mov mov out add lret adc (bad) mov pop inc xchg inc data16 push cmp into push jb or jo mov sbb push insb out xchg in xchg jg rcrl xorb jge shrb add inc gs outsl fs gs outsb outsw jb popa je outsl outsb add cmp push arpl sbb lods pop mov pop js dec and in in pushf ret and outsb scas das sbb adc add add out dec cmp in xor loop in jnp pop xor and push into adc xlat pop ljmp nop inc out xchg add sub jns pop pop add and lahf imul mov add xchg cmpsl push stos pusha sahf sub adc lea mov or jb sub mov cmp mov pop insl jno ret pop pop pushf jmp pushf jmp iret movsl stc sarb fbld mov mov xor mov push sbb js cwtl dec nop sbb loopne sbb push sub sub xor sbb rorl xchg sbb sub adc inc pop mov (bad) mov mov push cmc jno and sbb xor out xchg mov jns nop sarb sar (bad) sbb xor jno pop sub iret push imul sub (bad) int3 fnop (bad) fsub inc add loopne jmp inc mov stos aas lahf cwtl (bad) xlat test enter mov out cmp (bad) jb sahf loopne lea jne jmp mov rolb or adc jg mov and fdivrs add lock pop and ds push movsb addr16 (bad) in out sahf adc das push (bad) pop lods ret cmpsl cwtl ret mov sbb outsb jo sbb mov (bad) hlt or sbb cmp mov loope lcall or sbb and movsl (bad) pop mov js pop inc jg popa jnp push fmull jae adc or fisubl dec mov rcl stc cli inc push xor and gs jbe jg mov push jno rol sub pop and das inc inc sub mov pusha cmp (bad) adc jmp out rorb fs push ret rcl iret and (bad) mov and sub adc mov pop imul cmp ja fmul adc dec mov inc push icebp nop mov fldenv mov sbbl xchg jl ljmp clc fbstp cwtl insl test addr16 xchg ror jge sbb test pop cltd cmc mov sbb repnz pop (bad) in xchg movsb shr push pop xchg movsl pop pusha jle sbb jle mov mov call pusha call add xor mov cmc cli and xor dec push sub sbbl sbb aas cmp lahf and cmp gs xchg fwait mov (bad) jmp aaa mov cmp adc fldt sub inc dec lahf es (bad) sbb aaa jns mov pop test mov and mov inc cld push mov sub mov fadd dec loopne iret push ret ss mov mov lcall ds out sarl std ja std ret int mov aad mov scas push in imul mov sbb test lock push lret fdivl mov call call mov adc adc jnp mov dec jecxz sti arpl das (bad) ret sbb adc jb sbb pop inc add rcl pusha push pop mov sbb mov (bad) push cmp imul lea jae inc cwtl sub (bad) fsubrp inc cmpb push jo in mov lahf inc add dec push (bad) out xor sbb sar rcr push xchg outsb rclb cwtl xchg mov pop pop sahf adcl fimull iret iret mov cmc in xor add mov insl out add add loopne adc adc sbb adc shlb test adc add add or push cmp xor mov add cld xor xchg sub push sbb and sbb clc inc push xor fwait mov pop imul ljmp cltd push (bad) repnz dec xor xor repz in stos inc pushf fstpl xchg std lret inc fldenv in sbb fadds sbb mov jmp mov cmp or lcall jb (bad) out nop push jno mov cmpsl push mov jecxz adc pop pushf dec int in shl fwait cld push inc jns repnz scas icebp into sar push jmp pop adc jno mov xor dec lds popf scas jle test mov pop arpl cld add xor mov push outsl xorb cmpl lret xor and imul js int rcll sbb and fcoms push mov cmp imul jecxz adc xor insl xor cmp sbb sub push daa xchg dec add cltd repnz fsubrl jbe xor je jns jle mov mov out insl or xchg aad pop mov cltd dec rcrl out mov sbb sbb mov add popa std dec push inc (bad) jo int3 (bad) jbe out aaa or xor pop and sbb sub xchg jno insb mov sub stos pop mov addr16 mov fimull fidivrl xchg sbb adcl push push xor xor xor push and push das pop dec addr16 jo lods xor outsb ret inc std cmp test int3 imulb adc fwait cmp jnp lret sbb rorl mov jno mov movl pushl lea jmp dec xchg push dec adc out pop jmp jmp movsl and lds lds jle repnz sbb cmp or cmp or pop mov cmpl sub sbb fwait dec xchg aaa into mov xor divl pop int3 arpl ja or push fildll cmp add jmp mov popf cmp jne inc (bad) push roll inc cli or movsb mov push test mov cmp pop xchg cli inc rorb jnp cltd in out and cs dec push faddl or add pop and jno mov je jp mov daa jle adc int dec mov mov repz and or fcomip cmc dec roll xchg call adc dec std outsb inc or inc pop shrl inc int3 jae arpl mov lods pushf loop cs aaa aaa call pop xor mov scas inc (bad) hlt aaa (bad) fucomp scas je pop inc gs scas rcr mov inc mov inc sbb sub push and test cmc stos mov xchg jmp in sbb push das mov cs or pop mov inc push imul jmp cmp nop out clc out pop xchg mov inc shrb icebp add push mov mov xor inc inc aam sub sarl scas out lods cwtl mov out sbb jns mov dec xor mov scas adc aam xor ss (bad) push xor std push xor jmp popa xchg cmp jp dec mov sub popa lea push and ret sti outsb add xchg push sarb push mov pop je and push hlt push jb jae js jmp int fmuls add dec push loop mov xchg mov hlt jae adc xchg sub pop mov lock int3 mov mov decl pop fldenv jge cmp mov mov inc sahf insb xchg jnp les mov mov loope inc mov aas push jno cltd ja mov jmp cmpsb jns mov pop les cld or repz cmpsb mov push rcrl inc xchg jle push jp arpl scas jbe inc pop (bad) or lods int (bad) shrb mov pop cltd out int3 rolb fisttpll mov (bad) adc adc (bad) stos jae jmp imul xor adc push mov jge test pop mov mov xchg or (bad) ret aad add fldl and mov aad jmp cld and sub scas shr inc fistpll push and mov imul push imull and sub xor jno xchg cmpsl stos cltd in inc lahf cmpsw sbb (bad) mov sbb inc inc pop into jo jl sahf push fs hlt mov rcr or inc sti or cmp loope xchg int adc mov sub dec push push (bad) mov jmp lahf pop imulb xchg jmp out or cmp xorl or rol call pop std std and dec ret jle inc add leave jge mov pop divl xor ret sbb popa fmuls add aam pop iret add call cwtl mov test inc lea add movsl xor xchg push (bad) scas inc mov aad rorb xchg add jmp adc inc lahf mov fiadd adc (bad) (bad) pop (bad) daa (bad) ja mov mov push add mov mov popf inc mov mov xchg mov mov aam js or xchg and push std add mov (bad) xlat push lret adc movsl jnp shrb (bad) enter fistpll inc jmp popa test mov jnp test dec or mov xchg or xchg aas push xlat push push mov lret popf or adc push outsb xchg ret int (bad) xor mov sbb mov out fadds add scas call call mov out movsb faddl repnz sbb mov jnp (bad) jne push sub popa fstl xor cltd or leave aad or pop and xor mov mov inc jbe ss jmp mov xorb in pop xchg or les aas pop xor mov stc out push adc sbbl lcall icebp push leave (bad) aam inc cmp mov mov fwait in rcl into imul lcall jno mov ljmp and movl lea je bt sub cmp cmc bt cmp pushf jmp lea jne pushf pusha push mov jmp pushf call loop and cld lahf loopne mov in in nop outsb insl mov dec jmp sub push (bad) jo test jg push jmp call std insl jne push mov sub fisubl add dec test jle out xor imul or push and aas fcomip sub mov (bad) mov pop jg call shrb sbb lods add jmp test add stos (bad) fbld xchg sub lock pop or je push das inc stc movsl stc pushl out jnp scas push std push push mov outsb mull imul rorl adc leave sbb add cmp cwtl fucomi sub outsl xchg cmpsl mov cli fnop dec pop cmpsb cmp push (bad) lods lcall push cmp jo sbb lret movsl mov mov sbb and pop sbb push stos ljmp sbb int3 inc repz add ret call and sub sub jne outsl pminub cmp jno mov or cmpsb cmpb daa int3 jl test fsub mov jp push (bad) aaa dec xchg dec mov int adc ret and es add in or jae subl jmp iret xor cli and daa xlat xchg into lods mov xchg sbb pop (bad) icebp into (bad) testb lahf rclb push les test inc pop xor (bad) int aam xchg out mov out mov lock stc rcrb pop inc cwtl sbb xchg repnz sbb cld pop sbb outsl dec xchg mov xchg mov cltd out jno mov imul xor mov mov insb push push mov push popf push pushf test ror (bad) paddd pop add jno fs xor mov pop xchg (bad) push sub repz add add xchg cmp pushf jecxz and add mov in jo xchg lea ss call sahf xchg mov fwait add loopne leave xchg dec inc ret pusha mov add cmp cmp fsubs push push add push inc cmp sbbb ficom adc lret bound add inc pop inc push or (bad) and and or addr16 jb popa lea in sub xorl dec jne test pop pop xchg push ja mov add arpl lock (bad) int3 cmp pop xor adc sbb imul push pop insl push pusha movsl mov cmp pop mov mov lods mov lea call pushf jmp sbb sub ret pusha cmp xchg out mov bound push insb xor inc aas sbb je iret ds dec push fldt cmp sub test inc xchg pop lods es push add inc lcall add in push cli push cmp xchg cltd mov fsubl fnstsw mov sub mov or jo lea pop jecxz inc mov popa mov and loope inc std out mov outsb jg lock icebp inc ja mov clc out cltd call push sub xchg sub dec notb out inc cwtl inc adc pushf and das out lret jno mov inc xchg dec rcr setp stc push jmp out popa sbb xchg lods pop mov mov push andb (bad) jb addr16 pop in in cmp lahf mov mov lods cwtl addr16 jl mov cmp dec mov and ficoml in stos loope pop xor fxch cmc lret out popa fucomp loopne xchg outsb add insl adc jb roll fmull add movsb pop movsb es test popf add mov sbb sub adc in dec xor fsub mov xor push mov pushl pushf pushf dec call push (bad) (bad) js enter pop and clc lods mov or inc jle dec jno popf mov ret call (bad) fistp jae lea popf aaa mov xor adc adc inc lds xchg adcl cld and adcb fldl2e cld push dec mov (bad) sbb fsubrs mov aaa (bad) fcoms leave push sbb adc push aam sbb pop adc shl not dec outsl xor sbb xor out push daa out mov enter fwait daa xchg pop test pop pop nop loopne cltd pop add int xchg push nop out pop add stc or add xbegin adc jmp fs mov imul negb in xor xor sahf xor sbb xor sub mov push xchg push (bad) mov jle iret imul add or shlb adc lea inc lods xchg enter cwtl fldenv lcall (bad) mov lcall fstpt inc jae mov jbe aas xor stc adc test jbe sbb jo or shrl cmp and add arpl mov out sarl orb add sbb (bad) jns pushf add xlat pop loopne jno scas loopne call dec inc test cmp mov pusha jmp inc pushl jmp call rep sbb dec mov fidiv mov xor lods out xchg push insl ret add scas push test in sub mov push mov test cmp push rorl lahf add inc push insb xor mov out jge repz or in push pop int into pop add pop cmp mov mov xchg out pop out div enter adc sub xor inc (bad) sub lahf xor dec xchg cmp sbb std fisttpll movsl sub rcrl into and pop xor loop xchg js pop test mov pop (bad) jno add pop inc daa pop xchg dec in shrl loop pop jno scas mov loopne and sbb iret ss pop lds orl mov xchg adc ds sarl or cmp js pop pop cmp out xor pop push push repnz fisubl clc mov (bad) scas jno scas or nop mov mov sahf loopne mov mov sub nop sarl pop js push in test rolb insl xchg jns push mov movb jl pop in jb jno lods xchg (bad) adc pushf or pusha pusha call jno mov lods es or jl pop sahf adc mov dec out scas sarb jns cmc jo cmp daa or roll dec mov loope dec adc test idivb mov jle xor aam sarl cmpsb cmp bound push mov and adc bound xchg sbb and icebp add and insl cld adcb mov fmull es dec inc cltd (bad) sbb in mov push push pop and out mov call inc cmpb frstor es and or nop or gs push adc xor add mov pop cld addl jno lods sub sbb sbb or mov (bad) cld ret pusha mov cmp mov push inc int3 xchg mov lret cmp add das inc add xor jnp add xor arpl pop inc pushf fwait mov lock xchg call andl and xor adc cmpsl movb fidivl pop lahf aas push mov cmpsl sti cmp insl pop fld xchg cs dec shr imul popf mov ret call rcll push sub adc jb (bad) mov mov inc mov xchg scas cmp mov in loop jmp pop sbb lods cld xchg ss pop adc popf add push cbtw inc pop into mov jnp hlt pop push mov inc repz cmpsl push xorb pop loopne les adc cmpsb jns lods (bad) lock stos jae mov mov dec dec jno imul mov add lret inc jl pshufw jnp inc pusha sahf push repnz repz (bad) lock mov add pop daa ljmp fistp cmp sarl sub je mov add dec rcr add cmp dec nop outsb jg pop stos jle ret cld pop int3 jae xchg (bad) mov jmp push test test fsubl jge sbb pushf add js aam push jmp xor add mov sbb les pop sbb lret add push pop jge divb push push gs xor and daa cmp xlat mov aas pop push or push xor rcll ret jecxz add sbb movsb shll cli emms addr16 and (bad) adc (bad) pop cmp dec clc cmp jbe mov pop inc pop add jmp push sub jge popf add xor aam mov inc fwait or outsb and insl and fisub adcl ret mov hlt lret mov stos clc movl jno stos hlt fwait inc mov add fdivl mov test mov test into push push lea sub or sub cltd inc xchg sbb int3 rcl stos cmpsb or mov mov ror sub mov pop out decl js cli gs push ja inc add (bad) test clc pop imul push into (bad) mov movsl out lock mov push outsb adc push arpl cmp xchg lret sbb sub sbb es shr std loope out cmp in sbb xor pop sbb test add add cmp push pushf lea je pushf movb call lea jne push push call movsb and xchg lret rorl add outsb in fcomps add insb inc lcall loop xor insl xor dec and xchg dec jb pop mov inc mov ljmp push cmp adc sub rol xchg dec mov call addb pop mov out sub hlt sbb cld push (bad) xor xchg sub daa sub mov (bad) out fcoml jl jp inc pop xlat je jae xlat ds test aam sti leave dec mov jbe dec mov xor outsl in in mov add sbb push and sbb rcrl and dec test cltd stc cmpsb or or test popf lret xchg and sbb je adc dec push outsb or mov xlat jmp call mov (bad) cld or subl jmp fnstenv pop mov adc fmull rcr (bad) pop sub and f2xm1 adc push and cmp outsb jb mov mov scas stos ret stos push call sub ljmp movsb sub pop pusha xchg lods out cmp nop add fnstsw add insb flds ss outsb in xchg leave push sahf addr16 and jg je test sbb cmpsl dec inc dec dec inc les push xchg cs add pop xchg jb mov xlat cmpsl mov push lcall inc xchg dec and xchg mov cmp xchg dec stc es jmp int3 add xor test fcomi xor fsts jbe in repz out cmp pop cmp mov or jmp mov push add fnstcw add aam mov cmp mov pushf and lcall xchg dec xchg or adc lds push test lret and or cli cmp orb aas dec cmp jg scas sarb pop sub ds sbb out pop or push pop imul mov stos mov cmp iret hlt int3 or sbb adc jae dec pop cmp add cmp js mov push in cli (bad) int3 mov in push roll sbb cmpsb jecxz dec scas lea call call add inc gs outsl fs gs popa outsb fs gs add fildl pop jle cwtl xor inc add popf push xchg dec cld add ret stc es dec in nop mov (bad) mov or cs nop mov push movl std call insb subb arpl xchg fadds jp inc cmpsl jbe mov jge (bad) insb xchg dec notb fldcw int mul push clc in dec movsl sub jecxz mov xchg lea lods fistp xorb xchg or push pop mov mov mov adc vpshufhw ss aas shrl pop movsl push aas jl outsl dec jne xchg dec ss jns pop jne test lret mov mov dec lock sub push or lods mov mov jl push push xor popa adcl adc int out mov ss xor out mov fs loopne inc adc ret push jmp (bad) test lods les mov pushf outsl movsb mov fs sahf or jecxz dec jne push (bad) mov fsts cmp pop and cwtl imul movsb or lods roll push test test pushf shr push (bad) pusha pop scas dec out dec xchg fwait add fildl sub mov mov dec inc mov lea jne call sub stc jmp xchg bswap mov movsbw pushl lea pusha mov not lea bswap movl bswap lea pusha pushf movl call lock rcrl cmpl xchg sarb xor lahf pop jl and and sub mov pushf add dec pop pusha adc inc mov jne sub dec cvtps2pi xor insl (bad) jge (bad) loop je (bad) js mov inc hlt lds lods adc in xchg lods andl xchg adc and mov outsl inc pusha jbe jbe imul push xor insl mov dec pop ds inc jns jne dec mov cs out push mov aaa adc xchg dec stos pop dec ja jl pop mov lahf aas push jno mov movl push movl pusha movl lea jmp and jg movb outsl frndint push iret loopne sub mov mov mov (bad) incl nop jbe loopne cltd mov out int3 jnp (bad) xor dec adc mov dec nop popa movsb pop sarb dec push test rcrb xchg push rcrb dec inc aaa call inc fwait mov aam and cld pop sar cs js add mov xor add imul stos xchg xor inc sub mov and out cmp out xor and in icebp out lods rcrb push clc arpl (bad) jbe xor mov out lret hlt xchg pop add (bad) sbb lret adc xor dec nop fstpt data16 dec loopne,pt std mov sbb ds add or incb repnz sub xor xor lods dec xchg mov mov icebp adc dec movsl sahf outsl in stc sbb mov and or out popa jnp rcrb (bad) push lea jno adc xor mov jp lods lret xchg jbe jp pcmpeqb or push mov (bad) jmp and mov out leave xchg pop out mov dec dec mov mov scas sbbl loopne mov mov push cmp hlt pushf movb lea jmp mov movzbw push mov jmp jmp (bad) xchg cmpsb xor add jo test icebp dec call lret int in mov cmpsl mov push lcall clc pop rcl ret sbb jg popa mov or and mov call call call fstpl es pop mov test cwtl jg xor das push hlt stos out (bad) cld or xor mov mov loope clc push lods cmp or push jae,pn out mov push cwtl xchg push pop mov inc inc push inc push dec xor cs insb add push pusha pushl ret lret cmp enter lcall mov add popa inc fmull (bad) repnz shrb dec push add test inc push push outsb les mov push sub mov inc fcompl fsubr mov cmpl pop pop shrl sarb rorl jle and jl mov repnz in out shr notb or inc mov xor repnz in loope jbe aad out out add mov add cwtl inc pop ja cwtl mov pop decl push add cli movsb fistl mov push mov cld mov (bad) sar movsb dec stc outsl lock and cmp test push cmp pop add cmp jl sub in decb xchg into inc sbb outsl mov cmp lods ja pop out int3 in pop test pop hlt sbbl jnp push out inc sahf pusha aas sub loop and mov ret icebp or push (bad) add test dec call lcall xor leave xchg insl icebp push jge inc dec push sub fwait outsl jo imul rorl cmp jnp pop lahf cltd negb xchg xchg or popa enter das (bad) out out inc or sahf add cld ret cltd out sub inc fistpll je xchg lods xor arpl daa pop imul dec xor scas popf mov jmp nop push call sbb test xchg dec push xchg stc aam lcall sbb sbb jecxz stos mov lock pusha xor andl dec xchg mov lock test stc xlat out jns cld mov (bad) call mov xor mov cld sbb xchg cmpsb stc leave (bad) pop pop fisub mov xchg sub sub fsubp jns dec sarb ret es push jno sahf negl flds add rolb mov and lea jae dec call add dec outsl arpl inc insb insb outsl arpl push add jmp mov dec pushf jmp pusha mov movl lea jae cmc cmp stc test xor pushf pushf lea call pushf lea jae push xor pushf lea call jo push lea jae inc jmp push scas jno gs inc xchg sub pusha (bad) push ljmp jns fsub mov mov mov mov test cmp movsb out call xchg jo ret cli shrl mov leave add jae aad lret sub movsl hlt movsl sbb and mov and daa (bad) icebp cmp enter jg sbb and sub cld movsb jbe loop std cmp inc bound scas sbb ret cltd shrb pop cmp lret pop add daa outsb push sub xchg mov pop andb mov popf xchg fldenv add je or test add pushf pushl pushf lea jne not not mov push mov pushf lea jmp xchg xor in rcll lods mov push xchg call pushf incl push sub pop pop inc sub xor adc das jg leave jg add xor pushf or xchg adc lds cmc mov push fs mov mov jg xchg lea cmpsl fs test mov imul pop insb pop push cmp fsub mov xchg sub lret and rorl pushf loop add dec icebp inc (bad) out clc test fwait sub test (bad) pushf push movl jmp in push sub fwait test cwtl es inc gs jne mov mov insb jp repz cmp rorb lret test jb xchg leave fldl sbb cli in clc mov out decb pop mov xor fiadd flds out pop push (bad) sti inc push mov les nop nop (bad) jecxz stc mov xchg inc mov out scas idiv das imul sarl cmp dec mov std jae js insl movsb jp push pop dec ss stos leave cmc dec mov pusha jle iret mov lret dec jecxz mov mov jb movsb sbb ja add cmp push ljmp out out xor ds fiaddl jge pop out stc dec (bad) pop jge and mov ljmp repnz gs cmp jmp (bad) cmpsl mov into xor jge icebp cmpsl daa or movsl sub stc add out call in jae pusha jno mov movsl cli cmp inc addl inc push test (bad) aaa sub ret out lods dec xchg ret sbb call mov xor inc sbb pushf aam mov (bad) popf stos call push hlt add (bad) jmp scas mov mov lret xchg aad sbb sbb and xchg fiadd inc fadds sbb sub cmp cmp outsb xor ds adc sub jg pop inc jne lahf aas repz add cli loopne inc jno lcall clc jae ljmp test sub movl call pushf jmp jmp call movzbw mov cmc or push lea je je clc test clc or call add add cmp add bound je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or sbb es cmp inc ss mov ss aaa dec aaa pop aaa popa aaa insl aaa js jge mov xchg aaa cltd aaa sahf aaa stos aaa mov aaa into aaa hlt aaa pop cmp cmp lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp test xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp sbb lret or ds dec aas ja lret aas sarl add add add test add add pop xor xor xor xor xor xor mov mov loopne or xor jnp xlat xor xor hlt xor xor xor xor jb xlat xor inc ss ss sbb aaa xchg aaa cmpsl aaa inc cmp arpl jne add cmp cmp cmp cmp fstpt lock pop cmp cmp cmp cmp cmp fnstcw xchg ds ds adc inc aas data16 jl mov (bad) aas stc aas add add or add cmp inc xor mov fdivl add xor xor xor xor jnp mov (bad) xor xor xor xor gs xor xor xor xor xor test (bad) xor js cmpsb ss mov fidiv jmp aaa adc inc aaa push aaa data16 fbstp adc and cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp cmp jo jne jp jg test mov mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg (bad) cmp sbb and sub push ds ds ds ds aas pop aas pusha aas popf aas stos aas mov add inc add jl add add xor xor xor xor xor xor stos xor xor adc sbb stc xor xor mov fwait xor xor xor jne mov cmp cmp cmp jg mov stos cmp cmp cmp cmp cmp cmp pop cmp cmpsb cmp cmp cmp cmp cmp cmp cmp addr16 cld aas add add or xor test loop in xor xor xor xor xor xor xor sub jp test mov mov xor jns (bad) xor xor xor xor xor xor xor xor xor xor adc sbb arpl jne xchg stc aaa or sub das cmp sarl scas cmp cmp cmp out cmp xchg ds lods jecxz,pt icebp ds aas add add xor xchg xor xor xor repz xor dec ss test jo xorl aaa (bad) aaa push cmp mov add sbb jb nop cmp cmp cmp cmp cmp cmp push cmp or push arpl push movsl lods ds les lret fdivrs add or adc and aas aas inc aas dec aas push aas xchg mov mov aas sarb add add add add add xor xor mov mov xor xor xor xor xor xor xor xor xor inc xor xor xchg xor xor xor xor xor xor xor xor xor xor xor popa xor sahf xor xor xor xor xor or xor xor xor xor xor xor xor xor xor xor xor xor xor xor addr16 jmp lock xchg cmpsb ss aaa sbb and xor cmpsb aaa lods aaa mov push cmp cmp cmp cmp push cmp cmpb cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp pop cmp cmp cmp mov xlat cmp out cmp adc and sub xor cmp lds cli ds xchg aas mov addb pop add add xor xor je xorl fwait xor xor xor xor xor xor xor xor pop cmp cmp cmp cmp cmp cmp pushf cmp cmp cmp fdivrl mov aas add add add pop xor xor xor xor xor xor insb xor mov xor xor xchg xor adc mov cwtl aaa cmpsb aaa fidivrl add pop cmp cmp test fnstsw arpl cmp cmp cmp cmp jmp add add or sub jp add nop xor xor icebp xor xor xor xor xor xor and xor cmp cmp add add test xor or xor xor jae xchg cmp fdivrs cmp sahf cmp cmpl cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp les ljmp add add or adc push xor xor xor mov movsl xor xor cmp inc xor pusha xor imul xor xor xor xor gs xor xor xor xor xor ss ss ss ss ss bound imul ss ss mov (bad) ss cs cmp aaa dec aaa push aaa jns fidiv in jmp cmp cmp cmp cmp cmp dec cmp cmp cmp cmp cmp cmp cmp cmp and sub cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp int3 ds aas sbb xor ds inc aas jb mov xchg aas mov aas idivl add add sbb add and xor cmpsl xor xor xor xor outsb xor xor xor xor push xor xor xor xor xor scas xor xor call xor xor xor xor push xor mov clc xor add or or adc daa ss imul ss ret aaa pop aaa addr16 mov movsl aaa les jecxz (bad) aaa and cmp dec cmp popa cmp cmp cmp cmp cmp cmp cmp inc cmp pop cmp jb xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc and xor cmp cmp cmp scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp mov inc js,pt lods ds aaa aas inc aas dec aas mov aas out aas add add add mov xor mov xor xchg xor xor xor xor xor xorb xor xor xor xor xor xor xor mov ss ss arpl xchg aaa mov aaa and xor cmp cmp jbe cmpb cmp cmp cmp cmp cmp cmp imul cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lahf cmp idivl add or adc push aas mov mov add lock in add pop xor ja mov xor xor xor xor xor xor xor xor xor xor xor xor je lcall xor xor xor xor xor xor xor xor xor xorl mov popf ss ss aaa daa cmp cmp cmp mov cmp (bad) cmp cmp cmp cmp sarb in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp mov ds cmpsb ds aas sbb and sub inc aas dec aas mov add add movsb add add xor xor xor xor xor repz xor add dec xor xor xor xor xor xor xor xor (bad) xor jge mov add and inc aaa push aaa mov cmp cmp push cmp cmp cmp cmp cmp cmp jae (bad) cmp jecxz idivb mov jecxz,pt or xor inc aas push aas enter hlt aas add add sub add add xor xor add adc push xor xor jb test mov movsb xor xor xor mov ret xor xor xor xor xor xor movsb xor xor xor xor xor xor xor xor xor xor xor pusha xor sahf xor lock xor dec ss arpl jo jne lods ss ss ss ss aaa add aaa cmp lods cmp dec cmp test clc cmp cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and cmp gs mov mov cmp jno scas sarb ds sarb in stc ds aas or sbb xor jbe jg scas aas mov mov and add add xor xor xor xor xor je xchg xchg xor xor pop xor push xor xor xor xor in mov cmp add push cmp mov cmp imul lret cmp cmp cmp cwtl ds aas push aas pop aas insl aas add add add hlt add add ja mov mov xor xor xor xor jnp mov ret xor xor xor xor xor xor xor xor xor xor xor xor xor iret xor std xor pop ss ss fidiv jmp sbb xor dec aaa data16 imul aaa mov iret aaa sti aaa add and cmp push cmp cmp cmp cmp cmp cmp je cwtl cmp cmp cmp cmp cmp cmp cmp stos cmp cmp and pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp dec ds mov aas aaa aas popa aas addr16 fidivrl loope jmp add add xor xor xor push xor mov xchg xor xor xor xor xor xor lcall xor xor xor xor xor xor push xor push xor xor xor xor xor xor xor xor xor xor xor push xor xorb xor xor xor xor xor xor xor xor xor out divl push jge xchg lods ss ss dec aaa bound mov nop aaa mov aaa jmp repnz add cmp push cmp je sahf cmp cmp cmp lea mov cmp cmp cmp xlat cmp cmp cmp cmp jnp cmpl sarb cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp popf cmp xor pop outsl jne,pt lea xchg ds ds int3 loope,pt daa aas jns mov xchg aas stos aas mov mov aas add add add add add adc cmp ja mov xor xor xor xor xor pusha xor outsb xor xorl add sbb and cmp inc xor xor (bad) xor xor xchg nop cmp cmp cmp cmp cli cmp cmp cmp pusha cmp jo mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub xor xchg cmp lret cmp or sbb ss ds ds jl,pt mov ds ds fidivrl loopne cmc add pop aas or adc sbb and sub das aas cmp push aas pop aas imul jle test mov xchg aas xchg aas pushf aas mov aas fstpt in aas add add add dec xor xor xor mov xchg xor xor xor xor xor xor xor xor mov mov xor xor xor xor xor xor xor aaa movsl cmp cmp outsb cmp cmp cmp cmp cmp lret cmp cmp lahf cmp or and insb jg,pt mov ds aas push aas jnp add add add jbe xchg mov cmp dec imul ss push aaa adc cmp cmp cmp mov addb jo add sbb aaa xor dec cmp inc cmp cmp cmp cmp cmp cmp pop cmp mov cmp dec ds ds sarb jecxz repz adc and xor cmp dec aas popa aas addr16 insl aas jae jns (bad) aas mov (bad) aas xchg aas fwait aas mov aas ret aas aad out cld aas add add adc push xor xor xor xor xor xor xor xor xor xor xor cmp dec xor xor xor xor xor jbe pushf xor xor (bad) ss aaa lods aaa mov aaa add adc xor inc cmp cmpsb cmp cmp cmp outsb cmp cmp ds aas pusha aas fs push aas je js jl mov add add or pop xor xor xor xor xor xor nop xor xor xor xor xor xor xor mov popf xor xor xor xor xor xor xor daa xor repz cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cld cmp cmp cmp cmp cmpsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jae xchg sbb inc jnp,pt cmpl fidivrl add sbb daa aas xor inc aas dec aas push aas push aas fstpt add add add or xor xor xor xor xor xor or cmp dec xor xor mov (bad) xor lods xor xor xor xor xor push xor xor xor xor xor xor xor xor ljmp aaa sbb cmp cmp outsb cmp cmp cmp push cmp cmpl adc cmp sarb loope add add add and add and fnsave pop xor xor cmp cmp add add dec add add xor xor xor xor fdivrl sbb jle or push cmp cmp cmp cmp cmp cmp cmp mov aas ret loopne add add out jo je js jl xorb xor xor pop xor xor xor (bad) ss ss cltd aaa mov clc aaa daa cmp cmp cmp insb cmp je js jl cmpb cmp cmp add add xor add add push xor xor xor xor outsl xor xor xor xor xchg aas test add add add add xor ss aaa pop aaa cmc aaa or (bad) cmp ret cmp movsb idivb sbb aas fnstcw add add add pusha add add xor xor xor outsb xor xor xor xor xor insb xor xor mov xor sbb aam xor bound push cmp cmp cmp cmp cmp lret cmp cld ds aas stos aas int3 aas add add add movsb add add xor xor xor xor ret xor xor xor xor xor xor xor xor fdivl xor mov xor adc push ss inc ss bound jo jne mov mov lds fidiv lock cmp aas aaa popa aaa push jb jnp (bad) aaa xchg lea jns push cmp outsl cmp lret cmp in cmp adc popa aas jge mov aas clc aas add add add mov xor xor xor xor xor xor add or adc sbb sbb and dec xor lea xchg xor xor mov cli xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor xchg xor movsb xor sbb xor fnstenv daa cmp cmp cmp ds ds adc inc aas push aas add add add xor xor xor xor loop xor je call aaa sbb in aaa test cmp cmp cmp cmp cmp (bad) cmp cmp pop cmp cmp cmp cmp cmp jbe jl (bad) cmp xchg cmp lods cmp ret cmp loopne in jmp cmc cmp sbb das cmp bound imul add inc add add xor dec xor jb xchg aaa mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ja add add add add add xor xor pusha xor ja mov (bad) xor xor xor pop xor xor xor call xor xor xor xor xor xor xor cmp inc xor mov ss cld ss cmp nop cmp cmp adc push cmp cmp push cmp cmp jnp test xchg cmp cmp cmp push cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aaa cmp dec cmp pop cmp cmpb add jo add sbb fnsave in lahf xor cmp dec xor xor xor xor xor xor xor xor jno xorl cmp dec ss ss ss ss jl cwtl mov fnsave call aaa pop aaa push aaa pop aaa xorb aaa mov aaa popa cmp sarb lods cmp cmp gs cmp cmp cmp cmp cmp ja,pt mov addb dec add add xor xor xor xor xor xorb xor xor ss ss ss lcall cmp cmp cmp cmpb cmp cmp cmp adc add scas xor xor insb xor add add add mov (bad) xor xor xor xor pop xor jns lods xor xor xor ret xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor fnstenv call xor cld xor push ss ss mov ss fidiv ljmp aaa sbb sub dec aaa pop aaa insl aaa (bad) aaa mov hlt aaa std aaa xchg cmp mov sarb xlat cmp cmp cmp cmp jo mov hlt cmp add add add out inc xor xor xor xor xor xor xor xor xor xor xor xor cmp xorb ss aaa inc cmp hlt cmp cmp cmp cmp cmp mov aas mov mov rolb push xor xor xor inc xor test mov xor xor xor xor xor xor xor xor xor xor xor imul aaa test (bad) aaa out pushl sbb cmp cmp xchg cmp cmp out add sub int3 cmp sub add in (bad) scas xor xor xor xor push cmp pop cmp arpl cmp add add add dec add add xor mov xor dec aaa push aaa pop aaa gs hlt aaa push cmp cmp cmp dec cmp jb test xchg cmp cmp cmp cmp aas stc aas add jo add add das xor xor dec xor push xor xchg xor sub das xor xor xor inc xor xor pop xor xor xor xor xor xor xor xor pop cmp xchg cmp cmp cmp cmp lcall cmp add add add sbb add xor xor xor add add mov add mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or aam loopne pop cmp cmp cmp cmp pop cmp aas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push aas pop aas arpl add add nop add add xor xor out cli xor xor xor xor jne xchg xor xor cmc xor xor xor xor xor xor xor xor xor cmp enter stc cmp cmp push cmp std cmp cmp cmp cmp jp mov movsl cmp sbb ds inc aas push aas push jp mov aas out aas add add insb add add xor xor xor xorb xor out adc arpl in xor daa xor push jbe jge xchg cmpsb xor inc cmp push cmp imul xchg jmp cmp cmp cmp cmp cmp cmp cmp cmp add add add add xor jno js jg xchg xchg xor xor sarb xlat aas fidivr in in aas repz cli aas add add add add add xor xor xor xor divl xor mov cmp cmp cmp cmp cmp cmp cmp sbb add sysenter xor xor xor cmp cmp cmp cmp inc add add xor xor xor aaa inc cmp clc cmp cmp ds mov aas push aas data16 mov mov aas (bad) aas fdivrl in cld aas add add adc sbb xor cmp dec xor pop xor xor xor xor pop cmp cmp cmp cmp cmp cmp cmp aas mov add add add enter cmp dec cmp (bad) cmp cmp outsb jg,pt out in jno,pt js sarl aas sarb aam fdivrs fdivrl loopne in call aas add add add test mov xchg cmp or mov add add enter mov aaa daa aaa cmp inc cmp cmp cmp cmpl cmp cmp cmp cmp cmp cmp add add pop add add xor xor test mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jl aad push cmp dec cmp cmp ds aas xchg add add add sbb add out test cmp mov cmp add pop add add xorl pop xor xor xor xor xor mov inc xor xor xor push aaa out aaa hlt aaa xchg cmp cmp cmp cmp cmp cmp cli cmp out push add add xor add daa xor xor xor sahf xor stos xor mov ret xor mov aaa dec aaa add add add push xor xor enter and pusha aaa mov cmp movsl cmp cmp cmp nop cmp cmp cmp cmpl cmp cmp cmp mov sarb pop cmp cmp cmp cmp cmp cmp cmp iret cmp push popf ds sbb pusha aas stos aas jecxz add add les add adc xor push xor pop xor xor xor (bad) xor push xor mov xor push xchg (bad) ss fdivl icebp add or adc sbb es inc aaa dec aaa popa aaa insb aaa xorl mov mov aaa loope in aaa stc aaa add (bad) cmp cmp cmp jo (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and js add mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc sbb dec xor fs test nop xor mov cmp cmp cmp cmp cmp cmp cmp cmp add xor add movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor inc add aam add fdivs fdivl loopne in call xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor js cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb call cmp cld cmp or or adc adc sbb sbb and and sub sub cmp cmp inc ds ds ds ds ds ds je,pt js test mov mov nop ds ds ds sarb ds add add add add sbb and sub xor cmp inc xor push xor pop xor push xor jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add mov cmp add add dec ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in lock ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb push add add call ss sbb and xor cmp dec ss ss add or add jo je add add add xor xor xor xor xor loopne in in xor adc sbb sub sub xor cmp push xor xor xor xor xor int3 xor xor xor xor xor adc sbb and cmp dec xor xor xor xor lods xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and dec xor fs xchg xor lods xor (bad) xor hlt xor add add or and xor cmp dec ss ss ss ss ss test mov cwtl ss mov les aam fdivs fdivl in cld ss adc and and sub inc aaa push aaa pop aaa push aaa js nop aaa mov aaa mov aaa les enter call aaa or adc adc sbb xor inc cmp pop cmp cmp cmp mov mov movsb cmp cmp cmp cmp cmp cmp or and xor cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp inc cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cwtl cmp in add or sbb cmp pop js,pt cwtl ds ds ds sbb cmp push aas pop aas js cwtl aas mov aas les int3 aas sarb aam fdivrl lock clc aas add add add add xor xor adc sbb sub xor inc xor push xor xor xor xor adc sbb dec xor push xor xor mov xor add or adc and sub inc xor dec xor xor xor xor mov xor xor xor xor xor xor xor adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor mov aam loopne sbb sub cmp inc ss ss ss test movsb ss (bad) fdivl cld or sub xor push aaa mov mov aaa or adc xor cmp inc cmp cmp test movsb cmp cmp xor dec cmp cmp mov xchg cmp call cmp cmp pop cmp cmp cmp sbb sub cmp inc cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jo mov cmp call ds and xor push ds jl,pt mov test mov mov and xor inc aas dec aas pusha aas push aas test movsb aas mov sarb fdivrs loopne call and add sbb xor inc xor xor xor mov xor xor xor sbb sub inc xor xor xor mov xor xor xor xor adc xor cmp inc xor xor xor mov xor xor xor xor xor xor xor xor xor nop xor xor add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp je js jl cmpb mov mov nop ds mov add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add xor xor enter (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add les enter sarb aam fdivrs fdivrl loopne in add add add add and inc cmp cmp cmp mov cmp cmp lock cmp cmp or loopne add add add sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp lock add xor xor xor add push add add stos xor xor cmp cmp cmp cmp in add adc add add mov stc xor add sub pop xor xor xor xor or and sbb cltd aaa data16 cmp cmp cmp cmp aas cld aas add push add add arpl out cmp xor ret xor xor aaa stos cmp cmp cmp test add add push add add add cmp push add add add xor and mov repz pop cmp cmp xchg cmp cmp cmp cmp cmp cmpb aas add add add push xor xor aaa iret cmp cmp cmp cmp add add add add test lcall xor je sbb push aaa and inc cmp cmp add add add int3 xor add addb sbb add push xor aaa jp mov sarl add nop push add add add xor stos xor xor loopne cmp lret cmp cmp cmp cmp cmp aas loopne add add add adc and push mov xor xor push xor cli aaa daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add add sbb and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add rolb faddl add xchg xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add push add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add push add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add push add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add pop add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp and add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add pop add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor push pop add add add xor xor xor xor xor xor xor xor xor or les enter add add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add xor or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp nop pop add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add add sub dec xor xor or adc add js jge and add sbb add jle dec ss ss ss aaa mov cmp and add add add xor xor xor xor xor cmp cmp sarb add add or adc add jp xor sub lcall add add xor push cmp cmp cmp cmp jne add add add add int3 xor push ss adc sub xor lahf cmp cmpl pusha or and add sbb (bad) xor xor xor ret cmp add add add add jae pushf aaa pop cmp mov popf cmp cmp js mov in xor sub add xchg xor xor xor xor mov (bad) xor sbb stos cmp cmp cmp add nop or adc add or xor mov aas add add add push xor (bad) xor xor std cmp into cmp add mov add add add xor xor xor xor add or sbb add mov cmp cmp cmp cmpl aas dec aas add or sub add or mov cmp sub cmp sub mov in jb,pt scas aas add add or xor add popa xor xor xor sbb xorb xor xor xor xor xor xor xor mov cmp ds jno,pt add add or adc add jns push clc cmp aas add or and add push xor xor aaa or pop cmp out cmp add adc add add add xor xor xor aaa loope push cmp or and add jecxz pop xor xor cmp cmp cmp dec aas lea add or and add jno fbstp sbb ss cmp nop ds aas xchg aas in add add add add adc jg dec cmp cmp cmp add push or sbb add out fwait aaa mov push cmp dec cmp cmp cmp add add add add xor enter pop test mov pop cmp cmp cmp ja aad add add add add add lds fwait xor jp idivl sbb inc cmp clc add add cmp lret cmp cmp cmp jmp nop or xor add data16 xor xor xor je inc xor pop adc std cmp cmp test cmp cmp mov add add pop xor xor xor xor xor xor cmp add mov add add add xor xor xor mov cmp dec cmp cmp cmp cmp rorb or add out add inc add add xor adc xor xor xor xor cmc xor clc ss cmp cmp cmp cmp bound test in pop cmp cmp cmp cmp or sbb add test aam jge repz imul data16 add add or sbb add jnp (bad) xor xor xor dec ss ss add add ret xor dec ss add or xor add jge pushf aaa cmpsb aaa push cmp cmp cmp cmp in cmp or cmp add pop aas add or adc add movsb xor add or and add pop cmp cmp cmp mov xchg inc aas jne add add add je popf cmp cmp ret add push or sbb add outsb xor cmp fnstsw sbb pusha or sbb add in aaa xor cmp cmp mov pop cmp cmp pop add add add inc xor xor xorl imul stc cmp cmp cmp mov orb sub add fbstp dec xor outsb xor xor xor in dec cmp cmp fdivrl in aas add add add xchg xor xor ds add mov add xchg xor xor xor aaa fwait aaa lods aaa push cmp cmp ds add mov add add add ss cmp push add or and add lds es xor xor cwtl xor ret xor (bad) cmp rorb add add add xor cmp cmp cmp cmp cmp add or and add mov xor loop pushf cmp cmp cmp xchg sub add mov aaa mov (bad) aaa lods cmp add insb cmp ds sub popf aas add add or and add jnp push xor aaa dec cmp cmp cmp adc add add add xor xor stos xor xor cmp cmp cmp cmp add or adc add and aas add add or and add imul xor imul cmp cmp loopne add add add add add add add add add add pop xor ss jge into aaa mov cmp into cmp or sbb add push xor xor cmp add add add add add adc mov add orb sub add fbstp push xor js iret cmp cmp cmp cmp cmp cmp sub inc ds add test pop cmp cmp xchg add add add mov out xor xor xor xor or adc add wrmsr dec xor xor xor rorb adc add push xor pop aaa sub inc cmp rorb add add add xor xor xchg cmp cmp ds aas add or and add xor mov add aaa aaa mov cmp cltd aas mov lock and add push xor aaa sub pop cmp idivl jg add add or adc add or and fwait cmp add or sbb add pusha xor xor xor xor cmp iret aas add add or adc add js jg js cmc aas add or sbb add pop xor xor (bad) aaa sub sub mov add add add add add xor cmp cmp cmp cmp cmp add add add jns or xchg (bad) cmp cmp add pusha or sbb add xor cmp add add add add pop xor xor xor ss inc aaa ds cmp cmp cmp cmp add add jge mov (bad) xor ss mov les (bad) cmp add add add pop xor adc sysenter (bad) xor xor stc xor add add add cmc xor fidivl (bad) xor scas cmp cmp cmp sbb add addr16 test lds pop cmp cmp addr16 aas add or sbb add pusha cmp (bad) cmp pop cmp cmp cmp or adc add in push aaa xor loopne add add add cmp cmp cmp cmp lock adc add jecxz cmp test icebp cmp add add xor pop xor xor xor in cltd cmp cmp cmp in xchg addr16 sarl add or add xor xor pop xor cmp cmp add and add xor xor xor mov cmp cmp cmp cmp xor add in sbb fwait aaa scas cmp mov add add add add add xor cmp cmp fwait cmp cmp in and xchg aas sarl add add add or push aaa xchg and cmp cmp xchg stos add add add add add sbb in sahf cmp cmp arpl sbb cmp cmp aas cmc aas add add add call xor xor cltd xor xor cmp movsl cmp cmp or add cmp pushf cmp add nop or add xor (bad) ss aaa and aas add add add inc xor cmp repz cmp cmp jecxz add add or add xor mov test sbb aaa xchg cmp sarl cmp cmp rorb add xor xor ja mov ss aaa xchg cmp cmp int add add or add xor xor xor ss cmp cmp lock add mov cmp cmp cmp cmp aas test mov add push add add or outsb xor cmp add adc add add add push xor xor dec cmp add push add add and adc cmp cmp ss cmp cmp cmp and add pusha xor xor mov and movsl cmp cmp cmp cmp cmp sbb add aas xor ss mov push cmp add push push add add aad jmp sbb sbb pushf ss aaa dec cmp cmp pusha push add add imul dec aaa cmp cmp fdivrl je add add add add add xor xor xor xchg sub cmp add add mov das xor sub xor ljmp nop push add add add xor ss dec aaa inc cmp cmp ret mov add cmp pop xor cmp test iret ds aas (bad) aas add add pop xor xor cmp stc cmp add push add add add cmp add sbb add das ss cmc ss aaa sahf aaa cmp imul add add push add add dec xor cmp cmp cmp cmp cmp cmp add lock add add add cmp add add add xor xor xor jbe add xor (bad) ja (bad) ss cmp sbb add sbb push aaa std cmp out add add ltr add stos xor xor xor xor add add lldt add jo xchg xor cmp idivl add add add add pop aaa xchg sti cmp cmp xchg aas mov in aas add add add add pop xor cmp into cmp adc add pop xor sti cmp str add popa xor cmp orb xor add push xor xor xor dec aaa mov inc cmp cmp cmp cmp push aas add add add mov cmp js add add add cmp adc add add or idivl cmpsb cmp aas cmp add (bad) xor add dec xor xor xor xor mov xor (bad) xor xor xor aaa out fwait aas add add lldt add xchg xor xor cmp ds lldt add add stc cmp aas add add lldt add inc xor cmp add adc sbb add mov xor cmp cmp add adc add add mov cmp cmp and add add add xor cmp ret cmp ds sarl adc add adc sbb add add ss ds lods or bound add add add xchg mov adc ss cmp pop add add add add xor mov cmp cmp cmp cmp hlt aas add add add add and xor xor xor mov cmp ds aas add add add add xor cmp cmp aas add adcb sbb add xchg aaa mov cmp cmp aas sarl add add add mov cmp cmp cmp adc adc add cmp insb xor cmp adc sbb add and or js mov inc xor int push aas lods aas add adc sbb add mov cmc xor jl test ss ss inc push add call test push lea je jmp or sbb push sarb frstor pushf stos mov ret (bad) mov fildl jg ret and lock fbld mov (bad) outsb loope loopne mov ds pushf icebp pop inc mov sahf test fisubr jp lds push gs push ja mov sbb mov iret and (bad) xor int3 push faddl xor pop dec lods sbb (bad) xor adc jg (bad) divb mov cltd xor cli sbb bndldx loop rcll cmp push lcall jl sbb pop out jo movsl and ret jbe test ljmp jno push cmp add test stc inc adc js dec jae daa and mov ja pop test fmuls cld jle ss add cmpl notl pop (bad) inc shll push push xchg stos and dec mov lds pop cmpsb jo inc add dec mov push or inc mov cmp loopne xchg js xchg lahf loopne jmp in mov (bad) sub push sbb cs pop fwait push push sti arpl or xor and daa push sub mov mov mov (bad) mov rolb addr16 mov cld mov adc popf and das sbb (bad) mov jno push cmp and pushf movl mov mov pushl popl pushl mov push pushl ret mov xchg (bad) outsl rclb pop sahf insl out pop mov movsl mov insl icebp lds sbb sub test arpl arpl arpl aaa js jbe xchg sub ret mov lahf cmp fisub lcall cwtl jae out sub aas xor in add frstor stos aad ja cld pop jo (bad) fisub xchg lods mov xchg lock mov mov xor adc mov in into mov xor les incl cli inc cwtl adc icebp inc cmp cli insb shl inc mov mov fwait inc push loop cmc push out inc mov xchg xorps cmp shrl jo push sub out ror test pop and xor jae mov and fidivr out stos mov (bad) imulb aad xchg pop rclb xor jbe in xchg fisub add stc sbb sbb sahf icebp mov mov adc and inc push in or shrl add or push sub addr16 sub in xor loop mov push icebp pop xchg xchg dec pop mov jl mov cld adc pop mov sti push out rorb mov xor jg int test into jo xor decl push cli pop pop push (bad) mov sbb ret cmpsb out lods loopne mov es cli out xchg pop mov pop and addr16 and dec fstpt lods mov push fcoml push into js (bad) int3 in xchg pop cld jmp cmp pop and test (bad) lret fisubl sahf lods sti lret stos jne sbbl sub xor adc jno and lea push mov lahf rorb insb repz enter mov pop push sub jg lock cmp clc (bad) sbb in xchg mov add and je pusha pushf adc pushf movl pushf push lea jmp pusha inc pusha adc lea pushf call pusha inc sets jmp mov not xchg bswap movsbw mov lea mov pushf jmp mov pushf lea jmp cmp imulb jbe adc adc push jno sub je jbe lret in rcll imul push xchg xor les pop (bad) sti bound sub push mov xor add loopne mov out push sub aam insl xor stos jle and data16 adc cmpsb lods xchg xor jecxz (bad) adc clc cmp dec notb das addr16 (bad) xchg mov ds (bad) lret stos hlt add cmp lret stc (bad) jne popf inc jl lea and cs and sbb das xor in mov je lcall dec arpl push movsl test in pop out add xchg (bad) (bad) daa scas sbb sub push pop pop cmpsl xlat enter xchg stos jmp in cs ljmp cli mov cmp and test in stc cmp jnp mov xor insb jno dec xchg (bad) call cmpsl testl push xor in jo das xchg int fmuls pop out pop cmp stos into sub xor clc dec or in ret pop out aad insl repnz mov push rorl hlt or xor mov dec cld add cmpsl pop pop dec inc cltd leave lret in or lea rol cmp out pop loope ljmp js cli sarl data16 incb adc pop dec inc sub movsl test pop movl sub cmpl gs xor mov nop scas add rolb xor cmpl push push mov mov addl or inc pop movsb cmp dec push das daa aaa push jne mov js lahf fild int3 test pop pop xor xor push lds dec xor add pop ret sub adc and mov cmpsb fcomps aad sub enter sub dec xlat pop (bad) aad sub and scas adc sbb pop mov cld arpl push pop js shll xor sti xchg xor call cmpsb cltd pop xchg repz pop pusha mov sbbl rep scas lock and xor sub js adcl inc ljmp (bad) and stos orb or sub test push pop or aas clc mov xchg pop dec push adc inc mov shrl aam movsl pop mov add repnz dec pop adc mov mov sarb cmpsb push in test aas (bad) mov popa mov dec cbtw or in jno dec adc test hlt movsb add subb ret jge mov stos xchg test xchg and cmpsb sbb pop loop pop in cmp popf inc in lea sahf rorb xor pop rclb sti inc pop pusha mov jle into sbb sbb jne movsb popa mov movsl mov add jns cmp inc hlt dec pop ljmp xchg or xchg mov xlat cwtl sub mov roll scas iret pop add std (bad) ds ja dec loopne sub insb and cwtl cmpsb or js outsl and pop rorl jbe push mov sahf cwtl out cli hlt dec jne add xor xor mov mov lea xchg xorl loopne cmpsb jmp pop inc enter jbe jecxz sub out stos xchg pop cbtw in dec (bad) jae jb push mov mov add testb xchg xor mov dec inc xchg int3 ds or cmp movsl lea clc push dec jp cmp loop push cltd jb cmpsl test es fildll mov lds cld or stos push scas jo mov mov pop dec dec inc aas (bad) fisubrl adc mov add fisttpl cmp xor sbb push mov add and dec push mov (bad) xor xchg dec mov add arpl cmpsl notl mov jle repz (bad) fldl out jno dec pop (bad) mov add jl popa or nop mov or lds (bad) in adc jns in mov cmp mov scas add loope outsb subl cld ret mov jno dec fbstp pop repz mov addr16 mov inc mov mov out hlt lret mov mov test lods add adc popf test sbb fs sub or xchg cld adcl dec lods pop xchg xor fwait movsb mov mov (bad) dec sahf mov xchg mov mov and xchg mov jecxz imul repnz aas arpl sbb pop and notl mov xor or xor lods mov sahf mov mov inc adc and das iret adc lds outsl mov call fwait out cmpxchg movsl pusha faddp fcmovnbe das arpl jno dec and popf lds jmp inc pop xor int3 jl arpl imul (bad) rclb fsubrl mov lea hlt in xor mov xchg fisub pop adc mov aad outsb adc and (bad) dec push dec jmp mov xor add mov push mov lods adc fwait sub push xor test in xchg dec mov (bad) jne sub fisubrl sub icebp or push rorl pop add fsubrp adc out hlt gs sbb fwait add cmp sub cmpsb cltd add dec mov mov dec mov cmpsb mov icebp inc dec add add push stc and sbb es cmp fldt lret movss outsl fiaddl pusha cmp aam dec add test decl adc mov adc dec das jb lret enter (bad) in sbb icebp jns push jecxz push pop test dec lods push imul addr16 insl js aaa out xor push lock jns jg xchg dec sbb jge cltd stos jb shrb inc jns outsb imulb xchg test pop push pusha xchg lods vpmaxsw enter pop inc test lret repz fild int3 test xor jb jns fsub lret cmp inc rcrl (bad) nop into cmp mov data16 bound lods call inc pop add jle test add xor lret xchg or inc inc cmp sahf xchg pusha in insl mov test ljmp and std lret jle jbe stos inc cli cmp jb add lgs lea cmpsb mov shrb cmpsl and (bad) fadd mov dec inc incl (bad) iret add call pop rorb mov xor sub daa push cmpsl mov jns jge push fildll cmp push lea xor dec (bad) cmp jo mov popa mov dec pop cmp (bad) daa test inc cltd mov inc andl pop repnz ja jnp std mov xor pop mov imul loopne loope popf cmpsl daa test xor mov imull inc jno or dec testb movsl xchg cmp sub pop daa fdivs test jne fimul incb mov out cmp and pop dec jno sbb pusha lea rcrb adc cmp mov stos and lds pminub jle pop push jbe jecxz add inc and mov pushf and sbbl inc push cmp pop sub daa jae and bound sbb repz pop jae repz xlat test mov imul or xchg ljmp mov (bad) lock idiv and add int3 sbb out js into cmpsl js xchg test out test (bad) lea daa xchg in mov in or bound popf sbbl lods rclb sahf pop mov insw sbb imul insb ret je clc mov lret addr16 pop sub dec cmp enter inc add xchg pop movb pop push adcb mov cmp add pop xchg adc cltd xchg loop ss pusha test ficom test pop pop cmpsb mov (bad) sbb and imull mov xchg pop scas mov clc data16 sti clc incb leave xlat js mov xchg loopne pop dec pop lahf xor mov pop xor lahf cmpsl xchg mov inc ja imulb add inc faddl inc add clc xchg out sbb arpl jge loopne idivb int3 push xchg sbb scas mov pop into in cmp xor lock sbb insl xchg (bad) xor test inc sbb add out aas fidiv mov cltd data16 movsl daa imul jecxz xchg in les loope jns lea adc inc orl notb cmpsl fs fnsave cltd and push addr16 fnsave out idiv inc loope sub jnp dec imul loope and movsl stos sub push push sbb xor jecxz push mov push arpl jae sub pop (bad) and inc mov in mov xor pop jne pop xchg inc ds insb sub adc rclb sub sbb (bad) mov out rclb bound mov fistp in xchg rorb in cmp adc mov inc push (bad) je cmpb xorl movsb inc cmpsl pop orl dec push inc jp flds sti pop xor adc leave and iret add push pop xchg andl xchg and cwtl dec xorl jno and insl push xchg or pop out addl add movsb sub fxch push das and cltd sbb lock pop pop or dec sbb and inc or sub push rclb gs mov mov inc xchg xchg sbb out xchg lods inc daa xsha256 cmpsb (bad) sahf cmp in and adc sbb fdivs mov movsl decb lea ja inc and pmulhuw xchg pop jle adc and or dec add imul dec add cmc arpl or ffreep sbb jns pop es adc adc stos dec add mov push ja mov or pop add lret or pop adc pushf sub lea adc xor orl sbb lods inc out pop enter push lods addb add jno jno jge mov mov cltd push mov dec imul xchg adcl or or test fisubr jno and and sub cmp add mov je or pop jo inc outsb ss inc faddp mov inc cltd jle movw mov pop (bad) mov gs dec ljmp movsl imulb nop pop jge test fdivl daa lock imul nop push inc jno ss cmp aad push cli daa icebp adc adc cmc cli mov imull add cmpsb jne lret rolb ljmp gs popf xor jmp push (bad) js (bad) sbb jg pop shrb fadd pop cmp inc mov or cmp jmp jae pop add std or cmpsl and push data16 out addb and mov arpl int3 addb inc xchg (bad) sbb push int3 xchg and rclb cwtl and add sbb test inc xlat and fs mov push ss popf test outsb or bound lea leave add js jno int3 sub cmpsl dec test mov std and fiadd arpl nop bound stc xchg push popa ja daa (bad) mov dec in and das outsb and roll out mulb nop imul test pushf push data16 jg add sbb mov sahf adc bound rorl lock mov pop xchg cltd pop mov (bad) jb test dec test xor outsb fisttp pop push lret pop push lock add jno stos dec push mov xchg push cmpsb sbb addr16 xor pop fldl adc arpl mov mov inc jae (bad) cmp pop mov or sarb add cmp test push in negb sub xchg jp loopne jmp movsb pusha dec arpl sbb (bad) pop adcl test std icebp stc inc ds icebp and bound pop mov dec jno pushf test popf sub arpl out jmp pop popf lcall pop hlt pop arpl jns cmp lea out push scas shlb mov and pop movsb ja daa and imul cmpsl push cld mov paddd mov es pop or mull scas mov adc (bad) mov inc and jbe andl (bad) cmp data16 movsb (bad) xor loop inc add dec and jp and (bad) icebp mov sarb xchg (bad) and mov cmpsl data16 inc loop and pop subl imul mov cmpl jg popf mov and gs (bad) shl fcompl add lahf and and push fsubp push mov data16 bound cld fistp xchg mov or sub push inc mov popa sbb aad divb dec iret jnp negb arpl adc xchg test fsubrl and pop test data16 xchg lret daa popa jecxz mov mov imulb inc dec rcr dec (bad) pusha mov pusha pop mov pop popf nop mov xchg lods pop notb mov and xor (bad) pop add shll adc cwtl nop jbe and jmpw movsl pop mov test pusha dec mov bound xor or punpcklwd popa sub test pop rcrb and test loopne xchg cmpsb mov cwtl xchg inc jg sub pop fdivrs int mov sbb pop sbb xchg sub pop fcompl inc and imul xor cwtl and pop add push lock inc vmulpd adc bound push daa gs lcall data16 mov test lret lods hlt and mov cltd movsb repnz jecxz pop dec nop jnp sbb icebp cmp in lahf adc pop inc data16 fsubs (bad) (bad) pop test loopne fs sub bound pop (bad) jo cltd cltd push call push in push das jns cmp addb lret jne pop inc ret push xlat popf aas (bad) popa xchg (bad) daa jbe inc sbb pusha pop sub pop and out ret sbb mov rcrb into pop sahf mov pop std add les bound sub mov lahf aaa (bad) and inc (bad) scas test xchg and roll dec push aaa lock pop inc push push out aad imul inc icebp pusha iret cmpsb test xchg inc xchg test inc cmpsl add mov push pop sbb dec loopne inc pop cmpsl push icebp mov es or ja (bad) daa in push dec aam xchg push pop mov adc inc (bad) imul sbb cltd mov iret sbb rcl shrl cmp hlt jl cwtl out inc test movsl in (bad) fdivrl movsl pushf fs inc or xchg push xchg and add inc nop cwtl dec xchg shlb (bad) popa pop cvttps2pi push push bound push or subl and cmpsb inc mov xchg aaa or pusha lods sbb daa ja lea and loopne bound out jge sbb push fwait arpl imul movsl jb addl cli jae jo sbb subl xchg jp add movsb das push sbb shrl orl dec jno cwtl add cli loopne lret jns sbb stos js mov ja mov imul cltd cmp jns gs hlt xchg loopne dec popa inc mov inc daa jae hlt repnz ja fwait das pop pop movsb cmp (bad) std jns xchg cld gs adc xlat mov inc movsb shlb pusha inc aam (bad) pop icebp das xchg fcmovb cmc sbb sbb loop mov cmp mov jae add bound data16 xchg es push push inc xchg addr16 mov je (bad) daa hlt out pusha xchg push fnstcw std ret xchg xlat dec or jg repz mov add dec jmp add lahf xlat lock icebp mul or jno bound cltd out pop xor mov (bad) (bad) test xchg loope popa imul push adc lock iret jle or push mov pop nopl adcl cmp add mov out sbb xchg or sbb test cmp push jp int3 xchg cmp fcmovnb jno mov inc popa stc inc addr16 inc pop daa sbb jbe dec cmpsb jle pop inc add cmp cld push js inc xchg xor pop adc pop mov lods rolb lock xchg bound pop stos cmpsl mulb dec push pop inc lea fidiv jo pop adc cltd mov loop jp mov pop add test gs xor das inc pop add arpl popf push xchg and test adc cld and add and push add jne or cli sbb cltd adc fwait insl ljmp clc pop pop pop cmpsb (bad) mov adc and mov fiadd xchg lret out rorl and jmp movsl in test jle sub or jg lret push movsl ret mov cmpsl mov data16 adc dec jns sbb sbb (bad) les sub aas out mov rcrl inc cmp cmp cmpsb fsubs fmuls adc push sbb sbb jl add loop add mov adc push sub pop mov cmpsl fistpl clc push mov cli loopne pop xchg hlt pushf sarl clc or out xchg inc insb clc inc movl lock (bad) cmp jg aad bound jl pop jl icebp and push stc icebp xchg iret subb mov pusha pxor lock mov ds dec inc xchg and mov cltd int inc es sub xor jnp cmp mov mov or mov dec sbbl add sbb addr16 adcl lds jle sbb (bad) (bad) aaa mov xchg mov lcall and xor rorl fstp pushf shll (bad) ficoml test pop aad call enter test imulb and cmpsb movsb mov aaa out loope mov pop inc out adc xchg sarl mov cmpsl ja adc and jns sbb test push pop xchg bound and call and into imul scas pushf sahf dec mov ja sub xchg in (bad) js ficom aad jecxz adc adc and sub and sub mov test jl jae popa ret out pop push pop scas xchg lods mov add addr16 mov mov daa jbe sub mov popa pop lds mov dec sbbl testl gs push sbb mov loope push fadd and xchg les (bad) xchg cmpsl andb loopne cmp test inc cmp jg adc pop loopne cmp std addl cli into push pop roll push push jmp bound xlat adc decl loope (bad) push bound movsl push pop pop and or andl xorb push xcrypt-ecb cmpsl mov mov int3 outsl loope dec dec pop aad push jne xchg xor hlt inc jns xchg lcall pop dec inc pop mov xor sub ds and push inc rorb mov fisttp orb loope cmp fsubrs scas adc xchg dec out (bad) cmpsl popa rcll dec bound xor or pushf add add or aad into mov push das and cltd sbb ror jnp push mov test xchg jge xchg cmp test mov push cli cmpl and gs inc or outsb pop adc (bad) outsl loop inc or test mov cmpsl push xchg test jge cmp je cs sahf andl addr16 mov ss addl mov data16 mov imul lock (bad) mov mov scas ss imull mov insl sbb loope gs add jmp (bad) ja xor std dec fndisi(8087 das mov mov sbb bound adc sbb daa jge test xchg fwait daa xor push gs jns cwtl ret in add ss jns pop fwait mov and lahf push xchg loop mov inc pop sub inc imul xor pop daa sar mov cs pop mov sbb cmp rcrl (bad) fnstsw outsb push mov movsb test sbb in jle cmpsl lea imul sub mov lock xchg out push popa popf pop add adc loopne es add pop (bad) mov outsl push mov sahf jl inc das dec test flds add mov jo fldl push arpl call sbbb jge xchg dec cmc addr16 daa pop test (bad) cld jne and pop inc inc pop out inc inc pop daa test addr16 cli xchg adc inc mov or sub xlat cmc aas adc pop daa jmp adc push sub xchg lds imul sahf mov js movsl cmp push movsb cmp test loope je and aas dec pushf jmp xchg push lar xor pop sti cmp and inc sbb mov negb inc movl lock inc rcrl (bad) jbe cwtl iret sub mov arpl add stos gs xchg and mov and pop xchg sub aaa bound imul add test adc les or dec (bad) shll mov addr16 adc inc mov jmp icebp scas dec adc jg flds enter adc xchg or lods jle dec xchg xchg cltd js jle add data16 es pop pop mov andl repnz jae sub mov xor bound jno mov add cmp cmpsb hlt dec adc incb adc mov jne or add xchg jns imul jl stos inc (bad) adc add mov scas dec aam push adcb push icebp pop and adc popa mov inc pop pop add sbb xchg cltd and pop out or stc mov pusha mov mov add and std mov push sbb jg sbb fwait lea adc shlb inc popa pop inc fdivr xor aam dec ja xorb imul pop in test lods pop iret pop dec xorb test xor inc adc ja popa cs push orl add loopne mov movsb cltd or push (bad) fwait dec sets xor (bad) adc aas push pop dec xor or jae imul bound dec jno loope std xchg pop popa jg test push daa sub xor imul fsts pusha lret int jnp movsl (bad) (bad) shll sbb lds (bad) adc mov lret inc imul (bad) call daa xor and cmp fcomps xchg loopne movsb inc xor movsb imul jo test in les pusha mov and ret sbb arpl add and sbb daa pop mov je lock bound mov loope std loopne mov add cmpsl cltd fildl dec push std mov xchg je adc pop lods cmpsb int dec add loop pusha mov add inc mov notb pop daa shll pusha lret mov in aaa jb rolb sub xor data16 xchg insb jge lahf (bad) popa xchg lahf jbe adc jbe xor push addr16 or (bad) lret in jne inc popf or out dec data16 es fildl iret jno xchg push div clc add dec out add and push cmp divl lcall dec xchg cmpsl addr16 dec (bad) mov cmc sahf (bad) arpl lcall nop mov aad push pusha (bad) sbb mov js pop lods mov dec es cwtl pop sbb test xchg jno mov adc lods xchg pusha bound pop inc inc xchg imul enter fadds xchg sbb int3 push xchg cmpsl cmp pop inc mov decb sub pop loopne pop cmp xchg push and loopne ja add xor cmp dec adc inc xchg fchs mov push fisubrl cmc mov add xor aam fldlg2 xchg daa pop lds mov jne cmpsb jge inc clc aam int sub or jge inc sbb xchg (bad) jb pop mov push into dec xchg xor cltd sbb repnz subw push out fisttpll shlb bound popf fiaddl dec xor push or pop add xchg fdivs cmp and xchg stc bound adc fildll cmp addr16 xchg cmp je sub cmp sub mov movsb out ljmp pop decb mov pop xor icebp inc xor push hlt sbb out aaa cmp bound and bound aas mov mov aaa mov outsb and popf inc add xchg nop inc jl call aaa test popf fnstenv ficom cwtl add inc gs data16 sti (bad) sarl rolb cmp sbb dec mov shrb xchg lahf (bad) flds outsl inc or nop mov push dec pusha pop xor pop mov ljmp test xchg out aaa xchg adc jns lahf repnz add adc mov pop pop inc sbb out cmp adc mov sbb mov sub repz popf mov xchg inc inc cmp stos xchg sbb pop push nop add pop ss ret pop mov pop out (bad) mov dec push insl cmp xor daa xor lods adcb jb add (bad) pop push bound lcall xchg dec cmp ja and sbb fcompl mov popa add fisub lret and test jg gs loopnew inc js add inc dec add xor sahf sbb cmp imul jbe fildl add in mov lahf xchg adc dec inc mov repz pushf mov negb (bad) out xchg inc push popa xchg jno imulb pop lahf pop xchg ljmp and popf cmp scas fcmovbe hlt mov inc movl sub cltd mov inc push and mov xor pusha jb aad push fwait pop jmp loop jns scas and addr16 push add out inc ja jle std and cmpsl out bound jmp xor xchg inc pop cmpsl std daa adc jl push push xchg sbb scas or sarb notl pop sub pop adc jmp cwtl (bad) pop rclb cmpsb add mov adcl andl jl imul inc (bad) cwtl out push test or popf and mov pop push imul movsl outsb in gs inc sbb xchg in xchg pop (bad) mov jbe sbb xor xchg arpl xchg push xlat imul cmp test orl clc imul dec and xor jle xlat sbb aaa mov jmp push dec int3 push push pop and int cmp cwtl lds pop jnp xchg jg movsl jl push fsubl mov jno mov and mov inc adc mov cmpsl pop cmpsl jmp hlt add ss popa or mov mov mov fsubrs mov mov adc bound fdiv add ret in ljmp test push daa cmp int3 lahf xchg ret es ret xchg cld jns add movsb cld push push jecxz out call fstpl (bad) out mov xchg test lret mov or daa (bad) pop adc xchg lcall push arpl pop pop dec or jb push dec jmp pop ljmp pushf orl addr16 es inc mov rol adc push push test cmp dec test adc imul bound imul into fs or imul or movb aad test xchg push daa pop cmpsl pop jo es (bad) test fnsave xchg sar inc cmp mov inc rdtsc rclb mov lds rcll adc bound add sbbb fcomps or add gs mov push cmpsb adc push clc mov xor push add pop loop fmuls popa test add ds es inc xor sti pop dec inc cmpsl ret cmc pop add rorb xorb pop movsl mov movsb ja mov std fbld adc or pop insl (bad) mov stos jnp push mov xchg add inc in lods pop xor test xchg xchg aad add inc pop out scas jge xchg loope mov pop (bad) (bad) cmp mov adc mov dec xlat jge mov cmp fidivrl push cs xchg xor jno gs pop mov shlb (bad) fistpl and popa mov fdivl sbb shll add mov lcall and mov mov iret into jp repnz call out push or xchg in add (bad) sub repz push scas adc sahf dec aas popa inc adc adc lods mov add mov outsb sbb push add jno cmp cmp inc icebp sub cli add divl iret inc dec (bad) hlt mov and icebp xor fisubl sarl cltd ffree icebp cmpb or add ds test cmpsb mov out mov fwait into mov rcr sub jle jno daa gs bound out into mov shlb inc dec and add mov jae dec pop push inc (bad) cmc lahf loop mov sub dec dec loope pop imul fimull lds cmp sbb lods xchg pop daa xlat xchg jb lahf out enter insl fild mov arpl out (bad) pop arpl push xchg dec dec (bad) in push (bad) mov std test pop movsl pop dec das sbbl add cld jnp push (bad) ficom mov stos out inc aaa divb fcompl xor and xchg das xchg xchg imul and andl mov popa dec out jge addr16 dec (bad) jae jmp mov mov push sbb and adc mov (bad) or (bad) (bad) xor (bad) test push lds dec mov mov std inc shll jg pop push fldenv dec cmp and bound cltd gs adc pop and inc (bad) jae psubusw jae xchg cltd add lds mov fbld mov (bad) xlat fwait aas pop mov in out and push outsb adc mov lock push mov movsb gs movsl iret arpl push jbe lock sbb cmpsb add mov fwait test push fnstcw jp push je loopne insl add cmpsl fcos cmc cwtl out sbb lret test push cmp mov fimull cmpsl lret in adc inc and cs (bad) jb xor pushf xor outsl in push out mov pop out pop les movsl daa movsb and es mov ja inc and dec push dec pmaxsw xchg push and sbb testl in add or and stos lds or inc add imul fwait dec cld xchg repz mov dec inc (bad) jnp mov (bad) xchg xchg ret imul inc pop js mov and dec mulb gs sbb adc outsb push fldl bnd cld jb ret pop test cmp sub test lock xor cmp fisubrl push xor adc adc pop mov dec pop mov pusha cmp cltd pop dec cmc push push adc cld mov in mov adc jns add inc inc scas push jae or sub mov pop setno loopne (bad) xor sbb jl mov int jne bound pop ds xor ret cmp (bad) arpl jp or es (bad) push arpl pop jmp dec pop mov mov ljmp in (bad) cmp je mov scas inc mov test jmp movsb orl std jp inc mov cmp jo (bad) in push inc in jmp inc js xor mov push ret je,pt xor push mov outsl js lods arpl adc jl jno shlb jge lcall mov add sahf cmp mov aam sub or movsl jp cltd imull adc cwtl (bad) dec pop daa push sahf jno push scas sti xchg cltd cmpsb lods icebp (bad) ja dec test jae sub aam push (bad) cwtl push mov scas and (bad) mulb sbb adc and icebp adc push fwait mov hlt cmp aad cld (bad) mov dec mov daa push dec pop mov data16 stos and sub test lret mov add and cmp movsl clc outsl lods mov (bad) push dec sbb adc mov and daa loope bound dec xor ret jle sbbb dec shrl pop mov lods rolb mov pop jns and sbb inc xchg std lea cwtl fisttpl push gs cltd push cmp iret rorb mov js and or daa sub iret mov pop push sbb js cli inc inc lcall adc fwait push pop push sub iret pop lds (bad) dec pop iret cwtl dec cmp and pop es repz push xchg inc cltd es sbb sub and loope jae inc cwtl popf cmp iret mov jecxz cld push not and inc cli pop add test add push add adc ja pop outsl xor inc scas inc aas insb xchg sub pop fsts pop add or or pop push mov enter jmp popf out bound pusha fwait push add mov js es lds sbb jns fcompl popf popa mov in (bad) into jae sub lcall inc out clc push (bad) adc iret rcrb ficoml (bad) fdivp pop adc inc and lcall sar fisttpll inc and clc cmovp out sub stc pop imul inc xchg add push or arpl fistpll mov xor or pop mov popf push pop push or sbbl pop fiaddl sbb push andb sarb xchg mov or aad fimull cwtl dec mov fstpl push movl cmpsl popa rolb bound or lock daa jecxz movsl bound aas sbb push mov dec xor xor xorb or lret movsl xchg pop aas mov daa test call mov add cwtl xchg sbb mov imul sub iret leave std mov xchg gs mull sahf sub popa movsl daa inc bound lret gs cmp cmp xchg or (bad) mov test mov mov sbb out pop in cld jnp clc shl sbb (bad) pop mov add xchg pop in pop loopne adc int3 je sbb dec xchg addl or (bad) (bad) xchg xchg bound push hlt cwtl cmpsl add fucom and (bad) fistpll or insl arpl clc xorb data16 jo notl adc cmp rorl fildll inc xchg (bad) out push mov call add xchg mov psraw pop and call add and push add out ja mov orb cmp or cmpsb inc fs pop movb sbb cmpsb and mov cmp outsl sub stc mov shld jbe (bad) push cld (bad) loopne cmp adc movsl (bad) xor jg jno lahf sub jae xlat repz movsl adc test andl andl imul fwait or sub outsl mov aas pop pop fucom mov sub loopne inc mov out dec insl movl std adc inc fwait int3 lock xchg and xlat (bad) cmp cli mov mov push pop add xchg jns ja (bad) adc test movsl loop pop pop inc inc mov pop mov mov in lea mov mov mov inc addr16 push mov or adc sub mov jnp arpl mov test pop xchg xchg cmpsb xchg data16 or fmul inc daa sbb push orl test (bad) in mov adc push stos shlb addb jg fbstp test aam mov pop xor les push sarw or or and mov push fwait ror push (bad) mov fcomps lea ret or (bad) and jb out mov inc dec paddusw fstps test sub push jno fyl2xp1 and pop xchg adcb les inc jl stc adc loop cltd add loope jae cmpsb cltd pop pop xchg dec and imul sub repnz lret inc movsl or add or mov push gs cmp loope popa xchg rcl cwtl pop gs hlt mov lahf or cld mov push jle pusha js push in lret inc pop sub mov aam arpl adc mov xor sbb in xor xor outsl pushf mov stc les inc mov loop dec adc mov loope and and ret jl js sub imul fisubl inc xchg (bad) imul movsb data16 mov jge cmpsb in pop mov arpl adc nop cmp push inc mov dec add fbld pop arpl mov movsl fldcw adc adc jbe xor cmp pop cmpsb test (bad) xor and ja pop mov (bad) lcall xchg cltd lods mov pop add dec pop inc fwait push and insl pop cmp imul jno sub xchg pop loop mov ffree xchg mov addb or xor push adcb jmp pop mov xchg sbb dec lret bt push sub std jg (bad) xor (bad) das and mov xor mov inc inc and cmc push xor pop ret inc lock jno pop iret jnp push aaa mov pop push mov fsub adc fcoms xlat movsb jns mov xchg cltd dec mov inc xchg cwtl stc cmp inc lret mov dec scas pop mov or aaa fxch mov or push push addr16 flds (bad) hlt dec pop jns and cmpsl sarl dec jmp xchg pop xchg fsts jns enter inc xchg dec roll mov sbb rorl shrl data16 arpl or popa mov sarb and insl nop mov psadbw stos add movsl push inc or aaa bt pop adc mov dec inc popa inc inc popf and rorb daa jns dec pop lods cmp repz pop rolb (bad) and cmp stc enter sub push (bad) out insb xor cld push pushf movb into mov and (bad) imul cmp (bad) imulb sub or arpl mov and add cwtl jecxz add cmpl add adc ljmp pop inc sbb or lods adc add and and popa inc outsl aaa pop pop dec sbb xchg or sahf and rcrl sub cmpsb dec popa pop fwait mov and cmpsb mov fstps and sbbl mov pop jmp pop rorb jecxz mov push icebp daa bnd pop scas (bad) xor orl scas xchg add rcpps pop cbtw sbb cmc sti outsl adc (bad) xor das movsb xor mov mov xchg xor sub ljmp xchg mov cmc dec iret mov push inc mov sbb loopne (bad) push adc mov mov xor ret push jae xchg and vmulps ljmp push sbb mov daa cmp pop xlat hlt pop pop jns bound es imul js lret imul jb add daa pusha mov add jl pop or dec cvtpi2ps testb and or (bad) ficomp (bad) ja lock xor lret out xrelease iret dec push rcrb push mov push popf push sahf adc cmpsl iret or setb xor (bad) sbb rolb dec push cmpsb lcall pop fsubl jb mov dec jns icebp mov (bad) (bad) adc jecxz mov push adc and mov pop pop daa mov out jbe add nop test cmp sub and mov hlt pop mov and test adc jge test and xchg popa shrb and mov xchg mov sbb and clc cmpsl xchg dec lahf movsb fadd cltd and and adc mov test popa in fildl mov repz jnp std pop pop fmulp mov mov cwtl stc mov adc jae ficom xlat lret aaa movsl push aaa pop pop jo rcll das jecxz test push subb (bad) out leave mov push int lods jae lea pusha and jns or ja pop stos push stos scas mov js jnp pushf imul daa push cmp bound jnp imull gs std cmpl adc pop popa sbbl xlat adc inc mov fsubp in mov xchg daa xor pop sbb ds mov sbb push pop into aam cmpsl fisubrl mov rcrb lea push inc ret clc pop fnsave hlt push aas adc add lea call lahf jns pop and test sbb in addl xchg xor xor fwait test push movl rorb flds les gs sbb pop jo or xchg scas add in cwtl ret cmp lahf jnp (bad) and and fiadd int daa jl inc popf pop xor pop adcl out stos (bad) sub xchg movsb and inc mov bound or jo or test frstor jno popf and ret lock and popa andb pop inc (bad) in xchg loop mov push and xor mov xorps test sub sub and fwait mov scas pop and popa mov sbbb push pop sbb push arpl inc in outsl inc mov lods outsb das add jo add sub pop mov adc addr16 mov pop adcl cwtl mov pop nopl ljmp aaa nop repz sti cmp and push add cltd call aam lock mov movsl adc aas mov fwait dec imul pop and mov jnp jg inc lock rcll out lret xor fwait dec pushf rol mov sub jge add jl cmp mov push loopne mov adc fdivrs xchg mov fs sub xchg jno fdivs std sbb cmc outsb add xchg inc popa fdivrp and cmc mov jg sub popa mov adc cmpsl pop stc fnsave test arpl mov jb out mov cld xchg in lods adc cltd sub sbb or inc mov into std pusha imul and test and fdiv rclb test xacquire inc fsubrp arpl add movsb cmp xchg xor jbe (bad) inc loope loope cs scas repnz dec mov or jb popa jae add negb stos pushf jnp add sarb cltd xor and mov or scas cmp aam sarb popa sub sbb out dec lock inc add bsf rcr (bad) cmp popa mov test addl test scas xor and sbb pop xchg pop (bad) frstor dec push push sbb nop cli sub mov frndint mov lahf xorl jge daa cmpsl hlt sbb inc adc xchg xor mov lea out (bad) in pop jno lret add subl (bad) arpl out pop out mov push cmpsb push pop mov xchg sahf xchg icebp jne jno call mov add stos xorl inc add add (bad) fucom xchg std mov fsubrs mov xor lahf push rolb xchg mov (bad) (bad) jo mov addr16 or mov test adc xchg sarl mov test push and and repnz stc mov cmpsl adc lcall xchg inc or sub ucomiss insl (bad) push out and lds loopne notb iret pop push cmpsb (bad) xor mov into shlb enter popf ljmp xchg xchg sub jl cmpsb mov jg cmpsb mov cmp mov sub push push jo pusha aas pop xchg dec pop push outsb add sbb into popf js and arpl mov mov push push addr16 add sbb add pusha outsl push dec mov dec mulb test and cwtl in sub jmp repz movsl pushf popf add and inc fnsave sahf pusha paddd rcll (bad) lock pop into nop ret add push std outsl imul xchg mov xor outsb les cmp rol cmpsb and and lods jg sbb mov and sbb cwtl push cmp repnz jl in push addr16 jbe push gs adc dec and mov mov push jno lock loope lods clc rolb cmp xchg xchg shll fnstcw js jecxz jl bndldx cwtl cli pushf add mov pusha mov mov add jp jns push fnstcw lods jb and iret addr16 add imul imul push push mov sbb pop and fcomps and out fdivs clc pusha fidivrl lds jae inc sbb lea out push fisttpl iret mov add lea fisub cmp cs outsl aam pop lahf jne fldln2 xchg dec fs add lds lahf int (bad) aam popa (bad) (bad) int sbb cmpsl nop pop or jo xor lods mov scas dec cltd imul cltd pop lea or lahf lods adc push pop (bad) mov sahf lds cmc loope inc mov mov outsl and mov jne inc sbb cld pop jno jge outsl adc insl shll cwtl pop pop adcl pop addb test push addl lock pop pop xchg cmp xchg jecxz xlat xchg sbb jl loopne sbb add cmp fild inc xchg insb test lcall scas arpl add nop pop or xor das mov and in shrb and clc outsl xchg xchg or outsl popf and jbe ljmp and inc inc mov adc data16 mov sub mov clc jne cmpsl jne,pn cwtl pop loop data16 nop addr16 xchg stos xorl cwtl jnp xchg nop shrb pushf jno dec popa out sbb test inc jnp es xlat inc xchg pop cwtl mov jae pushf cmc js cmc sbbb ja xchg lods pop sbb push sub jo xchg in dec shrl call aas jno pop mov sahf mov pushf sub jno inc cmpsl fsubl insb lods (bad) data16 int3 loopne iret mov mov pusha dec pushf inc movsb jne pop adc lea sbb mov pop xchg movsl daa cld push js mov cmp adc pop scas popf push out fistpll nop mov std in jl test stos adc cmpsl es push adc ret jecxz sbb mov xlat scas jg andb dec pop dec inc pop test mov dec xchg mov cmpsb xchg stos dec in pop fs bound add jge gs and add cmp lcall add add inc sbb dec and in sub repnz cmp lret lret push mov cmpsb test aaa push mov push or sahf pop mov sub mov and in mov fwait pusha (bad) in loopne test repnz and outsl loop fwait mov xchg jnp aas cwtl push cltd jg mulb push jno test pusha cmpsl insl (bad) mov dec movsl iret mov mov xchg (bad) mov clc pop xorl in push sbb mov sahf mov rolb mov (bad) test pop xchg add out pop pop cmp jg xor ljmp dec in sub add push cmp out in cltd bound cmp or pop push add (bad) push pop lods nop stos movl or add fcoml xor jge xchg in iret pop pop adc jb cmp imul outsl fucomip jns push orl loop into xchg lods fwait jmp xor adcl callw push cmp xchg cmp mov add insl mov pmaxub pusha ss addl push test lock mov jns das loope cli aad cld dec push repz popw xchg push inc or and pop pop push mov jne movsb push dec rclb sub add sbb push cmp add mov lret leave jmp or mull es pop xchg mov add call pop xchg jbe cld push subl cmp xchg dec clc test mov lods adc adc fs rcr mov xor adc sbb fidivrl mov add dec xchg test cmpsw cmp cmp jge pushf addr16 insb pop addr16 pop call nop in bound fnstenv and pop mov aas (bad) aad add test bound xor mov lods pop movsb jns decl xchg popf lahf sub andl mov das push xchg in adcb shl sub add and pop xor cli push imul out fcompl in mov addr16 mov dec bound sub mov dec mov lret idiv pop int daa xor push loopne or (bad) or jge inc push jp add movsb insb cmp pop lock repnz push fmuls or jl and cmp jno mulb xchg iret aaa jge fcomi in testb in jp pop ja std (bad) lock cld or cmp push insb in out daa add xchg push or outsb movsb andl mov lahf sbb insl daa pop and (bad) loopne std cmp push jge sbb and daa (bad) and inc add dec and push sbb insb push xchg jno mov std xor andl and and repnz pop adc add pop pop push in push push loopne popa daa mov mov pop movsl arpl cmp push es jg add in fdivrl xor loopne inc dec xchg pop adc or add daa es bound adc and xchg and adc jge pusha bound pop pusha cmpsl cld mov ffreep pusha dec cmc lahf repnz push xchg mov clc (bad) (bad) jmp data16 pop jge inc add andl aad out hlt cwtl cs pop (bad) fsubrs dec adc dec (bad) enter jge pop dec sahf xchg dec and cwtl out push bound inc mov cmpsl jnp push jecxz dec push nop (bad) jp and xchg push mov xor imul nop (bad) lds in dec data16 fcompl cwtl int push cmpsl jne inc pop mov outsb push dec pop movsb mov (bad) notb or dec imul dec jg rcrl lret adcl dec sbb sar out aaa mov mov bound lock add inc or cmp cmpl pushf pop (bad) mov repnz dec sub add mov sub std push insl push pop or imul mov jge mov inc lahf lds push and push and adc pusha mul negl mov sub pop sbb inc xchg addl clc inc rolb xor xchg stos (bad) fdiv adc xchg mov rorb cmp popa mov xor adc mov fisttpl inc or jmp gs or mov push outsb dec daa incl lea push and push add roll (bad) jae mov mov mov or pop loope daa mov int3 or sahf pop leave out pop mov test repz xchg inc ret movsl mov aad faddp xchg (bad) add rcl sbb lcall in dec cmp mov xchg icebp sahf loopne sahf outsl adc and inc or and push scas jg in add lea aad mov xor sets test loopne ja sub fs pop mov mov dec lock cmpsb or repz adc fiadd aad add mov sarb mov fisub push mov in aaa pusha cmpsb pop punpckldq outsb dec into cwtl dec mov inc out lods int3 xchg xchg pop sbb stos dec xor mov les out sub dec test add insb (bad) setbe nop or cwtl mov daa test fistpll rcll fildl cmp or popf mov (bad) mov divb (bad) dec pusha xchg aas in fsubr sub inc pop xchg inc sbb std insb aaa lret lods dec lea int add and (bad) dec jae xchg jmp out imul pop fnstenv adc daa mov dec lcall int3 outsl push push mov daa (bad) in into xchg dec jns pop cmpsl sub mov popl or xor mov scas push test sub add aas add pop jle dec out js mov movsl inc sbb or popf std add sub imul test mov lds inc std repnz iret inc (bad) iret imul and push lcall push mov imul mov push or cmp cmp (bad) popf mov or xchg fimull mov mov inc sahf daa fbld aas mov ds ds xorl in mov inc lods mov aam je mov mov movsl xor aas inc xchg fs out sarb movsl mov std movsb inc cmp sub arpl in lcall bound jecxz out cmpsb pop add in lock cmp into nop or jge cmp lret fstpt sub adc pop ds scas fs dec add gs mov and adc loopne adc pop fwait inc clc adc mov push cmpsl rcrb (bad) mov mov cmp xchg ja xchg pop orb add test cltd out daa xchg pop lods adc mov lcall incb cmpsl testl fistl loope jbe arpl jmp addr16 and push xor jg cmpsb jle inc lcall int inc cmp int mov roll pop mov pop mov adc andl popf push enter js mov js and pop cld jecxz aam ja scas in pop imul arpl (bad) jb inc pop sub out (bad) mov je sub add wbinvd pop test pop pop bound dec push dec clc cmp cmp add imul pop pop pop sub fcompl xchg lods xor cmpsb (bad) ret scas js add or cmpsl pop adc test push loopne lcall xchg ja callw adc nop call adc shlb popf push mov jae xchg add loope inc mov jo jg dec jne jb add out dec or loop dec lret lods mov leave lcall std push ss push push stos push sbb cmp add popa push shrb mov and into leave out sub lahf jbe sub adc cltd out xchg dec fild push sbb xchg rclb sbb lea push pushl int3 lea ret stos shlb test sub dec ljmp sub push lea test dec insl aaa inc xor test dec cmp push xchg and mov pusha out xchg dec inc inc push push pop xchg aam mov mov mov cmc fchs add (bad) loope fdivl in mov and daa push inc pushf cmp xchg xchg leave adc push xor clc ret cmp xlat or daa into jl cmp jno mov jge and arpl adc mov xchg adc out (bad) add mov and push xor out das add imul jl cmp loop and cmp pusha sbb cmpsl lock fsubs sbb idiv push stos cmpb aaa add xchg stos sbbl lcall subb jnp fsubr xchg and out js stc xchg xor cltd push outsb lea stos push sar pop dec jae,pn mov imul mov mov (bad) (bad) cmp fadds (bad) ds inc std push sbb pop movsl inc mov into fistp pop sub hlt popa mov mov jl xor cmp imul mov outsl daa mov sub imul mov jl add pop mov div lcall scas popf mov mov fldcw dec nop movsl sub fildll mov incb stc adc jge pop (bad) (bad) gs into ret pop mov mov (bad) cmpsl shrb movsb aaa (bad) icebp inc pop add pop mov push insb xchg fsts les scas jae mov and js ficom jno mov add cltd xor and gs mulb and inc jge aaa add and jbe cmpsl mov mov adc fs sbb jb test xlat scas push jo mov mov adc (bad) iret fwait push or mov pop inc scas sbb pop push jo sbb sub repz std popa repnz cmp popf movsb xlat js sysexit jle pop inc mov cltd (bad) iret or lock jo into pop pop cmpsl or jbe movsl xor stos lcall sbb std scas pop add out imul das (bad) sub mov mov imul repz test iret scas cli push mov std sbb jo cmp pusha pop hlt pop xor loope xchg and or pop mov jo test add cmp ret daa loope out cmp rorl test insb xchg push adc push push sbb xchg or dec sbb xchg fsubrs pop not popa cmovno and or out test adc pop inc jl add cmp mov inc xchg pop dec lea aaa mov xlat dec push lret lcall and and pop int3 mov mov inc mov dec or adc cwtl jecxz mov and ljmp xchg cmc jg adc mov fs jno lahf popf add pusha int3 (bad) and out lea mov nop pop xchg je pop test jmp dec cwtl adc stc pop xor jge adc xchg cmp and addb rclb xor jo mov (bad) cmc test lahf push push or imul imul popa jns mov aam inc jnp popa fbstp stc pop xchg push or cli jae push lds inc out aaa jnp xor loope loopne stos dec xor add jo and dec shl aaa loopne and or shlb daa cmp dec popa xchg test push inc or dec xchg daa mov lahf inc push and dec cmpsb jae iret push sub popa es push insl stos test and sbb dec mov and mov push jp pop push rolb lret or orb out mov cltd pop and push pop lock xchg imul mov jns push xlat lds andl pop cmpb imul fisttp cwtl ret xor sub mov test xor jg sti fdiv push orl rorb mov dec clc scas mov sar inc xchg mov lret jg xorl and lret adc xor pop xchg adc cmpsl rorb dec push push push (bad) aam out sti jo movsb pop push jg adc insb movl or outsb sbb daa aaa add aaa call daa addl ror stos xchg (bad) mov fs pushf xchg mov out (bad) mov push gs inc inc adc clc inc pop add lock sub xchg scas adc ficomp movsl lcall and imul xchg flds cltd loop fdivrl cmc and in add js aaa (bad) and dec (bad) sbb sub fnsave and mov pop fldt sysret xchg adc cli mov pop add sub mov rorb icebp xchg and xor clc push pop daa cmp pop dec xchg fmull cmpsl sbb addb insl cmpsb iret jmp out in pop pop jle xor adc xchg xchg daa add (bad) lods movsl inc dec push dec sub imul cs pop ds push lahf or jmp dec and and loop sub pop movsb dec arpl dec in repz (bad) sahf xchg mov mov (bad) lods popf cmpsl pop jecxz hlt or jge aas roll lds push outsl xchg cwtl or and das lods lcall fadds es pop into into cmp mov ja sbb lock xor stc add jb test push iret jae in and mov inc xor sbb cmp jmp test jle or aas push (bad) insb xchg dec adc (bad) idiv jns pop sarl xor sub sub pusha sub icebp popf mov (bad) pop sbb js stos rcrl and stc xor enter mov jmp ret xor fiaddl movsb addl shl sub push (bad) out les cmpsb mov push hlt in sbb mov lods pop xor sbb aaa or dec sbb test add xor fnop dec ss sbb or (bad) int cmpsl add cmpsl ficompl stos imul insl mov addr16 mov jae aaa (bad) gs sub (bad) jno adc xchg ss out lcall pop sub pop xor xchg adc xor fadds iret dec pop sbb adc aam xchg fldl inc lods bound xchg das dec stc js (bad) ja add mov mov mov xchg loopne into xor and call test pop sub xor mov push mov call repnz mov rep mov inc out jno popa cmc push stos movsb xchg in pop fistpl xor lret add cmp jne jno,pt cmpsb xchg out ja dec sub jg push mov fwait cmpsl pop mov popa ss das pop xor into (bad) xor cmpsb out movntps pop not jmp adc bound pop adc pusha je leave cmp cld pusha jge lods add int xcrypt-ctr cmpsl lahf jne or in or in imul adc test loop pusha mov jg jmp jne loopne mov cwtl and lahf xchg (bad) cmc and jb and ss mov bound aaa fnsave cmp dec lahf push (bad) mov test lods mov pop out sbb mov adc outsl js daa hlt mov xor jle inc stos nop rorb loop test call xor and or and ja or fs inc (bad) cltd cmp testl mov int jno sbb xchg pop ficom inc xchg rcrb and in add es cmp dec inc mov es xchg push ja adc notb xchg in and hlt jecxz sub xchg ja and adc cld sbb jge push cmpsl push lret sub or add pop in movsl enter aas or jle out add popf sbb movsl cli and (bad) sbb adc sbb dec mov ret stos test andl xchg cld dec fisub outsb loopne test jne pop xchg cmp rclb (bad) ss insl xchg pop sbb gs loop popf push add aas popa sbb inc (bad) and pop out adc mov inc xor bound in adc das mov mov jne xchg and sbb push aam xchg sbb xchg lcall add es dec mov fmull enter xor cmp push mov mov daa mov loop ficompl mov dec cs sub sub xchg dec pop imul pop jmp add das int inc fimull mov gs push and rorl jo adc int mov mov push jge (bad) jg jae push es cmp mulb cltd push std xchg lea inc cli sbb loop add push jbe ret push outsb cli shlb push push inc mov movsb movsl lahf icebp xchg mov pop dec mov stc mov test out imul lahf popa sbb dec mov lahf mov lds xchg sub fwait cmpsl jae jle push negb or and mov cmpsl mov push xchg pop mov cmpsb subl sbb int lret addr16 call cs scas xchg mov aam jge clc test sbb jno cmpsl idiv daa or int3 imul mov mov mov sub adc pop sub xor push adc gs orl dec jno and cmp and push addr16 xor fsubl flds daa xor insb dec sub dec pop pushf pop sub aad dec inc bound cmp fsubl sub add jl and scas xchg loope cmp lods or pop sub and call mov loop outsl dec sub mov add cmc or mov add inc (bad) xchg aaa push ljmp loopne and aad jnp test push mov shrb out sbb loopne xchg xchg out sbb pusha aam jo repnz cmp scas out stos inc xchg test mov sbb jnp lds push xor jae out sub xor xor mov iret jae scas push insl and push adc bsr xchg frstor jns pusha (bad) leave inc mov test fsubs pmulhw mov lds push lock pop inc daa ret gs mov imul mov jecxz (bad) leave fwait aas mov push (bad) mov jbe orl dec xchg cmp (bad) cmc push push loope and imul inc xor (bad) and mov inc xor frndint popl in mov inc push das rclb sbb mov sub mov sbb xchg inc call jecxz and add aad ds mov (bad) sbb mov xchg mov lods and inc xlat pop in imul int3 hlt sarl sti aas mov jb cmpsb cmp or pop test stos mov sub cld xchg push inc popa add pusha mov jle fs les xchg mov mov imul iret fwait push int inc jne dec ficom mov xchg ret roll addr16 lock adc mov jno popf xor pop bound cmp loop into ss lahf adc out inc inc movsl push xchg lea xor cld and aam shll push jb push leave mov dec push imul pop arpl inc push mov jecxz movsl imul in movsl xor mov pop mov movb mov repz push dec cwtl inc dec in dec imul (bad) aas ret sbb push add mov mov cmp out sbb cmp mov loopne ss xchg js sar mov dec inc rcl jnp nop (bad) in jmp sbb iret (bad) or (bad) sti jge add sbbl das lock test test inc cld dec popa fldenv cmc mov xor cmp outsb sarl push xor test lcall pusha dec lods ja sub mov adc and add dec pop aaa lods cmp out cmpsl in jno (bad) sub bound fisub hlt pcmpgtb outsl adc push es jmp (bad) out or mov mov pusha pusha mov js out and dec ret idiv adc popf mov push sub out push lcall pop mov jg leave divb jge jae out dec adc cmp (bad) dec imul ja aaa xchg ja xchg dec or pop mov cmpsl dec push pop jg mov inc dec push popa push std mov andl xchg popa orps gs jbe int pushf leave arpl fsubrs mov inc add (bad) repnz loop inc xchg pop xchg pop not sub jmp shlb sbb movsl movsl fildll and adc in test dec jnp jg bound sub push push dec lret orb dec sbb sbb push dec inc sbb dec and jae dec movsl mov adc fsts xlat pop xchg lret out sbb nop mov dec rorb jmp add pop adc push pop stos inc lock inc out dec inc movsb mov notl test data16 cmp inc in (bad) je cmp mov jp sbb daa popa (bad) lods xchg push sub int3 xorb mov mov and pop mov fcomps mov sbb mov sbb pop es inc into (bad) cmp loopne stc pop mov out push das mov mov adcl and in outsl inc xor mov inc dec (bad) adc js jp pusha mov cmpsl sarb add adc xchg push inc daa dec out inc les cmc iret popa mov adc add out pop (bad) and lock ret pop pop ret (bad) jnp cwtl xor pop or iret in sbb add aad bound jno xchg jle cmc or jg js ja jo mov divb test jl adc or cltd ficoml out outsl test mov shrl cmp popa fs push nop fwait mov sub sbb cs adc (bad) mov sbb adc xor jne push xchg enter cmpsl push outsl ja xchg push cwtl inc and inc jns loopne sub dec outsl je outsl bound imul rcr lock cmp cltd out test andb add adc dec add pop cmp bound add or icebp xchg push add dec int pop (bad) mov add sub enter adc fwait bound lret add cwtl sahf mov cmpsl pop add dec mov bound dec addr16 pop adc in shrl jno xchg cmp and inc out bound jbe leave adc pop jae inc idivl push es dec (bad) std push cmc mov lds xchg gs scas bound mov movsl jne jne lock xchg js fwait mov mov leave jl lahf add pop mov push test mulb fdivrs ljmp jae xchg add adc es jae dec jno cs sbb jae into mov popa push test push out dec add adc xchg mov call cmp adc xchg out (bad) mov mov or push jg fdivrs (bad) fisubl jecxz repnz jnp or repz adc push loopne pop bound xchg lods loop fistl icebp fildl adc cltd push arpl xor dec insl mov (bad) cltd mov and sub xor xchg aas orl (bad) (bad) add push insb and loopne mov and jl and mov add cmpsl hlt dec dec mov jmp lahf and cmp js cli cltd bound std insl test pusha add imul movsl mov cmpsl fbstp js xchg jns dec (bad) sub mov lock loopne push and cmc popa popa (bad) dec (bad) pop jo and fiadd inc loop sbb stos lahf scas lahf lret lea ja sbb dec pop or or mov bound push imul cs movsl mov dec pop daa dec cmp js cltd fdivr test aad pop xchg add sbb sbb test push pop ja inc (bad) jge pusha lods mov in shlb je in mov adc cmp jae ret pop pop cs add adc cmpb add fnstenv pop int inc mov sti sub out cmp lods nop adc loope in cmpsb jmp push scas mov sub call orl movsb movsb add xchg rcrb bound xchg ret pop push pop push daa xchg and loopne jns adcb in loope int push pop in xor push mov mov stos mov xchg pusha pop popf and ds (bad) sbb inc and cltd das pop jmp sar fs jmp daa push call xor add dec mov cmp ja push xor pop cmpsl jp sti sub push sti packuswb imul inc and (bad) lahf and daa push xor (bad) fwait cmp pop call or shlb pushf add push es dec inc mov das dec aaa or shll mov lods inc nop inc std das inc dec fucom std lods sub and pop fisubr or xchg outsl cmpl lret ja cwtl lock js sarl cwtl jne (bad) cwtl test aaa subl std and jno cmpsb xchg pusha pop sbbb pop pusha pop sbb incb and inc sub insb lds sub pop and add and std jge mov addr16 std adc push orb popa and test jb pop (bad) pusha lret dec insl mov adc dec cs jns push divb xchg arpl (bad) add and lcall repnz leave mov pop cmpsb fmuls in aam std cmpsb add push scas test outsl sub mov inc insb push pop jecxz leave adc push bound fiaddl push orl movsb cmp inc sub movsl cmp and push out mov fistpl cmp fs sbb dec inc mov push push and xlat mov (bad) fcmovnu and hlt or cmpsb or sbb mov popa bound shl jns divb notl add mov and aad add lods mov (bad) sar pushf movsl or out int push mov inc fucomp cmpsl rorb div mov xchg stos cmp js scas xchg dec adc or pusha xchg pop and lds add imul lret sub outsb cmp repnz jno fiadd xor adc and inc cltd nop mull xor adc jns insl es push js cmc pop xor or push mov and das psubsb movsl loop push jecxz pop push loope jo and test daa nop sti lret mov mov lcall fwait mov js sub jge jo jl pop enter pop leave loope and mov aaa xchg js pop fidiv js pop cmpsb mov pop cmp mov in mov mov dec (bad) out js add lcall push test jge mov (bad) es jne push or jb xchg fildl (bad) cmp ret mov sub (bad) pop mov inc push jbe arpl (bad) repnz adc jp jl movsb sbb and into in mov subl and jmp mov stos mov jb cmp xchg cltd nop mov add cmp sbb mov gs sub mov test js and cmp into cmp lret cwtl ret mov (bad) loop xor jno aas inc test push int3 xchg repz loopne scas jg push scas orl (bad) sbb rclb fnstsw inc inc xchg imul add addl sub push mov sub or add mov push lock jle push nop scas bound push shll xchg cmp push pop test icebp scas add sbb adc pop sub or insb xchg insb cld movsb sub and xor push pusha fdivs or sti mov inc fsubl arpl push lret mov cwtl mov std inc pushf movsl sbb (bad) jo inc add jg xchg jmp dec iret sub inc push nop pop xor xchg xchg std shlb bound adc movsl rclb dec stc mov jno insl push dec add pusha les out cmpsl sub popf cmp or inc out cmpsl xchg mov jns (bad) mov sbb or xchg pop pop incl (bad) lock rcll and (bad) iret (bad) es mov ja mov sub jmp or sub mov xchg pmullw mov mov sbb mov sbbl pop outsb aad jecxz addr16 (bad) jecxz mov jge mov inc pop and out sbb mov in push addb lds and mov (bad) imul fcmovb mov xchg pop add xlat mov std cmp mov dec les (bad) pop lds mov mov pop dec cmpsl inc and sub or dec hlt vmovaps inc sbbl (bad) je dec dec xor sub fs out negl inc (bad) push dec mov sbb push inc push lret sets pop adc push in fistpll dec dec inc dec int insl cmc stos mov popa cwtl stos xchg dec imul leave push ljmp xorb xchg jge je inc xchg arpl mov test xchg loopne stos mov in fnstcw add xchg scas test push add cld ror mov mov sysenter inc fdivs arpl fwait push add or fidiv bound stc mov jge and jns push push xor mov add xchg (bad) and cmp push fsub and push inc xchg add leave aam (bad) out cs and adc out cs bound mov test dec sbb addl and rcll sbb es xchg bound repz pop ss push jge sub call pushf pusha orps stos xchg (bad) enterw test es sbbl cmpsl jge mov pop loopne pop (bad) jge rolb dec fcmovb push adc test pop jmp (bad) test (bad) out ret adc cmp mov adc add outsl and into add add (bad) (bad) jl mov ja pop lds push test jge sbb addr16 adc pop cmpsl push pushf pop mov dec cli xor cmpsl shrb (bad) out mull cmc add push popa (bad) xor (bad) andl pusha push les popa cwtl aaa push inc xchg arpl dec push call sbb outsl dec and lds ret out int3 gs shl daa jecxz cs in (bad) xchg push or aad fsts add (bad) jge pop jecxz sbb test imul ss pop lods insl mov fs jle daa sti xchg inc jno and aam divl xchg in add int jne sbbl daa gs iret inc push sbb cwtl xlat movsb and cltd jl add test jecxz mov push fdivrl fdivs xor mov pop jle and pop pop ret add push popa inc mov jno (bad) jmp sbb xor push stc nop insl je push test rorb dec push xor sbb mov rorb and jo imull ja,pn mov cmpb std adc inc movsl lea rcr xchg pop lock xlat outsl loopne popa mov and add bound cmp or adc in sbb inc fs and stos inc movsl jne andl (bad) pop add imul or push pop (bad) cmp jecxz adc and stos mov daa (bad) cmp cmpsb add data16 loop adc mov or andl in xchg adc xor das int3 jo shlb sbb movsb mov repz nop xchg (bad) lock cmp inc out mov pop mov mov sbb push inc icebp out push mov jle loopne sarl cmp adc je xchg push aaa insb je inc insl inc ret test je add rcll je lock test popa mov insl fndisi(8087 fdivrs (bad) lods xor pop fcoms and and jo dec in mov dec mov test subb movsb daa lret in push xchg jl sbb push push lods aaa sbb xchg xor sahf fisubl popf mov in sub js jmp sub or mov xor mov bound push imul sbb (bad) mov les aam sbb and pop mov mov inc pop popa and and and cmpsl jns and loopne lcall ljmp lea test cmp ljmp lret loope mov (bad) mov sbb adc sar movsl pop and jb fdivr and pop sbb cmc lcall mov popf jp ss push (bad) xor ret cmp jnp sbb push jno xchg mov mov loope test fidivr movsb jle imul jnp jb rcll xchg js ret enter pop adc dec loop popa (bad) insl inc cmp scas add divb fs pushf fsubl jge cmc add dec mov hlt fstpt sub cmc add push jp cmp fldenv mov inc and mov loopne das pop or mov lret adc pusha nop pushf mov dec cmp adc pop fdivr mov add inc xchg and (bad) cmp (bad) cmp or call add push sub dec push test ja popa hlt mov and adc aam (bad) jecxz push cmp pop rorb (bad) imul rcl xor fmull insl xor stc lock bnd pop or loop xor jnp mov into dec inc (bad) push push dec push lret rclb std push xchg (bad) lock jnp fs bound fs push popf xor iret pusha cmp and dec cmpsl xchg add iret mov stos add mov ret fwait pop mov or and lahf arpl push push jnp push push ja cwtl mov mov test pop (bad) dec cmp js mov idivl sub inc lock sbb popa aad lock ljmp imul cmpsl (bad) (bad) js or movl sarb test popf sub adc rolb ds enter inc push jg adc shlb out adc inc stos in sbb inc or dec repz pop rcll es in fsubrl mov sub iret or mov cwtl (bad) xchg sbb jbe es fwait xchg lock movsb outsl adc xchg test and push pop bnd adc jae push and mov fiadd mov dec cmp adc shrb ret adc or insl jecxz pop aaa sbb mov pop daa add jbe push xchg out ja (bad) (bad) ficomp loopne pop (bad) mov mov and daa scas xchg mov adc scas sarb add nop sbbb pop out jle pop mov in loopne cwtl jo shr adc push scas iret nop xchg testb inc pusha shlb inc lods test out arpl aaa adc out sar (bad) sbb (bad) les not add push or (bad) mov fs xchg fisttp out movsl and bound and xchg mov mov out dec inc test dec inc dec lcall iret sbb (bad) push inc pop data16 rcl xchg mov mov bound mov data16 out stc lds out adc int pop imul mov pop pmaxsw pushf imulb mov dec bound (bad) aam mov popf test loopne das in andb push cmp les addb add fidivl test repnz cltd push xor adc and movsl xchg adc in mov mov dec lds test sahf cmpsl sbb or incb mov rcrb add mov xlat pop sbb addr16 adc icebp push mov faddl or fcomps sub push inc stos push adc std adc mov (bad) xor push fisub stos fnop fwait std jno les mov int lock push iret ret leave adc loopne lahf dec popa iret mov or mov insb mov ret out mov loopne inc sti push ds mov mov cmp dec test inc mov and mov addr16 popf std clc data16 lods jmp mov xchg and add loope pop loopne sbb outsl pop bound movsb imul mov arpl ja fnstenv daa pop mov jnp push mov mov pop xor add push push out cmp fistpll rorb imul movl push dec mov push sub dec cwtl mov sub jb addl movl cmp jecxz (bad) xor adc sub xor jle push out sahf xchg imul mov and cmp das cltd or (bad) cmpsl xchg stos idivl js out repz jg ret mov push fsubrl inc aas pusha (bad) or lahf mov addr16 lret jecxz xor dec mov jb js mov ds rcrb stos clc and data16 push cmp roll sbb add sbb hlt inc add xchg fadd xchg outsl sub sbb inc push push mov add rcrb leave popa jecxz rclb jb xchg sub bswap (bad) call insb fnstcw sbb mov std insl jle and mov dec mov add mov aaa data16 sbb add pop pop push jns xchg cwtl push pusha pop jg cmp in fdivl fisub out test bound pusha sub inc push aas adc leave sub rclb rcll pusha fidiv sub cmp test inc cmp pop and pop pop pop mov xchg movzwl jnp (bad) popa xchg repnz jae cwtl mov xor sarl xchg loopne or lret sahf (bad) movsl sub xchg incb pusha outsl add and imul imul in cli inc aam gs sub test imul or and fwait mov xchg imul test sub jg out xchg or imul inc pop xchg in xchg rcrb arpl mov es push out jg gs test push ret addr16 lock push (bad) pop cmpsb adc ss sbb add push inc out mulps test push fisubrl fwait or imulb add pushl ror std orb add and pop sbb adc (bad) popa fs sub pop rorl into mov inc sbb andb jnp inc add loope mov pop shlb (bad) lret jb adc sti (bad) cmp mov jb jb mov pop push mov jne lds test xchg xchg ret mov cltd jmp push pop adc aaa out faddl ljmp mov and test pop pop arpl mov (bad) push inc cli stc inc xchg jl out jl xor add add pop mov mov dec mov (bad) out cmpsl decl imul mov shrb iret sbb int3 adc push push data16 test jecxz (bad) and arpl xchg adc sbb call dec add push in mov incl mov pop xchg (bad) flds outsl adcl (bad) xchg test dec mov sbb pop sbbl arpl lock into lret jp xchg call cwtl jge add imul subps test std mov outsb add jle push shll jle add and pop mov dec cmp (bad) jbe (bad) mov pop jne aam aam jge inc sbb movsb xor cli cwtl inc and fiaddl lahf fiaddl in (bad) in add rclb lods mov lds fnstcw shrl bound fstl lds xor inc popa jp aaa push mov rcrl cmpsw or pusha xchg ret inc jae out pop sbb aaa adc loop fwait pop nop pop pop xchg cli pop nop pop fiadd adc dec into and popf inc mov push inc stc cmpsl pop cmp hlt bound adc cmpps aaa mov sbb mov and pop nop out sbb mov aas dec call ficompl pop jl xor cmpsl mov lea pop (bad) mov das loopne push xchg jl add ja pop mov bound ret sbb cmovg dec inc add mov xchg daa cwtl and pop mov inc cwtl jns or mov std imul popw inc xor xchg pop gs pop xchg ret inc pop adc cmpl and aad das test out xchg (bad) ljmp cltd test mov aas sub pop cld cmp pop das adc jne (bad) mov push add (bad) hlt pusha dec lret sbb stos sahf lea loopne add xchg xor mov and (bad) ss jae lods test pop sti and push pop pusha in or dec aam jns fcomip inc (bad) mov mov mov mov (bad) scas mov pushf cwtl aaa nop inc dec xchg pop popf xchg mov xor xchg fidivr mov mov cmpsl insb jne es orb fiadd mov mov pop nop jnp pop sub xchg dec or dec jnp xor jne adc xchg fimul das iret test cmp jmp inc es cmp xchg icebp or jnp push loope testb lahf (bad) dec jle shr insl loope cmp in cmp jl pop pop cmpsl sbb pop (bad) lcall cld popf jecxz popa dec jl data16 es mov and sbb testb popf test dec add nop adc outsb cmp shlb push pop mov daa jnp inc inc push mov xor test ljmp fiaddl sahf sbb aas addr16 mov mov pop test bswap pop addl cmp addr16 into adc mov out lods sbb mov or mov dec push xchg mov add sub xchg mov das fs jmp xor test mov xchg and test inc lods sbb xor xchg xchg inc pop in bound sbb pusha xchg fstl and rorl imull xchg mov pop cmpsl sbb mov and pop inc stos push mov pusha cltd aaa scas pushf faddl addps jl into pop pop pop and push (bad) jmp mov sbb dec mov add ja (bad) pop sub dec or jg jns jns mov in sub pop loope cmpb mov sub jge movsl gs adc test jne and aaa movl in sbb insb cltd jno sbb cmp push or or and dec cmp dec dec fdivrs out dec cmpsl adc movb inc iret imul jg adc movsl add sbb pusha dec sbb test outsl xor cmpsl shlb fsubrl fsubrl add movsb inc fisubl (bad) dec add mov cs test xchg xchg dec sbb jo inc loopne inc ret and and daa mov push jo mov mov push enter test sbb lea leave std lds out pop out lea outsb mov stos outsl and arpl adc jle dec adc pushl sub and sbb ret out or idiv out jecxz dec dec add lds pop push mov jp xor jge xor fs inc aas (bad) gs scas add mov loopne shlb int3 mov mov shrb jg xor jns bound (bad) push mov pusha (bad) mov mov jnp loopne loop test mov pop insb imul xor mov ljmp aas add jmp xchg aad pop push add jbe push stc pop and and inc jge cmpsl xchg lock cmp xchg add ja cwtl loopne aam ljmp pop mov and rolb call xchg adc cmp pop incb cmp jne or sbb sub jle dec lret sub xchg pusha push pop xchg or inc sbbl xchg loope lock movsb mov mov dec cmpsb pop test int3 lods loopne bound or jp xchg addl push dec and xchg dec adc out pusha test cli imul sub inc (bad) xchg and adc mov ret nop cmc cwtl push inc adc pop cwtl dec fildl and adc mov inc mov out mov sbb push andl inc dec (bad) and pop mov loop mov popa int in jns test jl mov or jge (bad) mov std dec xchg pusha lods cmc xchg sbb sbb jns dec mov bound and xor dec bound nop sbb adc enter sbb mov xchg mov xchg fwait aam or lcallw xchg xchg daa test jmp in sbb dec xchg pop adc fistpl (bad) popa in scas push movsl (bad) inc mov xor sub or mov scas out lret pusha inc sub loopne mov popa js cmp data16 sbb in call test (bad) dec push cmp decb cmc scas mov repnz push clc mov mov (bad) sub aaa add imul cltd lcall rol inc pop xchg dec mov pop mov jns shlb ds add repnz mov nop jmp enter pop orl movsl andb jl dec and push lret inc (bad) push pop fptan sub adc mov xor pop popa sub repnz test mov (bad) (bad) cltd call cld and dec pop adc std or out test (bad) adc scas insl and out mov sbb mov mov ficompl xlat lea in jno adc push lds xor data16 ret and scas dec xor adc pushf lods loop dec daa sub into push mov lods lahf rcrb jmp jae jge js sub xchg xor pop (bad) or inc xchg shll negb push daa mov add cmp stc bound push add mov lcall out imul pop and fbld adc jmp jno cmp test cwtl xlat lea pop jmp xchg data16 test (bad) or cmp movl xchg (bad) lahf sbb or outsb imul test mov ret push sbb in jg xlat push es lahf bound jbe cmp add pop push xchg bound jbe std adc pop pushf xchg loopne data16 add daa mov xchg test push xor cmpsl pop cmpsl cwtl sub mov data16 (bad) pop loope jmp inc mov mov movsb xchg xorb xchg inc add mov imul mov addr16 js adc js iret std jo xchg stc stos adc dec daa mov mulps je push jns (bad) fs popa mov icebp push in xchg adc popf sarb es int3 fisubl xlat aam inc inc xchg addr16 pop gs out sti cmc and jnp pop cmp cmpsl and or mov es (bad) cmp (bad) lock mov mov adc cmc and adc nop push fsubrs add das ret bound cmp adc xchg out nopl out xchg mov test jle jns bound pop cmp pop std scas (bad) sbb scas adc leave or mov out mov mov sbb (bad) loopne dec rorb mov aad sahf mov push dec rolb fwait pop outsl jle adc loope call add mov nop inc (bad) push push lea cmc push jge pop gs sbb inc xchg jo popl sub pop rolb sbb lcall ja ss out ja in jnp dec xor mov xchg faddl add adc dec cmc xchg inc and and pop les (bad) lock dec fwait imull or (bad) mov pusha sbb dec loopne xchg xchg test pop jg xchg stos testl cmpsb js loope repz adc mov xchg and data16 mov jecxz bound sbb sub mov aaa dec pop les inc ret test add dec push aad pop sub pop dec adc mov daa call in ljmp shrl arpl mov imul imul out daa pop data16 lret push mov bound mov dec bnd mov pop gs mov hlt data16 adcl movsl cs popf pop lea pop loop mov push mov push mov int test (bad) pop xor call mov mov pop cmpsl out std aad vmovlpd (bad) xor mov xchg pop scas pop push repz pop call aas and arpl int3 icebp dec add mov and or mov add cmp je mov sbb pop cmp shlb jge push inc jge pop std loop jo in aad jo popa sbb add lahf (bad) fisub cltd std clc sbb in repnz push xchg outsb dec add scas add dec in (bad) dec cmp test xchg lahf xchg ret mov pop out sbb xor sbb sbb mov lea and sbb addr16 bound mov xchg cmc mov shlb dec jae fs daa and lahf sbb add cmc insl mov cwtl mov pop ret addl loop (bad) pop mov inc icebp pop or sub mov pop xor or and lock xchg int pop mov test push mov mov in adc add stos jno mov test lods ja or xorl fstpt adc popa gs mov bound or scas and jns (bad) out pop call xchg test mov fmull aam (bad) test ret mov or pusha bound pop dec cmp cmp shrb cmc int and clc and stos or (bad) in jge test lret movsb mov dec xor aaa inc adc lcall cld and jo (bad) shlb pop push mov outsl xor push add adc sub xchg or pop xor pop pushl pmaxsw lods imul jg adc gs mov cmp testb or pop insl orl fldenv mov mov xorl insb cltd mov jnp xchg cmp out add data16 out pop cs jmp fdiv cmpsl daa mov pop (bad) jns aaa adc in and movsl sub (bad) mov fisttp jecxz cmp cmc mov fdivr cmp pop dec push jns add mov or inc in rcr lahf mov pop push das lcall cmp sbb dec outsb lret pop ret fst popf or je lods sbb pusha ds sbb (bad) hlt jg inc or mov jg xorl xor bound add jg dec loope bound in insb test push jno clc popa jl divl pop inc push (bad) ret pusha push cmp out mov mov jbe mov bound xlat sti adc leave inc cli es lret scas cmp cmp xchg lods sbb inc or mov xchg je jg push pop or rcl jbe add (bad) int push dec nop cmpsl (bad) mov inc jle add push ss pushw shlb imul addr16 cmpps add scas sbb pop test dec pusha xchg push xchg pusha dec lock xchg xchg and pop lods xchg rcll fbld inc pop daa out gs stos push xlat scas mov out pusha push xorl lahf mov aad sbb sbb xor sarb gs lods xor mov sbb cmc and (bad) push pop jle pop and stos adc lods xchg loopne push test mov bound addr16 mov dec push data16 inc push ret into push jb cmovnp xor gs in xchg repnz inc and insl and rolb pop scas sub iret leave push cmc in sarb inc cs sti xchg (bad) inc imul mov mov aaa push sub loopne xchg fsubs in mov xchg and inc or gs xchg mov cmp and xchg mov nop jae push clc arpl addr16 xchg sub out push and xchg mov ficomp inc jle dec imul jns add push (bad) ljmp pusha mov sbb out stos or dec push daa stos iret mov hlt (bad) or mov (bad) xchg or pusha int dec aaa dec cltd pop js and popa decl (bad) mov data16 (bad) fbld test js lods outsl and popa sub movsb int cmpsl inc jge (bad) loope xchg cmp or push fidivl dec (bad) inc sub cmpsl cmp (bad) jl (bad) out fiadd sti dec out aas je fwait orb bound ret push scas push sub stos lahf xchg and push sub mov movsb addl or pop iret mov bound xchg lods add popl pushf fnclex mov mulb xchg push in inc sub popa adc add ja in adc and inc push push xchg (bad) fdivl shrl or push iret mov pop and mov in inc lods adc cmpsl inc cmp pusha cmp jae in jnp test aas (bad) and lock testb pop cmovns or loopne movsl in popw int js jne fstps pop add test push jecxz or and and mov loopne insb pushf imul popa movl and mov adc and mov push cmpsb call pop cmp adc enter cltd jmp (bad) je cmp or call ror rcr xor mov rcrl jae into out lods mov leave adc or ret push jle adc pop push jae movsb fistp xchg leave or cmp sbb mov ror xchg sub pop jno sahf add arpl aad and xchg pop daa adc add faddl pop out fadd cltd cmpsb out bound js aad loope popf mov and cmp dec subl xor rol negb mov into fsubrl lock push imul stos xchg fs mov (bad) fcompl rolb out and frstor and in xchg repnz in and xchg pop lods sub js adc in in cwtl bound cwtl sub mov inc movsb mov rolb inc in jecxz dec push aas jns pop loopne push cld mov or pop inc cltd xchg mov out jne jno in jp push jne ss hlt sti lret insb decb loop add insl jns jnp inc pop insb adc std push imul push fsubl push incb (bad) nop xor pop mov xchg jg fcoms push sub mov repnz addl xchg sbb jnp dec adc mov test dec pusha enter cmpsb js add lds lods inc scas inc jle,pt stos cmp mov mov push mov mov movsb jecxz daa fidivr hlt inc gs cwtl sub inc jae repnz cwtl jo push xor cltd cmpsb xchg mov jnp inc gs mov xor sub jae bound lahf mov xor mov and inc iret mov sub push imul fsubs pop dec push pop push pop push outsl mov mov push cmpsl xchg cltd mov or push std mov orl pop inc mov cwtl mov cltd bound mov dec (bad) std (bad) push outsl mov ss mov js inc inc daa pop cwtl xchg (bad) mov cmp ja test lds sub pop nop enter mov xchg and (bad) dec xchg mov aaa fstpt js popf dec cmp pop adc inc pop jmp xchg push inc dec gs es fcompl stos test mov (bad) xchg xchg jo cld out insl inc and cmp mov pop xchg push mov jno and lods xchg sti xchg shlb sahf jge xchg (bad) pop and pop pop pop jno jmp nop and cmpsl lcall hlt mov sbb repnz insl sar pop test jnp sub cmp xchg into jne movsb jl sub cmp fwait (bad) loope lcall call sbb adc or jmp insb test popf pop sub (bad) add das icebp lock sub and in incl addr16 jns test ret out xor push insb jbe daa pop ret mov pop add jne (bad) imul iret push cwtl xchg xor repnz addr16 pusha and xor jge and outsb insb mov in sbb mov adc sbb lcall xchg sbb gs mov sbb add mov and ljmp jle ss mov or loope daa or xchg gs jle pop pop or pop adcb xchg add cmovge out es hlt sbb (bad) enter add lods daa sbb pusha cwtl data16 test inc insb pusha xchg ja push xchg iret adc adc out (bad) negl lea and xchg pop dec mov or pushf cmp adc mov repnz pushl cs mov aas mov (bad) out in or pusha shrb xor stos idivl hlt ljmp cmpsb js jl test cs cwtl in mov mov mov mov popf sbb out insl movsb mov pop cld xchg or sbb repz ljmp push push push jae jecxz dec fsubs clc add out cmp lret gs inc mov nop inc inc pushf aaa add pushf js aas loop mov fstpl iret pop and les mov mov bound jns jge fadd sbb js pop faddp jl mov lcall loopne adc out xchg ffreep (bad) bound std dec mov subl and jmp daa xor adc (bad) imul dec cmpsl jecxz int fstps mov daa mov sub aam push loope or testb sbb movsb cmp sbb movsb int3 or outsb cwtl pushf xlat inc sub ss jp movsb and xor ss sub and daa inc mov cmp std lock ljmp jle xchg sub sub and push clc sti leave rorb scas test pop imul pusha jno inc and xchg and adcl test sub xchg iret add lahf inc mov cmpsb xchg push rorl les mov fidiv xor notb and sub cmpsb mov inc adc roll or cwtl cmpsl add dec fnstcw inc mov and popa or shrl push hlt xchg in and pop pop push je xchg push ds nop arpl dec sub mulb dec jb mov idivb or sbb loope add aad xchg sbb mov mov daa pushf andl repnz popf pusha jae pop cmp cmpsb add adc ljmp cltd mov fcoms mov jmp jl pop cmc pop loopne sbb aas add lret push aas pusha test inc (bad) mov xchg adc pop sbb fwait lods nop xchg dec sub jno rolb jg sub add movsl inc lods gs into jl and and lahf lcall push pop dec adc pop adc inc adc sbb or ja xchg pop add inc inc push jle dec pushaw jge jne ret js inc sbb adc dec (bad) cs insl mov sti jle push js popf push bound pop pop jecxz cltd rol pop aaa andb sub adc andb dec shll add cs xchg lcall ret dec add in push mov leave pop inc jl and push mov cmp lods inc cmp jle sub dec jmp out sbb addr16 xchg (bad) adc pop push call call sbb (bad) test mov test popa test fidivrl inc sahf mov loope dec mov inc jne jmp add setg (bad) cld cld nop pop xor push jp xor dec mov sbb or cmp (bad) arpl gs push call test jmp pop movb data16 dec inc xchg inc sub test aas add dec jnp lds mov xchg mov icebp and sti repnz shld mov (bad) lods clc dec bound std aaa ret shll cmp daa fdivr sbb add push jmp sub pop xchg jge pmullw stos and das enter jnp sub nop mov movsb dec test lods ror dec in into and pushw cmp nop and xchg push dec cmc shrl dec and cmp pop outsl (bad) enter ret push cmp inc stc mov nop adc in xchg fsub gs dec leave cmp xor stos cmpsb stc or pop sub adc or (bad) in xor das mov or and mov and mulb adc inc xlat dec dec sbb scas mov mulb dec ja jmp sarb mov lock leave loop cmpsl ficom and test into jg andl jp xchg jo bound (bad) stos (bad) test cmp inc rcrb cwtl lds dec pop scas test xlat call outsl int cmp lcall mulb lock nop fldcw or sub pop mov or popf es lcall add inc lods movb rcrl orl orl add inc add scas pop gs mov (bad) lret cwtl addr16 cmpl xchg daa inc js sub fldenv lea dec lods mov ja dec daa test pop mov and mov jmp or jne mov stos (bad) pop bound adc (bad) std xor inc sub jns outsl or adc xchg pop aad daa arpl insb fild push mov jns or dec sub arpl imul icebp repz pop incl cmpsl xor inc push mov in pushf or sbb adc out or loopne lds in jnp and frstor adc stos insl (bad) scas orl inc mov jge push mov jl xchg cld arpl pop out dec mov scas rorb (bad) mov out mov add cmp pop test mov lcall xchg mov test mov cmpl scas mov int es insl adc fsts (bad) mov mov movsb xchg pop mov dec rclb jo cmp jle out adc movsb ret in mov push pop sub rclb dec cld fnstcw push test pop inc inc repnz imul bound dec mov in into mov (bad) adc into pop sarb loopne mov wrmsr inc xchg (bad) pop lds xor sbb fs ja lea or test (bad) (bad) mov dec xor (bad) clc add and lds loope sbb pop xlat or or imul addr16 mov mov cmp push push (bad) mov stos adc jg inc push cltd bound mov cmp inc arpl pop jge scas mov orl js mov xchg pop xchg xor std add insl sub aaa ret aaa js fisubrl loope stos add cwtl adc push cmpsb movsb mov test imul mov paddw negb test dec xlat pop xchg mov push rcrl sbb push pop pusha cwtl inc cltd popa movb or addb and add mov xchg inc adc adc cmp addr16 (bad) mov sarl rolb cmp jle mov sbb out mulb sbb sub insl popa fs mov jbe inc push or xor cwtl out inc lds xchg adc aaa ja pop push mov push iret decl lds xchg fnsave arpl cmpsb bound mov cltd lcall push sub xlat and bound aaa cmp mov (bad) mov repnz inc jb shlb sub arpl inc lret stos or sub negl adcl mov xor jle adc xchg jl mov push mov mov mov scas aaa fiadd and lds adc push cmpsl jb scas pop fcoml sub insl out addr16 sarl cltd xor fcompl push cmp push push push lret call out sub popa dec adc ss jno mov stc repnz adc subb mov mov popa or movsb ss orl or loopne test cmc and dec push push jae dec sahf fidivrl cli scas icebp xor pop xchg cld sbb cwtl push loop push add pop aad and push pusha lea cmpsl imul push test (bad) js stos pop bound in rcl pop adc sti dec pop sbb mov xchg xchg decb add popf push jb lods loopne lds scas push fs fs mov pop xor (bad) xor dec cmpsl fimul adcl mov mov add cmp mov dec or mov and (bad) std mov push insb call (bad) addr16 push jp daa jno bound arpl shll pushl pop data16 (bad) insb dec rcl jge adc mov mov decb fbld push in (bad) repnz data16 addb or test add sbb add adc add xchg out xor lea popf jmp mov int cmp add mov pop inc mov push lea cmpl mov jmp xchg xor inc enter pop jg nop mov xchg imulb sbb sub pop out sbb mov test test pop aaa dec (bad) es lea add scas mov xchg push jmp push fildll std push adc dec fwait pop cmp mov push cmp hlt leave pop rorl mov ret mov sbb xor add push jnp imul xchg test pushf jecxz add sbb sbbb jno out int3 xor daa mov jecxz dec push scas cld xchg pop add cmp test inc sbbl jnp sub std or jnp addr16 xor out fs movsl mov xchg mov lret in adc bound addr16 jl call dec sub dec cmpsl xor loopne dec jno mov shrl cmpsl orps nop ljmp loopne rorb sbb scas fs in sbb adc xchg mov ja imul popa out jnp iret (bad) pusha arpl pop mov popa lea ret add xchg cwtl dec xor sub out push pop inc popa pop pop mov cmp frstor jg inc subb imul xorl and dec pop iret lahf xchg cwtl orl imul aas push xlat arpl inc clc lea xlat in cli adc clc bound rolb push xchg lods ja scas ret inc and movsb inc repnz pop iret leave arpl inc sbb xchg push lea rcll stos pop push dec mov js sbb add repnz inc dec push out fsub mov lcall fs pop fbld (bad) es popa mov mov pop and stos push jecxz ljmp inc leave mov mov dec bound (bad) sub xor lcall sbb jnp pop add mov push pop gs (bad) xchg xor pop std enter popa bound adc or std push testb sti ret inc adc fadds fneni(8087 mov sarb (bad) repnz cmp dec pop mov xlat aam call popa mov adcl pop pop adc dec and out xor std xor into popa bound mov xor jge jmp out aaa xchg sbb iret xchg stos fwait push sbb dec and dec notb out jle and (bad) and dec xor pop push imul xchg mov mov mov push pushf adc sub addr16 clc and pop add ljmp mov push shrb stc popa imul xor ja cmpsb iret and cwtl loope inc sbb imul dec inc leave pop or and dec out cmpsl or mov popf adcl jne lahf xchg jno pop stc lcall cltd ss in push sub mov xchg lcall jno fcmovbe shrl loop sti xchg (bad) popa mov jg xor hlt push imul loop mov pop addr16 lods jmp jne aas inc rcrb adc mov cmp or mov jbe sahf mov aaa sbb gs pop fs xor fucom mov out xchg or ljmp push dec test ret loope loop (bad) test xchg test or mov xchg cmc adc gs mov mov cli inc cltd pop adc push sbb and lods outsl test repnz mov pop js cltd jmp out scas fisub xchg iret jns pop cmp mov outsl sarb (bad) in add sbbl pop ljmp xchg xchg les push push and lea push jg inc xchg imul imul xchg arpl sub mov bnd add push inc hlt imul mov xor sbb jae js insl lret cmpsb gs sbb cmp pop in into inc bound testl or bound das orb lret daa add popf out xchg (bad) dec mov (bad) out mov popf aaa xchg out or in in movhps lods movsl fisub daa fsubs cmp stc or mov dec sub cld test sbb bound push nop jnp std add arpl je (bad) sahf and sub ficompl mov push jle inc sti cltd mov dec mov inc dec sbb adc cmp jbe call insb iret ss mov (bad) pop jnp sar xchg test int cmpsb xchg mov gs mov rcll (bad) jno popf loop sarl bound icebp clc (bad) hlt adc adc enter (bad) bound cmp clc xchg mov push xor mov sub push jne jne pop jo and inc pop mov ljmp and inc loopne imul or int iret adc jno fwait mov std out (bad) mov push repnz movsb into mov xor jns,pn add sarb cmp dec xchg adc push sub out dec mov jle add ret sti lret sarl mov pop jge ffreep into orb xchg jns xchg mov cs mov cs lds or dec pop mov iret pop data16 sub sbb push bound push nop popa mov jl mov shrb (bad) dec bound push and dec nop xchg pop (bad) or push mov inc pop xchg mov pushf xor es data16 pop movsl sbb push outsl fs pop jb pop cmpsl adcl and cld scas mov pop (bad) es fdivs aam jle push arpl bound (bad) dec cmp es out movsb jecxz xchg pop bound adc fstp inc push add adc (bad) mov xchg lds in sbb nop cli (bad) fwait nop mov add loope pushf loop xchg add in xchg mov jmp pmaxsw (bad) repnz dec (bad) in mov std mov nop inc out stc xchg popf lock sub sub and inc mov and xor xchg pop into (bad) sarb mov jb push mov mov test loope add popf pop mov (bad) rolb fsubl mov xchg mov mov ss into pop js and lock jmp jno lods (bad) shll stc adc mov mov jmp xor ret mov cwtl and imul add jno aas pop (bad) jns mov stos sub add repz data16 (bad) cmp sti dec js push je push rcrl iret ret pop fmuls sahf pop mov jbe pusha cmpsl inc dec cmp adc dec orb add lret in or int and xchg icebp adc cmp cmpsl and sbb pop rcrb push mov stos sbb sbb in imul in test push sub cwtl adc dec inc test cmp test pop cli imul mov add add pop push fsubs arpl roll mov xchg pushf cwtl (bad) cmp scas mov loopne mov and pop sub addl add pop cmc ja or imul out outsl loope rcrb sbb and idiv repnz inc cltd out faddp add sbb inc add test enter js shrl push xchg cld movsb cld out pop dec repnz xlat inc clc lret jp repnz pop (bad) xchg mov push sbb (bad) cwtl sbb inc dec ss adc sub leave and dec jae in mov xchg fadd sbb scas xchg inc push mov mov fldlg2 and fdivl mov and lds out cmp (bad) xchg push out les out lret sub std jecxz mov addl (bad) daa mull imul hlt aaa mov jae cmp mov sti scas inc mov push pop mov xchg insb pop xchg inc iret leave mov out inc mov cwtl jl add cmc dec (bad) pop sti cmp xchg shll sub iret mov mov cmp psubq cld and iret or xchg roll cmpsl jne out mov or xor test xchg xchg push xchg sub mov aas arpl iret inc cltd lcall mov insl mov (bad) daa cmp clc adc mov pop mov dec loope sub lods fisubr fisttp pop test push lea repnz in xchg xchg xchg push repz pop or pop dec add pop ret scas or or xchg mov (bad) or bound sub out adc loope dec pop dec and test add pushf (bad) mov jo cmpsl cmp jl out sub xor jae cmp out movsb into pop ret imul shll sbb push mov jle xor pop into cmpsb mov addr16 (bad) dec int3 inc mov jno cmpsl loop popf adcl and cmp neg sbb popa (bad) loopne aam loop test jle jmp mov sbb nop dec add or mov cmpsl xchg shll in mov adc popf and cmp popa aam test fiadd popa pop ja iret pop cmpl add jnp pop dec jge (bad) daa imul and jne (bad) sbb dec and hsubps lahf (bad) inc nop out loopne mov shrb push gs loope in test (bad) out push ret add xchg push xchg jnp daa add mov xchg xor pop and xor xchg ret jns addr16 fadds rolb sbb mov cmp popa add add sbb dec mov mov enter repnz ja add prefetchw xchg bound out inc xchg ffree push lret ficompl fcomps mov push cmp dec push mov push loopne loope das (bad) push jmp xor and int popa mov ret iret mov or inc inc (bad) in cmp mov cld cmpsl cmp scas je popa mov cltd pop pop scas rorl stos dec in adcl adc jns call sbb data16 jno mov add sbb sbbl sub jae bound mov pop pop adc mov ficomp push jnp pop jmp inc push out sub jb adc and cs and loopne shlb pop dec and and dec dec xchg je cltd sub add adcl push push das arpl es pop inc adc (bad) mov inc mov jne clc adc loope pop divb and mov or fsubl cmpsb jl push mov mov inc test outsl std adc push leave orl dec (bad) movsb fimull rcll dec daa pop adc loope fucomi cwtl test cmp mov xchg mov cmp push out lcall clc and test cmc push or jecxz js ja cld addl inc in push clc es cmp shrb int popf hlt jnp test sbb fmull (bad) test call add test out daa push xchg cmp imul addr16 pop cmpsb push ficompl dec clc push push jbe in pop pop xchg aad icebp mov stos and fimull inc dec dec adc cmp clc fs movsl popa mov push fiadd sub std negb out xchg add inc cmp arpl sahf jno ficoml or and and in lods movsb xlat mov mov mov xchg cmp sbb movsb dec mov push xor push sbb sbb pop fs inc push sub (bad) add jecxz dec mov add ljmp mov lods cmp xcrypt-cfb cmpsl fs xchg pop fsubr pop push into jmp call xchg push sub pop sub test imul nop rorb sbb rolb or add loopne xchg fldl outsb xchg in dec and and nop loop addr16 das ret inc push dec mov push pop mov adc sub pop xchg push daa fisub bound fisub push cwtl adc lahf add fwait pop cmp lret clc add lds adc pusha push cwtl addb pop dec setns clc xorl popa roll inc test xchg xchg lods dec adc fdivr cwtl (bad) int mov (bad) xor add sbb and pop mov jne jo or and pusha je outsl inc cwtl and pop jge aad jg and (bad) mov inc sbb mov or adc roll and push fisttpl das pop pop or test stos xchg cmpsb cwtl clc fs popf addr16 sbb sub xchg xchg dec scas and pop aaa daa adc movb jl lods cmpsb push bound pop popf addl test xchg popa bound jns imul pop inc or rorb lds movsl nop test out scas andl push mov stos push mov mov push repz xor mov scas cwtl cld pop ret sarl mov aam pop cmp (bad) jmp adc mov mov rcrb ret adc xor and mov mov add jb xchg pop and sub dec lcall lods push rclb sbb add (bad) (bad) (bad) mov popa adc mov lea pushf push pop (bad) push inc pop cmovge test icebp out and in add xchg sub shrb rorl or cmpsb movsb mov loop add mov xchg push mov cmp and stos mov gs je (bad) iret or fnsave sbb data16 dec xchg enter dec inc adc jbe divl out add cmpsl jmp push (bad) push adc or push jns dec sahf (bad) sbb fisubl jae adc ret into test rorb and mulb imul pop ret icebp push xchg and and insl and jnp dec outsl push into cltd test out and addb (bad) dec jmp and scas jg iret adc push (bad) push jae std adc or nop pop jo and sub stos lock retw sbb (bad) pop xchg popa test inc push call adc (bad) call adc je test outsb push nop call and (bad) call jns loope adc pop xor xchg mov jo iret cltd jecxz add sbb lcall push adc adc shl or xchg and mov jno jge lds andl mov (bad) jo jns pop dec arpl lahf inc sbb popa in cmp pop in add push sbb mov adcb sub addr16 push (bad) ja xchg (bad) xchg mov sahf adc pushf inc inc loopne test add add mov lds popa imul scas inc bound inc cld ljmp into push or xor add adc std mov xchg add lcall mov inc sbb outsb loopne pop cmp negb add push pop or pop mov sbb mov std movsb add subl icebp lcall mov pop repnz cmp cmp cmp movsb cld mov inc lret push pop clc dec sub insb sub mov negb adc fdivs daa sub xchg lret xchg mov and push xor xchg adc in stos aam shlb pop repnz data16 xchg jl pop test adc popf cli pusha dec xchg inc ljmp gs jb pop xchg sub lret add push and cltd push inc adc inc jnp nop cmp pop xor scas xor mov cld sbb or mov (bad) insb mov fs fwait adc sbb mov leave cwtl xor xchg std adcb stc sbb xchg mov ljmp push jecxz in test mov pushf mov inc popa mov jl icebp mov sub cmp pop dec arpl add scas das stc repnz ret call roll repnz xor dec pop push mov clc decl cmp popf push mov push pop xchg mov sub cmp imul xor mov (bad) or mov mov pop lret mov (bad) lret shll loopne dec stos call cld xor test test clc inc ljmp cmp inc sub cwtl mov jne add dec scas and pusha push add and mov test aas mov sub inc cwtl (bad) cltd nop adc jecxz jae and dec mov cmpsb sub and or icebp dec cmpsb sbb (bad) adc xchg fild push pop xchg mov mov mov sub pusha cmp xor xor cwtl rclb mov jg jmp jecxz cmp js xor push loop inc xor stc loop jmp pop loopne sbb cmp bound out nop xlat test cld lock xor jl ja aaa pop cmp lock in adc inc fadds fisubrl pusha mov lret cmp sub inc test mov aam inc cmp iret and les jp sahf push in mov adc lods es dec jmp sbb sbb mov xchg insl loop dec inc mov pop cmpb pop movd lock sbb ds push xchg xchg mov aaa pop rolb loop mov xchg fwait pop xor (bad) test dec (bad) daa cld jmp pop call mov shlb push aas sbb ljmp xchg pop adc xchg pop or mov mov cmp add xchg xchg lock frstor test mov cmp jmp lods jecxz pop (bad) xchg jg (bad) in bound jbe jl dec adc xor mov pop push jae or bound cmp mov pop outsl test cwtl mov cmpsl inc out dec or movb cmpsb inc pusha xchg inc paddusb js add mov jecxz cmp pop imul bound push movsb out ja les mov dec cmc jae add sub lods sbb std imul popf enter xchg push jle fdivrs mov daa mov (bad) fidivr dec addr16 mov or daa pop dec xorb or adc rcrb pushf mov dec push mov loopne mov sbbl jle clc jbe jnp jns (bad) and fsubrs repz push ret xchg mov fwait push cmp lock and pop push adcl xor sarb cmpb xor dec pop dec pop insl nop add test xor pop pop nop dec js data16 or sbb sbbb push iret xchg push in data16 pusha pop lcall fcoms fs or push mov test and aaa lods jp inc jnp out xchg add dec pop fist dec movsl mov sbb push jmp js daa pop lea pop pop pop das stc hlt push pop push pop bound (bad) push xchg mov jmp outsb pop in and test mov int mov mov add enter push mov pop gs lcall jg mov daa sbb scas or lock mov sarb pop and sub adc cmc adc sub subl sbb popf adc cmc mov inc cmp mulb lea push dec addr16 add daa cld pushf jb pop dec fwait and and mov inc jge in aaa sbb xchg xchg mov pop scas (bad) mov mov and insl and dec stos out test aad shlb jge pushf mulb cmp imul adc (bad) call pop push pop cmp jns push jp adc inc xchg jns daa loop push xor popa repnz or jge clc lahf test or xchg out or psraw arpl push fidivr (bad) nop in out mov ds push rcl pop shrb mov xor add insb mov pop adc shrl mov cmpsl xor cmp jae sbb jge adcl into mov es out mov std sub mov add and mov or mov mov xchg cld lods mov outsl pop bound mul push xor pop dec mov pop cmp jae sbb cmp cltd es dec jno sbb js cmpsl mov pop test mov or sub xor xchg dec jg add pop dec xchg lock daa shr dec adc out inc jns jl sbb fdivrl xchg add xlat ja push mov xchg scas test jmp or sahf push pushf inc inc push addr16 mov pop cmp lds pop xor jns xor int3 xor and std popa or xchg jns aam push mov mov dec and sub ret dec xchg inc adc rclb fimul dec loopne dec daa loope adcl add sub fld daa xchg cwtl mov int popa sahf or adc add enter and sbb and shrb mov mov lcall sub push daa push adc bound sub add add (bad) and insl js lret lods xchg cmp sub push movsl int shll and xchg arpl lea clc daa jno lods ja loopw adc in ret dec (bad) faddl dec lahf push cwtl jge fadds pop daa out rcll inc arpl sbb adc jecxz arpl xchg pop push adc xchg or xlat popa mov stos (bad) dec repnz inc outsb fist nop daa loop push push mov das (bad) test jns outsb jae out into lds stos rcrb dec mov popf push icebp jns imul push jno or mov jp push rcll dec andl pop outsl scas sbb js jecxz idivb jae push mov inc sbb pop adc sbb in cmp int or das hlt fnstenv int3 jmp push push out or fs push insl hlt cmpsb ja push dec nop in jo stos sbb jg imull mov dec push aas sbb jo fadds call or pusha mov aaa je inc ja inc or jle cmp xchg in js fiaddl and pop fimull out das inc in pop out fiadd leave mov ds repz push add fstpl push adc xor cwtl gs (bad) in sbb and or out xchg dec dec or (bad) loop push sub je jae (bad) pop push out out test nop clc jge fwait lods add adc in popf fsubs dec cltd push addr16 xchg pop add mov push jle lahf gs jg xchg popa pop xchg popa repz mov out lea pop fcmovbe pop add push sbbl pop mov jne in (bad) mov lods dec xor scas orl fidivrl cmpsb xchg xor lods jle mov mov cmp add push xchg imul pop popf inc inc pop daa sbb into lock ljmp or lock inc xchg push pop loope push repnz push mov imul je (bad) ret mov movsb or dec clc pop mov xchg mov loope pop push or pushf js adc push cmp inc mov call mov dec fstps (bad) repz dec adc test dec push inc rclb out jp out cmp sbb sbbl mov leave cmpsb daa mov pop mov aam fsubr out jae add jnp and icebp aaa pop icebp int mov idivb cmpsl out sub and out xor mov pop div test sarl adc fimull jl and int3 in fldln2 movsb adc cld stc cmpl push fs (bad) fistpll sarb xchg scas inc lret lods cmp pop mov and mov push cmp mov jecxz pop and (bad) into aaa xor add jl push push int3 adc xchg lret (bad) xor int3 call enter bound cmp std fild jns cmp sbb loopne clc push dec cwtl mov and inc sub std sbb and jnp sbb data16 push dec nop pop loopne mov pop fs std stc (bad) aaa mov cltd jecxz ss shlb (bad) dec pushl dec jg adc (bad) insb (bad) imul jo dec aaa stos (bad) bound and arpl inc xchg mov push add cmpsb xchg icebp add lcall mov inc (bad) push arpl ret and jne sub popa andl shr das jno out pop stos fnstenv cmpsl xchg mov push outsl mov cmp leave mov lret push js push repnz dec mov scas mov mov add cltd shlb push dec inc pop add out dec out pusha pop cmpsb inc lahf es test jl jmp (bad) cld stos mov add bound gs pop add js aaa or inc xchg (bad) lods xchg mov xlat loope dec stos xchg xchg cmp loope and (bad) repz add push daa mov xchg bound xchg cwtl pop popf pop dec ret lret (bad) jl add jge adc pop rol adc or dec mov xor cli push les fwait arpl pop or pop push loopne xchg mov cmp mov addr16 mov bound mov lds sbb push shrb or outsl xor add arpl mull pop pop testb imul pop inc and and daa cmp mov or addr16 pop arpl xchg sbb in inc jae cmpsb cltd gs fs mov mov jp pop push mov sarl sbb lcall and push xchg and push dec add push sub imul jne lods push jo push cltd jne stos xor jmp sub in movsb push jbe,pt dec addr16 mov mov adc test pop aam push scas mov cmpl pop and (bad) xchg (bad) popf sbb imul push arpl sub enter popf std andb pop mov mov fcomp and fcoml negb (bad) arpl call xchg pop lret std sub and mov push es popf lret daa inc mov push fs std jno fildll push fadds dec mov xchg imul imul cltd pop or inc in adc ja pop and movsb jno mov ds pop (bad) ficom int jecxz decb push pop push fstps imul lods pop jo inc xchg jge std hlt scas inc aas test cltd dec lds push adc adcl sahf and mov adc bound sbb adc dec xchg push inc mov cmp bound jle push xor insl and or adc ljmp fbstp rolb scas out hlt sbb xchg or and call jno nop mul sbb loope cmp and mov fisubr mov lock cmpsb add jge mov xchg arpl jbe mov cmpsl sbbl fwait pop or jb mov push (bad) mov fldcw add sub xchg pusha lahf pop pop add scas sbb fs push cmp xor imul cli (bad) data16 bt test dec cmc inc aas pop sti daa push test add mov sub lods mov movsb xchg inc imul pop (bad) add movsb sub add adc mov inc sbb push cs mov add lahf stc add ljmp test (bad) scas add sbb cmpsb subl insb jb pop outsl ljmpw (bad) lea dec subl pop pop rcll cli aad dec inc cld aad dec (bad) insb mov push (bad) in lods pop pop jae roll xor orl mov scas fistl std fsubrs daa push out lret xchg xchg mov pop (bad) xor add icebp cwtl leave imul clc movsb mov xchg adc pop xchg data16 xchg xor out adc dec ja shr mul push loopne andb jns cwtl sub dec pop test adc (bad) pop daa sbb lods xor nop in faddl cwtl pushf test xlat mov test mov loopne push popa clc xlat dec iret leave mov test pop cmp lods (bad) dec inc pop ret in mov div and add cmpsb ret pop bound lea sbb fisubrl nop lds fsub cmp cwtl inc pusha lds add push imul xor push or push cmp pop pop xchg arpl cwtl cmp jns nop (bad) mov (bad) push push xchg lea push and adc popf incl fsubrs idiv ret addl sbbl cmpl and sub pop das pop loopne or jns mov sbb jae rorl popa adc or fbstp out sti (bad) mov mov sbb fwait push cwtl sub movl pop bound cmc push test jnp hlt pop sbb adc jmp cmc js das dec mov ret out cs cmp bound in adc test (bad) adc bound cmp mov jno jmp loop mov pop fisub and push rol in push mov lds movsl jmp out push test aad add fidiv add or in jb test jp cmp jo jo pop or popa daa movsl out fisubrl stc xchg popf je sbb cmp int or scas xchg and dec push stc repnz rorl mov pop (bad) dec lods (bad) out je nop or mull test cmpsl insb (bad) cli cltd adc subb insl cltd cmpsb or jge push lret mov mov inc cwtl xchg iret sbb into adc adc pop jp andl adc lods test testb cmp pop pop jl mov cmpsb test leave dec fadd sbb pop icebp xchg subl and add cmpsb jae popf jmp sub loop inc (bad) imul dec insb cmpsl jne xchg cwtl gs inc dec aaa ficompl xor cmp cmc dec jg loope or sub (bad) push or mov outsl insb xchg jl test xorl lods jecxz and mov and mov or mov cmp pop sub sbb (bad) stos (bad) jg pop shrb mov loop lcall cmpl pop loope out xor fisttp adc into inc jge loopne inc ja xchg cmp arpl xor mov add jno sti xchg inc cwtl lods inc and xor aam adc push push dec je daa add or bound mov frstor mov xchg adc mov popa (bad) and movsb xor stc popf (bad) lret add inc movsb rcl xchg inc scas or pop fstpt cmp jmp xchg in clc mov dec sub fbld out movsb sub dec iret jecxz inc sbb cmpsb push inc imul enter fsubl mov sbbl and add insb call dec shll dec lods std inc jecxz lret mulb and je adc jae ret cmp out and cmc (bad) inc mov xchg leave xor cmp and mov pop lahf cmpsb (bad) sub lcall and push lods mov cmpsl xchg sbb mov das ja fwait adcl lock aam xchg cmpsl cltd ds sbb movq sub mov sub fnstsw push loope fnstcw cmpsb hlt test sahf or (bad) call cmp lret inc jp es scas xor out leave popa jb push mov mov mov ja std int3 mov movsl lahf (bad) bt jmp popf jae imul (bad) sub push mov and idiv xchg jmp mov lea xchg ljmp popa adc outsb or orb imul mov pop dec push imul cmp rorb fnop push and xchg movsl or adcb jno pushf sarl dec mov cmpb inc aas loopne std cmpsl popa jg add (bad) mov dec pop pusha pop lcall or pop dec rclb test mov jo xor sub sbb popa mov push fisttp and mov sbb pop scas push push sbb das pop pusha and add mov add xchg sbb lret add push pushf xor mov es mulb cwtl or mov sub jecxz es lock add sbb xor jge mov mov (bad) xor and fistpll jge aaa jno or ja mov out arpl mov adc cld iret and pop jbe inc daa (bad) xor movsl cmpsl xchg mov jno or rcll cmpsl (bad) icebp std dec and xchg sbb xor xchg pop mov mov inc es pop in in and aam test add mov mov lods loop jb xchg daa sbb mov testl daa cld pop add test fs (bad) xor xor sub jge mov mov adc (bad) fcompl in loop js dec shrl std jns aaa cmp push lret sub and xchg sub push daa js shlb es mov jns pop js ss test js mov push in (bad) aas loope or and mov mov out hlt lock cmpsb jmp dec jo xor pusha xchg and aaa test movsl and daa clc sbb scas inc sbb xchg adc mov lahf jg daa and cmp add pop out (bad) not inc frstor in xchg in jno xchg dec in test gs popf into fstps push cmc ljmp es cwtl or cmp sbb xchg sub (bad) sbb mov push mov dec fmul cwtl movsl cli enterw mov and sub sbb scas xlat lds jbe (bad) fldenv rolb add and xchg cs add loopne test (bad) loope call imul sub cmp std (bad) sbb out inc in cmp or push popa lods lods and adc dec sub addr16 popa adc std popa into mov insl adc cmp nop mov mov xchg jne cmpsl fcoml adc push inc inc popf inc inc jns cmc cmpsb sahf movsl cmp test mov xchg adc adc jp cmpsl sbbl and arpl sbb fidiv cmpsb sbbb lock inc dec mov test insl mov add dec loopne ror fwait out and cmpsl and popf out movl or in call and and and test xchg bound lahf (bad) addr16 rorl ret (bad) js lods jle pop ljmp fisubrl cmc scas lcall jae jg mov xor and xchg mov shlb ljmp popa les xor push sub prefetch xor mov mov sbb and daa addr16 pop push pusha imul (bad) xchg dec lahf xchg std out movsb push (bad) jecxz adc dec cmpsb mov push sbb pop xor pop clc push mul lret adc dec movsl push or mov xchg ficoml movsb adc xchg mov sahf sbb out mov cmp clc cs or ret dec push das adc pusha mov cmp jbe pop xchg inc dec ret cmp mov pop xor jmp out out fisttp not rcr (bad) mov stos mov adc sahf push and test or mov mov mov enter jmp adc mov stc roll rcr enter (bad) jmp in lds les lods jnp pop cwtl (bad) or xor jmp jns das mov imul mov out test out enter fbld gs in in sbb mov cmp lods and iret dec pushf sbb call and cmpsl sbb sbb pop and fdivrs add mov mov inc jo sub roll movsb push lock orl lahf rcrb (bad) pop call loope ja jl adc imul lods pop push xchg loope cltd or push mov adc adc in push das xlat loope jne fiadd inc lods popa mov test xchg cltd adc (bad) mov pop push lds jg adc bound test arpl (bad) or pop pop jne test dec (bad) xchg arpl mov adc call adc loopne jge jmp (bad) mov mov daa pop adc pop stc jo xor ret aaa jp jecxz lock lock mov cmpsl icebp jge and loope lahf mov in pop cmpsl std fsubs mov (bad) (bad) lock (bad) in out stos (bad) aad cmp bound xchg and call (bad) hlt pop mov push push push dec imul stos push int ror mov sub test xor jb test xchg shrb sbb test (bad) xchg push pop mov mov and fldenv dec adc test pusha sub and and iret mov sahf (bad) and adc push inc idivl mov xor pushf jmp mulb pop ret inc leave cmpsb xlat push fdivl fildl negb xchg xlat mov pop jno dec les (bad) stc or push fbstp or clc inc mov jge sub pop gs and dec cmp out fs (bad) fild notb push jg pop sub dec mulb jmp inc std xor mov faddp push mov aaa sar cmp out aas mov cmpsl push dec mov dec scas push gs jg pop pop mov xchg pop pop imull and int3 test sub dec sar fdivrl xchg sub fs lea fcmovnu cmpsb loopne popa pop bound mov jecxz pushf push pop sub or xor mov loope (bad) adc arpl movsb std in xor clc dec rcll adc out sbb mov pop test adcl in cmpsb sbb jp mov into js xchg sub mov adc sub in stc jbe adc pop push test cmp mov cmpsb cmp (bad) xor inc pusha rcll std sahf push sar popf and (bad) imul and adc addl xchg sbb xchg fldcw popa add loope push clc dec xchg stc pop shlb xchg in decl xor and je jle xchg pop test cld stos int mov stos adc pop pushf aaa js push adc pop int imul add fildll data16 push mov push arpl inc pushl icebp push iret xor xor jbe xor dec out sbb inc inc popf mov jnp adcb sbb testb (bad) xchg rcl adc fmull xchg dec (bad) sub aaa lret cmpsl fmull mov mov addb sub popf jmp int adc mov popf push add sub (bad) sub push cmpsb out push push jp cli push movsb ss ret dec or jno dec add jno iret cmp jno add gs push dec nop xchg lahf fldenv scas lods inc ret add icebp mov fbstp adc or out test pop pop cmp add inc mov arpl loopne aaa xor push xor ja cmpsb insl (bad) jbe sbb push sbb pop pop or xor mov and cmpsl pop imul aam add (bad) xchg (bad) fs sar mov stc adc pop popa xlat push mov mov cs fwait xor and and jne lahf xorl pushf rol jge cs shll cld mov pop mov addr16 add sub orl in sub xor jno dec jl cmpsb push jg addl pop fwait jecxz pushf arpl addr16 mov xchg bound shr pop mov scas imul (bad) jo jnp pop jmp dec divb xor push xchg repz std adc fistpll jmp cltd jns jno sarl push inc sub shr mov xor sahf push dec adc cs (bad) sub das test scas mov inc xchg and dec sub imul cmp and xor jge pop jmp popa gs leave xchg push in das xorl jge pop inc push clc cmpl ds popa mov (bad) jb nop add rorl (bad) sbb inc clc mov sti xchg inc xchg outsb dec and lock fs fbstp dec pop std and cmp cmp add sahf or dec ds inc sahf out add fildll jle mov cld popa jno (bad) shlb dec loop popa inc test mov rclb lock jecxz jae loopne adc add sarl and push jo add and push push push xchg scas jl mov mov aaa xorl iret push (bad) pusha in and mov lods sub sbb mov cmp rcll aam sbb pop jl lea ficoml js xchg fwait adc push and mov lea loopne clc pop mov inc inc (bad) mov jno fildl push xlat push popa xchg js xchg std inc xchg ds sbb popa ret clc and push push inc xchg and popa ret sbb js orl adc movsl lock fs test inc js out bound cmpb in add cmp add add xchg add jmp (bad) ficomp mov (bad) cmpsl repz mov mov loopne cmp inc push cli or xchg arpl ficom cmpsl jns inc inc (bad) cltd popa popa bound adc fsts cmp es in lods pop (bad) push add cmp fsubr cmp jae mov pusha dec push popa sbb pop je,pn fs cmp mov jmp xchg iret mov xchg pop (bad) xchg shrl fiaddl orb mov das pop daa cmpsl (bad) bound inc xchg xchg mov cmp lock loopne sub xchg inc xchg sbb inc push jnp call jae out cmpsb xchg out cwtl mulb outsl arpl out sbb jbe jmp (bad) push out movsl sbb mov sti loopne jno xchg sub and outsl jno xor mov fnstsw ss aas test pop rcll xor dec sarb jnp (bad) xchg cltd and lret fisub mov dec imul loop cmpsb jno outsl xchg mov dec cmp inc lods and cmp or jl adc stos mov addr16 and out push mov cli sbb sbb inc or sub lods mov cmp aad add es (bad) xchg fild and fildll inc add xor or fbstp inc mov ret mov jmp lret jno out xor pop sbb inc mov mov imul mov subl xchg fisubr adc test inc jno fwait lods fucomip pop lds test call test xchg push jne inc addl mov and daa xlat adc inc push mov aam pop loopne jno loop push loop add lds adc dec xor adc xor and ret lock out (bad) cmp dec xorl xchg sbb and mov xor mov lods fnstenv (bad) sbb stos or mov mov jecxz fpatan cmc ret or or dec sbb in sahf mov xorl fisubr inc or pop xchg inc cwtl dec popa pop lahf mov xor cwtl out jo pop inc push dec cmp adc das xor hlt jl lock add je or rcrb dec xchg les and cwtl rcrb cli inc dec sti adc mov data16 hlt sub rcrl sbb out clc (bad) inc add pop rcrb cmp push add xchg sub fneni(8087 mov ror bound adc adc push mov dec es push xchg xchg lods inc cltd push adc cltd push mov pop xchg or in mov call mov mov fdiv nop loopne nop outsb aam rorb or cmp addps bound add fldenv push sahf leave inc popa add push aam ljmp and pop shl imul ljmp mov (bad) repz lods test imul lock mov subl repnz stos sbb out xor add dec pop xchg adc mov daa xchg cmpsb adc xchg clc (bad) mov enterw outsl movsl je cmp xchg test add in adc cmp std xor push cmp mull clc cmpsl and xchg std push rolb fmuls inc cmp jecxz mov popf inc js aaa sbb aad movsl insb push xchg pop xchg inc and aas std add adc jns cs addr16 inc sbb dec add nop sbb adc out das lcall mov cs add jge mov fsubl mov inc mov push mov insb mov out rorb mov push out test daa (bad) fisub xchg inc cltd push jb cmpsl xor in push movl addr16 jo inc jmp fs sbb mov mov cmpsb sub (bad) movsl nop add cmpsb gs sub inc inc call push lahf sub mov cltd mov iret jae icebp notb lods mov pop inc andb std xchg xor push call push std icebp lahf jle push mov mov jecxz lahf jno push lods jp and sub in jae push arpl pop push fcmovb loopne (bad) hlt jecxz adc mov (bad) rcrl test imul push pushf int dec dec int3 xlat pusha outsb sub test movsl clc xchg fistpll mov bound fwait movsbl push cmp addr16 imul outsb add stc add out lock inc dec xor std jmp popf adc (bad) mov cmc in rcr jecxz test mov and rcrb xchg mov nop lods sbb mov mov adc div and xchg mov pusha adc mov in inc jl pop in pop iret mov arpl and ljmp out ja mov inc push les mov addr16 cmpsb push (bad) cli sub inc cmp mov add mov or nop cmp sbbl leave fs mov dec popa lea adc push add lds cli adc out in add and movsl jl fildl xchg and cld lcall mov push or fldl (bad) and mov lock adc inc pop pop js test pop test pusha add inc loopne inc jp adc xchg lock inc pop lahf adc es dec sbb inc data16 outsb test adc fist push scas fnop or sub adcl pop dec pop jo lds addr16 pop popa pusha mov pop or fmull cmc cmpb add js xor pop jl (bad) mov xchg mov in pop mov test js pop pop arpl pop repnz stc fisttpl ret dec sbb push insb pop xchg push sub loopne hlt push movsl lods in sub andl add loope ljmp mov push lods pop out xchg jae pop xchg ja mov scas popa iret pop decb test imul cli adc pop push fs fwait jb stc es xchg push xchg (bad) leave jle sub insb or cltd scas hlt mov sbb cmp fsubrs orb xchg jno popa out (bad) and lds popa (bad) shll xacquire add divb pop inc jns mov pop inc out mov fwait xchg (bad) lcall lods loopne arpl test add mov add cmc mov imul andb xchg mov and mov shlb and xchg adc loopne and mov pop adcl dec pop xchg cmpsl shr into add (bad) mov dec cltd (bad) inc sbb aaa pusha pop xchg and sarb add inc push adc pop (bad) fadds push scas fimull xlat jnp mov mov daa sub outsb out inc (bad) nop xor and stc xor cmp ret out in sbb punpckldq and xor push adc in adc daa and adc ss mov cltd dec jae xor fnstenv pop icebp out addr16 cmp test sub fistl in and movsl dec sbb push movsb test cld jbe mov mov cmpsl or lds and dec add cmpsl cltd out lahf jns fldln2 mov mov push out sub sub or dec fs iret dec and imul fcoms leave adc pop pop push adc scas xchg fwait out bound ss sub cmp gs or adc pop testl cmp lret dec adc mov jg bound push dec inc bound push xchg xchg sbb popf mov add dec popa xchg dec inc sbb rcrl push xor fcomps clc mov (bad) sub add mov test call push (bad) arpl (bad) sarb xchg sahf out adc enter dec xchg daa subl fldcw jge popa sbb push stc inc fdivr inc mov out pop bound push addb sti inc sbb xchg rol cmp bound in sbb pusha fcoml sarb int lods mov jo jg lahf mov and std js stos sbb cli pop rorb repnz sub and shlb sub lods adc mov push and test cltd mov mov ret mov jl jno jbe jg cmp push bnd pop js pusha leave je jge adcb sbb cmpsb jle loope jmp imul shll (bad) mov jg jbe in lods xchg cmpsb lods adc mov xor cld imul jmp xchg outsl cmp cmp sub xor and ljmp pop icebp sbb test jge xchg cli into imul movsl adc nop mov movsb dec add popa mov in mov jle and dec cmovo cli mov aas popa xchg in cli mov or xor into mov ficompl enter call inc cwtl test or ds jb fildl add or xor jo mov and xchg inc pop xchg adc mov push push lods mov and inc and jmp das xor and out out pushw pop addr16 popf sahf arpl inc rcr cld inc xchg gs pop arpl mov cmp (bad) js mov dec pop xor daa mov dec (bad) in mov sbb clc cmp cmpsb pushf call and cmp xor data16 cltd test xor xchg xor enter daa popa jg sbb and mov fsubs dec xor pusha addr16 out pushf xor and dec mov lret adc add in lahf popa out das movb push hlt cmp bound mov pop mov push dec clc out mov pushf outsl mull cmpsb pop mov hlt shrb pop ja in aaa mov cltd and cmpsl subl adc mov ja cmc cmpsl gs bound xchg inc adc rcll cmp ss pop pop loop sbbl lds pop mov add fnop pop jmp fadds cli jp push addb pop loop jmp mov dec inc xor ja add mov adc add lret xchg rcll mov sub or jno inc adc lock jg mov lea leave mov inc mov lds xor adc sbb insb neg jns xor mov ja (bad) mov test popa mov xchg and in mulb out push add mov pop sarl data16 xchg pop fimull pop ja jl jl out movsb leave cmp mov hlt pop pushf test cmc gs mov push cwtl mov addr16 call inc sti dec repnz test (bad) lock fprem andb adc xor in add adc xchg dec jp jne ds cmp js push pop stos xchg std pusha jmp cmp pusha lock mov sub loope cmp lods adcl rcrl sub arpl sbb out gs mov fdivr pop addr16 lret and fs and cmpsb gs dec sbb inc and js in or in add mov out push mov xor inc repz inc fimull mov and cmpsl cs into hlt call adc and mov add bound fdivs (bad) mov dec dec mov das jge sbb repz add xor fldcw jne scas jle pop mov dec bound push pop (bad) aaa mov jmp push test adc push pop xchg movsb sub mov or inc loope push inc (bad) call js mov shll sbb popa push or xorl adc pusha bound js jae push lods pop out out andb in aaa stos add inc cmp lret (bad) lds pop lret (bad) push hlt in (bad) roll and orl hlt cwtl and (bad) lcall sub pop jge push and dec push cmpsb push lds ljmp cmpsb sbb rclb and adc lcall loop hlt stc cmp divl mov xor mov sbb dec and aaa pushf popa xchg xchg jo hlt mov or cmp in (bad) xchg mov adc dec imul sbb stos pop cltd cmp mov fwait popf gs fldcw dec mulb das mov push ss mov popa insl sub into (bad) out ja pop iret cmp push xor out push pop push mov push sbb adc lcall jo mov cwtl add sbb lock cmp das push adc movsb and cmp lahf push cli cmp test iret inc add mov jo je push xor hlt test fmull ja inc mov jmp lret xchg repnz mov aaa cmpsl fs fwait mov add lock imul test fist add fildll dec adc bound sbb outsl loopne movsb inc add pop bt in in cwtl lret roll das out cld loope in out loopne jae daa and (bad) xor inc mov das pop rcr sbb pop or inc mov mov cmp cmpsl cli in and jle pop fwait (bad) jno sub mov mov mov and adc xchg mov push mov jmp addl dec outsl cmp mov daa rclb xchg adc or movsl stos jo cltd jne in dec dec xor mov mov fs sti jecxz jbe xchg jmp mov jle (bad) scas icebp test jmp push xchg pop andl ja jge rcll in sarb and and pusha inc xchg xor out sarb mov mov mov jg loopne js push push pop mov sub arpl aad outsb xor xor mov pop push sbb bound mov or mov inc test cmc out (bad) cmp jns test pop push inc nop popf push loopne mov or mov pop cs (bad) pop push add sbb mov pop xchg pop dec cmp xor xchg cmp push imul movsb mov mov movsb push (bad) lea pop lods pop add and into cmp out push mov mov and stc js jl and jle test dec popa and jg cmp movsl add incb mov (bad) sub hlt pop addl jecxz loop popf scas xor out push push jmp or push dec xchg (bad) aaa lret cmp (bad) imulb in pop push cmp xchg outsl popf aam outsl adc fdivrp or jb daa xchg ret mov imul js jge lret sarl gs mov popa rcrl xor sub call jecxz test mov mov and mov rclb mov jge xchg mov cmp data16 xchg inc cltd jp lock mov or aad pusha and jo adc pop aaa add adc sbb popa movsb faddl pop or jge pop rcrb adc mov in hlt adc aas xchg add (bad) jmp inc mov cmc loope push sub iret inc andb push (bad) xor lret mov push push jo xchg pop es mov push or adc cwtl cmpsb data16 sahf loop or sub rcrb dec xchg pop sahf iret jmp roll pusha int imul add aas jecxz adc popa rolb xlat loope mov cwtl and xchg data16 xor xchg popa inc xchg mov jne ffree jo and rcrb adc ret and ficom and inc lahf loopne movsb or into mov mov mov add and ficom adc (bad) jb push mov mov mov dec call dec and or jno mov pushf in pop jno push and pop push mov rol push and std imul int adc xchg std icebp jbe pusha sub pop cmpsl cmp fisttp sub and mov (bad) loopne sub setno inc pushf in xlat cmp inc in imul ret and push (bad) cld insl lea les (bad) stos dec dec dec hlt in fcompl ss sub call pop test xchg add andl push aaa rorl imul popa cs rcrl and or xor xchg bound roll (bad) jo dec cmp mov daa inc mov stc aad dec add dec inc xchg cld iret gs and aad lret popa andl push xor insl es sub push rcll xor dec push cltd jns test jle ljmp jle movsl lea add adc pop mov mov popa shlb pop aam sbb and push inc rcl mov repz mov or je inc (bad) popa addr16 dec and rcll xor cmp mov adc xlat cwtl flds pop stc loopne add inc lock push cmpsb add adc add xchg sahf das (bad) mov mov add push jl mov nop (bad) idiv jb mov xchg cmpl enter sbb jl or xchg pop or jo xor (bad) cmp mov daa push shll cmp sbb clc bound aas fidivrl (bad) sbb inc inc movsb fs subb xor in lods xor bound imul and in andb gs les sbb push mov add mov lods xchg or sti jbe jae jno clc adc pop mov dec (bad) mov cmp xor insl (bad) mov test into jl imul cmp mov add adc daa dec cmp sbb pusha ja stos in pop dec vpandnd fstps std aad inc pushf js sub mov faddl roll inc lahf sbbl mov pop pop hlt sti outsb pushf stc add pop lock mov mov sbb pop cmpsb lods jp es inc in mov sbb mov cmp cli inc out mov add and cmc loopne fiadd mov add lds push inc syscall push popa outsl (bad) xor push sbb mov mov jmp xor rcrb pop and aaa dec ja mov test dec arpl mov cmpb fcompl pop sub pop mov mov ja arpl (bad) cmpsl test popa adc or ret sbb adc adc jecxz out clc xchg xor xor dec pop sub mov add or xor outsb orps aam inc mov or xchg and bound xor sub idiv fnstenv jge push xchg cs adc add cmp shlb fucomp push push jb xor das or addr16 sbb repz adc repnz and mov xchg add in adc jmp test mov mov pop lock cmp out jnp ja repnz pusha adc (bad) lahf xor dec pusha mov in imul pop pop imul mov mov dec inc fsts cld mov aaa mov jnp inc les das mov add mov (bad) je movl test cli jg pop mov jb aaa (bad) adc and push insl js push cmpsb cmpsl and cld inc xor bound mov int push sub mov and (bad) cltd loopne dec xchg jo stos and push lea (bad) pop inc cmc jns sarb punpckldq out xchg push dec aas leave scas cmp enter test call push cmp xchg push and push js (bad) adc (bad) ljmp std cmp xchg inc repnz (bad) xchg test dec adc test push pop in adc pop test xchg dec sub mov mov mov jmp cwtl push mov insb xchg mov mov xor dec out sarl mov hlt fcomps sub mov mov mov mov (bad) push popa pop rcl rolb adc ljmp cmp adc (bad) repnz (bad) loop mov mov jg loop nop loop jns xchg sub in jle jnp pop bnd fxch nop lret xchg test lret bound bound sbbl negl fsts add loopne mov (bad) jo in inc mov lret xchg cltd xlat xchg out test xchg gs and loop daa xchg jmp lahf jno hlt subl aas push out fs rolb add push (bad) out imul xor sahf std mov jb shll push or mov mov ja xor test pop cltd inc sbb inc out dec cmp pop loopnew in mov out adc inc fadds lret test and jne or jp add icebp mov (bad) call inc mov icebp inc ds negb jns mov pop aaa hlt int sub jne popa icebp dec scas cltd ds dec push popa mov (bad) (bad) or fildl notb fidivr cld daa sti rcll jnp negb cmp add and inc das xchg shr pop adc jns inc push inc push cltd sbb js (bad) or dec dec pop mov pop into ss cmc sbbl mov jmp cmovnp in loopne adc xor loop ja xchg xchg mov fcmovbe xor fs adc cmp daa js and inc gs jecxz es xorb ss xor cltd xor jl or mov and bound dec (bad) cli sar jns in xchg (bad) roll mov hlt and xor xor dec jb addr16 xor pop inc outsb std repnz daa setb xchg jecxz (bad) cs leave gs jno adc (bad) xlat cmpsb pop or movsb push scas into (bad) mov inc inc cmp fwait rorb sub sub shlb call xchg (bad) sbb mov pop pusha xchg out popa adc mov in mov out cmp int mov mov mov adc push mov fnstcw xchg pop or mov insb fisubrl mov nop mov and repnz (bad) test shll dec lret stos out (bad) adc push shlb out pop xchg cmpsb cmpsb cmp (bad) xor add jo lods ret jno test sti sbb ja sbb mov cmpsl jge mov xchg rcl add loop push cmp sarl xchg xchg cmp scas pop add imul cld mov sti cmpsl pop sub jno inc inc call pop mov aam movsl cmpsb dec mov and jecxz sub adc inc lods imul outsb jmp mov and repz ss adc test in loope adcl imul (bad) inc push cmp xor lea push lcall xor andl adc std stc jecxz movsl imul imul sub push sarl lret ret xlat into popf inc scas dec repnz push adc xchg cmpsl sbb in jno inc gs stos nop movsb loopne (bad) push stos lds and das dec jmp and cmp cltd rolb cmp cltd jecxz pop mov imul xor pop mov test movsb push and cld jge pop popf xor mov popf into mov loopne bound ja cmpsl dec xchg and or mov cmpsb inc (bad) (bad) adc mov pop iret inc lds mov push jb andl sbb pop inc iret leave jne (bad) mulps rcr jle shll enter pop js add out pusha imul mov inc lds daa jns ret sub (bad) pop and adc out adc add jo out adc cmc push add fild das cwtl inc outsl popa movsl mov push mov push out cmpsb aad mov fadd arpl jnp je mov fwait jmp lds lods jg shr fwait test outsl mov out pop cwtl pop je ret jnp aaa loopne mov fimull lock pop adc aaa pop shrl mov mov fbld mov mov mov inc popa cmpsl inc xchg fs jbe rclb and fnop loopne mov xor sbb xchg inc lea sahf add pop and bound or adc jbe adc push xchg adc in xchg pop (bad) hlt dec gs mov lock rorl es loope inc xlat adc bound add and imul or cmpsl and bound lret cltd mov inc in inc add pop cmp test jnp pop out push pop out xchg das pop sub pop and jb jo pop jp dec in rolb faddl xchg dec adc xor and (bad) outsl inc loopne lret test scas arpl mov addr16 lcall dec in adc push mov xor sub mov jge xchg out mov movsl mov bound sbb ss repnz adc xchg xchg bound xor sub adc and int cltd xchg add push sbb test cmp push std lock outsl push pop popa rcr das cmp std cmp inc push inc imul aaa mov sti sti dec stos out jns and add xchg push push jns fdivl add cmpsb clc cmpsl into cltd js mov pop bound gs push push scas fadd loopne imul pop pop mov nop arpl fbstp mov mov into mov or roll mov std and rclb pop (bad) xor sar add popf stc inc lret out scas or cmpb pop andb mov mulb call and sbbl adcb mov cmpl lods addr16 mov and (bad) mov loop aaa add sbb adc (bad) out cmp pop movsl lcall pop les es pop xchg lods mov and icebp and gs popa xor jb test jno popf inc xchg cmpsb andl std icebp sbb pop fildll push adc cs ss inc test test cmp movsb aaa iret or xor jno push jg imul in test adc movsl cmp mov je push jns inc mov xchg jae fbld div sub push (bad) xchg mov dec pushf pop dec mov outsb test mov out test rcl xchg add fidiv mov dec jb mov lahf xlat add jg sub jns or sbb cwtl loopne adc inc out xor mov fwait or gs or mov shlb mov dec push push insb pusha mov test mov adc add and iret mov or inc iret bound in bound mov stc lock dec ss jecxz ja (bad) mov add xor loope fldcw dec sbb cmc scas test jl pop dec jae add push push sahf cmp mov xchg push scas test and pop inc pusha repnz inc test jno ss xchg jbe pop out cmpsl les xchg iret jnp orl xchg mov pop and mov scas add mov roll mov addl fisubl iret rolb test and dec pop mov inc aad push loope jo and icebp dec in repz mov call cmpsl ret test insb scas popa xchg mov (bad) mov push mov fldl aaa lahf or xchg and cmpsl mov mov add mov cmp test (bad) in sub push repz or (bad) or inc mov pop out ret pop dec bound sti shlb ds (bad) enter or xlat ret pop (bad) aam pusha pop pusha movsl dec pop push popa iret or sub xchg and xchg mov sbb jle dec test jnp mov dec xchg movsl mov js xchg insb bound pop or adc popf and and mov add addr16 leave shl and mov js lods or xor and (bad) repnz inc and pop xchg pusha leave pop dec xchg popf pop and fwait pushf fcoml pop out adc pop pop je xchg iret cwtl not jae cmpsl subl sub push in adc adc in mov mov sub dec xchg mov mov dec imul or xlat ja test mov push fistp dec cld ret dec into add xlat xchg sub cmp aaa mov jle pop sub in mov pushf rcll in or add subl jnp (bad) or mov jg iret xchg and test bnd inc (bad) cmc xchg jmp lahf test mov test pop inc mov aas scas divl andb and clc lea rorl or and aam lahf test dec jecxz cmp in and add or pop adc and inc mov adc sbb lock jne inc daa ret jns test ret lahf mov arpl popf addr16 dec cmp loopne push imul pop fwait adc push int3 jo mov fs popf fwait out pop dec pop js (bad) int and in pmullw pop rcrl mov repnz add icebp inc orb cwtl dec or out cwtl faddl out js rcrl out dec mov xor xor pusha rorb js loopne and and dec xchg push pop push cmpl xchg (bad) push fdiv sbb sbb cmp pop imul push cmp fcomip js cltd and push ret add mov repz pop sahf decb fbstp dec inc data16 pop push nop jge cmpsl daa outsl push inc fldcw fildll andl (bad) lahf das xor (bad) aad ud1 xor xor std out lcall add mov jo and inc jmp loop mull mov cmpsl push mov mov out imul push mov mov pop lret mov fnstenv lret iret in push pop sbb dec arpl in and fbstp mov cmp mov adc rcrb xor clc lcall or popa lods les or xchg bound sbb add cmp pusha rcrb cmp insl sahf stos adc sbbb cmp insb addl pop movsl cmpsl iret iret ljmp stos rcll std add scas dec popa or pop stos dec shr je daa roll hlt and gs cli dec jge lock push fiadd mov xchg hlt dec dec test push dec dec push mov mov sub dec fbld push or in add cmp dec add push es hlt push or sub pop scas cmpsb and xchg xor push ja insl addr16 sbb or arpl xor pop ja test or xchg (bad) and adc rolb movsb jo push ja dec js orl mov das jmp jno ja lret inc add pop adc cli into jae shrb inc sti sbb int3 inc pop dec push outsl and outsl mov cld and add xchg movsb mov pop aas add cmp add mov cld adc pop lahf pusha lods pop test mov xchg push pop pop and aaa and cmp out rclb (bad) mov jl hlt arpl lea add add aas cmp jmp loopne inc xor (bad) mov repnz lock fistpll push cmp cmp sbb pusha dec dec (bad) lock dec pop sub add fldcw cmc out push mov cmp dec lea jne mov lock add adc mov std pop fdivl mov mov push sbb mov jno cmp test pop xchg (bad) lea sbb xchg and push sub push fcoml cltd xchg pop fwait mov out cmp insl sahf mov cmp bound xchg mov sbb add (bad) fs xchg fdivrs and mov sbbb xlat pop stos inc jnp jmp test outsl mov cmp xchg rorb in xchg clc mov ds es mov enter and in add test iret arpl push inc (bad) xor add enter nop mov jne jg sahf nop in mov sbb std mov pusha insl addr16 pop dec fwait add (bad) popa inc adc pop inc sub fimul loopne (bad) lcall mov pop cmpsl in push push dec fwait dec and or fs jg adc enter fidivr lock and imul dec jns cwtl and sub adc adc dec cmc mov test pop mov pop in in pop mov (bad) cmc sub out mov inc js loop add les stc sbb cmpl and xor faddl xchg inc mov les mov push xchg mov pop push sbb sbb or fmull mov pop fiaddl fmull bound je fwait pop push lea mov arpl data16 sbb cmc sub cmp add in and lcall test fwait push push add test in or lahf xor cmpsb push xchg cld and pushf lock sbb (bad) push (bad) (bad) jecxz pop cmp add inc dec movsb stos bound shlb arpl fistpl aam popa mov sbb stc xchg xchg or inc push test lods sub or adc xor or mov iret andb mov dec inc xchg cmp xchg ret add adc rcrl and fdivrs daa (bad) negl popf andb adc sbb mov imul push je pop sbb (bad) scas pop inc cmp outsl pusha cmp cld fsubs fs ja xor dec loope xchg inc push push xor xor add jmp and cltd and lret pusha test mov (bad) mov sbb mov xor rep mov and adc cltd lcall outsl gs roll pushf fwait mov sub mov mov cwtl les cmp mov push pop jmp xor clc add pop mov cmp cli cmp incb mov dec inc pop test addr16 (bad) loopne dec mov pop ljmp add and sub push js adc gs daa sbb dec repz xlat mov jmp cli adc adc mov or rclb mov mov mov out ret (bad) mov jl sub adcl push and inc jnp push dec sbb (bad) xlat adc jp jmp sarl ret loopne mov jns inc dec cmp dec xchg add or mov dec cwtl hlt pop add jne iret imul rorb daa add imul push loopne fstps sub sub push psrlq mov daa (bad) loop rolb push rol pop loop in xor aam push jo rol and fimull mov lock pop out jne and or sahf xor lds std inc push or sub pop push xchg jl aad in pop push test unpckhps add rclb ja and mov leave call inc jb ja push cpuid neg mov out pmaxub notl loopne insl inc cmp xor nop and push adc cmp aaa test pushf bound aas and xchg mov pop (bad) ja pop xchg mov add xchg and (bad) xchg (bad) sti imul add and xchg inc add clc daa (bad) enter loope fdivrl pop cmpsl ja fld pop ret aaa jo push push enter arpl les xor mov jle scas loop orl loope mov cltd and adc or cli mov shlb addl jmp stos jg cmp in or lahf ja clc mov fnsave aaa mov aam xchg ficoml pop mov stos int cmp adc loop mov xlat daa int3 sub (bad) sub push nop adc popa xchg inc or imul mov fucomip xor mov sarl jl mov (bad) popa sub and add and xchg sub push scas dec insl xor xchg push mov hlt ficom loopne lock or sbb lods test dec imul cli ret jge adc addr16 sbb pop sub xchg pop sub aad sbb aam push fcoml arpl orl fs imul enter cltd jnp add cwtl mov fiadd and jmp mov cmpsl jp cmpsl int3 loop fistpll pop cmpsb and addl mov push cmp or mov push sbb mov cwtl prefetcht1 cltd or stc pusha test inc repnz xchg js pop andl sub test and lahf test dec mov (bad) aaa pop daa pushw std cwtl adc inc mov sbb pusha (bad) js mov fsub popa inc outsb jg or data16 push stc test enter aad pop mov js adc fmuls pop pop and cmpsb cwtl rclb xchg lcall push and test lret mov mov test ds add add xchg push out push mov push jns lods xchg stc ja aaa pusha cmp lds or rolb lea cmp inc repnz jnp push and cltd pop push imul mov xor fdivrs fsubrl xchg ds (bad) ja in sbb aam ret adc (bad) inc jle sarb mov adc (bad) (bad) cld scas arpl mov push popa sbbl in subl sbb mov outsb out int3 negb xor pop popa aas xchg (bad) xchg addr16 test adc pop add xchg adc xchg push mov mov xlat outsl addl sub or lock aas and mov pop dec inc jle and insb pop hlt inc push and inc in pop mov (bad) leave imul loopne xor sbb enter lods add cmp lret andl ljmp lcall sub ret outsb mov sbb and jb mov daa push in imul mov sub push mov pop outsb push xor aad sub inc jbe xchg xor (bad) mov inc dec (bad) dec pop and inc mov (bad) pop cmp orb call push enter pop popf cmpsl arpl xchg lea adc push pop stos fxch insb cwtl xor mov pop push rclb pop or ljmp loop sub mov mov std pushl cmp pop and mov aaa ds decl dec mov dec mov pop repz push pop sub and stos dec cltd cmp inc jno sti daa xchg sub cwtl sahf sbb add xor ds pop lret into push mov pop (bad) iret (bad) mov es dec stc xor addr16 mov and dec scas call stos mov call iret inc pop xor test push mov insl dec mov test push shll aad mov mov outsl lahf aas push std jmp pusha push stos pop mov std daa icebp dec dec pop out sbb push ficomp imul stc and fist pusha and cmp subb fwait gs popf lds xchg cltd lds xchg push pop test (bad) sbb xchg lea xchg in adc xchg repnz orl and pop xchg addr16 add pushf test inc cwtl add mov xchg das loopne daa cmpsl imul cmpsl repnz mov into push jae ror (bad) out xor mov arpl xchg push fimul push cmpl stos cli cmp pop pop andl int test mov or xchg repz into lods push scas sub test add lock popf add ret pop lock sub mov push pusha cltd inc inc bound pop xchg mov and add or and lea jnp add jns test repnz mov xchg addr16 and mov mov and jecxz push scas mov loopne jns mov in lods lds and dec dec pop daa jnp sbb or and jbe pop lret inc movsl cmp (bad) std dec dec (bad) add jo mov jecxz rorl pop adc cmpsb aaa imul pop lock adc pop leave dec movsl mov sub in push sbb cmpsb push mov lcall rolb xor call cmpsl adc push shrl adc inc xchg or push cli push insb cmpsb jne lahf pusha and fcoms xor pop (bad) popa out push push and loopne repnz mov adc mov aas jmp push jge scas daa inc ja push push pop fwait mov nop pop mov push xchg xchg cmp aaa sub dec ja call rcrb dec (bad) jl push mov jno aas test cmp cmp sbb jo fisttpll leave dec mov fwait xchg popa insb ret (bad) xor pop xchg xchg pop inc sub push cwtl negb mov aam out cmpsl dec cwtl push xchg push lds fxch cwtl dec xchg pop dec pop iret nop pop mov icebp xchg js cltd jb test push xchg fwait andl mov fwait xor dec jnp cmp xor pop bound pop xchg mov iret push mov sub inc bound sub dec add jns mov xor test xchg and lahf mov sbb test jno xchg inc scas jle nop add inc cmc into lock xchg and jno pop mov lret pop jp rclb bound or pop sub mov mov out (bad) imul cmp leave sub add mov jns ret dec adcb ret pop les dec out incl sub and ja mov sbb mov sbb and add dec dec stc inc inc xchg adc test imul data16 inc je and add in adc pop cmpsl cld sub js and fild mov sbb sbb mov lods jno addl pop sub add xor lret imul push xor fdivs pushf daa sub jne lahf mov cmp sub dec inc add adc push fwait cwtl mov dec xchg loopne pop inc (bad) popf fmuls pop aaa pop bound pop mov dec jmp movsl fdivr inc decl (bad) dec pusha xor pop mov (bad) ret imul push dec lea or pushf sbb lahf add lret mov and nop push out lret sahf faddl ret sarb xchg or sub aam ret gs push jle or jle pop or xlat push and sbb in test mov (bad) fwait ds cmp jb inc in test shrb dec or (bad) popa into mov add inc mov cmp pop popf mov lea test mov iret push push out dec or mov mov lahf mov push cmp cmp mov movsl cmp movsb scas jns jbe dec pop cmp fisubl mov xchg dec pop enter inc adc (bad) dec rcll pop and test pop gs adc jae push outsl daa mov loope dec sbb xchg mov mov lods jge fsubs icebp rorl or xor cltd out xchg push mov jmp popa sbb or push imul (bad) mov push clc mov jae pop movsl fistp test dec cwtl dec fldt lods fcoms popa mull inc inc sbb lret stc jmp jl scas inc xchg push lahf (bad) roll mov ret add bound push push int in fwait lahf and pop das inc cmpb cmpsl mov xchg xchg inc imul or outsl add lds push cmp mov bound hlt rclb loope cmp xchg nop (bad) sbb push mov iret add push and mov das mov (bad) adc (bad) test cmp mov mov fadd sbb sbb cli sbb mov hlt js ret push mov push out outsl add (bad) movsl jne mov imul daa inc adc xor std push sarb fs jecxz push xchg into fs push adc sbb sbbl jns bound adc lahf ret mov imul sahf call cli mov add dec rsm loope push imull cmp jae mov ja arpl jg cmp mov roll push mov and mov popf (bad) pop jecxz rcr in (bad) xchg mov out ja pop popf add imul xchg pusha mov out pop fwait ret push daa inc dec sbb inc std jo pusha (bad) fistp cs in xchg or mov sbbb sbb cmp rclb stc adc xlat in shll xor or adc jmp xor push add imul add push push and or mov mov nop loop daa pushf jo sub and push and dec mov add ja test fldl (bad) adc bound into sbb sbb cltd add mov mov daa and in (bad) mov and data16 insb xchg lods cmp push and mov push into ficomp loop xchg ss or push add lods pop cmp dec cmp rcrb pop add push mov add and adcb cmp rolb and or jbe lock add call mov push add cmpsb push mov and std stc notl enter and ja ljmp mov jp addr16 xchg pop mov and loopew lods inc jb inc and dec sbb mov push loopne sub jno dec add out mov jmp inc popa shlb adc sbb add xor imul aad xchg add dec sub data16 cmp and cmc dec icebp jmp push gs aad or test push sub cmp mulb gs ret lods fisub adc or fiaddl fiadd inc cli cmp mov adc pusha dec cld jns push and dec dec loope add sbb jne cmpsl cwtl xchg daa aas dec loopne pop jle neg aam push rorl add in xor popf test cld rcl daa fisttpl lds pusha add fldenv push or ljmp sbb lahf lahf iret xor sar mov arpl shrl fxch lods ljmp cmp (bad) or sub cltd adc mov jno cld xchg mov pusha popa ljmp out loopne subl pop inc dec dec rcrb push iret and inc jbe ret ficom jo pop popa std push xlat inc jns inc xlat mov sub mov nop push into and xor lods mov divb test and or cmp aas ror inc movb pop cmp lds iret out popa jmp and dec sub pop cltd movsb aas pop outsl lock shr inc std lret dec loope mov push movsb pop std in lods ret scas das mov cmp jno orl lock bnd sub std orl pop icebp lods scas xchg mov aad adc xlat inc idiv xchg adc push adc cmpsl add sbb pop lea dec jnp in shll (bad) (bad) mov or insb repnz pop mov mov and fs pushf fsubl les pop int dec add mov (bad) jo jne pop and dec sub insl push nop test xor ret jge xchg mov and popf loopne dec imul cmpsl cmpsb shlb add mov mov mov jns dec jmp pushf jge jle loop inc xchg jno test mov push dec or pop aas inc aas lds or das arpl inc (bad) loop loopne sbb sbb xor push push cltd mov or and dec xor jbe addr16 add push cltd cmc jl jno (bad) out lea pop dec mov push dec cltd hlt fsubs jns and or mov push data16 pop test xor sbb pop jns repz inc sbb pop jns fwait gs mov clc lret inc inc dec sub cwtl push mov lea arpl xor in aaa pop pop mov lahf add add nop leave movsl push inc cmp dec jne cmc mov mov adc in xchg mov mov imul fldt out cmpsb add in movsb stos gs imul pop jmp add xor icebp and and mov insl bnd adc push clc iret jnp popa std outsl lock xor fdivr lods (bad) mov pop mov or xchg pusha dec inc lock mov push dec (bad) jmp iret jge loope sub sub adc jp dec jmp add aad cmp mov push lea jl xchg mov mov enter mov xchg in mov pop jp inc popa jbe cmp pushf mov test shll mov push dec les dec stos xchg and pop imul mov pop je or imul sbb push inc and sbb push push push xorl dec pop lods int3 push and gs les xor mov dec sub test and mov push das in inc adc (bad) xor les dec cmp shr sub xchg cmp fs and dec (bad) aaa mov xchg mov repz int3 ret pop pop pop jecxz dec or push sbb fbld in mov lods pop add les or cld gs nop mov mov hlt lea xor push or cmc adc and pop pusha xchg jae xchg mov lea test sub rol lods sub insl add shlb out (bad) or fcoms mov leave xchg mov rcrb add mov rolb jno pop mov cmp int pop cmp mov imul aaa nop lret and fisttpll test sbbl leave aaa and lock inc call notb mov xchg loopne mov daa (bad) mov adc in gs into pop and lea ret xor pop orb out push cmp outsb and pop loope mov test test cmp dec xchg xchg sub jp test cli mov inc daa les mov rorl mov pop popa mov jne cld pusha insb and stos out arpl jns andb aaa lea je and and push cs xor jns push (bad) xor cmp addl (bad) xor jecxz fdiv inc iret xchg cmc cli in mov or fildl ja in push mov dec dec arpl and jmp xorb pushf dec sbbl mov xchg cmp mov test xor inc cli inc dec repz xor ja pop bound imul aaa jb add das (bad) xchg push inc jo outsb and fadd mul ss movsl sahf rclb cmp loop jae mov in insb mov in inc test (bad) dec (bad) push lcall adc into lahf cmp sbb imul and in enter or cmp pop pop sbb xchg pop cmp pop xchg and aaa pop sub inc xlat (bad) mov divb cltd ficompl sbb add out adc andb hlt xchg jne or push mov xchg data16 xor jno push push dec add arpl jne (bad) jne,pn jne ja cltd sbb cltd sub push dec mov mov hlt jge pop mov jne push js pop vmwrite dec cmpsl daa mov cmp cld cli pop add data16 lea test dec data16 sbb xacquire xor arpl (bad) icebp jne push xchg loope mov jge xor inc xchg inc jl jne or and push mov adc js xor or (bad) je fild mov andl or imul (bad) xor mov frstor inc cmp fmulp push fcompl pop inc in pop and cmp test cltd (bad) jmp adc jbe cmp aaa cmp add add cmpsl insl xchg test je jo fstpl adc sarb xchg xchg jle jmp movsl gs pop fcmovbe dec mov inc stos rolb das aaa cli dec mov loope outsl cmpsl nop cmp xor (bad) jecxz mov in (bad) lret repnz inc mov dec sarb inc mov add inc and mov aas mov xchg mov mov mov gs in pop xchg dec shlb js push jns cmp pop pushf dec sti mov cmp inc xchg adc cld lcall or movl pop mov dec mov test sti mov pop fcmovu mov cmpb mov ficoml fmull and cmp test iret cmpsb addr16 mov mov pop mov hlt (bad) push and (bad) pop aad and outsw or aas popa and sub lea cmc push add nop inc cld or push cmp xchg dec push jbe mul and add cwtl les in cwtl add push jg cs dec sarb enter in (bad) mov push rorl mov std sub and gs mov out adc (bad) adc and cmc fildl inc fimul fwait xor sub hlt dec mov jg rcrb sbb out lods cwtl ss shll rsqrtps adc xchg rclb cltd in push in outsb push fistpl adc cmp xlat aaa and imul js jno test mov xchg push sbb adc and jmp sbbl lock xchg mov dec sub dec adc adc push inc std das pop stos sbb fs adc popf popa bound fisttpl (bad) popf popa lea imul sub adc ljmp out mov xchg ja pop inc in add xlat shrb out push xchg int3 lahf pop out insl push stc sarl aad push loop in add les loop mov mov jno lds push call std cmc mov cmpsb shlb scas insb mov and imulb (bad) ljmp inc pop xor rorb fimull call in pop pop push cmp and jnp sub jns test nop dec pop (bad) mov aaa mov dec xchg adc dec cmp jle jns sbb add insb adc mov lahf mov mov imul je or lods (bad) inc pop popa xchg push mov arpl stos (bad) aad sti mov pop xchg movsb in mov repz das jno push mov fwait sar mov (bad) cmpsl cwtl repz daa cmovge loopne enter loopne enter gs pop or mov pusha dec add xchg gs pop repnz sbbl cwtl das sbb (bad) jge call popa mov jmp rolb and hlt movsb hlt fldcw popf daa cmp js or (bad) or pop dec jg test (bad) (bad) cltd mov shrb cmpsb movsb jae mov (bad) push pusha mov sti negb mov xchg cmpsb mov dec das aas push in (bad) notb repnz push notl push inc rcrl dec dec cmp jns stos jg mov and push mov pop mov mov test and xchg daa (bad) cmc addr16 cmp je xchg stos nop sub pop outsl inc mov repz jbe shrb dec add inc mov sbb ret cli (bad) lcall xchg adc popf daa mov push and fs leave adc pop lret inc lahf movsb jbe jecxz xor jle jno test call (bad) jno xor mov adc aam das and loopne outsb pusha rorl out stos imul add jb and sbbl (bad) cld arpl cmp popa cmp fwait jl nop xlat lret add sub movsb ret push (bad) pop and jb std mov adc inc data16 pop jnp jecxz and or ja push (bad) cmove pop sbb mov cltd push dec arpl shlb push add std inc fwait inc mov mov push aaa stos cltd push bound cmp cmp mov xor dec js mov xchg sub dec lods or or dec jecxz xchg mov inc push lods cmc xor in pop dec mov cwtl add in fucom pop pop shrb imul adc mov je sbb pop test notb ja add inc insb std in mov lahf push pop jnp ret lods test cwtl lret push and jns loop arpl push pop out test dec dec push lcall pop inc out mov mov js mov adc pop mov dec pushf cmpsl push fnstcw mov inc jns sbb lea test pusha fwait lds subl adc std addr16 in stos test outsb mov data16 push fwait out bound dec mov dec addl sbb mov adc stos lods daa in xor pusha push or out lret cmp fldcw call nop mov pop adc jle sarl mov jg leave push into or les rorb xorb movsl mov pop mov and lods (bad) lds test popa loope xchg in loopne jl mov rcrb jmp cli call inc aam dec jo call jb mov jno push dec cmpsl xchg out fild jb mov nop jno test mov pop (bad) pop dec xchg pop lock scas inc sub push cltd pop cmp pop cmpsl addr16 subl enter push sub push dec lods cmp popa jp into imul sbb test mov and fwait mov insb jbe lret add sbb sbbl or das or mov scas xorb jnp jns dec pop mov cmp mov xor push mov das sbb mov add mov shrb dec xor push adc aaa mov xor push xchg pop movsl sub xor mov cmp in lods movb (bad) imul roll sub dec rclb pushf call jbe shll mov out dec pop add mov negb mov popf add push xchg and and roll pop adc fist out push iret fwait in jno stos clc sub mov stc jle and mov xchg dec inc test popa mov sbb inc gs xchg dec cmpsl ja jno cmp lretw push and aas push pop cmp clc inc shr call or cmp shll fild dec dec cmpsl cmpsb jmp lock sbb out inc dec mov xor inc pop mov dec fadds in fist xchg or dec enter xchg push sub xchg cmpsl gs push cmp cmp bound test mov clc lock and add insl push out imul xchg into or adc cmpsl mov sbb out scas fldenv rcrl les add loop sbb aaa rolb loopne mov aas mov inc cmp push xor mov lods icebp xchg dec inc adc sbb sbb inc cmp stos cmc push push je add fwait mov jae push scas (bad) scas jmp pop or xchg or push mov adc jecxz out or mov dec arpl add rclb jl lahf and bound mov fildll push nop xchg push lret stos insl lahf ficoml pusha jmp mov daa outsb popl ljmp push xchg lock sbb movsb push lahf mov test push mov inc movl adc and test inc (bad) sbb lock xor xchg out es and xchg cmpsb shll mov addr16 push sbb je fsts enter xlat sbb adc pop loop cwtl jo pusha jge rcrb pop stos mov mov sub inc xchg pop pop cmovns repz mov pushf mov call xchg test popf lock fnstsw sub xor (bad) lock addr16 loop test xchg mull in mov dec push movsl daa arpl xlat pop mov cmpsl popa (bad) shlb sub rolb call sbb mov inc das dec movsb mov add pop mov daa lahf cwtl sbb xlat mov in jae jle (bad) cwtl testb adc xchg add test xor add dec shll sub aaa xchg daa bound fild jb push (bad) roll les xchg arpl les test mov push pop cmp pop mov stos es cmp mov outsl aaa dec test dec cmp gs push dec lods mov aaa (bad) sahf push popa daa sub dec sub faddl mov xchg in in jmp scas dec movsl ret mov aaa addl dec sub sbb flds inc cmp mov pop sub ds lret jle rorl gs das repnz test mov jns lods add pop cmp push mov jbe pusha adc addr16 bound (bad) xchg jb mov movsl dec jnp dec pop daa js pop and outsb jmp stos gs xor inc imul repz adc inc (bad) es jno xchg sti push (bad) popa imul adc or or sub push cmp or iret dec dec lds mov dec imul push lret inc adc jmp mov pop jnp mov mov xlat adc stos mov push inc dec out pop test cmp adc sbb enter call bound aad pop iret fscale mov (bad) and adc add (bad) leave repnz js inc rorb inc sub sbb js xchg xchg push pop pop fstp ffreep adc jo icebp movsb gs xchg jno add cwtl xchg or push dec sahf cli or pop mov in ljmp outsl cltd mov cmpsl loopne stos in pop and xor out adc popf ds and fisttp fwait std daa mov popa mov sub jge pop mov daa imul lahf xchg iret imul fldln2 popf push orl dec push xchg ret push lods lds or ror mov add inc mov jle dec mov push xchg inc sysret add loop leave jmp js lods (bad) inc cld pop insb mov inc ss mov dec cltd out mov dec loope mov mov or xchg pop xorb test cmp push out rcrb jl dec adc sub inc dec mov lret mov cmc inc cwtl pop sbb pop pop jg push sub adc aam mov xchg cld pusha mov pop dec popa sarl punpckldq mov rcl xor push and std enter popf int in ljmp (bad) lock std inc popa lahf loopne jmp test cmp arpl dec cmovo pop int mov push xchg paddb or test jg out and icebp or mov mov fist call add push fdivrs fs hlt jecxz jns stos sbb ss sbb in pusha mov rorb pop icebp cmpsb and dec dec inc lods and mov in sbb push add push clc xchg and std fcomps sub push insl push test push xlat dec lcall dec adc sub ljmp sub push repz scas cltd sti in xchg gs push xchg lret xchg cmp or jno leave adc stos and dec mov enter outsl lea movl mov loope gs (bad) sub pusha xchg and fwait shll popa gs mov mov mov movsb push jge or pop xor mov pop rclb sbb bound pop hlt sub addb jo mov rcrl add js xchg pop mov fdivs mov jnp add mov push sbb pushf into dec sbb std adc dec mov inc push pushf andl icebp and cltd aam imul or pop mov mov test sahf sbb mov sub in popa js in and movsl lods push jle dec insl ret test cmc sub jns push cmp (bad) mov dec dec jmp dec sbb mov lret das and fdivs xlat mov rclb xchg and cmp and pop out out aaa stos add fbstp popa sub pop hlt (bad) xchg cwtl add (bad) notb fcomps out loope mov shrl mov mov sti in xchg insb fistpl pop cwtl mov pop push inc cmc adc imul pop fstpt test and decb cmp cltd fild (bad) or pop sub rcll sub notb cmovp add fisttpl pop push sbb sbb push pop in mov lcall aad and push fimul cmp jae daa out pop (bad) mov fadds push idiv pop (bad) rcrb lods ja test shl dec jnp insb push mulb leave imul out imul mov sub loop xorl scas cld clc and xchg xchg jno std aaa dec and or push cltd clc inc push mov (bad) movsl push dec and push call push inc cmpsl xchg (bad) clc daa popa push mov push jg push push cmp dec iret fwait pop jbe pusha idivl inc dec adc inc xchg out pop clc push inc cmp test add xor es lods pop cmpsl arpl dec cwtl into pop mov daa jge mov fs bound dec in jno sbb mov mov inc pusha add inc xchg out bound push loopne int3 mov mov push or push push push fist sahf std push mov ficom cmp cmp mov lahf lock mov adc pop mov xchg pushf popl cmpsl mov mov xchg cmp pop or dec xchg pop dec (bad) cmpsb pcmpgtd adc (bad) inc (bad) adc mov scas push insl (bad) and inc fistpl xchg cmp sarl lahf (bad) stos inc mov xchg jnp rcrl xchg xor lock idivl add sbb ja sub mov cmp std xchg aad sbb adc fild dec enter push and fisub mov fild cmp pop dec push or test dec jg in mov negb bound cmp dec test imul xor xchg adc push aas (bad) mov mov pusha jno mov aam push scas into pop mov cmpb and xchg jno bound mov jns jae xchg and bound xlat mov inc adc push dec pop stos push fcmovb mov and es imul and dec push iret mov push push out pushf cmpl pop add cltd dec push lods mov iret lea mov aas dec and stos or sub mov dec sbb or push add lock jbe stos std add sbb cmp cmp sahf dec dec (bad) push and cltd xchg icebp xchg mov jl inc mov jno mov jg dec fnstsw jge mov xor cmp out (bad) outsb adc push test xchg ret push pop push fdiv inc popf sbb push lock add aas (bad) cwtl pusha ja adc cwtl inc adcl pop lock push fadds xor mov in in mov cwtl test scas sub bound pushf push orb loopne loope push rcl dec or (bad) mov movsl cmp pop mov mov fist sti repz iret sub fsubs jns or pusha push add inc loopne lahf sbb push (bad) popf shlb pop test push cmpsl dec and popf pusha xchg push repnz xchg cmpsl inc test iret imul stc lock std out stos test imul cmpsl mov outsl shll add push popa dec loopne add (bad) dec out mov rolb lret popf mov mov cmpsb stos outsl dec dec ficom (bad) cltd ja clc push jno sub sbb stc popa lcall ljmp add sub jb push gs lock adc cltd adc sub cld pop daa lds pop mov mov fs negl add mov stos lret xchg mov pop mov cmpsl mov xchg shlb rcl mov or std jns cmc xchg setno dec push movsb scas enter (bad) and jo adc add orb lods or inc push xchg add loopne add rcrb rolb stc push pushf pop movsl std xor mov lods and (bad) mov dec jl jo std cmp fsubp imul aas mov cs xchg xor arpl hlt scas (bad) addb enter xchg cmp sub inc mov fisub adc xlat data16 movsb call add cmp scas sbb repnz icebp jns inc mov cmpsb cmp (bad) pushf aam decb jecxz pop sub clc out stc and sbb mov add pop (bad) cmp rcll mov aad mov mov inc mov push adc fiaddl pop ret std dec out mov sub test dec push (bad) gs addl sub std jp lret pop sub push or lods jg test sbbb mov movsl aas mov imul mov addr16 std push sbb int3 cs jbe push popa ss call imul and and or pop cwtl and ret inc (bad) icebp inc mov xchg hlt test inc push aam in js xchg lods push dec adc xor and mulb out inc xor imul repz movb adc scas mov cmp sbb and cmp loop out adc fsubp jge cltd js fwait ret jo sbb pop jno mov pop arpl pop inc loopne test mulb inc test xchg bnd ret sbb popf insb and pushf jo mov and aad repnz xor jg rcl and and sti sub cmpsl mov leave cmp cmp int add jg js cwtl xor xchg push jcxz inc mov push mov and sub pop dec shll adc cmp mov pop std sub fwait mov jecxz insl aad push mov mov fnsetpm(287 movsb pop ljmp and xchg mov (bad) lcall out jg jno test cmpsl clc cmp mov jge loopne sub ljmp bound dec inc and mov lahf hlt dec movntps jg xor pop pop jb mov push jg mov sub fidiv addr16 sbb clc jmp stc pop data16 add insl push xor ret lahf in sbb or cmp dec cli pop sub popa inc jecxz mov data16 push sbb jmp mov push cltd xchg inc fiadd insb mov movsl mov movsl push pop lods cmc xor in lea inc jae jo mov fstpl cmp mov aaa mov jge jno push mov incb xorl jge cmp (bad) cmp bound jne in popf dec pop xor cld xchg xchg test icebp push xchg xor jge popa inc pop pop bound js bound push inc push fucomip imul shll and dec xchg loope mov lahf popf push rorb mov int scas push fbstp push aaa pusha adc inc mov lea push pop or es sbb xchg push imul mov inc daa ss xchg and or cmp sbb daa sbb sbb mov jl fldl repz add jae pop mov mov lea sahf and or xchg lret cs adc pop ret addr16 sbb add xor pop xlat sub nop jg adc add and nop jg and lock push xor test xchg pop andb push fs pop and mov adc test adc sub inc cmp push fisttp cmp sbb incl inc mov flds dec and and add rcll (bad) scas xchg sub adc rcrb xor and cmp dec add xor pop sub push inc lcall sub pop cmpsb andb sbb or fcompl loopne addr16 call pop popa call or inc cmp loop and insb inc xchg and sarb inc dec push jmp out pop xor hlt loopne adc ja shrl mov inc inc pop cmp add mov insb stc mov sub outsl add sub xlat mov jecxz (bad) cmpsl jl dec add push jge or xchg stos (bad) (bad) sbbl push aas adc push ss xor and xchg sbb out add fld js popa jp adc xor bound cs mov int cltd cmp sbb pop stos out out jecxz and aad (bad) fnstsw scas xor adc inc nop and (bad) in cltd idiv (bad) dec stos movsb test shl inc lahf pop xchg push (bad) in (bad) stc mov dec mov test dec nop jno jl add aaa mov mov or mov in mov adc xchg bound pop or jle push (bad) jns jbe shlb add fwait in mov sub sbb add mov in push push call out js loopne dec into and xor sbb test testb and dec and add in adc xlat stc sub inc shrd or push (bad) mov jmp push mov cltd adc push lret bound std push shlb addr16 cltd leave fwait mov stos xchg imul cmpsl dec addl cmpsl std add into mov jp push or pop jmp sbb sahf sub popf lcall sarl inc dec and inc pop xchg loope scas enter vsqrtsd xchg bound lea adc push rol mov add cwtl jb adc imulb leave (bad) test push xchg push sbb dec xchg sub dec sbb lcall cltd push jno mov or dec fwait bound int sbb xor sbb mov xchg mov roll shrb xchg sub and push mov dec adc (bad) lds mov roll mov lock sbb mov cmpl and xchg sub ja xchg (bad) ljmp test cmpsl fistpll stos inc jne icebp jo lret xor out nop xor push (bad) mov mov sub (bad) add xorb and pop pushf aas gs movsb xchg xchg loope jg lret jge jns inc cmp xor adc add call mov inc daa xor pop fisttp fisubr stos xchg add pop into fsubr stos mov andl push jno sbbl xlat daa xchg fcomip mov push cltd test shrl pop out rolb bound nop scas push jno xchg rorl pop out sti or jg (bad) aad sbb sarb mov jg test dec lock sbb into mov sbb pop inc loop lock jnp sbb push out movsl iret lods sbbl jmp cmp icebp jg mov (bad) int pop jp mov fistl movl sbb js andb addr16 shl push pop add jmp pop loop stc pushf daa stos push or pop int push scas add jns test iret jmp pop pop or jle cmp pop or adc rcr jmp fistp int3 sub push jae and sub push cmpsl movsb xchg iret mov push jb arpl jg fstps add adc push lret in aam jmp sub inc imul pop mov test mov xorb arpl jno cmp fsubr sti dec in cmpsl aam (bad) idivb and bound test jg xchg jp xchg fwait pop bound jmp and sbb fmull xor push jb loope aad out int mulb add xor addr16 push js mov movsb out inc add mov int3 clc scas das dec pop mov adc pop hlt loop call in aad jns sbb mov nop mov push jb addl mov loop in jg xchg iret pop mov popa sti mov jl mov imul frstor pop fadd leave mov out jnp mov mov fs lret mov (bad) cltd mov mov xchg daa jg pop cmpsb arpl pop jo inc (bad) mov and hlt adc cmp pushf popf std pop dec imul add mov nop iret add pop pop loope fdivrs add add repnz sbb dec lea sbb cltd sub jmp or incl cmp ja lods xchg aas call jno and std or mov fildll test (bad) push xchg pusha (bad) xlat cmp jo mov in loopne out cs mov outsl xchg ss xchg pop mov test push jno xchg inc pop cmp lock sbb stc xchg mov mov movsl fistpll mov and pop mov test mov punpcklwd or adc cltd jmp push jno mov out aaa jmp in lock rcll sub adc movups push and imul int mov lret pushf mov shlb insl mov data16 xor or popl jge subb outsl jbe xor insl xchg sub push call loope jbe (bad) xchg inc in inc jno lret cmpsl (bad) mov xchg aas bound arpl xor out stos inc int std (bad) push push loope mov adc js mov nop cmp dec jae loope xchg daa pop paddusb loop cmp lock andl inc iret mov jg jns and loop (bad) mov push dec pusha (bad) ficom movsb add bound or inc movsb ret pop sub pop gs aas (bad) xor inc mov push dec push add jmp das dec add sbb jbe,pt inc and pop decb xor and mov test lods fidivrl adc xchg and inc adc pop cmpsb mov dec push mov xchg and add or dec gs cmpsl out imul lahf cmpsl mov lds sub xchg cld jo daa nop daa bound sarb push test out inc xorb dec sbb jns cmp push mov pop push or sbb mov aad fs xor add scas push sbb mov or into bound xchg popa test std sub and inc inc jge (bad) xchg lock push sbb icebp or scas xchg fcmovbe dec imul jle adcb inc lret sub xchg nop inc sarb out lea mov sbb add (bad) icebp stos pop sub inc pop iret jae fiaddl dec lock fdivs aad xor fcoml dec jnp stc mov sbbb pop and inc jp inc push loopne imul and out add mulps add jge aas popa ds cwtl xchg mov cld call mov push out jl and add rcr pop mov ret les movl decb popa dec out pusha dec cmp push xlat pushf pop rol pop fsts outsb pop and jl es dec arpl insb fsts mov push fbstp inc fwait and mov mov dec imul ja,pt hlt push loopne push test sbb lcall scas insb push push xchg mul inc aas or out popa push out incl jp adc jns shr test test sub adc ss cld and and pushaw dec xchg jae pop scas pop or scas es lock or incl cmp push mov popf andl xchg icebp cmpsl mov notb dec adc mov pop roll fwait mov xchg (bad) popa std sbb lds ds jns dec fdivrs xchg mov mov sub mov lods cmp bound ja test das or pop or push pop xor mov clc bound push mov pop test out xor test pop mov iret inc leave or mov or xchg pop jnp fdivrs dec pop addb add cmpsb sub mov icebp outsl inc cmpsl std xchg mov ja push std mov lock fwait jmp push jl rorb pop fbld rcr and icebp lahf addb std pop dec cwtl fsub add fnstcw sbb cmpl bound pop adc sub mov clc sahf or pextrw sbb test mov and test push movb cmpsb xlat fist test iret xchg mov pop cmpsl clc dec loope adc out and jl out jno frstor add xchg iret out nop adc frstor sub dec ja xor sub mov push fldl jle adc jmp pop jbe dec pop push lods cs je sbb cmpsl push shlb gs and xchg scas nop pop clc jle jge (bad) test cmp imull (bad) scas addr16 insb aad repz jnp push or cli mov loop mov rol inc jle aam fldenv movsb mov orb js push js mov aaa sub jno in and dec dec out mov mov js (bad) add mov mov pop rcl add pop jae cwtl lahf std sarb push or (bad) (bad) jb cmp mov rcl lock lea sub inc das push cmp adc xorb dec hlt mov pop aaa push mov imul dec mov stc cmpsl pop aam jle inc mov xor dec aas out inc and push cltd pop (bad) flds cmp jle mov inc jno jno mov cmc dec mov fstpt pop test mov sub and xchg jl (bad) loopne inc and mov xchg lret aam mov (bad) leave loop in in mov call jg push and movsb xchg pop mov aas push daa mov shll lods gs sbb dec lea add sub cmpsl test fdivl mov das addr16 sbb pop shr push pusha ss rclb mov sbb mov cltd cmpsl ja iret or sub mov or daa fdivs iret mov and dec fnstsw or aad (bad) sbb out daa popa cwtl test mov pop jp aad out out cmp (bad) ror popf lahf frstor inc jnp loope test mov sub in push mov pop call push sbb fs jns pop pop adc sahf pop dec mov fistpll sarl xchg popa out nop add xor inc sarb sub scas stos dec loop dec dec and enter cmpsl adc mov xor sbb fldt enter jp and lods lea inc addr16 dec push incl inc ret test pop fs rcrl inc mov (bad) repnz cmc aaa and sub fidivr lret xchg out js cmc test and adc sub inc repnz popa (bad) and clc test dec fnstcw (bad) pop fidivr inc fnop jp loope lcall and sub js jo popa adc setne fbld arpl hlt sbb bound lcall mov mov mov push (bad) dec imul or adc repnz gs or jo js mov adc movsl dec jle jb dec mov lcall movsb sbb (bad) push push mov dec mov inc hlt inc pop cltd jecxz cmp pop cmp adc test mov pop mov xchg pop cmp and gs mov clc and imul jne jg imul addr16 lret add jl mov movsb sub adcl sarl in dec (bad) rcll sbbl lea mov inc insb enter outsb rolb test xchg bound mov mov data16 test test sbb lcall mov pop (bad) mov inc inc pop pop inc aam pop mov push mov fisub repnz loopne sbb cmp bound pop add bound mov lret stos and iret mov jl mov pop mov jmp aas lock in fmuls jg sub jns inc bound adc pop push daa cld fistpl jns mov dec es xchg dec (bad) in (bad) pop xor vmovntps addr16 mov loope xlat movsl repnz leave mov mov into mov dec aas inc mov (bad) hlt rcr aad xchg push sbb cld jmp mov mov mov xchg add imul aas out gs dec lock xor cmpsl dec dec movsb scas push pop pop pusha dec dec mov js sbbb mov jl adc frstor mov dec dec sbb push cltd cmc and dec inc pop mov incl cld or mov jno mov dec push xchg ret add dec scas jl mov test xchg jno (bad) and jne and inc xchg adc push dec ljmp sub pusha mov cmp xchg push push sahf sti inc sub and pop out ret icebp push cmpsl movsb ror rcll mov fwait cmp sbb sti cmp int3 cmp jns ljmp sub cmp iret fisubrl test pop ret pop loop jecxz gs xchg test dec arpl jnp (bad) mov inc fstpl (bad) out adc movsl movsb cmp mov rolb imul nop inc int shrb insl mov mov adc test gs arpl inc push xorl mul mov (bad) in outsb push push mov negl insl sbb cmp mov scas mov jns pop mov inc adcl sbb enter dec pop movsl rcll xor andl rcll jg mov and pushf jmp (bad) adc dec mov cmp sahf inc pop scas movsb out sti xchg bound out sbb clc cmp cmp xor sbb daa lea (bad) xlat push data16 xchg inc lahf loopne push jge popa jl out pop imul lock clc and pop inc popa mov movb add (bad) idiv mov int add sti popa movl adc jl (bad) lods pop repnz popa xchg mov ja pop popf mov cs mull popf xor popf jo out mov popa cwtl inc adc jge xchg inc daa dec cmp aad add hlt outsb push fisttp cmp and nop and (bad) loopne aam pop mov data16 nop in leave xchg lahf mov loope loopne repz fadds mov mov mov iret sbbb add and movsl xchg mov es loope pop negb jmp add lret decl push sub std push enter repnz cmp jns xor mov mov mov addl adc cmpsl clc dec push jno sbb movsb pop jecxz mov mov fwait gs cltd pop and pushf pop out and jmp shll xchg sub jge js xor cmc inc fist push test ret out or mov ficomp loop pop fnstsw les lds imul sti xchg faddp inc rolb loope xchg sbb stos mov mov pop pop sbb dec (bad) out (bad) (bad) mov inc call movsb adc ficomp cmp mov js stos jle mov (bad) xor pop push lds push ss mov lods adc adc nop push inc aaa aam sbb lahf mov dec out imul adcb xchg jbe ret and add sbb cmpsl ss cld dec sbb jmp push mov out xor xchg ds mov fsubl popa movsb dec (bad) scas mov inc jno dec lock std sbb stc outsb cmp push fild mov xchg pusha popf jb sahf mov mov dec daa lahf popf jae sub (bad) dec out sahf repnz or (bad) gs push push pop gs dec push ja scas cmpsl sub icebp xor jmp push movsl pop dec inc and test sub pop sbb mov inc dec cld cmp jmp mov sbb test rcrb jne in xchg aam das nop add mov loopne push cwtl push and clc dec and mov (bad) out cvtps2pd or push popa or call push xchg xor lret cltd pusha gs outsl push arpl sbb cwtl mov pop jae add and inc xchg gs xor inc arpl sub popf icebp rcll lock jnp or fcompl clc mov push pushf pop push js rolb jne lock fsubrl and rclb cltd dec shll lds lea hlt jmp mov imul cwtl sbb cmp mov pushf inc mov daa jno push cmc cmp fcoml daa out mov sub test fmul inc inc arpl (bad) mov aaa dec mov dec jae in lcall xchg xchg add (bad) and add cltd cltd and hlt sbb cwtl sahf xor and xor mov sbb dec imul arpl stc arpl sbbl pop xchg das pop pop sbb clc cld inc cltd xor xchg sbb inc pop jbe decb hlt inc inc cmp js test mov mov stc xchg lahf xor lods stos sarl adc cmp daa xor sahf bound push adc popa xor ja lret daa mov into mov dec and sar test mov xorl sahf movsb push std lods lea push xchg sti inc dec jg mov pop mov push ds sbb xchg push bound std neg (bad) lock sub pushf data16 jg push and std je mov cmp sbb daa adc xchg lds (bad) cli push outsl pop pop negl add jecxz data16 jno push rorb aaa dec mov mov pop and pop or push and dec push pop ret mov in setno cmc pop sbb pop nop daa xchg pushf pop sbb pushf pop mov outsb add add lods jns leave call dec fxch js dec mov (bad) mov js xor ja pusha lods mov js and lds lret push cmp xchg inc mov inc gs push cld loope cwtl cmp xchg jge loopne mov add push pop daa rcr cmp xor and jecxz pop rcll gs mov and js inc inc cmp fiadd add addr16 (bad) push xor push mov pop mov add and fnsave nop outsb push test test cwtl xchg adc and inc cs shrb (bad) push daa and fidivl fcmovnbe cmp cmpsl bound inc jns mov loopne add mov inc stos outsb or imul lock and add pop push pop xchg jg and and and sbb or jl sbb jge dec lret pusha or dec cmpsl push xchg sar out mov fdivr cs hlt inc bound popa mov pop add sahf sahf and jmp and fimul dec and cmp arpl inc (bad) mov subb movsl js enter pop and cmp jb mov in cmp push mov xor sbb lds mov jmp leave and popf sbb or test push nop or aam push cmp inc addr16 mov adc nop push adc xchg add xchg mov shlb xchg (bad) fsubs pop mov xorl and cmp (bad) sahf into dec xor loop and cmp mov add in scas popa sarb and bound scas jae bound clc xchg add rcrl mov or lds add xor jae xchg sbb and dec jno mov xchg lock fwait cmpsl mov mov bound push (bad) cltd sbb out pop cmc adc movsl dec shlb loope dec loop adc adc ds nop/reserved cmpsl mov fs cmp sub ja adc adc jg add inc jno and push inc jns addr16 push push xor fmull mov imul stos (bad) pop fsubrl ret sub pop inc add jno cmp mov js mov push fiaddl dec cmp das and dec (bad) imul imul and lahf call jne pushf xor jg movsb dec lods es inc call and popa sti lcall cmp sbb or outsl cmpl aaa (bad) jmp push shrb xchg cwtl sub sti loopne add pushf pop js xchg mov xor mul lods ror inc sub cmpsl and std andl pop aam push and sarl mov mov dec mov push dec rcrb popa mov push out (bad) ja std adc mov sub xor pop mov sub fidivr pop dec xorl roll jge bound xchg lock lret mov mov outsb pop pushf xchg int3 ficoml push jecxz (bad) and imul push (bad) lock (bad) loopne adc jns imul or mul js out aas pop pusha call in push push loopne pop divb jo cmpsl and adc lods push inc fbld jno mov clc cmp push sbb inc ja mov pop pop pop outsl xchg lret scas push adc (bad) sub jmp and dec dec cld cli mov push pop push movsb or iret popa xchg mov xchg loope push mov push adc mull cmpsb cmpl les dec pop leave mov jno or adc add mov add imul ljmp cltd mov push fwait pusha cmc icebp scas (bad) mov stc and (bad) mov (bad) cmpsl pop stc sub mov cmp punpcklwd mov sbb dec adc jo test mov js and xor xchg lea mov xchg cld pop add bound (bad) hlt inc sub std add dec rcrl aas (bad) cli icebp and add mov imul orl out (bad) cmc mov adc ret data16 jo sbb idivb mov mov ldmxcsr mov xchg nop ss add mov cltd stos add nop pop pop xchg lea mov inc or and addr16 loope mov cs push sub ret sub inc mov push inc loopne shlb xchg mov xchg ficomp loopne inc out xchg jg jb or bound push inc lcall fildl popf icebp ljmp xchg das mov jne popf pop leave mul pop pusha testl sub bound or cmp sub push mov and or (bad) mov in loope js and and daa pushf cmp rorb cmp popa fstpt sbbl jns rcll xchg and popa std lea cmp push jmp jge cmp stos dec xchg scas in pop pop hlt pop leave js jno jne pop decl lret outsl mov mov pushaw and mov sbb adc xor add sub subl jne cwtl (bad) inc out xchg mov shlb add call xchg cmpsl rolb cmp inc sbb pop (bad) push or xor addr16 mov push pop jne pop mov fist in xchg xor rep enter adc inc in pop imul cmp scas rcll outsl pop sub imul mul adc inc push dec iret mov add mov stos jmp out push sbb js or lea and push in dec pop repnz pop (bad) adc loop xor adc and mov shlb call pop sub dec sbb and aas inc (bad) (bad) sti xchg bound sub sbb xchg ja mov jl push test ja imul sub jne ret adc inc rorl loop movsl (bad) (bad) push push mov arpl mov jb aaa lock add sub and cmp in pushf in and dec xchg lahf pop xor data16 mov aad orb test (bad) and sub jbe orl add pop jno jae mov in xor dec xor negb add test imul gs or sub xor mov int3 fsubrs jge ficom adc cmp stc dec clc nop data16 pop push js shlb rcrb jns sbbl fsubrs aaa push ret lahf push or xlat incb inc bound fimul sub xchg xor out pop js (bad) push lods sub out into dec push mov pop jns xchg scas adc or jg data16 adc add outsl out cld jl sbb insb mov das jbe orb pop xor sbb sbb test push adc sbb repnz adc (bad) mov pusha pop sbb push hlt sbb mov daa push lret pop das sbb jo push sbb je pop (bad) or nop in cmpsl mov rorl iret mov je xchg gs push leave fnsave out rclb inc loopne sub das pop test into cmp dec in dec in xchg push inc mov repnz addr16 test repnz arpl cld cmp idivb and cmp sti mov pop out and or in dec ljmp sbb loope les add (bad) pushf cwtl mov xchg popa mov sub cmp ret ret nop cmpsl mov xchg std inc mov pusha loop hlt cmp pop das leave push popf pushf sub mov add sub fwait data16 jl xchg cs gs ret pop scas fldl andl fs in cwtl push dec popa xchg adc sbbl dec sbb cmp xchg adc mov jns stos push and dec cmpsl mov pushf pop jno mov data16 sbb mov fdivl into (bad) jbe push and dec into imul ret shr mov aas pop (bad) bound and inc xchg insl xchg pop and jge lds lock cmp inc faddl ss fwait sub mov popa cmp lods push cmp mov out mov fildl fld call arpl dec push stc push sbb sbb mov cmpsb adcl outsl dec imul lea loopne lret lock xrelease pop add add in xlat loope mull adc xchg lea push pop and arpl negl imul out and and cmp scas ljmp pop scas xchg adc jge dec sbb fcompl cs pushf dec xchg les std daa mov addl mov popf lcall test movsl fstps in mov and aas add (bad) shl dec movsb cmp inc push pusha std jns loope cmc cwtl dec andl das fs and les sub out cmc (bad) xlat sub add test lea enter mov dec popf mov pop adc lock cmc jo icebp stos mov out cltd sub mov (bad) dec sub js into push mov add out loopne jmp repz rorl pop and stos add adc icebp imul loope hlt dec js jns ljmp andl ret cmpsl jg inc or iret dec mov cltd movsb mov bound push adc pop push lahf mov das xchg mov lock popa movsl pushf sub and aas adc mov mov pop test dec addr16 mov sbb mov xor lahf (bad) mov mov shlb jge xchg mov pop loope jbe test outsb jbe xlat outsl pop xchg (bad) push and lds js outsl (bad) and pop adc fbstp shrb lock daa mov in mov jmp mov (bad) loop jb and mov jle aas ret push xor repnz (bad) jo and push test sub pop cmp inc fwait outsl bound xlat cmpsb jo cs mov in mov cli in inc neg lock std or into (bad) negl pusha mov xchg xchg ret jle stos xchg inc lahf xchg and lahf lods cmp nop mov pop subl (bad) mov pop push or mov (bad) and loope push jge mov pop jno fsubs or push mov sub mov mov xor bound mov xor and xchg mov imul xor dec mov aaa je popa cmp adc mov loop sbb test inc pop add mov mov jbe and repz xchg push mov mov cmp stc cmp cmpsb push mov sub int addr16 push sub (bad) fdivrl dec bound dec test lock (bad) cmp lret push imul jns xor or das std inc or or mov movsl iret cmp jl addb das xor push popa ret adcb cltd pop pop jbe and (bad) mov (bad) mov pop lret sbb icebp adc stos fcmovbe loopne cwtl not pushf insl cmc test ss lock iret test stc sub and mov push or outsl jg adc test icebp mov inc push and add (bad) js aaa ficompl cmp aaa int3 xchg gs clc (bad) (bad) rcrl xchg outsl nop lret push imul xchg data16 push jl jle iret outsl jb clc stc add sub jns pop mov arpl fimull xchg xchg push sbbb scas scas fnsave enter andl inc clc jb cmp mov push jg sbb clc inc aas cmp fnop sub test add movsb and add inc stos and mov add popaw xchg push sbb xchg bound mov jno sarb leave lods dec push pushf pop xor ds jnp mov (bad) jno add out mov (bad) bound jae sub sub imul out loope out push enter (bad) stc pop mov or nop or sbb mov pop push push push add sub xchg call add push dec stos (bad) dec jno int3 mov into repnz incb retw mov inc addl jno sub push dec bound imul push out out inc bound mov cmpsb (bad) jo (bad) fbstp loop xor addr16 lock divb cmp loop pop mov xchg inc sub sbb repnz aaa pop mov orl mov sub ljmp pop pop imul cltd subb aas mov mov and or jge push insl into mov sub cmpsl or jl mov pop and jge (bad) movsl pusha dec mov inc test adc lods es in shrl sub cli jg sbb cmp bound test rcll push sbb leave add inc cmp and cmpsb or hlt loopne int3 das xchg mov insl pop out lcall xchg cltd das dec xorl adc ljmp (bad) out inc sub mov jb pop popa and xorl jl (bad) pop mov rcrl ljmp xchg scas cmp mov jne pop xchg ror and (bad) add adc andb or cltd mov lcall std xor sbb xor mul xlat bound mov mov test pusha dec pop pop cltd popa popf fisttp fisubl add popa in aaa aad repz push cmpl pop jo dec loopne js test test adc clc or bound jne dec aaa xchg addr16 fs and addr16 lcall fisttp inc fwait imulb pushf or jne bound out js fdivs ret nop imul bound sti ret add arpl xchg stos xchg adcl and nop jno push mov std or sbb jns jmp jae or cmpsl jmp (bad) push cltd aad jmp xchg aaa mov ret cmp dec dec cltd rorl in lret bound rcl adc (bad) xor or and (bad) dec test cmp dec fwait mov mov cwtl mov fnstenv adc dec cli (bad) mov pop lcall cld push dec pop imul and mov lods imul out scas sbb cmpsl dec ss sbb cmpsb sbb pop sub mov es push std mov std pop jb mov es mov inc cmc mov sub mov push mov lock aaa inc rcr lods test cmp mov xchg mov xor and inc cwtl and gs (bad) movsl ficomp addr16 push push xor add fisttpll js inc mov bound dec and out mov fwait dec mov add mov cmp ret lea js iret pop jnp sub add mov fbstp (bad) cld std pusha mov pusha (bad) roll push sbb or inc jecxz mov push movsb sbb aaa (bad) xor fstpl js aad or xor cmp mov sbb jmp out shrb xor mov (bad) xor push xor jo sahf adc jge mov xchg jae dec cmpsl sbb or stos jp and lea mov (bad) xchg repz dec ret xchg cmp xor daa jae jnp mov add fisttpl jbe (bad) (bad) mov push inc mov inc dec mov push js add push clc push lods out fwait jns popa cmpl dec dec sub into or scas push mov jge jg clts jmp nop addr16 js xor sbbl inc popa mov das xchg fldenv pop push sbbl (bad) hlt or (bad) push mov mov div inc and mov push sbb lods xchg mov imul ja cwtl inc out jg pop test inc sub mov mov or jmp pop gs cmp or (bad) mov lds out divl xor cld or mov push mov jecxz and pop jno adc (bad) and ss mov adc negl sbb inc ret outsl xchg out mov xor or jae inc je nop sbb cli and iret mov xor setns bound mov cmpsb fcmovne lock push les inc jne in into test push add sbb loopne push push sub add sub sub es lods cld nop int3 dec xor popa dec jmp in pop mov push or test push test std call popf xchg pop movsl leave xor lds jecxz iret addr16 sbb iret push xchg adc loopne out dec rorb fistp and inc test push outsb jns inc (bad) popl and fistp pop and sub xchg mov cltd adc add sub rorb ret push and cmp lods out (bad) pop adc (bad) or subb lock inc pushf pop push xchg mov mov add cmpsl fs nop (bad) sub retw jbe mov arpl bound adc fnsave xor pop out jno in jae test lret pop dec dec add mov lret aaa dec test shlb mov loope xor sbb in cmp xor sub adc xlat and lods into leave adc push (bad) jae add pop fild xchg lds nop xchg mov add push stos lds mov pop jno add sub mov in mov test cmp xchg sysret call call add sbb mov (bad) jmp scas mov enter lret scas or xchg xchg jns ljmp call call and dec addr16 adc inc arpl mov lods sub hlt mov lods lahf dec (bad) adc mov nop (bad) out arpl outsb cmpl in pop roll arpl scas in mov cltd pushf call dec sbb push pop lea mov sahf clc imul aas data16 mov push test int mov cmp push rcrl outsl xchg add dec insl adc mov mov in pop popl fdivrl pushf push les popf stos push mov outsl jno imul mul xchg adc xchg insl xchg out push lock sbb fdivrl sub or xchg sub pusha call and pusha test loop (bad) xchg pushf in pop cltd je pmaxsw add aaa adc ja rclb dec add mov adc out movb ss inc sti sbb push jno mov dec adc lahf lock andl pop int mulb js pushf popa dec mov fcomps mov mov js mov cwtl arpl (bad) and cmp jb js movaps (bad) sbb xor test inc pop in sbb inc test inc fisttpl mov sbb push loope es dec (bad) addr16 or jge jns adc popa test sub rolb adc push fisub mov push ljmp lcall jno mov insl xchg adc xchg rol js mov data16 push push adc cld mov lea pop pop xchg add sbbl pusha lods mov cmpsb jno (bad) pop pop popf cwtl mov mov push movsb mov push (bad) fsubl add dec xchg inc pushf je and lods arpl sub jnp and scas xor fptan xchg inc cmp cmpsl dec mov test faddl data16 nop cltd lds cmp add (bad) mov cmpsb jae dec popa fisttpll mov cmp push fwait push add sar int3 xchg lods gs pop mov pop push fsubs (bad) inc jg push mov mov add lahf ss call cmc jnp pop insl push push popa nop in pop adc sub jne fs inc jo push xchg ficom push adc xchg xchg movsb sbb bound bound pop inc push fimul xchg gs sbbl sbb lahf xor dec xchg inc add mov jae or sahf cld sbb sbb pop sub mov xor out lods pushf fs cmp push xlat sub adc aam repnz adc lea or ficomp in dec xchg call fs mov out loope popf pop in (bad) and scas popa (bad) je mov out xchg and sbb dec xchg cmp pop inc daa rcrb movsl iret mov inc push mov cwtl lods daa ficom arpl mull sbbl dec adc fbstp out lea lds out movsb or daa loop iret mov ret movsl outsb jge sbb jns xchg paddusb mov push push mov cmpsl scas inc test test mov push leave sub mov add pop sub movsb xchg cmp cmp xchg lock fadds jl (bad) jg lock and (bad) lock mov add leave loope dec daa test cmp test cli out push test or mov adc inc (bad) je adc popa cwtl adc (bad) and jns mov push mov test cli (bad) xor mov imulb in (bad) cmpb mov pop inc and hlt dec push (bad) sbb sub jl int3 loope out data16 bound push push adc lret test adc push fisttpl adc addr16 mov inc stos rcll or lock pop mov mov xor adc mov aad ficom leave pop push lods nop pop repz mov jg sbb push imul push orl out cmp mov xlat popf int3 bound sbb cmp rolb ret mov (bad) fistp pop pop xlat imul pushf mov and dec mov ds adc push ret icebp cld jae js dec or arpl or inc hlt or xor call in test jno and pop bound jp jno push jo cmp dec push fcompl inc and (bad) mov shlb mov mov in push data16 mov pushf inc dec das gs fcomps bound movsb aaa movsl inc mov lock (bad) call lahf or gs sbb out pop lds xchg pop dec inc dec xchg adc fiadd sbb inc add ds inc mov sub mov (bad) or sub popa test push mov loope lea fsubs shl mov in out mov popf cld and loopne add jge mov and jne in pop jne pop loop fwait bound xchg into test add adc push shl shrl jae mov (bad) dec inc mov pop pop and add (bad) in add roll mov sbb pop jnp dec addb fs je aas fnstcw stos movsb mov iret xchg (bad) xor in pop inc pop jle scas lret jnp mov mov js leave mov in (bad) out movsl fs add (bad) loopne or fisubrl push add pop daa or cmpsl mov pop lds shll cltd cmpsl mul mov enter fwait lods dec scas sub test mov mov nop xor mov enter cmpl orb rol gs pop fwait sub adc push jmp jecxz dec xchg in in or pop push cmp (bad) xor inc and dec sbb sbb and push jne inc adc dec mov inc out jae ljmp out mov arpl gs inc out push loope out fmull cmpsl push jge and pop cmp jo dec fbld fcmovnb (bad) fistp pop xor (bad) xchg (bad) mov andl sarl imul dec jns dec rol mov lods mov scas adc imul jbe add nop sbb ljmp in or insl clc push data16 jns ret mov insl movl push and mov bound mov (bad) add lock jae stos testb pop cmp adc (bad) xorb push pop js popa mov dec push sbb fstpt std lds sub inc jl xchg sub jl mov ja and mov or or fisubrl pop adc (bad) push ret cli xchg sbb out js ret cmp lret loopne loopne std out mov imul xchg adcl pusha dec psubq rclb xchg into loop xor mov xchg pop lcall sarb clc dec aas add adc dec pushf scas test cmp lds mov daa das imul mov mov jle addr16 insb cmc dec xchg loopne add inc sbb test cmp sbb (bad) mov aas jge std push cmpl leave sbb push shr out ja nop jno fst call in popf push push jno jge in hlt pop cmpsb sbb xchg or mov scas gs test cmp jge mov gs cld jmp xor outsl push imul xchg scas out add clc out cltd aam out push lcall sub xchg push xchg cld out cwtl fisub (bad) adc fwait sbb adc icebp cmp jb aaa jne push mov dec dec push pop out out pop adcl and std push mov push push fcoml shlb and mov or cltd movsl fsin mov xchg sub add aad mov nop (bad) and ja std inc jne adc fimul and nop xchg out xor fs mov and addr16 out fmuls mov lret inc add pusha push inc push cmp je adc inc cltd inc push in inc test inc icebp dec mov (bad) cmp mov stc cmp (bad) mov test add cld adc dec sbb icebp pop (bad) dec adc cmpsl add xchg jmp sub push dec stc outsb push icebp (bad) lods std test andl mov fdivs push push push mov pop pop int pop mov rorl dec cld adc jge mov pop cmp xlat arpl cmpsl inc dec dec cmc sti out je cmp pop fnstcw jnp nop lods cs adc scas popa test mov jbe lock pop inc xor outsb mov outsl push xabort fsubl dec push loop out push jno and sbb mov (bad) jne xorl lods fmuls lret xchg hlt cmp jae jnp dec pop mov dec dec orb cmpl divb pop repz sbb pop cld adc jb push daa ja pop sub fcoms (bad) fisttpll lds test mov loope pop in jge inc xorl push roll xlat push and cmp push mov sahf push (bad) cmp gs fisub clc dec imul inc shrb mov hlt push (bad) clc repnz inc sbb fnstenv addl pop hlt pop and scas cltd push fcompl sbb pop jg popa cwtl pop cltd lcall mov jle adc rclb loope pop out inc pop lds bound lahf popa mov push sub adc push and insb pop push icebp loope push in inc ficom add lret (bad) cli inc sbb fdivrs (bad) bound bound popf stos jb xor inc lock insb (bad) xchg jge imul loopne pop daa test adc addr16 incl mov mov in sub jle jmp lcall push push mov in mov mov cltd cmp mov dec lods (bad) das push adc or dec xchg jmp mov push std or push lds cmp fildll add (bad) rorb xchg push mov push pop inc imul inc cmp mov dec push cwtl sahf jge jecxz jg mov cwtl (bad) test je adc icebp cmp or cwtl xor xor mov popf and add mov andb test cmp mov jg pop jle lcall jg and jg adc push pushf xchg adc or sarl fnstsw into hlt hlt arpl add jl pusha pop xchg pop xlat jns pop mov jns std push push xchg (bad) jae ljmp imulb dec popaw xchg xor adc ja jg mov in sub mov movl xor ja sbb push dec and sbb loopne inc add pusha push xchg jmp (bad) jno dec sub add push cltd adc xchg popa loopne outsl push std (bad) in cmp dec xchg xchg pusha and adc dec mov push enter xlat mov mov push enter sti xchg inc imul push jo sub fwait cmp or aas loop dec stc loop,pt pop xchg xchg and push pop add in scas push out (bad) and inc dec add jo jo pop xor jno push xchg sbbb outsl pop xor jp xchg jb dec xor mov cmpsl push and pop out imul jg cmp push mov inc jae gs adc in cmc outsl cmc push repz aas xchg popa fs ja aam nop or push and and dec xchg gs pop dec ret enter mov pusha add das pop sahf and nop or jnp pusha fdivrl push mov in popf push pop mov pop and push xchg lret sbbb out cmp mull (bad) sub push push fsincos (bad) push ret cwtl out or (bad) and pop ja clc push dec mov orl pop adc ficom and dec mov mov or (bad) repnz out push popa jo in out add pop cwtl sub push jns (bad) adc fadds in and icebp mov (bad) jecxz pop (bad) and cmpl xchg cwtl sub cmp push nop mov push xchg mov push js test jo jae movups shll add cs pop add xchg jmp and jl pop xchg push mov aas out out add popl pop or pop jno xchg (bad) jno orl sub mov mov push int3 lahf les outsl jae dec dec xchg js dec mov xor stos sbb and lods outsl inc mov in mov outsl js int3 les push mov (bad) pop iret arpl out cmp inc or xchg dec mov rol lds pop jp mov push dec add dec lock mov pusha ffreep mov dec fldl and loope pusha daa lock je aam push jle loop mov dec out mov adc pushf loopne cmp push gs inc clc stos popa sar and into jae pop mov adc inc dec rol imul andl lock xor or jl lds jl in xlat xor ss mov xchg pop mov clc inc lahf push mov pop inc into xchg push pop imul into mov or xor arpl mov ret xchg mov and or in stos add mov xchg out (bad) pcmpeqd mov mov cmp leave shll inc (bad) int3 push (bad) out imul lret mov adc cmpb hlt (bad) cmc push nop shr dec cmp mov cltd mov fldenv mov cmpsb cmp cmp les or std jl je lock xchg inc fwait sbb test daa mov dec mov movsb cltd pop frstor xor nop xor add mov mov ret ja push inc outsl lea popa sub jbe rorb xchg xor xchg (bad) push bound int adc popa and xchg jo add xchg mov mov adc mov ret lds enter mov addr16 jne js lods ja (bad) enter or repnz xor pop mov xchg lock shll sub jo pop adc xchg (bad) roll std cwtl mov dec sbb jmp movsl mov xchg imul insb inc out fdivs dec or addr16 push test scas mov std cmp mov test jecxz shll lcall pusha xchg add or xchg and call cwtl xchg insb sub test adc loop test pop add sub and xchg inc je mov cmp inc je cmpsb fnop test clc dec mov test xlat test push and popa lds loopne mov sbb xor addb xchg push sbb xor jecxz loope cmc (bad) pushf mov add xchg dec jno jae insl or pop rclb dec popa and push cld push jne mov negb inc bound in fdivrs popf out adc (bad) out adc ds mov fldenv and arpl inc add fwait loope jmp cmpsb stc mov test cmp mov add mov jbe lods xchg aad push pop xor cmp inc bound inc movsl call lods xchg cmp sub inc mov cli outsb leave cwtl mov nop popf mov dec mov xor fstpl jbe push xchg aaa into inc and and mov imul mov lcall popf test lret mov inc cmp adc cmpsb iret fwait push test mov cmpsb inc stos jg dec fwait pop pop pop clc call std out popa cwtl test aas push psubusb xchg or add jl mov xor push push mov xchg and mov mov xchg mov sarl or mov lahf sub pop and push jns hlt cld push std dec aaa bound js (bad) fxch insl inc push sti dec xor and or lods repnz int3 jno dec inc loopne movsl cmp scas pop inc scas mov mov scas adc cwtl dec cmpsl into aad mov push push out fmuls int3 and daa jbe xor loopne ja jno cld aaa fiadd ret sub jae cmp or fist fsubs inc jae and cmp xchg sub ss mov loope push iret xchg push (bad) mov test push pop inc mov test jae cwtl xor sub push and cmp cmpsl lahf iret repnz cmp fistpll jb test mov inc cwtl lock loopne push mov mov mov fistpll stos sbb (bad) aad push loop pop pusha lea clc mov imul mov bound dec movsb or mov add lea iret sbb into adc dec xchg pushf or push xor stc sub mov pop push pop scas dec leave jae adc dec test imul lea test imul jno mov out arpl push data16 sub xlat inc pusha add push mov pop and leave lds jge pushl dec aad movsl aaa xorl popf faddl xor out fucomip cmp push push stc push insl (bad) sub scas andl jge mov bound (bad) int3 in pop add cwtl xlat gs xchg std xchg mov add popf sub cmp sbb add push movsl (bad) (bad) leave mov inc cs adc add aas es scas sbb pop rclb dec icebp rcll stos xor imul es call popf and in ja cmpsl in pusha cmpsl jns cltd cmp push xchg mov test adc push popf test scas mov xor movsb std imul dec cmpsl fucomp mov (bad) rorb or adc mov xchg jge jp sbb out jno dec cli jecxz xor xchg cli fwait shrl pop out mov pop ss outsl pop jae push rorb mov adcb mov scas repnz popf push jns lock std push ljmp pushf push dec push sub mov sbb pop mov out xchg out mov push mov pop pushf roll loop in fcoml imul mov inc in fbld inc jmp daa in xlat add sbb mov inc dec or (bad) cmpsb and lods push movntq out xchg inc inc push orb mov imul sub sti enter test pushl stos jns dec sti andb mov jg xchg mov out movsb clc push daa add incb hlt aas stc shlb dec cmp sub xchg fs xlat dec cmp mov loopne sarb rcr jge sbb inc cwtl ja or sub adc pop adc bound nop mov push jns cmp lret cmp pop ljmp fwait add sub ret mov cmp test push cli aaa ret inc xor (bad) pop cld iret and push adcl add jge sti or dec popa icebp pop packuswb cmp pop addl xor and popf push cltd sbb imul maskmovq negl or push iret fwait jo out cwtl cmp mov (bad) pop scas pop cli add (bad) push aam xorb dec setne (bad) xchg es pop push push cmp daa pop mov ffree pop add xchg es sub popa lahf push dec xor andb rcrb test add adc arpl scas mov pop jnp push fistpll aam cs icebp dec or or iret inc adc jo (bad) out jg mov std dec mov jge fwait shll popa popf inc xchg or push addr16 adcl pop pusha adc mov mov cs pusha cltd lret xchg iret jae std jl add adc nop inc pop pop js cs mov andl jl and ret xchg test in mov mov fisttp sbb push push cltd into jbe loopne pop call popl nop popf xchg mov jecxz pop bound cwtl pop cltd dec shrb sbb push loop inc jl add clc pusha cmp ljmp in jmp inc cltd icebp and cli mov out jno stos lcall cmp (bad) and movsb xor push addr16 push add mov lcall mov iret loope xchg rcrl push sub aad out aad mov (bad) push xchg fisttpl sbb lods js dec mov sbb dec inc pop dec xor addr16 xchg dec nop dec scas fs xlat iret rclb out xchg xor faddl xchg clc xchg adc add mov inc xchg addb cmp lock decl mov mov pop and mov mov (bad) push inc mov sub fsubl cmp cmpsl rolb data16 inc dec je popf sbb add pushf in popa push pop and xor sub (bad) mov enter (bad) mov sub lret popa iret and bound and push test adc dec (bad) and lea int3 jno imul sub stc jge ss push mov pusha lret jbe add popf cmp stc or dec enter int3 push sub adc sub ja popf add sub jl int inc pushf sub in test sub cmp fdivs cltd mov sub jo popf sub mov dec cmp inc jle icebp mov bound lret or adc (bad) hlt jge (bad) mov dec cmp data16 sbb or pop inc add mov daa clc pop out jge inc wbinvd imul stc mov daa xchg aam add lock insl xor sbb add (bad) or xlat pusha mov mov jl mov jae mov or jo,pn mov sbb aas ja ret scas stc sbb std mov xchg add push push inc add cmp bound push cmpsb xor cmp sub sti outsl jno lret int xchg mov jle cmp push dec pop scas dec dec stc loopne and js add sbb mov and imul ds out mov out lret sbb movsb popa jmp jnp daa sarl dec out aad or std dec fadds lahf mov xchg in std call fsubrp xchg call add sub enter pop insb xchg cmp cmp jecxz pop (bad) xchg idivb mov test sbb mull leave sub jmp cmp loopne (bad) sbb repz xchg js loop and mov fmul sahf leave mov push iret sub inc rcll addl lea (bad) or fs addr16 int xchg pop inc in andl (bad) das or pop cmp push xchg dec and sub sbb mov mov jecxz pusha push or lcall insl push push test inc push jno xchg fwait sub sbb xchg dec gs (bad) shrb shlb (bad) pop pusha xchg xor orb sub and inc in and into xor test fwait in and mov adc (bad) jb fadd push mov jmp mov sbb inc or pop add iret das jecxz (bad) cmpsb out mov inc and bound mov pusha and xchg rcrl test ret call mov dec sub sbb lcall scas fwait sub sbb dec jns test jle fwait dec pop pop lcall dec adc pusha dec movl lret test std pop pop in pop inc cmp and dec inc pushf pop xorb pop mov jle jb jg rolb (bad) xor imul push jno xchg movl loopne mov popa rolb pop loopne mov xor and mov push add push dec pop out mov xor and push mov xor js mov add fadds xchg pop sub xchg mov or popa test push test push hlt jg push push and test aaa outsl jns out dec call mov cmp sbb dec popfw mov aaa scas jge rorl inc jno dec out xor mov xchg adcb mov movsb fsubl push sbb cltd mov add lea mov lret push xchg and lock std fsubs test pop fcompl sub sbb mov dec scas xchg dec pop rcrl adc xlat jmp dec test xlat cmp clc and push sub sbbl rorb movsl mov aad push pop lea push out xchg out inc test jno dec ja cmp mov or jns daa pop jo jp xchg cmp scas gs jo adcb dec xchg fwait js std xor jo (bad) jne add das mov jo push orl add dec add jnp rcr add in jmp jmp or ds call add imul dec mov jnp add (bad) push push fxch movsb icebp cmp popa orl jbe mov mov add sub loop sbb cltd (bad) sarb data16 xchg lods mov cmc sbb sbb addr16 arpl or cmp hlt push cs jae cmp dec movsl pop ds jbe stos inc dec repz sub loope (bad) push pop clc mov push fimul add test xor mov jns js sub fs push andl call sbb ja jmp clc mov jnp cmpb negb pop mov and add pop and fcoms push dec movsl pop in (bad) js jne cmpsb fwait outsl repz jns loopne lods or push xor movsl fcomi loope cmp bound mov and jae (bad) (bad) push sti xor and push orl and gs sahf jns xchg lds push push rcrb adc inc xor adc pop daa sbb cld add jne pop incl popa sbb inc sbbl jge flds pop insb sbbl push and jb cld (bad) push nop mov dec mov fs movl call ret dec enter in lock jae test lea stos fnstsw shrb pop test loopne sbb dec testb mov sti (bad) add and cmp fistpll lods adc jecxz jg pop lea gs dec xchg jo into and je loope jmp icebp mov pop fldenv fwait add adc lds mov inc pop rorb loopne cmpb pusha lahf rolb push xor jno and pop jbe add cld fimul or xorl movsb mov adc push push xlat and adc sub adcb xlat insb inc jns repz push test mov data16 mov sbb mov sti push sub dec mov scas js aaa jmp outsl (bad) fdiv and bts nop repz mov adc lds jmp xchg fstpt mov int3 (bad) scas mov daa pushf push cmpb in clc icebp movsl adc jbe dec (bad) mov mov adc shlb out mov sti add cwtl movsl pop adc popa jge test push ljmp jae hlt xor cmp jae lcall dec js,pn and xchg mov movsb popa out (bad) jecxz or test inc adc lock out push mov sahf test push cli in (bad) pop dec sbb ss mov and xchg mov lock mov wbinvd shlb jmp cmp leave xchg inc cmp jmp js xorl sbb arpl insl dec jbe mov sub ret mov mov pop push popa scas and sti (bad) pop aaa jae xchg adc decb inc dec adc lret adc shlb js mov test repnz push sub repnz insb mov fnop inc jl ss mov push cmp pop cmp and repz push andl stos and push sub xchg lea dec or xchg ret adc out nop aad (bad) adc les mov aaa mov outsl fwait inc mov movsb (bad) pop sbb inc bound dec jge inc iret imul pop fiadd add (bad) mov mov (bad) int dec jb icebp xchg jp inc adc xor stos inc stos adc inc lods xchg in xchg lds pop or mov add and or jno ja add test popa xor in dec mov loope and (bad) and cwtl or mov aad push xchg lods out xchg adc mov jnp adc movsl paddw leave mov in cld xorl sbb pop insl or (bad) xlat cmpsl subl or cmp sbb mov mov fild inc ja ja pop push fnstenv jo shrl ja imul push imul cmpb pop pop mov sbb pop xchg push sub popa pop lea jp leave dec (bad) mov into mov sub jae pop push stos or and je mov out ret push lock imulb loop adc pop in adc lock pop xchg inc stc and lea js cmp mov and popf cmp xchg pop pop incl adc mov add out std mov pop mov add push mov cmp mov rorl fwait jns xchg cmp notl inc lret fs and add push pop scas fwait mov pop mov and (bad) fildll cld negl push sub into fwait cwtl repz mov aaa mov or mov fildll push jne xchg and and loope and js sbb mov sbb cmpsl rorb or test push mov jb jbe mov cmc jno add cld sbb bound es or mov jmp or cmp in jp jns ret dec mov or dec xlat pop data16 jo (bad) mov xor sbb pop das adc aaa (bad) push mov sub push sbb mov scas cld in clc sub push sub fldenv popa sbb mov test arpl test cltd mov mov pop aaa les out jge cs subb xchg xchg popf daa fldenv (bad) mov mov out mov movsl dec mov mulb ss and and mov dec jns sub xor cmpsl mov sti xchg xor mov xor xchg adc imul xor mov mov pop cmp je pop inc int mov enter cmpsb pmaxsw lret in stos fsubs mov mov outsl dec jle fdivl (bad) bound in cwtl xor fisubl mov cmp and xchg out ret dec cmp sub loop lock into test jmp xchg sti dec and movsl push dec jae sbb arpl jle dec and popf (bad) and adc lea xor out jb dec xlat adc cmp sub dec repnz outsb push pop dec test dec cmp or pop js dec xor mov sbb hlt wbinvd mov sahf arpl dec sub pusha inc cmp mov lods cmp mov lea dec mov ret push movsl mov shlb outsb adc jmp scas adc mov bound pusha xchg push mov and lock push sbb outsl cmc cmp outsl and jg orl stc add (bad) ljmp (bad) mov jbe xchg int push std adc lahf jle dec mov faddl lahf xchg xor (bad) dec mov adc push and icebp imul cwtl lods dec sbb add or xchg pop sahf add cltd bound add sbb lock adc inc es add xor inc sbb in xchg clc jne jmp aaa adc jno insl jg in mov jb mov add bound or jecxz int jmp cltd push sbb leave cmc cmp loopne cmp cwtl cmp jp mov jle push les or leave ja push scas test orl out xor scas xchg and sbb divl out adc push loop (bad) adc jmp int iret call dec sar int3 repnz cmpsl jo add nop sbb int push jno xor inc pop rcrb loopne and test fwait jmp xor sub ss or in add mov sahf fadds mov fcmovnbe inc enter cmp sbb sbb pop pop into cwtl stc in xchg sub add rcl (bad) dec mov pusha mov nop lea mov fsub clc popa hlt sbb test faddl mov jbe fadd js pop pop xorb pop aaa lret mov add jmp add test jb push xor xorl inc cmc pop aaa dec or or fadds clc popa and sar (bad) mov xchg jge mov mov popa icebp popl mov jnp int in lock lahf setns mov mov xchg and push js je add mov (bad) int jo push fwait or (bad) movsb cmp lods cli pusha movsl cmpsl jns xor mov and sub xchg or (bad) loope push and pusha add and test jge loope xchg sti enter ret rcll scas loope adc adc popf rep and dec add jg dec and test xor push imul jle popf xor sub mov es loop scas push fld stos adc pop arpl pop scas push (bad) adc and dec scas jae sarb push mov xchg (bad) mov jge or xchg jl arpl test sub mov push popa enter outsl cli gs (bad) dec arpl clc xchg push jg mov cmp nop ret test sbbl mov push inc lret outsl lods arpl pop nop fsubrl xchg lods cwtl xchg (bad) lds and adc (bad) enter jmp (bad) push arpl cmp arpl dec leave mov pusha mov loope cmp jne nop test in push jne mov lods push lcall test adc mov push loope out rcrl sub jb stos sbb into sub stos mov cmpsl push fiaddl insl xchg push arpl inc dec pop xorl and hlt out outsl push cwtl into xchg call fs mov xchg sub icebp xor stos sbb rcr sbb stc dec ret (bad) xchg fs mov out push pop stc dec adc xchg test out scas cwtl (bad) fnop js lods mov adc clc gs and push mov or add xchg (bad) sub pop int and les scas mov insl xchg xchg in and and sub or test (bad) rol fdivrs addr16 imul mov and daa test mov xchg and cmp xor repz test or or and and and and lods and (bad) popf jl push in add or ret xchg jbe xor jmp push pop gs push sbb push cltd pop push xor shl daa cmp insb mov repnz (bad) xchg adc add aaa jmp das sub mov sbbb sbb flds in mov xchg mov and or cmp sbb lcall jno mov test add adc adc inc popa or mov popf add lea popa call sbb dec ret popa negl mov mov jne cmovno mov call dec xadd sahf bound popf inc push pop cmp and fistl and mov dec sub add and xchg outsl jbe (bad) xchg jg pop nopl rolb and or and test push push push ja mov add xchg popa inc pop mov push pop inc ja cld rolb and ds inc sbb es xlat xchg pusha xor sbb arpl and fimull add xor test xchg scas gs (bad) adc inc and scas xchg rolb (bad) in pusha add cwtl les (bad) movsb cmp inc inc or or (bad) or rolb pop xor popf lret loopne jp jne inc jg ret lcall inc scas mov xchg call or push arpl add push (bad) inc inc incl ficomp cwtl and call sbb loop push pusha add ret daa rorl inc (bad) mov adc (bad) fdivrs push mov mov scas arpl sub xor xchg push mov mov cwtl jg neg xor ja mov and js fwait cltd popa addr16 xor add cltd sbb sbb nop dec add jae cwtl and add jge in xchg loopne aaa push mov shlb jnp outsb adc mov xor addb call pusha and inc inc iret inc call and loopne jne mov and mov xchg scas push pop call pop adc lahf push int pop addr16 xchg jge sahf arpl (bad) pusha push xor sbb arpl xchg dec into in call rcrb xor out push and xchg adc popf jae dec cmp add gs or (bad) shrl inc fdivp dec jb rorb out outsl pop push out jns scas das popa inc popa out outsb and push mov test cli and addb lcall (bad) and mov rcrb sub popa and cli jnp movl inc and in (bad) mov mov and outsb xchg std fadds mov popa es jle push lcall in out aas (bad) into fs mov xchg dec add gs pop jne inc cwtl mov and nop popa fsub popa mov and arpl ret test jae mov sbb arpl sbb (bad) or and inc fcomps cwtl loop cmc arpl xchg mov test push cwtl inc and adc sbb add and arpl xchg sbbl popa test inc or pushf xor pop fsubs sbb pop dec add mov test cmp mov sbb inc pusha test popf arpl xchg adc sbb out (bad) cmpsb cwtl (bad) and arpl sbb add daa sbb inc pop test jns (bad) xchg shll sbb jg mov inc andb push lret push lahf ficom push je mov ret inc jl sbb dec pop stc jae sub pop add out movsb mov mov imul mov jp fs call insb and or add scas dec push std movsl jb jns lahf jmp mov das pop das mov ffreep adc movsb push dec sbb xchg arpl fdivrs and iret push incl fcomip bound pusha int jmp add clc push loopne and rol jno lret movsb lods pop jle leave pop daa mov movsl iret stos nop std popa adc or call leave orl cmp push push and mov mov sarb pop out ljmp cmp rcr or ja add and pop xchg sub cmc mov js xor aad and pop dec adc and sbb push pop popa xchg and outsl popf mov xchg ds jb dec popl scas out sub add pusha sub int mov dec stc mov je adc cmpsb xchg and sub pop add sub mov inc dec mov iret mov aaa cltd push jno dec jp sbb push les jl movsb pop popa popa lcall push into dec popf mov cmp lock jle (bad) push pop subl ljmp add (bad) and incl jg and (bad) mov (bad) pop das aas lock ret iret adc test or add inc arpl and and lret xchg rolb xchg jecxz in loopne popf ret sarb out xor outsl add loop das xchg ret andl (bad) dec sbb inc and (bad) xor pop lea sbb and pop sub jne xchg gs xchg add jbe ja sbb dec inc adc mov jo sbb and fisubl and sbb xchg lock add add push loopne jnp adc sub pop faddl adcb pusha (bad) shlb popf lahf push push pop neg mulb push xor and add (bad) pusha xchg xor push xor (bad) cmp call mov mov sub out incl pop divb clc add push test out div add call cld sub pop maxps xor pop call xchg inc ret push or mov pop mov adc xchg pop cmp andl mov cmc xchg cmp add xchg pop pop dec in pop addl pop and movsl jle pop fidivr js subb mov call (bad) sbb hlt imul jg (bad) or xor cli inc call lcall xchg arpl repnz bound lock inc or jne pop fdivs mov roll and (bad) out mov mov push mov nop decl cli push (bad) xchg imul loope flds sub and addl add push mov cmp mov pop lds add scas out cmp (bad) icebp adc cli sbb hlt cmp fstps movsb xchg adc push ret or mov lcall (bad) repz fistpll (bad) iret and popa adc xchg adc cld into add repnz sbb (bad) stc cs pop data16 (bad) negl sub gs loope xchg loopne jp sbb inc adc in in inc cmp mov or js add inc into je mov jae mov sar push je in outsl mov dec cwtl push jns shr or test out sbbl xchg out push cmpsb jno cltd std and sub loopne call (bad) adc dec dec sbb cmpsl jae dec mov fs ss stos movsb in mov cltd cmc adc (bad) arpl jno dec popa int xchg test and out jg jae and cmpsl in xor push scas pop push lds or xchg pop mov inc dec push push inc push out nop pop dec loopne xchg inc sub dec aaa ljmp and cmpsl insl popa dec lahf in and or fild pop sub out lahf cmpsl (bad) popl cmp mov pop and cmpsl in stos jecxz cmp pushf sbb mov popa mov xlat in aad cmpsl in jnp dec pop test pop shr dec test call pop cmp in pop add mov fdivl in pop jno cmp sti daa in dec inc data16 sub mov mov stos sbb mov add pop mov inc in cmpsb fwait neg std daa jmp cmc sbb inc mov pop outsb mov inc stc pop lods sarb movzbl pusha jns aaa xchg jp adcl sub lcall push dec arpl lods dec imulb dec fstpl out std (bad) adc fnsave bts (bad) jmp mov jns dec (bad) test push test fisub lods in cmpsb pop adc adc dec fsubs mov push cmpsb cmpsl inc dec pop (bad) (bad) test jg insl int dec das add (bad) cltd push mov mov xor (bad) push xchg fbstp (bad) xchg jne aam (bad) mov inc addr16 rcll jne push xchg cmp mov stos sbb mov xchg cmp cmpsl adc das jg fcoml adc fisttp push pop loop (bad) mov sbb jg dec mov push outsb js hlt jp xchg lfs mov aas xchg xchg loop xchg cld pop pushf popa rorb sub cwtl add and sub xor add jae inc cltd outsl mov pop mov sub stos insl andl cwtl xor dec dec pop bound and adc xchg stc add in sti movsb pop bound dec stos ja adc mul movsl popf add dec in data16 sarb bswap push push xchg daa push rcl cltd fdiv bound pop sbb push cwtl fistpll push adcl (bad) (bad) cmp stos mov jp pusha add dec out cltd mov aaa pop xchg inc imul xchg fdivrl pushf ret repnz jo sub ss ss or xor sub bnd lret out bound pop in js pop sbb aaa scas xchg or jge jl sub mov insb in call sbb push mov bound (bad) out push fs gs fiadd les lds cltd push dec or mov popf out xchg jg std sub cltd mov add or addr16 sub lahf add jno aaa out movsb mov mov add xlat rcrl pop decb leave pop push xchg cmp repnz sbb inc mov xchg push mov cmpsl sub icebp xchg sbb dec pop aam jno pop popf mov inc pop push pop in cmp pop daa ror mov cmpsl sbbb sbb mov mov fcomps popf fistpll bt aaa xor inc inc add jae and mov hlt (bad) out cmp sub leave pop add stos test loope cltd sub push ret jne push inc test jns orl mov cmp lock sbb inc pop cltd cmpl pusha aaa inc cld aas cmc sub and add (bad) mov (bad) jae inc pop jecxz mov jge fcomps and std cmp data16 and psubusw and add mov movsl (bad) fs mov fucomi (bad) inc mov (bad) adc arpl mov mov xor fild (bad) lods (bad) adc js sbb pop mov xchg and cmpsl ret popa into cmpsl cwtl mov and icebp fdivrl adc jmp insl pusha (bad) clc cmp daa xor loope cltd mov out xor pop mov xlat dec or mov jmp sbbl mov sbb sbb ret imul data16 test ret stc nop out lock lret mov mov stos repz out popf fwait inc sub and add in popa addb mov pop out daa mov stos insl and mov into and jbe sbb and cmp scas push lods jbe jno nop and cmp push (bad) mov or mov sub xlat or sub pop inc icebp adc lods pusha cmp dec daa mov out ds sti lods gs pusha (bad) pop pop cmpsl fbstp lret jo stos push rep addr16 sub push sub pop insl shrb jb xchg test arpl aas (bad) adc xorl dec daa pop bound in mov loop mov add mov arpl arpl xorl ret xchg inc fsubs and sti loope cli xor cmp addr16 mov cs jno mov jecxz popa stos in and negl (bad) aaa imul lahf pop leave jno adc lds out sub incb shl iret clc mov out jg cmc int rclb les xchg xor js push aas dec xchg or sbb rcll jno pop jnp adc push add ret xor inc xor sbb roll (bad) movsb popa notb out jge dec push pop and inc lahf in cmp adc push sub sbb movsb jl ja std cs adc and pop lock test cltd and add mov adc adc pushf mov movsl jge add jae jle mov andl iret or adc pusha arpl and gs inc add nop fs mov add sbb das xchg and out fdivs dec adc sub mov (bad) int push loopne pop jle lret adcl cmpsl xchg push lds push jns mov jae mov lahf and mov (bad) mov and call aam (bad) adc ret pop (bad) (bad) xor jno jp inc movsl mov mov xchg iret gs pop inc cli (bad) xor sbb andb cmpsl dec cmpsw aas stos adc sub popf or pop data16 pop sbb std mov or test (bad) icebp inc xchg addps inc inc mov movsl aaa xor dec cvtpi2ps lds test cs mov xchg popf cmp (bad) in dec das and dec dec movsb iret gs ljmp lahf mov or mov loope cmp (bad) jns cwtl movsl (bad) push fnop stos fmuls mov icebp loope and and mov jae cmpsb dec loopne movsl fstps (bad) mov sbb in fcom cmpsl dec dec bound sbb rolb popa vmulss sub pop sub in xchg test sub xor mov pop push inc cmp outsl pop ffree sti inc xor xchg cmp aaa sub mov push jmp pop xor mov adc add dec dec (bad) fwait pop push xor or gs cmp sbb pop ss xchg cli js jg xchg test decb roll stos xchg and mov rcrl jge mov pop xorb mov and mov mov ja push push cli test inc mov hlt xor (bad) mov xchg lahf and xchg popa cltd jge push stos (bad) jge bound popf aaa popa subl pop pop icebp ja xchg std jbe in (bad) pop inc daa dec pop frstor (bad) ret (bad) jb xchg mulb pop sbb std cwtl cmpsl ffreep dec negb icebp xchg cltd in and movsl pop lea pop fiaddl dec les sbb arpl push in lods mov add (bad) hlt pop shl iret mov and jl lret ss push cmp addr16 inc xchg (bad) into inc int add jne aas add mov mov ja sub cmovge jns les int3 out or push lret pop mov js mov and sub xchg jb push add jno add (bad) push lods inc xlat rclb push sbb movsb xchg ljmp and mov jae mov cmp add out ja xchg lea pop pop out icebp cmp mov rcrb pushf push add add inc push jns jns dec imul data16 test mov addr16 pop pop icebp movq or jecxz imul mov mov pop adc push leave mov bound ds stos js addl pop bound pop jl jecxz inc pop popa fmull mov pop imul clc adc and push lock mov (bad) ja pop xchg outsb cli sbb imulb dec pop icebp jmp call (bad) lea test out push cmpsl inc push pop dec jmp outsb cmp push mov iret loopne test pop test fwait loopne (bad) adc into enter sbb add bound imul dec or add fldl2t push jno xchg jno sbb or movsl out lahf adc fnstcw jmp xlat jecxz push stos inc and lock popf lods or imul loopne mov or pusha or xlat das loopne pop popa sub cltd addr16 pop popa cmpl jns add push add mov push xor adc mov fwait (bad) xchg pop repnz cli frstor repz xchg add push in sbb xchg adc js mov incb or nop sub dec xchg imul icebp (bad) xchg push jno (bad) pop adc sbb imul dec or lods mov cmp jae outsl jae es popa push fidivr inc xchg xchg xor cmc dec add and xchg iret push push out push cmc out in adc mov jns push test ja nop jno dec arpl imul out in xchg jmp cwtl in xchg jne push adc add rorl gs adcl leave dec push or pop test ret xchg xor and call adc or dec sbb call inc cltd sbb cmp rcll add jmp out rclb ja nop clc pop push test xchg jg call cwtl nop and call jne fcoms call rcl xchg adc gs xchg sbb imul mov std in sbb add mov xchg xchg lahf subb nop fisttp ror cwtl sub mov (bad) sub insl test mov call enter daa (bad) iret push pop or pop in outsb jno dec inc lods adc push ljmp ret addr16 xchg xchg pushf subb bound cmp jb (bad) addr16 sub xor es scas and push adc sbb jge xor xor (bad) cli mov cmp and jg adc sbb (bad) jmp lcall sbb call push jge and sarl mov (bad) ds scas icebp cld push gs xchg mov fcoms and gs jg adc fbld insb arpl fstps test mov fstpl scas insl and push ja lds pop or dec mov enter shrd aad dec enter dec fwait adc add lods adc jmp into pop inc int3 inc mov mov arpl std sub roll bound fwait sbb cmp jnp pusha push add push insl lds xor pop bound xchg sub int3 cmp push (bad) aas mov les call test gs leave icebp mov insw push cwtl jae and push jge xchg adc sbb sarl xor scas xchg rcrb jg adc dec rcr mov sarb xchg (bad) xor sbb push loope cmp psubusw mov leave fbld insb arpl sarl test dec loope fcompl addr16 inc fcoms cli and mov inc hlt cmpsl mov dec test pop mov pusha incb das and out sbb xchg sbb loope (bad) insb insb in insl lahf jb add dec add adc sbb mov sarb xchg lcall dec sbb imull sbb jmp add xor es arpl adc test sub sbb enter fcoms imul outsl lock or inc xor jb push mov leave dec subl movsb test loope cwtl fstpl scas gs mov rorl sbb out stc pop pop push mov xchg roll imull ja outsl daa jbe mov outsl pop das sub adc loop mov ret lret pop pop loope inc lahf lcall mov aad xor add movl fadds popa gs arpl arpl adc test add popa fs ja and adc push lds inc jle sbb aas or popa sbb or (bad) insl xchg dec fdivrs imul jp mov jge adc xor test nop sbb push out mov mov mov adc test adc gs stc push sub sbb mov sbb sbb fdivrs fldenv insl (bad) std jne fnstenv add dec arpl dec outsb sbb xchg sbb imull xchg xor cmp lret inc test push cmp daa divb std test inc inc push lock xchg es mov lahf mov into inc xchg xchg xor mov pop mov mov lea push std xchg pop fst aaa clc dec test aaa stos adc aas ficomp ljmp mov mov adc lock xchg sbbl xorl imul cltd adc movsl inc xchg pop or dec (bad) dec sub or imul cmp pop dec sbb pop inc cmp jns push test inc jge sbb sarl cmpsl shlb and jmp push push lcall pop push push xor fmull or imul cmp rep mov cld ds and xlat lea dec inc jl adc lds ds dec cmp and pusha lods shrb hlt and sbb test add sbb xchg jne mov addb and adc mov das and cs jbe rcll out nop imull xchg test in cld or aaa cld ret xchg call mov fidivrl push adc aam mov and and dec nop scas xor lcall pusha cmpl add push aam cmpsl hlt out mov sub lea sub mov (bad) mov or rcr mov scas fistpll mov adc into xor cmp push pop inc xor jecxz std mov js jne xor stos mov and out jno pop push int3 mov fwait orb jns lds sbb xchg pop pop mov cs jne mov push iret cmpsl or mov sahf jo icebp std xor xchg jbe mov sub sti mov bound xor aaa push lret nop daa jnp push cltd mov cmp inc add dec dec into rcl lds mov xor mov loop ret inc push add lock (bad) std mov (bad) pop xor leave pop sub sub stc pop (bad) and out andps inc test mov adc pop gs movsb jns data16 push fmuls inc xchg es inc mov add stc xchg push data16 pop addl pusha sbbb and fwait push push outsl fistpll inc (bad) out scas jg incl push icebp or pusha cmp dec ret or js cltd test icebp adc xchg jge popf aas icebp dec or nop inc iret lea lahf nop jle push xor push pushf inc rolb inc cmp mov and pop fdivs mov rcll test out jge mov outsb clc bound scas adcb mov cmp mov xchg xchg das std pop add push dec sbb push mov push enter lods xchg mov sbb jle and add loopne notb lret dec mov aaa lret out es and xchg xchg pop and inc rolb pop cld ljmp cmp ja nop loope xor inc jno ja mov das fs std dec mov lea xchg xchg lods fnsave popf pop and pop xchg iret leave (bad) nop out xchg and (bad) pop das or sub xor loop sbb andb mov movsb and jg xchg test and movsb stos es xor add sti fidivr xchg in ljmp mov mov aaa imul bound hlt mov lods mov addr16 insl push std lods pop cmpsl xchg ljmp stos divl pop lahf and mov sbb popa cmpsb test es std and test test jno xor add adc push dec (bad) negl and fadds push std loope and lahf xchg adc into out jno jmp dec daa or pop fldl2e cmpsl xchg cltd mov dec add adc (bad) pop decb xchg xchg test out mov out cld jno lock iret mov mov pop dec jmp ffreep and jg cmpl bound ds push sbb and (bad) leave jle leave gs aaa out inc cmp mov clc xchg into xor pop xor lds xchg out cmpsl xchg mov adc std in iret dec xlat (bad) cmp in push divps dec icebp sbb (bad) cli mov push (bad) (bad) (bad) aad mov mov pop outsl icebp iret mov dec mov pop push icebp bound subl imul and pop das xor dec mov cmp pop (bad) xchg je insb ret loopne pop mov nop cmc sub lods push lock shlb inc xorb iret orl enter pop popa add adc sbb movsl sbb js out stos fidivr stc hlt xchg sti inc int3 xchg and loope adc add fdivr add cmpsl das mov ja sbb nop and dec (bad) mov cmp bound pop xor and (bad) dec jg insl dec dec sub push mov nop in rclb push lods add (bad) fnsave bound das adc push pop lcall test imul cmp push andl cmpl inc dec pop (bad) push mov fiadd orb ret dec pop push (bad) loop andl pop pop std js mov lods daa nop adc jns and pop popa andb add (bad) fs into loope pop jmp push jne mov mov cmp mov sbb pusha pop cs lock mov imul iret fs cmc cmp push lock adc add sub xchg dec call xchg scas sbb pop jmp jge stos xor addr16 xchg push popf fldl pop inc int3 pop int3 fild xchg jns lret xchg mov inc pop dec pushf inc dec cmpsb (bad) addr16 push and fistpll shll into and lss jp inc sarl dec and inc dec call and fwait and sub cmpsl loop cmp pop dec les pusha insl scas mov sub cmp dec push and js popf arpl scas cmpl mov cmpsl mov addr16 loope je (bad) mov xor pop ss sbb mov pop cmp fild cltd test or mov cli imul cwtl stc fcomps jae loop lret inc addl or jo mov mov jno fdivp lret cmp mov lahf bound and (bad) leave outsb fnstsw mov daa dec mov insb mov loopne sub sbb jge sub xchg dec lcall pop push fsub inc int dec clc sub push pop add adc ljmp or push iret subb sbb push jmp int daa cli fidivrl mov adc lds in xchg pop mov fwait stc outsb cltd dec lods mov stos sbb fwait test cwtl bound pop mov mov jnp xor lods adc sub dec mov test jle mov mov ja roll mov adc adc dec lret mov sub xor sub jg popf jecxz xor lret mov xchg and add lahf sbb pop into popa xor xchg negl in out test mov movsb scas rolb sahf pop add gs and lahf adc xchg ja (bad) shlb dec fmulp jno fdivl int mov pop push dec dec mov inc aaa cltd jmp jmp mov xchg out dec mov and rcrl iret add lcall sub cmpsl out push push call (bad) imul lcall je das mov std std and jno adc dec jns xor push lea mov (bad) gs imul clc mov (bad) in call jle lahf lahf and and inc or add and loope fwait lock (bad) dec sbb and or sbb in cltd iret (bad) ljmp cmpsl inc ja jo daa dec inc and inc pop addr16 popa fsts dec xor in sti das inc stos add jne push arpl xchg pop add (bad) xchg call loopne and gs popa lods xchg iret jmp pop xchg pop add or aaa fildl or sahf sub imul add bound stos xchg outsl mov adc push inc dec dec add sbb dec bt dec pop std push mov jmp pop or repz push (bad) subl mov jb mov mov xchg call mov jae mov cltd push sbb rcr test jmp mov scas mov (bad) (bad) xor sarl lock push sbb mov add mov mov out nop or imul or pop inc aas adc add xchg in inc inc int3 mov xchg cmp xchg aaa movl lcall xchg sbb sub test imul xchg in stos push jo sbb inc mov sbb cltd xor add mov imul push fistpl testb push inc jne jo loope push jno mov xor loope test cli xor and movsb inc sub addr16 in inc addb adc mov dec into mov roll bound aaa popa sbb mov (bad) iret lods daa and out aaa jb movups adc mov dec subl test shl pop sahf daa loopne bound dec pop dec xchg popa dec iret cmpsb es add scas lahf pop or and lods mov (bad) aaa dec lahf and fist pop mov jp or data16 fs dec push jnp (bad) iret cmp daa mov into and sub fstps scas imul insb fs popf jnp aad stc jge scas cmc mov imul ja dec or adc lret mov cwtl imul lea lcall inc xchg scas lods fmulp pop adc push and jecxz scas mov mov dec xor jno cmc and mov mov mov insl pop sbbl adc shrd (bad) sti jbe xor jl into aas sbb sbb test aas and repnz bound aas mov nop repz dec or pop in push pushf nop xor mov data16 insl dec jae xor ljmp push and add xchg (bad) xchg dec xchg aad sbb imul aaa cmp mov dec sbb lods push pop mov push xchg inc xchg arpl push insb cmpsb xchg add add mov leave sub jno (bad) ljmp pop pushf pop sbb and adc cs in cmpsl add bound sub dec jno lock fwait push mov loope xor xchg mov mov cwtl dec rorl (bad) mov lcall jno dec shr xor into fisubr bound into mov loope addr16 mov jge bound pop cmc arpl xor popa pop shlb (bad) test shll in pop loopne ja push imul scas inc mov pop data16 mov cltd xchg mov addr16 push aas and rclb xchg jne div fisttp bound test ja loopne shll jno jbe fildl ds jmp and jg test sbb mov icebp cmp pop std negb dec imul call bound jmp or mov in mov scas popa or pop mov lds push sub pushf push mov dec and push fs fs out shlb daa out jno bound and divb add push jae sub mov push scas mov imul out frstor pop cld inc or sub dec mov sub dec push mov cmp testb and daa mov add add repnz sub shr mov xor sbb sahf pop cmp jbe pop js test mov call sbb pop pop inc jle fsubr scas cmp sub cmp mov push loopne fwait mov gs jle add xchg fsubr jnp add pop test sbb xchg (bad) mov push inc push pusha xor mov lods jne xor and cmpsb push sub push xor (bad) and test push mov jae ret push icebp stos sub js ss push sub rolb subb icebp mov push test push xchg mov adc jmp movsl cld popa adc jno push stos adc int and ss or pop push or adc mov push inc bound and rcrb dec icebp mov jmp mov out mov test fwait mov push cmp js and dec into jo mov and and dec daa xchg xchg popa dec xchg je ljmp mov pop (bad) in mov loopne les iret xchg xchg jne jmp mov dec fldcw pop push cltd int3 jb mov pop int3 popf int3 mov stc xchg inc jl call shrl or adc ret sbb jg roll incb pop sbb dec push adc decl xchg mull loop cltd cmp lea push pop push imul (bad) jnp iret fnstsw cmp repnz xchg push xchg ret jmp shrl jge sbb rcrl adc dec dec rcrb cmp in mov sub add mov imul cltd mov into hlt movsl pop jge and inc jns push mov inc out test lea push and rorb shr aam cmc sbb cs sub sbbl jae add mov ficompl (bad) xlat xchg das xchg jl icebp shlb sub (bad) out mov data16 loop in mov inc test mov jmp jo cwtl xchg pop fisub cltd addr16 pop sbb decl sbb in (bad) js (bad) out loop mov stos pop pop loope mulb pop and outsb inc or bound lahf jae xor daa les lret pop pop cmp cmpsl cmp stos dec inc sbbl pop dec pusha test and cmp adc jo aaa jge push loop adc out (bad) sbb mov sub (bad) pop mov outsb out inc enter or add mov repz mov ja pop loopne stc cwtl rcl mov cmpsb sbbl das mov lds push imul pop es ficomp arpl insb lahf insl addr16 cmp (bad) xor sbb sbb dec pushf push mov and loope sbb mov mov pop pop sarl scas xchg mov lods imul sub jns mov lcall pop into mov lock mov in imul das push daa rcrl mov popf mov stos sub and mov lea jae outsl add (bad) xor jns and mov aaa movb sub js sub cld or dec push sub or (bad) push push fcomp lea xchg mov rorl add mov (bad) cmpsl js (bad) (bad) daa pop mov pop loop adc mov adc pop jg lea adc xchg sahf (bad) in xorl lock (bad) cld sub movsl and bsr push test cmp nop orl mov mov cmp cmp aad (bad) fisubrl cltd lds jmp divl and sbb test xor arpl pusha sbb add lock scas scas jae xor dec mov mov mov and xor jecxz clc bound push pusha pop xor mov loopne gs test xchg and (bad) ja pusha fldl aaa and and and or sbb sub pop jge testb lea shll cmpsl push jae add adc inc and jg mov mov lret fistl pop mov dec js xchg popa sti jno movsb mov popf loopne sub das xchg cmpsb (bad) das adc faddl fwait pop fmuls cld mov jbe xor jno cmpsb aam jg fdivl jno mov stos pusha mov adc xchg cmp fs jns xor xchg je pusha rcll push inc std (bad) arpl and inc cmpsl pop repz pop inc jecxz add dec lea push jp fnstsw stos (bad) hlt dec cmp aas xchg in xchg jp or pop in mov arpl and popf rcll aam adc arpl xchg xor add lods dec and push cltd or lock and nop hlt enter scas xor cmpsl mov iret or push mov xchg inc pop adc pop mov lea aaa or pop fbstp jl cmp xchg (bad) pop in shl iret mov lea lds pop xchg cmp andl popa pop sbb shll mov mov cmpl aas mov test cwtl (bad) xrelease xchg (bad) lock lahf add (bad) jp jno push adc inc xchg adc ss add xchg std add sbb data16 insb ss jbe (bad) xchg mov dec lods cmp mov sub cmp and adc jae dec gs jae imul or mov jbe cmp jbe adc mov gs inc cltd mulb jbe push jnp cltd stos push sar (bad) das loop bound rclb das add add dec adc xchg cmpsl mov push pop cwtl sub cmpsl inc adc pop add jb xchg mov dec clc add inc (bad) mov data16 push dec xchg loopne mov inc pop gs bound and (bad) jb xchg jno pop addr16 mov inc xchg jno popa (bad) and cmpsb cmpsl xchg daa scas sbb dec outsb add ljmp sub inc mov pop gs inc cmp mov mov pop lock pop iret mov xchg xorl lds aad pop cmp add jle push jbe shrb xchg dec imul hlt and push or inc jnp jne pop push andb in cmp out lret loopne jp addr16 (bad) fbstp daa (bad) aas push jg sbb add in js es hlt addr16 fstl sub push lcall iret fs push and dec xor adc mov scas into add inc movsb lret xchg cvtps2pi mov jo mov mov inc movsl mov les cmp xchg jecxz adc jbe add and orb xchg and hlt and stc jg sbbl push gs movsl outsl jle inc in (bad) lock adc pop sub addl fcoml mov aaa xchg in pop adcl and pop or arpl xchg mov das pop mov imul arpl pop pop mov mov movsb repnz cltd sbb mov jo clc push jns dec (bad) cmp pop jb and cmp pop daa adc inc or pop data16 outsb and xchg mov ret cli sbb sbb dec jae lods pop imul mov pop jl pop out mov (bad) pushaw pop (bad) sub pop je es sub imul in jge iret xor mov daa es mov (bad) mov (bad) push sar inc xchg inc dec shll fidivrl push in sbb inc aaa repnz bnd bnd js (bad) dec mov add adc cmc and (bad) adc and andb rclb jmp es pop pusha daa and std dec xchg jbe jp daa imulb sbb and push inc pop dec pop jmp out imul pop andl xor inc and orl subl fsub jno rcl inc mov sti mov or pop (bad) push inc inc sbb inc cltd xchg inc add iret imul pusha jle jl loop mov mov sbb out push mov test jae mov cmp adc pop (bad) ds not sbb icebp lahf scas pop bndstx pop mov and iret mov movsl xor bound ret jecxz mov imul jo (bad) cltd dec arpl jg sbb cwtl add adc pop adc (bad) (bad) enter add and fcomi daa push add sti aam adc or push insl dec imul in test bound cs std sbb adc popa inc xchg sbb mov and ret addr16 cltd pop adc std pop and insb lods jbe lea inc adc sbb in addr16 pop cltd and xchg sbb mov aaa fbld sub outsb mov jae and add pop mov lock dec test pushf mov jecxz push xchg std test mov testl outsb pop cmova mov inc xor pop popa mov and out mov ss sub adc jecxz adc or add das or xor mov test jge mov xchg movsl in negb and mov inc jnp and jg fild add lahf mov push js add and mov stos mov pop shrb and push movsb or movsb pop adc ja mov mov xchg and pop aaa and mov (bad) and rcrl xor imul and and scas lret je test fwait int loopne popf cld cli arpl in in dec sub lods inc mov incb addr16 rorb sub mov push das xchg addr16 inc mov arpl mov add add cmp outsl or (bad) out xchg dec popf pusha daa inc mov adc sbbl xor pop mov out js xchg fcoms pop ja inc push pop popa or inc push hlt sbb pop bound xor dec imul or jmp lods jns sbb in xchg push push in fwait mov lret addr16 cltd cmp cmpsl add ja loopne mov xor movsl lock pop aaa pop and and jae nop cltd ljmp sbb and add xchg daa jmp mov shlb rcll xor shrl sbbb iret rolb test mov cmp jnp mov mov fstl ja pusha dec mov jmp pop lds (bad) jg pusha (bad) mul das arpl and adc lret insl ret and and push add fwait test adc into (bad) mov dec sahf jg,pt xchg mov or push clc imul jecxz les inc roll sbb popa daa das test loopne mov dec cltd mov jge xor add add jmp mov out iret ret push int push jns lret pop lcall imul lahf or loopne in mov lods mov aas movsl mov sbb lock sbb fsubrp or cwtl lea stc jecxz call ja nop adc jae loopne mov mov push fstpl dec jnp jg bound cmpsl pop or std inc das mov sti popa fdivp cmp and adc addr16 testl sbb dec loope loop iret leave push call adc sub xchg outsl fwait push xor pop out cmpl cmp sbb std bound in pop pop lock in ficoml les or pop shrb pop imulb pop add sti lock jmp pop push jg aaa mov lods mov jne mov jne push jbe das mov jnp sti (bad) xchg dec jno sbb mov addr16 into sbb xchg movsb xor (bad) enter out gs mov sbb push dec push (bad) mov (bad) mov add jge mov test dec mov loop xlat cltd std daa mov xchg mov mov and das inc cmp jae rol jae addb imul addb das movsl outsl pusha ja cwtl sbb adc mov jmp jo into daa mov (bad) push dec pop (bad) xchg (bad) sbb les imul lock adc js dec test sbb push sti sbb mov rcrl pusha movsl xchg shlb inc sbb outsl adcl jge imul xor jg xchg and sub int3 repz push lock mov test or adc jbe aaa sub call call push mov andl popa inc mov sahf add and shlb popa sbbb das push jmp out jno mov mov popf dec pushaw mov inc mov pop into and dec pop pop pushf inc data16 jg in aad mov ja loopne and (bad) ds bound mov pop mov jno fwait rolb push (bad) fcomps aas out and push fwait add out test mov sahf pop pop xor ja adc in shll sar cmp call adc cmp push cs sbb inc gs push xor movsl subb daa test dec in jne dec mov add loopne popl adc or or sub push fildl roll xchg cmc mov jge lret cwtl or mov xor pavgb out pop lock imul mov jnp lretw jae test sbb add xchg lods push lcall mov and pop jno and fucom mov sbb sbb adc (bad) out jecxz pop imul sbb sub scas add lds pop lcall rorl pop push push push inc les test xchg push xchg rol jne pop dec jns mov dec pop stos inc fs fnstcw stos std or cwtl adc movsl lret pop sbb cmpl (bad) xchg aad (bad) loop sub daa test and call mov arpl dec lock push sti sbb lea nop mov mov jns xchg mov mov movsb add dec (bad) cmp and push xchg pusha fidivrl mov xchg add aam mov push sub jbe push jmp mov test scas inc cld xorl cmp gs daa add jb jno (bad) pop inc cmp xchg push ljmp xchg jns (bad) mov xchg out push adc lahf fsubs rcrb pusha sti mov cli dec popa fildll rorb gs and movsb clc sub inc jbe xchg xchg sbb add bound imul clc out add pop data16 call rolb dec xor adc xchg ret push mov out imul es and iret nop push lock shrl mov jno push mov nop inc cltd in and add push dec cwtl out js jp fwait mov lret in shll pop add inc movsl lds je pop hlt cmpsl fiaddl jecxz mov dec stos add xor movsl hlt out pop mov std ficom call mov inc or jecxz and inc imul in push daa cmpsb imul pop pop xor xchg push pop out cmp push cmp hlt imul jne test pop xor xor or push movsb xor push pushf xlat xchg fucomi push jp sub arpl jp xchg das loopne xchg packsswb inc pop mov jge mov ja push mov inc test jne xorl inc cltd sbb push aaa push es inc inc mov inc fs sub jg and fcoml mov and jg,pn push xchg orl mov sbb data16 mov jno jno outsl rcrb push imul lods jno jae fldt xor push ja stos jae mov and test test xchg dec outsl jbe in cmpsl mov (bad) xchg mov scas mov ja xor or loope das lock in mov in xchg adc andl mov mov pop add adc add and pop or xchg leave lock lds xchg xchg xchg je mov hlt (bad) sarl push insl jo pop pusha sub jne jge cwtl fdivl xor fistp add push idivl fmul adc inc lahf adc lods inc and sbb sub jne js sarb sbb xchg sbb and out repnz out lret js dec jns das rclb sbb pop out rclb aam mov fisubl cmpsl cwtl jmp aam inc iret add dec js fs adc (bad) cmc pushf cwtl sub ja loopne mov and jno (bad) int daa pop cmp push pop fsubs xlat adcb add sub cmp or push mov pop add pop lds scas and arpl mov mov fisubr add imul daa insl popa fs xchg and std call and mov lcall and in popa or sbb cltd xor clc popf daa imul jns sti loopne addr16 scas add push xchg adc dec adcl jbe and and push out in xlat push adc cmpsl jmp loopne icebp sbbb scas ror out popf bound mov inc add mov and daa cld fsubs push mov xchg and mov movsb sub mov jns inc and fwait shlb xchg movsb sarb daa repz popf pushf mov jge mov dec or sub daa adc lea das imul dec dec and aam jge bound push mov frstor xchg lcall mov inc jmp popa push js add daa xchg popa xor loopne pop (bad) cwtl enter jecxz inc shrb call add loopne loopne lock push pusha (bad) clc pop jae test mov js arpl in xchg push aam pop (bad) popf pusha std inc popa pop cltd pop add and sbb out sub dec popa push mov push pop daa add adc sbbl lret repnz (bad) and or in cmpsl xor dec push mov into lock lods sub inc mov nop aaa push xchg add rolb and (bad) cli lea popa mov cs sub dec sub pop ljmp imul arpl scas inc into adc mov rcrl fistp push push pop pop jbe dec adc es mov pop jae cmc mov sbb mov mov in mov js fcoml ja adc loope pop stos mov mov push ljmp loope xchg add lock mov cld enter cs mov insl sub es or fild jbe popf jae insb or loop mov bound jns mov cmc test movsb xchg cmpsl xchg and es mov loope pusha inc jnp inc add shll das dec inc adc flds add call jo push sub imul sbb ret inc lahf jo jbe das imul lock push jbe in aas jbe (bad) fneni(8087 cmpsl mov mov fdivs adc fwait adc xor test gs pop inc and mov push xchg add addr16 add (bad) test addr16 iret loop mov or push add cmpsb fdivrp jmp mov addb push pop add and daa push cld mov push xor aaa (bad) xchg jb mov pop xorl lahf inc or adc inc cmp loop pop xchg cmpsl pop jb (bad) xchg dec add hlt jmp cltd (bad) pop call (bad) idivl adc (bad) js xchg push sub push pop adc ret js stos faddl sub pop fildll in inc adcb jmp daa sbb pop fstps adc xchg mov sub dec cmpsl push xchg cmc mov adc pop lea pop sbb pusha jae sub rorl and arpl xchg cltd push iret xchg xchg dec xchg shll jbe sub jno mov insl arpl (bad) cmpsb test fbstp cmp jo clc ror xlat mov add test out les test push loop pop jge dec add adc mov cmp adc push inc fsub pop jno xchg push (bad) cmpsl punpckldq sub and mov cltd iret outsl out imul mov (bad) push popf push inc pop push mov lcall cmpsl aaa idivb xor lods fsubl cmp xor sub in shrl fisttpl js mov es adc xchg cmp in xor cmp bound lahf testl cltd das jecxz adc pop sbb and popa cs and lahf sti mov imul push lods cmp push jo lock inc cmpsl mov ja out push jmp mov out xor jne cmp xorl sbb mov sahf jmp popf dec or jno orl outsl jg inc mov dec negb bound lahf inc shr ret sub andl mov cmp movsl mov pop jmp xor std jmp cmpsl sub imul adc idivb mov mov push std pop js mov cli int frstor push push mov xchg add mov les bound or cmc (bad) jne movsl lret push leave fwait push xor jae pop cmp les aaa adc and mov pop hlt insl and js roll stc iret and pop and mov jo lea iret lahf movl out pop cltd (bad) out pop (bad) (bad) push cmp mov adc pop xchg inc cmpsl hlt into sub popf push outsb push outsl lods mov popf call ljmp js out jge ds and dec mov andb cmpsb insl and shll xchg cmpsb push test mov cld pop sbb out pop lods jnp imul cmc movsb and outsl pop inc (bad) sub cmpsl idivb popa movsb test scas sahf pop scas jns and xchg aaa and test jp shl pusha lods sbb pusha dec push adc pop xchg pop loopne pusha loope xor in pop mov adc lds push arpl fsubl data16 jns movsb adc cmp mov rcr mov sub addb mov (bad) loopne test outsl jns add (bad) push imul mov movsb ret popf (bad) and leave pop cmc (bad) lret adc (bad) sahf add pop daa out xor lods rcl ud2 adc iret popa inc mov push add int3 push inc cli jge add call loopne scas sarb int3 xor inc jl push ljmp adc dec (bad) iret push cld mov jg cmp add repz scas push loope pop test push cmp (bad) sbb mov sub jae fcoms sub push clc icebp shrl dec or pop cmp dec popa mov (bad) shr pop scas rorl and subl outsl and dec pop push xchg shr add das cld mov ret xchg jmp sub cli std jl nop bound jns xchg in xchg sub mov lret popf mov sub in mov (bad) cmpl lds pop sbb lods cmp jecxz xchg es push or adc dec push add ja inc jecxz stc inc dec inc lds inc sub inc es cmp mov xchg mov test jg out or add (bad) dec cmpsb jne jmp iret fcomps and lods jecxz cmp or (bad) or dec pop pop (bad) aaa mov mov (bad) leave lock fwait cmp fwait cwtl xor rcrl mov pop bound imul std clc dec call mov lret popa fwait jb pop sub loope mov xor xchg push pop imul test push imul xor cmp daa fwait sub mov mov add inc mov loope out mov mov je pusha std pop movsl jno (bad) (bad) mov jg pop inc imul pop pop sub stc mov in imul inc inc imul mov push jp add mov popa sub test cmp std inc jno pop mov lea sub push loopne and mov push fadd xor pop sahf lods sub loopne fnstsw jmp sbb push dec pop and push pop mov clc sub add inc int or loopne imul mov pop jle (bad) xor xor repnz adc mov inc mov and jae decb and or cmpsb ja hlt jmp push fildll addr16 jae nop mov adc test pop lcall mov xchg push dec out mov loop mov loope test ds adc add dec pop lods (bad) mov xbegin jmp popa outsl loopne mov (bad) ja stos dec loop lock or add loopne addb lods ret (bad) fsub add xor cmpsl sbb ja lods jge loop cmpsl or push jl xchg pop fildll sub popa adc insl inc flds inc pop scas hlt (bad) lock add and stos loopne fdivrl adc mov ja jg iret shlb xchg mov inc mov orl add inc (bad) pop add sbb ret lahf fcmovnbe lret sbb fldt push repz popa mov xchg add sub adc lock clc lock (bad) mov xor scas sbbl add mov jb mov pop (bad) lret jo (bad) push xchg gs pop push mov dec outsl jo bound mov popf sbb loope out cwtl xor cld ja outsl loopne fucomi in mov (bad) cld mov pusha ficompl xchg out and outsl add mov and test jle cld cld test popf dec fstl lods movlps lahf mov or jno dec pop jmp stos repnz mov inc dec xchg mov gs cmp push pop cmpsl shrb in push and repz dec dec ficompl fldcw loop jp push cmp cmp dec out popf in push adc push daa pop rorl add push add adc (bad) jne loopne add arpl xor add int xchg cltd add mov jo xor jp sub mov jbe adc mov fs jle sub fistpll sub test sbbb fcomps xlat loope mov jnp pop ja insb (bad) (bad) in xor and inc push sub dec addl into out xchg test add sahf gs fwait jno clc add sbb sub and movsb xor mov imul mov jg or mov mov in mov fstps popf bound pusha dec sahf add jmp and (bad) cmc add gs ja inc or dec and or movsl mov imul rorb cwtl bound cwtl pop add push test sub pop lds dec popa xchg cwtl pusha jae or pop mov mov mov fdivl xchg ret pop outsl into jp inc (bad) lds es mov xor lahf adc sbb push loope xchg daa mov dec lret jns xchg aas inc push lock mov (bad) fprem and mov xor or adc or repnz popa push mov mov inc gs xchg adc call (bad) and movsl std jns xchg sbb push ja rclb pop sbb dec inc mov jne push adc inc mov loope shrb dec jl js popf loope out pusha or in imul iret xchg and mov adc test pop or xchg jecxz mov ficompl pop pop add jmp mov inc inc adc std xchg cmp mov fcoms dec mov in (bad) jae pop daa add imul xor cmp and into sbb (bad) shlb push mov and popa and enter push push enter (bad) xchg mov add push pop and add add sub nop lock loopne adc arpl jge lret leave cmp add xor ja lods int3 jo out test adc jle push add inc lock stos stos adc adc and hlt movsb pop jg and out mov pop (bad) call sbb lods inc pop setae bound cmp daa mov push cmp cmpb adc decl jge dec mov xor push xlat daa jp and loopne scas (bad) or inc nop (bad) es push mov dec insl (bad) and (bad) jno andl add jmp (bad) call adc mov push mov fdiv aaa inc ljmp sarl das dec jns add inc mov or ja sub insl jge mov sbb stos mov or enter mov mov cmpsl fadds dec mov pop sub js stos adc pop loopne sbb push bound and sub or test jae push mov push pop stc test or xchg sti ret or or into adc inc dec xchg jns (bad) test jno pushf int (bad) dec sub push mov lods ljmp insl sub lahf (bad) push lds dec shll cmpsl ja std inc cld push (bad) das jg outsl out cld or or push mov pop adc mov data16 loope js and dec cmp sbbl push sub gs and scas andb dec cwtl loopne pop mov (bad) call and es sti dec sub sbb insb inc icebp pop pop cltd mov pop jns stos mov mov push shrb sbb mov gs mov test aaa orb insl adc mul cmp call jge push decl dec je dec pop das and xchg addl sub push adc sub mov andl stc repnz pushf inc jno stos repnz incb xor sbb sbb cmpb rolb gs (bad) adc mov shl xchg dec xchg jmp pop or loope daa loop icebp arpl insl jno adc addr16 push xchg add adc push mov outsl mov add push mov repnz mov mov sub sahf fmul in gs xchg jmp das dec push xchg dec mov aad (bad) xor ja (bad) and cmp stos scas addr16 jl push mov mulb adc cmp adc arpl add inc out loop imul stc adc pop ret push and xchg call clc xchg fnstsw jmp sub push in loope ljmp dec aad sbb push lret jns xchg leave shrl mov (bad) (bad) and fwait dec orl inc scas addl (bad) inc inc pop (bad) js or push and mov aad mov sub clc ja nop js leave inc jl add xchg jns push adc inc jge nop gs adc out je aad sbb imul mov notb mov ja mov add push mov (bad) loope pop insl mov pushf pop push hlt aas fistl hlt pop stos add aaa rcrl xchg mov in ljmp add fcoms std sbb push xchg sub inc push imul xchg aaa ss inc adc sti sub pop xchg daa inc (bad) sti add sbb inc daa inc add xchg daa loopne cs (bad) in mov push ret test inc xchg daa adcl popf push push call out push and inc inc or mov pop bound inc pop adc movb dec dec mov and std inc lock call adc mov pop add inc fwait scas bound cmpsl push addr16 iret in (bad) jb and pop inc (bad) sahf mov adc cmp cli lock negb sub cmc fmull sub addr16 mov lods add mov fldl2e ds inc mov (bad) repnz ret lods imul movsb xlat popa sbbb das pop jle ror lcall xchg fstps gs cld aas sbb fild adc mov bound xchg sbb scas xchg pop jb inc xor or cltd scas (bad) mov enter push popa adc pop and cmc xchg or pop pop push (bad) movsl cwtl mov mov into mov rcrl pop push out cwtl hlt ja add push mov pop push xchg scas push push push das fisubl out bound into pop data16 mov sub dec (bad) mov popf lds fcmovne out js sub xor bound sbb xlat mov sub imul out aaa fadds dec dec mulb imul xchg aam iret in sub nop push loop and repnz cmp mov call into adc push incb (bad) mov out gs mov mov mov mov jne imul outsl out sbb cmpsb in pop xor jecxz fnstsw test cmpsl std clc ret bound (bad) cmpsl jmp lds popa push inc sahf imul js add pop in cmp popf rcrl inc cmc loope mov xchg pop fild cmp scas aad mov jno push loopne int mov pop jmp xchg jno in fnsave jle lret xchg (bad) not push fistp pop xchg pop pop jns orb cmp out popf dec lea clc xor pcmpgtw adc push jle adcb out movl adc jge mov jle xchg mov pop in dec out dec mov es pop stos aad sub fs ljmp xchg cltd mov (bad) mov testb addr16 mov pop divl es adc (bad) mull insl jecxz out sbb jp jne sub mov imul sub (bad) fild xor mov pop push mov mov jae and inc xchg orl roll pop fwait and out cltd xchg mov pop cli mov dec nop (bad) xor out sbb cmp push mov pop cmp (bad) popa inc (bad) pop add loopne bound testl and in sbb popa xlat pop es mov xor and push lods mov movsb jmp (bad) mov in and leave sub test xor inc push jmp adc add int rcr pushf lock popa jmp out add orl cmpl sbb outsl das jecxz push mov mov mov scas pop imul cmp and movsl pusha loopne mov pop lods pop jbe outsl andl stc adc and jge pop cmp adc xchg (bad) loopne jmp (bad) popa mov mov sti dec jle lock outsl add mov fmuls std pusha aas aas in out sbb jne loope scas aas loope cltd fmuls push and cltd pop inc out clc xchg jne popa mov inc xorl add dec fstpl lods fwait add shlb dec out (bad) and xchg inc arpl fiadd dec cwtl out (bad) dec push dec pop cwtl cmpsl xchg inc adc lock pop mov jle pushf xor cwtl cmpsb xchg inc adc lock push arpl faddp dec test movsl ja aaa sub cmp inc hlt js icebp das dec aaa xchg inc test sarl (bad) shrl push pop pop xchg mov fistp dec or cmp lods mov iret fwait lds mov jbe,pn pop outsl movsl aaa mov mov inc sbb jno in adc icebp jg das (bad) or add xor lahf jae leave popf xchg inc adc push push pusha cmp jne (bad) dec sbb adc popa (bad) pop cwtl loope pop gs push cld sub xorb aad jo out cmp push add sub and jo jb mov xor test cltd clc nop or cwtl xchg xor xchg sub inc sbb cmc jne cmpsl imul add add loopne idivl dec gs pusha xchg inc call fsubl mov (bad) jecxz jge xchg cwtl addr16 inc dec lods xchg pop outsl inc cwtl pop fsubp dec gs cmpsb xchg xchg and inc jge es mov adc call or in lcall inc sbb xor add ret gs mov lds mov and loopne add jecxz sbb outsl andl inc test and popa test test loop arpl and mov (bad) and mov xchg jno and loopne (bad) jge lods push call lock inc jbe aas rcr mov fcomi (bad) xchg adc xor fwait cmpsl dec and lods mov lea lea popa movsl mov mov leave repnz test and jmp iret imul mov and mov dec mov add xchg clc push arpl and and add dec ja popa sub xor adc adc and (bad) mov popa andb mov lods lods and popa mov adc push push pop add and xor mov mov mov (bad) mov movsl int sbb or mov push cld xchg lret hlt xorl and lds mov es xor jmp lahf nop xchg sub mov pop inc rcr mov dec jle divb add scas add xchg repnz daa nop sub orl mov lret mov xchg lret arpl and cltd loopne out sub and pop iret jne jg pop sti xchg (bad) mov pop or cmc aas test daa out (bad) pop mov stos dec fsub repnz cmovno or push add js or mov adc imul outsl pop xchg jae and clc push or xchg push push clc xor sbb into cs js mov lods pushf movsb pop cmp push fistl std jb adc fisubrl sub es inc mov mov and (bad) push clc bound mov jnp pop movl cmp push aad and adc xchg sub hlt js mov push inc and cmp and dec and (bad) scas (bad) dec out mov fdivrl mov les inc cmp xchg cmpsl xor xchg subb sbb jle pop push out (bad) cmp mov push dec mov test mov ficoml push cmp push icebp cwtl add pop rorl ljmp mov and inc add sbb lods inc cmp jmp test add mov dec mov xchg ret add pop pop (bad) enter add push and repnz in std mov pop inc mov out pusha push lahf loope out popa fs dec xchg xor cltd das pop out sbb ja imul add test ret jge jg pop les js mov pop mov mov pop jmp dec jmp lahf sbbl dec adcl or push add inc cld (bad) adc mov jl fdivl (bad) add pop (bad) fimul scas jo bound adc in and pop int jo sbb pop fmuls push and (bad) and jne or pop cmp add (bad) xor adc lods arpl jae aas mov mov in dec xchg adc outsb das dec add imul push cmp std jp adc pop add pop inc test jo cld and push (bad) mov in dec movsb adc fisubr sbb insl xchg popf cld in pop ss jle inc aad loopne sub andl cmp or lods out mov imul add push jge mov push cwtl xchg pusha adc popa push dec push and jae test outsl test imul jecxz mov leave dec loope mov or std inc and and inc loopne jnp xchg lods mov inc aas hlt xchg ja mov aad ja dec mov icebp xchg test push sahf jle jl psllq dec mov cmp mov das inc lock xchg imul addb mov xchg aam bound xor (bad) ror imul shr dec and es addr16 faddl pop jmp jb sub (bad) lea mov loop and shr mov into test imul into rclb and bound mov add or fdivrl add xor setae add jo scas adc ret ret jmp insl mov mov add int3 (bad) loop adc mov adc daa mov sbb movsl rcrb out jle push in jmpw mov sub sbb iret stos mov arpl xor or std add sub and and (bad) aas jecxz fdivrs imul test lcall cwtl inc mov inc xchg mov test xchg dec add das and pop fnstsw cmpsl aas mov scas pop jno in mov mov and cmp xor rolb mov test movsb xorl test pusha je ja imulb mov mov adc test push cmp cmp add sbb (bad) icebp (bad) out test std push mov ficompl hlt loope pop mov cmp fcmovne test frstor push movsb and (bad) repnz cmpsl or stos lods dec ror call mov out dec aad adc imul xchg or in sub push and imul out sub incl pop outsl into stos sub jns gs (bad) xor (bad) sbb pushf inc popl sub out cmp out das mov or je rolb scas add icebp push xchg dec rcrb div pop loop sub push adc jmp mov push push fadd mov movsb ret push pop xchg rclb or ja sbbl dec setno push inc out repnz arpl and mov movsl loope sbb xchg adc sbb or loopne and jp xlat adc xor and xor rcll fdivrl lock xchg add testl adc andl push push adc xchg test cmp xor and notb pop (bad) jmp mov xchg xchg jge test out and aad inc mov leave addl nop out rclb sbb pop dec (bad) push (bad) int outsb push xorb lds daa fdivrs gs pop or pop and js fidiv maxps push add dec mov adc lock mov popf inc testl mov sbb or rolb movsb gs icebp (bad) jae rcll pusha in add adc sbb xchg adc xchg add cli repnz adc cmp inc xor mov cmc jmp aad sub daa adc mov cwtl mov fistpl jbe arpl jno pop jbe les inc es aad aaa std stc sub mov test pop outsl add addr16 inc add movsl sbb scas cltd pop das pop mov xlat pop leave mov mov pusha dec repnz pushf add and adc pop jne lock and pop push daa ret dec ja push jnp cmpsl outsl sbb aas push mov (bad) xlat test xchg lahf mov mov push mov xor mov ss bound push and test push mov push add push mov (bad) imul cmpsl into cmp iret andl jg push or rclb lret pop jbe cmp lea and scas mov std and aaa data16 xchg cmp adc adc xchg and cli (bad) cmpsl mov mov lahf adc mov pop dec enter testb or iret inc pop test mov mov ret loopne lcall sub enter iret inc dec gs test xor mov mov dec xor adc daa (bad) pusha push loopne into push in in xor xchg mov sbb int3 xorl and push xor aad flds repnz rol or adc lods inc sbb dec stos push pop outsl cmpsb mov adc in sbb daa and loope jb (bad) dec cwtl and add (bad) (bad) and out or cmp xchg addl mov inc js (bad) jae sahf hlt test or cmp sbb repz hlt mov pop sub cmpsl test sub xchg std inc ss jb lods xchg push cmc shrl mov cmp mov dec push in stc and jg cmp hlt scas sar aam out add jle mov out das mov pop sbb mov int3 dec les mov xor jecxz add adc pop pusha and (bad) add gs ja js xchg xchg inc inc cmp popf outsl gs adc std pop dec xor (bad) jmp cld lret and or cmpsl gs pop sahf adc mov push add arpl pop sub mov hlt pop jmp pop ds cmp cltd dec adc xlat dec sbb dec jge fadd cwtl call (bad) pop push and shlb mov popa and xchg mov push push mov push lods jmp (bad) cmpsb add sub add jno movsb mov insl rcr pop mov pop popa mov nop loopne or nop loope dec jne addr16 pop gs add sub ja jo popa bound sub int xchg jle andl scas xchg xor rcl sqrtps andb and push pop cltd lock cld jbe dec mov and xchg push scas sbb add and stos xchg gs and ja push iret pop and jg push loopne or mov sbb push (bad) mov jge movsb idivb addr16 add outsb cmp inc mov outsb pop pop add ret lcall ret jl dec push mov add push push add mov cmp and cwtl pop xchg frstor scas mov lock cmp fnstsw pop add inc xchg out movl jge inc cmc popa scas mulb inc lret (bad) mov push push add inc jno fnop inc mov cmp mov jp xchg pop or inc sub negl lods sbb mov add dec movntq sbb testl scas xchg ret mov mov mov mov push dec cs sbb fbstp jno adc and cmpsl cmp dec sub jmp push pushf mov push jecxz mov rolb test hlt lods aaa popa int3 sub xor xor std sub adc pusha xchg xchg sub cltd pusha mov iret jg shrb test daa cmp jl inc and push jne xchg inc xchg lds sahf jns out aaa cmp test aam test jge mov roll call push (bad) scas addr16 nop daa int3 mov cmc adc rorb ljmp sbb jecxz test out xchg pop fcoms sub aaa lods xchg loope rclb rcr jne xchg add (bad) pop push lock pop xchg pavgw xor xor gs jle xchg cmp xchg add subl xchg adcl clc jg movsl lahf iret fwait lods mov mov sub popl test mov fisubrl xor andb imul pop xchg dec push adc outsl push mov xchg js cmpb pop sbb xlat mulb (bad) xchg pop bound add and sub xlat repnz mov adc shlb loope fwait popf mov inc loope push in or xchg into nop jge ret hlt pop sub push into mov mov mov sub or and cli icebp iret hlt lock test ss push cwtl fnop jns jne add pop push pop mov decb shrl add call fidivl inc pop stc test push lock jne cmpsl pop popf aaa xchg pop and xchg mov cwtl mov push sar into pop stos daa mov (bad) xchg sbb cwtl adc mov pop pusha call jne inc cli mov add rcl push outsl iret and dec cmp sub push xchg cmc lds push jmp (bad) mov push test iret imul sub mov push and adc jnp lcall jmp sub add pusha popa pop push sbb lcall inc dec sbb xor sbb mov jle leave aaa mov cmpsb enter cmp aas and (bad) ror popf mov pop das insl stos sbb into mov lret add xchg insb and (bad) popf xor fistp mov pop test shlb xchg sub nop rcrl push inc xchg std cmp mov adcl and xchg pop cmc pop test cmp pushf pushf jl pushf dec fild ss int cmp nop add loope aas orb jecxz adc xor out xor or incl loop (bad) cmp (bad) push xchg mov sahf outsl popf mov test pop lds ret push jmp std sbb orl test rcrl out iret dec push xchg dec icebp mov jb cmp sbb (bad) repnz sub loopne inc cmp mov add dec lret mov (bad) movsb das mov dec dec in cmp inc mov je inc and fistl add mov xchg inc stos cmpsl addr16 sbb push sub inc std adc rorb ret mov movsb jo xor pop loopne xchg imul sub inc ret ret mov aad inc add call xchg lar (bad) std jge xor push jne pop lock jns hlt (bad) jno fldl cld sbb fiadd jno popf (bad) lahf repz popa lock xchg leave xchg lds xchg fadds pop pusha or push sub addr16 hlt sarb inc adc aaa (bad) jb jecxz mov fistl addr16 ja daa and and ror mov push adc in pop loope (bad) pop push dec and xchg fiadd gs mov xchg out sub xchg aad mov xchg pop sbb cmpsl mov push xor mov xchg jl sbb enter shlb das mov jge jne sbb lods jp push xor mov adc test inc ds jecxz imul es sbb sbb aad and inc movsl jno xchg sub out sbb (bad) bound jle cli mov dec (bad) imul outsb test and push (bad) lret push jae jae jmp aas out into sbb jle ret push adc (bad) sub mov lods jmp xor xlat lahf rorb mov push sbb cmp nop inc in or pop popa popf or test es arpl pop in sahf xchg adc push add shrl or sub nop fsubs xchg mov das inc push cld fwait xchg mov sub mov and mov mov cmp pop dec jae pop testb sbb mov (bad) and (bad) enter xlat int (bad) ja test bound dec dec fwait mov xchg popa std mul insl adc and (bad) out shll pusha push push dec std xchg xchg jnp sbb mov xchg mov test test sbb and gs cmp xchg sbbl outsl fdivr jmp sub (bad) imul adc jl push stos mov loope and stos inc test xchg xchg (bad) cmpsb out dec mov dec and loopne push cld dec cmpsl scas popf xor push xor mov mov mov mov out jmp ja loope cmp mov scas shrl scas dec mov (bad) push lock jo mov stos sub mov jmp mov xchg and mov push lret pop pop out cmpsb mov out dec pop cmp mov sbb pop pop mov dec (bad) and mul cld mull dec popf fwait lock data16 xor push jp sbb inc jnp jge lret (bad) jo jbe out rorb mov out loopne xchg cmp (bad) int3 dec fcmovu cmc rcll (bad) sbb aaa mov shr inc test or dec mov xchg or add xor inc fdivs add sub and add (bad) fcmovbe cmp int xchg cmpsb xor imul jbe cmpsl cld outsl mov pop daa mov call mov or xlat popf cmp (bad) xchg xor pushf xorl add xchg sub divb out lea pop xchg ret outsb bound pop mov popa cmpsb and adcl lods shlb movsb mov push jbe sti popf pop and inc cmp mov popa mov jp call mov sbb sub jne dec out mov cwtl sbb loope and push nop jno cmc (bad) mov xchg adc adc mov xchg and iret lahf inc shrl (bad) aaa cltd cltd dec pop xchg fisttpl add push and nop lds lahf jg fidivr insb or arpl inc loopne daa mov and popf xor out fwait xchg inc addr16 xchg sbb je (bad) pusha cwtl cmpb push xorb out mov inc pop test popf out repz inc xchg arpl fsub or push pop cmpsl mov mov je test pusha in jae out sub popa xor ret fadds and data16 sbb mov cmpsb mov pop mov arpl jne mov in test push pop mov out pop sub rol dec jno imul shll (bad) (bad) and cld sub mov and mov icebp addr16 adc jb fmull scas add popf xor repz xchg xor cmp pop mov cmp or inc xchg push ret xorl and subl fs pop fldl mov test push fsubl pusha aad arpl and popa int pop mov fdivl xchg and ja popf fwait in insl cmp pop pusha inc sub inc rorb mov fiadd pop inc jecxz insl dec es clc out fiaddl jcxz cmp cmp adcl shrl and out pop inc rcr adc cmpsl loope loop add rcrl (bad) popf and add mov mov mov arpl cmpsb pop and jg inc mov xchg mov lcall add jae loope dec testb inc cmpsl jnp push out sbb out loopne pop addr16 jle inc cmc scas loopne bound xor sbb push jno pop push clc ret push lahf inc and add arpl stos pop fwait sub push xor push mov (bad) loope stc sub dec add inc and imul ret add pop cmp pop (bad) into cmpsl lea movsl push mov loopne or xchg andb jmp cmpsb into add loopne mov push xchg push push mov movb sbb pop int3 cmpb inc loop fwait bound push rorl dec insb aam cwtl aaa mov out sub inc in pop cmp jmp insl adc lahf iret enter or (bad) bound mov sub push setns ja push lods mov push stc mov add roll in jae xchg or mov lock push mov cltd out insl addl decl iret std mov and int3 xchg dec cmpsb clc orl and push movsb dec push into mov ds movsb add mov jne stc outsl cmc mov in popf mov dec cmp mov cld data16 aaa popa jns xor adc adc pop loop les push and sub adc push adc in fcmovnu cwtl movsb scas xchg and lea cmp cmp mov dec cmp xchg cmp mov stc nop jb xor inc shl sbb add repz ret cmp loop jno das adc aaa inc adc and sbb add adc rolb inc daa jnp test imul arpl call loop inc std roll pusha xchg jl adc nop push addr16 dec cltd xor ss lret movsb and or sbbb (bad) push mov push push and dec maskmovq mull and lret in lcall sarl cli pop jg push sub out or fbstp adc mov lods dec fdivr or mov adc subl aaa movsb jae mov fbld add mov mov mov mov sub testb and cmp xlat in sbb pop cmp leave or xorl in scas ja mov adc (bad) aam imul popa iret aas cmp xor lret xor push pusha push push iret cmpsl ret push sbb and or mov pop in into iret mov (bad) fwait dec jns pop test test adc xor bound dec fdivp sbb cld add (bad) jns inc fildl push into mov nop loopne js fcos xor push call daa scas fnsave cmp or popa xchg pop clc pusha dec bound lock xchg aam add (bad) insl mov pop loopne lret in jnp xchg in bound and imul shll xor jl sub mov mov stos jne insb fs call push sbb xchg fisub scas push mov dec in dec insl mov jnp lds fnstenv dec mov inc imul std adc mov or daa xchg cmpsl ss inc inc test dec lods popf cmpsb movsl xlat mov lret sbb sbb jns fs jo jg mov xchg xor imul xor (bad) dec call cmp sar ja mov mov das sub mov push bound clc lea sbb mov int3 jb shll xchg arpl push rcrl data16 andl mov shlb or movsb xchg push ficom and out dec and hlt fadds fwait (bad) mov (bad) (bad) sub clc pop inc test cwtl movntps stos pop cmp dec rorb insl pop xchg fstpl push mov sbb pop dec fsubrl mov jg sbb push cwtl sub mov int3 clc cmp and popf addr16 mov mov in cltd popf fldenv leave cwtl and adc call mov pop lahf and inc xor mov daa push mov nop fldt xor into cmp enter add and popa fstps dec cmp cld sti push scas fiaddl pop cltd and (bad) fstpl (bad) pop mov pop (bad) cmpsl pop inc das xor fcmovnu add adc (bad) movsb xlat or and push xchg fsubrs gs mov das cld (bad) xor int3 (bad) jno and es mov mov mov cmpsl test mov push dec add imul mov dec adc iret lock pusha cmpsb clc push aad jo jno hlt adc jl push es sub pop out aas xchg hlt push or movsl addr16 sub pop sub cmpsl inc bound or stos addl shl fisubrl loop js inc push or aaa cmc dec and stc xchg jecxz aad daa notl dec gs or xor and jge sub or ljmp xchg fbld pushl jg or popf mov inc inc pop fist clc add das test lods jae mov loopne mov add lahf mov popa lods jb jbe ret and shlb sbb or and cmp jmp inc or adc pusha ret outsl jecxz mov loop pop test lahf add js xor out popf inc mov xchg xchg lea mov mov jbe mov fsubrl inc xorl xchg out push sti out jmp faddl fdivrs adc cwtl les call addr16 mov jne pop popa adc das cmp mov mov rcrl jle and movsb in cmp push std cltd stos (bad) pcmpgtb dec lahf add mov jbe ja lcall clc xor jg mov cwtl jno adc (bad) jne jno dec enter and test bound out push addr16 sbb pushf repnz inc cs push les jge pushf pop jno sub (bad) cmpsb outsb out dec xlat (bad) fbstp loopne push bound mov dec and add daa xchg int3 and mov dec pop and sbb enter imul js mov or mov lret mov ds sbb aam sti add mov scas pop pop sahf mov sbb sub mov add lcall ja jne addr16 test std loope mov and jge leave (bad) fldt cmp lods fiaddl loopne xchg sbb movsl sub xor and jae (bad) jmp dec and lahf mov sahf add inc mov call enter out pushl mulb pop stos inc rol cmpsl sbb xor ja stc leave adc dec imul xor adc jo (bad) cs mov je mov test aas adc test pop push or jbe aaa push adc mov pop popa dec jns add add (bad) loopne mov sbb lahf jl mov movsb sbb dec aas shrl sahf add outsb lds popf loope cmp lds es lods call psrlw adc add cmp mov and mov dec mov pop jne loope test dec jmp jne jmp cmp pushf into scas dec jecxz xchg add (bad) cs mov lods jl mov add lret outsb out lods push push inc mov fbstp adcl lret cmp mov cltd xchg push enter adc loopne dec adc and jnp add bound nop pop cwtl gs lds aaa js jb stos dec add jnp mov int3 test pop mov out jo pop mov add xchg repz jg repnz test adc call push and (bad) imul mov mov scas add xor jle cmp lock insb stos std xchg fsubrs xchg daa and jmp mov push sbb cmp push sbb addb jl inc pop add dec sbb fidivl jg jl and cwtl iret or and sub fisttpl in inc or loope outsl and mov popa sub das add popf push cli dec pop ret js loope mov jl ss push mov mov sahf (bad) faddl mov push mov rcrb sub ret les or add mov ret jg cmp xchg or (bad) (bad) iret push inc (bad) or or add iret and xchg daa pop adc jb rcrl bound negb mov xor adc test rclb adc lods or or xchg mov jmp je and push into fcmovnbe imul imul (bad) or andb sub or sub inc stc adc outsb fisttpl adc (bad) xchg adc xchg mov bound sbb pop pop sub mov lods leave inc fs pop pushf push sub out hlt sbb mov fs in clc bound jmp sbb mov push lret aam movsl jle iret ljmp pop lret adc and push push icebp cmpsl mov mov jge xorl shrl push repz daa and add push ja les pop aam lock out xchg push pop fist fstp mov inc xchg fiadd cmc push pop popa shll jmp shlb mov dec test cld fcoms or pop out lds mov and imul push xor mov sbb cwtl jmp push mov xchg repnz pop lds gs test repz xchg scas mov and loope mov lcall sub mov dec movsb aas ffreep jmp bound std push nop inc testl sbb xorl icebp or fsubs mov (bad) xor mov inc xor xchg std or mov out dec add pop popa and gs cmp stc or xchg aas add xchg cmp scas mov add xchg sbb xchg adc dec mov imul jl mov ror lods mov in mov out jp push mov pop in into bound cmp lods mov adcb inc std and sbb push (bad) mov jbe mov push push or and add cmpb mov xlat out dec fadds (bad) mov popf mov mov xor popf sbb pminub and add adc sbb loop rorb xchg cltd lock jecxz (bad) movsb xorl dec wbinvd adc sub call outsb pop out push and into and pop mov sti pop (bad) je lock or ficomp lods es stos lahf movsl mov stos sbb std xchg push push out imulb pop dec push inc mov sbb inc ja pop push and inc cmpsl add push std sbb (bad) in mov and dec push jbe ret stc adc push jno mov stc sub fwait and jecxz orl xchg adc push fincstp pop mov jl cmc lock hlt dec rclb inc xlat push cmpsl fisubl pop stc ret inc mov movsl iret fnstcw inc push jg shrb dec scas and out mov clc xor loopne fsubrs into std cltd addr16 push cmpsl xchg gs mov in out pop mov pushf fidivl adc mov mov pop sbb push fdivrs dec leave cmp popa and mov mov ret aam dec jns ret sub jnp jmp and xor mov sbb xor mov fisttp repz mov dec cmpsl (bad) bound push (bad) and (bad) int mov sbb push xchg dec jl fbstp cmc ficoml inc mov sti dec pop andb pop and sahf mov mov and mov push aas pop mov sub cmp add dec mov insb pop pop and repz lea std jno mov cmp pop mov push aaa or mov iret pop ja imul cmp out mov cmpsb mov dec mov mov andl jmp rolb pusha aaa xchg and cmc jno and and xorl cltd xchg dec fcoml mov aad xchg mov mov sbbl xor fistp mov addr16 mov cmp cmp dec push and cmp mov xchg loopne push or into pop mov (bad) pop xlat popa add test pop sub or jge mov loop mov xchg sbb ds xchg das pop push jns orl mov dec sbb jge cwtl (bad) movsb or add push mov arpl mov sub test push add add std js (bad) ss add mov pause adc (bad) mov loopne out (bad) (bad) out push loop scas or and mov sub mov out mov (bad) popa stos inc aaa and mov sahf popf xchg cmc loop mov out sub test arpl cmpl punpckhbw sub mov push aas dec es call mov cmp pmaxsw aas fwait rcrl fcomps jl cli (bad) subl cld fsubs add ja cmpsb xchg and pop mov xchg push jle adc push loope lods aam (bad) mov ds daa in mov movsl fistp out add inc fcomps (bad) js repnz adc pop mov mov adc pop lea push and push std andb icebp (bad) add sub xor xor jns popf mov mov dec imul daa and inc out in cmpsl shll and adcl xchg and pop in popa mov sub sti fstl mov orl jb push popf xchg movsb adc aam addr16 daa popa jmp int3 loope dec cmc xchg mov roll jno movb xor add mov jecxz sub push xor push lds clts (bad) gs aas cmp cmp mov std sbb xor dec inc lods cmpsl call movsl mov gs pop mov fwait imul cmpsl test adc and and or mov shlb adc cwtl xor push es imul js incl scas pmaxub mov or enter dec dec cmp and cmp rcl dec mov mov xor sbb mov fwait adc fmuls stos popf mov popa stos mov and lods push pop fimull add lds push call aas cmpl test push push jg rolb lock insl es pop pop clc pop popf dec pop add rcrl fisubl sub pop or xchg into pop int pop mov pop fcomi fiaddl cmc xchg add pop clc scas xor mov push in scas mov xor loopne adc (bad) (bad) arpl inc (bad) mulb je in fisttpll ficomp inc mov push or and add xorb jns adc cmp (bad) pop rolb jo jmp fcomp push (bad) cli dec test (bad) rolb out ljmp add fistpll cmpsb js fadd mov (bad) cwtl or xchg (bad) jo pop gs jae dec inc rdmsr repnz sbb mov lock cmp mov pop leave movsb loop xor cmpsl mov addl mov pop std or rcrb (bad) lock adc fwait mov jns icebp std or push jl js jnp push cmp push push or add hlt insl cmp arpl pop and cmp push fstps inc jg loop push pop sub fwait popf cmp and mov push push imul pop mov dec xchg cltd lods dec xor ja test push nop jg fisub adc xchg cmp and enter push sub (bad) xchg jbe fdiv xchg pop aaa out cwtl push (bad) sahf push mov push lahf psubusb das sbb xchg push dec and notb xchg loope sub pop popa sarb adc fadd popa imulb pushfw dec mov mov (bad) ljmp cltd (bad) xor mov test sub sahf sti pop dec cmpb test dec push sub lea fsts sub sbb movsl jmp and xor adc lcall xor dec scas xchg xchg (bad) popa adc push fchs loop not adc stc sbb adc cwtl mov (bad) cmc adc shrb or cmp out adc rolb (bad) xchg iret jae jle push arpl xchg insb xchg sbb dec mov add inc scas int3 pop jp jb mov push push out jo stos dec or adc (bad) cmovl sbb fs sbb or rorb in lods fs and or sub nop sub movsl rcll js lahf xchg lahf push add je pusha stos mov mov (bad) jmp lock repnz outsb out lock loopne cld clc lea mov fmuls jb ja pusha icebp mov mov bound movsb push mov sub (bad) hlt xadd imul push cmp jnp in jae js fs and add mov repnz rcrl fidivr and cmp subl insl outsb pop adc xchg iret and mov xor add mov xor and dec cltd lock xchg jno push dec push popf mov xlat movsb (bad) cltd push and gs cmpsl push je fmuls stos jae les in movsl iret sar lds out mov out fild jmp sbb sbb adc (bad) imul loopne xchg push inc sub lahf jno jecxz xor jmp repz lahf mov out mov fildl mov xor js jo push add or iret rcrl test dec pusha stos mov or iret xchg std adc push xlat cmp and pop daa subl cltd cmp cmpsb das sbb fsubl (bad) pop mov int cld loop popf adc insl shrl lahf pop popf imul in popa fwait int repnz (bad) push sub jbe jo inc mov cmp lock add into and mov sti fmuls xor popf mov sarl bound or arpl pop dec (bad) popf inc jg mov inc rolb add popa pusha mov sbbb xchg imul gs xchg inc mov sbb call or lock mov bound jmp and mov iret inc outsl fnstsw insl sbb lods cld mov add and loopne (bad) push loop lahf pop jno nop (bad) (bad) mov sbb outsl add rcrb imul out mov and push outsb clc push mov and push and rcrl adc mov or arpl shl and dec or negb mov pop sbb xchg shrl inc and pop mull pop xchg cmp xchg ret or sub out mov stc adc imul (bad) popa mov inc dec fwait mov (bad) (bad) mov push pop xor dec mov pop cmpsl inc dec mov sarl push ret hlt push lods rclb push orb dec ja iret mov jno xchg out lret scas stos sub dec or cmp icebp leave icebp and in dec mov push mov test or pop pop mov xchg bound xor loop daa cltd test xor mov mov insb adcl clc (bad) dec sar push add xchg jl les daa jno jne test mov bound inc jmp sub fidivr adc push adc cmp cmpsl mov add imul bound fist dec sbbl outsl ja dec scas mov adc dec inc dec mov mov pop mov rcll js mov leave insl mov mov push in or int inc sub out dec clc jl andl out (bad) ja add call and orl (bad) out (bad) int3 cmp fisttpll pop aaa or arpl mov xchg fldenv addb mov bound imul addr16 (bad) cwtl or jmp and xor fptan adc incl jg and hlt rorl xchg push sbb pop mov enter pop (bad) dec stos (bad) in dec add mov cmp push subl test inc push push fcmovnu add dec jns adc stos dec and xchg les sub imul cmpsl mov mov jmp sub les dec leave xchg jmp outsb hlt jmp xchg imul dec test (bad) stos cmp jo push cmp add and add bound data16 call ljmp push orps lahf xlat hlt pop dec mov cmpsl mov (bad) pop pushf fwait ror (bad) adc (bad) ljmp pop shll mov cmp stc push cmp (bad) push dec sub jl inc and pop push dec and fs (bad) jns push sbb jns pop loopne cmpsl jne out (bad) fisubr mov push sbb or or (bad) mov cmp pop lds fild add fsincos push dec clc jp pop test adc loopne xchg sub outsl mull jecxz adc scas push push sub out (bad) mov out (bad) addr16 push decb fs push pop mov adcl scas push sti mov dec sub pushf aad and adc push imul pop sbb cmp jp cmpb call in mov push sub add jmp imul xor scas nop cmp std cmpsl or jns jmp lcall (bad) mov rorb test mov inc aad pop pop popa test xor xchg cli mov lret or pop xor lret scas xor lock xor lcall test sub addr16 setae popf lcall fidivl and popf mov mov inc fwait shlb arpl leave adc dec jns ffreep jge test movsl pop loope lds cmp imul pop mov idivb (bad) jl dec cmp mov lea or (bad) popf lock movsl add fnstsw lea loopne cmp imul dec or and jno pop jecxz xchg movsl cmpsl test jge pop ja jns lds and test push mov loopne fimul pop push popf test lea mov and sbb xchg in inc xchg dec fisttp ret xor (bad) sbb xor dec jo test sbb aad lahf iret rcll sub xchg imul push js mov dec and pusha dec movsb xchg push mov cwtl pop sub clc mov dec arpl sub dec (bad) jecxz push cltd clc (bad) pushf test jns arpl mov sbb push cld stos pop add sub sub add out jl mov jnp mov xchg aaa mov popa sub pop hlt mov jmp mov rorl xorb mov jo push lahf xor std loop jo test lahf adc nop lds jb cmp xor iret and cltd sub pop push cld nop daa iret xchg push fucom insb xchg sbb dec xorb notb jg adc out (bad) (bad) std sbb push pop in into insb xchg jbe jae ja xchg aaa lea mov les cltd (bad) lock mov sbbl cmpsl sti dec test sub mov adcl dec mov adc mov push mov mov sub mov aaa add lods cwtl mov ret and movsb imul jg cmp mov es mov cmova push setb ror mov pop xchg jnp fstpt movsl dec fwait inc adc sbb add dec mov insb cmp in jg rcrl and (bad) jb repnz xchg rol cmp xor jl jnp dec mov incb adc ljmp hlt addl xchg dec daa fcompl nop and (bad) fldenv stos rcll inc dec push andb lods scas and inc mov push push jp mov (bad) fbld xchg in gs xchg inc inc jge and es fildll vhsubps hlt xchg addl adc jecxz inc inc aaa in add jno and movsl add std call call fwait xchg jno ret mov xchg fwait mov sbb push lcall xchg dec ja or and insl rcl popf cmp sub jo jno jge dec stos xor pop pop aad xlat cltd insl xchg push mov mov dec push mov dec mov mov and scas fisub mov adc cwtl data16 jl loopne dec cmc dec sub lock popf xlat mov out xor mov inc mov stc (bad) int3 cwtl mov push dec dec push test sub lds mov jno sahf dec adc adc cmpsl jmp std or rol fildll fmuls push and mov outsl dec mov and jnp mov push addb enterw jno fs jno aas test mov icebp adc sti cli fmuls ja jno (bad) dec lret nop add cmpsl xorl dec push js mov inc xchg adc aaa jle imul daa xchg sbb pop sbb lock and mov sub fwait test mov pop jo int cmp dec stos pop adc outsl testb dec or adc fs xor loop cltd push loopne fisttp mov mov loopne sbbb jbe cmpl pop insl js cld popa sub insl mov fsubrs mov mov and jecxz pop sbb mov cwtl sub sub pop sbb fdivrs add das movsl scas xchg je mov add jmp pop cld les leave in gs mull add and and popa test inc adc mov and sbb call mov cmpsb mov inc iret xchg mov adc and bswap xor incl jno (bad) lock iret sub xor mov scas mov xchg les mov cltd jecxz sbb fisttp mov sbb mov mov xorb jno leave call pop std xor bound mov (bad) fwait pusha popf jb sti and jno and iret ljmp imul shrb push dec das jae push scas xor in cmp arpl sbbl mov mov lahf jmp push arpl push adcl fdivr xor cmp jae cwtl and push cmpl jno enter call cmpsb dec fs jns imul push (bad) jmp jmp cmp les dec imul clc sub xchg dec out sarl subl inc mov mov push mov imul movsb addr16 les fildll lret repnz arpl test popf fwait cli mov jns dec mov dec (bad) loop adc sbb fwait bound icebp dec and (bad) call std or jns aas lock fstl mov xchg icebp xchg cltd push sub add (bad) sub mov dec loope lret fcoml aaa pop mov mov jns mov (bad) mov enter push rcl and cmc inc rcll std sti imul pop push lcall push rol test mov xor add or xor out jg push jl cmpsl insl arpl mov jno pop or and pop arpl pusha movsb stos shlb loop add jbe mov dec fisub (bad) (bad) jae in push mov mov cmp fwait add addr16 xlat jns fbstp inc adc lahf mov aas xchg xchg std vrcpss sub sbb adc cwtl sub lock adc and jg inc push sub outsl push les out jno jle popa adc pop stos mov and pop movsb adc sbbb jo nop sbb add push arpl cmp inc pop std sbb movsb jbe lahf test mov les sbb popa leave scas add movsl push jno (bad) xchg loopne dec cmpl in pushf adcb out ss sub test aas daa movsb sub out cmp jmp and push jns cmpsl pop orb ja cmpsb jg in inc pop sahf jecxz enter outsl mov fwait cwtl cmpsl and data16 jecxz mov xchg pop fist inc push mov popa lods cmp pusha jle lea inc pop xor push push lea mov add cmpw insb pop xor jb jmp dec mov sbb jae shl les lcall cmp inc fwait loope aaa adc and adcl xchg fbstp sbb sub fstl jecxz sbb bound or or fwait leave mov subb pop stc and xchg fwait in fildl inc popa push mov call jae ret fiaddl cmpsl jecxz jno mov cltd dec sbb or loope or jge mov mov adc dec xchg mov sbb push dec jb adc andl bound mov cltd pusha jns popf bound (bad) sbb fdivs cwtl or cmpsl popa cmpsb pop fbld subl inc cmp fucomi lods aas cmpsb add and adc add adc dec jmp sub and test xchg addr16 mov xchg out mov ljmp mov imul xchg test push pop inc movsl adc mov mov and mov (bad) push xchg mov jl pmaxub mov jns aas or sub loope and dec jecxz xchg outsb std movsl dec inc mov lcall stos xorl xor mov dec aad out movsb out arpl pop adc rolb fistl outsl enter sbb mov insb mov popl lret mov jo shlb fs xchg lock mov and mov jno sub mov fimull popf mov adc test arpl fcmovb adc or inc fisub xchg dec pop into (bad) adcl mov hlt sub popf jb mov sub fs inc push gs bound sahf mov dec ja add add add inc and loopne jg inc iret add ds mov in mov lea fisub dec cld and add xchg adc pop lahf insl ret out cwtl push or popa sbb ret xor push fs mov les stos pop imul icebp pop insl loope mov adc pop jae pop aaa icebp mov int ret and and mov fldenv pop and loope insl (bad) and jge adc test std push push insl and mov loopne inc jb xchg add sub popf xchg xchg push and mov rclb movsb adc add xor in pop push cld cmc clc fildll mov push jg test mov jb aam or push cli inc popa or hlt js and jb or nop mov dec add jo inc cwtl aaa adc ret pop xlat gs std loop pop mov jmp rcrb pusha outsl fdiv jb,pt popa pop dec notl inc aaa add insl lahf or andl push lahf (bad) lahf xor fbld mov cmp cwtl mov inc xor mov lods push pop in inc adc xor arpl pushf jmp imul sub movsb (bad) loope icebp xchg repnz addr16 lahf daa arpl loopne iret repnz mov pop inc pop jae scas add mov fdivs loopne icebp movsl adc out sbb cmp hlt (bad) jae scas dec dec cmp xchg mov lea xor arpl imul lret adc les mov loop movsl js mov gs pop jae cltd addl jne and jns in pop icebp xlat or pop xchg lods and (bad) movsb xorb pusha cmp xchg cmp xchg (bad) cmpsl cltd pop pushf jmp mov mov movsl inc lea ret mov xchg test mov push dec jno dec dec jecxz mov mov adc andl mov xor dec xor lock aaa xchg dec mov jns lea pop in push inc loop mov jae jo add aas and cmp js sub xchg orb and inc int3 add nop popa sbb xchg lods jmp imul aas mov pop fmull arpl mov mov popf inc shr movsb lock popa out sub sbb sub pop jg (bad) loope insb xor clc mov pop mov shll mov push and xchg iret push xor in dec jg lcall and jno sbb sahf movsl dec xchg and mov push xchg push cmpb push enter ljmp out push lcall adc shlb xchg mov cwtl sahf xorb inc or push and mov (bad) pop mov bound pop jmp pop cmpsb ficompl adc pop lea and mov enter lock daa loop pop fstps adc cmp adcl mulb imul jnp mov mov inc pop gs mov popa jecxz adcl dec xchg and cltd dec insl xlat scas mov arpl sbb push pop xor sbb xor stos xchg mov (bad) loopne cmp fcoms pusha pop xor imul repnz jb xor imul mov fisubr fiadd xor pop test clc (bad) jmp lock mov rorb xlat add mov in jge nop adc mov sub inc dec out sub or jns lea jae popf (bad) imul gs sub mov adc pop pop dec cmp cmp xchg movsl inc add add jo jg or mov dec mov dec ret cmp dec mov ss or jg sub dec mov xchg mov push and or xor fwait lcall iret std inc addr16 fdivs jecxz icebp push sbb adc js dec cmpsl pop (bad) xor lods dec push pop icebp jle inc xchg popa std mov bound loopne add inc dec and cmpsl rcrb out jno in mov adc mov icebp and insl pop xchg (bad) pop fisub enter adc in fisttpll inc fisubl dec rcrl data16 scas fsts cmc gs inc mov fwait dec orb fistp sbb ret addr16 inc (bad) jns and and mov jne push xchg pop iret mov and in aas lahf lods and out iret stos inc les jo out (bad) jne inc (bad) loope mov pop pop adc je mov adc (bad) xor sbb jle mov pushf dec adc sub iret push mov popa loope sub clc cmpb or xorl (bad) mov dec push push lahf jg aad enter dec xor pop jg or sub push outsl scas push dec xchg mov mov cmp test sbb notl (bad) mov lea ret mov pop pop cmp and test test mov inc push andb and push or jbe dec inc push push adc xchg and jmp mov andl div pop jne rclb xor dec xor out jae mov jge mov cld lret lea push adc stc sahf sbb pop dec mov dec or xchg and inc pop or lods rcrb stc inc in mov arpl fisub adc inc cmc cltd aaa ljmp cmp pop push test test or bound out sub pop mov std faddp popf popa lea jmp and adc enter mov adc imul inc dec movsb push inc dec int xchg stos xchg (bad) and cmp stos mov cmp arpl cmp fs shl xchg inc mov pushf cmpsl sbb and mov loope and leave adc and and xchg push mov lods pop inc adc lock rcrl cmp jmp rolb or nop test rorl fcmovbe ds lcall scas rcll sbb jns and addr16 xchg bound xchg xchg adc push mov xchg mov mov test inc mov or adc and sub scas sti pusha ss sbb iret loopne cwtl jl sbb and mov adc ss pop sbb xor and jg es test (bad) cmp xchg sti adc xorl mov ja mov adc xor add and sti push nop loope fs loop push (bad) dec sub and daa xchg add cwtl mov fisubr lock jge inc add and test mov mov jnp push pop sbb mov (bad) xchg out or stc mov jmp outsl loop jb push rclb jge arpl add call jge inc movsb loopne and arpl xchg (bad) mov inc test add adc and push push mov loope mov gs ret xchg and inc pop push lods jne and movsb jp test sbb cwtl push dec daa stos in aas push aam fimul mov add mov pop bound je add cmpl das daa popa into insl cwtl daa sbb sbb add cwtl (bad) mov push movsl and sbbb lcall add cmp sahf xchg loopne dec sarl sbb nop cmpsb fcoms nop fisttpl and push int and mov nop cwtl push cli jo jg and nop and inc sub cmpsb leave cwtl cmp and mov mov arpl or sbb xor int3 gs pop out cmp movsb push jg and inc psllq nop dec rclb cmpsb lock add out mov pop cmp jae into xchg sbb pusha idivl and xchg out sbb in cmp xchg xor push push mov pushf nop js repz sbb mov adc test add cmp pushf movsl ret popa jge shrl rorl push add dec lods jecxz lods add pop push fdivs pushf sbb sbb loope and fsubrs nop add (bad) rcl movsl cltd es stc leave addr16 or shl add js jns sub scas mov jns push dec add popa mov js popa out xchg push push and sbb andl xchg mov xchg pusha jae inc lcall jg mov xchg pop ds popa (bad) call (bad) insb daa and jo data16 cmp and lds in cmovle test inc subb fst lahf push pusha mov lds jle inc cmp aaa pushf inc pop popa daa cmp es jno enter xchg pop in xchg mov sbb jnp jb mov lcall (bad) jle test lcall frstor mov xchg sub jne sbb test cmpsb pop aas fs aaa adc std xchg mov pusha jecxz popa and cmpsl xchg lock daa fistpll lds mov (bad) push pusha and addr16 and mov dec pop and fucom punpckhbw das cltd pop sti clc add popa jl cmp movsb loopne and mov sbb adc xchg mov pop cmpsl cltd movsb loop outsl cmpsl gs sub inc adc add sub add loop in xchg subl inc add cwtl push xor loopne out arpl and pop jl ljmp push or jnp popa (bad) gs cmp jnp or pusha mov xchg sub push jmp mov add aad movsb or (bad) push popa hlt aas gs rcrb daa pusha add and out push ja pushf scas das jb cmpsl arpl and loop popa nop push rorb or cld or ds gs xchg (bad) cwtl push arpl sbb scas push mov popl mov pop mov dec pusha or jmp pusha nop sbb cmpsb inc arpl clc and xchg adc mov push add dec cmp and mov dec jg in and adc clc sbb adc test inc loope cmp sub xchg out mov cld in jp mov xor jno scas pop xor pop jle pusha xchg push adcl fistl jp popa into (bad) jg cmp movsb stc push bound nop sub sbb idivw or jge rol test jnp sbb jecxz and jne in nop shr cmpsl ret sub or lock sbb movsl xchg clc popa lock cmpsb cmp add popa sahf mov bound xor pusha mov and lods mov and pop bound in daa and sub notb (bad) fcoms (bad) std pop cmp clc xchg in andw loop mov idivb addr16 jnp popa inc movl xchg inc mov and jno sbb pop icebp lock or jnp popa inc add pop cltd and cltd mov sub mov loopne xor cwtl mov xchg and cmc dec add decl lds inc mov mov push xor mov push or daa fsubrs out add popa jge pop cmp jo pushf imul insl ljmpw push and movsl inc mov push sub pushf in test (bad) sbb ret rcrb xchg pop mov add jno jecxz pushf rorl or fwait ss cmp fcompl pop xchg pop adc mov or ret xchg arpl xchg arpl jecxz (bad) arpl movsl les cmpsb cmpsl inc inc jle (bad) fildl or adc lea and loope fistpl add sbb les xor gs lock and cs leave cmp mov xchg adc push pop pop (bad) outsb mov inc cltd or bound inc mov xchg xchg cs add mov test clc popf rorl sub sbb cmc test mov inc incl sub and das jecxz push dec pop pop dec pop addl into hlt dec pop cltd out mov outsl sub and jae jb push sbb jns in movb faddp frstor pop push call pop fisub xchg lret mov je adc pop cli inc xor adc (bad) mov (bad) xor arpl xchg pop aaa mov nop xchg stos cmp xlat (bad) outsl (bad) xor in loopne cmp pusha ds mov mov out sbb mov popa std push jecxz pop lods mov (bad) cld add out sub fsubrl sbb inc gs mov out adc inc (bad) mov xor test je jecxz jp jp shrl js cld ret jmp out pop adc popa cmpl pop addr16 adc fdivr fcomip loop sbb arpl mov cltd pop pusha cmp sub and adc test sub movsb mov jae jmp dec insb mov imul sub or pop sbb pop (bad) jle adcl or cmc adc js ret xor mov cli or inc push popa adcl mov fnsetpm(287 mov pop adc imul cmpsl cmp xorl popf add addr16 in pop adc ja mov push inc push dec xor cs insb add imulb leave push xchg jmp neg push push not pushf clc pushf ror push clc bt pusha mov push call stos pusha pushf lea jmp in or (bad) jmp repz mov test jne outsb adc push loope xchg jno xchg sub lret xchg jmp sbb push xor fcmovb imul outsl xor das outsl das outsl das push push test jb lods jmp out mov sti and xor jecxz mov popa fnsave sub test inc in inc subl push ret stc add ret aam mov cmp hlt jp shll push leave fldl push ljmp push dec xor adc or mov pop adc int popa pop addr16 jo pmaxub stc or inc pop addb cld jnp sub repnz inc clc lret sub pop lret into cmp js and lea jae cmc adc in outsb xor or test popa push repz ds push ret inc ret push je lahf loopne call fs xchg enter sbb movsl loope stos mov pop and dec (bad) cld mov fidivl sub popa cmp xchg xchg call aad xchg fisubl fs out lock sub out pushf imul push cmp fs sbb or sub fcmovb push lds flds pop dec xchg cmpsb push mov (bad) or fstps mov cmp fadd sbb je or sub pop std and add jmp sub js aad aad (bad) fadd jno lea add adc negl push push pop dec xchg idivb push jne outsb ret pop xchg inc movsb add sbb dec (bad) jmp or jmp inc inc cmp sbb sbb dec rolb add das inc jno adc daa mov xchg jecxz lods and fdivl or inc add mov mov cmp je test push sti mov fcoml jecxz adc cwtl dec rorb fdivl sub movups cmp dec dec adc xchg jno lods scas shl loopne aas (bad) jne cmp or add add add jns out out xchg xor addr16 dec push dec xchg dec pop (bad) call xchg je push mov cmpsb sti mov sbb (bad) rolb das daa sbb daa push cli adc pushf movl mov mov pusha movl mov pushl lea jmp icebp (bad) das add mov stos aam xchg mov pop inc popf and hlt stos int xor lods mov inc or fdivs call pop or call pusha sub aas enter mov mov out add mov adc and xor stos add mov in and sbb xor mov xchg push nop in xchg (bad) mov push jns inc push sub pushf call xor sbbb sbb lahf jmp fistl (bad) (bad) fcmovnbe xor dec addr16 jecxz add movsl shrb and xor sbb jnp jbe int daa push ds jno mov inc push or dec pusha sub cmpsl and mov fcoml test sbbl orl pushl xor sbbb adc in jp dec mov pop nop xchg fst leave in test sahf pop dec lock icebp outsb jg in mov cld je or repnz inc pop xor pop faddp xchg mov mov (bad) rcl sahf adc out mov pop push dec movsl stc andb jb push pushf add inc mov ds enter dec in mov adc pop pop sbb and xchg sbb fnstenv aad aas sahf out iret iret mov shll push lahf mov (bad) lcall dec mov test cmp inc or jae dec pop (bad) mov clc xchg jmp sbb aaa addr16 (bad) clc scas shrb push cmc dec mov je imul mov dec xchg insl cmp pusha dec pop aaa addb or xchg (bad) repz cmpb xor push test xchg adc movsb pop rcl pop dec (bad) xor jno jae arpl ja mov jno cmp scas mov fcoms mov popa sbb pop jae fs mov mov sahf fldenv xor add and cld and add mov pop pop lret inc mov inc pop cmp ds test in dec mov pop inc arpl push stos mov and cmc add lods lcall test aad jns pop shlb es daa mov in mov loopne mov mov dec add mov inc adc jmp jmp into nop leave xchg cmpsb xchg push or es and mov fucomi or dec cli test mov xchg adc call stc xchg int3 (bad) mov fild fs pop ljmp daa test mov jns mov add adc sbb add jb inc fidiv shrb stc or ret loop adc pop (bad) xor adc sub mov rcl add push or mov jge mov pop shrb pop imul push cmc pop push xor mov xchg jg imulb push jecxz test testb jns pusha jno dec pop outsl mov shr sahf mov xor fisttpl out sub cmp pop sbbl or inc call leave xor push in jecxz pop out sarl xor jb (bad) sbb sahf scas out or push push int3 fstpl add adc mov jmp jae aaa ss cwtl loopne insb roll call mov push test aas inc mov and adc mov (bad) xchg stos incl jmp cmp sbb cmp fs inc flds jnp,pt pop inc cmc dec jl lret xor cltd cltd xchg nop mov xor and dec sahf (bad) call jecxz pop jg xchg enter dec jmp cltd and mov fidivrl lods xchg out mov push pop dec out std push xlat insl ss out adc movsb sti (bad) fcmovnb cmp mov adc and mov pushf ret cmp dec push xchg jo scas jp adc mov mov dec in bound jnp lock sub or mov ret pushf fisub (bad) mov jmp fist or xor imul sub jl jns stos addr16 push enter in int inc jnp push movsb jno or push sub mov push ljmp pusha mov sbb jb in mov pop xchg jo das outsl mov xchg cmp idiv dec lret and loopne insl imul stos jmp add rcrb aad (bad) lds insb sub mov (bad) mov sbb jl or add inc or mov lock cld cmp fsubr mov inc fnsave and addr16 fs or int3 imul pop js test add int in fistpl sub cmpsb mov inc (bad) call xchg sarb outsl lahf jg mov mov push enter imul addb push sbb sahf inc cld repz cli in inc push adc xchg adc std add xorl ss ljmp pop out lock mov xchg daa ja and pushf lods jmp loopne leave push jo popl pushf lcall mov cmc ljmp jno outsl jno or fiadd mov xlat lea jne pushf pushf lea call pushf pusha lea jmp pop out xor fldl add mov and mov xchg jno,pn jge test lea std and jmp or adc jl adc sbb arpl mov pop sbb out fwait jae mov shrb (bad) fisub mov xor mov leave mov cmp pop or outsl das setb mov jmp and into xlat daa or xchg stos cmp clc outsb shl inc repz push test mov (bad) or mov dec dec and test insl lock cmpsb clc cmpsb mov (bad) push mov pop shrl test fwait test xlat xlat rcll hlt xor sbbl add cmp loopnew in nop loopne mov sub sahf loop inc pop pop (bad) sbbb cmp add lds lods xchg pop addr16 push cmp xchg mov jno or repnz push add subl xor inc sub lret enter lods stos mov les mov rep push test mov loop insl jo add dec jbe sahf scas sub pop jl jae cmp lods repz icebp mov scas add pusha xchg sbb mov mov fdivl pop jp dec loope scas movsb mov es mov xchg insb xor pop lahf rcr rorl outsb inc incb pop push pop aaa out add inc sub fidivr stos xor sub jp lret ds xor (bad) cli pusha pop cmpsb sbb js dec mov xchg imul cs mov jecxz or or lods icebp (bad) or dec fldenv jno pop xchg addr16 ror xor xor mov (bad) sub push pop mov mov xchg in pop dec xor mov insb fsubs sarl xlat jg das out inc sbb xlat cmpsl mov and sbb movsb adc movups fxch adc or ret mov or dec xor and dec xchg mov add rolb cltd cmpsl sti clc or cmp scas ret pushf add xor push mov aam fldl2e jno push sub dec jbe addb dec mov or pop ljmp cltd lds jmp nop mov into popa mov xor insb sar sti sti les mov gs xor js dec les stc dec xlat sbb lea dec (bad) mov jmp fsubs sbb cli in cmp int3 repz je and adcl test push ret add mov jbe scas shrb mov mov xchg (bad) enter xor jne test jg or arpl inc fisubr loop push inc xor jae jno push dec inc insl push jmp mov adc call inc cltd inc je mov pop xor inc sbb jmp es cmp daa fsubp cli cwtl pop dec and or loopne push mov (bad) insb fbstp rorl dec repz xchg mov mov sub ds out mov cmp icebp insl rol adc pop jne mov jnp add faddl inc ljmp imul (bad) jl xor adc (bad) mov ljmp lret fistp (bad) add fstpl ffreep fcoml or loope ficompl movsl pusha stc gs pop add xor subl mov jae cli in (bad) (bad) or aas loopne mov lods jb xchg or imull inc aaa push js or inc jg into lock sbb ret test push inc mov fsubrp add mov mov pop mov ret mov or stos adc sarb lea mov in outsb adc lods rcll iret xlat pop inc sbb push sahf addl dec icebp mov dec adc gs add not lods sbb shl mov pop loope mov out add push insl jns jbe enter push lods popf ret mov mov mov or fwait in cmp imul ret pop pop jae sbb mov (bad) sub mov jg aam je mov jge (bad) lret add push pop xchg cmp ja push test adc pop rolb ss sbb (bad) pusha push das inc inc pushf mov pop and bnd add test lea jmp stos push lea jmp add sahf loopne adc cmpsb fs popa out jmp xlat mov mov push aaa inc ja jae push test mov loopne test ljmp mov dec xchg xchg dec mov dec imul repz push aaa mov fsubr dec lods jmp lea bound arpl dec jbe xor mov ret shl bound movsb mov frstor jmp push mov lods pusha mov add adc mov fdivrs arpl add lret and not pushf call inc sub mov popf scas addr16 clc sti cld adc lret pop xor aad gs inc lahf cld sbbl jne dec pop mov hlt adc sbb mov js inc aas cmpb mov xor push ret roll inc rorl stos lret xor adc sub jae aaa or rcrb (bad) dec or subb pop jg jl push lcall stos aam movsl insb mov ss dec adc aaa push pushf and sbb cmp idiv push cmp and pop and push sub adc cmc push add in xchg call dec adc push dec xor call out cmc xchg push sti adcl loop mov loope rcll sbb imull push adc sbb stos mov pop (bad) fisub out push int mov xor popa mov aam int3 ret ljmp std inc adc pop xor push pop inc pop inc and loope push dec push jo imul sbb (bad) pop add xor mov add jmp sbb mov out or test and scas lds in cli in shll sub fadds add sbb scas je out pop or cld cmc adc leave push out mov lahf mov mov jo push bound int loop xor push lret lcall mov lcall xchg rorb dec iret push mov sbb outsl (bad) aaa and adc jmp xchg or lods rcr inc adc test pop add xchg jnp jno loop mov xor mov mov hlt mov xor repnz rclb xor inc inc addr16 lret clc out pop push push pop cmpsl loope and enter add std xor incl fwait mov and push pminub icebp mov in xor pop add (bad) xchg or (bad) and or and nop dec loopne ja imul sub sub jne arpl rolb jp adc jns xlat sub sub loop outsb pop fist cmp cmp add cld jmp clc leave hlt fcompl int3 jb aas (bad) push sbb insb push and xchg mov mov cmpsl pop out push push dec mov cli pusha aas sub mov fsub iret lock enter push jmp and xor js jge xchg movsl pop inc cmp mov cmpsb jno ljmp in mov mov pushf bound mov lahf pop pop lahf repz jecxz xor stc cmp mov mov mov popf cmc loopne cmpsb (bad) cmp js scas adc out inc cmp in mov push fwait inc xchg jno (bad) (bad) and push popf add ds pop push sub sub outsb ret rorl xchg add in mov adc cmpl ror shrl stc adc dec jns pop inc lods pop jo loop sbb or das dec pop insb or ja enter icebp scas ret loope (bad) xor insb inc lea xchg sub arpl sub popf stos mov jb add and arpl lret (bad) ljmp and fdivrs inc (bad) js js into aaa push hlt imul pusha sti out in repz ret inc cmp sub bound out rorb xchg lret or pop (bad) icebp sahf sbb js xor aam or imul jge out mov std out loope cmp pop adcl push and fsubr pusha incl jp shl imul js xchg fdivp cmp inc lea mov aam (bad) xchg (bad) (bad) or scas setb loope rcrb fwait in cmc push fiaddl ja mov sarl fs cmp bound mov aad jno std cs addl jae repz mov lea jmp pusha push adc pushf lea jmp stc push daa mov push xchg lcall lock sbb and and clc stc or lock scas nop call mov dec push in cmp or sub cmp inc int test cmp cli int3 xor lea xor out xor and (bad) negl bndldx cmp inc push dec xor ret icebp ds cmp aam sbb out aad shrb fsubl movsb pop inc push insl cwtl and scas jno std sub dec loop adc cld or xlat xchg test (bad) jge mov inc stc push (bad) jbe jne jge bound dec push dec push mov scas iret adc js decb sahf mov and fldl xor fnstcw sbb push adc xchg scas pop cmpb je fnstsw in dec mov aas sbbl jle (bad) inc jns mov add sbb fs hlt int3 sbb push insl dec pop mov push les adc nop movntq out repz inc (bad) sbb ds and mov insb mov lcall cmpsl fdivs movsl icebp adc and ljmp cld mov adc add cmp pushl jmp aas sahf inc jne cld loop sub xchg or ret pop xlat addr16 adc in outsb xor push dec shl out mov lret mov sub sbb scas and cmpl mov mov andl xor sbb sub lock mov and lcall xor bound mov lds in mov stos jbe fwait jae rorl cmpsl out out push popa (bad) xor jae dec fcmovbe sub or aam es test sub in dec rep aam lds jns sub das jo pop sti lea data16 bound fsub popf loope push mov push test test test mov shrb pop mov dec xor add outsb nop in iret adc and mov dec sub push (bad) popf push or push imulb jno sti lcall lea jae pusha lea jne pushf push pushf stos pushf pushl push pusha lea jmp pushf movl push pushf movw lea jmp mov lea call call dec pushf pushl lea call push pushf cmp pushl push lea jae call cmc out das add pop addr16 lret or pusha call das xchg and xchg test pop roll jp roll and sub inc push (bad) dec and mov scas mov mov loop or jne outsb adc and pusha sahf fild (bad) sub imul jmp popa jb mov adc paddsb idiv or imul pop fs inc movsl cmp in mov jecxz frstor cmp push jno stc stos in xchg mov into fildll or aas pop enter jl push cs cwtl xchg mov cmp add mov and test xchg imull std sub or stos sbb mov stc lcall fcomps add cltd mov jbe xchg or jae cli xchg jb jle cmpsl jp mov pop jbe and sub jmp inc inc push fst stos mov cwtl mov outsb mov add inc pop push pop dec mov shrb test enter into ror mov mov inc fidivl scas push call sbb pushf movl jmp cmpsb (bad) fcompl pop push xor jecxz sub scas iret or xor inc clc xorl loop adc test lahf jmp mov es sub leave cmp lds cmp adc mov sbb aaa inc aas pop and xchg cmc aas insb nop out or std push rolb pop inc mov jae aaa push sub outsb mov lea incb jg jp dec mov aad test xor inc pop pop repz pop mov fistp push sub imul lret fistpl pop clc loope movsb fiaddl add fs imul add xchg xchg pusha jmp push push sub je movsb mov sbb in adc mov mov mov insb out incl jbe dec pop rcrb inc push and jnp adc xchg ljmp mov and (bad) dec lock loop push mov jns,pt and mov aad xor ret cmp mov lock pop ja mov inc subl add mov jo sub insb jge aam mov aas sbb fsubrl mov pop in cmpsb and insb es pop cmpsl out (bad) repnz mov int3 loopne call (bad) pop pop aam cwtl dec mov sbb cmp jae loop flds (bad) jno imull inc sbb and adc adc and push sbb movsb sbb push mov sbbl les in cs incl ss mov (bad) jae xchg sub ljmp dec xchg cmp inc push das ljmp mov mov or fwait add adc lock mov sbb daa cmpsb cwtl mov pop dec mov cmpsl mov call (bad) xor pop std inc cmpl je sbbl xchg and mov push dec ret pop aaa cmpsl mov sbb xchg lods adc pop jmp fs adc das outsl cwtl inc lret xchg pop cmpsl sbb notb test pusha xchg mov movsl mov ds dec jb xchg or inc jl dec imul sbb xchg or sub jg xor sub mov mov and inc push inc mov push stos enter mov xor sub iret out push cs cli movsb fwait adc ljmp jp stc popa ds out iret push lock stc pop loop (bad) stos hlt (bad) iret sbb jbe mov lret scas mov jno cmc push cmp pop bound cmpsb js mov push and and add call icebp cld pop xlat call xor icebp sahf add push in ret jl jp imul js int3 iret mov or and sahf loope loope add sub aam test inc pushf mov es push mov mov inc sub jno mov pop inc sub xchg sub xor mov push pop and push test (bad) xchg ss or std (bad) add adc cmp inc mov lret clc jno testb ror test jmp xor lds jp or nop pop loopne (bad) out lock rep add icebp add pop xor push pop cwtl and pop out out test sbb adc in test sub fsts test aam call push js mov int3 fstl fadds push cs lcall repz push xor xchg scas repz test dec add add test sarb mov les ret mov ror lock push xchg cmp xor add dec jns,pn pop cmp and cmpl xchg movsl stc sbb xchg dec imul fisub pop mov inc mov jbe push test pop xor movb or call scas ss xchg negl divl imul loop xor stos adc xor push fmuls cmp adc dec xor js mov adc cld xabort in adc adc in add sbb cmp mull sbbb testb xor inc mov imul push cmpsl in in lock cli xor xor adc cmpsl loopne imul addl ret sbb xchg xor or sub andl xor iret push lock repz fwait ret movl movb pushl mov mov lea jmp test cmp clc or pushf lea je test cmp cmp jmp movw call push movzbl lea pushl movsbl jmp pop sbb mov lea add in push mov inc fistpl jmp and sub nop mov (bad) sti sti dec cltd insb xor or sub dec mov cmp xchg (bad) sub push cld arpl xor in sbb js dec mov inc pop jae cmp xor lret cmp test inc cmpl xchg cld adc lret jns lods mov pop rorb sub loopne aas jno repnz mov push pushf pushl ret cmp push lea je jmp mov rcll scas movsb fwait lods pop xchg xchg inc cmp fnstcw and inc ret xchg pop lods xor sub xchg ret add out das and sub aaa cli push shr push add fwait in or xor jno movsl mov pop popa mov stc or std push adc loop in bound ds out cli and into push xchg jmp push insb mov (bad) lret dec pop jbe jp in sbb aaa stos in jne pop ficompl inc mov cmp cmpl inc add push and inc dec xchg cmp mov xchg leave inc sahf rcr out and cmp xchg rolb dec rorl out xor sahf inc xchg xlat test rolb mov push imul leave stos repz add lock and inc sbb or rep (bad) dec mov loope sahf xor inc cltd lods push mov cmp (bad) inc adc dec adc pop bound and outsb pushf bound dec (bad) ja cmp adc and popa dec xor stos ss pop add inc push inc pop fwait shr push sub fs int3 sbb call and (bad) aaa test insl inc pop cmpsl (bad) cmovs rcll rorl (bad) jmp ss dec inc pop inc jnp,pt cmpl mov stos mov jecxz int3 aad fidivl lock mov sbb subl aam hlt imul das out mov imul xor pop jmp cmp test sub out out pop push jne push (bad) por adc sbb dec sarl sub repnz or pop fs scas aad adc dec jae push imul jmp xor paddusb cmpsl fwait mov push xchg sub mov mov push imul pop push jge flds sbb popf sbb nop dec je mov fildll add sbb add mov fsubs int3 jb jae js jge mov dec ja mov pop out pop insb mov xchg cltd jne test (bad) in cltd inc push jl les out call mov bound pop sbb pop out aad je sub push lret inc pushf add or mov in pop out sbb sub pop xchg addr16 cmp sub imull sbb fild inc test jnp pop outsb (bad) mov pop call jno arpl fst lret ror jg dec xor inc movsb cmp out mov cmc dec mov lret xchg jno (bad) mov fstl into mov in add sub mov call inc daa cmc or fwait and sub push (bad) jae xchg insl mov fucomip push popa shrb inc outsl xor popa popa pop (bad) insl and scas lock lock sub jnp mov lcall out sub ja cmp inc xchg out mov lds outsb movsl mov fnsave lahf aas adc arpl mov lock inc dec xor ficoml sti push sub jb mov sub pop sbb out cmp and sub push ret jmp adc cmp mov xchg aam and cmp dec fwait and insb mov out aaa pop xchg bt sbb mov shr push pusha pop mov jmp jne gs xor fs insb add daa aaa js mov push push add sbb into xchg push mov insl in mov lods les mov cmc dec rorb push push pushf aas mov mov adc (bad) (bad) dec jae insb xor call cltd jbe mov sysenter aaa sbbb in sbb imul (bad) xchg outsl addb and xchg mov push xchg xchg stos mov lods add and jg mov arpl inc repnz int3 repnz lods xor loop imul sti fbstp repnz cmp mov sti add cs or cmp adcb sti and jmp cs push push dec and xchg push lret xchg scas leave xchg xor ror adc insl adc pop insb outsb lods xor add dec bound mov psrlw push out push inc sub inc push or or jne movb mov mov fimull std jle jbe pop sahf stos call aas mov sahf addr16 pop ss mov sbb cmp fwait cwtl stos sub xchg push pop xchg xor pop pop xchg push add or addr16 stos xor fwait push lret scas mov leave inc mov out mov cmpsb mov lock jno in iret shrb xor jb (bad) fdivs daa jecxz or xor daa out xor jb mov stc clc or test push and test pop pop and or cltd les jle xchg cmpsb fld mov mov cmp push popa and (bad) je lcall add xor pop inc daa xchg jle mov xchg dec ja adcb xchg scas addl rorb sahf add push pop pop cmpsl cmp xchg sub push jno in push andl pop xchg js aam icebp rol add xor cmp sub cmp lods pop cli inc es jne cs xchg dec xchg fadds aad or dec adc lods out es push xchg xchg xchg movsl mov cld movsl iret je (bad) gs rdmsr mov scas cwtl cmc mov out out fdivs jp dec repz idivl daa mov jno (bad) ljmp fistp mov out lods pop in ljmp ffree push inc repnz insl dec xor xchg push icebp and mov test lea xlat pop call push jo cwtl daa mov jno ljmp and push loope adc int fs jmp fwait std rcr jne dec in xchg popa sub rorb stc and push or ret xor inc cmpb jbe sbb inc cmpb jmp push cmp inc fsubr xor dec mov cmp dec nop mov mov imul lods jbe add mov pushf xchg inc movsb movsb ds (bad) or jg,pn jnp and stos fs popf bound push out stc rorb xor enter lods inc pop jnp js (bad) xlat pop xchg dec aaa mov inc (bad) mov push jmp xlat (bad) xor dec adc fsubrl push sub jbe dec mov cli dec jno jmp iret ljmp popf pop rclb sub lret shll sbb pop out adc and inc into push mov js jge mov jle mov inc inc sub sub xorb fsubr inc pop dec dec cli inc push and inc xchg stos cs (bad) hlt or and repz dec jbe sbb fsubrp out inc push scas hlt jmp pop push dec cmc inc les (bad) pop inc repz shrb push adc cmpsb ror jne sti adc xchg inc imul rclb dec mov out js cmp notl clc ja inc sbb mov and adc sbb arpl inc cmp jle adcl and add cmpsb cmp dec push imul pop sbb adc push (bad) dec pop push adc lahf jle xchg inc add or imul pushf ret fsubs mov shl or fs movsl and push js int pop lret movsb popa nop jne int dec dec adc jmp loop xor test dec mov xor cmp or (bad) sbb push jne jge mov adc mov pushf (bad) dec or scas cli daa mov jl mov mov out lcall add and dec dec nop jno call js (bad) lds ljmp push clc es and (bad) pop push inc pop xchg outsb pop ret xor data16 lahf mov mov dec inc sahf jle mov jl in iret mov sahf inc xchg xchg arpl pop out xor cld leave xchg test movsb fimull add scas sbb call sub mov cmpsb cwtl in jne adc mov iret cmpb sub sbb and lcall mov bound and std leave push daa inc add stc (bad) and mov and ss and mov pop pushf jno out cs sar xor mov movsbw pushf mov mov pushf mov pushl ret jmp adc jmp pushf mov jmp add add fs call call psrlw divw cltd scas les xchg out dec sub inc ja lret jg aaa daa cmp cli or sub xor xlat pop (bad) loopne out xor inc pop dec pop push rorb pop adcl xchg fwait mov xchg and test and sbb mov fidivr xchg (bad) sbb rcll mov mov jle ret out (bad) or jnp mov sbb xor push jmp sbb sbb imul sub adc outsb push sub adc int popf loop repz pop out scas dec xchg pop cmp xor xchg movsl push mov sbb inc pop cmp add mov les ficom add lret push in into jp xchg mov mov out mov fsubs adc mov cmp dec cmpsb pop mov in std imul lods xor fildll in mov jbe mov push mov test popa xor je push (bad) fcmovnbe push in (bad) call fstpt pop xchg xchg push xlat repnz lahf repz push dec mov jae lods pop xorl mov ret pop in xchg push pop stc push or test mov iret xor and (bad) mov mov pop rcrb push nop push inc cli (bad) push stc out push in std bound scas jo xchg xor mov xchg rcll out roll push jmp sub mov ds dec (bad) pop sub sbb jno in pop mov and stc inc push inc push into xchg mov mov enter aad lds pop cltd hlt xchg rcll cmc push add mov je inc data16 mov mov mov xchg cmp add xor outsb xor jns (bad) push popa in shlb aaa push dec dec push lea pushf lock scas icebp pusha jne (bad) iret or icebp adc adc and inc mov pop je in xchg push lock (bad) cmp ja fsubs cld or cltd xchg lods inc pop outsl and in or or inc cmp pop sbbl cmp loopne iret addr16 dec cmp hlt cwtl out mov mov repnz in adc jae jg scas push push popa mov sbb mov cs ss pusha movsl mov sti iret push mov xor call mov lds mov sahf lods repnz cmp pop bound cmp test mov xchg daa insb push cmp std (bad) ljmp adc mov test lock xchg mov fsubr xor inc mov xchg sbb mov bound jl adc fsubrs jbe,pt mov ret ja mov jb and sahf sbb mov or (bad) (bad) dec (bad) lock cmp cwtl (bad) xlat adc (bad) fld mov lcall mov orl pop jecxz in loopne jbe repnz pushl call mov fbstp lfs cmp jle inc xchg in ror jp sub ds xor pop arpl cmpsl les out pop iret mov (bad) cmovnp dec mov cmp mov push push or (bad) mov ret rcl sbb stc in fnstenv test bound lahf jno scas jno and and lds mov gs out in adc shrl jnp mov pop and rcrl sbb jle jno push sbb inc call xchg xchg (bad) mov lods in adc sti inc rorl (bad) fisubl fstl loop roll fstpl mov in xchg adc std add cmc or adc aam sub and nop push into cmpps inc xor or push (bad) jmp push (bad) sbb (bad) lret inc int bound lret sti test outsb fstps jmp pop out test sbb xor subps cltd adc lods (bad) lcall adc mov push lcall dec lret xor jae pop push pusha mov pop pop lahf jecxz out inc aaa fsubl es out shrb adc ljmp cs push jno jno loope pop xchg xchg sub popl stc outsl fstps in jo cmpsl mov daa mov xor mov mov lea and mov push enter jmp std mov cwtl insl or imul push add push popa jle sbb mov mov inc ja js scas mov inc ds sub mov repnz or pop lods shrl add test std cmpsb leave sub dec adc mov jno test cmc mov xchg inc jle cmpsb cmpb sub faddl dec xor push xchg sub jl jno loope or inc mov pushf lods bt rol cmp pushl cmc not cmc neg pushf pushf pushf pushf inc pushf mov cmc bt cmp pusha jmp inc xor outsl cld mov add or xor iret mov lock pop inc cmp js push push sub mov adcl sub push pop xchg lods ljmp xor dec imul ret xor rorb add (bad) xchg cltd cmp scas (bad) in inc inc push cmp xchg iret cmp jb fcmovnu xchg push jbe adc dec push dec dec jne cmp call pop lret push pop (bad) pop insl sub sbb inc std xlat dec xor pop loopne and inc jne sub mov xchg mov xchg dec cmc call mov mov shrb aaa xchg (bad) cmp aas mov dec adc xchg dec pop rclb and and jecxz xor or in add pop mov ret mov push mov ss or test je dec and cmp adc jle daa pop leave add push outsl inc adc popf cwtl adc sub jnp iretw lcall outsl mov aas in (bad) mov ds adc loope leave (bad) mov or push dec xor sbb jno (bad) mov in lds popa jb xor or insb cltd add push out repz rcl xor aaa push hlt adc dec daa mov lret mul repz movb imul es lcall pusha iret push mov jae mov mov mov test or xor mov or test je xchg or adc enter rcl push dec xor sbb iret ss ficom push das dec pop sub pop test test xor daa mov lret pop sub xchg in mov shr pusha push aam jnp add dec sti dec cmp add test out inc aaa dec scas adc loop fwait mov popf jp idivb addr16 adc adc lock dec xor mov pop (bad) imull cmp faddp lret int3 shrl jl scas lea jne movsbw mov pusha movw movw movb lea jmp lea jae push clc xor mov movb pushf lea call pusha lea jae inc xchg setns mov dec dec pusha inc pushf pushf mov pushf pushl jmp lea jb cmp jmp stc in call push lods dec pop ljmp hlt or mov (bad) scas out lods xor (bad) and adc add aam sbb rolb mov aad jae cmp (bad) ljmp repz push sbb mov cmp fcmovnb pop out push es cmc inc rolb mov push jecxz pop sbb mov shr out push push popa lahf add mov out (bad) cwtl out or push inc inc jl test loop cltd movsl mov pop fstpl mov jae jmp gs push negl daa cwtl pop dec (bad) pop sub xlat or pshufw jmp pop push pop test inc mov jns repnz into pop sbb cmp mov js popf ficom sub test cmc dec addr16 and lea repz lcall xor or jnp lock (bad) pop push fs jae jbe leave adc aaa dec je lods cmp jo incl scas jo dec adc (bad) or dec jno fsubrl lds lea xchg loop and es std ret and stc out xchg cmp daa js jmp lahf lahf hlt je aas lahf cmp stos movsl mov cltd jcxz pop and mov jnp mov test jno jp arpl jg rclb jmp and popf mov out lock dec pusha mov inc push xor loope mov inc push jmp lock jle out xor cld cmc dec enter inc cmp ret rolb inc push or cltd sbb or (bad) cld ljmp lock jno,pn fcmovne rorb pusha jmp fldcw pxor lcall add fldenv xor adc cmp adc aad (bad) out jnp cwtl imul cmp addr16 stos imul sub nop imul push fs fidivl lods cwtl cmpsb mov test ss scas rolb clc dec or aaa fisub ds and scas inc or fidivrl jle rcrl mov (bad) pop xchg adc xchg cmc mov sti jecxz call pop and add add aad (bad) xor xchg in mov xchg into xlat sbb (bad) stos push cltd cmp mov ja pop std dec fsubs mov fldl mov mov mov cmc lret hlt mov pop or mov int3 imul push or xchg or mov nop push imul stc or xchg stos (bad) mov and cld adc scas sarb call sub xchg xchg jp std (bad) addr16 cmp adc mov xchg sub xchg pop mov lods lods enter sub mov out mov lods pop and les bound add dec rol cwtl test imul loope xor adc loopne pop fnstenv hlt sub sub sahf nop into int mov push xchg dec jmp and aaa lahf cmpsb cwtl test or add (bad) loop scas lret mov mov mov pop dec jge inc (bad) inc loop jno popf fisub jae mov or sahf mov push xchg fcomps jge hlt mov ret insl jl cmp adc insl movsb jp xchg mov (bad) sbb (bad) lods push mov pandn and jbe add int mov inc push mov xor cmp stc aad jp out insl shl cmpb xchg test add pop cli mov ss movsb fwait bswap dec push xor dec (bad) xor mov pop ret insl mov shl (bad) faddl push mov aaa push xchg adc mov xchg cs pop inc mov mov or xchg push js xlat push or push loop xchg enter in adc insb scas fwait inc out (bad) cltd sbb and xor outsb lock xor fcomps jne test cwtl loop lock mov decb outsb xor xor and add pop rclb clc sbbl sahf inc insl cwtl pop test loopne test cmpsb fsub or mov pusha jbe sbb lcall fistpll xchg sbb scas jp,pn aas push xchg push cmpb mov xchg cmp arpl scas adc and iret xchg push add shr ret popf (bad) jbe ljmp or mov xor xchg xchg push cmp gs jecxz popf rcrl inc mov cwtl dec aad mov in pop xlat sbb mov xor inc and adc cli push add pusha movb jmp push mov xchg add into jmp pop cmp push rcl (bad) xlat loop ljmp ss cmp es (bad) in pusha jmp sub cmpsl jno test mov loop out xchg or (bad) pop stos xor insb xor push sub pop (bad) pusha cbtw mov sub imul pusha ficomp jl lret das fldl inc enter mov adc lods repz shl stc jns dec (bad) push push out cs shl and jo jmp add mov lock fadds jbe fdivrs pop xbegin pop loope inc xchg or imull cmp cmovg pop icebp lea insb jge sbb mov push les loope mov jl cmp les xchg inc add add repz xor mov popf add inc pop je jmp aad cmp fisub jmp adc inc dec mov scas ja aaa or mov ds xchg mov cld mov (bad) dec xlat sbb add fistpll pop outsb mov lcall inc cwtl xchg ljmp dec adc jg (bad) mov xchg and cld jecxz in cli lds rorl fbstp (bad) push jno es pushf call lret jns imul adc sahf pop test push push and rsm xor pop les jns inc jo jns int ds pusha push adc add push pop fwait inc mov lea mov aad andb fbld mov jl out fstpt cli enter cs gs jle sar comiss cmpsb lahf adc sub fstpl jle mov lds rcrl nop dec dec xor adc add push push das jo popf je mov cmp pop aad fstpl loopne loop or xor and jns ja xor push and cmp mov push sbb cmpsb pop mull mov in sub mov out fs addr16 fadds sub hlt imulb out dec pop add dec push mov movsb mov or cwtl xchg and cmp mov cmpsl js lret loopne xor pop ret daa fisubrl lods pop mov cmp mov xchg movsl fnstcw out push fxam shr pop add fcomps (bad) xor mov jle aas test out adc out push flds inc in inc cmp lcall push stc inc adc jo in fmuls cmp xor iret lock jne push sub jo pop cltd inc push ret sbb dec lds es imul call daa xor dec inc mov (bad) jl out pop cmp repnz aad rep addr16 nop iret stos mov movsl sub incb mov adc inc clc popa std push jno aad mov xor add dec outsb imul add and inc sub jo adc vunpcklps fldl and inc jle (bad) pop inc sbbb call jle xchg loop mov mov mov (bad) sbb inc sbbb adc mov inc dec lods in aas inc push pop cmp lods jbe xorl sub push stos mov lcall jbe scas jmp dec mov addl stos jp (bad) ja decb inc std push and xchg in ljmp ds push adc push or in cmc int test and pop push or pop and xchg push push jno shrl bswap push cli gs cltd gs jecxz jbe push xchg ljmp cmp mov mov cmp nop iret dec adc imul mov xor pop mov mov leave sub (bad) xor sbb xchg add (bad) mov dec xor idivl outsb aad aaa dec add push xchg or imul jne cmpl mov mov mov (bad) push jecxz mov ja or jp mov scas je push dec das jo ret or jp mov sbb mov mov jge bound rorb shl lods pop loope inc and mov test xchg ds push pusha movl pushf movb push pushf lea jmp fcoms pop add sbb add add outsb je add add add or add add add cmpsb pop add add add add add push pop add add add add addb add (bad) jecxz add add add mov add add add add pop sbb add add mov add add add add cmc adc add add rcrb add add push cmp add inc sbb (bad) mov and dec mov add add add cmpl pop cmp out push rolb nop sub test jl cmp into rcll mov inc add repnz aas mov lock mov xlat out push dec pop (bad) xchg es sub dec jb fdivl pusha and push sbb adc inc jg or push icebp fwait sbb mov loopne lock bound dec ret inc or xor xor pusha loop jnp pop popa cmc dec (bad) push inc cmp jo,pn test mov rolb sbb shr cmc cmp pushl cmp call call (bad) cld xabort push xchg inc repnz push icebp cmc sub scas int or inc rcr test or jae dec xchg or cs pop int sbb stos insb adc test aaa mov sub frstpm(287 xor mov movb mov repz mov mov dec or cmpsb cmp push daa cmp mov pop insb outsb sub add adc jp,pn push jae cs push imul jne push es xchg push insb repz or notb clc lret adc or idivb pushl std popa cmp mov mov js pop jno shl test stos pop cmpsl rorb sbb hlt sub aaa addr16 pop test daa mov (bad) imul stos lods shll cmp sahf flds add cmp fs jo (bad) leave dec xor pop xchg outsl xchg leave fadd lock xchg jge,pt inc jp in (bad) leave adc cld ret aam ret jbe cmp stos je sahf movsb push pop pop pop pop cmpb (bad) pop push and cmp pop iret mov mov out lret mov insl jmp fstps pop cltd mov fimull xor adc test (bad) cld mov outsb xor xchg ja bound loop push rolb jmp decb out push hlt (bad) pop (bad) sbb pop mov jge inc js pop mov jns sar jno iret aad fisubl push or (bad) ljmp push movsb sbb rorb dec add xor fildl (bad) out nop mov and push cmp sti comiss stc xor jmp xlat cs inc dec adc clc or in xchg shlb std and sbb jge int loopne es das cmpsl sbb movsl cmpl cld sbb ss mov inc sarw jae je pushf cltd movsl fsub loopne sbb fisubl dec mov mov mov xor adc mov lcall fistp pop lahf mov shrl add cmp sub inc repnz xor xchg cs dec in push dec nop scas mov clc jnp aam out (bad) push xchg or pop mov loope rcrb cmpl mov cmp xor aaa (bad) insb xlat jbe lcall adcl std ds ret jmp mov and mov fcomps fdivl push insl cwtl jns aad fs cmp aas push dec pop jno int out or call push sbb xchg shrl pop in jg add scas (bad) neg loopne xor shl (bad) and sub pop (bad) pop lods jae ret js xchg xchg mov mov sbb ja (bad) mov inc (bad) jmp loope ss sti das xchg xor inc das lock xchg insb ja mov dec cmc and sub ss fldl jle mov repz mov mov cmp xchg leave bound pop xchg add xchg rcrb in int3 mov pushl jne movsb outsb lock xor pop fsubs outsl sahf pusha gs and cld (bad) inc pop pop test mov adc push sub cltd gs gs mov dec push test mov inc push xchg ljmp cmp mov xor jl ror mov movsb out lock ret jns movsl sbb pop sbbl in adc adc dec out mov gs cmpsl dec mov call dec lock xchg fist dec xor sub dec inc mov lods mov ljmp pop mov pop int3 inc dec sbb add je gs imul and pop mov movsb lret mov add sbb sub (bad) inc mov in rorb sbb icebp outsb scas jle aam inc in sbb icebp add xchg out fnsave (bad) xor mov xchg enter std dec adc lret sub iret adc ret push icebp push fcoms xchg leave or push add adc dec mov leave lea movsb insl repnz push outsb dec (bad) ja test mov push add aad pop clc cs mov (bad) out mov stos mov mov push mov adc sub das jo pop lret lea shr lahf mov mov fmulp push bound mov paddsb pop fist push dec mov dec bound xchg push enter enter testl enter inc insl sti mov xor cld out scas fisub xor je jb insb pop scas mov fcoms xor mov mov test jnp or daa push psubsb add push push jp push data16 jb data16 (bad) mov scas icebp adc cmpxchg aam stos xchg push nop mov scas and pop add lret outsb rcll mov cwtl scas fwait dec std sbb mov fld fnstcw cmp dec mov call (bad) loope and sar and cmp cwtl xchg sbb and movsb jno inc (bad) lds mov ds sbb dec sub (bad) dec fwait arpl roll sub je mull popa mov jno aaa sbb dec repnz mov clc es xchg mov mov icebp insl ret adc adc rcl icebp das add xchg sub push mov push add jg mov pop lret cmovg pop cmp pop insl cmpl bound mov mov mov (bad) mov clc (bad) xlat pop cmp inc sbb sub mov push scas mov dec faddl outsb xlat pushf add push mov nop mov mov cs mov dec xor mov out push xor jns jae (bad) jne sahf cmpsb lods rolb pop vmovss fildll popa jg (bad) mov sbb push pop enter mov jmp sete jl repnz pop sbb aaa lea mov mov stos adc cmp sbb cmp sub xchg je pop xchg test sub jl xchg (bad) mov pushf inc setbe mov call xor inc jge test addr16 (bad) (bad) nop ret jl nop cmp mov dec mov jno inc push mov mov dec stc inc sbb frstor adcb out add xchg jnp add imul and pop xchg stos xchg loopne add pop xchg ret std and movsb cmp jl or pop xchg imul mov out pop aas add or aaa shrb sbbb jae jno enter inc call push add pusha pushf call mov pusha mov call add xor xchg pop rcl pop mov cs xlat jmp or mov mov xchg or out xor lea roll cmpsb loope mov call imul mov jge push and (bad) dec mov or lods cmc ljmp aas mov std ss sbb mov and out fs cld push test dec sbb mov ret push (bad) mov mov test xchg and and rcr and stc (bad) xlat lcall inc lods ja xchg imul je inc sbb push mov mov jecxz xor pop push je dec xchg dec pushf jle or int mov (bad) or or pop (bad) mov push cmp cmp outsb scas frstor je pop ja xchg mov push hlt push mov xchg leave scas mov lret pop arpl mov scas pusha fist jle push jecxz pop push adc and mov mov mov cs fst xor adc pop pushf test dec mov push arpl jle data16 insb mov or mov sbb inc jno (bad) sarl pop dec (bad) pop imul popf loope in mov (bad) sbb push mov jge inc pop inc jns mov dec add in pop enter test fistpll loopne mov cmp xchg jno or or frstors adc mov in dec clc push push sbb sub and sub mov js push push stc cmpsb cli dec push jae inc dec push xchg lahf and stos cwtl cmp insl jo (bad) aas (bad) dec push sub pop and rcll aas pop adc cwtl rorb dec sti in cmp xchg push pop lds std adc cmp (bad) mov push push int3 adc dec jmp pop dec (bad) jo mov out shlb repnz sbb xlat addr16 add dec (bad) repnz xchg add mov ds aad stos mov mov sbb mov inc jg movl pop call outsb out iret int add lea push scas (bad) pop popa fcomps push int fisubl inc pop inc pop xchg adcl lds xchg pusha jmp lea push setl lea pushf pushf pushl movl movl call or pop jg mov push js aad or js cmc mov lret mov loope jne mov (bad) lcall in imull rcll cmp and mov je adc (bad) fiadd test mov cmp add imul xchg mov xor repz jmp (bad) mov pop (bad) inc test mov rcll lret aam xlat out jmp pop shrl in add cld mov xchg xchg in adc mov in xchg jg cmpsl loopne xchg sub out jno vcvtss2sd sub jns imul mov gs cmp js xchg xor xchg jo cmpsb pop stos xor pop lea in fsubl scas lret xchg or (bad) inc fwait lods jno ret push fs jne test bts shld mov stc jmp ss je mov pop xor mov dec (bad) leave (bad) adc push mov (bad) mov inc (bad) in xor ficom fildll in scas daa data16 test pop and (bad) mov jne pop jmp mov cmp cmp push icebp (bad) ljmp add icebp mov push test (bad) mov push popa int hlt ljmp mov mov scas or sub inc fstpl mov rcll mov jmp ret out inc pop pusha lea call push pushl pushf lea jb push pushf pushf pushf pushl ret push lea je lea stc rcl shl xor seto clc movsbw xor mov daa dec daa xor mov jmp rcrl lahf xchg stos mov sbb cmp lds in cmp cltd gs dec xchg mov mov outsl jo cli mov jbe data16 test pusha aad dec xor aam lock sub jg cmp xor push test fstps or rcrl adc mov imul add addb (bad) repz inc cwtl push repnz imul iret aaa daa xchg (bad) fcomps sbb js dec leave imul mov test sub mov cmp mov (bad) out lret int xchg sub fadd dec xchg dec es icebp outsb add js (bad) scas cmp fwait out call jp gs not pusha call stos lret lock cmc mov push imull test pushf jecxz fistpll (bad) movlps jl gs push popa cmp scas addb jbe push push (bad) outsl add cmp int inc iret aaa lds not (bad) mov mov movsb sti or or pop mov out push insb iret js mov adc sbb cmp dec adc stc mov fcmovb sbb std scas in shrb sub xchg movsb or nop rol fidivl add add in mov xlat sbb ljmp imul pop (bad) popa pop lahf dec jno dec incl push (bad) jbe pop pop rep inc sti pop out (bad) daa inc pop inc aas sbbb idivl xor jp inc push mov xlat mov cmp and js mov loope lods shr das mov and lahf add (bad) mov push ja pop dec jae sbbl jg int push stos loop aaa mov and cwtl fnstcw and mov inc bound push and rcl pop stos iret and aas sbb and pop daa or add aas pop rolb cmp aaa mov cwtl ljmp jb (bad) mov xor dec je jno (bad) xor jle jns and cmp sbb inc addl enter scas xchg mov das xor dec cltd subl sbb mov in sahf (bad) xor imul scas loope jbe push ljmp dec mov test dec jb mov sbb loopne push sbb fiadd (bad) xor fnstcw sub mov mov bound loop and jg lret in sub xchg mov sti jecxz pop aad inc jg pop sbb push or test fxch (bad) iret out daa aaa jl xchg stos imulb pop mov mov mov mov push pushl ret inc loop sbb mov fs jmp pop pop pop sbb shrl rcr jb rep out lcall jge je loopne xchg sbb xor fcompl sbb push imul cltd inc xchg cmpsl xlat out or add std lds pushl jmp out adc popa jb (bad) fiadd push jmp push out bound and and adc xlat xchg cmp pop jg (bad) push mov adc xlat mov aad or add mov ljmp cltd push ljmp dec test xchg lods xor jne jge pop in adc jle inc stc or hlt add add daa or inc loopne add adc add add jle out mov fisubr xchg sbb jl out sbb jl (bad) xor dec (bad) sarb data16 loopne adc (bad) mov pushf jne pop data16 sbb stos shl add lock xchg xor inc pop es xor popa popa ds mov int3 cmp inc lret xor dec jmp mov or addr16 mov lahf inc fnstsw js sbb rorl xor cmp cld ret outsl iret test es pushf inc cld pop and or inc and iret xor xor nop out inc xchg pop mov das repnz ret imul push in stos adc jl and rorb (bad) fstpl mov add jg dec aam sbb and rorb pop in negb mull inc (bad) or test nop jl stos push leave dec (bad) sub mov xchg pop cmpsb dec mov sub xchg bnd sub popa xchg lods cmc lret adc (bad) jo add out jns pop mov jle pushf movl jbe pusha pusha movl pushl pushf mov lea jmp mov xchg rcrb addr16 jg mov adc rorb xlat pop jo mov jmp xchg sbb jae in jp cmp ret movsl jp pop inc shrl imul xchg cmpl inc or jl scas mov mov xor mov dec shlb jno lods loop std bound ret pop jg or add mov (bad) sub cmpsl push mov adc (bad) pop iret sub movsb push stc jne mov ja mov sbb jbe in aad lods xchg push nop xor jbe outsl enter pop mov call cli ret mov xchg cmpsb push dec sub int3 push sahf xchg in jecxz pushf ret dec sarl aam int3 cmp dec mov aad pop fs sbb enter shr xlat call jmp (bad) insl or clc stc outsb xchg cld (bad) (bad) cld mov mov scas icebp add data16 imul jmp fwait xor mul sub imul push jne (bad) loopne data16 out into mov icebp sub loop xor jle sub dec xor cwtl out push mov push adc xor adc (bad) jecxz push inc jbe sahf jno mov push call stos jg jb sbb add push decl pop (bad) dec (bad) pop fildl jge jge aad mov rorl decb mov fwait or sarl jae jb jge mov xchg movsl pop imul cld (bad) dec adcl rorb push pusha sub movsl sbb stc push pusha enter clc sbb jecxz out cmpsb sub pop mov xchg out out rorb pop mov insl decb push insl jle in mov push sub push push and stc pop adc aaa sarl dec daa iret pop mov mov insb rorl adc std enter xchg test cmp shrb or mov add inc gs outsl fs gs imul add xor pusha lea jae sets mov setl pushf inc pushf not mov movb lea call pushf call sahf addr16 test repnz mov in loope fnstsw sub and adc flds mov jbe xchg pop add or es pop pushf aad fnop scas rorb xchg or jecxz mov repnz daa sbb xchg in xor test cld or (bad) insl adc sbbb xor (bad) and mov in push hlt dec cmpsb pop mov push cmpl push das andl xor data16 lret outsb adc (bad) adc cli adc or cmp inc jno mov pop out xor cmp test push repnz or push leave pop pop inc (bad) ret sti adc jecxz jle out cmpsb clc aaa call and jmp je push mov cmp cmp inc imul sbb psubq retw fimull pop jmp add sub flds fildl push xchg mov icebp fldenv imul pop hlt or push push add and jno jno mov out jno mov pop addr16 jae iret xor dec std jns adc gs leave inc stc or movsl fisubl sbb stos push sub mov push inc enter push and out loop sub fsubl in icebp and inc cmp jnp push cmp mov or mov mov aas mov push lock dec cli in (bad) test xchg repnz cmp ret add jp popf xorl add mov cwtl pop sub xchg cwtl divl imul stos pop fisubl fadd mov mov add add push pop mov add aaa pop add add add add add add add pop add pop add pop add add xor add sbb add sbb add push add xor add mov add add add add add add add add add add add sub add sub add sub add sub add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul js jb js pop insb insb add mov dec pushf fwait sub mov inc orl xor out loop idivl sbb jae fcompl popf inc dec test pop cmp lcall mov pop ret dec and shlb xchg xchg or mov shlb cmp push xlat nop push js pop adc out sbb loop cmp add adc sbb push in pop test pop mov push mov sub mov sub fist inc (bad) rorb push or pop aad sbb or sbb test xor pop pushf xchg loope dec (bad) or sarb sub inc or cmp jno push dec cmpsb scas mov pop ss fadds enter mov dec shrb ficoml push add cmp sahf xor and mov jae push dec sti and hlt sub pusha dec in xor pop ja mov mov xor xor nop (bad) pop pop mov stos xor adc iret (bad) adc orl lahf repnz and test ljmp mov sbb jl push adc decl push mov add fildl in jo cli sbb (bad) std xchg into sub arpl mov popa iret faddp push xchg mov push dec loopne loop in fimull movsl xchg cmpsl add cmp cmp mov jns,pt push loope or lds xchg adc loopne pop push push add clc std inc jne imul push leave adc call lahf push adc dec adc xchg add cmp pop popf xor mov insb mulb aam aaa add jl test enter mov in (bad) cmp inc pop inc test loopne jo lahf push sub or ret jne aad subl insb or xor sbb pop adc pusha fwait je loope and loopne dec mov mov add mov pushl cli dec xor testb hlt data16 je sahf in fdivr adc xchg pop aaa pop xchg or xchg xor mov rcrb jg (bad) stc das iret int3 scas nop jle xor nop push pop mov cmp jp push (bad) mov pop inc sti xor pop decb aam add aas push sahf jl out jne lods push (bad) sbb rcl cs jbe mov cmp dec lcall mov xor outsl in mov adc jg inc mov jnp and mov aad xchg loope pop or (bad) stc dec mov in push popf sbb mov mov repz mov lret add add aad pop pop jge dec mov fucomp cwtl cwtl or jl sti sti mov sub adc movsl ss je fcoml aaa movsb daa sbb aaa lcall pop in mov jl js inc pop clc pop cmpsb inc std cmpl inc xor sahf push popf mov testl adc lret sub sbb inc jo nop jecxz sbb out adcb aas aas dec cmc push pop or (bad) xor icebp out mov inc adc aad add dec or push (bad) push xor mov or sub or mov and or rolb cmp jp sti unpcklps sub sarb daa subb ljmp pop and in ljmp aaa adc xor hlt nop push shll add mov xor mov test (bad) arpl inc sbb inc fistpl cmp pop (bad) adc dec mov aas daa adc dec out ret push fsubl sarb subl scas movsb int sbb imul cs adc or mov addl lods outsb lea xor jne (bad) sti and xchg mov mov cmp mov nop sbb xor pop movsl pop pop and cwtl or mov data16 add ljmp lcall mov mov push fstps mov insl and insl mov ja push js cmp cltd inc addr16 jecxz push jno dec gs bound daa (bad) test xchg pop jbe mov iret jnp insb loope pop push mov sub jle push scas cmc mov lock mov outsl ss or dec xchg mov add pop and jnp sbb lods mov addr16 sbb pusha lock fiaddl jnp mov dec lret aaa add xor mov (bad) mov (bad) jecxz jb movsl ret push (bad) mov mov xor inc stos push enter arpl cmp les loopne adc jmp in cmpsb or dec sub cwtl sbb adc mov push cmp dec jp xchg (bad) mov fmul jbe cmp cmp dec out mov lret cltd insl mov and dec xor das mov mov out adc add lahf cli (bad) xor add fadds sub lahf jne adc outsl mov js (bad) cmpsl pop imul fdivs xor icebp shrl inc aam jns jnp stos dec outsl nop pop adc sbb mov push addr16 cs inc mov push xlat imul scas test ret sbb (bad) xor pop inc (bad) dec pop jge xchg pop popf adc fwait add pop in mov ret sub push lds mov and in int3 jbe push push jecxz push test int3 xchg dec adc insl stos aad rcll dec push out cltd xor fsubp loop daa adc sub stos scas push mov mov inc add xchg popf fsubrs inc int push push leave ljmp push decb scas cmc jecxz or jne push jecxz xchg pop mov adc push adc fwait and dec push popf xchg mov cmp mov mov movsl inc pusha loopne lcall sbb ret inc or out and out idiv mov sub xor mov lea insl lds aaa inc pop sbb xor and mov repnz clc sbb or ss push lret repnz mov aam jno loope or dec mov adc dec or loopne jae mov (bad) (bad) repz push and mov mov pop cli pusha mov sbb mov ret int3 out imul call xchg lods inc cmp imul in mov rolb jge or aas push mov stos sbb mov aam daa push not sbb jo js adc lock mov out or mov sahf test dec stos fildl xchg push pop mov daa nop lea pop or pop push xor je push testl pop add mov lahf mov in ror pusha and daa pop (bad) dec pop ljmp (bad) adc and inc push push jns rol js inc ret dec lods int3 test inc mov or repz data16 xchg into mull jae leave jo jmp fstps push pusha cmc aaa out jnp mov fbstp dec jo lods and jmp mov dec into mov sub lock xor jne push cmp jne lea dec aam xchg xor outsl pop mov cmpxchg sbb pushf dec and out shll pop or jle pop cmpsb into scas jg xchg in (bad) test sub sbb push andl lods xor cmpsl or (bad) aas adc scas arpl sbb daa insb insb push sbb cmp lahf mov (bad) dec lcall xchg sub daa sbb (bad) sbb imul fs adc inc xchg ret pusha add lret imul cltd adc jmp (bad) (bad) hlt std enter cmc or lret icebp mov pop push mov dec push fwait cmp pop adc pushf shrl or jno mov inc pop out xchg das sbb leave or sub (bad) push pushf sub mov pusha (bad) arpl inc sbb arpl jno fs notl repnz ds xchg lahf jne pop je push (bad) mov xor gs dec enter movsl push inc push ficompl pop leave inc (bad) xchg and iret sub mov adc daa push push jns sbb and dec mov popa mov loope dec or roll scas or mov xchg (bad) ds fcmovnb inc (bad) push ret inc sbb or or mov push xchg cmp dec push sbb xor and (bad) fidivl dec rclb ffree lcall ds pop (bad) dec std imul (bad) (bad) sti mov in test push mov repz pop dec stc or aas lea xchg in mov inc jle mov (bad) adc out add mov xor sbb out (bad) imul ja mov adc fdivl or fs imul fstpl sub mov xchg pop and outsb sub cmp inc cmpsl xlat out loope add (bad) enter xchg jmp outsl mov sarb pop (bad) dec jns mov push in mov cmp (bad) mov aas mov lods jl add test and sbb mov sub mov xchg test jge xchg jne dec insl pop shll adc outsb imul cs insb add add cli push sub bound es adc add and pop inc fldl shrb sub cltd and inc das mov pop sbb push mov jne out pop push out lahf pop jo lcall rol add out and add push dec adc mov fldl iret mov mov mov loopne inc mov pusha mov mov sub dec jecxz movsl jns cmpsb clc xchg cmpsb cmpb cmp jno stos mov rorb out in aaa sub jl frstor sbb (bad) test jne and cli in repnz repnz mov fsub hlt popf add mov dec xchg sub or add cmpsl xlat xor cmc iret movsb ds js xchg jmp movsl test jo dec or jne shr mov gs pop sbb daa and test and mov jge inc subl hlt push or inc push nop mov scas mov cs cmpsb leave dec xor pusha fldl2t enter repz and xchg test or add xor fwait mov pop (bad) insl xor scas jo imul xchg jae pop mov pop test sbb push fsubrl mov and test cmpsb stc (bad) lock xor movsb jnp mov ja daa imull adc and add sub jp sbbb fnstenv pop and test lods inc inc mov ss cmpsl movsb xor push out (bad) fldenv push push clc xor adc loope fbld out push dec mov jno lock jl pop and das jo loop mov or sub and stos xchg lds pop mov loopne sbb arpl xchg xor mov pop jno test icebp dec mov mov lods mov mull mov mov xlat mov xchg incl push lods xor mov add stos xchg sbb sub inc repnz xor lea xchg test sbb inc add (bad) jae daa int3 ljmp lock dec xor xchg js cmp mov into mov mov inc test movsb and sub insb repnz xchg or aaa js insb out insl bnd jl jo inc lcall cmp inc (bad) sbb sbb test scas das loop leave jne mov mov (bad) jno cmpsl ds pop dec pusha pushl movl lea jne push pusha pusha lea jmp call inc jp push enter sbb (bad) sbb pop pusha dec mov pop popf loope xor sub das test ret push jmp and cmp mov popf dec xchg push mov sbb sbb notl inc mov push rcrl push jge mov outsl mov mov mov popa and (bad) xchg or jmp push sarb pop in mov cld jg dec dec cs inc lahf daa push cmpl push insl out stc sbb cmc dec mov xor das mov jl fsubl and scas mov xchg xlat sub rorl rolb sbb push das xchg sub pop inc pop (bad) dec xlat push xlat sub cmpsb sarb and adc adc pushl popl pushf pushl ret cltd outsl iret iret iret adc in add hlt push lods rep repz xor jg xchg je lahf pop xor jbe int inc (bad) aas push push or push push dec lock ja mov xchg or repz mov sti subl (bad) or outsb je dec or or (bad) out jno out sbb call jns push adc and dec adc and (bad) rorb or or push mov testl pop sub push leave lock and sbb or inc outsl xchg cmpsl jno cmpsb insl and movsbl cmp xor jmp sub insb lods or and sub and pop inc lock (bad) paddusb adc and xchg out pop ret std (bad) ret nop iret push outsb jo out hlt or je pop push (bad) out or data16 roll mov (bad) idivb or sub mov out push mov outsl mov dec lods adc add add cmp scas sbb ljmp fdivrs imulb sbb aam loopne,pt add test pushf adc cmp ja stos hlt mov cmpsb sbb addr16 pop sub cmp int aam xchg out xor jl mull ret ljmp imul das ret cmpsb hlt lret xchg out jns mov dec xchg xchg or inc push and ljmp pop jns cmpsl in jg push int lea lods bound adc inc loop sub cwtl mov or mov shrl (bad) pop mov and sub push pushf andl adc jno movsb mov jo jmp cmp mov add stc pushf test jmp int idivl int3 addr16 or pop and xor xchg out xchg mov mov rorb inc imul jns adc xchg cld loopne mov jbe dec pop je mov fldenv xor mov jae outsb lds jae push gs les out add cld adcl call dec fldl shl in jae cmpsl js (bad) cmp sbb (bad) sub fildll mov inc sti lret add inc adc aas cs bound sbb test cmp jmp inc ficoml dec aad (bad) fcmovnb jb (bad) (bad) mov dec jno mov mov lock cmpsl sbb mov jae xchg mov push or and pop and stc in cmc sbb inc test mov jae addr16 mov push (bad) fcomp ds mov or insl dec push and aas aas scas lret mov in dec popf inc push gs (bad) pushf adcl js call int3 and aaa push (bad) mov sbb adc xchg repz sahf push adc xor and fsubrp push mov jle adc mov (bad) and outsb rorl repz pop test (bad) xlat mov jno mov push jp pop xorb mov xchg out hlt lret sti add aaa jl repz pop sbb inc jl lahf imulb test pop push test (bad) shr inc xor jnp inc jp mov test inc pop or or adc push sub inc movsb mov cmpsl fldln2 or repz shl mov aad mov rolb mov mov out adc adc or adc mov aad (bad) xlat fisubrl or cmp xchg stc fiadd clc cmp pushf cmp jmp aam negb mov inc lea int3 xor fldl and int3 ror pminub dec and xor cltd fiaddl xor dec cld and or loopne xchg arpl in xchg in iret scas movq ds sbb pop pop mov outsl xchg cmpsl sub xchg or push pop daa inc cmp or (bad) cwtl lahf shrb mov fsubs mov cmp movb pushf movb lea ja and push call js mov dec dec xor (bad) repz mov xchg in imul incl mov dec xor cmp fadd mov push xchg (bad) dec lret in mov ret fldl2e fadds lcall adc pop lds addl xchg stos xor add sub cltd lock out mov inc add jbe adc cltd outsb loope push cwtl cwtl icebp adc fldl2e inc fucomp (bad) dec imul sub or jl mov mov test and dec pop cmpsb aam pushf xor mov arpl aam rcrl (bad) or mov leave stos dec xchg pop (bad) insb mov mov fucom mov repnz push dec push mov jno mov (bad) into mov nop cmpxchg pop adc fs dec cmpsb pop scas outsl xchg lret jmp mov js je fs dec ja push sub or jnp pop push cs adc add fcomps mov insb cltd lods popa movsb xor mov rclb ljmp xchg mov cmp sbb (bad) sub out or cmp cmc outsb cmpl ljmp pushf xor imul lock push (bad) and xchg cmp xor cmp jl sbb mov cmpb mov rcrb in sbb lahf stc xchg sbb mov or nop and stos adc lods mov repz jg dec aaa mov stos arpl xchg mov mov mov jle lcall lret xor adc push inc mov mov inc movsb mov dec add adc cmp stos mov add icebp stos mov pushf repnz inc pop fwait cmpsl js mov pop rorl sub and popa in xchg mov xor pop ja js lods inc mov popf addl mov jnp mov das sbbl stos xchg cmpsl imul pop cmpsb pop cmp adc (bad) sar sti jae push imul stos xchg movsl pop ret aam outsl iret loopne fadds lea mov pop dec mov sub mov mov mov xchg mov or pusha inc in cli and add dec out cmp aas fucomip xor mov xchg scas pop stos int lcall (bad) sbb mov insl mov fcompl es enter push jmp rclb or inc cmp imul lcall fs jae xchg pushf pushf mov not inc jmp add push fs testb xor icebp push or lds sub (bad) outsl das outsl ret jnp outsl je or out push movsb or (bad) lret or (bad) js mov cltd inc push or push xor fistpl leave enter or cmpsl add or movsl gs daa cld cmc pop into add ss test add adc xor mov xchg and jge dec in mov sub xchg pop xchg roll sbb mov inc xchg push lock pop jle gs fsubl push mov or mov cmp pop popf fdivs pushl pushf mov lea je pushf cmc (bad) repz xchg movsbw pushf sub movzbw shr neg or bsf mov inc inc dec clc add cmc add lea mov mov stc shr jmp movb lea je call push push xor xor fs insb add jp mov adc or lods repnz sub add inc enter mov bound mov sbb fild cmpsl sti jecxz jmp (bad) rclb mov aam jo sti lahf pop xor fistpl stos mov out xchg je dec arpl mov arpl loope sub (bad) push fildl push in fisub xchg mov push and mov shrb iret cmp cmc mov sbb sub sbb btr cwtl pushf mov aas movsbw push rol btc or shld push bt cmp jmp push mov addr16 push sarl mov cmpl daa mov aaa cmpsl mull hlt sub add pop add push xchg jge mov jl push mov mov aam out cld mov orl adc cmp cld popf sub fcomps push inc xchg mov mov mov cs std xlat call xor je pop scas sub xor sbb das test fs outsl scas or shr std or nop fnstenv stc dec adc in ret lods rcll enter and test xchg call jp popf pop cmpsl js cmp inc sub dec push dec push push adc addr16 cmp ja jmp movsl sarl in lea (bad) mov mov add adc xchg cmpsl adc arpl cmp sbb test mov addr16 dec lahf mov jge mov push jo cmpsb jmp mov xchg or cmc popa mov jmp or cmp push and adc inc jo (bad) std push or pop or jo adc add dec ja loop cmp idiv or iret mov jno lcall scas pop mov push adc das dec clc xchg pop pop pop scas outsl je je sub adc xor (bad) fcompl pop inc ret and pop data16 ljmp (bad) in xor and cmp xchg ja dec aam daa xor mov add or nop jne insb bound loope push repnz jle pop add fwait push jle xchg xchg cmpsb fdivrs and frstor addr16 pop lcall or sub add stos jae loopne xchg mov test jne sar inc (bad) cmpsl mov shl das xor cmp adc mov stc xchg into sbb sbb push or pop push test aad and ja leave cmp add aad jno sub push (bad) pop outsb scas push xchg and sbb mov ja mov loopne jo (bad) (bad) or shrb sub mov jmp dec inc les stos cmp faddp sbb (bad) mov or ret pushf adc push call mov adc sbb into push cli gs pop cltd xchg mov je cmpsb fsub ds xor in fisubl and jae inc add jns inc popf and dec xchg sarl cmc push mov xchg jo rcrb fbld or (bad) xor aas aad clc loop (bad) jbe xchg dec jbe stos mov mov jmp cmp ds ror dec test inc test popa pushf add dec outsl jle faddp loope and fcompl add not jo or pusha jle addr16 cmpsw mov jnp int jns xchg sahf mov daa popf or sub scas jo xchg push push pop push pusha ds mov mov cmc xchg dec pushf jno cwtl popa jecxz,pn push movl mov pushl popl pushf pushf pushl ret (bad) or cmpsl fcoms cmp jge fs (bad) cwtl mov in cmpsb cmp xchg loope mov push add int stos pop dec xchg mov cmp cmpl mov cli scas mov inc pop inc jmp lock daa pop pop jns xchg (bad) je out ret imul jne inc ficoml je adc repz xchg cmpsl mov lock mov xchg int dec inc pop adc adc or add or jmp push dec xchg mov jno xchg pop aaa movsl fimull pop (bad) cld dec jne or fdivrl mov shr mov data16 push lret addr16 xchg ret imul sub cmp inc js popa jecxz insl addr16 int3 out lock out adc xchg xchg scas test loope incl jp movsl jp call clc std lods push mov lret cmp dec cmc dec or aad pop xchg scas adc jle xchg nop (bad) lcall sbb in shrl icebp xor xlat mov out add add sahf cmpl mov add sub cli or push jg aaa push pop dec pop repz js jae jmp repz jecxz call pop xchg out lret outsl outsl je sti in int js sbb popa cmp fiaddl pop inc jns pop inc cmp xchg jbe dec pop data16 add es mov mov aam fwait popf daa rorl pop xor dec adc les or cmp adc dec pop pop cmpsl sti mov daa rcll rcrl sbb enter cs pop lahf mov mov jp fs aad jecxz js push movsl lock dec cltd test fist cmp scas push hlt inc mov lods test in pop xchg in inc sbb lret sub push js imul inc push xchg dec xor push push jbe cmp cli inc test push test or adc fiadd push mov jo jno xchg dec inc js js cmpsb sbb cli or jl lds xlat cs adc gs add inc xor and aam in roll jno push sub lret inc into jns sub push cld repz pop xor orl xchg iret into jb cmpsb jge je cmp js add addr16 stos in jg cwtl (bad) mov mov adc scas in clc or in mov mov sbb hlt pop mov sub push pop mov fisubl mulb xor fxch jne,pt jl mov outsl xor lahf lahf mov stos bswap dec adc pop push dec mov sbb add loopne jns (bad) ds xchg test movsb imul xchg lahf fildll ror repz imull hlt add add add stc push imul sti sub cmpsl xchg dec (bad) pop test sbb mov mov fwait movsb mov dec cmc mov stc lods mov mov iret xchg fistl movsl js fsubs mov sbb cld cmp mov loop lea gs xchg outsb (bad) mov sub add or mov je test sbb (bad) push daa jno xchg (bad) mov std xor and cmpsb cwtl xchg test sbb xor int3 mov mov sti mov test or gs xor shl dec hlt add movsb adc fld nop out cwtl cmpsl call cmp cmp pop mov fldl repnz jge jb adc out nop adc xorl inc or push out inc sub mov or iret loopne xor imul jb daa lods adc xchg rolb enter and jns stos pop lcall mov test jno xchg loope ret cwtl rorb clc mov pusha mov cmp pushf pushf call je xchg cmpsl cmp push dec mov xor pop pop mov pop in jmp stos mov mov aaa adc sti or fbstp sub ror adc adc es dec dec add xchg std and pop dec mov sbb inc mov push repz push or mov ror cmp xchg outsb ret and sahf rcll addr16 mov xchg in xchg mov mov lahf and fs mov mov test add jns xlat jno xchg cmp inc and push pushf pushf push pushl ret push arpl xor cs insb add setne call jmp bsf add add ror adc mov rcl cmc mov clc jmp push scas xor adc and jl lods cli (bad) ja adcl jecxz pop sub add push cbtw push xor xor icebp or sub sbb jp push repnz scas xchg dec add cmp add test or dec clc jle lcall adc arpl insl scas ret sub and jmp (bad) (bad) or data16 mov inc add xchg shl outsl xor aas bound movsl push fbld movsb jp fsubr add (bad) mov popa fidiv aam (bad) cmp cs jle jle mov mov mov pop pop add ljmp xor jb leave arpl ljmp (bad) dec mov dec push mov jl movsb out lock cld lret push out cmp (bad) xor rcrb test dec dec les push and dec cld inc test push icebp mov out and adc fiaddl xchg iret mov xchg or pop sbb mov adc ljmp xchg mov out push ret (bad) xchg cmpsb jno std and mov js repz add ss es push mov aad pop cmp icebp xor sahf in and int cmpsb aam into nop dec mov stos hlt mov mov mov pop xchg mov dec inc mov jo jp ret pop jns pop or rcr xchg enter mov rcrb inc popf inc pop mov movsb mov pop push inc arpl repnz scas repnz dec dec call je fwait mov addr16 stc mov (bad) mov mov jp cmpsb jne mov dec and mov and mov sti arpl push adc negl dec xor fiadd movsl xchg test or push gs addr16 xchg add lcall rcr mul pop stos hlt mov adc pop nop ret loopne mov push pop stos je loopne xchg mov fsubs movsl gs xor pusha xor or sbb cmp pop add ror and in sub mov addr16 push mov mov cmp lret sti adc pop jae faddl mov push mov sbb decb or sti xchg cmpsl test test mov cs (bad) fs or repnz jmp int3 or icebp ror (bad) push jecxz pop mov sub out loop into inc sti dec sub stc outsb fwait int sub jo addl mov mov outsb icebp cmpsl push stos je jno jno (bad) dec inc popa std push imull insb dec shl pop cmpsb sbb inc pop cmpsl movsb scas jb in insl xor ds mov xchg mov iret (bad) xor xor mov jne xchg ss and ds daa jnp cmp sbb sub xor js insb (bad) cwtl sahf rcl in sub divb jecxz inc mov adc adc adc inc xchg or fnsave lods sbbl (bad) icebp lods icebp lods icebp and cmovnp jno add fwait sbb pop movsl and sub pop and and pop mov mov jns stc out cli hlt dec lahf sub xchg xor cwtl jbe mov imul mov mov xor push leave mov xlat pcmpgtw pusha in hlt push inc push jge mov lea popa ret sbb adc insb inc pop mov push cmp jo dec shrl mov mov push pop sub mov (bad) std mov pop add mov loop mov fisub jle push xchg mov adcl xchg pop les stc in out (bad) stos hlt (bad) sub aaa jg test lea xchg jb adc sub pop or inc pop mov mov into shlb or lret hlt xor cwtl es jbe pop ret mov sbb xchg mov adc (bad) outsl xchg lcall insb lret fldl sbb (bad) or sub (bad) call sahf add cmp fistp cmp jae push push ss xor sarl mov add pop jmp je mov repnz xchg push scas or js sbb push (bad) pop or icebp scas ret fstpt pop jmp arpl jno out xor xchg aad pop lea add and mov or jnp xchg scas push test out scas add pop add ljmp lods mov (bad) mov aad (bad) mov in xor mov xor aas dec adc repz pop out xchg jmp and pop cmp je or adc into mov cmp cmp ret pop fsubs push inc stc movsl mov or roll and lahf cwtl pop and aam fwait mov out repz xor sbb in test int3 and jb std loop and xor pop mov mov pushf pushl movb lea jmp lret pop test call daa pop push dec ja lret sbb mov jl cmpsl push imul mov xor xor movb je imul enter push repnz jns addl xchg mov stos test test inc xchg mov xchg int3 cmp sbb pushf add dec push insb lods jb lock jmp jmp mov jo jmp mov sbb jecxz pop sub xchg mov fbld ror aaa insl pop pop punpckhbw jae push movsb es cmp jb jae push mov enter data16 xchg dec mov ret mov inc fdivs lods mov pop mov xchg push mov mov in popf cld decl xor jns inc push jge movsbw pop jmp pushl lea call call rcrb aam out sarl mov mov mov xchg push cltd movsl lea inc (bad) push or rcrb add fildl jb lret xchg (bad) and in (bad) loopne and lods mov orl xchg in daa rorb push xor inc xor sub push movsl enter mov mov pop and xor pop mov (bad) std and out dec sti sbb cmp and imul sbb test pop or and dec cld push (bad) fsubrp inc call sbb enter sub pop mov inc dec cmc dec or iret nop mov fs jnp add test flds push loopne mov jp jmp push or aaa mov sbb jg lock mov ja cmpsl xchg test pop mov push dec mov not pusha mov pushf lea jmp jecxz add iret pop add inc daa push imul push xlat cmpsl shufps mov push jbe and push enter clc (bad) loopne,pt and cmp call sbb cmp incl push popa mov cmpsl cwtl test mov std test int3 cmpsb loop (bad) fcoms cmp (bad) scas and mov xchg dec jmp xor pop xchg in test hlt push scas test mov arpl push pop shrl jmp xchg dec adc inc xchg jno mov stos adc outsl shlb in aam inc sub js les popa or fldl adc fwait and out and jmp repnz testb push fcoms xor dec push inc mov into jge int3 dec (bad) jecxz or or test aad lods mov jmp in aas mov or dec and stos lcall xor popa inc stc lahf fcomi dec pop inc mov call out gs add cmc push mov mov lds shrb xor ljmp xchg or pop jno mov lcall add sarl movb call rol mull rclb sub push dec jne sbb in movsb sti xor sti jecxz xor add sub mov nop mov stos das push push repz std (bad) xor imul or mov sbb out pop add (bad) mov jae (bad) in sub sbb pop clc ret adc in sub add js wrmsr test mov scas xchg outsb adc call mov mov (bad) pop fistl jmp lret std add cld (bad) fldl2e dec push imul xchg cltd cwtl add cmpsl mov insb and xor aas into xor add es jno xchg adc cmp sti in push xor fildl pop aaa daa inc ja imul sti sub enter je pop dec mov cmp push gs test jg adc jg jns mov and ss lock stos pop cltd insb lods sub jmp jns,pn push xor pusha pusha mov shll sbb sub cmp xchg test dec mov hlt out (bad) xchg dec test cmpsb inc gs jge jecxz xor (bad) and movsl cmp daa cmp xchg mov pop stos jne sub out jno xor sbb std popa jl popf add pop out nop push fildll adc jmp test cmpsb mov pop loop out lock inc ja mov mov fisubrl pop inc mov xchg addr16 es xor mov aam aad dec jbe add and dec jecxz push add cmp mov sbb pop jae sub or xchg sub jno xchg ret fs jbe test add push not lea jge push dec cmc pushw popfw movb jmp rorl aad sbb js les xchg mov push popf push ret mov jae scas lock and das (bad) imul mov cmp jl xor or and mov jle lea (bad) or adc sub out shrb mov pop andb push repnz mov mov adc sarl add adc jo popf daa fidiv sub lahf sbb sarb jno add loop inc scas call xchg xor adc add and and pop inc (bad) cmp pop test and jae inc pushf pusha mov jmp loopne loop into mov and gs sbb das mov and mov (bad) enter sbb dec mov es js (bad) mov jl imul lods out rorb pop mov jae std and and cld aaa or popa add adc push movb mov popf adc xor aaa insb push cmp pop sub (bad) sub mov lea loope,pt cld (bad) hlt push jle insl mov jno xchg cmp and pop nop aas jecxz or test outsl inc pop inc jnp push outsl jo sbb jp,pt pop cmovg xor sub cmp nop lret mov pop rcl pop test xor (bad) push out nop xchg dec test xchg mov int ret pop inc test fucomip ljmp insl sbb incb pop or scas jae push leave jnp add addr16 sub sbb push mov cmpsb pop fist das xor pop adc lcall mov iret xor and xchg dec jp sub test pushf ret psadbw cmp or lahf movsl lcall aaa jecxz push pop lret and pop push leave inc mov popf xchg push out cmp inc and mov push cmp dec xchg or loop xor xor xchg in inc clc data16 jl fistpll sar sub icebp into and fcoms je mov jns int icebp int ret fldt mov (bad) (bad) loopne jno or mov sub inc fwait lock jne clc push inc sti mov jnp push sahf addr16 out punpckhbw je dec das mov mov jae jno jno inc in dec pop add fildl sub pop out rcll lods loop std loop fimull adc pop and cwtl dec (bad) jecxz es adc pop outsb inc pop fldt repnz pop shrl xchg or cmc mov scas aaa daa push gs or aas mov cmc cmpl jne sub xor mov xchg mov sbb lods test push popa (bad) out cmp jle or push and mov in push out test pop (bad) push cmp mov insb idivl test fistpl pop pop mov das dec xor xor test or std adc inc mov and mov iret mov scas lock nop (bad) jecxz int sbb test (bad) repnz mov std push xchg mov mov pop and cmp cmp imul sbb lret lahf add xlat test iret ret mov or dec lea cli insl fiadd test mov or sub lret hlt shr sbb test xor mov adc xor cli pop popf push mov pop mov stos aam fnstcw out pop push and stc or (bad) or nop icebp push clc push call pop insl cwtl mov incb pusha ds mov jo fild mov mov pop pop push shl fstpl adc jecxz mov sub push inc stos je pusha or mov inc mov lret test sub ljmp ss mul je imul pop adc dec shl dec xor ror cmc lods adc and push leave sbb in std cmp js incb xor mov jno subb out nop rol mov sub xor rcl bsr lea mov push pushl cmc add bswap shr shl call pushl call or repz and jnp jmp xchg dec (bad) nop xor enter int3 loopne mov data16 popa mov (bad) dec lret imul xlat test in fldl2e and pmullw sub or sub mov (bad) mov aam adcl loope jno dec outsb stos fadds pop dec xchg out sub push in and lods xchg mov sub dec sahf pop notl dec mov jecxz cmp pop or dec mov (bad) mov push add pop pop xor dec pop jno jg fmul xchg cmp movw push lea ja call adc jmp shlb (bad) xlat mov or add mov jno dec pop shrl imul pop xchg pop fs outsb add mov scas adc add daa fwait and cwtl pop push das in jb inc (bad) inc test push sub rclb or jmp xor daa out dec adc repnz inc cmp sub lret sub cmp fs lods mov mov shll jns (bad) scas cmp (bad) incb or xor push xchg jno jg adc (bad) xor xchg sub sbb jp cwtl cmpsl mov jns loope pop fstpt insb popl push push mov pop and sub xlat push mov in aam adc mov mov sbb add mov les sub adc and sbb sbb fiadd (bad) mov inc push mov iret das test out in mov ficoml fdiv bound or clc loopnew or iret cpuid arpl lods bound sbb test jae jo movsl insb mov lret xlat call bnd jle insl xchg sub rcrl (bad) (bad) rcl sub xchg not cwtl lea not mov bt mov clc xchg pushf cmp mov cmc test sub pushl push pushl pushl rep lea push jmp pusha pusha lea je cmp pushf pusha push or lea jno push lea je data16 icebp or and clc sub xchg add rol mov pushf and aaa mov jmp jmp sbb cmp std popa mov movswl lahf ljmp xor adc pop and fwait arpl sbb mov lcall xorl test xchg pop mov adcl or in sub out fild push enter sub xor jle (bad) (bad) jno jge bound cmpsl test cwtl cmpsb push dec (bad) cld out xor pusha xchg mov or test (bad) inc cltd stos enter test (bad) (bad) jge dec stos xor xor scas and jge shll xchg insb pop movsb clc or push jno pop cmpsb outsb xchg cld or mov inc rolb pushf xchg pushf rcrb fstps add bound lahf sub or sti cmp xchg mov or jnp fcompl fistp xor jmp mov jle jnp jae pusha (bad) xor out adc jo push inc aam pop (bad) cmp mov sbb jo push test xchg cmp adc sbb ret cld pop cmp push mov leave pop sub jbe jnp cmp xchg xchg pop cmpsb clc xchg mov mov outsl sbbb shl jno jl pop and out in test scas (bad) nop es mov mov add fnstenv int mov (bad) test adc or mov mov pop cmp (bad) in cmp mov jb dec cmp push addr16 push hlt test push cmp cmp jge (bad) jbe insl or lret movsl out mov pop inc sub mov or leave aas pop (bad) outsl xor mov add je jo test push (bad) loope jae leave push lcall (bad) fisub ljmp mov mov push xor jnp lds (bad) (bad) clc pushf add pusha lea jmp test pushf test stc or pushf lea je pusha mov jmp mov addr16 or jne loope test xchg lret or (bad) (bad) movsb lahf stos shll insb (bad) sbb push daa mov xchg push add int3 push addr16 arpl lret adc clc daa xchg pop clc inc xor adc jmp or jno pop out lods mov cli mov loop int mov jae mov xchg mov sub inc sub sub push test rcl sub mov iret push jno lods icebp mov into sbb pushf inc out push js gs inc outsl xchg sarb ffree push into aam repnz cmc ss jp enter mov mov lock data16 and repnz (bad) sbb inc xor std adcl push sub sub jl data16 enter int shl sbb ja (bad) mov lcall scas into mov test jl lea (bad) jno adc xchg cmpsb jno jns cmp dec add fld inc push (bad) nop mov icebp mov cmp adc inc (bad) jl test or pop cmp jnp cmp outsl jne add adc add adcl and xchg dec pop cs xchg pop loope fwait push push or add fbstp pusha push das test (bad) rolb (bad) jno stc xchg xchg or mov lcall inc sbb int3 movsl mov in mov sarb push jo iret mov mov repnz cli in or xor call push or cmp addr16 stos leave ficoml lods mov stos push sub movsl sbb (bad) adc xor sahf faddl cmp mov pop js sbb sub movsb sbb push sarl sbbl pop cmp jnp in sbb scas mov xorl dec mov mov add (bad) or add xchg rcr sub ja cmp mov jb pop xchg or mov jnp ds mov fcomip das test dec mov jmp ret int3 decb dec test icebp xor dec dec je mov pop je push lods push pusha fidivr aas adc xchg dec mov mov add xchg stos shrl pop js cmp sub test mov ficomp add add (bad) mov pushf mov pushf pop not pushf mov pusha pushf pushf pushl ret test sub push push pushf pusha lea call push push mov pushf lea jae pushf bt cmp clc sub pushf jmp shl daa neg mov test cmp call mov shll xchg leave or scas xor lods mov or out add mov or or ds cwtl out inc out pop test sbb fildl adc and and fisubl sbb mov add or sbb fwait xlat and (bad) xlat pushf ret lret fmul in loop (bad) pusha mov add xchg mov int shrl xchg mov jae mov inc lds xchg fstpl cmp push rorb sub cmp and push add mov pop jbe cmp jmp jle lods repnz imul stc fcomps sub jne ror push or inc out push sbb or add loop cmp pop fisttp add sarl mov or arpl push inc movsb popa sbb fisubl ret add inc cmpsb jmp rcl push pop cmp inc rorb fs js lods in aas aas or iret cmpl mov pushf ffree fdivr lahf pop jo pop dec xchg mov adc fldenv push iret or sbb adc and cmp xor mov mov ret fstpt ja in mov jmp and fistp xor mov adc sub dec mov pop xchg mov cmp cmp ret (bad) mov mov (bad) cmp add cmp add out in pop and xchg (bad) cmp std or push jo xor cmpsl clc cld or jb sbb (bad) push lea shl cwtl mov push cmpsl push push rclb es out shll push das jno jne ror pop icebp dec cli test xor rorb lock (bad) sbb sub adc or in int inc lds and dec pop out enter adc adc cmp mov in sub stos jmp cmp out push daa mov shrb sbbl mov in xor dec xorl adc mov sbb insl push fmull mov clc mov mov jb (bad) add mov pop out sub inc (bad) aad call inc mov inc into push mov sbb or adc out jo gs pop je es lea je pushf pusha movw mov movzbw lea not not mov bswap bswap lea pushf jmp jmp xchg sets pushl popl movzbw seto not mov mov movzbl cwtl lea movl lahf lahf movzbw call pushf pushf pushl lea jae pusha pushf stc xor pusha lea call pusha push lea jae stc sub call sti lcall pop inc scas push cmp mov jg mov out nop roll xor in roll sbb pop out popa loop fsubr stos outsl inc jne cmp adc push jns movsl cmpsb xchg sbb das rorb (bad) cmc push pop lea inc jg stos sbb fadd push out add mov xor fsin push pop cmp ljmp shlb jle rorb xor add jmp adc mov add pushf inc xchg jl sub xchg jb aaa mov inc pop arpl pusha (bad) nop push or xor imul jae xor sbb bt and test pushf movb clc add push push push push lea jmp lea jae cmp jb xor pusha lea call jmp call mov push mov push mov sub in fadds jmp push xor loop insb mov xchg into (bad) jbe pushf xor fimull pusha jns push gs pushf sbb and jae xlat mov test mov bound cltd lsl jae test lock pop add fsubrs sbb dec outsb into push mov bound pop xlat or jecxz and or add lods mov sbb or lea xor ret aas push cmp or cld sub and (bad) out int and xchg pop int mov scas cmp push pushf mov xor fstl and sahf aad jle sub cli mov xlat (bad) std jbe dec fwait lret and and mov lea jmp pushf jmp in stos adc pop fwait dec out test pop mov cmp icebp cs xor iret and fwait and repnz imulb inc sbb scas push imul push push jmp and shll fstps jae adc fldenv adc vpsrad out xor xchg cmp xchg scas mov sub cmp sub fstpt mov dec jecxz ljmp lret insb ret push jbe lret jmp pop jne pop inc jge scas lea inc sbb inc and jl call test push pop mov insl mov cltd and or sub movsl sbb pop mov mov cmp leave ds clc dec push jne (bad) jo aam cmp jno out loope mov mov push push inc (bad) mov cli and and cmp pop mov test cmp push (bad) pop (bad) lock dec mov std jg inc nop mov in inc pop xchg ja fiadd popf shr xor daa jbe mov in pop sbb or mov daa pop mov iret iret repnz outsb std sbb sub cmc test flds sub mov sub add and clc push test dec lods mov and daa mov (bad) aam call nop ret nop pop adc pop inc orb pusha out aas ffreep cwtl fnop mov popa cmp mov sub outsl cmp fstl (bad) push and ret add jae jp mov fwait out pop and xchg or mov jnp mov nop shrl enter xor sti cmpl aaa stos je dec cld add cmp mov and or cmp (bad) shl and std push adc xor jecxz cwtl test push inc pop mov fcos (bad) push out sbbl jno outsl sarl mov jne test hlt cli inc xchg add loopne add inc insl cwtl inc pop mov sahf ror or (bad) popf loop xchg jmp mov daa sub dec and pop lods mov fwait repnz xor addr16 sarl les push add ficompl xchg mov push jmp adc lock shrl bound scas (bad) dec repz sub push add out (bad) fs push push frndint mov sub xchg pusha decl xlat std jl push loopnew fadds pop mov xor adc push fs (bad) fdivrs add cmp inc jno outsb mov cld add and lea jae cmc cmp jmp add inc gs jb arpl jae imul popa je outsl outsb add cmp sub ret ret aad les mov dec pop (bad) test jne dec jno,pn and outsb in mov xor xchg aad jecxz (bad) out sub add cli in sub ja jns fdivp mov outsl call iret (bad) outsl fimull push sub mov (bad) aaa adc in insl inc icebp pop mov roll dec nop mov pushf lods ret sbb mov bound daa cmp cmc hlt ljmp outsl mov into push (bad) out mov xor jge sbb dec jp xor dec adc enter (bad) mov stc cmp insl fidivl mov adc inc inc arpl push inc mov xchg mov pop xchg pop cmp inc pusha test and add cld mov mov fwait dec xchg push mov frstor fisttp adc mov fnsave jo scas into arpl mov nop dec fs mov mov ljmp fsubrl fwait roll hlt (bad) fnsave dec ljmp orl mov pop insl push or inc and lea fs jne call or mov cmc and call add mov iret rclb jge aas ljmp imul aas pushf orl adc mov (bad) lods push arpl loopnew inc sbb xchg mov sub bnd sub or iret sbb cmc popa sbb xor sub imul or das call mov les xor cltd dec jge cmp imul mov push mov mov test sub and push mov call pop insb cltd cltd xchg fcmovnb fsubr mov sbb pop insb nop incl push xchg dec mov popf jno mov push mov aam mov rcrl push stos ljmp sbb xchg mov test (bad) mov in repz dec jg xchg or (bad) jb jmp dec fiaddl inc lret and insb or xchg scas sbb fstp lcall imul pop pop inc sbb push mov mov jl mov xchg daa ja jb sub pop or sub cmp sbb sbb adc pop cmp sbb push stc xchg mov lea and push mov clc xchg mov mov imul sbb inc and xchg lret pushf jmp (bad) repnz aad std ds jb stos sahf inc sahf xchg mov in jb xchg pop stos adc jbe scas push or push cmpl push cmpsb inc stc inc inc (bad) mov fdivs aaa test inc std push data16 xor and (bad) pop insl scas dec push movsb cwtl stos mov push sbb jae stc xchg dec inc add sbb rcrb push mov inc push adcb jl mov loop push arpl mov (bad) and xlat (bad) xor aaa jge mov xor mov xchg in repnz sti dec jno push lret dec and jns leave dec mov mov mov inc stos pop cmp aas (bad) xchg out mov in adc inc sbb dec imulb cmc dec fisttpl pop into lds pop outsl aas inc orl (bad) cmpsb mov sbb popf mov loopne lret jae jb inc push stos mov xchg imul stc or pop mov fdivrs jb out scas test scas add (bad) inc jge js mov push es imul stc dec mov or push in pop icebp or push andl push in add pop mov mov sbb sub cmp daa incl dec mov iret mov push mov fimull xchg sub xor test iret test enter dec push lahf fs es imulb sub dec fisub jno imul (bad) (bad) lcall pop xchg rorb pop jns cmp imul arpl lock (bad) xchg popa sub out inc add pop adc adcl outsl (bad) pop daa add popa jle adc inc loopne pop mov push push inc jp adc movsl fildl mov addr16 mov dec pushf and insb jp push movsb xor mov clc addr16 add add xor frstor jle pop xor jbe cmpsl (bad) dec cltd add andl lods je xchg loope lahf lahf mov xchg lret sbb stos xchg test and jecxz mov sahf mov jbe pop mov ss mov cmc in in es mov jg outsl addr16 dec inc aas aaa das daa mov (bad) imul out (bad) ja adc push pop dec dec adc adc cmpsb xchg fldl je popa popa pushf jl popf lods mov mov inc fs fisttp ja pop cmpsl popa add lahf sbb (bad) aaa (bad) xor bound repnz and jns pop (bad) mov mov adc or mov fldenv push test pop adcl add out pop nop daa xchg pop out inc andb popa mov pusha sbb nop add adc sbb mov and pop movsb adc sbb inc cmpsb pop inc adc cltd xor jbe cwtl and adc xchg cmpsl push addl nop test adc sbb movl andb jo and pop xchg pop test and sbb and push sbb or and inc mov in adcb cltd out mov frstor addr16 add jb jae push gs popa setns xchg scas and clc cltd mov push popa mov inc cwtl loopne insl mov mov sbb mov mov sub pusha xor gs mov add hlt add add fldenv mov xor fildll push push xchg sti mov dec push cbtw addr16 std xlat push scas fbstp push sahf aaa jle mov mov out fisttpll outsl push sbb insl (bad) cmp inc pop cmpsb xor jle ds cmp in fstpl xchg (bad) aaa cmp and addb and and mov inc xlat xor sbb push xchg and imul mov sbb xchg adc cmp and xor push inc sahf addr16 jo push inc ret pop inc mov push adc cmpsl dec std ds sahf mov mull inc inc inc cmc lahf sub addr16 rdtsc jg dec lret xchg mov push xchg sahf xchg loopne jne push clc pop cs jae in stc adc loop ret pop inc adc sbb xor inc dec xchg pop andl fs in inc lds adc addb sbb push test and jecxz inc pop and xchg daa adcb xchg cmpsl pop ret add dec clc pop push out orb lods les popf es loopne popa and mov out jns inc popa shll pop les popa daa mov out add in push andl enter pushf cmp inc xchg or aaa mov es fs jnp pop mov jp imul cld cltd (bad) xor pop sub and stos mov fcoml cli je sub loope mov movsl pop outsl shll jge (bad) push mov xor leave dec mov pop mov mov pop mov xchg call (bad) shll or movsl lcall mov je movsb fsubrs mov std popf jne cmc mov xchg (bad) insb or jecxz cmp jmp push jnp dec sub and inc out sahf sbb loop mov push cltd cld loope push mov pop int3 in mov cmpsb cmpl leave cmp sbbl mov jns loope (bad) xchg stos das cmp (bad) stc mov fcoms sbb mov fildll imul repz cltd inc sub mov or jp add out mov sbb inc dec lds lcall jb mov mov cmp rcl sub mov roll iret sbb shrl jae ret and sbb (bad) mov pextrw adc lds cmp enter and fbstp sub fs movsl mov mov mov int inc mov in lea mov mov (bad) sbb sbb xchg outsl in jecxz mov gs enter jne je mov imul lret or rol mov (bad) fbstp mov out sarb xchg sti mov sbb mov inc js (bad) mov sysenter xor sub mov mov push (bad) out mov lea jle mov add mov xor jns cmpl jg mov dec and clc movsl jo pop cld mov cmpsb and adc mov out dec sub mov and in test clc daa push inc (bad) pop mov movsl mov pop sbb mov mov out aas xchg push sbb fiadd pusha test scas push mov or arpl add mov push arpl xchg daa add push adc sbb jo lahf push loopne es and fsubrl daa lahf push shlb and punpcklwd push mov out loopne and iret arpl (bad) out and pushw pusha fbld and fsubl shlb out and arpl fdivr sbb outsl push mov sbb xchg sbb mov ja sbb rclb in pop addr16 loop movsb mov sbb jecxz and popa inc rolb out loope mov fbld outsl push mov sbb xchg push nop fild mov sbb add rcl outsl add push (bad) add push fist push xor sbb mov lahf or xchg mov mov inc arpl jne ja inc mov mov outsl les mov ret fbstp (bad) xor sbb (bad) mulb pop xor lea sbb cwtl rclb lahf arpl xor (bad) fist adc sbb pop arpl adc (bad) xor xchg cltd sub (bad) push lds outsl js push sbb jg push mov mov adc sub (bad) rcll cmp cmp rcrl pop or mov push (bad) or jae outsl mov cmpsb lea adc into arpl (bad) hlt (bad) outsl iret mov (bad) dec push dec fcomip rorb dec mov icebp adc fucomip sub (bad) out push xor sbb insl push outsl fbstp test scas sbb lods shrb (bad) sub mov sub sub mov imul mov lcall sbb (bad) sbb pop adc sbb (bad) fldt jnp jl sbb (bad) cli lods mov fyl2xp1 test cmp sub mov mov mov or or outsl or dec sub dec fxch test lret lret adc scas (bad) imul arpl mov ljmp mov fldcw arpl mov lods adc test movsb add popa outsb or dec sbb into xchg and sbbl mov pop mov xchg pop pop cwtl adc sbb addr16 inc fdecstp sbb popa pusha mov dec xchg movsl sbb loopne imul fsubs mov sbb inc and loopne es cltd jmp call shrl (bad) fs mov (bad) sahf ret cmpsl pop mov sbb dec (bad) in xchg and les adc push cltd sahf xchg pop mov xchg mov xor xchg xchg mov and pop in test frstor cwtl push pop frstor xor inc jmp add lcall pop xchg cmpsb add sub fwait pop std ss mov ss loop and fistpll cwtl sbb sub xchg mov loop inc xchg push jge xchg ss loope mov cs js cltd add dec (bad) std in loope pop in out subb xor mov xor xchg jmp add inc (bad) (bad) cmpsl xor pop loop xchg andl test mov pop (bad) popf inc das nop ficoml lea push add ror and shrl insl cmp daa cld (bad) jg andl addr16 inc jb vmovd dec jns pop lahf pop xchg (bad) mov mov lock jge add jle data16 or pop xchg imul mov push add lds sub fsubrp jecxz adc sbb push sub std and imul std in push outsb pop in insl cld pop mov mulb push popa add sbb dec dec rcr adc xlat inc pop mov jne xchg cmp xor mov fs adc js,pt pop inc addb sahf jp lret and pop xchg xorb jle xor or pop pop loopne repnz pop jle adc cld mov adc lahf jbe in add push sahf rolb mov testb jle sti jge pusha inc adcb pop jg xchg pop mov roll sti xchg push addr16 (bad) and cmp mov js test test push popa inc cmpb jle or cmpsl es inc insb sbbb sub nop andb subb movsb test push add (bad) cld mov dec push mov push loopne adc pop add pusha testl gs mov es xchg inc lock sub xchg std (bad) and inc add dec push pusha and sub adc mov pop ret ret inc (bad) and jge push out jge add or inc jg inc addr16 add add movl adcb (bad) js cld lods push push xchg dec out stos jg push jecxz push addr16 out std mov inc fnsave fimull cwtl daa sub cs mov adcl fisub and (bad) ss mov adc or jecxz mov scas into xchg fisttp movsb sbb push add sarl add jle xchg inc in je adc cwtl addr16 fbld bound gs mov stos mov and push js jmp push and push test rcrb sbb push cmp dec xchg xchg into stos push cwtl addr16 pop pop mov xchg or xchg push mov lock aaa inc add jle aam lahf icebp dec std test push jmp push (bad) dec js clc sbb mov cwtl jae pushf out pop xchg xchg add pop into xchg xchg lock add insl mov pop fcoml jmp cmp mov mov loopne pop (bad) push clc cs push js (bad) hlt inc je add dec xchg inc inc orb push inc push inc cs inc push pop push sarb inc xchg int nop mov xchg dec mov adc hlt ret mov mov pop xchg into pop pop and aam cmp jae pop outsb pop mov add dec inc nop pop incb dec push shrb fiaddl mov jl push std add xchg xacquire adc push cs nop jo dec cmc out rclb pop std xor ja adc aad and negb aaa push lock dec lock cmp sbbl mov push dec sahf xor out and cli into pusha mov adc repnz loop mov sub jne jp mov hlt (bad) mov jl test mov inc scas xor fstl ret cwtl (bad) lds jmp mov lea xchg imul in stc mov mov mov jmp jmp aam adc in scas mov dec add add pusha mov mov ds insl mov mov divl insb sub xchg lahf or loopne stos inc int mov mov sub inc fnstenv std jne or push leave insl dec arpl fsubrs mov ljmp sub or xchg sub movsl movb ffreep fisubl (bad) mov mov insl sahf add mov int3 pop push xchg bound (bad) or pop cwtl test outsl mov adc push xchg xlat mov mov repnz cmp lods and or push push jmp mov mov rclb inc outsl shlb push mov arpl stos and mov adc dec sbbb adc insb rolb dec sub cmpsb adc or test movsb xor jae enter mov in cltd inc adcl mov cltd push mov adcb xor cld xchg test cltd mov in push or gs dec xchg xor outsl (bad) mov mov push mov out push mov sbb hlt out sahf fwait dec cmpsl mov ljmp mov mov pop or insb cltd inc std gs push xor mov xor jg mov inc pop cmp lret jnp push mov out test push imul mov push icebp xchg sti fldenv or jno inc stc mov jl fwait mov sbb mov xor test arpl or jb mov mov adc pop aam mov and cltd cmp fisubl and dec sub push or (bad) in in or add inc mov mov and imul cmp call push mov xlat das (bad) and fild loopne sub adc dec sbb stos add sbb sbb aam into inc mov lsl icebp cmp (bad) xor mov add in mov notl mov imul sub and sub test fnop inc inc outsl pop mov jl aas adc mov in inc add mov ss mov dec mov jmp in adc xor mov mov int xchg scas cbtw cmp cld xchg lcall mov mov adc mov dec mov sub cmp cmpsb gs push pop lods imul mov sbb fsubl int xor add repnz and mov in inc sub stc insl stos push mov inc mov push add xchg cltd test jp (bad) data16 inc sahf push jle jge jns mov dec mov fsubr mov dec mov je bound sub mov dec adc jl sub push aam jecxz (bad) sti cmp mov cmp mov in mov and and mov jmp jne mov jl mov pop mov idivb dec out fsubrl lret hlt inc lcall insl or mov mov pop mov and mov pop into push mov in sub std or lahf stos xor cmp inc mov je dec xchg dec inc dec mov jle repnz xchg and insb (bad) out mov pop (bad) aad xor cmp cli sbb hlt aam rol cmp out cmp inc rcll mov cltd shlb mov rcl or das jmp shll in repz adc stos and dec imul loope rcll inc sti and pop pop shrl roll cmp subl and fnstenv shll and xlat pop mov leave adc add cmpsb movsl jne popa lahf fdivs push add xor cmpsl js data16 jle ss mov jnp repnz xchg cmp aaa sub (bad) mov ljmp jp adc loop (bad) aaa iret inc mov leave aas or jns inc popf (bad) mov mov fwait iret xchg sbb lds ret (bad) xor mov mov pop xor sub or mov mov add mov scas enter scas movsb jecxz pop adc push lret xchg jb mov call mov pop lods inc mov repz xchg mov lcall xlat and cltd push mov stos cmpsl xor jg mov das push mov mov xchg mov call ds mov jno fidiv sbb and dec ror lea js mov pop ss sub (bad) or and bound (bad) jbe mov jne outsb fbld imul pop lcall mov mov movsl or xchg aaa mov mov sti and iret pop pop jmp ljmp jmp fstps push or mov cs mov pop push insb mov pop push std fdiv js mov xor clc push mov jmp fdivrl rolb cmp or loope test inc lods movsl jno jb int or stos and push ljmp and sub fcomps dec iret pop and lock in mov je cmp sbb mov inc shrb popf mov mov jge mov inc je pop mov repnz aad test or lea lcall (bad) aas mov cmp xor pop pop pop mov cwtl jmp inc mov out cmp jg mov loopne ffreep in mov pop xor loope jp xchg mov xlat in stos mov mov xchg xor int3 mov add inc push mov lods ss mov out lret xor push pop mov xchg mov mov or inc sub fldcw xchg ljmp std mov mov inc cld pop push xor stos cltd jge or mov orl clc mov mov das in addr16 mov shrb sti mov repnz imul add mov sub gs test mov insb call xor cmc fcoms xchg mov (bad) shlb mov inc outsb cld or es jle test stos sub or fsts sbb ss pushl xchg in insb add stos inc xchg pop mov pop jg add xchg inc loope stos mov dec insb jp aad push scas or cmpsb nop jecxz mov push dec (bad) hlt mov xchg xchg stos cwtl mov inc add sbb mov cmp popf push adc adc mov cmp mov repnz andl cmp pop push mov or aad cltd repz fwait sub (bad) aam or mov ja sbb imul adc adc test mov sub inc pop cwtl loop dec aas call mov lret jnp fisubr pop xor mov mov in dec sahf mov js and mov jnp frstor je stc daa imul adc or dec in (bad) shlb mov in sbb mov xchg cmp movsl inc scas push int push aaa sub jns aas mov divl fndisi(8087 xor test mov mov dec arpl into and daa pop xchg mov imul sub outsl mov pop xchg inc inc lods lea mov or enter or addr16 jae rcr lahf aam add lea es (bad) and (bad) flds dec addb adc aad pop push add mov push mov jl arpl subl jne push sbb xor xchg jmp mov outsl mov repnz icebp xor in adc mov test movsl ret push push rcrb add xchg fistpl mov rorl fdivrs xor adc mov cmp mov fmul and mov sub je mov push lcall movsl lods cmpsl mov jo mov xchg int3 jnp mov test out cltd mov mov and dec push dec sbb pop push dec pop cmp inc jl (bad) mov mov mov and bound add (bad) xor imul inc stos lahf mov outsb movsl xchg jne adc mov sbb cmc inc mov dec xor lcall cmp fadds inc scas mov pop and shl in mov or xchg mov xor pusha push (bad) mov sub cmpsb add iret or inc or jmp rcrl mov push pop aas out mov sbb pop add movsl stos ret lcall aas mov or das mov mov pop repz cld mov xchg loop mov pop mov je push movsl ret shlb cmp lahf scas lock icebp iret mov test push cltd or rorb mov mov mov push inc and mov mov mov outsb mov dec clc add sbb pop jl fiadd mov nop xor mull cld and dec mov or push fisub roll movsl pop mov xchg xchg sbb (bad) push test pop rcrl fild pop xor fimul mov rcll push mov inc test mov aam xchg dec sbb inc add jbe mov and aam fimul lret repz add sarl je out ficoml jecxz aaa (bad) and aad loope mov cltd mov arpl hlt es push mov inc orb cmc sub stos fildl mov jb bound xchg pop mov popf (bad) hlt daa xchg int inc (bad) inc (bad) jno xchg into outsl aad or mov out sub cmp adc pop jle (bad) xor popf loope mov gs sbb inc or mov idivl push loopne inc sub xchg (bad) sub cltd scas cwtl sbb sbb and mov add sti ret arpl gs lock mov (bad) aad push mov push (bad) pop jns int jae dec imul cmp mov push adc les or jae xchg fiaddl push hlt movsl loop and mov mov faddl adc stos dec mov aad addr16 mov push imul in scas (bad) sub sub push shrb mov push imull xchg aas icebp in mov jecxz add mov inc mov pop out int iret jl popf lcall mov pop or in mov notb scas mov fs loop mov out ds push je cli out jns movsl add fidiv add inc jns clc xor ficoml jg mov or test aaa ds lret push add and (bad) xor add mov mov push pop adcl and and sub in movlps sbb and mov xor adc mov andb sahf jp test and xorl insl (bad) mov xchg sub sbb adc xorb adc jnp hlt push cltd and out fwait aas sahf ret shlb roll mov jae shrl xor loop xchg popf adc movl jne xor and xor mov mov cmpsb lret dec add jecxz push imul addr16 cltd mov icebp aam imulb or stos and cmp cltd pop mov out rcrb dec lcall arpl inc imul jp movsl or daa fldt sbb cmc pop andl mov (bad) lret loop xor mov bound jmp xor sub aaa mov or jge xor mov push or in mov mov into (bad) pop xchg imul hlt push fld or js ret arpl mov and dec mov test stos mov popf and push mov push pop je sub mov lods pop push xorl mov mov imul movsl push or jle in cmp shlb lods inc or mov insb cmc out xor push mov ret mov push inc sbb xor mov dec mov imul movsb mov int3 je ljmp cmp mov int mov add mov push mov mov xor stc or sbb xchg sub out sahf and mov pop push jg jno dec sub cltd hlt test data16 dec imul push jo mov dec test jge mov shl xor pop cli add jnp outsl cltd stos lods jmp out imul iret (bad) mov insl (bad) lret rorb sub jp xchg clc mov sub lods add inc push mov mov movsb mov es jp or insl fistpl inc dec imul mov addr16 adc (bad) xchg and jns lahf push loop or mov and xor xlat push mov adc lcall js aas fcmovu sbb lock test sbb fcmovnu scas mov es dec into mov lds ss imul scas out insb mov test enter xchg std jbe sbb sub push rorl movsl mov leave xor dec cld inc push pop and pushf cmp jne dec jge jp push mov sarl jbe call xor and jmp arpl sahf nop sbb ret jmp sub xchg out (bad) popa rolb add fs push aas test testb push and in scas add xchg pop cmpsl addr16 fdiv and lcall jle pop cmp inc std dec clc cmpsl xchg push stos push cwtl mov mov push pop lods push popa popf push xchg xchg cwtl push imul jecxz inc outsl bswap das es ja cltd test or sbb pusha cli movsl xchg pusha addr16 pop mov fisubrl clc addr16 arpl das adc add lds and or test ret mov in cmp test lcall dec xchg jne dec jae das mov sub bound (bad) int3 adc jl mov mov rcr icebp rorb mov ss add fcompl and jnp push test fs test push sarb jnp mov push push inc (bad) push mov pop cmp jmp std ret test mov (bad) rcrb or push xchg sub push sub je jno inc popl pop rorl mov add xor mov jmp xchg fsubr mov sbb sub (bad) sub sbb mov xchg js icebp outsb xor jle mov jge aam or sub (bad) sbb mov cli dec cmc mov and out pop clc inc lea outsl test lods jno dec pop fadd shl dec aam outsl jp cs sub in cli dec out scas loope sahf rolb xabort adc jmp jl pop rorb rep mov cmp adc les or mov addr16 jae jae push mov cwtl daa out (bad) jg sub aad adc jg aad stos xchg mov push inc push push imul jbe dec push imul and cmpsb dec divb mov jge ljmp mov lret imul or and loopne pop (bad) aad test (bad) or cs (bad) xchg cmc push inc push mov pop inc pop fisub jns aad scas xor bound jnp mov pop std aad call mov and or notb jl popa pop fstl es and es jb xchg enter mov mov mov in flds push sub pop inc xchg stc jmp inc push (bad) jbe mov xor xchg cmpb int and ss insb cltd in dec xchg mov cltd in clc js fidiv push (bad) jne scas sbb push xor call daa mov inc jl out jp jmp cmp cmp xchg inc jge stos inc (bad) mov and fstpl aam jp jae dec xchg test call out mov push data16 fs push sub sahf aaa xchg dec xor fcmovbe sbb nop cmp movups fldl das jo loope ss jl outsl push dec push dec xchg push aas jp push insl inc ret ss inc in dec xchg movsb jno inc pop xor je imul outsl outsb dec outsb outsw push imul pop mov mov faddl mov in push inc int3 (bad) jbe adc outsb mov add dec jbe xor cbtw mov (bad) loopne imul or mov lcall in icebp inc or jl xor pop add dec fs clc into add xor mov dec cwtl jb sarl or dec push (bad) jno outsl jle mov xchg xchg mov and insl push fldl jbe arpl movsl mov or xchg lods and pop add repz cmp movsl cmp jae pop inc mov fisub mov fnstenv adc jns popf and mov and push xchg cs mov push sti in das aaa or xchg xchg imul pop out jmp call mov rcrl cmp mov mov jnp (bad) out pop push and inc jg xchg test cltd (bad) (bad) jns in add andl jge lret call mul jle lods adc lock sub and jo (bad) cld scas mov mov add sub rcrb push mov scas xor ja pop inc cmp mov xor sub cmp xor xchg xor jle inc dec (bad) adc xor lods mov sbb xchg lods lahf xor mov out ret mov add loopne (bad) xor lret hlt (bad) jp jnp xor faddl je inc fsubr mov test xlat test xchg icebp cltd movups dec push ja fbstp sub sbb sarb mov push pop jmp push leave fidivrl aad mov daa addr16 popf add aas in dec jno jb es mov adc iret nop mov insb xor (bad) mov mov stos mov fimul out ljmp pop xchg cmpsl call jp mov pop mov mov jns movsb sti cld push rcl or ffreep or xchg adc popa insb ror enter inc pop out das dec xor call fldl push in mov fldl xchg push insl (bad) popf repnz xchg int3 js ja pop lods test popf ret and adc pop and and loop lock aam test iret (bad) cmc gs dec (bad) loopne dec push xchg pop in fadd inc xchg dec sub dec ret pushf ffreep (bad) leave fidivrl lahf push mov mov push insb popf sub cmpl jmp gs test sbb out push in inc push cwtl jno aas jl push or mov add push ljmp inc int mov dec aam aam mov mov outsb adc dec or push add xchg fs call pop stc adc mov test lret or sbb decb cs daa cmp jb cld fildll loopnew push mov movsb push sbbl cmc shr sbbl push sub pop lahf jno aas pop xor add dec outsl arpl inc jb add add inc imul je outsl outsb inc add cltd gs xlat call mov xorb pusha mov jnp mov rorb movsl std loope mov jae jge aad mov shr push enter mov and out lcall pusha mov lods mov in (bad) xchg lods outsb pop popa test in mov repnz pop (bad) xchg mov push lahf test mov jecxz mov mov pushf outsl ja fsubp mov cmp loop icebp into test dec loope aad inc fnop pop pop inc jb outsb adc push aas orb or loopne leave movsl ficoml sub imull cs aas push jno ds lret in stos (bad) mov (bad) or adc lods pop mov sub insl ret nop scas mov pop jge repz aas sbbb call cmpsb mov cmp cli sbb cltd movb add loopne cld push scas fdivrp (bad) int3 adc ret add jp lret sub pop mov jge inc cmp add pop mov lods sub xchg (bad) (bad) insb push jo mov movsl loope les test jne scas scas inc sti out lock (bad) hlt lret jnp add xchg add fldenv sbb mov mov mov xor pusha mov jg (bad) cmp and adc (bad) adc bnd and fwait and insb push pusha (bad) in rcl cmpsb mov push xchg dec push xchg mov (bad) fidivl and (bad) jg loop jge cmpsl lock jecxz icebp cmpsl aaa sbb dec imulb push in (bad) shrb ret dec mov and jmp sarb fwait push mov (bad) jl cmp jge jl mov adc int3 xchg lret and pop jae mov xor les lret cmp aaa inc sbb or ds jp pop and aam out mov inc jno cmp mov popl mov pushl ret inc dec push jecxz jne mov add movups out push rorb and adc cmp pusha or hlt sub cwtl test (bad) fdivrs lret or push push jp sub aas lret fidiv mov lahf and mov add stc mov mov cmpsl test sub xor sti xchg jae dec cmc mov pop enter lret and xchg inc jg lahf es fnstenv mov insb repnz fcoms or enter inc cmp orb jno cmp jo or test jl add mov add imul jb imul dec popa outsb fs gs add rolb cld push shr adc add test add push push dec dec dec cs insb add xchg or sbb push cmp dec adc mov ds adc flds xchg cmpsb dec adc mov ret inc add cmc push inc inc mov push dec lret out mov ret out pop lock jl daa sbb xor imul (bad) or or add cltd sub pop mov sub sub pop dec sub pop push pusha inc pop int3 aaa dec sub inc pop sbb push or inc mov movsb data16 lcall add pop cmp jecxz movl push movl pusha push movw lea jmp dec outsb push jne test adc cmc dec cmpsl pop sbb jnp in cmpsl aaa pop add movsl xchg in ror inc fucom (bad) jns mov lea jb in aaa mov mov pop scas sub repz cwtd mov push pushf xor imul (bad) dec adc mov data16 inc push lcall cmpsl popa xor je add adc std adc jge lds in xor in mov cmp aas mov add ret or and scas lock stc in sarb cmpsl push jb gs push mov cmp pop (bad) adc aaa js mov jo push adc cmp inc jle or test movsl stc jne lods rclb add (bad) or es das (bad) jno ror hlt pop loopne int3 push out test outsb pop es sub mov jno cmpl and pusha cmpsb or leave jp mov cmpsl (bad) dec mov push and push mov leave mov mov pop add push cmp gs aaa je movsb jge cmp and or pop add mov lods rcll cmp dec rolb mov cwtl jns mov and aad cmpsb inc les adc add push jecxz insb jno cmp not pushf mov pushf lea jmp pusha movl pusha movb pushl popl mov mov pushf pushl pushl ret mov fstl xor jmp dec inc std dec dec outsl or mov shrl add sub sbb js mov lcall xchg aad add push cwtl out jg xor lods std and jle push outsl jne fisttpl ror lods fwait adc dec push xchg aas mov mov popf inc (bad) pushf inc testb pop pusha cmpsb int3 mov pop rorb mov outsb stos sub je pop push sbb inc push iret lock and leave mov loop jo jns nop push sub imul jle jae dec push xor pop cmp xorb clc cmp outsl jecxz inc fisubr sbb adc call fcmovb (bad) test shrb push stos mov mov and fwait mov inc add je inc fcompl sub in sub jns div mov or cmp movsl scas faddl pop out popf and add xchg je mov jp int scas xchg xchg mov outsl imul aaa pop xor cld (bad) fmull push mov pop outsl add nop mov jne jle push fs sbbb sbb add adc push inc shll mov sbb int3 inc cld push lock cmp xchg sbb sbb dec aam shl pop add dec out js push es and jmp cmpsl mov ret aam pushf jge addl sbb xor jg push test and mov movsl jmp sub cmp jl jns negl imul dec and into sti add xchg and ds mov scas jno aaa sub in repz sbb nop je mov test cmpsb insl repnz push inc cmp sbb ljmp jmp (bad) (bad) fidivr pop idivl test aas popf loop lahf outsl scas addl and pushf sbb push sbb loope int3 ffree cmpsl pop jp xor fstpl ret (bad) inc movsb add das xchg mov cmpl stc add jecxz imul pop std mov and lret push pop sbb in push fs sbb sbb mov es cmp stos or shrl cmp (bad) movzbl in sbb and cmp (bad) sti adcl or xor fs insb add mov sbb mov lea xor sar and into adc int3 (bad) rclb push push cld dec (bad) dec ficom ret fild jg in arpl sub mov (bad) mov jle cld mov or xchg mov int inc dec mov fbstp inc pop insl (bad) mov sub inc inc mov inc jg ret push mov nop mov or push push call inc enter mov push ja or sti (bad) cld clc or lock out sub bound stos je dec or ja pop xor mull gs push movsl std dec sub xor sarb mov in roll js jno adc fild xchg popa jb mov xor push push cmpsb cmpb shrl push cltd popa adc pop xor xchg (bad) mov cmp add mov sub xor inc movsb mov sbb imul shl cld inc cwtl js pop mov add es enter shrl ret aad ret pop inc aas cmpsl add gs loope ds or add fwait adc repnz mov inc outsl jne lcall push mov test inc ds mov pop gs jb sbb fild sbb je sbb xchg pusha push daa and jmp add cld or inc int cwtl inc pop bound (bad) mov pop xor and cmp jge gs cld mov jbe xchg lea scas push add and cmp notl iret scas movzbl sbb sbb cmc (bad) pop in stc push lret test jo xor pop (bad) dec dec cmc xor out mov in dec sbb cmp adc cwtl mov inc (bad) loopne rcrl int3 inc mov jnp movsl adc mov and adc test push lods loope (bad) mov imul int jb jns xchg pop stos pop (bad) pusha add dec nop dec xchg or cmp insl rcll jno xor push dec sarb ss nop (bad) fbld mov pushf aam jl pop insb push lret adc push hlt push adc cmpl scas outsl out add cmpsl mov push insb (bad) js dec insb adc sbb mov inc test xchg jmp mov mov jmp xchg or call pushf outsl mov loope lods je dec xchg dec sarb fbstp or pop dec clc out lcall mov push mov fwait add add dec adc in pop incb cmpb jno xor lods dec mov or pop clc cmpsb pop mul cmpsl mov shrb mov inc stc pop add push and jl hlt loopne pop add pop call inc jno adc mov lahf je cmp mov out mov mov test int cs mov rcrb iret sub popa loop or jecxz js mov fisub jecxz sbb test leave mov pop sbb in imull cmp xchg dec mov xchg push imul jle sub and data16 pop mov pop xor mov aaa inc in jae in add int in sub pop ss xlat mov mov mov dec lds inc cmp jge sbbl mov mov and jno lock pop push fs inc pop sub dec push movsl xor mov pop and lods cltd xchg sbb fldenv pop add add (bad) lret cmp push iret je dec and cmc lds push add pop inc ljmp out mov sub (bad) jno popf aaa mov test gs pop fbld cld mov (bad) inc mov cmp xor pop pusha lea call call popa data16 lcall insl cmp mov outsb push mov and stc adc inc stc sarb xchg movsb in mov sbbl inc ret add mov push inc repnz sbb data16 int3 es jb addr16 (bad) fs data16 cmp insb push cmp add or sahf sbb mov ffree shll mov icebp lods mov fist dec or sub add test pop push xor pushf and sbb inc mov or cmp js mov sub jmp bt movzwl add sbb clc rol mov stc pushf jmp mov mov ja shll (bad) jl jnp scas das xchg (bad) fdivrs push pop rolb out xor dec jg cmc mov add test call push repnz out dec pop lahf inc jae ret movsb cmc xchg std and fsubrs cltd test test or lock rcr xchg outsl pushf cmpsl outsb shrl sub add jnp push adc movsb call (bad) fistpl les xor and add dec (bad) mov sbb jbe ja loop push daa pop rorb scas rcrl inc js je jb arpl jae jmp popa aaa xchg inc (bad) ret sub stos repz jecxz xor enter mov jg scas push insb add push test xor mov lcall jne sbb pop aas pop aas fimul faddl inc jge or call mov mov cmc mov jb sub jg mov or test lds fdivl hlt nop mov or adc jge mov loop cld jp insl push cmp inc jne mov jg push mov and inc xchg dec stos pop adc push dec out jo pop test add add dec sub add fwait in movsl imul and inc pop add xlat outsl mov cmc leave mov adc imul lods sbb lcall lea mov in mov test inc or cmp adc mov rcll cmpsb into lock mov idivl repnz (bad) adc xchg xor dec or test dec popa sbb sbb mov lock xorb jle fistpll pusha test andl lahf insl pop jmp push and jle mov mov enter int mov into rcll rorb dec xor cmpsb jno sub jmp lea je mov rol aaa xor push bswap shld mov xor data16 lock mov inc shr add pushf mov jmp icebp cmp shrl subl xor pop jl call xlat mov scas mov add mov push cwtl std ret push cmpsl data16 fildl dec data16 or push jmp aad notb ret pop pop mov jbe or cmpsl and outsb scas dec mov test cmp test inc mov or push inc ficoml ljmp mov dec xor in and shr push xor jl test orl stc inc in xor adc xchg jae je mov std or jno sub jnp outsb mov sbbl push mov dec imul into xor and insb or inc mov and fs hlt mov or or push jae mov xor push mov push addr16 jb cmp jle jns neg imul in shl and fnstcw fbld out add push jle inc call dec pop inc or jae in mov and loope mov xchg movl mov mov inc (bad) aaa mov mov popf cwtl cmpsb in mov call add cltd es push pushf sub bt pusha add bsr add add xor stc push adc mov inc sbb cmc sar mov bt repnz call stos pop (bad) gs fidivrl push sub or inc sbb xchg test ret in jo (bad) lret dec rcrb mov lret sbb push int mov push xor jecxz (bad) mov mov fcomip mov shll and je push rclb sarb cmp xchg xchg mov mov sarl clc aaa jmp adc arpl mov mov xchg push movsl outsl xchg es mov in xchg popa jnp xor lds int add fnstcw loopne fiaddl std pop add repz lock or pop imul xchg std mov jmp lret int add or enter xor sub push loopne xchg mov arpl rorl push and js sbb je fidiv add movups je pushf add bswap cmc out (bad) mov sbb mov xchg and inc mov inc frstor jne push cmpsb or xchg cmp dec mov and inc in xchg gs xchg std sti push push fisubl enter or bound inc jle mov push xchg andl or inc nop lcall or mov jo (bad) mov mov adc xor stos xor and xor sbbb jno sub rorl inc cltd inc xor mov fmul push clc ljmp push push push sbb xor loope mov lret int3 in xchg push dec adc sub scas sbb xchg in test mov inc sahf lods push lods repnz sbb and rorb push mov call fcmovnb mov inc clc adc sbb inc cltd stos mov out enter ljmp push es jmp std roll sub lahf push jno out lcall sub jae pop adc sbb loop aad pop and pop addl js popa dec mov out clc data16 push daa push scas nop xor jno sub xchg pop sbb cli pop mov or cmp cltd movsl mov (bad) mov lds fcomp pusha ds imul outsb inc cmc mov or cmp test cltd inc cltd mov lret pop sub addb jb sub je jne mov shl mov dec xchg pop sbb hlt jmp ret dec mov sub cmp jo ja ja pop insb cltd pushf mov xchg enter push mov sub xor push pop jno sub xchg push andl mov and ja mov xchg mov cmp push rolb cmp xor jnp bound mov jbe dec pop xchg mov stos and sub dec inc pop ficom scas enter fldenv mov ljmp loop or or push or push ret xor (bad) xlat bound sbb pop inc xor leave out mov mov stos mov mov pop test stos sbb cli add clc sti push lret out xor insb xor inc push insb push dec jg push jmp mov daa clc scas xor jno sub add push jne jb pop inc add imul dec mov (bad) js out outsl ret jnp pop imul das arpl jnp dec lock sbb (bad) fiadd push push pop sarl xor adc mov out push div add adc dec adc xchg xchg xor pop (bad) xchg pushf mov or sub sbb adc leave stc in fnsave mov ret imul out adc cld cmpsb cmp sbb mov cli in js stc test (bad) repz les in dec cltd insb cmp push mov imul mov ret cli mov adc adc call data16 addr16 cmpsb mov fisub fwait add cmp lahf jg jno daa test test ficom mov dec cli mov pop clc data16 push into inc (bad) jns test lock dec push movsb jp pop jg adc or push xor outsl jo loopne sbb or jecxz int3 loope sbb add xlat sbb outsb pop jecxz jae sbb push popa insl (bad) push out das sbb xchg adc cli cwtl ss inc dec aad out divl in lock or mov out mov jo shrb idiv in loopne push leave mov mov xor jecxz imull or xchg jp (bad) mov (bad) nop add data16 es clc fsub subl xchg sbb inc xor iret mov sbb cwtl mov call hlt sub jbe call mov (bad) mov and pusha cmpsl clc lods (bad) adc (bad) divl cli lcall and (bad) lds fwait push adc xor (bad) and sub (bad) lcall dec fidiv clc sub and ljmp mov mov jge sub loope pop shl in (bad) pop loope push sbb imul sbb in cmp jne sbb call and in (bad) jb repz insb andl mov imul je les add push add icebp in mov into pop xor clc xor xchg iret (bad) aas xchg pop in in (bad) mov or xchg dec inc (bad) js mov dec adc mov (bad) mov insl mov mov outsb jg test jp jne (bad) mov pusha enter pop sub stos xchg lock imulb push in leave xchg roll lds pop mov dec dec push test jg insb sub ror jg adc pop mov jbe leave xor shll in data16 lahf ret stos clc out ljmp out mov xchg dec pop cmpsb cmp andl or in pop xchg dec std mov (bad) cwtl in (bad) jb addl jne mov add incb cmp mov pop stos pop pushf dec sbb push push jns xchg mov bound iret shl fistpll push mov rorl clc xchg pop inc pop mov push hlt fwait add adc lcall cwtl sub mov rol cld push and repz xor pop inc in xor push xchg mov movsb stc or test sub mov addr16 sbb and or std ds or pop pusha ret stos jae pushf mov add addr16 xchg dec dec push ja jne pop repz or clc out popa or dec cli gs fldcw jl push cwtl push data16 pop mov mov ficomp aad cli fs or add inc iret or out fist or pop sbb loop ljmp fadds mov xor fsubrs add push sbb and xchg sti mov inc hlt lret fs cmp jle or and hlt sub sbb imul cmp adc popa (bad) iret ljmp adc mov fisttpl xchg push sub dec jae outsl je mov aam pusha jb popf out nop push nop mov adc aaa dec push sub adc fnop imulb repnz pop bound adc mov mov into adc pop xor mov test jg mov (bad) cmc leave dec (bad) push out fdivs xchg ljmp int xor and scas jb xchg not data16 (bad) or push push rol btc test shld push bswap bsf mov sar mov or rcr jmp pushl push mov lea lea mov pusha mov pushf movb movb movb pushl ret add add data16 jp (bad) in rcrl add cld add or mov sub lcall mulps add out arpl scas push je mov sub (bad) into das and enter call scas imul roll or inc fwait cmpsl js push inc (bad) std or dec jle ret pop lcall sub or cmp adc inc pop inc xchg sub nop sbb sbb paddd push test in jno mov sbb lods mov out xbegin sbb sub jne cmp and mov ljmp lcall bswap pushf call jmp push pusha mov lea je pusha pusha lea jmp inc dec push inc push dec cs insb add cs test mov cltd pop lods (bad) popf push mov add in mov and mov lret fcoml in xlat addr16 inc sub cli inc stos cwtl int3 cmp jmp nop aas out or sbb push mov mov inc add mov cmp cli xchg in xor fs adc jle and mov ja test int3 popf test jo stc movsl pusha repz pop int3 xchg push unpcklps insl pop and mov lahf bound xchg jg lahf add cmp insl adc fild icebp in sbb jno and ljmp push outsl fnstcw mov les mov adc mov mov add adc mov cmp adc arpl xor outsl push xchg dec mov pop lcall push popa movsl cmp lods mov lods arpl lret inc fistl insb inc pop mov out cs and out std (bad) sbb es mov lock pop jmp aaa scas (bad) mov cmp ret add mov fistpll insb xchg call repnz arpl sbb fsubr aad repnz sbb daa fildl arpl inc add addr16 scas cs sbb fcomip popf loop (bad) repz les leave insb rcrb in inc jno pop sarl cmp mov movb cltd jne or das jo mov add add adc aad scas cs notb sbb aaa cmp inc adcl imulb rclb mov pop pop jo xchg out sub pop gs shll mov mov adc fisttpl cmp jae mull xlat jmp repnz (bad) jmp jp inc mov lcall loope int3 or pop lret xor out dec (bad) scas stos mov rcl ror sub sahf shrl pop push in mov add jb (bad) repz lret push mov mov lods out add pop inc add xlat insb or cmp or xchg mov push out lods xor cmp inc pop inc jp into mov test test cmp fs mov lcall jmp imul bound dec outsl cli popa insl jno cmc jns setle pop mov push mov xchg adc sub clc inc mov push push stos test xor pop inc jnp js test xlat (bad) fadd mov mov pop sbb xchg lcall call jecxz dec push jbe pop xorb repnz jbe (bad) test mov iret loopne or icebp dec fcmovnb stos enter mov aaa popf and sub leave aaa mov adc xchg or mov jecxz cmp xchg jb stos int mov xor les adc sbb es xchg aad scas sbb repnz lods jmp add add cli pop xchg sar mov roll push or add fadd mov add xchg sti inc icebp dec sbb jno sbb (bad) mov cltd popf loope and loop xor cmp cmp mov dec adc in sbb icebp add (bad) inc push outsb ffree push jp cmpsb test lds pop jno add fs out shll sub int es imul jg stos outsl out bound dec xchg les rclb xor divb pop dec (bad) sahf cmc lcall (bad) xchg ret push mov rcr pop adc lds add or fs push sbb cld int mov bswap ljmp movswl xor xor fldcw adc loop (bad) mov add fisubl scas push int mov aas pop adc faddl push sub pop jg (bad) xor push popa xchg sub xor and notb pop (bad) outsl lret rcll test and or pusha jecxz shrl xchg mov sbb jbe xchg mov sbbb enter dec inc push out mov jno mov repz outsb gs xchg mov cmpsb mov das mov mov popa inc (bad) lret aam stc or sbb test pushf lea lea push push push movzwl movzbw not pushl pusha lea bswap pushf pushf mov call inc ljmp (bad) loopne push gs or outsb and xchg push inc jbe xchg and ja es pop inc fsubr lods lahf test aam faddl rcrl push scas mov out jl jl mov es and nop cmc icebp adc inc js cmp test pop je movsb mov cmpsl adc ds pop xor xlat cli xchg jmp scas xchg push mov xchg pop mov and jl ret xchg pop and pop jl mov xchg fwait test int3 rcll enter lds (bad) pop sbb call pushl jmp lea je lea mov bswap lea pushf movb pusha jmp mov call dec jge cmpsl js int3 mov add aas mov sti std loop ljmp outsl push scas nop das jo inc add inc adc inc xor clc xchg mov dec jne ljmp int adc mov data16 lds int3 mov (bad) fsubrs jo addr16 inc sti add pop mov push aaa dec pop jne test sbb mov lods icebp lods out jge shrb shrb pop into addr16 cmpsl mov jp fldl2e pop mov (bad) mov call (bad) call sub stos cmp (bad) mov loop repnz fisubr jecxz mov outsl rolb mov lret je lods popa popf sub jmp outsl iret push call sar xchg mov xor fwait (bad) jecxz decb insb push jo pop test fstpl push dec jge jae pop sbb mov xor dec mov pop shlb push xor insl (bad) xor pushf je mov lods mov mov stos hlt out rorb jne ds aas lcall bound clc or and mov out and pop in sarl push in pop inc push mov je fisub fildl loope ja pop mov sti (bad) fmuls mov mov std jno sbb js js mov mov or cmp scas adc pop test mov stc push sub mov push lret push insl jno mov cmp jne cmp push faddl popa inc and in pop sbb dec cmpsl js jne pop inc cmp mov pusha inc push pop vpshufhw push ss push ljmp nop push int ret pop sbb gs xor decl test jge decl pushf shlb ret or lret lea jmp stos movl lea jmp mov lea ja jmp inc inc dec xor cs insb add and lea je push push lea jmp and add jmp sbb hlt cmpsb sbb add adc cld ret fdivl mov out mov les adc inc movsb ss fisubrl push xchg out fcomps repnz mov into xlat sub cmp in cs mov cld or scas xchg cmp stos lods rolb jg,pt mov mov pop push push in out ret cld fildl adc push xchg pop clc fnstsw hlt insb adc scas xchg (bad) or shrl cs mov out test test lahf fisttp outsl adcb or lds sbb pop adc inc add sbb and sub push xchg es insl cwtl push call arpl (bad) hlt push mov inc jle inc mov xchg lea movsl les inc stos xor mov sbb inc sti ret in inc jb jle out sbb ss loopne inc jecxz inc pop hlt mov jae stos xchg aad hlt cmp jae out lcall mov xchg out add pushf ret jb inc fldl2t mov scas aaa mov push and nop out mov cld cmp xchg int3 jb pop sbb rorl add push lahf and sbbb push jo aam sub xor pop xor ja ja ja push mov fisubr int (bad) movsb popa jb xor out jns jle push dec xor loope lahf cltd pop push sub sub ret cmp mov push push hlt push out inc mov in out cli aad jl bound stc inc lods xchg dec iret iret mov jno adc hlt jge xor flds inc cmpsl cwtl shrb xchg and aam mov inc ret add (bad) fldt dec push add xchg push insb lods xchg mov adc (bad) shlb shlb push lret cwtl cld cli fs xor and mov call cs pop pop inc mov mov fldcw loop add fnstcw sbb std xor lods rcrl ss mov mov (bad) repz add ret sti cmp dec xchg or (bad) aas adc or cld xor inc fsubl xor mov ss push or xor jp adc pop imul cltd movsl lock fbld std push mov cwtl (bad) sbb mov fldt sbb jns outsb jno xchg out out push loopne in test gs jmp push jno adc into ljmp mov dec aaa cmpsl cmp sub lret cmpl mov cmp adc out repz dec push hlt dec mov in in notl fcmovnbe lods mov sbb sti iret sbb and stc mov movsb xchg mov jle add pop push addr16 ds sub xor shrl rclb aaa or add sub jns cmp sub ss test xchg jecxz xchg pop (bad) (bad) popf aaa mov popa pop sahf enter pop ja inc clc adc adc adc aad ds icebp sub mov test adc pushf movl movw pushf lea jmp movsb adc add and add sbb mov pop add sbb or sbb mov add add add add lret adc sbb rclb add rcrb enter add sbb and sbb rclb pop add lods pop add sbb fcoms pop add inc pop add sbb loopne pop add rcrb call add add add add rcrl inc rcrb lock add push pop add add adc add sbb push rcrb add pop add jmp add add adc add into push add add adc add mov add add adc add cmpsl pop add add adc add and jl sbb sub pop add and test sbb add add cwtl dec (bad) decl mov call neg stc clc push clc not pusha ror call dec add adc ret jge mov popf insl xchg mov inc cltd xchg out mov movsb fimull iret loopne ljmp or and dec push jno rcll sbb inc scas nop mov mov aaa inc pop shll cmp sub or lods popa ds dec add (bad) fistpll aaa call jnp daa sub cmp lcall sub sub push pop push dec or ja int3 arpl cmp push and jbe sub sbbb fs pop lds (bad) lock mov fiadd into push sub pop adc mov cmc push les or repnz adc dec inc sti pop inc pop addr16 addl xor stc sub aaa fisub addr16 mov pop adc test push add decb sbb jne call test jle xchg cvtpi2ps in dec mov fsubp icebp repz push popa xchg xchg jge jp scas (bad) sbb jl ja leave sahf mov sahf mov pop inc pusha lret push fs shrl xor jmp sbb outsl and xor lea lds inc pop pushf das pop js jne push mov mov and pop or stos je pop fisttp xchg subl mov or lock into jo movsb dec aad lret pop adc insl pop pusha loopne push pusha pop pop cmpsb sti pop inc mov movsb or adc sbb sub push add test mov into mov mov add pop (bad) jmp pop sbb aam out (bad) pop adc adcl xchg mov adc sahf orb xor loope mov jecxz adc and decl add (bad) adc dec mov in xchg faddp or out call aas repz jno adc iret in inc lahf pop test mov sbb push cwtl mov jne and add jbe scas pusha mov xchg push xchg fcomps xchg pmuludq dec inc (bad) aad test push test bound insb sar loop das inc cmp mov rorb pop addr16 xchg push xchg dec pushf aam pusha fbstp cmp push and je sbb clc sub fsubs repnz mov lcall mov and xchg sbb mov shl sahf inc cmpl pop in push int hlt jno stc adc adc je push enter je and xchg mov cmpb inc sti push je xor sbb xor mov insb lock sub sbb mov loop fwait movsb imul mov or jo and xor mov insb mov xor jo jl mov sub push inc push xchg lods rcrb mov cltd (bad) dec inc mov arpl (bad) aas xchg inc sti inc pop xchg aas xchg jge jp xchg cmp enter sahf mov icebp faddl (bad) cmc ljmp xor icebp mov sarl mov hlt mov jae sub adc xor xchg mov out das jecxz push cmp (bad) and inc and lcall pop mov sub enter push fstps dec js cmp jmp loop add fiaddl xchg iret pusha push mov or xchg jmp sbb pop add add sahf loope push xor mov fwait jecxz adc das or js gs pop fs inc sbb push dec inc nop das sub jno test add xor sub push add inc (bad) sbb or xchg push jns es insb xor inc std inc in and pusha push mov push cmp aaa pop insl cwtl fldcw out stos (bad) cltd in xor xchg or push sub push (bad) cmc in movswl (bad) sarl xor pop lock in mov daa cld mov mov les lret sbb mov lods xor pop jbe cmp in add add mov mov and add cmp mov hlt stos scas mov popf cmp nop push imul dec or jno or pushf movb jmp gs or nop mov (bad) loopne fisub mov mov inc sbb dec ja mov add sub mov cmpsl cmp cltd mov inc sbb sub stos xor test ret push lock cld pop sbb clc dec enter sub adc jb inc or xchg pop stos out add or loopne fisttp out insb pop outsb add adc sbb int lods rcrb pop or mov (bad) inc lcall adc xchg xor pop xchg aad ficomp push jno or sbb pmullw imul push (bad) mov adc xor loop ret jno imul push inc push adc xlat xchg scas sbb jp adc (bad) xor sub in adc and push xchg mov mov push sarb pop mov mov sbb je mov das cltd sbb mov mov cwtl out xchg jecxz pop sub jp inc jno jecxz (bad) out adc and push jbe mov mov or (bad) cmp dec mov xchg insl jmp push sub jb xchg gs pushf and or mov cmpsb fistp adc aam cld jmp fs jns push lea jae cmc test cmp je sub call mov jl lret push (bad) xchg xor lret xor and test mov add sub ret mov mov push faddl fdivl add aaa dec lods sahf (bad) fldl repnz sbb jb arpl add add jl loope and iret or mov dec mov dec fcomps lea out (bad) mov dec rol cld ljmp and sub inc aas pusha sbb push jle insb xchg mov lods mov push aas pop lea jne lea mov push jmp lcall xchg xchg enter test test sbb xor popf inc int3 push scas (bad) dec mov mov dec adc adc sbb sbb mov mov jmp inc jnp pop lahf pop jmp mov test or add sub and push add je mov jg daa xchg ljmp mov stos out dec xor cltd les in xchg faddl jno ret nop ret aad mov loope xchg jl insb pop sbb movsl repz cwtl out sub dec popf nop pop inc cli push jae (bad) mov lret push inc jecxz cltd lock aas je adc pop (bad) flds jno dec mov pop push pushf ret cwtl out jno or int test mov mov cmpsw xchg cld mov jnp or cmp sub int3 cmpl sub cmpsl js dec imul mov mov xor das idivb dec adc and pop adc push jb or stos xor sbb test leave cmp xlat adc xor push dec in jmp hlt xbegin je jne mov xchg test fild or or mov aaa out pop sbb cmc push and adc xchg add or xor adc pop or rorb push stos pusha pushf lea jmp cmp adc (bad) mov sub sbb fistl out sbb scas das loopne pusha aas lods jae ret aas loopne loopne shl adc xor jns movsb fcomp mov push xchg (bad) pop jno ds cmpsb movsl in mov imul sbb jle xor fsubl add jl jmp xchg mov mov pop jns cld mov arpl lods and (bad) (bad) out pop mov add rcrb dec push inc jl pop xchg outsb (bad) ja push cmp pop dec jno jns scas push lods jno or inc cmp call push call pusha call bound out ror mov xchg or dec inc add mov ss lret nop xor test loope xor push push std sub rorl adc nop loop mov xchg push stos jbe pop mov add or jecxz nop and fucomi lret cmp in push cmpsb out rcr dec in out fsubl jne xchg or mov jmp (bad) fwait xor lcall pop mov hlt push leave pusha (bad) sub push and xor and pop hlt fwait and incl push sbb cmp mov popf xchg leave stc lds and fs or aas call pxor enter hlt xchg push push outsb hlt (bad) dec movsl or jmp push mov mov (bad) sbb imul jno jp pop (bad) mov fcomp add pop (bad) fcomps pop mov jmp jb test pop out es inc pop inc mov or fistpll (bad) jne lea (bad) scas out nop sub fildl (bad) add cld and repz inc push out inc in call mov cltd (bad) and ljmp je mov aad subl mov add dec in and adc hlt ljmp dec ss xchg leave pop test lods repz stos hlt add xor call xor mov pushf mov (bad) loopne repz pop push mov push repnz xchg xor jge dec (bad) pop sub mov rolb aam xor out xor jne sub mov subb ss push fldt ss lods scas icebp pop inc xchg xchg adc sbb or test xor ljmp push (bad) cmovp fstps ljmp cmc stos aas lahf add and sbb cwtl lods xchg pop cmp xchg dec mov jmp and push jp push sbb sarb out jo shr cmpsl clc mov fnop jnp push mov cmp mov adc ja lret sub sub icebp adc xor jle or jns (bad) sub lods push jae mov push ds sahf gs pop push mov xor lods es scas gs enter bound sub pop (bad) cli enter xor sub outsb les test in aad imul in icebp (bad) xor pop add call test movw lea jno je push sub jg pusha test sub pushf mov cmp pusha pushl pushf pushf lea ja clc imul cmp jmp lcall lods shr dec rcl sub insb repnz push dec jb sbb dec aam or xor sbb push dec pop xor pop out hlt mov jbe mov cli movsb mov call xlat cmp or sarb xor jb fisubrl (bad) mov movsb cmpsl bound ljmp mov insb lret mov clc fucom repnz mov jg stos enter or rcr or mov inc les and test or cmc or push shll pop add shrb aad icebp call rcrb imull add jmp out stc adc iret xor mov out sbb pop mov or sub mov pop mov mov je sub inc cli fwait and jno mov sub xor popa repnz jle add sbb push sbb jne out inc jge push dec pop jecxz repz jo dec xor push sub cmp inc push jno add int in mov mov call test movl pushf lea je call add add das bt bsr push mov jmp bt pushf cmp mov pushf lea ja shr add adc neg or inc mov jmp sub (bad) imul insl jno lods jns jns ljmp mov xchg sub push sahf and mov push rdpmc jae ja mov pop bound js ret xor or adc inc sub and jg dec add fisttpll loope out add out pop loope lret pop in loope (bad) xor xor sbb sub mov sub rorb add add add pusha mov pushf pushf lea jmp rorl xor mov xchg dec pusha jg xorb in xchg sub xchg mov mov cmp into cld xor cmp inc jp data16 out dec add and mov hlt or cld inc lds mov scas ret fucomi jns sbb shrl lock xor jl movsb mov sub mov aas jns pop jne add pop and jae mov adc mov sbb lds aaa repnz test lret sub fildl ja andb push add imull test mov jno add cwtl dec mov dec les in mov and push dec cmp insl and pop cmpl lret fsub fcomps xor sbb ja imul rol sub sub cmp mov mov (bad) in mov sub and imulb clc cmpsl pushf scas mov imul sbb fcos and mov xchg jmp mov leave (bad) out or sbb inc mov (bad) jmp cmpsl pop and mov imul es jmp push in jns test mov mov sub add xchg popa jle xchg dec (bad) punpckhbw dec rcrl pusha popf stos sbb xlat jmp out dec je mov data16 call mov inc cmp mov mov cmpsl (bad) outsb mov and xchg mov loope dec and in mov jns int gs icebp aad inc imul inc mov push scas fildl xchg dec movsl imul cmp aad notb xchg imul aad (bad) push out push loopne sbb icebp fcomps mov lahf (bad) call mov stos jno add push inc dec push push jns movsl mov pop sub ss sbb sub enter inc sbb lock adc cmpxchg and or aas adc sbb jbe stos je lret dec xchg mov pop lret in mov dec orl jb mov sub inc (bad) shlb cmpsl mov mov xor sbb xchg sarb mov sbb es and or xor fimull lahf fmul fiaddl dec jle and fldenv xor pushf or imul int (bad) repnz add push mov cltd sub jno decl call pushf movl call mov lea je jmp add push popa je inc imul jae add pop inc js pusha mov xchg dec scas push mov mov jno shll imul mov jnp mulb iret mov push fidiv shl add cmp sbb (bad) xchg insl out and mov push popf (bad) lret mov jle es sub (bad) ret mov imul test lods mov mov lea popa jb test cwtl lret pop out stos pop andb or mov ret pop inc cmp add in jno inc iret add add adcl add stc cmc clc xor pusha lea call call fwait insl sarl jo (bad) cmp fisubr jb cmpsb xor and notl jmp inc pop inc pop jg push xchg cmpsl outsb lock sub xchg adc lock in sbb add push rcl mov test mov jecxz adc cmp clc mov dec cmp into mov popf mov test ret jbe shr shr xor cmp cmp jb cmp into in enter shll shrb ss out adc jne adc xor (bad) or divb jno std fnsave mov insb mov add jns inc in push lahf in push loope lret xor inc in xor aam xor outsl adc imul stc dec add push in into (bad) mov and and dec test aaa sub and mov std mov cs sbb test pop or repnz inc lods lcall or mov pop loopne lock jb mov or jl push sub cmp jae jmp ror sbb aam movsb fwait push in inc push lahf cvtpi2ps push in daa sbb sub and ja xchg out sarb cld push cmp movsl pusha mov insb jae mov or jecxz cwtl push jns push in js frstor loope ljmp push jns xor lret sbb insl mov mov pop mov push mov sbb pop xor push or stos and cmp cmp call dec ss ret dec imul add xlat call jl hlt xor popf lods adc push jmp fdivrs lret ljmp in mov lock push pushf and popf icebp xor adc add lcall jo xchg mov idiv daa jp pop jecxz shl jno sti sbb fs lods sub sbb add jg and inc and es and inc and pushf lea jmp jmp movb cmp pushf call or or inc popf and scas jno sub insb fildl imul sub in and and dec mov inc cmp sub adc leave push std inc ljmp jge hlt lret cmp adc or test sbb push pop outsl xor mov mov sti fs push flds mov adcl jl mov test dec andps fldcw mov cltd loope cli mov cli push cld push dec or jg dec pop cmp das cmp xor sub jg ret pop divps int3 adc jge sub add arpl es lret enter jae fistpll jp mov mov inc add add ret mov mov and test leave dec (bad) pop movsl pop ret pop inc adc mov mov inc and pop cmpl sbb jne or aam cld adc jge stos xlat out sub mov add lret hlt dec jno cli mov mov pusha not jmp sub pop push mov repnz cmp jecxz dec jb test clc es and mov ljmp add sub pop pop gs jle into mov xchg dec inc shld xor cli inc push mov sub sub ds adcl sub (bad) nop out lcall aad mov mov (bad) jmp scas pop jg adc xor lods adc adc incl (bad) push ja push inc (bad) jns shrl adc pop outsl arpl add mov cltd jl jmp mov push test inc xchg je sub sbb nop ds (bad) int3 into lock pop popf rcll jge pop pop insl mov fadds mov inc movq leave push addr16 push push dec das cmp push out xor mov mov sbb imul shl mov (bad) pusha xor push out cmova sbb sti inc xchg dec adc cs pop inc pop cltd jno stc sub jnp pop lahf mov jb cmp xor mov pop mov xor jg push sbb mov icebp into and jb inc (bad) daa cmc lcall loope fnop out pop xchg fstpt add mov stos cmp in xchg in call aaa dec dec aaa sub cmp pusha push jb mov and lds adc xchg sar (bad) cltd test aaa (bad) mov xchg adc (bad) adc gs data16 loopne into ror ror fs dec and aad inc jno clc sarl cld inc inc and cmp pop adc inc into sti incl mov add je jae jb gs add mov test test call lea pusha jg inc sub popf cli test gs push arpl sub inc mov jg je pop (bad) cmp xchg mov mov jnp jns sar adcl sbb arpl xchg pop adc and (bad) xchg sbb test dec mov mov hlt push inc loop in push leave mov loop cmc sub mov mov cmp mov adc xlat daa jnp xchg scas xchg fsubr rol mov pop add inc xchg adc inc fisub jp (bad) push imul sub std lret push pop cmp outsb mov popf sub and cli movsb mov (bad) mov repnz dec inc push inc push dec xor cs insb add (bad) or call bt jmp xlat lcall adc (bad) icebp int push mov add mov adc mov sub sub test sbb pop das dec sbbl and psadbw or ret add inc stc dec pop adc or mov aad sbb mov push pop adc movsl cmpsl js cwtl test sbb vsqrtss mov add and fidivrl jmp andl jno fisubl into sarb notb mov std in repnz (bad) lret aad mov sub out call addr16 sahf andb pop inc pop xlat mov jbe dec adc dec or push sub and stos inc add cmpsb in pop mov fisttpll outsl sahf cmpsb xor xchg pop out movsl push test mov fldt es dec xor lahf imull hlt (bad) mov xchg or sub jecxz mov clc push or cmp push iret xchg sti mov lods adc add bound push in mov xor fisubl mov mov scas jo mov in jno cmc sub mov rolb push cld jmp daa cmp mov mov pop mov push rorl cmp mov cli gs call pop lods adc xlat mov dec push push (bad) movsb adc mov mov out enter ds cld mov cmp xchg push cmpsb test cmpl sbb in mov jmp adc in lea in out add sbb push loope mov fist mov mov test insb iret dec xor jns pop bound xor call pushf call rcr pop pop xlat pop fcoms pop popf push mov mov sar mov pusha call call pushl lea jae push add movl mov pushl pushl pusha movb lea jmp test call xchg xor je xor add cld dec imul sarl jae and jb push js jp lret fildll adc lods xchg (bad) jns mov (bad) aaa adc xor (bad) jae jge fstpt addl rorl jb push and aaa inc sbb pop daa jnp movsb stc add and xchg pop xor (bad) iret cmp adc dec xor push inc test (bad) or push push dec inc outsb xchg jge (bad) add inc adc cmp test and sahf out xchg or mov xor lret sarl add add mov xor scas jo dec cmpsb jns jno repz inc out push jp clc jno xor mov out and sbb mov (bad) je rcrl scas arpl incb scas xor jp fdivrs pop mov dec xchg push jns jbe push cltd stos clc movsl movsb aam addr16 pop insb addr16 stos call rol push pop ret cmpsb stos adc fwait (bad) repz ror mov sar xchg sub sbb (bad) aas push repz or push aas into xor xor mov mov ret mov pop repnz push xor test aam jb xchg call insl xor test jbe ljmp xor inc ret arpl adc and xchg divl addr16 mov cmpsb (bad) shl fistpl cs jmp int3 jb stos xchg movsb shrl inc aas mov popa sbb mov dec cld add sti jp adc adcl jmp dec repnz aas inc cmp movl cmp adc sahf aad clc mov and or pusha iret scas repnz jp flds dec popf inc pop inc pop ss mov rcrl xchg outsb mov movsb in pop mov jg das push xchg inc push scas outsl mov cmp scas hlt ljmp lock adc dec popa mov xchg dec and fwait aam aam cmpsb cwtl push cwtl cs shlb (bad) cmp sub jg test mov dec mov jmp jp inc mov inc cltd add lahf dec or outsl pop mov fmuls adc call xchg call xchg dec pop bound (bad) and shrb scas cltd push add cmp pop fist hlt stos hlt inc std jmp fcoms mov or jae sbb add gs mov mov push pop inc (bad) (bad) adc or dec ss sbb jno icebp mov and bt bt cmp pushf pushf push lea jb pushf pushf cmp push pushf pusha lea ja clc add call jb movsb arpl lea out je dec pop ljmp and mov negl out pop mov cmp arpl (bad) pushf xchg mov push les repnz xchg (bad) sbb xor mov imul (bad) xlat sbb (bad) aaa cmp pop in push xchg outsl lahf std xchg pop xor (bad) (bad) fadd (bad) int aad lods pop add mov mov xchg sub dec mov push mov add jmp push add sub adc jno lock xor mov loop rclb push push jns xor sarb ds sti xchg mov (bad) call sub insl in ljmp jne push out mov ret enter xchg scas jne test mov jmp xor gs iret xchg and and outsb fist mov sub jg mov push cwtl out in dec cmc sbb dec shll jno out sbb shrl xor cmpl xor xor lret push cmpsl xlat out fildll xchg xchg scas pop xchg pop rclb imul es jmp adc pop xchg test xor push xchg or xor xchg jo cld stc nop jnp xchg movsb push cmp jno mov stos inc stos clc pop loopne hlt mov mov push or ss bound rol (bad) cli sahf insb (bad) lock hlt lret lock sub jecxz punpckhbw das adc mov lods repnz lcall mov jno out ss lret jbe outsb icebp mov outsb xor cmp shrl dec adc pop jg lock sub cmpl inc fwait ja xchg or ljmp mov pop ds push jb insb iret les mov fsub push repz rcr mov dec ret ss sbb add stos push addr16 lahf hlt fsubp int3 pop jmp out es xor (bad) iret mov fisubr or adc adc fldenv pop movsl push (bad) mov add or mov mov xor mov jnp mov and inc mov inc test mov mov cmp and sbb sub xchg add jno out xchg inc sbb inc and xchg lret call xchg mov rcl ss adc xor sbbb add push mov add movsl cli sbb fistpll fwait inc repz lods test pop das adc sub imul mov stos add jo jecxz les cmpsb lea push mov imul sbb mov fiaddl fsin loopne call sbb movsb sahf ret dec test adc daa cmpsb mov or stos dec jae push cwtl jmp lret pop add mov (bad) (bad) add jecxz scas movl xchg pop xchg shr cmp push or cmp in jle push or mov std add cmp in mov clc cmpsl aam (bad) (bad) pop xor or jg or add xor popa out push test sbb jmp lahf (bad) sti jmp test (bad) sti hlt lret cmp pop aas pop (bad) sti cmp cmp into (bad) testb clc scas mov dec jl int3 lret repz cltd mov jecxz in std dec imul jg scas push sbb dec repnz xlat cli leave adc adc cmp xor inc test jae pushf mov out sbb pop in call loopne,pt hlt or in incb cmp cmc adc stos push rorl (bad) imul sarl lds loope,pt add in cmpsl ja adc fsubrs fldt and lods push lret fsubl push out mov mov mov (bad) bound inc cs xor movsl fwait idivl gs popa cmc dec sahf sub (bad) hlt stos in in xor lods sbbl cmpsb mov or inc sub dec push and pop and jb arpl push (bad) cwtl push lea call mov fsubr jno in adc mov in inc clc cmp cld movb pop sbb scas pusha fbstp dec xlat sbb aam mov fildl xchg dec aam enter inc push jae sbb aad call push fs stc jne popf loope int3 push xchg push in (bad) xor adc push sar add push pop popf push cmp push fild in bnd sub inc cld ss data16 or in xchg or jns shrb iret sub dec pop ret je push xchg and aad loopne push test mov jno jmp cs in movl pushl pushf pushl mov lea jmp mov push lea jae adc data16 testl shr mov shld xchg stc clc mov btc bts pusha mov call lea je stc call lea ja not lea lea movzbw pop pusha jmp bt cmp call repz popf add mov jle fwait lods xor jge sbb pop ret mov jp sbb inc dec jne mov imul stos add cmp jns add out pop mov cmp inc fidiv negl fidivrl sub test dec mov inc cmp sbb lods push insl (bad) lds adc popf rcl pop add lcall addr16 xchg decb movsl js xchg fist mov gs stos push and iret adc cmp xor imul sbbl jmp jmp (bad) mov adc lods add add in sub xchg jmp in push sub jbe test cmpsl cltd ffree mov lds outsb les cmpsb (bad) sar and push mov mov mov imul jnp cs outsb out lret cmpb out fnsave scas gs aam jmp mov lea loope adc (bad) insl (bad) lods stos das or xlat test pop data16 xchg fwait ret xchg pop jbe dec fst ret pushf push mov or daa (bad) push mov jmp jge shrl sbbb xor int3 jae dec xchg mov pop pop mov pop call mov inc insl adc pushf test push int3 and idivl and es ja dec xchg mov dec and fcmovnb (bad) or mov inc sbb cwtl loopne imul jl push mov and add or out sub push lods jb push jle sahf cmc pop (bad) aad stos int3 xchg and mov or mov inc sbb fsubrs lock xor cwtl cmpsb dec mov xor xchg mov or fimull clc xlat cmpxchg mov cmpb inc push insb lods jno call call test mov lahf mov adc sub xchg dec das dec or cmp cmc mov add inc jno or adc jle int int3 or in (bad) icebp adc pop mov cmpsl pop outsl mov arpl sub aas xorb sub adc and and xor xchg dec jbe fnstcw mov xchg dec jae xchg sub sub pop imul ljmp cli xchg aas xchg push out xchg dec rcrb aad mov loope insl jb scas lret xchg ffree inc cli ja cmp inc push mov rolb push incb sbb fneni(8087 jb sbb mov lods xor push add jo (bad) jno out and sbb cltd cmp inc sti jo inc loope cmpsb test sub rcrb inc sbb dec xchg or mov pop out ficom push pop jl fs les cmp inc push sub and add jbe jbe aas mov inc mov lret (bad) mov enter addr16 and jo cli (bad) ss cmpsb jmp xor stos and setbe inc push out les push pop inc (bad) ret fstps loope pop mov ret sbb repz mov jo sbb aas loopne in not mov pop out mov (bad) call adc dec jb frstor jne out pop daa push or outsl push sub or jbe es leave cmc push stos fs in inc jg or cmp jae push inc push mov movsl cmp stos out mov imul mov xchg dec (bad) mov jle dec cmc lods js arpl and mov xor sti xor inc rcrl inc cld xlat movsb cmp sub lcall in and mov int3 je adc cmpsb dec repz cmpsl or mov fcoms pushf or call pop in scas or cmpb je (bad) sbb cmp sub roll nop mov sub out in lea pop mov jns insl roll mov inc push int pushf bound inc adc negl lcall stos add jb dec lods push xchg rcrb pop mov rcr inc pop mov dec fnstcw xchg out js push call push inc loope adc lcall mov jno adc adc cmc ss jo push test outsb imul xchg or stos push cltd add sbb addr16 mov rcrl outsb mov mov in test inc sbb lcall sub pop in (bad) sub push loope pushl in icebp xor add outsl iret sti and push xchg cmpsl inc sti push (bad) leave or cmp ret cld mov cltd xor adc iret out (bad) push (bad) mov or in (bad) xor pushl jb cltd and mov stc movsl mov push mov leave xchg pop cmpsb mov add stos adc adc mov pop in mov ss inc add mov fdivrl and out xor xchg or adc inc mov test in dec push dec push xchg arpl jns shll xchg lds repnz loope in mov dec mov add pop cmpsl stos movl xchg imul leave jne rcl hlt xor jae test push mov loop std in xor jb pop xchg and fadds or in test cmp mov clc shl movb pusha call mov test sbb arpl push fwait mov addr16 mov leave add xor jle mov mov ret add lahf jno mov ljmp popa push ret stc push mov jl cmp add fbstp jecxz mov scas scas push cs pushf into (bad) rol stos adc dec cmp int3 movsb std xor xchg add push jae inc pop mov mov push push dec xor push or mov mov in in xchg les test out mov std jno in (bad) xor aad adc jbe lds test ror sbb fiadd or adc ret cld jle push adc int sbb cmp ret jno cltd fisubl mov clc rorl mov (bad) xchg sbb mov xchg or xor jne fnstenv jne dec mov into cmp mov aas pusha jmp dec inc icebp vcmpsd inc sahf stc lods mov mov pop roll nop fs push sub jb shr mov nop mov test arpl mov das addl sbb mov and sub push cwtl daa jecxz cmp outsl lock das lahf jg push pop loop add sar call dec or push mov pop add xor fsub mov sti test adc push jo adc jnp movsb dec adc jo mov cmp jp cltd lds add adc jne mov ljmp int enter es jno dec pop mov into push xchg sti or push adc fiadd out xor or add pop scas dec pusha jno loope repnz mov lcall clc clc push sub clc cmp bt cmp cmp pushf push lea jae pushf mov pushf mov lea jmp not setl xor lea not mov not pushf lods rcl bt call mov loope shll scas rorb push inc xlat jg (bad) das mov or (bad) ja pop addr16 insb jae scas adc leave mov out call insl loop mov cmp je pop mov push and jne lret push jno outsl in inc xor mov fsubs mov scas (bad) xor adc push cld nop jo fistpll cmp dec popf inc adc mov cld lret adc cmc inc (bad) fistp sub addr16 jno loopne (bad) into out sbb shl jp xor fs popf rorl xchg cmpsb or add push push clc test pop inc dec or sbb push cmp in aad or movsl cmp mov test push xchg sbb out ja incl (bad) adc adc and mov ja out mov dec mov dec cmpsl mov mov repnz daa cmp fadds or sahf pop adc in popf stos xchg imul pop cltd call insl rclb cli add cmp test dec adc stos and dec adc adc and push pusha data16 pop adc sbb scas xchg stos pusha movw lea jae pushf lea jne jmp ja movsl mov out xchg mov jmp fidivl jo add pop out (bad) sti (bad) jg jae add sub dec (bad) jl (bad) aad xor or rolb cmpl movsb push rorl jge dec nop stc data16 cwtl test sbb push popa (bad) xor mov ret test movsl inc jle push pop mov add lahf mov jae mov pushf lods loop mov ss imul and inc pop xchg cwtl dec jno (bad) mov pop ficomp je mov (bad) stc adc ror push push popf hlt fisubrl popa shrl pop imul sbb (bad) mov lret mov mov pop (bad) sbb clc jmp (bad) (bad) jae inc add pop aas push test pop (bad) (bad) jmp sar repz (bad) in pop sub and cs js test (bad) cmp cmp mov sub popa pop pop dec push jb int3 mov incb pop rorb in and sub jno fidivr in repz add lcall fsubp cli icebp cs daa xchg jg shr mov mov cltd gs rolb push ljmp setle repnz add xlat xchg xchg mov and (bad) (bad) leave (bad) jmp xchg xchg cs mov and or cmp movsb mov pop fstpl repz add clc cmc mov call add sub (bad) jmp mov or mov inc push insb jae mov sti inc cmp jnp push popf push mov movsb fimull std push int3 cmp pushw ffree fstl out mov enter sbb cs xchg jmp jae jb mov loopne mov jbe int3 inc stos jg or imul jmp out jae mov mov dec or daa lcall mov cs inc fldenv xor xchg push leave int3 repnz cmp aam pusha push mov rorb jmp inc add sbb xchg (bad) xor xor loopne mov fnsave fdivl pop xor inc pop inc pop cltd jl iret xor mov sub mov movsl flds ret mov sbb popf loop sub cmp int3 loope sub cltd lds cmp ror pop xchg mov push push cwtl (bad) (bad) mov adc sti xchg sub jbe pop add loop sub xchg in pop add and lea push outsb mov mov pop fisttpll test lea push dec mov pop push adc xor lcall dec (bad) aas xchg cmp sbb jle adc int3 in stos xchg enter lds jge cmp mov push test jg add push addr16 imul sub pop sub pop imul adc cmp idivl stc inc cmpsl sbb adc fist xchg push lret es xor pop cmp arpl ret pop (bad) pusha in xchg pop negl repnz pop xor iret sub in cmp cmp mov fsubs sahf inc jp aaa cmpsb clc (bad) fcom xor (bad) sub dec cmc dec arpl sub mov push mov xor cmp dec hlt add in leave fimull cmp dec cltd dec or dec in lods xchg push pop add out pop dec xchg xchg iret repnz add ret out sar and adc arpl repz lret jle lret rclb ss nop mov mov jns mov mov into (bad) mov mov cmp jg scas (bad) jno fistl cmp loope xor insl xor inc stc mov xchg xor out adc sbb mov jo push daa (bad) ja push repnz mov test pop test int3 data16 jo ljmp fildll in rol and cmp xor mov or add dec mov test outsb daa cwtl ljmp es jp and push or sub push std stc das add cmpsb mov aad test adc pop mov adc mov mov mov push leave pop xchg aas adc int cmpl cmp adc mov sbb mov or mov fimull fs je mov call movl pusha movw lea jmp mov lea call pusha call outsb xchg mov jo nop mov xchg fidiv test sbb jp jl adc imul ljmp cmc pop and cmp js popf jge and jp arpl dec xor out or lock add adc jp fimul lock insl adc sbb lock fwait mov xor add adc add mov jle ljmp pop into aaa xchg aaa out jbe jp xchg (bad) fnsave or mov insb lods jno fldenv daa cmp cld decl lods push pop pop xor mov mov jae mov mov or ss adc in pushf ret inc cwtl test cmpsb ljmp push fidivl jno lret cld or cmpsl pop les movsb jno push inc cmp rcrl sub sbb mov jb pop cmp mov icebp sub stos je test cwtl data16 fild and mov jbe sub inc imull (bad) fwait add sub inc mov cltd (bad) sbb adc fsubrs (bad) mov mov mov sbb fs jno fsubrs addr16 inc and or add call add inc gs outsl fs gs imul add pusha lea jne bt xadd sub pusha mov and push bts xor sub bswap rol dec lea pushf bt test sub clc pushl popl call pushl lea call jmp stos push lea jmp icebp pop pop jo xchg inc fwait mov sub fsubl mov push icebp out inc cli pop and push (bad) jbe bound lret fdivl mov push pusha in (bad) or popa sti sbb and xor or loope adc push pop lock mov lock outsb xchg stc data16 push (bad) popa fiaddl mov mov adcb jmp aas jnp outsb stos out cmp cmp cmp js test sbb and lods adc cmp aad mov in jb into sbb add push and inc pop adc adc sbb push das psubq mov mov cmpsl cwtl cli movsl leave mov jno (bad) dec inc jns lea ja push pusha imul pushf add pushf movb push mov lea jmp mov pop xchg jae leave fs mov cmpsl pop mull (bad) rolb adc add into fbld std jbe cmp push adc repz pop mov js mov imulb std loope shrl push sub mov clc or and scas add mov fbstp loopne in adc pop sbb lea rcrl or adc test mov push scas jo les inc stos ja pop scas loopne push into hlt stos sbb imul xchg sub xchg jo mov pop (bad) sub jnp mov adc adc ljmp addr16 out lock cld xor xchg sub je insb mov faddp add push push dec mov aad fidivrl pop das dec pusha mov lcall mov mov fstpl xor fs jnp out (bad) sub mov jge add insb pop or or push jg jbe mov jmp sub mov mov mov pusha mov mov hlt stos mov ret sti loop test lock rep aam jno aad ja and ljmp push inc insb adc push cmp ja jae sahf sti sub mov (bad) daa loopne and mov enter les arpl and mov int3 roll lret in aaa into cmp mov sbb outsl or insb pop stos and in aaa out in xchg mov jp xchg (bad) xchg adc dec push dec sarb sub sbb or push iret data16 icebp pop and and jg iret ljmp jno aam mov mov sbb fucom popa jecxz rorl aas pusha pop (bad) out lock lds and sub adc jns incb adc and call sti fs lret and xorb dec loopne push ljmp dec dec push dec push rcrb mov shrb shrb and adc aam xchg pop movsl fsubl push (bad) adc mov (bad) push cs xchg cmpsb cmp data16 or je xor mov sbb push add mov lock push dec pop test mov mov cmp stc jno rcrl je jg sub (bad) mov xor pop rorb cmpsl lods xchg or sub and fs pop jo cmp xchg and mov sub adc hlt push call shll fsubl push adc sbb icebp or add dec jo outsl add and mov jecxz push aaa mov adc es aas pop shrl push imul (bad) popa lds stos mov xor sbb mov pop call nop dec xchg popf (bad) cld ret xor decb aas aas testl cmp lcall mov std cmc dec pop test (bad) ret fstpt iret adc dec inc cmp sbbb data16 out sub (bad) fsubs push inc sbb mov xchg movsl xor xchg or or cmpsb sbb mov into or adc cmp pop icebp lcall imul xchg (bad) rcr mov inc adc addr16 adc push gs test xchg mov fldenv xchg or lock clc pop pop cld subl and fs rcrb or push lea jne shl mov cmp or pushf pushf call (bad) (bad) btr mov pop jnp cmp sbb mov and mov sbbl clc out adc xlat pop inc cmp addr16 int3 shl cmc or mov lahf data16 jmp (bad) movsl arpl movsl imull test adc test sbb int3 adc pop pop inc rorl jns xchg call in cli lds mov add rcll cmp inc iret xor xor movsb jnp mov repz out xchg mov adc cmp or ja pushf xchg mov outsb lahf pop nop (bad) jecxz sbb add mov cwtl adc sub pop sbbl cmpsl (bad) fcompl scas sbb or pushf movb pushl pushf lea je lea movzbw lea pushf movzwl call stos adc shr out xor int3 push mov xchg (bad) leave imulb mov clc push jae mov iret out add inc sbb test arpl (bad) mov xorl lds sub add cmp inc cmpsl js xor jp pop imul cmp push bound inc or sahf ds xchg xchg mov ja mov lods add sbb inc in rcrl adc and stos xor cltd std aam into xor dec (bad) int3 rcr daa push or lret (bad) call dec xor or jno (bad) jno mov lea mov movzbw call pop lea pusha mov jmp fidivl std cwtl (bad) sub jge in push xchg add sbbb adc rorb push shrb stc or push and jle ja jo (bad) loope jecxz sbb xor mov lods pop test addr16 js jbe lret xchg sub sbb (bad) iret cmc adc push push (bad) call jno rolb dec xchg hlt (bad) dec sbbb (bad) mov clc cmpsl (bad) divl inc mov mov jns insb lods push push out icebp mov je mov (bad) adc xor sub das jmp mov jp cs push movsb mov int3 mov pop fucomp mulb stc push pop pop and pop insl iret mov dec imull test out repnz int3 and (bad) mov push xor pop and xor sbb and push dec pop mov lock cmp mov test xchg out pop call inc adc lods xor xchg imul or int mov dec pop lods mov ss fldt or fnstenv int or dec adc shrb (bad) call cltd add mov cmp sbb scas aas pop mov inc xchg cmp out dec mov mov and inc insb sbb jb add bswap loopne cmp (bad) fildll jo jbe add les push pushf imul rcll xor sbb out and lods ds xchg jl (bad) enter xchg xchg or jle push cs fiadd fsubl (bad) sti aaa call push out mov cmpsb stc lods xor movsb cmp or popf mov sub add fwait in fsubs jb cmp sbb adc xchg ret lret dec cli iret outsl pop rcr jmp and mov js xchg (bad) (bad) (bad) popa xor jecxz jge jg mov sbb lea js dec frstor push outsb push dec in mov xor jg add (bad) jle and nop in lcall xchg lahf rclb data16 and xor lods or clc cmp mov xlat movl aaa sbb dec xor ds addr16 sbb push aas ret pop imul cmpsb jmp lods stc or sar add stc mov pusha cmp add pusha call call stc or lret adc xor xchg or pop out das testl in arpl jb push out sbb jmp cld cmp gs cmpl xor mov pusha jno push mov add and in faddl xor cld or or rcrb jnp dec lea ss xchg test pop jmp sbb jecxz nop andb add add out mov jbe mov cmp dec jmp (bad) mov inc mov or xchg jmp mov and dec adc jno int3 outsb and out inc fstpl xchg mov arpl mov nop jg inc sbb adc mov xchg std loope and out das dec int3 mov shrb aas push cmp inc icebp cs scas lret fisttp xchg or je imul push bound jno jl jne or sbb xchg lock mov push enter ljmp cwtl (bad) pop loopne jmp pop lret fidiv mov add rorb pusha fwait arpl mov mov cmp sti mov jg outsl out arpl ja lods xchg jo lcall mov jle rcl and push pop push and cmp and dec pop lods xor mov mov clc or mov ljmp sub xchg stos or sbb std and jg arpl (bad) mov xor mov test iret push sbb push ljmp xorl push sbb xchg das lock and mov adcl mov aaa xor mov cltd inc push push xor popa repnz push dec outsl outsl pop mov add xchg test insl adc cmp push hlt push jecxz hlt (bad) (bad) push icebp out (bad) fcomps in mov cmp add xor or cwtl insl push scas add ss fsubrs inc in push bound or sahf sub jmp add push cltd xchg loope jbe inc adc std aad sbb rcl rcll xchg stos dec lahf outsb xor pop outsl (bad) fdivl std cmpl xor sub in fistpll stos xor xor data16 cmp das cmova push or cmp pop lret popf loope fs jb pusha mov push push pushl ret rcrl repnz adc jbe mov fidivrl mov ret xor cmc cmp add adc xor int mov stos mov in xchg xor mov xchg jg (bad) jno movsl cmpsl cs jp loope pusha lock pop adc push incb jno (bad) cmp mov mov leave xor in xchg xorl mov fwait push mov lcall mov jno leave fidiv and xor add add cmp test add pushf lea jg pusha pushl dec pusha pushf lea jne and shr sar mov bt cmp pusha lea ja movzbl jne movsbw pop push movb movsbw pushf mov pushl pop mov jmp fadds mov xor repz inc aaa sub mov mov gs or jo inc loop faddl adc push and inc xlat or mov cmpsl push call std add xor adc ffreep push out mov (bad) mov lods push push mov push (bad) repnz (bad) dec scas inc push lahf and movsb pop jo loop xor pushf mov push sbb xchg cmpsl incb cmp jp jg push out (bad) xor sbb imul jb jno enter mov mov mov push or and pop (bad) lods jb xchg mov in fidivl jo outsb lret or pop in rcrl pop or xor je lods mov rcrl outsl dec das (bad) jb jecxz clc push jne cmp inc pop xchg mov shl (bad) shll call mov adc jbe xchg popa sub mov int3 out xchg dec pop pusha sahf push mov xchg inc push xchg xchg add fstl out das out push sbb mov jno pop in jl mov out fsubr aad loop add inc jno (bad) iret sarb mov pushf push lea jmp dec inc push dec inc dec xor cs insb add xchg lods add clc ja (bad) in test leave idivb scas xchg cmpsl mov xor push or fs xchg test shlb in mov xor cli dec hlt dec inc cmp dec jg adc fisubr add xor pop adcl pusha mov or dec jo outsl xchg dec adc hlt icebp enter sub inc insl nop inc add ret std push sub pushf mov aaa pop push adcl daa es imul mov fucomip das jo mov leave mov int xchg sub push and and sbb stc dec jno mov mov bt pusha jmp mov sub lea mov stc ljmp lods sbb pop into jns jo bnd ljmp xchg leave and or add divb dec popa test xor (bad) jo arpl xor dec into jle pop imul nop push popa mov dec ds mov inc (bad) (bad) cmp mov pop aas pop mov and loop xchg rorl enter push lock jmp shrb (bad) pop mov adc inc mov pop (bad) fdivl add jp pushf movl pusha movb movl movw pusha lea jmp mov mov cmpl dec jno scas lcall push ljmp and dec sub outsb pop mov inc inc cmc sbb neg xlat push es jl push sub push fiadd repnz hlt stos mov add push push enter pop xchg lods mov es push jb loope pop (bad) pop adc or ret push les xchg cmpsb out loop xchg mov pop sub insb lods out adc xor pop cmp mov fistpl xchg inc cltd xchg lods lea sub jg jo insl pop data16 cmp sub gs push lcall push iret dec rorl cwtl add jns popa mov fchs (bad) call jno les push and je push call push movl push lea jmp jno jnp sub jns into cmpsb mov popa cmp popf and test push cmpsl fiaddl push fstps mov mov pop inc (bad) data16 sub js push stos xchg push cmp pop inc xchg and stos sbb aaa dec mov andl jmp sbb adc nop sbb test mov jne mov fldt movsb cltd repz pop mov xor fwait pop cmpsl push loope dec xor push mov fs movl (bad) cmp and mov bound jle mov aaa imul daa jnp aas lahf push jecxz cwtl mov add mov mov mov cld and add ret xchg test xchg and hlt dec insb repz loopne jmp or cwtl push lahf pop loope gs xchg xchg push lea (bad) into lahf rcr cmp or (bad) aas lea ja stos fisttpl adc outsl or test xor jmp icebp fistp xor and fwait and adc pop imul in push insb dec mov rclb xchg mov lahf test int cmc jmp and stos adc lock nop mov fwait mov ret dec mov ficomp lds sbb or and push pop cmpsl pop daa test fs popa out (bad) ljmp xchg call out test lock std and or push data16 mov sarb dec jno in aam adc js and push jb mov mov mov cmp mov push jno ret pop mov lcall pop imul notl addr16 jae lret xor xchg or add add aaa daa pop inc pop jmp clc cmpsb cmp dec out dec mov xlat dec mov loopne and pop fwait ret mov or adc pop xlat test inc fcomps sahf pop add loop imul push (bad) out push cmpsb sbb xor push push popa arpl jp pop pusha cmp imulb push sbb rcll mov and movsb out std jne or add push add dec jle inc testl mov stc lds daa push xor xor mov loopne ds scas cmpsb les or sbb push or push out pop dec cltd test jno sarl incb sbb clc or repz iret push sub push pop rorb dec push dec das xor mov shrl sarl orl mov dec test pop cmp icebp gs pushf ret aam cmp imul push imul mov loopne sbb (bad) mov popf jne sub fiadd out xor mov and add mov ss push lods lea jge pushf mov bt rol call clc pusha push xor lea push inc lea pushf lea js call pushf push adc call jmp xchg ja inc lahf pop out adc sub xchg mov lock xchg sub pusha lahf mov ret int3 loopne loope inc fucomi gs push pop fprem1 dec push xlat xchg pop sbb dec sub fldl inc fadds cmp sub fisttpl sbb cmp repz (bad) adc and push mov xchg cmc sbb push add xor mov cmp outsl dec jae jg rorb cmp add mov push or cmp arpl push sub jno rol mov call setne not inc lea add cmp cmp xchg or mov test bt dec mov jmp jne stos inc mov and int3 sub xor cld jg es add mov cltd movb inc cmp lret shrb jns lcall stc push les pop or in cs mov jge sbb sub xchg jns jbe sbb les mov (bad) jno xor shrb (bad) enter inc stos je jns xchg addl jmp call jmp ds call loop call cmp xchg xchg call xor jg stos rep fwait inc (bad) jl mov ds popf repnz mov shll pop and aam cld dec divb or dec in popa jns mov sbb inc mov adc push mov (bad) mov sbb xor inc shll fucom and xchg sbb out xor cmp mov mov push setge jp stos cmp (bad) mov and hlt jno mov out lock aam (bad) aad xor inc movl (bad) call mov test xchg stos je je (bad) mov sbb (bad) pop lret loope sub call fidivr cmc jle adc jno cmp es add and mov or aad fistpl inc jg push xchg or xor addr16 mov insb pop cmc rcrb out pop fwait loop jb outsl xchg xlat jbe and sub push or dec pusha aad jno jnp inc mov add xor dec mov mov test push mov sahf inc fisttpl rcrb (bad) pop mov lds add aaa addr16 dec push sub mov cmp clc xchg jo jl mov stc cmp nop movsb or sbb in cli fdivrl dec mov loope out push (bad) mov xor popf push adc adc sub adc add push (bad) jno add (bad) mov jno pop rclb push gs aam lcall das scas cmp rcll sbb dec push sub mov mov jae mov jno mov btc shr cmc xor shld mov mov clc stc or jmp pushl push mov pushf pushl pushl ret jmp jle movsb dec mov sbb mov rolb mov testl xchg or mov fiadd dec push mov in add out lcall mov pop fdivl sbb inc std push jmp iret xchg push hlt fild hlt lret fsub cmp idivl enter mov lret mov ficompl mov lret sbb inc jmp and push sub dec adc dec outsl je out sub cli movsb fistpll pusha lods push in push mov adc sbb cs fbld test jmp call inc mov pusha inc movl movl push pushf lea jmp mov mov movb pushf push mov lea jmp jmp not and not stc dec dec sub jmp lea lea jo rol sub call add lea jle mov push lea jmp movzbl btr not not call bt not mov stc xor stc test clc cwtl pushl jmp neg inc movb not push dec (bad) repnz ret bswap call pushf pushl jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call jmp pushf mov push lea jmp mov shr clc shl mov call shrd dec mov cmp clc cmc jmp pusha mov pushl movb pusha lea jmp sbb lea cmp cmp jmp bswap mov pushf mov mov pushl call dec mov jmp mov cmc shrd call and movw pushf mov jmp mov jmp push mov call rcl rcl mov rcl pop das not jmp rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp jmp pusha mul call mov dec call cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp bt push mov stc cmc cmc mov sub pushf pushl pushl call cmp xor push jmp mov mov pushf mov pushf pushf lea jmp push jmp mov mov pusha push push lea jmp ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp call mov pushl jmp setbe shl mov cmp jmp pushf push add mov call pushf pushf mov mov jmp call lea jne movsbw clc mov call mov pushf popl mov pushl popl pushl pushf mov lea jmp pushl popl mov mov lea jmp mov push pushl lea jmp push bt add pushf jmp pop inc or and add adc btc pushf mov cmc cmp sub call xor pusha pushl push xchg push movl mov call push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call test add mov movb pushl lea jmp mov pushf lea jmp mov pushl lea jmp call pushf popl call mov jmp movw jmp movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp lahf shrd shld mov cmp sub push pusha pusha call bswap aas bsr mov rcr not pusha mov pushf stc mov mov add jmp pushf mov pusha push push pushf lea jmp mov jmp mov pusha movb lea jmp pushl pushl jmp lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp mov pusha lea jmp movb not stc cmp add stc test movb call movb mov pushf pushf popl movb call stc cmp jmp jmp pushf sub push push call lea jbe pushf call mov call mov pusha push pushf mov lea jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp jmp mov pushl mov push pushl pushf popl push call pushf push pusha mov inc jmp clc mov pusha call lea jne test sub pusha push call add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call call lea push pushf lea jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call push jmp stc cmp mov add clc call call mov pushl popl mov pushf pushl lea jmp push lea pusha jmp pusha mov push pusha lea jmp movb mov movw movl pushl pushl lea jmp imul jmp pusha mov jmp jmp shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp mov pushl push pusha mov pushl pushf movb lea jmp call mov pushf jmp mov movsbw mov mov movw call call push pushl popl mov pushl lea jmp pusha mov test pushf call movb pushl mov movl mov mov push pushl pusha pushf pushl ret call bt clc or call clc pusha jmp pushf pushf pushl popl pushl lea jmp pushf jmp sub pusha lea jne jmp mov mov cwtl setbe mov pushf push divl call jmp pushf lea jmp mov inc pushf pushf decl push pusha call pusha push push movb sub pushf call call pushl popl movw pushf lea jmp rol neg mov shl inc stc pushf add call pusha pusha pushl popl mov lea jmp jmp mov mov movw mov lea jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp sub btr jl mov push adc mov stc add movw jmp mov call movsbw pushf mov jmp push push mov pushf pushf pusha lea jmp lea aad mov jmp shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret (bad) icebp add cltd rorb inc adc add pushf stc clc cmc sub call bswap bswap neg call pushf call shl setb jmp add add cbtw call bts mov push test pusha call add jmp jmp push bswap clc add cmp add cmc bt sub stc ror jmp mov movw mov pushf lea jmp rol shr test dec mov bt add push lea jmp pushl popl mov mov pusha pushl lea jmp push pushf jmp push mov mov lea jmp call push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp push pushf movw idivl call pushf popl pushf pushf mov pushl popl mov lea jmp cmc neg mov stc clc add pusha add jmp mov pushf jmp movzbw add sbb mov pusha jmp mov pushf mov pushf push pushl ret pusha pusha not mov movb mov pushf lea jmp pushf lea jne pusha call push test sub stc mul call clc lea jno and stc jne cmp jmp jmp call cmp sub pushf pushf pushf pushf mov mov lea jmp jmp adc mov bt push bt sub clc pushf add movl call pushf mov mov pushl push lea jmp sub call lea jnp pushf push pushl push pushl pushl popl pushl lea jmp jmp jmp pushf mov pushf push lea jmp pusha mov mov jmp pushf mov pushf pusha lea jmp pushf mov pusha movl pushf pushl ret pushl popl mov movw lea jmp test shl cmp cmp bt shr bt clc bt cmc or cmc jmp pushf push lea je jmp mov pusha jmp push pushl mov lea lea movzbw bswap push repz popl bts push rcr call cld push push jmp call call inc sub mov test pushf push test sub cmc clc push shl pusha push call test not jmp inc stc clc call call pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp rcr setns sar mov add ror mov add jmp lea pushl pushf mov mov std bswap bswap mov movb jmp dec push movb lea js inc push pushf call rol mov seto stc jmp stc add bt shrd push call mov push pushf popl pushf mov jmp jmp pushl test call not jmp bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call pushl popl pushl lea jmp lea jg push pushl popl pusha lea jmp jmp pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call add pusha call push ror lea pop dec pusha rol xor or bswap lea shr call mov push call mov dec push movb push push lea jmp jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp call call jmp pusha lea cpuid pushf sub pusha cmpl movb pushf call call mov push mov jmp pushf pushl inc stc xor jmp mov pushf pushl jmp add jmp pushl popl push movb movw push lea jmp jmp call call pushf not bt add test clc push test sub jmp pushl popl pushf pushl lea jmp adc mov call pushf bt add pushf call push push mov push movb pushf lea jmp mov pushf popl call div mov mov pushf movl mov pusha pushf popl jmp mov call pusha lea jne pusha sar xorb lea not movzbw call setns movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret mov pushl pusha jmp jmp bt lea mov pushf mov pusha stc clc add pushf jmp cmp aad mov adc adc daa mov jmp mov pushl jmp pushf mov mov jmp push call pusha mov movw jmp sar pushf or mov add bsr add push sete inc ror xor mov jmp mov pushl popl movb pushf pushf movb lea jmp movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp imul pushf pusha mov mov jmp inc neg mov and or stc mov push bt add call bts call cmp xor test lea pusha bt not pusha xor mov bt push sub call add stos push add and add rorl inc hlt or add add hlt or jmp add add fimul add jmp push add xchg push add mov add pop push add pop add add les add lret loop add add pop push add clc or lret mov sbb add cld or pop add add sbb add daa pop add mov add add inc push add pop push add cwtl add add push push add and add jmp or roll add lret mov add add pop push add or add pop add add pop add add and add rorl and pop add stos push add and add loope add sub add jmp add add rorl add add add clc add add daa pop add jle add xor add adc add fimul add roll add lods add add insb add add or pop add les add push add add mov add xchg push add insb add add jmp or jmp or push push add clc or adc add and add cld or xchg push add mov add add add add add into pop add bound add les add clc add add jge add sbb add bound add or add mov pop add adc add adc add jecxz add or push add out add and add roll add mov add add les add sbb add pop add add adc add adc add cld or sbb add roll add and add jecxz add xor add sbb add add or stos push add roll add adc add mov add pop push add insb add add pop push add mov push add lret add add add push push add xchg push add cmp add xchg push add roll add hlt or roll add or add aaa or lods add add cwtl add add and add push add add fimul add jmp add add sbb add out add fiaddl add adc add loope add lods add add inc push add push push add push add add clc or jmp or pop push add clc or fiaddl add pop add add (bad) or out add inc push add sbb add daa pop add into pop add jle add xor add push push add sbb add jle add sbb add jge add jge add or add roll add and add jle add xor add les add daa pop add daa pop add insb add add fiaddl add stos push add jmp add add cld or sbb add hlt or cld or mov pop add insb add add xchg push add clc or push push add jmp or rorl mov push pushf pushf lea jmp mov mov pushf pushf lea jmp jmp (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp movb movb pushf popl movb call not cmp add clc lea jno add jmp pushl pusha pushl pushf popl jmp pushf jmp lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp inc btr cmp mov jmp dec rol mov call jmp rdtsc mov sar and or mov cmc jle bt pushf sub jmp call stc rcr das movzww stc clc bt jmp mov push pusha mov lea jmp bt sub pusha shl pushf call bswap mov pushf pop mov pushf mov jmp add pushf pushf popl pushf pushl popl pushf pushl lea jmp jmp movsbw push call pushl call daa daa mov call jmp pushl popl movl movw lea jmp pushl mov movb lea jmp mov pusha push mov pushf lea jmp jmp pushf mov sar mov pushf neg sub js cld pop jmp cmp pushf call mov pusha mov pushf pushf pushl lea jmp pushf pushf mov push push mov push pushf push pushf popl pushf jmp rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp jmp clc sub mov pushf jmp cmc sub bt push shr movw mov push mov jmp pusha mov movb lea jmp push mov movb lea jmp mov pushf movb pushf mov lea jmp cmp add cmc call xor rol sbb clc mov mov setns add pushf ror cmc ror shr call movzbl bt test add pushf jmp pushf pushf mov pushl push pushf lea jmp pusha mov mov movl lea jmp mov pusha pusha lea jmp pushf pushf popl call mov call mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call pusha movb pushf popl call pushl popl push mov push lea jmp pusha call (bad) lock mov (bad) (bad) clc and jmp cmc pusha ror cmp cmc xor call cmc mov btr movsbw mov stc pusha push add call dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp pushl mov push mov jmp das cwtl sub bsr and clc ror lea jmp pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp push mov movb pushf lea jmp pop pushf pushl ret dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp mov mov push pushf movb pushf lea jmp jmp pushl pushf pushl popl push push push lea jmp mov push pushf add call pushl popf movb movb mov lea jmp xchg pushf clc bt xor jmp shld notl shl mov bt cmp cmc sub push cmp mov pushf and call jmp xor clc add clc cmp mov sub push mov mov lea jmp pushf popl jmp sub jmp pusha jmp stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call movb push jmp clc rdtsc stc sub push mov jmp pusha pushf cmp pusha pushf jmp movsbw mov jmp movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call bts sub call mov cmp cmc sub pushf pushf mov pushf lea jmp jmp push btr push btr mov movzbw push jmp push mov mov push pushl pusha pushf pushl ret daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp cmp add movb pushf jmp jmp call mov movb pusha lea jmp pushf pusha call xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call stc add clc cmp stc add jmp pushf lea jnp push pusha pushl push lea jmp aas xor mov test add call bswap cmc bt popf pushf pop jmp pushf pushf jmp stc clc clc sub stc bt xchg pusha mov cmc jmp mov jmp pusha mov pushf push pushf lea jmp pushf popl jmp pusha mov mov pushf lea jmp movw stc lea pushf jmp add movsbw push inc dec jmp bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp pushl popl mov lea jmp bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp call cwtl cmc sub jmp stc xor call mov movw mov call push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp jmp shld push mov mov jmp pusha pushf popl call pushl popl pushf pushf pushf lea jmp rcl mov clc not btr dec add bsf btc sub or mov call jmp pushf mov push pusha movb pushf lea jmp call call mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp jmp mov call shl jmp sub add mov (bad) repnz mov jmp movb stc sub call bts mov pushf call shr jmp pusha jmp call pushf mov mov lea jmp pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp add mov clc call jmp push pushf mov pushf pushl call mov pushf clc call dec shl mov push pusha mov add pushf jmp mov pusha pushf push pushf lea jmp add add add lock add adc add js add mov add and add mov add mov add roll add adc add cmp add jnp add in add and add dec or orb add or sub add imul add or xor add pop or cwtl or lret or or add dec or js add stos or or or add add cwtl or add or add or add or add imul add or add pop push add mov add mov push add cmp add xchg add rorl add add add and add inc adc (bad) adc fsts add sbb add dec adc adcb add adc and add pop adc mov add cli adc inc adc jp add iret adc cmp add adc add adc add rcll add push push add jmp .byte sbb 